void sub_10028D754()
{
  JUMPOUT(0x10028D6ECLL);
}

uint64_t sub_10028D760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((7305
                                          * ((*(unsigned int *)(v0 + 10392) ^ 0xBBA7E36DEE7F77D3)
                                           + 0x44581C92B0F92F51
                                           + ((2 * *(unsigned int *)(v0 + 10392)) & 0x1DCFEEFA6) != v1)) ^ 0xCAA))
                            - 12))();
}

uint64_t sub_10028DA10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v10 = (*(_DWORD *)(v5 + 10844) ^ 0xBEF9CB97) + 1090925673 + ((2 * *(_DWORD *)(v5 + 10844)) & 0x7DF3972E);
  *(_BYTE *)(v7 - 0x375C689E49717F90 + v10) = *(_BYTE *)(a1 + (v10 & 0xF)) ^ *(_BYTE *)(v1 + (v10 & 0xF)) ^ *(_BYTE *)(v2 + (v10 & 0xF)) ^ (-43 * (v10 & 0xF));
  v11 = (((v3 - 2183) | 0x9C0u) ^ 0x9F78AAC5uLL) < v4;
  if (v4 < v6 != (v8 == 0))
    v11 = v4 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((13 * !v11) ^ v3)) - 12))();
}

void sub_10028DAE0()
{
  JUMPOUT(0x10028DA6CLL);
}

uint64_t sub_10028DAE8@<X0>(int a1@<W2>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v9 = a1 - 1;
  *(_BYTE *)(v6 + v9) = *(_BYTE *)(v3 + (v9 & 0xF)) ^ *(_BYTE *)(v5 + v9) ^ *(_BYTE *)(a3 + (v9 & 0xF)) ^ (-43 * (v9 & 0xF)) ^ *(_BYTE *)(v4 + (v9 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((15892 * (v9 == 0)) ^ (v7 + a2 + 2664))) - 4))();
}

uint64_t sub_10028DB48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(uint64_t);
  char v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_DWORD *)(v0 + 10196);
  v7 = (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8072))(v6, 3035660878);
  **(_QWORD **)(v0 + 5224) = v7;
  v8 = 359378713 * ((~((v5 - 192) | 0x65FFDF6) + ((v5 - 192) & 0x65FFDF6)) ^ 0x8BC77ACD);
  v9 = v5 - 192;
  *(_DWORD *)(v9 + 20) = v8 + (v6 ^ 0xF3E662DA) + 2147475264 + ((v6 << (v2 ^ 0xF7 ^ (v4 - 1))) & 0xE7CCC5B4);
  *(_DWORD *)(v9 + 24) = (v2 + 900) ^ v8;
  *(_QWORD *)v9 = v7;
  *(_QWORD *)(v9 + 8) = v1;
  v10 = v3(v5 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                                      + 8
                                                      * (((8 * (*(_DWORD *)(v5 - 176) == 246777912)) | (16 * (*(_DWORD *)(v5 - 176) == 246777912))) ^ v2))
                                          - 12))(v10);
}

void sub_10028DC40()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  **(_DWORD **)(v1 + 4448) = v2;
  *(_DWORD *)(v1 + 11212) = 246777912;
  *(_QWORD *)(v1 + 10632) = *(_QWORD *)(v4 + 8 * (v0 + v3 - 38));
  JUMPOUT(0x10028DC88);
}

uint64_t sub_10028DCA0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((((v1 ^ (v1 - 5)) + 1504) ^ 0xFFFFFA71) + 43 * (v1 ^ (v1 - 5))) * v0) ^ (v1 + 2059606166)))
                            - 12))();
}

void sub_10028DCE4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 10848) = ((v0 + 2103577223) & 0x829DFFFB) + *(_QWORD *)(v2 + 8 * v0) - 2918;
  JUMPOUT(0x100285680);
}

uint64_t sub_10028DD38@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(_QWORD *)(v1 + 11672) == 0) ^ (59 * (a1 ^ 0xE1) + 1)) & 1)
                                     * (((a1 ^ 0x5E1) - 2059595757) ^ 0x853D3D27)) ^ a1)))();
}

void sub_10028DD90()
{
  JUMPOUT(0x10028DC80);
}

uint64_t sub_10028DDA4(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * ((122 * (a1 == 1824781336)) ^ 0x1B33)) - 12))();
}

void sub_10028DDE8()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  v0[1192] = v0[1187];
  v0[1217] = (char *)*(&off_1004ECA20 + (v1 ^ (v1 + 128))) - 12;
  v0[1199] = *(_QWORD *)(v2 + 8 * (v1 + 2059595934)) - 8;
  JUMPOUT(0x10028DE5CLL);
}

uint64_t sub_10028DFC4(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744)
                              + 8 * ((122 * (((a2 == 445213482) ^ (a4 - 88)) & 1)) ^ a4)))();
}

uint64_t sub_10028E010(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  _BOOL4 v6;

  v4 = *(_DWORD *)(v3 + 9624);
  v5 = *(_DWORD *)(v3 + 9728) + (((a3 - 8658) | 0x1011) ^ 0x1E4F5410);
  v6 = v4 + 1620281957 < v5;
  if (v4 > 0x9F6C759A != v5 < 0x60938A65)
    v6 = v5 < 0x60938A65;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((v6 * ((148 * (a3 ^ 0x237B)) ^ 0x77E)) ^ a3))
                            - 12))();
}

uint64_t sub_10028E0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v6 = *(_DWORD *)(v5 + 9720) + 1537741017;
  v7 = v6 < v4 + 1537736483;
  v8 = v6 > v3 + 425970712;
  if ((v3 + 425970712) < 0x5BA810D8 != v7)
    v8 = v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * ((v8 * ((v4 + 5238) ^ 0x2658)) ^ v4)) - 12))(1824753536);
}

uint64_t sub_10028E11C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v2 = *(_QWORD *)(v1 + 9640) + *(unsigned int *)(v1 + 9720);
  v3 = -333269657 * ((-333269657 * (_DWORD)v2) ^ ((-333269657 * v2) >> 16));
  v4 = ((-51 * BYTE3(v3)) ^ v3 ^ *(_BYTE *)(v2 - 0x1132FE166654577ELL) ^ *((_BYTE *)*(&off_1004ECA20 + (v0 ^ 0x2565))
                                                                                          + (v3 >> 24)) ^ *((_BYTE *)*(&off_1004ECA20 + (v0 ^ 0x2225)) + (v3 >> 24) - 12) ^ *((_BYTE *)*(&off_1004ECA20 + v0 - 9701) + (v3 >> 24) + 1));
  *(_DWORD *)(v1 + 9632) = v4 - 1171233105 - ((v4 << ((v0 - 20) ^ 0x16)) & ((v0 - 3565) ^ 0x1960));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                                      + 8
                                                      * ((111
                                                        * ((((_BYTE)v4
                                                           - 81
                                                           - (((_BYTE)v4 << ((v0 - 20) ^ 0x16)) & ((v0 + 19) ^ 0x60))) & 0x1F) != 16)) ^ v0))
                                          - 4))(1824753536);
}

uint64_t sub_10028E22C(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v2 + 9720) - 103140793;
  v4 = *(_DWORD *)(v2 + 9728) - 1214911099;
  v5 = v3 < 0xF9DA3245;
  v6 = v3 > v4;
  if (v5 != v4 < 0xF9DA3245)
    v6 = v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                      + 8 * (((((a2 - 5694) | 0x39) + 13772) * !v6) ^ a2))
                                          - 8))(1824753536);
}

uint64_t sub_10028E2B0@<X0>(int a1@<W2>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_DWORD *)(v7 + 9576) = v3;
  *(_DWORD *)(v7 + 9584) = v2;
  v8 = *(_QWORD *)(v7 + 9640) + a2;
  v9 = -333269657
     * (((((a1 - 319518010) & 0x130B778F) - 333270824) * (_DWORD)v8) ^ (((((a1 - 319518010) & 0x130B778F) - 333270824)
                                                                       * v8) >> 16));
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * (int)((177
                                               * (((*(unsigned __int8 *)(v4 + (v9 >> 24)) ^ *(unsigned __int8 *)(v8 - 0x1132FE166654577ELL) ^ *(unsigned __int8 *)(v5 + (v9 >> 24)) ^ *(unsigned __int8 *)((v9 >> 24) + v6 + 1) ^ v9 ^ (-51 * (v9 >> 24))) >> 7) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_10028E3A4@<X0>(char a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8
                                                      * ((14361
                                                        * ((((a3 ^ 0x60) + a1) & 0x7Fu) - 1 < (((a3 + 17628736) | *(_DWORD *)(v3 + 9520)) ^ 0x853D1013))) ^ a3))
                                          - 12))(1824753536);
}

uint64_t sub_10028E404@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  BOOL v7;

  v4 = a2 ^ 0x1549;
  v5 = a1 + v2;
  v6 = *(_DWORD *)(v3 + 9728) + 2139902163;
  v7 = v5 - 1043294829 > v6;
  if (v6 < 0xC1D09593 != v5 > 0x3E2F6A6C)
    v7 = v5 > 0x3E2F6A6C;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 9744)
                                            + 8
                                            * ((((v7 ^ ((v4 - 100) | 2)) & 1) << 8) & 0xDFFF | (((v7 ^ ((v4 - 100) | 2)) & 1) << 13) | v4)))(1824753536);
}

uint64_t sub_10028E4A0(uint64_t a1, int a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * (a3 ^ (6065 * (a2 != 0)))) - 4))();
}

uint64_t sub_10028E5B0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((a2 != 1) * v8) ^ a3)) - 4))();
}

uint64_t sub_10028E64C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  _BOOL4 v13;

  v11 = v10 + v8 - 1111770304;
  v12 = *(_DWORD *)(v9 + 9728) + 958181228;
  *(_DWORD *)(v9 + 9720) = v11;
  v13 = v11 + 2069951532 > v12;
  if (v12 < 0x7B60F42C != v11 > 0x849F0BD3)
    v13 = v11 > 0x849F0BD3;
  return (*(uint64_t (**)(uint64_t))(a8 + 8 * (int)((!v13 * ((a1 - 2059596920) ^ 0x853D331D)) ^ a1)))(1824753536);
}

uint64_t sub_10028E718@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744)
                              + 8
                              * (((*(_DWORD *)(*(_QWORD *)(v4 + 9736)
                                             + (v2 + ((a2 - 2059602185) ^ 0x604B84C2)) * (uint64_t)v5) == v3)
                                * a1) ^ (a2 - 2178))))();
}

uint64_t sub_10028E7A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;

  v15 = *(_DWORD *)(v10 + 9632) + 1171233117;
  if (v15 <= 0x19 && ((1 << v15) & 0x3014001) != 0)
    return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                          + 8
                                          * ((147 * ((*(_DWORD *)(v14 + (v8 + a4) * (uint64_t)v11 + 40) & 1) != 0)) ^ 0x1F55))
                              - 12))();
  else
    return (*(uint64_t (**)(uint64_t))(a5
                                              + 8
                                              * ((((*(_DWORD *)(v14 + v9 * (uint64_t)v11 + 40) & 8) == (a8 | 4) + v12)
                                                * v13) ^ 0x48F)))(1824753536);
}

uint64_t sub_10028EF38@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((5 * (v2 ^ 0x22CC) - 2303) & a2) == 0) * (((v2 - 7800) | 6) ^ 0x4AB)) ^ v2))
                            - 4))();
}

uint64_t sub_10028EF78()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;

  v6 = *(_QWORD *)(v1 + 9616);
  *(_DWORD *)(v6 + 392) = *(_DWORD *)(v1 + 9632);
  *(_DWORD *)(v6 + 396) = v3;
  *(_QWORD *)(v6 + 400) = v4;
  v7 = *(_DWORD *)(v1 + 9624);
  *(_DWORD *)(v6 + 408) = ((2 * (*(_DWORD *)(v1 + 9720) - v7)) & 0x7F6A72FE)
                        + 1996484571
                        + ((*(_DWORD *)(v1 + 9720) - v7) ^ 0xBFB5307E ^ ((v5 - 911) | 0x801));
  *(_QWORD *)(v6 + 416) = *(_QWORD *)(v1 + 9640) + v7;
  v8 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 9736)
                                                 + (int)(v0 + 1614382270 + ((v5 - 306341368) & 0x977F717F))
                                                 * (uint64_t)v2
                                                 + 8))(*(_QWORD *)(v1 + 9536), *(_QWORD *)(v1 + 9544));
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((398 * ((v8 ^ 0x7DFFF47C) - 289144932 + ((2 * v8) & 0xFBFFE8F8) == 1824781336)) ^ v5)))();
}

uint64_t sub_10028F074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(a5 + 8 * (v5 ^ (7605 * (v6 != 1111770304)))))();
}

uint64_t sub_10028F0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7)
{
  int v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;

  v13 = (unint64_t)(-333269657 * ((-333269657 * (_DWORD)v11) ^ ((-333269657 * v11) >> 16))) >> (v7 - 34);
  return (*(uint64_t (**)(uint64_t))(a5
                                            + 8
                                            * ((5214
                                              * (*(unsigned __int8 *)(*(_QWORD *)(v8[1217]
                                                                                + (v12 - 445213483 + v7 + 341 - 1167)
                                                                                * (uint64_t)v9
                                                                                + 24)
                                                                    - 0x5C34D9E17A472B42) == (*(_BYTE *)(v8[1208] + v13) ^ *(_BYTE *)(v11 - 0x1132FE166654577ELL) ^ *(_BYTE *)(v10 + v13 + (((v7 - 2147418920) | 0x53C1005) ^ (a6 - 3))) ^ *(_BYTE *)(v8[1207] + v13) ^ (103 * ((103 * v11) ^ ((-333269657 * v11) >> 16))) ^ (v13 * a7)))) ^ (v7 + 341))))(1824753536);
}

uint64_t sub_10028F1CC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744)
                              + 8 * ((((((v2 + 289) | 0x82) + 5039) ^ 0x19E8) * (v1 + 1 != v0)) ^ v2)))();
}

uint64_t sub_10028F214@<X0>(uint64_t a1@<X4>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (v5 ^ (15458 * (v6 - v4 + a3 + v3 == -300240816))))
                                          - ((461 * (v5 ^ 0x183Bu)) ^ ((v5 ^ (a2 - 2030)) - 2235369230))))(1824753536);
}

uint64_t sub_10028F288()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8
                                        * (v2 ^ (8
                                               * (*(_DWORD *)(*(_QWORD *)(v0 + 9736)
                                                            + (v3 - 445213483) * (uint64_t)v1
                                                            + 32) != 445213482))))
                            - 4))();
}

uint64_t sub_10028F2D4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)(((**(unsigned int **)(v2 + 9616) < 0x10uLL)
                                                   * ((((a1 ^ 0x1CB1) - 1921141624) & 0xF7BF56FF) + 2059600432)) ^ a1 ^ 0x1CB1)))(1824753536);
}

uint64_t sub_10028F32C@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  _DWORD *v7;
  _DWORD *v8;
  int v9;
  signed int v10;
  _BOOL4 v12;
  uint64_t (*v13)(void);

  *(_DWORD *)(v3 + 9624) = 0;
  v7 = *(_DWORD **)(v3 + 9616);
  v8 = &v7[6 * v2];
  v9 = *(_DWORD *)(v3 + 9704);
  v8[2] = v6;
  v8[3] = v9;
  *((_QWORD *)v8 + 2) = *(_QWORD *)(v3 + 9696);
  v8[6] = *(_DWORD *)(v3 + 9720);
  *v7 = v2 + 1;
  v10 = a1 - 1798712414 + ((a2 - 276859696) & 0x95BD96B7);
  v12 = v10 > a2 - 1265612204 && v10 < *(_DWORD *)(v3 + 9552);
  v13 = *(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744) + 8 * ((779 * v12) ^ a2));
  *(_QWORD *)(v3 + 9640) = v5;
  *(_DWORD *)(v3 + 9728) = v4;
  *(_DWORD *)(v3 + 9720) = 0;
  return v13();
}

uint64_t sub_10028F3F0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;
  signed int v6;
  _BOOL4 v8;
  uint64_t (*v9)(uint64_t);

  v6 = (a1 ^ 0xADC171AA) + *(_DWORD *)(v2 + v1 * (uint64_t)v5 + 36);
  v8 = v6 > 1212863678 || v6 < v4[2390];
  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((v8 * (a1 ^ 0x262A)) ^ a1)) - 8);
  v4[2406] = v4[2430];
  return v9(1824753536);
}

uint64_t sub_10028F490()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 9744)
                                            + 8 * ((5918 * ((_DWORD)v2 == v0 - 410590207)) ^ (v0 + 2059596920))))(v2);
}

void sub_10028F4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_DWORD *)(v6 + 9704) = v7;
  *(_QWORD *)(v6 + 9696) = v8;
  *(_DWORD *)(v6 + 9688) = a5;
  *(_DWORD *)(v6 + 9680) = a6;
  JUMPOUT(0x10028DF4CLL);
}

uint64_t sub_10028F50C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 12280) = *(_QWORD *)(v0 + 9600);
  return (*(uint64_t (**)(void))(v0 + 9592))();
}

uint64_t sub_10028F51C(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * ((5223 * (a1 == 1824781336)) ^ 0x1F9)) - 12))();
}

void sub_10028F588()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 9536) = *(_QWORD *)(v0 + 12696);
  JUMPOUT(0x10028DE28);
}

uint64_t sub_10028F5EC(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * ((3560 * (a1 == 1824781336)) ^ 0x1F9)) - 12))();
}

uint64_t sub_10028F664(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * ((10300 * (a1 == 1824781336)) ^ 0x1F9)) - 12))();
}

uint64_t sub_10028F6D0@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t (*v6)(void);

  v3 = v1[1191];
  v1[1212] = v3 - 0x5C1503E25C92CEDELL;
  v4 = *(unsigned int *)(v3 - 0x5C1503E25C92CEBELL);
  v5 = *(_DWORD *)(v3 - 0x5C1503E25C92CEBELL) == 0;
  v1[1508] = 0x5D2B531B7F4FB0A2;
  v1[1312] = 0x158F1B3CD9077941;
  v1[1495] = 0x79F8420616831EBFLL;
  v6 = *(uint64_t (**)(void))(v2
                           + 8 * ((((v5 ^ (a1 - 1)) & 1) * (((a1 - 9812) | 0x2810) - 10043)) ^ a1));
  v1[1216] = v4;
  return v6();
}

uint64_t sub_10028F78C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = 129 * (v0 ^ 0x2830);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8072))(v2 << (-127 * (v0 ^ 0x30u) - 5), 0x10200406C4767B9);
  v5 = *(_QWORD *)(v1 + 9744);
  *(_QWORD *)(v1 + 9488) = v4 + 0x5D2B531B7F4FB0A2;
  *(_QWORD *)(v1 + 12064) = v4 + 0x5D2B531B7F4FB0A2;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((**(_DWORD **)(*(_QWORD *)(v1 + 9528) - 0x5C1503E25C92CEB6) < v2)
                                * (((v3 - 1287) | 0x810) ^ ((v3 + 252) | 0x2078) ^ 0x373B)) ^ v3)))();
}

uint64_t sub_10028F850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 7120))(v1 + v4 * v6 + 8, v5 + 32 * a1, 32);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 9744)
                                            + 8 * (((v4 + 1 != *(_QWORD *)(v2 + 9728)) * ((v3 - 40) ^ 0x2812)) ^ v3)))(v7);
}

void sub_10028F898()
{
  JUMPOUT(0x10028F7FCLL);
}

uint64_t sub_10028F8B4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 2059596258)) - ((v0 + 2059596137) | 0x79u) + 493))();
}

uint64_t sub_10028F904()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;

  v3 = *(_QWORD *)(v0 + 10624);
  v4 = *(_QWORD *)(v0 + 9464);
  v5 = (unint64_t)(-333269657
                        * ((-333269657 * ((_DWORD)v4 + 701081242)) ^ ((-333269657 * (v4 + 701081242)) >> 16))) >> (((v1 + 8) | 0x16u) ^ (v2 - 8));
  v6 = (char *)*(&off_1004ECA20 + (v1 ^ 0x3BD)) - 8;
  v7 = (char *)*(&off_1004ECA20 + (v1 ^ 0x1F8)) - 12;
  v8 = (char *)*(&off_1004ECA20 + (int)(v1 & 0x93BAAB5A)) - 4;
  *(_BYTE *)(v0 + 9963) = *(_BYTE *)(v4 - 0x729BE86CD6365966) ^ (103
                                                                 * ((103 * (v4 - 102)) ^ ((-333269657 * (v4 + 701081242)) >> 16))) ^ (127 * v5) ^ v6[v5] ^ v7[v5] ^ v8[v5];
  v9 = -333269657 * ((-333269657 * ((_DWORD)v4 + 701081241)) ^ ((-333269657 * (v4 + 701081241)) >> 16));
  *(_BYTE *)(v0 + 9962) = (127
                         * ((-333269657
                           * ((-333269657 * ((_DWORD)v4 + 701081241)) ^ ((-333269657 * (v4 + 701081241)) >> 16))) >> 24)) ^ (103 * ((103 * (v4 - 103)) ^ ((-333269657 * (v4 + 701081241)) >> 16))) ^ *(_BYTE *)(v4 - 0x729BE86CD6365967) ^ v6[v9 >> 24] ^ v7[v9 >> 24] ^ v8[v9 >> 24];
  v10 = -333269657 * ((-333269657 * ((_DWORD)v4 + 701081240)) ^ ((-333269657 * (v4 + 701081240)) >> 16));
  *(_BYTE *)(v0 + 9961) = (127
                         * ((-333269657
                           * ((-333269657 * ((_DWORD)v4 + 701081240)) ^ ((-333269657 * (v4 + 701081240)) >> 16))) >> 24)) ^ (103 * ((103 * (v4 - 104)) ^ ((-333269657 * (v4 + 701081240)) >> 16))) ^ *(_BYTE *)(v4 - 0x729BE86CD6365968) ^ v6[v10 >> 24] ^ v7[v10 >> 24] ^ v8[v10 >> 24];
  v11 = *(_BYTE **)(v0 + 9456);
  LOBYTE(v9) = *v11;
  v12 = -333269657 * ((-333269657 * (_DWORD)v11) ^ ((-333269657 * (_DWORD)v11) >> 16));
  *(_BYTE *)(v0 + 9960) = (127 * BYTE3(v12)) ^ v12 ^ v9 ^ v6[v12 >> 24] ^ v7[v12 >> 24] ^ v8[v12 >> 24];
  *(_DWORD *)(v3 - 0x26CE0D06BF4F3AC8) = *(_DWORD *)(v0 + 9960);
  *(_QWORD *)(v3 - 0x26CE0D06BF4F3AC0) = 1000 * **(_QWORD **)(v0 + 11872)
                                         + *(_DWORD *)(*(_QWORD *)(v0 + 11872) + 8) / 1000;
  *(_QWORD *)(v3 - 0x26CE0D06BF4F3AB8) = 1000 * **(_QWORD **)(v0 + 11888)
                                         + *(_DWORD *)(*(_QWORD *)(v0 + 11888) + 8) / 1000;
  v13 = *(_QWORD *)(v0 + 9936);
  *(_DWORD *)(v13 - 0x5C1503E25C92CEE6) = **(_DWORD **)(v0 + 11728);
  v14 = **(_QWORD **)(v0 + 10248);
  v15 = *(_QWORD *)(v0 + 12128);
  *(_QWORD *)(v0 + 9472) = v15;
  v16 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))*(&off_1004ECA20 + (v1 & 0xED60030)))(v13 - 0x5C1503E25C92CF16, v14, v13 - 0x5C1503E25C92CE96, *(_QWORD *)(v0 + 10120), v15 - 0x729BE86CD6365919);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8
                                        * ((7387 * (v16 + 246777912 - ((2 * v16) & 0x1D6B1070) == 246777912)) ^ v1))
                            - 12))();
}

uint64_t sub_10028FC34()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = v4 - 192;
  *(_QWORD *)v5 = v2;
  *(_DWORD *)(v5 + 8) = 2059133353 * (((~(v4 - 192) & 0x74C120EC) - (~(v4 - 192) | 0x74C120ED)) ^ 0x5F7D40C5)
                      + 2059600627
                      + v1
                      - 326;
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_1004ECA20 + v1 + 2059595817) - 8))(v4 - 192);
  v0[1192] = v2 - 0x5C1503E25C92CEDELL;
  v0[1587] = v2 - 0x5C1503E25C92CEDELL;
  v7 = *(_DWORD *)(v2 - 0x5C1503E25C92D1C6);
  if ((v7 - 700) < 2 || v7 == 900 || v7 == 800)
  {
    v0[1199] = *(_QWORD *)(v0[1218] + 8 * (v3 + 2059595990));
    JUMPOUT(0x10028FD6CLL);
  }
  return sub_100394838(v6);
}

uint64_t sub_10028FDD4()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 9528);
  *(_QWORD *)(v0 + 9736) = v3 - 0x5C1503E25C92CEAELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((*(_DWORD *)(v3 - 0x5C1503E25C92CEAELL) == 0) * (v1 - 9800)) ^ v1))
                            - (v1 ^ 0x2652)))();
}

uint64_t sub_10028FE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8072))(16 * a1, 0x1010040466105CCLL);
  *(_QWORD *)(v1 + 9720) = v3;
  *(_QWORD *)(v1 + 9480) = v3 + 0x158F1B3CD9077941;
  *(_QWORD *)(v1 + 10496) = v3 + 0x158F1B3CD9077941;
  return ((uint64_t (*)(void))(2235371539
                            - (v2 - 2059605567)
                            + *(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * (((**(_DWORD **)(v1 + 9736) == 0) * ((4 * (v2 - 4321)) ^ 0x5511)) ^ (v2 - 4321)))
                            - 8))();
}

uint64_t sub_10028FEC8()
{
  _QWORD *v0;
  int v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v2 = (_DWORD *)v0[1212];
  v3 = v0[1184];
  *(_DWORD *)(v3 - 0x729BE86CD6365935) = *v2;
  v4 = (unsigned int *)(v0[1191] - 0x5C1503E25C92CECELL);
  v5 = *v4;
  *(_DWORD *)(v3 - 0x729BE86CD6365929) = v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1009];
  v7 = v6(32 * v5, 0x1000040361F1193);
  v0[1215] = v3 - 0x729BE86CD6365921;
  *(_QWORD *)(v3 - 0x729BE86CD6365921) = v7;
  v8 = v6(32 * *(unsigned int *)(v3 - 0x729BE86CD6365935), 0x1000040361F1193);
  v9 = v0[1218];
  *(_QWORD *)(v3 - 0x729BE86CD6365931) = v8;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((*v2 != 0) * ((v1 - 1184186907) & 0x469539DA ^ 0x19B2)) ^ v1)) - 8);
  v0[1213] = (char *)*(&off_1004ECA20 + v1 - 1384) - 4;
  v0[1205] = (char *)*(&off_1004ECA20 + (v1 ^ 0xB0D)) - 8;
  v0[1211] = v4;
  return v10();
}

uint64_t sub_100290000@<X0>(unsigned int a1@<W8>)
{
  _QWORD *v1;
  unsigned int v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  unsigned int *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[1202] = v6;
  if (*v4 > a1)
    a1 = *v4;
  v7 = v3(4 * a1, 0x100004052888210);
  v8 = v1[1218];
  v1[1495] = v7 + 0x79F8420616831EBFLL;
  return (*(uint64_t (**)(void))(v8 + 8 * ((223 * (*v5 != v2 - 344)) ^ v2)))();
}

uint64_t sub_100290074@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _DWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 9664) = a1;
  v7 = 290670313 * ((2 * ((v6 - 192) & 0x3F541090) - (v6 - 192) + 1085009771) ^ 0x6B9AD6A2);
  v8 = v6 - 192;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(*(_QWORD *)(v3 + 9528) - 0x5C1503E25C92CED6);
  *(_DWORD *)(v8 + 8) = v7
                      + (a2 ^ 0xBDBA73E7)
                      + ((a2 << ((v4 - 84) ^ 0x67 ^ ((v4 + 22) | 0xFC))) & 0x7B74E7CE)
                      + 1257766364;
  *(_DWORD *)(v8 + 24) = v4 - v7 + 2072;
  *(_QWORD *)(v3 + 9448) = v2;
  *(_QWORD *)v8 = v2;
  v9 = (*(uint64_t (**)(uint64_t))(v3 + 9640))(v6 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((4970 * (*v5 != 0)) ^ v4)) - 8))(v9);
}

uint64_t sub_10029016C()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = 43 * (v1 ^ 0x1E0);
  v6 = *(_QWORD *)(v0 + 9472);
  *(_QWORD *)(v0 + 9680) = v6 - 0x729BE86CD6365911;
  *(_QWORD *)(v0 + 9672) = v6 - 0x729BE86CD6365919;
  v7 = *(_QWORD *)(v0 + 9728);
  *(_DWORD *)(v0 + 9656) = v7 ^ 0xA5DFF18F;
  *(_DWORD *)(v0 + 9632) = v7 ^ 0xB5FDF3CF;
  *(_DWORD *)(v0 + 9648) = ((2 * v7) & 0x4BBFE31E) + (v5 ^ 0x7FFCFA74);
  *(_DWORD *)(v0 + 9624) = ((2 * v7) & 0x6BFBE79E) + 1876884798;
  v8 = **(unsigned int **)(v0 + 9664);
  *(_QWORD *)(v0 + 10552) = 0x19BB6024574AA565;
  *(_DWORD *)(*v3 + 32 * v8) = *(_DWORD *)(*v2 + 72 * v8 - 0x4F46115FEA5BCB92);
  v9 = *v2;
  LODWORD(v6) = **(_DWORD **)(v0 + 9736);
  v10 = **(_QWORD **)(v0 + 9680);
  v11 = **(_DWORD **)(v0 + 9672);
  v12 = *v3 + 32 * v8;
  v13 = v4 - 192;
  *(_QWORD *)(v13 + 40) = v12 + 0x3E4DDC644C61E0B6;
  v14 = 2059133353 * ((~((v4 - 192) | 0x8751E85F) + ((v4 - 192) & 0x8751E85F)) ^ 0x53127788);
  *(_DWORD *)(v13 + 64) = v14 + (v6 ^ (((v5 - 1289) | 0x3E2) - 54552712)) + ((2 * v6) & 0xF97F36B6) + 1199501240;
  *(_DWORD *)v13 = (v11 ^ 0xAFFEF3DF) - v14 + ((v11 << (3 * (v5 ^ 0xBB) - 18)) & 0x5FFDE7BE) + 2113404916;
  *(_QWORD *)(v13 + 72) = v10;
  *(_QWORD *)(v13 + 80) = v12 + 0x7EB5715BCCE9B0CALL;
  *(_DWORD *)(v13 + 32) = *(_DWORD *)(v0 + 9656) - v14 + *(_DWORD *)(v0 + 9648);
  *(_DWORD *)(v13 + 36) = -477473262 - v14 + v5;
  *(_QWORD *)(v13 + 8) = v9 + 0xDE541BB94F3E538 + 72 * v8;
  v15 = *(_QWORD *)(v0 + 9488);
  v16 = *(_QWORD *)(v0 + 5928);
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(v0 + 9480);
  *(_QWORD *)(v13 + 56) = v15;
  *(_QWORD *)(v13 + 16) = v16;
  *(_QWORD *)(v13 + 24) = 0x334F714F2602DE16;
  v17 = (*(uint64_t (**)(uint64_t))(v0 + 9704))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 9744)
                                            + 8 * ((7193 * (*(_DWORD *)(v4 - 188) == 246777912)) ^ v5)))(v17);
}

uint64_t sub_100290414()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2041
                                          * (*(_DWORD *)(*v1 + 32 * v0 + 24) == ((v2 + 274476528) & 0xEFA3EE3F ^ 0xAA067AD))) ^ v2))
                            - 8))();
}

uint64_t sub_100290468()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((7503
                                          * (*(_QWORD *)(v0 + 16) == ((v1 + 7216) ^ 0x5081E7AF7AB65B37))) ^ v1))
                            - 8))();
}

uint64_t sub_1002904B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *v7;
  v10 = **(_DWORD **)(v2 + 9736);
  v11 = 2059133353 * ((~(v6 | 0x3A9FDF13) + (v6 & 0x3A9FDF13)) ^ 0xEEDC40C4);
  v12 = **(_QWORD **)(v2 + 9680);
  *(_DWORD *)v3 = -302057477
                - v11
                + (**(_DWORD **)(v2 + 9672) ^ 0x3FF7F3DB)
                + (((v5 - 1548316941) & 0x5C496DEE ^ 0x7FEFE65A) & (2 * **(_DWORD **)(v2 + 9672)))
                + 2045;
  *(_QWORD *)(v3 + 8) = v9 + 72 * v4 + 0xDE541BB94F3E518;
  *(_DWORD *)(v3 + 64) = v11 + v5 + 777 + (v10 ^ 0xECFF8FF7) + ((2 * v10) & 0xD9FF1FEE) + 1463743241;
  *(_DWORD *)(v3 + 32) = *(_DWORD *)(v2 + 9632) - v11 + *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v3 + 36) = -477473262 - v11 + v5;
  *(_QWORD *)(v3 + 40) = v1 + 32 * v4 + 0x3E4DDC644C61E0AELL;
  *(_QWORD *)(v3 + 72) = v12;
  *(_QWORD *)(v3 + 80) = a1 + 0x7EB5715BCCE9B0B2;
  v13 = *(_QWORD *)(v2 + 9480);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 5928);
  *(_QWORD *)(v3 + 24) = 0x334F714F2602DE16;
  v14 = *(_QWORD *)(v2 + 9488);
  *(_QWORD *)(v3 + 48) = v13;
  *(_QWORD *)(v3 + 56) = v14;
  v15 = (*(uint64_t (**)(uint64_t))(v2 + 9704))(v8 - 192);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 9744)
                                            + 8 * ((10064 * (*(_DWORD *)(v3 + 4) == 246777912)) ^ v5)))(v15);
}

uint64_t sub_100290664()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v2 + 1 < (unint64_t)**(unsigned int **)(v0 + 9696))
                                          * (((2 * v1) ^ 0xA40) - 2438)) ^ v1))
                            - ((10 * (v1 ^ 0x16Du)) ^ 0x502)))();
}

uint64_t sub_1002906F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int *v4;

  *(_DWORD *)(a1 + 4 * v1) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v1 + 1 < (unint64_t)*v4) * ((v3 + 395814550) & 0xE86859FD ^ 0x133)) ^ v3)))();
}

uint64_t sub_100290738()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((4309 * ((((v1 - 2456) ^ (**(_DWORD **)(v0 + 9616) == 0)) & 1) == 0)) ^ v1))
                            - (((v1 - 1432) | 0x103u) ^ 0x50BLL)))();
}

uint64_t sub_100290788()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (int)((924 * (*(_DWORD *)(*(_QWORD *)v1 + 24) == ((13 * ((((((v0 | 0x120) + 2073435359) & 0x8469EFDB) - 3547) | 0x120) ^ 0x1A3)) ^ 0xAA04119))) ^ ((v0 | 0x120) + 2073435359) & 0x8469EFDB)) - 12))(0x2F7E1850854984DCLL, 0xA103CF5EF56CF648, 3517, 385, 0x57BBF7BF7EF67FF7, 0xAF77EF7EFDECF235, 0xF8C5EFEFFBBFFB2DLL, 102);
}

uint64_t sub_1002908B0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(_QWORD *)(v5 + 8);
  if (v8 + a1 >= 0)
    v8 = a2 - v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((unint64_t)(v8 + v6) < 0xFFFFFFFFFFFFFFFELL)
                                          * (((v4 + 347) | v3) ^ a3)) ^ v4))
                            - 4))();
}

uint64_t sub_1002908F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((((a5 ^ ((unint64_t)(v10 + v9 + 2) >> 1))
                                           + a7
                                           + ((((v8 + 1459) | a4) ^ a6) & (v10 + v9 + 2))
                                           + v10 < 0xFFFFFFFFFFFFFFFELL)
                                          * a8) ^ v8))
                            - 4))();
}

uint64_t sub_10029093C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((v3 ^ v2) - 798) * (v1 + 1 == a1)) ^ v3)) - 8))();
}

uint64_t sub_100290968@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  BOOL v4;
  unsigned int v5;
  int v7;

  v4 = a1 == 0;
  v5 = v1 + a1;
  v7 = v4 || v5 < (v2 ^ 0xEB);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((19 * v7) ^ v2)) - (v2 ^ 0x983)))();
}

uint64_t sub_1002909BC()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == 0) * ((v0 + 791) ^ (v0 + 784))) ^ v0)))();
}

uint64_t sub_1002909EC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v1 + 1890283004) & 0x8F548FA6 ^ 0x1735)
                                               * (*(_QWORD *)(v0 + 9448) == 0x79F8420616831EBFLL)) ^ (v1 - 559)))
                            - 8))();
}

uint64_t sub_100290A48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8072))(a1 << ((v2 ^ 0x17u) + 81), 0x100004052888210);
  v6 = *(_QWORD *)(v1 + 9744);
  *(_QWORD *)(v1 + 11960) = v5 + v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((114 * (*v4 != 0)) ^ v2)) - ((4 * (v2 ^ 0x317u)) ^ 0x6CCLL)))();
}

uint64_t sub_100290AB0()
{
  uint64_t v0;
  int v1;
  unsigned int *v2;
  uint64_t v3;

  *(_DWORD *)(v0 - 0x79F8420616831EBFLL) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2753 * (((v1 - 1054) ^ 0x2A7uLL) >= *v2)) ^ v1))
                            - 8))();
}

uint64_t sub_100290B14@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v6 = (v1 - 152177831) & 0x9120F0A;
  v7 = *(_QWORD *)(v3 + 11960);
  v8 = *(_QWORD *)(v3 + 9936);
  *(_QWORD *)(v3 + 9488) = *(_QWORD *)(v3 + 12064);
  v9 = *(_QWORD *)(v8 - 0x5C1503E25C92CEC6);
  v10 = 290670313 * ((v2 - ((v5 - 192) | v2) + ((v5 - 192) | 0x78A8BC6A)) ^ 0x539985A3);
  v11 = v5 - 192;
  *(_QWORD *)(v3 + 9448) = v7;
  *(_QWORD *)v11 = v7;
  *(_DWORD *)(v11 + 24) = v6 - v10 + 1274;
  *(_QWORD *)(v11 + 16) = v9;
  *(_DWORD *)(v11 + 8) = v10
                       + (a1 ^ ((v6 ^ 0xD19) + 1823962036))
                       + (((v6 ^ 0x14DA) - 647043650) & (2 * a1))
                       - 1678051844;
  v12 = (*(uint64_t (**)(uint64_t))(v3 + 9640))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 9744) + 8 * ((3643 * (*v4 != 0)) ^ v6)))(v12);
}

uint64_t sub_100290B5C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int **v3;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(v0 + 9528) - 0x5C1503E25C92CEA6;
  *(_QWORD *)(v0 + 9704) = v2;
  v3 = (int **)v2;
  LODWORD(v2) = *(_DWORD *)(*(_QWORD *)v2 + 4);
  v4 = *(_QWORD *)(v0 + 9720);
  *(_DWORD *)(v4 + 4) = v2;
  v5 = **v3;
  *(_DWORD *)v4 = v5;
  *(_QWORD *)(v4 + 8) = (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8072))((v5 * (v2 - 771158995)), 457175718);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744) + 8 * ((37 * ((*v3)[2] != 0)) ^ (v1 + 2059604741)))
                            - ((208 * (v1 ^ 0x853D1023)) ^ 0x2A48)))();
}

uint64_t sub_100290C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  _BOOL4 v8;

  v8 = ((347 * (v7 ^ 0x2A50)) ^ 0xE4F1C910 ^ ((v7 ^ 0x2A50)
                                            - v5
                                            + 260
                                            + *(_DWORD *)(v4 + 24 * v6 + 12)
                                            - ((2 * *(_DWORD *)(v4 + 24 * v6 + 12) + 2071426688) & 0xC9E3B940)
                                            + 493914057)) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v8 | (4 * v8)) ^ v7)) - 4))();
}

uint64_t sub_100290CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (int)(((((v6 - 67545617) & 0x4069DF8 ^ 0x999uLL) + v5 < **(unsigned int **)(v4 + 9736))
                                               * (((v6 - 2013452089) & 0xFD3FD19F) + 2059598400)) ^ v6))
                            - 12))();
}

void sub_100290D4C()
{
  JUMPOUT(0x100290B88);
}

uint64_t sub_100290D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X7>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;

  v11 = *(_QWORD *)(v7 + 16);
  v12 = v6 - 1;
  v13 = -333269657 * ((-333269657 * ((_DWORD)v11 + v12)) ^ ((-333269657 * (v11 + v12)) >> 16));
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a3 + (v13 >> 24)) ^ *(_BYTE *)(v11 + v12 + a5) ^ *(_BYTE *)((v13 >> 24) + v9 + 3) ^ *(_BYTE *)(a4 + (v13 >> 24)) ^ (103 * ((103 * (v11 + v12)) ^ ((-333269657 * (v11 + v12)) >> 16))) ^ (((-333269657 * ((-333269657 * ((_DWORD)v11 + v12)) ^ ((-333269657 * (v11 + v12)) >> 16))) >> 24) * (v8 + a6 + 73));
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v12 != 0) * v10) ^ (a6 + 2059604741))) - 8))();
}

void sub_100290DEC()
{
  JUMPOUT(0x100290E04);
}

uint64_t sub_100290EEC()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v0 + 9664) = *(_QWORD *)(v0 + 9448) - 0x79F8420616831EBFLL;
  *(_QWORD *)(v0 + 9696) = *(_QWORD *)(v0 + 10496);
  v4 = *(_QWORD *)(v0 + 9472);
  *(_QWORD *)(v0 + 9680) = v4 - 0x729BE86CD6365911;
  *(_QWORD *)(v0 + 9672) = v4 - 0x729BE86CD6365919;
  v5 = *(_QWORD *)(v0 + 9728);
  *(_DWORD *)(v0 + 9656) = ((2 * v5) & 0xCBF9F2BE) + (v5 ^ 0x65FCFC55 ^ (v1 - 3270));
  *(_DWORD *)(v0 + 9648) = (v5 ^ 0xBFDFFF9F) + ((2 * v5) & 0x7FBFFF3E);
  v6 = **(unsigned int **)(v0 + 9664);
  *(_QWORD *)(v0 + 10552) = 0x19BB6024574AA565;
  v7 = *(_QWORD **)(v0 + 9720);
  *(_DWORD *)(*v7 + 32 * v6) = *(_DWORD *)(*v2 + 72 * v6 - 0x4F46115FEA5BCB92);
  v8 = *v2;
  v9 = **(_QWORD **)(v0 + 9680);
  LODWORD(v5) = **(_DWORD **)(v0 + 9672);
  v10 = *v7 + 32 * v6;
  v11 = 2059133353 * (((((v3 - 192) | 0x5A61FA52) ^ 0xFFFFFFFE) - (~(v3 - 192) | 0xA59E05AD)) ^ 0x8E226585);
  v12 = v3 - 192;
  *(_DWORD *)(v12 + 64) = v11
                        + (**(_DWORD **)(v0 + 9736) ^ 0x44FFDBFF)
                        + ((2 * **(_DWORD **)(v0 + 9736)) & 0x89FFB7FE)
                        - 12669164;
  *(_QWORD *)(v12 + 40) = v10 + 0x3E4DDC644C61E0B6;
  *(_QWORD *)(v12 + 72) = v9;
  *(_QWORD *)(v12 + 80) = v10 + 0x7EB5715BCCE9B0CALL;
  *(_DWORD *)v12 = ((v1 - 1336) ^ 0x6FFEFB6C) - v11 + (v5 ^ 0xBDF7FBDF) + ((2 * v5) & 0x7BEFF7BE);
  *(_DWORD *)(v12 + 32) = -1075841106 - v11 + *(_DWORD *)(v0 + 9656);
  *(_DWORD *)(v12 + 36) = -477473262 - v11 + v1 - 3270;
  v13 = *(_QWORD *)(v0 + 9696);
  *(_QWORD *)(v12 + 8) = v8 + 0xDE541BB94F3E538 + 72 * v6;
  v14 = *(_QWORD *)(v0 + 9488);
  *(_QWORD *)(v12 + 48) = v13;
  *(_QWORD *)(v12 + 56) = v14;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v0 + 5928);
  *(_QWORD *)(v12 + 24) = 0x334F714F2602DE16;
  v15 = (*(uint64_t (**)(uint64_t))(v0 + 9704))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 9744)
                                            + 8 * ((49 * (*(_DWORD *)(v3 - 188) == 246777912)) ^ (v1 - 3270))))(v15);
}

uint64_t sub_100291194()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((61
                                          * (*(_DWORD *)(**(_QWORD **)(v0 + 9720) + 32 * v2 + 24) != ((443 * (v1 ^ 0xC93)) ^ 0xAA054B7))) ^ v1))
                            - (v1 + 13)
                            + 3229))();
}

uint64_t sub_1002911EC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((5577 * (*(_QWORD *)(v1 + 16) == 0x5081E7AF7AB67B24)) ^ v0))
                            - ((v0 - 1947) ^ (v0 + 1636) ^ 0x160BLL)))();
}

uint64_t sub_100291234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *v6 + 72 * v5 + 0xDE541BB94F3E518;
  v10 = **(_DWORD **)(v2 + 9736);
  v11 = 2059133353 * ((v7 + 1354547831 - 2 * (v7 & 0x50BCC277)) ^ 0x7B00A25F);
  v12 = **(_QWORD **)(v2 + 9680);
  *(_DWORD *)v3 = 1073214427
                - v11
                + (**(_DWORD **)(v2 + 9672) ^ 0xEDFEF7FB)
                + ((2 * **(_DWORD **)(v2 + 9672)) & 0xDBFDEFF6)
                + 2045;
  *(_QWORD *)(v3 + 8) = v9;
  *(_DWORD *)(v3 + 32) = 1711075694 - v11 + *(_DWORD *)(v2 + 9648);
  *(_DWORD *)(v3 + 36) = -477473262 - v11 + v4;
  *(_QWORD *)(v3 + 72) = v12;
  *(_QWORD *)(v3 + 80) = v1 + 0x7EB5715BCCE9B0B2;
  *(_DWORD *)(v3 + 64) = ((13 * (v4 ^ 0x595)) ^ 0x6E3EB7CF)
                       + v11
                       + (v10 ^ 0xD5FFCB37)
                       + (((v4 + 620) ^ 0xABFF9118) & (2 * v10));
  *(_QWORD *)(v3 + 40) = a1 + 32 * v5 + 0x3E4DDC644C61E0AELL;
  v13 = *(_QWORD *)(v2 + 9696);
  *(_QWORD *)(v3 + 24) = 0x334F714F2602DE16;
  v14 = *(_QWORD *)(v2 + 9488);
  *(_QWORD *)(v3 + 48) = v13;
  *(_QWORD *)(v3 + 56) = v14;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 5928);
  v15 = (*(uint64_t (**)(uint64_t))(v2 + 9704))(v8 - 192);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 9744)
                                            + 8 * ((7967 * (*(_DWORD *)(v3 + 4) == 246777912)) ^ v4)))(v15);
}

uint64_t sub_1002913E0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((7569
                                * (*(_DWORD *)(**(_QWORD **)(v0 + 9720) + 32 * v2 + 24) == ((430 * (v1 ^ 0x775)) ^ 0xAA042B4))) ^ v1)))();
}

uint64_t sub_10029142C()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;

  v5 = (v1 - 4601) | 0x666;
  *v0 = 178260382;
  v6 = *(_QWORD **)(v2 + 9720);
  *(_QWORD *)(*v6 + 32 * v3 + 8) = 0x5081E7AF7AB67B23;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((7569 * (*(_DWORD *)(*v6 + 32 * v3 + 24) == ((430 * (v5 ^ 0x775)) ^ 0xAA042B4))) ^ v5)))();
}

uint64_t sub_1002914B4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((154
                                * ((*(_QWORD *)(v0 + 10552) & 0xFFFFFFFFFFFFFFFELL) != (v1 - 620)
                                                                                     + 0x19BB6024574AA05ALL)) ^ v1)))();
}

uint64_t sub_1002914F4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + v3 + 8) = 0x5081E7AF7AB67B23;
  *(_DWORD *)(**(_QWORD **)(v2 + 9720) + v3 + 24) = v1 - 151;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((8102
                                * (((v4 - 1604452344) & 0x5FA1FD8B ^ 0x50BuLL) + v5 < **(unsigned int **)(v2 + 9688))) ^ (v4 - 1604452344) & 0x5FA1FD8B)))();
}

uint64_t sub_100291580()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 9672) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((47 * (*(_QWORD *)(v1 + 9488) == 0x5D2B531B7F4FB0A2)) ^ v2))
                            - ((v2 ^ 0x8F2u)
                             + 4785)
                            + 4998))();
}

uint64_t sub_1002915D8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2845
                                          * (((*(_QWORD *)(v0 + 9448) == 0x79F8420616831EBFLL) ^ (v1 + 17)) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_10029163C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((14614
                                          * (((*(_QWORD *)(v1 + 10496) == 0x158F1B3CD9077941) ^ (((a1 + 126) | 0x48) + 48)) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_10029168C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 ^ (6723 * (v1 == 246777912))))
                            - (v0 ^ (v2 + 471) ^ 0x853D042BLL ^ (v0 - 253734083) & 0xF1FBEF9)))();
}

uint64_t sub_100293FDC()
{
  return sub_100293FE8();
}

uint64_t sub_100293FE8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((unint64_t)(v2 - v1 - 0x5C1503E25C92CF0DLL) > 0xF)
                                          * (v0 ^ 0x22C8 ^ ((v0 - 9171) | 0x110) ^ 0x7FC)) ^ v0))
                            - 4))();
}

uint64_t sub_100294064@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_OWORD *)(v2 - 15 + (a1 ^ 0x12BLL) + 128) = *(_OWORD *)(v1 - 15 + (a1 ^ 0x12BLL) + 825);
  return (*(uint64_t (**)(void))(v3 + 8 * (int)a1))();
}

uint64_t sub_1002940BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v1 - 1;
  *(_BYTE *)(v3 + v5 + 128) = *(_BYTE *)(v2 + v5 + 825);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1487 * (v5 != ((v0 - 199) | 4u) - 118)) ^ v0)))();
}

uint64_t sub_1002940F8()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3141 * *(unsigned __int8 *)(v0 + 10079)) ^ v1))
                            - ((v2 + v1 - 118) ^ 0x853D101FLL)))();
}

void sub_100294134()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v0 = v3;
  *(_DWORD *)(v0 + 8) = v2
                      + 1162864081 * ((((v4 - 192) | 0x7404799D) - (v4 - 192) + ((v4 - 192) & 0x8BFB8660)) ^ 0x97964CF6)
                      + 564;
  ((void (*)(uint64_t))((char *)*(&off_1004ECA20 + v2 + 143) - 8))(v4 - 192);
  *(_QWORD *)(v1 + 12072) = ((v2 - 1522673399) & 0xDFFF3697)
                          - 2235371511
                          + *(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * v2)
                          - 40;
  JUMPOUT(0x10028C210);
}

uint64_t sub_1002941E4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v2 + a1;
  v4 = *(_QWORD *)(v1 + 11016);
  v5 = v1 + 12720 + v4;
  *(_QWORD *)(v1 + 12232) = v5 + 24;
  *(_QWORD *)(v1 + 11968) = v5 + 160;
  *(_QWORD *)(v1 + 10328) = v5 + 208;
  *(_QWORD *)(v1 + 11016) = v4 + 240;
  v6 = *(uint64_t **)(v1 + 7760);
  v7 = *v6;
  *(_QWORD *)(v1 + 11544) = *v6;
  sub_1003CA69C((_BYTE *)(v5 + 24), 0, 0x60uLL);
  sub_1003CA69C((_BYTE *)(v5 + 160), 0, 0x30uLL);
  *(_QWORD *)(v5 + 208) = 0;
  *(_QWORD *)(v5 + 216) = 0;
  *(_DWORD *)(v5 + 224) = 0;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8072))(120, 0x1010040E2407E0ALL);
  v9 = *(_QWORD *)(v1 + 9744);
  *(_QWORD *)(v5 + 120) = v8;
  *(_QWORD *)(v1 + 9824) = v8;
  *(_QWORD *)(v5 + 128) = v8 + 24;
  *(_QWORD *)(v5 + 136) = v8 + 48;
  *(_QWORD *)(v5 + 144) = v8 + 72;
  *(_QWORD *)(v5 + 152) = v8 + 96;
  *(_QWORD *)(v1 + 10528) = v5 + 208;
  *(_QWORD *)v8 = 0;
  *(_DWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_DWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 48) = 0;
  *(_DWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 72) = 0;
  *(_DWORD *)(v8 + 80) = 0;
  *(_QWORD *)(v8 + 96) = 0;
  *(_DWORD *)(v8 + 104) = 0;
  *(_QWORD *)(v5 + 48) = v8;
  *(_QWORD *)(v1 + 9736) = v5 + 48;
  *(_QWORD *)(v1 + 10696) = v5 + 48;
  *(_QWORD *)(v5 + 56) = v8 + 24;
  *(_QWORD *)(v1 + 10368) = v5 + 56;
  *(_QWORD *)(v1 + 9696) = v8 + 48;
  *(_QWORD *)(v5 + 80) = v8 + 48;
  *(_QWORD *)(v5 + 88) = v8 + 72;
  *(_QWORD *)(v1 + 9688) = v8 + 72;
  *(_QWORD *)(v1 + 9680) = v8 + 96;
  *(_QWORD *)(v5 + 96) = v8 + 96;
  *(_DWORD *)(v5 + 24) = *(_DWORD *)(v7 + 240) + 2;
  *(_QWORD *)(v5 + 112) = 0;
  v10 = *v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(*v6 + 112);
  *(_QWORD *)(v1 + 9728) = v5 + 32;
  *(_DWORD *)(v5 + 40) = *(_DWORD *)(v10 + 120);
  *(_QWORD *)(v1 + 9704) = v5 + 40;
  *(_QWORD *)(v5 + 64) = v5 + 160;
  *(_QWORD *)(v1 + 9720) = v5 + 64;
  *(_QWORD *)(v1 + 11824) = v5 + 184;
  *(_QWORD *)(v5 + 72) = v5 + 184;
  *(_QWORD *)(v5 + 104) = v5 + 208;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((15379
                                          * (((v3 - 1) ^ (*(_DWORD *)(v7 + 240) > ((v3 + 1785) ^ 0x1A00u))) & 1)) ^ (v3 + 1785)))
                            - 8))();
}

uint64_t sub_10029438C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_WORD *)(v2 + 136) = 7948;
  *(_BYTE *)(v2 + 138) = 0;
  v5 = v1[1516];
  v6 = 1162864081 * ((((v4 - 192) | 0x4C85D190) - (v4 - 192) + ((v4 - 192) & 0xB37A2E68)) ^ 0xAF17E4FB);
  v7 = v4 - 192;
  *(_DWORD *)(v7 + 24) = 440303088 - v6;
  *(_QWORD *)(v7 + 16) = a1;
  *(_DWORD *)(v7 + 8) = (v3 - 4283) ^ v6;
  v1[1209] = v5;
  *(_QWORD *)v7 = v5;
  v8 = ((uint64_t (*)(uint64_t))((char *)*(&off_1004ECA20 + (v3 ^ 0x1BB8)) - 8))(v4 - 192);
  v9 = *(_DWORD *)(v4 - 180) == ((v3 - 1794237974) & 0x6AF1DFDE ^ 0xEB59BF4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1[1218] + 8 * ((v9 | (v9 << 7)) ^ v3)) - 8))(v8);
}

uint64_t sub_100294478()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v7 = 1162864081 * ((2 * ((v6 - 192) & 0x329728) - (v6 - 192) + 2144168151) ^ 0x9C5F5DBC);
  *(_QWORD *)(v2 + 16) = v3;
  *(_DWORD *)(v2 + 8) = v4 ^ v7;
  *(_DWORD *)(v2 + 24) = 440303089 - v7;
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 9672);
  v8 = v1(v6 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                                      + 8
                                                      * (((*(_DWORD *)(v2 + 12) == 246777912)
                                                        * (((v5 - 1979173925) & 0x75F7B3BF) + 12051)) ^ v5))
                                          - (((v5 - 6647) | 0x13C0u) ^ 0x13C4)))(v8);
}

uint64_t sub_100294550()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v1[1211];
  *v2 = v1[1212];
  v2[1] = v5;
  v2[2] = v1[1210];
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((92 * (*(_DWORD *)(v3 + 240) == 0)) ^ v0))
                            - (v0 + 180)
                            + 586))();
}

uint64_t sub_100294594@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  int v11;

  v3 = *(_QWORD *)(v1 + 11016);
  v4 = (_QWORD *)(v1 + 12720 + v3);
  *(_QWORD *)(v1 + 12184) = v4 + 0x4D9C1A0D7E9E7E1;
  *(_QWORD *)(v1 + 11584) = v4;
  *(_QWORD *)(v1 + 9848) = 0;
  *(_QWORD *)(v1 + 10264) = *(_QWORD *)(v1 + 9728);
  v5 = *(unsigned int **)(v1 + 9704);
  *(_QWORD *)(v1 + 11592) = v5;
  v6 = *v5;
  v7 = **(_QWORD **)(v1 + 9736);
  v8 = *(uint64_t **)(v1 + 9720);
  *(_QWORD *)(v1 + 11768) = v8;
  v9 = *v8;
  *(_QWORD *)(v1 + 10984) = v9;
  v4[12] = 0;
  *(_QWORD *)(v1 + 9680) = v4 + 12;
  *(_QWORD *)(v1 + 11504) = v4 + 12;
  *(_QWORD *)(v1 + 11016) = v3 - 6507 + ((a1 + 82763149) & 0xFB113A3B);
  v4[16] = 0;
  *(_QWORD *)(v1 + 9664) = v4 + 16;
  *(_QWORD *)(v1 + 11416) = v4 + 16;
  v4[18] = 0;
  *(_QWORD *)(v1 + 9656) = v4 + 18;
  *(_QWORD *)(v1 + 10584) = v4 + 18;
  v4[14] = 0;
  v4 += 14;
  *(_QWORD *)(v1 + 9672) = v4;
  *(_QWORD *)(v1 + 10736) = v4;
  if (v7)
    v10 = v9 == 0;
  else
    v10 = 1;
  v11 = !v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (int)((4187 * v11) ^ a1)) - (a1 ^ 0x25ALL)))(v6);
}

uint64_t sub_1002946B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (63 * (v1 != 0))))
                            + 2235372354
                            - (v0 - 2059602436)
                            - ((v0 - 6635) | 0x341u)
                            + 66))();
}

uint64_t sub_100294704(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 9680);
  *(_DWORD *)(v3 + 64) = 2;
  *(_QWORD *)(v3 + 8) = a1;
  v4 = (*(uint64_t (**)(void))(v1 + 8072))();
  v5 = *(_QWORD *)(v1 + 9744);
  *(_QWORD *)v3 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((15
                                          * (*(_DWORD *)(v3 + 8)
                                           + ((v2 + 3476) ^ 0xB25262E5)
                                           - ((v2 ^ 0x64A4E4CD) & (2 * *(_DWORD *)(v3 + 8))) == 0xB25273E0)) ^ v2))
                            - 12))();
}

uint64_t sub_100294794@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((14 * (a2 >= (v2 ^ 0xCDDu) - 7632)) ^ v2))
                            + 2235371539
                            - ((v2 - 679541798) & 0xADBDFB37)
                            - 8))();
}

uint64_t sub_1002947F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((v4 ^ 0x7AC2EDCC) + v4 - 2059603393) * ((unint64_t)(v5 - a1) > 0x1F)) ^ v4)))();
}

uint64_t sub_100294834@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((485
                                          * (a2 < (((v2 - 2128281305) | 0x4180001) ^ (v3 + v2 - 2302 - 1489)))) ^ v2))
                            - 12))();
}

uint64_t sub_100294880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v6 = ((8 * (v3 ^ (v5 + 1318))) ^ 0xFFFFD6AF) + a3;
  v7 = *(_OWORD *)(v4 + v6 - 15);
  v8 = *(_OWORD *)(v4 + v6 - 31);
  v9 = a1 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((13 * ((a3 & 0xFFFFFFE0) != 32)) ^ (v3 + 2059599008))) - 8))();
}

void sub_1002948F0()
{
  JUMPOUT(0x100294894);
}

uint64_t sub_1002948F8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(v3 + 7760);
  v8 = 8 * v0;
  **(_QWORD **)(v4 + v8) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v7 + 224) + v8);
  *(_DWORD *)(*(_QWORD *)(v4 + v8) + 8) = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v7 + 232) + 4 * v0);
  *(_DWORD *)(*(_QWORD *)(v4 + v8) + 12) = -1;
  *(_DWORD *)(*(_QWORD *)(v4 + v8) + 16) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((v2 ^ 0x19Fu) + v0 >= *(_DWORD *)(v5 + 240)) * v1) ^ v2)) - 8))();
}

uint64_t sub_100294970@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((v3 ^ 0x29FF) - 75) ^ 0xF63 ^ (22 * (v3 ^ 0x29FF))) * (v2 == a2)) ^ v3))
                            - 8))();
}

uint64_t sub_1002949AC@<X0>(uint64_t a1@<X3>, char a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (7695 * ((a2 & 0x18) == 0))))
                            - ((v2 - 448983083) & 0x9FFFF137 ^ 0x853D101BLL)))();
}

uint64_t sub_100294A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(a1 - 7 + (a3 + ~(_DWORD)v3)) = *(_QWORD *)(v5 - 7 + (a3 + ~(_DWORD)v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((83
                                          * ((((3 * ((v4 - 79) ^ 0x488)) ^ ((((v4 - 79) ^ 0xFFFFFA5A) & a3) + ~v3 == 7)) & 1) == 0)) ^ (v4 - 79)))
                            - 12))();
}

void sub_100294A6C()
{
  JUMPOUT(0x100294A34);
}

uint64_t sub_100294A74@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  char v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((v3 == a2) ^ (v2 ^ (v4 + 82))) & 1) * (v2 ^ 0x1105)) ^ v2))
                            - 12))();
}

uint64_t sub_100294AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *);
  char *v15;

  v7 = 2 * (v5 ^ 0x1317);
  v8 = *(_QWORD *)(a4 + 8 * v5);
  v9 = **(_QWORD **)(v4 + 9680);
  *(_QWORD *)(v4 + 9632) = *(_QWORD *)(*(_QWORD *)(v4 + 9680) + 8);
  *(_QWORD *)(v4 + 9616) = v9;
  v10 = *(unsigned int *)(v6 + 8);
  *(_QWORD *)(v4 + 10008) = v8;
  v11 = *(_QWORD *)(v4 + 11016);
  *(_QWORD *)(v4 + 9728) = v4 + 12720 + v11;
  *(_QWORD *)(v4 + 11016) = v11 + 32;
  *(_QWORD *)(v4 + 9720) = -v10;
  *(_QWORD *)(v4 + 9736) = (-v10 & 0xF) + v10;
  v12 = (*(uint64_t (**)(void))(v4 + 8072))();
  *(_DWORD *)(v4 + 9704) = (_DWORD)v10 << ((v7 ^ 0x37) + 48);
  *(_QWORD *)(v4 + 9624) = v10;
  v13 = v12;
  v14 = *(uint64_t (**)(char *))(*(_QWORD *)(v4 + 9744) + 8 * ((25 * ((-v10 & 0xF) == 0)) | v7));
  v15 = (char *)*(&off_1004ECA20 + (v7 ^ 0x2627)) - 23;
  *(_QWORD *)(v4 + 6792) = v13;
  return v14(v15);
}

uint64_t sub_1002961CC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (1110 * (v0 != 0)))) - (((v1 ^ 0x403u) + 4297) ^ 0x20AELL)))();
}

uint64_t sub_100296208(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(v3
                                                   + *(_QWORD *)(v4
                                                               + 8
                                                               * (v2 | (2
                                                                      * ((((v1 - 17) < 0xFFFFFFF7) ^ v2) & 1))))
                                                   - ((v2 + 69206064) | 0x811D0006)
                                                   - 8))(a1, v1);
}

uint64_t sub_100296258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  int v20;

  v10 = v5 ^ 0x179C;
  v11 = (v4 - 1) + v7;
  v12 = ((_BYTE)v4 - 1) & 0xF;
  v13 = v12 - v11 + v2;
  v14 = (v3 | v12) - v11;
  v15 = (a2 | v12) - v11;
  v17 = v13 > 0xF
     && v6 - v7 >= (((v10 - 2061240428) | 0x190006u) ^ (unint64_t)(v8 - 12))
     && (unint64_t)(v14 + 2) > 0xF;
  v18 = v15 + 1;
  v20 = v17 && v18 > 0xF;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((232 * v20) ^ v10)) - 8))(a1, v4);
}

uint64_t sub_1002962E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((2 * ((((a5 - 4854) ^ (v5 < 0x10)) & 1) == 0)) & 0xEF | (16 * (((a5 + 10) ^ ~(v5 < 0x10)) & 1))) ^ a5))
                            - (((a5 - 3454) | 0x449u) ^ 0x15E5)))();
}

uint64_t sub_100296338(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16x4_t v13;
  int8x16x4_t v14;

  v13.val[1].i64[0] = ((_BYTE)v2 + 13) & 0xF;
  v13.val[1].i64[1] = ((_BYTE)v2 + 12) & 0xF;
  v13.val[2].i64[0] = ((_BYTE)v2 + 11) & 0xF;
  v13.val[2].i64[1] = ((_BYTE)v2 + 10) & 0xF;
  v13.val[3].i64[0] = ((_BYTE)v2 + 9) & 0xF;
  v13.val[3].i64[1] = ((_BYTE)v2 + 8) & 0xF;
  v8 = v2 - 1;
  v9.i64[0] = 0xADADADADADADADADLL;
  v9.i64[1] = 0xADADADADADADADADLL;
  v13.val[0].i64[0] = (v2 - 1) & 0xF;
  v13.val[0].i64[1] = ((_BYTE)v2 + 14) & 0xF;
  v10.i64[0] = vqtbl4q_s8(v13, (int8x16_t)xmmword_1004B0D90).u64[0];
  v14.val[0].i64[1] = ((_BYTE)v2 + 6) & 0xF;
  v14.val[1].i64[1] = ((_BYTE)v2 + 4) & 0xF;
  v14.val[2].i64[1] = ((_BYTE)v2 + 2) & 0xF;
  v14.val[3].i64[1] = v2 & 0xF;
  v14.val[0].i64[0] = ((_BYTE)v2 + 7) & 0xF;
  v14.val[1].i64[0] = ((_BYTE)v2 + 5) & 0xF;
  v14.val[2].i64[0] = ((int)v2 + 3) & 0xFLL;
  v14.val[3].i64[0] = ((_BYTE)v2 + 1) & 0xF;
  v10.i64[1] = vqtbl4q_s8(v14, (int8x16_t)xmmword_1004B0D90).u64[0];
  v11 = vrev64q_s8(vmulq_s8(v10, v9));
  *(int8x16_t *)(*(_QWORD *)(v5 + 6792) - 15 + ((((a2 - 973) | 0x41u) + 4294962590) & v8)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v4 + (v8 & 0xF)), *(int8x16_t *)((v8 & 0xF) + a1 + 2)), *(int8x16_t *)((v8 & 0xF) + v3 + 1)), *(int8x16_t *)(v6 - 15 + ((((a2 - 973) | 0x41u) + 4294962590) & v8))), vextq_s8(v11, v11, 8uLL));
  return (*(uint64_t (**)(void))(v7 + 8 * ((15707 * ((v2 & 0xFFFFFFF0) == 16)) ^ a2)))();
}

void sub_100296490()
{
  JUMPOUT(0x100296410);
}

uint64_t sub_10029649C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1997 * (((v1 ^ 0x2833 ^ (v0 == 0)) & 1) == 0)) ^ v1))
                            - (v1 - 5590)
                            + 3567))();
}

uint64_t sub_1002964DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (int)((1008
                                                                     * ((int)v2 - 17 >= (((_DWORD)a2 - 2059599332) ^ 0x7AC2EFE0u))) ^ a2)))(a1, a2, v2);
}

uint64_t sub_100296518@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  int v20;

  v8 = (v4 - 1);
  v9 = v8 + v5;
  v10 = v8 + v6;
  v11 = v9 - v10;
  v12 = (a1 - 3564) & (v4 + 15);
  v13 = v2 - v10;
  v14 = (v12 | v3) - v10;
  v15 = ((307 * (a1 ^ 0xDFDu)) ^ 0x733) - v10;
  v17 = v11 > 0xF && (unint64_t)(v13 + v12) > 0xF && (unint64_t)(v14 + 2) > 0xF;
  v18 = v15 + (v12 | a2);
  v20 = v17 && v18 > 0xF;
  return (*(uint64_t (**)(void))(v7 + 8 * ((6249 * v20) ^ a1)))();
}

uint64_t sub_1002965A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v7
                                                              + 8
                                                              * ((112
                                                                * (((v6 < 0x10) ^ (70 - (a6 ^ 0x3B))) & 1)) ^ a6))
                                                  - 4))(a1, 0);
}

uint64_t sub_1002965EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16x4_t v15;
  int8x16x4_t v16;

  v15.val[1].i64[0] = ((_BYTE)v3 + 13) & 0xF;
  v15.val[1].i64[1] = ((_BYTE)v3 + 12) & 0xF;
  v15.val[2].i64[0] = ((_BYTE)v3 + 11) & 0xF;
  v15.val[2].i64[1] = ((_BYTE)v3 + 10) & 0xF;
  v15.val[3].i64[0] = ((_BYTE)v3 + 9) & 0xF;
  v15.val[3].i64[1] = ((_BYTE)v3 + 8) & 0xF;
  v9 = *(_QWORD *)(v6 + 9744);
  v10.i64[0] = 0xADADADADADADADADLL;
  v10.i64[1] = 0xADADADADADADADADLL;
  v11 = (((a3 - 2134) | 0x14Cu) - 478) & (v3 - 1);
  v15.val[0].i64[0] = v11;
  v15.val[0].i64[1] = ((_BYTE)v3 + 14) & 0xF;
  v12.i64[0] = vqtbl4q_s8(v15, (int8x16_t)xmmword_1004B0D90).u64[0];
  v16.val[0].i64[1] = ((_BYTE)v3 + 6) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)v3 + 4) & 0xF;
  v16.val[2].i64[1] = ((_BYTE)v3 + 2) & 0xF;
  v16.val[3].i64[1] = v3 & 0xF;
  v16.val[0].i64[0] = ((_BYTE)v3 + 7) & 0xF;
  v16.val[1].i64[0] = ((_BYTE)v3 + 5) & 0xF;
  v16.val[2].i64[0] = ((_BYTE)v3 + 3) & 0xF;
  v16.val[3].i64[0] = ((_BYTE)v3 + 1) & 0xF;
  v12.i64[1] = vqtbl4q_s8(v16, (int8x16_t)xmmword_1004B0D90).u64[0];
  v13 = vrev64q_s8(vmulq_s8(v12, v10));
  *(int8x16_t *)(v8 - 15 + (v3 - 1)) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + v11), *(int8x16_t *)(v7 - 15 + (v3 - 1))), veorq_s8(*(int8x16_t *)(v11 + a1 + 2), *(int8x16_t *)(v11 + v4 + 1))), vextq_s8(v13, v13, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1737 * ((v3 & 0xFFFFFFF0) == 16)) ^ a3)) - 12))();
}

void sub_10029674C()
{
  JUMPOUT(0x1002966D0);
}

uint64_t sub_100296758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v4 - 1;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(v6 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((1101 * (v7 != ((v5 + 2059595788) ^ 0x23))) ^ (v5 + 2059596388)))
                            - 12))();
}

uint64_t sub_1002967A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * (int)((((v2 + 1466634842) & 0xA894FBEE ^ 0x20B0) * (v1 != v0)) | v2))
                            - (v2 + 1564)
                            + 6257))();
}

uint64_t sub_1002967EC()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1887 * ((v0 & 8) != (v1 - 3153) - 3116)) ^ v1))
                            - 8))();
}

uint64_t sub_10029683C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16x4_t v13;

  v11 = (v3 + -8 - (int)v7 + 7) & 0xFLL;
  v13.val[0].i64[0] = v11;
  v13.val[0].i64[1] = ((_BYTE)v3 + -8 - (_BYTE)v7 + 22) & 0xF;
  v13.val[1].i64[0] = ((_BYTE)v3 + -8 - (_BYTE)v7 + 21) & 0xF;
  v13.val[1].i64[1] = ((_BYTE)v3 + -8 - (_BYTE)v7 + 20) & 0xF;
  v13.val[2].i64[0] = ((_BYTE)v3 + -8 - (_BYTE)v7 + 19) & 0xF;
  v13.val[2].i64[1] = ((_BYTE)v3 + -8 - (_BYTE)v7 + 18) & 0xF;
  v13.val[3].i64[0] = ((_BYTE)v3 + -8 - (_BYTE)v7 + 17) & 0xF;
  v13.val[3].i64[1] = ((_BYTE)v3 + -8 - (_BYTE)v7 + (a3 ^ 0xF2) + 50) & 0xF;
  *(int8x8_t *)(v9 - 7 + (v3 + -8 - v7 + 7)) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v5 + v11), *(int8x8_t *)(v8- 7+ (v3 + -8 - v7 + 7))), veor_s8(*(int8x8_t *)(v11 + v6 + 2), *(int8x8_t *)(v11 + v4 + 1))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v13, (int8x16_t)xmmword_1004B0DA0), (int8x8_t)0xADADADADADADADADLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(v10
                                                     + 8 * ((10691 * (-(uint64_t)(v3 & 0xFFFFFFF8) == -8 - v7)) ^ a3))
                                         - 8))((__n128)xmmword_1004B0DA0);
}

void sub_100296930()
{
  JUMPOUT(0x100296870);
}

uint64_t sub_100296938()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * (((((v1 - 2077690839) | 0x1141010) + 2059595813) * (v2 == v0)) ^ v1))
                            - 4))();
}

uint64_t sub_10029698C@<X0>(uint64_t a1@<X1>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = (a2 + 2059595793) | 0x2082u;
  v9 = a1 - 1;
  *(_BYTE *)(v6 + v9) = *(_BYTE *)(v3 + ((v8 ^ 0x20A5) & v9)) ^ *(_BYTE *)(v5 + v9) ^ *(_BYTE *)(((v8 ^ 0x20A5) & v9) + v4 + 2) ^ *(_BYTE *)(((v8 ^ 0x20A5) & v9) + a3 + 1) ^ (-83 * ((v8 ^ 0xA5) & v9));
  return (*(uint64_t (**)(void))(v7 + 8 * ((89 * (v9 == 0)) ^ (a2 + 2059597344))))();
}

uint64_t sub_100296A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((991 * (((a2 == v2) ^ (3 * (v3 ^ 0x8B) + 1)) & 1)) ^ v3))
                            - (v3 ^ 0x1E5)))();
}

uint64_t sub_100296A5C(uint64_t a1, uint64_t a2)
{
  char v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (v3 ^ (7979 * ((v2 & 8) == 0))))
                                                           - 1919 * ((v3 - 402658459) & 0x9D3D1D7F ^ (v4 - 2))
                                                           + 3834))(a1, a2, v2 & 0xF);
}

uint64_t sub_100296AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x16x4_t v14;

  v12 = -8 - a2;
  v14.val[0].i64[0] = (v5 + (int)v12 + 7) & 0xFLL;
  v14.val[0].i64[1] = ((_BYTE)v5 + (_BYTE)v12 + 22) & 0xF;
  v14.val[1].i64[0] = ((_BYTE)v5 + (_BYTE)v12 + 21) & 0xF;
  v14.val[1].i64[1] = ((_BYTE)v5 + (_BYTE)v12 + 20) & 0xF;
  v14.val[2].i64[0] = ((_BYTE)v5 + (_BYTE)v12 + 19) & 0xF;
  v14.val[2].i64[1] = ((_BYTE)v5 + (_BYTE)v12 + 18) & 0xF;
  v14.val[3].i64[0] = ((_BYTE)v5 + (_BYTE)v12 + (_BYTE)a5 + 78 + 69) & 0xF;
  v14.val[3].i64[1] = ((_BYTE)v5 + (_BYTE)v12 + 16) & 0xF;
  *(int8x8_t *)(v11 - 7 + (v5 + v12 + 7)) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v7 + v14.val[0].i64[0]), *(int8x8_t *)(v10 - 7 + (v5 + v12 + 7))), veor_s8(*(int8x8_t *)(v14.val[0].i64[0] + v8 + 2), *(int8x8_t *)(v14.val[0].i64[0] + v6 + 1))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v14, (int8x16_t)xmmword_1004B0DA0), (int8x8_t)0xADADADADADADADADLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                                     + 8 * ((478 * (-(uint64_t)(v5 & 0xFFFFFFF8) == v12)) ^ a5))
                                         - 12))((__n128)xmmword_1004B0DA0);
}

void sub_100296BA4()
{
  JUMPOUT(0x100296AE0);
}

uint64_t sub_100296BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((a6 | 0x80) - 427) * (v7 == v6)) ^ (a6 | 0x80)))
                            - (((a6 | 0x80u) - 2059596213) ^ 0x853D101FLL)))();
}

uint64_t sub_100296C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((10295
                                          * ((v6 ^ 0xA9B7FF6A3571FFDBLL)
                                           + 0x564800964794201DLL
                                           + ((74 * (((a5 - 2002) | 0x280) ^ 0x6E1u) - 8340) & (2
                                                                                                * *(_QWORD *)(v5 + 9720))) != 2097553400)) ^ a5))
                            - 4))();
}

uint64_t sub_100296C84@<X0>(unint64_t a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  v9 = v5 - 34;
  v10 = (*(_DWORD *)(v6 + 9704) & 0xFAFCB3FE)
      - 2105433405
      + (*(_QWORD *)(v6 + 9624) ^ 0x7D7E5F91 ^ v9)
      + 830;
  v11 = v4 < a1;
  *(_BYTE *)(v7 + v10) = *(_BYTE *)((((v9 + 6716) ^ 0x20A5) & v10) + v3 + 2) ^ *(_BYTE *)(v2 + (((v9 + 6716) ^ 0x20A5) & v10)) ^ *(_BYTE *)((((v9 + 6716) ^ 0x20A5) & v10) + a2 + 1) ^ (-83 * (((v9 + 60) ^ 0xA5) & v10));
  if (v4 >= a1)
    v11 = a1 + 1 < v4;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((254 * v11) ^ v9)))(-2097553401);
}

uint64_t sub_100296D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned __int8 v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  unint64_t v25;
  char v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  __int128 v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  __int128 v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char v151;
  unint64_t v152;
  BOOL v153;
  char v154;
  unint64_t v155;
  char v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  __int128 v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  char v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  unsigned int v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  __int128 v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  uint64_t v248;
  unint64_t v249;
  unint64_t v250;
  __int128 v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  unint64_t v267;
  unint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  __int128 v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  unint64_t v279;
  unint64_t v280;
  uint64_t v281;
  unint64_t v282;
  unint64_t v283;
  unint64_t v284;
  unint64_t v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  unint64_t v289;
  unint64_t v290;
  unint64_t v291;
  unint64_t v292;
  unint64_t v293;
  unint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  __int128 v300;
  uint64_t v301;
  unint64_t v302;
  unint64_t v303;
  uint64_t v304;
  unint64_t v305;
  unint64_t v306;
  uint64_t v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  unint64_t v311;
  uint64_t v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  unint64_t v316;
  unint64_t v317;
  unint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  unint64_t v322;
  unint64_t v323;
  unint64_t v324;
  unint64_t v325;
  unint64_t v326;
  unint64_t v327;
  unint64_t v328;
  char v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t v332;
  unsigned __int8 v333;
  uint64_t v334;
  unint64_t v335;
  unint64_t v336;
  unint64_t v337;
  unint64_t v338;

  *(_QWORD *)(v0 + 9648) = *(_QWORD *)(v0 + 9728) + 0x194C6113CD9FFCD4;
  v2 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8072);
  **(_QWORD **)(v0 + 9656) = v2(*(_QWORD *)(v0 + 9736), 3786313943);
  v3 = *(_QWORD **)(v0 + 9680);
  v3[7] = *(_QWORD *)(v0 + 9624);
  v4 = *(_QWORD *)(v0 + 9632);
  v5 = v2(v4, 3132076182);
  v6 = *(uint64_t **)(v0 + 9672);
  *v6 = v5;
  v3[3] = v4;
  *(_BYTE *)*v6 = 4;
  v7 = v2(16, 2710368348);
  *(_QWORD *)(v0 + 9736) = 0;
  **(_QWORD **)(v0 + 9664) = v7;
  v3[5] = 16;
  *(_DWORD *)(v0 + 9704) = v1 ^ 0x20D4;
  *(_DWORD *)(v0 + 9640) = v1 ^ 0x23EA;
  *(_QWORD *)(v0 + 9696) = (v1 ^ 0x23EA) - 61;
  *(_QWORD *)(v0 + 9720) = v1;
  *(_DWORD *)(v0 + 9688) = v1 - 8252;
  v8 = *(_QWORD *)(v0 + 9352);
  v9 = **(unsigned __int8 ***)(v0 + 9336);
  v10 = (uint64_t)*(&off_1004ECA20 + *(int *)(v0 + 9704));
  v11 = v10 + 806;
  v12 = *(unsigned __int8 *)(v10
                           + 806
                           + (((*(_BYTE *)(*(_QWORD *)(v0 + 9712) + 50) >> 4) | (16
                                                                                                  * *(_BYTE *)(*(_QWORD *)(v0 + 9712) + 50))) ^ 0xE9));
  v13 = v9[36];
  LODWORD(v2) = v12 << *(_QWORD *)(v0 + 9696);
  v14 = v2 & 0x38 | (v12 >> 5);
  v15 = v14 | v2 & 0xC0;
  LODWORD(v2) = *(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 45);
  v16 = (v14 << (v13 & 4) << (v13 & 4 ^ 4)) ^ v14;
  v17 = v9[16];
  v18 = (v2 >> 6) | (4 * (_DWORD)v2);
  v19 = (((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 52) << 40) | ((unint64_t)v9[33] << 48) | **(unsigned __int8 **)(v0 + 9712) | ((unint64_t)v9[28] << 8) | ((unint64_t)v9[7] << 16) | ((unint64_t)v9[22] << 32) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 23) << 24)) ^ ((unint64_t)(v15 ^ (4 * v16) ^ 0x50u) << 56);
  v20 = (2 * v18) ^ 0x2C;
  v21 = v10 + 272;
  v22 = ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 83) << 16) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 16) << 32) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 87) << 8) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 46) << 24) | *(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 33);
  v23 = ((unint64_t)v9[20] << 24) | ((unint64_t)v9[34] << 40) | ((unint64_t)v9[38] << 32) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 5) << 48) | v17 | ((unint64_t)v9[27] << 16) | ((unint64_t)((v18 ^ ((v20 & 0x76) + (v18 ^ 0xAD)) ^ *(_BYTE *)(v10 + 272 + (v18 ^ 0x61)) ^ 0xE1) + 115) << 8);
  v24 = *(_DWORD *)(*(_QWORD *)v8 + 16);
  v25 = (v9[13] | ((unint64_t)((*(_BYTE *)(v10 + 534 + ((-41 * v13) ^ 0x7DLL)) ^ 0x86)
                                                     + 71) << 8) | ((unint64_t)v9[29] << 16) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 67) << 24) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 34) << 32)) ^ (v24 | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 53) << 40) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 55) << 48)) ^ ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 65) << 56);
  v27 = (-41 * *(_BYTE *)(*(_QWORD *)(v0 + 9712) + 3));
  v28 = (((unint64_t)v9[12] << 40) ^ (0xFFFFFF0000000000 * v9[12]) ^ (v22
                                                                             - (v22 & 0xFFFF00FFFFFFFFFFLL | ((unint64_t)v9[12] << 40))))
      + v22;
  v29 = v23 | ((unint64_t)v9[21] << 56);
  v30 = v28 ^ (((unint64_t)v9[6] << 56) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 18) << 48));
  v31 = (unint64_t)((*(unsigned __int8 *)(v10
                                               + 534
                                               + ((-41 * *(_BYTE *)(*(_QWORD *)(v0 + 9712) + 12)) ^ 0x7DLL)) ^ 0x86u)
                         + 71) << 56;
  v32 = v9[3] | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 66) << 8) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 62) << 16) | ((unint64_t)((*(_BYTE *)(v10 + 534 + (v27 ^ 0xBD96AC09 ^ -(v27 ^ 0xBD96AC09) ^ ((v27 ^ 0xFFFFFF82) - 1114198923)) - 1114198924) ^ 0x86) + 71) << 32) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 14) << 24) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 15) << 48) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 9712) + 48) << 40);
  v33 = ((v32 & 0xB5C68674E88DC502 ^ -(uint64_t)(v32 & 0xB5C68674E88DC502) ^ ((v31 & 0xB500000000000000)
                                                                               - (v32 & 0xB5C68674E88DC502 ^ v31 & 0xB500000000000000)))
       + (v31 & 0xB500000000000000)) | v32 & 0x4A39798B17723AFDLL ^ v31 & 0x4A00000000000000;
  v34 = v33 ^ 0x34782BEE528AD553;
  v35 = v19 ^ -(uint64_t)v19 ^ ((v19 ^ 0xCB87D411AD752AACLL ^ v33) + (v33 ^ 0x34782BEE528AD553) + 1);
  v36 = ((v34 ^ v30) & 0x2000000000 | 0x9D1FDD9D95CF393FLL) ^ (v34 ^ v30) & 0xFFFFFFDFFFFFFFFFLL;
  v37 = v35 + v34;
  v38 = ((v30 - (v28 & 0x8000000000000000)) << (v17 & 0x17) << (v17 & 0x17 ^ 0x17)) ^ (v30 >> 41) ^ 0x2DFD2AD62A8BA438;
  v39 = (v25 ^ 0x59609C7727945560)
      + v29
      + ((0x60931490A849302DLL - 2 * (v29 & (v25 ^ 0x59609C7727945560))) ^ 0xBE062575868D04B0)
      + ((2 * (0x60931490A849302DLL - 2 * (v29 & (v25 ^ 0x59609C7727945560)))) & 0x7C0C4AEB0D1A0960)
      - 0x1E993A062ED634DDLL;
  *((_QWORD *)&v40 + 1) = __ROR8__(v38, 23);
  *(_QWORD *)&v40 = v38 << 41;
  v41 = ((v37 ^ 0x6541969A78843961) & (v25 ^ 0x4B285C926D7BCFABLL))
      + v36
      - 2 * ((v37 ^ 0x6541969A78843961) & (v25 ^ 0x4B285C926D7BCFABLL) & v36);
  v42 = __ROR8__((v40 >> 53) ^ 0x6E5AF68AAE1D801BLL, 11);
  v43 = (v42 ^ 0x893A6698BECF56DALL) & ~v39 ^ v25 ^ 0x4B285C926D7BCFABLL;
  v44 = v37 ^ v39 & (v25 ^ 0xB4D7A36D92843054);
  v45 = v36 & (v42 ^ 0x76C599674130A925) ^ v39;
  *(_QWORD *)&v40 = __ROR8__(v44 ^ 0x9ABE6965877BC69ELL, 4);
  v46 = v44 ^ 0x3D09DDF81A269813 ^ v41;
  v47 = v45 ^ 0x10674643B76E819ELL;
  v48 = v46 >> 19;
  *(_QWORD *)&v40 = __ROR8__(v40 & 0xFFFFFFFEFFFFFFFFLL ^ __ROR8__(v43, 4) ^ (v40 & (unint64_t)&_mh_execute_header | 0x9C1048321A976977), 60);
  v49 = v42 ^ v45 ^ 0x5B7BFB6E41FACA73 ^ (~v36 & 0x97F47A1951FFCF9BLL ^ ((v36 & 0x680B85E6AE003064)
                                                                         + 0x680B85E6AE003064
                                                                         - 2 * (v36 & 0x680B85E6AE003064))) & (v37 ^ 0x9ABE6965877BC69ELL);
  v41 ^= 0x5297670CE2961DA5uLL;
  v50 = v41 ^ (v41 >> 7);
  v51 = v40 ^ 0xD6E87488FAE634BALL ^ (((unint64_t)v40 ^ 0xD6E87488FAE634BALL) >> 39) ^ (8
                                                                                             * (v40 ^ 0xD6E87488FAE634BALL)) ^ (((unint64_t)v40 ^ 0xD6E87488FAE634BALL) << 25) ^ ((((unint64_t)v40 ^ 0xD6E87488FAE634BALL) >> 61) | 0x8000000000000000);
  *((_QWORD *)&v40 + 1) = v45;
  *(_QWORD *)&v40 = v45 ^ 0x10674643B76E819ELL;
  v52 = (v40 >> 1) ^ v45 ^ 0x10674643B76E819ELL ^ ((v45 ^ 0x10674643B76E819ELL) << 58);
  v53 = v47 >> 6;
  *(_QWORD *)&v40 = __ROR8__(v49, 10);
  v54 = v52 ^ (v47 >> 6) ^ v51;
  v55 = (v49 ^ v40) & 0xDFFFFFFFFFFFFFFFLL ^ (v49 << 47) ^ ((v49 ^ v40) & 0x2000000000000000 | (v49 >> 17));
  v56 = ((v50 & 0x141C5820CFC5C81DLL ^ (v41 << 57) & 0x1400000000000000 | v50 & 0xEBE3A7DF303A37E2 ^ (v41 << 57) & 0xEA00000000000000) ^ (v41 >> 41))
      + (v41 << 23)
      - 2
      * ((v50 & 0x141C5820CFC5C81DLL ^ (v41 << 57) & 0x1400000000000000 | v50 & 0xEBE3A7DF303A37E2 ^ (v41 << 57) & 0xEA00000000000000) & (v41 << 23));
  v57 = v56 ^ v55;
  v58 = v46 ^ (v46 << 36) ^ ((v46 >> 19) ^ (v46 >> 28) | (v46 << 45)) ^ v56;
  *(_QWORD *)&v40 = __ROR8__((v51 ^ 0x8000000000000000) & ~v58 ^ v56 ^ v55, 49);
  v59 = (v54 ^ 0x8000000000000000) & (v51 ^ 0x7FFFFFFFFFFFFFFFLL) ^ v58;
  v60 = v54 ^ 0x8000000000000000 ^ v56 & ~v55;
  v61 = v51 ^ (v54 ^ 0x7FFFFFFFFFFFFFFFLL) & v55 ^ v59 ^ 0x48962A0BF24E1AE0;
  v62 = v58 & ~v57 ^ v55 ^ v60;
  v63 = __ROR8__(__ROR8__((((((unint64_t)v40 ^ 0x157DE187BA769A54) << 49) ^ (0xFFFE000000000000* (v40 ^ 0x157DE187BA769A54)) ^ (((((unint64_t)v40 ^ 0x157DE187BA769A54) << 49) ^ 0xA67E72754E598E2FLL) + 0x59818D8AB1A671D1))+ 0x59818D8AB1A671D1) ^ (((unint64_t)v40 ^ 0x157DE187BA769A54) >> 15), 6) ^ 0xF1B4A69DC5CAA414, 58);
  v64 = v60 ^ 0xA1FDF52D9AF9F061;
  *(_QWORD *)&v40 = __ROR8__(__ROR8__(v59, 29) ^ 0x2BFEC0E51E61C2FDLL, 35);
  v65 = v63 + (v40 ^ 0x4BF1A68AB39CB1D9) - 2 * (v63 & (v40 ^ 0x4BF1A68AB39CB1D9));
  v66 = v63 ^ 0x917AAA3CD96CD60ELL;
  v67 = v61 ^ __ROR8__(v61, 61) ^ (v61 >> 39) ^ (v61 << 25);
  *((_QWORD *)&v40 + 1) = v62 ^ 0x776FAB65F4A9803ALL;
  *(_QWORD *)&v40 = v62;
  v68 = (v40 >> 10) ^ v62 ^ 0x776FAB65F4A9803ALL ^ __ROR8__(v62 ^ 0x776FAB65F4A9803ALL, 17);
  v69 = (v66 >> 41) ^ __ROR8__(v66, 7);
  if ((v67 & 0x400000) != 0)
    v70 = -4194304;
  else
    v70 = 0x400000;
  v71 = v67 ^ __ROR8__(v64, 6) ^ ((v64 ^ (v64 >> 1) ^ -(uint64_t)(v64 ^ (v64 >> 1)) ^ ((v64 << 63)
                                                                                    - (v64 ^ (v64 >> 1) ^ (v64 << 63))))
                                + (v64 << 63));
  v72 = (v70 + v67) ^ 0xFFFFFFFFFFBFFFFFLL;
  v73 = ((v69 ^ -(uint64_t)v69 ^ (v66 - (v69 ^ v66))) + v66) ^ (v66 << 23);
  v74 = v65 ^ (v65 >> 28) ^ __ROR8__(v65, 19) ^ (v65 << 36) ^ v73;
  v75 = v73 ^ v68;
  v76 = v73 ^ v68 ^ 0x1DDBEAD97D2A60;
  v77 = v72 & v71;
  v78 = (v68 ^ 0x1DDBEAD97D2A60) & ~v71;
  if (!*(_BYTE *)(*(_QWORD *)(v0 + 9712) + 23))
    v73 ^= v68 ^ 0x1DDBEAD97D2A60;
  v79 = v67 & ~v74 ^ v76;
  v80 = v77 & 0x8000000;
  v81 = (v75 ^ 0xFFE224152682D59FLL) & v74;
  if ((v74 & v77 & 0x8000000) != 0)
    v80 = -(uint64_t)v80;
  v82 = (v80 + v74) ^ v77 & 0xFFFFFFFFF7FFFFFFLL;
  v83 = v73 & (v68 ^ 0xFFE224152682D59FLL) ^ v71;
  v84 = __ROR8__(__ROR8__((v82 ^ v79) & 0x8DE14CEEDA61307FLL, 13) ^ 0x7F4D3254A3464ACBLL, 51) ^ 0x2EEBD86859797FDFLL | (v82 ^ v79) & 0x721EB311259ECF80 ^ 0x10163310219A8E00;
  v85 = v67 ^ 0xE2E4CD6B12D4B3B0 ^ v78 ^ v82;
  v86 = (v84 >> 19) & 0x59B86912944 ^ 0x7A5EFB3A23D1358;
  v87 = v85 >> (v48 & 0x3D) >> (v48 & 0x3D ^ 0x3D);
  v88 = v83 ^ 0x3318D22A1B3BD713;
  *((_QWORD *)&v90 + 1) = (v86 >> 21) - ((v86 >> 20) & 0x7A5EFB3A22) - 0x17653FC2D08262EFLL;
  *(_QWORD *)&v90 = *((_QWORD *)&v90 + 1) ^ (v86 << 43);
  v89 = v90 >> 43;
  v91 = v68 ^ v81 ^ 0x57C975E1B2D0D1B8 ^ v83;
  v92 = (v85 >> 39) & 0x1000000;
  if ((v92 & (8 * v85)) != 0)
    v92 = -v92;
  v93 = v85 ^ (v85 << 25) ^ (v92 + 8 * v85) ^ (((v85 >> 39) | 0xFFFFFFFFFEFFFFFFLL)
                                             + ((v85 >> 39) ^ v87 ^ 0x1000000)
                                             + 1);
  v94 = __ROR8__(((v84 >> 28) | (v84 << 45)) ^ v84 ^ (v84 >> 19) & 0x1A64796ED6BBLL ^ v89, 4);
  v95 = ((16 * v94) ^ (v84 << 36)) & 0xFFFFFFFFFFFFFFF0 | (v94 >> 60);
  v96 = v79 ^ 0xD9321B1807A54237 ^ __ROR8__(v79 ^ 0xD9321B1807A54237, 7) ^ ((v79 ^ 0xD9321B1807A54237) >> 41) ^ ((v79 ^ 0xD9321B1807A54237) << 23);
  v97 = (v88 >> 1) ^ v88;
  v98 = (v95 - (v95 ^ v96)) ^ -(uint64_t)v96;
  v99 = v96 & 0x8000000000000;
  v100 = (v88 & 0x80000 | (v88 << 63)) ^ __ROR8__(v88, 6) ^ (v97 & 0x67E5AC529CB2B19CLL | (v88 >> 1) & 0x181A53AD634D4E63 ^ v88 & 0x981A53AD63454E63);
  v101 = v93 ^ v100;
  v102 = __ROR8__(__ROR8__(v91, 7) & 0xFE00000000000007 ^ __ROR8__((v91 >> 10) + v91 - 2 * ((v91 >> 10) & v91), 61) ^ 0x34226B182EE84E4ELL, 3) ^ __ROR8__(v91, 17);
  v103 = v102 ^ 0xC6844D6305DD09C9;
  v104 = (v102 ^ 0xC6844D6305DD09C9) & ~(v93 ^ v100);
  if ((v98 & v96 & 0x8000000000000) != 0)
    v99 = -v99;
  v105 = v99 + v98;
  v106 = v103 & v96;
  v107 = v103 + v96;
  v108 = (v105 ^ v96 & 0xFFF7FFFFFFFFFFFFLL) + v95;
  v109 = v107 - 2 * v106;
  v110 = v108 ^ v100 & ~v93;
  v111 = v93 & ~v108 ^ v109;
  v112 = v110 ^ 0xDE1CA53CC441A02 ^ v111;
  v113 = v104 ^ v93 ^ v110;
  v114 = v109 & (v102 ^ 0x397BB29CFA22F636) ^ v101;
  v115 = v108 & ~v109;
  *((_QWORD *)&v117 + 1) = v112 ^ (v112 >> 19);
  *(_QWORD *)&v117 = v112;
  v116 = v117 >> 52;
  *((_QWORD *)&v117 + 1) = v113 ^ 0x8CEE1D69D550E5FLL;
  *(_QWORD *)&v117 = v113;
  v118 = v102 ^ v114 ^ 0x81422D35E9FFC65CLL ^ v115 ^ __ROR8__(v102 ^ v114 ^ 0x81422D35E9FFC65CLL ^ v115, 10) ^ ((v102 ^ v114 ^ 0x81422D35E9FFC65CLL ^ v115) >> 17) ^ ((v102 ^ v114 ^ 0x81422D35E9FFC65CLL ^ v115) << 47);
  v119 = (v117 >> 61) ^ v113 ^ 0x8CEE1D69D550E5FLL ^ ((v113 ^ 0x8CEE1D69D550E5FLL) >> 39) ^ ((v113 ^ 0x8CEE1D69D550E5FLL) << 25);
  *((_QWORD *)&v117 + 1) = v114;
  *(_QWORD *)&v117 = v114 ^ 0x73E735CE3C270102;
  v120 = (v117 >> 1) ^ v114 ^ 0x73E735CE3C270102 ^ ((v114 ^ 0x73E735CE3C270102uLL) >> 6) ^ ((v114 ^ 0x73E735CE3C270102) << 58);
  v121 = v119 ^ v120;
  v122 = ((v111 >> 41) | ((v111 ^ 0x98D780F384182967) << 57)) ^ __ROR8__((((v111 ^ 0x98D780F384182967) & 0x1FFFFFFFFFFLL) << 14) ^ __ROR8__(v111 ^ 0x98D780F384182967 ^ ((v111 ^ 0x98D780F384182967) >> 7), 9) ^ 0xEA9873070A3F9A6ELL, 55) ^ 0x30E60E147F78B615;
  v123 = __ROR8__(__ROR8__(v112, 7) & 0xFE00000000000FFFLL ^ v116 ^ 0x252F420C80144439, 12) ^ __ROR8__(v112, 28) ^ v122;
  v124 = v118 & ~(v119 ^ v120);
  *(_QWORD *)&v117 = __ROR8__(__ROR8__(v118, 32) ^ __ROR8__(v122, 32) ^ 0xFF24C0F1FC5132C2, 32);
  v125 = v117 ^ 0xFC5132C2FF24C0F1 ^ (v123 ^ 0xBC6DAD0BDF37FEBBLL) & v119;
  v123 ^= 0x439252F420C80144uLL;
  v126 = (v117 ^ 0x3AECD3D00DB3F0ELL) & v123;
  v127 = v123 ^ v120 & ~v119;
  v128 = (v117 ^ 0xFC5132C2FF24C0F1) & ~v118 ^ v121;
  v129 = v127 ^ 0x9669D1232B5C28A4 ^ v125;
  v130 = v118 ^ 0x82ABCDAC52312543 ^ v126 ^ v128;
  *((_QWORD *)&v117 + 1) = v128;
  *(_QWORD *)&v117 = v128 ^ 0x770298E464E2FFC0;
  v131 = v119 ^ 0x64ADE1BAEB790508 ^ v124 ^ v127 ^ ((v119 ^ 0x64ADE1BAEB790508 ^ v124 ^ v127) >> 61) ^ ((v119 ^ 0x64ADE1BAEB790508 ^ v124 ^ v127) >> 39) ^ (8 * (v119 ^ 0x64ADE1BAEB790508 ^ v124 ^ v127)) ^ ((v119 ^ 0x64ADE1BAEB790508 ^ v124 ^ v127) << 25);
  v132 = v128 ^ 0x770298E464E2FFC0 ^ (v128 >> 6) ^ (v117 >> 1) ^ 0x1DC0A6391938BFFLL;
  v125 ^= 0xF502C960F8379034;
  *(_QWORD *)&v117 = __ROR8__(v125, 7);
  v133 = v130 ^ (v130 << 47) ^ __ROR8__(v130, 10) ^ ((v130 >> 17) | 0x67D3C8D67889F774) ^ ((__ROR8__(__ROR8__(v130 >> 17, 9) ^ 0xBC17498A0994FE6DLL, 55) ^ 0xB6BF233AAE8AD3F3)+ ((v130 >> 17) & 0x37298776088BLL));
  v134 = ((v125 ^ v117) + (v125 >> 41) - 2 * ((v125 ^ v117) & (v125 >> 41))) ^ (v125 << 23);
  v135 = v129 ^ __ROR8__(v129, 19) ^ (v129 >> 28) ^ (v129 << 36) ^ v134;
  v136 = v133 & v134;
  *(_QWORD *)&v117 = __ROR8__(__ROR8__((v132 ^ -v132 ^ ((v128 << 58) - (v132 ^ (v128 << 58)))) + (v128 << 58), 62) ^ __ROR8__(v131, 62), 2);
  v137 = (v133 ^ v134) & v135;
  v138 = v117 & ~v131 ^ v135;
  v139 = v133 ^ v134 ^ v131 & ~v135;
  v140 = v139 ^ 0x23BDC08DBD0B00F6 ^ v138;
  v141 = v117 ^ v136;
  v142 = v131 ^ (v117 | v133) ^ v138 ^ 0xB91B598636141BB3;
  *(_QWORD *)&v117 = __ROR8__(v140, 19);
  v143 = v140 ^ v117;
  v26 = -41 * *(_BYTE *)(*(_QWORD *)(v0 + 9712) + 3);
  v144 = (v142 >> 61 >> (v26 & 6 ^ 2u) >> (v26 & 6 ^ 4u)) + 4 * (v142 >> 61);
  v145 = (v140 >> 28) ^ -(uint64_t)(v140 >> 28) ^ ((v140 ^ v117) - (v140 ^ v117 ^ (v140 >> 28)));
  v140 <<= 36;
  v146 = v145 + v143;
  v147 = v140 & 0x22951CC000000000;
  v148 = v133 ^ v137;
  v149 = v146 & 0xDD6AE33833B5EC1ELL ^ v140 & 0xDD6AE33000000000;
  LOBYTE(v140) = v144 ^ 0x96;
  v150 = v146 & 0x22951CC7CC4A13E1 ^ v147;
  LOBYTE(v147) = (v144 ^ 0x96) + 59;
  v151 = *(_BYTE *)(v21 + (v144 ^ 0x61));
  LOBYTE(v147) = v147 ^ v140;
  v152 = v149 | v150;
  LOBYTE(v149) = ((2 * v147) & 0x64) + (v147 ^ 0xB2);
  v153 = (v147 & v151 & 8) == 0;
  v154 = v147 + (v151 & 8);
  LOBYTE(v150) = v149 - (v151 & 8);
  v155 = v141 ^ 0xF3E8F9C9C239B274;
  v156 = v150 + 78;
  if (!v153)
    v154 = v156;
  v157 = v148 ^ 0xA0BCAC7EA7C95C80 ^ v141;
  v158 = v139 ^ 0xAEDF28659ED5B043;
  **(_BYTE **)(v0 + 9712) = v152;
  v159 = v142 ^ (8 * v142) ^ ((v151 & 0xF7 ^ v154 ^ 0x77) + 115);
  *((_QWORD *)&v160 + 1) = v141;
  *(_QWORD *)&v160 = v141 ^ 0xF3E8F9C9C239B274;
  v161 = (v159 ^ -v159 ^ ((v142 << 25) - (v159 ^ (v142 << 25)))) + (v142 << 25);
  v162 = v158 << (v20 & 0x30) << (v20 & 0x30 ^ 0x39u);
  v9[28] = BYTE1(v152);
  v163 = v161 ^ (v142 >> 39);
  v164 = *(_QWORD *)(v0 + 9712);
  v9[7] = BYTE2(v152);
  v165 = v10 + 8;
  v166 = *(_BYTE *)(v10 + 8 + ((-97 * BYTE3(v152)) ^ 0x77));
  *(_BYTE *)(v164 + 34) = BYTE4(v161);
  *(_BYTE *)(v164 + 52) = BYTE5(v152);
  *(_BYTE *)(v164 + 23) = v166 ^ 0xCD;
  v167 = (v160 >> 1) ^ v155 ^ (v155 >> 6);
  *(_BYTE *)(v164 + 67) = v163 >> (v97 & 0x18) >> (v97 & 0x18 ^ 0x18);
  v168 = v158 ^ (v158 >> 41) ^ (v158 >> 7);
  v169 = v168 ^ (v158 << 23);
  v9[33] = BYTE6(v152);
  v9[29] = BYTE2(v163);
  v9[13] = v163;
  v9[22] = BYTE4(v152);
  v9[27] = BYTE2(v167);
  v9[16] = v167;
  *(_BYTE *)(v164 + 53) = BYTE5(v161);
  *(_QWORD *)&v160 = __ROR8__(v157, 10);
  v170 = v157 ^ v160 ^ (v157 >> 17);
  v9[36] = BYTE1(v163);
  v9[20] = BYTE3(v167);
  *(_BYTE *)(v164 + 46) = (v157 ^ v160 ^ (v157 >> 17)) >> 24;
  v171 = v170 ^ (v157 << 47);
  *(_BYTE *)(v164 + 55) = BYTE6(v161);
  *(_BYTE *)(v164 + 45) = BYTE1(v167);
  *(_BYTE *)(v164 + 50) = HIBYTE(v152);
  *(_BYTE *)(v164 + 33) = v170;
  v9[21] = (v167 ^ (v155 << 58)) >> 56;
  v9[34] = BYTE5(v167);
  *(_BYTE *)(v164 + 5) = BYTE6(v167);
  *(_BYTE *)(v164 + 87) = BYTE1(v170);
  *(_BYTE *)(v164 + 65) = HIBYTE(v161);
  *(_BYTE *)(v164 + 83) = BYTE2(v170);
  v9[38] = BYTE4(v167);
  v172 = v169 ^ v162;
  v173 = (((BYTE4(v171) >> (v53 & 6)) >> (v53 & 6 ^ 6)) + 4 * BYTE4(v171)) ^ 0x96;
  *(_BYTE *)(v164 + 16) = (*(_BYTE *)(v21
                                    + ((((BYTE4(v171) >> (v53 & 6)) >> (v53 & 6 ^ 6))
                                                       + 4 * BYTE4(v171)) ^ 0x61)) ^ v173 ^ (v173 + 59) ^ 0x77)
                        + 115;
  LODWORD(v170) = *(unsigned __int8 *)(v11 + (((v170 >> 36) & 0xF0 | (v171 >> 44) & 0xF) ^ 0xE9));
  v9[3] = v168;
  *(_BYTE *)(v164 + 18) = BYTE6(v171);
  *(_BYTE *)(v164 + 66) = BYTE1(v172);
  v9[12] = ((v170 >> 5) | (8 * v170)) ^ ((v170 >> 5) << 6) ^ (4 * ((v170 >> 5) | (8 * v170))) ^ 0x50;
  v9[6] = HIBYTE(v171);
  *(_BYTE *)(v164 + 62) = BYTE2(v172);
  *(_BYTE *)(v164 + 14) = BYTE3(v172);
  LOBYTE(v165) = *(_BYTE *)(v165 + ((-97 * BYTE4(v172)) ^ 0x77));
  *(_BYTE *)(v164 + 48) = BYTE5(v172);
  *(_BYTE *)(v164 + 12) = HIBYTE(v172);
  *(_BYTE *)(v164 + 15) = BYTE6(v172);
  *(_BYTE *)(v164 + 3) = v165 ^ 0xCD;
  *(_DWORD *)(*(_QWORD *)v8 + 16) = v24 + 1;
  v174 = *(unsigned __int8 *)(v164 + 13);
  v175 = __ROR8__((__ROR8__(*(unsigned __int8 *)(v164 + 21), 5) + 8 * *(unsigned __int8 *)(v164 + 32)) ^ 0x300AB4B00F6C08C5, 59) ^ (v174 << 24) ^ ((unint64_t)*(unsigned __int8 *)(v164 + 61) << 16) ^ ((unint64_t)*(unsigned __int8 *)(v164 + 72) << 32) ^ 0x1569601ED8118A6;
  v176 = v175
       + ((unint64_t)*(unsigned __int8 *)(v164 + 2) << 40)
       - 2 * (v175 & ((unint64_t)*(unsigned __int8 *)(v164 + 2) << 40));
  v177 = *(unsigned int *)(v164 + 76);
  v178 = *(unsigned __int8 *)(v164 + 35);
  v179 = (char *)*(&off_1004ECA20 + *(int *)(v0 + 9688)) - 12;
  v180 = (v179[((109 * *(_BYTE *)(v164 + 88)) ^ 0x13) + 10] - 54);
  v181 = *(unsigned __int8 *)(v164 + 28) | ((unint64_t)*(unsigned __int8 *)(v164 + 39) << 8) | ((unint64_t)*(unsigned __int8 *)(v164 + 70) << 24) | ((unint64_t)*(unsigned __int8 *)(v164 + 49) << 32) | ((unint64_t)*(unsigned __int8 *)(v164 + 29) << 16) | ((unint64_t)*(unsigned __int8 *)(v164 + 4) << 40);
  v182 = (v181 & 0x480028C2A201806 ^ ((unint64_t)*(unsigned __int8 *)(v164 + 25) << 48) & 0x80000000000000 | v181 & 0x4800A060040A4760 | v181 & 0xB37F5D13D1D5A099 ^ ((unint64_t)*(unsigned __int8 *)(v164 + 25) << 48) & 0x7F000000000000) ^ ((unint64_t)(((v179[((109 * *(_BYTE *)(v164 + 88)) ^ 0x13) + 10] - 54) ^ (v180 >> 5) ^ (v180 >> 2) ^ 0xFFFFFF83) - 37) << 56);
  v183 = (*(unsigned __int8 *)(v164 + 68) | ((unint64_t)*(unsigned __int8 *)(v164 + 69) << 16) | ((unint64_t)*(unsigned __int8 *)(v164 + 30) << 8) | ((unint64_t)*(unsigned __int8 *)(v164 + 93) << 24) | ((unint64_t)*(unsigned __int8 *)(v164 + 91) << 40) | ((unint64_t)*(unsigned __int8 *)(v164 + 24) << 48) | ((unint64_t)*(unsigned __int8 *)(v164 + 26) << 32)) ^ ((unint64_t)*(unsigned __int8 *)(v164 + 71) << 56);
  v184 = v176 ^ (v177 | ((unint64_t)*(unsigned __int8 *)(v164 + 8) << 48) | ((unint64_t)*(unsigned __int8 *)(v164 + 22) << 56));
  v185 = ((*(unsigned __int8 *)(v164 + 81) ^ (unint64_t)-(uint64_t)*(unsigned __int8 *)(v164 + 81) ^ (((unint64_t)*(unsigned __int8 *)(v164 + 9) << 8) - (*(unsigned __int8 *)(v164 + 81) | ((unint64_t)*(unsigned __int8 *)(v164 + 9) << 8))))
        + ((unint64_t)*(unsigned __int8 *)(v164 + 9) << 8)) ^ (((unint64_t)*(unsigned __int8 *)(v164 + 63) << 16) | ((unint64_t)*(unsigned __int8 *)(v164 + 6) << 40)) ^ (((unint64_t)*(unsigned __int8 *)(v164 + 84) << 32) | ((unint64_t)*(unsigned __int8 *)(v164 + 57) << 48) | ((unint64_t)*(unsigned __int8 *)(v164 + 31) << 24) | ((unint64_t)*(unsigned __int8 *)(v164 + 94) << 56)) ^ v183;
  v186 = v182 ^ 0x426480AD47A2D181 ^ v183;
  v187 = v184 ^ 0xD7D1532E303B0E9ELL;
  v188 = (v185 ^ 0x4AB51B3203373811) & (v184 ^ 0xD7D1532E303B0E9ELL);
  v189 = v186 ^ 0x7BE525190D1F0738;
  v190 = v186 ^ 0x841ADAE6F2E0F8C7;
  v191 = v189 ^ -v189 ^ (v188 + (v190 ^ v188) + 1);
  v192 = (*(unsigned __int8 *)(v164 + 89) | ((unint64_t)*(unsigned __int8 *)(v164 + 86) << 8) | ((unint64_t)*(unsigned __int8 *)(v164 + 56) << 24) | (v178 << 16) | ((unint64_t)((v179[((*(_BYTE *)(v164 + 37) + 111) ^ 0xB5) + 537] + ((((*(_BYTE *)(v164 + 37) + 111) ^ 0x1D) + 107) ^ (*(_BYTE *)(v164 + 37) + 111) ^ 0x1D)) ^ 0xD7u) << 32) | ((unint64_t)*(unsigned __int8 *)(v164 + 75) << 40)) ^ ((unint64_t)*(unsigned __int8 *)(v164 + 73) << 48);
  v193 = v184 ^ ((unint64_t)*(unsigned __int8 *)(v164 + 27) << 56) ^ v192;
  v153 = v192 == 0;
  v194 = v191 ^ v188;
  if (!v153)
    v191 = ~v194;
  v195 = v194 + 2 * (v191 & v188);
  v196 = v185 ^ (v193 ^ 0xC6B90DA27D88886) & (v184 ^ 0x282EACD1CFC4F161);
  v197 = v196 ^ 0x12FD505061959963 ^ v195;
  *((_QWORD *)&v198 + 1) = v189 & (v182 ^ 0xBD9B7F52B85D2E7ELL) ^ v193 ^ 0xC6B90DA27D88886;
  *(_QWORD *)&v198 = *((_QWORD *)&v198 + 1) ^ 0x10674643B76E819ELL;
  v199 = v196 ^ v187 ^ (v182 ^ 0x426480AD47A2D181) & (v193 ^ 0xF3946F25D8277779);
  v200 = v182 ^ 0x90251D5BB8974D28 ^ v190 & (v185 ^ 0xB54AE4CDFCC8C7EELL) ^ *((_QWORD *)&v198 + 1);
  v201 = (v198 >> 1) ^ *((_QWORD *)&v198 + 1) ^ 0x10674643B76E819ELL ^ ((*((_QWORD *)&v198 + 1) ^ 0x10674643B76E819EuLL) >> 6) ^ ((*((_QWORD *)&v198 + 1) ^ 0x10674643B76E819ELL) << 58);
  v202 = ((v199 ^ 0xA2A61364AF58642DLL) >> 39) ^ (8 * (v199 ^ 0xA2A61364AF58642DLL)) ^ ((v199 ^ 0xA2A61364AF58642DLL) << 25) ^ ((v199 ^ 0xA2A61364AF58642DLL ^ -(uint64_t)(v199 ^ 0xA2A61364AF58642DLL) ^ (((v199 >> 61) ^ 5) - ((v199 >> 61) ^ 5 ^ v199 ^ 0xA2A61364AF58642DLL))) + ((v199 >> 61) ^ 5));
  v203 = (((v200 << 54) ^ (0xFFC0000000000000 * v200) ^ ((v200 ^ (v200 >> 10)) - (v200 ^ (v200 >> 10) ^ (v200 << 54))))
        + (v200 ^ (v200 >> 10))) ^ (v200 >> 17);
  v204 = v202 ^ v201;
  v205 = v203 ^ (v200 << 47);
  v206 = v195 ^ 0x5297670CE2961DA5 ^ ((v195 ^ 0x5297670CE2961DA5) << 23) ^ ((v195 ^ 0x5297670CE2961DA5) >> 7) ^ (((v195 ^ 0x5297670CE2961DA5) >> 41) | ((v195 ^ 0x5297670CE2961DA5) << 57));
  v207 = v197 ^ (v197 << 36) ^ __ROR8__(v197, 19) ^ (__ROR8__(__ROR8__(v197, 33) ^ 0x4000000037029FA5, 31) >> 28) ^ v206;
  v208 = v207 ^ 0x6E053F4A8;
  *((_QWORD *)&v198 + 1) = v203;
  *(_QWORD *)&v198 = v205;
  v209 = (v198 >> 18) ^ __ROR8__(v206, 18);
  v210 = (v205 | ~(v202 ^ v201)) ^ __ROR8__(__ROR8__(v202 ^ v201 ^ 0x375C6CDA8BF53011 ^ v205, 23) ^ 0x159FDD9147264AE8, 41);
  *((_QWORD *)&v198 + 1) = ((((v207 ^ 0x6E053F4A8) >> 16) + (((v207 ^ 0x6E053F4A8) >> 16) ^ 0x7F01736D60F8C8B0) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
                         + ((v207 ^ 0x6E053F4A8) >> 16);
  *(_QWORD *)&v198 = *((_QWORD *)&v198 + 1) ^ ((v207 ^ 0x6E053F4A8) << 48);
  v211 = v202 ^ -(uint64_t)v202 ^ (v210 - (v210 ^ v202));
  v212 = v201 & ~v202;
  v213 = ((v198 >> 48) ^ 0x736D60F8C8B07F01) & v202;
  v214 = __ROR8__(v209 ^ 0xB95446B0223666EALL, 46);
  v215 = v207 & 0x2000000000000000;
  if ((v215 & v212) != 0)
    v215 = -v215;
  v216 = (v215 + v212) ^ v208 & 0xDFFFFFFFFFFFFFFFLL;
  v217 = (v214 ^ 0xE53F772664551AAELL) & v208;
  v218 = v214 ^ 0x1AC088D99BAAE551;
  v219 = v213 ^ v218;
  v220 = v218 & ~v205 ^ v204;
  v153 = (_DWORD)v174 == 0;
  v221 = v220 ^ 0xA1FDF52D9AF9F040;
  if (v153)
    v221 = 0;
  v222 = v216 ^ 0xE83D9ED516E369C5 ^ v219;
  v223 = v216 ^ 0xC8962A0BF24E1AE0 ^ (v211 + v210);
  v224 = v219 ^ 0x917AAA3CD96CD60ELL;
  v225 = v220 ^ 0xA1FDF52D9AF9F061 ^ ((v220 ^ 0xA1FDF52D9AF9F061) << 58) ^ (((v221 | v220 ^ 0xA1FDF52D9AF9F061) >> 6) ^ ((v220 ^ 0xA1FDF52D9AF9F061) >> 1) | ((v220 ^ 0xA1FDF52D9AF9F061) << 63));
  v226 = v223 ^ __ROR8__(v223, 61) ^ (v223 >> 39) ^ (v223 << 25);
  v227 = v205 ^ 0x776FAB65F4A9803ALL ^ v217 ^ v220;
  v228 = v225 ^ -(uint64_t)v225 ^ (v226 - (v226 ^ v225));
  v229 = v226 & 0x40000000000000;
  v230 = v226 & 0xFFBFFFFFFFFFFFFFLL;
  v231 = v228 & v226;
  if ((v228 & v229) != 0)
    v229 = -v229;
  v232 = ((v229 + v228) ^ v230) + 2 * v231;
  v233 = v232 ^ v225;
  v234 = v224 ^ __ROR8__(v224, 7) ^ (v224 >> 41) ^ (v224 << 23);
  v235 = v227 ^ (v227 << 47) ^ (v227 >> 10) ^ ((v227 >> 17) | (v227 << 54));
  v236 = v222 ^ __ROR8__(v222, 19) ^ (v222 >> 28) ^ (v222 << 36) ^ v234;
  v237 = v232 & v225 ^ v236;
  v238 = v233 & ~v236 ^ v234 ^ v235;
  v239 = __ROR8__((((v234 ^ v235) << 33) & 0xFC00000000000000 | __ROR8__(v234 ^ v235, 31) & 0x3FFFFFFFFFFFFFFLL) ^ 0x3D61EB412932A220, 58);
  v240 = v237 ^ 0x98B77F10B1BA9E36 ^ v238;
  v241 = v237 ^ __ROR8__(__ROR8__(v233, 13) ^ __ROR8__((~(2 * v232) + v232) & v235, 13) ^ 0x5BD6F081F59135ECLL, 51) ^ 0x3CF4F3D9346938CALL;
  v242 = v232 ^ v234 & ~v235;
  v243 = v241 >> 61;
  v244 = v238 - 0x26CDE4E7F85ABDC9 - ((2 * v238) & 0xB26436300F4A846ELL);
  v245 = v242 ^ v235 ^ (((v239 ^ 0xF6BFB488BC6BC7DFLL) << (v178 & 0x19) << (v178 & 0x19 ^ 0x19)) ^ (v239 >> 39) ^ 0x7A1E79605F4F0A5FLL) & v236;
  v246 = v242 ^ 0x3318D22A1B3BD713;
  v247 = v245 ^ 0x57D4AE0B6BADFBD8;
  v248 = v245 ^ 0x57D4AE0B6BADF800;
  if (!*(_BYTE *)(v164 + 73))
    v248 = v247;
  v249 = v246 ^ (v246 >> 1);
  if ((((v241 >> 61) - 1) & 0x80) != 0)
    v243 = 0;
  v250 = v249 & 0x40;
  *((_QWORD *)&v251 + 1) = v247;
  *(_QWORD *)&v251 = v248;
  v252 = v247 ^ (v247 >> 17) ^ (v251 >> 10);
  v253 = (v246 << 63) ^ __ROR8__(v246, 6);
  v254 = v241 ^ __ROR8__(v241, 39) ^ (v243 | (8 * v241));
  v255 = __ROR8__(v244, 54) & 0xFFFFFFFFFFFE03FFLL ^ __ROR8__(v244, 47) ^ 0x80FD18EF1C5543FALL;
  v256 = v249 & 0xFFFFFFFFFFFFFFBFLL;
  v257 = (0xFFFF800000000000 * v247) ^ (v247 << 47) ^ 0x2541E03F22E46D09 ^ (v252 - (v252 ^ (v247 << 47)));
  if ((v250 & v253) != 0)
    v250 = -(uint64_t)v250;
  v258 = (v250 + v253) ^ v256;
  v259 = ((v244 >> 41) | (v244 << 57)) ^ (v244 << 23) ^ __ROR8__(v255, 17);
  v260 = v240 ^ __ROR8__(v240, 19) ^ (v240 >> 28) ^ (v240 << 36) ^ v259;
  v261 = __ROR8__(__ROR8__(v257, 39) ^ 0x7E45C8DA124A83C0, 25) + v252;
  v262 = v254 ^ v258;
  v263 = v261 & ~(v254 ^ v258);
  v264 = v260 ^ 0xA1FD407E8C778E2ALL;
  v265 = v260 ^ 0xA1FD407E8C778E2ALL ^ v258 & ~v254;
  v266 = v261 ^ v259;
  v267 = v266 ^ 0xA1FD407E8C778E2ALL ^ v254 & (v260 ^ 0x5E02BF81738871D5);
  v268 = v265 ^ v254 ^ v263;
  v269 = (v265 ^ -(uint64_t)v265 ^ (2 * ((v267 ^ 0xDE1CA53CC441A02) & v265) - v265)) + (v267 ^ 0xDE1CA53CC441A02);
  v270 = v268 ^ 0x8CEE1D69D550E5FLL;
  v271 = (((v266 ^ 0xA1FD407E8C778E2ALL) & ~v261 ^ v262 ^ 0x2D0C97A149362CBLL)
        + ((v266 ^ 0xA1FD407E8C778E2ALL) & ~v261 ^ v262 | 0xFD2F3685EB6C9D34)
        + 1) ^ ((v266 ^ 0xA1FD407E8C778E2ALL) & ~v261 ^ v262) & 0x2D0C97A149362CBLL;
  *((_QWORD *)&v272 + 1) = v268 ^ 0x8CEE1D69D550E5FLL;
  *(_QWORD *)&v272 = v268;
  v273 = v261 ^ 0x47C66056EC22CF95 ^ (v266 ^ 0x5E02BF81738871D5) & v264 ^ v271;
  v274 = (v272 >> 61) ^ v268 ^ 0x8CEE1D69D550E5FLL ^ ((v268 ^ 0x8CEE1D69D550E5FLL) >> 39) ^ v269;
  *((_QWORD *)&v272 + 1) = v271;
  *(_QWORD *)&v272 = v271 ^ 0x73E735CE3C270102;
  v275 = (v272 >> 1) ^ v271 ^ 0x73E735CE3C270102 ^ ((v271 ^ 0x73E735CE3C270102) << 58) ^ ((v271 ^ 0x73E735CE3C270102) >> 6);
  v276 = (v274 + v269 - 2 * (v274 & v269)) ^ (v270 << 25);
  v277 = v276 ^ v275;
  v278 = v267 ^ 0x98D780F384182967 ^ __ROR8__(v267 ^ 0x98D780F384182967, 7) ^ ((v267 ^ 0x98D780F384182967) >> 41) ^ ((v267 ^ 0x98D780F384182967) << 23);
  v279 = v273 ^ __ROR8__(v273, 10) ^ (v273 >> 17) ^ (v273 << 47);
  v280 = v269 ^ v278 ^ __ROR8__(v269, 19) ^ (v269 >> 28) ^ (v269 << 36);
  v281 = v275 & ~v276 ^ v280;
  *(_QWORD *)&v272 = __ROR8__(__ROR8__(-(uint64_t)(v279 & ~(v276 ^ v275) ^ v276), 25) ^ __ROR8__((v281- (v279 & ~(v276 ^ v275) ^ v276 ^ v281)) ^ v279 & ~(v276 ^ v275) ^ v276, 25) ^ 0x42C9490FF3F562ALL, 39);
  v282 = ((v272 ^ 0x21FE7EAC54085929 ^ v281) + 2 * ((v272 ^ 0x21FE7EAC54085929) & v281)) ^ 0x64ADE1BAEB790508;
  v283 = __ROR8__(__ROR8__((v282 >> 36) & 0xE000000 ^ __ROR8__(v282, 39) ^ 0xC2353FDA137A45BFLL, 59) ^ 0xEA0787A4C1C5FC58, 30) ^ 0xBA352E82B281F39ALL;
  v284 = v279 ^ v278;
  if (((v279 ^ v278) & 0x200000000000000) != 0)
    v285 = 0xFE00000000000000;
  else
    v285 = 0x200000000000000;
  v286 = ((v285 + v284) ^ 0xFDFFFFFFFFFFFFFFLL) & v280;
  v287 = v277 ^ v278 & ~v279;
  v288 = v276 & ~v280 ^ v284;
  v289 = v288 ^ 0xF502C960F8379034;
  v290 = v279 ^ 0x82ABCDAC52312543 ^ v287 ^ v286;
  v291 = v290 ^ __ROR8__(v290, 10) ^ (v290 >> 17);
  v292 = v290 << 47;
  v293 = (v288 ^ 0xF502C960F8379034) >> 41;
  v294 = ((v283 & 0xD119790D3243CDBALL ^ (8 * v282) & 0xD119790D3243CDB8 | v283 & 0x2EE686F2CDBC3245 ^ (8 * v282) & 0x2EE686F2CDBC3240)
        + (v282 >> 39)
        - 2
        * ((v283 & 0xD119790D3243CDBALL ^ (8 * v282) & 0xD119790D3243CDB8 | v283 & 0x2EE686F2CDBC3245 ^ (8 * v282) & 0x2EE686F2CDBC3240) & (v282 >> 39))) ^ (v282 << 25);
  v295 = (((v281 + (v281 ^ 0x69962EDCD4A3D75BLL) + 1) ^ 0xFFFFFFFFFFFFFFF8) + v281) ^ v288;
  v296 = v287 ^ 0x770298E464E2FFC0;
  v297 = v291 & 0x4000000000000000;
  if ((v291 & 0x4000000000000000 & v292) != 0)
    v297 = -v297;
  v298 = v297 + v292;
  *((_QWORD *)&v300 + 1) = v287;
  *(_QWORD *)&v300 = v287 ^ 0x770298E464E2FFC0;
  v299 = v300 >> 1;
  v301 = (v293 | (v289 << 57)) ^ (v289 << 23) ^ ((v289 >> 7) + v289 - 2 * ((v289 >> 7) & v289));
  *((_QWORD *)&v300 + 1) = v287;
  *(_QWORD *)&v300 = v287 ^ 0x770298E464E2FFC0;
  v302 = v295 ^ __ROR8__(v295, 19) ^ (v295 >> 28) ^ (v295 << 36) ^ v301;
  v303 = v298 ^ v291 & 0xBFFFFFFFFFFFFFFFLL;
  v304 = __ROR8__(__ROR8__(v303 ^ v301, 38) ^ __ROR8__(v294 & (~(2 * v302) + v302), 38) ^ 0xC371B9F85FC1D362, 26);
  v305 = v302 & ~(v303 ^ v301);
  v306 = (v305 & v303) << (*(_BYTE *)(v164 + 21) & 1) << ((((*(_BYTE *)(v164 + 21) | 0xFE)
                                                          + (*(_BYTE *)(v164 + 21) & 1)
                                                          + 1) ^ 0xFE)
                                                        + (*(_BYTE *)(v164 + 21) & 1u));
  v307 = v299 ^ v296;
  v308 = v304 ^ 0xA8D7D546A6E26E93;
  v309 = v304 ^ 0xA8D7D546A6E26E93 ^ ((v304 ^ 0xA8D7D546A6E26E93) >> 7);
  v310 = v307 ^ (v300 >> 6);
  v311 = v301 & ~v303;
  v312 = __ROR8__(v309 & 0x329110948719C80FLL, 10) ^ __ROR8__(v309 ^ 0x329110948719C80FLL, 10);
  v313 = v294 ^ v310;
  v314 = v310 & ~v294 ^ v302;
  v315 = v311 & 0x800000000;
  if ((v313 & v311 & 0x800000000) != 0)
    v315 = -v315;
  v316 = v315 + v313;
  v317 = v305 + v303;
  v318 = v303 & ~v313;
  v319 = v313 & 0x40000;
  v153 = (v313 & 0x40000 & v311) == 0;
  v320 = v311 & 0xFFFFFFF7FFFFFFFFLL;
  if (!v153)
    v319 = -v319;
  v321 = __ROR8__(v314 ^ 0xF074D8B0DC6E7E17 ^ v304, 32);
  v322 = v316 & 0xFFFFFFFFFFFBFFFFLL ^ (v319 + v320);
  v323 = v322 ^ (v317 - v306);
  v324 = __ROR8__((v321 ^ -v321 ^ ((v321 ^ 0xFDA5D1231F1F97C9) + 0x25A2EDCE0E06837)) + 0x25A2EDCE0E06836, 32) ^ 0x9E83E58B22401736;
  v325 = v324 ^ __ROR8__(v324, 19) ^ (v324 >> 28);
  v326 = v294 ^ 0xE37C01731BA39442 ^ v318 ^ v314;
  *(_BYTE *)(v164 + 63) = BYTE2(v325);
  v327 = v325 ^ (v324 << 36);
  v328 = (__ROR8__(v312 ^ 0x4030E4724783F162, 54) ^ 0xC391C91E0FC58900) & v309;
  *(_BYTE *)(v164 + 31) = BYTE3(v325);
  *(_BYTE *)(v164 + 9) = BYTE1(v325);
  *(_BYTE *)(v164 + 81) = v325;
  v329 = v179[(BYTE4(v327) ^ 0xA7) + 801] ^ BYTE4(v327) ^ 0xEA;
  v330 = v326 ^ __ROR8__(v326, 61) ^ (v326 >> 39);
  v331 = v322 ^ 0x9B8A09540E116771 ^ ((v322 ^ 0x9B8A09540E116771) << 58) ^ ((v322 ^ 0x9B8A09540E116771) >> 1) ^ (((v322 ^ 0x9B8A09540E116771) >> 6) | ((v322 ^ 0x9B8A09540E116771) << 63));
  *(_BYTE *)(v164 + 6) = BYTE5(v327);
  *(_BYTE *)(v164 + 57) = BYTE6(v327);
  *(_BYTE *)(v164 + 61) = BYTE2(v330);
  v332 = v330 ^ (v326 << 25);
  *(_BYTE *)(v164 + 84) = (v329 < 0) | (2 * v329);
  *(_BYTE *)(v164 + 13) = (v330 ^ ((_DWORD)v326 << 25)) >> 24;
  *(_BYTE *)(v164 + 35) = BYTE2(v331);
  *(_BYTE *)(v164 + 94) = HIBYTE(v327);
  *(_BYTE *)(v164 + 21) = v330;
  *(_BYTE *)(v164 + 32) = BYTE1(v330);
  *(_BYTE *)(v164 + 56) = BYTE3(v331);
  *(_BYTE *)(v164 + 72) = BYTE4(v332);
  LODWORD(v330) = (BYTE5(v331) + 85);
  *(_BYTE *)(v164 + 8) = BYTE6(v332);
  v333 = v330 ^ 6;
  *(_BYTE *)(v164 + 86) = BYTE1(v331);
  *(_BYTE *)(v164 + 2) = BYTE5(v332);
  v334 = __ROR8__(((v323 << 62) | ((v323 ^ 0x9206B969C5084AE4) >> 2) & 0x7FFF) ^ __ROR8__(v323 ^ 0x9206B969C5084AE4 ^ ((v323 ^ 0x9206B969C5084AE4) >> 10) ^ (((v323 ^ 0x9206B969C5084AE4) >> 17) | ((v323 ^ 0x9206B969C5084AE4) << 54)), 49) ^ 0x5CC5081020A4801ELL, 15);
  *(_BYTE *)(v164 + 22) = HIBYTE(v332);
  *(_BYTE *)(v164 + 89) = v331;
  *(_BYTE *)(v164 + 37) = BYTE4(v331);
  LOBYTE(v330) = v179[((v330 ^ 6) & 0xB6 ^ ((v330 ^ 0x60D5D6B0)
                                                        + (v330 ^ 6 | 0x9F2A2949)
                                                        + 1) ^ 4)
                    + 270];
  *(_BYTE *)(v164 + 27) = HIBYTE(v331);
  *(_BYTE *)(v164 + 49) = (v334 ^ 0x3CB98A10204149uLL) >> 32;
  *(_BYTE *)(v164 + 73) = BYTE6(v331);
  v335 = v328 ^ ((v308 >> 41) | (v308 << 57));
  v336 = v335 ^ (v308 << 23);
  *(_BYTE *)(v164 + 4) = (unsigned __int16)((v334 ^ 0x3CB98A10204149uLL) >> 32) >> 8;
  *(_BYTE *)(v164 + 70) = (v334 ^ 0x10204149) >> 24;
  *(_BYTE *)(v164 + 26) = BYTE4(v336);
  *(_BYTE *)(v164 + 39) = (unsigned __int16)(v334 ^ 0x4149) >> 8;
  *(_BYTE *)(v164 + 25) = (v334 ^ 0x3CB98A10204149uLL) >> 48;
  *(_BYTE *)(v164 + 88) = HIBYTE(v334);
  *(_BYTE *)(v164 + 28) = v334 ^ 0x49;
  *(_BYTE *)(v164 + 29) = (v334 ^ 0x10204149) >> 16;
  *(_BYTE *)(v164 + 91) = BYTE5(v336);
  *(_BYTE *)(v164 + 68) = v335;
  *(_BYTE *)(v164 + 30) = BYTE1(v335);
  *(_BYTE *)(v164 + 93) = BYTE3(v336);
  *(_BYTE *)(v164 + 69) = BYTE2(v336);
  *(_BYTE *)(v164 + 24) = BYTE6(v336);
  *(_BYTE *)(v164 + 71) = HIBYTE(v336);
  *(_BYTE *)(v164 + 75) = (((v333 ^ v330) >> 2) | ((v333 ^ v330) << 6)) ^ 0x39;
  *(_DWORD *)(v164 + 76) = v177 + 1;
  v337 = *(_QWORD *)(v0 + 9736);
  v338 = *(_QWORD *)(v0 + 9728) + v337;
  *(_BYTE *)(v338 + 1) = (unsigned __int16)(v327 ^ 0x1687) >> 8;
  *(_BYTE *)(v338 + 2) = (v327 ^ 0x78AD1687) >> 16;
  *(_BYTE *)(v338 + 3) = (v327 ^ 0x78AD1687) >> 24;
  *(_WORD *)(v338 + 4) = (v327 ^ 0x2AB20DE978AD1687) >> 32;
  *(_BYTE *)(v338 + 6) = (v327 ^ 0x2AB20DE978AD1687) >> 48;
  *(_BYTE *)v338 = v327 ^ 0x87;
  *(_BYTE *)(v338 + 7) = (v327 ^ 0x2AB20DE978AD1687) >> 56;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 9744) + 8 * (int)((85 * (v337 > 0x17)) ^ *(_QWORD *)(v0 + 9720))))();
}

void sub_100299180(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 9736) = a1 + 8;
  JUMPOUT(0x100296E20);
}

uint64_t sub_10029918C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_DWORD *)(v0 + 9640);
  v2 = ((uint64_t (*)(char *))*(&off_1004ECA20 + (v1 ^ 0xD0)))((char *)*(&off_1004ECA20 + v1 + 60) - 12);
  v3 = *(_QWORD *)(v0 + 9616) + 1;
  v4 = **(_QWORD **)(v0 + 9672) + 1;
  v5 = **(_QWORD **)(v0 + 9656);
  v6 = **(_QWORD **)(v0 + 9664);
  v7 = *(_QWORD *)(v0 + 12280);
  v8 = v0 + 14656 + v7;
  *(_QWORD *)(v0 + 8248) = v8;
  *(_QWORD *)(v0 + 12376) = v8;
  *(_QWORD *)(v0 + 12280) = v7 + 44480;
  *(_QWORD *)(v0 + 12344) = v3;
  *(_QWORD *)(v0 + 12368) = *(_QWORD *)(v0 + 6792);
  *(_QWORD *)(v0 + 12336) = *(_QWORD *)(v0 + 9648);
  *(_QWORD *)(v0 + 12352) = v4;
  *(_QWORD *)(v0 + 12328) = v5;
  *(_QWORD *)(v0 + 12312) = v6;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 9744) + 8 * (v1 ^ (1564 * (v3 != 0)))))(v2);
}

uint64_t sub_10029926C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (v3 | (8
                                     * (((2 * (*(_QWORD *)(v2 + 9632) - 1)) & 0xEF7D5DBE)
                                      + ((*(_QWORD *)(v2 + 9632) - 1) ^ 0x77BEAEDF) == (v3 ^ 0x2514) + 2008975563)))))();
}

uint64_t sub_1002992C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  BOOL v5;
  int v6;

  if (*(_QWORD *)(v4 + 9728))
    v5 = v2 == 0;
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((44 * v6) ^ v3)) - 4))();
}

uint64_t sub_100299310(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  v5 = v3 - ((2 * v3 - 2) & (v4 - 301177112)) - 150588141;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((9288 * (((2 * v5) & 0xBFED9B5E ^ 0xAE0C0A08) + (v5 ^ 0xA8F0F8BB) == v2 + 1610009263)) ^ v2)))();
}

uint64_t sub_10029939C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(a2 + 8 * ((8726 * (((v2 == 0) ^ (v3 - 1)) & 1)) ^ v3)))();
}

uint64_t sub_1002993D8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((32
                                 * (((2 * v2) & 0xEF5EEF5A) + (v2 ^ 0x77AF77AD) == ((v3 + 3306) | 0x811) + 2007981954)) | ((((2 * v2) & 0xEF5EEF5A) + (v2 ^ 0x77AF77AD) == ((v3 + 3306) | 0x811) + 2007981954) << 10)) ^ v3)))();
}

uint64_t sub_100299438(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = ((2 * *(_QWORD *)(v4 + 9624)) & 0xFFB7A6F6) + (*(_QWORD *)(v4 + 9624) ^ 0x7FDBD37B);
  *(_DWORD *)(v4 + 5436) = v7 - ((2 * v7 + 4741386) & 0xA03BF4E) - 2061104084;
  *(_DWORD *)(v4 + 3220) = v3 + 2098462611 + (~(2 * v3) | 0x5D80099) + 33;
  v8 = *(_QWORD *)(v4 + 8248);
  *(_QWORD *)(v4 + 2120) = v8 + 4928;
  *(_QWORD *)(v4 + 3024) = v8 + 5712;
  *(_QWORD *)(v4 + 4208) = v8 + 6144;
  *(_QWORD *)(v4 + 5944) = v8 + 6180;
  *(_QWORD *)(v4 + 2456) = v8 + 6740;
  *(_QWORD *)(v4 + 9208) = v8 + 7296;
  *(_QWORD *)(v4 + 5320) = v8 + 19728;
  *(_QWORD *)(v4 + 8448) = v8 + 15360;
  *(_QWORD *)(v4 + 8344) = v8 + 11264;
  *(_QWORD *)(v4 + 3840) = v8 + 8240;
  *(_QWORD *)(v4 + 4536) = v8 + 10208;
  *(_QWORD *)(v4 + 2048) = v8 + 11504;
  *(_QWORD *)(v4 + 6960) = v8 + 12256;
  *(_QWORD *)(v4 + 3888) = v8 + 13808;
  *(_QWORD *)(v4 + 4200) = v8 + 13856;
  *(_QWORD *)(v4 + 9728) = v8 + 15152;
  *(_QWORD *)(v4 + 4336) = v8 + 15900;
  *(_QWORD *)(v4 + 3800) = v8 + 15936;
  *(_QWORD *)(v4 + 6192) = v8 + 19920;
  *(_QWORD *)(v4 + 5256) = v8 + 20872;
  *(_QWORD *)(v4 + 9360) = v8 + 34624;
  *(_QWORD *)(v4 + 5208) = v8 + 30492;
  *(_QWORD *)(v4 + 6736) = v8 + 21600;
  *(_QWORD *)(v4 + 3152) = v8 + 21760;
  *(_QWORD *)(v4 + 3816) = v8 + 23120;
  *(_QWORD *)(v4 + 6800) = v8 + 24416;
  *(_QWORD *)(v4 + 3880) = v8 + 24864;
  *(_QWORD *)(v4 + 3048) = v8 + 25072;
  *(_QWORD *)(v4 + 6160) = v8 + 25152;
  *(_QWORD *)(v4 + 3808) = v8 + 26192;
  *(_QWORD *)(v4 + 9720) = v8 + 30688;
  *(_QWORD *)(v4 + 6280) = v8 + 32128;
  *(_QWORD *)(v4 + 3872) = v8 + 33696;
  *(_QWORD *)(v4 + 8048) = v8 + 34232;
  *(_QWORD *)(v4 + 5936) = v8 + 34972;
  *(_QWORD *)(v4 + 3848) = v8 + 35008;
  *(_QWORD *)(v4 + 9232) = v8 + 40988;
  *(_QWORD *)(v4 + 8560) = v8 + 36496;
  *(_QWORD *)(v4 + 7896) = v8 + 35440;
  *(_QWORD *)(v4 + 4376) = v8 + 37952;
  *(_QWORD *)(v4 + 3864) = v8 + 39424;
  *(_QWORD *)(v4 + 1992) = v8 + 39472;
  *(_QWORD *)(v4 + 2448) = v8 + 39543;
  *(_QWORD *)(v4 + 6208) = v8 + 39575;
  *(_QWORD *)(v4 + 5248) = v8 + 39591;
  *(_QWORD *)(v4 + 6144) = v8 + 39792;
  *(_QWORD *)(v4 + 3208) = v8 + 40004;
  *(_QWORD *)(v4 + 8320) = v8 + 40036;
  v9 = *(uint64_t (**)(void))(a2 + 8 * ((107 * ((**(_BYTE **)(v5 + 8 * (v2 - 5602)) & 1) == 0)) ^ v2));
  *(_QWORD *)(v4 + 2040) = v8 + 41888;
  *(_QWORD *)(v4 + 2616) = v8 + 42324;
  v10 = *(_QWORD *)(v5 + 8 * (v2 ^ 0x1A2F));
  *(_QWORD *)(v4 + 5272) = v8 + 42548;
  *(_QWORD *)(v4 + 6688) = v8 + 43104;
  v11 = *(_QWORD *)(v5 + 8 * (v2 ^ 0x1929));
  v12 = *(_QWORD *)(v5 + 8 * (v2 - 5604));
  v13 = *(_QWORD *)(v5 + 8 * (v2 ^ 0x19EB));
  v14 = *(_QWORD *)(v5 + 8 * (v2 - 5701));
  *(_QWORD *)(v4 + 2240) = v8 + 476;
  *(_QWORD *)(v4 + 3856) = v8 + 672;
  *(_QWORD *)(v4 + 5264) = v8 + 1408;
  *(_QWORD *)(v4 + 3792) = v8 + 1616;
  *(_QWORD *)(v4 + 2480) = v8 + 4024;
  *(_QWORD *)(v4 + 8224) = v12;
  *(_QWORD *)(v4 + 8216) = v10;
  *(_QWORD *)(v4 + 7840) = v14;
  *(_QWORD *)(v4 + 2488) = v6;
  *(_QWORD *)(v4 + 8120) = v11;
  *(_QWORD *)(v4 + 8600) = v13;
  *(_QWORD *)(v4 + 2472) = v8 + 42356;
  *(_QWORD *)(v4 + 2464) = v8 + 1872;
  return v9();
}

uint64_t sub_100299824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6, _BYTE *a7)
{
  int v7;
  _BYTE *v8;
  char v9;
  char v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  uint64_t *v24;
  _BYTE *v25;
  _BYTE **v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;

  v22 = *(_QWORD *)(v13 + 9712);
  *(_DWORD *)(v22 + 40) = 0;
  v23 = v7 ^ 0x8A4;
  v24 = *(uint64_t **)(v13 + 9352);
  *(_DWORD *)(*v24 + 8) = 0;
  v25 = (_BYTE *)*v24;
  v26 = *(_BYTE ***)(v13 + 9336);
  v27 = *v26;
  v28 = (_BYTE *)*v18;
  v28[7] = -75;
  *(_BYTE *)(v22 + 85) = -45;
  *v20 = -124;
  *v15 = 83;
  v28[4] = 94;
  *(_BYTE *)(v22 + 10) = 103;
  v25[21] = -41;
  v28[1] = 14;
  v27[11] = -70;
  v28[5] = 111;
  v28[8] = -79;
  v28[2] = 39;
  *(_BYTE *)(v22 + 38) = -97;
  v27[5] = -109;
  *v27 = 47;
  v27[25] = 111;
  v28[9] = 5;
  *v21 = 5;
  v25[15] = 40;
  v25[3] = -107;
  *(_BYTE *)(v22 + 64) = 86;
  *(_BYTE *)(v22 + 47) = -86;
  *v25 = -118;
  *a6 = 27;
  v27[35] = -100;
  v27[4] = -6;
  v25[4] = -16;
  *(_BYTE *)(v22 + 44) = -40;
  *(_BYTE *)(v22 + 60) = -84;
  v25[20] = -92;
  *v14 = -25;
  v27[30] = 75;
  v25[5] = 100;
  v27[31] = 11;
  *(_BYTE *)(v22 + 80) = -3;
  v27[10] = -15;
  *v17 = 82;
  *(_BYTE *)(v22 + 11) = -108;
  v28[3] = -68;
  *v19 = -71;
  v29 = *v24;
  v30 = *v26;
  v31 = (_BYTE *)*v18;
  *v31 = 84;
  *(_BYTE *)(v22 + 1) = -10;
  *(_BYTE *)(v22 + 36) = 25;
  *v12 = 95;
  *(_BYTE *)(v22 + 54) = 25;
  *(_BYTE *)(v22 + 58) = 125;
  *(_BYTE *)(v29 + 12) = 44;
  *a7 = 42;
  *(_BYTE *)(v22 + 90) = 95;
  v31[6] = -87;
  v30[24] = -63;
  *(_BYTE *)(v22 + 7) = 102;
  *(_BYTE *)(v29 + 13) = -8;
  *(_BYTE *)(v22 + 82) = -4;
  *(_BYTE *)(v29 + 2) = 8;
  v30[15] = -117;
  v30[2] = -72;
  *(_BYTE *)(v29 + 1) = 83;
  v30[1] = 117;
  v30[14] = -4;
  *(_BYTE *)(v22 + 74) = 50;
  *(_BYTE *)(v22 + 51) = 55;
  *v11 = 52;
  *(_BYTE *)(v22 + 92) = 81;
  v30[8] = -60;
  *((_WORD *)v30 + 9) = 19189;
  v30[32] = -48;
  v30[23] = 123;
  *(_BYTE *)(v22 + 17) = -122;
  v30[26] = -16;
  v30[17] = 26;
  v30[37] = 29;
  v30[9] = -8;
  *(_BYTE *)(v22 + 20) = -92;
  *(_BYTE *)(v22 + 59) = v10;
  *(_BYTE *)(v29 + 14) = 24;
  *(_WORD *)(v29 + 6) = 12333;
  *(_BYTE *)(v22 + 19) = -40;
  *v8 = v9;
  v32 = *(_QWORD *)(v13 + 12376);
  v42 = *(_QWORD *)(v13 + 12344);
  v33 = *(_QWORD *)(v13 + 12336);
  v34 = *(_QWORD *)(v13 + 12368);
  v35 = v14;
  *(_QWORD *)(v13 + 9736) = 0;
  *(_QWORD *)(v13 + 9688) = v23 ^ 0x1911u;
  *(_QWORD *)(v32 + 40432) = v42;
  *(_QWORD *)(v32 + 40440) = v33 - 0x194C6113CD9FFCD4;
  *(_QWORD *)(v32 + 40448) = v34;
  *(_QWORD *)(v32 + 40456) = 0;
  *(_QWORD *)(v13 + 9704) = v32 + 40432;
  *(_DWORD *)(v32 + 24836) = 84008935;
  *(_DWORD *)(v32 + 24840) = 84008839;
  *(_DWORD *)(v32 + 24844) = *(_DWORD *)(v13 + 5436);
  *(_DWORD *)(v32 + 24848) = 84008871;
  *(_QWORD *)(v13 + 9696) = v32 + 24836;
  LODWORD(v42) = *(_DWORD *)(v22 + 40);
  v36 = *v24;
  v37 = *v26;
  *(_QWORD *)(v13 + 8144) = v18;
  v38 = (_BYTE *)*v18;
  v39 = *(_QWORD *)(v16 + 8 * (v23 ^ 0x14ED));
  *(_QWORD *)(v13 + 8584) = v20;
  *(_QWORD *)(v13 + 9664) = (v42 & (v23 ^ 0x119D) | 2) ^ v42 & 0x1842A24E | v42 & 0xE7BD5CB1;
  *(_QWORD *)(v13 + 8592) = v15;
  *(_QWORD *)(v13 + 9672) = v39 + 271;
  *(_QWORD *)(v13 + 8096) = v35;
  *(_QWORD *)(v13 + 8088) = v19;
  *(_QWORD *)(v13 + 8104) = v17;
  *(_QWORD *)(v13 + 9632) = v37;
  *(_QWORD *)(v13 + 9648) = v36;
  v40 = *(_QWORD *)(v13 + 9736);
  *(_QWORD *)(v13 + 9680) = v39 + 542;
  *(_QWORD *)(v13 + 9640) = v38;
  *(_DWORD *)(v13 + 12320) = v42;
  *(_QWORD *)(v13 + 9624) = v39 - 4;
  v41 = *(_QWORD *)(v13 + 9664) ^ 2;
  *(_QWORD *)(v13 + 9664) = v41 << 32;
  LODWORD(v42) = v41 - v42 + 3;
  if (v42 <= 1)
    v42 = 1;
  else
    v42 = v42;
  *(_QWORD *)(v13 + 9656) = v42;
  v43 = *(_QWORD *)(v13 + 9696);
  *(_QWORD *)(v13 + 9736) = v40;
  LODWORD(v43) = *(_DWORD *)(v43 + 4 * v40);
  v44 = *(_QWORD *)(v13 + 9688) - 2185;
  *(_DWORD *)(v13 + 9688) = v43 ^ (*(_QWORD *)(v13 + 9688) + 84006425);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v13 + 9744) + 8 * v44) - 4))();
}

uint64_t sub_10029A060@<X0>(int a1@<W0>, int a2@<W6>, int a3@<W7>, unint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * (int)(((((3 * ((a1 + 1898425561) & 0x8ED85BAF ^ a3)) ^ v8) + v6 == v5) * v4) ^ (a1 + 1898425561) & 0x8ED85BAF))
                            - (((((a1 + 1898425561) & 0x8ED85BAF) - 2318) | a2) ^ a4)))();
}

uint64_t sub_10029A398()
{
  int v0;
  _QWORD *v1;

  v1[1211] = 1223 * (v0 ^ 0x109Du);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1[1218] + 8 * (v0 ^ (14036 * (v1[1217] + 1 == v1[1207])))) - 12))();
}

uint64_t sub_10029AEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  char v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  _DWORD *v35;

  v13 = *(_BYTE **)(v8 + 9640);
  v13[8] = BYTE2(v11);
  v14 = *(_BYTE **)(v8 + 9632);
  v14[25] = BYTE1(v11);
  v15 = *(_BYTE **)(v8 + 9648);
  v15[21] = v11;
  v16 = *(_BYTE *)(v7 + (((v11 >> 20) & 0xF0 | (v11 >> 28)) ^ 5));
  **(_BYTE **)(v8 + 8584) = BYTE1(v9) - ((2 * BYTE1(v9)) & 0x60) - 80;
  v17 = *(_QWORD *)(v8 + 9712);
  *(_BYTE *)(v17 + 85) = v11 >> (v12 - 51);
  *v14 = HIBYTE(v11);
  v13[5] = BYTE4(v11);
  *(_BYTE *)(v17 + 10) = ((((v11 >> 20) & 0xF0 | (v11 >> 28)) ^ 0xF4) + v16 + 1) ^ 0x9B;
  *(_BYTE *)(v17 + 47) = BYTE6(v11);
  *(_BYTE *)(v17 + 38) = BYTE2(v9);
  v13[2] = v9;
  v18 = *(_QWORD *)(v8 + 9672);
  v19 = *(unsigned __int8 *)(v18 + (9 * BYTE3(v9)) - ((18 * BYTE3(v9)) & 0x108u) + 132);
  v13[7] = BYTE6(v9);
  v14[11] = BYTE4(v9);
  v20 = (v19 << (v10 & 2) << (v10 & 2 ^ 2)) | ((v19 & 0xC0) >> 6);
  v14[5] = BYTE5(v9);
  v13[4] = HIBYTE(v9);
  v21 = ((v10 >> 26) & 0xC0 | (v10 >> 34) & 0x3F) ^ 0x93;
  v22 = (v21 >> 6) & 0xFFFFFF03 | (4 * (v21 & 0x3F));
  v15[3] = v10;
  *(_BYTE *)(v17 + 11) = (v20 ^ 0x26 ^ ((16 * v20) | 0xD0)) + 48;
  *v15 = BYTE1(v10);
  v14[10] = ((((v10 >> 12) & 0xF0 | (v10 >> 20) & 0xF) ^ 0xF4)
           + *(_BYTE *)(v7 + (((v10 >> 12) & 0xF0 | (v10 >> 20) & 0xF) ^ 5))
           + 1) ^ 0x9B;
  v15[15] = v10 >> (v9 & 0x18) >> (((v9 & 0x18) - ((2 * v9) & 0x30) + 24) & 0xF8);
  v23 = ((v22 ^ 0xE2) + (v22 ^ 0x96) + *(_BYTE *)(*(_QWORD *)(v8 + 9680) + (v22 ^ 0xA2)) + 1) ^ 0x36;
  **(_BYTE **)(v8 + 8592) = 89 * v23 - ((50 * v23) & 0x60) - 80;
  v24 = *(_QWORD *)(v8 + 9624) + 11;
  v25 = *(unsigned __int8 *)(v24 + ((39 * BYTE5(v10)) ^ 0xB0)) ^ (39 * (v10 >> 40));
  v14[35] = v5;
  v15[4] = BYTE2(v5);
  *(_BYTE *)(v17 + 64) = BYTE1(v5);
  v14[4] = v10 >> (v6 & 0x38 ^ 0x30u) >> (v6 & 0x38 ^ 8u);
  v13[3] = v10 >> (v9 & 0x30) >> (v9 & 0x30 ^ 0x30);
  v15[20] = (((v25 & 0x80) != 0) | (2 * v25)) ^ 0xD6;
  **(_BYTE **)(v8 + 8600) = BYTE3(v5) + (~(2 * BYTE3(v5)) | 0x9F) - 79;
  *(_BYTE *)(v17 + 44) = BYTE4(v5);
  v26 = *(unsigned __int8 *)(v18 + ((9 * BYTE5(v5)) ^ 0x84));
  v13[1] = (((v26 >> 6) | (4 * v26)) ^ 0x26 ^ ((16 * ((v26 >> 6) | (4 * v26))) | 0xD0)) + 48;
  v34 = HIBYTE(v5);
  v27 = *(_BYTE *)(v24 + ((39 * BYTE6(v5)) ^ 0xB0)) ^ (((39 * BYTE6(v5)) ^ 0x1D)
                                                                        - ((2 * ((39 * BYTE6(v5)) ^ 0x1D)) & 0xEC)
                                                                        + 118);
  v14[30] = (v27 < 0) | (2 * v27);
  **(_BYTE **)(v8 + 8088) = BYTE2(a5) - ((2 * BYTE2(a5)) & 0x60) - 80;
  *(_BYTE *)(v17 + 80) = v34;
  v14[31] = a5;
  *(_BYTE *)(v17 + 60) = BYTE1(a5);
  v28 = *(unsigned __int8 *)(v18 + ((9 * BYTE3(a5)) ^ 0x84));
  v15[5] = BYTE4(a5);
  LODWORD(v34) = v28 >> 6;
  v13[9] = BYTE5(a5);
  **(_BYTE **)(v8 + 8120) = HIBYTE(a5) - ((2 * HIBYTE(a5)) & 0x60) - 80;
  **(_BYTE **)(v8 + 8104) = BYTE6(a5) - ((2 * BYTE6(a5)) & 0x60) - 80;
  v29 = ((((v28 >> 6) | (4 * v28)) + (((v28 >> 6) | (4 * v28)) ^ 0xFFFFFFD9) + 1) ^ 0xFFFFFFFC)
      + ((v28 >> 6) | (4 * v28));
  **(_BYTE **)(v8 + 8096) = (v29 ^ ((16 * v34) | 0xD0)) - 2 * (((v29 ^ ((16 * v34) | 0xD0)) + 48) & 0x31 ^ v29 & 1) - 32;
  *(_DWORD *)(v17 + 40) = *(_DWORD *)(v8 + 12320) + 1;
  v30 = **(_QWORD **)(v8 + 9352);
  LODWORD(v34) = *(_DWORD *)(v30 + 8);
  *(_DWORD *)(v8 + 12320) = v34;
  v31 = **(_QWORD **)(v8 + 9336);
  v32 = (uint64_t)*(&off_1004ECA20 + v12 - 202);
  *(_QWORD *)(v8 + 9640) = **(_QWORD **)(v8 + 8144);
  *(_QWORD *)(v8 + 9648) = v32 + 519;
  *(_QWORD *)(v8 + 9656) = v30;
  *(_QWORD *)(v8 + 9632) = v32 + 786;
  v33 = ((3 - v34) ^ v34) + 2 * ((3 - v34) & v34);
  *(_QWORD *)(v8 + 9664) = v31;
  *(_QWORD *)(v8 + 9680) = (unint64_t)((v34 ^ 3 ^ -(v34 ^ 3) ^ (v33
                                                                                                 - (v33 ^ v34 ^ 3)))
                                            + v33) << 32;
  LODWORD(v34) = ((-1360271041 - v34 + (v34 ^ 0xAEEBE93F) - ((2 * (v34 ^ 0xAEEBE93F)) & 0x5DD7D27E) + 3) ^ v34 ^ 3)
               - v34
               + 3;
  if (v34 <= 1)
    v34 = 1;
  else
    v34 = v34;
  *(_QWORD *)(v8 + 9672) = v34;
  v35 = *(_DWORD **)(v8 + 9696);
  *(_QWORD *)(v8 + 9736) = 0;
  *(_DWORD *)(v8 + 9688) = *v35 ^ (v12 + 84008012);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * ((v12 + 1196) ^ 0x43)) - 4))();
}

uint64_t sub_10029B758()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  int v7;

  v7 = (((v1 - 1582) | 6u) ^ v3) + v5 == v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((4 * v7) | (v7 << 6)) ^ v1))
                            - ((v1 + v6) & v4)
                            + 810))();
}

uint64_t sub_10029BA44()
{
  _QWORD *v0;
  int v1;

  return (*(uint64_t (**)(void))(v0[1218] + 8 * (v1 ^ (117 * (v0[1217] + 1 != v0[1209])))))();
}

void sub_10029C5A4()
{
  JUMPOUT(0x10029B660);
}

uint64_t sub_10029C5AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int16 v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  char v17;
  uint64_t v18;
  unsigned __int8 v19;
  unint64_t v20;
  int v21;
  char v22;
  char v23;
  char v24;
  unsigned __int8 v25;
  char v26;
  char v27;
  uint64_t v28;
  _BYTE *v29;

  *(_DWORD *)(v8 + 5188) = 38;
  *(_DWORD *)(v8 + 4956) = 0;
  *(_DWORD *)(v8 + 9376) = 193516593;
  *(_QWORD *)(v8 + 7048) = 0;
  *(_QWORD *)(v8 + 7056) = 0;
  *(_QWORD *)(v8 + 8264) = 0;
  *(_QWORD *)(v8 + 7728) = 0;
  *(_QWORD *)(v8 + 7720) = 0;
  *(_QWORD *)(v8 + 5480) = 0;
  *(_QWORD *)(v8 + 5472) = 0;
  v12 = *(_QWORD *)(v8 + 12376);
  v13 = *(_BYTE **)(v8 + 9656);
  v13[12] = BYTE1(v10);
  v14 = *(_BYTE **)(v8 + 9712);
  v14[90] = v10 >> ((a4 + 88) ^ 0xA5u);
  **(_BYTE **)(v8 + 8216) = v10 - ((2 * v10) & 0x60) - 80;
  v14[1] = HIBYTE(v10);
  v14[54] = BYTE4(v10);
  **(_BYTE **)(v8 + 8224) = BYTE3(v10) - ((2 * BYTE3(v10)) & 0x60) - 80;
  v15 = *(_BYTE **)(v8 + 9664);
  v15[17] = BYTE4(a5);
  v15[24] = BYTE6(v10);
  v13[1] = BYTE5(v10);
  v14[36] = BYTE3(a5);
  v16 = *(_BYTE **)(v8 + 9640);
  *v16 = a5;
  v15[14] = BYTE1(a5);
  **(_BYTE **)(v8 + 7840) = BYTE2(a5) - ((2 * BYTE2(a5)) & 0x60) - 80;
  v17 = *(_BYTE *)(*(_QWORD *)(v8 + 9632) + (((a5 >> 45) & 7 | (a5 >> 37) & 0xF8) ^ 0x14));
  v13[13] = HIBYTE(a5);
  v16[6] = BYTE6(a5);
  v14[51] = ((a5 >> 45) & 7 | (a5 >> 37) & 0xF8) ^ 0xE9 ^ v17;
  v18 = *(_QWORD *)(v8 + 9648);
  v19 = (((-49 * v6) ^ 0xBD) - 78) ^ 0x84 ^ *(_BYTE *)(v18 + ((-49 * v6) ^ 0xEBLL));
  v13[7] = BYTE3(v6);
  v14[7] = BYTE1(v6);
  v13[6] = BYTE5(v6);
  v20 = HIBYTE(v6);
  v14[74] = BYTE4(v6);
  v14[20] = (v19 >> 5) | (8 * v19);
  v13[2] = BYTE2(v6);
  v21 = (((207 * HIWORD(v6)) ^ 0xFFFFFFBD) - 78) ^ 0xFFFFFF84 ^ *(unsigned __int8 *)(v18
                                                                                   + ((-49 * BYTE6(v6)) ^ 0xEBLL));
  v15[26] = BYTE1(v7);
  v15[9] = v7;
  v15[19] = v20;
  v14[92] = (v21 >> 5) | (8 * v21);
  LOBYTE(v21) = *(_BYTE *)(v18 + ((-49 * BYTE2(v7)) ^ 0xEBLL)) ^ 0x84;
  LOBYTE(v21) = v21 + ((-49 * BYTE2(v7)) ^ 0xBD) - 78 - 2 * (v21 & (((-49 * BYTE2(v7)) ^ 0xBD) - 78));
  v13[14] = (v21 >> 5) | (8 * v21);
  v22 = *(_BYTE *)(v18 + ((-49 * BYTE3(v7)) ^ 0xEBLL));
  v15[15] = BYTE4(v7);
  v23 = v11 - 1;
  if ((v11 & 1) == 0)
    v23 = v11 + 1;
  v24 = v23 ^ 1;
  v25 = -49 * (v23 ^ 1);
  v15[1] = (((((-49 * BYTE3(v7)) ^ 0xBD) - 78) ^ 0x84 ^ v22) >> 5) | (8
                                                                                     * ((((-49 * BYTE3(v7)) ^ 0xBD) - 78) ^ 0x84 ^ v22));
  v15[32] = BYTE5(v7);
  v14[19] = ((15 * BYTE6(v7)) ^ *(_BYTE *)(v9 + ((15 * BYTE6(v7)) ^ 0x5BLL)) ^ 0x10) + 58;
  v26 = ((30 * v24) & 0x64 ^ 0x60) + (v25 ^ 0xF);
  v14[17] = HIBYTE(v7);
  v27 = *(_BYTE *)(v18 + (v25 ^ 0xEBLL));
  v15[23] = BYTE2(v5);
  v15[8] = BYTE3(v5);
  v14[82] = BYTE6(v5);
  v14[59] = BYTE4(v5);
  v15[2] = BYTE5(v5);
  v15[37] = HIBYTE(v11);
  v14[58] = ((v26 ^ 0x84 ^ v27) >> 5) | (8 * (v26 ^ 0x84 ^ v27));
  v15[18] = HIBYTE(v5);
  *(_DWORD *)(**(_QWORD **)(v8 + 9352) + 8) = *(_DWORD *)(v8 + 12320) + 1;
  v28 = *(_QWORD *)(v8 + 8248);
  *(_DWORD *)(v28 + 5792) = 1;
  *(_DWORD *)(v12 + 42912) = 2;
  *(_BYTE *)(v12 + 3088) = -1;
  v29 = *(_BYTE **)(v8 + 8344);
  v29[240] = -1;
  *(_BYTE *)(v12 + 3089) = -1;
  v29[241] = -1;
  *(_BYTE *)(v12 + 3090) = -1;
  v29[242] = -1;
  *(_BYTE *)(v12 + 3091) = -1;
  v29[243] = -1;
  *(_BYTE *)(v12 + 3092) = 0;
  v29[244] = 0;
  *(_BYTE *)(v12 + 3093) = 0;
  v29[245] = 0;
  *(_BYTE *)(v12 + 3094) = 0;
  v29[246] = 0;
  *(_BYTE *)(v12 + 3095) = 1;
  v29[247] = 0;
  *(_BYTE *)(v12 + 3096) = 0;
  v29[248] = -1;
  *(_BYTE *)(v12 + 3097) = 0;
  v29[249] = -1;
  *(_BYTE *)(v12 + 3098) = 0;
  v29[250] = -1;
  *(_BYTE *)(v12 + 3099) = 0;
  v29[251] = -1;
  *(_BYTE *)(v12 + 3100) = 0;
  v29[252] = -1;
  *(_BYTE *)(v12 + 3101) = 0;
  v29[253] = -1;
  *(_BYTE *)(v12 + 3102) = 0;
  v29[254] = -1;
  *(_BYTE *)(v12 + 3103) = 0;
  v29[255] = -1;
  *(_BYTE *)(v12 + 3104) = 0;
  v29[256] = -68;
  *(_BYTE *)(v12 + 3105) = 0;
  v29[257] = -26;
  *(_BYTE *)(v12 + 3106) = 0;
  v29[258] = -6;
  *(_BYTE *)(v12 + 3107) = 0;
  v29[259] = -83;
  *(_BYTE *)(v12 + 3108) = -1;
  v29[260] = -89;
  *(_BYTE *)(v12 + 3109) = -1;
  v29[261] = 23;
  *(_BYTE *)(v12 + 3110) = -1;
  v29[262] = -98;
  *(_BYTE *)(v12 + 3111) = -1;
  v29[263] = -124;
  *(_BYTE *)(v12 + 3112) = -1;
  v29[264] = -13;
  *(_BYTE *)(v12 + 3113) = -1;
  v29[265] = -71;
  *(_BYTE *)(v12 + 3114) = -1;
  v29[266] = -54;
  *(_BYTE *)(v12 + 3115) = -1;
  v29[267] = -62;
  *(_BYTE *)(v12 + 3116) = -1;
  *(_DWORD *)(v8 + 4952) = 252;
  v29[268] = -4;
  *(_BYTE *)(v12 + 3117) = -1;
  v29[269] = 99;
  *(_BYTE *)(v12 + 3118) = -1;
  v29[270] = 37;
  *(_BYTE *)(v12 + 3119) = -1;
  *(_QWORD *)(v8 + 2424) = v28 + 0x62AA055D109F5743;
  *(_QWORD *)(v8 + 2536) = v28 + 0x62AA055D109FB7B3;
  *(_QWORD *)(v8 + 2544) = v28 + 0x62AA055D109F4F73;
  *(_QWORD *)(v8 + 2528) = v28 + 0x62AA055D109F5013;
  *(_QWORD *)(v8 + 3104) = v28 + 0x62AA055D109F7D93;
  *(_QWORD *)(v8 + 3096) = v28 + 0x62AA055D109F2523;
  *(_QWORD *)(v8 + 2416) = v28 + 0x62AA055D109F9DC3;
  *(_QWORD *)(v8 + 3344) = v28 + 0x62AA055D109FBD83;
  *(_QWORD *)(v8 + 2712) = v28 + 0x62AA055D109F3B73;
  *(_QWORD *)(v8 + 3064) = v28 + 0x62AA055D109F3483;
  *(_QWORD *)(v8 + 2608) = v28 + 0x62AA055D109F4E13;
  *(_QWORD *)(v8 + 2688) = v28 + 0x62AA055D109FB643;
  *(_QWORD *)(v8 + 2256) = v28 + 0x62AA055D109F3853;
  *(_QWORD *)(v8 + 2128) = v28 + 0x62AA055D109F5A13;
  *(_QWORD *)(v8 + 2248) = v28 + 0x62AA055D109F6C13;
  *(_QWORD *)(v8 + 2064) = v28 + 0x62AA055D109F8143;
  *(_QWORD *)(v8 + 2072) = v28 + 0x62AA055D109F9763;
  *(_QWORD *)(v8 + 2056) = v28 + 0x62AA055D109FAAA3;
  *(_QWORD *)(v8 + 4440) = v28 + 0x62AA055D109FC3E3;
  *(_QWORD *)(v8 + 4432) = v28 + 0x62AA055D109FA3D3;
  *(_QWORD *)(v8 + 4424) = v28 + 0x62AA055D109FC063;
  *(_QWORD *)(v8 + 5376) = v28 + 0x62AA055D109F3C33;
  *(_QWORD *)(v8 + 5368) = v28 + 0x62AA055D109FCE13;
  *(_QWORD *)(v8 + 5360) = v28 + 0x62AA055D109FBA43;
  *(_QWORD *)(v8 + 4360) = v28 + 0x62AA055D109F2D33;
  *(_QWORD *)(v8 + 3232) = v28 + 0x62AA055D109FBE33;
  *(_QWORD *)(v8 + 3328) = v28 + 0x62AA055D109F5AD3;
  v29[271] = 81;
  *(_QWORD *)(v8 + 3304) = v28 + 0x62AA055D109F41F3;
  *(_QWORD *)(v8 + 3168) = v28 + 0x62AA055D109F3CD3;
  *(_QWORD *)(v8 + 4352) = v28 + 0x62AA055D109FC4E3;
  *(_QWORD *)(v8 + 3128) = v28 + 0x62AA055D109F29C3;
  *(_QWORD *)(v8 + 3296) = v28 + 0x62AA055D109FA603;
  *(_QWORD *)(v8 + 4472) = v28 + 0x62AA055D109FA283;
  *(_QWORD *)(v8 + 4488) = v28 + 0x62AA055D109F3DC3;
  *(_QWORD *)(v8 + 4480) = v28 + 0x62AA055D109F44B3;
  *(_QWORD *)(v8 + 3160) = v28 + 0x62AA055D109F3223;
  *(_QWORD *)(v8 + 3224) = v28 + 0x62AA055D109F4063;
  *(_QWORD *)(v8 + 3120) = v28 + 0x62AA055D109FBC83;
  *(_QWORD *)(v8 + 2168) = v28 + 16128;
  *(_QWORD *)(v8 + 2080) = v28 + 0x62AA055D109FC1E3;
  *(_QWORD *)(v8 + 2352) = v28 + 0x62AA055D109F7113;
  *(_QWORD *)(v8 + 2152) = v28 + 0x62AA055D109F2793;
  *(_QWORD *)(v8 + 2160) = v28 + 26384;
  *(_QWORD *)(v8 + 4104) = v28 + 0x62AA055D109F3183;
  *(_QWORD *)(v8 + 4152) = v28 + 0x62AA055D109FB483;
  *(_QWORD *)(v8 + 4144) = v28 + 0x62AA055D109FB263;
  *(_QWORD *)(v8 + 2400) = v28 + 0x62AA055D109F96C3;
  *(_QWORD *)(v8 + 2672) = v28 + 0x62AA055D109F7CD3;
  *(_QWORD *)(v8 + 2664) = v28 + 0x62AA055D109F5E63;
  *(_QWORD *)(v8 + 2328) = v28 + 0x62AA055D109F2913;
  *(_QWORD *)(v8 + 2320) = v28 + 0x62AA055D109FBF03;
  *(_QWORD *)(v8 + 2312) = v28 + 0x62AA055D109F3523;
  *(_QWORD *)(v8 + 2304) = v28 + 0x62AA055D109FC293;
  *(_QWORD *)(v8 + 3784) = v28 + 0x62AA055D109FB9A3;
  *(_QWORD *)(v8 + 4312) = v28 + 0x62AA055D109F6D63;
  *(_QWORD *)(v8 + 4224) = v28 + 0x62AA055D109F22F3;
  *(_QWORD *)(v8 + 2192) = v28 + 0x62AA055D109F7AA3;
  *(_QWORD *)(v8 + 2144) = v28 + 0x62AA055D109FB1A3;
  *(_QWORD *)(v8 + 3144) = v28 + 0x62AA055D109F4EB3;
  *(_QWORD *)(v8 + 4320) = v28 + 0x62AA055D109FBBC3;
  *(_QWORD *)(v8 + 2184) = v28 + 0x62AA055D109FC693;
  *(_QWORD *)(v8 + 3832) = v28 + 0x62AA055D109F2DF3;
  *(_QWORD *)(v8 + 2112) = v28 + 0x62AA055D109F2F43;
  *(_QWORD *)(v8 + 2032) = v28 + 0x62AA055D109F4823;
  *(_QWORD *)(v8 + 7512) = v28 + 0x62AA055D109F3383;
  *(_QWORD *)(v8 + 4280) = v28 + 0x62AA055D109F2C63;
  *(_QWORD *)(v8 + 7736) = v28 + 0x62AA055D109F72A3;
  *(_QWORD *)(v8 + 6088) = v28 + 0x62AA055D109F2193;
  *(_QWORD *)(v8 + 6728) = v28 + 0x62AA055D109F3E63;
  *(_QWORD *)(v8 + 4416) = v28 + 0x62AA055D109F6F13;
  *(_QWORD *)(v8 + 5992) = v28 + 0x62AA055D109F7C23;
  *(_QWORD *)(v8 + 4296) = v28 + 0x62AA055D109F94B3;
  *(_QWORD *)(v8 + 9304) = v28 + 0x62AA055D109F7553;
  *(_QWORD *)(v8 + 6768) = v28 + 0x62AA055D109F2EA3;
  *(_QWORD *)(v8 + 6696) = v28 + 0x62AA055D109FC753;
  *(_QWORD *)(v8 + 5192) = v28 + 0x62AA055D109F7063;
  *(_QWORD *)(v8 + 3896) = v28 + 0x62AA055D109F9823;
  *(_QWORD *)(v8 + 4184) = v28 + 0x62AA055D109FA323;
  *(_QWORD *)(v8 + 3088) = v28 + 0x62AA055D109F2233;
  *(_QWORD *)(v8 + 5384) = v28 + 0x62AA055D109F9D13;
  *(_QWORD *)(v8 + 3248) = v28 + 0x62AA055D109F4153;
  *(_QWORD *)(v8 + 3280) = v28 + 0x62AA055D109FCD63;
  *(_QWORD *)(v8 + 3240) = v28 + 0x62AA055D109F4613;
  *(_QWORD *)(v8 + 4240) = v28 + 0x62AA055D109F6E03;
  *(_QWORD *)(v8 + 4512) = v28 + 0x62AA055D109F6FB3;
  *(_QWORD *)(v8 + 272) = v28 + 0x62AA055D109F6E07;
  *(_QWORD *)(v8 + 128) = v28 + 0x62AA055D109FCD67;
  *(_QWORD *)(v8 + 264) = v28 + 0x62AA055D109F4617;
  *(_QWORD *)(v8 + 120) = v28 + 0x62AA055D109F4157;
  *(_QWORD *)(v8 + 6200) = v28 + 0x62AA055D109F42B3;
  *(_QWORD *)(v8 + 6304) = v28 + 0x62AA055D109F2693;
  *(_QWORD *)(v8 + 7568) = v28 + 0x62AA055D109F5963;
  *(_QWORD *)(v8 + 2232) = v28 + 0x62AA055D109F2BC3;
  *(_QWORD *)(v8 + 2432) = v28 + 0x62AA055D109F7B73;
  *(_QWORD *)(v8 + 5920) = v28 + 0x194C6113CDA05C34;
  *(_DWORD *)(v8 + 5668) = v28 + 1836851709;
  *(_DWORD *)(v8 + 5908) = v28 + 1836852013;
  *(_DWORD *)(v8 + 5620) = v28 + 1836851977;
  *(_DWORD *)(v8 + 5804) = v28 + 1836851737;
  *(_DWORD *)(v8 + 5888) = v28 + 1836851549;
  *(_DWORD *)(v8 + 5564) = v28 + 1836852073;
  *(_DWORD *)(v8 + 5720) = v28 + 1836851805;
  *(_DWORD *)(v8 + 5848) = v28 + 1836851705;
  *(_DWORD *)(v8 + 5892) = v28 + 1836851625;
  *(_DWORD *)(v8 + 5780) = v28 + 1836851845;
  *(_DWORD *)(v8 + 5548) = v28 + 1836851729;
  *(_DWORD *)(v8 + 5832) = v28 + 1836851597;
  *(_DWORD *)(v8 + 5600) = v28 + 1836851925;
  *(_DWORD *)(v8 + 5656) = v28 + 1836851825;
  *(_DWORD *)(v8 + 5748) = v28 + 1836851713;
  *(_DWORD *)(v8 + 5552) = v28 + 1836851933;
  *(_DWORD *)(v8 + 5824) = v28 + 1836851857;
  *(_DWORD *)(v8 + 5576) = v28 + 1836852001;
  *(_DWORD *)(v8 + 5568) = v28 + 1836851905;
  *(_DWORD *)(v8 + 6224) = v28 + 1836851945;
  *(_DWORD *)(v8 + 5836) = v28 + 1836852077;
  *(_DWORD *)(v8 + 5756) = v28 + 1836851585;
  *(_DWORD *)(v8 + 5640) = v28 + 1836851669;
  *(_DWORD *)(v8 + 5880) = v28 + 1836852097;
  *(_DWORD *)(v8 + 5592) = v28 + 1836851649;
  *(_DWORD *)(v8 + 5556) = v28 + 1836851929;
  *(_DWORD *)(v8 + 5860) = v28 + 1836851581;
  *(_DWORD *)(v8 + 5728) = v28 + 1836851733;
  *(_DWORD *)(v8 + 5460) = v28 + 1836851769;
  *(_DWORD *)(v8 + 5800) = v28 + 1836851997;
  *(_DWORD *)(v8 + 5540) = v28 + 1836852057;
  *(_DWORD *)(v8 + 5760) = v28 + 1836851629;
  *(_DWORD *)(v8 + 6252) = v28 + 1836851557;
  *(_DWORD *)(v8 + 5740) = v28 + 1836851877;
  *(_DWORD *)(v8 + 5776) = v28 + 1836851801;
  *(_DWORD *)(v8 + 5916) = v28 + 1836851797;
  *(_DWORD *)(v8 + 5852) = v28 + 1836852041;
  *(_DWORD *)(v8 + 5560) = v28 + 1836851853;
  *(_DWORD *)(v8 + 5504) = v28 + 1836852049;
  *(_DWORD *)(v8 + 6276) = v28 + 1836851829;
  *(_DWORD *)(v8 + 6272) = v28 + 1836851725;
  *(_DWORD *)(v8 + 5516) = v28 + 1836851617;
  *(_DWORD *)(v8 + 5684) = v28 + 1836851753;
  *(_DWORD *)(v8 + 5648) = v28 + 1836851865;
  *(_DWORD *)(v8 + 5632) = v28 + 1836851689;
  *(_DWORD *)(v8 + 5580) = v28 + 1836851685;
  *(_DWORD *)(v8 + 5840) = v28 + 1836851849;
  *(_DWORD *)(v8 + 5736) = v28 + 1836851821;
  *(_DWORD *)(v8 + 5712) = v28 + 1836851661;
  *(_DWORD *)(v8 + 5520) = v28 + 1836851541;
  *(_DWORD *)(v8 + 5660) = v28 + 1836851601;
  *(_DWORD *)(v8 + 5764) = v28 + 1836852089;
  *(_DWORD *)(v8 + 5872) = v28 + 1836851793;
  *(_DWORD *)(v8 + 5784) = v28 + 1836852029;
  *(_DWORD *)(v8 + 5864) = v28 + 1836851633;
  *(_DWORD *)(v8 + 6240) = v28 + 1836851941;
  *(_DWORD *)(v8 + 6248) = v28 + 1836851881;
  *(_DWORD *)(v8 + 5904) = v28 + 1836851873;
  *(_DWORD *)(v8 + 5672) = v28 + 1836851605;
  *(_DWORD *)(v8 + 6256) = v28 + 1836851745;
  *(_DWORD *)(v8 + 6232) = v28 + 1836851957;
  *(_DWORD *)(v8 + 5652) = v28 + 1836851693;
  *(_DWORD *)(v8 + 5732) = v28 + 1836852017;
  *(_DWORD *)(v8 + 5664) = v28 + 1836852061;
  *(_DWORD *)(v8 + 5816) = v28 + 1836852009;
  *(_DWORD *)(v8 + 5628) = v28 + 1836852053;
  *(_DWORD *)(v8 + 5596) = v28 + 1836851673;
  *(_DWORD *)(v8 + 5704) = v28 + 1836851765;
  *(_DWORD *)(v8 + 5812) = v28 + 1836851657;
  *(_DWORD *)(v8 + 5536) = v28 + 1836851569;
  *(_DWORD *)(v8 + 6268) = v28 + 1836851565;
  *(_DWORD *)(v8 + 5700) = v28 + 1836851989;
  *(_DWORD *)(v8 + 5680) = v28 + 1836851813;
  *(_DWORD *)(v8 + 5708) = v28 + 1836852065;
  *(_DWORD *)(v8 + 5744) = v28 + 1836852085;
  *(_DWORD *)(v8 + 5868) = v28 + 1836851837;
  *(_DWORD *)(v8 + 5604) = v28 + 1836851781;
  *(_DWORD *)(v8 + 5696) = v28 + 1836851917;
  *(_DWORD *)(v8 + 5528) = v28 + 1836851749;
  *(_DWORD *)(v8 + 5644) = v28 + 1836852069;
  *(_DWORD *)(v8 + 5572) = v28 + 1836851809;
  *(_DWORD *)(v8 + 5856) = v28 + 1836851701;
  *(_DWORD *)(v8 + 5792) = v28 + 1836851785;
  *(_DWORD *)(v8 + 5624) = v28 + 1836851841;
  *(_DWORD *)(v8 + 5636) = v28 + 1836851677;
  *(_DWORD *)(v8 + 5724) = v28 + 1836851953;
  *(_DWORD *)(v8 + 5912) = v28 + 1836851593;
  *(_DWORD *)(v8 + 5584) = v28 + 1836852021;
  *(_DWORD *)(v8 + 5544) = v28 + 1836851901;
  *(_DWORD *)(v8 + 5828) = v28 + 1836851721;
  *(_DWORD *)(v8 + 5884) = v28 + 1836852037;
  *(_DWORD *)(v8 + 5532) = v28 + 1836851653;
  *(_DWORD *)(v8 + 5752) = v28 + 1836852005;
  *(_DWORD *)(v8 + 5500) = v28 + 1836851573;
  *(_DWORD *)(v8 + 5768) = v28 + 1836852033;
  *(_DWORD *)(v8 + 5788) = v28 + 1836851993;
  *(_DWORD *)(v8 + 6236) = v28 + 1836851553;
  *(_DWORD *)(v8 + 6260) = v28 + 1836851961;
  *(_DWORD *)(v8 + 5844) = v28 + 1836851949;
  *(_DWORD *)(v8 + 5508) = v28 + 1836851981;
  *(_DWORD *)(v8 + 5524) = v28 + 1836852081;
  *(_DWORD *)(v8 + 6264) = v28 + 1836851897;
  *(_DWORD *)(v8 + 3364) = v28 + 1836851921;
  *(_DWORD *)(v8 + 5772) = v28 + 1836851889;
  *(_DWORD *)(v8 + 6228) = v28 + 1836851913;
  *(_DWORD *)(v8 + 5808) = v28 + 1836851717;
  *(_DWORD *)(v8 + 6244) = v28 + 1836851777;
  *(_DWORD *)(v8 + 3360) = v28 + 1836851861;
  *(_DWORD *)(v8 + 5692) = v28 + 1836851641;
  *(_DWORD *)(v8 + 5900) = v28 + 1836851869;
  *(_DWORD *)(v8 + 5616) = v28 + 1836851645;
  *(_DWORD *)(v8 + 5876) = v28 + 1836851681;
  *(_DWORD *)(v8 + 3368) = v28 + 1836851789;
  *(_DWORD *)(v8 + 5512) = v28 + 1836851893;
  *(_DWORD *)(v8 + 5896) = v28 + 1836851817;
  *(_DWORD *)(v8 + 5820) = v28 + 1836851665;
  *(_DWORD *)(v8 + 5612) = v28 + 1836851761;
  *(_DWORD *)(v8 + 5716) = v28 + 1836851613;
  *(_DWORD *)(v8 + 5588) = v28 + 1836851965;
  *(_DWORD *)(v8 + 5796) = v28 + 1836851609;
  *(_DWORD *)(v8 + 5676) = v28 + 1836851577;
  *(_DWORD *)(v8 + 3356) = v28 + 1836852025;
  *(_DWORD *)(v8 + 5608) = v28 + 1836851885;
  *(_DWORD *)(v8 + 5688) = v28 + 1836851589;
  *(_QWORD *)(v8 + 2984) = v28 + 5743;
  *(_QWORD *)(v8 + 2976) = v28 + 5741;
  *(_QWORD *)(v8 + 2968) = v28 + 5738;
  *(_QWORD *)(v8 + 2960) = v28 + 5737;
  *(_QWORD *)(v8 + 2952) = v28 + 5736;
  *(_QWORD *)(v8 + 2944) = v28 + 5735;
  *(_QWORD *)(v8 + 2936) = v28 + 5733;
  *(_QWORD *)(v8 + 2928) = v28 + 5732;
  *(_QWORD *)(v8 + 2920) = v28 + 5731;
  *(_QWORD *)(v8 + 2912) = v28 + 5728;
  *(_QWORD *)(v8 + 2904) = v28 + 5725;
  *(_QWORD *)(v8 + 2896) = v28 + 5724;
  *(_QWORD *)(v8 + 2888) = v28 + 5722;
  *(_QWORD *)(v8 + 2880) = v28 + 5721;
  *(_QWORD *)(v8 + 2872) = v28 + 5720;
  *(_QWORD *)(v8 + 2864) = v28 + 5719;
  *(_QWORD *)(v8 + 2856) = v28 + 5718;
  *(_QWORD *)(v8 + 2848) = v28 + 5717;
  *(_QWORD *)(v8 + 2840) = v28 + 5715;
  *(_QWORD *)(v8 + 2832) = v28 + 5714;
  *(_DWORD *)(v8 + 4928) = 23;
  *(_DWORD *)(v8 + 6680) = 171;
  *(_QWORD *)(v8 + 6536) = 113;
  *(_DWORD *)(v8 + 1532) = 68;
  *(_DWORD *)(v8 + 1536) = 43;
  *(_DWORD *)(v8 + 5184) = 26;
  *(_DWORD *)(v8 + 5172) = 62;
  *(_DWORD *)(v8 + 5176) = 163;
  *(_DWORD *)(v8 + 4936) = 92;
  *(_DWORD *)(v8 + 7856) = 223;
  *(_DWORD *)(v8 + 1540) = 34;
  *(_DWORD *)(v8 + 4940) = 249;
  *(_DWORD *)(v8 + 4924) = 207;
  *(_DWORD *)(v8 + 6672) = 75;
  *(_DWORD *)(v8 + 4944) = 90;
  *(_DWORD *)(v8 + 4932) = 17;
  *(_DWORD *)(v8 + 1548) = 104;
  *(_DWORD *)(v8 + 4948) = 157;
  *(_DWORD *)(v8 + 8272) = -103639300;
  *(_DWORD *)(v8 + 5204) = 189;
  *(_DWORD *)(v8 + 1528) = 163;
  *(_DWORD *)(v8 + 5180) = 194;
  *(_DWORD *)(v8 + 1544) = 46;
  *(_QWORD *)(v8 + 2824) = v28 + 5713;
  *(_DWORD *)(v8 + 7952) = 1066003693;
  *(_DWORD *)(v8 + 8868) = -1482345232;
  *(_DWORD *)(v8 + 9104) = 1566054199;
  *(_QWORD *)(v8 + 3904) = v28 + 0x62AA055D109FBFC3;
  *(_QWORD *)(v8 + 3920) = v28 + 0x62AA055D109F54F3;
  *(_DWORD *)(v8 + 5316) = -1728539650;
  *(_DWORD *)(v8 + 8548) = -470050972;
  *(_QWORD *)(v8 + 4256) = v28 + 0x62AA055D109F73E3;
  *(_QWORD *)(v8 + 4248) = v28 + 0x62AA055D109F74A3;
  *(_QWORD *)(v8 + 9608) = v12 + 3088;
  *(_DWORD *)(v8 + 7936) = 1361637474;
  *(_QWORD *)(v8 + 3072) = v28 + 0x62AA055D109F3793;
  *(_QWORD *)(v8 + 6008) = v28 + 0x62AA055D109F2B13;
  *(_QWORD *)(v8 + 5464) = 0x194C6113CD9FFCD4;
  *(_QWORD *)(v8 + 2208) = v28 + 0x62AA055D109F7A03;
  *(_QWORD *)(v8 + 8168) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 9280) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 9016) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 7880) = v28 + 0x62AA055D109FB863;
  *(_QWORD *)(v8 + 5416) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 5968) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 2568) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 5240) = 0x5ECCBEE0D7943EALL;
  *(_QWORD *)(v8 + 6816) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8160) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 5976) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6352) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 9296) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 7624) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 7032) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 7392) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8944) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8576) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8952) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8936) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 3944) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6104) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8536) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8488) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8472) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 3976) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 3968) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4392) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4048) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6368) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 5448) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6112) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8432) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 8416) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4192) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4032) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4072) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4016) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4064) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4088) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6864) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6888) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6880) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6896) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4176) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 4168) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6904) = 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 6872) = 0x62AA055D109F20F3;
  *(_DWORD *)(v8 + 44) = -1614857865;
  *(_DWORD *)(v8 + 48) = 84676626;
  *(_DWORD *)(v8 + 240) = -1115727969;
  *(_DWORD *)(v8 + 244) = -943872565;
  *(_DWORD *)(v8 + 92) = -1883267905;
  *(_DWORD *)(v8 + 284) = -1375735529;
  *(_DWORD *)(v8 + 1876) = -2145578991;
  *(_DWORD *)(v8 + 100) = -1354934345;
  *(_DWORD *)(v8 + 96) = 17633301;
  *(_DWORD *)(v8 + 52) = -129808;
  *(_DWORD *)(v8 + 6384) = 116029194;
  *(_QWORD *)(v8 + 1576) = v28 + 0x62AA055D109F2863;
  *(_DWORD *)(v8 + 2092) = -2128609275;
  *(_DWORD *)(v8 + 2088) = -1925376137;
  *(_DWORD *)(v8 + 2220) = -1912653737;
  *(_DWORD *)(v8 + 1872) = -2147151852;
  *(_DWORD *)(v8 + 1868) = 86773780;
  *(_DWORD *)(v8 + 2028) = 18419730;
  *(_DWORD *)(v8 + 2024) = 86769670;
  *(_DWORD *)(v8 + 2020) = -1510097633;
  *(_DWORD *)(v8 + 2016) = -2145120233;
  *(_DWORD *)(v8 + 2012) = -448938281;
  *(_DWORD *)(v8 + 2008) = 70062102;
  *(_DWORD *)(v8 + 1524) = 224;
  *(_DWORD *)(v8 + 1520) = 30;
  *(_QWORD *)(v8 + 6216) = 192;
  *(_DWORD *)(v8 + 4292) = 63;
  *(_DWORD *)(v8 + 4856) = 126;
  *(_DWORD *)(v8 + 5168) = 112;
  *(_DWORD *)(v8 + 9312) = -1768691798;
  *(_DWORD *)(v8 + 4140) = 438891110;
  *(_DWORD *)(v8 + 3928) = -427330960;
  *(_DWORD *)(v8 + 7452) = -1591070876;
  *(_DWORD *)(v8 + 7072) = -299833444;
  *(_DWORD *)(v8 + 8552) = -1041039700;
  *(_DWORD *)(v8 + 9224) = 1788482769;
  *(_DWORD *)(v8 + 9064) = 572776545;
  *(_DWORD *)(v8 + 8900) = -140089370;
  *(_DWORD *)(v8 + 4128) = 1530740297;
  *(_DWORD *)(v8 + 9592) = 1426978743;
  *(_DWORD *)(v8 + 7136) = -1683960261;
  *(_DWORD *)(v8 + 9156) = 1488661121;
  *(_DWORD *)(v8 + 4028) = -12396231;
  *(_DWORD *)(v8 + 4332) = -695916346;
  *(_DWORD *)(v8 + 6828) = -1662141153;
  *(_DWORD *)(v8 + 8308) = 206502629;
  *(_DWORD *)(v8 + 7600) = -154605782;
  *(_DWORD *)(v8 + 8784) = -1085256210;
  *(_DWORD *)(v8 + 4388) = -2041271852;
  *(_DWORD *)(v8 + 56) = -1486379685;
  *(_DWORD *)(v8 + 9264) = -1052729644;
  *(_DWORD *)(v8 + 8776) = -331750700;
  *(_DWORD *)(v8 + 8904) = 1404325647;
  *(_DWORD *)(v8 + 9004) = 870503716;
  *(_DWORD *)(v8 + 7440) = -345510018;
  *(_DWORD *)(v8 + 7088) = 1736614588;
  *(_DWORD *)(v8 + 0x2000) = 1056415059;
  *(_DWORD *)(v8 + 8188) = 1271551864;
  *(_DWORD *)(v8 + 7608) = -1486798392;
  *(_DWORD *)(v8 + 9696) = -956553500;
  *(_DWORD *)(v8 + 7460) = -634229911;
  *(_DWORD *)(v8 + 7064) = -243420089;
  *(_DWORD *)(v8 + 3960) = -2118773484;
  *(_DWORD *)(v8 + 7152) = -376369745;
  *(_DWORD *)(v8 + 9576) = -970795818;
  *(_DWORD *)(v8 + 8056) = -112081856;
  *(_DWORD *)(v8 + 9432) = -783973229;
  *(_DWORD *)(v8 + 7080) = 465413500;
  *(_DWORD *)(v8 + 7404) = -1757045328;
  *(_DWORD *)(v8 + 3292) = -383244790;
  *(_DWORD *)(v8 + 5412) = -1458530832;
  *(_DWORD *)(v8 + 8132) = 1218427590;
  *(_DWORD *)(v8 + 3060) = -350685105;
  *(_DWORD *)(v8 + 7096) = 204429046;
  *(_DWORD *)(v8 + 6976) = 270774403;
  *(_DWORD *)(v8 + 3936) = -956061950;
  *(_DWORD *)(v8 + 8848) = -2096953521;
  *(_DWORD *)(v8 + 9072) = 736170020;
  *(_DWORD *)(v8 + 60) = 597551325;
  *(_DWORD *)(v8 + 8920) = 1141025281;
  *(_DWORD *)(v8 + 9056) = 655581323;
  *(_DWORD *)(v8 + 8040) = -1915078454;
  *(_DWORD *)(v8 + 5336) = -454545553;
  *(_DWORD *)(v8 + 64) = 1400979822;
  *(_DWORD *)(v8 + 7432) = 521168168;
  *(_DWORD *)(v8 + 8116) = 695327646;
  *(_DWORD *)(v8 + 7476) = -1158211366;
  *(_DWORD *)(v8 + 4136) = -2093698666;
  *(_DWORD *)(v8 + 3020) = 846014394;
  *(_DWORD *)(v8 + 4548) = -213972914;
  *(_DWORD *)(v8 + 7008) = -1265927352;
  *(_DWORD *)(v8 + 6920) = -286293596;
  *(_DWORD *)(v8 + 8808) = 2137950355;
  *(_DWORD *)(v8 + 2140) = -1226034292;
  *(_DWORD *)(v8 + 4044) = -372838407;
  *(_DWORD *)(v8 + 9248) = -1140610174;
  *(_DWORD *)(v8 + 7964) = -1977675029;
  *(_DWORD *)(v8 + 4132) = -1982554862;
  *(_DWORD *)(v8 + 6912) = 347251313;
  *(_DWORD *)(v8 + 6380) = 1339395331;
  *(_DWORD *)(v8 + 5348) = 1371011033;
  *(_DWORD *)(v8 + 4220) = 78965820;
  *(_DWORD *)(v8 + 2708) = 901598957;
  *(_DWORD *)(v8 + 3996) = -622128308;
  *(_DWORD *)(v8 + 7480) = 1966118695;
  *(_DWORD *)(v8 + 8864) = -1017645554;
  *(_DWORD *)(v8 + 6712) = -478909653;
  *(_DWORD *)(v8 + 8912) = 343089094;
  *(_DWORD *)(v8 + 2100) = -1899566169;
  *(_DWORD *)(v8 + 8480) = -953056493;
  *(_DWORD *)(v8 + 8424) = -1283655311;
  *(_DWORD *)(v8 + 6136) = 442196128;
  *(_DWORD *)(v8 + 7104) = -1947888192;
  *(_DWORD *)(v8 + 3988) = -424152848;
  *(_DWORD *)(v8 + 8456) = 14849343;
  *(_DWORD *)(v8 + 4348) = -1363506713;
  *(_DWORD *)(v8 + 9288) = 1372241993;
  *(_DWORD *)(v8 + 3828) = -1510109652;
  *(_DWORD *)(v8 + 7488) = 791573134;
  *(_DWORD *)(v8 + 9148) = 614477292;
  *(_DWORD *)(v8 + 8840) = 95518700;
  *(_DWORD *)(v8 + 7484) = 1574799053;
  *(_DWORD *)(v8 + 280) = -2061010098;
  *(_DWORD *)(v8 + 6172) = -1857442377;
  *(_DWORD *)(v8 + 6812) = -1751138527;
  *(_DWORD *)(v8 + 6100) = -577420763;
  *(_DWORD *)(v8 + 4528) = 126983061;
  *(_DWORD *)(v8 + 5964) = -1298629922;
  *(_DWORD *)(v8 + 1572) = 1697801430;
  *(_DWORD *)(v8 + 6312) = 1544060721;
  *(_DWORD *)(v8 + 6756) = 1887381429;
  *(_DWORD *)(v8 + 4060) = -1929652698;
  *(_DWORD *)(v8 + 4460) = -1794013462;
  *(_DWORD *)(v8 + 8532) = -333443103;
  *(_DWORD *)(v8 + 8232) = 1587054830;
  *(_DWORD *)(v8 + 4268) = 1860932478;
  *(_DWORD *)(v8 + 6788) = 1070468578;
  *(_DWORD *)(v8 + 8464) = -826030853;
  *(_DWORD *)(v8 + 9688) = -1042697787;
  *(_DWORD *)(v8 + 3036) = -1372410127;
  *(_DWORD *)(v8 + 136) = 1098286844;
  *(_DWORD *)(v8 + 4012) = -780613431;
  *(_DWORD *)(v8 + 3932) = -1770428955;
  *(_DWORD *)(v8 + 7888) = 540480514;
  *(_DWORD *)(v8 + 3956) = -1449829970;
  *(_DWORD *)(v8 + 7464) = 552566655;
  *(_DWORD *)(v8 + 8136) = -220037370;
  *(_DWORD *)(v8 + 7000) = -1241743804;
  *(_DWORD *)(v8 + 9036) = -1944061622;
  *(_QWORD *)(v8 + 4272) = 3620495573;
  *(_DWORD *)(v8 + 9120) = 11117190;
  *(_DWORD *)(v8 + 4120) = -717794184;
  *(_DWORD *)(v8 + 4464) = 1480699280;
  *(_DWORD *)(v8 + 4124) = 1520400317;
  *(_DWORD *)(v8 + 2440) = -1346648872;
  *(_DWORD *)(v8 + 9256) = -271731698;
  *(_DWORD *)(v8 + 4100) = -2051292770;
  *(_DWORD *)(v8 + 4468) = 670627814;
  *(_DWORD *)(v8 + 68) = -606385334;
  *(_DWORD *)(v8 + 1980) = 1371995881;
  *(_DWORD *)(v8 + 5340) = 837600143;
  *(_DWORD *)(v8 + 5328) = 566634897;
  *(_DWORD *)(v8 + 5236) = -226900286;
  *(_DWORD *)(v8 + 5232) = 1872719915;
  *(_DWORD *)(v8 + 7500) = 696144979;
  *(_DWORD *)(v8 + 9632) = 178855279;
  *(_DWORD *)(v8 + 8608) = -284574317;
  *(_DWORD *)(v8 + 4084) = -672681514;
  *(_DWORD *)(v8 + 3112) = -591187689;
  *(_DWORD *)(v8 + 2348) = -1430317821;
  *(_DWORD *)(v8 + 8792) = 1549646182;
  *(_DWORD *)(v8 + 8816) = 1638678408;
  *(_DWORD *)(v8 + 5988) = -548497051;
  *(_DWORD *)(v8 + 8628) = -1974482055;
  *(_DWORD *)(v8 + 7752) = 1563553645;
  *(_DWORD *)(v8 + 8968) = 2099151257;
  *(_DWORD *)(v8 + 2444) = -1094052629;
  *(_DWORD *)(v8 + 6344) = -878709092;
  *(_DWORD *)(v8 + 6952) = -83493220;
  *(_DWORD *)(v8 + 7768) = 385715777;
  *(_DWORD *)(v8 + 8196) = -973508644;
  *(_DWORD *)(v8 + 6984) = -747726099;
  *(_DWORD *)(v8 + 9672) = 112003214;
  *(_DWORD *)(v8 + 8064) = 239328623;
  *(_DWORD *)(v8 + 8832) = -1576857565;
  *(_DWORD *)(v8 + 8980) = -347981183;
  *(_DWORD *)(v8 + 9052) = 501478137;
  *(_DWORD *)(v8 + 3940) = -1389766467;
  *(_DWORD *)(v8 + 7352) = -647216030;
  *(_DWORD *)(v8 + 140) = -825414087;
  *(_DWORD *)(v8 + 9320) = 303774370;
  *(_DWORD *)(v8 + 7040) = -1236198324;
  *(_DWORD *)(v8 + 2644) = 261162865;
  *(_DWORD *)(v8 + 6856) = -39975068;
  *(_DWORD *)(v8 + 9624) = -742848739;
  *(_DWORD *)(v8 + 6188) = 1396159192;
  *(_DWORD *)(v8 + 5344) = -1776904467;
  *(_DWORD *)(v8 + 3912) = 253755172;
  *(_DWORD *)(v8 + 4508) = -967998763;
  *(_DWORD *)(v8 + 9116) = -2097772150;
  *(_DWORD *)(v8 + 9328) = -911512169;
  *(_DWORD *)(v8 + 7024) = -1348899893;
  *(_DWORD *)(v8 + 9272) = 122191440;
  *(_DWORD *)(v8 + 3916) = -883180418;
  *(_DWORD *)(v8 + 8212) = 191701007;
  *(_DWORD *)(v8 + 9504) = 1653324640;
  *(_DWORD *)(v8 + 7532) = -1262821261;
  *(_DWORD *)(v8 + 7456) = -1288413146;
  *(_DWORD *)(v8 + 8176) = 1289256644;
  *(_DWORD *)(v8 + 7944) = 2013023993;
  *(_DWORD *)(v8 + 3992) = 1576296587;
  *(_DWORD *)(v8 + 7436) = -347873424;
  *(_DWORD *)(v8 + 3016) = 1700755760;
  *(_DWORD *)(v8 + 2096) = 358298541;
  *(_DWORD *)(v8 + 4116) = 1324110485;
  *(_DWORD *)(v8 + 4532) = 858129803;
  *(_DWORD *)(v8 + 2684) = 720714261;
  *(_DWORD *)(v8 + 4404) = 81993143;
  *(_DWORD *)(v8 + 6928) = 1930956939;
  *(_DWORD *)(v8 + 5408) = 2125709706;
  *(_DWORD *)(v8 + 3012) = 775614840;
  *(_DWORD *)(v8 + 9512) = -1319671186;
  *(_DWORD *)(v8 + 3116) = 1453789530;
  *(_DWORD *)(v8 + 8152) = 357170168;
  *(_DWORD *)(v8 + 8332) = -254980183;
  *(_DWORD *)(v8 + 9656) = -1668508946;
  *(_DWORD *)(v8 + 8828) = 205620654;
  *(_DWORD *)(v8 + 8860) = 747418129;
  *(_DWORD *)(v8 + 7448) = 388606958;
  *(_DWORD *)(v8 + 3964) = 309327828;
  *(_DWORD *)(v8 + 6720) = -1098186910;
  *(_DWORD *)(v8 + 3084) = 528407015;
  *(_DWORD *)(v8 + 4524) = -166187716;
  *(_DWORD *)(v8 + 8080) = 137670793;
  *(_QWORD *)(v8 + 3184) = v28 + 0x62AA055D109F7343;
  *(_QWORD *)(v8 + 8240) = 0x194C6113CD9FFCD4;
  *(_QWORD *)(v8 + 4304) = 0xFA3905AA77629CC3;
  *(_QWORD *)(v8 + 6776) = 0x42AB1B54FED982D0;
  *(_QWORD *)(v8 + 6832) = 0x506FAF3B09559E6ALL;
  *(_QWORD *)(v8 + 2200) = v28 + 0x62AA055D109FAFA3;
  *(_DWORD *)(v8 + 9152) = 880621267;
  *(_DWORD *)(v8 + 8992) = 1047488733;
  *(_QWORD *)(v8 + 6000) = 0x5ECCBEE0D7943EALL;
  *(_QWORD *)(v8 + 32) = v28 - 2235343304;
  *(_DWORD *)(v8 + 7020) = 87626964;
  *(_DWORD *)(v8 + 2604) = 622318272;
  *(_QWORD *)(v8 + 24) = v28 + 27439;
  *(_QWORD *)(v8 + 16) = v28 + 27471;
  *(_QWORD *)(v8 + 8) = v28 + 28207;
  *(_QWORD *)(v8 + 232) = v28 + 18784;
  *(_QWORD *)(v8 + 9192) = v28 + 0x62AA055D109FA837;
  *(_QWORD *)v8 = v28 + 27375;
  *(_QWORD *)(v8 + 3320) = v28 + 23340;
  *(_QWORD *)(v8 + 4496) = v28 + 0x62AA055D109F5643;
  *(_DWORD *)(v8 + 3140) = v28 + 1836852093;
  *(_QWORD *)(v8 + 9024) = v28 + 0x62AA055D109FA8F3;
  *(_QWORD *)(v8 + 3176) = v28 + 0x62AA055D109F6B43;
  *(_QWORD *)(v8 + 9368) = v28 + 0x62AA055D109FA833;
  *(_QWORD *)(v8 + 6360) = v28 + 0x62AA055D109F4563;
  *(_QWORD *)(v8 + 5440) = v28 + 0x62AA055D109F8083;
  *(_QWORD *)(v8 + 1784) = v28 + 0x5ECCBEE0D79CCFALL;
  *(_QWORD *)(v8 + 224) = v28 + 27504;
  *(_QWORD *)(v8 + 4368) = v28 + 0x62AA055D109F8243;
  *(_QWORD *)(v8 + 5952) = v28 + 0x62AA055D109F4403;
  *(_QWORD *)(v8 + 216) = v28 + 27408;
  *(_QWORD *)(v8 + 208) = v28 + 27440;
  *(_QWORD *)(v8 + 200) = v28 + 27472;
  *(_QWORD *)(v8 + 192) = v28 + 28240;
  *(_QWORD *)(v8 + 184) = v28 + 28272;
  *(_QWORD *)(v8 + 176) = v28 + 27376;
  *(_QWORD *)(v8 + 1240) = v28 + 28656;
  *(_QWORD *)(v8 + 168) = v28 + 28176;
  *(_QWORD *)(v8 + 160) = v28 + 28208;
  *(_QWORD *)(v8 + 1232) = v28 + 28560;
  *(_QWORD *)(v8 + 1224) = v28 + 28592;
  *(_QWORD *)(v8 + 1216) = v28 + 28624;
  *(_QWORD *)(v8 + 1288) = v28 + 16448;
  *(_QWORD *)(v8 + 1208) = v28 + 16480;
  *(_QWORD *)(v8 + 152) = v28 + 28848;
  *(_QWORD *)(v8 + 2560) = v28 + 0x62AA055D109F55A3;
  *(_QWORD *)(v8 + 1200) = v28 + 16352;
  *(_QWORD *)(v8 + 1192) = v28 + 16416;
  *(_QWORD *)(v8 + 1184) = v28 + 0x4000;
  *(_QWORD *)(v8 + 1176) = v28 + 26704;
  *(_QWORD *)(v8 + 1168) = v28 + 26736;
  *(_QWORD *)(v8 + 1848) = v28 + 16320;
  *(_QWORD *)(v8 + 1160) = v28 + 26608;
  *(_QWORD *)(v8 + 1152) = v28 + 26640;
  *(_QWORD *)(v8 + 1144) = v28 + 26672;
  *(_QWORD *)(v8 + 1280) = v28 + 16640;
  *(_QWORD *)(v8 + 144) = v28 + 16672;
  *(_QWORD *)(v8 + 1840) = v28 + 26576;
  *(_QWORD *)(v8 + 1136) = v28 + 16544;
  *(_QWORD *)(v8 + 1128) = v28 + 16576;
  *(_QWORD *)(v8 + 1120) = v28 + 16608;
  *(_QWORD *)(v8 + 1112) = v28 + 26896;
  *(_QWORD *)(v8 + 1104) = v28 + 26928;
  *(_QWORD *)(v8 + 1776) = v28 + 16512;
  *(_QWORD *)(v8 + 1096) = v28 + 26800;
  *(_QWORD *)(v8 + 1088) = v28 + 26832;
  *(_QWORD *)(v8 + 1080) = v28 + 26864;
  *(_QWORD *)(v8 + 1072) = v28 + 16832;
  *(_QWORD *)(v8 + 1064) = v28 + 16864;
  *(_QWORD *)(v8 + 1768) = v28 + 26768;
  *(_QWORD *)(v8 + 1056) = v28 + 16736;
  *(_QWORD *)(v8 + 1048) = v28 + 16768;
  *(_QWORD *)(v8 + 1040) = v28 + 16800;
  *(_QWORD *)(v8 + 1032) = v28 + 27088;
  *(_QWORD *)(v8 + 1024) = v28 + 27120;
  *(_QWORD *)(v8 + 1760) = v28 + 16704;
  *(_QWORD *)(v8 + 1016) = v28 + 26992;
  *(_QWORD *)(v8 + 1008) = v28 + 27024;
  *(_QWORD *)(v8 + 1000) = v28 + 27056;
  *(_QWORD *)(v8 + 992) = v28 + 17024;
  *(_QWORD *)(v8 + 984) = v28 + 17056;
  *(_QWORD *)(v8 + 1752) = v28 + 26960;
  *(_QWORD *)(v8 + 976) = v28 + 16928;
  *(_QWORD *)(v8 + 968) = v28 + 16960;
  *(_QWORD *)(v8 + 960) = v28 + 16992;
  *(_QWORD *)(v8 + 952) = v28 + 27280;
  *(_QWORD *)(v8 + 944) = v28 + 27312;
  *(_QWORD *)(v8 + 1744) = v28 + 16896;
  *(_QWORD *)(v8 + 936) = v28 + 27184;
  *(_QWORD *)(v8 + 928) = v28 + 27216;
  *(_QWORD *)(v8 + 920) = v28 + 27248;
  *(_QWORD *)(v8 + 912) = v28 + 17216;
  *(_QWORD *)(v8 + 904) = v28 + 17248;
  *(_QWORD *)(v8 + 1736) = v28 + 27152;
  *(_QWORD *)(v8 + 896) = v28 + 17120;
  *(_QWORD *)(v8 + 888) = v28 + 17152;
  *(_QWORD *)(v8 + 880) = v28 + 17184;
  *(_QWORD *)(v8 + 872) = v28 + 17440;
  *(_QWORD *)(v8 + 1832) = v28 + 27344;
  *(_QWORD *)(v8 + 1824) = v28 + 17088;
  *(_QWORD *)(v8 + 864) = v28 + 17344;
  *(_QWORD *)(v8 + 856) = v28 + 17376;
  *(_QWORD *)(v8 + 848) = v28 + 17408;
  *(_QWORD *)(v8 + 840) = v28 + 27696;
  *(_QWORD *)(v8 + 1728) = v28 + 17280;
  *(_QWORD *)(v8 + 832) = v28 + 17312;
  *(_QWORD *)(v8 + 824) = v28 + 27600;
  *(_QWORD *)(v8 + 816) = v28 + 27632;
  *(_QWORD *)(v8 + 808) = v28 + 27664;
  *(_QWORD *)(v8 + 800) = v28 + 17632;
  *(_QWORD *)(v8 + 1720) = v28 + 27536;
  *(_QWORD *)(v8 + 792) = v28 + 27568;
  *(_QWORD *)(v8 + 784) = v28 + 17536;
  *(_QWORD *)(v8 + 776) = v28 + 17568;
  *(_QWORD *)(v8 + 768) = v28 + 17600;
  *(_QWORD *)(v8 + 248) = v28 + 27888;
  *(_QWORD *)(v8 + 1560) = v28 + 17472;
  *(_QWORD *)(v8 + 760) = v28 + 17504;
  *(_QWORD *)(v8 + 752) = v28 + 27792;
  *(_QWORD *)(v8 + 744) = v28 + 27824;
  *(_QWORD *)(v8 + 736) = v28 + 27856;
  *(_QWORD *)(v8 + 728) = v28 + 17824;
  *(_QWORD *)(v8 + 1712) = v28 + 27728;
  *(_QWORD *)(v8 + 720) = v28 + 27760;
  *(_QWORD *)(v8 + 712) = v28 + 17728;
  *(_QWORD *)(v8 + 704) = v28 + 17760;
  *(_QWORD *)(v8 + 696) = v28 + 17792;
  *(_QWORD *)(v8 + 688) = v28 + 28080;
  *(_QWORD *)(v8 + 1296) = v28 + 17664;
  *(_QWORD *)(v8 + 680) = v28 + 17696;
  *(_QWORD *)(v8 + 672) = v28 + 27984;
  *(_QWORD *)(v8 + 664) = v28 + 28016;
  *(_QWORD *)(v8 + 656) = v28 + 28048;
  *(_QWORD *)(v8 + 648) = v28 + 18016;
  *(_QWORD *)(v8 + 1816) = v28 + 27920;
  *(_QWORD *)(v8 + 640) = v28 + 27952;
  *(_QWORD *)(v8 + 632) = v28 + 17920;
  *(_QWORD *)(v8 + 624) = v28 + 17952;
  *(_QWORD *)(v8 + 616) = v28 + 17984;
  *(_QWORD *)(v8 + 1272) = v28 + 28144;
  *(_QWORD *)(v8 + 1808) = v28 + 17856;
  *(_QWORD *)(v8 + 608) = v28 + 17888;
  *(_QWORD *)(v8 + 600) = v28 + 18176;
  *(_QWORD *)(v8 + 592) = v28 + 18208;
  *(_QWORD *)(v8 + 1704) = v28 + 28112;
  *(_QWORD *)(v8 + 584) = v28 + 18080;
  *(_QWORD *)(v8 + 576) = v28 + 18112;
  *(_QWORD *)(v8 + 568) = v28 + 18144;
  *(_QWORD *)(v8 + 560) = v28 + 28432;
  *(_QWORD *)(v8 + 552) = v28 + 28464;
  *(_QWORD *)(v8 + 1696) = v28 + 18048;
  *(_QWORD *)(v8 + 544) = v28 + 28336;
  *(_QWORD *)(v8 + 536) = v28 + 28368;
  *(_QWORD *)(v8 + 528) = v28 + 28400;
  *(_QWORD *)(v8 + 520) = v28 + 18368;
  *(_QWORD *)(v8 + 512) = v28 + 18400;
  *(_QWORD *)(v8 + 1688) = v28 + 28304;
  *(_QWORD *)(v8 + 504) = v28 + 18272;
  *(_QWORD *)(v8 + 496) = v28 + 18304;
  *(_QWORD *)(v8 + 488) = v28 + 18336;
  *(_QWORD *)(v8 + 1552) = v28 + 28496;
  *(_QWORD *)(v8 + 480) = v28 + 28528;
  *(_QWORD *)(v8 + 1680) = v28 + 18240;
  *(_QWORD *)(v8 + 472) = v28 + 18528;
  *(_QWORD *)(v8 + 464) = v28 + 18560;
  *(_QWORD *)(v8 + 456) = v28 + 18592;
  *(_QWORD *)(v8 + 1800) = v28 + 18432;
  *(_QWORD *)(v8 + 448) = v28 + 18464;
  *(_QWORD *)(v8 + 440) = v28 + 18496;
  *(_QWORD *)(v8 + 432) = v28 + 28752;
  *(_QWORD *)(v8 + 424) = v28 + 28784;
  *(_QWORD *)(v8 + 1264) = v28 + 28816;
  *(_QWORD *)(v8 + 1256) = v28 + 18752;
  *(_QWORD *)(v8 + 1792) = v28 + 28688;
  *(_QWORD *)(v8 + 1248) = v28 + 28720;
  *(_QWORD *)(v8 + 416) = v28 + 18656;
  *(_QWORD *)(v8 + 408) = v28 + 18688;
  *(_QWORD *)(v8 + 400) = v28 + 18720;
  *(_QWORD *)(v8 + 392) = v28 + 29008;
  *(_QWORD *)(v8 + 384) = v28 + 29040;
  *(_QWORD *)(v8 + 1672) = v28 + 18624;
  *(_QWORD *)(v8 + 376) = v28 + 28912;
  *(_QWORD *)(v8 + 368) = v28 + 28944;
  *(_QWORD *)(v8 + 360) = v28 + 28976;
  *(_QWORD *)(v8 + 352) = v28 + 18944;
  *(_QWORD *)(v8 + 344) = v28 + 18976;
  *(_QWORD *)(v8 + 1664) = v28 + 28880;
  *(_QWORD *)(v8 + 336) = v28 + 18848;
  *(_QWORD *)(v8 + 328) = v28 + 18880;
  *(_QWORD *)(v8 + 320) = v28 + 18912;
  *(_QWORD *)(v8 + 7832) = v28 + 29232;
  *(_QWORD *)(v8 + 7824) = v28 + 29264;
  *(_QWORD *)(v8 + 312) = v28 + 18816;
  *(_QWORD *)(v8 + 7872) = v28 + 0x62AA055D109F5DC3;
  *(_QWORD *)(v8 + 7816) = v28 + 29200;
  *(_QWORD *)(v8 + 7864) = v28 + 0x62AA055D109F57F3;
  *(_QWORD *)(v8 + 304) = v28 + 29136;
  *(_QWORD *)(v8 + 7808) = v28 + 29168;
  *(_QWORD *)(v8 + 4000) = v28 + 0x62AA055D109FB593;
  *(_QWORD *)(v8 + 80) = v28 + 0x62AA055D109F25C3;
  *(_QWORD *)(v8 + 296) = v28 + 29072;
  *(_QWORD *)(v8 + 288) = v28 + 29104;
  *(_QWORD *)(v8 + 1656) = v28 + 26512;
  *(_QWORD *)(v8 + 1648) = v28 + 26544;
  *(_QWORD *)(v8 + 72) = v28 + 0x62AA055D109F4773;
  *(_QWORD *)(v8 + 1640) = v28 + 26416;
  *(_QWORD *)(v8 + 1632) = v28 + 26448;
  *(_QWORD *)(v8 + 1624) = v28 + 26480;
  *(_QWORD *)(v8 + 1616) = v28 + 16224;
  *(_QWORD *)(v8 + 1608) = v28 + 16256;
  *(_QWORD *)(v8 + 1600) = v28 + 16288;
  *(_QWORD *)(v8 + 112) = v28 + 0x62AA055D109FB103;
  *(_QWORD *)(v8 + 1592) = v28 + 16160;
  *(_QWORD *)(v8 + 1584) = v28 + 16192;
  *(_QWORD *)(v8 + 1936) = v28 + 0x62AA055D109F3FB3;
  *(_QWORD *)(v8 + 1968) = v28 + 0x62AA055D109F5B83;
  *(_QWORD *)(v8 + 104) = v28 + 0x62AA055D109F7EE3;
  *(_QWORD *)(v8 + 2552) = v28 + 0x62AA055D109FB063;
  *(_QWORD *)(v8 + 4160) = v28 + 0x62AA055D109F9353;
  *(_QWORD *)(v8 + 6176) = v28 + 0x62AA055D109F32C3;
  *(_QWORD *)(v8 + 2656) = v28 + 0x62AA055D109F4D43;
  *(_QWORD *)(v8 + 2384) = v28 + 0x62AA055D109F2A73;
  *(_QWORD *)(v8 + 3264) = v28 + 0x62AA055D109F4353;
  *(_QWORD *)(v8 + 2296) = v28 + 0x62AA055D109F9553;
  *(_QWORD *)(v8 + 2224) = v28 + 0x62AA055D109F2FF3;
  *(_QWORD *)(v8 + 3000) = v28 + 0x62AA055D109F58B3;
  *(_QWORD *)(v8 + 2648) = v28 + 0x62AA055D109FC5A3;
  *(_QWORD *)(v8 + 2360) = v28 + 0x62AA055D109F71D3;
  *(_QWORD *)(v8 + 2288) = v28 + 0x62AA055D109F2463;
  *(_QWORD *)(v8 + 2496) = v28 + 0x62AA055D109FA6D3;
  *(_QWORD *)(v8 + 2368) = v28 + 0x62AA055D109F46D3;
  *(_QWORD *)(v8 + 2392) = v28 + 0x62AA055D109FC123;
  *(_QWORD *)(v8 + 2504) = v28 + 0x62AA055D109FC7F3;
  *(_QWORD *)(v8 + 2624) = v28 + 0x62AA055D109F7E33;
  *(_QWORD *)(v8 + 2584) = v28 + 0x62AA055D109FA563;
  *(_QWORD *)(v8 + 2512) = v28 + 0x62AA055D109F7F93;
  *(_QWORD *)(v8 + 2576) = v28 + 0x62AA055D109F30D3;
  *(_QWORD *)(v8 + 2728) = v28 + 0x62AA055D109F9403;
  *(_QWORD *)(v8 + 2272) = v28 + 0x62AA055D109F9603;
  *(_QWORD *)(v8 + 2632) = v28 + 0x62AA055D109FC333;
  *(_QWORD *)(v8 + 2992) = v28 + 0x62AA055D109FA773;
  *(_QWORD *)(v8 + 2592) = v28 + 0x62AA055D109FB6F3;
  *(_QWORD *)(v8 + 2736) = v28 + 0x62AA055D109F36A3;
  *(_QWORD *)(v8 + 2280) = v28 + 0x62AA055D109FB3C3;
  *(_QWORD *)(v8 + 2696) = v28 + 0x62AA055D109F3F03;
  *(_QWORD *)(v8 + 2336) = v28 + 0x62AA055D109FB903;
  *(_QWORD *)(v8 + 2720) = v28 + 0x62AA055D109F35E3;
  *(_QWORD *)(v8 + 2376) = v28 + 0x62AA055D109FB313;
  *(_QWORD *)(v8 + 1952) = v28 + 0x62AA055D109F6CC3;
  *(_QWORD *)(v8 + 2816) = v28 + 5716;
  *(_QWORD *)(v8 + 2808) = v28 + 5723;
  *(_QWORD *)(v8 + 2800) = v28 + 5729;
  *(_QWORD *)(v8 + 2792) = v28 + 5727;
  *(_QWORD *)(v8 + 2784) = v28 + 5726;
  *(_QWORD *)(v8 + 2776) = v28 + 5734;
  *(_QWORD *)(v8 + 2768) = v28 + 5730;
  *(_QWORD *)(v8 + 2760) = v28 + 5742;
  *(_QWORD *)(v8 + 2752) = v28 + 5740;
  *(_QWORD *)(v8 + 2744) = v28 + 5739;
  *(_QWORD *)(v8 + 3312) = v28 + 0x62AA055D109F20F3;
  *(_QWORD *)(v8 + 7744) = *(_QWORD *)(v8 + 12344);
  *(_QWORD *)(v8 + 8288) = *(_QWORD *)(v8 + 12336);
  *(_QWORD *)(v8 + 256) = *(_QWORD *)(v8 + 12352);
  *(_DWORD *)(v8 + 1516) = 218;
  *(_DWORD *)(v8 + 1372) = 93;
  *(_DWORD *)(v8 + 4772) = 26;
  *(_DWORD *)(v8 + 1368) = 105;
  *(_DWORD *)(v8 + 5124) = 57;
  *(_DWORD *)(v8 + 5084) = 211;
  *(_QWORD *)(v8 + 1384) = 72;
  *(_DWORD *)(v8 + 6292) = 235;
  *(_DWORD *)(v8 + 1408) = 43;
  *(_DWORD *)(v8 + 5152) = 238;
  *(_DWORD *)(v8 + 4768) = 58;
  *(_DWORD *)(v8 + 4764) = 137;
  *(_DWORD *)(v8 + 4972) = 114;
  *(_DWORD *)(v8 + 4760) = 100;
  *(_DWORD *)(v8 + 4900) = 144;
  *(_DWORD *)(v8 + 6480) = 8;
  *(_QWORD *)(v8 + 4752) = 211;
  *(_DWORD *)(v8 + 1432) = 19;
  *(_DWORD *)(v8 + 5068) = 205;
  *(_DWORD *)(v8 + 4748) = 219;
  *(_DWORD *)(v8 + 4744) = 222;
  *(_DWORD *)(v8 + 1456) = 71;
  *(_DWORD *)(v8 + 5144) = 203;
  *(_DWORD *)(v8 + 1336) = 99;
  *(_DWORD *)(v8 + 4740) = 66;
  *(_DWORD *)(v8 + 4736) = 136;
  *(_DWORD *)(v8 + 4964) = 116;
  *(_DWORD *)(v8 + 4848) = 91;
  *(_DWORD *)(v8 + 5080) = 253;
  *(_DWORD *)(v8 + 5104) = 225;
  *(_DWORD *)(v8 + 4852) = 246;
  *(_DWORD *)(v8 + 5140) = 173;
  *(_DWORD *)(v8 + 4916) = 130;
  *(_DWORD *)(v8 + 4844) = 186;
  *(_DWORD *)(v8 + 4872) = 103;
  *(_DWORD *)(v8 + 5164) = 131;
  *(_DWORD *)(v8 + 1412) = 173;
  *(_DWORD *)(v8 + 4732) = 133;
  *(_DWORD *)(v8 + 4896) = 32;
  *(_DWORD *)(v8 + 6512) = 34;
  *(_DWORD *)(v8 + 4840) = 157;
  *(_DWORD *)(v8 + 4728) = 131;
  *(_DWORD *)(v8 + 4996) = 190;
  *(_DWORD *)(v8 + 4724) = 251;
  *(_DWORD *)(v8 + 6648) = 123;
  *(_DWORD *)(v8 + 4720) = 74;
  *(_DWORD *)(v8 + 4716) = 19;
  *(_DWORD *)(v8 + 1444) = 138;
  *(_DWORD *)(v8 + 5056) = 52;
  *(_QWORD *)(v8 + 5032) = 230;
  *(_DWORD *)(v8 + 5044) = 106;
  *(_DWORD *)(v8 + 5008) = 104;
  *(_DWORD *)(v8 + 6664) = 93;
  *(_DWORD *)(v8 + 4908) = 235;
  *(_QWORD *)(v8 + 6840) = 110;
  *(_DWORD *)(v8 + 5072) = 130;
  *(_DWORD *)(v8 + 1364) = 239;
  *(_DWORD *)(v8 + 1500) = 47;
  *(_DWORD *)(v8 + 5016) = 157;
  *(_DWORD *)(v8 + 6824) = 139;
  *(_DWORD *)(v8 + 5100) = 184;
  *(_DWORD *)(v8 + 4712) = 51;
  *(_DWORD *)(v8 + 4708) = 233;
  *(_DWORD *)(v8 + 4704) = 37;
  *(_DWORD *)(v8 + 1360) = 221;
  *(_DWORD *)(v8 + 5116) = 25;
  *(_DWORD *)(v8 + 4904) = 185;
  *(_DWORD *)(v8 + 4700) = 56;
  *(_DWORD *)(v8 + 4968) = 136;
  *(_DWORD *)(v8 + 4696) = 129;
  *(_DWORD *)(v8 + 1452) = 47;
  *(_DWORD *)(v8 + 6504) = 86;
  *(_DWORD *)(v8 + 4692) = 91;
  *(_DWORD *)(v8 + 1380) = 93;
  *(_DWORD *)(v8 + 1512) = 50;
  *(_DWORD *)(v8 + 4988) = 169;
  *(_DWORD *)(v8 + 4912) = 48;
  *(_DWORD *)(v8 + 5028) = 128;
  *(_DWORD *)(v8 + 6584) = 95;
  *(_DWORD *)(v8 + 5088) = 5;
  *(_DWORD *)(v8 + 5332) = 186;
  *(_DWORD *)(v8 + 4688) = 125;
  *(_DWORD *)(v8 + 4836) = 30;
  *(_DWORD *)(v8 + 1464) = 131;
  *(_DWORD *)(v8 + 4884) = 147;
  *(_DWORD *)(v8 + 5004) = 182;
  *(_QWORD *)(v8 + 6336) = 195;
  *(_DWORD *)(v8 + 5108) = 248;
  *(_DWORD *)(v8 + 4832) = 44;
  *(_DWORD *)(v8 + 4684) = 30;
  *(_DWORD *)(v8 + 5000) = 219;
  *(_DWORD *)(v8 + 5132) = 218;
  *(_DWORD *)(v8 + 4680) = 247;
  *(_QWORD *)(v8 + 6520) = 206;
  *(_DWORD *)(v8 + 5112) = 110;
  *(_DWORD *)(v8 + 4828) = 131;
  *(_DWORD *)(v8 + 7848) = 244;
  *(_DWORD *)(v8 + 5136) = 22;
  *(_DWORD *)(v8 + 5128) = 18;
  *(_DWORD *)(v8 + 1424) = 229;
  *(_DWORD *)(v8 + 4676) = 43;
  *(_DWORD *)(v8 + 4984) = 183;
  *(_DWORD *)(v8 + 4812) = 223;
  *(_QWORD *)(v8 + 6616) = 77;
  *(_QWORD *)(v8 + 4664) = 221;
  *(_DWORD *)(v8 + 4660) = 168;
  *(_DWORD *)(v8 + 4656) = 218;
  *(_DWORD *)(v8 + 4824) = 81;
  *(_DWORD *)(v8 + 6468) = 116;
  *(_DWORD *)(v8 + 1332) = 82;
  *(_DWORD *)(v8 + 5160) = 198;
  *(_DWORD *)(v8 + 4652) = 88;
  *(_QWORD *)(v8 + 6560) = 107;
  *(_DWORD *)(v8 + 4864) = 34;
  *(_DWORD *)(v8 + 4648) = 41;
  *(_DWORD *)(v8 + 1508) = 179;
  *(_DWORD *)(v8 + 6288) = 125;
  *(_DWORD *)(v8 + 1460) = 138;
  *(_DWORD *)(v8 + 5076) = 2;
  *(_QWORD *)(v8 + 6472) = 135;
  *(_DWORD *)(v8 + 4820) = 226;
  *(_DWORD *)(v8 + 4644) = 109;
  *(_DWORD *)(v8 + 6440) = 159;
  *(_DWORD *)(v8 + 4808) = 212;
  *(_DWORD *)(v8 + 1328) = 42;
  *(_QWORD *)(v8 + 6848) = 77;
  *(_QWORD *)(v8 + 6320) = 120;
  *(_DWORD *)(v8 + 4816) = 141;
  *(_DWORD *)(v8 + 1476) = 54;
  *(_DWORD *)(v8 + 9184) = 179;
  *(_DWORD *)(v8 + 1436) = 248;
  *(_DWORD *)(v8 + 4640) = 171;
  *(_DWORD *)(v8 + 1496) = 233;
  *(_QWORD *)(v8 + 6592) = 130;
  *(_DWORD *)(v8 + 4636) = 120;
  *(_DWORD *)(v8 + 4632) = 130;
  *(_DWORD *)(v8 + 8300) = 82;
  *(_DWORD *)(v8 + 6456) = 181;
  *(_DWORD *)(v8 + 4880) = 170;
  *(_DWORD *)(v8 + 5156) = 120;
  *(_DWORD *)(v8 + 8572) = 105;
  *(_DWORD *)(v8 + 5092) = 68;
  *(_DWORD *)(v8 + 6332) = 22;
  *(_DWORD *)(v8 + 6704) = 18;
  *(_DWORD *)(v8 + 1864) = 19;
  *(_DWORD *)(v8 + 8544) = 220;
  *(_DWORD *)(v8 + 4628) = 71;
  *(_DWORD *)(v8 + 4960) = 160;
  *(_QWORD *)(v8 + 6600) = 94;
  *(_DWORD *)(v8 + 9240) = 25;
  *(_DWORD *)(v8 + 1480) = 62;
  *(_DWORD *)(v8 + 4624) = 190;
  *(_DWORD *)(v8 + 5012) = 33;
  *(_DWORD *)(v8 + 4800) = 138;
  *(_DWORD *)(v8 + 5064) = 124;
  *(_DWORD *)(v8 + 1324) = 125;
  *(_DWORD *)(v8 + 6128) = 62;
  *(_DWORD *)(v8 + 1356) = 77;
  *(_DWORD *)(v8 + 6628) = 93;
  *(_DWORD *)(v8 + 1488) = 97;
  *(_DWORD *)(v8 + 4620) = 236;
  *(_DWORD *)(v8 + 4796) = 32;
  *(_DWORD *)(v8 + 4888) = 160;
  *(_DWORD *)(v8 + 1428) = 169;
  *(_QWORD *)(v8 + 6576) = 171;
  *(_DWORD *)(v8 + 5020) = 46;
  *(_DWORD *)(v8 + 6408) = 47;
  *(_DWORD *)(v8 + 4616) = 172;
  *(_DWORD *)(v8 + 9040) = 174;
  *(_DWORD *)(v8 + 1352) = 163;
  *(_DWORD *)(v8 + 4612) = 186;
  *(_DWORD *)(v8 + 4608) = 64;
  *(_DWORD *)(v8 + 6424) = 74;
  *(_DWORD *)(v8 + 4604) = 71;
  *(_DWORD *)(v8 + 1472) = 146;
  *(_DWORD *)(v8 + 7520) = 143;
  *(_DWORD *)(v8 + 6416) = 157;
  *(_DWORD *)(v8 + 4600) = 1;
  *(_DWORD *)(v8 + 6432) = 207;
  *(_DWORD *)(v8 + 4976) = 82;
  *(_DWORD *)(v8 + 4596) = 245;
  *(_DWORD *)(v8 + 2180) = 92;
  *(_DWORD *)(v8 + 4792) = 131;
  *(_DWORD *)(v8 + 1396) = 159;
  *(_DWORD *)(v8 + 1348) = 224;
  *(_DWORD *)(v8 + 1320) = 3;
  *(_DWORD *)(v8 + 4804) = 211;
  *(_QWORD *)(v8 + 4584) = 226;
  *(_DWORD *)(v8 + 8932) = 155;
  *(_DWORD *)(v8 + 5120) = 250;
  *(_DWORD *)(v8 + 4920) = 93;
  *(_DWORD *)(v8 + 8800) = 74;
  *(_QWORD *)(v8 + 6296) = 36;
  *(_DWORD *)(v8 + 1316) = 226;
  *(_DWORD *)(v8 + 4980) = 5;
  *(_DWORD *)(v8 + 5060) = 123;
  *(_DWORD *)(v8 + 4580) = 188;
  *(_DWORD *)(v8 + 4576) = 154;
  *(_DWORD *)(v8 + 4040) = 186;
  *(_DWORD *)(v8 + 6632) = 77;
  *(_DWORD *)(v8 + 1468) = 139;
  *(_DWORD *)(v8 + 5148) = 173;
  *(_DWORD *)(v8 + 1312) = 115;
  *(_DWORD *)(v8 + 4876) = 246;
  *(_DWORD *)(v8 + 4572) = 19;
  *(_DWORD *)(v8 + 1416) = 222;
  *(_DWORD *)(v8 + 6496) = 224;
  *(_DWORD *)(v8 + 1308) = 147;
  *(_DWORD *)(v8 + 5048) = 201;
  *(_DWORD *)(v8 + 1404) = 56;
  *(_DWORD *)(v8 + 1344) = 230;
  *(_QWORD *)(v8 + 6488) = 226;
  *(_DWORD *)(v8 + 4568) = 204;
  *(_QWORD *)(v8 + 6608) = 69;
  *(_DWORD *)(v8 + 1376) = 134;
  *(_DWORD *)(v8 + 1492) = 135;
  *(_DWORD *)(v8 + 1420) = 119;
  *(_DWORD *)(v8 + 6784) = 253;
  *(_DWORD *)(v8 + 6400) = 9;
  *(_DWORD *)(v8 + 1504) = 143;
  *(_DWORD *)(v8 + 5052) = 120;
  *(_DWORD *)(v8 + 6640) = 153;
  *(_DWORD *)(v8 + 5024) = 249;
  *(_DWORD *)(v8 + 4564) = 214;
  *(_DWORD *)(v8 + 4868) = 28;
  *(_DWORD *)(v8 + 6392) = 174;
  *(_DWORD *)(v8 + 5312) = 165;
  *(_DWORD *)(v8 + 8304) = 1;
  *(_DWORD *)(v8 + 4560) = 84;
  *(_DWORD *)(v8 + 1304) = 224;
  *(_DWORD *)(v8 + 4860) = 95;
  *(_QWORD *)(v8 + 6544) = 73;
  *(_DWORD *)(v8 + 6528) = 205;
  *(_DWORD *)(v8 + 4892) = 71;
  *(_DWORD *)(v8 + 1340) = 26;
  *(_DWORD *)(v8 + 6656) = 225;
  *(_DWORD *)(v8 + 6448) = 120;
  *(_DWORD *)(v8 + 6552) = 156;
  *(_DWORD *)(v8 + 4788) = 93;
  *(_DWORD *)(v8 + 4784) = 86;
  *(_DWORD *)(v8 + 1400) = 36;
  *(_DWORD *)(v8 + 6156) = 99;
  *(_DWORD *)(v8 + 1484) = 88;
  *(_DWORD *)(v8 + 6568) = 10;
  *(_DWORD *)(v8 + 1440) = 27;
  *(_DWORD *)(v8 + 4780) = 207;
  *(_DWORD *)(v8 + 4776) = 239;
  *(_DWORD *)(v8 + 8328) = 4;
  *(_DWORD *)(v8 + 4992) = 231;
  *(_DWORD *)(v8 + 1860) = 137;
  *(_DWORD *)(v8 + 1448) = 203;
  *(_DWORD *)(v8 + 5096) = 111;
  *(_DWORD *)(v8 + 4556) = 111;
  *(_DWORD *)(v8 + 4552) = 16;
  *(_DWORD *)(v8 + 9736) = 0;
  return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)(v8 + 9744) + 8 * (a4 + 6488)))(32, (__n128)0);
}

uint64_t sub_1002A03A4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;

  *(_DWORD *)(v5 + 9736) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((98 * (a1 > 1)) ^ (v4 - 3997))) - ((v4 - 3997) ^ v6 ^ v7)))();
}

uint64_t sub_1002A0400@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1
                                                      + 8
                                                      * ((((v3 - 1754) ^ v4) * ((a3 | 2u) < a2)) ^ v3))
                                          - 4))(a2);
}

uint64_t sub_1002A0438@<X0>(unsigned int a1@<W0>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8 * (((11 * (((v3 - 1818) | 0x40) ^ 0x14A) + v4) * ((a3 | 3u) < a1)) ^ v3))
                            - 4))();
}

uint64_t sub_1002A0488@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  *(_DWORD *)(v11 + a2) = v5 | (*(unsigned __int8 *)(v10 + (v7 - v8)) << 24);
  ++*(_DWORD *)(v9 + 9736);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * (v6 ^ (5785 * (a5 + 4 < a4))))
                                          - ((5 * (((v6 + a1) | 0x811) ^ v12)) ^ 0x827)))(a4);
}

void sub_1002A04E8()
{
  JUMPOUT(0x1002A03C4);
}

uint64_t sub_1002A04F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(void);
  uint64_t v12;

  v10 = (v6 - 739665240) & 0x2C167DFF;
  *(_DWORD *)(v9 + a3) = v5;
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 9736) - 6652 + v10;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(a4
                                      + 8 * ((943 * (((v10 - 4938) ^ (v10 - 1412) ^ 0xC4C08C0B) + v8 < 0x100)) ^ v10))
                          - 12);
  v12 = *(_QWORD *)(a5 + 8 * (v10 ^ 0x18FF));
  *(_QWORD *)(v7 + 9640) = v12 + 5325;
  *(_QWORD *)(v7 + 9536) = v12 + 1943;
  *(_QWORD *)(v7 + 9704) = v12 + 5848;
  *(_QWORD *)(v7 + 9648) = v12 + 3642;
  *(_QWORD *)(v7 + 9552) = v12 + 518;
  *(_QWORD *)(v7 + 9560) = v12 + 3371;
  *(_QWORD *)(v7 + 9544) = v12 + 5587;
  *(_QWORD *)(v7 + 9176) = v12 - 8;
  return v11();
}

uint64_t sub_1002A05B8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1
                                                                        + 8
                                                                        * (((((v2 < 0x80) ^ (a2 + 100)) & 1)
                                                                          * ((45 * (a2 ^ 0x1498)) ^ 0x277C)) ^ a2))
                                                            - 8))(2059600627, 152, 7644);
}

uint64_t sub_1002A062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((27 * (v4 < v5 - 9933)) ^ v5)) - 445 * (v5 ^ 0x2789u) + 1772))();
}

uint64_t sub_1002A0668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (int)(((((v5 - 1517291798) ^ 0xA5900C1D) - 4703) * (v4 < 0xA0)) ^ (v5 - 8826)))
                            - ((v5 - 1517291798) & 0x5A6FF9CF)
                            + 6207))();
}

uint64_t sub_1002A06BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;

  return (*(uint64_t (**)(void))(a4 + 8 * (((((v5 ^ 0x3D8C) - 2806) ^ 0x1AD8) * (v4 > 0x8F)) ^ v5)))();
}

uint64_t sub_1002A06F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((((v5 + 2067) ^ 0x233C) * (v4 < 0x98)) ^ v5))
                            - (v5 + 3513)
                            + 10374))();
}

uint64_t sub_1002A072C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * (((v2 < ((7 * (a2 ^ 0x2E9F)) ^ 0x2AE3u)) * ((a2 - 3780) ^ 0x19F6)) ^ a2))
                            - 4))();
}

uint64_t sub_1002A076C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((6 * (v5 ^ 0x2A59) - 27) * (v4 < 0x92)) ^ v5))
                            - ((v5 - 10743) | 0x42Au)
                            + 1190))();
}

void sub_1002A07B0(int a1@<W6>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v9 = (a1 + a2 - 276);
  v10 = v2 == v5 + (_DWORD)v9 - 131;
  v11 = *(_DWORD *)(v6 + 4524);
  v12 = *(_DWORD *)(v6 + 9736);
  if (!v10)
    v11 = *(_DWORD *)(v6 + 9736);
  *(_DWORD *)(v6 + 4524) = v11;
  v13 = *(_DWORD *)(v6 + 9656);
  if (v10)
  {
    v13 = v12;
    v14 = 994009553;
  }
  else
  {
    v14 = 994009552;
  }
  *(_DWORD *)(v6 + 9464) = v14;
  *(_QWORD *)(v6 + 9416) = v9;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = v8;
  *(_DWORD *)(v6 + 7544) = v13;
  *(_DWORD *)(v6 + 7920) = *(_DWORD *)(v6 + 7936);
  *(_DWORD *)(v6 + 7368) = *(_DWORD *)(v6 + 9504);
  *(_DWORD *)(v6 + 7536) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 7904) = v4;
  *(_DWORD *)(v6 + 7384) = *(_DWORD *)(v6 + 9632);
  *(_DWORD *)(v6 + 7928) = v7;
  *(_DWORD *)(v6 + 7912) = *(_DWORD *)(v6 + 7888);
  *(_DWORD *)(v6 + 7364) = *(_DWORD *)(v6 + 9688);
  *(_DWORD *)(v6 + 7360) = v3;
  JUMPOUT(0x1002A020CLL);
}

uint64_t sub_1002B2D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v11 + 9416) = (a7 + v7 - 461);
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4
                                                                                        + 8
                                                                                        * ((7494
                                                                                          * (((v12 == v9 + 358) ^ (a7 + v7 + 51)) & 1)) ^ v7))
                                                                            - 8);
  *(_DWORD *)(v11 + 9464) = v9 + 359;
  v16 = *(_QWORD *)(v11 + 4472);
  *(_QWORD *)(v11 + 9456) = *(_QWORD *)(v11 + 7048);
  *(_QWORD *)(v11 + 9608) = v14;
  *(_DWORD *)(v11 + 7544) = *(_DWORD *)(v11 + 9656);
  v17 = *(unsigned int *)(v11 + 7448);
  *(_DWORD *)(v11 + 7920) = *(_DWORD *)(v11 + 7936);
  *(_DWORD *)(v11 + 7368) = *(_DWORD *)(v11 + 9504);
  *(_DWORD *)(v11 + 7536) = *(_DWORD *)(v11 + 9736);
  *(_DWORD *)(v11 + 7904) = v10;
  *(_DWORD *)(v11 + 7384) = *(_DWORD *)(v11 + 9632);
  *(_DWORD *)(v11 + 7928) = v13;
  *(_DWORD *)(v11 + 7912) = *(_DWORD *)(v11 + 7888);
  *(_DWORD *)(v11 + 7364) = *(_DWORD *)(v11 + 9688);
  *(_DWORD *)(v11 + 7360) = v8;
  *(_DWORD *)(v11 + 9664) = *(_DWORD *)(v11 + 6976);
  *(_DWORD *)(v11 + 9616) = *(_DWORD *)(v11 + 7096);
  *(_DWORD *)(v11 + 9600) = *(_DWORD *)(v11 + 7020);
  *(_DWORD *)(v11 + 7560) = *(_DWORD *)(v11 + 9576);
  *(_DWORD *)(v11 + 9172) = *(_DWORD *)(v11 + 9432);
  *(_DWORD *)(v11 + 9488) = *(_DWORD *)(v11 + 7064);
  *(_DWORD *)(v11 + 7380) = *(_DWORD *)(v11 + 9592);
  *(_DWORD *)(v11 + 9472) = *(_DWORD *)(v11 + 7136);
  return v15(a1, a2, a3, v17, v16);
}

void sub_1002B2E20()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 8264) = v6;
  *(_DWORD *)(v5 + 7544) = *(_DWORD *)(v5 + 9656);
  *(_DWORD *)(v5 + 7368) = v4;
  *(_DWORD *)(v5 + 7536) = *(_DWORD *)(v5 + 9624);
  *(_DWORD *)(v5 + 7904) = v3;
  *(_DWORD *)(v5 + 7384) = *(_DWORD *)(v5 + 9632);
  *(_DWORD *)(v5 + 7616) = *(_DWORD *)(v5 + 5340);
  *(_DWORD *)(v5 + 7912) = *(_DWORD *)(v5 + 7888);
  *(_DWORD *)(v5 + 7364) = *(_DWORD *)(v5 + 9688);
  *(_DWORD *)(v5 + 4348) = *(_DWORD *)(v5 + 9736);
  *(_DWORD *)(v5 + 7360) = v0;
  *(_DWORD *)(v5 + 7560) = v2;
  *(_DWORD *)(v5 + 9172) = *(_DWORD *)(v5 + 9432);
  *(_DWORD *)(v5 + 7380) = v1;
  JUMPOUT(0x10031CC58);
}

void sub_1002B2E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v10 = v8 ^ (a7 + 1190);
  v11 = v7 == (v10 ^ (a7 + 15));
  v12 = *(_DWORD *)(v9 + 8968);
  v13 = *(_DWORD *)(v9 + 9736);
  if (!v11)
    v12 = *(_DWORD *)(v9 + 9736);
  *(_DWORD *)(v9 + 8968) = v12;
  if (v11)
    v14 = 994009457;
  else
    v14 = 994009456;
  *(_DWORD *)(v9 + 9464) = v14;
  v15 = *(_DWORD *)(v9 + 5348);
  if (v11)
    v15 = v13;
  *(_DWORD *)(v9 + 5348) = v15;
  *(_QWORD *)(v9 + 9416) = v10;
  JUMPOUT(0x1002B2EACLL);
}

void sub_1002B2EC4(int a1@<W6>, int a2@<W8>)
{
  int v2;
  _DWORD *v3;
  BOOL v4;
  int v5;
  int v6;

  v4 = v2 == ((a1 + a2 - 461) ^ (a1 + 427));
  v5 = v3[1133];
  if (v4)
    v5 = v3[2434];
  v3[1133] = v5;
  if (v4)
    v6 = 994009877;
  else
    v6 = 994009876;
  v3[2366] = v6;
  JUMPOUT(0x1002B1CB0);
}

uint64_t sub_1002B2F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v10 + 9416) = (v7 - 805309689) ^ 0x4AC2E4C8u;
  v13 = *(_QWORD *)(v10 + 8264) + 32;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4
                                                                                        + 8
                                                                                        * (int)(((v11 != ((v7 - 805309689) ^ 0xF4C09536))
                                                                                               * ((v7 - 805309689) & 0xB53D1B37 ^ (a7 - 1737))) ^ v7))
                                                                            - 12);
  *(_DWORD *)(v10 + 9464) = 994009578;
  v15 = *(_QWORD *)(v10 + 4472);
  *(_QWORD *)(v10 + 9456) = *(_QWORD *)(v10 + 7048);
  *(_QWORD *)(v10 + 9608) = v13;
  *(_DWORD *)(v10 + 7544) = *(_DWORD *)(v10 + 9656);
  v16 = *(unsigned int *)(v10 + 7448);
  *(_DWORD *)(v10 + 7920) = *(_DWORD *)(v10 + 7936);
  *(_DWORD *)(v10 + 7368) = *(_DWORD *)(v10 + 9504);
  *(_DWORD *)(v10 + 7536) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 7904) = v9;
  *(_DWORD *)(v10 + 7384) = *(_DWORD *)(v10 + 9632);
  *(_DWORD *)(v10 + 7928) = v12;
  *(_DWORD *)(v10 + 7912) = *(_DWORD *)(v10 + 7888);
  *(_DWORD *)(v10 + 7364) = *(_DWORD *)(v10 + 9688);
  *(_DWORD *)(v10 + 7360) = v8;
  *(_DWORD *)(v10 + 9664) = *(_DWORD *)(v10 + 6976);
  *(_DWORD *)(v10 + 9616) = *(_DWORD *)(v10 + 7096);
  *(_DWORD *)(v10 + 9600) = *(_DWORD *)(v10 + 7020);
  *(_DWORD *)(v10 + 7560) = *(_DWORD *)(v10 + 9576);
  *(_DWORD *)(v10 + 9172) = *(_DWORD *)(v10 + 9432);
  *(_DWORD *)(v10 + 9488) = *(_DWORD *)(v10 + 7064);
  *(_DWORD *)(v10 + 7380) = *(_DWORD *)(v10 + 9592);
  *(_DWORD *)(v10 + 9472) = *(_DWORD *)(v10 + 7136);
  return v14(a1, a2, a3, v16, v15);
}

void sub_1002B3038()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 8264) = v6;
  *(_DWORD *)(v5 + 7544) = *(_DWORD *)(v5 + 9656);
  *(_DWORD *)(v5 + 7368) = v4;
  *(_DWORD *)(v5 + 7536) = *(_DWORD *)(v5 + 9624);
  *(_DWORD *)(v5 + 7904) = v3;
  *(_DWORD *)(v5 + 7384) = *(_DWORD *)(v5 + 9632);
  *(_DWORD *)(v5 + 7616) = *(_DWORD *)(v5 + 5340);
  *(_DWORD *)(v5 + 7912) = *(_DWORD *)(v5 + 7888);
  *(_DWORD *)(v5 + 7364) = *(_DWORD *)(v5 + 9688);
  *(_DWORD *)(v5 + 4348) = *(_DWORD *)(v5 + 9736);
  *(_DWORD *)(v5 + 7360) = v0;
  *(_DWORD *)(v5 + 7560) = v2;
  *(_DWORD *)(v5 + 9172) = *(_DWORD *)(v5 + 9432);
  *(_DWORD *)(v5 + 7380) = v1;
  JUMPOUT(0x10031CC58);
}

void sub_1002B305C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  v10 = *(_DWORD *)(v9 + 3016);
  if (v7 == a1 + a7 + v8 - 141 - 276 + 13)
    v10 = *(_DWORD *)(v9 + 9736);
  *(_DWORD *)(v9 + 3016) = v10;
  JUMPOUT(0x1002B3098);
}

uint64_t sub_1002B30AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v15 = a7 - 6793;
  v16 = (v15 - 2130707608) | 0x43D1005u;
  *(_QWORD *)(v12 + 9416) = v16;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 + 8 * (int)(((v11 + v16 + 292) * (v7 == 69)) ^ v15)) - 4);
  *(_DWORD *)(v12 + 9464) = v9 + 69;
  v18 = *(_QWORD *)(v12 + 4472);
  *(_QWORD *)(v12 + 9456) = *(_QWORD *)(v12 + 7048);
  *(_QWORD *)(v12 + 9608) = v14;
  *(_DWORD *)(v12 + 7544) = *(_DWORD *)(v12 + 9656);
  v19 = *(unsigned int *)(v12 + 7448);
  *(_DWORD *)(v12 + 7920) = *(_DWORD *)(v12 + 7936);
  *(_DWORD *)(v12 + 7368) = *(_DWORD *)(v12 + 9504);
  *(_DWORD *)(v12 + 7536) = *(_DWORD *)(v12 + 9736);
  *(_DWORD *)(v12 + 7904) = v10;
  *(_DWORD *)(v12 + 7384) = *(_DWORD *)(v12 + 9632);
  *(_DWORD *)(v12 + 7928) = v13;
  *(_DWORD *)(v12 + 7912) = *(_DWORD *)(v12 + 7888);
  *(_DWORD *)(v12 + 7364) = *(_DWORD *)(v12 + 9688);
  *(_DWORD *)(v12 + 7360) = v8;
  *(_DWORD *)(v12 + 9664) = *(_DWORD *)(v12 + 6976);
  *(_DWORD *)(v12 + 9616) = *(_DWORD *)(v12 + 7096);
  *(_DWORD *)(v12 + 9600) = *(_DWORD *)(v12 + 7020);
  *(_DWORD *)(v12 + 7560) = *(_DWORD *)(v12 + 9576);
  *(_DWORD *)(v12 + 9172) = *(_DWORD *)(v12 + 9432);
  *(_DWORD *)(v12 + 9488) = *(_DWORD *)(v12 + 7064);
  *(_DWORD *)(v12 + 7380) = *(_DWORD *)(v12 + 9592);
  *(_DWORD *)(v12 + 9472) = *(_DWORD *)(v12 + 7136);
  return v17(a1, a2, a3, v19, v18, a5, a6, 32);
}

void sub_1002B31AC()
{
  JUMPOUT(0x1002B31CCLL);
}

void sub_1002B3284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;

  v11 = *(_DWORD *)(v10 + 4532);
  if (v7 == v9 + a7 + v8 - 472 + 109)
    v11 = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 4532) = v11;
  JUMPOUT(0x1002B32C4);
}

void sub_1002B3388()
{
  JUMPOUT(0x1002B33D4);
}

uint64_t sub_1002B3414(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v11 = (v4 + 17890885) | 0x842C1005;
  *(_QWORD *)(v7 + 9416) = v11;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(a4
                                      + 8
                                      * (int)(((v8 != ((v4 - 314746038) & 0x97FFB2FF ^ 0xBE02728E)) * (a1 + v11 + 2852)) ^ v4))
                          - 8);
  *(_DWORD *)(v7 + 9464) = 994009754;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  *(_QWORD *)(v7 + 9608) = v10;
  *(_DWORD *)(v7 + 7544) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 7920) = *(_DWORD *)(v7 + 7936);
  *(_DWORD *)(v7 + 7368) = *(_DWORD *)(v7 + 9504);
  *(_DWORD *)(v7 + 7536) = *(_DWORD *)(v7 + 9736);
  *(_DWORD *)(v7 + 7904) = v6;
  *(_DWORD *)(v7 + 7384) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 7928) = v9;
  *(_DWORD *)(v7 + 7912) = *(_DWORD *)(v7 + 7888);
  *(_DWORD *)(v7 + 7364) = *(_DWORD *)(v7 + 9688);
  *(_DWORD *)(v7 + 7360) = v5;
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 7560) = *(_DWORD *)(v7 + 9576);
  *(_DWORD *)(v7 + 9172) = *(_DWORD *)(v7 + 9432);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 7380) = *(_DWORD *)(v7 + 9592);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  return v12();
}

void sub_1002B3538()
{
  JUMPOUT(0x1002B3558);
}

uint64_t sub_1002B360C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v11 = (v5 + 87100249) | 0x800C0014;
  *(_QWORD *)(v8 + 9416) = v11;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (int)(((v11 + ((v5 - 608) ^ (v7 + 2079))) * (v9 != 994009417)) ^ v5))
                          - 4);
  *(_DWORD *)(v8 + 9464) = 994009418;
  *(_QWORD *)(v8 + 9456) = *(_QWORD *)(v8 + 7048);
  *(_QWORD *)(v8 + 9608) = *(_QWORD *)(v8 + 3888);
  *(_DWORD *)(v8 + 7544) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 7920) = *(_DWORD *)(v8 + 7936);
  *(_DWORD *)(v8 + 7368) = *(_DWORD *)(v8 + 9504);
  *(_DWORD *)(v8 + 7536) = *(_DWORD *)(v8 + 9624);
  *(_DWORD *)(v8 + 7904) = v6;
  *(_DWORD *)(v8 + 7384) = *(_DWORD *)(v8 + 9632);
  *(_DWORD *)(v8 + 7928) = v10;
  *(_DWORD *)(v8 + 7912) = *(_DWORD *)(v8 + 7888);
  *(_DWORD *)(v8 + 7364) = *(_DWORD *)(v8 + 9688);
  *(_DWORD *)(v8 + 7360) = v4;
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 6976);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 7096);
  *(_DWORD *)(v8 + 9600) = *(_DWORD *)(v8 + 9736);
  *(_DWORD *)(v8 + 7560) = *(_DWORD *)(v8 + 9576);
  *(_DWORD *)(v8 + 9172) = *(_DWORD *)(v8 + 9432);
  *(_DWORD *)(v8 + 9488) = *(_DWORD *)(v8 + 7064);
  *(_DWORD *)(v8 + 7380) = *(_DWORD *)(v8 + 9592);
  *(_DWORD *)(v8 + 9472) = *(_DWORD *)(v8 + 7136);
  return v12();
}

uint64_t sub_1002B3738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char v5;
  unint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 9728) + (unsigned __int16)(31 * (98 - v4)) % 0x196u) = v6 >> v5;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4 + 8 * ((104 * (((v7 - 3429) ^ 0x24B) + v4 != 32)) ^ v7))
                                         - 4))(0);
}

uint64_t sub_1002B37B0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v1 != 32) * ((v0 ^ 0xEE) - 438)) ^ v0)) - 8))();
}

uint64_t sub_1002B37E0@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (5823 * (a2 < *(_DWORD *)(v3 + 7104)))))
                            - 803 * (v2 ^ 0x2A1u)
                            + 4007))();
}

uint64_t sub_1002B3820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002B3738(a1, a2, a3, a4);
}

uint64_t sub_1002B3850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v10 + 9416) = (v8 - 2059596947);
  v12 = (*(unsigned __int8 *)(*(_QWORD *)(v10 + 9560)
                            + (*(unsigned __int8 *)(*(_QWORD *)(v10 + 9728)
                                                  + (unsigned __int16)(31 * a1 + 2077)
                                                  % ((unsigned __int16)(v8 + 2925) ^ 0x1181u)) ^ 0x26)) ^ 0x60)
      + 3;
  v13 = *(_QWORD *)(v10 + 4200);
  *(_BYTE *)(v13 - a1 + 31) = ((*(_BYTE *)(*(_QWORD *)(v10 + 9544)
                                         + (((((*(_BYTE *)(*(_QWORD *)(v10 + 9560)
                                                                          + (*(unsigned __int8 *)(*(_QWORD *)(v10 + 9728)
                                                                                                + (unsigned __int16)(31 * a1 + 2077)
                                                                                                % ((unsigned __int16)(v8 + 2925) ^ 0x1181u)) ^ 0x26)) ^ 0x60)
                                                              + 3) >> 5) | (8 * v12)) & 0x87 ^ 0x25)) ^ 0x55)
                             + 10) & 0xF | (16 * v12);
  v14 = *(_QWORD *)(*(_QWORD *)(v10 + 9744) + 8 * ((2821 * (a1 != 31)) ^ v8));
  *(_DWORD *)(v10 + 9464) = 994009419;
  v15 = *(_QWORD *)(v10 + 4224);
  *(_QWORD *)(v10 + 9456) = *(_QWORD *)(v10 + 7048);
  *(_QWORD *)(v10 + 9608) = v13;
  *(_DWORD *)(v10 + 7544) = *(_DWORD *)(v10 + 9656);
  v16 = *(unsigned int *)(v10 + 7448);
  *(_DWORD *)(v10 + 7920) = *(_DWORD *)(v10 + 7936);
  *(_DWORD *)(v10 + 7368) = v11;
  *(_DWORD *)(v10 + 7536) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 7904) = v9;
  *(_DWORD *)(v10 + 7384) = *(_DWORD *)(v10 + 9632);
  *(_DWORD *)(v10 + 7928) = *(_DWORD *)(v10 + 7952);
  *(_DWORD *)(v10 + 7912) = *(_DWORD *)(v10 + 7888);
  *(_DWORD *)(v10 + 7364) = *(_DWORD *)(v10 + 9688);
  *(_DWORD *)(v10 + 3828) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 7360) = v7;
  *(_DWORD *)(v10 + 9664) = *(_DWORD *)(v10 + 6976);
  *(_DWORD *)(v10 + 9616) = *(_DWORD *)(v10 + 7096);
  *(_DWORD *)(v10 + 9600) = *(_DWORD *)(v10 + 7020);
  *(_DWORD *)(v10 + 7560) = a7;
  *(_DWORD *)(v10 + 9172) = *(_DWORD *)(v10 + 9432);
  *(_DWORD *)(v10 + 9488) = *(_DWORD *)(v10 + 7064);
  *(_DWORD *)(v10 + 7380) = a6;
  *(_DWORD *)(v10 + 9472) = *(_DWORD *)(v10 + 7136);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 - 4))(a1 + 1, a2, a3, v16, v15);
}

void sub_1002B39CC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v4 = (v0 - 1220571029) & 0xCDFD7E97;
  v5 = *(_DWORD *)(v2 + 9736);
  v6 = *(_QWORD *)(v2 + 8264) + (v5 & 0x20) + ((v4 - 2235371511) ^ v5 & 0x20);
  *(_DWORD *)(v2 + 9464) = 994009638;
  *(_QWORD *)(v2 + 9416) = v4;
  *(_QWORD *)(v2 + 9456) = *(_QWORD *)(v2 + 7048);
  *(_QWORD *)(v2 + 9608) = v6;
  *(_DWORD *)(v2 + 7544) = *(_DWORD *)(v2 + 9656);
  *(_DWORD *)(v2 + 7920) = *(_DWORD *)(v2 + 7936);
  *(_DWORD *)(v2 + 7368) = *(_DWORD *)(v2 + 9504);
  *(_DWORD *)(v2 + 7536) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 7904) = v1;
  *(_DWORD *)(v2 + 7384) = *(_DWORD *)(v2 + 9632);
  *(_DWORD *)(v2 + 7928) = v3;
  *(_DWORD *)(v2 + 7912) = v5;
  JUMPOUT(0x1002B2D04);
}

void sub_1002B3A7C()
{
  int v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 8264) += 32;
  *(_DWORD *)(v1 + 7544) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 7368) = *(_DWORD *)(v1 + 9504);
  *(_DWORD *)(v1 + 7536) = *(_DWORD *)(v1 + 9624);
  *(_DWORD *)(v1 + 7904) = v0;
  *(_DWORD *)(v1 + 7384) = *(_DWORD *)(v1 + 9632);
  *(_DWORD *)(v1 + 7616) = *(_DWORD *)(v1 + 5340);
  *(_DWORD *)(v1 + 7912) = *(_DWORD *)(v1 + 7888);
  *(_DWORD *)(v1 + 7364) = *(_DWORD *)(v1 + 9688);
  *(_DWORD *)(v1 + 4348) = *(_DWORD *)(v1 + 9736);
  JUMPOUT(0x1002B3D44);
}

uint64_t sub_1002B3D7C(int a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  int v13;
  int v14;

  v9 = v5 ^ 0x547;
  v10 = (a1 + v9 - 962);
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((12806 * (v6 != ((a1 + v9 + 62) ^ 0x67))) ^ v9))
                          + 2235371539
                          - v10);
  *(_DWORD *)(v7 + 8932) = 117;
  *(_DWORD *)(v7 + 8572) = 112;
  *(_DWORD *)(v7 + 9688) = 1;
  *(_DWORD *)(v7 + 8280) = 19;
  *(_QWORD *)(v7 + 9416) = v10;
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 6904);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 6872);
  *(_QWORD *)(v7 + 7656) = *(_QWORD *)(v7 + 6864);
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 6888);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 6880);
  *(_QWORD *)(v7 + 7704) = *(_QWORD *)(v7 + 6896);
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 6088);
  v12 = *(_QWORD *)(v7 + 3240);
  *(_QWORD *)(v7 + 8576) = v12;
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 8936) = v12;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 6928);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  v13 = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 9116) = v13;
  v14 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 8312) = v14;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = *(_DWORD *)(v7 + 6856);
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 8368) = a5;
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9480) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 8912) = v13;
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 7640) = *(_DWORD *)(v7 + 6912);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 6920);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 9128) = v13;
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8920) = v14;
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 8496) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 9736) = 1;
  *(_DWORD *)(v7 + 8440) = *(_DWORD *)(v7 + 9240);
  *(_DWORD *)(v7 + 8352) = *(_DWORD *)(v7 + 9040);
  *(_DWORD *)(v7 + 7632) = a4;
  return v11();
}

uint64_t sub_1002B3FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;

  *(_QWORD *)(v7 + 9416) = v6;
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 6904);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 6872);
  *(_QWORD *)(v7 + 7656) = *(_QWORD *)(v7 + 6864);
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 6888);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 6880);
  *(_QWORD *)(v7 + 7704) = *(_QWORD *)(v7 + 6896);
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 6928);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = *(_DWORD *)(v7 + 6856);
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 8368) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 9480) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 7640) = *(_DWORD *)(v7 + 6912);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 6920);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  v8 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 8312) = v8;
  *(_DWORD *)(v7 + 8920) = v8;
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 8496) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 8440) = *(_DWORD *)(v7 + 9240);
  *(_DWORD *)(v7 + 8352) = *(_DWORD *)(v7 + 9040);
  *(_DWORD *)(v7 + 7632) = *(_DWORD *)(v7 + 9680);
  *(_DWORD *)(v7 + 8932) = 118;
  *(_DWORD *)(v7 + 8572) = 113;
  *(_DWORD *)(v7 + 9688) = 1;
  *(_DWORD *)(v7 + 8280) = 19;
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 6088);
  v9 = *(_QWORD *)(v7 + 3280);
  *(_QWORD *)(v7 + 8576) = v9;
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 8936) = v9;
  v10 = *(_DWORD *)(v7 + 9264);
  *(_DWORD *)(v7 + 9116) = v10;
  *(_DWORD *)(v7 + 8912) = v10;
  *(_DWORD *)(v7 + 9128) = v10;
  *(_DWORD *)(v7 + 9224) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9736) = 1;
  return sub_1003249CC(a1, a2, a3, *(unsigned int *)(v7 + 8328), a5, a6, 0, 0);
}

uint64_t sub_1002B4144(int a1, int a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  int v15;

  *(_DWORD *)(v7 + 9432) = 0;
  *(_DWORD *)(v7 + 9080) = 0;
  *(_DWORD *)(v7 + 9576) = 0;
  *(_DWORD *)(v7 + 9496) = 0;
  *(_DWORD *)(v7 + 9012) = 0;
  *(_DWORD *)(v7 + 9488) = 0;
  *(_DWORD *)(v7 + 9472) = 0;
  v11 = v5 ^ (v10 + 513);
  v12 = *(_QWORD *)(v9 + 8 * (v5 ^ ((v6 == 114) * a2)));
  *(_QWORD *)(v7 + 9416) = v11;
  v13 = (uint64_t (*)(void))(v12 - (v11 - a1 - 812) + 3088);
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 6904);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 6872);
  *(_QWORD *)(v7 + 7656) = *(_QWORD *)(v7 + 6864);
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 6888);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 6880);
  *(_QWORD *)(v7 + 7704) = *(_QWORD *)(v7 + 6896);
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 6928);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = *(_DWORD *)(v7 + 6856);
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 9480) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = *(_DWORD *)(v7 + 6912);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 6920);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 9624) = *(_DWORD *)(v7 + 9264);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 8984) = v6;
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 7632) = a4;
  LODWORD(v11) = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 8312) = v11;
  *(_DWORD *)(v7 + 8920) = v11;
  LODWORD(v11) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 9528) = v11;
  *(_DWORD *)(v7 + 8496) = v11;
  *(_DWORD *)(v7 + 9456) = 256;
  *(_DWORD *)(v7 + 8280) = 19;
  *(_QWORD *)(v7 + 9600) = v8;
  *(_QWORD *)(v7 + 9608) = *(_QWORD *)(v7 + 9016);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 9320);
  *(_DWORD *)(v7 + 9384) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 9440) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 8456);
  LODWORD(v11) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9632) = v11;
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 9592) = *(_DWORD *)(v7 + 8328);
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 6088);
  v14 = *(_QWORD *)(v7 + 3248);
  *(_QWORD *)(v7 + 8576) = v14;
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 8936) = v14;
  v15 = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9116) = v15;
  *(_DWORD *)(v7 + 8368) = a5;
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 8912) = v15;
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 9128) = v15;
  *(_DWORD *)(v7 + 9264) = v11;
  *(_DWORD *)(v7 + 9688) = 1;
  *(_DWORD *)(v7 + 9736) = 1;
  *(_DWORD *)(v7 + 8572) = 114;
  *(_DWORD *)(v7 + 8440) = *(_DWORD *)(v7 + 9240);
  *(_DWORD *)(v7 + 8352) = *(_DWORD *)(v7 + 9040);
  *(_DWORD *)(v7 + 8932) = 119;
  return v13();
}

uint64_t sub_1002B4470()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (v0 ^ (21 * (v1 > 0x61))))
                            - ((v0 - 4522) | 0x4C0u)
                            + 1238))();
}

uint64_t sub_1002B44A8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 9744)
                                            + 8
                                            * ((22
                                              * (*(_DWORD *)(v1 + 4040) == ((-43 * ((v0 + 85) & 0xDF ^ 0x14)) ^ 0x15))) ^ v0)))(3046685140);
}

void sub_1002B4524()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  v1 = *(_DWORD *)(v0 + 7536) ^ 0x9506BFEE;
  v2 = *(_QWORD *)(v0 + 7864);
  v3 = *(_QWORD *)(v0 + 7872);
  v4 = *(_QWORD *)(v0 + 4000);
  v5 = *(_QWORD *)(v0 + 4472);
  v6 = *(_QWORD *)(v0 + 4488);
  v7 = *(_QWORD *)(v0 + 4480);
  v8 = *(_QWORD *)(v0 + 2080);
  v9 = *(_QWORD *)(v0 + 2352);
  v10 = *(_QWORD *)(v0 + 2152);
  v11 = *(_DWORD *)(v0 + 7384);
  *(_DWORD *)(v0 + 3992) = *(_DWORD *)(v0 + 9152);
  v12 = *(_DWORD *)(v0 + 4348);
  v13 = *(_DWORD *)(v0 + 2348);
  v14 = *(_DWORD *)(v0 + 8548);
  *(_DWORD *)(v0 + 3988) = v14;
  *(_DWORD *)(v0 + 3996) = *(_DWORD *)(v0 + 8272);
  v15 = *(_DWORD *)(v0 + 2444);
  v16 = *(_DWORD *)(v0 + 7544);
  v17 = *(_DWORD *)(v0 + 7920);
  v18 = *(_DWORD *)(v0 + 7928);
  v19 = *(_DWORD *)(v0 + 6072);
  v20 = *(_DWORD *)(v0 + 6080);
  v21 = *(_DWORD *)(v0 + 9680);
  *(_DWORD *)(v0 + 6084) = *(_DWORD *)(v0 + 6084);
  *(_DWORD *)(v0 + 6080) = v20;
  *(_DWORD *)(v0 + 6072) = v19;
  *(_DWORD *)(v0 + 4100) = v11;
  *(_QWORD *)(v0 + 4088) = v9;
  *(_DWORD *)(v0 + 4040) = 108;
  *(_QWORD *)(v0 + 4064) = v8;
  *(_QWORD *)(v0 + 4072) = v6;
  *(_QWORD *)(v0 + 4032) = v5;
  *(_QWORD *)(v0 + 4192) = v4;
  *(_QWORD *)(v0 + 4168) = v3;
  *(_QWORD *)(v0 + 4176) = v2;
  *(_DWORD *)(v0 + 9432) = *(_DWORD *)(v0 + 9172);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 4084) = v15;
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  LODWORD(v9) = v18;
  v22 = *(_DWORD *)(v0 + 7904);
  *(_DWORD *)(v0 + 7944) = v14;
  *(_DWORD *)(v0 + 4060) = v1 ^ 0x9506BFEE;
  *(_QWORD *)(v0 + 7664) = *(_QWORD *)(v0 + 6904);
  *(_QWORD *)(v0 + 7680) = *(_QWORD *)(v0 + 6872);
  *(_QWORD *)(v0 + 7656) = *(_QWORD *)(v0 + 6864);
  *(_QWORD *)(v0 + 7688) = *(_QWORD *)(v0 + 6888);
  *(_QWORD *)(v0 + 7696) = *(_QWORD *)(v0 + 6880);
  *(_QWORD *)(v0 + 7704) = *(_QWORD *)(v0 + 6896);
  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 8764) = *(_DWORD *)(v0 + 8828);
  *(_DWORD *)(v0 + 8768) = *(_DWORD *)(v0 + 8860);
  *(_DWORD *)(v0 + 7712) = *(_DWORD *)(v0 + 6928);
  *(_DWORD *)(v0 + 7936) = v17;
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7648) = *(_DWORD *)(v0 + 6856);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 9384) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 8748) = *(_DWORD *)(v0 + 8980);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 9520) = *(_DWORD *)(v0 + 8196);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 8736) = *(_DWORD *)(v0 + 8792);
  *(_DWORD *)(v0 + 8728) = *(_DWORD *)(v0 + 8816);
  *(_DWORD *)(v0 + 8744) = *(_DWORD *)(v0 + 8628);
  *(_DWORD *)(v0 + 8720) = *(_DWORD *)(v0 + 8968);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 8760) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 8752) = *(_DWORD *)(v0 + 8136);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 7952) = v9;
  *(_DWORD *)(v0 + 8712) = *(_DWORD *)(v0 + 8868);
  *(_DWORD *)(v0 + 8696) = *(_DWORD *)(v0 + 8840);
  *(_DWORD *)(v0 + 9440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 8688) = *(_DWORD *)(v0 + 8864);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 7640) = *(_DWORD *)(v0 + 6912);
  *(_DWORD *)(v0 + 8680) = *(_DWORD *)(v0 + 8808);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 7672) = *(_DWORD *)(v0 + 6920);
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 8672) = *(_DWORD *)(v0 + 8848);
  *(_DWORD *)(v0 + 9632) = *(_DWORD *)(v0 + 9072);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8664) = *(_DWORD *)(v0 + 8992);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 7592) = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 8656) = *(_DWORD *)(v0 + 8776);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 8648) = *(_DWORD *)(v0 + 9004);
  *(_DWORD *)(v0 + 7584) = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 8640) = *(_DWORD *)(v0 + 8784);
  *(_DWORD *)(v0 + 4028) = v12;
  *(_DWORD *)(v0 + 7576) = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 8704) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9184);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 8632) = *(_DWORD *)(v0 + 8800);
  *(_DWORD *)(v0 + 7632) = v21;
  *(_DWORD *)(v0 + 4012) = v16;
  *(_QWORD *)(v0 + 9504) = *(_QWORD *)(v0 + 7880);
  *(_QWORD *)(v0 + 4016) = v7;
  *(_QWORD *)(v0 + 9576) = v7;
  *(_QWORD *)(v0 + 4048) = v10;
  *(_QWORD *)(v0 + 9496) = v10;
  *(_DWORD *)(v0 + 9688) = *(_DWORD *)(v0 + 7768);
  *(_DWORD *)(v0 + 8312) = v22;
  *(_DWORD *)(v0 + 4044) = v13;
  *(_DWORD *)(v0 + 9736) = v13;
  JUMPOUT(0x10032816CLL);
}

uint64_t sub_1002B4540(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1696) - v5 + 31) = a1 >> (v3 & ((v4 - 116) ^ 0x7F));
  return (*(uint64_t (**)(void))(a3 + 8 * (((v4 - 452) * (v5 == 31)) ^ v4)))();
}

uint64_t sub_1002B45A4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744) + 8 * (((v2 == a2 - 4447) * (a2 - 3578)) ^ a2)))();
}

uint64_t sub_1002B45D0@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W6>, unsigned int a4@<W8>)
{
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD))(a2
                                           + 8
                                           * (((a3 & ~((a1 - 3211) ^ (*(_DWORD *)(v4 + 3996) > a4))) * (a1 - 4461)) | (a1 - 18))))(0);
}

uint64_t sub_1002B460C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002B4540(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002B4650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 584) - v3 + ((v4 + 65147706) & 0xFC1DF773) - 4691) = v6 >> (v5 & (((v4 + 48) & 0x8B) + 127));
  return (*(uint64_t (**)(void))(a3 + 8 * (v4 ^ (8024 * (v3 == 31)))))();
}

uint64_t sub_1002B46E0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 + 6537)) ^ v1)) - 4))();
}

uint64_t sub_1002B4710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v5 ^ (13937 * (v3 < *(_DWORD *)(v6 + 3992))))) - (v4 ^ 0x7C0)))();
}

uint64_t sub_1002B4740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B4650(a1, a2, a3);
}

uint64_t sub_1002B477C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 576) - v4 + 31) = (unint64_t)v6 >> a4;
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD))(v7
                                                                    + 8 * ((((v5 + 602) ^ 0x16F6) * (v4 != 31)) ^ v5)))((v5 + 602) ^ 0x1B80u, *(_QWORD *)(v8 + 4000), 2937046074, (a4 + 8));
}

uint64_t sub_1002B47DC(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8
                                        * (((a4 == ((a1 - 1497375443) ^ 0xA6BFE807) - 1912)
                                          * (((a1 - 1497375443) & 0x59401BF2) - 565)) ^ a1))
                            - 8))();
}

uint64_t sub_1002B4824@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 + 1524666345) & 0xA51F76F6 ^ 0x1229) * (a1 < *(_DWORD *)(v3 + 3988))) ^ v1)))();
}

uint64_t sub_1002B4860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B477C(a1, a2, a3, 0);
}

uint64_t sub_1002B4904@<X0>(unint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 568) - v2 + 31) = a1 >> v3;
  return (*(uint64_t (**)(_QWORD))(v4 + 8 * ((73 * (((1273 * (a2 ^ 0x79Au)) ^ 0x9F3) + v2 == 32)) ^ a2)))(0);
}

uint64_t sub_1002B4970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((7584 * (v5 == 32)) ^ a5))
                            - ((a5 - 19) ^ 0xE47u)
                            + 1940))();
}

uint64_t sub_1002B49A4(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((45
                                                                         * (((*(_DWORD *)(v5 + 8272) > v3) ^ (v2 - 70)) & 1)) ^ v2))
                                                           - 4))(a1, a2, 0);
}

uint64_t sub_1002B49E0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  return sub_1002B4904(*(unsigned int *)(a1 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002B4A14(int a1, uint64_t a2)
{
  int v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 600) + ((v2 - 424) | 0x18D4u) - 4191 - a1 - 3711) = v4 >> v3;
  v6 = 149;
  if ((a1 + 1) < 0x20)
    v6 = 21;
  return (*(uint64_t (**)(void))(a2 + 8 * ((7879 * (*(_BYTE *)(*(_QWORD *)(v5 + 9704) + v6) == 88)) ^ v2)))();
}

uint64_t sub_1002B4A90(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * (((v4 != 32) * (a4 ^ 0xEC6)) ^ a4))
                            - (((a4 - 3162) | 0xC82u) ^ 0xECALL)))();
}

uint64_t sub_1002B4AD4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a2 + 7794) * (v2 < *(_DWORD *)(v3 + 9152))) ^ a2)) - 12))();
}

uint64_t sub_1002B4B08(int a1, uint64_t a2)
{
  return sub_1002B4A14(a1, a2);
}

uint64_t sub_1002B4B30(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v8 = (v5 + 17628908) | 0x84301017;
  *(_BYTE *)(*(_QWORD *)(v7 + 592) + -v6 - 2235371512 + v8) = v4 >> v3;
  v9 = *(uint64_t (**)(uint64_t))(a2 + 8 * (v5 ^ (6146 * (v6 != 31))));
  *(_DWORD *)(v7 + 9464) = 994009827;
  *(_DWORD *)(v7 + 4040) = 106;
  *(_QWORD *)(v7 + 9416) = v8;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  v10 = *(_QWORD *)(v7 + 1704);
  *(_QWORD *)(v7 + 9608) = v10;
  *(_DWORD *)(v7 + 7944) = a3;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v9(v10);
}

uint64_t sub_1002B4C48()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((14772 * (v1 == ((v0 - 827217257) & 0x314E377F ^ 0x134))) ^ v0))
                            - 12))();
}

uint64_t sub_1002B4C90@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (16063 * (a2 > a3)))) - (v3 - 7657) + 264))();
}

uint64_t sub_1002B4CC4(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002B4B30(a1, a2, a3);
}

uint64_t sub_1002B4D04@<X0>(int a1@<W6>, char a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8
                                        * ((a1 & ~((v2 + 3644) ^ (a2 == 97)) | (8 * (a1 & ~((v2 + 3644) ^ (a2 == 97))))) ^ (v2 - 1399)))
                            - ((v2 - 1399) ^ 0xC59)))();
}

void sub_1002B4DB4(int a1@<W8>)
{
  _DWORD *v1;
  int v2;
  int v3;
  int v4;

  v1[1337] = (((a1 - 9014) | 0x121) ^ 0x6C8E8CC9) + v1[1521];
  v1[1986] = v1[2137] + 1178976256;
  v2 = v1[2288];
  v3 = v1[2068];
  v4 = v1[1986] - 1178976256;
  v1[1862] = v1[1862];
  v1[997] = v4;
  v1[998] = v2;
  v1[999] = v3;
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002B4E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(*(_QWORD *)(v8 + 1704) - v4 + 31) = v6 >> ((((v7 + 40) | 8) + 115) & v5);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a4 + 8 * (v7 ^ ((v4 == 31) * v9))) - 12))(4116367604, 32);
}

uint64_t sub_1002B4E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(a4 + 8 * ((v4 == ((v5 + v6) | 0x800) - 3132) | v5)))();
}

uint64_t sub_1002B4E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a4 + 8 * (((((v5 + v7) & v8) - 160) * (v4 < *(_DWORD *)(v6 + 3996))) ^ v5)))();
}

uint64_t sub_1002B4EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002B4E10(a1, a2, a3, a4);
}

uint64_t sub_1002B4EFC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 1272) - a3 + 31) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((v3 + 625) ^ v6) * (a3 == 31)) | v3)) - 12))();
}

uint64_t sub_1002B4F44(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((a2 == 32) * (((v4 + 1513) | 0x180) + v5)) ^ v4)) - 8))();
}

uint64_t sub_1002B4F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4 + 8 * (v7 ^ ((v6 < *(_DWORD *)(v8 + 3992)) * a5)))
                                         - ((v7 + v9) & v10)
                                         + a6))(0);
}

uint64_t sub_1002B4FA4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002B4EFC(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a1, a2);
}

uint64_t sub_1002B4FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(void))(a4 + 8 * ((2 * v4) ^ 0x3F5A | (2 * (((((2 * v4) ^ 0x3F5A) - 753) ^ 0x141B) == 32)))))();
}

uint64_t sub_1002B5064()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * (((8 * (((v1 < 0x66) ^ (9 * ((v0 + 50) & 0xAF ^ 0x26))) & 1)) & 0xEF | (16 * (((v1 < 0x66) ^ (9 * ((v0 + 50) & 0xAF ^ 0x26))) & 1))) ^ v0)))();
}

uint64_t sub_1002B50B0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                                     + 8
                                                     * ((233
                                                       * (*(_DWORD *)(v1 + 4040) == (v0 + 11))) ^ v0))
                                         - ((v0 - 176331268) & 0x8FBF97B7 ^ 0x853D1013)))((v0 + 984));
}

void sub_1002B5120()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002B513C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1680) - v6 + 31) = v5 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((3620 * (v6 + 1 == (v4 ^ 0xA79u) - 6355)) ^ v4))
                            - (v4 + 945)
                            + 5687))();
}

uint64_t sub_1002B51A8(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (a1 ^ 0x282B)) ^ a1)) - 4))();
}

uint64_t sub_1002B51D8@<X0>(int a1@<W0>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((a1 ^ 0x1646) * (*(_DWORD *)(v3 + 3996) > a3)) ^ a1)) - 4))();
}

uint64_t sub_1002B5208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B513C(a1, a2, a3);
}

uint64_t sub_1002B5238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 504) - v4 + 31) = v7 >> v5;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4
                                                     + 8
                                                     * ((5938 * (((v6 - 1893609377) & 0x70DE3CF7 ^ 0x18F2) + v4 != 32)) ^ v6))
                                         - 4))(v6 ^ 0x707u);
}

uint64_t sub_1002B52B8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((504 * (((a2 - 86) ^ (v2 == 32)) & 1)) ^ a2))
                            - 8))();
}

uint64_t sub_1002B530C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 ^ 0x3417) * (*(_DWORD *)(v4 + 3992) > v2)) ^ a2)) - 8))();
}

uint64_t sub_1002B533C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002B5238(a1, a2, a3, a4);
}

uint64_t sub_1002B5370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 496) - v2 + 31) = v5 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((63 * (v2 + 1 == (v3 ^ 0x2B8u) + 887 - 3195)) ^ v3)) - 4))();
}

uint64_t sub_1002B53D0(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((7694 * (v1 == ((a1 - 255) ^ 0xBBC))) ^ a1))
                            - 4))();
}

uint64_t sub_1002B5400@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((31
                                          * (((a2 < *(_DWORD *)(v3 + 3988)) ^ (((v2 ^ 0x18) + 12) ^ ((v2 ^ 0x18) + 87))) & 1)) ^ v2 ^ 0x718))
                            - 4))();
}

uint64_t sub_1002B5458(uint64_t a1, uint64_t a2)
{
  return sub_1002B5370(a1, a2);
}

uint64_t sub_1002B5490@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 488) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (a3 ^ ((2 * (v3 != 31)) | (16 * (v3 != 31))))) - 12))(*(_QWORD *)(v5 + 7872));
}

uint64_t sub_1002B5510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((97 * (v5 != 791 * (a5 ^ 0x927) - 2341)) ^ a5))
                            - 12))();
}

uint64_t sub_1002B5550(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (1279 * (*(_DWORD *)(v3 + 8272) > v1))))
                            - (v2 ^ 0xF4Au)
                            + 1539))();
}

uint64_t sub_1002B5588(uint64_t a1, uint64_t a2)
{
  int v2;

  return sub_1002B5490(a1, *(unsigned int *)(a2 - 0x62AA055D109F20F3), 33 * (v2 ^ 0x96Au));
}

uint64_t sub_1002B55BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 520) - v5 + 31) = a4 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((v4 + 5034) ^ (v4 + 4354) ^ 0x2C14) * (v5 == 31)) ^ v4)) - 12))();
}

uint64_t sub_1002B5624()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 + 5837)) ^ v1)))();
}

uint64_t sub_1002B5650(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((((v3 + 410404054) & 0xE789A77F ^ 0x3761) * (v2 < *(_DWORD *)(v4 + 9152))) ^ v3)))();
}

uint64_t sub_1002B5694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B55BC(a1 + 4, a2, a3, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B56CC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v4 - 2059596225);
  *(_BYTE *)(*(_QWORD *)(v6 + 512) - a2 + 31) = v3 >> ((((v4 - 29) & 0x55) - 18) & v2);
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ (9579 * (a2 != 31)))) - 12);
  *(_DWORD *)(v6 + 9464) = 994009839;
  *(_DWORD *)(v6 + 4040) = 110;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1688);
  *(_DWORD *)(v6 + 7944) = a1;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002B57E0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 9744)
                                           + 8 * ((57 * (v0 == 118 * (v1 ^ 0x1715) - 440)) ^ v1)))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1002B5818(unsigned int a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + 8079) * (v1 < a1)) ^ v2)))();
}

uint64_t sub_1002B5848@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1002B56CC(a1, a2);
}

uint64_t sub_1002B5874@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((101 * (((a1 == 101) ^ (v1 - 38)) & 1)) ^ v1))
                            - ((v1 - 1178) ^ 0x1A9FLL)))();
}

void sub_1002B58D4()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;

  v1 = *(_DWORD *)(v0 + 7536) ^ 0x9506BFEE;
  v2 = *(_QWORD *)(v0 + 7864);
  v3 = *(_QWORD *)(v0 + 7872);
  v4 = *(_QWORD *)(v0 + 4000);
  v5 = *(_QWORD *)(v0 + 4472);
  v6 = *(_QWORD *)(v0 + 4488);
  v7 = *(_QWORD *)(v0 + 4480);
  v8 = *(_QWORD *)(v0 + 4104);
  v9 = *(_QWORD *)(v0 + 4152);
  v10 = *(_QWORD *)(v0 + 4144);
  v11 = *(_DWORD *)(v0 + 7448);
  *(_DWORD *)(v0 + 3992) = *(_DWORD *)(v0 + 9152);
  v12 = *(_DWORD *)(v0 + 4348);
  v13 = *(_DWORD *)(v0 + 6084);
  v14 = *(_DWORD *)(v0 + 8548);
  *(_DWORD *)(v0 + 3988) = v14;
  *(_DWORD *)(v0 + 3996) = *(_DWORD *)(v0 + 8272);
  v15 = *(_DWORD *)(v0 + 6072);
  v16 = *(_DWORD *)(v0 + 7544);
  v17 = *(_DWORD *)(v0 + 7920);
  v18 = *(_DWORD *)(v0 + 7928);
  v19 = *(_DWORD *)(v0 + 6080);
  v20 = *(_DWORD *)(v0 + 9680);
  *(_DWORD *)(v0 + 6084) = v13;
  *(_DWORD *)(v0 + 6080) = v19;
  *(_DWORD *)(v0 + 6072) = v15;
  *(_DWORD *)(v0 + 4100) = v11;
  *(_QWORD *)(v0 + 4088) = v9;
  *(_DWORD *)(v0 + 4040) = 110;
  *(_QWORD *)(v0 + 4064) = v8;
  *(_QWORD *)(v0 + 4072) = v6;
  *(_QWORD *)(v0 + 4032) = v5;
  *(_QWORD *)(v0 + 4192) = v4;
  *(_QWORD *)(v0 + 4168) = v3;
  *(_QWORD *)(v0 + 4176) = v2;
  *(_DWORD *)(v0 + 9432) = *(_DWORD *)(v0 + 9172);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 4084) = v15;
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  LODWORD(v9) = v18;
  v21 = *(_DWORD *)(v0 + 7904);
  *(_DWORD *)(v0 + 7944) = v14;
  *(_DWORD *)(v0 + 4060) = v1 ^ 0x9506BFEE;
  *(_QWORD *)(v0 + 7664) = *(_QWORD *)(v0 + 6904);
  *(_QWORD *)(v0 + 7680) = *(_QWORD *)(v0 + 6872);
  *(_QWORD *)(v0 + 7656) = *(_QWORD *)(v0 + 6864);
  *(_QWORD *)(v0 + 7688) = *(_QWORD *)(v0 + 6888);
  *(_QWORD *)(v0 + 7696) = *(_QWORD *)(v0 + 6880);
  *(_QWORD *)(v0 + 7704) = *(_QWORD *)(v0 + 6896);
  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 8764) = *(_DWORD *)(v0 + 8828);
  *(_DWORD *)(v0 + 8768) = *(_DWORD *)(v0 + 8860);
  *(_DWORD *)(v0 + 7712) = *(_DWORD *)(v0 + 6928);
  *(_DWORD *)(v0 + 7936) = v17;
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7648) = *(_DWORD *)(v0 + 6856);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 9384) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 8748) = *(_DWORD *)(v0 + 8980);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 9520) = *(_DWORD *)(v0 + 8196);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 8736) = *(_DWORD *)(v0 + 8792);
  *(_DWORD *)(v0 + 8728) = *(_DWORD *)(v0 + 8816);
  *(_DWORD *)(v0 + 8744) = *(_DWORD *)(v0 + 8628);
  *(_DWORD *)(v0 + 8720) = *(_DWORD *)(v0 + 8968);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 8760) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 8752) = *(_DWORD *)(v0 + 8136);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 7952) = v9;
  *(_DWORD *)(v0 + 8712) = *(_DWORD *)(v0 + 8868);
  *(_DWORD *)(v0 + 8696) = *(_DWORD *)(v0 + 8840);
  *(_DWORD *)(v0 + 9440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 8688) = *(_DWORD *)(v0 + 8864);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 7640) = *(_DWORD *)(v0 + 6912);
  *(_DWORD *)(v0 + 8680) = *(_DWORD *)(v0 + 8808);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 7672) = *(_DWORD *)(v0 + 6920);
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 8672) = *(_DWORD *)(v0 + 8848);
  *(_DWORD *)(v0 + 9632) = *(_DWORD *)(v0 + 9072);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8664) = *(_DWORD *)(v0 + 8992);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 7592) = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 8656) = *(_DWORD *)(v0 + 8776);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 8648) = *(_DWORD *)(v0 + 9004);
  *(_DWORD *)(v0 + 7584) = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 8640) = *(_DWORD *)(v0 + 8784);
  *(_DWORD *)(v0 + 4028) = v12;
  *(_DWORD *)(v0 + 7576) = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 8704) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9184);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 8632) = *(_DWORD *)(v0 + 8800);
  *(_DWORD *)(v0 + 7632) = v20;
  *(_DWORD *)(v0 + 4012) = v16;
  *(_QWORD *)(v0 + 9504) = *(_QWORD *)(v0 + 7880);
  *(_QWORD *)(v0 + 4016) = v7;
  *(_QWORD *)(v0 + 9576) = v7;
  *(_QWORD *)(v0 + 4048) = v10;
  *(_QWORD *)(v0 + 9496) = v10;
  *(_DWORD *)(v0 + 9688) = *(_DWORD *)(v0 + 7768);
  *(_DWORD *)(v0 + 8312) = v21;
  *(_DWORD *)(v0 + 4044) = v13;
  *(_DWORD *)(v0 + 9736) = v13;
  JUMPOUT(0x10032816CLL);
}

uint64_t sub_1002B58FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1688) - v6 + 31) = v5 >> (v3 & (((v4 + 116) & 0x6F) - 45));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * ((16365 * (v6 + 1 == (v4 ^ 0x5DBu) - 6771)) ^ v4))
                                          - 12))(1292546871);
}

uint64_t sub_1002B5980(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8
                                        * (((((a2 + 104) ^ (v2 == 32)) & 1) * ((a2 + 5) ^ 0x1A93)) ^ a2))
                            - 12))();
}

uint64_t sub_1002B59D8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a2 + 6236) * (v2 < *(_DWORD *)(v3 + 3996))) ^ a2)) - 12))();
}

uint64_t sub_1002B5A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B58FC(a1, a2, a3);
}

uint64_t sub_1002B5A38(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 544) - v3 + 31) = a1 >> ((22 * (v5 ^ 0xE2) - 45) & v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v5 | (15 * (v3 == 31)))) - 4))();
}

uint64_t sub_1002B5AAC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((13164 * (v0 == (((v1 - 3532) | 0x180) ^ 0x5C0))) ^ v1)))();
}

uint64_t sub_1002B5ADC@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD))(a1
                                           + 8
                                           * (int)((((v2 + 1657533905) & 0x9D33FDE2 ^ 0x3178)
                                                  * (*(_DWORD *)(v3 + 3992) > a2)) ^ v2)))(0);
}

uint64_t sub_1002B5B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002B5A38(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002B5B60(uint64_t a1)
{
  uint64_t v1;
  int v2;
  char v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 536) - v1 + ((v2 + 613618190) & 0xDB6CE9F3) - 466) = v4 >> v3;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * ((10091 * (v1 + 1 == ((v2 + 1614074366) & 0x9FCB3DBF) - 5517)) ^ v2))
                                         - 4))(*(_QWORD *)(v5 + 4000));
}

uint64_t sub_1002B5BF0(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8
                                        * (a2 | (2
                                               * ((((a2 ^ 0xB2) - 112) ^ (v2 == ((49 * (a2 ^ 0x15B2)) ^ 0x5CF))) & 1))))
                            - 12))();
}

uint64_t sub_1002B5C34@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((a2 - 4032) ^ 0x3803) * (v2 < *(_DWORD *)(v3 + 3988))) ^ a2))
                            - 12))();
}

uint64_t sub_1002B5C68(uint64_t a1)
{
  return sub_1002B5B60(a1);
}

uint64_t sub_1002B5C90@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 528) - a3 + 31) = a2 >> v4;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (v3 ^ (1983 * (a3 == 31))))
                                                   - ((((v3 - 7042) | 0x108Cu) - 5533) ^ 0x1F5)))(a1, 2684560710);
}

uint64_t sub_1002B5D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * ((1754 * (v5 == ((2209 * (a5 ^ 0x1F5)) ^ 0x22A4))) ^ a5))
                            - 12))();
}

uint64_t sub_1002B5D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                       + 8
                                                                       * ((47
                                                                         * (a7 & ~(((v8 ^ 0x235A) + 8358) ^ (v7 < *(_DWORD *)(v10 + 8272))))) ^ v8 ^ 0x235A))
                                                           - ((v8 ^ 0x235Au)
                                                            + 19)
                                                           + 485))(a1, a2, 0);
}

uint64_t sub_1002B5D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002B5C90(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002B5DC4(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 560) + ((v2 - 3501) ^ 0x1791) - v3) = a2 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((919 * ((((v2 - 8890) | 0x1528u) ^ 0x17A8) + v3 == 32)) ^ v2))
                            - 4))();
}

uint64_t sub_1002B5E38(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (((v4 == 32) * (((a4 - 5765) | 0x2432) + 4594)) ^ a4))
                            - ((a4 - 25802783) & 0x189B7F9)
                            + 5981))();
}

uint64_t sub_1002B5E90(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v1 ^ (231 * (*(_DWORD *)(v3 + 9152) <= v2))))
                            - ((v1 - 1031067498) & 0x574D78E)
                            + 6018))();
}

uint64_t sub_1002B5EE0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002B5DC4(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B5F14@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  v7 = (v5 + 18677491) | 0x84201010;
  *(_BYTE *)(*(_QWORD *)(v6 + 552) + (v7 ^ 0x853D1008) - a3) = v4 >> v3;
  v8 = *(uint64_t (**)(uint64_t))(a1 + 8 * (((((v5 + 5268) | 0x201) - 559) * (a3 != 31)) ^ v5));
  *(_DWORD *)(v6 + 9464) = 994009833;
  *(_QWORD *)(v6 + 9416) = v7;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  v9 = *(_QWORD *)(v6 + 1696);
  *(_QWORD *)(v6 + 9608) = v9;
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8(v9);
}

uint64_t sub_1002B6028()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((91 * (v0 == 32)) ^ v1))
                            - ((v1 - 5781) ^ 0x110)))();
}

uint64_t sub_1002B6060(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 ^ (13609 * (a3 > v3)))) - v5 + 272))();
}

uint64_t sub_1002B608C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  return sub_1002B5F14(a1, a2, a3);
}

uint64_t sub_1002B60C0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 616) - v5 + 31) = a2 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v4 ^ ((v5 == 31) | (16 * (v5 == 31))))) - 8))();
}

uint64_t sub_1002B6124()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((14 * (v1 == ((v0 - 1633) ^ 0x1E5))) ^ v0)))();
}

uint64_t sub_1002B6150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 8 * (((v4 ^ 0xF1) * (*(_DWORD *)(v7 + 9152) > v5)) ^ v6)))(a1, 0);
}

uint64_t sub_1002B617C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002B60C0(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a3, a4);
}

uint64_t sub_1002B61BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  *(_QWORD *)(v11 + 9416) = (v9 + 16842309) | 0x843C1005;
  *(_BYTE *)(*(_QWORD *)(v11 + 648) - v8 + 31) = v7 >> (((((v9 + 69) | 5) - a6 + 39) ^ 0x90u) & v6);
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v9 ^ (25 * (v8 != 31)))) - 8);
  *(_DWORD *)(v11 + 9464) = 994009567;
  *(_QWORD *)(v11 + 9456) = *(_QWORD *)(v11 + 7048);
  *(_QWORD *)(v11 + 9608) = *(_QWORD *)(v11 + 1816);
  *(_DWORD *)(v11 + 7944) = a1;
  *(_DWORD *)(v11 + 5344) = *(_DWORD *)(v11 + 6072);
  *(_DWORD *)(v11 + 5340) = *(_DWORD *)(v11 + 7616);
  *(_DWORD *)(v11 + 5348) = *(_DWORD *)(v11 + 6084);
  *(_DWORD *)(v11 + 5336) = *(_DWORD *)(v11 + 6080);
  *(_DWORD *)(v11 + 9664) = *(_DWORD *)(v11 + 6976);
  *(_DWORD *)(v11 + 9616) = *(_DWORD *)(v11 + 7096);
  *(_DWORD *)(v11 + 9600) = *(_DWORD *)(v11 + 7020);
  *(_DWORD *)(v11 + 9488) = *(_DWORD *)(v11 + 7064);
  *(_DWORD *)(v11 + 9472) = *(_DWORD *)(v11 + 7136);
  *(_DWORD *)(v11 + 4292) = *(_DWORD *)(v11 + 8280);
  *(_DWORD *)(v11 + 5312) = *(_DWORD *)(v11 + 9680);
  return v12();
}

uint64_t sub_1002B62C0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 9744)
                                           + 8 * ((29 * (v0 != ((v1 - 3234) ^ 0xFBF) - 3666)) ^ v1)))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1002B62F4@<X0>(unsigned int a1@<W0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 ^ 0x1B82) * (a1 > a2)) ^ v2)))();
}

uint64_t sub_1002B6324(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1002B61BC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1002B6350@<X0>(int a1@<W1>, int a2@<W8>)
{
  unsigned __int8 v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v7 + 8 * ((8511 * (v2 == (a1 + a2 - 123))) ^ a2 & 0x7151E9FFu));
  *(_QWORD *)(v5 + 7144) = a1 + (a2 & 0x7151E9FFu) - 2421;
  *(_DWORD *)(v5 + 8236) = 75;
  *(_DWORD *)(v5 + 7216) = 20;
  *(_QWORD *)(v5 + 9280) = *(_QWORD *)(v5 + 9600);
  *(_QWORD *)(v5 + 9016) = *(_QWORD *)(v5 + 9608);
  v9 = *(_QWORD *)(v5 + 2560);
  *(_QWORD *)(v5 + 7240) = v9;
  *(_QWORD *)(v5 + 7248) = v9;
  *(_QWORD *)(v5 + 7232) = *(_QWORD *)(v5 + 2272);
  *(_DWORD *)(v5 + 8080) = *(_DWORD *)(v5 + 8032);
  *(_DWORD *)(v5 + 7192) = v6;
  *(_DWORD *)(v5 + 7272) = *(_DWORD *)(v5 + 7456);
  *(_DWORD *)(v5 + 7312) = *(_DWORD *)(v5 + 9328);
  *(_DWORD *)(v5 + 9272) = *(_DWORD *)(v5 + 9656);
  *(_DWORD *)(v5 + 9320) = *(_DWORD *)(v5 + 9616);
  *(_DWORD *)(v5 + 8064) = *(_DWORD *)(v5 + 7992);
  *(_DWORD *)(v5 + 7256) = *(_DWORD *)(v5 + 7500);
  *(_DWORD *)(v5 + 7280) = *(_DWORD *)(v5 + 9424);
  *(_DWORD *)(v5 + 7128) = *(_DWORD *)(v5 + 7616);
  *(_DWORD *)(v5 + 7344) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 7168) = *(_DWORD *)(v5 + 7464);
  *(_DWORD *)(v5 + 7184) = *(_DWORD *)(v5 + 7488);
  *(_DWORD *)(v5 + 7296) = *(_DWORD *)(v5 + 7484);
  *(_DWORD *)(v5 + 9104) = *(_DWORD *)(v5 + 9440);
  *(_DWORD *)(v5 + 7424) = *(_DWORD *)(v5 + 9664);
  *(_DWORD *)(v5 + 7304) = *(_DWORD *)(v5 + 7480);
  *(_DWORD *)(v5 + 7264) = v6;
  *(_DWORD *)(v5 + 7176) = *(_DWORD *)(v5 + 9248);
  *(_DWORD *)(v5 + 7288) = *(_DWORD *)(v5 + 7476);
  *(_DWORD *)(v5 + 7160) = *(_DWORD *)(v5 + 7440);
  *(_DWORD *)(v5 + 7224) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8040) = *(_DWORD *)(v5 + 8020);
  *(_DWORD *)(v5 + 7416) = *(_DWORD *)(v5 + 7432);
  *(_DWORD *)(v5 + 8116) = *(_DWORD *)(v5 + 8024);
  *(_DWORD *)(v5 + 7328) = *(_DWORD *)(v5 + 8000);
  *(_DWORD *)(v5 + 8272) = *(_DWORD *)(v5 + 7984);
  *(_DWORD *)(v5 + 8056) = *(_DWORD *)(v5 + 8008);
  *(_DWORD *)(v5 + 7208) = *(_DWORD *)(v5 + 9528);
  *(_DWORD *)(v5 + 7408) = *(_DWORD *)(v5 + 7460);
  *(_DWORD *)(v5 + 7320) = *(_DWORD *)(v5 + 9156);
  *(_DWORD *)(v5 + 7336) = *(_DWORD *)(v5 + 9408);
  *(_DWORD *)(v5 + 7200) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 6760) = *(_DWORD *)(v5 + 8280);
  *(_DWORD *)(v5 + 9392) = *(_DWORD *)(v5 + 8544);
  *(_DWORD *)(v5 + 8328) = v3;
  return ((uint64_t (*)(void))(v8 - (((a2 & 0x7151E9FFu) - v4 - 2145) ^ 0x853D1013)))();
}

uint64_t sub_1002B64F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 9280) = *(_QWORD *)(v1 + 9600);
  *(_QWORD *)(v1 + 9016) = *(_QWORD *)(v1 + 9608);
  *(_DWORD *)(v1 + 8080) = *(_DWORD *)(v1 + 8032);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 9320) = *(_DWORD *)(v1 + 9616);
  *(_DWORD *)(v1 + 8064) = *(_DWORD *)(v1 + 7992);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 9424);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 9104) = *(_DWORD *)(v1 + 9440);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 9664);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8040) = *(_DWORD *)(v1 + 8020);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 8116) = *(_DWORD *)(v1 + 8024);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 8000);
  *(_DWORD *)(v1 + 8272) = *(_DWORD *)(v1 + 7984);
  *(_DWORD *)(v1 + 8056) = *(_DWORD *)(v1 + 8008);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 9528);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 7264) = v2;
  *(_DWORD *)(v1 + 7160) = v2;
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  v3 = *(_DWORD *)(v1 + 7452);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 6760) = *(_DWORD *)(v1 + 8280);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8328) = *(_DWORD *)(v1 + 9592);
  *(_DWORD *)(v1 + 8236) = 76;
  *(_DWORD *)(v1 + 7216) = 21;
  v4 = *(_QWORD *)(v1 + 2584);
  *(_QWORD *)(v1 + 7240) = v4;
  *(_QWORD *)(v1 + 7248) = v4;
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 2208);
  *(_DWORD *)(v1 + 7224) = *(_DWORD *)(v1 + 8828);
  *(_DWORD *)(v1 + 9736) = v3;
  v7 = 2897 * (*(_QWORD *)(v1 + 7144) ^ 0x853D1014);
  v8 = *(_DWORD *)(v1 + 7264);
  v9 = *(_DWORD *)(v1 + 7224);
  if (v9 <= v8)
    v10 = *(_QWORD *)(v1 + 7248);
  else
    v10 = *(_QWORD *)(v1 + 7232);
  if (v9 <= v8)
    v11 = *(_QWORD *)(v1 + 7232);
  else
    v11 = *(_QWORD *)(v1 + 7248);
  if (v9 >= v8)
    v12 = *(_DWORD *)(v1 + 7264);
  else
    v12 = *(_DWORD *)(v1 + 7224);
  if (v9 > v8)
    v8 = *(_DWORD *)(v1 + 7224);
  v13 = *(_QWORD *)(v1 + 9744);
  v5 = *(_DWORD *)(v11 - 0x62AA055D109F20F3);
  if (!v12)
    v5 = 0;
  *(_DWORD *)(*(_QWORD *)(v1 + 7240) - 0x62AA055D109F20F3) = (*(_DWORD *)(v10 - 0x62AA055D109F20F3)
                                                              + v5
                                                              - 2125521164
                                                              - ((2 * (*(_DWORD *)(v10 - 0x62AA055D109F20F3) + v5)) & 0x29E3DE8)) ^ 0x814F1EF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (int)(((v8 > 1) * ((v7 + 1816055295) & 0x93C1160D ^ 0x5F7)) ^ v7))
                            - 4))();
}

uint64_t sub_1002B6658(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t (*v11)(void);
  uint64_t v12;

  v8 = v2 - 3306;
  v9 = (a2 + v2 - 3306 - 2421);
  v10 = *(_DWORD *)(v5 + 9240) != ((v2 + 22 - v4 - 97) ^ 0x5A);
  *(_QWORD *)(v5 + 7144) = v9;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((v10 * (v4 + v9 - 29)) ^ v8)) - 4);
  *(_DWORD *)(v5 + 8236) = 77;
  *(_DWORD *)(v5 + 7216) = 25;
  *(_QWORD *)(v5 + 9280) = *(_QWORD *)(v5 + 9600);
  *(_QWORD *)(v5 + 9016) = *(_QWORD *)(v5 + 9608);
  v12 = *(_QWORD *)(v5 + 4192);
  *(_QWORD *)(v5 + 7240) = v12;
  *(_QWORD *)(v5 + 7248) = v12;
  *(_QWORD *)(v5 + 7232) = *(_QWORD *)(v5 + 2280);
  *(_DWORD *)(v5 + 8080) = *(_DWORD *)(v5 + 8032);
  *(_DWORD *)(v5 + 7192) = *(_DWORD *)(v5 + 7436);
  *(_DWORD *)(v5 + 7272) = *(_DWORD *)(v5 + 7456);
  *(_DWORD *)(v5 + 7312) = *(_DWORD *)(v5 + 9328);
  *(_DWORD *)(v5 + 9272) = *(_DWORD *)(v5 + 9656);
  *(_DWORD *)(v5 + 9320) = *(_DWORD *)(v5 + 9616);
  *(_DWORD *)(v5 + 8064) = *(_DWORD *)(v5 + 7992);
  *(_DWORD *)(v5 + 7256) = *(_DWORD *)(v5 + 7500);
  *(_DWORD *)(v5 + 7280) = *(_DWORD *)(v5 + 9424);
  *(_DWORD *)(v5 + 7128) = *(_DWORD *)(v5 + 7616);
  *(_DWORD *)(v5 + 7344) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 7168) = *(_DWORD *)(v5 + 7464);
  *(_DWORD *)(v5 + 7184) = *(_DWORD *)(v5 + 7488);
  *(_DWORD *)(v5 + 7296) = *(_DWORD *)(v5 + 7484);
  *(_DWORD *)(v5 + 9104) = *(_DWORD *)(v5 + 9440);
  *(_DWORD *)(v5 + 7424) = *(_DWORD *)(v5 + 9664);
  *(_DWORD *)(v5 + 7304) = *(_DWORD *)(v5 + 7480);
  *(_DWORD *)(v5 + 7264) = v6;
  *(_DWORD *)(v5 + 7176) = *(_DWORD *)(v5 + 9248);
  *(_DWORD *)(v5 + 7288) = *(_DWORD *)(v5 + 7476);
  *(_DWORD *)(v5 + 8056) = *(_DWORD *)(v5 + 8008);
  *(_DWORD *)(v5 + 7224) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8040) = *(_DWORD *)(v5 + 8020);
  *(_DWORD *)(v5 + 7416) = *(_DWORD *)(v5 + 7432);
  *(_DWORD *)(v5 + 8116) = *(_DWORD *)(v5 + 8024);
  *(_DWORD *)(v5 + 7328) = *(_DWORD *)(v5 + 8000);
  *(_DWORD *)(v5 + 8272) = v6;
  *(_DWORD *)(v5 + 7208) = *(_DWORD *)(v5 + 9528);
  *(_DWORD *)(v5 + 7408) = *(_DWORD *)(v5 + 7460);
  *(_DWORD *)(v5 + 7160) = *(_DWORD *)(v5 + 7440);
  *(_DWORD *)(v5 + 7320) = *(_DWORD *)(v5 + 9156);
  *(_DWORD *)(v5 + 7336) = *(_DWORD *)(v5 + 9408);
  *(_DWORD *)(v5 + 7200) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 6760) = *(_DWORD *)(v5 + 8280);
  *(_DWORD *)(v5 + 9392) = *(_DWORD *)(v5 + 8544);
  *(_DWORD *)(v5 + 8328) = v3;
  return v11();
}

void sub_1002B67F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 9280) = *(_QWORD *)(v1 + 9600);
  *(_QWORD *)(v1 + 9016) = *(_QWORD *)(v1 + 9608);
  *(_DWORD *)(v1 + 8080) = *(_DWORD *)(v1 + 8032);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 9320) = *(_DWORD *)(v1 + 9616);
  *(_DWORD *)(v1 + 8064) = *(_DWORD *)(v1 + 7992);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 9424);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 9104) = *(_DWORD *)(v1 + 9440);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 9664);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  v3 = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 7304) = v3;
  *(_DWORD *)(v1 + 7224) = v3;
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8040) = *(_DWORD *)(v1 + 8020);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 8116) = *(_DWORD *)(v1 + 8024);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 8000);
  *(_DWORD *)(v1 + 8272) = *(_DWORD *)(v1 + 7984);
  *(_DWORD *)(v1 + 7264) = v2;
  *(_DWORD *)(v1 + 8056) = v2;
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 9528);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  v4 = *(_DWORD *)(v1 + 7452);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 6760) = *(_DWORD *)(v1 + 8280);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8328) = *(_DWORD *)(v1 + 9592);
  *(_DWORD *)(v1 + 8236) = 78;
  *(_DWORD *)(v1 + 7216) = 38;
  v5 = *(_QWORD *)(v1 + 2728);
  *(_QWORD *)(v1 + 7240) = v5;
  *(_QWORD *)(v1 + 7248) = v5;
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 2496);
  *(_DWORD *)(v1 + 9736) = v4;
  JUMPOUT(0x10031D888);
}

uint64_t sub_1002B6954(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 9544) + 37);
  *(_DWORD *)(v3 + 4964) = (v4 ^ (32 * v4) ^ 0x45) + ((v2 - 436236454) & 0x9F3D7A5F ^ 0x1D);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v2 ^ (9659 * (*(_DWORD *)(v3 + 8616) != 0)))) - 4))();
}

uint64_t sub_1002B69D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t (*v8)(void);

  v7 = *(_DWORD *)(*(_QWORD *)(v6 + 8248) + 8288);
  *(_DWORD *)(v6 + 6648) = v7 >> (((v5 - 24) & 0xB2) + 94);
  v8 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                     + 8 * ((722 * (*(_DWORD *)(v6 + 8616) > 1u)) ^ (a5 + v5 + 2624)))
                         - 8);
  *(_DWORD *)(v6 + 6640) = v7;
  return v8();
}

uint64_t sub_1002B6A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v13 = (v8 - 2432) | 0x980;
  v14 = *(_DWORD *)(v12 + v11);
  *(_DWORD *)(v10 + 6632) = v14;
  *(_DWORD *)(v10 + 6672) = v14 >> ((v13 + 65) & 0xCF ^ 0xD3);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v10 + 9744) + 8 * ((15299 * (v9 > a8 - 6577 + v13)) ^ v13)) - 8))();
}

uint64_t sub_1002B6AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;

  v12 = (v8 + 1263689269) & 0xB4ADA9DB;
  v13 = *(_DWORD *)(v11 + v10);
  *(_DWORD *)(v9 + 6628) = v13 >> (v12 + 69);
  *(_QWORD *)(v9 + 6536) = (unint64_t)v13 >> 16;
  *(_QWORD *)(v9 + 9128) = v13;
  *(_QWORD *)(v9 + 6608) = (unint64_t)v13 >> 24;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v9 + 9744)
                              + 8 * (int)((1324 * (*(_DWORD *)(v9 + 8616) > (v12 ^ 0x21C2) + a8)) ^ v12)))();
}

uint64_t sub_1002B6B9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t (*v13)(void);

  v12 = *(_DWORD *)(v11 + v10);
  *(_QWORD *)(v9 + 6600) = (unint64_t)v12 >> 16;
  *(_QWORD *)(v9 + 6616) = v12;
  *(_QWORD *)(v9 + 9432) = (unint64_t)v12 >> 24;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                      + 8 * (int)((5563 * (*(_DWORD *)(v9 + 8616) > (v8 ^ 0xEAC) + a8)) ^ v8))
                          - (v8 ^ 0xEA9));
  *(_DWORD *)(v9 + 5172) = a3;
  return v13();
}

uint64_t sub_1002B6C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;

  v14 = *(unsigned int *)(v13 + v11);
  v15 = (((v9 - 2386) | 0x80) ^ 0x5DC) & (*(_DWORD *)(v13 + v11) >> 5) | (8 * (*(_DWORD *)(v13 + v11) & 0x1Fu));
  v16 = (*(unsigned __int8 *)(*(_QWORD *)(v10 + 9648) + (v15 ^ 0x5E)) + (v15 ^ 0x52) + 1) ^ a7;
  *(_DWORD *)(v10 + 9116) = v16;
  *(_DWORD *)(v10 + 9072) = v16 * v8 - ((-38 * v16) & 0xFFFFFFAC) + 86;
  *(_QWORD *)(v10 + 6520) = v14 >> 16;
  *(_QWORD *)(v10 + 6592) = v14 >> 24;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v10 + 9744)
                                        + 8
                                        * (((*(_DWORD *)(v10 + 8616) <= (a8 - 7252 + v9 + 3496)) * v12) ^ (v9 + 3496)))
                            - 8))();
}

uint64_t sub_1002B6CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v13;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9544) + ((v8 + 2011) ^ 0xD93));
  *(_DWORD *)(v9 + 6568) = (v11 ^ (32 * v11) ^ 0x45) + 10;
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9552) + 139) + 94;
  HIDWORD(v13) = v12 ^ 0x13;
  LODWORD(v13) = v12 << 24;
  *(_DWORD *)(v9 + 6552) = v13 >> 29;
  *(_QWORD *)(v9 + 6576) = 0;
  *(_DWORD *)(v9 + 6584) = (*(unsigned __int8 *)(*(_QWORD *)(v9 + 9704) + 149) ^ 0xFFFFFEAE) + 10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                                      + 8 * ((8581 * (*(_DWORD *)(v9 + 8616) > a8)) ^ v8))
                                          - 8))(v10);
}

uint64_t sub_1002B6E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v12 = v8 ^ 0x86D;
  v13 = (v8 ^ 0x5DA) + a8;
  v14 = *(_DWORD *)(v11 + v10);
  *(_QWORD *)(v9 + 6560) = v14;
  *(_QWORD *)(v9 + 6544) = (unint64_t)v14 >> 24;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * ((7667 * (v13 < *(_DWORD *)(v9 + 8616))) ^ v12))
                            - 12))();
}

uint64_t sub_1002B6EAC@<X0>(unint64_t a1@<X1>, char a2@<W2>, unsigned int a3@<W3>, int a4@<W5>, unsigned int a5@<W8>)
{
  int v5;
  int v6;
  unsigned int v7;
  char v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  int v22;
  _BYTE *v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  unsigned int v31;
  char v32;
  int v33;
  char v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  unsigned int v92;
  unint64_t v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  int v100;
  unsigned __int8 **v101;
  unsigned __int8 **v102;
  uint64_t v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  int v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  unsigned __int8 *v116;
  unsigned __int8 *v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  char v135;
  unint64_t v136;
  int v137;
  uint64_t v138;
  char v139;
  unint64_t v140;
  char v141;
  _BYTE *v142;
  _BYTE *v143;
  unint64_t v144;
  _BYTE *v145;
  _BYTE *v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  unint64_t v218;
  unint64_t v219;
  uint64_t v220;
  unint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  int v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  int v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  unint64_t v256;
  unint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  unint64_t v267;
  unint64_t v268;
  unint64_t v269;
  unint64_t v270;
  uint64_t v271;
  unint64_t v272;
  unint64_t v273;
  unint64_t v274;
  unint64_t v275;
  unint64_t v276;
  unint64_t v277;
  unint64_t v278;
  uint64_t v279;
  unint64_t v280;
  __int128 v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  BOOL v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  int v292;
  unsigned __int8 v293;
  char v294;
  unint64_t v295;
  uint64_t v296;
  unsigned int v297;
  uint64_t v298;
  unint64_t v299;
  unsigned int v300;
  char v301;
  unint64_t v302;
  char v303;
  char v304;
  _BOOL4 v305;

  v19 = *(_DWORD *)(v18 + v12);
  v20 = v10 - ((2 * *(_BYTE *)(v11 + 4968)) & 0xBB);
  *(_DWORD *)(v11 + 7320) = (v6 ^ 0xF0A) + 1686;
  v21 = (v19 >> 17) & 0x80 | (v19 >> 25);
  *(_DWORD *)(v11 + 4912) = HIWORD(v9);
  v22 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 9704) + (v21 ^ 0x95));
  v23 = *(_BYTE **)(v11 + 256);
  v23[1] = (BYTE2(v9) - ((((v6 ^ 0xA) - 106) ^ 0xE7) & (2 * BYTE2(v9))) + 90) ^ *(_DWORD *)(v11 + 5088);
  *(_DWORD *)(v11 + 9080) = v9 >> 8;
  v23[2] = (BYTE1(v9) - ((v9 >> 7) & 0x70) - 72) ^ *(_DWORD *)(v11 + 5100);
  v24 = (*(_DWORD *)(v11 + 9280) ^ 0xFFFFFFC2) + (~(2 * (*(_DWORD *)(v11 + 9280) ^ 0xFFFFFFC2)) | 0x7B);
  *(_DWORD *)(v11 + 4916) = HIBYTE(v9);
  *v23 = (HIBYTE(v9) - ((v9 >> 23) & 0xB2) + 89) ^ *(_DWORD *)(v11 + 5104);
  v23[4] = (v20 + 96) ^ *(_DWORD *)(v11 + 9632);
  *(_DWORD *)(v11 + 4948) = v14;
  v23[3] = *(_DWORD *)(v11 + 4964) ^ v14;
  v25 = *(_DWORD *)(v11 + 4960);
  *(_DWORD *)(v11 + 4908) = HIWORD(v15);
  *(_DWORD *)(v11 + 4892) = HIWORD(v25);
  v23[5] = BYTE2(v25) ^ BYTE2(v15);
  v23[7] = (v25 - ((2 * v25) & 0x52) + 41) ^ *(_DWORD *)(v11 + 5108);
  v23[9] = *(_DWORD *)(v11 + 5112) ^ *(_QWORD *)(v11 + 9456) ^ 0x2C;
  *(_DWORD *)(v11 + 4972) = a5;
  v27 = HIBYTE(a5);
  *(_DWORD *)(v11 + 9280) = v27;
  v23[8] = (v27 - ((a5 >> 23) & 0xB8) - 36) ^ *(_DWORD *)(v11 + 5116);
  v23[11] = (a5 - ((2 * a5) & 0x5E) - 81) ^ *(_DWORD *)(v11 + 5124);
  *(_DWORD *)(v11 + 4944) = a5 >> 8;
  v23[10] = (BYTE1(a5) - ((a5 >> 7) & 0x6E) + 55) ^ *(_DWORD *)(v11 + 5096);
  v23[6] = *(_DWORD *)(v11 + 5092) ^ *(_QWORD *)(v11 + 9472) ^ 0x72;
  v28 = *(_QWORD *)(v11 + 9680);
  v29 = *(_DWORD *)(v11 + 9464) ^ *(_DWORD *)(v11 + 5188) ^ *(_BYTE *)(v28
                                                                     + ((*(_DWORD *)(v11 + 9464) ^ *(_DWORD *)(v11 + 5188)) ^ 0xCDLL));
  v30 = *(_DWORD *)(v11 + 5172);
  *(_DWORD *)(v11 + 4904) = v30 >> 8;
  *(_DWORD *)(v11 + 4876) = a3 >> 8;
  v23[14] = BYTE1(v30) ^ BYTE1(a3);
  v23[12] = (v29 ^ 4) + 3;
  v31 = *(_DWORD *)(v11 + 4976);
  *(_DWORD *)(v11 + 4888) = HIWORD(v31);
  v23[17] = (BYTE2(v31) - ((v31 >> 15) & 0x1C) + 14) ^ *(_DWORD *)(v11 + 5132);
  v23[13] = *(_DWORD *)(v11 + 5120) ^ *(_QWORD *)(v11 + 9488) ^ 0x4F;
  v23[15] = (v30 + (~(2 * v30) | 0x1D) - 14) ^ *(_DWORD *)(v11 + 5128);
  v32 = *(_DWORD *)(v11 + 9400);
  v23[18] = *(_DWORD *)(v11 + 4984) ^ v32;
  v33 = *(_DWORD *)(v11 + 9416);
  v34 = *(_DWORD *)(v11 + 9320) - ((2 * v33) & 0x52);
  v23[16] = (v8 - ((2 * *(_BYTE *)(v11 + 4988)) & 0xCA) + 104) ^ *(_DWORD *)(v11 + 5140);
  LOBYTE(v27) = *(_DWORD *)(v11 + 9104) - ((2 * *(_BYTE *)(v11 + 4992)) & 0x84);
  *(_DWORD *)(v11 + 4940) = HIBYTE(v7);
  *(_DWORD *)(v11 + 4880) = HIBYTE(v16);
  v23[20] = HIBYTE(v16) ^ HIBYTE(v7);
  v23[19] = (v31 - 2 * (v31 & 0xF) - 113) ^ *(_DWORD *)(v11 + 5136);
  *(_DWORD *)(v11 + 4900) = v24 - 61;
  v23[25] = (v27 - 52) ^ (v24 - 61);
  v23[22] = (*(_DWORD *)(v11 + 4980) - ((2 * *(_DWORD *)(v11 + 4980)) & 0x6A) - 75) ^ *(_DWORD *)(v11 + 5144);
  v23[24] = *(_DWORD *)(v11 + 9496) ^ (v34 + 44);
  *(_DWORD *)(v11 + 4920) = v16;
  v23[23] = (v16 - ((2 * v16) & 0x3A) - 99) ^ *(_DWORD *)(v11 + 5152);
  LOBYTE(v27) = *(_DWORD *)(v11 + 4996);
  *(_DWORD *)(v11 + 4884) = HIWORD(v7);
  v23[21] = v27 ^ BYTE2(v7);
  v35 = *(_DWORD *)(v11 + 5156);
  *(_DWORD *)(v11 + 4896) = v35 >> 8;
  v36 = *(_DWORD *)(v11 + 9504) ^ ((v35 >> 8) - ((v35 >> 7) & 0x1FFFFA2) - 47);
  v37 = *(_QWORD *)(v11 + 9648);
  LOBYTE(v36) = (((v36 >> 5) | (8 * v36)) ^ 0x52)
              + *(_BYTE *)(v37 + (((v36 >> 5) | (8 * v36)) ^ 0x5ELL));
  *(_DWORD *)(v11 + 6528) = v13;
  v23[27] = v13 ^ v35;
  v23[26] = 109 * ((v36 + 1) ^ 0x5C);
  v38 = v22 ^ ((v21 ^ 0x98) + (v21 ^ 0x7E) + 1) ^ 0xFFFFFFB9;
  *(_DWORD *)(v11 + 6496) = v38 + 10;
  v23[36] = (*(_QWORD *)(v11 + 6544) - ((2 * *(_QWORD *)(v11 + 6544)) & 0x70) - 72) ^ *(_QWORD *)(v11 + 6840);
  v23[29] = *(_DWORD *)(v11 + 6664) ^ *(_DWORD *)(v11 + 5160);
  v23[28] = *(_DWORD *)(v11 + 9576) ^ (*(_DWORD *)(v11 + 5148) - ((-38 * *(_DWORD *)(v11 + 9392)) & 0x92) - 55);
  v39 = *(_DWORD *)(v11 + 5164);
  LOBYTE(v24) = *(_DWORD *)(v11 + 6680);
  *(_DWORD *)(v11 + 4936) = v39 >> 8;
  v23[30] = v24 ^ BYTE1(v39);
  v23[31] = *(_DWORD *)(v11 + 6656) ^ v39;
  v23[35] = (v19 - ((2 * v19) & 0x50) - 88) ^ *(_DWORD *)(v11 + 5016);
  *(_DWORD *)(v11 + 6512) = v19 >> 8;
  v23[34] = (BYTE1(v19) - ((v19 >> 7) & 0xA8) + 84) ^ *(_DWORD *)(v11 + 5004);
  *(_DWORD *)(v11 + 6504) = HIWORD(v19);
  v23[33] = (BYTE2(v19) - ((v19 >> 15) & 0x48) + 36) ^ *(_DWORD *)(v11 + 5000);
  v23[32] = (v38 - 2 * ((v38 + 10) & 0xE7 ^ v38 & 1) - 16) ^ *(_DWORD *)(v11 + 5008);
  v40 = *(_DWORD *)(v11 + 5012);
  LOBYTE(v38) = (v5 - ((2 * v5 + 20) & 0x87) - 51) ^ v40;
  v23[37] = 109
          * (((((v38 >> 5) | (8 * v38)) ^ 0x52)
            + *(_BYTE *)(v37 + (((v38 >> 5) | (8 * v38)) ^ 0x5ELL))
            + 1) ^ 0x5C);
  v41 = *(_QWORD *)(v11 + 6560);
  *(_QWORD *)(v11 + 6488) = v41 >> 8;
  v23[38] = (BYTE1(v41) - ((v41 >> 7) & 0x3E) - 97) ^ *(_DWORD *)(v11 + 9136);
  v23[39] = v41 ^ *(_DWORD *)(v11 + 5020);
  LOBYTE(v38) = a2 - ((2 * *(_BYTE *)(v11 + 6568)) & 0xAC);
  LOBYTE(v41) = *(_DWORD *)(v11 + 6584);
  *(_DWORD *)(v11 + 4872) = HIBYTE(v17);
  v23[40] = v41 ^ HIBYTE(v17);
  v23[42] = (*(_QWORD *)(v11 + 6576) - ((2 * *(_QWORD *)(v11 + 6576)) & 0x5C) + 46) ^ *(_DWORD *)(v11 + 5028);
  v23[41] = (*(_DWORD *)(v11 + 6552) + (~(2 * *(_DWORD *)(v11 + 6552)) | 0x55) + 86) ^ *(_QWORD *)(v11 + 5032);
  v42 = *(_QWORD *)(v11 + 9560);
  LOBYTE(v38) = *(_BYTE *)(v42 + (*(_DWORD *)(v11 + 5044) ^ 0x26u ^ (v38 + 96)));
  v23[44] = (*(_QWORD *)(v11 + 6592) + (~(2 * *(_QWORD *)(v11 + 6592)) | 0x9B) + 51) ^ *(_DWORD *)(v11 + 9624);
  v23[43] = ((2 * (v39 & 0x80) + 0x80) ^ v38 ^ 0xE0) + 3;
  v43 = HIWORD(*(_DWORD *)(v11 + 9736));
  *(_DWORD *)(v11 + 4868) = v43;
  v23[45] = (*(_BYTE *)(v42 + ((v43 ^ BYTE2(a1)) ^ 0x26u)) ^ 0x60) + 3;
  *(_QWORD *)(v11 + 9320) = a1 >> 8;
  *(_DWORD *)(v11 + 9392) = v5;
  LOBYTE(v43) = (((BYTE1(a1) - ((2 * BYTE1(a1)) & 0xD6) + 107) ^ *(_BYTE *)(v11 + 9688)) >> 5) | (8 * ((BYTE1(a1) - ((2 * BYTE1(a1)) & 0xD6) + 107) ^ *(_BYTE *)(v11 + 9688)));
  v44 = *(_QWORD *)(v11 + 9536);
  LOBYTE(v24) = *(_BYTE *)(v44 + (v43 ^ 0x3BLL));
  v23[47] = *(_DWORD *)(v11 + 5024) ^ *(_DWORD *)(v11 + 9072) ^ 0xBA;
  v23[48] = (*(_QWORD *)(v11 + 9432) - ((2 * *(_QWORD *)(v11 + 9432)) & 0x8C) - 58) ^ *(_DWORD *)(v11 + 5176);
  v45 = (*(_QWORD *)(v11 + 6600) - ((2 * *(_QWORD *)(v11 + 6600)) & 0x1FFFC) - 2) ^ *(_DWORD *)(v11 + 5168);
  v23[46] = 109 * (v43 ^ 0xB9 ^ v24);
  v23[49] = 109
          * (((((v45 >> 5) | (8 * v45)) ^ 0x52)
            + *(_BYTE *)(v37 + (((v45 >> 5) | (8 * v45)) ^ 0x5ELL))
            + 1) ^ 0x5C);
  v46 = *(_QWORD *)(v11 + 6616);
  *(_QWORD *)(v11 + 6472) = v46 >> 8;
  v23[50] = (BYTE1(v46) - ((v46 >> 7) & 0xD0) - 24) ^ *(_DWORD *)(v11 + 5048);
  v23[51] = (v46 - ((2 * v46) & 0xD2) + 105) ^ *(_DWORD *)(v11 + 5056);
  v47 = *(_QWORD *)(v11 + 9128);
  v48 = (v47 + (v47 >> 6 << 7) + 64) ^ *(_DWORD *)(v11 + 5180);
  v49 = HIWORD(*(_DWORD *)(v11 + 9264));
  *(_DWORD *)(v11 + 4864) = v49;
  v23[53] = v49 ^ BYTE2(v47);
  v23[52] = (*(_QWORD *)(v11 + 6608) - ((2 * *(_QWORD *)(v11 + 6608)) & 0xC0) - 32) ^ *(_DWORD *)(v11 + 5052);
  v23[54] = (*(_DWORD *)(v11 + 6628) - ((2 * *(_DWORD *)(v11 + 6628)) & 0x2C) + 22) ^ *(_DWORD *)(v11 + 5068);
  LOBYTE(v48) = ((v48 >> 5) | (8 * v48)) ^ 0xB9 ^ *(_BYTE *)(v44
                                                                            + (((v48 >> 5) | (8 * v48)) ^ 0x3BLL));
  v50 = *(_DWORD *)(v11 + 6632);
  *(_DWORD *)(v11 + 6480) = HIBYTE(v50);
  v23[56] = (HIBYTE(v50) - ((v50 >> 23) & 0x88) - 60) ^ *(_DWORD *)(v11 + 5072);
  LOBYTE(v49) = (*(_DWORD *)(v11 + 6672) - ((2 * *(_DWORD *)(v11 + 6672)) & 0x44) - 94) ^ *(_DWORD *)(v11 + 5064);
  LOBYTE(v48) = 109 * v48;
  v23[55] = v48;
  v23[57] = (v49 ^ 0x63 ^ *(_BYTE *)(v28 + (v49 ^ 0xAALL))) + 3;
  *(_DWORD *)(v11 + 6448) = v50 >> 8;
  v23[58] = (BYTE1(v50) + (~(v50 >> 7) | 0x53) + 87) ^ *(_DWORD *)(v11 + 5080);
  v23[59] = (v50 + (~(2 * v50) | 0xA5) - 82) ^ *(_DWORD *)(v11 + 5060);
  v51 = *(_DWORD *)(v11 + 6640);
  *(_DWORD *)(v11 + 6468) = HIBYTE(v51);
  v23[60] = (HIBYTE(v51) - ((v51 >> 23) & 0xFC) + 126) ^ *(_DWORD *)(v11 + 5084);
  v52 = (*(_DWORD *)(v11 + 6648) - ((2 * *(_DWORD *)(v11 + 6648)) & 0xFFFFFFCC) - 26) ^ *(_DWORD *)(v11 + 5076);
  LOBYTE(v48) = ((v52 >> 5) | (8 * v52)) ^ ((v48 & 0xF1 ^ 0xF1) + (v48 & 0xF1)) ^ 0x48 ^ *(_BYTE *)(v44 + (((v52 >> 5) | (8 * v52)) ^ 0x3BLL));
  *(_DWORD *)(v11 + 6456) = v51 >> 8;
  v23[62] = (BYTE1(v51) - ((v51 >> 7) & 0x60) - 80) ^ *(_QWORD *)(v11 + 6848);
  v23[61] = 109 * v48;
  LODWORD(v42) = *(_DWORD *)(v11 + 1468);
  HIDWORD(v54) = v42 ^ 0x15;
  LODWORD(v54) = (v42 ^ 0xFFFFFFBF) << 24;
  v53 = v54 >> 29;
  HIDWORD(v54) = *(_DWORD *)(v11 + 1472);
  LODWORD(v54) = (HIDWORD(v54) ^ 0xFFFFFFC3) << 24;
  v23[63] = (v51 + (~(2 * v51) | 0x37) - 27) ^ *(_DWORD *)(v11 + 5184);
  v55 = *(_QWORD *)(v11 + 9544);
  v56 = *(unsigned __int8 *)(v55 + ((v54 >> 25) ^ 0x25));
  *(_DWORD *)(v11 + 9264) = (v56 ^ (32 * v56) ^ 0x45)
                          + (~(2 * ((v56 ^ (32 * v56)) ^ 0x45) + 20) | 0xFFFFFFCF);
  v57 = *(_DWORD *)(v11 + 1484);
  HIDWORD(v54) = ~v57;
  LODWORD(v54) = (v57 ^ 0x38) << 24;
  v58 = v37;
  v59 = ((v53 ^ 0x52) + *(unsigned __int8 *)(v37 + (v53 ^ 0x5ELL)) + 1) ^ 0x5C;
  *(_DWORD *)(v11 + 9136) = 109 * v59 - ((-38 * v59) & 0xFFFFFF83);
  v60 = *(unsigned __int8 *)(v55 + ((v54 >> 25) ^ 0x25));
  *(_DWORD *)(v11 + 9104) = (v60 ^ (32 * v60) ^ 0x45) - ((2 * (v60 ^ (32 * v60) ^ 0x45) + 20) & 0xFFFFFFBF);
  v61 = *(_QWORD *)(v11 + 9552);
  v62 = *(unsigned __int8 *)(v61 + ((-87 * (*(_DWORD *)(v11 + 1504) ^ 5)) ^ 0x8BLL)) + 94;
  *(_DWORD *)(v11 + 9072) = (v62 >> 5) | (8 * v62);
  LODWORD(v37) = *(_DWORD *)(v11 + 1516);
  HIDWORD(v54) = ~(_DWORD)v37;
  LODWORD(v54) = (v37 ^ 0x12) << 24;
  v63 = v54 >> 25;
  v64 = *(unsigned __int8 *)(v55 + ((v54 >> 25) ^ 0x25));
  *(_DWORD *)(v11 + 9016) = (v64 ^ (32 * v64) ^ 0x45) - ((2 * (v64 ^ (32 * v64) ^ 0x45) + 20) & 0xFFFFFFEF);
  HIDWORD(v54) = *(_DWORD *)(v11 + 1380);
  LODWORD(v54) = (HIDWORD(v54) ^ 0x14) << 24;
  v65 = *(_QWORD *)(v11 + 9704);
  *(_DWORD *)(v11 + 9012) = (((v54 >> 25) ^ 0xFFFFFF98) + ((v54 >> 25) ^ 0x7E) + 1) ^ (9
                                                                                     * ((v63 & 0x31 ^ 0x31)
                                                                                      + (v63 & 0x31))) ^ *(unsigned __int8 *)(v65 + ((v54 >> 25) ^ 0x95));
  v66 = *(_QWORD *)(v11 + 9640);
  v67 = *(unsigned __int8 *)(v66 + ((-87 * *(_DWORD *)(v11 + 1376) + 102) ^ 0x20));
  *(_DWORD *)(v11 + 4860) = ((v67 ^ (v67 >> 1) & 0x46) >> 5) | (8 * (v67 ^ (v67 >> 1) & 0x46 ^ 0x1E));
  v68 = *(_DWORD *)(v11 + 1528);
  HIDWORD(v54) = ~v68;
  LODWORD(v54) = (v68 ^ 0xA) << 24;
  *(_DWORD *)(v11 + 9008) = (((v54 >> 25) ^ 0xFFFFFF98) + ((v54 >> 25) ^ 0x7E) + 1) ^ 0xFFFFFFB9 ^ *(unsigned __int8 *)(v65 + ((v54 >> 25) ^ 0x95));
  v69 = *(unsigned __int8 *)(v61 + ((-87 * (*(_DWORD *)(v11 + 9632) ^ 0x5D)) ^ 0x8BLL)) + 94;
  *(_DWORD *)(v11 + 9632) = (v69 >> 5) | (8 * v69);
  v70 = *(unsigned __int8 *)(v66 + ((-87 * v32) ^ 0x20));
  *(_DWORD *)(v11 + 9400) = (((v70 >> 1) & 0x46 ^ v70) >> 5) | (8 * ((v70 >> 1) & 0x46 ^ v70));
  v71 = *(_DWORD *)(v11 + 9184);
  HIDWORD(v54) = 5 - v71;
  LODWORD(v54) = (v71 << 24) + 2046820352;
  v72 = v54 >> 29;
  v73 = *(unsigned __int8 *)(v55 + (((v33 >> 1) | ((_BYTE)v33 << 7)) ^ 0x25));
  v74 = *(unsigned __int8 *)(v58 + ((v54 >> 29) ^ 0x5ELL));
  *(_DWORD *)(v11 + 9416) = (v73 ^ (32 * (v73 ^ 0x45)) ^ 0xFFFFFFE5) - ((2 * (v73 ^ 0x45) + 20) & 0x18);
  HIDWORD(v54) = *(_DWORD *)(v11 + 9272);
  LODWORD(v54) = (*(_DWORD *)(v11 + 9624) ^ 0x33333333) << 24;
  v75 = ((v72 ^ (v40 & 0xFFFFFF9D ^ 0xFFFFFF81 | v40 & 0xFFFFFF9D ^ 0x1C) ^ 0xFFFFFFCF) + v74 + 1) ^ 0x5C;
  *(_DWORD *)(v11 + 9624) = 109 * v75 - ((26 * v75) & 0x2A);
  v76 = *(unsigned __int8 *)(v55 + ((v54 >> 25) ^ 0x25)) ^ (68
                                                                             - ((v54 >> 25) ^ 6 | (v54 >> 25) ^ 0xFFFFFFF9));
  v77 = (v76 ^ (32 * v76) ^ 0xFFFFFFA0) - ((2 * (v76 ^ (32 * v76) ^ 0xFFFFFFA0) + 20) & 0xFFFFFFAE);
  HIDWORD(v54) = *(_DWORD *)(v11 + 9736) >> 8;
  LODWORD(v54) = (*(_DWORD *)(v11 + 9688) ^ 0x6A) << 24;
  v78 = ((unsigned __int16)v9 >> 13) | (8 * *(_DWORD *)(v11 + 9080));
  v79 = (((v54 >> 25) ^ 0xFFFFFF98) + ((v54 >> 25) ^ 0x7E) + 1) ^ 0xFFFFFFB9 ^ *(unsigned __int8 *)(v65
                                                                                                  + ((v54 >> 25) ^ 0x95));
  v80 = v79 - ((2 * v79 + 20) & 0xFFFFFFD6);
  v81 = v78 ^ 0xFFFFFFB9 ^ *(unsigned __int8 *)(v44 + (v78 ^ 0x3BLL));
  HIDWORD(v54) = *(_DWORD *)(v11 + 9152);
  LODWORD(v54) = (*(_DWORD *)(v11 + 9464) ^ 0xCCCCCCCC) << 24;
  LOBYTE(v21) = v54 >> 25;
  v82 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 9680) + (*(_QWORD *)(v11 + 9456) ^ 0xBFLL));
  v83 = *(_QWORD *)(v11 + 9456) ^ 0x63 ^ (v82 - ((2 * v82) & 0x2A) + 21);
  v84 = *(unsigned __int8 *)(v66 + ((-87 * (*(_DWORD *)(v11 + 9496) ^ 0x29)) ^ 0x20));
  v85 = (((v84 >> 1) & 0x46 ^ v84) >> 5) | (8 * ((v84 >> 1) & 0x46 ^ v84));
  v86 = *(unsigned __int8 *)(v61 + ((-87 * (*(_DWORD *)(v11 + 9504) ^ 0xD1)) ^ 0x8BLL)) + 94;
  v87 = *(_DWORD *)(v11 + 9576);
  HIDWORD(v54) = v87 ^ 9;
  LODWORD(v54) = (v87 ^ 0xC0) << 24;
  v88 = v58;
  v89 = ((v54 >> 29) ^ 0x52) + *(unsigned __int8 *)(v58 + ((v54 >> 29) ^ 0x5ELL));
  LODWORD(v58) = *(unsigned __int8 *)(v61
                                    + ((((-87 * v19) ^ -(-87 * v19) ^ (((-87 * v19) ^ 0xFFFFFF96) + 106))
                                      + 105) ^ 0xE2))
               + 94;
  v90 = (v58 >> 5) | (8 * v58);
  v91 = (*(_QWORD *)(v11 + 9320) >> 1) & 0x7F | ((*(_QWORD *)(v11 + 9320) & 1) << 7);
  v92 = (*(_QWORD *)(v11 + 9320) >> 1) & 0x28;
  LODWORD(v44) = (v92 ^ 0x28)
               + v92
               + (((v91 ^ 0x98) + (v91 ^ 0x7E) + 1) ^ 0xFFFFFFB9 ^ *(unsigned __int8 *)(v65 + (v91 ^ 0x95)));
  v93 = (v46 >> 25) & 0xFFFFFFFFFFFFFF7FLL | ((*(_QWORD *)(v11 + 9432) & 1) << 7);
  v94 = *(unsigned __int8 *)(v66 + ((-11 * *(_DWORD *)(v11 + 9116)) ^ 0x20));
  *(_DWORD *)(v11 + 4828) = *(_DWORD *)(v11 + 9264) - 93;
  *(_DWORD *)(v11 + 4832) = *(_DWORD *)(v11 + 9136) - 63;
  *(_DWORD *)(v11 + 4788) = *(_DWORD *)(v11 + 9104) - 23;
  *(_DWORD *)(v11 + 4836) = *(_DWORD *)(v11 + 9072) ^ 0x10;
  *(_DWORD *)(v11 + 4804) = *(_DWORD *)(v11 + 9016) - 127;
  v95 = *(_QWORD *)(v11 + 9560);
  *(_DWORD *)(v11 + 4780) = (*(unsigned __int8 *)(v95 + (*(_QWORD *)(v11 + 1384) ^ 0x92)) ^ 0x60) + 3;
  *(_DWORD *)(v11 + 4844) = *(_DWORD *)(v11 + 9012) + 10;
  *(_DWORD *)(v11 + 4820) = *(_DWORD *)(v11 + 9008) + 10;
  *(_DWORD *)(v11 + 4852) = *(_DWORD *)(v11 + 9632) ^ 0xFFFFFFC8;
  *(_DWORD *)(v11 + 6432) = *(_DWORD *)(v11 + 9392) + 10;
  *(_DWORD *)(v11 + 4784) = *(_DWORD *)(v11 + 9400) ^ 0xFFFFFFA1;
  *(_DWORD *)(v11 + 4824) = *(_DWORD *)(v11 + 9416) - 106;
  *(_DWORD *)(v11 + 4848) = *(_DWORD *)(v11 + 9624) - 107;
  *(_DWORD *)(v11 + 4816) = v77 + 97;
  *(_DWORD *)(v11 + 4776) = v80 - 11;
  HIDWORD(v54) = *(_DWORD *)(v11 + 9280);
  LODWORD(v54) = *(_DWORD *)(v11 + 4972);
  v96 = *(_QWORD *)(v11 + 9472) ^ 0xAELL;
  *(_DWORD *)(v11 + 4932) = 109 * v81;
  *(_DWORD *)(v11 + 4792) = (*(unsigned __int8 *)(v95 + v96) ^ 0x60) + 3;
  LODWORD(v61) = *(unsigned __int8 *)(v55 + ((v54 >> 25) ^ 0x25));
  LODWORD(v96) = *(unsigned __int8 *)(v55 + (v21 ^ 0x25));
  *(_DWORD *)(v11 + 4796) = v83 + 3;
  *(_DWORD *)(v11 + 4952) = (v61 ^ (32 * v61) ^ 0x45) + 10;
  *(_DWORD *)(v11 + 4800) = (v96 ^ (32 * v96) ^ 0x45) + 10;
  *(_DWORD *)(v11 + 4840) = (*(unsigned __int8 *)(v95 + (*(_QWORD *)(v11 + 9488) ^ 0x89)) ^ 0x60) + 3;
  *(_DWORD *)(v11 + 4808) = v85 ^ 0xFFFFFFF0;
  *(_DWORD *)(v11 + 4812) = ((v86 >> 5) | (8 * v86)) ^ 0xFFFFFF98;
  *(_DWORD *)(v11 + 6416) = 109 * ((v89 + 1) ^ 0x5C);
  *(_DWORD *)(v11 + 6424) = v90 ^ 0xFFFFFF98;
  *(_DWORD *)(v11 + 6400) = v44 - 30;
  *(_DWORD *)(v11 + 6440) = (*(unsigned __int8 *)(v55 + (v93 ^ 0x25)) ^ (32 * *(unsigned __int8 *)(v55 + (v93 ^ 0x25))) ^ 0x45)
                          + 10;
  LODWORD(v61) = ((((v94 >> 1) & 0x46 ^ v94) >> 5) | (8 * ((v94 >> 1) & 0x46 ^ v94))) ^ 0xFFFFFFF0;
  v97 = v88;
  *(_DWORD *)(v11 + 6392) = v61;
  LODWORD(v61) = *(_DWORD *)(v11 + 7320);
  v98 = *(unsigned __int8 *)(v55
                           + ((((unint64_t)v47 >> ((!(v72 & 1) + (v72 & 1)) | 1u))
                                              + (v47 << ((v78 | 0xC0) - (v78 & 0x3Fu) + 71))) ^ 0x25));
  *(_DWORD *)(v11 + 6408) = (v98 ^ (32 * v98) ^ 0x45) + 10;
  *(_QWORD *)(v11 + 6904) = *(_QWORD *)(v11 + 7664);
  *(_QWORD *)(v11 + 6872) = *(_QWORD *)(v11 + 7680);
  *(_QWORD *)(v11 + 6864) = *(_QWORD *)(v11 + 7656);
  *(_QWORD *)(v11 + 6888) = *(_QWORD *)(v11 + 7688);
  *(_QWORD *)(v11 + 6880) = *(_QWORD *)(v11 + 7696);
  *(_QWORD *)(v11 + 6896) = *(_QWORD *)(v11 + 7704);
  *(_QWORD *)(v11 + 8944) = *(_QWORD *)(v11 + 9568);
  *(_QWORD *)(v11 + 8576) = *(_QWORD *)(v11 + 8888);
  *(_QWORD *)(v11 + 8952) = *(_QWORD *)(v11 + 9200);
  *(_QWORD *)(v11 + 8936) = *(_QWORD *)(v11 + 8880);
  v99 = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  *(_QWORD *)(v11 + 5400) = *(_QWORD *)(v11 + 8264);
  *(_DWORD *)(v11 + 8080) = *(_DWORD *)(v11 + 8032);
  *(_DWORD *)(v11 + 5396) = *(_DWORD *)(v11 + 7448);
  *(_DWORD *)(v11 + 6928) = *(_DWORD *)(v11 + 7712);
  *(_DWORD *)(v11 + 9116) = *(_DWORD *)(v11 + 9448);
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 7904) = *(_DWORD *)(v11 + 8312);
  *(_DWORD *)(v11 + 5344) = *(_DWORD *)(v11 + 6072);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 7040) = *(_DWORD *)(v11 + 6944);
  *(_DWORD *)(v11 + 6856) = *(_DWORD *)(v11 + 7648);
  *(_DWORD *)(v11 + 8064) = *(_DWORD *)(v11 + 7992);
  *(_DWORD *)(v11 + 8832) = *(_DWORD *)(v11 + 9384);
  *(_DWORD *)(v11 + 9152) = *(_DWORD *)(v11 + 8964);
  *(_DWORD *)(v11 + 6952) = *(_DWORD *)(v11 + 6936);
  *(_DWORD *)(v11 + 8196) = *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 6984) = *(_DWORD *)(v11 + 7552);
  *(_DWORD *)(v11 + 5340) = *(_DWORD *)(v11 + 7616);
  *(_DWORD *)(v11 + 8136) = *(_DWORD *)(v11 + 9480);
  *(_DWORD *)(v11 + 7000) = *(_DWORD *)(v11 + 6968);
  *(_DWORD *)(v11 + 7912) = *(_DWORD *)(v11 + 7888);
  *(_DWORD *)(v11 + 9104) = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 8456) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 8912) = *(_DWORD *)(v11 + 8872);
  *(_DWORD *)(v11 + 6912) = *(_DWORD *)(v11 + 7640);
  *(_DWORD *)(v11 + 5348) = *(_DWORD *)(v11 + 6084);
  *(_DWORD *)(v11 + 7008) = *(_DWORD *)(v11 + 6992);
  *(_DWORD *)(v11 + 6920) = *(_DWORD *)(v11 + 7672);
  *(_DWORD *)(v11 + 8040) = *(_DWORD *)(v11 + 8020);
  *(_DWORD *)(v11 + 5336) = *(_DWORD *)(v11 + 6080);
  *(_DWORD *)(v11 + 8116) = *(_DWORD *)(v11 + 8024);
  v100 = *(_DWORD *)(v11 + 8616);
  *(_DWORD *)(v11 + 8904) = v100;
  *(_DWORD *)(v11 + 9072) = v100;
  *(_DWORD *)(v11 + 8920) = *(_DWORD *)(v11 + 9160);
  *(_DWORD *)(v11 + 7152) = *(_DWORD *)(v11 + 8000);
  *(_DWORD *)(v11 + 8272) = *(_DWORD *)(v11 + 7984);
  *(_DWORD *)(v11 + 8056) = *(_DWORD *)(v11 + 8008);
  *(_DWORD *)(v11 + 7080) = *(_DWORD *)(v11 + 7592);
  *(_DWORD *)(v11 + 9264) = a4;
  *(_DWORD *)(v11 + 7088) = *(_DWORD *)(v11 + 7584);
  *(_DWORD *)(v11 + 7072) = *(_DWORD *)(v11 + 7576);
  *(_DWORD *)(v11 + 8552) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 8900) = *(_DWORD *)(v11 + 9096);
  *(_DWORD *)(v11 + 4292) = *(_DWORD *)(v11 + 8280);
  *(_DWORD *)(v11 + 9184) = *(_DWORD *)(v11 + 9584);
  *(_DWORD *)(v11 + 8572) = *(_DWORD *)(v11 + 8984);
  *(_DWORD *)(v11 + 8932) = *(_DWORD *)(v11 + 8612);
  *(_DWORD *)(v11 + 5312) = *(_DWORD *)(v11 + 7632);
  *(_DWORD *)(v11 + 8328) = *(_DWORD *)(v11 + 9592);
  *(_DWORD *)(v11 + 8188) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 8608) = *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 6172) = -616607474;
  *(_DWORD *)(v11 + 4924) = *(_DWORD *)(v11 + 1332);
  *(_DWORD *)(v11 + 4928) = *(_DWORD *)(v11 + 1424);
  *(_DWORD *)(v11 + 4772) = *(_DWORD *)(v11 + 1400);
  *(_DWORD *)(v11 + 4768) = *(_DWORD *)(v11 + 1336);
  *(_DWORD *)(v11 + 4764) = *(_DWORD *)(v11 + 1512);
  *(_DWORD *)(v11 + 4760) = *(_DWORD *)(v11 + 1860);
  *(_QWORD *)(v11 + 4752) = *(unsigned int *)(v11 + 1412);
  *(_DWORD *)(v11 + 4748) = *(_DWORD *)(v11 + 1508);
  *(_DWORD *)(v11 + 4744) = *(_DWORD *)(v11 + 1404);
  *(_DWORD *)(v11 + 4740) = *(_DWORD *)(v11 + 1356);
  *(_DWORD *)(v11 + 4736) = *(_DWORD *)(v11 + 1372);
  *(_DWORD *)(v11 + 4856) = *(_DWORD *)(v11 + 1312);
  *(_DWORD *)(v11 + 4732) = *(_DWORD *)(v11 + 1492);
  *(_DWORD *)(v11 + 4728) = *(_DWORD *)(v11 + 1360);
  *(_DWORD *)(v11 + 4724) = *(_DWORD *)(v11 + 1544);
  *(_DWORD *)(v11 + 4720) = *(_DWORD *)(v11 + 1348);
  *(_DWORD *)(v11 + 4716) = *(_DWORD *)(v11 + 1408);
  *(_DWORD *)(v11 + 4712) = *(_DWORD *)(v11 + 8304);
  *(_DWORD *)(v11 + 4708) = *(_DWORD *)(v11 + 1308);
  *(_DWORD *)(v11 + 4704) = *(_DWORD *)(v11 + 1428);
  *(_DWORD *)(v11 + 4700) = *(_DWORD *)(v11 + 1324);
  *(_DWORD *)(v11 + 4696) = *(_DWORD *)(v11 + 1344);
  *(_DWORD *)(v11 + 4692) = *(_DWORD *)(v11 + 1476);
  *(_DWORD *)(v11 + 4688) = *(_DWORD *)(v11 + 1364);
  *(_DWORD *)(v11 + 4684) = *(_DWORD *)(v11 + 1532);
  *(_DWORD *)(v11 + 4680) = *(_DWORD *)(v11 + 1320);
  *(_DWORD *)(v11 + 4676) = *(_DWORD *)(v11 + 1448);
  *(_QWORD *)(v11 + 4664) = *(unsigned int *)(v11 + 1416);
  *(_DWORD *)(v11 + 4956) = *(_DWORD *)(v11 + 1436);
  *(_DWORD *)(v11 + 4660) = *(_DWORD *)(v11 + 1464);
  *(_DWORD *)(v11 + 4656) = *(_DWORD *)(v11 + 1440);
  *(_DWORD *)(v11 + 4652) = *(_DWORD *)(v11 + 1304);
  *(_DWORD *)(v11 + 4648) = *(_DWORD *)(v11 + 1460);
  *(_DWORD *)(v11 + 4644) = *(_DWORD *)(v11 + 1548);
  *(_DWORD *)(v11 + 4640) = *(_DWORD *)(v11 + 1352);
  *(_DWORD *)(v11 + 4636) = *(_DWORD *)(v11 + 8300);
  *(_DWORD *)(v11 + 4632) = *(_DWORD *)(v11 + 1456);
  *(_DWORD *)(v11 + 4628) = *(_DWORD *)(v11 + 1340);
  *(_DWORD *)(v11 + 4624) = *(_DWORD *)(v11 + 1444);
  *(_DWORD *)(v11 + 4620) = *(_DWORD *)(v11 + 1328);
  *(_DWORD *)(v11 + 4616) = *(_DWORD *)(v11 + 1396);
  *(_DWORD *)(v11 + 4612) = *(_DWORD *)(v11 + 1864);
  *(_DWORD *)(v11 + 4608) = *(_DWORD *)(v11 + 1496);
  *(_DWORD *)(v11 + 4604) = *(_DWORD *)(v11 + 1480);
  *(_DWORD *)(v11 + 4600) = *(_DWORD *)(v11 + 1432);
  *(_DWORD *)(v11 + 4596) = *(_DWORD *)(v11 + 1368);
  *(_QWORD *)(v11 + 4584) = *(unsigned int *)(v11 + 1536);
  *(_DWORD *)(v11 + 4580) = *(_DWORD *)(v11 + 1540);
  *(_DWORD *)(v11 + 4576) = *(_DWORD *)(v11 + 1452);
  *(_DWORD *)(v11 + 4572) = *(_DWORD *)(v11 + 1316);
  *(_DWORD *)(v11 + 4568) = *(_DWORD *)(v11 + 1524);
  *(_DWORD *)(v11 + 4564) = *(_DWORD *)(v11 + 1500);
  *(_DWORD *)(v11 + 4560) = *(_DWORD *)(v11 + 1488);
  *(_DWORD *)(v11 + 4556) = *(_DWORD *)(v11 + 1520);
  *(_DWORD *)(v11 + 4552) = *(_DWORD *)(v11 + 1420);
  v101 = *(unsigned __int8 ***)(v11 + 9336);
  v102 = *(unsigned __int8 ***)(v11 + 8144);
  v103 = *(_QWORD *)(v11 + 6776);
  v104 = *(_DWORD *)(v11 + 6812);
  v105 = *(_DWORD *)(v11 + 7952);
  v106 = *(_DWORD *)(v11 + 7936);
  v107 = (v61 - 2059598139);
  LODWORD(v88) = *(_DWORD *)(v11 + 6172);
  v108 = (v107 ^ *(unsigned __int8 *)(v95 + (BYTE2(v88) ^ 0x19)) ^ 0x77) + 3;
  v109 = (v88 >> 5) & 0xF8 | ((unsigned __int16)v88 >> 13);
  v110 = *(unsigned __int8 *)(v97 + (v109 ^ 0xD4));
  *(_DWORD *)(v11 + 6128) = v88 ^ 0x55;
  *(_DWORD *)(v11 + 6156) = v108 ^ 0x14;
  *(_QWORD *)(v11 + 6336) = BYTE3(v88) ^ 0xFFFFFFA0;
  *(_QWORD *)(v11 + 6216) = 70;
  *(_DWORD *)(v11 + 6292) = (109 * (((v109 ^ 0xFFFFFFD8) + v110 + 1) ^ 0x5C)) ^ 0x46;
  *(_DWORD *)(v11 + 9688) = 17;
  *(_DWORD *)(v11 + 6332) = 123;
  *(_QWORD *)(v11 + 6320) = 8;
  *(_DWORD *)(v11 + 6288) = 38;
  *(_DWORD *)(v11 + 7920) = v106;
  *(_DWORD *)(v11 + 7928) = v105;
  *(_QWORD *)(v11 + 6296) = 37;
  *(_QWORD *)(v11 + 9616) = v103;
  *(_DWORD *)(v11 + 9624) = v104;
  *(_QWORD *)(v11 + 9280) = v99;
  v111 = 29 * (v107 ^ 0x853D1173);
  *(_DWORD *)(v11 + 9656) = v111;
  v112 = (v111 - 385912405) & 0x17007FFB;
  v113 = *(_QWORD *)(v11 + 9712);
  v114 = *(unsigned int *)(v113 + 40);
  v115 = **(unsigned __int8 ***)(v11 + 9352);
  v116 = *v101;
  v117 = *v102;
  v118 = **(unsigned __int8 **)(v11 + 8584);
  v119 = v116[25];
  v120 = v115[21];
  v121 = *(unsigned __int8 *)(v113 + 10);
  *(_QWORD *)(v11 + 9664) = v112;
  v122 = *(unsigned __int8 *)(v113 + 38);
  *(_QWORD *)(v11 + 9736) = v107;
  v123 = (v119 << (v112 ^ 0xF3u)) | v120;
  HIDWORD(v54) = v118;
  LODWORD(v54) = (v118 ^ 0xFFFFFFBF) << 24;
  v124 = v121 << (v121 & 0x18) << (v121 & 0x18 ^ 0x18);
  v125 = (uint64_t)*(&off_1004ECA20 + (int)(v107 ^ 0x853D11BC));
  v126 = v125 + 802;
  LOBYTE(v47) = *(_BYTE *)(v125 + 802 + ((v54 >> 28) ^ 0xB4));
  v127 = v124 ^ v123 ^ ((unint64_t)v117[8] << 16);
  v128 = ((unint64_t)v117[5] << 32) + v127 - 2 * (((unint64_t)v117[5] << 32) & v127);
  v129 = v117[2] | ((unint64_t)(-91 * ((-51 * v47) ^ (8 * ((-51 * v47) ^ (20 * v47))) ^ 0xDD)) << 8) | (v122 << 16) | ((unint64_t)*(unsigned __int8 *)(v113 + 11) << 24);
  v130 = v129 ^ -(uint64_t)v129;
  v131 = v129 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v116[11] << 32);
  v132 = (v115[3] | ((unint64_t)v116[10] << 16)) ^ ((unint64_t)*v115 << (v47 & 8) << (v47 & 8 ^ 8));
  v133 = (v130 ^ (v131 + ((unint64_t)v116[11] << 32) - 2 * v131)) + ((unint64_t)v116[11] << 32);
  LOBYTE(v131) = *(_BYTE *)(v125 + (v117[3] ^ 0xD0)) ^ 0x33;
  HIDWORD(v54) = **(unsigned __int8 **)(v11 + 8600);
  LODWORD(v54) = (HIDWORD(v54) ^ 0xFFFFFFBF) << 24;
  LOBYTE(v47) = *(_BYTE *)(v125 + 802 + ((v54 >> 28) ^ 0xB4));
  v134 = ((unint64_t)(**(unsigned __int8 **)(v11 + 8592) ^ 0xB0u) << 32) | ((unint64_t)v115[20] << 40) | ((unint64_t)(((v131 >> (v131 & 7)) >> (v131 & 7 ^ 7)) ^ (2 * v131)) << 48);
  v135 = (-51 * v47) ^ (8 * ((-51 * v47) ^ (20 * v47)));
  v136 = (v134 | ((unint64_t)v116[4] << 56)) ^ (v132 | ((unint64_t)v115[15] << 24));
  LOBYTE(v130) = *(_BYTE *)(v125 + 802 + (((v116[30] >> 4) | (16 * v116[30])) ^ 0xB4));
  v137 = ((*(_BYTE *)(v113 + 60) >> 2) | (*(_BYTE *)(v113 + 60) << 6));
  v138 = v125 + 530;
  v139 = (-51 * v130) ^ (8 * ((-51 * v130) ^ (20 * v130)));
  v140 = v133 ^ (((_DWORD)v114
                + 738712215
                + ((2 * (_DWORD)v114) & 0xA7F04AD2)
                + (((_DWORD)v114 + 1 + (v114 ^ 0x2C07DA96)) ^ 0xFFFFFFFE)) | ((unint64_t)v117[4] << 56) | ((unint64_t)v117[7] << 48) | ((unint64_t)v116[5] << 40));
  if ((*(_BYTE *)(v125
                 + 259
                 + (v137 ^ -v137 ^ (140
                                  - (((*(_BYTE *)(v113 + 60) >> 2) | (*(_BYTE *)(v113 + 60) << 6)) ^ 0x8Cu)))
                 + 140) & 1) != 0)
    v141 = -19;
  else
    v141 = -17;
  v142 = *(_BYTE **)(v11 + 8088);
  v143 = *(_BYTE **)(v11 + 8096);
  v144 = ((v116[35] | ((unint64_t)v115[4] << 16) | ((unint64_t)*(unsigned __int8 *)(v113 + 64) << 8)) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(-91 * (v135 ^ 0xDD)) << 24) | ((unint64_t)*(unsigned __int8 *)(v113 + 44) << 32) | ((unint64_t)v117[1] << 40)) ^ (((unint64_t)(-91 * (v139 ^ 0xDD)) << 48) | ((unint64_t)((*(unsigned __int8 *)(v113 + 80) ^ 0xFFFFFF9E ^ ((*(unsigned __int8 *)(v113 + 80) ^ 0xFFFFFF9E) + 53) ^ 0x6B ^ *(unsigned __int8 *)(v125 + 530 + (*(unsigned __int8 *)(v113 + 80) ^ 0x96))) - 115) << 56));
  v145 = *(_BYTE **)(v11 + 8120);
  v146 = *(_BYTE **)(v11 + 8104);
  v147 = v140 ^ 0xD8E1CAEB2C156C5DLL;
  v148 = (((*v142 ^ 0xB0) << 16) | ((unint64_t)(65
                                                                                         * ((v141
                                                                                           + *(_BYTE *)(v125 + 259 + (v137 ^ -v137 ^ (140 - (((*(_BYTE *)(v113 + 60) >> 2) | (*(_BYTE *)(v113 + 60) << 6)) ^ 0x8Cu))) + 140)) ^ 0x38)) << 8) | v116[31] | ((*v143 ^ 0xB0) << 24) | ((unint64_t)v117[9] << 40)) ^ (((unint64_t)(*v145 ^ 0xB0u) << 56) | ((unint64_t)(*v146 ^ 0xB0u) << 48) | ((unint64_t)v115[5] << 32));
  v149 = v136 ^ v140 ^ 0xD8E1CAEB2C156C5DLL;
  v150 = v128 ^ (((unint64_t)*(unsigned __int8 *)(v113 + 85) << 40) | ((unint64_t)*(unsigned __int8 *)(v113 + 47) << 48) | ((unint64_t)*v116 << 56)) ^ v148;
  v151 = v144 ^ v148 ^ 0x58BE7B89AC062434;
  v152 = (v144 ^ 0x1D27FF233AC1D70ELL) & (v149 ^ 0x91F9A441F1A06E97);
  v153 = v140 ^ 0x271E3514D3EA93A2;
  v154 = v149 ^ 0x6E065BBE0E5F9168;
  v155 = v151 & (v144 ^ 0xE2D800DCC53E28F1) ^ v154;
  v156 = v152 ^ v147;
  v157 = v136 ^ 0x6E065BBE0E5F9168;
  v158 = v150 ^ 0x1D836F84E10B0A6FLL;
  if (!*v116)
    v157 = v154;
  v159 = v150 ^ 0xE27C907B1EF4F590;
  v160 = (~(2 * v151) + v151) & v159;
  v161 = v159 ^ v157 & v153;
  v162 = v156 ^ v161;
  v163 = v156 ^ v161 ^ 0x9AF8F924A1E35583;
  v164 = v158 & v147 ^ v151;
  v165 = v164 ^ v161;
  v166 = v144 ^ v160 ^ 0x2786144591C14446 ^ v155;
  v167 = v164 ^ 0x116382A17B85A8A8;
  v168 = v166 ^ __ROR8__(v166, 10);
  v169 = v168 & 0x200000;
  if ((v168 & 0x200000 & (v166 >> 17)) != 0)
    v169 = -v169;
  v170 = (65 * ((*(_BYTE *)(v125 + 259 + (((v162 >> 55) & 0xC0 | (v163 >> 63)) ^ 0x8C)) - 18) ^ 0x39)) ^ (8 * v162) ^ v163 ^ (v163 >> 39) ^ (v163 << 25);
  v171 = (v169 + (v166 >> 17)) ^ v168 & 0xFFFFFFFFFFDFFFFFLL;
  v172 = v167 ^ (v167 << 23) ^ ((v167 >> 7) ^ (v167 >> 41) | (v167 << 57));
  v173 = v171 ^ (v166 << 47);
  *((_QWORD *)&v174 + 1) = v165;
  *(_QWORD *)&v174 = v165 ^ 0x7EFE59D31375069CLL;
  v175 = v165 ^ 0x7EFE59D31375069CLL ^ __ROR8__(v165 ^ 0x7EFE59D31375069CLL, 19) ^ (v174 >> 28) ^ v172;
  v176 = v175 ^ 0x375069C000000000;
  v177 = v155 ^ 0x8E06F550B4FEA48ALL ^ __ROR8__(v155, 1) ^ ((v155 ^ 0x8E06F550B4FEA48ALL) >> 6) ^ ((v155 ^ 0x8E06F550B4FEA48ALL) << 58) ^ v170 ^ 0xD7C7C9250F1AAC18;
  *((_QWORD *)&v174 + 1) = v171;
  *(_QWORD *)&v174 = v173;
  *(_QWORD *)&v174 = __ROR8__((v174 >> 42) ^ __ROR8__(v172, 42) ^ 0x57A4613020955AF2, 22);
  v178 = v173 & (v177 ^ 0xB8FC8557A580ADBALL) ^ v170 ^ 0xD7C7C9250F1AAC18;
  v179 = v174 ^ 0x556BC95E9184C082 ^ (v175 ^ 0xC8AF963FFFFFFFFFLL) & (v170 ^ 0xD7C7C9250F1AAC18);
  v180 = (v174 ^ 0xAA9436A16E7B3F7DLL) & v176;
  v181 = (v177 ^ 0x47037AA85A7F5245) & (v170 ^ 0x283836DAF0E553E7) ^ v176;
  v182 = (v174 ^ 0x556BC95E9184C082) & ~v173 ^ v177 ^ 0x47037AA85A7F5245;
  v183 = (v178 + v181 - 2 * (v178 & v181)) ^ 0xF0CC8DD092A1AF2FLL;
  v184 = v179 - 0x404455A03024AE79;
  v185 = ((v182 + (v182 ^ 0xACA90F98B7DE5139) + 1) ^ 0xFFFFFFFFFFFFFFFCLL) + v182;
  v186 = (2 * v179) & 0x7F7754BF9FB6A30ELL;
  v187 = v181 ^ v179 ^ 0xCC7BE9A4BE673377;
  v188 = v173 ^ 0x47C99E12AA55AA20 ^ v180 ^ v182;
  v189 = v184 - v186;
  v190 = (v185 >> 1) & 0x10000000;
  v191 = v189 >> 7;
  if ((v190 & v185) != 0)
    v190 = -v190;
  v192 = (v190 + v185) ^ (v185 >> 1) & 0xFFFFFFFFEFFFFFFFLL;
  v193 = v191 & 0x15A4184970A3B70 ^ v189 & 0xCF5A4184970A3B70;
  v194 = v193 | (v189 >> 7) & 0xA5BE7B68F5C48FLL ^ v189 & 0x30A5BE7B68F5C48FLL;
  v195 = v183 ^ __ROR8__(v183, 61) ^ (v183 >> 39) ^ (v183 << 25);
  v196 = (v192 + (v185 << 63)) ^ __ROR8__(v185, 6);
  v197 = (v193 ^ v191) & 0x20;
  v198 = ((v189 << 57) ^ (v189 << 23) ^ v194 | (v189 >> 41)) ^ v194 & (v189 >> 41);
  if ((v197 & v195) != 0)
    v199 = -v197;
  else
    v199 = (v193 ^ v191) & 0x20;
  v200 = (v199 + v195) ^ v197;
  v201 = v187 ^ __ROR8__(v187, 19) ^ (v187 >> 28) ^ (v187 << 36) ^ v198;
  v202 = (((0x5682E4B04CCE5973 - 2 * ((v188 << 54) & v188)) ^ ((v188 << 54)
                                                               - 0x5682E4B04CCE5973
                                                               + (v188 ^ (v188 >> 10))))
        + 2
        * ((0x5682E4B04CCE5973 - 2 * ((v188 << 54) & v188)) & ((v188 << 54)
                                                               - 0x5682E4B04CCE5973
                                                               + (v188 ^ (v188 >> 10))))) ^ __ROR8__(v188, 17);
  v203 = v202 ^ v198;
  v204 = v202 & ~(v196 ^ v200) ^ v200;
  v205 = v200 & ~v201 ^ v203;
  v206 = v196 ^ v200 ^ (~(2 * v202) + v202) & v203;
  v207 = v196 & ~v200 ^ v201;
  v208 = v204 ^ v207;
  v209 = v201 & ~v203;
  v210 = 0x802A65F49FF1DF13 - (v206 & 0x4000);
  v211 = v205 ^ 0x5392EDE158D8BEABLL ^ v207;
  v212 = v206 & 0xFFFFFFFFFFFFBFFFLL;
  v213 = v209 ^ v202 ^ v206;
  v214 = v210 ^ v212;
  v215 = 8 * (v208 ^ 0x4A2C537256ACF1F5);
  v216 = v208 ^ 0x4A2C537256ACF1F5 ^ ((v208 ^ 0x4A2C537256ACF1F5uLL) >> 61) ^ ((v208 ^ 0x4A2C537256ACF1F5uLL) >> 39);
  v217 = v216 & v215;
  v218 = v216 + v215;
  v219 = (v205 ^ 0xAD2A34AC12844DDDLL) << 57;
  v220 = (v218 - 2 * v217) ^ (v208 << 25);
  v221 = ((v214 >> 6) | (v214 << 63)) ^ (v214 << 58) ^ ((v214 >> 1) & 0x144C40D5A6699F68 ^ v214 & 0x944C40D5A6699F68 | ((v214 >> 1) ^ v214) & 0x6BB3BF2A59966097) ^ v220 ^ 0xE4AD59E3EA000000;
  v222 = (((v213 ^ 0x313BC7C92EDDA5FDLL) >> 10) ^ (v213 >> 17) | ((v213 ^ 0x313BC7C92EDDA5FDLL) << 54)) ^ __ROR8__(__ROR8__(v213 ^ 0x313BC7C92EDDA5FDLL, 9) & 0xFF800000000000FFLL ^ __ROR8__(v213 ^ 0x313BC7C92EDDA5FDLL, 56) ^ 0x6C917F5A85D4E647, 8);
  v223 = (v205 >> 7) ^ __ROR8__(v205 ^ 0xAD2A34AC12844DDDLL, 41) ^ 0x15A54695825089BLL ^ ((((v219 ^ (0xFE00000000000000 * (v205 ^ 0xAD2A34AC12844DDDLL)) ^ ((v205 ^ 0xAD2A34AC12844DDDLL) - (v219 ^ v205 ^ 0xAD2A34AC12844DDDLL) - (((v205 ^ 0xAD2A34AC12844DDDLL) - (v219 ^ v205 ^ 0xAD2A34AC12844DDDLL)) ^ v219)))
                                                                                          + (v205 ^ 0xAD2A34AC12844DDDLL)
                                                                                          - (v219 ^ v205 ^ 0xAD2A34AC12844DDDLL)) ^ (0xFE00000000000000 * (v205 ^ 0xAD2A34AC12844DDDLL)))
                                                                                        + (v205 ^ 0xAD2A34AC12844DDDLL));
  v224 = v223 ^ v222 ^ 0x476C89E2B9614388;
  v225 = ((v211 >> 28) | (v211 << 45)) ^ (v211 << 36) ^ ((v211 >> 19) & 0x196DEA6F2D89 ^ v211 & 0x2326796DEA6F2D89 | (v211 >> 19) & 0x6921590D276 ^ v211 & 0xDCD986921590D276) ^ v223;
  v226 = (v220 ^ 0xE4AD59E3EA000000) & ~v225 ^ v224;
  v227 = (v222 ^ 0x476C89E2B9614388) & ~v221 ^ v220 ^ 0xE4AD59E3EA000000;
  v228 = (v225 ^ -(uint64_t)v225 ^ ((v221 & (v220 ^ 0x1B52A61C15FFFFFFLL)) - (v221 & (v220 ^ 0x1B52A61C15FFFFFFLL) ^ v225)))
       + (v221 & (v220 ^ 0x1B52A61C15FFFFFFLL));
  v229 = v226 ^ 0x9D5823204F6787ADLL ^ v228;
  v230 = v227 ^ 0xC0C4E4651798A92FLL ^ v228;
  v231 = v225 & ~v224;
  v232 = v224 & (v222 ^ 0xB893761D469EBC77) ^ v221;
  v233 = v232 ^ 0x3508012E90BBEBA6;
  LODWORD(v235) = __ROR4__(v114 ^ 0x46B8D103, 6) ^ 0x643F2D94;
  HIDWORD(v235) = v235;
  v234 = v235 >> 26;
  v236 = v222 ^ v231 ^ 0xF677116099FDED9CLL ^ v232;
  v237 = ((v232 ^ 0x3508012E90BBEBA6) >> 6) | (v232 << 63);
  if ((v234 & 0x20000) != 0)
    v238 = -131072;
  else
    v238 = 0x20000;
  v239 = v233 ^ (v233 << 58) ^ (v233 >> 1) ^ v237;
  v240 = (v226 - ((v238 + v234) ^ 0x4971B41Au) + v114) ^ 0x76AE5B4ADE1196D6;
  v241 = v230 ^ __ROR8__(v230, 61) ^ (v230 >> 39) ^ (v230 << 25);
  v242 = v241 ^ v239;
  v243 = v236 ^ __ROR8__(v236, 10) ^ (v236 >> 17) ^ (v236 << 47);
  v244 = v240 ^ __ROR8__(v240, 7) ^ (v240 >> 41) ^ (v240 << 23);
  v245 = v244 ^ v243;
  v246 = v229 ^ __ROR8__(v229, 19) ^ (v229 >> 28) ^ (v229 << 36) ^ v244;
  v247 = v239 & ~v241 ^ v246;
  v248 = v241 & ~v246 ^ v244 ^ v243;
  v249 = __ROR8__(v244 & ~v243, 17);
  v250 = 0x1000000000;
  if (((v248 ^ v247) & 0x1000000000) != 0)
    v250 = 0xFFFFFFF000000000;
  v251 = (v250 + (v248 ^ v247)) ^ 0xE911D3A838E92FACLL;
  v252 = __ROR8__(v249 ^ __ROR8__(v242, 17) ^ 0xF3FA7421DB3CB95BLL, 47);
  v253 = v241 ^ v243 & ~v242 ^ v247 ^ 0xA2420D136BFD9FADLL;
  v254 = v246 & ~v245 ^ v243 ^ v252;
  v255 = v253 ^ __ROR8__(v253, 61) ^ (v253 >> 39) ^ (v253 << 25);
  v256 = __ROR8__(v252 ^ 0x8FE3893E9F4AD9AALL, 6) ^ (v252 << 63) ^ (((v252 ^ 0x8FE3893E9F4AD9AALL) >> 1)
                                                                  + (v252 ^ 0x8FE3893E9F4AD9AALL)
                                                                  - 2
                                                                  * (((v252 ^ 0x8FE3893E9F4AD9AALL) >> 1) & (v252 ^ 0x8FE3893E9F4AD9AALL)));
  v257 = v248 ^ 0x3548F5C53C294B00 ^ ((v248 ^ 0x3548F5C53C294B00) >> 7) ^ (((v248 ^ 0x3548F5C53C294B00) >> 41) | (v248 << 57));
  v258 = (v248 ^ 0x3548F5C53C294B00) << 23;
  v259 = v257 & v258;
  v260 = v257 + v258;
  v261 = v256 ^ v255;
  v262 = v260 - 2 * v259;
  v263 = v254 ^ 0x74892CB32BD39554 ^ ((v254 ^ 0x74892CB32BD39554) << 54) ^ ((v254 ^ 0x74892CB32BD39554) >> (v227 & 0x11) >> (v227 & 0x11 ^ 0x11)) ^ __ROR8__((((v254 ^ 0x74892CB32BD39554) & 0x1FFFF) << 16) ^ __ROR8__((v254 >> 10) ^ 0x1D224B2CCAF4E5, 31) ^ 0x43BCC1B32BEC72D7, 33);
  v264 = v263 ^ 0x95F6396BA1DE60D9;
  v265 = v263 ^ 0x95F6396BA1DE60D9 ^ v262;
  v266 = ((v251 >> 28) | (v251 << 45)) ^ (v251 << 36) ^ v262 ^ __ROR8__(__ROR8__(__ROR8__(v251, 63) & 0xFFFFFFFFFFF00001 ^ __ROR8__(v251, 44) ^ 0x6EAF80F71436AB5CLL, 33) ^ 0xAF2AC674012EF784, 51);
  v267 = (v266 ^ 0xCD84B930D9001B59) & v255 ^ v265;
  v266 ^= 0x327B46CF26FFE4A6uLL;
  v268 = v266 ^ v256 & ~v255;
  v269 = (v263 ^ 0x95F6396BA1DE60D9) & ~v261;
  v270 = (v263 ^ 0x95F6396BA1DE60D9) & 0x800000000;
  v271 = v265 & (v263 ^ 0x6A09C6945E219F26) ^ v261;
  v272 = v266 & ~v265;
  v273 = v264 & 0xFFFFFFF7FFFFFFFFLL;
  v274 = ((v267 ^ -(uint64_t)v267 ^ (v268 - (v267 ^ v268))) + v268) ^ 0x69B66319AD0E859DLL;
  v275 = v255 ^ v269 ^ 0x917EAA74E2F77306 ^ v268;
  if ((v272 & v270) != 0)
    v276 = -(uint64_t)v270;
  else
    v276 = v270;
  v277 = v273 ^ v271 ^ 0x255BF95FCB5E630DLL ^ (v276 + v272);
  v278 = (v271 ^ 0xE293FE325B0CD692) << 58;
  v279 = v267 ^ 0x480CE2D84EC70A20;
  v280 = v275 << 25;
  *((_QWORD *)&v281 + 1) = v271;
  *(_QWORD *)&v281 = v271 ^ 0xE293FE325B0CD692;
  v282 = v275 ^ __ROR8__(v275, 61) ^ (v275 >> 39);
  v283 = v282 & (v275 << 25);
  v284 = __ROR8__((v274 >> 9) & 0x7FFFFFFFF80000 ^ __ROR8__(v274 ^ __ROR8__(v274, 19), 45) ^ 0xAC1171B45801915CLL, 19);
  v285 = (v281 >> 1) ^ v271 ^ 0xE293FE325B0CD692 ^ ((v271 ^ 0xE293FE325B0CD692) >> 6);
  v286 = v285 & 0x800000000000000;
  v287 = v284 ^ (v274 << 36) ^ 0x322B95822E368B00;
  v288 = v135 == 0;
  v289 = v285 ^ 0x800000000000000;
  if (v288)
    v289 = 0xF7FFFFFFFFFFFFFFLL;
  v290 = v289 & v285;
  if ((v286 & v278) != 0)
    v286 = -v286;
  v291 = v282 + v280 - 2 * v283;
  v115[21] = v284;
  v292 = ((v286 + v278) >> 32) ^ HIDWORD(v290);
  v117[8] = BYTE2(v287);
  v116[25] = BYTE1(v287);
  v293 = ((BYTE3(v287) ^ 0x2C) + (BYTE3(v287) | 0xD3) + 1) | BYTE3(v287) & 0x2C;
  v294 = *(_BYTE *)(v126 + (((v293 >> 4) | (16 * (v293 & 0xFu))) ^ 0xB4));
  v117[5] = BYTE4(v287);
  *v116 = HIBYTE(v287);
  v295 = v277 ^ __ROR8__(v277, 10) ^ (v277 >> 17);
  **(_BYTE **)(v11 + 8584) = BYTE1(v282) - ((2 * BYTE1(v282)) & 0x60) - 80;
  v296 = v279 ^ (v279 << 23) ^ __ROR8__(v279, 7);
  v117[2] = v282;
  v116[5] = BYTE5(v291);
  *(_BYTE *)(v113 + 10) = -91 * ((-51 * v294) ^ (8 * ((-51 * v294) ^ (20 * v294))) ^ 0xDD);
  *(_BYTE *)(v113 + 85) = BYTE5(v287);
  *(_BYTE *)(v113 + 38) = BYTE2(v282);
  *(_BYTE *)(v113 + 11) = BYTE3(v291);
  v116[11] = BYTE4(v291);
  *(_BYTE *)(v113 + 47) = BYTE6(v287);
  v297 = *(unsigned __int8 *)(v125 + (BYTE6(v291) ^ 0xD0));
  v298 = *(_QWORD *)(v11 + 9744);
  v117[7] = ((v297 >> 7) | (2 * v297)) ^ 0x66;
  v115[15] = BYTE3(v290);
  **(_BYTE **)(v11 + 8592) = v292 - ((2 * v292) & 0x60) - 80;
  v116[10] = BYTE2(v290);
  v115[3] = v290;
  v117[4] = HIBYTE(v291);
  *v115 = BYTE1(v290);
  LODWORD(v291) = *(unsigned __int8 *)(v125 + (BYTE1(v292) ^ 0xD0));
  **(_BYTE **)(v11 + 8600) = BYTE3(v295) - ((2 * BYTE3(v295)) & 0x60) - 80;
  v116[35] = v295;
  v115[4] = BYTE2(v295);
  v116[4] = HIBYTE(v292);
  v115[20] = ((v291 >> 7) | (2 * v291)) ^ 0x66;
  *(_BYTE *)(v113 + 64) = BYTE1(v295);
  v117[3] = BYTE6(v290);
  v299 = v295 ^ (v277 << 47);
  v300 = *(unsigned __int8 *)(v125 + (BYTE4(v295) ^ 0xD0));
  v117[1] = BYTE5(v299);
  v301 = (v300 >> 7) | (2 * v300);
  v302 = v296 ^ (((v267 & 0xFFFFFE9309388D1BLL ^ 0xB7F31C030138851BLL)
                + 0x16CF6C772E5
                + ((2 * v279) & 0xFFFFFD2612711A36)) >> 41);
  *(_BYTE *)(v113 + 44) = v301 ^ 0x66;
  v116[30] = BYTE6(v299);
  v303 = *(_BYTE *)(v126 + (((v299 >> 52) & 0xF0 | (v299 >> 60)) ^ 0xB4));
  v116[31] = v302;
  *(_BYTE *)(v113 + 80) = -91 * ((-51 * v303) ^ (8 * ((-51 * v303) ^ (20 * v303))) ^ 0xDD);
  v304 = *(_BYTE *)(v138 + (BYTE1(v302) ^ 0x96));
  *v145 = HIBYTE(v296) - ((2 * HIBYTE(v296)) & 0x60) - 80;
  *v142 = BYTE2(v302) - ((2 * BYTE2(v302)) & 0x60) - 80;
  v115[5] = BYTE4(v296);
  *v143 = BYTE3(v296) - ((2 * BYTE3(v296)) & 0x60) - 80;
  v117[9] = BYTE5(v296);
  *(_DWORD *)(v11 + 12324) = v114;
  *v146 = BYTE6(v296) - ((2 * BYTE6(v296)) & 0x60) - 80;
  *(_BYTE *)(v113 + 60) = (v304 ^ BYTE1(v302) ^ 0x9E ^ ((BYTE1(v302) ^ 0x9E) + 53) ^ 0x6B) - 115;
  *(_DWORD *)(v113 + 40) = *(_DWORD *)(v11 + 12324) + 1;
  v305 = *(_DWORD *)(v11 + 9688) < 0x10u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v298
                                        + 8
                                        * (int)((16 * v305) | (32 * v305) | (*(_QWORD *)(v11 + 9736) + 2059604084)))
                            - 8))();
}

uint64_t sub_1002B8408@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (176 * (a1 < 0xCu))))
                            - ((((v1 + 29) | 0x1A24u) - 74) ^ ((v1 - 275) | 0x1B02u))))();
}

uint64_t sub_1002B844C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((((v0 - 1128) ^ 0x14BD ^ ((v0 - 6944) | 0x300)) * (v1 < 0xA)) ^ v0))
                            - 12))();
}

uint64_t sub_1002B8488@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                      + 8 * (((((v1 - 4924) | 0x2C) - 1021) * (a1 == 9)) ^ v1))
                                          - ((v1 - 2059601717) ^ 0x853D101FLL)))(1092323453);
}

void sub_1002B84F8()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002B8514(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1760) - v3 + 31) = a1 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v4 ^ (1020 * (v3 == 31)))) - 4))();
}

uint64_t sub_1002B857C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 ^ 0x15EE)) ^ v1)))();
}

uint64_t sub_1002B85A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(_QWORD))(a3 + 8 * (((v4 - 974) * (v3 < *(_DWORD *)(v5 + 3996))) ^ v4)))(0);
}

uint64_t sub_1002B85D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002B8514(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002B8618(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1056) - v2 + 31) = a2 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v2 + 14 * (v4 ^ 0xAB9u) == 2201) * (((v4 - 2592) | 0x2A9) ^ 0x618)) ^ v4))
                            - 4))();
}

uint64_t sub_1002B8690()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((444 * (v0 == ((v1 + 1367) | 0x220) - 2562)) ^ v1))
                            - 8))();
}

uint64_t sub_1002B86C4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (9867 * (a2 < *(_DWORD *)(v3 + 3992)))))
                            - (v2 + 1911)
                            + 2586))();
}

uint64_t sub_1002B86F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002B8618(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B8720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1048) - v2 + 31) = v5 >> v4;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2
                                                     + 8 * ((3080 * (v2 + 1 != ((v3 + 1638) ^ 0x85u) - 2138)) ^ v3))
                                         - 4))(*(_QWORD *)(v6 + 4000));
}

uint64_t sub_1002B8780(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * ((4273 * (v4 == ((a4 - 352648383) & 0x1504F6DD) - 633)) ^ a4))
                            - 8))();
}

uint64_t sub_1002B87C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a4 ^ (6775 * (v4 < *(_DWORD *)(v5 + 3988)))))
                            - (a4 - 1505)
                            + 657))();
}

uint64_t sub_1002B87F4(uint64_t a1, uint64_t a2)
{
  return sub_1002B8720(a1, a2);
}

uint64_t sub_1002B8828(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1040) - v5 + 54 * (v3 ^ 0x2ABu) - 2669) = a3 >> ((47 * (v3 ^ 0xA8)) & v4);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 8 * (v3 | (4 * (v5 == 31)) | (32 * (v5 == 31))))
                                                  - 4))(a1, *(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002B88A8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((11249 * (v0 == 32)) ^ v1))
                            - ((v1 + 465425056) & 0xE44226F9)
                            + 661))();
}

uint64_t sub_1002B88E8@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (7951 * (*(_DWORD *)(v3 + 8272) > a2))))
                            - ((v2 + 558617086) & 0xDEB4279B ^ 0x29DLL)))();
}

uint64_t sub_1002B8934(uint64_t a1, uint64_t a2)
{
  return sub_1002B8828(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B8968(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1072) - v5 + 31) = a4 >> (((3 * (v4 ^ 0x39)) ^ 0x73u) & v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 ^ (10450 * (v5 == 31)))) - 4))();
}

uint64_t sub_1002B89D8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (v0 - 2670)) ^ v0)))();
}

uint64_t sub_1002B89FC(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 + 6147) * (*(_DWORD *)(v3 + 9152) > v1)) ^ v2)))();
}

uint64_t sub_1002B8A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B8968(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B8A6C(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v8 = (v5 - 2059596214);
  *(_BYTE *)(*(_QWORD *)(v7 + 1064) - v6 + 31) = v4 >> (v3 & (v5 + 50));
  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * ((1323 * (v6 - 2235371511 + v8 != 63)) ^ v5)) - 8);
  *(_DWORD *)(v7 + 9464) = 994009495;
  *(_QWORD *)(v7 + 9416) = v8;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  v10 = *(_QWORD *)(v7 + 1768);
  *(_QWORD *)(v7 + 9608) = v10;
  *(_DWORD *)(v7 + 7944) = a3;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v9(v10);
}

uint64_t sub_1002B8B78()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((619 * (v0 == 32)) ^ v1))
                            - ((v1 + 204) ^ 0x1C9)))();
}

uint64_t sub_1002B8BAC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (6861 * (a3 < a2)))) - v4 + 457))();
}

uint64_t sub_1002B8BD8(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002B8A6C(a1, a2, a3);
}

uint64_t sub_1002B8C08()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((((v0 - 3686) ^ 0xCFB) * (v1 < 0xE)) ^ v0))
                            - ((v0 - 2931) ^ 0xFE7)))();
}

uint64_t sub_1002B8C40@<X0>(char a1@<W5>, unsigned __int8 a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744)
                              + 8 * (((a2 == ((a1 + v2 + 76) ^ 0x1A)) * ((v2 + 2636) ^ 0x16B0)) ^ v2)))();
}

void sub_1002B8C94()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002B8CB0@<X0>(uint64_t a1@<X2>, char a2@<W8>)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1744) - v2 + 31) = v4 >> a2;
  return (*(uint64_t (**)(void))(a1 + 8 * ((((((v3 + 1340) | 0x508) - 4837) ^ 0x6BB) * (v2 == 31)) | v3)))();
}

uint64_t sub_1002B8D14@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((12812 * (a2 == 32)) ^ a1))
                            - ((a1 - 2628) ^ 0xD00)))();
}

uint64_t sub_1002B8D44(uint64_t a1, int a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((a2 - 5768) * (v3 < *(_DWORD *)(v4 + 3996))) ^ a2)) - 4))();
}

uint64_t sub_1002B8D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B8CB0(a3, 0);
}

uint64_t sub_1002B8DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 976) - v3 + (v5 - 416) - 3613) = v6 >> v4;
  return (*(uint64_t (**)(void))(a3 + 8 * ((5272 * (v3 + (v5 ^ 0xBBFu) == 1154)) ^ v5)))();
}

uint64_t sub_1002B8E04(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * ((31 * (v1 != ((a1 - 851899526) & 0x32C6FFFE ^ 0xFFFFF478) + a1 + 25)) ^ a1))
                            - 4))();
}

uint64_t sub_1002B8E50@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a2 + 6133) * (*(_DWORD *)(v3 + 3992) > v2)) ^ a2)) - 4))();
}

uint64_t sub_1002B8E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B8DA0(a1, a2, a3);
}

uint64_t sub_1002B8EB0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 968) - v3 + (v4 + 6019) - 7819) = a2 >> v5;
  return (*(uint64_t (**)(_QWORD))(a3 + 8 * ((7267 * (((v3 == 31) ^ (v4 + 22)) & 1)) ^ v4)))(*(_QWORD *)(v6 + 4000));
}

uint64_t sub_1002B8F1C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((6590 * (v1 == 32)) ^ v0))
                            - ((v0 - 1889326677) & 0x709CCF3F ^ 0x72BLL)))();
}

uint64_t sub_1002B8F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2
                                                              + 8
                                                              * (((((v3 - 3353) | 0x604) ^ 0x1CCC)
                                                                * (a3 < *(_DWORD *)(v4 + 3988))) ^ v3))
                                                  - 12))(a1, 0);
}

uint64_t sub_1002B8F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002B8EB0(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002B8FE0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 960) + ((((a3 - 167) | 0x182Au) - 2278) ^ 0x15DBLL) - v3) = a2 >> v5;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 8 * (a3 ^ (98 * (v3 == 31)))))(a1, *(_QWORD *)(v6 + 7872), 729921649);
}

uint64_t sub_1002B9044()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 - 6019) ^ 0x73A)) ^ v1))
                            - 4))();
}

uint64_t sub_1002B9074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                + 8
                                                                                * (((v5 ^ 0x2AAE)
                                                                                  * (v3 < *(_DWORD *)(v6 + 8272))) ^ v5))
                                                                    - 4))(a1, a2, a3, 0);
}

uint64_t sub_1002B90AC(uint64_t a1)
{
  int v1;

  return sub_1002B8FE0(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), (v1 - 1090211515) & 0x40FB3737);
}

uint64_t sub_1002B90F0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 992) - v5 + (v3 + 3711) - 5541) = a3 >> (v4 & (((v3 - 5) | 0x8C) ^ 0x33));
  return (*(uint64_t (**)(void))(v6 + 8 * (v3 ^ (2386 * (v5 == 31)))))();
}

uint64_t sub_1002B9160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8
                                        * (((v5 != ((17 * (a5 ^ 0x148D)) ^ 0x15F9)) * (((a5 - 4227) | 0x204) ^ 0x758)) ^ a5))
                            - 4))();
}

uint64_t sub_1002B91AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * (a3 ^ (14153 * (v3 < *(_DWORD *)(v5 + 9152)))))
                                                           - ((a3 - 3732) ^ 0x741)))(a1, a2, 0);
}

uint64_t sub_1002B91E4(uint64_t a1, uint64_t a2)
{
  return sub_1002B90F0(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B9214(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v4 + 2744) ^ 0x853D1BDB;
  *(_BYTE *)(*(_QWORD *)(v6 + 984) - v5 + 31) = v3 >> (v2 & (((v4 - 72) ^ 0xDB) - 24));
  v7 = *(uint64_t (**)(void))(a1 + 8 * (v4 ^ (3843 * (v5 != 31))));
  *(_DWORD *)(v6 + 9464) = 994009507;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1752);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002B9314()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8
                                                                 * (((v0 == 32) * ((v1 - 1594) ^ v1 ^ 0xAD8)) ^ v1))
                            - 12))();
}

uint64_t sub_1002B9348@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  unsigned int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)(((2 * (v4 & ~((v3 - 1681167886) ^ (a3 < a2)))) & 0xFFFFFFFB | (4 * (((v3 - 14) ^ ~(a3 < a2)) & 1))) ^ (v3 - 2)))
                            - (v3 ^ 0xBC0)))();
}

uint64_t sub_1002B93A4(uint64_t a1, int a2)
{
  return sub_1002B9214(a1, a2);
}

uint64_t sub_1002B93E8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                                      + 8
                                                      * (int)(((((v0 - 717409301) & 0xAFFFD897) + 2059602028)
                                                             * (*(_DWORD *)(v1 + 4040) == 18)) ^ v0))
                                          - ((v0 + 682903387) & 0xD74BB7BE)
                                          + 682))(1229367402);
}

void sub_1002B9474()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002B9490(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1752) - v5 + 31) = a1 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v4 ^ (255 * (v5 != 31)))) - ((v4 - 189) ^ 0x2AALL)))();
}

uint64_t sub_1002B94F8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * (((v2 == 32) * ((a2 + 189) ^ 0x14E6)) ^ a2))
                            - 12))();
}

uint64_t sub_1002B9524@<X0>(unsigned int a1@<W1>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2
                                                     + 8
                                                     * (int)((a1 - 2) | (2
                                                                       * (((*(_DWORD *)(v3 + 3996) > a3) ^ (a1 - 51)) & 1))))
                                         - a1
                                         + 674))(0);
}

uint64_t sub_1002B9574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002B9490(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002B95A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1016) - v2 + 31) = v5 >> ((25 * (v3 ^ 0xD4) + 88) & v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v3 ^ (9934 * (v2 == 31)))) - 4))();
}

uint64_t sub_1002B9618()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((11695 * (v1 == 32)) ^ v0))
                            - ((v0 - 2079549748) & 0x7BF3677B)
                            + 867))();
}

uint64_t sub_1002B9658(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v3 ^ (67 * (*(_DWORD *)(v4 + 3992) > v2))))
                            - ((v3 + 1514547800) & 0xA5B9D3EF ^ 0x363)))();
}

uint64_t sub_1002B96A4(uint64_t a1, uint64_t a2)
{
  return sub_1002B95A4(a1, a2);
}

uint64_t sub_1002B96E4@<X0>(unint64_t a1@<X2>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1008) - a2 + 31) = a1 >> (((v3 | 2) + 88) & v2);
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 8 * (v3 ^ (4037 * (a2 == 31)))) - 4))((v3 - 5249), *(_QWORD *)(v5 + 4000));
}

uint64_t sub_1002B9758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8
                                        * (((v5 == ((a5 - 4749) | 0x1280) - 4730) * (((a5 + 4474) | 0x184) + 3374)) ^ a5))
                            - 8))();
}

uint64_t sub_1002B97A4(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * (((((v3 - 3446) | 0x2081) ^ 0x2598)
                                                                         * (*(_DWORD *)(v5 + 3988) <= v2)) ^ v3))
                                                           - 8))(a1, a2, 0);
}

uint64_t sub_1002B97E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B96E4(*(unsigned int *)(v1 - 0x62AA055D109F20F3), a1);
}

uint64_t sub_1002B9820@<X0>(unint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1000) - v2 + 31) = a1 >> (v3 & ((a2 + 64) ^ (a2 - 119)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 ^ (4748 * (v2 != 31)))) - 8))();
}

uint64_t sub_1002B9898(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((1703 * (v1 == a1 - 4356)) ^ a1)) - 12))();
}

uint64_t sub_1002B98C8(unsigned int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(a1 ^ (100 * (v1 < *(_DWORD *)(v3 + 8272))))) - (a1 ^ 0x1128)))();
}

uint64_t sub_1002B9904(int a1, uint64_t a2)
{
  return sub_1002B9820(*(unsigned int *)(a2 - 0x62AA055D109F20F3), (a1 - 677929285) & 0x28685EBB);
}

uint64_t sub_1002B9944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1032) - v6 + ((v5 + 156184963) & 0xF6B0DC5B) - 7219) = a5 >> v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((232 * (((v6 == 31) ^ (v5 - 124)) & 1)) ^ v5))
                            - 8))();
}

uint64_t sub_1002B99D4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 + 1341)) ^ v1)))();
}

uint64_t sub_1002B99F8(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a2 + 8 * (((((v3 - 1796) | 0x812) - 3451) * (v2 < *(_DWORD *)(v4 + 9152))) ^ v3)))();
}

uint64_t sub_1002B9A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002B9944(a1, a2, a3 + 4, a4, *(unsigned int *)(a3 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B9A5C(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 - 176181334) & 0x8FBD5E9F;
  *(_BYTE *)(*(_QWORD *)(v6 + 1024) - v5 + 31) = v3 >> v2;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 ^ (4030 * (v5 != 31)))) - (v7 ^ 0x853D101FLL));
  *(_DWORD *)(v6 + 9464) = 994009501;
  *(_QWORD *)(v6 + 9416) = v7;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1760);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002B9B70()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((16374 * (v0 == (v1 ^ 0x1D9F) - 429)) ^ v1))
                            - 8))();
}

uint64_t sub_1002B9BA4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (15690 * (a2 > a3))))
                            - ((v3 - 889754757) & 0x350879FF)
                            + 453))();
}

uint64_t sub_1002B9BE8(uint64_t a1, int a2)
{
  return sub_1002B9A5C(a1, a2);
}

uint64_t sub_1002B9C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * ((8175
                                          * (*(_DWORD *)(v7 + 4040) != (3 * (v6 ^ 0x7C) + 93))) ^ v6))
                            - ((a6 + v6 - 167) ^ 0x853D101BLL)))();
}

void sub_1002B9C94()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002B9CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1736) - v4 + 31) = v6 >> (v3 & ~(_BYTE)v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * ((13505 * (v4 + 1 == ((v5 - 647649283) & 0x269A58BB ^ 0x1099))) ^ v5))
                            - 12))();
}

uint64_t sub_1002B9D34(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((124 * (v1 != (((a1 ^ 0x7C) - 197) ^ 0x1020))) ^ a1))
                            - 12))();
}

uint64_t sub_1002B9D68@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 ^ (13228 * (v2 < *(_DWORD *)(v4 + 3996))))) - (v3 ^ 0x100C)))();
}

uint64_t sub_1002B9D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B9CB0(a1, a2, a3);
}

uint64_t sub_1002B9DE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 936) - v2 + 31) = a2 >> v4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (v3 ^ (117 * (v2 != 31))))
                                          - (((v3 + 2460) - 4944) ^ (v3 - 2480))))(1273673220);
}

uint64_t sub_1002B9E44()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 ^ 0x1E25)) ^ v1)) - 8))();
}

uint64_t sub_1002B9E74@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (179 * (a2 < *(_DWORD *)(v3 + 3992)))))
                            - (v2 + 2480)
                            + 4638))();
}

uint64_t sub_1002B9EAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1002B9DE0(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002B9EF8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 928)
           + ((v4 + 2460) ^ 0x1BE2)
           + v2
           + ((((v4 + 701769161) & 0xD62BD97B) - 4460) ^ (2 * v2))) = a1 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v4 ^ (3513 * (v2 == 31)))) - 4))();
}

uint64_t sub_1002B9F7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * (((2 * (v4 == 32)) | (32 * (v4 == 32))) ^ a4))
                            - (a4 ^ 0x9E4u)
                            + 4634))();
}

uint64_t sub_1002B9FB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2 + 8 * (a4 ^ (16045 * (v4 < *(_DWORD *)(v5 + 3988)))))
                                         - (a4 - 2460)
                                         + 4634))(0);
}

uint64_t sub_1002B9FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9EF8(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002BA01C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 920) - v4 + 31) = a3 >> v5;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a1 + 8 * ((((v3 - 267) ^ 0x197E) * (v4 == 31)) ^ v3))
                                                  - 12))(32, *(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002BA080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * (((v5 == 32) * ((674 * (a5 ^ 0x1161)) ^ 0x2D9E)) ^ a5))
                            - 12))();
}

uint64_t sub_1002BA0B8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ 0xB3E ^ (a2 >= *(_DWORD *)(v3 + 8272))))
                            - ((v2 ^ 0xB3Eu)
                             + 2282)
                            - ((((v2 ^ 0xB3E) - 4425) | 0x114Au) ^ 0xFFFFFFFFFFFFF4D3)))();
}

uint64_t sub_1002BA104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002BA01C(a1, a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002BA13C(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 952) - v5 + 31) = a4 >> a1;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6
                                                     + 8
                                                     * ((1703 * (v5 + 1 == ((v4 - 2475) ^ 0x1098))) ^ v4))
                                         - 12))((a1 + 8));
}

uint64_t sub_1002BA1A0(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((a1 == 32) * (v1 + 9559)) ^ v1)) - 8))();
}

uint64_t sub_1002BA1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                               + 8
                                                                               * (((v4 - 6430)
                                                                                 * (v3 < *(_DWORD *)(v6 + 9152))) ^ v4))
                                                                   - 8))(0, a2, a3, 0);
}

uint64_t sub_1002BA1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002BA13C(0, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002BA230(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v8 = (v5 + 69013055) | 0x81200000;
  *(_BYTE *)(*(_QWORD *)(v7 + 944) - v6 + 31) = v4 >> v3;
  v9 = (uint64_t (*)(uint64_t))(2235371539 - v8 + *(_QWORD *)(a2 + 8 * ((7452 * (v6 != 31)) ^ v5)) - 8);
  *(_DWORD *)(v7 + 9464) = 994009513;
  *(_QWORD *)(v7 + 9416) = v8;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  v10 = *(_QWORD *)(v7 + 1744);
  *(_QWORD *)(v7 + 9608) = v10;
  *(_DWORD *)(v7 + 7944) = a3;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v9(v10);
}

uint64_t sub_1002BA358()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * ((v1 - 3808) ^ 0x12B4 ^ (251 * (v1 ^ 0x10A9)))) ^ v1))
                            - 4))();
}

uint64_t sub_1002BA39C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((19 * (((a3 < a2) ^ (v3 + 14)) & 1)) ^ v3))
                            - ((v3 - 4203) | 0x198u)
                            + 468))();
}

uint64_t sub_1002BA3E4(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002BA230(a1, a2, a3);
}

uint64_t sub_1002BA42C()
{
  int v0;
  uint64_t v1;
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((((v0 + 617566804) & 0xDB30A6AF ^ 0x6A6) * ((v2 & 0xFC) == 8)) ^ v0))
                            - 12))();
}

uint64_t sub_1002BA46C()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((((*(_DWORD *)(v1 + 4040) & 0xFE) == (v0 + 103))
                                * (3691 * ((v0 + 1606) ^ 0x13E5) - 5336)) ^ (v0 + 1606))))();
}

uint64_t sub_1002BA4B0@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * (int)(((((*(_DWORD *)(v2 + 4040) == 8) ^ (a2 - 82)) & 1)
                                     * ((a1 + a2 + 442 - 1625) ^ 0x853D100F)) ^ (a2 + 442))))();
}

uint64_t sub_1002BA4FC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((11360
                                          * (((*(_DWORD *)(v1 + 8548) & 0x20 | (v0 - 1359960869) & 0x510F4FDF) ^ 0xF70)
                                           + (*(_DWORD *)(v1 + 8548) & 0x20) == 617
                                                                              * ((v0 - 1359960869) & 0x510F4FDF ^ 0xF5B)
                                                                              - 6755)) ^ (v0 - 1359960869) & 0x510F4FDF))
                            - 4))();
}

uint64_t sub_1002BA580@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((29 * (a1 < ((v1 ^ 0x6B) + 56))) ^ v1))
                            - ((5361 * (v1 ^ 0x6A7u)) ^ 0x29EALL)))();
}

uint64_t sub_1002BA5CC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                     + 8 * ((966 * (v1 == ((v0 + 21) ^ 0xF2))) ^ v0))
                                         + 2235371539
                                         - ((v0 - 1925377003) & 0xF7FFD21F)
                                         - 4))((v0 - 1925377003) ^ 0x8D3D3CE4);
}

void sub_1002BA67C()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002BA698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  *(_BYTE *)(*(_QWORD *)(v9 + 1776) - v7 + (v6 ^ 0x1097u) + 2205 - 2449) = v8 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v6 | (19 * (v7 == 31)))) - 4))();
}

uint64_t sub_1002BA6FC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((7263 * (v5 == 32)) ^ a1))
                            - ((4 * ((a1 + 1242527410) & 0xB5F088FB ^ 0x4A0)) ^ 0x118CLL)))();
}

uint64_t sub_1002BA748@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((((a2 + 318911236) & 0xECFDDDBE ^ 0x1056)
                                               * (v2 >= *(_DWORD *)(v3 + 3996))) ^ a2))
                            - 8))();
}

uint64_t sub_1002BA790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002BA698(a1, a2, a3, a4, a5);
}

uint64_t sub_1002BA7CC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;

  *(_BYTE *)(*(_QWORD *)(v5 + 1136) - a2 + 31) = v4 >> v2;
  v7 = a2 + 1 != (v3 + 171) - 2448;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v7 | (8 * v7)) ^ v3)) - ((v3 + v6) & 0x821D5D97 ^ 0x49CLL)))();
}

uint64_t sub_1002BA838(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8
                                        * (int)(((v5 != (((a4 - 2479) | 0x904) ^ 0x925))
                                               * ((a4 + 792797775) & 0xD0BEDDFF ^ 0x9B0)) | a4))
                            - 12))();
}

uint64_t sub_1002BA888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v6 ^ ((*(_DWORD *)(v7 + 3992) > v5) * v8))) - (v6 ^ 0xFAu) + 2297))();
}

uint64_t sub_1002BA8BC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return sub_1002BA7CC(a1, a2);
}

uint64_t sub_1002BA8F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(*(_QWORD *)(v8 + 1128) - v6 + 31) = a3 >> v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a5 + 8 * (v5 ^ ((v6 == 31) * v9))) - 8))(2114437814);
}

uint64_t sub_1002BA958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((8664 * (v6 == 32)) ^ v5)) - (v5 + 1137) + 2297))();
}

uint64_t sub_1002BA980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a5
                                                                       + 8
                                                                       * (((v6 + 10176) * (v5 < *(_DWORD *)(v7 + 3988))) ^ v6))
                                                           - 12))(a1, a2, 0);
}

uint64_t sub_1002BA9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002BA8F4(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3), a4, a5);
}

uint64_t sub_1002BA9E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;

  *(_BYTE *)(*(_QWORD *)(v8 + 1120) - v6 + 31) = a1 >> v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((5112 * (v6 + 1 != ((v5 - 256) ^ v9 ^ v10))) ^ v5)) - 8))();
}

uint64_t sub_1002BAA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v5 == 32) * (v6 + v7)) ^ v6)) - 4))();
}

uint64_t sub_1002BAA64@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v3 ^ ((a2 < *(_DWORD *)(v4 + 8272)) * v5))) - v2 + 886))(0);
}

uint64_t sub_1002BAA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1002BA9E4(*(unsigned int *)(v5 - 0x62AA055D109F20F3), a2, a3, a4, a5);
}

uint64_t sub_1002BAAD0@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 1280) - v2 + 31) = v4 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((2 * a2) ^ v6) * (v2 == 31)) ^ a2)) - 8))();
}

uint64_t sub_1002BAB24(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8
                                        * (a7 & ~((v7 - 120) ^ (a2 == 32)) | (4 * (a7 & ~((v7 - 120) ^ (a2 == 32)))) | v7))
                            - 8))();
}

uint64_t sub_1002BAB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((((v9 + 256) ^ a8) * (v8 < *(_DWORD *)(v10 + 9152))) ^ (v9 + 5)))
                            - 8))();
}

uint64_t sub_1002BAB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return sub_1002BAAD0(a5, v5 ^ 0x105u);
}

uint64_t sub_1002BABBC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8 * (v0 ^ (14484 * (*(_DWORD *)(v1 + 4040) == 10))))
                            - ((((v0 - 177356600) & 0xA922FEBu) - 2059599219) ^ 0x853D101FLL)))();
}

void sub_1002BAC38()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002BAC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1840) - v5 + 31) = v6 >> v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3
                                                      + 8
                                                      * ((54 * (v5 + 1 == (((v4 ^ 0x1AA2u) + 1814) ^ 0xDAALL))) ^ v4))
                                          - 8))(3711164416);
}

uint64_t sub_1002BACB8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((9430 * (v2 == ((2 * a2) ^ 0x1694) - 3424)) ^ a2))
                            - 4))();
}

uint64_t sub_1002BACF4@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)(((2
                                                * (v4 & ~((a2 - 264891810) ^ (a2 + 10) ^ (v2 < *(_DWORD *)(v3 + 3996))))) & 0xFFFFFFF7 | (8 * ((((a2 + 94) ^ (a2 + 10)) ^ ~(v2 < *(_DWORD *)(v3 + 3996))) & 1))) ^ a2))
                            - 4))();
}

uint64_t sub_1002BAD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002BAC54(a1, a2, a3);
}

uint64_t sub_1002BAD80(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1160) - v3 + 31) = a1 >> v4;
  return (*(uint64_t (**)(void))(a3 + 8 * (v5 ^ ((4 * (v3 == 31)) | (32 * (v3 == 31))))))();
}

uint64_t sub_1002BADE4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (((v0 + 912) | 0x143) + 1570)) ^ v0)))();
}

uint64_t sub_1002BAE10@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD))(a1 + 8 * (((v2 ^ 0x6B0) * (*(_DWORD *)(v3 + 3992) > a2)) ^ v2)))(0);
}

uint64_t sub_1002BAE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002BAD80(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002BAE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)(*(_QWORD *)(v9 + 1152) - v5 + ((v6 + 1215) | 0x200u) - 4611) = a5 >> (v8 & (v6 - 100));
  return (*(uint64_t (**)(void))(v7 + 8 * (v6 ^ (5461 * (v5 == 31)))))();
}

uint64_t sub_1002BAED8()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (int)(((v1 == 32) | (8 * (v1 == 32))) ^ v0))
                            - (v0 ^ 0x122ALL)))();
}

uint64_t sub_1002BAF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * (int)(((((v5 + 1947438545) & 0x8BEC6B6F)
                                                                                                 - 2484)
                                                                                                * (*(_DWORD *)(v7 + 3988) > v4)) ^ v5))
                                                                             - 8))(a1, a2, a3, a4, 0);
}

uint64_t sub_1002BAF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002BAE70(a1, a2 + 4, a3, a4, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002BAF7C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1144) - v5 + 31) = a3 >> v4;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1
                                                     + 8
                                                     * (((((v3 - 7462) | 0x224) + ((v3 - 1301) ^ 0x2086)) * (v5 == 31)) ^ v3)))(32, 2983838691);
}

uint64_t sub_1002BAFE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (((v4 == 32) * (((a4 - 1985329699) & 0x7655BF37) + 8132)) ^ a4))
                            - 8))();
}

uint64_t sub_1002BB024@<X0>(uint64_t a1@<X0>, int a2@<W3>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (a2 ^ ((2 * (a3 < *(_DWORD *)(v3 + 8272))) | (4 * (a3 < *(_DWORD *)(v3 + 8272))))))
                            - 3867 * (a2 ^ 0x1923u)
                            + 7726))();
}

uint64_t sub_1002BB068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002BAF7C(a1, a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002BB09C(int a1, unint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1176) + ((101 * (v3 ^ 0x1B15u)) ^ 0x1294) - v4) = a2 >> a1;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v3 ^ ((2 * (v4 != 31)) | (4 * (v4 != 31))))) - 8))((v3 - 6150 + a1 - 812));
}

uint64_t sub_1002BB110(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((4593 * (a1 == v1 - 788)) ^ v1)))();
}

uint64_t sub_1002BB13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a3
                                                   + 8
                                                   * (((((v4 + 5588) | 0x232) ^ 0xCB5) * (v3 < *(_DWORD *)(v5 + 9152))) ^ v4)))(0, 0);
}

uint64_t sub_1002BB178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002BB09C(0, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002BB1BC(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v4 + 3936030) | 0x85010015;
  *(_BYTE *)(*(_QWORD *)(v6 + 1168) - v5 + 31) = v3 >> (v2 & (((v4 + 30) | 0x15) - 24));
  v7 = *(uint64_t (**)(void))(a1 + 8 * (v4 ^ (496 * (v5 == 31))));
  *(_DWORD *)(v6 + 9464) = 994009477;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1848);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002BB2C8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((1790 * (v0 == 32)) ^ v1))
                            - (v1 ^ 0x126Fu)
                            + 224))();
}

uint64_t sub_1002BB2FC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (3477 * (a2 > a3)))) - ((v3 - 4519) ^ 0xE0)))();
}

uint64_t sub_1002BB334(uint64_t a1, int a2)
{
  return sub_1002BB1BC(a1, a2);
}

uint64_t sub_1002BB364()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 9744)
                                            + 8
                                            * (((*(_DWORD *)(v1 + 4040) != ((v0 ^ 0xD9) - 9))
                                              * (767 * (v0 ^ 0x7CC) - 1511)) ^ v0)))(326450068);
}

void sub_1002BB3D0()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002BB3EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1768) - v6 + 31) = a1 >> v4;
  return (*(uint64_t (**)(void))(a4 + 8 * ((((((v5 - 1905) | 0x596) + 3439) ^ (v5 + 976)) * (v6 == 31)) ^ v5)))();
}

uint64_t sub_1002BB444(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744) + 8 * (((v2 == 32) * (a2 + 6926)) ^ a2)))();
}

uint64_t sub_1002BB46C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(_QWORD))(a4 + 8 * (((v5 ^ 0xDB1) * (*(_DWORD *)(v6 + 3996) > v4)) ^ a2)))(0);
}

uint64_t sub_1002BB498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002BB3EC(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a2, a3, a4);
}

uint64_t sub_1002BB4DC@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1096) - v2 + 995 * (v4 ^ 0x501u) - 2954) = a2 >> v3;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(a1 + 8 * (v4 | (4 * (v2 == 31))))
                                                  - 37 * (v4 ^ 0x581u)
                                                  + 4835))(*(_QWORD *)(v5 + 3304), 1584489731);
}

uint64_t sub_1002BB554()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((1980 * (v0 == 32)) ^ v1))
                            - ((v1 + 622316042) & 0xDAE82F4E ^ 0x50ELL)))();
}

uint64_t sub_1002BB598(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((((v3 - 1183540187) & 0x468B5D33) + 7891) * (v2 < *(_DWORD *)(v4 + 3992))) ^ v3))
                            - 12))();
}

uint64_t sub_1002BB5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002BB4DC(a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002BB60C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1088) - v2 + ((v3 + 35) | 0x104Cu) - 4032 - 784) = a2 >> v4;
  return (*(uint64_t (**)(void))(v5 + 8 * (v3 ^ ((4 * (v2 != 31)) | (16 * (v2 != 31))))))();
}

uint64_t sub_1002BB670(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744) + 8 * ((13363 * (v3 == ((a3 - 4207) ^ 0x2A0))) ^ a3)))();
}

uint64_t sub_1002BB6A0(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v4
                                                    + 8
                                                    * (((5 * (a3 ^ 0x126F) - 617) * (v3 < *(_DWORD *)(v5 + 3988))) ^ a3)))(a1, 0);
}

uint64_t sub_1002BB6D4(uint64_t a1)
{
  return sub_1002BB60C(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002BB700@<X0>(unint64_t a1@<X4>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1080) - a2 + 31) = a1 >> v3;
  return (*(uint64_t (**)(_QWORD, uint64_t))(v4 + 8 * ((((v2 ^ 0x1AF) + 847) * (a2 == 31)) ^ v2)))(*(_QWORD *)(v5 + 7872), 3798470087);
}

uint64_t sub_1002BB774()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 - 175) ^ 0x13F5)) ^ v1))
                            - 4))();
}

uint64_t sub_1002BB7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * (((v5 ^ 0x2669)
                                                                                           * (*(_DWORD *)(v8 + 8272) > v4)) ^ v7))
                                                                             - 4))(a1, a2, a3, a4, 0);
}

uint64_t sub_1002BB7D0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return sub_1002BB700(*(unsigned int *)(a1 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002BB800(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1112) - v5 + 31) = a2 >> v6;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((481
                                * (((v4 + 3322) ^ 0x11F9) + v5 == (v4 + 7209) - 8455)) ^ v4)))();
}

uint64_t sub_1002BB868(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744)
                              + 8 * (((v3 == 32) * (((a3 - 3430) | 0x6C) + ((2 * a3) ^ 0x3212) - 3768)) ^ a3)))();
}

uint64_t sub_1002BB8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2
                                                    + 8
                                                    * ((26
                                                      * ((((v3 < *(_DWORD *)(v4 + 9152)) ^ a3) ^ (a3 + 1)) & 1)) ^ a3)))(a1, 0);
}

uint64_t sub_1002BB8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002BB800(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a3, a4);
}

uint64_t sub_1002BB928(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  *(_BYTE *)(*(_QWORD *)(v7 + 1104) - v5 + 31) = v3 >> v2;
  *(_QWORD *)(v7 + 9416) = (v4 + 2883327) | 0x85111004;
  v8 = *(uint64_t (**)(void))(v6 + 8 * ((1035 * (v5 + 1 != 3 * (v4 ^ 0xA19u) - 8455)) ^ v4));
  *(_DWORD *)(v7 + 9464) = 994009489;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  *(_QWORD *)(v7 + 9608) = *(_QWORD *)(v7 + 1776);
  *(_DWORD *)(v7 + 7944) = a2;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v8();
}

uint64_t sub_1002BBA3C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * ((v1 - 1672654768) & 0x63B2AF8B ^ 0x2A4E)) ^ v1))
                            - ((v1 + 644101805) & 0xD99BA93F ^ 0x110)))();
}

uint64_t sub_1002BBAA0@<X0>(unint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((4 * (a3 >= a2)) | (32 * (a3 >= a2))) ^ v3))
                            - ((v3 - 139985167) & 0x857E11F ^ a1)))();
}

uint64_t sub_1002BBAE4(uint64_t a1, int a2)
{
  return sub_1002BB928(a1, a2);
}

void sub_1002BBB20()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002BBB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a5 + 8 * (((v5 - 1638) | 0x110) ^ 0x311E ^ (v5 + 3417))) - 4))(*(unsigned int *)(v6 + 8548));
}

uint64_t sub_1002BBBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v8 = *(_QWORD *)(v6 + 3832);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 4320);
  *(_QWORD *)(v6 + 9496) = v8;
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 1572) = a6;
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  LODWORD(v8) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9736) = v8;
  *(_DWORD *)(v6 + 9432) = v8;
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  v9 = *(_DWORD *)(v6 + 8312);
  *(_DWORD *)(v6 + 9272) = *(_DWORD *)(v6 + 9656);
  *(_QWORD *)(v6 + 9680) = *(_QWORD *)(v6 + 9504);
  if ((v7 ^ 0x853D1004) + 8378 + v9 - 8395)
    v10 = 137;
  else
    v10 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v6 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v6 + 9640) + v10) >> ((-45 * (v7 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v6 + 9640) + v10)) == 30)) ^ (v7 + 2059604150))))();
}

uint64_t sub_1002BBCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  int v15;
  int v16;

  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12
                                                            + 8
                                                            * (((v7 + (a6 ^ (v8 + 369)) + 1152) * (v6 != 81)) ^ a6));
  *(_QWORD *)(v9 + 7664) = *(_QWORD *)(v9 + 6904);
  *(_QWORD *)(v9 + 7680) = *(_QWORD *)(v9 + 6872);
  *(_QWORD *)(v9 + 7656) = *(_QWORD *)(v9 + 6864);
  *(_QWORD *)(v9 + 7688) = *(_QWORD *)(v9 + 6888);
  *(_QWORD *)(v9 + 7696) = *(_QWORD *)(v9 + 6880);
  *(_QWORD *)(v9 + 7704) = *(_QWORD *)(v9 + 6896);
  *(_QWORD *)(v9 + 9568) = *(_QWORD *)(v9 + 8944);
  *(_QWORD *)(v9 + 8888) = *(_QWORD *)(v9 + 8576);
  *(_QWORD *)(v9 + 9200) = *(_QWORD *)(v9 + 8952);
  *(_QWORD *)(v9 + 8880) = *(_QWORD *)(v9 + 8936);
  v14 = *(_QWORD *)(v9 + 3128);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 3232);
  *(_QWORD *)(v9 + 9496) = v14;
  *(_DWORD *)(v9 + 8032) = *(_DWORD *)(v9 + 8080);
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 7768);
  *(_DWORD *)(v9 + 7712) = *(_DWORD *)(v9 + 6928);
  *(_DWORD *)(v9 + 7936) = v10;
  v15 = *(_DWORD *)(v9 + 7904);
  *(_DWORD *)(v9 + 9448) = *(_DWORD *)(v9 + 9116);
  *(_DWORD *)(v9 + 9656) = *(_DWORD *)(v9 + 9272);
  *(_DWORD *)(v9 + 8312) = v15;
  *(_DWORD *)(v9 + 6944) = *(_DWORD *)(v9 + 7040);
  *(_DWORD *)(v9 + 7648) = *(_DWORD *)(v9 + 6856);
  *(_DWORD *)(v9 + 7992) = *(_DWORD *)(v9 + 8064);
  *(_DWORD *)(v9 + 9384) = *(_DWORD *)(v9 + 8832);
  *(_DWORD *)(v9 + 8748) = a4;
  *(_DWORD *)(v9 + 8964) = *(_DWORD *)(v9 + 9152);
  *(_DWORD *)(v9 + 6936) = *(_DWORD *)(v9 + 6952);
  *(_DWORD *)(v9 + 9520) = a5;
  *(_DWORD *)(v9 + 7552) = *(_DWORD *)(v9 + 6984);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 9424) = a3;
  *(_DWORD *)(v9 + 8760) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 6968) = *(_DWORD *)(v9 + 7000);
  *(_DWORD *)(v9 + 7952) = v11;
  *(_DWORD *)(v9 + 7888) = *(_DWORD *)(v9 + 7912);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 9440) = *(_DWORD *)(v9 + 9104);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8872) = *(_DWORD *)(v9 + 8912);
  *(_DWORD *)(v9 + 7640) = *(_DWORD *)(v9 + 6912);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 6992) = *(_DWORD *)(v9 + 7008);
  *(_DWORD *)(v9 + 7672) = *(_DWORD *)(v9 + 6920);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8020) = *(_DWORD *)(v9 + 8040);
  *(_DWORD *)(v9 + 8024) = *(_DWORD *)(v9 + 8116);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 9632) = *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 9160) = *(_DWORD *)(v9 + 8920);
  *(_DWORD *)(v9 + 8000) = *(_DWORD *)(v9 + 7152);
  v16 = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 8664) = v16;
  *(_DWORD *)(v9 + 7984) = *(_DWORD *)(v9 + 8272);
  *(_DWORD *)(v9 + 9736) = v16;
  *(_DWORD *)(v9 + 8008) = *(_DWORD *)(v9 + 8056);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 7592) = *(_DWORD *)(v9 + 7080);
  *(_DWORD *)(v9 + 9528) = *(_DWORD *)(v9 + 8188);
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8616) = *(_DWORD *)(v9 + 8904);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 7584) = *(_DWORD *)(v9 + 7088);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 7576) = *(_DWORD *)(v9 + 7072);
  *(_DWORD *)(v9 + 9408) = *(_DWORD *)(v9 + 8552);
  *(_DWORD *)(v9 + 8704) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 9096) = *(_DWORD *)(v9 + 8900);
  *(_DWORD *)(v9 + 9584) = *(_DWORD *)(v9 + 9184);
  *(_DWORD *)(v9 + 8984) = *(_DWORD *)(v9 + 8572);
  *(_DWORD *)(v9 + 8612) = *(_DWORD *)(v9 + 8932);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  *(_DWORD *)(v9 + 7632) = *(_DWORD *)(v9 + 9680);
  return v13(a1, a2, v14);
}

void sub_1002BBF3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(*(_QWORD *)(v0 + 8248) + 4240) = 0;
  *(_DWORD *)(v0 + 4292) = 89;
  *(_QWORD *)(v0 + 9416) = v1;
  *(_QWORD *)(v0 + 9456) = *(_QWORD *)(v0 + 7048);
  *(_QWORD *)(v0 + 9608) = *(_QWORD *)(v0 + 3800);
  *(_DWORD *)(v0 + 5344) = *(_DWORD *)(v0 + 8548);
  *(_DWORD *)(v0 + 9464) = 994009685;
  *(_DWORD *)(v0 + 5340) = *(_DWORD *)(v0 + 7616);
  *(_DWORD *)(v0 + 5348) = *(_DWORD *)(v0 + 6084);
  *(_DWORD *)(v0 + 5336) = *(_DWORD *)(v0 + 6080);
  *(_DWORD *)(v0 + 9664) = *(_DWORD *)(v0 + 6976);
  *(_DWORD *)(v0 + 9616) = *(_DWORD *)(v0 + 7096);
  *(_DWORD *)(v0 + 9600) = *(_DWORD *)(v0 + 7020);
  *(_DWORD *)(v0 + 9488) = *(_DWORD *)(v0 + 7064);
  *(_DWORD *)(v0 + 9472) = *(_DWORD *)(v0 + 7136);
  *(_DWORD *)(v0 + 5312) = *(_DWORD *)(v0 + 9680);
  JUMPOUT(0x1002A024CLL);
}

uint64_t sub_1002BBF94(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v13 = (v6 - 2059602589);
  v14 = (uint64_t (*)(void))(v8
                          + *(_QWORD *)(v12
                                      + 8
                                      * (((((v6 - 2127764127) | 0x4101002) ^ (v7 + 1239))
                                        * (*(_DWORD *)(v9 + 8280) == 91)) ^ v6))
                          - v13
                          - 4);
  *(_DWORD *)(v9 + 8440) = 91;
  *(_DWORD *)(v9 + 8280) = 92;
  *(_QWORD *)(v9 + 9416) = v13;
  *(_QWORD *)(v9 + 7664) = *(_QWORD *)(v9 + 6904);
  *(_QWORD *)(v9 + 7680) = *(_QWORD *)(v9 + 6872);
  *(_QWORD *)(v9 + 7656) = *(_QWORD *)(v9 + 6864);
  *(_QWORD *)(v9 + 7688) = *(_QWORD *)(v9 + 6888);
  *(_QWORD *)(v9 + 7696) = *(_QWORD *)(v9 + 6880);
  *(_QWORD *)(v9 + 7704) = *(_QWORD *)(v9 + 6896);
  *(_QWORD *)(v9 + 8408) = *(_QWORD *)(v9 + 8432);
  *(_QWORD *)(v9 + 8400) = *(_QWORD *)(v9 + 8416);
  *(_QWORD *)(v9 + 8392) = *(_QWORD *)(v9 + 8536);
  *(_QWORD *)(v9 + 8384) = *(_QWORD *)(v9 + 8488);
  *(_QWORD *)(v9 + 8376) = *(_QWORD *)(v9 + 8472);
  *(_DWORD *)(v9 + 8032) = *(_DWORD *)(v9 + 8080);
  *(_DWORD *)(v9 + 7712) = *(_DWORD *)(v9 + 6928);
  *(_DWORD *)(v9 + 9128) = *(_DWORD *)(v9 + 8176);
  *(_DWORD *)(v9 + 7936) = v10;
  *(_DWORD *)(v9 + 8312) = *(_DWORD *)(v9 + 7904);
  *(_DWORD *)(v9 + 6944) = *(_DWORD *)(v9 + 7040);
  *(_DWORD *)(v9 + 7648) = *(_DWORD *)(v9 + 6856);
  *(_DWORD *)(v9 + 7992) = *(_DWORD *)(v9 + 8064);
  *(_DWORD *)(v9 + 6936) = *(_DWORD *)(v9 + 6952);
  *(_DWORD *)(v9 + 8368) = a6;
  *(_DWORD *)(v9 + 7552) = *(_DWORD *)(v9 + 6984);
  *(_DWORD *)(v9 + 8504) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 9480) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 6968) = *(_DWORD *)(v9 + 7000);
  *(_DWORD *)(v9 + 7952) = v11;
  *(_DWORD *)(v9 + 7888) = *(_DWORD *)(v9 + 7912);
  *(_DWORD *)(v9 + 8520) = *(_DWORD *)(v9 + 8464);
  *(_DWORD *)(v9 + 8356) = *(_DWORD *)(v9 + 8532);
  *(_DWORD *)(v9 + 8360) = *(_DWORD *)(v9 + 8424);
  *(_DWORD *)(v9 + 8512) = *(_DWORD *)(v9 + 8480);
  *(_DWORD *)(v9 + 7640) = *(_DWORD *)(v9 + 6912);
  *(_DWORD *)(v9 + 6992) = *(_DWORD *)(v9 + 7008);
  *(_DWORD *)(v9 + 7672) = *(_DWORD *)(v9 + 6920);
  *(_DWORD *)(v9 + 8020) = *(_DWORD *)(v9 + 8040);
  *(_DWORD *)(v9 + 8024) = *(_DWORD *)(v9 + 8116);
  *(_DWORD *)(v9 + 8000) = *(_DWORD *)(v9 + 7152);
  *(_DWORD *)(v9 + 7984) = *(_DWORD *)(v9 + 8272);
  *(_DWORD *)(v9 + 8008) = *(_DWORD *)(v9 + 8056);
  *(_DWORD *)(v9 + 7592) = *(_DWORD *)(v9 + 7080);
  *(_DWORD *)(v9 + 8496) = a5;
  *(_DWORD *)(v9 + 7584) = *(_DWORD *)(v9 + 7088);
  *(_DWORD *)(v9 + 7576) = *(_DWORD *)(v9 + 7072);
  *(_DWORD *)(v9 + 8352) = a3;
  *(_DWORD *)(v9 + 7632) = *(_DWORD *)(v9 + 9680);
  return v14();
}

void sub_1002BC16C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 9464) = 994009695;
  *(_DWORD *)(*(_QWORD *)(v1 + 9232) + 212) = 0;
  *(_DWORD *)(v1 + 4292) = 91;
  *(_QWORD *)(v1 + 9416) = a1;
  *(_QWORD *)(v1 + 9456) = *(_QWORD *)(v1 + 7048);
  *(_QWORD *)(v1 + 9608) = *(_QWORD *)(v1 + 3808);
  *(_DWORD *)(v1 + 5344) = *(_DWORD *)(v1 + 6072);
  *(_DWORD *)(v1 + 2444) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 7384) = 1;
  *(_DWORD *)(v1 + 5340) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 5348) = *(_DWORD *)(v1 + 6084);
  *(_DWORD *)(v1 + 5336) = *(_DWORD *)(v1 + 6080);
  *(_DWORD *)(v1 + 9664) = *(_DWORD *)(v1 + 6976);
  *(_DWORD *)(v1 + 9616) = *(_DWORD *)(v1 + 7096);
  *(_DWORD *)(v1 + 9600) = *(_DWORD *)(v1 + 7020);
  *(_DWORD *)(v1 + 9488) = *(_DWORD *)(v1 + 7064);
  *(_DWORD *)(v1 + 9472) = *(_DWORD *)(v1 + 7136);
  JUMPOUT(0x1002C8A58);
}

uint64_t sub_1002BC1D8@<X0>(int a1@<W2>, uint64_t a2@<X3>, char a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a2 + 106) = a3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * ((5223
                                                        * ((((((((v3 - 124) | 0x94) - 2059585789) & 0xFFFFD07F)
                                                            - a1
                                                            - 1132) ^ (v4 + ((v3 - 124) | 0x94u) - 1765827567 < 8)) & 1) == 0)) ^ ((v3 - 124) | 0x94)))
                                          - 4))(7223);
}

uint64_t sub_1002BC20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v9 = *(uint64_t (**)(void))(v8
                           + 8
                           * (int)((((((v5 - 29312) & 0x853D79D7) + 2059600598) ^ (v5 - 328479266) & 0x13943D7F)
                                  * (*(_DWORD *)(v7 + 9576) & 1)) ^ v5));
  *(_DWORD *)(v7 + 9592) = 40;
  *(_QWORD *)(v7 + 9600) = *(_QWORD *)(v7 + 5992);
  *(_QWORD *)(v7 + 9608) = *(_QWORD *)(v7 + 4416);
  *(_DWORD *)(v7 + 9616) = v6;
  *(_DWORD *)(v7 + 9664) = a5;
  *(_DWORD *)(v7 + 9248) = a5;
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 7600) = v6;
  return v9();
}

uint64_t sub_1002BC2DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v7 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                               + 8
                                                                                               * (int)(((((a4 + 65034850) & 0xFC1F9BF6) - 320) * (*(_DWORD *)(v5 + 9592) & 1)) ^ a4))
                                                                                   - 8);
  *(_DWORD *)(v5 + 9592) = 42;
  *(_QWORD *)(v5 + 9600) = *(_QWORD *)(v5 + 6112);
  *(_QWORD *)(v5 + 9608) = *(_QWORD *)(v5 + 5992);
  *(_DWORD *)(v5 + 9616) = v4;
  v8 = *(unsigned int *)(v5 + 9120);
  *(_DWORD *)(v5 + 9664) = *(_DWORD *)(v5 + 6380);
  *(_DWORD *)(v5 + 9248) = v4;
  *(_DWORD *)(v5 + 9528) = *(_DWORD *)(v5 + 8188);
  return v7(v4, a1, 0, a2, a3, v8);
}

uint64_t sub_1002BC36C@<X0>(uint64_t a1@<X3>, char a2@<W4>, char a3@<W5>, char a4@<W6>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1256) + (31 - v5)) = v7 >> (v6 & ((a5 + a2) ^ a3 ^ ((a5 + a2) | 0x49) ^ a4));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((123
                                          * (v5 + 1 < (unint64_t)(((v6 + 8) & 0x20) + ((55 - (_BYTE)v6) & 0x20u)))) ^ a5))
                            - 4))();
}

uint64_t sub_1002BC3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((v9 == ((v8 + v10) & v11) + v12) * a8) ^ v8)) - 4))();
}

uint64_t sub_1002BC404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v5 ^ (49 * (*(_DWORD *)(v6 + 9152) > v4)))) - ((v5 + v7) & v8) + v9))();
}

uint64_t sub_1002BC43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  int v7;

  return sub_1002BC36C(a4, a5, a6, a7, v7 + 7853);
}

uint64_t sub_1002BC470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4
                                                     + 8 * ((9076 * (((2 * v4) ^ 0xDC6) == 276)) ^ (2 * v4) ^ 0x9A8))
                                         - 4))(*(unsigned int *)(v5 + 8548));
}

uint64_t sub_1002BC4F4()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((11 * ((v1 & 0xFE) == (((v0 - 8707) ^ 0xA4) & 0xF7))) ^ v0))
                            - ((v0 - 905) ^ 0x1EFELL)))();
}

uint64_t sub_1002BC540()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 9280) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v0 - 6890) | 0x24) - 568) * (v2 != 36)) ^ v0)) - 4))();
}

uint64_t sub_1002BC57C@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t (*v9)(void);

  *(_QWORD *)(v4 + 9416) = (a2 - 2059596829);
  *(_QWORD *)(v4 + 8408) = *(_QWORD *)(v4 + 8432);
  *(_QWORD *)(v4 + 8400) = *(_QWORD *)(v4 + 8416);
  *(_QWORD *)(v4 + 8392) = *(_QWORD *)(v4 + 8536);
  *(_QWORD *)(v4 + 8384) = *(_QWORD *)(v4 + 8488);
  *(_QWORD *)(v4 + 8376) = *(_QWORD *)(v4 + 8472);
  *(_QWORD *)(v4 + 8944) = *(_QWORD *)(v4 + 9568);
  *(_QWORD *)(v4 + 8576) = *(_QWORD *)(v4 + 8888);
  *(_QWORD *)(v4 + 8952) = *(_QWORD *)(v4 + 9200);
  *(_QWORD *)(v4 + 8936) = *(_QWORD *)(v4 + 8880);
  *(_DWORD *)(v4 + 8332) = v5;
  *(_DWORD *)(v4 + 9116) = v3;
  *(_DWORD *)(v4 + 9272) = *(_DWORD *)(v4 + 9656);
  *(_DWORD *)(v4 + 8832) = *(_DWORD *)(v4 + 9384);
  *(_DWORD *)(v4 + 9152) = *(_DWORD *)(v4 + 8964);
  *(_DWORD *)(v4 + 8368) = *(_DWORD *)(v4 + 9520);
  *(_DWORD *)(v4 + 8608) = *(_DWORD *)(v4 + 9424);
  *(_DWORD *)(v4 + 8504) = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 8520) = *(_DWORD *)(v4 + 8464);
  *(_DWORD *)(v4 + 8356) = *(_DWORD *)(v4 + 8532);
  *(_DWORD *)(v4 + 8360) = *(_DWORD *)(v4 + 8424);
  *(_DWORD *)(v4 + 9104) = *(_DWORD *)(v4 + 9440);
  *(_DWORD *)(v4 + 8456) = *(_DWORD *)(v4 + 7424);
  *(_DWORD *)(v4 + 8912) = *(_DWORD *)(v4 + 8872);
  *(_DWORD *)(v4 + 8512) = *(_DWORD *)(v4 + 8480);
  *(_DWORD *)(v4 + 9072) = *(_DWORD *)(v4 + 9632);
  *(_DWORD *)(v4 + 8920) = *(_DWORD *)(v4 + 9160);
  *(_DWORD *)(v4 + 8496) = *(_DWORD *)(v4 + 9528);
  *(_DWORD *)(v4 + 9264) = *(_DWORD *)(v4 + 9624);
  *(_DWORD *)(v4 + 8904) = *(_DWORD *)(v4 + 8616);
  *(_DWORD *)(v4 + 8552) = *(_DWORD *)(v4 + 9408);
  *(_DWORD *)(v4 + 8900) = *(_DWORD *)(v4 + 9096);
  *(_DWORD *)(v4 + 8572) = *(_DWORD *)(v4 + 8984);
  *(_DWORD *)(v4 + 8352) = a1;
  *(_DWORD *)(v4 + 8932) = *(_DWORD *)(v4 + 8612);
  v6 = *(_DWORD *)(v4 + 9312);
  if (v2)
    v7 = *(_DWORD *)(v4 + 9312);
  else
    v7 = *(_DWORD *)(v4 + 9328);
  if (v2)
    v6 = *(_DWORD *)(v4 + 9328);
  *(_DWORD *)(v4 + 9128) = v6;
  if (v2)
    v8 = 61;
  else
    v8 = 62;
  *(_DWORD *)(v4 + 8440) = v8;
  *(_DWORD *)(v4 + 8328) = 37;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                     + 8
                                     * (int)((12803
                                            * (v7 != ((*(_QWORD *)(v4 + 9416) - 1400777838) & 0xCE413D5F)
                                                   - 8457)) ^ (*(_QWORD *)(v4 + 9416) + 2059600627)))
                         - 4);
  *(_DWORD *)(v4 + 9688) = 1;
  *(_DWORD *)(v4 + 9736) = 1;
  return v9();
}

uint64_t sub_1002BC6D8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  *(_QWORD *)(v1 + 9280) = v4;
  v6 = *(uint64_t (**)(uint64_t))(v3
                                         + 8
                                         * ((39
                                           * (((v2 == (((v0 | 8) + 71) ^ 0xE9)) ^ ((v0 | 8) - 1)) & 1)) | v0 | 0x108));
  *(_DWORD *)(v1 + 8332) = v5;
  v7 = *(unsigned int *)(v1 + 9448);
  *(_DWORD *)(v1 + 7976) = *(_DWORD *)(v1 + 8212);
  *(_DWORD *)(v1 + 8456) = *(_DWORD *)(v1 + 7424);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8328) = v2;
  return v6(v7);
}

uint64_t sub_1002BC744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD);
  int v12;

  v9 = (v7 - 364) | 0x220;
  v10 = (v9 + 87293402) | 0x80091001;
  v11 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * (((((v9 - 1609357903) & 0x5FECDA9E) + 3942) * v6) ^ v9)) + 2235371539 - v10 - 8);
  *(_DWORD *)(v8 + 8328) = 38;
  *(_DWORD *)(v8 + 9688) = 1;
  *(_QWORD *)(v8 + 9416) = v10;
  *(_QWORD *)(v8 + 8408) = *(_QWORD *)(v8 + 8432);
  *(_QWORD *)(v8 + 8400) = *(_QWORD *)(v8 + 8416);
  *(_QWORD *)(v8 + 8392) = *(_QWORD *)(v8 + 8536);
  *(_QWORD *)(v8 + 8384) = *(_QWORD *)(v8 + 8488);
  *(_QWORD *)(v8 + 8376) = *(_QWORD *)(v8 + 8472);
  *(_QWORD *)(v8 + 8944) = *(_QWORD *)(v8 + 9568);
  *(_QWORD *)(v8 + 8576) = *(_QWORD *)(v8 + 8888);
  *(_QWORD *)(v8 + 8952) = *(_QWORD *)(v8 + 9200);
  *(_QWORD *)(v8 + 8936) = *(_QWORD *)(v8 + 8880);
  *(_DWORD *)(v8 + 8332) = *(_DWORD *)(v8 + 8260);
  v12 = *(_DWORD *)(v8 + 9448);
  *(_DWORD *)(v8 + 9116) = v12;
  *(_DWORD *)(v8 + 9272) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 8832) = *(_DWORD *)(v8 + 9384);
  *(_DWORD *)(v8 + 9152) = *(_DWORD *)(v8 + 8964);
  *(_DWORD *)(v8 + 8368) = *(_DWORD *)(v8 + 9520);
  *(_DWORD *)(v8 + 8608) = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 8504) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8520) = *(_DWORD *)(v8 + 8464);
  *(_DWORD *)(v8 + 8356) = *(_DWORD *)(v8 + 8532);
  *(_DWORD *)(v8 + 8360) = *(_DWORD *)(v8 + 8424);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 8456) = *(_DWORD *)(v8 + 7424);
  *(_DWORD *)(v8 + 8912) = *(_DWORD *)(v8 + 8872);
  *(_DWORD *)(v8 + 8512) = *(_DWORD *)(v8 + 8480);
  *(_DWORD *)(v8 + 9128) = v12;
  *(_DWORD *)(v8 + 9072) = *(_DWORD *)(v8 + 9632);
  *(_DWORD *)(v8 + 8920) = *(_DWORD *)(v8 + 9160);
  *(_DWORD *)(v8 + 8496) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 9264) = *(_DWORD *)(v8 + 9624);
  *(_DWORD *)(v8 + 8904) = *(_DWORD *)(v8 + 8616);
  *(_DWORD *)(v8 + 8552) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 8900) = *(_DWORD *)(v8 + 9096);
  *(_DWORD *)(v8 + 9736) = 1;
  *(_DWORD *)(v8 + 8572) = *(_DWORD *)(v8 + 8984);
  *(_DWORD *)(v8 + 8440) = *(_DWORD *)(v8 + 9240);
  *(_DWORD *)(v8 + 8352) = *(_DWORD *)(v8 + 9040);
  *(_DWORD *)(v8 + 8932) = *(_DWORD *)(v8 + 8612);
  return v11(a1, 0, a3, a4, a5, a6, 0, 0);
}

uint64_t sub_1002BC904()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                     + 8
                                     * (((*(_BYTE *)(*(_QWORD *)(v1 + 8248) + 3504) & 1)
                                       * (((v0 - 1851156494) & 0x6E5667BD) + ((v0 + 1428) | 0x6C2) - 4315)) ^ v0))
                         - 8);
  *(_DWORD *)(v1 + 8328) = 38;
  *(_QWORD *)(v1 + 8408) = *(_QWORD *)(v1 + 8432);
  *(_QWORD *)(v1 + 8400) = *(_QWORD *)(v1 + 8416);
  *(_QWORD *)(v1 + 8392) = *(_QWORD *)(v1 + 8536);
  *(_QWORD *)(v1 + 8384) = *(_QWORD *)(v1 + 8488);
  *(_QWORD *)(v1 + 8376) = *(_QWORD *)(v1 + 8472);
  *(_QWORD *)(v1 + 8944) = *(_QWORD *)(v1 + 9568);
  *(_QWORD *)(v1 + 8952) = *(_QWORD *)(v1 + 9200);
  *(_QWORD *)(v1 + 8936) = *(_QWORD *)(v1 + 8880);
  *(_DWORD *)(v1 + 8332) = *(_DWORD *)(v1 + 8260);
  *(_DWORD *)(v1 + 9116) = *(_DWORD *)(v1 + 9448);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 8832) = *(_DWORD *)(v1 + 9384);
  *(_DWORD *)(v1 + 9152) = *(_DWORD *)(v1 + 8964);
  *(_DWORD *)(v1 + 8368) = *(_DWORD *)(v1 + 9520);
  *(_DWORD *)(v1 + 8504) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 8520) = *(_DWORD *)(v1 + 8464);
  *(_DWORD *)(v1 + 8356) = *(_DWORD *)(v1 + 8532);
  *(_DWORD *)(v1 + 8360) = *(_DWORD *)(v1 + 8424);
  *(_DWORD *)(v1 + 9104) = *(_DWORD *)(v1 + 9440);
  *(_DWORD *)(v1 + 8456) = *(_DWORD *)(v1 + 7424);
  *(_DWORD *)(v1 + 8912) = *(_DWORD *)(v1 + 8872);
  *(_DWORD *)(v1 + 8512) = *(_DWORD *)(v1 + 8480);
  *(_DWORD *)(v1 + 9072) = *(_DWORD *)(v1 + 9632);
  *(_DWORD *)(v1 + 8920) = *(_DWORD *)(v1 + 9160);
  *(_DWORD *)(v1 + 8496) = *(_DWORD *)(v1 + 9528);
  *(_DWORD *)(v1 + 9264) = *(_DWORD *)(v1 + 9624);
  *(_DWORD *)(v1 + 8904) = *(_DWORD *)(v1 + 8616);
  *(_DWORD *)(v1 + 8900) = *(_DWORD *)(v1 + 9096);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8352) = *(_DWORD *)(v1 + 9040);
  *(_DWORD *)(v1 + 8932) = *(_DWORD *)(v1 + 8612);
  return v2();
}

uint64_t sub_1002BCA74@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;

  *(_DWORD *)(v6 + 8328) = 38;
  *(_DWORD *)(v6 + 8332) = a1;
  *(_DWORD *)(v6 + 9116) = v5;
  *(_DWORD *)(v6 + 7976) = *(_DWORD *)(v6 + 8212);
  v7 = *(_DWORD *)(v6 + 9120);
  *(_DWORD *)(v6 + 8456) = a2;
  *(_DWORD *)(v6 + 9584) = v4;
  v8 = *(_DWORD *)(v6 + 4332);
  *(_DWORD *)(v6 + 8236) = v3;
  *(_DWORD *)(v6 + 7776) = 0;
  *(_DWORD *)(v6 + 9576) = 0;
  *(_DWORD *)(v6 + 9488) = 0;
  *(_DWORD *)(v6 + 9472) = 0;
  v9 = (a3 - 1648) | 0x1009;
  *(_DWORD *)(v6 + 9456) = v9 != 0x1879;
  v10 = *(_DWORD *)(v6 + 9116);
  if (v9 != 0x1879)
    v10 = v7;
  *(_DWORD *)(v6 + 9128) = v10;
  *(_DWORD *)(v6 + 4332) = v8;
  if (v9 != 0x1879)
    v8 = 1;
  *(_DWORD *)(v6 + 9688) = 1;
  *(_DWORD *)(v6 + 7792) = 1;
  *(_DWORD *)(v6 + 9504) = 1;
  *(_DWORD *)(v6 + 7784) = 1;
  *(_DWORD *)(v6 + 9496) = 1;
  *(_DWORD *)(v6 + 9464) = 1;
  *(_DWORD *)(v6 + 9736) = 0;
  *(_DWORD *)(v6 + 9680) = 0;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                                     + 8
                                                     * (((*(_DWORD *)(v6 + 9128) > v8 >> 5)
                                                       * ((v9 - 1867933886) & 0x6F56516F ^ 0x287E)) ^ (v9 - 1867933886) & 0x6F56516F))
                                         - 4))(0);
}

uint64_t sub_1002BCAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v13;
  uint64_t v14;

  v11 = (a5 - 12603989) & 0x85FD5E37;
  *(_QWORD *)(v7 + 9416) = v11;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                     + 8
                                                                     * (int)(((a5 + 2059602558 + v11 - 740) * v5) ^ (a5 + 1150)));
  *(_DWORD *)(v7 + 8440) = 59;
  *(_DWORD *)(v7 + 8328) = 36;
  *(_QWORD *)(v7 + 6904) = *(_QWORD *)(v7 + 7664);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 9568);
  *(_QWORD *)(v7 + 8576) = *(_QWORD *)(v7 + 8888);
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 9200);
  *(_QWORD *)(v7 + 8936) = *(_QWORD *)(v7 + 8880);
  *(_DWORD *)(v7 + 8332) = v10;
  *(_DWORD *)(v7 + 9116) = v6;
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8832) = *(_DWORD *)(v7 + 9384);
  *(_DWORD *)(v7 + 9152) = *(_DWORD *)(v7 + 8964);
  v13 = *(_DWORD *)(v7 + 9520);
  *(_DWORD *)(v7 + 8196) = v13;
  *(_DWORD *)(v7 + 8608) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 8456) = *(_DWORD *)(v7 + 7424);
  *(_DWORD *)(v7 + 8912) = *(_DWORD *)(v7 + 8872);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 8920) = *(_DWORD *)(v7 + 9160);
  LODWORD(v11) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 8188) = v11;
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8904) = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 8552) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 8900) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 8572) = *(_DWORD *)(v7 + 8984);
  *(_DWORD *)(v7 + 8932) = *(_DWORD *)(v7 + 8612);
  *(_DWORD *)(v7 + 8368) = v13;
  *(_DWORD *)(v7 + 8496) = v11;
  *(_QWORD *)(v7 + 6872) = *(_QWORD *)(v7 + 7680);
  *(_QWORD *)(v7 + 6864) = *(_QWORD *)(v7 + 7656);
  *(_QWORD *)(v7 + 6888) = *(_QWORD *)(v7 + 7688);
  *(_QWORD *)(v7 + 6880) = *(_QWORD *)(v7 + 7696);
  *(_QWORD *)(v7 + 6896) = *(_QWORD *)(v7 + 7704);
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 6928) = *(_DWORD *)(v7 + 7712);
  *(_DWORD *)(v7 + 7920) = *(_DWORD *)(v7 + 7936);
  *(_DWORD *)(v7 + 7904) = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 7040) = *(_DWORD *)(v7 + 6944);
  *(_DWORD *)(v7 + 6856) = *(_DWORD *)(v7 + 7648);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 6952) = *(_DWORD *)(v7 + 6936);
  *(_DWORD *)(v7 + 6984) = *(_DWORD *)(v7 + 7552);
  *(_DWORD *)(v7 + 8136) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 7000) = *(_DWORD *)(v7 + 6968);
  *(_DWORD *)(v7 + 7928) = *(_DWORD *)(v7 + 7952);
  *(_DWORD *)(v7 + 7912) = *(_DWORD *)(v7 + 7888);
  *(_DWORD *)(v7 + 6912) = *(_DWORD *)(v7 + 7640);
  *(_DWORD *)(v7 + 7008) = *(_DWORD *)(v7 + 6992);
  *(_DWORD *)(v7 + 6920) = *(_DWORD *)(v7 + 7672);
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 7152) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7080) = *(_DWORD *)(v7 + 7592);
  *(_DWORD *)(v7 + 7088) = *(_DWORD *)(v7 + 7584);
  *(_DWORD *)(v7 + 7072) = *(_DWORD *)(v7 + 7576);
  *(_DWORD *)(v7 + 9680) = *(_DWORD *)(v7 + 7632);
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  v14 = *(unsigned int *)(v7 + 8152);
  *(_DWORD *)(v7 + 9128) = v8;
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 8352) = a4;
  return v12(a1, a2, a3, v14);
}

uint64_t sub_1002BCD20(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_QWORD *)(v9 + 9016) = v8;
  *(_DWORD *)(v9 + 9184) = v7;
  *(_DWORD *)(v9 + 9120) = a6;
  v10 = *(_DWORD *)(v9 + 9592);
  *(_DWORD *)(v9 + 9736) = v10 & 0xFFFFFFFC;
  v11 = *(_QWORD *)(v9 + 9744);
  *(_DWORD *)(v9 + 9592) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (int)(((a1 == 0)
                                               * ((1032 * ((731 * (((v6 ^ 0x853D12C7) + 1035) ^ 0x6D0)) ^ 0x1F6C)) ^ 0x1432)) ^ (731 * (((v6 ^ 0x853D12C7) + 1035) ^ 0x6D0))))
                            - ((((731 * (((v6 ^ 0x853D12C7) + 1035) ^ 0x6D0)) ^ 0x1F6C) + 4210) ^ 0x1073)))();
}

uint64_t sub_1002BCDF0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((28 * (v2 & ~((a1 + 1115622230) ^ v1))) ^ a1)))();
}

uint64_t sub_1002BCE2C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  _BOOL4 v11;

  v9 = (a2 - 53) | 0x1D;
  v11 = a6 != 1 && *(_DWORD *)(a7 + 4 * a6 - 0x62AA055D109F20F7) == (v9 ^ v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((8 * v11) | (32 * v11)) ^ v9)))();
}

uint64_t sub_1002BCE84(int a1, _DWORD *a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  _BOOL4 v8;

  v8 = a6 != 2 && *a2 == a4;
  return (*(uint64_t (**)(void))(v6 + 8 * (((8 * v8) | (32 * v8)) ^ a1)))();
}

uint64_t sub_1002BCEB0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v3 + 8 * ((28 * (v2 & ~((((v1 + v4) & v5) + 1115622230) ^ v0))) ^ (v1 + v4) & v5)))();
}

uint64_t sub_1002BCEFC()
{
  int v0;
  char v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 + 490) | 0x328) ^ 0x17BA) * (v1 & 1)) ^ v0)))();
}

uint64_t sub_1002BCF24()
{
  unsigned __int8 v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v0 ^ (v1 + 75)) & 1) * v2) ^ (v1 + 5451)))
                            - 49 * ((v1 + 5451) ^ 0x27B7u)
                            + 188))();
}

uint64_t sub_1002BCF5C@<X0>(char a1@<W2>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((2 * (a2 ^ 0x2168)) ^ 0x1A57 ^ (187 * (a2 ^ 0x2798))) * (a1 & 1)) ^ a2 ^ 0x2168)))();
}

void sub_1002BCF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  *(_DWORD *)(v8 + 9320) = a8;
  JUMPOUT(0x1002BCDA8);
}

uint64_t sub_1002BCFCC()
{
  int v0;
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 ^ (v0 + 37)) & 1)
                                          * (((v0 - 487184443) & 0x1D09E9F1) - 10291)) ^ v0))
                            - 4))();
}

uint64_t sub_1002BD010@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((v1 - 977299802) & 0xBF7D503F) + 2059595833) * (v2 & ~a1)) ^ v1))
                            - (v1 - 9825)
                            + 716))();
}

uint64_t sub_1002BD05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((((a8 < *(_DWORD *)(v9 + 6788)) ^ v8 ^ 0x59) & 1)
                                          * ((v8 ^ 0x40B) - 1740)) | v8))
                            - 8))();
}

void sub_1002BD098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  *(_DWORD *)(v8 + 6380) = a8;
  JUMPOUT(0x1002BCD94);
}

uint64_t sub_1002BD0C4(int a1)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 - 806749345) & 0x30161EDB ^ 0x1CE6) * (v1 & 1)) ^ a1))
                            - ((a1 + 348468544) & 0xEB3AEFA6)
                            + 10110))();
}

uint64_t sub_1002BD11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v11 = *(_DWORD *)(v9 + 9320);
  *(_DWORD *)(v9 + 7424) = a8;
  return (*(uint64_t (**)(uint64_t, _QWORD))(v10
                                                    + 8
                                                    * ((3970 * ((((a8 | v11) == 0) ^ (v8 - 65)) & 1)) ^ v8)))(a1, *(_QWORD *)(v9 + 9016));
}

uint64_t sub_1002BD174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8 * ((46 * (((*(_DWORD *)(v7 + 7424) < a6) ^ (v6 - 41)) & 1)) ^ v6)))();
}

uint64_t sub_1002BD1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v6 - 9973) * (a6 >= *(_DWORD *)(v7 + 7424))) ^ (v6 - 7756)))
                            - 8))();
}

uint64_t sub_1002BD1FC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((6895
                                          * (((*(_DWORD *)(a2 + 4 * a6 - 0x62AA055D109F20F7) > *(_DWORD *)(v8 + 4 * *(unsigned int *)(v6 + 7424) - 0x62AA055D109F20F7)) ^ (a1 - 58) ^ 0x45) & 1)) ^ a1))
                            - 8))();
}

uint64_t sub_1002BD264(uint64_t a1, unsigned int a2, int a3, unsigned int a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  _BOOL4 v9;

  v7 = (a3 - 2303) | 0x808;
  if (a6 <= 1)
    v8 = 1;
  else
    v8 = a6;
  if ((v7 ^ 0xFFFFE6F6) + v8)
    v9 = a4 < a2;
  else
    v9 = 1;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6
                                                     + 8
                                                     * (int)((v9
                                                            * (((v7 + 805823156) & 0xCFF81D5A)
                                                             + ((v7 - 3268) ^ 0xFFFFEABC))) ^ v7))
                                         - 12))(0);
}

uint64_t sub_1002BD2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((221 * (((a6 - 4372) | 0x441) ^ 0xC58) - 5617)
                                          * (*(_DWORD *)(v6 - 0x62AA055D109F20FBLL) <= *(_DWORD *)(v7
                                                                                                 - 0x62AA055D109F20FBLL))) ^ a6))
                            - 12))();
}

void sub_1002BD340()
{
  JUMPOUT(0x1002BD288);
}

uint64_t sub_1002BD350()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 + 1859) ^ 0x1387) * (v0 > 7u)) ^ v1))
                            - ((v1 + 846484410) & 0xCD8BBFF8 ^ 0x1FF0)))();
}

uint64_t sub_1002BD39C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(_DWORD *)(v1 + 9736) == 36) ^ (93 * (v0 ^ 0xA7))) & 1)
                                * (v0 ^ 0x2063)) ^ v0)))();
}

uint64_t sub_1002BD3E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((v4 ^ 0x1592) + 5539) ^ 0x2009) * (a4 < 6u)) | v4 ^ 0x1592))
                            - 1429 * (v4 ^ 0x1FFCu)
                            + 5704))();
}

uint64_t sub_1002BD430()
{
  int v0;
  char v1;
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v0 - 3311) | 0x10) ^ 0x943) * (v2 != v1)) ^ v0))
                            - ((v0 - 701675386) & 0x29D2BDFF ^ 0x1CDELL)))();
}

uint64_t sub_1002BD480()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ ((16 * v0) | (32 * v0))))
                            + 2235371539
                            - (((v1 - 1080784384) & 0x406B5BF5u)
                             - 2059596473)
                            - 8))();
}

void sub_1002BD4D0()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 9664) = *(_DWORD *)(v0 + 7424);
  JUMPOUT(0x1002BCD78);
}

void sub_1002BD508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  *(_DWORD *)(v8 + 9448) = a8;
  JUMPOUT(0x1002BCD6CLL);
}

uint64_t sub_1002BD530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _DWORD *v9;
  _DWORD *v10;
  int v11;

  v10[1083] = 0;
  *v9 = 0;
  v10[2398] = 38;
  v10[1547] = 1467994582;
  v11 = v10[2362];
  v10[2416] = v10[2290];
  v10[2065] = 1;
  v10[2330] = v11;
  return sub_1002BCD20(v11, a2, 0, a4, a5, a8);
}

uint64_t sub_1002BD58C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 9280) = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((a4 - 2299) | 0x508) - 1435) * ((*(_DWORD *)(v4 + 6704) - 95) < 2)) ^ a4)))();
}

uint64_t sub_1002BD5C0@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;

  *(_DWORD *)(v3 + 9496) = 0;
  v4 = (a2 - 415238823) & 0x9DFD151F;
  v5 = v4 ^ 0x48;
  v6 = v2 == v5;
  v7 = v2 != v5;
  if (v2 == v5)
    v8 = 95;
  else
    v8 = 96;
  *(_DWORD *)(v3 + 6704) = v8;
  *(_DWORD *)(v3 + 8332) = *(_DWORD *)(v3 + 8260);
  *(_DWORD *)(v3 + 9656) = a1;
  *(_DWORD *)(v3 + 9736) = *(_DWORD *)(v3 + 8312);
  *(_DWORD *)(v3 + 8456) = *(_DWORD *)(v3 + 9664);
  v9 = *(unsigned int *)(v3 + 9248);
  *(_DWORD *)(v3 + 0x2000) = a1;
  *(_DWORD *)(v3 + 8188) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 9584) = *(_DWORD *)(v3 + 9184);
  *(_DWORD *)(v3 + 8328) = *(_DWORD *)(v3 + 9592);
  *(_DWORD *)(v3 + 9680) = 1;
  *(_DWORD *)(v3 + 9616) = v6;
  *(_DWORD *)(v3 + 9688) = 0;
  *(_DWORD *)(v3 + 9664) = 0;
  *(_DWORD *)(v3 + 9576) = 0;
  *(_DWORD *)(v3 + 9592) = 0;
  *(_DWORD *)(v3 + 9600) = v7;
  *(_DWORD *)(v3 + 9608) = 0;
  v10 = a1 + *(_DWORD *)(v3 + 9736);
  if ((v10 + 1) > 1)
    v11 = v10 + 1;
  else
    v11 = 1;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                                              + 8
                                                              * (int)((v4 + 2059600954) ^ (2
                                                                                         * (((v4 - 40) ^ (v11 < v4 + 2059595761)) & 1))))
                                                  - 8))(v9, *(_QWORD *)(v3 + 9552));
}

uint64_t sub_1002BDB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, int a6@<W8>, __n128 a7@<Q0>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;

  v10 = (__n128 *)(a5 + v8);
  *v10 = a7;
  v10[1] = a7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v9
                                                                                         + 8
                                                                                         * ((((v7 & 0xFFFFFFF8) != 8)
                                                                                           * (((((a6 + 1576005335) & 0x1CD32979)
                                                                                              - 55) ^ 0x3C60)
                                                                                            - 5112)) ^ (((a6 + 1576005335) & 0x1CD32979) - 55))))(a1, a2, a3, a4, a5 + ((unint64_t)(v7 & 0xFFFFFFF8) << ((((a6 - 41) & 0x79) - 55) ^ 0x33u)));
}

uint64_t sub_1002BDB90@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  int v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;

  *v3 = a2;
  v3[1] = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 != 0) * v2) ^ a1)))();
}

uint64_t sub_1002BDBB0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 - 1211) * (v0 == v1)) ^ v2))
                            - ((v2 + 2249) ^ 0x1D12)))();
}

uint64_t sub_1002BDBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_DWORD *)(a5 + v8) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10
                                                                                          + 8
                                                                                          * (((v5 + 1 == v7)
                                                                                            * ((v9 + 543) ^ v6)) ^ v9))
                                                                              - 8))(a1, a2, a3, a4, a5 + 4);
}

uint64_t sub_1002BDC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t v18;

  if (a6 <= 1)
    v15 = v7;
  else
    v15 = v8;
  v16 = *(unsigned __int8 *)(a2 + v15);
  v17 = *(_DWORD *)(v10 + 9736);
  if (v17 <= 1)
    v18 = 1;
  else
    v18 = v17;
  *(_DWORD *)(a7 - 0x62AA055D109F20F3) += *(_DWORD *)(v11 + v9) * *(_DWORD *)(v12 - 0x62AA055D109F20F3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14
                                                              + 8
                                                              * ((v13 - 4743) ^ (81
                                                                               * (v16 != (v13 - 101))))))(a1, 4091912158, v18);
}

uint64_t sub_1002BDCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  *(_DWORD *)(v17 + v8) += v14 + *(_DWORD *)(v18 + v8) * v15;
  if (a6 <= v16 + 1)
    a8 = v10;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v12 + 9744) + 8 * (((*(unsigned __int8 *)(v9 + a8) != 181) * v13) ^ v11)))();
}

uint64_t sub_1002BDD20@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;

  *(_DWORD *)(v6 + v2) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8
                                                                 * (int)((62 * (a2 + v5 - 4743 - 2706 == a1)) ^ v5))
                            - (v5 ^ 0x1D16)))();
}

void sub_1002BDD68()
{
  JUMPOUT(0x1002BDC40);
}

uint64_t sub_1002BDD74()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 | (2 * ((v0 & 1) == 0)))) - 4))();
}

uint64_t sub_1002BDDD4(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (7171 * (*(_DWORD *)(v3 + 9680) & 1))))
                         + 2235371539
                         - ((v2 - 2144335121) | 0x50D0003u)
                         - 8);
  *(_QWORD *)(v3 + 9680) = *(_QWORD *)(v3 + 7512);
  *(_DWORD *)(v3 + 8764) = *(_DWORD *)(v3 + 8828);
  *(_DWORD *)(v3 + 8768) = *(_DWORD *)(v3 + 8860);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 8748) = *(_DWORD *)(v3 + 8980);
  *(_DWORD *)(v3 + 8736) = *(_DWORD *)(v3 + 8792);
  *(_DWORD *)(v3 + 8728) = *(_DWORD *)(v3 + 8816);
  *(_DWORD *)(v3 + 8744) = *(_DWORD *)(v3 + 8628);
  *(_DWORD *)(v3 + 8720) = *(_DWORD *)(v3 + 8968);
  *(_DWORD *)(v3 + 8760) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8752) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 8712) = *(_DWORD *)(v3 + 8868);
  *(_DWORD *)(v3 + 8696) = *(_DWORD *)(v3 + 8840);
  *(_DWORD *)(v3 + 8688) = *(_DWORD *)(v3 + 8864);
  *(_DWORD *)(v3 + 8680) = *(_DWORD *)(v3 + 8808);
  *(_DWORD *)(v3 + 9248) = a1;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8672) = *(_DWORD *)(v3 + 8848);
  *(_DWORD *)(v3 + 9080) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 8664) = *(_DWORD *)(v3 + 8992);
  *(_DWORD *)(v3 + 9432) = *(_DWORD *)(v3 + 9172);
  *(_DWORD *)(v3 + 9528) = v1;
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8656) = *(_DWORD *)(v3 + 8776);
  *(_DWORD *)(v3 + 8648) = *(_DWORD *)(v3 + 9004);
  *(_DWORD *)(v3 + 8640) = *(_DWORD *)(v3 + 8784);
  *(_DWORD *)(v3 + 9008) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 9400) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 8704) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  *(_DWORD *)(v3 + 9012) = *(_DWORD *)(v3 + 9240);
  *(_DWORD *)(v3 + 8632) = *(_DWORD *)(v3 + 8800);
  return v5();
}

uint64_t sub_1002BDF28(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                                   + 8
                                                   * (((((v2 - 58694) & 0xE3F6) + 5782) * (*(_DWORD *)(v3 + 9496) & 1)) ^ v2))
                                       - 12);
  *(_QWORD *)(v3 + 9680) = *(_QWORD *)(v3 + 7512);
  *(_DWORD *)(v3 + 8764) = *(_DWORD *)(v3 + 8828);
  *(_DWORD *)(v3 + 8768) = *(_DWORD *)(v3 + 8860);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 8748) = *(_DWORD *)(v3 + 8980);
  *(_DWORD *)(v3 + 8736) = *(_DWORD *)(v3 + 8792);
  *(_DWORD *)(v3 + 8728) = *(_DWORD *)(v3 + 8816);
  *(_DWORD *)(v3 + 8744) = *(_DWORD *)(v3 + 8628);
  *(_DWORD *)(v3 + 8720) = *(_DWORD *)(v3 + 8968);
  *(_DWORD *)(v3 + 8760) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8752) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 8712) = *(_DWORD *)(v3 + 8868);
  *(_DWORD *)(v3 + 8696) = *(_DWORD *)(v3 + 8840);
  *(_DWORD *)(v3 + 8688) = *(_DWORD *)(v3 + 8864);
  *(_DWORD *)(v3 + 8680) = *(_DWORD *)(v3 + 8808);
  *(_DWORD *)(v3 + 9248) = a1;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8672) = *(_DWORD *)(v3 + 8848);
  *(_DWORD *)(v3 + 9080) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 8664) = *(_DWORD *)(v3 + 8992);
  *(_DWORD *)(v3 + 9432) = *(_DWORD *)(v3 + 9172);
  *(_DWORD *)(v3 + 9528) = v1;
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8656) = *(_DWORD *)(v3 + 8776);
  *(_DWORD *)(v3 + 8648) = *(_DWORD *)(v3 + 9004);
  *(_DWORD *)(v3 + 8640) = *(_DWORD *)(v3 + 8784);
  *(_DWORD *)(v3 + 9008) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 9400) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 8704) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  *(_DWORD *)(v3 + 9012) = *(_DWORD *)(v3 + 9240);
  *(_DWORD *)(v3 + 8632) = *(_DWORD *)(v3 + 8800);
  return v4(v1);
}

uint64_t sub_1002BE08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * ((((a5 + 3328) ^ 0xF5D)
                                                                                            * (v5 & ~*(_DWORD *)(v6 + 9688))) ^ a5))
                                                                              - 4))(a1, a2, a3, a4, a1);
}

uint64_t sub_1002BE0B8()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((2 * v0) ^ 0x1E90) * (v1 & ~*(_DWORD *)(v2 + 9616))) ^ v0)))();
}

uint64_t sub_1002BE0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);

  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                   + 8
                                                   * (int)((((((v5 ^ 0x229) - 2129067387) | 0x4240015) ^ 0x853D10D8)
                                                          * (*(_DWORD *)(v7 + 9600) & 1)) ^ v5 ^ 0x229))
                                       - 8);
  *(_QWORD *)(v7 + 9680) = *(_QWORD *)(v7 + 7512);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9248) = a5;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9080) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9528) = v6;
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 9008) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9392) = *(_DWORD *)(v7 + 8544);
  *(_DWORD *)(v7 + 9012) = *(_DWORD *)(v7 + 9240);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v9(v6);
}

uint64_t sub_1002BE240()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  v3 = v0 ^ 0x1173;
  v4 = *(_DWORD *)(v1 + 9664) ^ ((v3 ^ 0x135A) - 1214);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * (v4 & 1)) & 0xEF | (16 * (v4 & 1))) ^ v3)) - 12))();
}

uint64_t sub_1002BE278@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((25
                                          * ((((74 * (a1 ^ 0x85) + 34) ^ a1 ^ 0xCD) & v1) == 48)) ^ a1))
                            - 8))();
}

uint64_t sub_1002BE2C4()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v0 - 1726565365) & 0x66E94FF6 ^ (v0 + 918083914) & 0xC9473DFD ^ 0x170D)
                                               * ((v1 & 0xFE) == 48)) ^ v0))
                            - 12))();
}

uint64_t sub_1002BE320@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W7>, int a4@<W8>)
{
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;

  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(v7 + 8 * (int)((((((((_WORD)a4 + 21225) & 0xB297) + 25) & 0x1FF) == v5) * (((a4 - 2127297157) | 0x4090006) ^ 0x853D14C4)) ^ a4));
  *(_DWORD *)(v6 + 9584) = 50;
  *(_QWORD *)(v6 + 9600) = v8;
  *(_QWORD *)(v6 + 9608) = v4;
  *(_DWORD *)(v6 + 9616) = a2;
  v10 = *(unsigned int *)(v6 + 9520);
  v11 = *(unsigned int *)(v6 + 9120);
  *(_DWORD *)(v6 + 3928) = a3;
  return v9(a1, v10, 114, v10, v10, v11, *(unsigned int *)(v6 + 6756), *(unsigned int *)(v6 + 8132));
}

uint64_t sub_1002BE3E0@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  v5 = *(uint64_t (**)(uint64_t))(v4
                                         + 8
                                         * (int)(((((a2 ^ 0x1D7E) - 2059596735) ^ 0x853D382C)
                                                * (*(_DWORD *)(v3 + 9608) & 1)) ^ a2 ^ 0x1FEE));
  *(_QWORD *)(v3 + 9680) = *(_QWORD *)(v3 + 7512);
  *(_DWORD *)(v3 + 8764) = *(_DWORD *)(v3 + 8828);
  *(_DWORD *)(v3 + 8768) = *(_DWORD *)(v3 + 8860);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 8748) = *(_DWORD *)(v3 + 8980);
  *(_DWORD *)(v3 + 8736) = *(_DWORD *)(v3 + 8792);
  *(_DWORD *)(v3 + 8728) = *(_DWORD *)(v3 + 8816);
  *(_DWORD *)(v3 + 8744) = *(_DWORD *)(v3 + 8628);
  *(_DWORD *)(v3 + 8720) = *(_DWORD *)(v3 + 8968);
  *(_DWORD *)(v3 + 8760) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8752) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 8712) = *(_DWORD *)(v3 + 8868);
  *(_DWORD *)(v3 + 8696) = *(_DWORD *)(v3 + 8840);
  *(_DWORD *)(v3 + 8688) = *(_DWORD *)(v3 + 8864);
  *(_DWORD *)(v3 + 8680) = *(_DWORD *)(v3 + 8808);
  *(_DWORD *)(v3 + 9248) = a1;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8672) = *(_DWORD *)(v3 + 8848);
  *(_DWORD *)(v3 + 9080) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 8664) = *(_DWORD *)(v3 + 8992);
  *(_DWORD *)(v3 + 9432) = *(_DWORD *)(v3 + 9172);
  *(_DWORD *)(v3 + 9528) = v2;
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8656) = *(_DWORD *)(v3 + 8776);
  *(_DWORD *)(v3 + 8648) = *(_DWORD *)(v3 + 9004);
  *(_DWORD *)(v3 + 8640) = *(_DWORD *)(v3 + 8784);
  *(_DWORD *)(v3 + 9008) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 9400) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 8704) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  *(_DWORD *)(v3 + 9012) = *(_DWORD *)(v3 + 9240);
  *(_DWORD *)(v3 + 8632) = *(_DWORD *)(v3 + 8800);
  return v5(v2);
}

void sub_1002BE538(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  *(_DWORD *)(*(_QWORD *)(v6 + 8248) + 7536) = 0;
  *(_DWORD *)(v6 + 0x2000) = 1;
  *(_QWORD *)(v6 + 6368) = *(_QWORD *)(v6 + 6728);
  *(_QWORD *)(v6 + 5448) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 6112) = *(_QWORD *)(v6 + 6088);
  *(_QWORD *)(v6 + 9600) = *(_QWORD *)(v6 + 9280);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 9016);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 9320);
  *(_DWORD *)(v6 + 9424) = a1;
  *(_DWORD *)(v6 + 6788) = *(_DWORD *)(v6 + 8312);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 8456);
  *(_DWORD *)(v6 + 6380) = a1;
  *(_DWORD *)(v6 + 9248) = a5;
  *(_DWORD *)(v6 + 9528) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 6704) = v5;
  *(_DWORD *)(v6 + 9592) = *(_DWORD *)(v6 + 8328);
  JUMPOUT(0x10032D248);
}

uint64_t sub_1002BE5C4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 ^ 0x3C3F) - 1322429000) & 0x4ED28DFD) - 2298) * (v0 > 0x23)) ^ v1 ^ 0x3C3F))
                            - 8))();
}

uint64_t sub_1002BE610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  unsigned __int8 v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;

  *(_DWORD *)(v11 + 7112) = v12;
  *(_DWORD *)(v11 + 6744) = a8;
  *(_DWORD *)(v11 + 8260) = a6;
  v15 = (v9 - 1652709438) & 0xE7BF5EDF;
  *(_QWORD *)(v11 + 7144) = v15;
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (int)((((v15 + 2059598511) ^ 0x1E0A) * (v8 < 0x26u)) ^ v9)) - 4);
  *(_DWORD *)(v11 + 7216) = 76;
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  v17 = *(_QWORD *)(v11 + 6728);
  *(_QWORD *)(v11 + 7240) = v17;
  *(_QWORD *)(v11 + 7248) = *(_QWORD *)(v11 + 3344);
  *(_QWORD *)(v11 + 7232) = v17;
  *(_DWORD *)(v11 + 8080) = *(_DWORD *)(v11 + 8032);
  *(_DWORD *)(v11 + 7192) = *(_DWORD *)(v11 + 7436);
  *(_DWORD *)(v11 + 7272) = *(_DWORD *)(v11 + 7456);
  *(_DWORD *)(v11 + 7312) = *(_DWORD *)(v11 + 9328);
  *(_DWORD *)(v11 + 9272) = v13;
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 8064) = *(_DWORD *)(v11 + 7992);
  *(_DWORD *)(v11 + 7256) = *(_DWORD *)(v11 + 7500);
  *(_DWORD *)(v11 + 7280) = *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 7128) = *(_DWORD *)(v11 + 7616);
  *(_DWORD *)(v11 + 7344) = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 7168) = *(_DWORD *)(v11 + 7464);
  *(_DWORD *)(v11 + 7184) = *(_DWORD *)(v11 + 7488);
  *(_DWORD *)(v11 + 7296) = *(_DWORD *)(v11 + 7484);
  *(_DWORD *)(v11 + 9104) = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 7424) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 7304) = *(_DWORD *)(v11 + 7480);
  *(_DWORD *)(v11 + 7264) = *(_DWORD *)(v11 + 3292);
  *(_DWORD *)(v11 + 7176) = *(_DWORD *)(v11 + 9248);
  *(_DWORD *)(v11 + 7288) = *(_DWORD *)(v11 + 7476);
  *(_DWORD *)(v11 + 8236) = *(_DWORD *)(v11 + 9240);
  *(_DWORD *)(v11 + 7224) = v13;
  *(_DWORD *)(v11 + 9136) = *(_DWORD *)(v11 + 9056);
  *(_DWORD *)(v11 + 8040) = *(_DWORD *)(v11 + 8020);
  *(_DWORD *)(v11 + 7416) = *(_DWORD *)(v11 + 7432);
  *(_DWORD *)(v11 + 8116) = *(_DWORD *)(v11 + 8024);
  *(_DWORD *)(v11 + 7328) = *(_DWORD *)(v11 + 8000);
  *(_DWORD *)(v11 + 8272) = *(_DWORD *)(v11 + 7984);
  *(_DWORD *)(v11 + 8056) = *(_DWORD *)(v11 + 8008);
  *(_DWORD *)(v11 + 7208) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 7408) = *(_DWORD *)(v11 + 7460);
  *(_DWORD *)(v11 + 7160) = *(_DWORD *)(v11 + 7440);
  *(_DWORD *)(v11 + 7320) = *(_DWORD *)(v11 + 9156);
  *(_DWORD *)(v11 + 7336) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 7200) = *(_DWORD *)(v11 + 9064);
  *(_DWORD *)(v11 + 6760) = *(_DWORD *)(v11 + 8280);
  *(_DWORD *)(v11 + 9392) = *(_DWORD *)(v11 + 8544);
  *(_DWORD *)(v11 + 8328) = v10;
  return v16();
}

uint64_t sub_1002BE7D4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  int v8;

  v6 = (a1 - 2062289602) | 0x291013u;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8 * (((a1 - v2 + 2059598614) * (v1 == 37)) ^ a1))
                         - (v6 ^ 0x853D101FLL));
  *(_DWORD *)(v4 + 8236) = 95;
  *(_DWORD *)(v4 + 7216) = 72;
  *(_QWORD *)(v4 + 7144) = v6;
  *(_QWORD *)(v4 + 9280) = *(_QWORD *)(v4 + 9600);
  *(_QWORD *)(v4 + 9016) = *(_QWORD *)(v4 + 9608);
  *(_QWORD *)(v4 + 7240) = *(_QWORD *)(v4 + 6088);
  *(_QWORD *)(v4 + 7248) = *(_QWORD *)(v4 + 3264);
  *(_QWORD *)(v4 + 7232) = *(_QWORD *)(v4 + 4240);
  *(_DWORD *)(v4 + 8080) = *(_DWORD *)(v4 + 8032);
  *(_DWORD *)(v4 + 7192) = *(_DWORD *)(v4 + 7436);
  *(_DWORD *)(v4 + 7272) = *(_DWORD *)(v4 + 7456);
  *(_DWORD *)(v4 + 7312) = *(_DWORD *)(v4 + 9328);
  *(_DWORD *)(v4 + 9272) = *(_DWORD *)(v4 + 9656);
  *(_DWORD *)(v4 + 9320) = *(_DWORD *)(v4 + 9616);
  *(_DWORD *)(v4 + 8064) = *(_DWORD *)(v4 + 7992);
  *(_DWORD *)(v4 + 7256) = *(_DWORD *)(v4 + 7500);
  *(_DWORD *)(v4 + 7280) = *(_DWORD *)(v4 + 9424);
  *(_DWORD *)(v4 + 7128) = *(_DWORD *)(v4 + 7616);
  v8 = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 7344) = v8;
  *(_DWORD *)(v4 + 7168) = *(_DWORD *)(v4 + 7464);
  *(_DWORD *)(v4 + 7184) = *(_DWORD *)(v4 + 7488);
  *(_DWORD *)(v4 + 7296) = *(_DWORD *)(v4 + 7484);
  *(_DWORD *)(v4 + 9104) = *(_DWORD *)(v4 + 9440);
  *(_DWORD *)(v4 + 7424) = *(_DWORD *)(v4 + 9664);
  *(_DWORD *)(v4 + 7304) = *(_DWORD *)(v4 + 7480);
  *(_DWORD *)(v4 + 7264) = *(_DWORD *)(v4 + 7136);
  *(_DWORD *)(v4 + 7176) = *(_DWORD *)(v4 + 9248);
  *(_DWORD *)(v4 + 7288) = *(_DWORD *)(v4 + 7476);
  *(_DWORD *)(v4 + 7224) = v8;
  *(_DWORD *)(v4 + 9136) = *(_DWORD *)(v4 + 9056);
  *(_DWORD *)(v4 + 8040) = *(_DWORD *)(v4 + 8020);
  *(_DWORD *)(v4 + 7416) = *(_DWORD *)(v4 + 7432);
  *(_DWORD *)(v4 + 8116) = *(_DWORD *)(v4 + 8024);
  *(_DWORD *)(v4 + 7328) = *(_DWORD *)(v4 + 8000);
  *(_DWORD *)(v4 + 8272) = *(_DWORD *)(v4 + 7984);
  *(_DWORD *)(v4 + 8056) = *(_DWORD *)(v4 + 8008);
  *(_DWORD *)(v4 + 7208) = v5;
  *(_DWORD *)(v4 + 7408) = *(_DWORD *)(v4 + 7460);
  *(_DWORD *)(v4 + 7160) = *(_DWORD *)(v4 + 7440);
  *(_DWORD *)(v4 + 7320) = *(_DWORD *)(v4 + 9156);
  *(_DWORD *)(v4 + 7336) = *(_DWORD *)(v4 + 9408);
  *(_DWORD *)(v4 + 7200) = *(_DWORD *)(v4 + 9064);
  *(_DWORD *)(v4 + 6760) = *(_DWORD *)(v4 + 8280);
  *(_DWORD *)(v4 + 9392) = *(_DWORD *)(v4 + 8544);
  *(_DWORD *)(v4 + 8328) = v3;
  return v7();
}

void sub_1002BE994()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 7144) = v0;
  *(_QWORD *)(v3 + 9280) = *(_QWORD *)(v3 + 9600);
  *(_QWORD *)(v3 + 9016) = *(_QWORD *)(v3 + 9608);
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 7192) = *(_DWORD *)(v3 + 7436);
  *(_DWORD *)(v3 + 7272) = *(_DWORD *)(v3 + 7456);
  *(_DWORD *)(v3 + 7312) = *(_DWORD *)(v3 + 9328);
  *(_DWORD *)(v3 + 9320) = *(_DWORD *)(v3 + 9616);
  *(_DWORD *)(v3 + 8064) = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 7256) = *(_DWORD *)(v3 + 7500);
  *(_DWORD *)(v3 + 7280) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 7128) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 7344) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 7168) = *(_DWORD *)(v3 + 7464);
  *(_DWORD *)(v3 + 7184) = *(_DWORD *)(v3 + 7488);
  *(_DWORD *)(v3 + 7296) = *(_DWORD *)(v3 + 7484);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 7424) = *(_DWORD *)(v3 + 9664);
  *(_DWORD *)(v3 + 7304) = *(_DWORD *)(v3 + 7480);
  *(_DWORD *)(v3 + 7176) = *(_DWORD *)(v3 + 9248);
  *(_DWORD *)(v3 + 7288) = *(_DWORD *)(v3 + 7476);
  *(_DWORD *)(v3 + 9272) = v1;
  *(_DWORD *)(v3 + 7224) = v1;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 7416) = *(_DWORD *)(v3 + 7432);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 7328) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7208) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 7408) = *(_DWORD *)(v3 + 7460);
  *(_DWORD *)(v3 + 7160) = *(_DWORD *)(v3 + 7440);
  *(_DWORD *)(v3 + 7320) = *(_DWORD *)(v3 + 9156);
  v4 = *(_DWORD *)(v3 + 7452);
  *(_DWORD *)(v3 + 7336) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 7200) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 6760) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  *(_DWORD *)(v3 + 8328) = v2;
  *(_DWORD *)(v3 + 8236) = 96;
  *(_DWORD *)(v3 + 7216) = 73;
  v5 = *(_QWORD *)(v3 + 6728);
  *(_QWORD *)(v3 + 7240) = v5;
  *(_QWORD *)(v3 + 7248) = *(_QWORD *)(v3 + 3264);
  *(_QWORD *)(v3 + 7232) = v5;
  *(_DWORD *)(v3 + 7264) = *(_DWORD *)(v3 + 7136);
  *(_DWORD *)(v3 + 9736) = v4;
  JUMPOUT(0x10031D888);
}

uint64_t sub_1002BEAF4()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 - 8003) * ((v1 - 48) < 6u)) ^ v0))
                            - ((v0 - 6268) ^ 0x6C6)))();
}

uint64_t sub_1002BEB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, _QWORD);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v12
                                                                              + 8
                                                                              * (int)((((((v8 + 63811) | 0x853C1006) ^ 0xFFFFEF21)
                                                                                      + (v8 ^ 0x853D16D9))
                                                                                     * (v9 != 5)) ^ v8))
                                                                  - 8);
  *(_QWORD *)(v11 + 9600) = v13;
  *(_QWORD *)(v11 + 9608) = v10;
  *(_DWORD *)(v11 + 9616) = a5;
  return v14(a1, a8, 118, *(unsigned int *)(v11 + 8132));
}

uint64_t sub_1002BEBBC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  _BOOL4 v10;
  _BOOL4 v11;
  uint64_t (*v12)(void);

  v5 = *(_DWORD *)(v2 + 7936);
  v6 = *(_DWORD *)(v2 + 9520);
  v7 = *(_DWORD *)(v2 + 7952);
  v8 = a1 + 2059596318;
  v9 = *(_DWORD *)(v2 + 8424) - 1626542897;
  *(_DWORD *)(v2 + 3036) = 251899844;
  v10 = v9 < 0xC7A32D47;
  v11 = v9 > 0xC7A32D48;
  if (v10)
    v11 = v10;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1275 * v11) ^ v8)) - 8);
  *(_DWORD *)(v2 + 9584) = 55;
  *(_QWORD *)(v2 + 9600) = v4;
  *(_QWORD *)(v2 + 9608) = v1;
  *(_DWORD *)(v2 + 7936) = v5;
  *(_DWORD *)(v2 + 9616) = *(_DWORD *)(v2 + 9320);
  *(_DWORD *)(v2 + 7952) = v7;
  *(_DWORD *)(v2 + 9520) = v6;
  return v12();
}

uint64_t sub_1002BECB4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                     + 8
                                     * (int)(((((v2 == 114) ^ ((a2 - 34) | 4)) & 1)
                                            * (((a2 - 2059862581) | 0x41017) ^ 0x853D101A)) ^ a2))
                         - 8);
  *(_DWORD *)(v3 + 9584) = 49;
  *(_QWORD *)(v3 + 9600) = v5;
  *(_QWORD *)(v3 + 9608) = a1;
  *(_DWORD *)(v3 + 9616) = *(_DWORD *)(v3 + 9320);
  return v6();
}

void sub_1002BED64(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 + 9584) = 51;
  *(_QWORD *)(v3 + 9600) = v4;
  *(_QWORD *)(v3 + 9608) = a1;
  *(_DWORD *)(v3 + 9616) = v2;
  *(_DWORD *)(v3 + 9520) = a2;
  JUMPOUT(0x1002BEDA8);
}

uint64_t sub_1002BEDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  *(_DWORD *)(v10 + 8132) = a8;
  *(_DWORD *)(v10 + 6756) = a7;
  if (v9 >= a5)
    v12 = a5;
  else
    v12 = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((v8 + 2059606277) | (2 * (v12 == ((v8 + 650417048) & 0x53FE7FF3 ^ 0x23A3)))))
                            - (v8 ^ 0x853D31F5)
                            + 8662))();
}

uint64_t sub_1002BEE48(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;

  if (a5 >= v5)
    v7 = v5;
  else
    v7 = a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a1 ^ (11 * (v7 < 0xC))))
                            - (a1 ^ 0x2B4Eu)
                            - ((a1 - 6907) ^ 0xFFFFFFFFFFFFFFB3)))();
}

uint64_t sub_1002BEE94@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = (unint64_t)(v5 + a1 + 0x62AA055D109F20F3 - v2) > 0x1F
    && 0x62AA055D109F20F3 - a2 + v5 + a1 >= ((37 * (v3 ^ 0x871u)) ^ 0x1F7DuLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((122 * v7) ^ v3)) - ((v3 + 69) ^ 0x8E9)))();
}

uint64_t sub_1002BEF0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;

  v6 = *(int8x16_t *)(a1 - 0x62AA055D109F20E3);
  v7 = *(int8x16_t *)(v1 - 0x62AA055D109F20E3);
  *(int8x16_t *)(v5 - 0x62AA055D109F20F3) = veorq_s8(*(int8x16_t *)(v1 - 0x62AA055D109F20F3), *(int8x16_t *)(a1 - 0x62AA055D109F20F3));
  *(int8x16_t *)(v5 - 0x62AA055D109F20E3) = veorq_s8(v7, v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((14057 * (((v3 - 5813) ^ 0x8A0) == (v2 & 0xFFFFFFF8))) ^ v3))
                            - 8))();
}

uint64_t sub_1002BEFB0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 ^ (354 * (v2 == v3))))
                            - (a2 ^ 0x294Au)
                            - 457 * (a2 ^ 0x8ADu)
                            + 10955))();
}

uint64_t sub_1002BF018@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_DWORD *)(v8 + a2) = *(_DWORD *)(v5 + a2) ^ *(_DWORD *)(a5 + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((((v9 - 2027) | a3) ^ a4) + v6 == v7) * a1) ^ v9)) - 4))();
}

uint64_t sub_1002BF060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7
                                                      + 8
                                                      * ((((((v5 - 4554) ^ 0x90C) - 1290) ^ ((v5 - 4554) | 0x405))
                                                        * (v6 == a5)) ^ v5))
                                          - 4))(v8);
}

uint64_t sub_1002BF0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v5;
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (v5 ^ (100 * (v6 > a5))))
                            - (v5 - 4181)
                            - ((v5 - 4181) ^ 0xFFFFFFFFFFFFFFF6)))();
}

uint64_t sub_1002BF0F4()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((((v0 - 693) | 0x10) ^ 0x2ABD) * (v3 > v1)) ^ v0)))(v3);
}

uint64_t sub_1002BF130@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = (a1 + ~v3) < 7 || (unint64_t)(v4 - a2) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * (v2 ^ (87 * v7))) - 4))();
}

uint64_t sub_1002BF180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;

  v6 = v2 + 8203;
  v7 = (v1 ^ 0xE70) + v4;
  v8 = (_OWORD *)(v3 - 0x62AA055D109F20F3);
  v9 = (_OWORD *)(a1 - 0x62AA055D109F20F3);
  v10 = *(_QWORD *)(v5 + 9744);
  v11 = v9[1];
  *v8 = *v9;
  v8[1] = v11;
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v7 & 0x1FFFFFFF8) == 8) * (v6 - 9643)) ^ v6)))();
}

void sub_1002BF1F0()
{
  JUMPOUT(0x1002BF1CCLL);
}

uint64_t sub_1002BF200()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((((((v0 + 3429) | 0x40) - 2841) ^ (v0 + 2910)) * (v1 < v3)) ^ v0)))(v3);
}

uint64_t sub_1002BF240(int a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = a1 + ~v3 < ((v2 - 5102) ^ 0x9B ^ (v2 - 978346854) & 0x3A504FEBu) || (unint64_t)(v4 - v1) < 0x20;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744) + 8 * ((232 * v7) ^ v2)))();
}

uint64_t sub_1002BF2A0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;

  v5 = (_OWORD *)(v2 - 0x62AA055D109F20F3);
  v6 = (_OWORD *)(v0 - 0x62AA055D109F20F3);
  v7 = *(_QWORD *)(v4 + 9744);
  v8 = v6[1];
  *v5 = *v6;
  v5[1] = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * (((((v3 + 1) & 0x1FFFFFFF8) == 8) * (149 * (v1 ^ 0x2F1) - 3992)) ^ v1))
                            - 8))();
}

void sub_1002BF310()
{
  JUMPOUT(0x1002BF2E0);
}

uint64_t sub_1002BF320@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 - 443) ^ 0xA05) * (v1 < 8u)) ^ (a1 + 5967)))
                            - ((a1 + 5967) ^ 0x3D8Au)
                            + 6644))();
}

uint64_t sub_1002BF36C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 - 540576746) & 0x2038A1FF ^ 0x2175) * (v1 > 3)) ^ v0))
                            - ((54 * (v0 ^ 0xB0Bu)) ^ 0x15BELL)))();
}

uint64_t sub_1002BF3CC@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((122 * (v1 >= (a1 + 76))) ^ a1))
                            - (a1 - 1752)
                            + 3806))();
}

uint64_t sub_1002BF404@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W7>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t (*v9)(uint64_t, _QWORD);

  *(_DWORD *)(v4 + 7792) = 0;
  *(_DWORD *)(v4 + 7784) = 0;
  *(_DWORD *)(v4 + 9496) = 0;
  *(_DWORD *)(v4 + 9576) = 0;
  *(_DWORD *)(v4 + 9456) = 0;
  *(_DWORD *)(v4 + 9488) = 0;
  *(_DWORD *)(v4 + 9472) = 0;
  v8 = a4 - 2084;
  v9 = *(uint64_t (**)(uint64_t, _QWORD))(v7
                                                 + 8
                                                 * (((719 * ((a4 - 2084) ^ 0xD94) - 554)
                                                   * (*(_DWORD *)(v4 + 9240) == 65)) ^ (a4 - 2084)));
  *(_DWORD *)(v4 + 9240) = 66;
  *(_DWORD *)(v4 + 8236) = 65;
  *(_QWORD *)(v4 + 9280) = *(_QWORD *)(v4 + 9600);
  *(_QWORD *)(v4 + 9016) = *(_QWORD *)(v4 + 9608);
  *(_DWORD *)(v4 + 8332) = a2;
  *(_DWORD *)(v4 + 9320) = *(_DWORD *)(v4 + 9616);
  *(_DWORD *)(v4 + 8548) = a3;
  *(_DWORD *)(v4 + 9480) = *(_DWORD *)(v4 + 8136);
  *(_DWORD *)(v4 + 9736) = *(_DWORD *)(v4 + 6788);
  *(_DWORD *)(v4 + 8456) = *(_DWORD *)(v4 + 9664);
  *(_DWORD *)(v4 + 9632) = *(_DWORD *)(v4 + 9072);
  *(_DWORD *)(v4 + 9224) = *(_DWORD *)(v4 + 9400);
  *(_DWORD *)(v4 + 8328) = *(_DWORD *)(v4 + 9592);
  *(_DWORD *)(v4 + 9128) = v6;
  *(_DWORD *)(v4 + 9116) = v6;
  *(_DWORD *)(v4 + 0x2000) = v5;
  *(_DWORD *)(v4 + 8188) = *(_DWORD *)(v4 + 9528);
  *(_DWORD *)(v4 + 7976) = *(_DWORD *)(v4 + 8212);
  *(_DWORD *)(v4 + 9688) = 1;
  *(_DWORD *)(v4 + 9504) = 1;
  *(_DWORD *)(v4 + 7776) = 1;
  *(_DWORD *)(v4 + 9464) = 1;
  return v9(a1, v8 ^ 0x15EDu);
}

uint64_t sub_1002BF518()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                     + 8
                                     * (int)(((v0 < (((v1 + 81) ^ 0xA7) - 63))
                                            * ((v1 + 1987428466) & 0x898A3779 ^ 0x16F)) ^ (v1 + 8529)))
                         - 8);
  *(_DWORD *)(v2 + 9008) = v3;
  return v5();
}

uint64_t sub_1002BF574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12
                                                                      + 8
                                                                      * ((1092
                                                                        * (v6 != ((((v7 - 78) ^ 4) + 31) ^ ((v7 - 78) | 4)))) ^ v7))
                                                          - 12);
  *(_DWORD *)(v9 + 8332) = a6;
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  v14 = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8760) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 0x2000) = v10;
  *(_DWORD *)(v9 + 9264) = v8;
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = v14;
  *(_DWORD *)(v9 + 8704) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  v15 = *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 9632) = v15;
  *(_DWORD *)(v9 + 9080) = v15;
  *(_DWORD *)(v9 + 9392) = *(_DWORD *)(v9 + 8544);
  *(_DWORD *)(v9 + 9240) = 92;
  *(_DWORD *)(v9 + 9012) = 91;
  v16 = *(_QWORD *)(v9 + 3088);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 3144);
  *(_QWORD *)(v9 + 9496) = v16;
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 7768);
  *(_DWORD *)(v9 + 9736) = *(_DWORD *)(v9 + 9096);
  *(_DWORD *)(v9 + 9224) = v11;
  *(_QWORD *)(v9 + 9680) = *(_QWORD *)(v9 + 7512);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  return v13(a1, a2, v16);
}

uint64_t sub_1002BF6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  v14 = v8 - 2059600627;
  v15 = *(_QWORD *)(v12 + 8 * ((1020 * (v10 != ((v8 + 59) ^ 0x25))) ^ v8));
  *(_QWORD *)(v11 + 9600) = v13;
  *(_QWORD *)(v11 + 9608) = v9;
  *(_DWORD *)(v11 + 9616) = a5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 - ((v14 - 2770) ^ 0x853D101BLL)))(a1, a8, 115, a8);
}

uint64_t sub_1002BF78C@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned __int8 v13;
  unsigned int v14;
  unsigned int v15;

  *(_QWORD *)(v5 + 9600) = v7;
  *(_QWORD *)(v5 + 9608) = v4;
  *(_DWORD *)(v5 + 9616) = a1;
  v8 = *(_DWORD *)(v5 + 9520);
  v9 = *(_DWORD *)(v5 + 8480);
  v10 = *(_DWORD *)(v5 + 8132);
  v11 = *(_DWORD *)(v5 + 9184);
  *(_DWORD *)(v5 + 8332) = a2;
  *(_DWORD *)(v5 + 6756) = a3;
  *(_DWORD *)(v5 + 6784) = 116;
  *(_DWORD *)(v5 + 9584) = v11;
  *(_DWORD *)(v5 + 9520) = v8;
  v12 = (a4 & 0xB77D7FFF) + 2059600902;
  v13 = a4 + 74;
  v14 = (a4 & 0xB77D7FFF) + 2059596735;
  if (v9 >= v10)
    v15 = v10;
  else
    v15 = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((7187 * ((v13 ^ (v15 == (v12 ^ 0x141D))) & 1)) ^ v14)) - 12))();
}

uint64_t sub_1002BF858(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;

  if (a4 >= v5)
    v7 = v5;
  else
    v7 = a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * (((((v4 - 1110337514) & 0x422E75DE) - 9536) * (v7 < 0xC)) | v4))
                            - ((v4 - 2604) ^ 0xD31)))();
}

uint64_t sub_1002BF8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = (unint64_t)(v5 - v1) < 0x20 || v5 - v2 < (unint64_t)(v3 ^ 0x2863u) - 3349;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 9744)
                                                     + 8 * ((v7 * ((2627 * (v3 ^ 0x2554)) ^ 0x14A4)) ^ v3)))(a1, v5);
}

uint64_t sub_1002BF938()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int8x16_t *v4;
  uint64_t v5;
  int8x16_t *v6;
  uint64_t v7;
  int8x16_t v8;

  v6 = (int8x16_t *)(v2 - 0x62AA055D109F20F3);
  v7 = *(_QWORD *)(v5 + 9744);
  v8 = vandq_s8(v6[1], *(int8x16_t *)(v1 - 0x62AA055D109F20E3));
  *v4 = vandq_s8(*v6, *(int8x16_t *)(v1 - 0x62AA055D109F20F3));
  v4[1] = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1014 * ((v0 & 0xFFFFFFF8) == 8)) ^ v3)) - 12))();
}

void sub_1002BF9DC()
{
  JUMPOUT(0x1002BF978);
}

uint64_t sub_1002BF9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t (*v16)(void);
  int v17;

  *(_DWORD *)(v11 + 9576) = 0;
  *(_DWORD *)(v11 + 9496) = 0;
  *(_DWORD *)(v11 + 9012) = 0;
  *(_DWORD *)(v11 + 9488) = 0;
  *(_DWORD *)(v11 + 9472) = 0;
  *(_DWORD *)(v11 + 9688) = 0;
  *(_DWORD *)(v11 + 9736) = 0;
  v15 = v8 - 3136;
  *(_QWORD *)(v11 + 9416) = (v15 - 2059600627);
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v13
                                      + 8
                                      * (((v10 == ((v15 + 13) ^ 0x21)) * ((62 * (v15 ^ 0x1338)) ^ 0x79F)) ^ v15))
                          - 4);
  *(_DWORD *)(v11 + 9584) = 54;
  *(_DWORD *)(v11 + 9456) = 1;
  *(_QWORD *)(v11 + 9280) = v14;
  *(_QWORD *)(v11 + 9600) = v14;
  *(_QWORD *)(v11 + 9608) = v9;
  *(_DWORD *)(v11 + 8332) = a7;
  *(_DWORD *)(v11 + 8196) = a8;
  *(_DWORD *)(v11 + 8368) = *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 8904) = a8;
  *(_DWORD *)(v11 + 9616) = a5;
  *(_DWORD *)(v11 + 9432) = 1;
  *(_DWORD *)(v11 + 9080) = 1;
  *(_QWORD *)(v11 + 8408) = *(_QWORD *)(v11 + 8432);
  *(_QWORD *)(v11 + 8400) = *(_QWORD *)(v11 + 8416);
  *(_QWORD *)(v11 + 8392) = *(_QWORD *)(v11 + 8536);
  *(_QWORD *)(v11 + 8384) = *(_QWORD *)(v11 + 8488);
  *(_QWORD *)(v11 + 8376) = *(_QWORD *)(v11 + 8472);
  *(_QWORD *)(v11 + 8944) = *(_QWORD *)(v11 + 9568);
  *(_QWORD *)(v11 + 8576) = *(_QWORD *)(v11 + 8888);
  *(_QWORD *)(v11 + 8952) = *(_QWORD *)(v11 + 9200);
  *(_QWORD *)(v11 + 8936) = *(_QWORD *)(v11 + 8880);
  *(_DWORD *)(v11 + 9116) = *(_DWORD *)(v11 + 9448);
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 8832) = *(_DWORD *)(v11 + 9384);
  *(_DWORD *)(v11 + 9152) = *(_DWORD *)(v11 + 8964);
  *(_DWORD *)(v11 + 8608) = *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 8504) = *(_DWORD *)(v11 + 9256);
  v17 = *(_DWORD *)(v11 + 8464);
  *(_DWORD *)(v11 + 8520) = v17;
  *(_DWORD *)(v11 + 8356) = *(_DWORD *)(v11 + 8532);
  *(_DWORD *)(v11 + 8360) = *(_DWORD *)(v11 + 8424);
  *(_DWORD *)(v11 + 9104) = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 8456) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 8912) = *(_DWORD *)(v11 + 8872);
  *(_DWORD *)(v11 + 8512) = *(_DWORD *)(v11 + 8480);
  *(_DWORD *)(v11 + 9128) = v17;
  *(_DWORD *)(v11 + 9072) = *(_DWORD *)(v11 + 9632);
  *(_DWORD *)(v11 + 8920) = *(_DWORD *)(v11 + 9160);
  *(_DWORD *)(v11 + 8496) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 9264) = *(_DWORD *)(v11 + 9624);
  *(_DWORD *)(v11 + 8552) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 8900) = *(_DWORD *)(v11 + 9096);
  *(_DWORD *)(v11 + 8572) = *(_DWORD *)(v11 + 8984);
  *(_DWORD *)(v11 + 8440) = *(_DWORD *)(v11 + 9240);
  *(_DWORD *)(v11 + 8352) = *(_DWORD *)(v11 + 9040);
  *(_DWORD *)(v11 + 8932) = *(_DWORD *)(v11 + 8612);
  *(_DWORD *)(v11 + 8328) = v12;
  return v16();
}

uint64_t sub_1002BFC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8
                                                           * ((v3 - 8791) ^ ((8 * (v2 == v4)) | (16 * (v2 == v4)))))
                                          - (((v3 - 7140) | 0x430u)
                                           + 1452)
                                          + 5137))(v5);
}

uint64_t sub_1002BFC70@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v4 - 0x62AA055D109F20F3) = *(_DWORD *)(a2 - 0x62AA055D109F20F3);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (((v3 + 1 == a1) * (19 * (v2 ^ 0xF7E) - 4739)) ^ v2))
                            - 8))();
}

uint64_t sub_1002BFCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3
                                                                        + 8
                                                                        * ((((v5 ^ 0x1BAA) + v5 - 3393 - 5687)
                                                                          * (v3 == v4)) ^ v5))
                                                            - 8))(v6, a2, 1);
}

uint64_t sub_1002BFD3C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v4 - 0x62AA055D109F20F3) = *(_DWORD *)(v2 - 0x62AA055D109F20F3);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                                                        + 8
                                                                        * ((1660
                                                                          * (((((a2 - 32) | 0x180) + 1789704681) & 0x9553565D ^ 0x141C)
                                                                           + v3 < v6)) ^ ((a2 - 32) | 0x180)))
                                                            - 12))(v6, a1, 1);
}

void sub_1002BFDC0()
{
  JUMPOUT(0x1002BFD44);
}

uint64_t sub_1002BFDCC()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((((_BYTE)v1 - 33) & 0xC6 ^ 0xD8) & 0xFEu) > v0)
                                          * ((v1 - 2121309491) & 0x7E709EB6 ^ 0x1EC7)) ^ (v1 + 1291)))
                            - 12))();
}

uint64_t sub_1002BFE30@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v5 = *(uint64_t (**)(void))(v4 + 8 * (((((a1 ^ 0xC82) + 218) ^ 0x20D) * (v1 < 0x1Au)) ^ a1));
  *(_DWORD *)(v2 + 9008) = v3;
  return v5();
}

uint64_t sub_1002BFE64(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  int v15;
  int v16;
  int v17;
  uint64_t v18;

  *(_DWORD *)(v9 + 6744) = a8;
  v13 = v8 ^ (a2 + 544);
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v12
                                      + 8
                                      * ((1797
                                        * ((*(_DWORD *)(v9 + 9240) + (v8 ^ (a2 + 32)) - 107) < 0xE7u)) ^ v8))
                          - 12);
  *(_DWORD *)(v9 + 8236) = 83;
  *(_DWORD *)(v9 + 7216) = 48;
  *(_DWORD *)(v9 + 9012) = 84;
  *(_QWORD *)(v9 + 9680) = *(_QWORD *)(v9 + 7512);
  *(_DWORD *)(v9 + 8260) = a6;
  *(_DWORD *)(v9 + 8332) = a6;
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  v15 = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8760) = v15;
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  v16 = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8704) = v16;
  *(_DWORD *)(v9 + 9392) = *(_DWORD *)(v9 + 8544);
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 7344) = v15;
  *(_DWORD *)(v9 + 7424) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 7320) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7200) = v16;
  *(_DWORD *)(v9 + 6760) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 8328) = *(_DWORD *)(v9 + 9592);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 9080) = *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 7112) = v10;
  *(_DWORD *)(v9 + 0x2000) = v10;
  *(_DWORD *)(v9 + 9264) = a4;
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  v17 = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  *(_QWORD *)(v9 + 7144) = v13;
  v18 = *(_QWORD *)(v9 + 7704);
  *(_QWORD *)(v9 + 7240) = v18;
  *(_QWORD *)(v9 + 7248) = v18;
  *(_QWORD *)(v9 + 7232) = *(_QWORD *)(v9 + 2592);
  *(_DWORD *)(v9 + 8080) = *(_DWORD *)(v9 + 8032);
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 8064) = *(_DWORD *)(v9 + 7992);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7280) = v17;
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 9104) = v11;
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  *(_DWORD *)(v9 + 7264) = v11;
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  LODWORD(v18) = *(_DWORD *)(v9 + 7476);
  *(_DWORD *)(v9 + 7288) = v18;
  *(_DWORD *)(v9 + 7224) = v18;
  *(_DWORD *)(v9 + 8040) = *(_DWORD *)(v9 + 8020);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 8116) = *(_DWORD *)(v9 + 8024);
  *(_DWORD *)(v9 + 7328) = *(_DWORD *)(v9 + 8000);
  *(_DWORD *)(v9 + 8272) = *(_DWORD *)(v9 + 7984);
  *(_DWORD *)(v9 + 8056) = *(_DWORD *)(v9 + 8008);
  *(_DWORD *)(v9 + 7208) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7336) = *(_DWORD *)(v9 + 9408);
  return v14();
}

uint64_t sub_1002C00D8()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (1006 * (v0 > 0xB))))
                            - (v1 ^ 0x38E2u)
                            - ((2 * v1) ^ 0x1496u)
                            + 18568))();
}

uint64_t sub_1002C011C()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (21 * (v0 < 0xEu)))) - (((v1 - 8302) | 0x20u) ^ 0x728)))();
}

uint64_t sub_1002C0154@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, int a4@<W5>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v11 = v6 - 9550;
  v12 = v6 - 1073926799;
  v13 = (v12 - 96) & 0x9D;
  v14 = v12 & 0xC53FBB37;
  *(_QWORD *)(v7 + 7144) = v14;
  v15 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10
                                                                                                + 8
                                                                                                * ((502
                                                                                                  * (a6 != (v14 + v13 - 39))) ^ v11))
                                                                                    - 12);
  *(_DWORD *)(v7 + 8236) = 72;
  *(_DWORD *)(v7 + 7216) = 15;
  *(_DWORD *)(v7 + 9240) = 71;
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  v16 = *(_QWORD *)(v7 + 2576);
  *(_QWORD *)(v7 + 7240) = v16;
  *(_QWORD *)(v7 + 7248) = v16;
  *(_QWORD *)(v7 + 7232) = *(_QWORD *)(v7 + 2992);
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 8064) = v9;
  *(_DWORD *)(v7 + 7256) = *(_DWORD *)(v7 + 7500);
  *(_DWORD *)(v7 + 7280) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 7264) = v9;
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 8328) = *(_DWORD *)(v7 + 9592);
  *(_DWORD *)(v7 + 9616) = v9;
  *(_DWORD *)(v7 + 9248) = v9;
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 7344) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  LODWORD(v16) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 7224) = v16;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 7416) = v16;
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 7328) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7208) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7320) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 7336) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 7200) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 6760) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 9392) = *(_DWORD *)(v7 + 8544);
  *(_QWORD *)(v7 + 9600) = *(_QWORD *)(v7 + 6112);
  *(_QWORD *)(v7 + 9608) = *(_QWORD *)(v7 + 5992);
  *(_DWORD *)(v7 + 8260) = a4;
  *(_DWORD *)(v7 + 8332) = a4;
  *(_DWORD *)(v7 + 6744) = a5;
  *(_DWORD *)(v7 + 8548) = a5;
  *(_DWORD *)(v7 + 9480) = *(_DWORD *)(v7 + 8136);
  v17 = *(unsigned int *)(v7 + 9120);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6380);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 7112) = v8;
  *(_DWORD *)(v7 + 0x2000) = v8;
  *(_DWORD *)(v7 + 9224) = *(_DWORD *)(v7 + 9400);
  *(_DWORD *)(v7 + 9592) = 42;
  return v15(v9, a1, 0, a2, a3, v17);
}

uint64_t sub_1002C0390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                      + 8
                                                                      * (a4 ^ (1092
                                                                             * (*(_DWORD *)(v6 + 9240) == 93))))
                                                          + 2235371539
                                                          - (a4 ^ (v5 + 351))
                                                          - 8);
  *(_DWORD *)(v6 + 8332) = a3;
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  v11 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v11;
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9736) = v11;
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 0x2000) = v7;
  *(_DWORD *)(v6 + 9264) = v4;
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_DWORD *)(v6 + 9080) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9392) = *(_DWORD *)(v6 + 8544);
  *(_DWORD *)(v6 + 9240) = 94;
  *(_DWORD *)(v6 + 9012) = 93;
  v12 = *(_QWORD *)(v6 + 4240);
  v13 = *(_QWORD *)(v6 + 7512);
  *(_QWORD *)(v6 + 9504) = v13;
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 3072);
  *(_QWORD *)(v6 + 9496) = v12;
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 4404);
  *(_DWORD *)(v6 + 9632) = v8;
  *(_DWORD *)(v6 + 9224) = *(_DWORD *)(v6 + 9400);
  *(_QWORD *)(v6 + 9680) = v13;
  *(_DWORD *)(v6 + 9272) = *(_DWORD *)(v6 + 9656);
  return v10(a1, a2, v12);
}

uint64_t sub_1002C0510@<X0>(int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8
                                                      * (((((a1 - 854065050) & 0x32E7FC3F) + 8805) * (a3 == v3)) ^ a1))
                                          - 4))(v4);
}

uint64_t sub_1002C0578@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v2 - 0x62AA055D109F20F3) = *(_DWORD *)(v5 - 0x62AA055D109F20F3) & *(_DWORD *)(v4 - 0x62AA055D109F20F3);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((734 * (a2 + 1 == a1)) ^ v3))
                            - ((v3 - 3373) | 0x1415u)
                            + 5141))();
}

uint64_t sub_1002C05F4@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (127 * (v1 < 0x16)))) - ((3 * (a1 ^ 0x412u)) ^ 0x971)))();
}

uint64_t sub_1002C062C@<X0>(int a1@<W1>, int a2@<W8>)
{
  char v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;

  v8 = a2 ^ 0xE40;
  v9 = (v8 - 1250054078) & 0xCFBF565F;
  *(_QWORD *)(v5 + 7144) = v9;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)(((v9 ^ (a1 + 592)) * (v2 == 21)) ^ v8))
                          - ((v8 - v4 - 2145) ^ 0x853D1013));
  *(_DWORD *)(v5 + 8236) = 79;
  *(_DWORD *)(v5 + 7216) = 40;
  *(_QWORD *)(v5 + 9280) = *(_QWORD *)(v5 + 9600);
  *(_QWORD *)(v5 + 9016) = *(_QWORD *)(v5 + 9608);
  v11 = *(_QWORD *)(v5 + 2992);
  *(_QWORD *)(v5 + 7240) = v11;
  *(_QWORD *)(v5 + 7248) = v11;
  *(_QWORD *)(v5 + 7232) = *(_QWORD *)(v5 + 6008);
  *(_DWORD *)(v5 + 8080) = *(_DWORD *)(v5 + 8032);
  *(_DWORD *)(v5 + 7192) = *(_DWORD *)(v5 + 7436);
  *(_DWORD *)(v5 + 7272) = *(_DWORD *)(v5 + 7456);
  *(_DWORD *)(v5 + 7312) = *(_DWORD *)(v5 + 9328);
  *(_DWORD *)(v5 + 9272) = *(_DWORD *)(v5 + 9656);
  *(_DWORD *)(v5 + 9320) = *(_DWORD *)(v5 + 9616);
  *(_DWORD *)(v5 + 8064) = *(_DWORD *)(v5 + 7992);
  *(_DWORD *)(v5 + 7256) = *(_DWORD *)(v5 + 7500);
  *(_DWORD *)(v5 + 7280) = *(_DWORD *)(v5 + 9424);
  *(_DWORD *)(v5 + 7128) = *(_DWORD *)(v5 + 7616);
  *(_DWORD *)(v5 + 7344) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 7168) = *(_DWORD *)(v5 + 7464);
  *(_DWORD *)(v5 + 7184) = *(_DWORD *)(v5 + 7488);
  *(_DWORD *)(v5 + 7296) = *(_DWORD *)(v5 + 7484);
  *(_DWORD *)(v5 + 9104) = *(_DWORD *)(v5 + 9440);
  *(_DWORD *)(v5 + 7424) = *(_DWORD *)(v5 + 9664);
  *(_DWORD *)(v5 + 7304) = *(_DWORD *)(v5 + 7480);
  *(_DWORD *)(v5 + 7264) = v6;
  *(_DWORD *)(v5 + 7176) = *(_DWORD *)(v5 + 9248);
  *(_DWORD *)(v5 + 7288) = *(_DWORD *)(v5 + 7476);
  *(_DWORD *)(v5 + 7224) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8040) = *(_DWORD *)(v5 + 8020);
  *(_DWORD *)(v5 + 7416) = v6;
  *(_DWORD *)(v5 + 8116) = *(_DWORD *)(v5 + 8024);
  *(_DWORD *)(v5 + 7328) = *(_DWORD *)(v5 + 8000);
  *(_DWORD *)(v5 + 8272) = *(_DWORD *)(v5 + 7984);
  *(_DWORD *)(v5 + 8056) = *(_DWORD *)(v5 + 8008);
  *(_DWORD *)(v5 + 7208) = *(_DWORD *)(v5 + 9528);
  *(_DWORD *)(v5 + 7408) = *(_DWORD *)(v5 + 7460);
  *(_DWORD *)(v5 + 7160) = *(_DWORD *)(v5 + 7440);
  *(_DWORD *)(v5 + 7320) = *(_DWORD *)(v5 + 9156);
  *(_DWORD *)(v5 + 7336) = *(_DWORD *)(v5 + 9408);
  *(_DWORD *)(v5 + 7200) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 6760) = *(_DWORD *)(v5 + 8280);
  *(_DWORD *)(v5 + 9392) = *(_DWORD *)(v5 + 8544);
  *(_DWORD *)(v5 + 8328) = v3;
  return v10();
}

void sub_1002C07E0(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 9280) = *(_QWORD *)(v1 + 9600);
  *(_QWORD *)(v1 + 9016) = *(_QWORD *)(v1 + 9608);
  *(_DWORD *)(v1 + 8080) = *(_DWORD *)(v1 + 8032);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 9320) = *(_DWORD *)(v1 + 9616);
  *(_DWORD *)(v1 + 8064) = *(_DWORD *)(v1 + 7992);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 9104) = *(_DWORD *)(v1 + 9440);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 9664);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 3116) = v2;
  *(_DWORD *)(v1 + 7264) = v2;
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  v3 = *(_DWORD *)(v1 + 9424);
  *(_DWORD *)(v1 + 7280) = v3;
  *(_DWORD *)(v1 + 7224) = v3;
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8040) = *(_DWORD *)(v1 + 8020);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 8116) = *(_DWORD *)(v1 + 8024);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 8000);
  *(_DWORD *)(v1 + 8272) = *(_DWORD *)(v1 + 7984);
  *(_DWORD *)(v1 + 8056) = *(_DWORD *)(v1 + 8008);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 9528);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 6760) = *(_DWORD *)(v1 + 8280);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8328) = *(_DWORD *)(v1 + 9592);
  *(_DWORD *)(v1 + 8236) = 80;
  *(_DWORD *)(v1 + 7216) = 42;
  v4 = *(_QWORD *)(v1 + 2736);
  *(_QWORD *)(v1 + 7240) = v4;
  *(_QWORD *)(v1 + 7248) = v4;
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 6088);
  JUMPOUT(0x1003260ECLL);
}

uint64_t sub_1002C0944()
{
  unsigned __int8 v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((((v1 + 1229237873) ^ 0xE0) & 0xEE) > v0) * v2) | v1)) - 12))();
}

uint64_t sub_1002C0978(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v14 = *(uint64_t (**)(void))(v13
                            + 8
                            * (((*(_DWORD *)(v10 + 9240) != ((v6 - 43) ^ 0x6C))
                              * (((v6 - 3900) | 0x898) - 2864)) ^ (v6 - 3627)));
  *(_DWORD *)(v10 + 9240) = 59;
  *(_QWORD *)(v10 + 6904) = *(_QWORD *)(v10 + 7664);
  *(_QWORD *)(v10 + 6872) = *(_QWORD *)(v10 + 7680);
  *(_QWORD *)(v10 + 6864) = *(_QWORD *)(v10 + 7656);
  *(_QWORD *)(v10 + 6888) = *(_QWORD *)(v10 + 7688);
  *(_QWORD *)(v10 + 6880) = *(_QWORD *)(v10 + 7696);
  *(_QWORD *)(v10 + 6896) = *(_QWORD *)(v10 + 7704);
  *(_QWORD *)(v10 + 8944) = v7;
  *(_QWORD *)(v10 + 8576) = *(_QWORD *)(v10 + 8888);
  *(_QWORD *)(v10 + 8952) = *(_QWORD *)(v10 + 9200);
  *(_QWORD *)(v10 + 8936) = *(_QWORD *)(v10 + 8880);
  *(_QWORD *)(v10 + 9280) = *(_QWORD *)(v10 + 9600);
  *(_QWORD *)(v10 + 9016) = *(_QWORD *)(v10 + 9608);
  *(_DWORD *)(v10 + 8080) = *(_DWORD *)(v10 + 8032);
  *(_DWORD *)(v10 + 8332) = a6;
  *(_DWORD *)(v10 + 6928) = *(_DWORD *)(v10 + 7712);
  *(_DWORD *)(v10 + 7920) = *(_DWORD *)(v10 + 7936);
  *(_DWORD *)(v10 + 9116) = v9;
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 7904) = *(_DWORD *)(v10 + 8312);
  *(_DWORD *)(v10 + 9320) = *(_DWORD *)(v10 + 9616);
  *(_DWORD *)(v10 + 7040) = *(_DWORD *)(v10 + 6944);
  *(_DWORD *)(v10 + 6856) = *(_DWORD *)(v10 + 7648);
  *(_DWORD *)(v10 + 8064) = *(_DWORD *)(v10 + 7992);
  *(_DWORD *)(v10 + 8832) = *(_DWORD *)(v10 + 9384);
  *(_DWORD *)(v10 + 9152) = *(_DWORD *)(v10 + 8964);
  *(_DWORD *)(v10 + 8548) = v12;
  *(_DWORD *)(v10 + 6952) = *(_DWORD *)(v10 + 6936);
  *(_DWORD *)(v10 + 8196) = *(_DWORD *)(v10 + 9520);
  *(_DWORD *)(v10 + 6984) = *(_DWORD *)(v10 + 7552);
  *(_DWORD *)(v10 + 8608) = *(_DWORD *)(v10 + 9424);
  *(_DWORD *)(v10 + 7000) = *(_DWORD *)(v10 + 6968);
  *(_DWORD *)(v10 + 7928) = v8;
  *(_DWORD *)(v10 + 7912) = *(_DWORD *)(v10 + 7888);
  *(_DWORD *)(v10 + 9104) = *(_DWORD *)(v10 + 9440);
  *(_DWORD *)(v10 + 8456) = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 8912) = *(_DWORD *)(v10 + 8872);
  *(_DWORD *)(v10 + 6912) = *(_DWORD *)(v10 + 7640);
  *(_DWORD *)(v10 + 7008) = *(_DWORD *)(v10 + 6992);
  *(_DWORD *)(v10 + 6920) = *(_DWORD *)(v10 + 7672);
  *(_DWORD *)(v10 + 8040) = *(_DWORD *)(v10 + 8020);
  *(_DWORD *)(v10 + 8116) = *(_DWORD *)(v10 + 8024);
  *(_DWORD *)(v10 + 8920) = *(_DWORD *)(v10 + 9160);
  *(_DWORD *)(v10 + 7152) = *(_DWORD *)(v10 + 8000);
  *(_DWORD *)(v10 + 8272) = *(_DWORD *)(v10 + 7984);
  *(_DWORD *)(v10 + 8056) = *(_DWORD *)(v10 + 8008);
  *(_DWORD *)(v10 + 7080) = *(_DWORD *)(v10 + 7592);
  *(_DWORD *)(v10 + 0x2000) = v11;
  *(_DWORD *)(v10 + 8188) = *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 9264) = a4;
  *(_DWORD *)(v10 + 8904) = *(_DWORD *)(v10 + 8616);
  *(_DWORD *)(v10 + 7088) = *(_DWORD *)(v10 + 7584);
  *(_DWORD *)(v10 + 7072) = *(_DWORD *)(v10 + 7576);
  *(_DWORD *)(v10 + 8552) = *(_DWORD *)(v10 + 9408);
  *(_DWORD *)(v10 + 9224) = *(_DWORD *)(v10 + 9400);
  *(_DWORD *)(v10 + 8900) = *(_DWORD *)(v10 + 9096);
  *(_DWORD *)(v10 + 9184) = *(_DWORD *)(v10 + 9584);
  *(_DWORD *)(v10 + 8572) = *(_DWORD *)(v10 + 8984);
  *(_DWORD *)(v10 + 8932) = a1;
  *(_DWORD *)(v10 + 9680) = *(_DWORD *)(v10 + 7632);
  *(_DWORD *)(v10 + 8328) = *(_DWORD *)(v10 + 9592);
  return v14();
}

uint64_t sub_1002C0B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  _BOOL4 v18;
  _BOOL4 v19;
  uint64_t (*v20)(void);

  v12 = (v8 - 6910) * (*(_DWORD *)(v9 + 6824) - 25) - *(_DWORD *)(v9 + 6828) - 1151935901;
  v13 = (v8 - 2059602631);
  *(_QWORD *)(v9 + 8944) = *(_QWORD *)(v9 + 9568);
  *(_QWORD *)(v9 + 8576) = *(_QWORD *)(v9 + 8888);
  *(_QWORD *)(v9 + 8952) = *(_QWORD *)(v9 + 9200);
  *(_QWORD *)(v9 + 8936) = *(_QWORD *)(v9 + 8880);
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 8332) = a6;
  *(_DWORD *)(v9 + 9116) = *(_DWORD *)(v9 + 9448);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8832) = *(_DWORD *)(v9 + 9384);
  *(_DWORD *)(v9 + 9152) = *(_DWORD *)(v9 + 8964);
  v14 = *(_DWORD *)(v9 + 9520);
  *(_DWORD *)(v9 + 8608) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 8456) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 8912) = *(_DWORD *)(v9 + 8872);
  *(_DWORD *)(v9 + 8920) = *(_DWORD *)(v9 + 9160);
  *(_DWORD *)(v9 + 0x2000) = v10;
  v15 = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 9264) = *(_DWORD *)(v9 + 9624);
  *(_DWORD *)(v9 + 8904) = *(_DWORD *)(v9 + 8616);
  *(_DWORD *)(v9 + 8552) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9224) = *(_DWORD *)(v9 + 9400);
  *(_DWORD *)(v9 + 8900) = *(_DWORD *)(v9 + 9096);
  *(_DWORD *)(v9 + 9184) = *(_DWORD *)(v9 + 9584);
  *(_DWORD *)(v9 + 8548) = a8;
  *(_DWORD *)(v9 + 8572) = *(_DWORD *)(v9 + 8984);
  *(_DWORD *)(v9 + 8932) = *(_DWORD *)(v9 + 8612);
  *(_DWORD *)(v9 + 8328) = *(_DWORD *)(v9 + 9592);
  *(_QWORD *)(v9 + 9416) = v13;
  v16 = v8 - 3719;
  *(_DWORD *)(v9 + 2096) = v12;
  v17 = v13 + 2059598853 + v12 + 956097415;
  *(_DWORD *)(v9 + 2100) = 232609235;
  v18 = v17 < 0x80889444;
  v19 = v17 > 0x80889444;
  if (v18)
    v19 = v18;
  v20 = *(uint64_t (**)(void))(*(_QWORD *)(v9 + 9744) + 8 * ((10341 * v19) ^ v16));
  *(_DWORD *)(v9 + 9456) = 1;
  *(_DWORD *)(v9 + 9480) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 8232) = v11;
  *(_DWORD *)(v9 + 9632) = *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 9432) = 1;
  *(_DWORD *)(v9 + 9080) = 1;
  *(_DWORD *)(v9 + 9576) = 1;
  *(_DWORD *)(v9 + 9496) = 1;
  *(_DWORD *)(v9 + 9012) = 1;
  *(_DWORD *)(v9 + 9488) = 1;
  *(_DWORD *)(v9 + 9472) = 1;
  *(_QWORD *)(v9 + 8408) = *(_QWORD *)(v9 + 8432);
  *(_QWORD *)(v9 + 8400) = *(_QWORD *)(v9 + 8416);
  *(_QWORD *)(v9 + 8392) = *(_QWORD *)(v9 + 8536);
  *(_QWORD *)(v9 + 8384) = *(_QWORD *)(v9 + 8488);
  *(_DWORD *)(v9 + 9128) = v11;
  *(_DWORD *)(v9 + 8496) = v15;
  *(_QWORD *)(v9 + 8376) = *(_QWORD *)(v9 + 8472);
  *(_DWORD *)(v9 + 8196) = v14;
  *(_DWORD *)(v9 + 8368) = v14;
  *(_DWORD *)(v9 + 8504) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8520) = *(_DWORD *)(v9 + 8464);
  *(_DWORD *)(v9 + 8356) = *(_DWORD *)(v9 + 8532);
  *(_DWORD *)(v9 + 8360) = *(_DWORD *)(v9 + 8424);
  *(_DWORD *)(v9 + 8512) = *(_DWORD *)(v9 + 8480);
  *(_DWORD *)(v9 + 9688) = 1;
  *(_DWORD *)(v9 + 9736) = 1;
  *(_DWORD *)(v9 + 9240) = 60;
  *(_DWORD *)(v9 + 8440) = 60;
  *(_DWORD *)(v9 + 8352) = *(_DWORD *)(v9 + 9040);
  return v20();
}

uint64_t sub_1002C0E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  unsigned __int8 v8;
  int v9;
  _DWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  v10[1686] = a8;
  v10[2065] = a6;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (v9 ^ (422 * (v8 < 0x1Eu))))
                          - ((v9 - 7298) ^ (83 * (v9 ^ 0x1EA7u)) ^ 0x3B7));
  v10[1778] = v11;
  return v13();
}

uint64_t sub_1002C0EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int v12;
  int v13;

  v9 = (a4 - 939583808) & 0xBD3DF7B7;
  *(_QWORD *)(v5 + 7144) = v9;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                            + 8
                                                            * (int)(((((a4 - 176293600) & 0x8FBF1557)
                                                                    - 175775787
                                                                    + v9
                                                                    + 1724)
                                                                   * (v4 == 29)) ^ a4));
  *(_DWORD *)(v5 + 9240) = 87;
  *(_DWORD *)(v5 + 8236) = 88;
  *(_DWORD *)(v5 + 7216) = 58;
  v11 = *(_QWORD *)(v5 + 4240);
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7512);
  *(_QWORD *)(v5 + 9576) = *(_QWORD *)(v5 + 3072);
  *(_QWORD *)(v5 + 9496) = v11;
  *(_DWORD *)(v5 + 8332) = *(_DWORD *)(v5 + 8260);
  *(_DWORD *)(v5 + 8764) = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 4404);
  v12 = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8760) = v12;
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 9632) = v7;
  *(_DWORD *)(v5 + 9736) = v12;
  v13 = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 8704) = v13;
  *(_QWORD *)(v5 + 9280) = *(_QWORD *)(v5 + 9600);
  *(_QWORD *)(v5 + 9016) = *(_QWORD *)(v5 + 9608);
  *(_DWORD *)(v5 + 9320) = *(_DWORD *)(v5 + 9616);
  *(_DWORD *)(v5 + 7344) = v12;
  *(_DWORD *)(v5 + 7424) = *(_DWORD *)(v5 + 9664);
  *(_DWORD *)(v5 + 7224) = v12;
  *(_DWORD *)(v5 + 7208) = v7;
  *(_DWORD *)(v5 + 7200) = v13;
  *(_DWORD *)(v5 + 6760) = *(_DWORD *)(v5 + 8280);
  *(_DWORD *)(v5 + 9392) = *(_DWORD *)(v5 + 8544);
  *(_DWORD *)(v5 + 8328) = *(_DWORD *)(v5 + 9592);
  *(_DWORD *)(v5 + 8748) = *(_DWORD *)(v5 + 8980);
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 8752) = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8680) = *(_DWORD *)(v5 + 8808);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 8664) = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 9432) = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 0x2000) = v6;
  *(_DWORD *)(v5 + 9264) = a3;
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 8640) = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 9224) = *(_DWORD *)(v5 + 9400);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  *(_QWORD *)(v5 + 7240) = *(_QWORD *)(v5 + 6088);
  *(_QWORD *)(v5 + 7248) = *(_QWORD *)(v5 + 3264);
  *(_QWORD *)(v5 + 7232) = v11;
  *(_DWORD *)(v5 + 8080) = *(_DWORD *)(v5 + 8032);
  *(_DWORD *)(v5 + 7192) = *(_DWORD *)(v5 + 7436);
  *(_DWORD *)(v5 + 7272) = *(_DWORD *)(v5 + 7456);
  *(_DWORD *)(v5 + 7312) = *(_DWORD *)(v5 + 9328);
  *(_DWORD *)(v5 + 9272) = *(_DWORD *)(v5 + 9656);
  *(_DWORD *)(v5 + 8064) = *(_DWORD *)(v5 + 7992);
  *(_DWORD *)(v5 + 7256) = *(_DWORD *)(v5 + 7500);
  *(_DWORD *)(v5 + 7280) = *(_DWORD *)(v5 + 9424);
  *(_DWORD *)(v5 + 7128) = *(_DWORD *)(v5 + 7616);
  *(_DWORD *)(v5 + 7168) = *(_DWORD *)(v5 + 7464);
  *(_DWORD *)(v5 + 7184) = *(_DWORD *)(v5 + 7488);
  *(_DWORD *)(v5 + 7296) = *(_DWORD *)(v5 + 7484);
  *(_DWORD *)(v5 + 9104) = *(_DWORD *)(v5 + 9440);
  *(_DWORD *)(v5 + 7304) = *(_DWORD *)(v5 + 7480);
  *(_DWORD *)(v5 + 7264) = *(_DWORD *)(v5 + 7136);
  *(_DWORD *)(v5 + 7176) = *(_DWORD *)(v5 + 9248);
  *(_DWORD *)(v5 + 7288) = *(_DWORD *)(v5 + 7476);
  *(_DWORD *)(v5 + 8040) = *(_DWORD *)(v5 + 8020);
  *(_DWORD *)(v5 + 7416) = *(_DWORD *)(v5 + 7432);
  *(_DWORD *)(v5 + 8116) = *(_DWORD *)(v5 + 8024);
  *(_DWORD *)(v5 + 7328) = *(_DWORD *)(v5 + 8000);
  *(_DWORD *)(v5 + 8272) = *(_DWORD *)(v5 + 7984);
  *(_DWORD *)(v5 + 8056) = *(_DWORD *)(v5 + 8008);
  *(_DWORD *)(v5 + 7408) = *(_DWORD *)(v5 + 7460);
  *(_DWORD *)(v5 + 7160) = *(_DWORD *)(v5 + 7440);
  *(_DWORD *)(v5 + 7320) = *(_DWORD *)(v5 + 9156);
  *(_DWORD *)(v5 + 7336) = *(_DWORD *)(v5 + 9408);
  return v10(a1, a2, v11);
}

uint64_t sub_1002C1150@<X0>(unsigned int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((v1 < 0xAu) ^ (a1 - 1)) & 1 ^ a1))
                            - (a1 ^ 0x2116)))();
}

uint64_t sub_1002C1188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W5>, int a5@<W7>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _BOOL4 v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  v12 = (a6 - 1544168994) & 0x5C0A1FB7;
  v13 = (v12 - 2059602589);
  v14 = *(_DWORD *)(v9 + 9240) == 69;
  *(_QWORD *)(v9 + 9416) = v13;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11
                                                                               + 8
                                                                               * (int)(((v13 ^ 0x853D2FC1) * v14) ^ v12))
                                                                   - 47 * (v12 ^ 0x1AFEu)
                                                                   + 3470);
  *(_DWORD *)(v9 + 8440) = 71;
  *(_QWORD *)(v9 + 8408) = *(_QWORD *)(v9 + 8432);
  *(_QWORD *)(v9 + 8400) = *(_QWORD *)(v9 + 8416);
  *(_QWORD *)(v9 + 8392) = *(_QWORD *)(v9 + 8536);
  *(_QWORD *)(v9 + 8384) = *(_QWORD *)(v9 + 8488);
  *(_QWORD *)(v9 + 8376) = *(_QWORD *)(v9 + 8472);
  *(_QWORD *)(v9 + 8944) = v6;
  *(_QWORD *)(v9 + 8576) = *(_QWORD *)(v9 + 8888);
  *(_QWORD *)(v9 + 8952) = *(_QWORD *)(v9 + 9200);
  *(_QWORD *)(v9 + 8936) = *(_QWORD *)(v9 + 8880);
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 8332) = a4;
  v16 = *(unsigned int *)(v9 + 6788);
  *(_DWORD *)(v9 + 9128) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 9116) = v7;
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8832) = *(_DWORD *)(v9 + 9384);
  *(_DWORD *)(v9 + 9152) = *(_DWORD *)(v9 + 8964);
  *(_DWORD *)(v9 + 8548) = a5;
  *(_DWORD *)(v9 + 8368) = *(_DWORD *)(v9 + 9520);
  *(_DWORD *)(v9 + 8608) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 8504) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 9480) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 8520) = *(_DWORD *)(v9 + 8464);
  *(_DWORD *)(v9 + 8356) = *(_DWORD *)(v9 + 8532);
  *(_DWORD *)(v9 + 8360) = *(_DWORD *)(v9 + 8424);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 8456) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 8912) = *(_DWORD *)(v9 + 8872);
  *(_DWORD *)(v9 + 8512) = *(_DWORD *)(v9 + 8480);
  *(_DWORD *)(v9 + 8920) = *(_DWORD *)(v9 + 9160);
  *(_DWORD *)(v9 + 0x2000) = v10;
  *(_DWORD *)(v9 + 8496) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 9264) = *(_DWORD *)(v9 + 9624);
  *(_DWORD *)(v9 + 8904) = *(_DWORD *)(v9 + 8616);
  *(_DWORD *)(v9 + 8552) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9224) = *(_DWORD *)(v9 + 9400);
  *(_DWORD *)(v9 + 8900) = *(_DWORD *)(v9 + 9096);
  *(_DWORD *)(v9 + 9184) = *(_DWORD *)(v9 + 9584);
  *(_DWORD *)(v9 + 8572) = *(_DWORD *)(v9 + 8984);
  *(_DWORD *)(v9 + 8352) = v8;
  *(_DWORD *)(v9 + 8932) = *(_DWORD *)(v9 + 8612);
  *(_DWORD *)(v9 + 8328) = *(_DWORD *)(v9 + 9592);
  return v15(a1, a2, a3, v16);
}

uint64_t sub_1002C1358@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t (*v6)(uint64_t);

  *(_DWORD *)(*(_QWORD *)(v4 + 6368) - 0x62AA055D109F20F3) = *(_QWORD *)(v4 + 4304) - 747832858 + a3 - 2040;
  *(_DWORD *)(v4 + 9240) = 69;
  *(_QWORD *)(v4 + 9280) = *(_QWORD *)(v4 + 9600);
  *(_QWORD *)(v4 + 9016) = *(_QWORD *)(v4 + 9608);
  *(_DWORD *)(v4 + 8332) = a1;
  *(_DWORD *)(v4 + 9320) = *(_DWORD *)(v4 + 9616);
  *(_DWORD *)(v4 + 8548) = a2;
  *(_DWORD *)(v4 + 9480) = *(_DWORD *)(v4 + 8136);
  *(_DWORD *)(v4 + 9736) = *(_DWORD *)(v4 + 6788);
  *(_DWORD *)(v4 + 8456) = *(_DWORD *)(v4 + 9664);
  *(_DWORD *)(v4 + 9632) = *(_DWORD *)(v4 + 9072);
  *(_DWORD *)(v4 + 8188) = *(_DWORD *)(v4 + 9528);
  *(_DWORD *)(v4 + 9224) = *(_DWORD *)(v4 + 9400);
  *(_DWORD *)(v4 + 8328) = *(_DWORD *)(v4 + 9592);
  *(_DWORD *)(v4 + 9496) = 0;
  v6 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 9744)
                                         + 8
                                         * (((v5 >= ((a3 - 2127756677) | 0x4100006u) + 2059595755) * (a3 + 6395)) ^ (a3 - 2040)));
  *(_DWORD *)(v4 + 6788) = *(_DWORD *)(v4 + 9736);
  *(_DWORD *)(v4 + 0x2000) = v3;
  return v6(1);
}

uint64_t sub_1002C1400@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;

  *(_DWORD *)(v3 + 9080) = 0;
  *(_DWORD *)(v3 + 9576) = 0;
  *(_DWORD *)(v3 + 9496) = 0;
  *(_DWORD *)(v3 + 9012) = 0;
  *(_DWORD *)(v3 + 9488) = 0;
  *(_DWORD *)(v3 + 9472) = 0;
  v5 = *(_DWORD *)(v3 + 6788);
  *(_QWORD *)(v3 + 4272) = *(unsigned int *)(*(_QWORD *)(v3 + 5448) + 4 * v5 - 0x62AA055D109F20F7);
  v6 = v2 << (a2 + 124);
  *(_DWORD *)(v3 + 9432) = 1;
  *(_QWORD *)(v3 + 9600) = v4;
  *(_QWORD *)(v3 + 9608) = *(_QWORD *)(v3 + 9016);
  *(_DWORD *)(v3 + 8332) = *(_DWORD *)(v3 + 8260);
  *(_DWORD *)(v3 + 9616) = *(_DWORD *)(v3 + 9320);
  *(_DWORD *)(v3 + 8196) = *(_DWORD *)(v3 + 9520);
  *(_DWORD *)(v3 + 9036) = v6;
  *(_DWORD *)(v3 + 9456) = v6;
  *(_DWORD *)(v3 + 6380) = a1;
  *(_DWORD *)(v3 + 9584) = *(_DWORD *)(v3 + 9184);
  *(_DWORD *)(v3 + 9520) = 1;
  *(_DWORD *)(v3 + 9736) = 0;
  *(_DWORD *)(v3 + 9680) = 0;
  *(_DWORD *)(v3 + 9400) = 0;
  *(_DWORD *)(v3 + 9416) = 0;
  *(_DWORD *)(v3 + 9464) = *(_DWORD *)(v3 + 8132);
  *(_DWORD *)(v3 + 9688) = *(_DWORD *)(v3 + 7964);
  *(_DWORD *)(v3 + 9504) = *(_DWORD *)(v3 + 8232);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7752);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744) + 8 * ((83 * (v5 == 0)) ^ (a2 - 3181))))();
}

uint64_t sub_1002C14B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v16;

  *(_DWORD *)(v11 + 7792) = 0;
  *(_DWORD *)(v11 + 7776) = 0;
  *(_DWORD *)(v11 + 9576) = 0;
  *(_DWORD *)(v11 + 9456) = 0;
  *(_DWORD *)(v11 + 9488) = 0;
  *(_DWORD *)(v11 + 9472) = 0;
  v15 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v14
                                                                                              + 8
                                                                                              * (((((v8 == 5) ^ (3 * (v9 ^ 0xCB))) & 1)
                                                                                                * ((v9 - 247) ^ 0xC24)) ^ v9));
  *(_DWORD *)(v11 + 8236) = 64;
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  v16 = *(_QWORD *)(v11 + 7568);
  *(_DWORD *)(v11 + 8332) = v13;
  *(_DWORD *)(v11 + 9128) = v10;
  *(_DWORD *)(v11 + 9116) = v10;
  *(_DWORD *)(v11 + 7976) = *(_DWORD *)(v11 + 8212);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 8548) = a8;
  *(_DWORD *)(v11 + 9480) = *(_DWORD *)(v11 + 8136);
  *(_DWORD *)(v11 + 8456) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 9632) = *(_DWORD *)(v11 + 9072);
  *(_DWORD *)(v11 + 0x2000) = v12;
  *(_DWORD *)(v11 + 9224) = *(_DWORD *)(v11 + 9400);
  *(_DWORD *)(v11 + 9688) = 1;
  *(_DWORD *)(v11 + 9504) = 1;
  *(_DWORD *)(v11 + 7784) = 1;
  *(_DWORD *)(v11 + 9496) = 1;
  *(_DWORD *)(v11 + 9464) = 1;
  *(_DWORD *)(v11 + 8328) = *(_DWORD *)(v11 + 9592);
  return v15(a1, 3 * (v9 ^ 0x6CBu), a3, a4, 0, a6, v16);
}

uint64_t sub_1002C15A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;

  v12 = ((-65 * (v8 ^ 0xEC) - 59) & *(_DWORD *)(v9 + 2180)) != 96;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                                                                 + 8 * (((2 * v12) | (4 * v12)) ^ v8))
                                                                     - 12))(a8, a2, v10, v11);
}

uint64_t sub_1002C15F8(int a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v11 = (v8 + (v6 ^ 0x1550) + 306349165) & 0xEDBD721F;
  *(_QWORD *)(v10 + 9416) = v11;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)(((v11 ^ 0x853D1066) * (v9 == 98)) ^ v6 ^ 0x1550)) - 8);
  *(_DWORD *)(v10 + 8800) = 124;
  *(_DWORD *)(v10 + 8440) = 63;
  *(_DWORD *)(v10 + 9688) = 1;
  *(_QWORD *)(v10 + 8408) = *(_QWORD *)(v10 + 8432);
  *(_QWORD *)(v10 + 8400) = *(_QWORD *)(v10 + 8416);
  *(_QWORD *)(v10 + 8392) = *(_QWORD *)(v10 + 8536);
  *(_QWORD *)(v10 + 8384) = *(_QWORD *)(v10 + 8488);
  *(_QWORD *)(v10 + 8376) = *(_QWORD *)(v10 + 8472);
  *(_QWORD *)(v10 + 8944) = *(_QWORD *)(v10 + 9568);
  *(_QWORD *)(v10 + 8576) = *(_QWORD *)(v10 + 8888);
  *(_QWORD *)(v10 + 8952) = *(_QWORD *)(v10 + 9200);
  *(_QWORD *)(v10 + 8936) = *(_QWORD *)(v10 + 8880);
  *(_QWORD *)(v10 + 3944) = *(_QWORD *)(v10 + 4184);
  *(_QWORD *)(v10 + 6104) = *(_QWORD *)(v10 + 7880);
  *(_QWORD *)(v10 + 9280) = *(_QWORD *)(v10 + 9600);
  *(_QWORD *)(v10 + 9016) = *(_QWORD *)(v10 + 9608);
  *(_DWORD *)(v10 + 8332) = a6;
  *(_DWORD *)(v10 + 9116) = *(_DWORD *)(v10 + 9448);
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 9320) = *(_DWORD *)(v10 + 9616);
  *(_DWORD *)(v10 + 8832) = *(_DWORD *)(v10 + 9384);
  *(_DWORD *)(v10 + 3940) = *(_DWORD *)(v10 + 5988);
  *(_DWORD *)(v10 + 9152) = *(_DWORD *)(v10 + 8964);
  *(_DWORD *)(v10 + 8548) = a1;
  *(_DWORD *)(v10 + 8368) = *(_DWORD *)(v10 + 9520);
  *(_DWORD *)(v10 + 8608) = *(_DWORD *)(v10 + 9424);
  *(_DWORD *)(v10 + 8504) = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 9480) = a4;
  *(_DWORD *)(v10 + 8520) = *(_DWORD *)(v10 + 8464);
  *(_DWORD *)(v10 + 8356) = *(_DWORD *)(v10 + 8532);
  *(_DWORD *)(v10 + 6100) = *(_DWORD *)(v10 + 8312);
  *(_DWORD *)(v10 + 8360) = *(_DWORD *)(v10 + 8424);
  *(_DWORD *)(v10 + 9104) = *(_DWORD *)(v10 + 9440);
  *(_DWORD *)(v10 + 8456) = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 8912) = *(_DWORD *)(v10 + 8872);
  *(_DWORD *)(v10 + 8512) = *(_DWORD *)(v10 + 8480);
  *(_DWORD *)(v10 + 9128) = a4;
  *(_DWORD *)(v10 + 8920) = *(_DWORD *)(v10 + 9160);
  *(_DWORD *)(v10 + 0x2000) = a3;
  *(_DWORD *)(v10 + 8496) = *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8904) = *(_DWORD *)(v10 + 8616);
  *(_DWORD *)(v10 + 8552) = *(_DWORD *)(v10 + 9408);
  *(_DWORD *)(v10 + 9224) = *(_DWORD *)(v10 + 9400);
  *(_DWORD *)(v10 + 8900) = *(_DWORD *)(v10 + 9096);
  *(_DWORD *)(v10 + 9736) = 1;
  *(_DWORD *)(v10 + 9184) = *(_DWORD *)(v10 + 9584);
  *(_DWORD *)(v10 + 8572) = *(_DWORD *)(v10 + 8984);
  *(_DWORD *)(v10 + 8352) = *(_DWORD *)(v10 + 9040);
  *(_DWORD *)(v10 + 8932) = *(_DWORD *)(v10 + 8612);
  *(_DWORD *)(v10 + 8328) = *(_DWORD *)(v10 + 9592);
  return v12();
}

void sub_1002C17F8(int a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 9416) = (v6 - 2419);
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 9568);
  *(_QWORD *)(v7 + 8576) = *(_QWORD *)(v7 + 8888);
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 9200);
  *(_QWORD *)(v7 + 8936) = *(_QWORD *)(v7 + 8880);
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 8332) = a6;
  *(_DWORD *)(v7 + 9116) = *(_DWORD *)(v7 + 9448);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 8832) = *(_DWORD *)(v7 + 9384);
  *(_DWORD *)(v7 + 9152) = *(_DWORD *)(v7 + 8964);
  *(_DWORD *)(v7 + 8548) = a1;
  *(_DWORD *)(v7 + 8368) = *(_DWORD *)(v7 + 9520);
  *(_DWORD *)(v7 + 8608) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 9480) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 8456) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 8912) = *(_DWORD *)(v7 + 8872);
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 8628) = a4;
  *(_DWORD *)(v7 + 9128) = a4;
  *(_DWORD *)(v7 + 8920) = *(_DWORD *)(v7 + 9160);
  *(_DWORD *)(v7 + 0x2000) = a3;
  *(_DWORD *)(v7 + 8496) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8904) = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 8552) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 9224) = *(_DWORD *)(v7 + 9400);
  *(_DWORD *)(v7 + 8900) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 9184) = *(_DWORD *)(v7 + 9584);
  *(_DWORD *)(v7 + 8572) = *(_DWORD *)(v7 + 8984);
  *(_DWORD *)(v7 + 8352) = *(_DWORD *)(v7 + 9040);
  *(_DWORD *)(v7 + 8932) = *(_DWORD *)(v7 + 8612);
  *(_DWORD *)(v7 + 8328) = *(_DWORD *)(v7 + 9592);
  *(_DWORD *)(v7 + 8800) = 125;
  *(_DWORD *)(v7 + 8440) = 63;
  *(_DWORD *)(v7 + 9688) = 1;
  *(_QWORD *)(v7 + 3944) = *(_QWORD *)(v7 + 3896);
  *(_QWORD *)(v7 + 6104) = *(_QWORD *)(v7 + 7880);
  *(_DWORD *)(v7 + 3940) = *(_DWORD *)(v7 + 5988);
  *(_DWORD *)(v7 + 6100) = *(_DWORD *)(v7 + 8312);
  JUMPOUT(0x1002C34A8);
}

uint64_t sub_1002C1968(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  int v12;
  int v13;
  uint64_t v14;

  v11 = *(uint64_t (**)(void))(v10
                            + 8
                            * ((217
                              * (*(_DWORD *)(v7 + 9240) == (((a2 + v6 - 89) | 0x13)
                                                                                            + 62))) ^ v6));
  *(_DWORD *)(v7 + 8332) = a6;
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  v12 = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 0x2000) = v8;
  *(_DWORD *)(v7 + 9264) = a4;
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = v12;
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  v13 = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9632) = v13;
  *(_DWORD *)(v7 + 9080) = v13;
  *(_DWORD *)(v7 + 9392) = *(_DWORD *)(v7 + 8544);
  *(_DWORD *)(v7 + 9012) = 86;
  *(_DWORD *)(v7 + 9240) = 85;
  v14 = *(_QWORD *)(v7 + 3088);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 3144);
  *(_QWORD *)(v7 + 9496) = v14;
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 9224) = v9;
  *(_QWORD *)(v7 + 9680) = *(_QWORD *)(v7 + 7512);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  return v11();
}

uint64_t sub_1002C1AF0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t (*v15)(void);
  uint64_t v16;

  *(_DWORD *)(v9 + 7112) = v10;
  *(_DWORD *)(v9 + 6744) = a8;
  *(_DWORD *)(v9 + 8260) = a6;
  v13 = (v8 - 2077689615) ^ 0x1141006u;
  v14 = *(_DWORD *)(v9 + 9240) == 73;
  *(_QWORD *)(v9 + 7144) = v13;
  v15 = *(uint64_t (**)(void))(v12
                            + 8 * (int)((((v14 ^ ((v8 - 15) | 6)) & 1) * (v13 ^ (a2 - 2137))) ^ v8));
  *(_DWORD *)(v9 + 8236) = 73;
  *(_DWORD *)(v9 + 7216) = 17;
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  v16 = *(_QWORD *)(v9 + 7736);
  *(_QWORD *)(v9 + 7240) = v16;
  *(_QWORD *)(v9 + 7248) = v16;
  *(_QWORD *)(v9 + 7232) = *(_QWORD *)(v9 + 4160);
  *(_DWORD *)(v9 + 8080) = *(_DWORD *)(v9 + 8032);
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8064) = *(_DWORD *)(v9 + 7992);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7280) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7344) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 7424) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  *(_DWORD *)(v9 + 7264) = v11;
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  *(_DWORD *)(v9 + 7224) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8040) = *(_DWORD *)(v9 + 8020);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 8116) = *(_DWORD *)(v9 + 8024);
  *(_DWORD *)(v9 + 7328) = *(_DWORD *)(v9 + 8000);
  *(_DWORD *)(v9 + 8272) = *(_DWORD *)(v9 + 7984);
  *(_DWORD *)(v9 + 8056) = *(_DWORD *)(v9 + 8008);
  *(_DWORD *)(v9 + 7208) = v11;
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7320) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7336) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 7200) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 6760) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 9392) = *(_DWORD *)(v9 + 8544);
  *(_DWORD *)(v9 + 8328) = *(_DWORD *)(v9 + 9592);
  return v15();
}

void sub_1002C1CA8(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 9280) = *(_QWORD *)(v1 + 9600);
  *(_QWORD *)(v1 + 9016) = *(_QWORD *)(v1 + 9608);
  *(_DWORD *)(v1 + 8080) = *(_DWORD *)(v1 + 8032);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 9320) = *(_DWORD *)(v1 + 9616);
  *(_DWORD *)(v1 + 8064) = *(_DWORD *)(v1 + 7992);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 9424);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 9104) = *(_DWORD *)(v1 + 9440);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 9664);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 8816) = v2;
  *(_DWORD *)(v1 + 7264) = v2;
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8040) = *(_DWORD *)(v1 + 8020);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 8116) = *(_DWORD *)(v1 + 8024);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 8000);
  *(_DWORD *)(v1 + 8272) = *(_DWORD *)(v1 + 7984);
  *(_DWORD *)(v1 + 8056) = *(_DWORD *)(v1 + 8008);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 9528);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 6760) = *(_DWORD *)(v1 + 8280);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8328) = *(_DWORD *)(v1 + 9592);
  *(_DWORD *)(v1 + 8236) = 74;
  *(_DWORD *)(v1 + 7216) = 19;
  v3 = *(_QWORD *)(v1 + 2512);
  *(_QWORD *)(v1 + 7240) = v3;
  *(_QWORD *)(v1 + 7248) = v3;
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 2504);
  JUMPOUT(0x1003261BCLL);
}

uint64_t sub_1002C1E10()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  v5 = v0 ^ 0x853D1962;
  v6 = *(_DWORD *)(v2 + 9240) != 81;
  *(_QWORD *)(v2 + 7144) = v5;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)(((v5 + 2059600633) * v6) ^ v0)) - 4);
  *(_DWORD *)(v2 + 8236) = 81;
  *(_DWORD *)(v2 + 7216) = 43;
  *(_QWORD *)(v2 + 9280) = *(_QWORD *)(v2 + 9600);
  *(_QWORD *)(v2 + 9016) = *(_QWORD *)(v2 + 9608);
  v8 = *(_QWORD *)(v2 + 3000);
  *(_QWORD *)(v2 + 7240) = v8;
  *(_QWORD *)(v2 + 7248) = v8;
  *(_QWORD *)(v2 + 7232) = *(_QWORD *)(v2 + 2552);
  *(_DWORD *)(v2 + 8080) = *(_DWORD *)(v2 + 8032);
  *(_DWORD *)(v2 + 7192) = *(_DWORD *)(v2 + 7436);
  *(_DWORD *)(v2 + 7272) = *(_DWORD *)(v2 + 7456);
  *(_DWORD *)(v2 + 7312) = *(_DWORD *)(v2 + 9328);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_DWORD *)(v2 + 9320) = *(_DWORD *)(v2 + 9616);
  *(_DWORD *)(v2 + 8064) = *(_DWORD *)(v2 + 7992);
  *(_DWORD *)(v2 + 7256) = *(_DWORD *)(v2 + 7500);
  *(_DWORD *)(v2 + 7280) = *(_DWORD *)(v2 + 9424);
  *(_DWORD *)(v2 + 7128) = *(_DWORD *)(v2 + 7616);
  *(_DWORD *)(v2 + 7344) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 7168) = *(_DWORD *)(v2 + 7464);
  *(_DWORD *)(v2 + 7184) = *(_DWORD *)(v2 + 7488);
  *(_DWORD *)(v2 + 7296) = *(_DWORD *)(v2 + 7484);
  *(_DWORD *)(v2 + 9104) = *(_DWORD *)(v2 + 9440);
  *(_DWORD *)(v2 + 7424) = *(_DWORD *)(v2 + 9664);
  *(_DWORD *)(v2 + 7304) = *(_DWORD *)(v2 + 7480);
  *(_DWORD *)(v2 + 7264) = v3;
  *(_DWORD *)(v2 + 7176) = *(_DWORD *)(v2 + 9248);
  *(_DWORD *)(v2 + 7288) = *(_DWORD *)(v2 + 7476);
  *(_DWORD *)(v2 + 7224) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 7328) = *(_DWORD *)(v2 + 8000);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8040) = *(_DWORD *)(v2 + 8020);
  *(_DWORD *)(v2 + 7416) = *(_DWORD *)(v2 + 7432);
  *(_DWORD *)(v2 + 8116) = *(_DWORD *)(v2 + 8024);
  *(_DWORD *)(v2 + 8272) = *(_DWORD *)(v2 + 7984);
  *(_DWORD *)(v2 + 8056) = *(_DWORD *)(v2 + 8008);
  *(_DWORD *)(v2 + 7208) = *(_DWORD *)(v2 + 9528);
  *(_DWORD *)(v2 + 7408) = *(_DWORD *)(v2 + 7460);
  *(_DWORD *)(v2 + 7160) = *(_DWORD *)(v2 + 7440);
  *(_DWORD *)(v2 + 7320) = *(_DWORD *)(v2 + 9156);
  *(_DWORD *)(v2 + 7336) = v3;
  *(_DWORD *)(v2 + 7200) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 6760) = *(_DWORD *)(v2 + 8280);
  *(_DWORD *)(v2 + 9392) = *(_DWORD *)(v2 + 8544);
  *(_DWORD *)(v2 + 8328) = v1;
  return v7();
}

void sub_1002C1FAC()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 9280) = *(_QWORD *)(v0 + 9600);
  *(_QWORD *)(v0 + 9016) = *(_QWORD *)(v0 + 9608);
  *(_DWORD *)(v0 + 8080) = *(_DWORD *)(v0 + 8032);
  *(_DWORD *)(v0 + 7192) = *(_DWORD *)(v0 + 7436);
  *(_DWORD *)(v0 + 7272) = *(_DWORD *)(v0 + 7456);
  *(_DWORD *)(v0 + 7312) = *(_DWORD *)(v0 + 9328);
  *(_DWORD *)(v0 + 9272) = *(_DWORD *)(v0 + 9656);
  *(_DWORD *)(v0 + 9320) = *(_DWORD *)(v0 + 9616);
  *(_DWORD *)(v0 + 8064) = *(_DWORD *)(v0 + 7992);
  *(_DWORD *)(v0 + 7256) = *(_DWORD *)(v0 + 7500);
  *(_DWORD *)(v0 + 7280) = *(_DWORD *)(v0 + 9424);
  *(_DWORD *)(v0 + 7128) = *(_DWORD *)(v0 + 7616);
  *(_DWORD *)(v0 + 7344) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 7168) = *(_DWORD *)(v0 + 7464);
  *(_DWORD *)(v0 + 7184) = *(_DWORD *)(v0 + 7488);
  *(_DWORD *)(v0 + 7296) = *(_DWORD *)(v0 + 7484);
  *(_DWORD *)(v0 + 9104) = *(_DWORD *)(v0 + 9440);
  *(_DWORD *)(v0 + 7424) = *(_DWORD *)(v0 + 9664);
  *(_DWORD *)(v0 + 7304) = *(_DWORD *)(v0 + 7480);
  *(_DWORD *)(v0 + 7176) = *(_DWORD *)(v0 + 9248);
  *(_DWORD *)(v0 + 7288) = *(_DWORD *)(v0 + 7476);
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8040) = *(_DWORD *)(v0 + 8020);
  *(_DWORD *)(v0 + 7416) = *(_DWORD *)(v0 + 7432);
  *(_DWORD *)(v0 + 8116) = *(_DWORD *)(v0 + 8024);
  *(_DWORD *)(v0 + 7264) = v1;
  *(_DWORD *)(v0 + 7328) = v1;
  *(_DWORD *)(v0 + 8272) = *(_DWORD *)(v0 + 7984);
  *(_DWORD *)(v0 + 8056) = *(_DWORD *)(v0 + 8008);
  *(_DWORD *)(v0 + 7208) = *(_DWORD *)(v0 + 9528);
  *(_DWORD *)(v0 + 7408) = *(_DWORD *)(v0 + 7460);
  v2 = *(_DWORD *)(v0 + 7440);
  *(_DWORD *)(v0 + 7224) = v2;
  *(_DWORD *)(v0 + 7160) = v2;
  *(_DWORD *)(v0 + 7320) = *(_DWORD *)(v0 + 9156);
  *(_DWORD *)(v0 + 7336) = *(_DWORD *)(v0 + 9408);
  *(_DWORD *)(v0 + 7200) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 6760) = *(_DWORD *)(v0 + 8280);
  *(_DWORD *)(v0 + 9392) = *(_DWORD *)(v0 + 8544);
  *(_DWORD *)(v0 + 8328) = *(_DWORD *)(v0 + 9592);
  *(_DWORD *)(v0 + 8236) = 82;
  *(_DWORD *)(v0 + 7216) = 44;
  v3 = *(_QWORD *)(v0 + 2720);
  *(_QWORD *)(v0 + 7240) = v3;
  *(_QWORD *)(v0 + 7248) = v3;
  JUMPOUT(0x1002C2100);
}

void sub_1002C2108(int a1@<W5>, int a2@<W7>, char a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  BOOL v7;
  int v8;
  int v9;
  int v10;

  *(_DWORD *)(v4 + 7776) = 0;
  *(_DWORD *)(v4 + 9488) = 0;
  v7 = *(_DWORD *)(v4 + 9240) == ((((a3 & 0xEE) - 119) | 0x10) - 62);
  *(_DWORD *)(v4 + 9472) = v7;
  v8 = *(_DWORD *)(v4 + 9328);
  if (v7)
    v8 = v6;
  *(_DWORD *)(v4 + 9328) = v8;
  v9 = *(_DWORD *)(v4 + 9312);
  if (!v7)
    v9 = v6;
  *(_DWORD *)(v4 + 9312) = v9;
  if (v7)
    v10 = 61;
  else
    v10 = 62;
  *(_DWORD *)(v4 + 8236) = v10;
  *(_QWORD *)(v4 + 9280) = *(_QWORD *)(v4 + 9600);
  *(_QWORD *)(v4 + 9016) = *(_QWORD *)(v4 + 9608);
  *(_DWORD *)(v4 + 8332) = a1;
  *(_DWORD *)(v4 + 9128) = v6;
  *(_DWORD *)(v4 + 9116) = v3;
  *(_DWORD *)(v4 + 7976) = *(_DWORD *)(v4 + 8212);
  *(_DWORD *)(v4 + 9320) = *(_DWORD *)(v4 + 9616);
  *(_DWORD *)(v4 + 8548) = a2;
  *(_DWORD *)(v4 + 9480) = *(_DWORD *)(v4 + 8136);
  *(_DWORD *)(v4 + 8456) = *(_DWORD *)(v4 + 9664);
  *(_DWORD *)(v4 + 9632) = *(_DWORD *)(v4 + 9072);
  *(_DWORD *)(v4 + 0x2000) = v5;
  *(_DWORD *)(v4 + 9224) = *(_DWORD *)(v4 + 9400);
  *(_DWORD *)(v4 + 9688) = 1;
  *(_DWORD *)(v4 + 7792) = 1;
  *(_DWORD *)(v4 + 9504) = 1;
  *(_DWORD *)(v4 + 7784) = 1;
  *(_DWORD *)(v4 + 9496) = 1;
  *(_DWORD *)(v4 + 9576) = 1;
  *(_DWORD *)(v4 + 8328) = *(_DWORD *)(v4 + 9592);
  *(_DWORD *)(v4 + 9456) = 1;
  *(_DWORD *)(v4 + 9464) = 1;
  *(_DWORD *)(v4 + 9736) = 1;
  *(_DWORD *)(v4 + 9680) = 0;
  JUMPOUT(0x100326F74);
}

uint64_t sub_1002C2214(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;

  v6 = (a2 + v2 - 544);
  v7 = *(_QWORD *)(v5 + 8 * (v2 ^ (6588 * (*(_DWORD *)(v3 + 9240) != 89)))) + 2235371539 - v6;
  *(_QWORD *)(v3 + 7144) = v6;
  v8 = (uint64_t (*)(void))(v7 - 8);
  *(_DWORD *)(v3 + 8236) = 89;
  *(_DWORD *)(v3 + 7216) = 59;
  *(_QWORD *)(v3 + 9280) = *(_QWORD *)(v3 + 9600);
  *(_QWORD *)(v3 + 9016) = *(_QWORD *)(v3 + 9608);
  v9 = *(_QWORD *)(v3 + 6728);
  *(_QWORD *)(v3 + 7240) = v9;
  *(_QWORD *)(v3 + 7248) = *(_QWORD *)(v3 + 3264);
  *(_QWORD *)(v3 + 7232) = v9;
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 7192) = *(_DWORD *)(v3 + 7436);
  *(_DWORD *)(v3 + 7272) = *(_DWORD *)(v3 + 7456);
  *(_DWORD *)(v3 + 7312) = *(_DWORD *)(v3 + 9328);
  *(_DWORD *)(v3 + 9272) = v4;
  *(_DWORD *)(v3 + 9320) = *(_DWORD *)(v3 + 9616);
  *(_DWORD *)(v3 + 8064) = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 7256) = *(_DWORD *)(v3 + 7500);
  *(_DWORD *)(v3 + 7280) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 7128) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 7344) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 7168) = *(_DWORD *)(v3 + 7464);
  *(_DWORD *)(v3 + 7184) = *(_DWORD *)(v3 + 7488);
  *(_DWORD *)(v3 + 7296) = *(_DWORD *)(v3 + 7484);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 7424) = *(_DWORD *)(v3 + 9664);
  *(_DWORD *)(v3 + 7304) = *(_DWORD *)(v3 + 7480);
  *(_DWORD *)(v3 + 7264) = *(_DWORD *)(v3 + 7136);
  *(_DWORD *)(v3 + 7176) = *(_DWORD *)(v3 + 9248);
  *(_DWORD *)(v3 + 7288) = *(_DWORD *)(v3 + 7476);
  *(_DWORD *)(v3 + 7224) = v4;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 7416) = *(_DWORD *)(v3 + 7432);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 7328) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7208) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 7408) = *(_DWORD *)(v3 + 7460);
  *(_DWORD *)(v3 + 7160) = *(_DWORD *)(v3 + 7440);
  *(_DWORD *)(v3 + 7320) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 7336) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 7200) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 6760) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  *(_DWORD *)(v3 + 8328) = *(_DWORD *)(v3 + 9592);
  return v8();
}

void sub_1002C23B0()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 9280) = *(_QWORD *)(v0 + 9600);
  *(_QWORD *)(v0 + 9016) = *(_QWORD *)(v0 + 9608);
  *(_DWORD *)(v0 + 8080) = *(_DWORD *)(v0 + 8032);
  *(_DWORD *)(v0 + 7192) = *(_DWORD *)(v0 + 7436);
  *(_DWORD *)(v0 + 7272) = *(_DWORD *)(v0 + 7456);
  *(_DWORD *)(v0 + 7312) = *(_DWORD *)(v0 + 9328);
  *(_DWORD *)(v0 + 9320) = *(_DWORD *)(v0 + 9616);
  *(_DWORD *)(v0 + 8064) = *(_DWORD *)(v0 + 7992);
  *(_DWORD *)(v0 + 7256) = *(_DWORD *)(v0 + 7500);
  *(_DWORD *)(v0 + 7280) = *(_DWORD *)(v0 + 9424);
  *(_DWORD *)(v0 + 7128) = *(_DWORD *)(v0 + 7616);
  *(_DWORD *)(v0 + 7344) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 7168) = *(_DWORD *)(v0 + 7464);
  *(_DWORD *)(v0 + 7184) = *(_DWORD *)(v0 + 7488);
  *(_DWORD *)(v0 + 7296) = *(_DWORD *)(v0 + 7484);
  *(_DWORD *)(v0 + 9104) = *(_DWORD *)(v0 + 9440);
  *(_DWORD *)(v0 + 7424) = *(_DWORD *)(v0 + 9664);
  *(_DWORD *)(v0 + 7304) = *(_DWORD *)(v0 + 7480);
  *(_DWORD *)(v0 + 7176) = *(_DWORD *)(v0 + 9248);
  *(_DWORD *)(v0 + 7288) = *(_DWORD *)(v0 + 7476);
  *(_DWORD *)(v0 + 9272) = v1;
  *(_DWORD *)(v0 + 7224) = v1;
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8040) = *(_DWORD *)(v0 + 8020);
  *(_DWORD *)(v0 + 7416) = *(_DWORD *)(v0 + 7432);
  *(_DWORD *)(v0 + 8116) = *(_DWORD *)(v0 + 8024);
  *(_DWORD *)(v0 + 7328) = *(_DWORD *)(v0 + 8000);
  *(_DWORD *)(v0 + 8272) = *(_DWORD *)(v0 + 7984);
  *(_DWORD *)(v0 + 8056) = *(_DWORD *)(v0 + 8008);
  *(_DWORD *)(v0 + 7208) = *(_DWORD *)(v0 + 9528);
  *(_DWORD *)(v0 + 7408) = *(_DWORD *)(v0 + 7460);
  *(_DWORD *)(v0 + 7160) = *(_DWORD *)(v0 + 7440);
  *(_DWORD *)(v0 + 7320) = *(_DWORD *)(v0 + 9156);
  v2 = *(_DWORD *)(v0 + 7452);
  *(_DWORD *)(v0 + 7336) = *(_DWORD *)(v0 + 9408);
  *(_DWORD *)(v0 + 7200) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 6760) = *(_DWORD *)(v0 + 8280);
  *(_DWORD *)(v0 + 9392) = *(_DWORD *)(v0 + 8544);
  *(_DWORD *)(v0 + 8328) = *(_DWORD *)(v0 + 9592);
  *(_DWORD *)(v0 + 8236) = 90;
  *(_DWORD *)(v0 + 7216) = 62;
  v3 = *(_QWORD *)(v0 + 6728);
  *(_QWORD *)(v0 + 7240) = v3;
  *(_QWORD *)(v0 + 7248) = *(_QWORD *)(v0 + 3344);
  *(_QWORD *)(v0 + 7232) = v3;
  *(_DWORD *)(v0 + 7264) = *(_DWORD *)(v0 + 3292);
  *(_DWORD *)(v0 + 9736) = v2;
  JUMPOUT(0x10031D888);
}

uint64_t sub_1002C2510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)(v13 + 9416) = (v9 - 2055263483) & 0xFFBDDC5F;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v16
                                                                                      + 8
                                                                                      * ((13
                                                                                        * ((v9 ^ 0xAF ^ (v8 == (((_BYTE)v9 + 5) & 0x5F ^ 0x1E))) & 1)) | v9));
  *(_DWORD *)(v13 + 8440) = 69;
  *(_DWORD *)(v13 + 9240) = 67;
  *(_QWORD *)(v13 + 8408) = *(_QWORD *)(v13 + 8432);
  *(_QWORD *)(v13 + 8400) = *(_QWORD *)(v13 + 8416);
  *(_QWORD *)(v13 + 8392) = *(_QWORD *)(v13 + 8536);
  *(_QWORD *)(v13 + 8384) = *(_QWORD *)(v13 + 8488);
  *(_QWORD *)(v13 + 8376) = *(_QWORD *)(v13 + 8472);
  *(_QWORD *)(v13 + 8944) = v10;
  *(_QWORD *)(v13 + 8576) = *(_QWORD *)(v13 + 8888);
  *(_QWORD *)(v13 + 8952) = *(_QWORD *)(v13 + 9200);
  *(_QWORD *)(v13 + 9280) = *(_QWORD *)(v13 + 9600);
  *(_QWORD *)(v13 + 9016) = *(_QWORD *)(v13 + 9608);
  *(_DWORD *)(v13 + 8332) = a6;
  *(_DWORD *)(v13 + 9320) = *(_DWORD *)(v13 + 9616);
  *(_DWORD *)(v13 + 8548) = a8;
  *(_DWORD *)(v13 + 9480) = *(_DWORD *)(v13 + 8136);
  *(_DWORD *)(v13 + 8456) = *(_DWORD *)(v13 + 9664);
  *(_DWORD *)(v13 + 0x2000) = v14;
  *(_DWORD *)(v13 + 7600) = v15;
  *(_DWORD *)(v13 + 9224) = *(_DWORD *)(v13 + 9400);
  *(_DWORD *)(v13 + 8328) = *(_DWORD *)(v13 + 9592);
  *(_DWORD *)(v13 + 9616) = v15;
  *(_QWORD *)(v13 + 8936) = *(_QWORD *)(v13 + 8880);
  v18 = *(_QWORD *)(v13 + 5992);
  v19 = *(_QWORD *)(v13 + 4416);
  v20 = *(_DWORD *)(v13 + 9248);
  *(_DWORD *)(v13 + 9128) = v20;
  *(_DWORD *)(v13 + 9116) = v11;
  *(_DWORD *)(v13 + 9272) = *(_DWORD *)(v13 + 9656);
  *(_DWORD *)(v13 + 8832) = *(_DWORD *)(v13 + 9384);
  *(_DWORD *)(v13 + 9152) = *(_DWORD *)(v13 + 8964);
  *(_DWORD *)(v13 + 8368) = *(_DWORD *)(v13 + 9520);
  *(_DWORD *)(v13 + 8608) = *(_DWORD *)(v13 + 9424);
  *(_DWORD *)(v13 + 8504) = *(_DWORD *)(v13 + 9256);
  *(_DWORD *)(v13 + 8520) = *(_DWORD *)(v13 + 8464);
  *(_DWORD *)(v13 + 8356) = *(_DWORD *)(v13 + 8532);
  *(_DWORD *)(v13 + 8360) = *(_DWORD *)(v13 + 8424);
  *(_DWORD *)(v13 + 9104) = *(_DWORD *)(v13 + 9440);
  *(_DWORD *)(v13 + 8912) = *(_DWORD *)(v13 + 8872);
  *(_DWORD *)(v13 + 8512) = *(_DWORD *)(v13 + 8480);
  *(_DWORD *)(v13 + 8920) = *(_DWORD *)(v13 + 9160);
  *(_DWORD *)(v13 + 8496) = *(_DWORD *)(v13 + 9528);
  *(_DWORD *)(v13 + 9264) = *(_DWORD *)(v13 + 9624);
  *(_DWORD *)(v13 + 8904) = *(_DWORD *)(v13 + 8616);
  *(_DWORD *)(v13 + 8552) = *(_DWORD *)(v13 + 9408);
  *(_DWORD *)(v13 + 8900) = *(_DWORD *)(v13 + 9096);
  *(_DWORD *)(v13 + 9184) = *(_DWORD *)(v13 + 9584);
  *(_DWORD *)(v13 + 8572) = *(_DWORD *)(v13 + 8984);
  *(_DWORD *)(v13 + 8352) = v12;
  *(_DWORD *)(v13 + 8932) = *(_DWORD *)(v13 + 8612);
  *(_QWORD *)(v13 + 9600) = v18;
  *(_QWORD *)(v13 + 9608) = v19;
  v21 = *(unsigned int *)(v13 + 9120);
  *(_DWORD *)(v13 + 9664) = v20;
  *(_DWORD *)(v13 + 9632) = *(_DWORD *)(v13 + 9072);
  *(_DWORD *)(v13 + 9592) = 41;
  return v17(v15, a2, 0, v15, a5, v21);
}

uint64_t sub_1002C2708@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((((((a1 + 115) | 0x46) - 46) <= (*(_BYTE *)(v1 + 8280) - 9))
                                * (a1 - 7594)) ^ a1)))();
}

uint64_t sub_1002C274C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>)
{
  unsigned __int8 v5;
  unsigned int *v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v5 < ((a5 - 106) ^ 0x90 ^ ((a5 - 101) | 4) ^ 0xDFu);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD))(v7 + 8 * (((2 * v8) | (16 * v8)) ^ (a5 - 4970))))(a1, a2, v6[2260], v6[2152], v6[2137], a3, a4, v6[2083]);
}

uint64_t sub_1002C27B8@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((230
                                * (((a1 - 73) ^ (v1 < (((a1 - 73) & 0xF7) + 69))) & 1)) ^ a1)))();
}

uint64_t sub_1002C2808()
{
  unsigned __int8 v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((21 * ((((82 * v1) ^ 0xBB) & 0xFEu) > v0)) ^ v1))
                            - ((2553 * (v1 ^ 0xA07)) ^ 0x27E0)))();
}

uint64_t sub_1002C2858()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 < ((v1 + 42) ^ 0x6Au)) | v1))
                            - ((v1 - 3733) ^ 0x16DLL)))();
}

uint64_t sub_1002C2890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  v17 = v7 != 73;
  v18 = (a7 - v11 - 77);
  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v10
                                                          + *(_QWORD *)(v16
                                                                      + 8
                                                                      * ((((v9 + a7 - 353) ^ (v9 + 831)) * v17) ^ a7))
                                                          - v18
                                                          - 8);
  *(_QWORD *)(v12 + 7664) = *(_QWORD *)(v12 + 6904);
  *(_QWORD *)(v12 + 7680) = *(_QWORD *)(v12 + 6872);
  *(_QWORD *)(v12 + 7656) = *(_QWORD *)(v12 + 6864);
  *(_QWORD *)(v12 + 7688) = *(_QWORD *)(v12 + 6888);
  *(_QWORD *)(v12 + 7696) = *(_QWORD *)(v12 + 6880);
  *(_QWORD *)(v12 + 7704) = *(_QWORD *)(v12 + 6896);
  *(_QWORD *)(v12 + 9568) = *(_QWORD *)(v12 + 8944);
  *(_QWORD *)(v12 + 8888) = *(_QWORD *)(v12 + 8576);
  *(_QWORD *)(v12 + 9200) = *(_QWORD *)(v12 + 8952);
  *(_QWORD *)(v12 + 8880) = *(_QWORD *)(v12 + 8936);
  *(_DWORD *)(v12 + 7712) = *(_DWORD *)(v12 + 6928);
  *(_DWORD *)(v12 + 7936) = v14;
  *(_DWORD *)(v12 + 9448) = *(_DWORD *)(v12 + 9116);
  *(_DWORD *)(v12 + 8312) = *(_DWORD *)(v12 + 7904);
  *(_DWORD *)(v12 + 6944) = *(_DWORD *)(v12 + 7040);
  *(_DWORD *)(v12 + 7648) = *(_DWORD *)(v12 + 6856);
  *(_DWORD *)(v12 + 9384) = *(_DWORD *)(v12 + 8832);
  *(_DWORD *)(v12 + 8964) = *(_DWORD *)(v12 + 9152);
  *(_DWORD *)(v12 + 6936) = *(_DWORD *)(v12 + 6952);
  *(_DWORD *)(v12 + 9520) = a5;
  *(_DWORD *)(v12 + 7552) = *(_DWORD *)(v12 + 6984);
  *(_DWORD *)(v12 + 6968) = *(_DWORD *)(v12 + 7000);
  *(_DWORD *)(v12 + 7952) = v15;
  *(_DWORD *)(v12 + 7888) = *(_DWORD *)(v12 + 7912);
  *(_DWORD *)(v12 + 8872) = *(_DWORD *)(v12 + 8912);
  *(_DWORD *)(v12 + 7640) = *(_DWORD *)(v12 + 6912);
  *(_DWORD *)(v12 + 6992) = *(_DWORD *)(v12 + 7008);
  *(_DWORD *)(v12 + 7672) = *(_DWORD *)(v12 + 6920);
  *(_DWORD *)(v12 + 9136) = *(_DWORD *)(v12 + 9056);
  *(_DWORD *)(v12 + 9160) = *(_DWORD *)(v12 + 8920);
  *(_DWORD *)(v12 + 7592) = *(_DWORD *)(v12 + 7080);
  *(_DWORD *)(v12 + 8616) = *(_DWORD *)(v12 + 8904);
  *(_DWORD *)(v12 + 7584) = *(_DWORD *)(v12 + 7088);
  *(_DWORD *)(v12 + 7576) = *(_DWORD *)(v12 + 7072);
  *(_DWORD *)(v12 + 9096) = *(_DWORD *)(v12 + 8900);
  *(_DWORD *)(v12 + 9584) = v8;
  *(_DWORD *)(v12 + 8984) = *(_DWORD *)(v12 + 8572);
  *(_DWORD *)(v12 + 8612) = *(_DWORD *)(v12 + 8932);
  *(_DWORD *)(v12 + 7632) = *(_DWORD *)(v12 + 9680);
  *(_QWORD *)(v12 + 7144) = v18;
  *(_DWORD *)(v12 + 9424) = a3;
  *(_DWORD *)(v12 + 7280) = a3;
  LODWORD(v18) = *(_DWORD *)(v12 + 9256);
  *(_DWORD *)(v12 + 8760) = v18;
  *(_DWORD *)(v12 + 7344) = v18;
  *(_DWORD *)(v12 + 7424) = v13;
  *(_DWORD *)(v12 + 8744) = a4;
  *(_DWORD *)(v12 + 9736) = a4;
  *(_DWORD *)(v12 + 6744) = a4;
  *(_DWORD *)(v12 + 8628) = a4;
  *(_DWORD *)(v12 + 7224) = a4;
  LODWORD(v18) = *(_DWORD *)(v12 + 7152);
  *(_DWORD *)(v12 + 8000) = v18;
  *(_DWORD *)(v12 + 7328) = v18;
  LODWORD(v18) = *(_DWORD *)(v12 + 8188);
  *(_DWORD *)(v12 + 9528) = v18;
  *(_DWORD *)(v12 + 7208) = v18;
  LODWORD(v18) = *(_DWORD *)(v12 + 8552);
  *(_DWORD *)(v12 + 9408) = v18;
  *(_DWORD *)(v12 + 7336) = v18;
  LODWORD(v18) = *(_DWORD *)(v12 + 9064);
  *(_DWORD *)(v12 + 8704) = v18;
  *(_DWORD *)(v12 + 7200) = v18;
  *(_DWORD *)(v12 + 9392) = *(_DWORD *)(v12 + 8544);
  *(_DWORD *)(v12 + 7216) = 56;
  *(_DWORD *)(v12 + 6760) = 81;
  v20 = *(_QWORD *)(v12 + 3896);
  *(_QWORD *)(v12 + 9504) = *(_QWORD *)(v12 + 7512);
  *(_QWORD *)(v12 + 9576) = *(_QWORD *)(v12 + 3920);
  *(_QWORD *)(v12 + 9496) = v20;
  *(_DWORD *)(v12 + 8032) = *(_DWORD *)(v12 + 8080);
  *(_DWORD *)(v12 + 8764) = *(_DWORD *)(v12 + 8828);
  *(_DWORD *)(v12 + 8768) = *(_DWORD *)(v12 + 8860);
  *(_DWORD *)(v12 + 9688) = *(_DWORD *)(v12 + 4404);
  *(_DWORD *)(v12 + 9656) = *(_DWORD *)(v12 + 9272);
  *(_DWORD *)(v12 + 7992) = *(_DWORD *)(v12 + 8064);
  *(_DWORD *)(v12 + 8748) = *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 8736) = *(_DWORD *)(v12 + 8792);
  *(_DWORD *)(v12 + 8728) = *(_DWORD *)(v12 + 8816);
  *(_DWORD *)(v12 + 8720) = *(_DWORD *)(v12 + 8968);
  *(_DWORD *)(v12 + 8752) = *(_DWORD *)(v12 + 8136);
  *(_DWORD *)(v12 + 8712) = *(_DWORD *)(v12 + 8868);
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v12 + 8840);
  *(_DWORD *)(v12 + 9440) = *(_DWORD *)(v12 + 9104);
  *(_DWORD *)(v12 + 8688) = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 8680) = *(_DWORD *)(v12 + 8808);
  *(_DWORD *)(v12 + 8020) = *(_DWORD *)(v12 + 8040);
  *(_DWORD *)(v12 + 8024) = *(_DWORD *)(v12 + 8116);
  *(_DWORD *)(v12 + 8672) = *(_DWORD *)(v12 + 8848);
  *(_DWORD *)(v12 + 9632) = *(_DWORD *)(v12 + 9072);
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 7984) = *(_DWORD *)(v12 + 8272);
  *(_DWORD *)(v12 + 8008) = *(_DWORD *)(v12 + 8056);
  *(_DWORD *)(v12 + 9432) = *(_DWORD *)(v12 + 9172);
  *(_DWORD *)(v12 + 8656) = *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 8648) = *(_DWORD *)(v12 + 9004);
  *(_DWORD *)(v12 + 8640) = *(_DWORD *)(v12 + 8784);
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 7240) = v20;
  *(_QWORD *)(v12 + 7248) = *(_QWORD *)(v12 + 2224);
  *(_QWORD *)(v12 + 7232) = v20;
  *(_DWORD *)(v12 + 8260) = a6;
  *(_DWORD *)(v12 + 7192) = *(_DWORD *)(v12 + 7436);
  *(_DWORD *)(v12 + 7272) = *(_DWORD *)(v12 + 7456);
  *(_DWORD *)(v12 + 7312) = *(_DWORD *)(v12 + 9328);
  *(_DWORD *)(v12 + 7256) = *(_DWORD *)(v12 + 7500);
  *(_DWORD *)(v12 + 7128) = *(_DWORD *)(v12 + 7616);
  *(_DWORD *)(v12 + 7168) = *(_DWORD *)(v12 + 7464);
  *(_DWORD *)(v12 + 7184) = *(_DWORD *)(v12 + 7488);
  *(_DWORD *)(v12 + 7296) = *(_DWORD *)(v12 + 7484);
  *(_DWORD *)(v12 + 7304) = *(_DWORD *)(v12 + 7480);
  LODWORD(v18) = *(_DWORD *)(v12 + 9156);
  *(_DWORD *)(v12 + 7264) = v18;
  *(_DWORD *)(v12 + 7176) = *(_DWORD *)(v12 + 9248);
  *(_DWORD *)(v12 + 7288) = *(_DWORD *)(v12 + 7476);
  *(_DWORD *)(v12 + 7416) = *(_DWORD *)(v12 + 7432);
  *(_DWORD *)(v12 + 7112) = *(_DWORD *)(v12 + 0x2000);
  *(_DWORD *)(v12 + 7408) = *(_DWORD *)(v12 + 7460);
  *(_DWORD *)(v12 + 9624) = *(_DWORD *)(v12 + 9264);
  *(_DWORD *)(v12 + 7160) = *(_DWORD *)(v12 + 7440);
  *(_DWORD *)(v12 + 7320) = v18;
  *(_DWORD *)(v12 + 9400) = *(_DWORD *)(v12 + 9224);
  *(_DWORD *)(v12 + 8236) = *(_DWORD *)(v12 + 9240);
  return v19(a1, a2, v20);
}

uint64_t sub_1002C2C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                                 + 8
                                                                                                 * (v6 ^ (244 * (v5 > 0x1Fu))))
                                                                                     - (((v6 - 3150) | 0x150u) ^ 0x374)))(2235367631, 10, 51, *(_QWORD *)(v7 + 9016), a5, *(unsigned int *)(v7 + 7448));
}

uint64_t sub_1002C2CAC()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v1 >= (((v0 + 112) ^ 0xCF) + 31);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3
                                                                                + 8
                                                                                * ((2 * v4) | (4 * v4) | (v0 + 3250)))
                                                                    - 4))(1, 44, 74, *(unsigned int *)(v2 + 7920));
}

uint64_t sub_1002C2CF8()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 >= ((v1 ^ 0x9C) - 10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v3 | (32 * v3) | v1)) - ((91 * (v1 ^ 0x59Du)) ^ 0x17D9)))();
}

uint64_t sub_1002C2D44()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4034 * (v1 >= ((v0 + 112) ^ 0x7Du))) ^ v0))
                            - ((v0 + 1640) ^ 0x1E3DLL)))();
}

uint64_t sub_1002C2D7C()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (15 * (v0 > 0x3Du)))) - ((v1 - 9773) ^ 0x118)))();
}

uint64_t sub_1002C2DB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  int v13;
  int v14;

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10
                                                                      + 8
                                                                      * (int)(((v5 + ((v4 + 3212488) | 0x850C0016) + 1459)
                                                                             * (*(_DWORD *)(v6 + 8280) == 71)) ^ v4))
                                                          - 4);
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  v12 = *(_QWORD *)(v6 + 3128);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 3232);
  *(_QWORD *)(v6 + 9496) = v12;
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = a4;
  v13 = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 8312) = v13;
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8748) = v7;
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 9424) = v9;
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = v8;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7152);
  v14 = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 8664) = v14;
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  *(_DWORD *)(v6 + 9736) = v14;
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 9528) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 9408) = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  return v11(a1, a2, v12);
}

void sub_1002C306C()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v0 + 9464) = 994009437;
  *(_DWORD *)(*(_QWORD *)(v0 + 8248) + 4240) = 0;
  *(_DWORD *)(v0 + 4292) = 71;
  *(_QWORD *)(v0 + 9416) = v1;
  *(_QWORD *)(v0 + 9456) = *(_QWORD *)(v0 + 7048);
  *(_QWORD *)(v0 + 9608) = *(_QWORD *)(v0 + 3800);
  *(_DWORD *)(v0 + 5344) = *(_DWORD *)(v0 + 8548);
  JUMPOUT(0x1002C30C4);
}

uint64_t sub_1002C310C(int a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v10 = (v6 + 85521354) | 0x80241014;
  *(_QWORD *)(v9 + 9416) = v10;
  v11 = *(uint64_t (**)(void))(v7 + 8 * (int)(((v10 + 2059595863) * (v8 == 96)) ^ v6));
  *(_DWORD *)(v9 + 8800) = 122;
  *(_DWORD *)(v9 + 8440) = 63;
  *(_DWORD *)(v9 + 9688) = 1;
  *(_QWORD *)(v9 + 8408) = *(_QWORD *)(v9 + 8432);
  *(_QWORD *)(v9 + 8400) = *(_QWORD *)(v9 + 8416);
  *(_QWORD *)(v9 + 8392) = *(_QWORD *)(v9 + 8536);
  *(_QWORD *)(v9 + 8384) = *(_QWORD *)(v9 + 8488);
  *(_QWORD *)(v9 + 8376) = *(_QWORD *)(v9 + 8472);
  *(_QWORD *)(v9 + 8944) = *(_QWORD *)(v9 + 9568);
  *(_QWORD *)(v9 + 8576) = *(_QWORD *)(v9 + 8888);
  *(_QWORD *)(v9 + 8952) = *(_QWORD *)(v9 + 9200);
  *(_QWORD *)(v9 + 8936) = *(_QWORD *)(v9 + 8880);
  *(_QWORD *)(v9 + 3944) = *(_QWORD *)(v9 + 4184);
  *(_QWORD *)(v9 + 6104) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 8332) = a6;
  *(_DWORD *)(v9 + 9116) = *(_DWORD *)(v9 + 9448);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8832) = *(_DWORD *)(v9 + 9384);
  *(_DWORD *)(v9 + 3940) = *(_DWORD *)(v9 + 5988);
  *(_DWORD *)(v9 + 9152) = *(_DWORD *)(v9 + 8964);
  *(_DWORD *)(v9 + 8548) = a1;
  *(_DWORD *)(v9 + 8368) = *(_DWORD *)(v9 + 9520);
  *(_DWORD *)(v9 + 8608) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 8504) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 9480) = a4;
  *(_DWORD *)(v9 + 8520) = *(_DWORD *)(v9 + 8464);
  *(_DWORD *)(v9 + 8356) = *(_DWORD *)(v9 + 8532);
  *(_DWORD *)(v9 + 6100) = *(_DWORD *)(v9 + 8312);
  *(_DWORD *)(v9 + 8360) = *(_DWORD *)(v9 + 8424);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 8456) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 8912) = *(_DWORD *)(v9 + 8872);
  *(_DWORD *)(v9 + 8512) = *(_DWORD *)(v9 + 8480);
  *(_DWORD *)(v9 + 9128) = a4;
  *(_DWORD *)(v9 + 8920) = *(_DWORD *)(v9 + 9160);
  *(_DWORD *)(v9 + 0x2000) = a3;
  *(_DWORD *)(v9 + 8496) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 9264) = *(_DWORD *)(v9 + 9624);
  *(_DWORD *)(v9 + 8904) = *(_DWORD *)(v9 + 8616);
  *(_DWORD *)(v9 + 8552) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9224) = *(_DWORD *)(v9 + 9400);
  *(_DWORD *)(v9 + 8900) = *(_DWORD *)(v9 + 9096);
  *(_DWORD *)(v9 + 9736) = 1;
  *(_DWORD *)(v9 + 9184) = *(_DWORD *)(v9 + 9584);
  *(_DWORD *)(v9 + 8572) = *(_DWORD *)(v9 + 8984);
  *(_DWORD *)(v9 + 8352) = *(_DWORD *)(v9 + 9040);
  *(_DWORD *)(v9 + 8932) = *(_DWORD *)(v9 + 8612);
  *(_DWORD *)(v9 + 8328) = *(_DWORD *)(v9 + 9592);
  return v11();
}

void sub_1002C3304(int a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 9416) = (v6 - 2853);
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 9568);
  *(_QWORD *)(v7 + 8576) = *(_QWORD *)(v7 + 8888);
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 9200);
  *(_QWORD *)(v7 + 8936) = *(_QWORD *)(v7 + 8880);
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 8332) = a6;
  *(_DWORD *)(v7 + 9116) = *(_DWORD *)(v7 + 9448);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 8832) = *(_DWORD *)(v7 + 9384);
  *(_DWORD *)(v7 + 9152) = *(_DWORD *)(v7 + 8964);
  *(_DWORD *)(v7 + 8548) = a1;
  *(_DWORD *)(v7 + 8368) = *(_DWORD *)(v7 + 9520);
  *(_DWORD *)(v7 + 8608) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 9480) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 8456) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 8912) = *(_DWORD *)(v7 + 8872);
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 8628) = a4;
  *(_DWORD *)(v7 + 9128) = a4;
  *(_DWORD *)(v7 + 8920) = *(_DWORD *)(v7 + 9160);
  *(_DWORD *)(v7 + 0x2000) = a3;
  *(_DWORD *)(v7 + 8496) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8904) = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 8552) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 9224) = *(_DWORD *)(v7 + 9400);
  *(_DWORD *)(v7 + 8900) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 9184) = *(_DWORD *)(v7 + 9584);
  *(_DWORD *)(v7 + 8572) = *(_DWORD *)(v7 + 8984);
  *(_DWORD *)(v7 + 8352) = *(_DWORD *)(v7 + 9040);
  *(_DWORD *)(v7 + 8932) = *(_DWORD *)(v7 + 8612);
  *(_DWORD *)(v7 + 8328) = *(_DWORD *)(v7 + 9592);
  JUMPOUT(0x1002C3470);
}

uint64_t sub_1002C34B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v8 + 8 * (((v5 - 4633 + ((v5 - 4250) | 0x122)) * (v6 > 0x57)) ^ v5))
                                                                                              - 12))(59, a2, a3, a4, a5, *(unsigned int *)(v7 + 8196), *(unsigned int *)(v7 + 8456));
}

uint64_t sub_1002C3504@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 + 542) ^ 0x12D5) * (v1 < 0x5Cu)) ^ a1)) - 8))();
}

uint64_t sub_1002C3538@<X0>(unsigned __int8 a1@<W0>, int a2@<W8>)
{
  unsigned __int8 v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((_BYTE)a2 + 9) & 0x6Bu ^ a1) > v2) * (((a2 - 1555809527) ^ 0xA3444133) - 2651)) ^ (a2 - 841))))();
}

uint64_t sub_1002C3580(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  int v19;

  v14 = ((((v7 + 85982885) | *(_DWORD *)(v10 + 1876)) ^ (v8 + 1323)) * (v6 != 89)) ^ v7;
  v15 = (v7 - 2059551234) & 0xFFFF50B7;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 + 8 * v14) - (v15 ^ (v9 + 8)));
  *(_QWORD *)(v10 + 7664) = *(_QWORD *)(v10 + 6904);
  *(_QWORD *)(v10 + 7680) = *(_QWORD *)(v10 + 6872);
  *(_QWORD *)(v10 + 7656) = *(_QWORD *)(v10 + 6864);
  *(_QWORD *)(v10 + 7688) = *(_QWORD *)(v10 + 6888);
  *(_QWORD *)(v10 + 7696) = *(_QWORD *)(v10 + 6880);
  *(_QWORD *)(v10 + 7704) = *(_QWORD *)(v10 + 6896);
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 7712) = *(_DWORD *)(v10 + 6928);
  *(_DWORD *)(v10 + 7936) = v11;
  *(_DWORD *)(v10 + 8312) = *(_DWORD *)(v10 + 7904);
  *(_DWORD *)(v10 + 6944) = *(_DWORD *)(v10 + 7040);
  *(_DWORD *)(v10 + 7648) = *(_DWORD *)(v10 + 6856);
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 6936) = *(_DWORD *)(v10 + 6952);
  *(_DWORD *)(v10 + 7552) = *(_DWORD *)(v10 + 6984);
  *(_DWORD *)(v10 + 6968) = *(_DWORD *)(v10 + 7000);
  *(_DWORD *)(v10 + 7952) = v12;
  *(_DWORD *)(v10 + 7888) = *(_DWORD *)(v10 + 7912);
  *(_DWORD *)(v10 + 7640) = *(_DWORD *)(v10 + 6912);
  *(_DWORD *)(v10 + 7672) = *(_DWORD *)(v10 + 6920);
  *(_DWORD *)(v10 + 8020) = *(_DWORD *)(v10 + 8040);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8000) = *(_DWORD *)(v10 + 7152);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  v17 = *(_DWORD *)(v10 + 7008);
  *(_DWORD *)(v10 + 6992) = v17;
  *(_DWORD *)(v10 + 9736) = v17;
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 7592) = *(_DWORD *)(v10 + 7080);
  *(_DWORD *)(v10 + 9528) = *(_DWORD *)(v10 + 8188);
  *(_DWORD *)(v10 + 7584) = *(_DWORD *)(v10 + 7088);
  *(_DWORD *)(v10 + 7576) = *(_DWORD *)(v10 + 7072);
  *(_DWORD *)(v10 + 7632) = *(_DWORD *)(v10 + 9680);
  *(_QWORD *)(v10 + 9416) = v15;
  *(_DWORD *)(v10 + 9520) = a6;
  *(_DWORD *)(v10 + 8368) = a6;
  LODWORD(v15) = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 8760) = v15;
  *(_DWORD *)(v10 + 8504) = v15;
  LODWORD(v15) = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 8752) = v15;
  *(_DWORD *)(v10 + 9480) = v15;
  *(_DWORD *)(v10 + 8440) = 93;
  *(_DWORD *)(v10 + 8280) = 97;
  *(_QWORD *)(v10 + 9568) = *(_QWORD *)(v10 + 8944);
  *(_QWORD *)(v10 + 8888) = *(_QWORD *)(v10 + 8576);
  *(_QWORD *)(v10 + 9200) = *(_QWORD *)(v10 + 8952);
  *(_QWORD *)(v10 + 8880) = *(_QWORD *)(v10 + 8936);
  v18 = *(_QWORD *)(v10 + 2208);
  *(_QWORD *)(v10 + 9504) = *(_QWORD *)(v10 + 7512);
  *(_QWORD *)(v10 + 9576) = *(_QWORD *)(v10 + 2192);
  *(_QWORD *)(v10 + 9496) = *(_QWORD *)(v10 + 2432);
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 9688) = *(_DWORD *)(v10 + 4404);
  v19 = *(_DWORD *)(v10 + 8176);
  *(_DWORD *)(v10 + 9448) = *(_DWORD *)(v10 + 9116);
  *(_DWORD *)(v10 + 9656) = *(_DWORD *)(v10 + 9272);
  *(_DWORD *)(v10 + 9384) = *(_DWORD *)(v10 + 8832);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8964) = *(_DWORD *)(v10 + 9152);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 9424) = a5;
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 9440) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8872) = *(_DWORD *)(v10 + 8912);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 9136) = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9632) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 9160) = *(_DWORD *)(v10 + 8920);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8616) = *(_DWORD *)(v10 + 8904);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 9408) = *(_DWORD *)(v10 + 8552);
  *(_DWORD *)(v10 + 8704) = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 9096) = *(_DWORD *)(v10 + 8900);
  *(_DWORD *)(v10 + 9584) = *(_DWORD *)(v10 + 9184);
  *(_DWORD *)(v10 + 8984) = *(_DWORD *)(v10 + 8572);
  *(_DWORD *)(v10 + 8612) = *(_DWORD *)(v10 + 8932);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  *(_QWORD *)(v10 + 8408) = *(_QWORD *)(v10 + 8432);
  *(_QWORD *)(v10 + 8400) = *(_QWORD *)(v10 + 8416);
  *(_QWORD *)(v10 + 8392) = *(_QWORD *)(v10 + 8536);
  *(_QWORD *)(v10 + 8384) = *(_QWORD *)(v10 + 8488);
  *(_QWORD *)(v10 + 8376) = *(_QWORD *)(v10 + 8472);
  *(_DWORD *)(v10 + 9128) = v19;
  *(_DWORD *)(v10 + 8520) = *(_DWORD *)(v10 + 8464);
  *(_DWORD *)(v10 + 8356) = *(_DWORD *)(v10 + 8532);
  *(_DWORD *)(v10 + 8360) = *(_DWORD *)(v10 + 8424);
  *(_DWORD *)(v10 + 8512) = *(_DWORD *)(v10 + 8480);
  *(_DWORD *)(v10 + 8496) = a5;
  *(_DWORD *)(v10 + 8352) = a3;
  return v16(a1, a2, v18, a5);
}

uint64_t sub_1002C38D4@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  unsigned __int8 v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((((a1 + 102) ^ v2) & 0xBDu) > v1)
                                          * (((2 * a1) ^ 0x2C50) - 10696)) ^ a1))
                            - 8))();
}

uint64_t sub_1002C3918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * ((45 * (v6 < (v7 & 0xBD ^ 0x9Cu))) ^ v7 & 0x1618BDBDu))
                                                                                              - ((7
                                                                                                * (v7 & 0x1618BDBD ^ 0x708u)) ^ 0x1248)))(a1, a2, *(unsigned int *)(v8 + 4100), a4, a5, a6, *(unsigned int *)(v8 + 6756));
}

uint64_t sub_1002C397C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 < ((((v1 ^ 0x57) - 6) & 0x7F) - 57)) * ((v1 ^ 0x2757) - 8879)) | v1 ^ 0x2757)))();
}

uint64_t sub_1002C39C0()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 < ((v1 + 71) ^ 8u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2 * (((v1 + 42) ^ v3) & 1)) & 0xFB | (4
                                                                                                 * (((v1 - 7894) ^ v3) & 1)) | (v1 - 6874)))
                            - 8))();
}

uint64_t sub_1002C3A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int *v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                               + 8
                                                                               * ((((v3 ^ 0x26C7) - 4781)
                                                                                 * (v4[2070] == 11)) ^ v3))
                                                                   - 12))(a1, v4[2137], a3, v4[1883]);
}

uint64_t sub_1002C3A44()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(*(_QWORD *)(v1 + 9360) + 464) = 32 * *(_DWORD *)(v1 + 7608);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * v0) - 12))(339501438);
}

void sub_1002C3B10()
{
  JUMPOUT(0x1002C3ABCLL);
}

uint64_t sub_1002C3B28(int a1)
{
  unsigned __int8 v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ (a1 + 2881)) - 1382) ^ 0x147A) * (v1 < 0x44u)) ^ v2 ^ (a1 + 2881))))();
}

uint64_t sub_1002C3B58()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (v2 & ~(v0 ^ 0x3C55 ^ (v1 < ((v0 ^ 0xF8) - 51))) ^ v0 ^ 0x3C55))
                            - 4))();
}

uint64_t sub_1002C3B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v14 = (v7 + a7 - 2421);
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13
                                                                      + 8
                                                                      * (a7 ^ (588
                                                                             * (*(_DWORD *)(v9 + 8280) == 75))))
                                                          + v8
                                                          - v14);
  *(_QWORD *)(v9 + 7144) = v14;
  *(_QWORD *)(v9 + 7664) = *(_QWORD *)(v9 + 6904);
  *(_QWORD *)(v9 + 7680) = *(_QWORD *)(v9 + 6872);
  *(_QWORD *)(v9 + 7656) = *(_QWORD *)(v9 + 6864);
  *(_QWORD *)(v9 + 7688) = *(_QWORD *)(v9 + 6888);
  *(_QWORD *)(v9 + 7696) = *(_QWORD *)(v9 + 6880);
  *(_QWORD *)(v9 + 7704) = *(_QWORD *)(v9 + 6896);
  *(_QWORD *)(v9 + 9568) = *(_QWORD *)(v9 + 8944);
  *(_QWORD *)(v9 + 8888) = *(_QWORD *)(v9 + 8576);
  *(_QWORD *)(v9 + 9200) = *(_QWORD *)(v9 + 8952);
  *(_QWORD *)(v9 + 8880) = *(_QWORD *)(v9 + 8936);
  *(_DWORD *)(v9 + 7712) = *(_DWORD *)(v9 + 6928);
  *(_DWORD *)(v9 + 7936) = v11;
  *(_DWORD *)(v9 + 9448) = *(_DWORD *)(v9 + 9116);
  *(_DWORD *)(v9 + 8312) = *(_DWORD *)(v9 + 7904);
  *(_DWORD *)(v9 + 6944) = *(_DWORD *)(v9 + 7040);
  *(_DWORD *)(v9 + 7648) = *(_DWORD *)(v9 + 6856);
  *(_DWORD *)(v9 + 9384) = *(_DWORD *)(v9 + 8832);
  *(_DWORD *)(v9 + 8964) = *(_DWORD *)(v9 + 9152);
  *(_DWORD *)(v9 + 6936) = *(_DWORD *)(v9 + 6952);
  *(_DWORD *)(v9 + 9520) = a5;
  *(_DWORD *)(v9 + 7552) = *(_DWORD *)(v9 + 6984);
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 7952) = v12;
  *(_DWORD *)(v9 + 7888) = *(_DWORD *)(v9 + 7912);
  *(_DWORD *)(v9 + 8872) = *(_DWORD *)(v9 + 8912);
  *(_DWORD *)(v9 + 7640) = *(_DWORD *)(v9 + 6912);
  *(_DWORD *)(v9 + 6992) = *(_DWORD *)(v9 + 7008);
  *(_DWORD *)(v9 + 7672) = *(_DWORD *)(v9 + 6920);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 9160) = *(_DWORD *)(v9 + 8920);
  LODWORD(v14) = *(_DWORD *)(v9 + 7000);
  *(_DWORD *)(v9 + 6968) = v14;
  *(_DWORD *)(v9 + 9736) = v14;
  *(_DWORD *)(v9 + 7592) = *(_DWORD *)(v9 + 7080);
  *(_DWORD *)(v9 + 8616) = *(_DWORD *)(v9 + 8904);
  *(_DWORD *)(v9 + 7584) = *(_DWORD *)(v9 + 7088);
  *(_DWORD *)(v9 + 7576) = *(_DWORD *)(v9 + 7072);
  *(_DWORD *)(v9 + 9096) = *(_DWORD *)(v9 + 8900);
  *(_DWORD *)(v9 + 9584) = *(_DWORD *)(v9 + 9184);
  *(_DWORD *)(v9 + 8984) = *(_DWORD *)(v9 + 8572);
  *(_DWORD *)(v9 + 8612) = *(_DWORD *)(v9 + 8932);
  *(_DWORD *)(v9 + 7632) = *(_DWORD *)(v9 + 9680);
  *(_DWORD *)(v9 + 7280) = a3;
  LODWORD(v14) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8760) = v14;
  *(_DWORD *)(v9 + 7344) = v14;
  *(_DWORD *)(v9 + 7424) = v10;
  *(_DWORD *)(v9 + 9424) = a4;
  *(_DWORD *)(v9 + 6744) = a4;
  *(_DWORD *)(v9 + 8136) = a4;
  *(_DWORD *)(v9 + 7224) = a4;
  LODWORD(v14) = *(_DWORD *)(v9 + 7152);
  *(_DWORD *)(v9 + 8000) = v14;
  *(_DWORD *)(v9 + 7328) = v14;
  LODWORD(v14) = *(_DWORD *)(v9 + 8188);
  *(_DWORD *)(v9 + 9528) = v14;
  *(_DWORD *)(v9 + 7208) = v14;
  LODWORD(v14) = *(_DWORD *)(v9 + 8552);
  *(_DWORD *)(v9 + 9408) = v14;
  *(_DWORD *)(v9 + 7336) = v14;
  LODWORD(v14) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8704) = v14;
  *(_DWORD *)(v9 + 7200) = v14;
  *(_DWORD *)(v9 + 9392) = *(_DWORD *)(v9 + 8544);
  *(_DWORD *)(v9 + 7216) = 53;
  *(_DWORD *)(v9 + 6760) = 76;
  v16 = *(_QWORD *)(v9 + 2208);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7512);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 1936);
  *(_QWORD *)(v9 + 9496) = *(_QWORD *)(v9 + 2232);
  *(_DWORD *)(v9 + 8032) = *(_DWORD *)(v9 + 8080);
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 4404);
  *(_DWORD *)(v9 + 9656) = *(_DWORD *)(v9 + 9272);
  *(_DWORD *)(v9 + 7992) = *(_DWORD *)(v9 + 8064);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 9440) = *(_DWORD *)(v9 + 9104);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 8020) = *(_DWORD *)(v9 + 8040);
  *(_DWORD *)(v9 + 8024) = *(_DWORD *)(v9 + 8116);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 9632) = *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 7984) = *(_DWORD *)(v9 + 8272);
  *(_DWORD *)(v9 + 8008) = *(_DWORD *)(v9 + 8056);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  v17 = *(_QWORD *)(v9 + 4184);
  *(_QWORD *)(v9 + 7240) = v17;
  *(_QWORD *)(v9 + 7248) = *(_QWORD *)(v9 + 2224);
  *(_QWORD *)(v9 + 7232) = v17;
  *(_DWORD *)(v9 + 8260) = a6;
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  LODWORD(v17) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7264) = v17;
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 7112) = *(_DWORD *)(v9 + 0x2000);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 9624) = *(_DWORD *)(v9 + 9264);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7320) = v17;
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 8236) = *(_DWORD *)(v9 + 9240);
  return v15(a1, a2, v16);
}

uint64_t sub_1002C3F30()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 ^ 0xCC9) - 10384) * (v0 > 0x27u)) | v1))
                            - ((v1 + 1972392614) & 0x8A6F8FEC)
                            + 1688))();
}

uint64_t sub_1002C3F7C(uint64_t a1, int a2)
{
  unsigned __int8 v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((110 * (v3 ^ 0xD3) + ((4 * v3) ^ 0x34) + 30) & 0xFEu) <= v2)
                                * a2) ^ v3)))();
}

uint64_t sub_1002C3FBC()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v0 < 0x2Eu) ^ (v1 + 71)) & 1) * (v1 ^ 0x1034)) ^ v1))
                            - 4))();
}

uint64_t sub_1002C3FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  int v13;
  int v14;

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                      + 8
                                                                      * ((8298
                                                                        * (((v10 + (a4 | 0x60) - 1) & 0x9F | 0x20) != *(_DWORD *)(v5 + 8280))) ^ (a4 | 0x60)))
                                                          - 12);
  *(_QWORD *)(v5 + 7664) = *(_QWORD *)(v5 + 6904);
  *(_QWORD *)(v5 + 7680) = *(_QWORD *)(v5 + 6872);
  *(_QWORD *)(v5 + 7656) = *(_QWORD *)(v5 + 6864);
  *(_QWORD *)(v5 + 7688) = *(_QWORD *)(v5 + 6888);
  *(_QWORD *)(v5 + 7696) = *(_QWORD *)(v5 + 6880);
  *(_QWORD *)(v5 + 7704) = *(_QWORD *)(v5 + 6896);
  *(_QWORD *)(v5 + 9568) = *(_QWORD *)(v5 + 8944);
  *(_QWORD *)(v5 + 8888) = *(_QWORD *)(v5 + 8576);
  *(_QWORD *)(v5 + 9200) = *(_QWORD *)(v5 + 8952);
  *(_QWORD *)(v5 + 8880) = *(_QWORD *)(v5 + 8936);
  v12 = *(_QWORD *)(v5 + 2576);
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7880);
  *(_QWORD *)(v5 + 9576) = *(_QWORD *)(v5 + 6728);
  *(_QWORD *)(v5 + 9496) = *(_QWORD *)(v5 + 3184);
  *(_DWORD *)(v5 + 8032) = *(_DWORD *)(v5 + 8080);
  *(_DWORD *)(v5 + 8764) = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 7768);
  *(_DWORD *)(v5 + 7712) = *(_DWORD *)(v5 + 6928);
  v13 = *(_DWORD *)(v5 + 9272);
  *(_DWORD *)(v5 + 7936) = a3;
  v14 = *(_DWORD *)(v5 + 7904);
  *(_DWORD *)(v5 + 9448) = *(_DWORD *)(v5 + 9116);
  *(_DWORD *)(v5 + 9656) = v13;
  *(_DWORD *)(v5 + 8312) = v14;
  *(_DWORD *)(v5 + 6944) = *(_DWORD *)(v5 + 7040);
  *(_DWORD *)(v5 + 8008) = *(_DWORD *)(v5 + 8056);
  *(_DWORD *)(v5 + 7648) = *(_DWORD *)(v5 + 6856);
  *(_DWORD *)(v5 + 7992) = *(_DWORD *)(v5 + 8064);
  *(_DWORD *)(v5 + 9384) = *(_DWORD *)(v5 + 8832);
  *(_DWORD *)(v5 + 8748) = *(_DWORD *)(v5 + 8980);
  *(_DWORD *)(v5 + 8964) = *(_DWORD *)(v5 + 9152);
  *(_DWORD *)(v5 + 6936) = *(_DWORD *)(v5 + 6952);
  *(_DWORD *)(v5 + 9520) = *(_DWORD *)(v5 + 8196);
  *(_DWORD *)(v5 + 7552) = *(_DWORD *)(v5 + 6984);
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 9424) = v8;
  *(_DWORD *)(v5 + 8760) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8752) = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 6968) = *(_DWORD *)(v5 + 7000);
  *(_DWORD *)(v5 + 7952) = v7;
  *(_DWORD *)(v5 + 7888) = *(_DWORD *)(v5 + 7912);
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 9440) = *(_DWORD *)(v5 + 9104);
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8872) = *(_DWORD *)(v5 + 8912);
  *(_DWORD *)(v5 + 7640) = *(_DWORD *)(v5 + 6912);
  *(_DWORD *)(v5 + 8680) = v6;
  *(_DWORD *)(v5 + 6992) = *(_DWORD *)(v5 + 7008);
  *(_DWORD *)(v5 + 7672) = *(_DWORD *)(v5 + 6920);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8020) = *(_DWORD *)(v5 + 8040);
  *(_DWORD *)(v5 + 8024) = *(_DWORD *)(v5 + 8116);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 9632) = *(_DWORD *)(v5 + 9072);
  *(_DWORD *)(v5 + 9160) = *(_DWORD *)(v5 + 8920);
  *(_DWORD *)(v5 + 8000) = v4;
  *(_DWORD *)(v5 + 8664) = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 7984) = *(_DWORD *)(v5 + 8272);
  *(_DWORD *)(v5 + 9736) = *(_DWORD *)(v5 + 7616);
  *(_DWORD *)(v5 + 9432) = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 7592) = *(_DWORD *)(v5 + 7080);
  *(_DWORD *)(v5 + 9528) = *(_DWORD *)(v5 + 8188);
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8616) = *(_DWORD *)(v5 + 8904);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 7584) = *(_DWORD *)(v5 + 7088);
  *(_DWORD *)(v5 + 8640) = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 7576) = *(_DWORD *)(v5 + 7072);
  *(_DWORD *)(v5 + 9408) = *(_DWORD *)(v5 + 8552);
  *(_DWORD *)(v5 + 8704) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 9096) = *(_DWORD *)(v5 + 8900);
  *(_DWORD *)(v5 + 9584) = *(_DWORD *)(v5 + 9184);
  *(_DWORD *)(v5 + 8984) = *(_DWORD *)(v5 + 8572);
  *(_DWORD *)(v5 + 8612) = *(_DWORD *)(v5 + 8932);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  *(_DWORD *)(v5 + 7632) = *(_DWORD *)(v5 + 9680);
  return v11(a1, a2, v12);
}

uint64_t sub_1002C42AC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8032) = *(_DWORD *)(v1 + 8080);
  *(_DWORD *)(v1 + 8764) = *(_DWORD *)(v1 + 8828);
  *(_DWORD *)(v1 + 8768) = *(_DWORD *)(v1 + 8860);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 9656) = *(_DWORD *)(v1 + 9272);
  v3 = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 8312) = v3;
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 7992) = *(_DWORD *)(v1 + 8064);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8748) = *(_DWORD *)(v1 + 8980);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 8736) = *(_DWORD *)(v1 + 8792);
  *(_DWORD *)(v1 + 8728) = *(_DWORD *)(v1 + 8816);
  *(_DWORD *)(v1 + 8744) = *(_DWORD *)(v1 + 8628);
  *(_DWORD *)(v1 + 8720) = *(_DWORD *)(v1 + 8968);
  *(_DWORD *)(v1 + 9424) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 8760) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 8752) = *(_DWORD *)(v1 + 8136);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 8712) = *(_DWORD *)(v1 + 8868);
  *(_DWORD *)(v1 + 8696) = *(_DWORD *)(v1 + 8840);
  *(_DWORD *)(v1 + 9440) = *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 8688) = *(_DWORD *)(v1 + 8864);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 8680) = *(_DWORD *)(v1 + 8808);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8020) = *(_DWORD *)(v1 + 8040);
  *(_DWORD *)(v1 + 8024) = *(_DWORD *)(v1 + 8116);
  *(_DWORD *)(v1 + 8672) = *(_DWORD *)(v1 + 8848);
  *(_DWORD *)(v1 + 9632) = *(_DWORD *)(v1 + 9072);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 8000) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 8664) = *(_DWORD *)(v1 + 8992);
  *(_DWORD *)(v1 + 7984) = *(_DWORD *)(v1 + 8272);
  *(_DWORD *)(v1 + 8008) = *(_DWORD *)(v1 + 8548);
  v4 = *(_DWORD *)(v1 + 9172);
  *(_DWORD *)(v1 + 9736) = v4;
  *(_DWORD *)(v1 + 9432) = v4;
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 9528) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 8656) = *(_DWORD *)(v1 + 8776);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 8648) = *(_DWORD *)(v1 + 9004);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 8640) = *(_DWORD *)(v1 + 8784);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 9408) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 8704) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 8632) = *(_DWORD *)(v1 + 8800);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_QWORD *)(v1 + 9504) = *(_QWORD *)(v1 + 7880);
  *(_QWORD *)(v1 + 9576) = *(_QWORD *)(v1 + 6728);
  *(_QWORD *)(v1 + 9496) = *(_QWORD *)(v1 + 3832);
  *(_DWORD *)(v1 + 9688) = *(_DWORD *)(v1 + 7768);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_QWORD *)(v1 + 9680) = *(_QWORD *)(v1 + 9504);
  if ((a1 ^ 0x853D1004) + 8378 + v3 - 8395)
    v5 = 137;
  else
    v5 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v1 + 9640) + v5) >> ((-45 * (a1 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v1 + 9640) + v5)) == 30)) ^ (a1 + 2059604150))))();
}

uint64_t sub_1002C4530()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 ^ 0x1188) - 4304) * (v0 < 0x54u)) ^ v1)) - 4))();
}

uint64_t sub_1002C4568()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 + 4278) ^ (125 * (v1 > 0x51))))
                            - ((((v0 - 4055) | 0x8Bu) + 6429) ^ ((v0 + 1957) | 0x224u))))();
}

uint64_t sub_1002C45B8()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((113 * (v0 < (((v1 + 80) ^ 0x99) + 127))) ^ v1))
                            - (((v1 - 10672) | 0x42u) ^ 0x14ELL)))();
}

uint64_t sub_1002C4608@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v4
                                                              + 8
                                                              * (((((a2 + 218) | 0x2001) - 8670) * (v2 < 0x14)) ^ a2))
                                                  - (a2 ^ 0x1EA3u)
                                                  + 8153))(a1, *(unsigned int *)(v3 + 7928));
}

uint64_t sub_1002C4650()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((16361 * (((v0 < 0x12u) ^ (v1 - 108)) & 1)) ^ v1)))();
}

uint64_t sub_1002C4680(uint64_t a1, int a2)
{
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  int v12;

  v11 = (uint64_t (*)(void))(*(_QWORD *)(v10
                                      + 8
                                      * ((7586
                                        * (((*(_DWORD *)(v6 + 8280) == 27) ^ (v2 - v5 - 97)) & 1)) ^ v2))
                          - ((v2 - v5 - 2145) ^ v4));
  *(_DWORD *)(v6 + 7216) = 10;
  *(_DWORD *)(v6 + 6760) = 27;
  *(_QWORD *)(v6 + 7144) = (v2 - v5 - 2145);
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  *(_QWORD *)(v6 + 7240) = *(_QWORD *)(v6 + 2632);
  *(_QWORD *)(v6 + 7248) = *(_QWORD *)(v6 + 4160);
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 2624);
  *(_DWORD *)(v6 + 8260) = v7;
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7936) = v3;
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 8312) = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6744) = v8;
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7280) = v9;
  *(_DWORD *)(v6 + 7128) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 7344) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = a2;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  v12 = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7168) = v12;
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 8456);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7264) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 7224) = v12;
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = v8;
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 7328) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7208) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 7336) = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 7200) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 9392) = *(_DWORD *)(v6 + 8544);
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  return v11();
}

void sub_1002C4904(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8260) = *(_DWORD *)(v1 + 8332);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 8312) = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  v2 = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 3084) = v2;
  *(_DWORD *)(v1 + 6744) = v2;
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 7112) = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 9624) = *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9400) = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_DWORD *)(v1 + 7216) = 11;
  *(_DWORD *)(v1 + 6760) = 28;
  *(_QWORD *)(v1 + 7240) = *(_QWORD *)(v1 + 2376);
  *(_QWORD *)(v1 + 7248) = *(_QWORD *)(v1 + 4032);
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 4016);
  *(_DWORD *)(v1 + 7264) = *(_DWORD *)(v1 + 4028);
  JUMPOUT(0x1003261BCLL);
}

uint64_t sub_1002C4B68(unsigned int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 < (((v1 + 12) | 0xA) + 108))
                                               * (((v1 + 1329919597) & 0xB0BAFF7F) - 2415)) | v1))
                            - 4))();
}

uint64_t sub_1002C4BB4@<X0>(unsigned __int8 a1@<W3>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 9280) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((a1 != (a2 ^ 0x97)) * ((a2 - 7294) ^ 0x761)) ^ a2))
                            - 8))();
}

uint64_t sub_1002C4BF4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  *(_DWORD *)(v3 + 9736) = 0;
  *(_DWORD *)(v3 + 8360) = 680935800;
  v7 = (v0 - 2146371357) | *(_DWORD *)(v3 + 1868);
  *(_QWORD *)(v3 + 7144) = v7;
  v8 = (v0 + 87554275) | *(_DWORD *)(v3 + 1872);
  *(_QWORD *)(v3 + 9416) = v8;
  v9 = *(uint64_t (**)(void))(v5 + 8 * (int)((((v8 + 2889) ^ v7) * v1) ^ v0));
  *(_DWORD *)(v3 + 7216) = 63;
  *(_DWORD *)(v3 + 8328) = 44;
  *(_DWORD *)(v3 + 8352) = 76;
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  v10 = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 7280) = v10;
  v11 = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 7344) = v11;
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  LODWORD(v7) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 7264) = v7;
  LODWORD(v8) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 7224) = v8;
  *(_DWORD *)(v3 + 9072) = v8;
  *(_DWORD *)(v3 + 7208) = v7;
  v12 = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 7336) = v12;
  LODWORD(v8) = *(_DWORD *)(v3 + 9240);
  *(_DWORD *)(v3 + 8236) = v8;
  *(_DWORD *)(v3 + 8608) = v10;
  *(_DWORD *)(v3 + 8504) = v11;
  *(_DWORD *)(v3 + 8520) = v11;
  *(_DWORD *)(v3 + 8496) = v7;
  *(_DWORD *)(v3 + 8552) = v12;
  *(_DWORD *)(v3 + 8440) = v8;
  *(_DWORD *)(v3 + 9688) = 1;
  v13 = *(_QWORD *)(v3 + 3248);
  *(_QWORD *)(v3 + 7240) = v13;
  *(_QWORD *)(v3 + 7248) = *(_QWORD *)(v3 + 7736);
  *(_QWORD *)(v3 + 7232) = v13;
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 7192) = *(_DWORD *)(v3 + 7436);
  *(_DWORD *)(v3 + 7272) = *(_DWORD *)(v3 + 7456);
  *(_DWORD *)(v3 + 7312) = *(_DWORD *)(v3 + 9328);
  *(_DWORD *)(v3 + 8064) = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 6744) = v4;
  *(_DWORD *)(v3 + 7256) = *(_DWORD *)(v3 + 7500);
  *(_DWORD *)(v3 + 7128) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 8136) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 7168) = *(_DWORD *)(v3 + 7464);
  *(_DWORD *)(v3 + 7184) = *(_DWORD *)(v3 + 7488);
  *(_DWORD *)(v3 + 7296) = *(_DWORD *)(v3 + 7484);
  *(_DWORD *)(v3 + 7304) = *(_DWORD *)(v3 + 7480);
  *(_DWORD *)(v3 + 7176) = *(_DWORD *)(v3 + 9248);
  *(_DWORD *)(v3 + 7288) = *(_DWORD *)(v3 + 7476);
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 7416) = *(_DWORD *)(v3 + 7432);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 7328) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7112) = *(_DWORD *)(v3 + 0x2000);
  *(_DWORD *)(v3 + 7408) = *(_DWORD *)(v3 + 7460);
  *(_DWORD *)(v3 + 7160) = *(_DWORD *)(v3 + 7440);
  *(_DWORD *)(v3 + 7320) = *(_DWORD *)(v3 + 9156);
  v14 = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 9400) = v14;
  *(_DWORD *)(v3 + 7200) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 6760) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 9584) = v2;
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  v15 = *(_QWORD *)(v3 + 3240);
  *(_QWORD *)(v3 + 8408) = v15;
  v16 = *(_QWORD *)(v3 + 4240);
  *(_QWORD *)(v3 + 8400) = v16;
  *(_QWORD *)(v3 + 8392) = *(_QWORD *)(v3 + 5952);
  *(_QWORD *)(v3 + 8384) = v15;
  *(_QWORD *)(v3 + 8376) = v16;
  *(_QWORD *)(v3 + 8944) = *(_QWORD *)(v3 + 9568);
  *(_QWORD *)(v3 + 8576) = *(_QWORD *)(v3 + 8888);
  *(_QWORD *)(v3 + 8952) = *(_QWORD *)(v3 + 9200);
  *(_QWORD *)(v3 + 8936) = *(_QWORD *)(v3 + 8880);
  *(_DWORD *)(v3 + 8332) = v6;
  *(_DWORD *)(v3 + 9116) = *(_DWORD *)(v3 + 9448);
  *(_DWORD *)(v3 + 8832) = *(_DWORD *)(v3 + 9384);
  *(_DWORD *)(v3 + 9152) = *(_DWORD *)(v3 + 8964);
  LODWORD(v15) = *(_DWORD *)(v3 + 1980);
  *(_DWORD *)(v3 + 8368) = v15;
  *(_DWORD *)(v3 + 8356) = *(_DWORD *)(v3 + 7752);
  *(_DWORD *)(v3 + 8456) = *(_DWORD *)(v3 + 7424);
  *(_DWORD *)(v3 + 8912) = *(_DWORD *)(v3 + 8872);
  *(_DWORD *)(v3 + 8512) = v14;
  *(_DWORD *)(v3 + 9128) = v15;
  *(_DWORD *)(v3 + 8920) = *(_DWORD *)(v3 + 9160);
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8904) = *(_DWORD *)(v3 + 8616);
  *(_DWORD *)(v3 + 8900) = *(_DWORD *)(v3 + 9096);
  *(_DWORD *)(v3 + 8572) = *(_DWORD *)(v3 + 8984);
  *(_DWORD *)(v3 + 8932) = *(_DWORD *)(v3 + 8612);
  return v9();
}

uint64_t sub_1002C4EAC@<X0>(char a1@<W1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 9280) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((29 * (a2 == ((5 * (v2 ^ 0xB6)) ^ (2 * v2) ^ 0x2E ^ a1))) ^ v2))
                            - 4))();
}

uint64_t sub_1002C4EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v13 = (v9 - 2059596829);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * (v9 ^ (286 * v8)))
                                                                   - v13
                                                                   + 0x10A7A2022
                                                                   - ((v9 - 2146956320) | 0x5350003u));
  *(_DWORD *)(v10 + 8328) = 41;
  *(_DWORD *)(v10 + 8440) = 69;
  *(_QWORD *)(v10 + 9416) = v13;
  *(_QWORD *)(v10 + 8408) = *(_QWORD *)(v10 + 8432);
  *(_QWORD *)(v10 + 8400) = *(_QWORD *)(v10 + 8416);
  *(_QWORD *)(v10 + 8392) = *(_QWORD *)(v10 + 8536);
  *(_QWORD *)(v10 + 8384) = *(_QWORD *)(v10 + 8488);
  *(_QWORD *)(v10 + 8376) = *(_QWORD *)(v10 + 8472);
  *(_QWORD *)(v10 + 8944) = *(_QWORD *)(v10 + 9568);
  *(_QWORD *)(v10 + 8576) = *(_QWORD *)(v10 + 8888);
  *(_QWORD *)(v10 + 8952) = *(_QWORD *)(v10 + 9200);
  *(_QWORD *)(v10 + 8936) = *(_QWORD *)(v10 + 8880);
  *(_DWORD *)(v10 + 8332) = v12;
  v15 = *(unsigned int *)(v10 + 7600);
  *(_DWORD *)(v10 + 9128) = *(_DWORD *)(v10 + 9248);
  *(_DWORD *)(v10 + 9116) = *(_DWORD *)(v10 + 9448);
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 8832) = *(_DWORD *)(v10 + 9384);
  *(_DWORD *)(v10 + 9152) = *(_DWORD *)(v10 + 8964);
  *(_DWORD *)(v10 + 8368) = *(_DWORD *)(v10 + 9520);
  *(_DWORD *)(v10 + 8608) = *(_DWORD *)(v10 + 9424);
  *(_DWORD *)(v10 + 8504) = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 8520) = *(_DWORD *)(v10 + 8464);
  *(_DWORD *)(v10 + 8356) = *(_DWORD *)(v10 + 8532);
  *(_DWORD *)(v10 + 8360) = *(_DWORD *)(v10 + 8424);
  *(_DWORD *)(v10 + 9104) = *(_DWORD *)(v10 + 9440);
  *(_DWORD *)(v10 + 8456) = *(_DWORD *)(v10 + 7424);
  *(_DWORD *)(v10 + 8912) = *(_DWORD *)(v10 + 8872);
  *(_DWORD *)(v10 + 8512) = *(_DWORD *)(v10 + 8480);
  *(_DWORD *)(v10 + 9072) = *(_DWORD *)(v10 + 9632);
  *(_DWORD *)(v10 + 8920) = *(_DWORD *)(v10 + 9160);
  *(_DWORD *)(v10 + 8496) = *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8904) = *(_DWORD *)(v10 + 8616);
  *(_DWORD *)(v10 + 8552) = *(_DWORD *)(v10 + 9408);
  *(_DWORD *)(v10 + 8900) = *(_DWORD *)(v10 + 9096);
  *(_DWORD *)(v10 + 8572) = *(_DWORD *)(v10 + 8984);
  *(_DWORD *)(v10 + 8352) = a8;
  *(_DWORD *)(v10 + 8932) = *(_DWORD *)(v10 + 8612);
  return v14(a1, a2, a3, v15);
}

uint64_t sub_1002C5078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);

  --*(_QWORD *)(v1 + 4304);
  *(_QWORD *)(v1 + 9416) = a1;
  *(_QWORD *)(v1 + 8408) = *(_QWORD *)(v1 + 8432);
  *(_QWORD *)(v1 + 8400) = *(_QWORD *)(v1 + 8416);
  *(_QWORD *)(v1 + 8392) = *(_QWORD *)(v1 + 8536);
  *(_QWORD *)(v1 + 8384) = *(_QWORD *)(v1 + 8488);
  *(_QWORD *)(v1 + 8376) = *(_QWORD *)(v1 + 8472);
  *(_QWORD *)(v1 + 8944) = *(_QWORD *)(v1 + 9568);
  *(_QWORD *)(v1 + 8576) = *(_QWORD *)(v1 + 8888);
  *(_QWORD *)(v1 + 8952) = *(_QWORD *)(v1 + 9200);
  *(_QWORD *)(v1 + 8936) = *(_QWORD *)(v1 + 8880);
  *(_DWORD *)(v1 + 8332) = *(_DWORD *)(v1 + 8260);
  *(_DWORD *)(v1 + 9116) = *(_DWORD *)(v1 + 9448);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 8832) = *(_DWORD *)(v1 + 9384);
  *(_DWORD *)(v1 + 9152) = *(_DWORD *)(v1 + 8964);
  *(_DWORD *)(v1 + 8368) = *(_DWORD *)(v1 + 9520);
  *(_DWORD *)(v1 + 8608) = *(_DWORD *)(v1 + 9424);
  *(_DWORD *)(v1 + 8504) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 8520) = *(_DWORD *)(v1 + 8464);
  *(_DWORD *)(v1 + 8356) = *(_DWORD *)(v1 + 8532);
  *(_DWORD *)(v1 + 8360) = *(_DWORD *)(v1 + 8424);
  *(_DWORD *)(v1 + 9104) = *(_DWORD *)(v1 + 9440);
  *(_DWORD *)(v1 + 8456) = *(_DWORD *)(v1 + 7424);
  *(_DWORD *)(v1 + 8912) = *(_DWORD *)(v1 + 8872);
  *(_DWORD *)(v1 + 8512) = *(_DWORD *)(v1 + 8480);
  *(_DWORD *)(v1 + 9072) = *(_DWORD *)(v1 + 9632);
  *(_DWORD *)(v1 + 8920) = *(_DWORD *)(v1 + 9160);
  *(_DWORD *)(v1 + 8496) = *(_DWORD *)(v1 + 9528);
  *(_DWORD *)(v1 + 9264) = *(_DWORD *)(v1 + 9624);
  *(_DWORD *)(v1 + 8904) = *(_DWORD *)(v1 + 8616);
  *(_DWORD *)(v1 + 8552) = *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 8900) = *(_DWORD *)(v1 + 9096);
  *(_DWORD *)(v1 + 8572) = *(_DWORD *)(v1 + 8984);
  *(_DWORD *)(v1 + 8352) = *(_DWORD *)(v1 + 9040);
  *(_DWORD *)(v1 + 8932) = *(_DWORD *)(v1 + 8612);
  *(_DWORD *)(v1 + 8328) = 41;
  *(_DWORD *)(v1 + 8440) = 68;
  v2 = *(_DWORD *)(v1 + 9052);
  *(_DWORD *)(v1 + 9128) = *(_DWORD *)(v1 + 7600);
  v3 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                     + 8
                                     * (int)((12803
                                            * (v2 != ((*(_QWORD *)(v1 + 9416) - 1400777838) & 0xCE413D5F)
                                                   - 8457)) ^ (*(_QWORD *)(v1 + 9416) + 2059600627)))
                         - 4);
  *(_DWORD *)(v1 + 9688) = 1;
  *(_DWORD *)(v1 + 9736) = 1;
  return v3();
}

uint64_t sub_1002C7ABC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t (*v22)(void);
  int v23;
  int v24;
  int v25;

  v16 = v8 | 0x400;
  v17 = *(_DWORD *)(v11 + 8280) == 83;
  v18 = v10 + (v8 | 0x400);
  v19 = (v18 + 440401768) & 0xE5BFF977;
  *(_QWORD *)(v11 + 7144) = v19;
  v20 = v19 ^ 0x853D1F85;
  v21 = v17;
  *(_QWORD *)(v11 + 9416) = (v18 - 1824);
  v22 = *(uint64_t (**)(void))(v15 + 8 * ((v20 * v21) ^ v16));
  *(_QWORD *)(v11 + 7664) = *(_QWORD *)(v11 + 6904);
  *(_QWORD *)(v11 + 7680) = *(_QWORD *)(v11 + 6872);
  *(_QWORD *)(v11 + 7656) = *(_QWORD *)(v11 + 6864);
  *(_QWORD *)(v11 + 7688) = *(_QWORD *)(v11 + 6888);
  *(_QWORD *)(v11 + 7696) = *(_QWORD *)(v11 + 6880);
  *(_QWORD *)(v11 + 7704) = *(_QWORD *)(v11 + 6896);
  *(_DWORD *)(v11 + 7712) = *(_DWORD *)(v11 + 6928);
  *(_DWORD *)(v11 + 7936) = v13;
  *(_DWORD *)(v11 + 8312) = *(_DWORD *)(v11 + 7904);
  *(_DWORD *)(v11 + 6944) = *(_DWORD *)(v11 + 7040);
  *(_DWORD *)(v11 + 7648) = *(_DWORD *)(v11 + 6856);
  *(_DWORD *)(v11 + 6936) = *(_DWORD *)(v11 + 6952);
  *(_DWORD *)(v11 + 7552) = *(_DWORD *)(v11 + 6984);
  *(_DWORD *)(v11 + 6968) = *(_DWORD *)(v11 + 7000);
  *(_DWORD *)(v11 + 7952) = v14;
  *(_DWORD *)(v11 + 7888) = *(_DWORD *)(v11 + 7912);
  *(_DWORD *)(v11 + 7640) = *(_DWORD *)(v11 + 6912);
  *(_DWORD *)(v11 + 6992) = *(_DWORD *)(v11 + 7008);
  *(_DWORD *)(v11 + 7672) = *(_DWORD *)(v11 + 6920);
  *(_DWORD *)(v11 + 7592) = *(_DWORD *)(v11 + 7080);
  v23 = *(_DWORD *)(v11 + 9264);
  *(_DWORD *)(v11 + 7224) = v23;
  *(_DWORD *)(v11 + 9624) = v23;
  *(_DWORD *)(v11 + 7584) = *(_DWORD *)(v11 + 7088);
  *(_DWORD *)(v11 + 7576) = *(_DWORD *)(v11 + 7072);
  *(_DWORD *)(v11 + 8236) = *(_DWORD *)(v11 + 9240);
  *(_DWORD *)(v11 + 7632) = *(_DWORD *)(v11 + 9680);
  *(_DWORD *)(v11 + 9520) = a6;
  *(_DWORD *)(v11 + 8368) = a6;
  *(_DWORD *)(v11 + 8504) = *(_DWORD *)(v11 + 9256);
  v24 = *(_DWORD *)(v11 + 7152);
  *(_DWORD *)(v11 + 7328) = v24;
  *(_DWORD *)(v11 + 8000) = v24;
  v25 = *(_DWORD *)(v11 + 8188);
  *(_DWORD *)(v11 + 7208) = v25;
  *(_DWORD *)(v11 + 8496) = v25;
  *(_DWORD *)(v11 + 7216) = 61;
  *(_DWORD *)(v11 + 6760) = 84;
  *(_DWORD *)(v11 + 8440) = 87;
  *(_DWORD *)(v11 + 8280) = 83;
  *(_QWORD *)(v11 + 9568) = *(_QWORD *)(v11 + 8944);
  *(_QWORD *)(v11 + 8888) = *(_QWORD *)(v11 + 8576);
  *(_QWORD *)(v11 + 9200) = *(_QWORD *)(v11 + 8952);
  *(_QWORD *)(v11 + 8880) = *(_QWORD *)(v11 + 8936);
  *(_QWORD *)(v11 + 7240) = *(_QWORD *)(v11 + 6088);
  *(_QWORD *)(v11 + 7248) = *(_QWORD *)(v11 + 3344);
  *(_QWORD *)(v11 + 7232) = *(_QWORD *)(v11 + 3280);
  *(_DWORD *)(v11 + 8260) = a8;
  *(_DWORD *)(v11 + 7192) = *(_DWORD *)(v11 + 7436);
  *(_DWORD *)(v11 + 7272) = *(_DWORD *)(v11 + 7456);
  *(_DWORD *)(v11 + 9448) = *(_DWORD *)(v11 + 9116);
  *(_DWORD *)(v11 + 7312) = *(_DWORD *)(v11 + 9328);
  *(_DWORD *)(v11 + 9384) = *(_DWORD *)(v11 + 8832);
  *(_DWORD *)(v11 + 8964) = *(_DWORD *)(v11 + 9152);
  *(_DWORD *)(v11 + 6744) = a5;
  *(_DWORD *)(v11 + 7256) = *(_DWORD *)(v11 + 7500);
  *(_DWORD *)(v11 + 7280) = a4;
  *(_DWORD *)(v11 + 7128) = *(_DWORD *)(v11 + 7616);
  *(_DWORD *)(v11 + 7344) = a5;
  *(_DWORD *)(v11 + 7168) = *(_DWORD *)(v11 + 7464);
  *(_DWORD *)(v11 + 7184) = *(_DWORD *)(v11 + 7488);
  *(_DWORD *)(v11 + 7296) = *(_DWORD *)(v11 + 7484);
  *(_DWORD *)(v11 + 7424) = v12;
  *(_DWORD *)(v11 + 7304) = *(_DWORD *)(v11 + 7480);
  *(_DWORD *)(v11 + 8872) = *(_DWORD *)(v11 + 8912);
  *(_DWORD *)(v11 + 7264) = *(_DWORD *)(v11 + 3292);
  *(_DWORD *)(v11 + 7176) = *(_DWORD *)(v11 + 9248);
  *(_DWORD *)(v11 + 7288) = *(_DWORD *)(v11 + 7476);
  *(_DWORD *)(v11 + 9136) = *(_DWORD *)(v11 + 9056);
  *(_DWORD *)(v11 + 7416) = *(_DWORD *)(v11 + 7432);
  *(_DWORD *)(v11 + 9160) = *(_DWORD *)(v11 + 8920);
  *(_DWORD *)(v11 + 7112) = *(_DWORD *)(v11 + 0x2000);
  *(_DWORD *)(v11 + 7408) = *(_DWORD *)(v11 + 7460);
  *(_DWORD *)(v11 + 8616) = *(_DWORD *)(v11 + 8904);
  *(_DWORD *)(v11 + 7160) = *(_DWORD *)(v11 + 7440);
  *(_DWORD *)(v11 + 7320) = *(_DWORD *)(v11 + 9156);
  *(_DWORD *)(v11 + 7336) = *(_DWORD *)(v11 + 8552);
  *(_DWORD *)(v11 + 9400) = *(_DWORD *)(v11 + 9224);
  *(_DWORD *)(v11 + 7200) = *(_DWORD *)(v11 + 9064);
  *(_DWORD *)(v11 + 9096) = *(_DWORD *)(v11 + 8900);
  *(_DWORD *)(v11 + 9584) = v9;
  *(_DWORD *)(v11 + 8984) = *(_DWORD *)(v11 + 8572);
  *(_DWORD *)(v11 + 9392) = *(_DWORD *)(v11 + 8544);
  *(_DWORD *)(v11 + 8612) = *(_DWORD *)(v11 + 8932);
  *(_QWORD *)(v11 + 8408) = *(_QWORD *)(v11 + 8432);
  *(_QWORD *)(v11 + 8400) = *(_QWORD *)(v11 + 8416);
  *(_QWORD *)(v11 + 8392) = *(_QWORD *)(v11 + 8536);
  *(_QWORD *)(v11 + 8384) = *(_QWORD *)(v11 + 8488);
  *(_QWORD *)(v11 + 8376) = *(_QWORD *)(v11 + 8472);
  *(_DWORD *)(v11 + 8032) = *(_DWORD *)(v11 + 8080);
  *(_DWORD *)(v11 + 9128) = *(_DWORD *)(v11 + 8176);
  *(_DWORD *)(v11 + 7992) = *(_DWORD *)(v11 + 8064);
  *(_DWORD *)(v11 + 9480) = *(_DWORD *)(v11 + 8136);
  *(_DWORD *)(v11 + 8520) = *(_DWORD *)(v11 + 8464);
  *(_DWORD *)(v11 + 8356) = *(_DWORD *)(v11 + 8532);
  *(_DWORD *)(v11 + 8360) = *(_DWORD *)(v11 + 8424);
  *(_DWORD *)(v11 + 8512) = *(_DWORD *)(v11 + 8480);
  *(_DWORD *)(v11 + 8020) = *(_DWORD *)(v11 + 8040);
  *(_DWORD *)(v11 + 8024) = *(_DWORD *)(v11 + 8116);
  *(_DWORD *)(v11 + 7984) = *(_DWORD *)(v11 + 8272);
  *(_DWORD *)(v11 + 8008) = *(_DWORD *)(v11 + 8056);
  *(_DWORD *)(v11 + 9264) = a5;
  *(_DWORD *)(v11 + 8352) = a3;
  return v22();
}

uint64_t sub_1002C7E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (v6 ^ (121 * (v5 < 0x3Au))))
                                                                                       - ((v6 - 7193) ^ 0x341u)
                                                                                       + 345))(a1, a2, a3, a4, a5, 1);
}

uint64_t sub_1002C7E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;

  v12 = a4 ^ (v11 + 351);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10
                                                                      + 8
                                                                      * ((1365
                                                                        * (((a4 ^ (v11 + 95)) ^ (v4 == ((a4 ^ (v11 + 95)) ^ 0x2E))) & 1)) ^ a4))
                                                          - 12);
  *(_QWORD *)(v5 + 7664) = *(_QWORD *)(v5 + 6904);
  *(_QWORD *)(v5 + 7680) = *(_QWORD *)(v5 + 6872);
  *(_QWORD *)(v5 + 7656) = *(_QWORD *)(v5 + 6864);
  *(_QWORD *)(v5 + 7688) = *(_QWORD *)(v5 + 6888);
  *(_QWORD *)(v5 + 7696) = *(_QWORD *)(v5 + 6880);
  *(_DWORD *)(v5 + 8032) = *(_DWORD *)(v5 + 8080);
  *(_DWORD *)(v5 + 7712) = *(_DWORD *)(v5 + 6928);
  *(_DWORD *)(v5 + 7936) = a3;
  *(_DWORD *)(v5 + 6944) = *(_DWORD *)(v5 + 7040);
  *(_DWORD *)(v5 + 7648) = *(_DWORD *)(v5 + 6856);
  *(_DWORD *)(v5 + 7992) = *(_DWORD *)(v5 + 8064);
  *(_DWORD *)(v5 + 9384) = *(_DWORD *)(v5 + 8832);
  *(_DWORD *)(v5 + 6936) = *(_DWORD *)(v5 + 6952);
  *(_DWORD *)(v5 + 7552) = *(_DWORD *)(v5 + 6984);
  *(_DWORD *)(v5 + 6968) = *(_DWORD *)(v5 + 7000);
  *(_DWORD *)(v5 + 7952) = v8;
  *(_DWORD *)(v5 + 7888) = *(_DWORD *)(v5 + 7912);
  *(_DWORD *)(v5 + 7640) = *(_DWORD *)(v5 + 6912);
  *(_DWORD *)(v5 + 6992) = *(_DWORD *)(v5 + 7008);
  *(_DWORD *)(v5 + 7672) = *(_DWORD *)(v5 + 6920);
  *(_DWORD *)(v5 + 8020) = *(_DWORD *)(v5 + 8040);
  *(_DWORD *)(v5 + 8024) = *(_DWORD *)(v5 + 8116);
  *(_DWORD *)(v5 + 8000) = *(_DWORD *)(v5 + 7152);
  *(_DWORD *)(v5 + 7984) = *(_DWORD *)(v5 + 8272);
  *(_DWORD *)(v5 + 8008) = *(_DWORD *)(v5 + 8056);
  *(_DWORD *)(v5 + 7592) = *(_DWORD *)(v5 + 7080);
  *(_DWORD *)(v5 + 7584) = *(_DWORD *)(v5 + 7088);
  *(_DWORD *)(v5 + 7576) = *(_DWORD *)(v5 + 7072);
  *(_DWORD *)(v5 + 7632) = *(_DWORD *)(v5 + 9680);
  *(_QWORD *)(v5 + 7704) = *(_QWORD *)(v5 + 6896);
  v14 = *(_DWORD *)(v5 + 7904);
  *(_DWORD *)(v5 + 8312) = v14;
  *(_DWORD *)(v5 + 9128) = v14;
  v15 = *(_DWORD *)(v5 + 8196);
  *(_DWORD *)(v5 + 9520) = v15;
  *(_DWORD *)(v5 + 8368) = v15;
  v16 = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8760) = v16;
  *(_DWORD *)(v5 + 8504) = v16;
  v17 = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 8752) = v17;
  *(_DWORD *)(v5 + 9480) = v17;
  v18 = *(_DWORD *)(v5 + 8188);
  *(_DWORD *)(v5 + 9528) = v18;
  *(_DWORD *)(v5 + 8496) = v18;
  *(_DWORD *)(v5 + 8440) = 83;
  *(_DWORD *)(v5 + 8280) = 65;
  *(_QWORD *)(v5 + 9568) = *(_QWORD *)(v5 + 8944);
  *(_QWORD *)(v5 + 8888) = *(_QWORD *)(v5 + 8576);
  *(_QWORD *)(v5 + 9200) = *(_QWORD *)(v5 + 8952);
  *(_QWORD *)(v5 + 8880) = *(_QWORD *)(v5 + 8936);
  v19 = *(_QWORD *)(v5 + 2376);
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7880);
  *(_QWORD *)(v5 + 9576) = *(_QWORD *)(v5 + 2336);
  *(_QWORD *)(v5 + 9496) = *(_QWORD *)(v5 + 2736);
  *(_DWORD *)(v5 + 8764) = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 7768);
  *(_DWORD *)(v5 + 9448) = *(_DWORD *)(v5 + 9116);
  *(_DWORD *)(v5 + 9656) = *(_DWORD *)(v5 + 9272);
  *(_DWORD *)(v5 + 8748) = *(_DWORD *)(v5 + 8980);
  *(_DWORD *)(v5 + 8964) = *(_DWORD *)(v5 + 9152);
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 9424) = v9;
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 9440) = v7;
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8872) = *(_DWORD *)(v5 + 8912);
  *(_DWORD *)(v5 + 8680) = *(_DWORD *)(v5 + 8808);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 9632) = *(_DWORD *)(v5 + 9072);
  *(_DWORD *)(v5 + 9160) = *(_DWORD *)(v5 + 8920);
  *(_DWORD *)(v5 + 8664) = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 9736) = *(_DWORD *)(v5 + 3116);
  *(_DWORD *)(v5 + 9432) = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8616) = *(_DWORD *)(v5 + 8904);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 8640) = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 9408) = *(_DWORD *)(v5 + 8552);
  *(_DWORD *)(v5 + 8704) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 9096) = *(_DWORD *)(v5 + 8900);
  *(_DWORD *)(v5 + 9584) = *(_DWORD *)(v5 + 9184);
  *(_DWORD *)(v5 + 8984) = *(_DWORD *)(v5 + 8572);
  *(_DWORD *)(v5 + 8612) = *(_DWORD *)(v5 + 8932);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  *(_QWORD *)(v5 + 9416) = v12;
  *(_QWORD *)(v5 + 8408) = *(_QWORD *)(v5 + 8432);
  *(_QWORD *)(v5 + 8400) = *(_QWORD *)(v5 + 8416);
  *(_QWORD *)(v5 + 8392) = *(_QWORD *)(v5 + 8536);
  *(_QWORD *)(v5 + 8384) = *(_QWORD *)(v5 + 8488);
  *(_QWORD *)(v5 + 8376) = *(_QWORD *)(v5 + 8472);
  *(_DWORD *)(v5 + 8832) = v7;
  *(_DWORD *)(v5 + 8520) = *(_DWORD *)(v5 + 8464);
  *(_DWORD *)(v5 + 8356) = *(_DWORD *)(v5 + 8532);
  *(_DWORD *)(v5 + 8360) = *(_DWORD *)(v5 + 8424);
  *(_DWORD *)(v5 + 8512) = *(_DWORD *)(v5 + 8480);
  *(_DWORD *)(v5 + 8352) = v6;
  return v13(a1, a2, v19);
}

uint64_t sub_1002C8180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  int v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;

  v13 = (a8 - v8 - 858552) | 0xD1006u;
  v14 = *(_DWORD *)(v9 + 8280) == 99;
  *(_QWORD *)(v9 + 7144) = v13;
  v15 = v8 + v13 + 1146;
  v16 = !v14;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((v15 * v16) ^ a8)) - 8);
  *(_QWORD *)(v9 + 7664) = *(_QWORD *)(v9 + 6904);
  *(_QWORD *)(v9 + 7680) = *(_QWORD *)(v9 + 6872);
  *(_QWORD *)(v9 + 7656) = *(_QWORD *)(v9 + 6864);
  *(_QWORD *)(v9 + 7688) = *(_QWORD *)(v9 + 6888);
  *(_QWORD *)(v9 + 7696) = *(_QWORD *)(v9 + 6880);
  *(_QWORD *)(v9 + 7704) = *(_QWORD *)(v9 + 6896);
  *(_QWORD *)(v9 + 9568) = *(_QWORD *)(v9 + 8944);
  *(_QWORD *)(v9 + 8888) = *(_QWORD *)(v9 + 8576);
  *(_QWORD *)(v9 + 9200) = *(_QWORD *)(v9 + 8952);
  *(_QWORD *)(v9 + 8880) = *(_QWORD *)(v9 + 8936);
  *(_DWORD *)(v9 + 7712) = *(_DWORD *)(v9 + 6928);
  *(_DWORD *)(v9 + 7936) = v10;
  *(_DWORD *)(v9 + 9448) = *(_DWORD *)(v9 + 9116);
  *(_DWORD *)(v9 + 8312) = *(_DWORD *)(v9 + 7904);
  *(_DWORD *)(v9 + 6944) = *(_DWORD *)(v9 + 7040);
  *(_DWORD *)(v9 + 7648) = *(_DWORD *)(v9 + 6856);
  *(_DWORD *)(v9 + 9384) = *(_DWORD *)(v9 + 8832);
  *(_DWORD *)(v9 + 8964) = *(_DWORD *)(v9 + 9152);
  *(_DWORD *)(v9 + 6936) = *(_DWORD *)(v9 + 6952);
  *(_DWORD *)(v9 + 9520) = a5;
  *(_DWORD *)(v9 + 7552) = *(_DWORD *)(v9 + 6984);
  *(_DWORD *)(v9 + 6968) = *(_DWORD *)(v9 + 7000);
  *(_DWORD *)(v9 + 7952) = v11;
  *(_DWORD *)(v9 + 7888) = *(_DWORD *)(v9 + 7912);
  *(_DWORD *)(v9 + 8872) = *(_DWORD *)(v9 + 8912);
  *(_DWORD *)(v9 + 7640) = *(_DWORD *)(v9 + 6912);
  *(_DWORD *)(v9 + 6992) = *(_DWORD *)(v9 + 7008);
  *(_DWORD *)(v9 + 7672) = *(_DWORD *)(v9 + 6920);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 9160) = *(_DWORD *)(v9 + 8920);
  *(_DWORD *)(v9 + 7592) = *(_DWORD *)(v9 + 7080);
  *(_DWORD *)(v9 + 8616) = *(_DWORD *)(v9 + 8904);
  *(_DWORD *)(v9 + 7584) = *(_DWORD *)(v9 + 7088);
  *(_DWORD *)(v9 + 7576) = *(_DWORD *)(v9 + 7072);
  *(_DWORD *)(v9 + 9096) = *(_DWORD *)(v9 + 8900);
  *(_DWORD *)(v9 + 9584) = *(_DWORD *)(v9 + 9184);
  *(_DWORD *)(v9 + 8984) = *(_DWORD *)(v9 + 8572);
  *(_DWORD *)(v9 + 8612) = *(_DWORD *)(v9 + 8932);
  *(_DWORD *)(v9 + 7632) = *(_DWORD *)(v9 + 9680);
  *(_DWORD *)(v9 + 9424) = a3;
  *(_DWORD *)(v9 + 7280) = a3;
  v18 = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8760) = v18;
  *(_DWORD *)(v9 + 7344) = v18;
  *(_DWORD *)(v9 + 7424) = a6;
  *(_DWORD *)(v9 + 8744) = a4;
  *(_DWORD *)(v9 + 9736) = a4;
  *(_DWORD *)(v9 + 6744) = a4;
  *(_DWORD *)(v9 + 8628) = a4;
  *(_DWORD *)(v9 + 7224) = a4;
  v19 = *(_DWORD *)(v9 + 7152);
  *(_DWORD *)(v9 + 8000) = v19;
  *(_DWORD *)(v9 + 7328) = v19;
  v20 = *(_DWORD *)(v9 + 8188);
  *(_DWORD *)(v9 + 9528) = v20;
  *(_DWORD *)(v9 + 7208) = v20;
  v21 = *(_DWORD *)(v9 + 8552);
  *(_DWORD *)(v9 + 9408) = v21;
  *(_DWORD *)(v9 + 7336) = v21;
  v22 = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8704) = v22;
  *(_DWORD *)(v9 + 7200) = v22;
  *(_DWORD *)(v9 + 9392) = *(_DWORD *)(v9 + 8544);
  *(_DWORD *)(v9 + 7216) = 70;
  *(_DWORD *)(v9 + 6760) = 99;
  v23 = *(_QWORD *)(v9 + 3896);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7512);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 3920);
  *(_QWORD *)(v9 + 9496) = v23;
  *(_DWORD *)(v9 + 8032) = *(_DWORD *)(v9 + 8080);
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 4404);
  *(_DWORD *)(v9 + 9656) = *(_DWORD *)(v9 + 9272);
  *(_DWORD *)(v9 + 7992) = *(_DWORD *)(v9 + 8064);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 9440) = *(_DWORD *)(v9 + 9104);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 8020) = *(_DWORD *)(v9 + 8040);
  *(_DWORD *)(v9 + 8024) = *(_DWORD *)(v9 + 8116);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 9632) = *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 7984) = *(_DWORD *)(v9 + 8272);
  *(_DWORD *)(v9 + 8008) = *(_DWORD *)(v9 + 8056);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  *(_QWORD *)(v9 + 7240) = v23;
  *(_QWORD *)(v9 + 7248) = *(_QWORD *)(v9 + 2224);
  *(_QWORD *)(v9 + 7232) = v23;
  *(_DWORD *)(v9 + 8260) = a7;
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  v24 = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7264) = v24;
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 7112) = *(_DWORD *)(v9 + 0x2000);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 9624) = *(_DWORD *)(v9 + 9264);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7320) = v24;
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 8236) = *(_DWORD *)(v9 + 9240);
  return v17(a1, a2, v23);
}

uint64_t sub_1002C8534@<X0>(unsigned int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((105 * (v1 >= (((a1 + 68) | 8) + 125))) ^ a1))
                            - 4))();
}

uint64_t sub_1002C8570(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  *(_DWORD *)(v4 + 9576) = 0;
  *(_DWORD *)(v4 + 9012) = 0;
  *(_DWORD *)(v4 + 9488) = 0;
  *(_DWORD *)(v4 + 9472) = 0;
  v7 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v6
                                                            + 8
                                                            * ((810
                                                              * (*(_DWORD *)(v4 + 8280) == (((v1 - 12) & 0x9E) - 13))) ^ v1))
                                                - ((v1 + 1983) | 0x520u)
                                                + 9572);
  *(_DWORD *)(v4 + 8280) = 16;
  *(_DWORD *)(v4 + 9456) = 1;
  v8 = *(unsigned int *)(v4 + 8548);
  *(_QWORD *)(v4 + 7664) = *(_QWORD *)(v4 + 6904);
  *(_QWORD *)(v4 + 7680) = *(_QWORD *)(v4 + 6872);
  *(_QWORD *)(v4 + 7656) = *(_QWORD *)(v4 + 6864);
  *(_QWORD *)(v4 + 7688) = *(_QWORD *)(v4 + 6888);
  *(_QWORD *)(v4 + 7696) = *(_QWORD *)(v4 + 6880);
  *(_QWORD *)(v4 + 7704) = *(_QWORD *)(v4 + 6896);
  *(_QWORD *)(v4 + 9568) = *(_QWORD *)(v4 + 8944);
  *(_QWORD *)(v4 + 8888) = *(_QWORD *)(v4 + 8576);
  *(_QWORD *)(v4 + 9200) = *(_QWORD *)(v4 + 8952);
  *(_QWORD *)(v4 + 8880) = *(_QWORD *)(v4 + 8936);
  *(_QWORD *)(v4 + 9600) = v5;
  *(_QWORD *)(v4 + 9608) = *(_QWORD *)(v4 + 9016);
  *(_DWORD *)(v4 + 8032) = *(_DWORD *)(v4 + 8080);
  *(_DWORD *)(v4 + 7712) = *(_DWORD *)(v4 + 6928);
  *(_DWORD *)(v4 + 7936) = *(_DWORD *)(v4 + 7920);
  *(_DWORD *)(v4 + 9448) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 9656) = *(_DWORD *)(v4 + 9272);
  *(_DWORD *)(v4 + 8312) = *(_DWORD *)(v4 + 7904);
  *(_DWORD *)(v4 + 9616) = *(_DWORD *)(v4 + 9320);
  *(_DWORD *)(v4 + 6944) = *(_DWORD *)(v4 + 7040);
  *(_DWORD *)(v4 + 7648) = *(_DWORD *)(v4 + 6856);
  *(_DWORD *)(v4 + 7992) = *(_DWORD *)(v4 + 8064);
  *(_DWORD *)(v4 + 9384) = *(_DWORD *)(v4 + 8832);
  *(_DWORD *)(v4 + 8964) = *(_DWORD *)(v4 + 9152);
  *(_DWORD *)(v4 + 6936) = *(_DWORD *)(v4 + 6952);
  *(_DWORD *)(v4 + 7552) = *(_DWORD *)(v4 + 6984);
  *(_DWORD *)(v4 + 9424) = v2;
  *(_DWORD *)(v4 + 9480) = *(_DWORD *)(v4 + 8136);
  *(_DWORD *)(v4 + 6968) = *(_DWORD *)(v4 + 7000);
  *(_DWORD *)(v4 + 7952) = *(_DWORD *)(v4 + 7928);
  *(_DWORD *)(v4 + 7888) = *(_DWORD *)(v4 + 7912);
  *(_DWORD *)(v4 + 9440) = *(_DWORD *)(v4 + 9104);
  *(_DWORD *)(v4 + 9664) = *(_DWORD *)(v4 + 8456);
  *(_DWORD *)(v4 + 8872) = *(_DWORD *)(v4 + 8912);
  *(_DWORD *)(v4 + 7640) = *(_DWORD *)(v4 + 6912);
  *(_DWORD *)(v4 + 7964) = v8;
  *(_DWORD *)(v4 + 6992) = *(_DWORD *)(v4 + 7008);
  *(_DWORD *)(v4 + 7672) = *(_DWORD *)(v4 + 6920);
  *(_DWORD *)(v4 + 8020) = *(_DWORD *)(v4 + 8040);
  *(_DWORD *)(v4 + 8024) = *(_DWORD *)(v4 + 8116);
  *(_DWORD *)(v4 + 9632) = *(_DWORD *)(v4 + 9072);
  *(_DWORD *)(v4 + 9160) = *(_DWORD *)(v4 + 8920);
  *(_DWORD *)(v4 + 8000) = v3;
  *(_DWORD *)(v4 + 7984) = *(_DWORD *)(v4 + 8272);
  *(_DWORD *)(v4 + 8008) = *(_DWORD *)(v4 + 8056);
  *(_DWORD *)(v4 + 7592) = *(_DWORD *)(v4 + 7080);
  *(_DWORD *)(v4 + 9528) = *(_DWORD *)(v4 + 8188);
  *(_DWORD *)(v4 + 9624) = *(_DWORD *)(v4 + 9264);
  *(_DWORD *)(v4 + 8616) = *(_DWORD *)(v4 + 8904);
  *(_DWORD *)(v4 + 7584) = *(_DWORD *)(v4 + 7088);
  *(_DWORD *)(v4 + 7576) = *(_DWORD *)(v4 + 7072);
  *(_DWORD *)(v4 + 9408) = *(_DWORD *)(v4 + 8552);
  *(_DWORD *)(v4 + 9096) = *(_DWORD *)(v4 + 8900);
  *(_DWORD *)(v4 + 9432) = 1;
  *(_DWORD *)(v4 + 9080) = 1;
  *(_DWORD *)(v4 + 9496) = 1;
  *(_DWORD *)(v4 + 9584) = *(_DWORD *)(v4 + 9184);
  *(_DWORD *)(v4 + 8984) = *(_DWORD *)(v4 + 8572);
  *(_DWORD *)(v4 + 8612) = *(_DWORD *)(v4 + 8932);
  *(_DWORD *)(v4 + 7632) = *(_DWORD *)(v4 + 9680);
  *(_DWORD *)(v4 + 9592) = *(_DWORD *)(v4 + 8328);
  return v7(a1, v8);
}

uint64_t sub_1002C87F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  char v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  *(_QWORD *)(v8 + 9416) = (v7 ^ 0x336Cu) - 2059602589;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * ((85 * (((v6 == 65) ^ ((v7 ^ 0x6C) + 99)) & 1)) ^ v7 ^ 0x336C))
                          - 8);
  *(_DWORD *)(v8 + 8440) = 84;
  *(_DWORD *)(v8 + 8280) = 74;
  *(_QWORD *)(v8 + 7664) = *(_QWORD *)(v8 + 6904);
  *(_QWORD *)(v8 + 7680) = *(_QWORD *)(v8 + 6872);
  *(_QWORD *)(v8 + 7656) = *(_QWORD *)(v8 + 6864);
  *(_QWORD *)(v8 + 7688) = *(_QWORD *)(v8 + 6888);
  *(_QWORD *)(v8 + 7696) = *(_QWORD *)(v8 + 6880);
  *(_QWORD *)(v8 + 7704) = *(_QWORD *)(v8 + 6896);
  *(_QWORD *)(v8 + 8408) = *(_QWORD *)(v8 + 8432);
  *(_QWORD *)(v8 + 8400) = *(_QWORD *)(v8 + 8416);
  *(_QWORD *)(v8 + 8392) = *(_QWORD *)(v8 + 8536);
  *(_QWORD *)(v8 + 8384) = *(_QWORD *)(v8 + 8488);
  *(_QWORD *)(v8 + 8376) = *(_QWORD *)(v8 + 8472);
  *(_DWORD *)(v8 + 8032) = *(_DWORD *)(v8 + 8080);
  *(_DWORD *)(v8 + 7712) = *(_DWORD *)(v8 + 6928);
  *(_DWORD *)(v8 + 9128) = *(_DWORD *)(v8 + 8176);
  *(_DWORD *)(v8 + 7936) = v9;
  *(_DWORD *)(v8 + 8312) = *(_DWORD *)(v8 + 7904);
  *(_DWORD *)(v8 + 6944) = *(_DWORD *)(v8 + 7040);
  *(_DWORD *)(v8 + 7648) = *(_DWORD *)(v8 + 6856);
  *(_DWORD *)(v8 + 7992) = *(_DWORD *)(v8 + 8064);
  *(_DWORD *)(v8 + 6936) = *(_DWORD *)(v8 + 6952);
  *(_DWORD *)(v8 + 8368) = a6;
  *(_DWORD *)(v8 + 7552) = *(_DWORD *)(v8 + 6984);
  *(_DWORD *)(v8 + 8504) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 9480) = *(_DWORD *)(v8 + 8136);
  *(_DWORD *)(v8 + 6968) = *(_DWORD *)(v8 + 7000);
  *(_DWORD *)(v8 + 7952) = v10;
  *(_DWORD *)(v8 + 7888) = *(_DWORD *)(v8 + 7912);
  *(_DWORD *)(v8 + 8520) = *(_DWORD *)(v8 + 8464);
  *(_DWORD *)(v8 + 8356) = *(_DWORD *)(v8 + 8532);
  *(_DWORD *)(v8 + 8360) = *(_DWORD *)(v8 + 8424);
  *(_DWORD *)(v8 + 8512) = *(_DWORD *)(v8 + 8480);
  *(_DWORD *)(v8 + 7640) = *(_DWORD *)(v8 + 6912);
  *(_DWORD *)(v8 + 6992) = *(_DWORD *)(v8 + 7008);
  *(_DWORD *)(v8 + 7672) = *(_DWORD *)(v8 + 6920);
  *(_DWORD *)(v8 + 8020) = *(_DWORD *)(v8 + 8040);
  *(_DWORD *)(v8 + 8024) = *(_DWORD *)(v8 + 8116);
  *(_DWORD *)(v8 + 8000) = *(_DWORD *)(v8 + 7152);
  *(_DWORD *)(v8 + 7984) = *(_DWORD *)(v8 + 8272);
  *(_DWORD *)(v8 + 8008) = *(_DWORD *)(v8 + 8056);
  *(_DWORD *)(v8 + 7592) = *(_DWORD *)(v8 + 7080);
  *(_DWORD *)(v8 + 8496) = a5;
  *(_DWORD *)(v8 + 7584) = *(_DWORD *)(v8 + 7088);
  *(_DWORD *)(v8 + 7576) = *(_DWORD *)(v8 + 7072);
  *(_DWORD *)(v8 + 8352) = a3;
  *(_DWORD *)(v8 + 7632) = *(_DWORD *)(v8 + 9680);
  return v12();
}

void sub_1002C89B0()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 9464) = 994009447;
  *(_DWORD *)(*(_QWORD *)(v0 + 9232) + 212) = 0;
  *(_DWORD *)(v0 + 4292) = 73;
  *(_QWORD *)(v0 + 9456) = *(_QWORD *)(v0 + 7048);
  *(_QWORD *)(v0 + 9608) = *(_QWORD *)(v0 + 3808);
  *(_DWORD *)(v0 + 5344) = *(_DWORD *)(v0 + 6072);
  *(_DWORD *)(v0 + 2444) = *(_DWORD *)(v0 + 8548);
  *(_DWORD *)(v0 + 7384) = 1;
  JUMPOUT(0x1002C8A10);
}

uint64_t sub_1002C8A64@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((34 * (a1 ^ 0x2944) - 495) * (v1 > 0x29u)) ^ a1)) - 12))();
}

uint64_t sub_1002C8A98(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v7 + 7144) = (v13 + v4 - 544);
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (v4 ^ (3318 * (*(_DWORD *)(v7 + 8280) != 51))))
                          - (((v13 + v4 - 84148789) | 0x5040015u) ^ (unint64_t)(v6 + 8)));
  *(_DWORD *)(v7 + 7216) = 34;
  *(_DWORD *)(v7 + 6760) = 51;
  v15 = *(_QWORD *)(v7 + 6904);
  *(_QWORD *)(v7 + 7664) = v15;
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 6872);
  v16 = *(_QWORD *)(v7 + 6864);
  *(_QWORD *)(v7 + 7656) = v16;
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 6888);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 6880);
  *(_QWORD *)(v7 + 7704) = *(_QWORD *)(v7 + 6896);
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  *(_QWORD *)(v7 + 7240) = *(_QWORD *)(v7 + 2392);
  *(_QWORD *)(v7 + 7248) = v15;
  *(_QWORD *)(v7 + 7232) = v16;
  *(_DWORD *)(v7 + 8260) = v8;
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 6928);
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7936) = a4;
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 8312) = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  LODWORD(v16) = *(_DWORD *)(v7 + 6856);
  *(_DWORD *)(v7 + 7648) = v16;
  *(_DWORD *)(v7 + 9384) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6744) = v9;
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 7256) = *(_DWORD *)(v7 + 7500);
  *(_DWORD *)(v7 + 7280) = v11;
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 7344) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = v10;
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 8456);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  LODWORD(v15) = *(_DWORD *)(v7 + 6912);
  *(_DWORD *)(v7 + 7264) = v15;
  *(_DWORD *)(v7 + 7640) = v15;
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  *(_DWORD *)(v7 + 7224) = v16;
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 6920);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 7416) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 7328) = v5;
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 7112) = *(_DWORD *)(v7 + 0x2000);
  *(_DWORD *)(v7 + 7208) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 9624) = *(_DWORD *)(v7 + 9264);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 7320) = v9;
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 7336) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 7200) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 9392) = *(_DWORD *)(v7 + 8544);
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 9240);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 7632) = *(_DWORD *)(v7 + 9680);
  return v14();
}

void sub_1002C8D20(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  v2 = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7664) = v2;
  *(_QWORD *)(v1 + 7248) = v2;
  v3 = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7680) = v3;
  *(_QWORD *)(v1 + 7232) = v3;
  *(_DWORD *)(v1 + 8260) = *(_DWORD *)(v1 + 8332);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 8312) = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  LODWORD(v3) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 2644) = v3;
  *(_DWORD *)(v1 + 6744) = v3;
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  LODWORD(v3) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 7264) = v3;
  *(_DWORD *)(v1 + 7640) = v3;
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  LODWORD(v3) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 7224) = v3;
  *(_DWORD *)(v1 + 7672) = v3;
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 7112) = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 9624) = *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  v4 = *(_DWORD *)(v1 + 7452);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9400) = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_DWORD *)(v1 + 7216) = 35;
  *(_DWORD *)(v1 + 6760) = 52;
  *(_QWORD *)(v1 + 7240) = *(_QWORD *)(v1 + 2296);
  *(_DWORD *)(v1 + 9736) = v4;
  JUMPOUT(0x10031D888);
}

uint64_t sub_1002C8F78()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 8732) | 0x160) - 220) * (v0 > 0x15u)) ^ v1))
                            - ((v1 - 8732) ^ 0xDLL)))();
}

uint64_t sub_1002C8FBC@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;

  v11 = (a3 - v5 - 2482);
  v12 = *(_QWORD *)(v10
                  + 8
                  * ((1422 * (((*(_DWORD *)(v6 + 8280) == 31) ^ (a1 + a3 - 126)) & 1)) ^ a3));
  *(_QWORD *)(v6 + 7144) = v11;
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = v3;
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 8312) = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = a2;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  *(_DWORD *)(v6 + 8032) = v8;
  *(_DWORD *)(v6 + 9272) = v8;
  *(_DWORD *)(v6 + 6744) = v8;
  *(_DWORD *)(v6 + 9424) = v9;
  *(_DWORD *)(v6 + 7280) = v9;
  v13 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v13;
  *(_DWORD *)(v6 + 7344) = v13;
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 8456);
  v14 = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 8000) = v14;
  *(_DWORD *)(v6 + 7328) = v14;
  v15 = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 9528) = v15;
  *(_DWORD *)(v6 + 7208) = v15;
  v16 = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9408) = v16;
  *(_DWORD *)(v6 + 7336) = v16;
  v17 = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8704) = v17;
  *(_DWORD *)(v6 + 7200) = v17;
  *(_DWORD *)(v6 + 9392) = *(_DWORD *)(v6 + 8544);
  *(_DWORD *)(v6 + 7216) = 14;
  *(_DWORD *)(v6 + 6760) = 31;
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  v18 = *(_QWORD *)(v6 + 1952);
  *(_QWORD *)(v6 + 9576) = v18;
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 3184);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  v19 = *(_DWORD *)(v6 + 7452);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  v20 = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8696) = v20;
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  v21 = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 9736) = v21;
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_QWORD *)(v6 + 7240) = *(_QWORD *)(v6 + 2648);
  *(_QWORD *)(v6 + 7248) = v18;
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 4160);
  *(_DWORD *)(v6 + 8260) = v7;
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7128) = v21;
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 7264) = v19;
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 7224) = v20;
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  return ((uint64_t (*)(void))(v12 - (v11 ^ (v4 + 12))))();
}

uint64_t sub_1002C9374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;

  *(_QWORD *)(v6 + 9416) = (a6 - 314755413) ^ 0x680027A8u;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                              + 8
                                                                              * ((139
                                                                                * (((a6 - 85) ^ (*(_DWORD *)(v6 + 8280) == (((a6 - 85) ^ 0xA8) + 64))) & 1)) ^ a6));
  *(_DWORD *)(v6 + 9464) = 994009664;
  *(_DWORD *)(v6 + 4292) = 87;
  v13 = *(_QWORD *)(v6 + 1936);
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 3816);
  v14 = *(unsigned int *)(v6 + 7448);
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = a4;
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  v15 = *(_DWORD *)(v6 + 9680);
  *(_DWORD *)(v6 + 5312) = v15;
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_DWORD *)(v6 + 7632) = v15;
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  v16 = *(_QWORD *)(v6 + 3120);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 3224);
  *(_QWORD *)(v6 + 9496) = v16;
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = v8;
  v17 = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 8312) = v17;
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = a5;
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = a4;
  *(_DWORD *)(v6 + 9424) = a3;
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = v9;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  v18 = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 9736) = v18;
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 9528) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 8648) = v18;
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 9408) = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = v7;
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  return v11(a1, a2, v16, v14, v13);
}

uint64_t sub_1002C96CC()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 >= (((v1 - 125) ^ 0x41) - 67);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 | (8 * v3)) ^ v1)) - 8))();
}

uint64_t sub_1002C9700(uint64_t a1, char a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t (*v17)(void);

  v10 = *(_DWORD *)(v5 + 8280) == (v4 ^ (v9 + 12) ^ a2);
  v11 = *(_DWORD *)(v5 + 3116);
  if (*(_DWORD *)(v5 + 8280) != (v4 ^ (v9 + 12) ^ a2))
    v11 = v7;
  *(_DWORD *)(v5 + 3116) = v11;
  v12 = *(_DWORD *)(v5 + 7484);
  if (v10)
    v12 = v7;
  *(_DWORD *)(v5 + 7484) = v12;
  *(_QWORD *)(v5 + 9416) = v4 ^ (v9 + 1036);
  *(_QWORD *)(v5 + 7664) = *(_QWORD *)(v5 + 6904);
  *(_QWORD *)(v5 + 7680) = *(_QWORD *)(v5 + 6872);
  *(_QWORD *)(v5 + 7656) = *(_QWORD *)(v5 + 6864);
  *(_QWORD *)(v5 + 7688) = *(_QWORD *)(v5 + 6888);
  *(_QWORD *)(v5 + 7696) = *(_QWORD *)(v5 + 6880);
  *(_QWORD *)(v5 + 7704) = *(_QWORD *)(v5 + 6896);
  *(_QWORD *)(v5 + 8408) = *(_QWORD *)(v5 + 8432);
  *(_QWORD *)(v5 + 8400) = *(_QWORD *)(v5 + 8416);
  *(_QWORD *)(v5 + 8392) = *(_QWORD *)(v5 + 8536);
  *(_QWORD *)(v5 + 8384) = *(_QWORD *)(v5 + 8488);
  *(_QWORD *)(v5 + 8376) = *(_QWORD *)(v5 + 8472);
  *(_DWORD *)(v5 + 8032) = *(_DWORD *)(v5 + 8080);
  *(_DWORD *)(v5 + 7712) = *(_DWORD *)(v5 + 6928);
  *(_DWORD *)(v5 + 7936) = a4;
  v13 = *(_DWORD *)(v5 + 7904);
  *(_DWORD *)(v5 + 9128) = v13;
  *(_DWORD *)(v5 + 8312) = v13;
  *(_DWORD *)(v5 + 6944) = *(_DWORD *)(v5 + 7040);
  *(_DWORD *)(v5 + 7648) = *(_DWORD *)(v5 + 6856);
  *(_DWORD *)(v5 + 7992) = *(_DWORD *)(v5 + 8064);
  *(_DWORD *)(v5 + 6936) = *(_DWORD *)(v5 + 6952);
  *(_DWORD *)(v5 + 8368) = *(_DWORD *)(v5 + 8196);
  *(_DWORD *)(v5 + 7552) = *(_DWORD *)(v5 + 6984);
  *(_DWORD *)(v5 + 8504) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 9480) = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 6968) = *(_DWORD *)(v5 + 7000);
  *(_DWORD *)(v5 + 7952) = v8;
  *(_DWORD *)(v5 + 7888) = *(_DWORD *)(v5 + 7912);
  *(_DWORD *)(v5 + 8520) = *(_DWORD *)(v5 + 8464);
  *(_DWORD *)(v5 + 8356) = *(_DWORD *)(v5 + 8532);
  *(_DWORD *)(v5 + 8360) = *(_DWORD *)(v5 + 8424);
  *(_DWORD *)(v5 + 8512) = *(_DWORD *)(v5 + 8480);
  *(_DWORD *)(v5 + 7640) = *(_DWORD *)(v5 + 6912);
  *(_DWORD *)(v5 + 6992) = *(_DWORD *)(v5 + 7008);
  *(_DWORD *)(v5 + 7672) = *(_DWORD *)(v5 + 6920);
  if (v10)
    v14 = *(_DWORD *)(v5 + 8040);
  else
    v14 = *(_DWORD *)(v5 + 7464);
  *(_DWORD *)(v5 + 8020) = *(_DWORD *)(v5 + 8040);
  *(_DWORD *)(v5 + 8024) = *(_DWORD *)(v5 + 8116);
  *(_DWORD *)(v5 + 8000) = *(_DWORD *)(v5 + 7152);
  *(_DWORD *)(v5 + 7984) = *(_DWORD *)(v5 + 8272);
  *(_DWORD *)(v5 + 8008) = *(_DWORD *)(v5 + 8056);
  *(_DWORD *)(v5 + 7592) = *(_DWORD *)(v5 + 7080);
  *(_DWORD *)(v5 + 8496) = *(_DWORD *)(v5 + 8188);
  *(_DWORD *)(v5 + 7584) = *(_DWORD *)(v5 + 7088);
  *(_DWORD *)(v5 + 7576) = *(_DWORD *)(v5 + 7072);
  *(_DWORD *)(v5 + 8352) = v6;
  *(_DWORD *)(v5 + 7632) = *(_DWORD *)(v5 + 9680);
  if (v10)
    v15 = 59;
  else
    v15 = 60;
  *(_DWORD *)(v5 + 8280) = v15;
  if (v10)
    v16 = 80;
  else
    v16 = 81;
  *(_DWORD *)(v5 + 8440) = v16;
  v17 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                      + 8
                                      * (int)((12803
                                             * (v14 != ((*(_QWORD *)(v5 + 9416) - 1400777838) & 0xCE413D5F)
                                                     - 8457)) ^ (*(_QWORD *)(v5 + 9416) + 2059600627)))
                          - 4);
  *(_DWORD *)(v5 + 9688) = 1;
  *(_DWORD *)(v5 + 9736) = 1;
  return v17();
}

uint64_t sub_1002CA91C@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v6 = (a1 ^ 0x21BEu) - 2059596297;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((8475 * ((v1 ^ a1 ^ 0x89) & 1)) ^ a1 ^ 0x21BE))
                         - (v6 ^ 0x853D101BLL));
  *(_DWORD *)(v3 + 8328) = 45;
  *(_DWORD *)(v3 + 7216) = 75;
  *(_QWORD *)(v3 + 7144) = v6;
  *(_QWORD *)(v3 + 7240) = *(_QWORD *)(v3 + 6088);
  *(_QWORD *)(v3 + 7248) = *(_QWORD *)(v3 + 3344);
  *(_QWORD *)(v3 + 7232) = *(_QWORD *)(v3 + 3280);
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 7192) = *(_DWORD *)(v3 + 7436);
  *(_DWORD *)(v3 + 7272) = *(_DWORD *)(v3 + 7456);
  *(_DWORD *)(v3 + 7312) = *(_DWORD *)(v3 + 9328);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 8064) = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 6744) = v4;
  *(_DWORD *)(v3 + 7256) = *(_DWORD *)(v3 + 7500);
  *(_DWORD *)(v3 + 7280) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 7128) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 7344) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8136) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 7168) = *(_DWORD *)(v3 + 7464);
  *(_DWORD *)(v3 + 7184) = *(_DWORD *)(v3 + 7488);
  *(_DWORD *)(v3 + 7296) = *(_DWORD *)(v3 + 7484);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 7304) = *(_DWORD *)(v3 + 7480);
  *(_DWORD *)(v3 + 7264) = *(_DWORD *)(v3 + 3292);
  *(_DWORD *)(v3 + 7176) = *(_DWORD *)(v3 + 9248);
  *(_DWORD *)(v3 + 7288) = *(_DWORD *)(v3 + 7476);
  *(_DWORD *)(v3 + 7224) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 7416) = *(_DWORD *)(v3 + 7432);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 7328) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7112) = *(_DWORD *)(v3 + 0x2000);
  *(_DWORD *)(v3 + 7208) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 7408) = *(_DWORD *)(v3 + 7460);
  *(_DWORD *)(v3 + 7160) = *(_DWORD *)(v3 + 7440);
  *(_DWORD *)(v3 + 7320) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 7336) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 9400) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 7200) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 6760) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 9584) = v2;
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  *(_DWORD *)(v3 + 8236) = *(_DWORD *)(v3 + 9240);
  return v7();
}

void sub_1002CAAE4(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_DWORD *)(v1 + 8080) = *(_DWORD *)(v1 + 8032);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 8064) = *(_DWORD *)(v1 + 7992);
  *(_DWORD *)(v1 + 6744) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 9424);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 8136) = *(_DWORD *)(v1 + 9480);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 9104) = *(_DWORD *)(v1 + 9440);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  v2 = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 7344) = v2;
  *(_DWORD *)(v1 + 7224) = v2;
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8040) = *(_DWORD *)(v1 + 8020);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 8116) = *(_DWORD *)(v1 + 8024);
  *(_DWORD *)(v1 + 9072) = *(_DWORD *)(v1 + 9632);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 8000);
  *(_DWORD *)(v1 + 8272) = *(_DWORD *)(v1 + 7984);
  *(_DWORD *)(v1 + 8056) = *(_DWORD *)(v1 + 8008);
  *(_DWORD *)(v1 + 7112) = *(_DWORD *)(v1 + 0x2000);
  v3 = *(_DWORD *)(v1 + 9528);
  *(_DWORD *)(v1 + 7264) = v3;
  *(_DWORD *)(v1 + 7208) = v3;
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 9400) = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 6760) = *(_DWORD *)(v1 + 8280);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8328) = 45;
  JUMPOUT(0x1002CAC38);
}

uint64_t sub_1002CAC50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X5>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;

  v13 = a5 ^ (v12 + 236);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((v6 + v13 - 137) * (v5 == 61)) ^ a5));
  *(_DWORD *)(v7 + 9464) = 994009416;
  *(_DWORD *)(v7 + 4292) = 69;
  v15 = *(_QWORD *)(v7 + 1936);
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  *(_QWORD *)(v7 + 9608) = *(_QWORD *)(v7 + 3816);
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = v8;
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  v16 = *(_DWORD *)(v7 + 9680);
  *(_DWORD *)(v7 + 5312) = v16;
  *(_QWORD *)(v7 + 9416) = v13;
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 6904);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 6872);
  *(_QWORD *)(v7 + 7656) = *(_QWORD *)(v7 + 6864);
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 6888);
  *(_DWORD *)(v7 + 7632) = v16;
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 6880);
  *(_QWORD *)(v7 + 7704) = *(_QWORD *)(v7 + 6896);
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v17 = *(_QWORD *)(v7 + 3120);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 3224);
  *(_QWORD *)(v7 + 9496) = v17;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 6928);
  *(_DWORD *)(v7 + 7936) = a3;
  v18 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v18;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = *(_DWORD *)(v7 + 6856);
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  *(_DWORD *)(v7 + 9384) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = v8;
  *(_DWORD *)(v7 + 9424) = v10;
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = v9;
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 9440) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = *(_DWORD *)(v7 + 6912);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 6920);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  v19 = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 9736) = v19;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = v19;
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v14(a1, a2, v17, a4, v15, a4, 101, 32);
}

uint64_t sub_1002CAF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);

  v11 = (v6 - 981492427) & 0xBFBD5FD7;
  v12 = *(_DWORD *)(v8 + 8280) == 9;
  *(_QWORD *)(v8 + 9416) = v11;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 + 8 * (int)((((v12 ^ (v6 - v7)) & 1) * (v11 ^ (v10 + 135))) ^ v6)) - 4);
  *(_DWORD *)(v8 + 9688) = 1;
  *(_DWORD *)(v8 + 8280) = 9;
  *(_QWORD *)(v8 + 7664) = *(_QWORD *)(v8 + 6904);
  *(_QWORD *)(v8 + 7680) = *(_QWORD *)(v8 + 6872);
  *(_QWORD *)(v8 + 7656) = *(_QWORD *)(v8 + 6864);
  *(_QWORD *)(v8 + 7688) = *(_QWORD *)(v8 + 6888);
  *(_QWORD *)(v8 + 7696) = *(_QWORD *)(v8 + 6880);
  *(_QWORD *)(v8 + 7704) = *(_QWORD *)(v8 + 6896);
  *(_QWORD *)(v8 + 8408) = *(_QWORD *)(v8 + 8432);
  *(_QWORD *)(v8 + 8400) = *(_QWORD *)(v8 + 8416);
  *(_QWORD *)(v8 + 8392) = *(_QWORD *)(v8 + 8536);
  *(_QWORD *)(v8 + 8384) = *(_QWORD *)(v8 + 8488);
  *(_QWORD *)(v8 + 8376) = *(_QWORD *)(v8 + 8472);
  *(_DWORD *)(v8 + 8032) = *(_DWORD *)(v8 + 8080);
  *(_DWORD *)(v8 + 7712) = *(_DWORD *)(v8 + 6928);
  *(_DWORD *)(v8 + 7936) = *(_DWORD *)(v8 + 7920);
  *(_DWORD *)(v8 + 8312) = *(_DWORD *)(v8 + 7904);
  *(_DWORD *)(v8 + 6944) = *(_DWORD *)(v8 + 7040);
  *(_DWORD *)(v8 + 7648) = *(_DWORD *)(v8 + 6856);
  *(_DWORD *)(v8 + 7992) = *(_DWORD *)(v8 + 8064);
  *(_DWORD *)(v8 + 6936) = *(_DWORD *)(v8 + 6952);
  *(_DWORD *)(v8 + 8368) = *(_DWORD *)(v8 + 8196);
  *(_DWORD *)(v8 + 7552) = *(_DWORD *)(v8 + 6984);
  *(_DWORD *)(v8 + 8504) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 9480) = *(_DWORD *)(v8 + 8136);
  *(_DWORD *)(v8 + 6968) = *(_DWORD *)(v8 + 7000);
  *(_DWORD *)(v8 + 7952) = *(_DWORD *)(v8 + 7928);
  *(_DWORD *)(v8 + 7888) = *(_DWORD *)(v8 + 7912);
  *(_DWORD *)(v8 + 8520) = *(_DWORD *)(v8 + 8464);
  *(_DWORD *)(v8 + 8356) = *(_DWORD *)(v8 + 8532);
  *(_DWORD *)(v8 + 8360) = *(_DWORD *)(v8 + 8424);
  *(_DWORD *)(v8 + 8512) = *(_DWORD *)(v8 + 8480);
  *(_DWORD *)(v8 + 7640) = *(_DWORD *)(v8 + 6912);
  *(_DWORD *)(v8 + 6992) = *(_DWORD *)(v8 + 7008);
  *(_DWORD *)(v8 + 7672) = *(_DWORD *)(v8 + 6920);
  *(_DWORD *)(v8 + 8020) = *(_DWORD *)(v8 + 8040);
  *(_DWORD *)(v8 + 9128) = *(_DWORD *)(v8 + 8548);
  *(_DWORD *)(v8 + 8024) = *(_DWORD *)(v8 + 8116);
  *(_DWORD *)(v8 + 8000) = *(_DWORD *)(v8 + 7152);
  *(_DWORD *)(v8 + 7984) = *(_DWORD *)(v8 + 8272);
  *(_DWORD *)(v8 + 8008) = *(_DWORD *)(v8 + 8056);
  *(_DWORD *)(v8 + 7592) = *(_DWORD *)(v8 + 7080);
  *(_DWORD *)(v8 + 8496) = *(_DWORD *)(v8 + 8188);
  *(_DWORD *)(v8 + 7584) = *(_DWORD *)(v8 + 7088);
  *(_DWORD *)(v8 + 7576) = *(_DWORD *)(v8 + 7072);
  *(_DWORD *)(v8 + 9736) = 1;
  *(_DWORD *)(v8 + 8440) = *(_DWORD *)(v8 + 9240);
  *(_DWORD *)(v8 + 8352) = *(_DWORD *)(v8 + 9040);
  *(_DWORD *)(v8 + 7632) = *(_DWORD *)(v8 + 9680);
  return v13(a1, 1, a3, a4, a5, a6, 0, 1);
}

void sub_1002CB17C()
{
  uint64_t v0;
  int v1;
  int v2;

  v1 = *(_DWORD *)(v0 + 7920);
  *(_DWORD *)(v0 + 8312) = *(_DWORD *)(v0 + 7904);
  v2 = *(_DWORD *)(v0 + 7928);
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  *(_QWORD *)(v0 + 7664) = *(_QWORD *)(v0 + 6904);
  *(_QWORD *)(v0 + 7680) = *(_QWORD *)(v0 + 6872);
  *(_QWORD *)(v0 + 7656) = *(_QWORD *)(v0 + 6864);
  *(_QWORD *)(v0 + 7688) = *(_QWORD *)(v0 + 6888);
  *(_QWORD *)(v0 + 7696) = *(_QWORD *)(v0 + 6880);
  *(_QWORD *)(v0 + 7704) = *(_QWORD *)(v0 + 6896);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 7712) = *(_DWORD *)(v0 + 6928);
  *(_DWORD *)(v0 + 7936) = v1;
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7648) = *(_DWORD *)(v0 + 6856);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 7952) = v2;
  *(_DWORD *)(v0 + 7640) = *(_DWORD *)(v0 + 6912);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 7672) = *(_DWORD *)(v0 + 6920);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 7592) = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 7584) = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 7576) = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 7632) = *(_DWORD *)(v0 + 9680);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 8280) = 10;
  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_QWORD *)(v0 + 9600) = *(_QWORD *)(v0 + 9280);
  *(_QWORD *)(v0 + 9608) = *(_QWORD *)(v0 + 9016);
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 9616) = *(_DWORD *)(v0 + 9320);
  *(_DWORD *)(v0 + 9384) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 9440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 9664) = *(_DWORD *)(v0 + 8456);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 9624) = *(_DWORD *)(v0 + 9264);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9184);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 9592) = *(_DWORD *)(v0 + 8328);
  JUMPOUT(0x1002C0CC0);
}

uint64_t sub_1002CB364(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  int v19;

  v14 = v5 ^ 0x6CF;
  v15 = v5 ^ 0x6CF ^ (588 * (v4 != 45));
  v16 = (v14 - 2046971454) & 0xFF3F54DF;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 + 8 * v15) - (v16 ^ v7));
  *(_QWORD *)(v8 + 7144) = v16;
  *(_QWORD *)(v8 + 7664) = *(_QWORD *)(v8 + 6904);
  *(_QWORD *)(v8 + 7680) = *(_QWORD *)(v8 + 6872);
  *(_QWORD *)(v8 + 7656) = *(_QWORD *)(v8 + 6864);
  *(_QWORD *)(v8 + 7688) = *(_QWORD *)(v8 + 6888);
  *(_QWORD *)(v8 + 7696) = *(_QWORD *)(v8 + 6880);
  *(_QWORD *)(v8 + 7704) = *(_QWORD *)(v8 + 6896);
  *(_QWORD *)(v8 + 9568) = *(_QWORD *)(v8 + 8944);
  *(_QWORD *)(v8 + 8888) = *(_QWORD *)(v8 + 8576);
  *(_QWORD *)(v8 + 9200) = *(_QWORD *)(v8 + 8952);
  *(_QWORD *)(v8 + 8880) = *(_QWORD *)(v8 + 8936);
  *(_DWORD *)(v8 + 7712) = *(_DWORD *)(v8 + 6928);
  *(_DWORD *)(v8 + 7936) = a4;
  *(_DWORD *)(v8 + 9448) = *(_DWORD *)(v8 + 9116);
  *(_DWORD *)(v8 + 8312) = *(_DWORD *)(v8 + 7904);
  *(_DWORD *)(v8 + 6944) = *(_DWORD *)(v8 + 7040);
  *(_DWORD *)(v8 + 7648) = *(_DWORD *)(v8 + 6856);
  *(_DWORD *)(v8 + 9384) = *(_DWORD *)(v8 + 8832);
  *(_DWORD *)(v8 + 8964) = *(_DWORD *)(v8 + 9152);
  *(_DWORD *)(v8 + 6936) = *(_DWORD *)(v8 + 6952);
  *(_DWORD *)(v8 + 9520) = *(_DWORD *)(v8 + 8196);
  *(_DWORD *)(v8 + 7552) = *(_DWORD *)(v8 + 6984);
  *(_DWORD *)(v8 + 6968) = *(_DWORD *)(v8 + 7000);
  *(_DWORD *)(v8 + 7952) = v11;
  *(_DWORD *)(v8 + 7888) = *(_DWORD *)(v8 + 7912);
  *(_DWORD *)(v8 + 8872) = *(_DWORD *)(v8 + 8912);
  *(_DWORD *)(v8 + 7640) = *(_DWORD *)(v8 + 6912);
  *(_DWORD *)(v8 + 6992) = *(_DWORD *)(v8 + 7008);
  *(_DWORD *)(v8 + 7672) = *(_DWORD *)(v8 + 6920);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 9160) = *(_DWORD *)(v8 + 8920);
  *(_DWORD *)(v8 + 7592) = *(_DWORD *)(v8 + 7080);
  *(_DWORD *)(v8 + 8616) = *(_DWORD *)(v8 + 8904);
  *(_DWORD *)(v8 + 7584) = *(_DWORD *)(v8 + 7088);
  *(_DWORD *)(v8 + 7576) = *(_DWORD *)(v8 + 7072);
  *(_DWORD *)(v8 + 9096) = *(_DWORD *)(v8 + 8900);
  *(_DWORD *)(v8 + 9584) = *(_DWORD *)(v8 + 9184);
  *(_DWORD *)(v8 + 8984) = *(_DWORD *)(v8 + 8572);
  *(_DWORD *)(v8 + 8612) = *(_DWORD *)(v8 + 8932);
  *(_DWORD *)(v8 + 7632) = *(_DWORD *)(v8 + 9680);
  *(_DWORD *)(v8 + 9424) = v12;
  *(_DWORD *)(v8 + 7280) = v12;
  LODWORD(v16) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8760) = v16;
  *(_DWORD *)(v8 + 7344) = v16;
  *(_DWORD *)(v8 + 8736) = v10;
  *(_DWORD *)(v8 + 6744) = v10;
  *(_DWORD *)(v8 + 7168) = v10;
  *(_DWORD *)(v8 + 7424) = *(_DWORD *)(v8 + 8456);
  *(_DWORD *)(v8 + 8000) = v6;
  *(_DWORD *)(v8 + 7328) = v6;
  LODWORD(v16) = *(_DWORD *)(v8 + 8188);
  *(_DWORD *)(v8 + 9528) = v16;
  *(_DWORD *)(v8 + 7208) = v16;
  LODWORD(v16) = *(_DWORD *)(v8 + 8552);
  *(_DWORD *)(v8 + 9408) = v16;
  *(_DWORD *)(v8 + 7336) = v16;
  LODWORD(v16) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 9736) = v16;
  *(_DWORD *)(v8 + 8704) = v16;
  *(_DWORD *)(v8 + 7200) = v16;
  *(_DWORD *)(v8 + 9392) = *(_DWORD *)(v8 + 8544);
  *(_DWORD *)(v8 + 7216) = 37;
  *(_DWORD *)(v8 + 6760) = 54;
  v18 = *(_QWORD *)(v8 + 2552);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 2296);
  *(_QWORD *)(v8 + 9496) = *(_QWORD *)(v8 + 2288);
  *(_DWORD *)(v8 + 8032) = *(_DWORD *)(v8 + 8080);
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  v19 = *(_DWORD *)(v8 + 9272);
  *(_DWORD *)(v8 + 9656) = v19;
  *(_DWORD *)(v8 + 7992) = *(_DWORD *)(v8 + 8064);
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 8136);
  LODWORD(v16) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8712) = v16;
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 9440) = *(_DWORD *)(v8 + 9104);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 8020) = *(_DWORD *)(v8 + 8040);
  *(_DWORD *)(v8 + 8024) = *(_DWORD *)(v8 + 8116);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 9632) = *(_DWORD *)(v8 + 9072);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  *(_DWORD *)(v8 + 7984) = *(_DWORD *)(v8 + 8272);
  *(_DWORD *)(v8 + 8008) = *(_DWORD *)(v8 + 8056);
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  *(_QWORD *)(v8 + 7240) = *(_QWORD *)(v8 + 2504);
  *(_QWORD *)(v8 + 7248) = *(_QWORD *)(v8 + 6728);
  *(_QWORD *)(v8 + 7232) = *(_QWORD *)(v8 + 6008);
  *(_DWORD *)(v8 + 8260) = v9;
  *(_DWORD *)(v8 + 7192) = *(_DWORD *)(v8 + 7436);
  *(_DWORD *)(v8 + 7272) = *(_DWORD *)(v8 + 7456);
  *(_DWORD *)(v8 + 7312) = *(_DWORD *)(v8 + 9328);
  *(_DWORD *)(v8 + 7256) = *(_DWORD *)(v8 + 7500);
  *(_DWORD *)(v8 + 7128) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 7184) = *(_DWORD *)(v8 + 7488);
  *(_DWORD *)(v8 + 7296) = *(_DWORD *)(v8 + 7484);
  *(_DWORD *)(v8 + 7304) = *(_DWORD *)(v8 + 7480);
  *(_DWORD *)(v8 + 7264) = v19;
  *(_DWORD *)(v8 + 7176) = *(_DWORD *)(v8 + 9248);
  *(_DWORD *)(v8 + 7288) = *(_DWORD *)(v8 + 7476);
  *(_DWORD *)(v8 + 7224) = v16;
  *(_DWORD *)(v8 + 7416) = *(_DWORD *)(v8 + 7432);
  *(_DWORD *)(v8 + 7112) = *(_DWORD *)(v8 + 0x2000);
  *(_DWORD *)(v8 + 7408) = *(_DWORD *)(v8 + 7460);
  *(_DWORD *)(v8 + 9624) = *(_DWORD *)(v8 + 9264);
  *(_DWORD *)(v8 + 7160) = *(_DWORD *)(v8 + 7440);
  *(_DWORD *)(v8 + 7320) = *(_DWORD *)(v8 + 9156);
  *(_DWORD *)(v8 + 9400) = *(_DWORD *)(v8 + 9224);
  *(_DWORD *)(v8 + 8236) = *(_DWORD *)(v8 + 9240);
  return v17(a1, a2, v18);
}

uint64_t sub_1002CB714(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t (*v11)(void);

  v9 = (v2 - 1078127550) & 0xC57FF25F;
  v10 = (*(_DWORD *)(v4 + 8280) - 26) > 0xEEu;
  *(_QWORD *)(v4 + 7144) = v9;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (int)((((((v2 - 843232030) & 0xB77FB9BF) + 1375) ^ v9) * v10) ^ v2))
                          - 4);
  *(_DWORD *)(v4 + 7216) = 9;
  *(_DWORD *)(v4 + 6760) = 26;
  *(_QWORD *)(v4 + 7664) = *(_QWORD *)(v4 + 6904);
  *(_QWORD *)(v4 + 7680) = *(_QWORD *)(v4 + 6872);
  *(_QWORD *)(v4 + 7656) = *(_QWORD *)(v4 + 6864);
  *(_QWORD *)(v4 + 7688) = *(_QWORD *)(v4 + 6888);
  *(_QWORD *)(v4 + 7696) = *(_QWORD *)(v4 + 6880);
  *(_QWORD *)(v4 + 7704) = *(_QWORD *)(v4 + 6896);
  *(_QWORD *)(v4 + 9568) = *(_QWORD *)(v4 + 8944);
  *(_QWORD *)(v4 + 8888) = *(_QWORD *)(v4 + 8576);
  *(_QWORD *)(v4 + 9200) = *(_QWORD *)(v4 + 8952);
  *(_QWORD *)(v4 + 8880) = *(_QWORD *)(v4 + 8936);
  *(_QWORD *)(v4 + 7240) = *(_QWORD *)(v4 + 2200);
  *(_QWORD *)(v4 + 7248) = *(_QWORD *)(v4 + 4064);
  *(_QWORD *)(v4 + 7232) = *(_QWORD *)(v4 + 4048);
  *(_DWORD *)(v4 + 8260) = v5;
  *(_DWORD *)(v4 + 7712) = *(_DWORD *)(v4 + 6928);
  *(_DWORD *)(v4 + 7192) = *(_DWORD *)(v4 + 7436);
  *(_DWORD *)(v4 + 7936) = v3;
  *(_DWORD *)(v4 + 7272) = *(_DWORD *)(v4 + 7456);
  *(_DWORD *)(v4 + 9448) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 7312) = *(_DWORD *)(v4 + 9328);
  *(_DWORD *)(v4 + 8312) = *(_DWORD *)(v4 + 7904);
  *(_DWORD *)(v4 + 6944) = *(_DWORD *)(v4 + 7040);
  *(_DWORD *)(v4 + 7648) = *(_DWORD *)(v4 + 6856);
  *(_DWORD *)(v4 + 9384) = *(_DWORD *)(v4 + 8832);
  *(_DWORD *)(v4 + 8964) = *(_DWORD *)(v4 + 9152);
  *(_DWORD *)(v4 + 6744) = v6;
  *(_DWORD *)(v4 + 6936) = *(_DWORD *)(v4 + 6952);
  *(_DWORD *)(v4 + 9520) = *(_DWORD *)(v4 + 8196);
  *(_DWORD *)(v4 + 7552) = *(_DWORD *)(v4 + 6984);
  *(_DWORD *)(v4 + 7256) = *(_DWORD *)(v4 + 7500);
  *(_DWORD *)(v4 + 7280) = v7;
  *(_DWORD *)(v4 + 7128) = *(_DWORD *)(v4 + 7616);
  *(_DWORD *)(v4 + 7344) = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 6968) = *(_DWORD *)(v4 + 7000);
  *(_DWORD *)(v4 + 7952) = a2;
  *(_DWORD *)(v4 + 7888) = *(_DWORD *)(v4 + 7912);
  *(_DWORD *)(v4 + 7168) = v6;
  *(_DWORD *)(v4 + 7184) = *(_DWORD *)(v4 + 7488);
  *(_DWORD *)(v4 + 7296) = *(_DWORD *)(v4 + 7484);
  *(_DWORD *)(v4 + 7424) = *(_DWORD *)(v4 + 8456);
  *(_DWORD *)(v4 + 7304) = *(_DWORD *)(v4 + 7480);
  *(_DWORD *)(v4 + 8872) = *(_DWORD *)(v4 + 8912);
  *(_DWORD *)(v4 + 7264) = *(_DWORD *)(v4 + 4100);
  *(_DWORD *)(v4 + 7640) = *(_DWORD *)(v4 + 6912);
  *(_DWORD *)(v4 + 7176) = *(_DWORD *)(v4 + 9248);
  *(_DWORD *)(v4 + 7288) = *(_DWORD *)(v4 + 7476);
  *(_DWORD *)(v4 + 7224) = *(_DWORD *)(v4 + 4044);
  *(_DWORD *)(v4 + 6992) = *(_DWORD *)(v4 + 7008);
  *(_DWORD *)(v4 + 7672) = *(_DWORD *)(v4 + 6920);
  *(_DWORD *)(v4 + 9136) = *(_DWORD *)(v4 + 9056);
  *(_DWORD *)(v4 + 7416) = *(_DWORD *)(v4 + 7432);
  *(_DWORD *)(v4 + 9160) = *(_DWORD *)(v4 + 8920);
  *(_DWORD *)(v4 + 7328) = *(_DWORD *)(v4 + 7152);
  *(_DWORD *)(v4 + 7592) = *(_DWORD *)(v4 + 7080);
  *(_DWORD *)(v4 + 7112) = *(_DWORD *)(v4 + 0x2000);
  *(_DWORD *)(v4 + 7208) = *(_DWORD *)(v4 + 8188);
  *(_DWORD *)(v4 + 7408) = *(_DWORD *)(v4 + 7460);
  *(_DWORD *)(v4 + 9624) = *(_DWORD *)(v4 + 9264);
  *(_DWORD *)(v4 + 8616) = *(_DWORD *)(v4 + 8904);
  *(_DWORD *)(v4 + 7160) = *(_DWORD *)(v4 + 7440);
  *(_DWORD *)(v4 + 7584) = *(_DWORD *)(v4 + 7088);
  *(_DWORD *)(v4 + 7320) = *(_DWORD *)(v4 + 9156);
  *(_DWORD *)(v4 + 7576) = *(_DWORD *)(v4 + 7072);
  *(_DWORD *)(v4 + 7336) = *(_DWORD *)(v4 + 8552);
  *(_DWORD *)(v4 + 9400) = *(_DWORD *)(v4 + 9224);
  *(_DWORD *)(v4 + 7200) = *(_DWORD *)(v4 + 9064);
  *(_DWORD *)(v4 + 9096) = *(_DWORD *)(v4 + 8900);
  *(_DWORD *)(v4 + 9584) = *(_DWORD *)(v4 + 9184);
  *(_DWORD *)(v4 + 8984) = *(_DWORD *)(v4 + 8572);
  *(_DWORD *)(v4 + 9392) = *(_DWORD *)(v4 + 8544);
  *(_DWORD *)(v4 + 8236) = *(_DWORD *)(v4 + 9240);
  *(_DWORD *)(v4 + 8612) = *(_DWORD *)(v4 + 8932);
  *(_DWORD *)(v4 + 7632) = *(_DWORD *)(v4 + 9680);
  return v11();
}

void sub_1002CB9BC(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8260) = *(_DWORD *)(v1 + 8332);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 8312) = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  v2 = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 3116) = v2;
  *(_DWORD *)(v1 + 6744) = v2;
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 7112) = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 9624) = *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9400) = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_DWORD *)(v1 + 7216) = 8;
  *(_DWORD *)(v1 + 6760) = 25;
  *(_QWORD *)(v1 + 7240) = *(_QWORD *)(v1 + 2624);
  v3 = *(_QWORD *)(v1 + 4160);
  *(_QWORD *)(v1 + 7248) = v3;
  *(_QWORD *)(v1 + 7232) = v3;
  *(_DWORD *)(v1 + 7264) = *(_DWORD *)(v1 + 8840);
  JUMPOUT(0x1003261BCLL);
}

uint64_t sub_1002CBC18(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  int v13;
  int v14;

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10
                                                                      + 8
                                                                      * ((7937
                                                                        * (v4 == ((v5 ^ 0x5F) + 31))) ^ v5))
                                                          - ((v5 + 1835240631) & 0x929C659F ^ 0x197));
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  v12 = *(_QWORD *)(v6 + 4160);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 2696);
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 3000);
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = a4;
  v13 = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 8312) = v13;
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 9424) = v9;
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = v8;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = v7;
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  v14 = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9736) = v14;
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 9528) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 9408) = v14;
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  return v11(a1, a2, v12);
}

uint64_t sub_1002CBED8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;

  v2 = a1 - 2059595753;
  v3 = *(_DWORD *)(v1 + 8548);
  v4 = v2 - 415;
  v5 = *(_DWORD *)(v1 + 7768) + ((v2 + 1656812174) & v3) + ((v2 + 1656812174) & v3 ^ 0xE7FE0444) + 402783164;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8032) = *(_DWORD *)(v1 + 8080);
  *(_DWORD *)(v1 + 8764) = *(_DWORD *)(v1 + 8828);
  *(_DWORD *)(v1 + 8768) = *(_DWORD *)(v1 + 8860);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 3084) = v3;
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 9656) = *(_DWORD *)(v1 + 9272);
  v6 = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 8312) = v6;
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 7992) = *(_DWORD *)(v1 + 8064);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8748) = *(_DWORD *)(v1 + 8980);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 8736) = *(_DWORD *)(v1 + 8792);
  *(_DWORD *)(v1 + 8728) = *(_DWORD *)(v1 + 8816);
  *(_DWORD *)(v1 + 8744) = *(_DWORD *)(v1 + 8628);
  *(_DWORD *)(v1 + 8720) = *(_DWORD *)(v1 + 8968);
  *(_DWORD *)(v1 + 9424) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 8760) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 8752) = *(_DWORD *)(v1 + 8136);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 8712) = *(_DWORD *)(v1 + 8868);
  *(_DWORD *)(v1 + 8696) = *(_DWORD *)(v1 + 8840);
  *(_DWORD *)(v1 + 9440) = *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 8688) = *(_DWORD *)(v1 + 8864);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 8680) = *(_DWORD *)(v1 + 8808);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8020) = *(_DWORD *)(v1 + 8040);
  *(_DWORD *)(v1 + 8024) = *(_DWORD *)(v1 + 8116);
  *(_DWORD *)(v1 + 8672) = *(_DWORD *)(v1 + 8848);
  *(_DWORD *)(v1 + 9632) = *(_DWORD *)(v1 + 9072);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 8000) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 8664) = *(_DWORD *)(v1 + 8992);
  *(_DWORD *)(v1 + 7984) = *(_DWORD *)(v1 + 8272);
  *(_DWORD *)(v1 + 8008) = *(_DWORD *)(v1 + 8056);
  *(_DWORD *)(v1 + 9432) = *(_DWORD *)(v1 + 9172);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 9528) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 8656) = *(_DWORD *)(v1 + 8776);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 8648) = *(_DWORD *)(v1 + 9004);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 8640) = *(_DWORD *)(v1 + 8784);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  v7 = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9736) = v7;
  *(_DWORD *)(v1 + 9408) = v7;
  *(_DWORD *)(v1 + 8704) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 8632) = *(_DWORD *)(v1 + 8800);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_QWORD *)(v1 + 9504) = *(_QWORD *)(v1 + 7880);
  *(_QWORD *)(v1 + 9576) = *(_QWORD *)(v1 + 2632);
  *(_QWORD *)(v1 + 9496) = *(_QWORD *)(v1 + 3000);
  *(_DWORD *)(v1 + 9688) = v5;
  *(_DWORD *)(v1 + 7768) = v5;
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_QWORD *)(v1 + 9680) = *(_QWORD *)(v1 + 9504);
  if ((v4 ^ 0x853D1004) + 8378 + v6 - 8395)
    v8 = 137;
  else
    v8 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v1 + 9640) + v8) >> ((-45 * (v4 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v1 + 9640) + v8)) == 30)) ^ (v4 + 2059604150))))();
}

uint64_t sub_1002CC1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * (((((v4 == 9) ^ (v3 + 106)) & 1)
                                                                                  * (((v3 + 8339) | 0x108) ^ 0x2548)) ^ v3))
                                                                    - 12))(a1, *(unsigned int *)(v5 + 7964), a3, v6);
}

uint64_t sub_1002CC1F8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v2 = *(_DWORD *)(v1 + 3932) + 1;
  v3 = v0 & 0xCD7F5DDF;
  v4 = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 8312) = *(_DWORD *)(v1 + 7904);
  v5 = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7936) = v4;
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = v5;
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 9624) = *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  v6 = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 6744) = v6;
  *(_DWORD *)(v1 + 7984) = *(_DWORD *)(v1 + 8272);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_QWORD *)(v1 + 9600) = *(_QWORD *)(v1 + 9280);
  *(_QWORD *)(v1 + 9608) = *(_QWORD *)(v1 + 9016);
  *(_DWORD *)(v1 + 8032) = *(_DWORD *)(v1 + 8080);
  *(_DWORD *)(v1 + 9656) = *(_DWORD *)(v1 + 9272);
  *(_DWORD *)(v1 + 9616) = *(_DWORD *)(v1 + 9320);
  *(_DWORD *)(v1 + 7992) = *(_DWORD *)(v1 + 8064);
  v7 = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 9424) = v7;
  *(_DWORD *)(v1 + 9480) = *(_DWORD *)(v1 + 8136);
  *(_DWORD *)(v1 + 9440) = *(_DWORD *)(v1 + 9104);
  v8 = *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 9664) = v8;
  *(_DWORD *)(v1 + 8020) = *(_DWORD *)(v1 + 8040);
  *(_DWORD *)(v1 + 8024) = *(_DWORD *)(v1 + 8116);
  *(_DWORD *)(v1 + 9632) = *(_DWORD *)(v1 + 9072);
  v9 = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 8000) = v9;
  *(_DWORD *)(v1 + 8008) = *(_DWORD *)(v1 + 8056);
  v10 = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 9528) = v10;
  v11 = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9408) = v11;
  *(_DWORD *)(v1 + 6760) = 18;
  *(_DWORD *)(v1 + 8280) = 18;
  *(_DWORD *)(v1 + 9592) = *(_DWORD *)(v1 + 8328);
  v12 = *(_DWORD *)(v1 + 3936);
  *(_DWORD *)(v1 + 7224) = v6;
  *(_QWORD *)(v1 + 7144) = v3;
  *(_DWORD *)(v1 + 9576) = 0;
  *(_DWORD *)(v1 + 9496) = 0;
  *(_DWORD *)(v1 + 9012) = 0;
  *(_DWORD *)(v1 + 9488) = 0;
  *(_DWORD *)(v1 + 9472) = 0;
  *(_DWORD *)(v1 + 3932) = v2;
  *(_DWORD *)(v1 + 3936) = v12;
  v13 = v12 + ((v3 + 2059598853) ^ 0x47C6063B);
  v14 = v2 - 1599099516 < v13;
  if ((v2 - 1599099516) < 0x17277854 != v13 < 0x17277854)
    v14 = v13 < 0x17277854;
  if (v14)
    v15 = 8;
  else
    v15 = 0;
  v16 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                      + 8
                                      * ((47
                                        * ((*(_BYTE *)(*(_QWORD *)(v1 + 9536) + (v15 ^ 0x3B)) ^ v15) == 185)) ^ ((int)v3 + 2059596280)))
                          - 12);
  *(_DWORD *)(v1 + 9456) = 1;
  *(_DWORD *)(v1 + 7216) = 3;
  *(_QWORD *)(v1 + 7240) = *(_QWORD *)(v1 + 3976);
  *(_QWORD *)(v1 + 7248) = *(_QWORD *)(v1 + 3968);
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 4512);
  *(_DWORD *)(v1 + 8260) = *(_DWORD *)(v1 + 8332);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = v7;
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 7424) = v8;
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 7328) = v9;
  *(_DWORD *)(v1 + 7208) = v10;
  *(_DWORD *)(v1 + 7336) = v11;
  *(_DWORD *)(v1 + 7264) = *(_DWORD *)(v1 + 3964);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 7112) = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 9400) = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 9432) = 1;
  *(_DWORD *)(v1 + 9080) = 1;
  return v16();
}

uint64_t sub_1002CC400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  uint64_t v15;

  v11 = a4 ^ (7326 * (v4 == 33));
  v12 = (a4 - v5 - 2597);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * v11)
                                                          - ((((a4 + 19727576) | 0x84100006) - 4) ^ v12));
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = a3;
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = v9;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  *(_QWORD *)(v6 + 9416) = v12;
  v14 = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 8312) = v14;
  *(_DWORD *)(v6 + 9128) = v14;
  LODWORD(v12) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 9520) = v12;
  *(_DWORD *)(v6 + 8368) = v12;
  LODWORD(v12) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v12;
  *(_DWORD *)(v6 + 8504) = v12;
  LODWORD(v12) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 8752) = v12;
  *(_DWORD *)(v6 + 9480) = v12;
  LODWORD(v12) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 9528) = v12;
  *(_DWORD *)(v6 + 8496) = v12;
  *(_DWORD *)(v6 + 8440) = 77;
  *(_DWORD *)(v6 + 8280) = 42;
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  v15 = *(_QWORD *)(v6 + 2288);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 3000);
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 2560);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 9424) = *(_DWORD *)(v6 + 8608);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9736) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 9408) = v8;
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_QWORD *)(v6 + 8408) = *(_QWORD *)(v6 + 8432);
  *(_QWORD *)(v6 + 8400) = *(_QWORD *)(v6 + 8416);
  *(_QWORD *)(v6 + 8392) = *(_QWORD *)(v6 + 8536);
  *(_QWORD *)(v6 + 8384) = *(_QWORD *)(v6 + 8488);
  *(_QWORD *)(v6 + 8376) = *(_QWORD *)(v6 + 8472);
  *(_DWORD *)(v6 + 9152) = v8;
  *(_DWORD *)(v6 + 8520) = *(_DWORD *)(v6 + 8464);
  *(_DWORD *)(v6 + 8356) = *(_DWORD *)(v6 + 8532);
  *(_DWORD *)(v6 + 8360) = *(_DWORD *)(v6 + 8424);
  *(_DWORD *)(v6 + 8512) = *(_DWORD *)(v6 + 8480);
  *(_DWORD *)(v6 + 8352) = v7;
  return v13(a1, a2, v15);
}

uint64_t sub_1002CC74C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t (*v10)(void);
  int v11;
  int v12;

  v10 = (uint64_t (*)(void))(*(_QWORD *)(v8
                                      + 8
                                      * ((10741 * (v2 == (((v9 + (a2 ^ 0xF6) - 98) | 1) ^ 0xE))) ^ a2 ^ 0x1BF6))
                          - 12);
  *(_QWORD *)(v5 + 7664) = *(_QWORD *)(v5 + 6904);
  *(_QWORD *)(v5 + 7680) = *(_QWORD *)(v5 + 6872);
  *(_QWORD *)(v5 + 7656) = *(_QWORD *)(v5 + 6864);
  *(_QWORD *)(v5 + 7688) = *(_QWORD *)(v5 + 6888);
  *(_QWORD *)(v5 + 7696) = *(_QWORD *)(v5 + 6880);
  *(_QWORD *)(v5 + 7704) = *(_QWORD *)(v5 + 6896);
  *(_QWORD *)(v5 + 9568) = *(_QWORD *)(v5 + 8944);
  *(_QWORD *)(v5 + 8888) = *(_QWORD *)(v5 + 8576);
  *(_QWORD *)(v5 + 9200) = *(_QWORD *)(v5 + 8952);
  *(_QWORD *)(v5 + 8880) = *(_QWORD *)(v5 + 8936);
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7880);
  *(_QWORD *)(v5 + 9576) = *(_QWORD *)(v5 + 1952);
  *(_QWORD *)(v5 + 9496) = *(_QWORD *)(v5 + 3832);
  *(_DWORD *)(v5 + 8032) = *(_DWORD *)(v5 + 8080);
  *(_DWORD *)(v5 + 8764) = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 7768);
  *(_DWORD *)(v5 + 7712) = *(_DWORD *)(v5 + 6928);
  *(_DWORD *)(v5 + 7936) = v4;
  v11 = *(_DWORD *)(v5 + 7904);
  *(_DWORD *)(v5 + 9448) = *(_DWORD *)(v5 + 9116);
  *(_DWORD *)(v5 + 9656) = *(_DWORD *)(v5 + 9272);
  *(_DWORD *)(v5 + 8312) = v11;
  *(_DWORD *)(v5 + 6944) = *(_DWORD *)(v5 + 7040);
  *(_DWORD *)(v5 + 8020) = *(_DWORD *)(v5 + 8040);
  *(_DWORD *)(v5 + 7648) = *(_DWORD *)(v5 + 6856);
  *(_DWORD *)(v5 + 7992) = v6;
  *(_DWORD *)(v5 + 9384) = *(_DWORD *)(v5 + 8832);
  *(_DWORD *)(v5 + 8748) = *(_DWORD *)(v5 + 8980);
  *(_DWORD *)(v5 + 8964) = *(_DWORD *)(v5 + 9152);
  *(_DWORD *)(v5 + 6936) = *(_DWORD *)(v5 + 6952);
  *(_DWORD *)(v5 + 9520) = *(_DWORD *)(v5 + 8196);
  *(_DWORD *)(v5 + 7552) = *(_DWORD *)(v5 + 6984);
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 9424) = v7;
  *(_DWORD *)(v5 + 8760) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8752) = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 6968) = *(_DWORD *)(v5 + 7000);
  *(_DWORD *)(v5 + 7952) = a1;
  *(_DWORD *)(v5 + 7888) = *(_DWORD *)(v5 + 7912);
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 9440) = *(_DWORD *)(v5 + 9104);
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8872) = *(_DWORD *)(v5 + 8912);
  *(_DWORD *)(v5 + 7640) = *(_DWORD *)(v5 + 6912);
  *(_DWORD *)(v5 + 8680) = *(_DWORD *)(v5 + 8808);
  *(_DWORD *)(v5 + 6992) = *(_DWORD *)(v5 + 7008);
  *(_DWORD *)(v5 + 7672) = *(_DWORD *)(v5 + 6920);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8024) = *(_DWORD *)(v5 + 8116);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 9632) = *(_DWORD *)(v5 + 9072);
  *(_DWORD *)(v5 + 9160) = *(_DWORD *)(v5 + 8920);
  *(_DWORD *)(v5 + 8000) = v3;
  *(_DWORD *)(v5 + 8664) = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 7984) = *(_DWORD *)(v5 + 8272);
  v12 = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 9736) = v12;
  *(_DWORD *)(v5 + 8008) = *(_DWORD *)(v5 + 8056);
  *(_DWORD *)(v5 + 9432) = v12;
  *(_DWORD *)(v5 + 7592) = *(_DWORD *)(v5 + 7080);
  *(_DWORD *)(v5 + 9528) = *(_DWORD *)(v5 + 8188);
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8616) = *(_DWORD *)(v5 + 8904);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 7584) = *(_DWORD *)(v5 + 7088);
  *(_DWORD *)(v5 + 8640) = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 7576) = *(_DWORD *)(v5 + 7072);
  *(_DWORD *)(v5 + 9408) = *(_DWORD *)(v5 + 8552);
  *(_DWORD *)(v5 + 8704) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 9096) = *(_DWORD *)(v5 + 8900);
  *(_DWORD *)(v5 + 9584) = *(_DWORD *)(v5 + 9184);
  *(_DWORD *)(v5 + 8984) = *(_DWORD *)(v5 + 8572);
  *(_DWORD *)(v5 + 8612) = *(_DWORD *)(v5 + 8932);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  *(_DWORD *)(v5 + 7632) = *(_DWORD *)(v5 + 9680);
  return v10();
}

uint64_t sub_1002CCA00@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8032) = *(_DWORD *)(v1 + 8080);
  *(_DWORD *)(v1 + 8764) = *(_DWORD *)(v1 + 8828);
  *(_DWORD *)(v1 + 8768) = *(_DWORD *)(v1 + 8860);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 9656) = *(_DWORD *)(v1 + 9272);
  v2 = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 8312) = v2;
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 7992) = *(_DWORD *)(v1 + 8064);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8748) = *(_DWORD *)(v1 + 8980);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 8736) = *(_DWORD *)(v1 + 8792);
  *(_DWORD *)(v1 + 8728) = *(_DWORD *)(v1 + 8816);
  *(_DWORD *)(v1 + 8744) = *(_DWORD *)(v1 + 8628);
  *(_DWORD *)(v1 + 8720) = *(_DWORD *)(v1 + 8968);
  *(_DWORD *)(v1 + 9424) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 8760) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 8752) = *(_DWORD *)(v1 + 8136);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 8712) = *(_DWORD *)(v1 + 8868);
  *(_DWORD *)(v1 + 8696) = *(_DWORD *)(v1 + 8840);
  *(_DWORD *)(v1 + 9440) = *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 8688) = *(_DWORD *)(v1 + 8864);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 8680) = *(_DWORD *)(v1 + 8808);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8020) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 8024) = *(_DWORD *)(v1 + 8116);
  *(_DWORD *)(v1 + 8672) = *(_DWORD *)(v1 + 8848);
  *(_DWORD *)(v1 + 9632) = *(_DWORD *)(v1 + 9072);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 8000) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 8664) = *(_DWORD *)(v1 + 8992);
  *(_DWORD *)(v1 + 7984) = *(_DWORD *)(v1 + 8272);
  *(_DWORD *)(v1 + 8008) = *(_DWORD *)(v1 + 8056);
  *(_DWORD *)(v1 + 9432) = *(_DWORD *)(v1 + 9172);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 9528) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 8656) = *(_DWORD *)(v1 + 8776);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 8648) = *(_DWORD *)(v1 + 9004);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 8640) = *(_DWORD *)(v1 + 8784);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 9408) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 8704) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 8632) = *(_DWORD *)(v1 + 8800);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_QWORD *)(v1 + 9504) = *(_QWORD *)(v1 + 7880);
  *(_QWORD *)(v1 + 9576) = *(_QWORD *)(v1 + 2576);
  *(_QWORD *)(v1 + 9496) = *(_QWORD *)(v1 + 3184);
  *(_DWORD *)(v1 + 9688) = *(_DWORD *)(v1 + 7768);
  *(_DWORD *)(v1 + 9736) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 9272) = *(_DWORD *)(v1 + 9656);
  *(_QWORD *)(v1 + 9680) = *(_QWORD *)(v1 + 9504);
  if ((a1 ^ 0x853D1004) + 8378 + v2 - 8395)
    v3 = 137;
  else
    v3 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v1 + 9640) + v3) >> ((-45 * (a1 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v1 + 9640) + v3)) == 30)) ^ (a1 + 2059604150))))();
}

uint64_t sub_1002CCC88(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;

  v12 = (v4 + 85720549) | 0x80211012;
  v13 = (uint64_t (*)(void))(v5
                          + *(_QWORD *)(v11
                                      + 8
                                      * (((((v4 - 2145125409) & 0x7FDC0FFF) + 5521)
                                        * (*(_DWORD *)(v6 + 8280) == 67)) ^ v4))
                          - v12
                          - 8);
  *(_DWORD *)(v6 + 7216) = 51;
  *(_DWORD *)(v6 + 6760) = 68;
  *(_QWORD *)(v6 + 7144) = v12;
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  v14 = *(_QWORD *)(v6 + 3184);
  *(_QWORD *)(v6 + 7240) = v14;
  *(_QWORD *)(v6 + 7248) = v14;
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 2184);
  *(_DWORD *)(v6 + 8260) = v7;
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7936) = a4;
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 8312) = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6744) = v8;
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  LODWORD(v14) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7256) = v14;
  *(_DWORD *)(v6 + 7280) = v10;
  *(_DWORD *)(v6 + 7128) = v8;
  *(_DWORD *)(v6 + 7344) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = v9;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 8456);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7264) = v8;
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 7224) = v14;
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 7328) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7208) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 7336) = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 7200) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 9392) = *(_DWORD *)(v6 + 8544);
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  return v13();
}

uint64_t sub_1002CCF2C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((1016
                                * ((*(_DWORD *)(v1 + 9680) - 120) < (((a1 + 58) ^ 0x91) + 120))) ^ a1)))();
}

uint64_t sub_1002CCF68()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((((v0 - 5303) | 0x2800) ^ 0xFFFFC238) + v0 + 120) * (v1 < 0x10)) ^ v0))
                            - 8))();
}

uint64_t sub_1002CCFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((49 * (a5 > (char)(((v5 + 85) & 0x2A) + 117))) | v5)) - 12))();
}

uint64_t sub_1002CCFE4@<X0>(unsigned __int8 a1@<W4>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((((_BYTE)a2 - 63) & 0x7E ^ 0xBF) & a1 & 0xFE) != 120) ^ a2))
                            - 8))();
}

uint64_t sub_1002CD020()
{
  unsigned __int8 v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 < 6u) ^ (v1 + 37)) & 1) * (v1 ^ 0x186D)) ^ v1)))();
}

uint64_t sub_1002CD058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;

  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * ((2273 * (*(_DWORD *)(v7 + 9680) != ((v6 ^ 0x23) + 29))) ^ v6 ^ 0x1923u))
                                                                                             - (((v6 ^ 0x1923u)
                                                                                               - 2059596106) ^ 0x853D101BLL));
  *(_DWORD *)(v7 + 7632) = 127;
  v9 = *(_QWORD *)(v7 + 2128);
  *(_QWORD *)(v7 + 7664) = v9;
  v10 = *(_QWORD *)(v7 + 2248);
  *(_QWORD *)(v7 + 7680) = v10;
  v11 = *(_QWORD *)(v7 + 2256);
  *(_QWORD *)(v7 + 7656) = v11;
  *(_QWORD *)(v7 + 7688) = v9;
  *(_QWORD *)(v7 + 7696) = v10;
  *(_QWORD *)(v7 + 7704) = v11;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v12 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v11;
  *(_QWORD *)(v7 + 9496) = v11;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  v13 = *(_DWORD *)(v7 + 7380);
  *(_DWORD *)(v7 + 7712) = v13;
  LODWORD(v9) = *(_DWORD *)(v7 + 2440);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  v14 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v14;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = v9;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  LODWORD(v10) = *(_DWORD *)(v7 + 2140);
  *(_DWORD *)(v7 + 9384) = v10;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 9440) = v9;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = v13;
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = v10;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9736) = v9;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8(a1, a2, v12, a4, a5, a6, 80);
}

void sub_1002CD31C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 8764) = *(_DWORD *)(v0 + 8828);
  *(_DWORD *)(v0 + 8768) = *(_DWORD *)(v0 + 8860);
  *(_DWORD *)(v0 + 7936) = *(_DWORD *)(v0 + 7920);
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 8312) = *(_DWORD *)(v0 + 7904);
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 8748) = *(_DWORD *)(v0 + 8980);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 9520) = *(_DWORD *)(v0 + 8196);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 8736) = *(_DWORD *)(v0 + 8792);
  *(_DWORD *)(v0 + 8728) = *(_DWORD *)(v0 + 8816);
  *(_DWORD *)(v0 + 8744) = *(_DWORD *)(v0 + 8628);
  *(_DWORD *)(v0 + 8720) = *(_DWORD *)(v0 + 8968);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 2440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 8760) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 8752) = *(_DWORD *)(v0 + 8136);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 7952) = *(_DWORD *)(v0 + 7928);
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  *(_DWORD *)(v0 + 8712) = *(_DWORD *)(v0 + 8868);
  *(_DWORD *)(v0 + 8696) = *(_DWORD *)(v0 + 8840);
  *(_DWORD *)(v0 + 8688) = *(_DWORD *)(v0 + 8864);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 8680) = *(_DWORD *)(v0 + 8808);
  *(_DWORD *)(v0 + 2140) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 8672) = *(_DWORD *)(v0 + 8848);
  *(_DWORD *)(v0 + 9632) = *(_DWORD *)(v0 + 9072);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8664) = *(_DWORD *)(v0 + 8992);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 9432) = *(_DWORD *)(v0 + 9172);
  v1 = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 7648) = v1;
  *(_DWORD *)(v0 + 9440) = v1;
  *(_DWORD *)(v0 + 9736) = v1;
  *(_DWORD *)(v0 + 7592) = v1;
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 8656) = *(_DWORD *)(v0 + 8776);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 8648) = *(_DWORD *)(v0 + 9004);
  v2 = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 9384) = v2;
  *(_DWORD *)(v0 + 7672) = v2;
  *(_DWORD *)(v0 + 7584) = v2;
  *(_DWORD *)(v0 + 8640) = *(_DWORD *)(v0 + 8784);
  *(_DWORD *)(v0 + 7380) = *(_DWORD *)(v0 + 8548);
  v3 = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 7712) = v3;
  *(_DWORD *)(v0 + 7640) = v3;
  *(_DWORD *)(v0 + 7576) = v3;
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 8704) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9184);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 8632) = *(_DWORD *)(v0 + 8800);
  *(_DWORD *)(v0 + 7632) = 128;
  v4 = *(_QWORD *)(v0 + 5368);
  *(_QWORD *)(v0 + 7664) = v4;
  v5 = *(_QWORD *)(v0 + 5376);
  *(_QWORD *)(v0 + 7680) = v5;
  v6 = *(_QWORD *)(v0 + 5360);
  *(_QWORD *)(v0 + 7656) = v6;
  *(_QWORD *)(v0 + 7688) = v4;
  *(_QWORD *)(v0 + 7696) = v5;
  *(_QWORD *)(v0 + 7704) = v6;
  *(_QWORD *)(v0 + 9504) = *(_QWORD *)(v0 + 7880);
  *(_QWORD *)(v0 + 9576) = v6;
  *(_QWORD *)(v0 + 9496) = v6;
  JUMPOUT(0x1002C4524);
}

uint64_t sub_1002CD544(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)(v5 + 9576) = 0;
  *(_DWORD *)(v5 + 9488) = 0;
  *(_DWORD *)(v5 + 9472) = 0;
  v8 = (v2 - 1230727852) & 0x495B5E3E;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                      + 8 * ((810 * (v1 != 5)) ^ v2))
                                                                          - 4);
  *(_DWORD *)(v5 + 8280) = 14;
  *(_DWORD *)(v5 + 9456) = 1;
  v10 = *(unsigned int *)(v5 + 8548);
  v11 = *(unsigned int *)(v5 + 7964);
  *(_QWORD *)(v5 + 7664) = *(_QWORD *)(v5 + 6904);
  *(_QWORD *)(v5 + 7680) = *(_QWORD *)(v5 + 6872);
  *(_QWORD *)(v5 + 7656) = *(_QWORD *)(v5 + 6864);
  *(_QWORD *)(v5 + 7688) = *(_QWORD *)(v5 + 6888);
  *(_QWORD *)(v5 + 7696) = *(_QWORD *)(v5 + 6880);
  *(_QWORD *)(v5 + 7704) = *(_QWORD *)(v5 + 6896);
  *(_QWORD *)(v5 + 9568) = *(_QWORD *)(v5 + 8944);
  *(_QWORD *)(v5 + 8888) = *(_QWORD *)(v5 + 8576);
  *(_QWORD *)(v5 + 9200) = *(_QWORD *)(v5 + 8952);
  *(_QWORD *)(v5 + 8880) = *(_QWORD *)(v5 + 8936);
  *(_QWORD *)(v5 + 9600) = v6;
  *(_QWORD *)(v5 + 9608) = *(_QWORD *)(v5 + 9016);
  *(_DWORD *)(v5 + 8032) = *(_DWORD *)(v5 + 8080);
  *(_DWORD *)(v5 + 7712) = *(_DWORD *)(v5 + 6928);
  *(_DWORD *)(v5 + 7936) = *(_DWORD *)(v5 + 7920);
  *(_DWORD *)(v5 + 7532) = v10;
  *(_DWORD *)(v5 + 9448) = *(_DWORD *)(v5 + 9116);
  *(_DWORD *)(v5 + 9656) = *(_DWORD *)(v5 + 9272);
  *(_DWORD *)(v5 + 8312) = *(_DWORD *)(v5 + 7904);
  *(_DWORD *)(v5 + 9616) = *(_DWORD *)(v5 + 9320);
  *(_DWORD *)(v5 + 6944) = *(_DWORD *)(v5 + 7040);
  *(_DWORD *)(v5 + 7648) = *(_DWORD *)(v5 + 6856);
  *(_DWORD *)(v5 + 7992) = *(_DWORD *)(v5 + 8064);
  *(_DWORD *)(v5 + 9384) = *(_DWORD *)(v5 + 8832);
  *(_DWORD *)(v5 + 8964) = *(_DWORD *)(v5 + 9152);
  *(_DWORD *)(v5 + 6936) = *(_DWORD *)(v5 + 6952);
  *(_DWORD *)(v5 + 7552) = *(_DWORD *)(v5 + 6984);
  *(_DWORD *)(v5 + 9424) = v3;
  *(_DWORD *)(v5 + 9480) = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 6968) = *(_DWORD *)(v5 + 7000);
  *(_DWORD *)(v5 + 7952) = *(_DWORD *)(v5 + 7928);
  *(_DWORD *)(v5 + 7888) = *(_DWORD *)(v5 + 7912);
  *(_DWORD *)(v5 + 9440) = *(_DWORD *)(v5 + 9104);
  *(_DWORD *)(v5 + 9664) = *(_DWORD *)(v5 + 8456);
  *(_DWORD *)(v5 + 8872) = *(_DWORD *)(v5 + 8912);
  *(_DWORD *)(v5 + 7640) = *(_DWORD *)(v5 + 6912);
  *(_DWORD *)(v5 + 6992) = *(_DWORD *)(v5 + 7008);
  *(_DWORD *)(v5 + 7672) = *(_DWORD *)(v5 + 6920);
  *(_DWORD *)(v5 + 8020) = *(_DWORD *)(v5 + 8040);
  *(_DWORD *)(v5 + 8024) = *(_DWORD *)(v5 + 8116);
  *(_DWORD *)(v5 + 9632) = *(_DWORD *)(v5 + 9072);
  *(_DWORD *)(v5 + 9160) = *(_DWORD *)(v5 + 8920);
  *(_DWORD *)(v5 + 8000) = v4;
  *(_DWORD *)(v5 + 7984) = *(_DWORD *)(v5 + 8272);
  *(_DWORD *)(v5 + 8008) = *(_DWORD *)(v5 + 8056);
  *(_DWORD *)(v5 + 7592) = *(_DWORD *)(v5 + 7080);
  *(_DWORD *)(v5 + 9528) = *(_DWORD *)(v5 + 8188);
  *(_DWORD *)(v5 + 9624) = *(_DWORD *)(v5 + 9264);
  *(_DWORD *)(v5 + 8616) = *(_DWORD *)(v5 + 8904);
  *(_DWORD *)(v5 + 7584) = *(_DWORD *)(v5 + 7088);
  *(_DWORD *)(v5 + 7576) = *(_DWORD *)(v5 + 7072);
  *(_DWORD *)(v5 + 9408) = *(_DWORD *)(v5 + 8552);
  *(_DWORD *)(v5 + 9096) = *(_DWORD *)(v5 + 8900);
  *(_DWORD *)(v5 + 9432) = 1;
  *(_DWORD *)(v5 + 9080) = 1;
  *(_DWORD *)(v5 + 9496) = 1;
  *(_DWORD *)(v5 + 9012) = 1;
  *(_DWORD *)(v5 + 9584) = *(_DWORD *)(v5 + 9184);
  *(_DWORD *)(v5 + 8984) = *(_DWORD *)(v5 + 8572);
  *(_DWORD *)(v5 + 8612) = *(_DWORD *)(v5 + 8932);
  *(_DWORD *)(v5 + 7632) = *(_DWORD *)(v5 + 9680);
  *(_DWORD *)(v5 + 9592) = *(_DWORD *)(v5 + 8328);
  return v9(a1, v11, v8, v10, 0);
}

uint64_t sub_1002CD7AC@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v5 = (a3 - 8004) | 0x1183;
  v6 = *(_DWORD *)(v4 + 9312) != 0;
  *(_DWORD *)(v4 + 5988) += v5 ^ 0x17A6;
  *(_DWORD *)(v4 + 7964) = a1;
  *(_DWORD *)(v4 + 8280) = v3;
  *(_QWORD *)(v4 + 7664) = *(_QWORD *)(v4 + 6904);
  *(_QWORD *)(v4 + 7680) = *(_QWORD *)(v4 + 6872);
  *(_QWORD *)(v4 + 7656) = *(_QWORD *)(v4 + 6864);
  *(_QWORD *)(v4 + 7688) = *(_QWORD *)(v4 + 6888);
  *(_QWORD *)(v4 + 7696) = *(_QWORD *)(v4 + 6880);
  *(_QWORD *)(v4 + 7704) = *(_QWORD *)(v4 + 6896);
  *(_DWORD *)(v4 + 8032) = *(_DWORD *)(v4 + 8080);
  *(_DWORD *)(v4 + 7712) = *(_DWORD *)(v4 + 6928);
  *(_DWORD *)(v4 + 7936) = *(_DWORD *)(v4 + 7920);
  *(_DWORD *)(v4 + 8312) = *(_DWORD *)(v4 + 7904);
  *(_DWORD *)(v4 + 6944) = *(_DWORD *)(v4 + 7040);
  *(_DWORD *)(v4 + 7648) = *(_DWORD *)(v4 + 6856);
  *(_DWORD *)(v4 + 7992) = *(_DWORD *)(v4 + 8064);
  *(_DWORD *)(v4 + 6936) = *(_DWORD *)(v4 + 6952);
  *(_DWORD *)(v4 + 7552) = *(_DWORD *)(v4 + 6984);
  *(_DWORD *)(v4 + 9480) = *(_DWORD *)(v4 + 8136);
  *(_DWORD *)(v4 + 6968) = *(_DWORD *)(v4 + 7000);
  *(_DWORD *)(v4 + 7952) = *(_DWORD *)(v4 + 7928);
  *(_DWORD *)(v4 + 7888) = *(_DWORD *)(v4 + 7912);
  *(_DWORD *)(v4 + 7640) = *(_DWORD *)(v4 + 6912);
  *(_DWORD *)(v4 + 6992) = *(_DWORD *)(v4 + 7008);
  *(_DWORD *)(v4 + 7672) = *(_DWORD *)(v4 + 6920);
  *(_DWORD *)(v4 + 8020) = *(_DWORD *)(v4 + 8040);
  *(_DWORD *)(v4 + 8024) = *(_DWORD *)(v4 + 8116);
  *(_DWORD *)(v4 + 8000) = *(_DWORD *)(v4 + 7152);
  *(_DWORD *)(v4 + 7984) = *(_DWORD *)(v4 + 8272);
  *(_DWORD *)(v4 + 8008) = *(_DWORD *)(v4 + 8056);
  *(_DWORD *)(v4 + 7592) = *(_DWORD *)(v4 + 7080);
  *(_DWORD *)(v4 + 7584) = *(_DWORD *)(v4 + 7088);
  *(_DWORD *)(v4 + 7576) = *(_DWORD *)(v4 + 7072);
  *(_DWORD *)(v4 + 7632) = *(_DWORD *)(v4 + 9680);
  v7 = *(_DWORD *)(v4 + 8188);
  v8 = *(_DWORD *)(v4 + 8196);
  v9 = (v5 - 2129921941) | 0x4310005u;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8 * ((v6 * (v5 - 2390)) ^ v5)) - (v9 ^ 0x853D1013));
  *(_DWORD *)(v4 + 8440) = 63;
  *(_QWORD *)(v4 + 9416) = v9;
  *(_QWORD *)(v4 + 8408) = *(_QWORD *)(v4 + 8432);
  *(_QWORD *)(v4 + 8400) = *(_QWORD *)(v4 + 8416);
  *(_QWORD *)(v4 + 8392) = *(_QWORD *)(v4 + 8536);
  *(_QWORD *)(v4 + 8384) = *(_QWORD *)(v4 + 8488);
  *(_QWORD *)(v4 + 8376) = *(_QWORD *)(v4 + 8472);
  *(_DWORD *)(v4 + 9128) = *(_DWORD *)(v4 + 6344);
  *(_DWORD *)(v4 + 7532) = a2;
  *(_DWORD *)(v4 + 8368) = v8;
  *(_DWORD *)(v4 + 8504) = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 8520) = *(_DWORD *)(v4 + 8464);
  *(_DWORD *)(v4 + 8356) = *(_DWORD *)(v4 + 8532);
  *(_DWORD *)(v4 + 8360) = *(_DWORD *)(v4 + 8424);
  *(_DWORD *)(v4 + 8512) = *(_DWORD *)(v4 + 8480);
  *(_DWORD *)(v4 + 8496) = v7;
  *(_DWORD *)(v4 + 8352) = *(_DWORD *)(v4 + 9040);
  return v10();
}

uint64_t sub_1002CD8EC@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v4 + 7144) = v10 + (a2 ^ 0x2B74u) - 544;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v9
                                      + 8
                                      * ((6795
                                        * (v2 == (v10
                                                                 + (a2 ^ 0x74)
                                                                 - 32
                                                                 + (((a2 ^ 0x74) + 23) & 0xDF)
                                                                 - 5))) ^ a2 ^ 0x2B74))
                          - 12);
  *(_DWORD *)(v4 + 7216) = 32;
  *(_DWORD *)(v4 + 6760) = 49;
  *(_QWORD *)(v4 + 7664) = *(_QWORD *)(v4 + 6904);
  *(_QWORD *)(v4 + 7680) = *(_QWORD *)(v4 + 6872);
  *(_QWORD *)(v4 + 7656) = *(_QWORD *)(v4 + 6864);
  v12 = *(_QWORD *)(v4 + 6888);
  *(_QWORD *)(v4 + 7688) = v12;
  *(_QWORD *)(v4 + 7696) = *(_QWORD *)(v4 + 6880);
  v13 = *(_QWORD *)(v4 + 6896);
  *(_QWORD *)(v4 + 7704) = v13;
  *(_QWORD *)(v4 + 9568) = *(_QWORD *)(v4 + 8944);
  *(_QWORD *)(v4 + 8888) = *(_QWORD *)(v4 + 8576);
  *(_QWORD *)(v4 + 9200) = *(_QWORD *)(v4 + 8952);
  *(_QWORD *)(v4 + 8880) = *(_QWORD *)(v4 + 8936);
  *(_QWORD *)(v4 + 7240) = *(_QWORD *)(v4 + 2368);
  *(_QWORD *)(v4 + 7248) = v12;
  *(_QWORD *)(v4 + 7232) = v13;
  *(_DWORD *)(v4 + 8260) = v5;
  LODWORD(v13) = *(_DWORD *)(v4 + 6928);
  *(_DWORD *)(v4 + 7712) = v13;
  *(_DWORD *)(v4 + 7192) = *(_DWORD *)(v4 + 7436);
  *(_DWORD *)(v4 + 7936) = a1;
  *(_DWORD *)(v4 + 7272) = v6;
  *(_DWORD *)(v4 + 9448) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 7312) = *(_DWORD *)(v4 + 9328);
  *(_DWORD *)(v4 + 8312) = *(_DWORD *)(v4 + 7904);
  *(_DWORD *)(v4 + 6944) = *(_DWORD *)(v4 + 7040);
  *(_DWORD *)(v4 + 7648) = *(_DWORD *)(v4 + 6856);
  *(_DWORD *)(v4 + 9384) = *(_DWORD *)(v4 + 8832);
  *(_DWORD *)(v4 + 8964) = *(_DWORD *)(v4 + 9152);
  *(_DWORD *)(v4 + 6744) = v6;
  *(_DWORD *)(v4 + 6936) = *(_DWORD *)(v4 + 6952);
  *(_DWORD *)(v4 + 9520) = *(_DWORD *)(v4 + 8196);
  *(_DWORD *)(v4 + 7552) = *(_DWORD *)(v4 + 6984);
  *(_DWORD *)(v4 + 7256) = *(_DWORD *)(v4 + 7500);
  *(_DWORD *)(v4 + 7280) = v8;
  *(_DWORD *)(v4 + 7128) = *(_DWORD *)(v4 + 7616);
  *(_DWORD *)(v4 + 7344) = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 6968) = *(_DWORD *)(v4 + 7000);
  *(_DWORD *)(v4 + 7952) = v7;
  *(_DWORD *)(v4 + 7888) = *(_DWORD *)(v4 + 7912);
  *(_DWORD *)(v4 + 7168) = *(_DWORD *)(v4 + 7464);
  *(_DWORD *)(v4 + 7184) = *(_DWORD *)(v4 + 7488);
  *(_DWORD *)(v4 + 7296) = *(_DWORD *)(v4 + 7484);
  *(_DWORD *)(v4 + 7424) = *(_DWORD *)(v4 + 8456);
  *(_DWORD *)(v4 + 7304) = *(_DWORD *)(v4 + 7480);
  *(_DWORD *)(v4 + 8872) = *(_DWORD *)(v4 + 8912);
  *(_DWORD *)(v4 + 7264) = v13;
  *(_DWORD *)(v4 + 7640) = *(_DWORD *)(v4 + 6912);
  *(_DWORD *)(v4 + 7176) = *(_DWORD *)(v4 + 9248);
  *(_DWORD *)(v4 + 7288) = *(_DWORD *)(v4 + 7476);
  *(_DWORD *)(v4 + 7224) = *(_DWORD *)(v4 + 9104);
  *(_DWORD *)(v4 + 6992) = *(_DWORD *)(v4 + 7008);
  *(_DWORD *)(v4 + 7672) = *(_DWORD *)(v4 + 6920);
  *(_DWORD *)(v4 + 9136) = *(_DWORD *)(v4 + 9056);
  *(_DWORD *)(v4 + 7416) = *(_DWORD *)(v4 + 7432);
  *(_DWORD *)(v4 + 9160) = *(_DWORD *)(v4 + 8920);
  *(_DWORD *)(v4 + 7328) = v3;
  *(_DWORD *)(v4 + 7592) = *(_DWORD *)(v4 + 7080);
  *(_DWORD *)(v4 + 7112) = *(_DWORD *)(v4 + 0x2000);
  *(_DWORD *)(v4 + 7208) = *(_DWORD *)(v4 + 8188);
  *(_DWORD *)(v4 + 7408) = *(_DWORD *)(v4 + 7460);
  *(_DWORD *)(v4 + 9624) = *(_DWORD *)(v4 + 9264);
  *(_DWORD *)(v4 + 8616) = *(_DWORD *)(v4 + 8904);
  *(_DWORD *)(v4 + 7160) = *(_DWORD *)(v4 + 7440);
  *(_DWORD *)(v4 + 7584) = *(_DWORD *)(v4 + 7088);
  *(_DWORD *)(v4 + 7320) = *(_DWORD *)(v4 + 9156);
  *(_DWORD *)(v4 + 7576) = *(_DWORD *)(v4 + 7072);
  *(_DWORD *)(v4 + 7336) = *(_DWORD *)(v4 + 8552);
  *(_DWORD *)(v4 + 9400) = *(_DWORD *)(v4 + 9224);
  *(_DWORD *)(v4 + 7200) = *(_DWORD *)(v4 + 9064);
  *(_DWORD *)(v4 + 9096) = *(_DWORD *)(v4 + 8900);
  *(_DWORD *)(v4 + 9584) = *(_DWORD *)(v4 + 9184);
  *(_DWORD *)(v4 + 8984) = *(_DWORD *)(v4 + 8572);
  *(_DWORD *)(v4 + 9392) = *(_DWORD *)(v4 + 8544);
  *(_DWORD *)(v4 + 8236) = *(_DWORD *)(v4 + 9240);
  *(_DWORD *)(v4 + 8612) = *(_DWORD *)(v4 + 8932);
  *(_DWORD *)(v4 + 7632) = *(_DWORD *)(v4 + 9680);
  return v11();
}

void sub_1002CDB74(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8260) = *(_DWORD *)(v1 + 8332);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 8312) = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  *(_DWORD *)(v1 + 7184) = *(_DWORD *)(v1 + 7488);
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  v2 = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 7272) = v2;
  *(_DWORD *)(v1 + 7224) = v2;
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 7112) = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 9624) = *(_DWORD *)(v1 + 9264);
  v3 = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 6744) = v3;
  *(_DWORD *)(v1 + 8776) = v3;
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  v4 = *(_DWORD *)(v1 + 7452);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9400) = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_DWORD *)(v1 + 7216) = 33;
  *(_DWORD *)(v1 + 6760) = 50;
  *(_QWORD *)(v1 + 7240) = *(_QWORD *)(v1 + 2224);
  *(_QWORD *)(v1 + 7248) = *(_QWORD *)(v1 + 6008);
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 2384);
  *(_DWORD *)(v1 + 7264) = *(_DWORD *)(v1 + 8868);
  *(_DWORD *)(v1 + 9736) = v4;
  JUMPOUT(0x10031D888);
}

uint64_t sub_1002CDDD8(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;

  v12 = (v3 - v5 - 77);
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (int)(((v12 ^ (v11 + 831)) * (v2 != 21)) ^ v3)) - 12);
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = v4;
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 8312) = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = a2;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  *(_DWORD *)(v6 + 9424) = v9;
  *(_DWORD *)(v6 + 7280) = v9;
  v14 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v14;
  *(_DWORD *)(v6 + 7344) = v14;
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 8456);
  *(_DWORD *)(v6 + 7328) = *(_DWORD *)(v6 + 7152);
  v15 = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 9528) = v15;
  *(_DWORD *)(v6 + 7208) = v15;
  *(_DWORD *)(v6 + 8000) = v8;
  *(_DWORD *)(v6 + 6744) = v8;
  *(_DWORD *)(v6 + 7408) = v8;
  v16 = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9408) = v16;
  *(_DWORD *)(v6 + 7336) = v16;
  v17 = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8704) = v17;
  *(_DWORD *)(v6 + 7200) = v17;
  *(_DWORD *)(v6 + 9392) = *(_DWORD *)(v6 + 8544);
  *(_DWORD *)(v6 + 7216) = 12;
  *(_DWORD *)(v6 + 6760) = 29;
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  v18 = *(_QWORD *)(v6 + 2720);
  *(_QWORD *)(v6 + 9576) = v18;
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 2592);
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  v19 = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 9736) = v19;
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_QWORD *)(v6 + 7144) = v12;
  *(_QWORD *)(v6 + 7240) = v18;
  *(_QWORD *)(v6 + 7248) = *(_QWORD *)(v6 + 4032);
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 4072);
  *(_DWORD *)(v6 + 8260) = v7;
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7128) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 7264) = *(_DWORD *)(v6 + 4028);
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = v19;
  *(_DWORD *)(v6 + 7224) = *(_DWORD *)(v6 + 4060);
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  return v13();
}

uint64_t sub_1002CE178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;

  v12 = (a4 - v5 - 2145);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11
                                                                      + 8
                                                                      * ((588
                                                                        * (v4 != ((a4 - v5 - 97) ^ 0x26))) ^ a4))
                                                          - 4);
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = a3;
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 8312) = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = v9;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  *(_DWORD *)(v6 + 9424) = v10;
  *(_DWORD *)(v6 + 7280) = v10;
  v14 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v14;
  *(_DWORD *)(v6 + 7344) = v14;
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 8456);
  *(_DWORD *)(v6 + 9528) = v8;
  *(_DWORD *)(v6 + 6744) = v8;
  *(_DWORD *)(v6 + 7416) = v8;
  v15 = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 8000) = v15;
  *(_DWORD *)(v6 + 7328) = v15;
  *(_DWORD *)(v6 + 7208) = *(_DWORD *)(v6 + 8188);
  v16 = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9408) = v16;
  *(_DWORD *)(v6 + 7336) = v16;
  v17 = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8704) = v17;
  *(_DWORD *)(v6 + 7200) = v17;
  *(_DWORD *)(v6 + 9392) = *(_DWORD *)(v6 + 8544);
  *(_DWORD *)(v6 + 7216) = 41;
  *(_DWORD *)(v6 + 6760) = 58;
  v18 = *(_QWORD *)(v6 + 2280);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 2728);
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 3184);
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  v19 = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  v20 = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8728) = v20;
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  v21 = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 9736) = v21;
  *(_DWORD *)(v6 + 8008) = v19;
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_QWORD *)(v6 + 7144) = v12;
  *(_QWORD *)(v6 + 7240) = *(_QWORD *)(v6 + 2336);
  *(_QWORD *)(v6 + 7248) = *(_QWORD *)(v6 + 2512);
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 2224);
  *(_DWORD *)(v6 + 8260) = v7;
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7128) = v21;
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 7264) = v20;
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  v22 = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 7224) = v22;
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7320) = v22;
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  return v13(a1, a2, v18);
}

uint64_t sub_1002CE518()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v7 = v0 ^ 0x22A3;
  v8 = v0 ^ 0x853D380B;
  v9 = *(_QWORD *)(v6 + 8 * (v7 ^ (121 * (v1 == 13))));
  *(_QWORD *)(v3 + 7144) = v8;
  *(_DWORD *)(v3 + 7216) = 5;
  *(_DWORD *)(v3 + 6760) = 22;
  *(_QWORD *)(v3 + 7664) = *(_QWORD *)(v3 + 6904);
  *(_QWORD *)(v3 + 7680) = *(_QWORD *)(v3 + 6872);
  *(_QWORD *)(v3 + 7656) = *(_QWORD *)(v3 + 6864);
  *(_QWORD *)(v3 + 7688) = *(_QWORD *)(v3 + 6888);
  *(_QWORD *)(v3 + 7696) = *(_QWORD *)(v3 + 6880);
  *(_QWORD *)(v3 + 7704) = *(_QWORD *)(v3 + 6896);
  *(_QWORD *)(v3 + 9568) = *(_QWORD *)(v3 + 8944);
  *(_QWORD *)(v3 + 8888) = *(_QWORD *)(v3 + 8576);
  *(_QWORD *)(v3 + 9200) = *(_QWORD *)(v3 + 8952);
  *(_QWORD *)(v3 + 8880) = *(_QWORD *)(v3 + 8936);
  *(_QWORD *)(v3 + 7240) = *(_QWORD *)(v3 + 2696);
  *(_QWORD *)(v3 + 7248) = *(_QWORD *)(v3 + 4072);
  *(_QWORD *)(v3 + 7232) = *(_QWORD *)(v3 + 4016);
  *(_DWORD *)(v3 + 8260) = v4;
  *(_DWORD *)(v3 + 7712) = *(_DWORD *)(v3 + 6928);
  *(_DWORD *)(v3 + 7192) = *(_DWORD *)(v3 + 7436);
  *(_DWORD *)(v3 + 7936) = *(_DWORD *)(v3 + 7920);
  *(_DWORD *)(v3 + 7272) = *(_DWORD *)(v3 + 7456);
  *(_DWORD *)(v3 + 9448) = *(_DWORD *)(v3 + 9116);
  *(_DWORD *)(v3 + 7312) = *(_DWORD *)(v3 + 9328);
  *(_DWORD *)(v3 + 8312) = *(_DWORD *)(v3 + 7904);
  *(_DWORD *)(v3 + 6944) = *(_DWORD *)(v3 + 7040);
  *(_DWORD *)(v3 + 7648) = *(_DWORD *)(v3 + 6856);
  *(_DWORD *)(v3 + 9384) = *(_DWORD *)(v3 + 8832);
  *(_DWORD *)(v3 + 8964) = *(_DWORD *)(v3 + 9152);
  *(_DWORD *)(v3 + 6744) = v5;
  *(_DWORD *)(v3 + 6936) = *(_DWORD *)(v3 + 6952);
  *(_DWORD *)(v3 + 9520) = *(_DWORD *)(v3 + 8196);
  *(_DWORD *)(v3 + 7552) = *(_DWORD *)(v3 + 6984);
  *(_DWORD *)(v3 + 7256) = *(_DWORD *)(v3 + 7500);
  *(_DWORD *)(v3 + 7280) = *(_DWORD *)(v3 + 8608);
  *(_DWORD *)(v3 + 7128) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 7344) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 6968) = *(_DWORD *)(v3 + 7000);
  *(_DWORD *)(v3 + 7952) = *(_DWORD *)(v3 + 7928);
  *(_DWORD *)(v3 + 7888) = *(_DWORD *)(v3 + 7912);
  *(_DWORD *)(v3 + 7168) = *(_DWORD *)(v3 + 7464);
  *(_DWORD *)(v3 + 7184) = *(_DWORD *)(v3 + 7488);
  *(_DWORD *)(v3 + 7296) = *(_DWORD *)(v3 + 7484);
  *(_DWORD *)(v3 + 7424) = *(_DWORD *)(v3 + 8456);
  *(_DWORD *)(v3 + 7304) = *(_DWORD *)(v3 + 7480);
  *(_DWORD *)(v3 + 8872) = *(_DWORD *)(v3 + 8912);
  *(_DWORD *)(v3 + 7264) = *(_DWORD *)(v3 + 4060);
  *(_DWORD *)(v3 + 7640) = *(_DWORD *)(v3 + 6912);
  *(_DWORD *)(v3 + 7176) = *(_DWORD *)(v3 + 9248);
  *(_DWORD *)(v3 + 7288) = v5;
  *(_DWORD *)(v3 + 7224) = *(_DWORD *)(v3 + 4012);
  *(_DWORD *)(v3 + 6992) = *(_DWORD *)(v3 + 7008);
  *(_DWORD *)(v3 + 7672) = *(_DWORD *)(v3 + 6920);
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 7416) = *(_DWORD *)(v3 + 7432);
  *(_DWORD *)(v3 + 9160) = *(_DWORD *)(v3 + 8920);
  *(_DWORD *)(v3 + 7328) = *(_DWORD *)(v3 + 7152);
  *(_DWORD *)(v3 + 7592) = *(_DWORD *)(v3 + 7080);
  *(_DWORD *)(v3 + 7112) = *(_DWORD *)(v3 + 0x2000);
  *(_DWORD *)(v3 + 7208) = *(_DWORD *)(v3 + 8188);
  *(_DWORD *)(v3 + 7408) = *(_DWORD *)(v3 + 7460);
  *(_DWORD *)(v3 + 9624) = *(_DWORD *)(v3 + 9264);
  *(_DWORD *)(v3 + 8616) = *(_DWORD *)(v3 + 8904);
  *(_DWORD *)(v3 + 7160) = *(_DWORD *)(v3 + 7440);
  *(_DWORD *)(v3 + 7584) = *(_DWORD *)(v3 + 7088);
  *(_DWORD *)(v3 + 7320) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 7576) = *(_DWORD *)(v3 + 7072);
  *(_DWORD *)(v3 + 7336) = *(_DWORD *)(v3 + 8552);
  *(_DWORD *)(v3 + 9400) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 7200) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 9096) = *(_DWORD *)(v3 + 8900);
  *(_DWORD *)(v3 + 9584) = *(_DWORD *)(v3 + 9184);
  *(_DWORD *)(v3 + 8984) = *(_DWORD *)(v3 + 8572);
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8544);
  *(_DWORD *)(v3 + 8236) = *(_DWORD *)(v3 + 9240);
  *(_DWORD *)(v3 + 8612) = *(_DWORD *)(v3 + 8932);
  *(_DWORD *)(v3 + 7632) = *(_DWORD *)(v3 + 9680);
  return ((uint64_t (*)(void))(v9 - (v8 ^ (v2 + 12))))();
}

void sub_1002CE7AC()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 8312) = *(_DWORD *)(v0 + 7904);
  *(_QWORD *)(v0 + 7664) = *(_QWORD *)(v0 + 6904);
  *(_QWORD *)(v0 + 7680) = *(_QWORD *)(v0 + 6872);
  *(_QWORD *)(v0 + 7656) = *(_QWORD *)(v0 + 6864);
  *(_QWORD *)(v0 + 7688) = *(_QWORD *)(v0 + 6888);
  *(_QWORD *)(v0 + 7696) = *(_QWORD *)(v0 + 6880);
  *(_QWORD *)(v0 + 7704) = *(_QWORD *)(v0 + 6896);
  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 7712) = *(_DWORD *)(v0 + 6928);
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7648) = *(_DWORD *)(v0 + 6856);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 9384) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 9480) = *(_DWORD *)(v0 + 8136);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 9440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 9664) = *(_DWORD *)(v0 + 8456);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 7640) = *(_DWORD *)(v0 + 6912);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 7672) = *(_DWORD *)(v0 + 6920);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 9632) = *(_DWORD *)(v0 + 9072);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 7592) = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 9624) = *(_DWORD *)(v0 + 9264);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 7584) = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 7576) = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 7632) = *(_DWORD *)(v0 + 9680);
  *(_DWORD *)(v0 + 9592) = *(_DWORD *)(v0 + 8328);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  *(_DWORD *)(v0 + 8280) = 21;
  *(_DWORD *)(v0 + 8132) = *(_DWORD *)(v0 + 8548);
  JUMPOUT(0x1002BEBDCLL);
}

uint64_t sub_1002CE988(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v6 + 7144) = (v11 + v5 - 1824);
  v12 = *(uint64_t (**)(void))(v10 + 8 * ((7759 * (v4 == ((v11 + v5 - 5) ^ v5 ^ 0x37))) ^ v5));
  *(_DWORD *)(v6 + 7216) = 28;
  *(_DWORD *)(v6 + 6760) = 45;
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  v13 = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7680) = v13;
  v14 = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7656) = v14;
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  *(_QWORD *)(v6 + 7240) = *(_QWORD *)(v6 + 2360);
  *(_QWORD *)(v6 + 7248) = v13;
  *(_QWORD *)(v6 + 7232) = v14;
  *(_DWORD *)(v6 + 8260) = v7;
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7936) = a4;
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 8312) = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  LODWORD(v14) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 7648) = v14;
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 6744) = v8;
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7280) = *(_DWORD *)(v6 + 8608);
  *(_DWORD *)(v6 + 7128) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 7344) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = v9;
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 8456);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  LODWORD(v13) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 7264) = v13;
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 7224) = v14;
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = v13;
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 7328) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7208) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 7336) = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 7200) = v8;
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 9392) = *(_DWORD *)(v6 + 8544);
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 7632) = *(_DWORD *)(v6 + 9680);
  return v12();
}

void sub_1002CEC00(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;

  *(_QWORD *)(v1 + 7144) = a1;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8260) = *(_DWORD *)(v1 + 8332);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7192) = *(_DWORD *)(v1 + 7436);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 7272) = *(_DWORD *)(v1 + 7456);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 8312) = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 7256) = *(_DWORD *)(v1 + 7500);
  *(_DWORD *)(v1 + 7280) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 7344) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 7168) = *(_DWORD *)(v1 + 7464);
  v2 = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 6744) = v2;
  *(_DWORD *)(v1 + 7184) = v2;
  *(_DWORD *)(v1 + 7296) = *(_DWORD *)(v1 + 7484);
  *(_DWORD *)(v1 + 7424) = *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 7304) = *(_DWORD *)(v1 + 7480);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 7176) = *(_DWORD *)(v1 + 9248);
  *(_DWORD *)(v1 + 7288) = *(_DWORD *)(v1 + 7476);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 7416) = *(_DWORD *)(v1 + 7432);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 7328) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 7112) = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 7408) = *(_DWORD *)(v1 + 7460);
  *(_DWORD *)(v1 + 9624) = *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  v3 = *(_DWORD *)(v1 + 7440);
  *(_DWORD *)(v1 + 7264) = v3;
  *(_DWORD *)(v1 + 7160) = v3;
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7320) = *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 7336) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9400) = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 7200) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 9392) = *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_DWORD *)(v1 + 7216) = 29;
  *(_DWORD *)(v1 + 6760) = 46;
  *(_QWORD *)(v1 + 7240) = *(_QWORD *)(v1 + 2656);
  *(_QWORD *)(v1 + 7248) = *(_QWORD *)(v1 + 2584);
  *(_QWORD *)(v1 + 7232) = *(_QWORD *)(v1 + 6008);
  JUMPOUT(0x1003261BCLL);
}

uint64_t sub_1002CEE58@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t (*v12)(void);
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;

  v11 = v10 + a2;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (a2 ^ (833 * (*(_DWORD *)(v5 + 8280) == 39))))
                          - (((v10 + a2 - 18678135) | 0x11D0016u) ^ (unint64_t)(v3 + 8)));
  *(_QWORD *)(v5 + 7144) = (v11 - 353);
  *(_QWORD *)(v5 + 7664) = *(_QWORD *)(v5 + 6904);
  *(_QWORD *)(v5 + 7680) = *(_QWORD *)(v5 + 6872);
  *(_QWORD *)(v5 + 7656) = *(_QWORD *)(v5 + 6864);
  *(_QWORD *)(v5 + 7688) = *(_QWORD *)(v5 + 6888);
  *(_QWORD *)(v5 + 7696) = *(_QWORD *)(v5 + 6880);
  *(_QWORD *)(v5 + 7704) = *(_QWORD *)(v5 + 6896);
  *(_QWORD *)(v5 + 9568) = *(_QWORD *)(v5 + 8944);
  *(_QWORD *)(v5 + 8888) = *(_QWORD *)(v5 + 8576);
  *(_QWORD *)(v5 + 9200) = *(_QWORD *)(v5 + 8952);
  *(_QWORD *)(v5 + 8880) = *(_QWORD *)(v5 + 8936);
  *(_DWORD *)(v5 + 7712) = *(_DWORD *)(v5 + 6928);
  *(_DWORD *)(v5 + 7936) = v4;
  *(_DWORD *)(v5 + 9448) = *(_DWORD *)(v5 + 9116);
  *(_DWORD *)(v5 + 8312) = *(_DWORD *)(v5 + 7904);
  *(_DWORD *)(v5 + 6944) = *(_DWORD *)(v5 + 7040);
  *(_DWORD *)(v5 + 7648) = *(_DWORD *)(v5 + 6856);
  *(_DWORD *)(v5 + 9384) = *(_DWORD *)(v5 + 8832);
  *(_DWORD *)(v5 + 8964) = *(_DWORD *)(v5 + 9152);
  *(_DWORD *)(v5 + 6936) = *(_DWORD *)(v5 + 6952);
  *(_DWORD *)(v5 + 9520) = *(_DWORD *)(v5 + 8196);
  *(_DWORD *)(v5 + 7552) = *(_DWORD *)(v5 + 6984);
  *(_DWORD *)(v5 + 6968) = *(_DWORD *)(v5 + 7000);
  *(_DWORD *)(v5 + 7952) = a1;
  *(_DWORD *)(v5 + 7888) = *(_DWORD *)(v5 + 7912);
  *(_DWORD *)(v5 + 8872) = *(_DWORD *)(v5 + 8912);
  *(_DWORD *)(v5 + 7640) = *(_DWORD *)(v5 + 6912);
  *(_DWORD *)(v5 + 6992) = *(_DWORD *)(v5 + 7008);
  *(_DWORD *)(v5 + 7672) = *(_DWORD *)(v5 + 6920);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 9160) = *(_DWORD *)(v5 + 8920);
  *(_DWORD *)(v5 + 7592) = *(_DWORD *)(v5 + 7080);
  *(_DWORD *)(v5 + 8616) = *(_DWORD *)(v5 + 8904);
  *(_DWORD *)(v5 + 7584) = *(_DWORD *)(v5 + 7088);
  *(_DWORD *)(v5 + 7576) = *(_DWORD *)(v5 + 7072);
  *(_DWORD *)(v5 + 9096) = *(_DWORD *)(v5 + 8900);
  *(_DWORD *)(v5 + 9584) = *(_DWORD *)(v5 + 9184);
  *(_DWORD *)(v5 + 8984) = *(_DWORD *)(v5 + 8572);
  *(_DWORD *)(v5 + 8612) = *(_DWORD *)(v5 + 8932);
  *(_DWORD *)(v5 + 7632) = *(_DWORD *)(v5 + 9680);
  *(_DWORD *)(v5 + 9424) = v8;
  *(_DWORD *)(v5 + 7280) = v8;
  v13 = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8760) = v13;
  *(_DWORD *)(v5 + 7344) = v13;
  *(_DWORD *)(v5 + 7424) = *(_DWORD *)(v5 + 8456);
  *(_DWORD *)(v5 + 8000) = v2;
  *(_DWORD *)(v5 + 7328) = v2;
  v14 = *(_DWORD *)(v5 + 8188);
  *(_DWORD *)(v5 + 9528) = v14;
  *(_DWORD *)(v5 + 7208) = v14;
  *(_DWORD *)(v5 + 8008) = v7;
  *(_DWORD *)(v5 + 6744) = v7;
  *(_DWORD *)(v5 + 7160) = v7;
  v15 = *(_DWORD *)(v5 + 8552);
  *(_DWORD *)(v5 + 9408) = v15;
  *(_DWORD *)(v5 + 7336) = v15;
  v16 = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 8704) = v16;
  *(_DWORD *)(v5 + 7200) = v16;
  *(_DWORD *)(v5 + 9392) = *(_DWORD *)(v5 + 8544);
  *(_DWORD *)(v5 + 7216) = 22;
  *(_DWORD *)(v5 + 6760) = 39;
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7880);
  v17 = *(_QWORD *)(v5 + 2728);
  *(_QWORD *)(v5 + 9576) = v17;
  *(_QWORD *)(v5 + 9496) = *(_QWORD *)(v5 + 2560);
  *(_DWORD *)(v5 + 8032) = *(_DWORD *)(v5 + 8080);
  v18 = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8764) = v18;
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 7768);
  *(_DWORD *)(v5 + 9656) = *(_DWORD *)(v5 + 9272);
  *(_DWORD *)(v5 + 7992) = *(_DWORD *)(v5 + 8064);
  *(_DWORD *)(v5 + 8748) = *(_DWORD *)(v5 + 8980);
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 8752) = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 9440) = *(_DWORD *)(v5 + 9104);
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8680) = *(_DWORD *)(v5 + 8808);
  v19 = *(_DWORD *)(v5 + 8040);
  *(_DWORD *)(v5 + 8020) = v19;
  *(_DWORD *)(v5 + 8024) = *(_DWORD *)(v5 + 8116);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 9632) = *(_DWORD *)(v5 + 9072);
  *(_DWORD *)(v5 + 8664) = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 7984) = *(_DWORD *)(v5 + 8272);
  v20 = *(_DWORD *)(v5 + 7436);
  *(_DWORD *)(v5 + 9736) = v20;
  *(_DWORD *)(v5 + 9432) = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 8640) = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  *(_QWORD *)(v5 + 7240) = v17;
  *(_QWORD *)(v5 + 7248) = *(_QWORD *)(v5 + 2656);
  *(_QWORD *)(v5 + 7232) = *(_QWORD *)(v5 + 2208);
  *(_DWORD *)(v5 + 8260) = v6;
  *(_DWORD *)(v5 + 7192) = v20;
  *(_DWORD *)(v5 + 7272) = *(_DWORD *)(v5 + 7456);
  *(_DWORD *)(v5 + 7312) = *(_DWORD *)(v5 + 9328);
  *(_DWORD *)(v5 + 7256) = *(_DWORD *)(v5 + 7500);
  *(_DWORD *)(v5 + 7128) = *(_DWORD *)(v5 + 7616);
  *(_DWORD *)(v5 + 7168) = *(_DWORD *)(v5 + 7464);
  *(_DWORD *)(v5 + 7184) = *(_DWORD *)(v5 + 7488);
  *(_DWORD *)(v5 + 7296) = *(_DWORD *)(v5 + 7484);
  *(_DWORD *)(v5 + 7304) = *(_DWORD *)(v5 + 7480);
  *(_DWORD *)(v5 + 7264) = v19;
  *(_DWORD *)(v5 + 7176) = *(_DWORD *)(v5 + 9248);
  *(_DWORD *)(v5 + 7288) = *(_DWORD *)(v5 + 7476);
  *(_DWORD *)(v5 + 7224) = v18;
  *(_DWORD *)(v5 + 7416) = *(_DWORD *)(v5 + 7432);
  *(_DWORD *)(v5 + 7112) = *(_DWORD *)(v5 + 0x2000);
  *(_DWORD *)(v5 + 7408) = *(_DWORD *)(v5 + 7460);
  *(_DWORD *)(v5 + 9624) = *(_DWORD *)(v5 + 9264);
  *(_DWORD *)(v5 + 7320) = *(_DWORD *)(v5 + 9156);
  *(_DWORD *)(v5 + 9400) = *(_DWORD *)(v5 + 9224);
  *(_DWORD *)(v5 + 8236) = *(_DWORD *)(v5 + 9240);
  return v12();
}

uint64_t sub_1002CF210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;

  *(_QWORD *)(v10 + 9416) = v9;
  *(_QWORD *)(v10 + 7664) = *(_QWORD *)(v10 + 6904);
  *(_QWORD *)(v10 + 7680) = *(_QWORD *)(v10 + 6872);
  *(_QWORD *)(v10 + 7656) = *(_QWORD *)(v10 + 6864);
  *(_QWORD *)(v10 + 7688) = *(_QWORD *)(v10 + 6888);
  *(_QWORD *)(v10 + 7696) = *(_QWORD *)(v10 + 6880);
  *(_QWORD *)(v10 + 7704) = *(_QWORD *)(v10 + 6896);
  *(_QWORD *)(v10 + 8408) = *(_QWORD *)(v10 + 8432);
  *(_QWORD *)(v10 + 8400) = *(_QWORD *)(v10 + 8416);
  *(_QWORD *)(v10 + 8392) = *(_QWORD *)(v10 + 8536);
  *(_QWORD *)(v10 + 8384) = *(_QWORD *)(v10 + 8488);
  *(_QWORD *)(v10 + 8376) = *(_QWORD *)(v10 + 8472);
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 7712) = *(_DWORD *)(v10 + 6928);
  *(_DWORD *)(v10 + 7936) = v13;
  *(_DWORD *)(v10 + 8312) = *(_DWORD *)(v10 + 7904);
  *(_DWORD *)(v10 + 6944) = *(_DWORD *)(v10 + 7040);
  *(_DWORD *)(v10 + 7648) = *(_DWORD *)(v10 + 6856);
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 6936) = *(_DWORD *)(v10 + 6952);
  *(_DWORD *)(v10 + 8368) = v12;
  *(_DWORD *)(v10 + 7552) = *(_DWORD *)(v10 + 6984);
  *(_DWORD *)(v10 + 8504) = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 9480) = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 6968) = *(_DWORD *)(v10 + 7000);
  *(_DWORD *)(v10 + 7952) = v14;
  *(_DWORD *)(v10 + 7888) = *(_DWORD *)(v10 + 7912);
  *(_DWORD *)(v10 + 8520) = *(_DWORD *)(v10 + 8464);
  *(_DWORD *)(v10 + 8356) = *(_DWORD *)(v10 + 8532);
  *(_DWORD *)(v10 + 8360) = *(_DWORD *)(v10 + 8424);
  *(_DWORD *)(v10 + 8512) = *(_DWORD *)(v10 + 8480);
  *(_DWORD *)(v10 + 7640) = *(_DWORD *)(v10 + 6912);
  *(_DWORD *)(v10 + 6992) = *(_DWORD *)(v10 + 7008);
  *(_DWORD *)(v10 + 7672) = *(_DWORD *)(v10 + 6920);
  *(_DWORD *)(v10 + 8020) = *(_DWORD *)(v10 + 8040);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8000) = *(_DWORD *)(v10 + 7152);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 7592) = *(_DWORD *)(v10 + 7080);
  *(_DWORD *)(v10 + 8496) = *(_DWORD *)(v10 + 8188);
  *(_DWORD *)(v10 + 7584) = *(_DWORD *)(v10 + 7088);
  *(_DWORD *)(v10 + 7576) = *(_DWORD *)(v10 + 7072);
  *(_DWORD *)(v10 + 8440) = *(_DWORD *)(v10 + 9240);
  *(_DWORD *)(v10 + 8352) = a8;
  *(_DWORD *)(v10 + 7632) = *(_DWORD *)(v10 + 9680);
  *(_DWORD *)(v10 + 9688) = 1;
  *(_DWORD *)(v10 + 8280) = 11;
  *(_QWORD *)(v10 + 5416) = *(_QWORD *)(v10 + 7392);
  *(_QWORD *)(v10 + 6000) = *(_QWORD *)(v10 + 1784);
  v15 = *(_QWORD *)(v10 + 7624);
  *(_QWORD *)(v10 + 5968) = v15;
  *(_QWORD *)(v10 + 2568) = v15;
  v16 = *(_DWORD *)(v10 + 8232);
  *(_DWORD *)(v10 + 6720) = v16;
  *(_DWORD *)(v10 + 5408) = *(_DWORD *)(v10 + 7608);
  *(_DWORD *)(v10 + 5964) = v11;
  *(_DWORD *)(v10 + 9128) = v16;
  *(_DWORD *)(v10 + 4548) = -v8;
  *(_DWORD *)(v10 + 5412) = -v8;
  *(_DWORD *)(v10 + 9736) = 1;
  return sub_1003249CC(a1, 1, a3, *(unsigned int *)(v10 + 8328), a5, a6, 0, 0);
}

uint64_t sub_1002CF3F0()
{
  unsigned int v0;
  char v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (v1 - 112) >= ((v0 ^ 0xB1) + v0 - 55);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v3) | (16 * v3)) ^ v0)))();
}

uint64_t sub_1002CF42C(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;

  *(_DWORD *)(v6 + 9432) = 0;
  *(_DWORD *)(v6 + 9080) = 0;
  *(_DWORD *)(v6 + 9576) = 0;
  *(_DWORD *)(v6 + 9496) = 0;
  *(_DWORD *)(v6 + 9012) = 0;
  *(_DWORD *)(v6 + 9488) = 0;
  *(_DWORD *)(v6 + 9472) = 0;
  *(_QWORD *)(v6 + 9416) = ((v5 - 2145952849) & 0x7FE8AE5Du) - 2059598853;
  v10 = *(_QWORD *)(v9 + 8 * (((v7 == (((v5 - 81) & 0x5D) + 90)) * a2) ^ v5));
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = *(_DWORD *)(v6 + 7920);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 9480) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = *(_DWORD *)(v6 + 7928);
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 8984) = v7;
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 7632) = a4;
  v11 = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 8312) = v11;
  *(_DWORD *)(v6 + 8920) = v11;
  v12 = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 9528) = v12;
  *(_DWORD *)(v6 + 8496) = v12;
  *(_DWORD *)(v6 + 9456) = 256;
  *(_DWORD *)(v6 + 8280) = 19;
  *(_QWORD *)(v6 + 9600) = v8;
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 9016);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 9320);
  *(_DWORD *)(v6 + 9384) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 9424) = *(_DWORD *)(v6 + 8608);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 8456);
  v13 = *(_DWORD *)(v6 + 8548);
  *(_DWORD *)(v6 + 9632) = v13;
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 9408) = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 9592) = *(_DWORD *)(v6 + 8328);
  *(_QWORD *)(v6 + 8408) = *(_QWORD *)(v6 + 8432);
  *(_QWORD *)(v6 + 8400) = *(_QWORD *)(v6 + 8416);
  *(_QWORD *)(v6 + 8392) = *(_QWORD *)(v6 + 8536);
  *(_QWORD *)(v6 + 8384) = *(_QWORD *)(v6 + 8488);
  *(_QWORD *)(v6 + 8376) = *(_QWORD *)(v6 + 8472);
  *(_QWORD *)(v6 + 8944) = *(_QWORD *)(v6 + 6088);
  v14 = *(_QWORD *)(v6 + 3248);
  *(_QWORD *)(v6 + 8576) = v14;
  *(_QWORD *)(v6 + 8952) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 8936) = v14;
  v15 = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9116) = v15;
  *(_DWORD *)(v6 + 8368) = a5;
  *(_DWORD *)(v6 + 8504) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8520) = *(_DWORD *)(v6 + 8464);
  *(_DWORD *)(v6 + 8356) = *(_DWORD *)(v6 + 8532);
  *(_DWORD *)(v6 + 8360) = *(_DWORD *)(v6 + 8424);
  *(_DWORD *)(v6 + 8912) = v15;
  *(_DWORD *)(v6 + 8512) = *(_DWORD *)(v6 + 8480);
  *(_DWORD *)(v6 + 9128) = v15;
  *(_DWORD *)(v6 + 9264) = v13;
  *(_DWORD *)(v6 + 9688) = 1;
  *(_DWORD *)(v6 + 9736) = 1;
  *(_DWORD *)(v6 + 8572) = 118;
  *(_DWORD *)(v6 + 8440) = *(_DWORD *)(v6 + 9240);
  *(_DWORD *)(v6 + 8352) = *(_DWORD *)(v6 + 9040);
  *(_DWORD *)(v6 + 8932) = 123;
  return ((uint64_t (*)(void))(v10 - 12))();
}

uint64_t sub_1002CF770@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (((v1 + 94) | 8) - 56) <= a1;
  return (*(uint64_t (**)(void))(v2 + 8 * ((4 * v3) | (8 * v3) | v1)))();
}

uint64_t sub_1002CF7A4@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((1996 * ((((v1 - 2090424628) ^ (a1 < 0x70u)) & 1) == 0)) ^ (v1 + 6804)))
                            - 4))();
}

uint64_t sub_1002CF7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  char v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * (((v7 > (char)(((v4 - 65) | 0x50) + 50))
                                                                                            * v5) | (v4 - 8260)))
                                                                              - 4))(a1, a2, a3, a4, 1);
}

uint64_t sub_1002CF824@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((473 * (a1 < (v1 - 97))) ^ v1))
                            - 8))();
}

uint64_t sub_1002CF84C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((v0 + 5931) | (4 * (v1 < (((v0 + 46) | 0x14) + 91)))))
                            - ((v0 + 1882) ^ 0x1423)))();
}

uint64_t sub_1002CF88C@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                      + 8
                                                      * ((67
                                                        * (a1 == (((v1 ^ 0xE) + 124) ^ (108 * (v1 ^ 0xE))))) ^ v1))
                                          - 12))(2484433285);
}

void sub_1002CF8F0()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002CF90C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  unsigned int *v3;

  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 + 8 * (v0 ^ (118 * (v1 < 0x28))))
                                                                 - ((v0 + 2008439351) & 0x88499FF7)
                                                                 + 7887))(v3[2152], v3[2049], v3[1980], v3[1982]);
}

uint64_t sub_1002CF960()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((1618 * (v1 ^ 0x1ED5)) ^ 0xC98) * (v0 < 0x24u)) ^ v1))
                            - (v1 - 1675)
                            + 6212))();
}

uint64_t sub_1002CF9A4()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (116 * (v1 < 0x22))))
                            - ((169 * (v0 ^ 0xCB5u)) ^ ((v0 + 676) - 1035))))();
}

uint64_t sub_1002CF9E0(int a1, int a2, int a3, int a4)
{
  unsigned __int8 v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;

  v9 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4166 * ((((v5 - 167776730) ^ 0x7E) & 0xB7) == v4)) ^ v5))
                         - ((v5 - 2412) ^ 0x1C9));
  *(_DWORD *)(v8 + 7632) = 153;
  v10 = *(_QWORD *)(v8 + 2128);
  *(_QWORD *)(v8 + 7664) = v10;
  v11 = *(_QWORD *)(v8 + 2248);
  *(_QWORD *)(v8 + 7680) = v11;
  v12 = *(_QWORD *)(v8 + 2256);
  *(_QWORD *)(v8 + 7656) = v12;
  *(_QWORD *)(v8 + 7688) = v10;
  *(_QWORD *)(v8 + 7696) = v11;
  *(_QWORD *)(v8 + 7704) = v12;
  *(_QWORD *)(v8 + 9568) = *(_QWORD *)(v8 + 8944);
  *(_QWORD *)(v8 + 8888) = *(_QWORD *)(v8 + 8576);
  *(_QWORD *)(v8 + 9200) = *(_QWORD *)(v8 + 8952);
  *(_QWORD *)(v8 + 8880) = *(_QWORD *)(v8 + 8936);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = v12;
  *(_QWORD *)(v8 + 9496) = v12;
  *(_DWORD *)(v8 + 8032) = *(_DWORD *)(v8 + 8080);
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  v13 = *(_DWORD *)(v8 + 7380);
  *(_DWORD *)(v8 + 7712) = v13;
  LODWORD(v10) = *(_DWORD *)(v8 + 2440);
  *(_DWORD *)(v8 + 7936) = a3;
  v14 = *(_DWORD *)(v8 + 7904);
  *(_DWORD *)(v8 + 9448) = *(_DWORD *)(v8 + 9116);
  *(_DWORD *)(v8 + 9656) = *(_DWORD *)(v8 + 9272);
  *(_DWORD *)(v8 + 8312) = v14;
  *(_DWORD *)(v8 + 6944) = *(_DWORD *)(v8 + 7040);
  *(_DWORD *)(v8 + 7648) = v10;
  *(_DWORD *)(v8 + 7992) = *(_DWORD *)(v8 + 8064);
  LODWORD(v11) = *(_DWORD *)(v8 + 2140);
  *(_DWORD *)(v8 + 9384) = v11;
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8964) = *(_DWORD *)(v8 + 9152);
  *(_DWORD *)(v8 + 6936) = *(_DWORD *)(v8 + 6952);
  *(_DWORD *)(v8 + 9520) = a2;
  *(_DWORD *)(v8 + 7552) = *(_DWORD *)(v8 + 6984);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 9424) = a1;
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 8136);
  *(_DWORD *)(v8 + 6968) = *(_DWORD *)(v8 + 7000);
  *(_DWORD *)(v8 + 7952) = a4;
  *(_DWORD *)(v8 + 7888) = *(_DWORD *)(v8 + 7912);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 9440) = v10;
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8872) = *(_DWORD *)(v8 + 8912);
  *(_DWORD *)(v8 + 7640) = v13;
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 6992) = *(_DWORD *)(v8 + 7008);
  *(_DWORD *)(v8 + 7672) = v11;
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8020) = *(_DWORD *)(v8 + 8040);
  *(_DWORD *)(v8 + 8024) = *(_DWORD *)(v8 + 8116);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 9632) = *(_DWORD *)(v8 + 9072);
  *(_DWORD *)(v8 + 9160) = *(_DWORD *)(v8 + 8920);
  *(_DWORD *)(v8 + 8000) = *(_DWORD *)(v8 + 7152);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  *(_DWORD *)(v8 + 7984) = *(_DWORD *)(v8 + 8272);
  *(_DWORD *)(v8 + 9736) = v10;
  *(_DWORD *)(v8 + 8008) = *(_DWORD *)(v8 + 8056);
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 7592) = *(_DWORD *)(v8 + 9104);
  *(_DWORD *)(v8 + 9528) = *(_DWORD *)(v8 + 8188);
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8616) = *(_DWORD *)(v8 + 8904);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 7584) = *(_DWORD *)(v8 + 8832);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 7576) = v7;
  *(_DWORD *)(v8 + 9408) = *(_DWORD *)(v8 + 8552);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 9096) = *(_DWORD *)(v8 + 8900);
  *(_DWORD *)(v8 + 9584) = *(_DWORD *)(v8 + 9184);
  *(_DWORD *)(v8 + 8984) = *(_DWORD *)(v8 + 8572);
  *(_DWORD *)(v8 + 8612) = *(_DWORD *)(v8 + 8932);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  return v9();
}

void sub_1002CFC80(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = (a1 - 985802446) & 0xBFFF3517;
  v3 = *(_QWORD *)(v1 + 3800) + ((_DWORD)v2 + 2059595945) * (*(_DWORD *)(v1 + 3912) ^ 0xCEBAC422);
  *(_DWORD *)(v1 + 5312) = 153;
  *(_DWORD *)(v1 + 4292) = 67;
  *(_QWORD *)(v1 + 9416) = v2;
  *(_QWORD *)(v1 + 9456) = *(_QWORD *)(v1 + 7048);
  *(_QWORD *)(v1 + 9608) = v3;
  LODWORD(v2) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 6928) = v2;
  *(_DWORD *)(v1 + 5344) = *(_DWORD *)(v1 + 6072);
  *(_DWORD *)(v1 + 9464) = 994009881;
  *(_DWORD *)(v1 + 5340) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 2440) = *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 5348) = *(_DWORD *)(v1 + 6084);
  *(_DWORD *)(v1 + 2140) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 5336) = *(_DWORD *)(v1 + 6080);
  *(_DWORD *)(v1 + 9664) = *(_DWORD *)(v1 + 6976);
  *(_DWORD *)(v1 + 9616) = *(_DWORD *)(v1 + 7096);
  *(_DWORD *)(v1 + 9600) = *(_DWORD *)(v1 + 7020);
  *(_DWORD *)(v1 + 9488) = *(_DWORD *)(v1 + 7064);
  *(_DWORD *)(v1 + 7380) = v2;
  JUMPOUT(0x1002B3378);
}

uint64_t sub_1002CFD04@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((a1 < (((_BYTE)v1 + 22) & 0xDF ^ 0xEDu)) * ((v1 + 217236246) ^ 0xCF2D625)) ^ v1)))();
}

uint64_t sub_1002CFD4C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v0 < 0x28) ^ ((v1 ^ 0xA) + 58)) & 1)
                                          * ((((v1 ^ 0xCF2F70A) - 1213523192) & 0x4854DEBA) - 6828)) ^ v1 ^ 0xCF2F70A))
                            - 4))();
}

uint64_t sub_1002CFDA4@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((109
                                          * (a1 < (((v1 + 57) | 6)
                                                                                + 91
                                                                                - 16 * (((v1 + 57) | 6) ^ 0x31)
                                                                                + 11))) ^ ((v1 - 8391) | 0x2306)))
                            - 8))();
}

uint64_t sub_1002CFDF8()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((81 * (v1 < ((-85 * (v0 ^ 0x92) - 110) ^ (2 * v0) ^ 0xE2))) ^ v0)))();
}

uint64_t sub_1002CFE38@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 9744)
                                                    + 8
                                                    * ((1117 * (a2 != ((v2 ^ 0x44) + v2 - 63))) ^ v2)))(a1, v2 ^ 0xA03u);
}

void sub_1002CFE94()
{
  JUMPOUT(0x1002E5A9CLL);
}

uint64_t sub_1002CFEAC@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 < (((a1 + 83) | 0x48) - 52))
                                * (((a1 + 2647) | 0x360) - 9061)) ^ a1)))();
}

uint64_t sub_1002CFEF0()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v1 < (v0 + 117 + v0 + 50 - 99);
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * v3) | (16 * v3)) ^ v0)))();
}

uint64_t sub_1002CFF20@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((92 * (((v1 < 0x12u) ^ (5 * (a1 ^ 0xC9))) & 1)) ^ a1)))();
}

uint64_t sub_1002CFF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 9744)
                                                                                               + 8
                                                                                               * (((v6
                                                                                                  + 2059596808
                                                                                                  + v6
                                                                                                  - 2059596168
                                                                                                  + 2569)
                                                                                                 * (*(_DWORD *)(v7 + 9680) != 138)) ^ v6));
  *(_DWORD *)(v7 + 7632) = 139;
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 3064);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 2608);
  v9 = *(_QWORD *)(v7 + 2688);
  *(_QWORD *)(v7 + 7656) = v9;
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 4440);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 4432);
  v10 = *(_QWORD *)(v7 + 4424);
  *(_QWORD *)(v7 + 7704) = v10;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v11 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v9;
  *(_QWORD *)(v7 + 9496) = v10;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  v12 = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 7712) = v12;
  LODWORD(v10) = *(_DWORD *)(v7 + 3060);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  v13 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v13;
  v14 = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 6944) = v14;
  *(_DWORD *)(v7 + 7648) = v10;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  v15 = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 9384) = v15;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  LODWORD(v9) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 4464) = v9;
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 4468) = v12;
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  v16 = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 7888) = v16;
  *(_DWORD *)(v7 + 4460) = v15;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 9440) = v9;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = v14;
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = v16;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9736) = v9;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8(a1, a2, v11, a4, a5, a6, 80);
}

uint64_t sub_1002D0218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;

  v9 = (v7 + 2104) ^ 0x853D1CF5;
  v10 = *(_DWORD *)(v8 + 3916);
  v11 = (((v7 + 2104) | 0x200) ^ 0xEE3) + v10;
  *(_QWORD *)(v8 + 9416) = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * (int)(((v9 + 2059599730) * ((v10 - 1667490477) < 0x40)) ^ v7)) - 4);
  *(_DWORD *)(v8 + 9464) = 994009645;
  *(_DWORD *)(v8 + 5312) = 139;
  *(_DWORD *)(v8 + 4292) = 67;
  v13 = *(_QWORD *)(v8 + 2712);
  *(_QWORD *)(v8 + 9456) = *(_QWORD *)(v8 + 7048);
  *(_QWORD *)(v8 + 9608) = *(_QWORD *)(v8 + 3808);
  v14 = *(unsigned int *)(v8 + 7448);
  v15 = *(_DWORD *)(v8 + 8548);
  *(_DWORD *)(v8 + 6928) = v15;
  *(_DWORD *)(v8 + 3916) = v11;
  *(_DWORD *)(v8 + 5344) = *(_DWORD *)(v8 + 6072);
  *(_DWORD *)(v8 + 5340) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 4464) = *(_DWORD *)(v8 + 9104);
  *(_DWORD *)(v8 + 4468) = v15;
  *(_DWORD *)(v8 + 4460) = *(_DWORD *)(v8 + 8832);
  *(_DWORD *)(v8 + 5348) = *(_DWORD *)(v8 + 6084);
  *(_DWORD *)(v8 + 5336) = *(_DWORD *)(v8 + 6080);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 6976);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 7096);
  *(_DWORD *)(v8 + 9600) = *(_DWORD *)(v8 + 7020);
  *(_DWORD *)(v8 + 9488) = *(_DWORD *)(v8 + 7064);
  *(_DWORD *)(v8 + 9472) = *(_DWORD *)(v8 + 7136);
  return v12(a1, a2, a3, v14, v13, a6, a7, 32);
}

void sub_1002D033C(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  *(_DWORD *)(v2 + 7792) = 0;
  *(_DWORD *)(v2 + 9504) = 0;
  *(_DWORD *)(v2 + 7784) = 0;
  *(_DWORD *)(v2 + 7776) = 0;
  *(_DWORD *)(v2 + 9496) = 0;
  *(_DWORD *)(v2 + 9576) = 0;
  *(_DWORD *)(v2 + 9456) = 0;
  *(_DWORD *)(v2 + 9488) = 0;
  *(_DWORD *)(v2 + 9472) = 0;
  v3 = *(_DWORD *)(*(_QWORD *)(v2 + 8248) + 512) & ((v1 ^ 0x1699) - 6252) ^ 0x28631154;
  *(_DWORD *)(v2 + 3912) = (((2 * v3) & 0x4080208A) - v3 - 592976070) ^ 0x3A7E324C;
  *(_QWORD *)(v2 + 7664) = *(_QWORD *)(v2 + 6904);
  *(_QWORD *)(v2 + 7680) = *(_QWORD *)(v2 + 6872);
  *(_QWORD *)(v2 + 7656) = *(_QWORD *)(v2 + 6864);
  *(_QWORD *)(v2 + 7688) = *(_QWORD *)(v2 + 6888);
  *(_QWORD *)(v2 + 7696) = *(_QWORD *)(v2 + 6880);
  *(_QWORD *)(v2 + 7704) = *(_QWORD *)(v2 + 6896);
  *(_QWORD *)(v2 + 9568) = *(_QWORD *)(v2 + 8944);
  *(_QWORD *)(v2 + 8888) = *(_QWORD *)(v2 + 8576);
  *(_QWORD *)(v2 + 9200) = *(_QWORD *)(v2 + 8952);
  *(_QWORD *)(v2 + 8880) = *(_QWORD *)(v2 + 8936);
  *(_DWORD *)(v2 + 8032) = *(_DWORD *)(v2 + 8080);
  *(_DWORD *)(v2 + 7712) = *(_DWORD *)(v2 + 6928);
  *(_DWORD *)(v2 + 7936) = *(_DWORD *)(v2 + 7920);
  *(_DWORD *)(v2 + 9656) = *(_DWORD *)(v2 + 9272);
  *(_DWORD *)(v2 + 3916) = a1;
  v4 = *(_DWORD *)(v2 + 8212);
  *(_DWORD *)(v2 + 9128) = v4;
  *(_DWORD *)(v2 + 7976) = v4;
  *(_DWORD *)(v2 + 8312) = *(_DWORD *)(v2 + 7904);
  *(_DWORD *)(v2 + 6944) = *(_DWORD *)(v2 + 7040);
  *(_DWORD *)(v2 + 7648) = *(_DWORD *)(v2 + 6856);
  *(_DWORD *)(v2 + 7992) = *(_DWORD *)(v2 + 8064);
  *(_DWORD *)(v2 + 9384) = *(_DWORD *)(v2 + 8832);
  *(_DWORD *)(v2 + 8964) = *(_DWORD *)(v2 + 9152);
  *(_DWORD *)(v2 + 6936) = *(_DWORD *)(v2 + 6952);
  *(_DWORD *)(v2 + 9520) = *(_DWORD *)(v2 + 8196);
  *(_DWORD *)(v2 + 7552) = *(_DWORD *)(v2 + 6984);
  *(_DWORD *)(v2 + 9424) = *(_DWORD *)(v2 + 8608);
  *(_DWORD *)(v2 + 9480) = *(_DWORD *)(v2 + 8136);
  *(_DWORD *)(v2 + 6968) = *(_DWORD *)(v2 + 7000);
  *(_DWORD *)(v2 + 7952) = *(_DWORD *)(v2 + 7928);
  *(_DWORD *)(v2 + 7888) = *(_DWORD *)(v2 + 7912);
  *(_DWORD *)(v2 + 9440) = *(_DWORD *)(v2 + 9104);
  *(_DWORD *)(v2 + 8872) = *(_DWORD *)(v2 + 8912);
  *(_DWORD *)(v2 + 7640) = *(_DWORD *)(v2 + 6912);
  *(_DWORD *)(v2 + 6992) = *(_DWORD *)(v2 + 7008);
  *(_DWORD *)(v2 + 7672) = *(_DWORD *)(v2 + 6920);
  *(_DWORD *)(v2 + 8020) = *(_DWORD *)(v2 + 8040);
  *(_DWORD *)(v2 + 8024) = *(_DWORD *)(v2 + 8116);
  *(_DWORD *)(v2 + 9632) = *(_DWORD *)(v2 + 9072);
  *(_DWORD *)(v2 + 9160) = *(_DWORD *)(v2 + 8920);
  *(_DWORD *)(v2 + 8000) = *(_DWORD *)(v2 + 7152);
  *(_DWORD *)(v2 + 7984) = *(_DWORD *)(v2 + 8272);
  *(_DWORD *)(v2 + 8008) = *(_DWORD *)(v2 + 8056);
  *(_DWORD *)(v2 + 7592) = *(_DWORD *)(v2 + 7080);
  *(_DWORD *)(v2 + 9528) = *(_DWORD *)(v2 + 8188);
  *(_DWORD *)(v2 + 9624) = *(_DWORD *)(v2 + 9264);
  *(_DWORD *)(v2 + 8616) = *(_DWORD *)(v2 + 8904);
  *(_DWORD *)(v2 + 7584) = *(_DWORD *)(v2 + 7088);
  *(_DWORD *)(v2 + 7576) = *(_DWORD *)(v2 + 7072);
  *(_DWORD *)(v2 + 9408) = *(_DWORD *)(v2 + 8552);
  *(_DWORD *)(v2 + 9096) = *(_DWORD *)(v2 + 8900);
  *(_DWORD *)(v2 + 9584) = *(_DWORD *)(v2 + 9184);
  *(_DWORD *)(v2 + 8984) = *(_DWORD *)(v2 + 8572);
  *(_DWORD *)(v2 + 8236) = *(_DWORD *)(v2 + 9240);
  *(_DWORD *)(v2 + 8612) = *(_DWORD *)(v2 + 8932);
  *(_DWORD *)(v2 + 7632) = *(_DWORD *)(v2 + 9680);
  *(_DWORD *)(v2 + 9688) = 1;
  *(_DWORD *)(v2 + 9464) = 1;
  *(_DWORD *)(v2 + 9736) = 0;
  *(_DWORD *)(v2 + 9680) = 1;
  JUMPOUT(0x100326F74);
}

uint64_t sub_1002D059C(int a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  int v12;

  v9 = v5 ^ 0x84C ^ (a1 + 590);
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v8
                                      + 8
                                      * ((12875 * (((v7 < 0x75u) ^ (a1 + (v5 ^ 0x4C) + 62)) & 1)) ^ v5 ^ 0x84Cu))
                          + 2235371539
                          - v9);
  *(_DWORD *)(v6 + 8932) = 121;
  *(_DWORD *)(v6 + 9688) = 1;
  *(_DWORD *)(v6 + 8280) = 19;
  *(_QWORD *)(v6 + 9416) = v9;
  *(_QWORD *)(v6 + 7664) = *(_QWORD *)(v6 + 6904);
  *(_QWORD *)(v6 + 7680) = *(_QWORD *)(v6 + 6872);
  *(_QWORD *)(v6 + 7656) = *(_QWORD *)(v6 + 6864);
  *(_QWORD *)(v6 + 7688) = *(_QWORD *)(v6 + 6888);
  *(_QWORD *)(v6 + 7696) = *(_QWORD *)(v6 + 6880);
  *(_QWORD *)(v6 + 7704) = *(_QWORD *)(v6 + 6896);
  *(_QWORD *)(v6 + 8408) = *(_QWORD *)(v6 + 8432);
  *(_QWORD *)(v6 + 8400) = *(_QWORD *)(v6 + 8416);
  *(_QWORD *)(v6 + 8392) = *(_QWORD *)(v6 + 8536);
  *(_QWORD *)(v6 + 8384) = *(_QWORD *)(v6 + 8488);
  *(_QWORD *)(v6 + 8376) = *(_QWORD *)(v6 + 8472);
  *(_QWORD *)(v6 + 8944) = *(_QWORD *)(v6 + 6088);
  v11 = *(_QWORD *)(v6 + 3240);
  *(_QWORD *)(v6 + 8576) = v11;
  *(_QWORD *)(v6 + 8952) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 8936) = v11;
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 7712) = *(_DWORD *)(v6 + 6928);
  *(_DWORD *)(v6 + 7936) = *(_DWORD *)(v6 + 7920);
  v12 = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 9116) = v12;
  LODWORD(v9) = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 8312) = v9;
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = *(_DWORD *)(v6 + 6856);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 8368) = a5;
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 8504) = *(_DWORD *)(v6 + 8548);
  *(_DWORD *)(v6 + 9480) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = *(_DWORD *)(v6 + 7928);
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8520) = *(_DWORD *)(v6 + 8464);
  *(_DWORD *)(v6 + 8356) = *(_DWORD *)(v6 + 8532);
  *(_DWORD *)(v6 + 8360) = *(_DWORD *)(v6 + 8424);
  *(_DWORD *)(v6 + 8912) = v12;
  *(_DWORD *)(v6 + 8512) = *(_DWORD *)(v6 + 8480);
  *(_DWORD *)(v6 + 7640) = *(_DWORD *)(v6 + 6912);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = *(_DWORD *)(v6 + 6920);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 9128) = v12;
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8920) = v9;
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 7080);
  *(_DWORD *)(v6 + 8496) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 7088);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 7072);
  *(_DWORD *)(v6 + 9736) = 1;
  *(_DWORD *)(v6 + 8440) = *(_DWORD *)(v6 + 9240);
  *(_DWORD *)(v6 + 8352) = *(_DWORD *)(v6 + 9040);
  *(_DWORD *)(v6 + 7632) = a4;
  return v10();
}

void sub_1002D07C8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_QWORD *)(v1 + 9416) = v0;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 8408) = *(_QWORD *)(v1 + 8432);
  *(_QWORD *)(v1 + 8400) = *(_QWORD *)(v1 + 8416);
  *(_QWORD *)(v1 + 8392) = *(_QWORD *)(v1 + 8536);
  *(_QWORD *)(v1 + 8384) = *(_QWORD *)(v1 + 8488);
  *(_QWORD *)(v1 + 8376) = *(_QWORD *)(v1 + 8472);
  *(_DWORD *)(v1 + 8032) = *(_DWORD *)(v1 + 8080);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 6928);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 7992) = *(_DWORD *)(v1 + 8064);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 8368) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 8504) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 9480) = *(_DWORD *)(v1 + 8136);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 8520) = *(_DWORD *)(v1 + 8464);
  *(_DWORD *)(v1 + 8356) = *(_DWORD *)(v1 + 8532);
  *(_DWORD *)(v1 + 8360) = *(_DWORD *)(v1 + 8424);
  *(_DWORD *)(v1 + 8512) = *(_DWORD *)(v1 + 8480);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 8020) = *(_DWORD *)(v1 + 8040);
  *(_DWORD *)(v1 + 8024) = *(_DWORD *)(v1 + 8116);
  v2 = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 8312) = v2;
  *(_DWORD *)(v1 + 8920) = v2;
  *(_DWORD *)(v1 + 8000) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 7984) = *(_DWORD *)(v1 + 8272);
  *(_DWORD *)(v1 + 8008) = *(_DWORD *)(v1 + 8056);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 8496) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 8440) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8352) = *(_DWORD *)(v1 + 9040);
  *(_DWORD *)(v1 + 7632) = *(_DWORD *)(v1 + 9680);
  *(_DWORD *)(v1 + 8932) = 122;
  JUMPOUT(0x1002D0960);
}

uint64_t sub_1002D09B0@<X0>(unsigned __int8 a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * (int)((((((((_BYTE)v1 - 27) & 0xEA) - 24) & 0xFEu) > a1) * v2) ^ v1))
                            - (v1 ^ 0x1F94)))();
}

uint64_t sub_1002D09FC@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (154 * (a1 < 0x48u))))
                            - ((((v1 - 763605369) & 0x2D83B7B7) - 7255) ^ ((v1 - 5736) | 0x58u))))();
}

uint64_t sub_1002D0A54()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 < 0x44) ^ (v0 + 64)) & 1)
                                          * ((202 * (v0 ^ 0x248C)) ^ 0x21A4)) ^ v0))
                            - 12))();
}

uint64_t sub_1002D0A9C@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * ((21 * ((((6 * (v1 ^ 0xF9)) ^ 0xCC) & 0xFEu) > a1)) ^ v1))
                            - 8))();
}

uint64_t sub_1002D0AD8@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((45 * (a1 != (((((v1 ^ 0x23) - 86) & 0x9F) + 51) ^ 0xF))) ^ v1 ^ 0x2523)))();
}

void sub_1002D0B4C()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002D0B68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1664) - v5 + ((v3 + 605497792) & 0xDBE8CFFC) - 3533) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v3 ^ (13331 * (v5 == 31)))) - 12))();
}

uint64_t sub_1002D0BE8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((30 * (v0 == 32)) ^ v1))
                            - (v1 + 1603)
                            + 5163))();
}

uint64_t sub_1002D0C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v5 ^ (5504 * (v3 < *(_DWORD *)(v6 + 3996)))))
                                         - (v4 ^ 0x142B)))(0);
}

uint64_t sub_1002D0C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D0B68(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002D0C80()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 < (((v1 - 17) ^ 0xF6) - 55))
                                * ((v1 - 5137) ^ 0x109D)) ^ (v1 - 5137))))();
}

uint64_t sub_1002D0CB8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v9 = (uint64_t (*)(void))(*(_QWORD *)(v6
                                     + 8
                                     * (((a5 == ((85 * (v5 ^ 0x63)) ^ 0x83))
                                       * (((v5 - 176328202) & *(_DWORD *)(v8 + 92)) + 2059599997)) | v5))
                         - 12);
  *(_DWORD *)(v8 + 7632) = 161;
  *(_QWORD *)(v8 + 7664) = *(_QWORD *)(v8 + 3064);
  *(_QWORD *)(v8 + 7680) = *(_QWORD *)(v8 + 2608);
  v10 = *(_QWORD *)(v8 + 2688);
  *(_QWORD *)(v8 + 7656) = v10;
  *(_QWORD *)(v8 + 7688) = *(_QWORD *)(v8 + 4440);
  *(_QWORD *)(v8 + 7696) = *(_QWORD *)(v8 + 4432);
  v11 = *(_QWORD *)(v8 + 4424);
  *(_QWORD *)(v8 + 7704) = v11;
  *(_QWORD *)(v8 + 9568) = *(_QWORD *)(v8 + 8944);
  *(_QWORD *)(v8 + 8888) = *(_QWORD *)(v8 + 8576);
  *(_QWORD *)(v8 + 9200) = *(_QWORD *)(v8 + 8952);
  *(_QWORD *)(v8 + 8880) = *(_QWORD *)(v8 + 8936);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = v10;
  *(_QWORD *)(v8 + 9496) = v11;
  *(_DWORD *)(v8 + 8032) = *(_DWORD *)(v8 + 8080);
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  *(_DWORD *)(v8 + 7712) = v7;
  LODWORD(v11) = *(_DWORD *)(v8 + 3060);
  *(_DWORD *)(v8 + 7936) = a3;
  v12 = *(_DWORD *)(v8 + 7904);
  *(_DWORD *)(v8 + 9448) = *(_DWORD *)(v8 + 9116);
  *(_DWORD *)(v8 + 9656) = *(_DWORD *)(v8 + 9272);
  *(_DWORD *)(v8 + 8312) = v12;
  v13 = *(_DWORD *)(v8 + 7040);
  *(_DWORD *)(v8 + 6944) = v13;
  *(_DWORD *)(v8 + 7648) = v11;
  *(_DWORD *)(v8 + 7992) = *(_DWORD *)(v8 + 8064);
  v14 = *(_DWORD *)(v8 + 8832);
  *(_DWORD *)(v8 + 9384) = v14;
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8964) = *(_DWORD *)(v8 + 9152);
  *(_DWORD *)(v8 + 6936) = *(_DWORD *)(v8 + 6952);
  *(_DWORD *)(v8 + 9520) = a2;
  *(_DWORD *)(v8 + 7552) = *(_DWORD *)(v8 + 6984);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 9424) = a1;
  LODWORD(v10) = *(_DWORD *)(v8 + 9104);
  *(_DWORD *)(v8 + 4464) = v10;
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 4468) = v7;
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 8136);
  *(_DWORD *)(v8 + 6968) = *(_DWORD *)(v8 + 7000);
  *(_DWORD *)(v8 + 7952) = a4;
  v15 = *(_DWORD *)(v8 + 7912);
  *(_DWORD *)(v8 + 7888) = v15;
  *(_DWORD *)(v8 + 4460) = v14;
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 9440) = v10;
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8872) = *(_DWORD *)(v8 + 8912);
  *(_DWORD *)(v8 + 7640) = v13;
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 6992) = *(_DWORD *)(v8 + 7008);
  *(_DWORD *)(v8 + 7672) = v15;
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8020) = *(_DWORD *)(v8 + 8040);
  *(_DWORD *)(v8 + 8024) = *(_DWORD *)(v8 + 8116);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 9632) = *(_DWORD *)(v8 + 9072);
  *(_DWORD *)(v8 + 9160) = *(_DWORD *)(v8 + 8920);
  *(_DWORD *)(v8 + 8000) = *(_DWORD *)(v8 + 7152);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  *(_DWORD *)(v8 + 7984) = *(_DWORD *)(v8 + 8272);
  *(_DWORD *)(v8 + 9736) = v10;
  *(_DWORD *)(v8 + 8008) = *(_DWORD *)(v8 + 8056);
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 7592) = *(_DWORD *)(v8 + 7080);
  *(_DWORD *)(v8 + 9528) = *(_DWORD *)(v8 + 8188);
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8616) = *(_DWORD *)(v8 + 8904);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 7584) = *(_DWORD *)(v8 + 7088);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 7576) = *(_DWORD *)(v8 + 7072);
  *(_DWORD *)(v8 + 9408) = *(_DWORD *)(v8 + 8552);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 9096) = *(_DWORD *)(v8 + 8900);
  *(_DWORD *)(v8 + 9584) = *(_DWORD *)(v8 + 9184);
  *(_DWORD *)(v8 + 8984) = *(_DWORD *)(v8 + 8572);
  *(_DWORD *)(v8 + 8612) = *(_DWORD *)(v8 + 8932);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  return v9();
}

uint64_t sub_1002D0F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  int v13;

  *(_QWORD *)(v8 + 9416) = (v7 ^ 0x5Cu) - 2059597023;
  v9 = *(_DWORD *)(v8 + 3916);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * ((6395 * (((3 * (v7 ^ 0x5C)) ^ 0x9C9C13B1) + v9 < (v7 ^ 0x5Cu) - 1206)) ^ v7)) - 4);
  *(_DWORD *)(v8 + 9464) = 994009893;
  *(_DWORD *)(v8 + 5312) = 161;
  *(_DWORD *)(v8 + 4292) = 67;
  v11 = *(_QWORD *)(v8 + 2712);
  *(_QWORD *)(v8 + 9456) = *(_QWORD *)(v8 + 7048);
  *(_QWORD *)(v8 + 9608) = *(_QWORD *)(v8 + 3808);
  v12 = *(unsigned int *)(v8 + 7448);
  v13 = *(_DWORD *)(v8 + 8548);
  *(_DWORD *)(v8 + 6928) = v13;
  *(_DWORD *)(v8 + 3916) = v9 + 1;
  *(_DWORD *)(v8 + 5344) = *(_DWORD *)(v8 + 6072);
  *(_DWORD *)(v8 + 5340) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 4464) = *(_DWORD *)(v8 + 9104);
  *(_DWORD *)(v8 + 4468) = v13;
  *(_DWORD *)(v8 + 4460) = *(_DWORD *)(v8 + 8832);
  *(_DWORD *)(v8 + 5348) = *(_DWORD *)(v8 + 6084);
  *(_DWORD *)(v8 + 5336) = *(_DWORD *)(v8 + 6080);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 6976);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 7096);
  *(_DWORD *)(v8 + 9600) = *(_DWORD *)(v8 + 7020);
  *(_DWORD *)(v8 + 9488) = *(_DWORD *)(v8 + 7064);
  *(_DWORD *)(v8 + 9472) = *(_DWORD *)(v8 + 7136);
  return v10(a1, a2, a3, v12, v11, a6, a7, 32);
}

void sub_1002D1090(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  *(_DWORD *)(v2 + 7792) = 0;
  *(_DWORD *)(v2 + 9504) = 0;
  *(_DWORD *)(v2 + 7784) = 0;
  *(_DWORD *)(v2 + 7776) = 0;
  *(_DWORD *)(v2 + 9496) = 0;
  *(_DWORD *)(v2 + 9576) = 0;
  *(_DWORD *)(v2 + 9456) = 0;
  *(_DWORD *)(v2 + 9488) = 0;
  *(_DWORD *)(v2 + 9472) = 0;
  v3 = v1 + 2457;
  v4 = *(_DWORD *)(*(_QWORD *)(v2 + 8248) + 512) ^ 0x3D5A6972;
  *(_DWORD *)(v2 + 3912) = v4 & 0xC10227AF ^ 0x46D8F37A ^ ((v4 & 0xC10227A0)
                                                         - (v4 & 0x80022700)
                                                         + (v3 ^ v4 & 0x80022700 ^ 0x88622F21));
  *(_QWORD *)(v2 + 7664) = *(_QWORD *)(v2 + 6904);
  *(_QWORD *)(v2 + 7680) = *(_QWORD *)(v2 + 6872);
  *(_QWORD *)(v2 + 7656) = *(_QWORD *)(v2 + 6864);
  *(_QWORD *)(v2 + 7688) = *(_QWORD *)(v2 + 6888);
  *(_QWORD *)(v2 + 7696) = *(_QWORD *)(v2 + 6880);
  *(_QWORD *)(v2 + 7704) = *(_QWORD *)(v2 + 6896);
  *(_QWORD *)(v2 + 9568) = *(_QWORD *)(v2 + 8944);
  *(_QWORD *)(v2 + 8888) = *(_QWORD *)(v2 + 8576);
  *(_QWORD *)(v2 + 9200) = *(_QWORD *)(v2 + 8952);
  *(_QWORD *)(v2 + 8880) = *(_QWORD *)(v2 + 8936);
  *(_DWORD *)(v2 + 8032) = *(_DWORD *)(v2 + 8080);
  *(_DWORD *)(v2 + 7712) = *(_DWORD *)(v2 + 6928);
  *(_DWORD *)(v2 + 7936) = *(_DWORD *)(v2 + 7920);
  *(_DWORD *)(v2 + 9656) = *(_DWORD *)(v2 + 9272);
  *(_DWORD *)(v2 + 3916) = a1;
  v5 = *(_DWORD *)(v2 + 8212);
  *(_DWORD *)(v2 + 9128) = v5;
  *(_DWORD *)(v2 + 7976) = v5;
  *(_DWORD *)(v2 + 8312) = *(_DWORD *)(v2 + 7904);
  *(_DWORD *)(v2 + 6944) = *(_DWORD *)(v2 + 7040);
  *(_DWORD *)(v2 + 7648) = *(_DWORD *)(v2 + 6856);
  *(_DWORD *)(v2 + 7992) = *(_DWORD *)(v2 + 8064);
  *(_DWORD *)(v2 + 9384) = *(_DWORD *)(v2 + 8832);
  *(_DWORD *)(v2 + 8964) = *(_DWORD *)(v2 + 9152);
  *(_DWORD *)(v2 + 6936) = *(_DWORD *)(v2 + 6952);
  *(_DWORD *)(v2 + 9520) = *(_DWORD *)(v2 + 8196);
  *(_DWORD *)(v2 + 7552) = *(_DWORD *)(v2 + 6984);
  *(_DWORD *)(v2 + 9424) = *(_DWORD *)(v2 + 8608);
  *(_DWORD *)(v2 + 9480) = *(_DWORD *)(v2 + 8136);
  *(_DWORD *)(v2 + 6968) = *(_DWORD *)(v2 + 7000);
  *(_DWORD *)(v2 + 7952) = *(_DWORD *)(v2 + 7928);
  *(_DWORD *)(v2 + 7888) = *(_DWORD *)(v2 + 7912);
  *(_DWORD *)(v2 + 9440) = *(_DWORD *)(v2 + 9104);
  *(_DWORD *)(v2 + 8872) = *(_DWORD *)(v2 + 8912);
  *(_DWORD *)(v2 + 7640) = *(_DWORD *)(v2 + 6912);
  *(_DWORD *)(v2 + 6992) = *(_DWORD *)(v2 + 7008);
  *(_DWORD *)(v2 + 7672) = *(_DWORD *)(v2 + 6920);
  *(_DWORD *)(v2 + 8020) = *(_DWORD *)(v2 + 8040);
  *(_DWORD *)(v2 + 8024) = *(_DWORD *)(v2 + 8116);
  *(_DWORD *)(v2 + 9632) = *(_DWORD *)(v2 + 9072);
  *(_DWORD *)(v2 + 9160) = *(_DWORD *)(v2 + 8920);
  *(_DWORD *)(v2 + 8000) = *(_DWORD *)(v2 + 7152);
  *(_DWORD *)(v2 + 7984) = *(_DWORD *)(v2 + 8272);
  *(_DWORD *)(v2 + 8008) = *(_DWORD *)(v2 + 8056);
  *(_DWORD *)(v2 + 7592) = *(_DWORD *)(v2 + 7080);
  *(_DWORD *)(v2 + 9528) = *(_DWORD *)(v2 + 8188);
  *(_DWORD *)(v2 + 9624) = *(_DWORD *)(v2 + 9264);
  *(_DWORD *)(v2 + 8616) = *(_DWORD *)(v2 + 8904);
  *(_DWORD *)(v2 + 7584) = *(_DWORD *)(v2 + 7088);
  *(_DWORD *)(v2 + 7576) = *(_DWORD *)(v2 + 7072);
  *(_DWORD *)(v2 + 9408) = *(_DWORD *)(v2 + 8552);
  *(_DWORD *)(v2 + 9096) = *(_DWORD *)(v2 + 8900);
  *(_DWORD *)(v2 + 9584) = *(_DWORD *)(v2 + 9184);
  *(_DWORD *)(v2 + 8984) = *(_DWORD *)(v2 + 8572);
  *(_DWORD *)(v2 + 8236) = *(_DWORD *)(v2 + 9240);
  *(_DWORD *)(v2 + 8612) = *(_DWORD *)(v2 + 8932);
  *(_DWORD *)(v2 + 7632) = *(_DWORD *)(v2 + 9680);
  *(_DWORD *)(v2 + 9688) = 1;
  *(_DWORD *)(v2 + 9464) = 1;
  *(_DWORD *)(v2 + 9736) = 0;
  *(_DWORD *)(v2 + 9680) = 0;
  JUMPOUT(0x100326F74);
}

uint64_t sub_1002D1300@<X0>(uint64_t a1@<X2>, char a2@<W8>)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1680) - v2 + 31) = v4 >> a2;
  return (*(uint64_t (**)(uint64_t))(a1
                                            + 8
                                            * ((7058
                                              * ((v3 ^ 0x95 ^ (v2 + 1 == ((v3 - 1225443173) & 0x490AD7F5 ^ 0x1375))) & 1)) ^ v3)))(1677414473);
}

uint64_t sub_1002D137C@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * (((a2 != 32) * ((a1 - 1784831855) & 0x6A625F79 ^ ((a1 - 4305) | 0x40) ^ 0x1191)) ^ a1)))();
}

uint64_t sub_1002D13C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(a3 + 8 * (((((v4 - 4320) | 0x44) ^ 0x30A6) * (*(_DWORD *)(v5 + 3996) > v3)) ^ v4)))();
}

uint64_t sub_1002D1404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002D1300(a3, 0);
}

uint64_t sub_1002D1444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1768) - v4 + 31) = v6 >> (v3 & (((v5 ^ 0xAA) + 0x80) ^ 0x35));
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * (v5 ^ (4340 * (v4 == 31)))))(2525094887);
}

uint64_t sub_1002D14AC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((14446 * (v2 == ((a2 - 980590157) & 0x3A7287E2 ^ 0x4C0))) ^ a2))
                            - 4))();
}

uint64_t sub_1002D14F0(uint64_t a1, int a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((a2 + 8981) * (v3 < *(_DWORD *)(v4 + 3996))) ^ a2)) - 4))();
}

uint64_t sub_1002D1528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002D1444(a1, a2, a3);
}

uint64_t sub_1002D1550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 376) + ((v6 - 901322051) & 0x35B8FF0F ^ 0xA16) - v3) = v5 >> v4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * (v6 | (v3 == 31) | ((v3 == 31) << 11))) - 12))(3117095518);
}

uint64_t sub_1002D15DC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744) + 8 * (((v2 != 32) * (25 * (a2 ^ 0xA6E) - 2569)) ^ a2)))();
}

uint64_t sub_1002D1624@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((2063 * (v2 ^ 0xA0B)) ^ 0x89E) * (a2 < *(_DWORD *)(v3 + 3992))) ^ v2)))();
}

uint64_t sub_1002D1660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002D1550(a1, a2, a3);
}

uint64_t sub_1002D1694(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 504) - v3 + 31) = a1 >> v5;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((((v4 - 1341530713) & 0x4FF63AEF ^ 0x1AEFLL) + v3 != 32)
                                * (((v4 + 1449) | 0x351) - 2750)) ^ v4)))();
}

uint64_t sub_1002D170C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (v0 + 3469)) ^ v0)))();
}

uint64_t sub_1002D1730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(_QWORD))(a3
                                           + 8
                                           * (int)((((v4 + 360445742) & 0xEA83FFD7 ^ 0x2C43)
                                                  * (v3 < *(_DWORD *)(v5 + 3992))) ^ v4)))(0);
}

uint64_t sub_1002D1774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D1694(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002D17A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1096) - v3 + 31) = a1 >> v5;
  return (*(uint64_t (**)(void))(a3 + 8 * (((((v3 == 31) ^ (v4 - 105)) & 1) * (v4 ^ 0x1414)) ^ v4)))();
}

uint64_t sub_1002D1808()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((6002 * (v1 == 32)) ^ v0))
                            - (v0 + 3810)
                            + 4256))();
}

uint64_t sub_1002D1838@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v2 ^ (4650 * (*(_DWORD *)(v3 + 3992) > a2))))
                                         - (v2 ^ 0x1166u)
                                         + 4256))(0);
}

uint64_t sub_1002D1874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D17A4(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002D18B8(unint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 368) - v3 + 31) = a1 >> (v4 & ((v2 - 47) & 0xEE ^ 0x39));
  return (*(uint64_t (**)(void))(a2 + 8 * (int)((31 * (v3 + 1 == (v2 ^ 0x1526))) ^ v2)))();
}

uint64_t sub_1002D1938()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((2 * (v1 == 32)) | (16 * (v1 == 32))) ^ v0))
                            - (v0 ^ 0xBC0u)
                            + 5378))();
}

uint64_t sub_1002D196C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2 + 8 * (v4 ^ (15170 * (v3 < *(_DWORD *)(v5 + 3988)))))
                                         - (v2 ^ 0x1502)))(0);
}

uint64_t sub_1002D19A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D18B8(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002D19E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 496) + (v5 & 0x20) + (v5 & 0x20 ^ 0x20) + (v4 ^ 0xFFFFE511 ^ v6 ^ 0x18B9)) = v7 >> v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((483 * (((v6 + 3247) ^ 0xF07) + v4 == 32)) ^ v6)))();
}

uint64_t sub_1002D1A5C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8
                                        * ((26 * (((v2 == 32) ^ (((a2 + 105) ^ 0xA3) + 1)) & 1)) ^ a2))
                            - 8))();
}

uint64_t sub_1002D1A9C@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                             * (((((v2 - 6307) | 6) + 12595) * (*(_DWORD *)(v3 + 3988) > a2)) ^ v2))
                            - 8))();
}

uint64_t sub_1002D1AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002D19E4(a1, a2, a3, a4);
}

uint64_t sub_1002D1B0C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1088) - v3 + ((v5 - 4011) | 0xC42) - 3364) = a3 >> v4;
  return (*(uint64_t (**)(void))(a1 + 8 * (int)((118 * ((v5 ^ 0x10ADLL) + v3 == 32)) ^ v5)))();
}

uint64_t sub_1002D1B7C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 - 3381)) ^ v1)) - 8))();
}

uint64_t sub_1002D1BA4(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 + 4749) * (v1 < *(_DWORD *)(v3 + 3988))) ^ v2)) - 8))();
}

uint64_t sub_1002D1BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D1B0C(a1, a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002D1C18(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 360) + (v4 ^ 0x1506) - v5) = a2 >> v3;
  return (*(uint64_t (**)(_QWORD))(a3 + 8 * (int)((3660 * (((v4 - 4060) ^ 0x53CLL) + v5 == 32)) ^ v4)))(*(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002D1C80(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * ((118 * (v4 != 32)) ^ a4)) - 8))();
}

uint64_t sub_1002D1CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2
                                                              + 8
                                                              * ((5 * (v3 ^ 0x1416)) ^ (3261
                                                                                      * (*(_DWORD *)(v4 + 8272) > a3))))
                                                  - ((5 * (v3 ^ 0x1416) - 1002203184) & 0x3BBC77FD)
                                                  + 5393))(a1, 0);
}

uint64_t sub_1002D1D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D1C18(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002D1D40@<X0>(char a1@<W2>, unint64_t a2@<X4>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 488) + ((((a3 + 2126) | 0x304u) - 1979) ^ 0x754) - v3) = a2 >> a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (a3 ^ (3505 * (v3 == 31)))))(129986086);
}

uint64_t sub_1002D1DA4(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744) + 8 * (((a3 == 32) * (v3 ^ 0x265E)) ^ v3)))();
}

uint64_t sub_1002D1DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v5
                                                                              + 8
                                                                              * (((((v6 - 3846) | 0x3B4) + 10229)
                                                                                * (*(_DWORD *)(v7 + 8272) > v4)) ^ v6)))(a1, a2, 0, a4, 0);
}

uint64_t sub_1002D1E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return sub_1002D1D40(0, *(unsigned int *)(a4 - 0x62AA055D109F20F3), v4 ^ 0xCB2u);
}

uint64_t sub_1002D1E3C(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1080) - v3 + 31) = a2 >> v4;
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((13610
                                              * (v3 + 1 == ((76 * (v2 ^ 0x10C9u) + 4670) ^ (v2 + 418189061) & 0xE712F7E2))) ^ v2)))(2110166105);
}

uint64_t sub_1002D1EBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * ((3494 * (v4 == (a4 ^ 0x584))) ^ a4)) - 4))();
}

uint64_t sub_1002D1EF0@<X0>(uint64_t a1@<X0>, int a2@<W3>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 8 * (a2 ^ (7778 * (*(_DWORD *)(v4 + 8272) > a3))))
                                                  - (a2 + 2870)
                                                  + 4310))(a1, 0);
}

uint64_t sub_1002D1F28(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D1E3C(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002D1F6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 392) - v6 + 31) = a3 >> v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((408 * (a5 & ~(((v5 ^ 0x17E7) - 513) ^ (v6 == 31)))) ^ v5)) - 12))();
}

uint64_t sub_1002D1FD0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((7 * (v0 == (v1 ^ 0xDEA))) ^ v1)) - 12))();
}

uint64_t sub_1002D2004(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v3 ^ (9286 * (v2 < *(_DWORD *)(v4 + 9152)))))
                            - (((v3 + 2614) | 0x2Cu) ^ 0x1820)))();
}

uint64_t sub_1002D2044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1002D1F6C(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a4, a5);
}

uint64_t sub_1002D2074(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 520) - v5 + 31) = a1 >> v4;
  return (*(uint64_t (**)(void))(a3 + 8 * ((10927 * (v5 + 1 == (((v3 + 771) | 0xCB4u) ^ 0x1D9CLL))) ^ v3)))();
}

uint64_t sub_1002D20D8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((4932 * (v2 == 32)) ^ a2))
                            - ((97 * (a2 ^ 0x76Eu)) ^ 0xE01)))();
}

uint64_t sub_1002D2114(uint64_t a1, int a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3
                                                     + 8
                                                     * (((((a2 - 842) | 0xA04) ^ 0xE03) * (*(_DWORD *)(v4 + 9152) > v3)) ^ a2))
                                         - 4))(0);
}

uint64_t sub_1002D2150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D2074(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002D2180(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  *(_BYTE *)(*(_QWORD *)(v11 + 1112) - v9 + 31) = a1 >> v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8 * (((((v8 - 1106849655) & 0x41F937DE ^ 0x17C3) + v9 != 32) * a8) ^ v8))
                            - (v8 - 1313)
                            + 2609))();
}

uint64_t sub_1002D21F4(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8 * ((12905 * (v3 == 32)) ^ a3))
                            - ((a3 - 5144) | 0x1415u)
                            + 6067))();
}

uint64_t sub_1002D2234@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * ((125
                                                       * (((v2 < *(_DWORD *)(v3 + 9152)) ^ (a2 + 90)) & 1)) ^ a2))
                                         - ((a2 - 1338955732) & 0x4FCED7D6)
                                         + 6070))(0);
}

uint64_t sub_1002D2298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return sub_1002D2180(*(unsigned int *)(v8 - 0x62AA055D109F20F3), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1002D22D0(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v4 - 2059596225);
  *(_BYTE *)(*(_QWORD *)(v6 + 384) - v5 + 31) = v3 >> v2;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((6644 * (((v5 == 31) ^ (v4 + 3)) & 1)) ^ v4)) - 12);
  *(_DWORD *)(v6 + 9464) = 994009869;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1672);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002D23DC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((11885 * (v0 == ((v1 - 3571) ^ 0x1F8))) ^ v1))
                            - ((106 * (v1 ^ 0xFEDu)) ^ 0xFB0)))();
}

uint64_t sub_1002D2424@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((119 * (((a3 < a2) ^ (((v3 + 64) & 0xDB) + 1)) & 1)) ^ v3))
                            - 12))();
}

uint64_t sub_1002D2474(uint64_t a1, int a2)
{
  return sub_1002D22D0(a1, a2);
}

uint64_t sub_1002D24BC(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 - 943868061) & *(_DWORD *)(v6 + 240);
  *(_BYTE *)(*(_QWORD *)(v6 + 512) - v5 + 31) = v3 >> v2;
  *(_QWORD *)(v6 + 9416) = v7;
  v8 = *(uint64_t (**)(void))(a1 + 8 * ((9662 * (((v5 == 31) ^ v7) & 1)) ^ v4));
  *(_DWORD *)(v6 + 9464) = 994009591;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1688);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002D25BC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((1000 * (v0 != 32)) ^ v1))
                            - ((v1 - 892) | 0x414u)
                            + 7756))();
}

uint64_t sub_1002D2600@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 + 6322) * (a3 < a2)) ^ v3)) - 8))();
}

uint64_t sub_1002D2634(uint64_t a1, int a2)
{
  return sub_1002D24BC(a1, a2);
}

uint64_t sub_1002D2664(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 + 3931702) | 0x85011014;
  *(_BYTE *)(*(_QWORD *)(v6 + 1104) - v5 + 31) = v3 >> v2;
  *(_QWORD *)(v6 + 9416) = v7;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)(((v7 + 2059599488) * (v5 != 31)) ^ v4)) - (v4 ^ 0x1C5));
  *(_DWORD *)(v6 + 9464) = 994009737;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1776);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002D2780()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * (((v1 - 2485) | 0x149) ^ 0x112E)) ^ v1))
                            - 12))();
}

uint64_t sub_1002D27B8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((((v3 + 1577932228) & 0xA1F2A1CF ^ 0x1AC) * (a2 > a3)) ^ v3))
                            - 12))();
}

uint64_t sub_1002D27FC(uint64_t a1, int a2)
{
  return sub_1002D2664(a1, a2);
}

uint64_t sub_1002D282C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (int)(((((v0 + 610998225) & 0xDB94CDFE) - 3474) * (v1 > 0x17)) ^ v0))
                            - 4))();
}

uint64_t sub_1002D2864@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((v1 - 7925 + ((v1 - 505132841) & 0x1E1BBDFF)) * (a1 < 0x1Cu)) ^ v1))
                            - 8))();
}

uint64_t sub_1002D28B0()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((14 * (((v1 < 0x1A) ^ (v0 + 28)) & 1)) ^ v0))
                            - ((v0 - 3820) ^ 0x1181)))();
}

uint64_t sub_1002D28EC()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * (((*(_DWORD *)(v1 + 4040) == ((v0 ^ 0x86) + 11))
                                * (((v0 - 8593) | 0x433) ^ 0x466)) ^ v0)))();
}

void sub_1002D2954()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002D2970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1712) - v5 + 31) = v7 >> v4;
  return (*(uint64_t (**)(void))(a4 + 8 * (int)((774 * ((v6 ^ 0x2190) + v5 == 32)) ^ v6)))();
}

uint64_t sub_1002D29EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 != ((2 * v1) ^ 0xCC4) - 1154) * (13 * (v1 ^ 0x6A6) - 8448)) ^ v1))
                            - 4))();
}

uint64_t sub_1002D2A30@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v2 ^ 0x2533) - 2335) * (*(_DWORD *)(v3 + 3996) > a2)) ^ v2))
                            - 4))();
}

uint64_t sub_1002D2A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002D2970(a1, a2, a3, a4);
}

uint64_t sub_1002D2A9C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 720) + ((3 * (v3 ^ 0x352u)) ^ 0x291) - v2) = a2 >> ((-122 * (v3 ^ 0x8A) - 13) & v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (v3 | (v2 != 31) | (2 * (v2 != 31)))) - 4))(3853587918);
}

uint64_t sub_1002D2B14(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744) + 8 * ((6301 * (v3 == a3 - 622)) ^ a3)))();
}

uint64_t sub_1002D2B3C(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((((a3 + 87560560) & 0xFAC7EF89 ^ 0xE38) * (*(_DWORD *)(v4 + 3992) > v3)) ^ a3)))();
}

uint64_t sub_1002D2B80(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D2A9C(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002D2BB4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 752) + ((7 * (v4 ^ 0x21Cu)) ^ 0xB13) - a3) = a1 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v4 ^ (4296 * (a3 == 31)))) - (((v4 ^ 0x21Cu) + 2397) ^ 0xAF5)))();
}

uint64_t sub_1002D2C28()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((117 * (v0 == 32)) ^ v1))
                            - (v1 - 1924)
                            + 900))();
}

uint64_t sub_1002D2C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (11441 * (*(_DWORD *)(v5 + 3988) > v3))))
                                         - ((v4 - 2820) | 0x380u)
                                         + 900))(0);
}

uint64_t sub_1002D2C8C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002D2BB4(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a1, a2);
}

uint64_t sub_1002D2CC8@<X0>(uint64_t a1@<X1>, unint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 744) - v3 + 31) = a2 >> v4;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v5
                                                             + 8
                                                             * (int)(((((a3 + 1377504053) & 0xADE4EEF3) - 2337)
                                                                    * (v3 != 31)) ^ a3)))(*(_QWORD *)(v6 + 7872), a1, 1936603028);
}

uint64_t sub_1002D2D34()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((11950 * (v1 == 32)) ^ v0))
                            - (((v0 + 1367) | 0x80u) ^ 0x10CCLL)))();
}

uint64_t sub_1002D2D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * (v4 ^ (501
                                                                                       * (v3 < *(_DWORD *)(v6 + 8272)))))
                                                                    - (((v4 + 1295) | 0xC8u) ^ 0x10CCLL)))(a1, a2, a3, 0);
}

uint64_t sub_1002D2DA8(uint64_t a1, uint64_t a2)
{
  int v2;

  return sub_1002D2CC8(a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3), v2 + 1495);
}

uint64_t sub_1002D2DD8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 736) + ((811 * (v3 ^ 0x10C2u)) ^ 0x1FB1) - v4) = a3 >> v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v3 ^ 0x10C2) + 7934) ^ 0x2C81) * (v4 == 31)) ^ v3)))();
}

uint64_t sub_1002D2E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((98 * (v5 == a5 - 8078)) ^ a5)) - 12))();
}

uint64_t sub_1002D2E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                       + 8
                                                                       * (((a5 + 5965) * (v5 < *(_DWORD *)(v7 + 9152))) ^ a5))
                                                           - 12))(a1, a2, 0);
}

uint64_t sub_1002D2EA8(uint64_t a1, uint64_t a2)
{
  return sub_1002D2DD8(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002D2ED4(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v8 = (v5 - 704646457) & 0xAF3D1B77;
  *(_BYTE *)(*(_QWORD *)(v7 + 248) - v6 + 31) = v4 >> v3;
  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * (v5 ^ (1787 * (v6 != 31))))
                                       - (v8
                                        + ((v5 - 1276633707) & 0x4C17FF9A ^ 0xFFFFFFFF7AC2F0FDLL)));
  *(_DWORD *)(v7 + 9464) = 994009549;
  *(_QWORD *)(v7 + 9416) = v8;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  v10 = *(_QWORD *)(v7 + 1560);
  *(_QWORD *)(v7 + 9608) = v10;
  *(_DWORD *)(v7 + 7944) = a3;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v9(v10);
}

uint64_t sub_1002D2FF8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * (((v1 - 7560) | 0x58) + 15128)) ^ v1))
                            - 8))();
}

uint64_t sub_1002D3034@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                             * (((a2 <= a3) * (((v3 + 201653607) ^ 0xC04FEE7) - 64)) ^ (v3 + 7352)))
                            - 8))();
}

uint64_t sub_1002D307C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002D2ED4(a1, a2, a3);
}

uint64_t sub_1002D30BC@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a1 - 2071) ^ (31 * (v1 < 0xCu))))
                            - ((a1 - 10494) | 0x391u)
                            + 909))();
}

uint64_t sub_1002D30F8@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 ^ 0x8AC) - 2779) * (v1 < 0xA)) ^ a1)) - 12))();
}

uint64_t sub_1002D3120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * ((v7 + 1039) ^ (4614 * (v6 == 9))))
                                                                                              - (((v7 - 549498874) & 0xA5FDB4D7 | 8) ^ (v7 + 1039 + v8)));
  *(_DWORD *)(v9 + 7632) = 129;
  v11 = *(_QWORD *)(v9 + 2128);
  *(_QWORD *)(v9 + 7664) = v11;
  v12 = *(_QWORD *)(v9 + 2248);
  *(_QWORD *)(v9 + 7680) = v12;
  v13 = *(_QWORD *)(v9 + 2256);
  *(_QWORD *)(v9 + 7656) = v13;
  *(_QWORD *)(v9 + 7688) = v11;
  *(_QWORD *)(v9 + 7696) = v12;
  *(_QWORD *)(v9 + 7704) = v13;
  *(_QWORD *)(v9 + 9568) = *(_QWORD *)(v9 + 8944);
  *(_QWORD *)(v9 + 8888) = *(_QWORD *)(v9 + 8576);
  *(_QWORD *)(v9 + 9200) = *(_QWORD *)(v9 + 8952);
  *(_QWORD *)(v9 + 8880) = *(_QWORD *)(v9 + 8936);
  v14 = *(_QWORD *)(v9 + 6008);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9576) = v13;
  *(_QWORD *)(v9 + 9496) = v13;
  *(_DWORD *)(v9 + 8032) = *(_DWORD *)(v9 + 8080);
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 7768);
  v15 = *(_DWORD *)(v9 + 7380);
  *(_DWORD *)(v9 + 7712) = v15;
  LODWORD(v11) = *(_DWORD *)(v9 + 2440);
  *(_DWORD *)(v9 + 7936) = *(_DWORD *)(v9 + 7920);
  v16 = *(_DWORD *)(v9 + 7904);
  *(_DWORD *)(v9 + 9448) = *(_DWORD *)(v9 + 9116);
  *(_DWORD *)(v9 + 9656) = *(_DWORD *)(v9 + 9272);
  *(_DWORD *)(v9 + 8312) = v16;
  *(_DWORD *)(v9 + 6944) = *(_DWORD *)(v9 + 7040);
  *(_DWORD *)(v9 + 7648) = v11;
  *(_DWORD *)(v9 + 7992) = *(_DWORD *)(v9 + 8064);
  LODWORD(v12) = *(_DWORD *)(v9 + 2140);
  *(_DWORD *)(v9 + 9384) = v12;
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8964) = *(_DWORD *)(v9 + 9152);
  *(_DWORD *)(v9 + 6936) = *(_DWORD *)(v9 + 6952);
  *(_DWORD *)(v9 + 9520) = *(_DWORD *)(v9 + 8196);
  *(_DWORD *)(v9 + 7552) = *(_DWORD *)(v9 + 6984);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 9424) = *(_DWORD *)(v9 + 8608);
  *(_DWORD *)(v9 + 8760) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 8136);
  *(_DWORD *)(v9 + 6968) = *(_DWORD *)(v9 + 7000);
  *(_DWORD *)(v9 + 7952) = *(_DWORD *)(v9 + 7928);
  *(_DWORD *)(v9 + 7888) = *(_DWORD *)(v9 + 7912);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 9440) = v11;
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8872) = *(_DWORD *)(v9 + 8912);
  *(_DWORD *)(v9 + 7640) = v15;
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 6992) = *(_DWORD *)(v9 + 7008);
  *(_DWORD *)(v9 + 7672) = v12;
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8020) = *(_DWORD *)(v9 + 8040);
  *(_DWORD *)(v9 + 8024) = *(_DWORD *)(v9 + 8116);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 9632) = *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 9160) = *(_DWORD *)(v9 + 8920);
  *(_DWORD *)(v9 + 8000) = *(_DWORD *)(v9 + 7152);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 7984) = *(_DWORD *)(v9 + 8272);
  *(_DWORD *)(v9 + 9736) = v11;
  *(_DWORD *)(v9 + 8008) = *(_DWORD *)(v9 + 8056);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 7592) = *(_DWORD *)(v9 + 9104);
  *(_DWORD *)(v9 + 9528) = *(_DWORD *)(v9 + 8188);
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8616) = *(_DWORD *)(v9 + 8904);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 7584) = *(_DWORD *)(v9 + 8832);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 7576) = *(_DWORD *)(v9 + 8548);
  *(_DWORD *)(v9 + 9408) = *(_DWORD *)(v9 + 8552);
  *(_DWORD *)(v9 + 8704) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 9096) = *(_DWORD *)(v9 + 8900);
  *(_DWORD *)(v9 + 9584) = *(_DWORD *)(v9 + 9184);
  *(_DWORD *)(v9 + 8984) = *(_DWORD *)(v9 + 8572);
  *(_DWORD *)(v9 + 8612) = *(_DWORD *)(v9 + 8932);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  return v10(a1, a2, v14, a4, a5, a6, 80);
}

void sub_1002D33D0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 8764) = *(_DWORD *)(v0 + 8828);
  *(_DWORD *)(v0 + 8768) = *(_DWORD *)(v0 + 8860);
  *(_DWORD *)(v0 + 7936) = *(_DWORD *)(v0 + 7920);
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 8312) = *(_DWORD *)(v0 + 7904);
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 8748) = *(_DWORD *)(v0 + 8980);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 9520) = *(_DWORD *)(v0 + 8196);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 8736) = *(_DWORD *)(v0 + 8792);
  *(_DWORD *)(v0 + 8728) = *(_DWORD *)(v0 + 8816);
  *(_DWORD *)(v0 + 8744) = *(_DWORD *)(v0 + 8628);
  *(_DWORD *)(v0 + 8720) = *(_DWORD *)(v0 + 8968);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 2440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 8760) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 8752) = *(_DWORD *)(v0 + 8136);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 7952) = *(_DWORD *)(v0 + 7928);
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  *(_DWORD *)(v0 + 8712) = *(_DWORD *)(v0 + 8868);
  *(_DWORD *)(v0 + 8696) = *(_DWORD *)(v0 + 8840);
  *(_DWORD *)(v0 + 8688) = *(_DWORD *)(v0 + 8864);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 8680) = *(_DWORD *)(v0 + 8808);
  *(_DWORD *)(v0 + 2140) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 8672) = *(_DWORD *)(v0 + 8848);
  *(_DWORD *)(v0 + 9632) = *(_DWORD *)(v0 + 9072);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8664) = *(_DWORD *)(v0 + 8992);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 9432) = *(_DWORD *)(v0 + 9172);
  v1 = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 7648) = v1;
  *(_DWORD *)(v0 + 9440) = v1;
  *(_DWORD *)(v0 + 9736) = v1;
  *(_DWORD *)(v0 + 7592) = v1;
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 8656) = *(_DWORD *)(v0 + 8776);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 8648) = *(_DWORD *)(v0 + 9004);
  v2 = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 9384) = v2;
  *(_DWORD *)(v0 + 7672) = v2;
  *(_DWORD *)(v0 + 7584) = v2;
  *(_DWORD *)(v0 + 8640) = *(_DWORD *)(v0 + 8784);
  *(_DWORD *)(v0 + 7380) = *(_DWORD *)(v0 + 8548);
  v3 = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 7712) = v3;
  *(_DWORD *)(v0 + 7640) = v3;
  *(_DWORD *)(v0 + 7576) = v3;
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 8704) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9184);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 8632) = *(_DWORD *)(v0 + 8800);
  *(_DWORD *)(v0 + 7632) = 130;
  v4 = *(_QWORD *)(v0 + 5368);
  *(_QWORD *)(v0 + 7664) = v4;
  v5 = *(_QWORD *)(v0 + 5376);
  *(_QWORD *)(v0 + 7680) = v5;
  v6 = *(_QWORD *)(v0 + 5360);
  *(_QWORD *)(v0 + 7656) = v6;
  *(_QWORD *)(v0 + 7688) = v4;
  *(_QWORD *)(v0 + 7696) = v5;
  *(_QWORD *)(v0 + 7704) = v6;
  *(_QWORD *)(v0 + 9504) = *(_QWORD *)(v0 + 7880);
  *(_QWORD *)(v0 + 9576) = v6;
  *(_QWORD *)(v0 + 9496) = v6;
  JUMPOUT(0x1002C4524);
}

uint64_t sub_1002D35F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v6 & 0x7C9973F3 | (v7 > 0x67)))
                                                                                                - (((v6 & 0x7C9973F3 ^ 0x2489u)
                                                                                                  + 3916) ^ 0x16C3)))(a1, a2, a3, a4, a5, a6, 1);
}

uint64_t sub_1002D3634@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ ((4 * (a1 > 0x6Bu)) | (16 * (a1 > 0x6Bu)))))
                            - ((v1 - 5793) | 0xC09u)
                            + 3107))();
}

uint64_t sub_1002D366C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * (((((v0 - 1579) | 0x43) ^ 0x10D0) * (v1 < 0x6E)) ^ (v0 + 4380))))();
}

uint64_t sub_1002D36A8@<X0>(uint64_t a1@<X0>, char a2@<W5>, unsigned __int8 a3@<W8>)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 9744)
                                                                       + 8
                                                                       * ((8713
                                                                         * (a3 == (a2
                                                                                                  + ((v3 + 75) & 0xDF)
                                                                                                  - 112))) ^ (v3 - 9841))))(a1, 4774, 5371, 787);
}

void sub_1002D3728()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002D3744(uint64_t a1, int a2, unint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)(*(_QWORD *)(v9 + 1792) - v5 + 31) = v6 >> v8;
  return (*(uint64_t (**)(void))(a5 + 8 * ((((((v7 + a2) | 0xE2u) ^ a3) + v5 == 32) * a4) ^ v7)))();
}

uint64_t sub_1002D3788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v8 == 32) * a6) ^ v7)) - (((v7 ^ 0xB0Bu) * v9) ^ a7)))();
}

uint64_t sub_1002D37B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v9 ^ ((v8 < *(_DWORD *)(v10 + 3996)) * a8)))
                            - ((v9 - 2460) ^ a7)))();
}

uint64_t sub_1002D37E8(uint64_t a1, int a2, unint64_t a3, int a4, uint64_t a5)
{
  return sub_1002D3744(a1, a2, a3, a4, a5);
}

uint64_t sub_1002D3828@<X0>(int a1@<W5>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((a1 & ~((a2 - 5867) ^ 0xE29 ^ (v2 < 0x26))) << 6) & 0xFFFFFEFF | ((((a2 - 5867) ^ 0xE29 ^ ~(v2 < 0x26)) & 1) << 8)) ^ a2))
                            - 12))();
}

uint64_t sub_1002D3864(int a1, int a2, int a3, int a4, unsigned __int8 a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  v8 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (v5 ^ (4235 * (a5 != 158))))
                         - ((((v5 - 2146893640) | 0x5340017u) + 2059596947) ^ 0x4A2));
  *(_DWORD *)(v7 + 7632) = 159;
  v9 = *(_QWORD *)(v7 + 4440);
  *(_QWORD *)(v7 + 7664) = v9;
  v10 = *(_QWORD *)(v7 + 4432);
  *(_QWORD *)(v7 + 7680) = v10;
  v11 = *(_QWORD *)(v7 + 4424);
  *(_QWORD *)(v7 + 7656) = v11;
  *(_QWORD *)(v7 + 7688) = v9;
  *(_QWORD *)(v7 + 7696) = v10;
  *(_QWORD *)(v7 + 7704) = v11;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v11;
  *(_QWORD *)(v7 + 9496) = v11;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 7712) = v6;
  LODWORD(v10) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 7936) = a3;
  v12 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v12;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = v10;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  LODWORD(v11) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 9384) = v11;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = a2;
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 9424) = a1;
  *(_DWORD *)(v7 + 4464) = v10;
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 4468) = v6;
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = a4;
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 4460) = v11;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 9440) = v10;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = v6;
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = v11;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9736) = v10;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8();
}

void sub_1002D3B1C(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = (a1 - 2059596947);
  v3 = *(_QWORD *)(v1 + 3808) + 192 * (*(_DWORD *)(v1 + 3912) ^ 0x4B87D435 ^ v2);
  *(_DWORD *)(v1 + 5312) = 159;
  *(_DWORD *)(v1 + 4292) = 67;
  *(_QWORD *)(v1 + 9416) = v2;
  *(_QWORD *)(v1 + 9456) = *(_QWORD *)(v1 + 7048);
  *(_QWORD *)(v1 + 9608) = v3;
  LODWORD(v2) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 6928) = v2;
  *(_DWORD *)(v1 + 5344) = *(_DWORD *)(v1 + 6072);
  *(_DWORD *)(v1 + 9464) = 994009887;
  *(_DWORD *)(v1 + 5340) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 4464) = *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 4468) = v2;
  *(_DWORD *)(v1 + 4460) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 5348) = *(_DWORD *)(v1 + 6084);
  *(_DWORD *)(v1 + 5336) = *(_DWORD *)(v1 + 6080);
  *(_DWORD *)(v1 + 9664) = *(_DWORD *)(v1 + 6976);
  *(_DWORD *)(v1 + 9616) = *(_DWORD *)(v1 + 7096);
  *(_DWORD *)(v1 + 9600) = *(_DWORD *)(v1 + 7020);
  *(_DWORD *)(v1 + 9488) = *(_DWORD *)(v1 + 7064);
  JUMPOUT(0x1002B3378);
}

uint64_t sub_1002DAFB8@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (int)((v1 + 1621017151) & 0x9F613F5F ^ (215 * (a1 < 0x42u))))
                            - (((v1 + 1621017151) & 0x9F613F5F)
                             - 5179)
                            - ((((v1 + 1621017151) & 0x9F613F5F) - 1516636125) & 0x5A65FFBF)
                            + 12328))();
}

uint64_t sub_1002DB028(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (v2 - 4448) | 0x100u;
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8 * ((2552 * (v3 == ((v2 + 71) ^ 0x13))) ^ v2));
  *(_QWORD *)(v4 + 8888) = v5;
  v7 = *(unsigned int *)(v4 + 7448);
  *(_DWORD *)(v4 + 7944) = *(_DWORD *)(v4 + 8548);
  *(_DWORD *)(v4 + 5344) = *(_DWORD *)(v4 + 6072);
  *(_DWORD *)(v4 + 5340) = *(_DWORD *)(v4 + 7616);
  *(_DWORD *)(v4 + 5348) = *(_DWORD *)(v4 + 6084);
  *(_DWORD *)(v4 + 9472) = *(_DWORD *)(v4 + 8272);
  *(_DWORD *)(v4 + 5336) = *(_DWORD *)(v4 + 6080);
  *(_DWORD *)(v4 + 5312) = *(_DWORD *)(v4 + 9680);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(v6 - (v5 ^ 0x1A3)))(a1, a2, v7);
}

uint64_t sub_1002DB0D0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1840) - v3 + 31) = v5 >> v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8 * (((((v4 ^ 0x1359) + 5532) ^ 0x16FE) * (v3 == 31)) | v4))
                                          - 8))(41310295);
}

uint64_t sub_1002DB134()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((215 * (v0 == ((v1 + 4281) ^ 0x122B))) ^ v1))
                            - 12))();
}

uint64_t sub_1002DB168@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (7624 * (a2 < *(_DWORD *)(v4 + 3996))))) - v3 + 4607))();
}

uint64_t sub_1002DB19C(uint64_t a1, uint64_t a2)
{
  return sub_1002DB0D0(a1, a2);
}

uint64_t sub_1002DB1D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1160) - v6 + 31) = a1 >> v7;
  return (*(uint64_t (**)(void))(a5 + 8 * ((123 * (((v6 == 31) ^ (v5 - 74 + v5 + 98 + 1)) & 1)) ^ v5)))();
}

uint64_t sub_1002DB250(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * ((16284 * (v4 == ((a4 - 1944797231) & 0x73EB3FFE ^ 0x169E))) ^ a4))
                            - 562 * (a4 ^ 0x16E8u)
                            + 3360))();
}

uint64_t sub_1002DB2A8@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * (((16 * (v2 >= *(_DWORD *)(v3 + 3992))) | ((v2 >= *(_DWORD *)(v3 + 3992)) << 6)) ^ a2))
                                         - ((843 * (a2 ^ 0x16BA)) ^ 0xD20)))(0);
}

uint64_t sub_1002DB2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1002DB1D0(*(unsigned int *)(v5 - 0x62AA055D109F20F3), a2, a3, a4, a5);
}

uint64_t sub_1002DB33C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1152) - v3 + 31) = a3 >> v6;
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8 * (((v3 + 1 == (v4 ^ 0xE20u) - 748) * ((v4 + 2096) ^ 0xC2D)) ^ v4)))(2434539260);
}

uint64_t sub_1002DB39C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((1111 * (v1 == 32)) ^ v0))
                            - ((v0 + 2592) ^ 0xD24)))();
}

uint64_t sub_1002DB3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3
                                                                       + 8
                                                                       * ((((v4 ^ 0xE20) - 1681)
                                                                         * (*(_DWORD *)(v5 + 3988) > a3)) ^ v4))
                                                           - 8))(a1, a2, 0);
}

uint64_t sub_1002DB400(uint64_t a1, uint64_t a2)
{
  return sub_1002DB33C(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DB440@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1144) - v3 + 31) = a1 >> (v4 & (a3 ^ 0xA2));
  return (*(uint64_t (**)(void))(a2 + 8 * ((14130 * (((454 * (a3 ^ 0x1458u)) ^ 0x8DFLL) + v3 == 32)) ^ a3)))();
}

uint64_t sub_1002DB4B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * ((207 * ((((a4 ^ 0xCF) - 54) ^ (v4 == 32)) & 1)) ^ a4))
                            - 12))();
}

uint64_t sub_1002DB4EC(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2
                                                     + 8
                                                     * (((((v3 - 1655052436) & 0x62A6175D) + 8978)
                                                       * (v2 < *(_DWORD *)(v4 + 8272))) ^ v3))
                                         - 12))(0);
}

uint64_t sub_1002DB534(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return sub_1002DB440(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, v2 ^ 0x1CEu);
}

uint64_t sub_1002DB568(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1176) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((((v2 ^ 0x1D57) + 1947) ^ 0x8DC) * (v3 != 31)) ^ v2)) - 4))();
}

uint64_t sub_1002DB5C8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8 * (((v3 == 32) * ((a3 - 634396643) & 0x25D01FBF ^ 0x28DC)) ^ a3))
                            - 4))();
}

uint64_t sub_1002DB610(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                             * ((101 * (v4 & ~((v1 + 2905) ^ (*(_DWORD *)(v3 + 9152) > v2)))) ^ v1))
                            - (((v1 - 121) | 0x9C) ^ 0x8DALL)))();
}

uint64_t sub_1002DB660(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DB568(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DB694(uint64_t a1, int a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v5 - 1916978054) & 0xF77FD1F7;
  *(_BYTE *)(*(_QWORD *)(v6 + 1168) - v2 + 31) = v4 >> v3;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((104 * (v2 - 2235371511 + v7 == 63)) ^ v5))
                         - ((v5 - 418) | 0x140u)
                         + 315);
  *(_DWORD *)(v6 + 9464) = 994009725;
  *(_QWORD *)(v6 + 9416) = v7;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1848);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002DB7A4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((8613 * (v0 == 32)) ^ v1))
                            - ((v1 + 98) ^ (v1 - 42) ^ 0xB8)))();
}

uint64_t sub_1002DB7E0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((90 * (((a3 < a2) ^ (v3 - 116)) & 1)) ^ v3))
                            - ((v3 + 42) ^ 0x147)))();
}

uint64_t sub_1002DB820(uint64_t a1, int a2)
{
  return sub_1002DB694(a1, a2);
}

uint64_t sub_1002DB860()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * (((v1 >= (v0 + 75)) * (((v0 - 4850) | 0x16) ^ 0x1D5)) ^ v0))
                            - 12))();
}

uint64_t sub_1002DB89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 9744)
                              + 8
                              * ((((((v6 - 167) | 0x6A0) - 2059597785) ^ (a6 + 842))
                                * (*(_DWORD *)(v7 + 4040) == 38)) ^ v6)))();
}

void sub_1002DB8FC()
{
  JUMPOUT(0x1002E9680);
}

uint64_t sub_1002DB914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1816) - v2 + (v4 ^ 0x40Du) - 1481) = v5 >> (v3 & (((v4 + 15) & 0xFB) + 15));
  return (*(uint64_t (**)(void))(a2 + 8 * (v4 ^ ((2 * (v2 != 31)) | (16 * (v2 != 31))))))();
}

uint64_t sub_1002DB990()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((7717 * (v0 == ((v1 + 1669052935) & 0x9C843FED) - 453)) ^ v1))
                            - 4))();
}

uint64_t sub_1002DB9D0(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8 * (((((v3 - 1872) | 0x145) ^ 0xD2B) * (*(_DWORD *)(v4 + 3996) > v2)) ^ v3))
                            - 4))();
}

uint64_t sub_1002DBA0C(uint64_t a1, uint64_t a2)
{
  return sub_1002DB914(a1, a2);
}

uint64_t sub_1002DBA3C(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 640) - v3 + 31) = a2 >> v4;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((10167 * (v3 + 1 == (((v2 ^ 0x40Du) + 682) ^ 0x8B2))) ^ v2)))(1279392681);
}

uint64_t sub_1002DBA9C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744) + 8 * (((v3 == 32) * ((5 * (a3 ^ 0x589)) ^ 0x26A1)) ^ a3)))();
}

uint64_t sub_1002DBACC@<X0>(uint64_t a1@<X0>, int a2@<W2>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v3
                                                    + 8
                                                    * (((((a3 < *(_DWORD *)(v4 + 3992)) ^ a2 ^ 0x55) & 1)
                                                      * (((a2 ^ 0x55) - 991708607) & 0x3B1C45E9 ^ 0x5BD)) ^ a2 ^ 0x55)))(a1, 0);
}

uint64_t sub_1002DBB28(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DBA3C(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DBB5C(unint64_t a1)
{
  uint64_t v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 672) - v1 + 31) = a1 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 - 5124) * (v1 != 31)) ^ v2)) - 12))();
}

uint64_t sub_1002DBBC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (int)(((v4 == 32) * ((a4 + 2094232429) & 0x832C9FBF ^ 0x74F)) ^ a4))
                            - ((a4 - 45) | 0x18u)
                            + 2169))();
}

uint64_t sub_1002DBC10@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 8 * ((239 * (v1 >= *(_DWORD *)(v3 + 3988))) ^ a1)) - 4))(0);
}

uint64_t sub_1002DBC54()
{
  uint64_t v0;

  return sub_1002DBB5C(*(unsigned int *)(v0 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DBC8C(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 664) - v3 + 31) = a2 >> (v4 & ((v2 - 121) ^ 0xB9));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v2 ^ (15305 * (v3 == 31))))
                                         - (v2 - 5774)
                                         + 1317))(*(_QWORD *)(v5 + 7872));
}

uint64_t sub_1002DBCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * ((4545 * (v5 == (((a5 - 1070) | 0x422) ^ 0xD1A))) ^ a5))
                            - 12))();
}

uint64_t sub_1002DBD34@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v4 & ~((v2 + 12) ^ (a2 < *(_DWORD *)(v3 + 8272)))) * ((v2 + 3717) ^ 0x1BC3)) ^ v2))
                            - 12))();
}

uint64_t sub_1002DBD74(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DBC8C(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DBDAC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 656) - v4 + 31) = (unint64_t)a3 >> (((v3 ^ 0xEC) - 50) & v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v3 ^ (8619 * (v4 != 31)))) - 12))();
}

uint64_t sub_1002DBE18()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((4766 * (v1 == (v0 ^ 0x511))) ^ v0)) - 4))();
}

uint64_t sub_1002DBE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v4 ^ (11522 * (*(_DWORD *)(v5 + 9152) > v3)))) - v2 + 473))();
}

uint64_t sub_1002DBE7C(uint64_t a1, uint64_t a2)
{
  return sub_1002DBDAC(a1 + 4, a2, *(_DWORD *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DBEB0(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  v8 = (v5 - 2059596225);
  *(_QWORD *)(v7 + 9416) = v8;
  v9 = (((v6 ^ 0xAE5F2BA6) - 1369494618 - ((2 * (v6 ^ 0xAE5F2BA6) + 2) & 0x5CBE574C) + 1) ^ (v5 + 3261) ^ 0xAE5F2535) < (v8 ^ 0x853D1037);
  *(_BYTE *)(*(_QWORD *)(v7 + 688) + (v6 ^ 0x51A0D459u) + 32) = v4 >> v3;
  v10 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * ((v9 | (4 * v9)) ^ v5)) - 12);
  *(_DWORD *)(v7 + 9464) = 994009561;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  v11 = *(_QWORD *)(v7 + 1296);
  *(_QWORD *)(v7 + 9608) = v11;
  *(_DWORD *)(v7 + 7944) = a3;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v10(v11);
}

uint64_t sub_1002DBFF0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((60 * (v0 == 32)) ^ v1))
                            - (v1 - 3261)
                            + 468))();
}

uint64_t sub_1002DC020@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((((v3 - 2027652794) & 0x78DB79FC) + 11787) * (a3 < a2)) ^ v3))
                            - 4))();
}

uint64_t sub_1002DC064(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002DBEB0(a1, a2, a3);
}

uint64_t sub_1002DC0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;

  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (((v6 ^ 0x17E5) * (*(_DWORD *)(v7 + 9680) != 130)) ^ v6))
                                                                                             - (v6 ^ 0xAE1u)
                                                                                             + 468);
  *(_DWORD *)(v7 + 7632) = 131;
  v9 = *(_QWORD *)(v7 + 2128);
  *(_QWORD *)(v7 + 7664) = v9;
  v10 = *(_QWORD *)(v7 + 2248);
  *(_QWORD *)(v7 + 7680) = v10;
  v11 = *(_QWORD *)(v7 + 2256);
  *(_QWORD *)(v7 + 7656) = v11;
  *(_QWORD *)(v7 + 7688) = v9;
  *(_QWORD *)(v7 + 7696) = v10;
  *(_QWORD *)(v7 + 7704) = v11;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v12 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v11;
  *(_QWORD *)(v7 + 9496) = v11;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  v13 = *(_DWORD *)(v7 + 7380);
  *(_DWORD *)(v7 + 7712) = v13;
  LODWORD(v9) = *(_DWORD *)(v7 + 2440);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  v14 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v14;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = v9;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  LODWORD(v10) = *(_DWORD *)(v7 + 2140);
  *(_DWORD *)(v7 + 9384) = v10;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 9440) = v9;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = v13;
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = v10;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9736) = v9;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8(a1, a2, v12, a4, a5, a6, 80);
}

void sub_1002DC350(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 3800) + (a1 - 280) * (*(_DWORD *)(v1 + 3912) ^ 0xCEBAC422);
  *(_DWORD *)(v1 + 5312) = 131;
  *(_DWORD *)(v1 + 4292) = 67;
  *(_QWORD *)(v1 + 9416) = (a1 - 2059596225);
  *(_QWORD *)(v1 + 9456) = *(_QWORD *)(v1 + 7048);
  *(_QWORD *)(v1 + 9608) = v2;
  JUMPOUT(0x1002DC3C8);
}

uint64_t sub_1002DC438()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((((v0 - 332075568) & 0x13CB1FAE ^ ((v0 ^ 0x1FFB) + 1532)) * (v1 < 0x6A)) ^ v0)))();
}

uint64_t sub_1002DC47C@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (((v1 + 35) & 0xDC ^ 0x86) + ((v1 + 49) | *(_BYTE *)(v2 + 48))) == a1;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((v3 | (8 * v3)) ^ v1)))();
}

void sub_1002DC4EC()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002DC508(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1552) + (v4 ^ 0x13CBLL) - v5) = a2 >> v3;
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((1964 * (v5 + 1 == (((v4 - 900) | 0x984) ^ 0x19F4))) ^ v4)))();
}

uint64_t sub_1002DC578(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((15836 * (v1 == 32)) ^ a1))
                            - ((a1 - 1536) ^ 0x13DCLL)))();
}

uint64_t sub_1002DC5A8(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((a1 - 5901) * (v3 < *(_DWORD *)(v4 + 3996))) ^ a1)) - 8))();
}

uint64_t sub_1002DC5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002DC508(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002DC60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 480) - v2 + 31) = v5 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((123 * ((((v4 - 3573) | 0x800u) ^ 0xA46) + v2 != 32)) ^ v4))
                            - 8))();
}

uint64_t sub_1002DC678()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * (((v1 - 1176) | 0x102C) - 4150)) | v1))
                            - 8))();
}

uint64_t sub_1002DC6AC@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (9929 * (a2 < *(_DWORD *)(v3 + 3992)))))
                            - (((v2 - 1156) | 0x1018u) ^ 0x1034)))();
}

uint64_t sub_1002DC6EC(uint64_t a1, uint64_t a2)
{
  return sub_1002DC60C(a1, a2);
}

uint64_t sub_1002DC720(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1232) - v2 + 31) = a2 >> v4;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v3 ^ (127 * (v2 == 31))))
                                         - ((3 * ((v3 + 1604408442) & 0xA05EABFF ^ 0x8DA)) ^ 0xA43)))(*(_QWORD *)(v5 + 4000));
}

uint64_t sub_1002DC79C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744) + 8 * (((v4 == 32) * (a4 + 4557)) ^ a4)))();
}

uint64_t sub_1002DC7C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(a1 + 8 * (((a4 ^ 0x2002) * (v4 < *(_DWORD *)(v5 + 3988))) ^ a4)))();
}

uint64_t sub_1002DC7F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DC720(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DC82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1224) - a4 + 31) = a3 >> v5;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2
                                                              + 8
                                                              * ((4960 * (a4 + ((v4 - 2459) | 0xA10u) == 3030)) ^ v4))
                                                  - ((v4 - 2722) | 0x112u)
                                                  + 430))(a1, *(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002DC89C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 + 3012)) ^ v1)) - 12))();
}

uint64_t sub_1002DC8C4(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8
                                             * (((262 * (v3 ^ 0xBBC) - 2813) * (v2 < *(_DWORD *)(v4 + 8272))) ^ v3))
                            - 12))();
}

uint64_t sub_1002DC900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002DC82C(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002DC930(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1216) - v5 + 31) = a4 >> v6;
  return (*(uint64_t (**)(void))(a1 + 8 * (((((v4 + 3340) ^ 0x1A69) - 406) * (v5 == 31)) ^ v4)))();
}

uint64_t sub_1002DC988()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((101 * (v0 == ((v1 + 3357) ^ 0xEEF))) ^ v1)))();
}

uint64_t sub_1002DC9B4(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1
                              + 8 * (((((v2 - 2028868035) & 0x78EE1EDF) - 94) * (*(_DWORD *)(v3 + 9152) > v1)) ^ v2)))();
}

uint64_t sub_1002DC9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DC930(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DCA38(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 - 2059596029);
  *(_QWORD *)(v6 + 9416) = v7;
  *(_BYTE *)(*(_QWORD *)(v6 + 1240) - v5 + 31) = v3 >> v2;
  v8 = *(uint64_t (**)(void))(a1 + 8 * (int)(((v7 ^ 0x853D1FD0) * (v5 != 31)) ^ v4));
  *(_DWORD *)(v6 + 9464) = 994009845;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1680);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002DCB30()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((14608 * (v0 == v1 - 7099)) ^ v1)) - 12))();
}

uint64_t sub_1002DCB68@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (7 * (a2 > a3)))) - (((v3 - 6859) | 4u) ^ 0x118)))();
}

uint64_t sub_1002DCBA4(uint64_t a1, int a2)
{
  return sub_1002DCA38(a1, a2);
}

uint64_t sub_1002DCBE8@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * ((50
                                          * (a1 < ((v1 ^ 0xDE) - 73 + 29 * (v1 ^ 0xDE) + 3))) ^ v1))
                            - 4))();
}

uint64_t sub_1002DCC2C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                      + 8 * (((v1 ^ 0x24A0) * (a1 == 49)) ^ v1))
                                          - ((2 * v1) ^ 0x48E4)))(2548620871);
}

void sub_1002DCC94()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002DCCAC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1672) - v3 + 31) = a1 >> v5;
  return (*(uint64_t (**)(void))(a3 + 8 * (((((v4 - 9098) | 0x1098) ^ 0x10CA) * (v3 != 31)) ^ v4)))();
}

uint64_t sub_1002DCD14(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744)
                              + 8 * ((3742 * (v2 == ((a2 - 4118) ^ 0x107B) + ((a2 - 4118) | 0x2308) - 13419)) ^ a2)))();
}

uint64_t sub_1002DCD58@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(_QWORD))(a1
                                           + 8
                                           * (((v4 & ~((a2 + 4881) ^ (*(_DWORD *)(v3 + 3996) > v2)))
                                             * ((a2 + 31) ^ 0x10BD)) ^ a2)))(0);
}

uint64_t sub_1002DCD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002DCCAC(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002DCDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 416) - v3 + 31) = v6 >> v4;
  return (*(uint64_t (**)(void))(a3 + 8 * ((3063 * (v3 + 1 == (v5 ^ 0x29D5u) - 108 - 2447)) ^ v5)))();
}

uint64_t sub_1002DCE34()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((6513 * (v0 == ((v1 + 1451848271) & 0xA976A7CF) - 9134)) ^ v1))
                            - 4))();
}

uint64_t sub_1002DCE78@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v2 + 6687) ^ 0x3DEB) * (*(_DWORD *)(v3 + 3992) > a2)) ^ v2))
                            - 4))();
}

uint64_t sub_1002DCEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DCDCC(a1, a2, a3);
}

uint64_t sub_1002DCEE8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 408) - v2 + 31) = a2 >> v4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((635 * (v2 + 1 == (v3 ^ 0x3668u) - 7729)) ^ v3)))();
}

uint64_t sub_1002DCF54(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * ((a1 ^ 0x3668) - 10258)) ^ a1))
                            - 8))();
}

uint64_t sub_1002DCF84(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 + 2536) ^ 0x16C6) * (v1 < *(_DWORD *)(v3 + 3988))) ^ a1))
                            - 8))();
}

uint64_t sub_1002DCFB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DCEE8(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DCFE4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 400) + (31 - v5)) = a3 >> v4;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(a1
                                                              + 8
                                                              * ((42 * (v5 + 1 == (((v3 - 3702) | 0x205) ^ 0x37F))) ^ v3))
                                                  - ((v3 + 5008) ^ 0x2364)))(*(_QWORD *)(v6 + 7872), 4158755404);
}

uint64_t sub_1002DD05C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744) + 8 * ((30 * (v4 != a4 - 9024)) ^ a4)))();
}

uint64_t sub_1002DD08C@<X0>(uint64_t a1@<X0>, int a2@<W3>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((a3 >= *(_DWORD *)(v3 + 8272))
                                * (((((a2 - 9008) | 0x2345) - 957687671) & 0x3915277F) - 9075)) ^ ((a2 - 9008) | 0x2345))))();
}

uint64_t sub_1002DD0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002DCFE4(a1, a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DD134(uint64_t a1, unint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1256) - v4 + (v3 - 2553) - 832) = a2 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v3 ^ (219 * (v4 == 31)))) - (v3 + 1446) + 4850))();
}

uint64_t sub_1002DD19C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((5265 * (v0 == (v1 ^ 0xE07) - 3384)) ^ v1))
                            - 8))();
}

uint64_t sub_1002DD1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (7423 * (v3 < *(_DWORD *)(v5 + 9152)))))
                                                  - (v4 + 2553)
                                                  + 3408))(a1, 0);
}

uint64_t sub_1002DD200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DD134(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002DD230(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_BYTE *)(*(_QWORD *)(v6 + 232) - v5 + 31) = v3 >> v2;
  *(_QWORD *)(v6 + 9416) = (v4 - 1610753441) & 0xE53F33DF;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((3163 * (((v5 == 31) ^ (v4 + 95) & 0xDF) & 1)) ^ v4))
                         - 12);
  *(_DWORD *)(v6 + 9464) = 994009615;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1792);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002DD334()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((12711 * (v0 == (v1 ^ 0x1326) - 440)) ^ v1))
                            - (v1 - 5)
                            + 4849))();
}

uint64_t sub_1002DD374@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((a2 > a3) ^ ((v3 ^ 0xFD) - 1)) & 1)
                                          * (118 * (v3 ^ 0x12FD) - 465)) ^ v3))
                            - 8))();
}

uint64_t sub_1002DD3B8(uint64_t a1, int a2)
{
  return sub_1002DD230(a1, a2);
}

uint64_t sub_1002DD3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((a6 - 4827) ^ (8711 * (*(_DWORD *)(v6 + 9680) != 146))))
                                                                                             - ((a6 - 4827) ^ 0xB3DLL));
  *(_DWORD *)(v6 + 7632) = 147;
  v8 = *(_QWORD *)(v6 + 2128);
  *(_QWORD *)(v6 + 7664) = v8;
  v9 = *(_QWORD *)(v6 + 2248);
  *(_QWORD *)(v6 + 7680) = v9;
  v10 = *(_QWORD *)(v6 + 2256);
  *(_QWORD *)(v6 + 7656) = v10;
  *(_QWORD *)(v6 + 7688) = v8;
  *(_QWORD *)(v6 + 7696) = v9;
  *(_QWORD *)(v6 + 7704) = v10;
  *(_QWORD *)(v6 + 9568) = *(_QWORD *)(v6 + 8944);
  *(_QWORD *)(v6 + 8888) = *(_QWORD *)(v6 + 8576);
  *(_QWORD *)(v6 + 9200) = *(_QWORD *)(v6 + 8952);
  *(_QWORD *)(v6 + 8880) = *(_QWORD *)(v6 + 8936);
  v11 = *(_QWORD *)(v6 + 6008);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = v10;
  *(_QWORD *)(v6 + 9496) = v10;
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  v12 = *(_DWORD *)(v6 + 7380);
  *(_DWORD *)(v6 + 7712) = v12;
  LODWORD(v8) = *(_DWORD *)(v6 + 2440);
  *(_DWORD *)(v6 + 7936) = *(_DWORD *)(v6 + 7920);
  v13 = *(_DWORD *)(v6 + 7904);
  *(_DWORD *)(v6 + 9448) = *(_DWORD *)(v6 + 9116);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 8312) = v13;
  *(_DWORD *)(v6 + 6944) = *(_DWORD *)(v6 + 7040);
  *(_DWORD *)(v6 + 7648) = v8;
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  LODWORD(v9) = *(_DWORD *)(v6 + 2140);
  *(_DWORD *)(v6 + 9384) = v9;
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8964) = *(_DWORD *)(v6 + 9152);
  *(_DWORD *)(v6 + 6936) = *(_DWORD *)(v6 + 6952);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7552) = *(_DWORD *)(v6 + 6984);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 9424) = *(_DWORD *)(v6 + 8608);
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 6968) = *(_DWORD *)(v6 + 7000);
  *(_DWORD *)(v6 + 7952) = *(_DWORD *)(v6 + 7928);
  *(_DWORD *)(v6 + 7888) = *(_DWORD *)(v6 + 7912);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = v8;
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8872) = *(_DWORD *)(v6 + 8912);
  *(_DWORD *)(v6 + 7640) = v12;
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 6992) = *(_DWORD *)(v6 + 7008);
  *(_DWORD *)(v6 + 7672) = v9;
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9160) = *(_DWORD *)(v6 + 8920);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7152);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  *(_DWORD *)(v6 + 9736) = v8;
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 7592) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 9528) = *(_DWORD *)(v6 + 8188);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8616) = *(_DWORD *)(v6 + 8904);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 7584) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 7576) = *(_DWORD *)(v6 + 8548);
  *(_DWORD *)(v6 + 9408) = *(_DWORD *)(v6 + 8552);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 9096) = *(_DWORD *)(v6 + 8900);
  *(_DWORD *)(v6 + 9584) = *(_DWORD *)(v6 + 9184);
  *(_DWORD *)(v6 + 8984) = *(_DWORD *)(v6 + 8572);
  *(_DWORD *)(v6 + 8612) = *(_DWORD *)(v6 + 8932);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  return v7(a1, a2, v11, a3, a4, a5, 80);
}

void sub_1002DD6A0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 8764) = *(_DWORD *)(v0 + 8828);
  *(_DWORD *)(v0 + 8768) = *(_DWORD *)(v0 + 8860);
  *(_DWORD *)(v0 + 7936) = *(_DWORD *)(v0 + 7920);
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 8312) = *(_DWORD *)(v0 + 7904);
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 8748) = *(_DWORD *)(v0 + 8980);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 9520) = *(_DWORD *)(v0 + 8196);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 8736) = *(_DWORD *)(v0 + 8792);
  *(_DWORD *)(v0 + 8728) = *(_DWORD *)(v0 + 8816);
  *(_DWORD *)(v0 + 8744) = *(_DWORD *)(v0 + 8628);
  *(_DWORD *)(v0 + 8720) = *(_DWORD *)(v0 + 8968);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 2440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 8760) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 8752) = *(_DWORD *)(v0 + 8136);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 7952) = *(_DWORD *)(v0 + 7928);
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  *(_DWORD *)(v0 + 8712) = *(_DWORD *)(v0 + 8868);
  *(_DWORD *)(v0 + 8696) = *(_DWORD *)(v0 + 8840);
  *(_DWORD *)(v0 + 8688) = *(_DWORD *)(v0 + 8864);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 8680) = *(_DWORD *)(v0 + 8808);
  *(_DWORD *)(v0 + 2140) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 8672) = *(_DWORD *)(v0 + 8848);
  *(_DWORD *)(v0 + 9632) = *(_DWORD *)(v0 + 9072);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8664) = *(_DWORD *)(v0 + 8992);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 9432) = *(_DWORD *)(v0 + 9172);
  v1 = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 7648) = v1;
  *(_DWORD *)(v0 + 9440) = v1;
  *(_DWORD *)(v0 + 9736) = v1;
  *(_DWORD *)(v0 + 7592) = v1;
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 8656) = *(_DWORD *)(v0 + 8776);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 8648) = *(_DWORD *)(v0 + 9004);
  v2 = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 9384) = v2;
  *(_DWORD *)(v0 + 7672) = v2;
  *(_DWORD *)(v0 + 7584) = v2;
  *(_DWORD *)(v0 + 8640) = *(_DWORD *)(v0 + 8784);
  *(_DWORD *)(v0 + 7380) = *(_DWORD *)(v0 + 8548);
  v3 = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 7712) = v3;
  *(_DWORD *)(v0 + 7640) = v3;
  *(_DWORD *)(v0 + 7576) = v3;
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 8704) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9184);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 8632) = *(_DWORD *)(v0 + 8800);
  *(_DWORD *)(v0 + 7632) = 148;
  v4 = *(_QWORD *)(v0 + 5368);
  *(_QWORD *)(v0 + 7664) = v4;
  v5 = *(_QWORD *)(v0 + 5376);
  *(_QWORD *)(v0 + 7680) = v5;
  v6 = *(_QWORD *)(v0 + 5360);
  *(_QWORD *)(v0 + 7656) = v6;
  *(_QWORD *)(v0 + 7688) = v4;
  *(_QWORD *)(v0 + 7696) = v5;
  *(_QWORD *)(v0 + 7704) = v6;
  *(_QWORD *)(v0 + 9504) = *(_QWORD *)(v0 + 7880);
  *(_QWORD *)(v0 + 9576) = v6;
  *(_QWORD *)(v0 + 9496) = v6;
  JUMPOUT(0x1002C4524);
}

uint64_t sub_1002DD8C8@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((((v1 ^ 0x319C) - 9023) ^ 0x797) * (a1 < 0x56u)) ^ v1)))();
}

uint64_t sub_1002DD900(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 9744)
                                                    + 8 * (int)((((v1 ^ 0x853D161C) + 2059605916) * (v2 == 85)) ^ v1)))(a1, (v1 ^ 0x853D161C) + 2059600739);
}

void sub_1002DD95C()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002DD978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1720) - v5 + 31) = v6 >> (v3 & (((v4 + 51) & 0xF3) - 51));
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((23 * ((v4 ^ 0x60ALL) + v5 == 32)) ^ v4)))();
}

uint64_t sub_1002DD9F4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * (((v2 == 32) * ((a2 - 3439) ^ 0xE54)) ^ a2))
                            - 12))();
}

uint64_t sub_1002DDA24(uint64_t a1, int a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * (((221 * (a2 ^ 0x137D) + 2446) * (*(_DWORD *)(v4 + 3996) > v3)) ^ a2))
                            - 12))();
}

uint64_t sub_1002DDA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DD978(a1, a2, a3);
}

uint64_t sub_1002DDA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 792) - v3 + 31) = v6 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((((v5 - 354855464) & 0x1526A7B2) - 722) * (v3 != 31)) ^ v5)) - 4))();
}

uint64_t sub_1002DDB04(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((1637 * (v1 == (((a1 + 367) | 0x106) ^ 0x587))) ^ a1))
                            - 12))();
}

uint64_t sub_1002DDB3C@<X0>(int a1@<W0>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((4
                                           * (((*(_DWORD *)(v3 + 3992) > a3) ^ (a1 ^ (a1 + 125))) & 1)) & 0xDF | (32 * (((*(_DWORD *)(v3 + 3992) > a3) ^ (a1 ^ (a1 + 125))) & 1))) ^ (a1 - 28)))
                            - 12))();
}

uint64_t sub_1002DDB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DDA8C(a1, a2, a3);
}

uint64_t sub_1002DDBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 824) - v2 + 31) = v5 >> (((((v4 + 109) | 0xC1) + 50) ^ 0xF8u) & v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v4 ^ (9428 * (v2 == 31)))) - 4))();
}

uint64_t sub_1002DDC44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (int)(((v4 == 32) * (((a4 + 108247000) & 0xF98C47E4) + 4465)) ^ a4))
                            - 12))();
}

uint64_t sub_1002DDC8C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a2 + 1023) * (*(_DWORD *)(v3 + 3988) <= v2)) ^ a2)) - 12))();
}

uint64_t sub_1002DDCBC(uint64_t a1, uint64_t a2)
{
  return sub_1002DDBD4(a1, a2);
}

uint64_t sub_1002DDCF4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 816) - v4 + 31) = a3 >> (v5 & (v3 - 116));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (v3 ^ (1529 * (v4 == 31)))) - 4))(*(_QWORD *)(v7 + 7872));
}

uint64_t sub_1002DDD64()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((11 * (v1 == ((v0 - 5733) | 0x2003) - 8531)) ^ v0))
                            - 4))();
}

uint64_t sub_1002DDDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((((v3 + 2462) ^ 0x149C)
                                                                         * (*(_DWORD *)(v5 + 8272) > a3)) ^ v3))
                                                           - 4))(a1, a2, 0);
}

uint64_t sub_1002DDDD4(uint64_t a1, uint64_t a2)
{
  return sub_1002DDCF4(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DDE08(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  unsigned int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 808) - v3 + 31) = (unint64_t)v5 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((((v2 - 1000) | 0x218) ^ 0x1AB0) * (v3 != 31)) ^ v2)) - 12))();
}

uint64_t sub_1002DDE70(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * ((v4 != ((((a4 - 1494158305) & 0x590F0FFF) - 1054) ^ 0x7EB)) ^ a4))
                            - 4))();
}

uint64_t sub_1002DDEB0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 ^ (11773 * (v2 < *(_DWORD *)(v3 + 9152)))))
                            - (((a2 - 1066) | 0x848u) ^ 0xBEDLL)))();
}

uint64_t sub_1002DDEF0(uint64_t a1, uint64_t a2)
{
  return sub_1002DDE08(a1 + 4, a2);
}

uint64_t sub_1002DDF20(int a1)
{
  char v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v3 - 2059596225);
  *(_BYTE *)(*(_QWORD *)(v6 + 840) - v4 + 31) = v2 >> v1;
  *(_QWORD *)(v6 + 9416) = v7;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v5
                                     + 8
                                     * (int)(((v4 + 1 != ((v3 + 563378403) & 0xDE6B8F5D) - 2553) * (v7 ^ 0x853D1A26)) ^ v3))
                         - 12);
  *(_DWORD *)(v6 + 9464) = 994009785;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1728);
  *(_DWORD *)(v6 + 7944) = a1;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002DE034()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                     + 8 * (((2 * (v1 == v0 - 2553)) | (4 * (v1 == v0 - 2553))) ^ v0))
                                         - 12))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1002DE064@<X0>(unsigned int a1@<W0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (7225 * (a2 < a1)))) - (((v2 - 2369) | 0x100u) ^ 0x1D4)))();
}

uint64_t sub_1002DE09C(int a1)
{
  return sub_1002DDF20(a1);
}

uint64_t sub_1002DE0D0()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  v2 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                     + 8
                                     * ((70
                                       * (*(_DWORD *)(v1 + 9680) != (((v0 + 91) & 0x3F) + 99))) ^ (v0 - 3395)))
                         - 4);
  *(_DWORD *)(v1 + 7632) = 123;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 2328);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 2320);
  v3 = *(_QWORD *)(v1 + 2312);
  *(_QWORD *)(v1 + 7656) = v3;
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 2080);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 2352);
  v4 = *(_QWORD *)(v1 + 2152);
  *(_QWORD *)(v1 + 7704) = v4;
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_QWORD *)(v1 + 9504) = *(_QWORD *)(v1 + 7880);
  *(_QWORD *)(v1 + 9576) = v3;
  *(_QWORD *)(v1 + 9496) = v4;
  *(_DWORD *)(v1 + 8032) = *(_DWORD *)(v1 + 8080);
  *(_DWORD *)(v1 + 8764) = *(_DWORD *)(v1 + 8828);
  *(_DWORD *)(v1 + 8768) = *(_DWORD *)(v1 + 8860);
  *(_DWORD *)(v1 + 9688) = *(_DWORD *)(v1 + 7768);
  *(_DWORD *)(v1 + 7712) = *(_DWORD *)(v1 + 7384);
  LODWORD(v4) = *(_DWORD *)(v1 + 2684);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  LODWORD(v3) = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 9448) = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 9656) = *(_DWORD *)(v1 + 9272);
  *(_DWORD *)(v1 + 8312) = v3;
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = v4;
  *(_DWORD *)(v1 + 7992) = *(_DWORD *)(v1 + 8064);
  *(_DWORD *)(v1 + 9384) = *(_DWORD *)(v1 + 2444);
  *(_DWORD *)(v1 + 8748) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  v5 = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 6936) = v5;
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 8736) = *(_DWORD *)(v1 + 8792);
  *(_DWORD *)(v1 + 8728) = *(_DWORD *)(v1 + 8816);
  *(_DWORD *)(v1 + 8744) = *(_DWORD *)(v1 + 8628);
  *(_DWORD *)(v1 + 8720) = *(_DWORD *)(v1 + 8968);
  *(_DWORD *)(v1 + 9424) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 8760) = *(_DWORD *)(v1 + 9256);
  *(_DWORD *)(v1 + 8752) = *(_DWORD *)(v1 + 8136);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  *(_DWORD *)(v1 + 8712) = *(_DWORD *)(v1 + 8868);
  *(_DWORD *)(v1 + 8696) = *(_DWORD *)(v1 + 8840);
  v6 = *(_DWORD *)(v1 + 2348);
  *(_DWORD *)(v1 + 9440) = v6;
  *(_DWORD *)(v1 + 8688) = *(_DWORD *)(v1 + 8864);
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = v5;
  *(_DWORD *)(v1 + 8680) = *(_DWORD *)(v1 + 8808);
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6976);
  *(_DWORD *)(v1 + 9136) = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 8020) = *(_DWORD *)(v1 + 8040);
  *(_DWORD *)(v1 + 8024) = *(_DWORD *)(v1 + 8116);
  *(_DWORD *)(v1 + 8672) = *(_DWORD *)(v1 + 8848);
  *(_DWORD *)(v1 + 9632) = *(_DWORD *)(v1 + 9072);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 8000) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 8664) = *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 7984) = *(_DWORD *)(v1 + 8272);
  *(_DWORD *)(v1 + 9736) = v6;
  *(_DWORD *)(v1 + 8008) = *(_DWORD *)(v1 + 8056);
  *(_DWORD *)(v1 + 9432) = *(_DWORD *)(v1 + 9172);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 9528) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 8656) = *(_DWORD *)(v1 + 8776);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 8648) = *(_DWORD *)(v1 + 9004);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 8640) = *(_DWORD *)(v1 + 8784);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 9408) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 8704) = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 8632) = *(_DWORD *)(v1 + 8800);
  return v2();
}

uint64_t sub_1002DE3A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 2168) - a3 + 31) = v4 >> (v3 & ((v5 - 100) ^ 0xE4));
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a1 + 8 * (v5 ^ (4570 * (a3 == 31))))
                                                                   - 4))(*(_QWORD *)(v6 + 3160), 1768615607, a2, (v5 - 2148) ^ 0x54Eu);
}

uint64_t sub_1002DE410()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 + 2148) ^ 0x10FD)) ^ v1))
                            - 12))();
}

uint64_t sub_1002DE43C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8 * ((((9 * (v3 ^ 0x25C)) ^ 0x4E8) * (*(_DWORD *)(v4 + 9004) > v2)) ^ v3))
                            - 12))();
}

uint64_t sub_1002DE478@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1002DE3A8(a1, a2, a3);
}

uint64_t sub_1002DE4A0(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1592) - v3 + 31) = a2 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (15891 * (v3 == 31)))) - 4))();
}

uint64_t sub_1002DE508(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (((v4 != (a4 ^ 0x1CF0) - 6789) * ((a4 + 19) ^ 0x655)) ^ a4))
                            - 4))();
}

uint64_t sub_1002DE544@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3
                                                              + 8
                                                              * ((((a2 + 5181) ^ 0x3F5E) * (*(_DWORD *)(v4 + 7920) > v2)) ^ a2))
                                                  - 4))(a1, 0);
}

uint64_t sub_1002DE57C(uint64_t a1)
{
  return sub_1002DE4A0(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DE5C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  *(_BYTE *)(*(_QWORD *)(v7 + 1584) - v3 + 31) = a3 >> v5;
  v8 = (v4 ^ 0x1822u) + v3 + ((v4 - 2974) ^ 0xFFFFFFFFFFFFF3BDLL) == 32;
  return (*(uint64_t (**)(void))(v6 + 8 * (((16 * v8) | (32 * v8)) ^ v4)))();
}

uint64_t sub_1002DE624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v6 + 9744)
                              + 8 * (((v5 != 32) * (((a5 - 1424770050) & 0x54EC5BDF) - 6836)) ^ a5)))();
}

uint64_t sub_1002DE660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v4
                                                             + 8
                                                             * (((((v3 - 257) | 0x101) ^ 0x4A2)
                                                               * (*(_DWORD *)(v5 + 8968) > a3)) ^ (v3 - 6075))))(a1, a2, 0);
}

uint64_t sub_1002DE6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002DE5C0(a1, a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DE6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v10 = v5 + 1 >= ((((v8 + 8) & 0x20) + ((55 - (_BYTE)v8) & 0x20)) | ((((v6 - 4841) | 0x190) ^ v7 & 0x20 ^ 0x9F0)
                                                                    + (v7 & 0x20)));
  *(_BYTE *)(*(_QWORD *)(v9 + 1616) + (31 - v5)) = (unint64_t)v7 >> (v8 & ((v6 + 82) ^ 0x84u));
  v11 = *(_QWORD *)(v9 + 9560);
  if (!v10)
    ++v11;
  return (*(uint64_t (**)(uint64_t))(a5 + 8 * ((1163 * (*(unsigned __int8 *)(v11 + 38) == 157)) ^ v6)))(690037582);
}

uint64_t sub_1002DE788(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744)
                              + 8 * (int)(((a4 != 32) * (((a2 + 2990) ^ 0xFFFFEA5E) + (a2 ^ 0xF9))) ^ a2)))();
}

uint64_t sub_1002DE7C0@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((a2 ^ 0x14AB) + 3796) * (*(_DWORD *)(v3 + 6084) > v2)) ^ a2)))();
}

uint64_t sub_1002DE7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002DE6D8(a1, a2, a3, a4, a5);
}

uint64_t sub_1002DE820@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W5>, uint64_t a4@<X8>)
{
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1608) - a4 + 31) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((3516 * (a3 & ~((v5 + 1312) ^ 0x2C5 ^ (a4 == 31)))) ^ v5)) - 12))();
}

uint64_t sub_1002DE884()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((1425 * (v1 == 32)) ^ v0))
                            - 5 * (v0 ^ 0x8E1u)
                            + 1521))();
}

uint64_t sub_1002DE8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (4412 * (*(_DWORD *)(v5 + 6072) > v3))))
                                         - ((v4 - 606125019) & 0x2420B7FF ^ 0x5F1)))(0);
}

uint64_t sub_1002DE904@<X0>(uint64_t a1@<X2>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1002DE820(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a1, a2, a3);
}

uint64_t sub_1002DE934@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1600) - v3 + 31) = a1 >> v4;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2
                                                     + 8
                                                     * (((v3 + ((a3 + 562) | 0x310u) != 2868)
                                                       * ((a3 - 120851994) & 0x73419FF ^ 0x119F)) ^ a3))
                                         - 12))(*(_QWORD *)(v5 + 3128));
}

uint64_t sub_1002DE9B4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((53 * (v1 == ((v0 + 312058598) & 0xED6657D7) - 1459)) ^ v0))
                            - 4))();
}

uint64_t sub_1002DE9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3
                                                              + 8
                                                              * (((v4 ^ 0x1CFE) * (*(_DWORD *)(v5 + 7448) > v3)) ^ v4))
                                                  - 4))(a1, 0);
}

uint64_t sub_1002DEA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return sub_1002DE934(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a3, v3 - 1346);
}

uint64_t sub_1002DEA5C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v6 + 2160) + (v4 ^ 0x5CCu) - v5) = a3 >> v3;
  v7 = 149;
  if (((v4 + 3046) ^ 0x11B8u) + v5 < 0x20)
    v7 = 21;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((6716 * (*(_BYTE *)(*(_QWORD *)(v6 + 9704) + v7) == 88)) ^ v4))
                            - 12))();
}

uint64_t sub_1002DEAE0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (((v0 - 3431) | 0x181) + 13248)) ^ v0)))();
}

uint64_t sub_1002DEB10(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 ^ 0x23A5) * (v2 < *(_DWORD *)(v4 + 8992))) ^ v3)))();
}

uint64_t sub_1002DEB44(uint64_t a1, uint64_t a2)
{
  return sub_1002DEA5C(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DEB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1640) - v3 + 31) = v6 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((15746 * (v3 + 1 == ((v4 - 3494) ^ 0x1269))) ^ v4))
                            - 12))();
}

uint64_t sub_1002DEBD4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((61 * (v1 == ((15 * (v0 ^ 0x1068)) ^ 0x1FCF))) ^ v0)))();
}

uint64_t sub_1002DEC0C@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 + 3494) ^ 0x191A) * (*(_DWORD *)(v3 + 7928) > a2)) ^ v2)))();
}

uint64_t sub_1002DEC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DEB70(a1, a2, a3);
}

uint64_t sub_1002DEC74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1632) - v4 + 31) = a4 >> v6;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(a1
                                                              + 8
                                                              * (((((v5 - 4647) ^ 0x1D7C) - 4766) * (v4 == 31)) ^ v5))
                                                  - 8))(*(_QWORD *)(v7 + 2152), 3462802199);
}

uint64_t sub_1002DECD8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((10612 * (v0 == 32)) ^ v1))
                            - (v1 ^ 0x2E2Bu)
                            + 8673))();
}

uint64_t sub_1002DED0C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((v2 - 30617031) & 0x1D33FED) - 8673) * (*(_DWORD *)(v3 + 8980) > v1)) ^ v2))
                            - 12))();
}

uint64_t sub_1002DED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DEC74(a1, a2, a3 + 4, *(unsigned int *)(a3 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DED98(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1624) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v2 ^ (2139 * (v3 == 31))))
                            - ((((v2 - 8677) | 0x500u) + 3502) ^ 0x12B2)))();
}

uint64_t sub_1002DEE04()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((118 * (v0 == 32)) ^ v1))
                            - ((v1 + 3895) ^ 0x21F5)))();
}

uint64_t sub_1002DEE34@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 8 * (v4 ^ (1308 * (a2 < *(_DWORD *)(v5 + 9104)))))
                                                  - v2
                                                  + 8685))(a1, 0);
}

uint64_t sub_1002DEE68(uint64_t a1)
{
  return sub_1002DED98(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DEEAC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1656) + ((v3 + 1356395968) & 0xAF26EDC1 ^ 0x95FLL) - v4) = a3 >> v5;
  return (*(uint64_t (**)(void))(a1 + 8 * (v3 ^ (112 * (v4 == 31)))))();
}

uint64_t sub_1002DEF20(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8
                                        * (((v4 != ((a4 - 1877614349) & 0x6FEA3FBE) - 9630) * (31 * (a4 ^ 0x527) - 1276)) ^ a4))
                            - 4))();
}

uint64_t sub_1002DEF74@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((a2 + 8329) ^ 0x35BC) * (*(_DWORD *)(v3 + 8832) > v2)) ^ a2))
                            - 4))();
}

uint64_t sub_1002DEFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002DEEAC(a1, a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DEFE0(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = v4 ^ 0x853D14BD;
  *(_BYTE *)(*(_QWORD *)(v6 + 1648) - v5 + 31) = v3 >> v2;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((4652 * (v5 + 32 * (v4 ^ 0x4E0u) != 2399)) ^ v4)) - 4);
  *(_DWORD *)(v6 + 9464) = 994009453;
  *(_DWORD *)(v6 + 4292) = 67;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 2168);
  *(_DWORD *)(v6 + 6928) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 2444) = *(_DWORD *)(v6 + 8832);
  *(_DWORD *)(v6 + 7384) = a2;
  *(_DWORD *)(v6 + 2348) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002DF0F4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 - 2349)) | v1)) - 12))();
}

uint64_t sub_1002DF120@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 ^ 0x29CE) * (a2 > a3)) ^ v4)) - 12))();
}

uint64_t sub_1002DF14C(uint64_t a1, int a2)
{
  return sub_1002DEFE0(a1, a2);
}

uint64_t sub_1002DF174()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8
                                                                 * (v0 ^ 0x32B2 ^ (27 * (v1 < 0x26))))
                            - (((v0 ^ 0x32B2) - 1751239837) & 0x6861BFDF ^ 0x1B47)))();
}

uint64_t sub_1002DF1C0@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * (((((v1 - 2063079432) | 0x350017) + 2059599765) * (a1 != 37)) ^ (v1 - 8210)))
                            - ((v1 - 8210) ^ 0x40Eu)
                            + 1012))();
}

void sub_1002DF240()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002DF25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  char v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1696)
           + ((v5 + 836294664) & 0xCE2723F9)
           - v4
           - 984
           - ((((v5 + 836294664) & 0xCE2723F9) - v4 - 984) & 1 | v4 & 1 ^ 0x18D3 ^ ((v5 - 1828) | 0x1800))) = v7 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v5 ^ (6007 * (v4 == 31)))) - 4))();
}

uint64_t sub_1002DF2EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (((v1 - 822) | 0x734) + 6834)) ^ v1)))();
}

uint64_t sub_1002DF31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(a4 + 8 * ((((v5 ^ 0x40E) + 7737) * (*(_DWORD *)(v6 + 3996) > v4)) ^ v5)))();
}

uint64_t sub_1002DF350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002DF25C(a1, a2, a3, a4);
}

uint64_t sub_1002DF380(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 584) - v2 + 31) = a2 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ (71 * (v2 == 31)))) - (v4 ^ 0x29Du) + 4632))();
}

uint64_t sub_1002DF400(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8 * (int)(((v3 == 32) * (((a3 + 1368989724) & 0xAE66DFDF) - 5494)) ^ a3))
                            - 12))();
}

uint64_t sub_1002DF444@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 8 * ((28 * (a2 >= *(_DWORD *)(v4 + 3992))) ^ v2))
                                                  - 12))(a1, 0);
}

uint64_t sub_1002DF478(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DF380(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DF4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 576) - v2 + 31) = v5 >> ((20 * (v3 ^ 0x31) - 77) & v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v3 ^ (3738 * (v2 == 31)))) - 4))();
}

uint64_t sub_1002DF53C(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (a1 - 4556)) ^ a1)) - 4))();
}

uint64_t sub_1002DF56C(int a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8 * (((113 * (a1 ^ 0x123A) - 1626) * (*(_DWORD *)(v3 + 3988) > v2)) ^ a1))
                            - 4))();
}

uint64_t sub_1002DF5A8(uint64_t a1, uint64_t a2)
{
  return sub_1002DF4C0(a1, a2);
}

uint64_t sub_1002DF5D8(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 568) - v3 + 31) = a2 >> ((76 * ((v2 - 73) & 0xF9 ^ 0x20) - 77) & v4);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v2 ^ (8 * (v3 == 31)))) - 8))(*(_QWORD *)(v5 + 7872));
}

uint64_t sub_1002DF654(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * ((61 * (((a4 + 37) ^ (v4 == (a4 ^ 0x136C))) & 1)) ^ a4))
                            - 8))();
}

uint64_t sub_1002DF694@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (3973 * (a2 < *(_DWORD *)(v3 + 8272)))))
                            - ((v2 - 3777) ^ 0x4B8)))();
}

uint64_t sub_1002DF6CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DF5D8(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DF708(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 600) - v4 + 31) = a3 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((2921 * (v4 + 1 == ((v3 - 184) | 0x1885u) - 7269)) ^ v3)) - 8))();
}

uint64_t sub_1002DF778()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((10578 * (v0 == 32)) ^ v1))
                            - ((v1 - 785579369) & 0x2ED2F5BF)
                            + 1204))();
}

uint64_t sub_1002DF7B8(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8 * (((((v3 - 3001) | 0x410) + 8034) * (v2 < *(_DWORD *)(v4 + 9152))) ^ v3))
                            - 4))();
}

uint64_t sub_1002DF7F4(uint64_t a1, uint64_t a2)
{
  return sub_1002DF708(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002DF820(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_BYTE *)(*(_QWORD *)(v6 + 592) - v5 + 31) = v3 >> v2;
  *(_QWORD *)(v6 + 9416) = ((v4 + 2743) | 0x1001u) - 2059603054;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(a1
                                     + 8
                                     * ((3612 * (((v5 == 31) ^ (((v4 - 73) | 1) - 110)) & 1)) ^ v4))
                         - 8);
  *(_DWORD *)(v6 + 9464) = 994009579;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1704);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002DF920()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 ^ 0x1D48) - 415)) ^ v1)))();
}

uint64_t sub_1002DF94C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((v3 + 8083) * (a2 > a3)) ^ v3)))();
}

uint64_t sub_1002DF97C(uint64_t a1, int a2)
{
  return sub_1002DF820(a1, a2);
}

uint64_t sub_1002DF9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (v6 ^ (5249 * (*(_DWORD *)(v7 + 9680) != 142))))
                                                                                             - (((v6 ^ 0xA2Du)
                                                                                               - 2059596029) ^ 0x853D1013));
  *(_DWORD *)(v7 + 7632) = 143;
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 2328);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 2320);
  v9 = *(_QWORD *)(v7 + 2312);
  *(_QWORD *)(v7 + 7656) = v9;
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 4104);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 4152);
  v10 = *(_QWORD *)(v7 + 4144);
  *(_QWORD *)(v7 + 7704) = v10;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v11 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v9;
  *(_QWORD *)(v7 + 9496) = v10;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 7448);
  LODWORD(v9) = *(_DWORD *)(v7 + 2684);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 8832);
  v12 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v12;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = v9;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  *(_DWORD *)(v7 + 9384) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  LODWORD(v10) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 6936) = v10;
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  v13 = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 9440) = v13;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = v10;
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9736) = v13;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8(a1, a2, v11, a4, a5, a6, 80);
}

void sub_1002DFC78(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8560);
  *(_DWORD *)(v2 + 2981) = -129547732;
  *(_BYTE *)(v2 + 2980) = -31;
  *(_DWORD *)(v2 + 2976) = -221178005;
  *(_QWORD *)(v2 + 3008) = 0x9B7F1AFEE242E34FLL;
  *(_WORD *)(v2 + 3017) = -5145;
  *(_BYTE *)(v2 + 3028) = 107;
  *(_WORD *)(v2 + 2988) = -23453;
  *(_WORD *)(v2 + 2991) = 30706;
  *(_BYTE *)(v2 + 3016) = -114;
  *(_BYTE *)(v2 + 2993) = 3;
  *(_BYTE *)(v2 + 3019) = 74;
  *(_DWORD *)(v2 + 3021) = 722902543;
  *(_BYTE *)(v2 + 2987) = -27;
  *(_WORD *)(v2 + 2985) = -6468;
  *(_BYTE *)(v2 + 3031) = -50;
  *(_DWORD *)(v1 + 5312) = 143;
  *(_BYTE *)(v2 + 2990) = 64;
  *(_DWORD *)(v1 + 4292) = 67;
  *(_WORD *)(v2 + 3001) = 14753;
  *(_QWORD *)(v1 + 9416) = a1;
  *(_BYTE *)(v2 + 3025) = -50;
  *(_QWORD *)(v1 + 9456) = *(_QWORD *)(v1 + 3792);
  v3 = *(_QWORD *)(v1 + 1992);
  *(_BYTE *)(v2 + 3020) = 124;
  *(_QWORD *)(v1 + 9608) = v3;
  *(_WORD *)(v2 + 2995) = 11649;
  *(_DWORD *)(v1 + 6928) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v2 + 2997) = -190827541;
  *(_DWORD *)(v1 + 5344) = *(_DWORD *)(v1 + 8832);
  *(_BYTE *)(v2 + 2994) = 125;
  *(_DWORD *)(v1 + 9464) = 994009691;
  *(_DWORD *)(v1 + 5340) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v2 + 3003) = -1030170555;
  *(_DWORD *)(v1 + 5348) = *(_DWORD *)(v1 + 9104);
  *(_WORD *)(v2 + 3026) = 22323;
  *(_DWORD *)(v1 + 5336) = *(_DWORD *)(v1 + 6080);
  *(_DWORD *)(v1 + 9664) = *(_DWORD *)(v1 + 6976);
  *(_QWORD *)(v2 + 3032) = 0xF551BF376840B6CBLL;
  *(_DWORD *)(v1 + 9616) = *(_DWORD *)(v1 + 7096);
  *(_DWORD *)(v1 + 9600) = *(_DWORD *)(v1 + 7020);
  *(_WORD *)(v2 + 3029) = 24113;
  *(_DWORD *)(v1 + 9488) = *(_DWORD *)(v1 + 7064);
  *(_DWORD *)(v1 + 9472) = *(_DWORD *)(v1 + 7136);
  *(_BYTE *)(v2 + 3007) = -106;
  JUMPOUT(0x1002A024CLL);
}

uint64_t sub_1002DFE4C@<X0>(unsigned __int8 a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((118 * (((a1 < 0x4Eu) ^ (((v1 + 95) | 0x14) - 119)) & 1)) ^ v1)))();
}

uint64_t sub_1002DFE90()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((193
                                          * (*(_DWORD *)(v1 + 4040) != ((v0 + 0x80) ^ 0xE8 ^ ((_BYTE)v0 + 0x80) & 0xF7 ^ 0xB6))) ^ v0))
                            - 12))();
}

void sub_1002DFF04()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002DFF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1824) + ((v4 + 336661748) & 0xEBEEF7F7 ^ 0x7E8) - v5) = v6 >> v3;
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * ((22 * (v5 + 1 != ((v4 + 3198) ^ 0xFA9))) ^ v4)))(1093032050);
}

uint64_t sub_1002DFF94()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((4045 * (v0 == 32)) ^ v1))
                            - (v1 ^ 0x4FCu)
                            + 775))();
}

uint64_t sub_1002DFFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((41 * (v4 ^ 0x7E4) + 3459) * (v3 < *(_DWORD *)(v5 + 3996))) ^ v4))
                            - 4))();
}

uint64_t sub_1002E0000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002DFF1C(a1, a2, a3);
}

uint64_t sub_1002E0030(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 896) - v4 + 31) = a1 >> v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((8446 * (((97 * (v6 ^ 0x322u)) ^ 0xF88) + v4 == 32)) ^ v6)))();
}

uint64_t sub_1002E009C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((11107 * (v2 == a2 - 3945)) ^ a2)) - 8))();
}

uint64_t sub_1002E00C8@<X0>(int a1@<W1>, uint64_t a2@<X3>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2 + 8 * (a1 ^ (10544 * (a3 < *(_DWORD *)(v4 + 3992)))))
                                         - (v3 ^ 0x303)))(0);
}

uint64_t sub_1002E00FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002E0030(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a2, a3, a4);
}

uint64_t sub_1002E0130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 888) - v3 + 31) = v6 >> v4;
  return (*(uint64_t (**)(_QWORD))(a3
                                           + 8 * ((2016 * (v3 - 6372 + ((v5 - 1441916680) & 0x55F1DBF7) == 32)) ^ v5)))(*(_QWORD *)(v7 + 4000));
}

uint64_t sub_1002E01AC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((13320 * (v0 == ((v1 + 3486) ^ 0x23D5))) ^ v1)))();
}

uint64_t sub_1002E01D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (int)((((v4 + 1802135968) & 0x9495A3FD ^ 0x23F9) * (v3 < *(_DWORD *)(v5 + 3988))) ^ v4)))();
}

uint64_t sub_1002E021C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E0130(a1, a2, a3);
}

uint64_t sub_1002E024C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 880) - v5 + 31) = a3 >> v6;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a4 + 8 * ((((v4 ^ 0xB44) - 6364) * (v5 == 31)) ^ v4))
                                                  - 12))(a1, *(_QWORD *)(v7 + 7872));
}

uint64_t sub_1002E02B8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((12840 * (v1 == ((v0 - 6245) | 0x1321) - 4993)) ^ v0)))();
}

uint64_t sub_1002E02F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unsigned int a4@<W8>)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a3
                                                             + 8
                                                             * (((((v4 - 1733) | 0x181) - 5010)
                                                               * (a4 < *(_DWORD *)(v5 + 8272))) ^ v4)))(a1, a2, 0);
}

uint64_t sub_1002E0328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E024C(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a4);
}

uint64_t sub_1002E0358(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 912) - v5 + 31) = a4 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1692 * (v5 - 4116 + ((v4 - 387) ^ 0x230u) == 32)) ^ v4)) - 12))();
}

uint64_t sub_1002E03BC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((3025 * (v0 == (v1 ^ 0x18D) - 5000)) ^ v1)))();
}

uint64_t sub_1002E03EC(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1
                              + 8 * (((((v2 - 448429611) & 0x1ABA7FAD) - 3669) * (v1 < *(_DWORD *)(v3 + 9152))) ^ v2)))();
}

uint64_t sub_1002E042C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E0358(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E0470(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 - 2059596225);
  *(_BYTE *)(*(_QWORD *)(v6 + 904) - v5 + 31) = v3 >> v2;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1
                                     + 8
                                     * ((5356 * (((v4 + 61) ^ ((v7 ^ 0x853D1016) + v5 == 32)) & 1)) ^ v4))
                         - 12);
  *(_DWORD *)(v6 + 9464) = 994009767;
  *(_QWORD *)(v6 + 9416) = v7;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1736);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 4040) = 86;
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002E0580()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((3255 * (v0 == ((v1 - 3645) ^ 0x1F8))) ^ v1)))();
}

uint64_t sub_1002E05AC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (int)(((((v3 + 626892233) & 0xDAA253F9) + 11873) * (a3 < a2)) ^ v3)))();
}

uint64_t sub_1002E05EC(uint64_t a1, int a2)
{
  return sub_1002E0470(a1, a2);
}

uint64_t sub_1002E0628()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * (((v0 < ((v1 + 20) ^ 0xE4u)) * (((v1 + 1964) ^ 0x20AF) - 1285)) ^ (v1 + 1964)))
                            - 4))();
}

uint64_t sub_1002E0668@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 9744)
                                            + 8
                                            * (int)(((a1 != (((v1 - 12) | 2) ^ 6))
                                                   * ((v1 + 1895553437) & 0x8F0437F1 ^ 0x16D5)) ^ v1)))(3819253608);
}

void sub_1002E06E0()
{
  JUMPOUT(0x1002E5A9CLL);
}

uint64_t sub_1002E06F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1824) - v6 + 31) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((502 * (((v6 == 31) ^ (v5 - 39)) & 1)) ^ v5))
                            - 8))();
}

uint64_t sub_1002E0770()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((2 * (v0 == 32)) | (8 * (v0 == 32))) ^ v1))
                            - (v1 - 5068)
                            + 736))();
}

uint64_t sub_1002E07A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4 + 8 * (((v5 ^ 0x1F82) * (*(_DWORD *)(v6 + 3996) > v4)) ^ v5))
                                         - 4))(0);
}

uint64_t sub_1002E07D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002E06F8(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a2, a3, a4);
}

uint64_t sub_1002E0814@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 896) - a3 + 31) = a1 >> v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8 * ((10180 * (a3 + 1 == ((v4 - 612) | 0x329u) - 905)) ^ v4))
                                          - 8))(3778736049);
}

uint64_t sub_1002E0888()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((3023 * (v0 == ((v1 - 197) ^ 0x2C4))) ^ v1))
                            - 12))();
}

uint64_t sub_1002E08B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3
                                                              + 8
                                                              * (((((v4 - 937) | 0x2E4) ^ 0x1F4A)
                                                                * (*(_DWORD *)(v5 + 3992) > v3)) ^ v4))
                                                  - 12))(a1, 0);
}

uint64_t sub_1002E08F4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002E0814(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a1, a2);
}

uint64_t sub_1002E0924(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 888) - v3 + 31) = a1 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((125 * (v3 - 4497 + (v4 - 1827) != 32)) ^ v4)) - 12))();
}

uint64_t sub_1002E0988()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((13511 * (v0 == ((11 * (v1 ^ 0x13AD)) ^ 0x1895))) ^ v1))
                            - 4))();
}

uint64_t sub_1002E09C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (14372 * (*(_DWORD *)(v5 + 3988) > v3))))
                                         - ((v4 - 4337) | 0x1814u)
                                         + 6321))(0);
}

uint64_t sub_1002E0A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E0924(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E0A4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, int a4@<W8>)
{
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 880) + (a4 ^ 0x1700 ^ (1973 * (v4 ^ 0x4EFu)))) = a3 >> v5;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(a2
                                                             + 8
                                                             * ((5812
                                                               * (((a4 << (-107 * (v4 ^ 0xC5) + 36)) & 2) + (a4 ^ 1u) < 0x20)) ^ v4)))(*(_QWORD *)(v6 + 7872), a1, 2243937925);
}

uint64_t sub_1002E0AD4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((3309 * (v0 == v1 - 5887)) ^ v1)) - 8))();
}

uint64_t sub_1002E0B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v4 ^ (44 * (v3 < *(_DWORD *)(v5 + 8272)))))
                            - ((v4 + 2038597856) & 0x867D64EC)
                            + 1252))();
}

uint64_t sub_1002E0B50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>)
{
  return sub_1002E0A4C(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002E0B80(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 912) + ((41 * (v3 ^ 0x45F) - 1955224494) & 0x748A57DE ^ 0x1411) - v4) = a3 >> v5;
  return (*(uint64_t (**)(void))(a2 + 8 * (v3 ^ (38 * (v4 != 31)))))();
}

uint64_t sub_1002E0BFC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * ((v0 - 4883) ^ 0xB19)) ^ v0))
                            - 4))();
}

uint64_t sub_1002E0C2C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v3 + 7042) * (v2 < *(_DWORD *)(v4 + 9152))) ^ v3)) - 4))();
}

uint64_t sub_1002E0C5C(uint64_t a1, uint64_t a2)
{
  return sub_1002E0B80(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E0C94(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v4 + 83885824) | 0x803D1003;
  *(_BYTE *)(*(_QWORD *)(v6 + 904) - v5 + 31) = v3 >> (v2 & (((v4 | 3) - 9) ^ 0xF1));
  v7 = *(uint64_t (**)(void))(a1 + 8 * (v4 ^ (1502 * (v5 != 31))));
  *(_DWORD *)(v6 + 9464) = 994009519;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1736);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002E0DA0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((52 * (v0 == ((v1 + 1203202446) & 0xB8488377 ^ 0x134))) ^ v1)))();
}

uint64_t sub_1002E0DE4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v3 - 4858) ^ 0x10B) * (a3 < a2)) ^ v3)))();
}

uint64_t sub_1002E0E14(uint64_t a1, int a2)
{
  return sub_1002E0C94(a1, a2);
}

uint64_t sub_1002E0E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;

  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (int)(((v6 == (a6 ^ 0x45)) * ((a6 - 2059599665) ^ 0x853D3AA2)) ^ a6))
                                                                                             - 8);
  *(_DWORD *)(v7 + 7632) = 133;
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 3064);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 2608);
  v9 = *(_QWORD *)(v7 + 2688);
  *(_QWORD *)(v7 + 7656) = v9;
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 2128);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 2248);
  v10 = *(_QWORD *)(v7 + 2256);
  *(_QWORD *)(v7 + 7704) = v10;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v11 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v9;
  *(_QWORD *)(v7 + 9496) = v10;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 7380);
  LODWORD(v10) = *(_DWORD *)(v7 + 3060);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  v12 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v12;
  v13 = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 6944) = v13;
  *(_DWORD *)(v7 + 7648) = v10;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  *(_DWORD *)(v7 + 9384) = *(_DWORD *)(v7 + 2140);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  v14 = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 7888) = v14;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  LODWORD(v9) = *(_DWORD *)(v7 + 2440);
  *(_DWORD *)(v7 + 9440) = v9;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = v13;
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = v14;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9736) = v9;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8(a1, a2, v11, a3, a4, a5, 80);
}

void sub_1002E110C(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(v1 + 7792) = 0;
  *(_DWORD *)(v1 + 9504) = 0;
  *(_DWORD *)(v1 + 7784) = 0;
  *(_DWORD *)(v1 + 7776) = 0;
  *(_DWORD *)(v1 + 9496) = 0;
  *(_DWORD *)(v1 + 9576) = 0;
  *(_DWORD *)(v1 + 9456) = 0;
  *(_DWORD *)(v1 + 9488) = 0;
  *(_DWORD *)(v1 + 9472) = 0;
  v2 = ((a1 ^ 0x1077) - 1364312768) & 0x5151BBFB;
  v3 = *(_DWORD *)(*(_QWORD *)(v1 + 8560) + 2592) ^ 0x87861547;
  v4 = v3 & 0xECDE144E ^ 0x2E6FC618 ^ (((v2 ^ 0x882C107B) & (2 * v3)) - (v3 & 0xECDE1441) - 1427516839);
  *(_DWORD *)(v1 + 3912) = (((2 * v4) | 0xAB9E9826) - v4 + 707834861) ^ 0x9FF39C77;
  *(_QWORD *)(v1 + 7664) = *(_QWORD *)(v1 + 6904);
  *(_QWORD *)(v1 + 7680) = *(_QWORD *)(v1 + 6872);
  *(_QWORD *)(v1 + 7656) = *(_QWORD *)(v1 + 6864);
  *(_QWORD *)(v1 + 7688) = *(_QWORD *)(v1 + 6888);
  *(_QWORD *)(v1 + 7696) = *(_QWORD *)(v1 + 6880);
  *(_QWORD *)(v1 + 7704) = *(_QWORD *)(v1 + 6896);
  *(_QWORD *)(v1 + 9568) = *(_QWORD *)(v1 + 8944);
  *(_QWORD *)(v1 + 8888) = *(_QWORD *)(v1 + 8576);
  *(_QWORD *)(v1 + 9200) = *(_QWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 8880) = *(_QWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8032) = *(_DWORD *)(v1 + 8080);
  *(_DWORD *)(v1 + 7936) = *(_DWORD *)(v1 + 7920);
  *(_DWORD *)(v1 + 9656) = *(_DWORD *)(v1 + 9272);
  *(_DWORD *)(v1 + 7976) = *(_DWORD *)(v1 + 8212);
  *(_DWORD *)(v1 + 8312) = *(_DWORD *)(v1 + 7904);
  *(_DWORD *)(v1 + 6944) = *(_DWORD *)(v1 + 7040);
  *(_DWORD *)(v1 + 7648) = *(_DWORD *)(v1 + 6856);
  *(_DWORD *)(v1 + 7992) = *(_DWORD *)(v1 + 8064);
  *(_DWORD *)(v1 + 8964) = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 6936) = *(_DWORD *)(v1 + 6952);
  *(_DWORD *)(v1 + 9520) = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 7552) = *(_DWORD *)(v1 + 6984);
  *(_DWORD *)(v1 + 9424) = *(_DWORD *)(v1 + 8608);
  *(_DWORD *)(v1 + 9480) = *(_DWORD *)(v1 + 8136);
  *(_DWORD *)(v1 + 6968) = *(_DWORD *)(v1 + 7000);
  *(_DWORD *)(v1 + 7952) = *(_DWORD *)(v1 + 7928);
  *(_DWORD *)(v1 + 7888) = *(_DWORD *)(v1 + 7912);
  v5 = *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 2440) = v5;
  *(_DWORD *)(v1 + 9440) = v5;
  *(_DWORD *)(v1 + 8872) = *(_DWORD *)(v1 + 8912);
  *(_DWORD *)(v1 + 7640) = *(_DWORD *)(v1 + 6912);
  v6 = *(_DWORD *)(v1 + 8832);
  *(_DWORD *)(v1 + 9384) = v6;
  *(_DWORD *)(v1 + 2140) = v6;
  *(_DWORD *)(v1 + 6992) = *(_DWORD *)(v1 + 7008);
  *(_DWORD *)(v1 + 7672) = *(_DWORD *)(v1 + 6920);
  *(_DWORD *)(v1 + 8020) = *(_DWORD *)(v1 + 8040);
  *(_DWORD *)(v1 + 8024) = *(_DWORD *)(v1 + 8116);
  *(_DWORD *)(v1 + 9632) = *(_DWORD *)(v1 + 9072);
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 8000) = *(_DWORD *)(v1 + 7152);
  *(_DWORD *)(v1 + 7984) = *(_DWORD *)(v1 + 8272);
  *(_DWORD *)(v1 + 8008) = *(_DWORD *)(v1 + 8056);
  *(_DWORD *)(v1 + 7592) = *(_DWORD *)(v1 + 7080);
  *(_DWORD *)(v1 + 9528) = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 9624) = *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8616) = *(_DWORD *)(v1 + 8904);
  *(_DWORD *)(v1 + 7584) = *(_DWORD *)(v1 + 7088);
  *(_DWORD *)(v1 + 7576) = *(_DWORD *)(v1 + 7072);
  *(_DWORD *)(v1 + 9408) = *(_DWORD *)(v1 + 8552);
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9584) = *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8984) = *(_DWORD *)(v1 + 8572);
  *(_DWORD *)(v1 + 8236) = *(_DWORD *)(v1 + 9240);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 7632) = 133;
  *(_DWORD *)(v1 + 8280) = 67;
  v7 = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 7712) = v7;
  *(_DWORD *)(v1 + 9128) = *(_DWORD *)(v1 + 7560);
  *(_DWORD *)(v1 + 7380) = v7;
  *(_DWORD *)(v1 + 9688) = 1;
  *(_DWORD *)(v1 + 9464) = 1;
  *(_DWORD *)(v1 + 9736) = 0;
  *(_DWORD *)(v1 + 9680) = 0;
  JUMPOUT(0x100326F74);
}

uint64_t sub_1002E13D0@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * (((v3 & ~((v1 - 193) ^ (a1 < 0x3Eu))) * (((v1 - 193) ^ 0x262A) - 8477)) ^ v1))
                            - 4))();
}

uint64_t sub_1002E1410()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((73
                                          * (*(_DWORD *)(v1 + 4040) == ~(v0 - 113))) ^ v0))
                            - 4))();
}

void sub_1002E14C0()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E14DC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1848) - a2 + 31) = v4 >> v2;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((((2 * ((v3 + 764711392) & 0xD26B7EFD ^ 0x2D9E)) ^ 0x1A71) * (a2 != 31)) ^ v3)))();
}

uint64_t sub_1002E1550(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((v4 == 32) * ((33 * (a1 ^ 0x20C2)) ^ 0x864)) ^ a1))
                            - ((194 * (a1 ^ 0x2092u)) ^ 0x209ALL)))();
}

uint64_t sub_1002E1598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (((((*(_DWORD *)(v6 + 3996) > v5) ^ (v4 + 69)) & 1)
                                          * (v4 - 8295)) ^ v4))
                            - 12))();
}

uint64_t sub_1002E15D8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return sub_1002E14DC(a1, a2);
}

uint64_t sub_1002E1610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1200) + ((v4 + 65503) ^ (32 - v4) | 0xFFFF279B) + 32 - v4) = v7 >> v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((10148 * (v4 - 5493 + ((v6 - 3689) | 0x1404) == 32)) ^ v6)))();
}

uint64_t sub_1002E1694(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((243 * (v4 != ((a2 - 2675) ^ 0xFFB))) ^ a2)) - 4))();
}

uint64_t sub_1002E16C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v8 ^ 0x1566 ^ ((v7 < *(_DWORD *)(v9 + 3992)) * a7)))
                            - ((v8 ^ 0x1566u)
                             - 2786)
                            + 4055))();
}

uint64_t sub_1002E16F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E1610(a1, a2, a3, a4);
}

uint64_t sub_1002E1720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1184) - v5 + 31) = v7 >> v4;
  return (*(uint64_t (**)(void))(a4 + 8 * ((4 * (v5 != 31)) | (16 * (v5 != 31)) | v6)))();
}

uint64_t sub_1002E1780(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(a4 + 8 * (((v4 == ((a1 + v5) & v6) - 10315) * (a1 - 2963)) ^ a1)))();
}

uint64_t sub_1002E17AC@<X0>(int a1@<W0>, uint64_t a2@<X3>, int a3@<W4>, unsigned int a4@<W8>)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((a3 & ~((a1 - 7) ^ 0x19 ^ (*(_DWORD *)(v4 + 3988) > a4)))
                                     * ((a1 + 321906933) & 0xECD029FF ^ 0x2872)) ^ (a1 - 7))))();
}

uint64_t sub_1002E1804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E1720(a1, a2, a3, a4);
}

uint64_t sub_1002E183C@<X0>(unint64_t a1@<X1>, uint64_t a2@<X3>, int a3@<W7>, int a4@<W8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  int v8;

  *(_BYTE *)(*(_QWORD *)(v6 + 1192) - v4 + 31) = a1 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((a4 + a3) & v7 ^ v8) * (v4 == 31)) | a4)) - 12))();
}

uint64_t sub_1002E187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  int v7;

  return (*(uint64_t (**)(void))(a4 + 8 * ((3387 * (v4 == ((v5 + v7) & v6 ^ 0x1EE7))) ^ v5)))();
}

uint64_t sub_1002E18A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 8 * (((v5 + 4918) * (*(_DWORD *)(v6 + 8272) > v4)) ^ v5)))(a1, 0);
}

uint64_t sub_1002E18DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return sub_1002E183C(*(unsigned int *)(v9 - 0x62AA055D109F20F3), a4, a8, (v8 - 1640613879) & 0x61C9DEFF);
}

uint64_t sub_1002E1920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;

  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 9744)
                                                                                               + 8
                                                                                               * (int)((((a6 & 0x7F2C49DF) - 2059596168 + (((a6 & 0x7F2C49DF) - 717385608) & 0xAFFF7DFF) - 175766229) * (v6 == 29)) ^ a6 & 0x7F2C49DF));
  *(_DWORD *)(v7 + 7632) = 149;
  v9 = *(_QWORD *)(v7 + 2128);
  *(_QWORD *)(v7 + 7664) = v9;
  v10 = *(_QWORD *)(v7 + 2248);
  *(_QWORD *)(v7 + 7680) = v10;
  v11 = *(_QWORD *)(v7 + 2256);
  *(_QWORD *)(v7 + 7656) = v11;
  *(_QWORD *)(v7 + 7688) = v9;
  *(_QWORD *)(v7 + 7696) = v10;
  *(_QWORD *)(v7 + 7704) = v11;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v12 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v11;
  *(_QWORD *)(v7 + 9496) = v11;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  v13 = *(_DWORD *)(v7 + 7380);
  *(_DWORD *)(v7 + 7712) = v13;
  LODWORD(v9) = *(_DWORD *)(v7 + 2440);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  v14 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v14;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = v9;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  LODWORD(v10) = *(_DWORD *)(v7 + 2140);
  *(_DWORD *)(v7 + 9384) = v10;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = *(_DWORD *)(v7 + 7000);
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 9440) = v9;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = v13;
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = *(_DWORD *)(v7 + 7008);
  *(_DWORD *)(v7 + 7672) = v10;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9736) = v9;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8(a1, a2, v12, a3, a4, a5, 80);
}

void sub_1002E1BDC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 8944);
  *(_QWORD *)(v0 + 8888) = *(_QWORD *)(v0 + 8576);
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 8952);
  *(_QWORD *)(v0 + 8880) = *(_QWORD *)(v0 + 8936);
  *(_DWORD *)(v0 + 8032) = *(_DWORD *)(v0 + 8080);
  *(_DWORD *)(v0 + 8764) = *(_DWORD *)(v0 + 8828);
  *(_DWORD *)(v0 + 8768) = *(_DWORD *)(v0 + 8860);
  *(_DWORD *)(v0 + 7936) = *(_DWORD *)(v0 + 7920);
  *(_DWORD *)(v0 + 9448) = *(_DWORD *)(v0 + 9116);
  *(_DWORD *)(v0 + 9656) = *(_DWORD *)(v0 + 9272);
  *(_DWORD *)(v0 + 8312) = *(_DWORD *)(v0 + 7904);
  *(_DWORD *)(v0 + 6944) = *(_DWORD *)(v0 + 7040);
  *(_DWORD *)(v0 + 7992) = *(_DWORD *)(v0 + 8064);
  *(_DWORD *)(v0 + 8748) = *(_DWORD *)(v0 + 8980);
  *(_DWORD *)(v0 + 8964) = *(_DWORD *)(v0 + 9152);
  *(_DWORD *)(v0 + 6936) = *(_DWORD *)(v0 + 6952);
  *(_DWORD *)(v0 + 9520) = *(_DWORD *)(v0 + 8196);
  *(_DWORD *)(v0 + 7552) = *(_DWORD *)(v0 + 6984);
  *(_DWORD *)(v0 + 8736) = *(_DWORD *)(v0 + 8792);
  *(_DWORD *)(v0 + 8728) = *(_DWORD *)(v0 + 8816);
  *(_DWORD *)(v0 + 8744) = *(_DWORD *)(v0 + 8628);
  *(_DWORD *)(v0 + 8720) = *(_DWORD *)(v0 + 8968);
  *(_DWORD *)(v0 + 9424) = *(_DWORD *)(v0 + 8608);
  *(_DWORD *)(v0 + 2440) = *(_DWORD *)(v0 + 9104);
  *(_DWORD *)(v0 + 8760) = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 8752) = *(_DWORD *)(v0 + 8136);
  *(_DWORD *)(v0 + 6968) = *(_DWORD *)(v0 + 7000);
  *(_DWORD *)(v0 + 7952) = *(_DWORD *)(v0 + 7928);
  *(_DWORD *)(v0 + 7888) = *(_DWORD *)(v0 + 7912);
  *(_DWORD *)(v0 + 8712) = *(_DWORD *)(v0 + 8868);
  *(_DWORD *)(v0 + 8696) = *(_DWORD *)(v0 + 8840);
  *(_DWORD *)(v0 + 8688) = *(_DWORD *)(v0 + 8864);
  *(_DWORD *)(v0 + 8872) = *(_DWORD *)(v0 + 8912);
  *(_DWORD *)(v0 + 8680) = *(_DWORD *)(v0 + 8808);
  *(_DWORD *)(v0 + 2140) = *(_DWORD *)(v0 + 8832);
  *(_DWORD *)(v0 + 6992) = *(_DWORD *)(v0 + 7008);
  *(_DWORD *)(v0 + 9136) = *(_DWORD *)(v0 + 9056);
  *(_DWORD *)(v0 + 8020) = *(_DWORD *)(v0 + 8040);
  *(_DWORD *)(v0 + 8024) = *(_DWORD *)(v0 + 8116);
  *(_DWORD *)(v0 + 8672) = *(_DWORD *)(v0 + 8848);
  *(_DWORD *)(v0 + 9632) = *(_DWORD *)(v0 + 9072);
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8920);
  *(_DWORD *)(v0 + 8000) = *(_DWORD *)(v0 + 7152);
  *(_DWORD *)(v0 + 8664) = *(_DWORD *)(v0 + 8992);
  *(_DWORD *)(v0 + 7984) = *(_DWORD *)(v0 + 8272);
  *(_DWORD *)(v0 + 8008) = *(_DWORD *)(v0 + 8056);
  *(_DWORD *)(v0 + 9432) = *(_DWORD *)(v0 + 9172);
  v1 = *(_DWORD *)(v0 + 7080);
  *(_DWORD *)(v0 + 7648) = v1;
  *(_DWORD *)(v0 + 9440) = v1;
  *(_DWORD *)(v0 + 9736) = v1;
  *(_DWORD *)(v0 + 7592) = v1;
  *(_DWORD *)(v0 + 9528) = *(_DWORD *)(v0 + 8188);
  *(_DWORD *)(v0 + 8656) = *(_DWORD *)(v0 + 8776);
  *(_DWORD *)(v0 + 8616) = *(_DWORD *)(v0 + 8904);
  *(_DWORD *)(v0 + 8648) = *(_DWORD *)(v0 + 9004);
  v2 = *(_DWORD *)(v0 + 7088);
  *(_DWORD *)(v0 + 9384) = v2;
  *(_DWORD *)(v0 + 7672) = v2;
  *(_DWORD *)(v0 + 7584) = v2;
  *(_DWORD *)(v0 + 8640) = *(_DWORD *)(v0 + 8784);
  *(_DWORD *)(v0 + 7380) = *(_DWORD *)(v0 + 8548);
  v3 = *(_DWORD *)(v0 + 7072);
  *(_DWORD *)(v0 + 7712) = v3;
  *(_DWORD *)(v0 + 7640) = v3;
  *(_DWORD *)(v0 + 7576) = v3;
  *(_DWORD *)(v0 + 9408) = *(_DWORD *)(v0 + 8552);
  *(_DWORD *)(v0 + 8704) = *(_DWORD *)(v0 + 9064);
  *(_DWORD *)(v0 + 9096) = *(_DWORD *)(v0 + 8900);
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9184);
  *(_DWORD *)(v0 + 8984) = *(_DWORD *)(v0 + 8572);
  *(_DWORD *)(v0 + 8612) = *(_DWORD *)(v0 + 8932);
  *(_DWORD *)(v0 + 8632) = *(_DWORD *)(v0 + 8800);
  JUMPOUT(0x1002E1E00);
}

uint64_t sub_1002E1E40@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((230 * (a1 < ((v1 + 104) ^ 0x89u))) ^ v1)))();
}

uint64_t sub_1002E1E70()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (int)(((v0 ^ 0x1207) * (v1 == 93)) ^ v0 ^ 0x373E))
                            - (v0 ^ 0x13D3)))();
}

void sub_1002E1EBC()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E1ED8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 9744)
                                            + 8
                                            * (((((*(_DWORD *)(v1 + 4040) == 122) ^ ((v0 - 2) | 2)) & 1)
                                              * ((v0 - 4844) ^ 0x278)) ^ v0)))(1657578270);
}

void sub_1002E1F48()
{
  JUMPOUT(0x1002E9680);
}

uint64_t sub_1002E1F60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 312) - v5 + 31) = a1 >> (v4 & (v3 ^ 0xE8));
  return (*(uint64_t (**)(void))(a3 + 8 * (v3 ^ (13593 * (v5 == 31)))))();
}

uint64_t sub_1002E1FC8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (v1 + 9053)) ^ v1)))();
}

uint64_t sub_1002E1FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(_QWORD))(a3 + 8 * (((v4 ^ 0x1025) * (v3 < *(_DWORD *)(v6 + 3996))) ^ v5)))(0);
}

uint64_t sub_1002E2020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E1F60(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E2054(uint64_t a1)
{
  uint64_t v1;
  char v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 336) - v1 + 31) = v4 >> v2;
  return (*(uint64_t (**)(void))(a1 + 8 * ((1581 * (v1 + 1 == ((v3 - 8206) | 0x209u) - 489)) ^ v3)))();
}

uint64_t sub_1002E20BC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((11245 * (v2 == (((a2 + 5411) | 2) ^ 0x202E))) ^ a2))
                            - ((a2 - 317488141) & 0x12EC7BE7)
                            + 2748))();
}

uint64_t sub_1002E2110@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((*(_DWORD *)(v3 + 3992) > a2) ^ (v2 + 1)) & 1)
                                          * (((v2 + 213463353) & 0x3346CEEB) - 2748)) ^ v2))
                            - 8))();
}

uint64_t sub_1002E2168(uint64_t a1)
{
  return sub_1002E2054(a1);
}

uint64_t sub_1002E21A0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 328) - v2 + 31) = v4 >> v3;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * ((235
                                                       * (v2 + 1 == ((((v1 - 465056117) ^ 0xE447D4F6) + 190) ^ (v1 - 465056117) & 0x1BB82BE7))) ^ v1))
                                         - 4))(*(_QWORD *)(v5 + 4000));
}

uint64_t sub_1002E221C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8 * ((2068 * (v3 == ((541 * (a3 ^ 0x20D)) ^ 0x854))) ^ a3))
                            - 4))();
}

uint64_t sub_1002E2258(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)(a3 ^ ((v3 < *(_DWORD *)(v4 + 3988)) | (16 * (v3 < *(_DWORD *)(v4 + 3988))))))
                            - (a3 ^ 0x20DLL)))();
}

uint64_t sub_1002E2290(uint64_t a1)
{
  return sub_1002E21A0(a1);
}

uint64_t sub_1002E22C0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  unsigned int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 320) - v3 + 31) = (unint64_t)v5 >> v4;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(a2
                                                                               + 8
                                                                               * ((103
                                                                                 * ((((v2 - 858) | 0x204u) ^ 0x2E6)
                                                                                  + v3 == 32)) ^ v2))
                                                                   - 8))(a1, *(_QWORD *)(v6 + 7872), (v2 - 488), 2429527050);
}

uint64_t sub_1002E232C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * (((v5 == 32) * (217 * (a5 ^ 0x2E2) + 6213)) ^ a5))
                            - 4))();
}

uint64_t sub_1002E2364@<X0>(uint64_t a1@<X1>, int a2@<W4>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((a2 + 342) ^ 0x2EBE) * (a3 < *(_DWORD *)(v3 + 8272))) ^ a2))
                            - 4))();
}

uint64_t sub_1002E2398(uint64_t a1, uint64_t a2)
{
  return sub_1002E22C0(a1 + 4, a2);
}

uint64_t sub_1002E23C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 352) - v5 + 31) = a4 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 ^ (8322 * (v5 == 31)))) - 8))();
}

uint64_t sub_1002E2428(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8
                                                                 * (((v3 == 32) * ((a3 ^ 0x22EB) + a3 + 517)) ^ a3))
                            - 12))();
}

uint64_t sub_1002E2458(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((a3 ^ 0x1E) + 505) ^ ((a3 ^ 0x1E) + 527)) * (*(_DWORD *)(v4 + 9152) <= v3)) ^ a3 ^ 0x1E))
                            - 12))();
}

uint64_t sub_1002E2490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E23C0(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E24C8@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  v7 = (v5 - 2145846441) | 0x5241016u;
  *(_BYTE *)(*(_QWORD *)(v6 + 344) + -a3 - 2235371512 + v7) = v4 >> v3;
  v8 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (v5 ^ (7371 * (a3 != 31)))) - 4);
  *(_DWORD *)(v6 + 9464) = 994009875;
  *(_DWORD *)(v6 + 4040) = 122;
  *(_QWORD *)(v6 + 9416) = v7;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  v9 = *(_QWORD *)(v6 + 1664);
  *(_QWORD *)(v6 + 9608) = v9;
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8(v9);
}

uint64_t sub_1002E25DC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 ^ 0x605) + 8847)) ^ v1))
                            - 12))();
}

uint64_t sub_1002E2610(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v5 + 335) * (a3 > v3)) ^ v4)) - 12))();
}

uint64_t sub_1002E2638@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  return sub_1002E24C8(a1, a2, a3);
}

uint64_t sub_1002E2664()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 9744)
                                           + 8
                                           * ((12011
                                             * ((((v0 + 1680) ^ 0x60) & 0xF3) == *(_DWORD *)(v1 + 4040))) ^ v0)))((v0 + 1680) | 0x20Cu);
}

void sub_1002E26D4()
{
  JUMPOUT(0x1002E9680);
}

uint64_t sub_1002E26EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1552) - v6 + 31) = v7 >> v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((110 * (v6 - 4701 + 2351 * (v4 ^ 0x9AEu) != 32)) ^ v4)))();
}

uint64_t sub_1002E275C(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((14069 * (v1 == (a1 ^ 0x127E))) ^ a1)) - 12))();
}

uint64_t sub_1002E2790(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (a1 ^ (14149 * (*(_DWORD *)(v5 + 3996) > v4))))
                            - ((a1 - 2226) ^ 0x9A0)))();
}

uint64_t sub_1002E27C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E26EC(a1, a2, a3, a4);
}

uint64_t sub_1002E2800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 480) - v3 + 31) = v5 >> v4;
  return (*(uint64_t (**)(_QWORD))(a3
                                           + 8
                                           * ((6173 * (v3 + 1 == (v6 ^ 0xCF9 ^ ((v6 - 1665) | 0x84u) ^ 0x6DALL))) ^ v6)))(*(_QWORD *)(v7 + 3304));
}

uint64_t sub_1002E286C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((8737 * (v2 == (a2 ^ 0x575))) ^ a2))
                            - ((a2 - 1193) | 0x900u)
                            + 2464))();
}

uint64_t sub_1002E28A8@<X0>(int a1@<W1>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((28
                                          * (((a3 < *(_DWORD *)(v3 + 3992)) ^ ((a1 ^ 0x1C) + 56)) & 1)) ^ a1 ^ 0x1C))
                            - ((((a1 ^ 0x1C) - 1332) | 0x540u) ^ 0x559)))();
}

uint64_t sub_1002E2904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E2800(a1, a2, a3);
}

uint64_t sub_1002E2934(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1232) - v4 + 31) = a3 >> v5;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 8 * (v3 ^ (46 * (v4 == 31)))) - 8))(a1, *(_QWORD *)(v6 + 4000));
}

uint64_t sub_1002E2994()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * (((v1 == 32) * (((v0 - 238036262) & 0xE302FFE) + 7469)) ^ v0)))();
}

uint64_t sub_1002E29D0(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((((v3 + 1584823018) & 0xA1898FEE ^ 0xE9F) * (v2 < *(_DWORD *)(v4 + 3988))) ^ v3)))();
}

uint64_t sub_1002E2A14(uint64_t a1, uint64_t a2)
{
  return sub_1002E2934(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E2A54(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1224) - v6 + 31) = a4 >> v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (v4 ^ (58 * (v6 == 31))))
                                          - (((v4 ^ 0x202u) - 1145) ^ 0x7C1)))(901975414);
}

uint64_t sub_1002E2AB8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((4462 * (v1 == v0 - 1965)) ^ v0)) - 4))();
}

uint64_t sub_1002E2AE4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 - 1951) * (*(_DWORD *)(v3 + 8272) > a2)) ^ v2)) - 4))();
}

uint64_t sub_1002E2B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E2A54(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E2B44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1216) - v4 + (v3 ^ 0x1A11u) - 5200) = a1 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((((v3 - 1406406655) & 0x53D40DC6) + 7021) * (v4 == 31)) ^ v3))
                            - 12))();
}

uint64_t sub_1002E2BC0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8
                                                                 * (((v1 == 32) * (10 * (v0 ^ 0xD35) + 2362)) ^ v0))
                            - 12))();
}

uint64_t sub_1002E2BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (6138 * (v3 < *(_DWORD *)(v5 + 9152)))))
                                         - ((14 * (v4 ^ 0xD4Fu)) ^ 0xE72)))(0);
}

uint64_t sub_1002E2C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E2B44(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E2C6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v11 = v8 ^ 0x853D1103;
  *(_QWORD *)(v10 + 9416) = v11;
  v12 = (v11 - a6 + 1319);
  *(_BYTE *)(*(_QWORD *)(v10 + 1240) - v9 + 31) = v7 >> v6;
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 8 * ((4333 * ((v12 ^ 0x146E) + v9 != 32)) ^ v8));
  *(_DWORD *)(v10 + 9464) = 994009597;
  *(_QWORD *)(v10 + 9456) = *(_QWORD *)(v10 + 7048);
  v14 = *(_QWORD *)(v10 + 1680);
  *(_QWORD *)(v10 + 9608) = v14;
  *(_DWORD *)(v10 + 7944) = a3;
  *(_DWORD *)(v10 + 5344) = *(_DWORD *)(v10 + 6072);
  *(_DWORD *)(v10 + 5340) = *(_DWORD *)(v10 + 7616);
  *(_DWORD *)(v10 + 5348) = *(_DWORD *)(v10 + 6084);
  *(_DWORD *)(v10 + 5336) = *(_DWORD *)(v10 + 6080);
  *(_DWORD *)(v10 + 9664) = *(_DWORD *)(v10 + 6976);
  *(_DWORD *)(v10 + 9616) = *(_DWORD *)(v10 + 7096);
  *(_DWORD *)(v10 + 9600) = *(_DWORD *)(v10 + 7020);
  *(_DWORD *)(v10 + 9488) = *(_DWORD *)(v10 + 7064);
  *(_DWORD *)(v10 + 9472) = *(_DWORD *)(v10 + 7136);
  *(_DWORD *)(v10 + 4292) = *(_DWORD *)(v10 + 8280);
  *(_DWORD *)(v10 + 5312) = *(_DWORD *)(v10 + 9680);
  return v13(v14, v12);
}

uint64_t sub_1002E2D6C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((15558 * (v2 == ((6 * (a2 ^ 0x1441)) ^ 0x134))) ^ a2))
                            - 12))();
}

uint64_t sub_1002E2DAC@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((((a2 - 2080005369) & 0x7BFA499D) + 1971) * (a4 < a3)) ^ a2))
                            - 12))();
}

uint64_t sub_1002E2DEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_1002E2C6C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1002E2E2C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                                     + 8
                                                     * (((v0 ^ 0x2044) * (*(_DWORD *)(v1 + 4040) != 78)) ^ v0))
                                         + 2235371539
                                         - ((v0 - 570475851) & 0xA73DB6D7)))(v0 ^ 0x9EEu);
}

void sub_1002E2EA0()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E2EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1760) - v4 + 31) = v6 >> v3;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(a3
                                                              + 8
                                                              * ((227 * (((v4 == 31) ^ (v5 - 40)) & 1)) ^ v5))
                                                  - 4))((v5 ^ 0x1CE4u) + 5335, 3011825519);
}

uint64_t sub_1002E2F2C(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * (int)(((v1 == 32)
                                     * ((a1 - 179773288) & 0xAB71F5B ^ (a1 + 1720444955) & 0x99741EE9 ^ 0x429)) ^ a1)))();
}

uint64_t sub_1002E2F84@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((1497 * (a2 ^ 0x175C) - 5443) | 0x1C48) ^ 0x1E55) * (v2 >= *(_DWORD *)(v3 + 3996))) ^ a2)))();
}

uint64_t sub_1002E2FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E2EBC(a1, a2, a3);
}

uint64_t sub_1002E3014(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1056) - v2 + 31) = a2 >> v4;
  return (*(uint64_t (**)(uint64_t))(a1
                                            + 8
                                            * (((v2 + 1 != (v3 - 1037) - 3400) * (v3 ^ 0x1183)) ^ v3)))(2296224235);
}

uint64_t sub_1002E3074()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((9620 * (v1 == 32)) ^ v0))
                            - ((v0 + 1124505840) & 0xBCF975F7 ^ 0x1171)))();
}

uint64_t sub_1002E30B8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (6412 * (*(_DWORD *)(v3 + 3992) > a2))))
                            - (((v2 + 3539) | 0x115u) ^ 0x1171)))();
}

uint64_t sub_1002E30F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E3014(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E3128(unint64_t a1)
{
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 1048) - v2 + 31) = a1 >> v1;
  v6 = v2 + 1 == ((3 * (v3 ^ 0x88Fu)) ^ 0xFFFFFFFFFFFFFA8FLL) + ((v3 - 2514) | 0xD08u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((2 * v6) | (4 * v6)) ^ v3)) - 8))();
}

uint64_t sub_1002E319C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8 * ((25 * (v3 == ((174 * (a3 ^ 0xD67)) ^ 0xA12))) ^ a3))
                            - 12))();
}

uint64_t sub_1002E31D8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4 + 8 * (((a3 + 3446) * (v3 < *(_DWORD *)(v5 + 3988))) ^ a3))
                                         - 12))(0);
}

uint64_t sub_1002E3208()
{
  uint64_t v0;

  return sub_1002E3128(*(unsigned int *)(v0 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E324C(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1040) + ((701 * (v2 ^ 0xA37u)) ^ 0x828) - v3) = a2 >> v4;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5 + 8 * ((((v2 - 2265) ^ 0x19C3) * (v3 == 31)) ^ v2)) - 8))(*(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002E32BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * (((v5 != a5 - 2071) * ((a5 + 509) ^ 0xA4F)) ^ a5))
                            - 12))();
}

uint64_t sub_1002E32EC@<X0>(uint64_t a1@<X0>, int a2@<W4>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3
                                                              + 8
                                                              * ((((a2 + 509) ^ 0x20CA) * (*(_DWORD *)(v4 + 8272) > a3)) ^ (a2 + 21)))
                                                  - 12))(a1, 0);
}

uint64_t sub_1002E3324(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E324C(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E3354(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1072) - v4 + 31) = a3 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((56 * ((((v3 - 4490) | 0x51u) ^ 0x15ALL) + v4 != 32)) ^ v3)) - 8))();
}

uint64_t sub_1002E33C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (((v4 == 32) * (((a4 - 347) | 0x1294) ^ 0x1107)) ^ a4))
                            - 8))();
}

uint64_t sub_1002E33F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((107 * (*(_DWORD *)(v5 + 9152) <= v4)) ^ (a4 - 43)))
                            - ((a4 - 43) ^ 0x13A4u)
                            + 4748))();
}

uint64_t sub_1002E3434(uint64_t a1, uint64_t a2)
{
  return sub_1002E3354(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E3474(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 - 2059596214);
  *(_QWORD *)(v6 + 9416) = v7;
  *(_BYTE *)(*(_QWORD *)(v6 + 1064) - v5 + 31) = v3 >> v2;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((4953 * (v5 + 1 != (v7 ^ 0x853D0B86) - 7025)) ^ v4))
                         - 8);
  *(_DWORD *)(v6 + 9464) = 994009743;
  *(_DWORD *)(v6 + 4040) = 78;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1768);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002E3580()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((15578 * (v0 == 32)) ^ v1))
                            - ((v1 + 233337916) & 0xF21771FF ^ 0x1C9)))();
}

uint64_t sub_1002E35C8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (13078 * (a3 < a2)))) - ((v3 - 6793) | 0xC5u) + 457))();
}

uint64_t sub_1002E3604(uint64_t a1, int a2)
{
  return sub_1002E3474(a1, a2);
}

uint64_t sub_1002E3638@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * ((41 * (a1 == ((2 * (((v1 + 125) | 0x11) ^ 0x1E)) ^ 0xB))) ^ v1))
                            - 8))();
}

void sub_1002E36B0()
{
  JUMPOUT(0x1002E5A9CLL);
}

uint64_t sub_1002E36C8@<X0>(uint64_t a1@<X2>, char a2@<W8>)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1560) - v2 + 31) = v4 >> (a2 & ((v3 - 123) ^ 0xDA));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (v3 ^ (2646 * (v2 == 31))))
                                          - ((v3 + 1683000607) & 0x9BAF7F52)
                                          + 7690))(2705749950);
}

uint64_t sub_1002E3748@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((395 * (a2 == ((a1 - 22) ^ 0xC7C ^ ((a1 - 7698) | 0x11A0)))) ^ a1))
                            - 8))();
}

uint64_t sub_1002E378C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((v6 & ~((v4 + 22) ^ (v3 < *(_DWORD *)(v5 + 3996)))) * (v4 - 6670)) ^ v4))
                            - 8))();
}

uint64_t sub_1002E37CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E36C8(a3, 0);
}

uint64_t sub_1002E37FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 760) - v3 + ((v4 + 74129713) & 0xFB94CAFD) - 2054) = a1 >> (v5 & (((v4 + 49) ^ 0xD7) + 15));
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v4 ^ (15402 * (v3 == 31)))) - 8))();
}

uint64_t sub_1002E3880()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((6040 * (v0 == 32)) ^ v1))
                            - ((v1 - 456525862) & 0x1B361BF6 ^ 0x1BF2)))();
}

uint64_t sub_1002E38C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3
                                                     + 8
                                                     * ((((v4 + 5073) ^ 0x92D) * (*(_DWORD *)(v5 + 3992) > v3)) ^ v4))
                                         - 4))(0);
}

uint64_t sub_1002E38FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E37FC(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E3930@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 784) + ((380 * (v4 ^ 0x2779u)) ^ 0x5EFLL) - a3) = a2 >> v3;
  v6 = a3 + 1 == (v4 - 5185) - 4892;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * ((v6 | (2 * v6)) ^ v4)) - 12))(*(_QWORD *)(v5 + 4000));
}

uint64_t sub_1002E39A4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((12058 * (v1 == 32)) ^ v0))
                            - ((919 * (v0 ^ 0x5FBu)) ^ 0x2775)))();
}

uint64_t sub_1002E39E0(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (9939 * (*(_DWORD *)(v3 + 3988) > v1))))
                            - ((v2 + 7733) | 0x358u)
                            + 10101))();
}

uint64_t sub_1002E3A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002E3930(a1, *(unsigned int *)(v2 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E3A58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 776) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v5
                                                              + 8
                                                              * ((506 * (v3 - 4923 + ((2 * a3) ^ 0x1EEAu) == 32)) ^ a3))
                                                  - 8))(a1, *(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002E3AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * (((v5 == 32) * (a5 + 9032)) ^ a5)) - 12))();
}

uint64_t sub_1002E3AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                       + 8
                                                                       * (a5 ^ (74 * (v5 < *(_DWORD *)(v7 + 8272)))))
                                                           - ((a5 - 1775156033) & 0x69CEAEEF ^ 0x6E7)))(a1, a2, 0);
}

uint64_t sub_1002E3B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1002E3A58(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), (a5 - 4891) | 0x6CAu);
}

uint64_t sub_1002E3B7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 768) - v5 + 31) = a4 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v5 + 1 == 1289 * (v4 ^ 0x715u) - 5124) * ((v4 - 1402) ^ 0x9E4)) ^ v4))
                            - 8))();
}

uint64_t sub_1002E3BEC()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 == 27 * (v1 ^ 0x1D4) - 1777;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((4 * v3) | (8 * v3)) ^ v1)) - 4))();
}

uint64_t sub_1002E3C24(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((v2 - 1160311264) & 0x4528F759) + 3500) * (v1 < *(_DWORD *)(v3 + 9152))) ^ v2))
                            - 4))();
}

uint64_t sub_1002E3C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E3B7C(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E3C98(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  *(_QWORD *)(v10 + 9416) = (2 * v8) ^ 0x17BE ^ (a6 + 868);
  *(_BYTE *)(*(_QWORD *)(v10 + 800) - v9 + 31) = v7 >> v6;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((3759 * (((v9 == 31) ^ (a6 + 100)) & 1)) ^ v8))
                          - 8);
  *(_DWORD *)(v10 + 9464) = 994009543;
  *(_QWORD *)(v10 + 9456) = *(_QWORD *)(v10 + 7048);
  *(_QWORD *)(v10 + 9608) = *(_QWORD *)(v10 + 1720);
  *(_DWORD *)(v10 + 7944) = a2;
  *(_DWORD *)(v10 + 5344) = *(_DWORD *)(v10 + 6072);
  *(_DWORD *)(v10 + 5340) = *(_DWORD *)(v10 + 7616);
  *(_DWORD *)(v10 + 5348) = *(_DWORD *)(v10 + 6084);
  *(_DWORD *)(v10 + 5336) = *(_DWORD *)(v10 + 6080);
  *(_DWORD *)(v10 + 9664) = *(_DWORD *)(v10 + 6976);
  *(_DWORD *)(v10 + 9616) = *(_DWORD *)(v10 + 7096);
  *(_DWORD *)(v10 + 9600) = *(_DWORD *)(v10 + 7020);
  *(_DWORD *)(v10 + 9488) = *(_DWORD *)(v10 + 7064);
  *(_DWORD *)(v10 + 9472) = *(_DWORD *)(v10 + 7136);
  *(_DWORD *)(v10 + 4292) = *(_DWORD *)(v10 + 8280);
  *(_DWORD *)(v10 + 5312) = *(_DWORD *)(v10 + 9680);
  return v11();
}

uint64_t sub_1002E3D8C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((2160 * (v0 == ((v1 - 47356469) & 0x2D287DD ^ 0xFFFFED57) + ((v1 - 1060) | 0x386))) ^ v1)))();
}

uint64_t sub_1002E3DE0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((a2 > a3) ^ (v3 - 33)) & 1) * (v3 ^ 0x1424)) ^ v3)))();
}

uint64_t sub_1002E3E28(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_1002E3C98(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1002E3E7C()
{
  int v0;
  uint64_t v1;
  BOOL v2;

  v2 = *(_DWORD *)(v1 + 4040) == 118;
  *(_QWORD *)(v1 + 9416) = (v0 - 985701536) & 0xBFFD9BD7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                                      + 8
                                                      * ((460 * ((v2 ^ (v0 + 96) & 0xD7) & 1)) ^ v0))
                                          - 12))(2448472349);
}

void sub_1002E3F38()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x1002E3FB0);
}

uint64_t sub_1002E3FBC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1672) - v6 + 31) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (((v6 + 1 == ((v5 - 2098) ^ 0x88DLL)) * ((v5 ^ 0x2E2) + 8593)) ^ v5))
                            - 12))();
}

uint64_t sub_1002E4024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (int)((6210 * (v4 == 32)) ^ v5)) - (v5 ^ 0x8A5)))();
}

uint64_t sub_1002E4054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4 + 8 * (v5 ^ (25 * (*(_DWORD *)(v6 + 3996) > v4))))
                                         - (((v5 + 2022) | 0x4Cu) ^ 0x10D7)))(0);
}

uint64_t sub_1002E4094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002E3FBC(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a2, a3, a4);
}

uint64_t sub_1002E40CC@<X0>(unint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 416) - a3 + 31) = a1 >> v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8 * (v4 ^ (4 * (a3 + 1 == (v4 ^ 0x1661u) + 2082 - 4637))))
                                          - 4))(3504418808);
}

uint64_t sub_1002E4128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a4 + 8 * ((164 * (v4 == ((v5 + 2621) ^ 0x1C5A))) ^ v5)))();
}

uint64_t sub_1002E4150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a4
                                                    + 8
                                                    * ((((v5 ^ 0xE47) + 8052) * (*(_DWORD *)(v6 + 3992) > v4)) ^ v5)))(a1, 0);
}

uint64_t sub_1002E4184@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002E40CC(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a1, a2);
}

uint64_t sub_1002E41C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(v7 + 408) - v5 + 31) = a1 >> (v6 & ((v8 ^ (16 * v4)) + 79));
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v4 ^ (83 * (v5 != 31)))) - 12))();
}

uint64_t sub_1002E4228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((v5 == 32) * (((v4 - 511) | 0x1000) - 5711)) ^ v4)) - 4))();
}

uint64_t sub_1002E4254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4
                                                     + 8
                                                     * (v5 | (4 * (*(_DWORD *)(v6 + 3988) > v4)) | ((*(_DWORD *)(v6 + 3988) > v4) << 6)))
                                         - (v5 + 3585)
                                         + 6168))(0);
}

uint64_t sub_1002E428C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002E41C8(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a2, a3, a4);
}

uint64_t sub_1002E42BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  char v8;
  int v9;

  *(_BYTE *)(*(_QWORD *)(v7 + 400) - v4 + 31) = a3 >> (v6 & ((108 * (v5 ^ 0x18)) ^ v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v5 ^ ((v4 == 31) * v9))) - 12))();
}

uint64_t sub_1002E4328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((v4 == 32) * (((v5 + 5716) | 0x18) ^ 0x28B)) ^ v5)) - 12))();
}

uint64_t sub_1002E4358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unsigned int a4@<W8>)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a3
                                                                       + 8
                                                                       * (v4 ^ (123 * (a4 < *(_DWORD *)(v5 + 8272)))))
                                                           - (v4 + 5740)
                                                           + 6160))(a1, a2, 0);
}

uint64_t sub_1002E4394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E42BC(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3), a4);
}

uint64_t sub_1002E43D0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                               + 8
                                                               * (v1 ^ (43
                                                                      * (*(_DWORD *)(v2 + 4040) == 62))))
                                                   - (((v1 ^ 0x853D1BCC) + 2059598512) ^ 0xACFLL)))(a1, 1072409782);
}

void sub_1002E4444()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E445C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 296) - v4 + 31) = a2 >> ((v5 + 36) & v6);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a4 + 8 * (v5 ^ (4967 * (v4 == 31)))) - 8))(1191327296);
}

uint64_t sub_1002E44C0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8
                                        * ((471 * ((((a3 ^ 0xD7) + 1) ^ (v3 == a3 - 2727)) & 1)) ^ a3))
                            - 8))();
}

uint64_t sub_1002E44FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a4
                                                              + 8
                                                              * ((((v4 + 203) ^ 0x2235) * (v5 < *(_DWORD *)(v6 + 3996))) ^ v4))
                                                  - 8))(a1, 0);
}

uint64_t sub_1002E4530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002E445C(a1, *(unsigned int *)(v4 - 0x62AA055D109F20F3), a3, a4);
}

uint64_t sub_1002E455C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 288) - v4 + 31) = a1 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((362 * (((v6 - 3955) ^ 0x948) + v4 == 32)) ^ v6))
                            - ((v6 + 2200) ^ 0x215CLL)))();
}

uint64_t sub_1002E45C4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((4489 * (v0 == 32)) ^ v1))
                            - ((v1 - 693604490) & 0x29579FFC)
                            + 6320))();
}

uint64_t sub_1002E4608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4 + 8 * (v5 ^ (62 * (v4 < *(_DWORD *)(v6 + 3992)))))
                                         - ((v5 - 511355978) & 0x1E7ABBBC ^ 0x18B0)))(0);
}

uint64_t sub_1002E4654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002E455C(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a2, a3, a4);
}

uint64_t sub_1002E4688(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 304) + ((v4 - 6011) ^ 0x244) - v5) = a4 >> v6;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1
                                                                       + 8
                                                                       * ((14366
                                                                         * (v5 - 8531 + (v4 + 1918) == 32)) ^ v4))
                                                           - 8))(*(_QWORD *)(v7 + 4000), a2, 4009204580);
}

uint64_t sub_1002E46F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v6 + 9744) + 8 * (((v5 == 32) * (((2 * a5) ^ 0x5B7E) - 5788)) ^ a5)))();
}

uint64_t sub_1002E4720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((a5 ^ 0x3882) - 5750) * (v5 < *(_DWORD *)(v6 + 3988))) ^ a5)))();
}

uint64_t sub_1002E4754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E4688(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E4790(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 7808) - v4 + 31) = a3 >> (v5 & (v3 ^ 0xC7));
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 8 * (v3 ^ (122 * (v4 != 31)))) - 12))(a1, *(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002E47FC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * ((v0 + 733) ^ 0xF33)) ^ v0)))();
}

uint64_t sub_1002E4824(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((((v3 + 484683044) & 0xE31C55B8 ^ 0x12C1) * (*(_DWORD *)(v4 + 8272) > v2)) ^ v3)))();
}

uint64_t sub_1002E4868(uint64_t a1, uint64_t a2)
{
  return sub_1002E4790(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E48A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 7816) - v4 + 31) = a4 >> (v6 & ((3 * (v5 ^ 0x65)) ^ 0xE8));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v5 ^ (7097 * (v4 == 31)))) - 12))();
}

uint64_t sub_1002E4910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v6 + 9744)
                              + 8 * ((61 * (v5 != ((a5 - 21) | 0x28) + ((a5 + 289) ^ 0xFFFFFECE))) ^ a5)))();
}

uint64_t sub_1002E494C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((v2 - 1050) | 0x528) + 7499) * (v1 < *(_DWORD *)(v3 + 9152))) ^ v2)))();
}

uint64_t sub_1002E4984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E48A0(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E49B0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t (*v9)(void);

  *(_BYTE *)(*(_QWORD *)(v7 + 7832) - v4 + 31) = v6 >> v5;
  v8 = (((95 * (v3 ^ 0x1767) - 1327) | 0xE80u) ^ 0xEE3) + v4 != 32;
  v9 = *(uint64_t (**)(void))(a2 + 8 * ((2 * v8) | (4 * v8) | v3));
  *(_DWORD *)(v7 + 7944) = a3;
  *(_QWORD *)(v7 + 8264) = *(_QWORD *)(v7 + 7824);
  return v9();
}

uint64_t sub_1002E4A14()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((9383 * (v0 == 32)) ^ v1))
                            - (((v1 + 2679) | 0x760u) ^ 0x1764)))();
}

uint64_t sub_1002E4A50(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v4 ^ (8883 * (a3 > v3)))) - ((v4 + 3183) | 0x568u) + 5980))();
}

uint64_t sub_1002E4A8C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002E49B0(a1, a2, a3);
}

uint64_t sub_1002E4AC0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                                                 + 8
                                                                                 * (int)(((v1 == (((v0 + 127) & 0xED) + 101))
                                                                                        * ((v0 - 1914391425) ^ 0x8DE4DA2A)) ^ (v0 - 3625)))
                                                                     - 8))(14264, 4677, 3872537911, 422428623);
}

void sub_1002E4B74()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E4B90@<X0>(uint64_t a1@<X4>, unint64_t a2@<X5>, unint64_t a3@<X6>, uint64_t a4@<X8>)
{
  char v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  *(_BYTE *)(*(_QWORD *)(v7 + 1832) + ((v6 + v8) & v9 ^ a2) - a4) = v5 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((23 * (a4 + 1 != ((v6 + 683) ^ a3))) ^ v6)) - 8))();
}

uint64_t sub_1002E4BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8 * (((v8 != ((v9 + v12) | a8) + ((v9 - 1259) | 0x240) + v10) * v11) ^ v9))
                            - 4))();
}

uint64_t sub_1002E4C14(int a1, unint64_t a2, int a3, unsigned int a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v6 ^ ((*(_DWORD *)(v7 + 3996) > v5) * a1))) - ((v6 + a3) & a4 ^ a2)))();
}

uint64_t sub_1002E4C48@<X0>(uint64_t a1@<X4>, unint64_t a2@<X5>, unint64_t a3@<X6>, uint64_t a4@<X8>)
{
  return sub_1002E4B90(a1, a2, a3, a4);
}

uint64_t sub_1002E4C8C@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                      + 8
                                                      * (int)(((a1 != ((v1 ^ 0x77) + 42))
                                                             * ((v1 ^ 0x853A3A97) + 2059595759)) ^ v1 ^ 0x72900))
                                          - 4))(2755644103);
}

void sub_1002E4D00()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E4D1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1808) - v3 + 31) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v5 ^ (7079 * (v3 == 31))))
                            - (((v5 + 1234) | 0x4A5u)
                             + 2072)
                            + 5387))();
}

uint64_t sub_1002E4D84(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((7376 * (v2 == 32)) ^ a2))
                            - (a2 - 2423)
                            + 888))();
}

uint64_t sub_1002E4DB4(uint64_t a1, int a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (a2 ^ (7431 * (v3 < *(_DWORD *)(v4 + 3996)))))
                                         - ((a2 - 3191) | 0x300u)
                                         + 888))(0);
}

uint64_t sub_1002E4DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E4D1C(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E4E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 608) - v3 + 31) = v6 >> v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * (v4 ^ (16237 * (v3 == 31)))) - 4))(32);
}

uint64_t sub_1002E4E7C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((2100 * (v1 == 32)) ^ v0))
                            - 3 * (v0 ^ 0x1D02u)
                            + 6175))();
}

uint64_t sub_1002E4EB4@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((v2 - 582170448) & 0x22B33A67 ^ 0x1327) * (*(_DWORD *)(v3 + 3992) > a2)) ^ v2))
                            - 8))();
}

uint64_t sub_1002E4EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E4E1C(a1, a2, a3);
}

uint64_t sub_1002E4F40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 632) - v7 + 31) = a5 >> ((((v5 - 35) & 0xFA ^ 0x19) + ((v5 + 28) | 0x22)) & a1);
  return (*(uint64_t (**)(_QWORD))(v6 + 8 * (v5 ^ (460 * (v7 != 31)))))((a1 + 8));
}

uint64_t sub_1002E4FC4(int a1, int a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((8927 * (a1 == ((4 * a2) ^ 0x2B00))) ^ a2))
                            - 12))();
}

uint64_t sub_1002E4FFC(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8 * (a2 ^ (10908 * (*(_DWORD *)(v4 + 3988) > v2))))
                                         - ((a2 - 560777938) & 0x216CD6F9 ^ 0x16FCLL)))(0);
}

uint64_t sub_1002E5048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E4F40(0, a2, a3 + 4, a4, *(unsigned int *)(a3 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E5080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 624) - v2 + 31) = v5 >> (((v4 - 49) & 0x6E ^ 0xD1u) & v3);
  return (*(uint64_t (**)(_QWORD, uint64_t))(a2
                                                    + 8 * ((14053 * (v2 + (v4 - 3786) == 2117)) ^ v4)))(*(_QWORD *)(v6 + 7872), 1446407401);
}

uint64_t sub_1002E50FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * ((1555 * (v4 == 32)) ^ a4))
                            - ((2 * a4) ^ 0x3458)))();
}

uint64_t sub_1002E5134@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((58
                                          * (((a2 < *(_DWORD *)(v3 + 8272)) ^ ((v2 ^ 0x48) - 1)) & 1)) ^ v2 ^ 0x2E48))
                            - (((v2 ^ 0x2E48) - 455695126) & 0x1B295B2F ^ 0x1A2ALL)))();
}

uint64_t sub_1002E51A4(uint64_t a1, uint64_t a2)
{
  return sub_1002E5080(a1, a2);
}

uint64_t sub_1002E51E0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((*(_DWORD *)(v1 + 4040) == ((((v0 & 0xEF) - 35) ^ 0xC8) - 5)) ^ v0 & 0x28ACDEEFu))
                            + 2235371539
                            - (((v0 & 0x28ACDEEF) - 1510090531) & 0xDF3F1A77)))();
}

void sub_1002E5260()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E527C(uint64_t a1, uint64_t a2)
{
  char v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1744) - v5 + 31) = (unint64_t)v4 >> v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * (((((v3 - 723) | 0x343) + 717) * (v5 != 31)) ^ v3))
                                          - ((v3 - 723) ^ 0xC10)))(2608541171);
}

uint64_t sub_1002E52EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((5779 * (v0 == 32)) ^ v1))
                            - (((v1 - 1267) | 0x483u) ^ 0xEEBLL)))();
}

uint64_t sub_1002E5324(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v3 ^ 0x1808) * (v2 < *(_DWORD *)(v4 + 3996))) ^ v3)) - 12))();
}

uint64_t sub_1002E535C(uint64_t a1, uint64_t a2)
{
  return sub_1002E527C(a1, a2);
}

uint64_t sub_1002E5394(unint64_t a1)
{
  uint64_t v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 976) - v1 + 31) = a1 >> v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((v3 - 1684426975) & 0x64664FAE) - 3445) * (v1 != 31)) ^ v3))
                            - 4))();
}

uint64_t sub_1002E5400(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744)
                              + 8 * (((v3 == 32) * ((a3 ^ 0x370) + ((a3 - 1295618047) & 0x4D398FF6) + 3346)) ^ a3)))();
}

uint64_t sub_1002E5444@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(_QWORD))(v2
                                           + 8
                                           * (((v4 & ~((v1 + 8) ^ (*(_DWORD *)(v3 + 3992) > a1)))
                                             * ((2 * (v1 ^ 0xAC9)) ^ 0xED6)) ^ v1)))(0);
}

uint64_t sub_1002E5488()
{
  uint64_t v0;

  return sub_1002E5394(*(unsigned int *)(v0 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E54C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 968) - v3 + 31) = v6 >> v5;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(a3
                                                                      + 8
                                                                      * ((((v4 - 3412) ^ 0x2789) * (v3 == 31)) ^ v4))
                                                          - 4))(*(_QWORD *)(v7 + 4000), (v4 - 3412), 1817179160);
}

uint64_t sub_1002E551C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * (a2 | (32 * (v2 != (a2 ^ 0x1AA)))))
                            - ((a2 + 506043733) & 0xE1D66FFE)
                            + 3802))();
}

uint64_t sub_1002E555C(uint64_t a1, int a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (a2 ^ 0x20 ^ (10734 * (v3 < *(_DWORD *)(v4 + 3988)))))
                            - ((2 * (a2 ^ 0x20)) ^ 0xD8Au)
                            + 3802))();
}

uint64_t sub_1002E5598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E54C0(a1, a2, a3);
}

uint64_t sub_1002E55C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 960) - v4 + 31) = a3 >> (v5 & ((v3 - 110) & 0xFB ^ 0x46));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v6 + 8 * (v3 ^ (26 * (v4 == 31)))))(a1, *(_QWORD *)(v7 + 7872));
}

uint64_t sub_1002E5640()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((7388 * (v0 == 32)) ^ v1))
                            - (v1 + 8562)
                            + 8995))();
}

uint64_t sub_1002E5674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3
                                                                       + 8
                                                                       * (v4 ^ (9168 * (*(_DWORD *)(v5 + 8272) > a3))))
                                                           - (((v4 + 7754) | 0x328u) ^ 0x2323)))(a1, a2, 0);
}

uint64_t sub_1002E56B8(uint64_t a1, uint64_t a2)
{
  return sub_1002E55C8(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E56F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 992) - v5 + 31) = a4 >> v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v4 - 7953) | 0x108F) - 3621) * (v5 == 31)) ^ v4)))();
}

uint64_t sub_1002E5764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * ((2387 * (v5 == (((a5 ^ 0x357) + 8995) ^ 0x2311))) ^ a5))
                            - 58 * (a5 ^ 0x357u)
                            + 800))();
}

uint64_t sub_1002E57AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * ((((117 * (a4 ^ 0x361)) ^ 0x2344)
                                                                                  * (v4 >= *(_DWORD *)(v6 + 9152))) ^ a4))
                                                                    - 12))(a1, a2, a3, 0);
}

uint64_t sub_1002E57EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E56F0(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E5828(uint64_t a1, int a2)
{
  int v2;
  unint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v8 = (v4 - 2144273556) | 0x50C1001u;
  *(_BYTE *)(*(_QWORD *)(v7 + 984) + (31 - v2)) = v3 >> v5;
  *(_QWORD *)(v7 + 9416) = v8;
  v9 = 149;
  if (v2 - 5294 + ((v4 - 2144273556) ^ 0x803114B9) < (v8 ^ 0x853D1037))
    v9 = 21;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4243 * (*(_BYTE *)(*(_QWORD *)(v7 + 9704) + v9) != 88)) ^ v4)) - 4);
  *(_DWORD *)(v7 + 9464) = 994009755;
  *(_DWORD *)(v7 + 4040) = 82;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  *(_QWORD *)(v7 + 9608) = *(_QWORD *)(v7 + 1752);
  *(_DWORD *)(v7 + 7944) = a2;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v10();
}

uint64_t sub_1002E5968(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                                              + 8
                                                              * (((v2 == 32) * (((v1 - 819148736) & 0x30D327BA) - 1073)) ^ v1))
                                                  - 4))(a1, *(unsigned int *)(v3 + 8548));
}

uint64_t sub_1002E59AC@<X0>(unsigned int a1@<W1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (2508 * (a1 > a2)))) - (v2 - 4101) + 1190))();
}

uint64_t sub_1002E59E0(uint64_t a1, int a2)
{
  return sub_1002E5828(a1, a2);
}

uint64_t sub_1002E5A14@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 + 9744)
                                                    + 8
                                                    * (int)((((v1 - 2753) ^ 0x853D008C ^ (v1 - 671146416) & 0xAD3DD677)
                                                           * (a1 != 21)) ^ (v1 - 2753))))(0, 1795026108);
}

void sub_1002E5A84()
{
  JUMPOUT(0x1002E5A98);
}

uint64_t sub_1002E5B08(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1728) - a1 + ((v4 - 1622839743) & 0x60BA9BBE) - 6767) = a2 >> v3;
  return (*(uint64_t (**)(void))(a3 + 8 * (v4 ^ (13895 * (a1 == 31)))))();
}

uint64_t sub_1002E5B80()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((28 * (v0 == 32)) ^ v1))
                            - (((v1 - 278) | 0x1000u) ^ 0x1082)))();
}

uint64_t sub_1002E5BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3
                                                              + 8
                                                              * (((v4 + 4971) * (*(_DWORD *)(v5 + 3996) > v3)) ^ v4))
                                                  - 12))(a1, 0);
}

uint64_t sub_1002E5BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E5B08(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002E5C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  unsigned int v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 832) - v3 + 31) = (unint64_t)v6 >> v4;
  return (*(uint64_t (**)(_QWORD, uint64_t))(a3
                                                    + 8
                                                    * (((((v5 - 1894166226) & 0x70E68E4F) + 2175) * (v3 == 31)) ^ v5)))(*(_QWORD *)(v7 + 3304), 1262705157);
}

uint64_t sub_1002E5C8C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 ^ 0x3C47) - 7928)) ^ v1)))();
}

uint64_t sub_1002E5CB8@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((v2 - 6278) | 0x24C1) + 4998) * (*(_DWORD *)(v3 + 3992) > a2)) ^ v2)))();
}

uint64_t sub_1002E5CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E5C1C(a1, a2, a3);
}

uint64_t sub_1002E5D38(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 864) + ((v3 - 2261) ^ 0xED4) - v2) = a2 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (14 * (v2 == 31)))) - 4))();
}

uint64_t sub_1002E5D9C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((5638 * (v0 == 32)) ^ v1))
                            - (v1 ^ 0x11E7u)
                            + 6040))();
}

uint64_t sub_1002E5DD0(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3
                                                              + 8
                                                              * (v2 ^ ((4 * (*(_DWORD *)(v4 + 3988) > v1)) | (32 * (*(_DWORD *)(v4 + 3988) > v1)))))
                                                  - ((v2 + 4441) ^ 0x17A8)))(a1, 0);
}

uint64_t sub_1002E5E0C(uint64_t a1)
{
  return sub_1002E5D38(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E5E44(uint64_t a1)
{
  int v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 856) - v2 + 31) = v4 >> v3;
  v6 = ((((v1 - 487314751) & 0x1D0BDEEF) + 3848) ^ ((v1 + 6056) | 0x110u)) + v2 != 32;
  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8 * (((8 * v6) | (32 * v6)) ^ v1)))(*(_QWORD *)(v5 + 7872), 4013663304);
}

uint64_t sub_1002E5EC0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8 * (((v3 == a3 - 3755) * ((a3 - 960671716) & 0x3942AFDF ^ 0x26F6)) ^ a3))
                            - 4))();
}

uint64_t sub_1002E5F08@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((4 * (v4 & ~((v2 + 1174831128) ^ 0x46068BC5 ^ (a2 < *(_DWORD *)(v3 + 8272))))) & 0xFFFFFFF7 | (8 * (((v2 + 24) ^ 0xC5 ^ ~(a2 < *(_DWORD *)(v3 + 8272))) & 1))) ^ v2))
                            - ((v2 + 1174831128) & 0xB9F97FEB ^ 0xECFLL)))();
}

uint64_t sub_1002E5F68(uint64_t a1)
{
  return sub_1002E5E44(a1);
}

uint64_t sub_1002E5F94(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 848) + ((2 * v2) ^ 0xA2BLL) - v3) = a2 >> v4;
  return (*(uint64_t (**)(void))(v5 + 8 * (v2 ^ (2943 * (v3 == 31)))))();
}

uint64_t sub_1002E5FF8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744)
                              + 8 * ((1021 * (v4 == ((a4 - 1793300600) & 0x6AE37FBF) - 1274)) ^ a4)))();
}

uint64_t sub_1002E6034(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v5
                                                    + 8
                                                    * ((((653 * (a4 ^ 0x1DD0)) ^ 0x515) * (*(_DWORD *)(v6 + 9152) > v4)) ^ a4)))(a1, 0);
}

uint64_t sub_1002E6070(uint64_t a1)
{
  return sub_1002E5F94(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E60A4(int a1)
{
  char v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v3 - 2059596029);
  *(_BYTE *)(*(_QWORD *)(v6 + 872) - v4 + 31) = v2 >> v1;
  v7 = *(uint64_t (**)(void))(v5 + 8 * (v3 ^ (3953 * (v4 != 31))));
  *(_DWORD *)(v6 + 9464) = 994009531;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1832);
  *(_DWORD *)(v6 + 7944) = a1;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002E61A8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                     + 8 * ((8542 * (v0 == ((v1 - 1834) | 0x14) - 244)) ^ v1))
                                         - 12))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1002E61E0@<X0>(unsigned int a1@<W0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (1487 * (a1 > a2)))) - ((v2 - 106869357) & 0x65EAB56) + 264))();
}

uint64_t sub_1002E6224(int a1)
{
  return sub_1002E60A4(a1);
}

uint64_t sub_1002E6258()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((60
                                          * (((*(_DWORD *)(v1 + 4040) == 66) ^ (v0 + 5)) & 1)) ^ (v0 + 325)))
                            - (((v0 + 85450478) | 0x80251017) ^ 0x853D101BLL)))();
}

void sub_1002E62CC()
{
  JUMPOUT(0x1002E62E0);
}

uint64_t sub_1002E6330()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((14
                                          * (*(_DWORD *)(v1 + 4040) == ((v0 + 49) ^ 0x75))) ^ v0))
                            - 8))();
}

void sub_1002E638C()
{
  JUMPOUT(0x1002E9680);
}

uint64_t sub_1002E63B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1296) - v4 + 31) = v6 >> ((3 * ((v5 + 72) ^ 0x3A) - 31) & v3);
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(a3 + 8 * (v5 ^ (15953 * (v4 == 31)))) - 8))(*(_QWORD *)(v7 + 3312), 985781916);
}

uint64_t sub_1002E6424()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8
                                                       * (v1 ^ (32 * (v3 & ~(((v1 ^ 0x5F6) - 1450) ^ (v0 == 32)))))))();
}

uint64_t sub_1002E6450@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((a2 + 1318184369) & 0xB16E1FF8) + 7183) * (v2 < *(_DWORD *)(v3 + 3996))) ^ a2)))();
}

uint64_t sub_1002E6494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E63B0(a1, a2, a3);
}

uint64_t sub_1002E64D0@<X0>(unint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 680) - a2 + 31) = a1 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((11
                                          * (((v2 + 2460) ^ 0xCE0) + a2 != ((v2 + 491) ^ 0x510))) ^ v2))
                            - 12))();
}

uint64_t sub_1002E6538()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (v0 ^ 0x24AE)) ^ v0)))();
}

uint64_t sub_1002E6564(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v3
                                                    + 8
                                                    * ((((93 * (v2 ^ 0x539)) ^ 0x31F) * (v1 < *(_DWORD *)(v4 + 3992))) ^ v2)))(a1, 0);
}

uint64_t sub_1002E65A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002E64D0(*(unsigned int *)(a1 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E65CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 712) - v2 + 7 * (v4 ^ 0x292u) - 3266) = v5 >> (v3 & (v4 - 70));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2 + 8 * (v4 ^ (2132 * (v2 == 31)))) - 12))(*(_QWORD *)(v6 + 4000));
}

uint64_t sub_1002E6640(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (((v4 == 32) * (279 * (a4 ^ 0xCE2) + 9771)) ^ a4))
                            - 8))();
}

uint64_t sub_1002E6678(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (a4 ^ ((*(_DWORD *)(v5 + 3988) > v4) | (4 * (*(_DWORD *)(v5 + 3988) > v4)))))
                            - 93 * (a4 ^ 0xCE8u)
                            + 829))();
}

uint64_t sub_1002E66B4(uint64_t a1, uint64_t a2)
{
  return sub_1002E65CC(a1, a2);
}

uint64_t sub_1002E66DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, int a3@<W8>)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 704) + (31 - a3)) = a2 >> v4;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * (((a3 + 1 == ((v3 - 2563) ^ 0x12E))
                                                                 * ((v3 - 1283320595) & 0x4C7DEAFB ^ 0x265C)) ^ v3))
                                                   - 12))(a1, 1284225813);
}

uint64_t sub_1002E6758()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((10481 * (v1 == ((v0 - 905788163) & 0x35FD3B19) - 2801)) ^ v0))
                            - 8))();
}

uint64_t sub_1002E6798(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * (v3 ^ (11548 * (v2 < *(_DWORD *)(v5 + 8272)))))
                                                           - ((v3 + 23) ^ 0xB19)))(a1, a2, 0);
}

uint64_t sub_1002E67D0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return sub_1002E66DC(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E6808(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 696) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((97 * (((v2 - 4156) ^ 0x3FALL) + v3 != 32)) ^ v2))
                            - (v2 ^ 0x1539u)
                            + 262))();
}

uint64_t sub_1002E6874(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * ((70 * (v6 & ~((a4 + 4905) ^ 0x157F ^ (v4 == 32)))) ^ a4))
                            - 12))();
}

uint64_t sub_1002E68B0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 ^ (7106 * (v2 < *(_DWORD *)(v3 + 9152)))))
                            - 1035 * (a2 ^ 0x14Du)
                            + 5163))();
}

uint64_t sub_1002E68F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E6808(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E6928(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v4 - 2059596214);
  *(_BYTE *)(*(_QWORD *)(v6 + 728) - v5 + 31) = v3 >> (v2 & (v4 + 50));
  v7 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 ^ (5626 * (v5 != 31)))) - ((v4 + 558) ^ 0x3F3));
  *(_DWORD *)(v6 + 9464) = 994009803;
  *(_DWORD *)(v6 + 4040) = 98;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1712);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002E6A3C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * (((v0 != (((v1 - 814) | 0x100) ^ 0x1ED)) * (((v1 - 1015) | 0x42A) + 935)) ^ v1))
                            - 12))();
}

uint64_t sub_1002E6A80@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (9545 * (a3 < a2)))) - (v3 - 609) + 449))();
}

uint64_t sub_1002E6AB0(uint64_t a1, int a2)
{
  return sub_1002E6928(a1, a2);
}

uint64_t sub_1002E6AE0@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (v1 ^ (10071 * (a1 == 117))))
                            - ((((v1 - 3264) | 0x402u) - 2059597044) ^ 0x853D101FLL)))();
}

void sub_1002E6B94()
{
  JUMPOUT(0x1002E6BACLL);
}

uint64_t sub_1002E6BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  char v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  int v10;

  *(_BYTE *)(*(_QWORD *)(v9 + 296) + ((((v7 + 1380752869) & 0xADB37D7E ^ 0xFFFFDF6E) + (v7 ^ 0xC1D)) ^ v5)) = v8 >> v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a5 + 8 * (v7 ^ ((2 * (v5 & 1) + (v5 ^ 1u) < 0x20) * v10)))
                                          - 8))(3535264316);
}

uint64_t sub_1002E6C78(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(a5 + 8 * ((43 * (v5 != ((a2 + 21) ^ v6) - 2294)) ^ a2)))();
}

uint64_t sub_1002E6CA0@<X0>(int a1@<W3>, uint64_t a2@<X4>, int a3@<W5>, int a4@<W8>)
{
  unsigned int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(a2 + 8 * (((((a4 + a3) & a1) + 1279) * (*(_DWORD *)(v5 + 3996) > v4)) ^ a4)))();
}

uint64_t sub_1002E6CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002E6BF8(a1, a2, a3, a4, a5);
}

uint64_t sub_1002E6D10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  int v11;

  *(_BYTE *)(*(_QWORD *)(v10 + 288) - v7 + (((v8 - 1446) | 2) ^ 0x36Fu) * v11 + a7) = a1 >> v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v8 ^ (35 * (v7 == 31)))) - 8))();
}

uint64_t sub_1002E6D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v5 == 32) * v8) ^ v6)) - (v6 ^ v7) + 2322))();
}

uint64_t sub_1002E6D9C@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (((v2 + v4) * (*(_DWORD *)(v3 + 3992) > a2)) ^ v2))
                                         - 4))(0);
}

uint64_t sub_1002E6DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_1002E6D10(*(unsigned int *)(v7 - 0x62AA055D109F20F3), a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1002E6DF8@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  *(_BYTE *)(*(_QWORD *)(v5 + 304) - v2 + 31) = v4 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v2 + 1 == ((a2 - 1747) | 0x110u) - 850) * ((a2 + v6) & v7 ^ v8)) ^ a2))
                            - 8))();
}

uint64_t sub_1002E6E48(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((1935 * (v8 == 32)) ^ a2))
                            - ((((a2 + 1808841737) ^ 0x6BD0B64Eu) - 1512) ^ (a2 + 1808841737) & a8)))();
}

uint64_t sub_1002E6E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8 * (((((v6 + 1475) | 0x31) - 2306) * (v5 >= *(_DWORD *)(v7 + 3988))) ^ v6))
                            - 12))();
}

uint64_t sub_1002E6EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return sub_1002E6DF8(a5, (v5 + 49) ^ 0xA47u);
}

uint64_t sub_1002E6EF4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((10515
                                          * (*(_DWORD *)(v1 + 4040) == (((2 * v0) ^ 0xD5) + 31))) ^ v0))
                            - 4))();
}

void sub_1002E6F54()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E6F70@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1792) - a2 + 31) = v4 >> (v3 & ((v2 - 73) ^ 0xA1));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v2 ^ (70 * (a2 != 31)))) - 4))((v2 - 2144));
}

uint64_t sub_1002E6FE8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((59 * ((a2 ^ 0xF9 ^ (v2 == 32)) & 1)) ^ a2))
                            - (a2 + 7)
                            + 2653))();
}

uint64_t sub_1002E7024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v3 ^ 0x225D) * (*(_DWORD *)(v5 + 3996) > v4)) ^ v3)) - 8))();
}

uint64_t sub_1002E705C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1002E6F70(a1, a2);
}

uint64_t sub_1002E708C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1248) - v2 + 7 * (v4 ^ 0x9D4u) - 774) = v5 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((7363 * (v2 + 1 == ((v4 - 2144) ^ 0x167))) ^ v4))
                            - 4))();
}

uint64_t sub_1002E7100(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * (((v1 == ((a1 + 1216124408) & 0xB78369FD) - 285)
                                * (((a1 - 2043508576) & 0x79CD7FBF) + 2709)) ^ a1)))();
}

uint64_t sub_1002E7154(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((((*(_DWORD *)(v4 + 3992) > v2) ^ v3) & 1)
                                * (((v3 - 1031943158) & 0x3D8233FF) - 205)) ^ v3)))();
}

uint64_t sub_1002E71A4(uint64_t a1, uint64_t a2)
{
  return sub_1002E708C(a1, a2);
}

uint64_t sub_1002E71D8(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  char v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 432) - v1 + 31) = v4 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((2822 * (v1 + 1 == ((v2 + 1815) ^ 0x1C5BLL))) ^ v2))
                            - (v2 ^ 0x1560)))();
}

uint64_t sub_1002E7244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8 * (((v5 == 32) * (((a5 - 293) | 0x114) + 4600)) ^ a5))
                            - 8))();
}

uint64_t sub_1002E7280@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (49 * (*(_DWORD *)(v3 + 3988) <= a2))))
                            - (((v2 ^ 0x1670u) - 4671) ^ 0x32DLL)))();
}

uint64_t sub_1002E72C4(uint64_t a1)
{
  return sub_1002E71D8(a1);
}

uint64_t sub_1002E7308@<X0>(unint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 424) - v2 + 31) = a1 >> v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (a2 ^ (3070 * (v2 != 31)))) - 12))(2026258240);
}

uint64_t sub_1002E736C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744)
                              + 8
                              * ((((a4 ^ (v4 == 32)) & 1) * ((a4 - 1417313410) & 0x547A7C97 ^ 0x1C7B)) ^ a4)))();
}

uint64_t sub_1002E73C8(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v4
                                                             + 8
                                                             * (((((v3 - 6961) | 0x203) + 12446)
                                                               * (*(_DWORD *)(v5 + 8272) > v2)) ^ v3)))(a1, a2, 0);
}

uint64_t sub_1002E7404(uint64_t a1, uint64_t a2)
{
  int v2;

  return sub_1002E7308(*(unsigned int *)(a2 - 0x62AA055D109F20F3), v2 - 6446);
}

uint64_t sub_1002E7438(unint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1264) - v3 + (v2 + 6843) - 7655) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v2 ^ ((8 * (v3 != 31)) | (32 * (v3 != 31)))))
                            - ((v2 + 1105572531) & 0xBE1A5EAF)
                            + 5282))();
}

uint64_t sub_1002E74B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * (((v5 != 32) * (a5 - 7674)) ^ a5))
                            - (a5 + 4)
                            + 7686))();
}

uint64_t sub_1002E74F4@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (int)(a2 ^ (382 * (v2 < *(_DWORD *)(v3 + 9152)))))
                                         - (a2 ^ 0x1E0ELL)))(0);
}

uint64_t sub_1002E7530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E7438(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E7570@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_BYTE *)(*(_QWORD *)(v6 + 152) - a2 + 31) = v3 >> v2;
  *(_QWORD *)(v6 + 9416) = (v4 - 2059923921) | 0x50010u;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ (659 * (a2 != 31)))) - 12);
  *(_DWORD *)(v6 + 9464) = 994009609;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1800);
  *(_DWORD *)(v6 + 7944) = a1;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002E7678()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8
                                                                              * (((v0 == 32) * (v1 ^ 0x25BA)) ^ v1))
                                         - 8))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1002E76AC(unsigned int a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 - 4822) ^ 0xB7E) * (a1 > v1)) ^ v2)) - 8))();
}

uint64_t sub_1002E76E0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1002E7570(a1, a2);
}

uint64_t sub_1002E7708()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * (((((*(_DWORD *)(v1 + 4040) == 74) ^ (v0 - 18)) & 1)
                                          * (v0 - 7546)) ^ v0))
                            - 12))();
}

void sub_1002E776C()
{
  JUMPOUT(0x1002E9680);
}

uint64_t sub_1002E7784(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1776) - v3 + 31) = v4 >> v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2
                                                      + 8
                                                      * ((560 * (v3 + 1 != (((v5 ^ 0xDF3u) - 2675) ^ 0x757))) ^ v5))
                                          - 12))(433290140);
}

uint64_t sub_1002E77E8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (v1 | (16 * (v0 != ((v1 + 2590) | 0x11) - 7161))))
                            - ((v1 + 16) ^ 0x11F2)))();
}

uint64_t sub_1002E7824@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 ^ (1481 * (*(_DWORD *)(v3 + 3996) > v2))))
                            - ((a2 - 1237406655) & 0x49C15DDD ^ 0x1C11)))();
}

uint64_t sub_1002E7870(uint64_t a1, uint64_t a2)
{
  return sub_1002E7784(a1, a2);
}

uint64_t sub_1002E78A4(unint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1136) - v3 + 31) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((((v2 ^ 0x1B7D) + 430) ^ v2 ^ 0x153C) * (v3 != 31)) ^ v2)) - 12))();
}

uint64_t sub_1002E7908(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744) + 8 * (((v3 == 32) * ((3589 * (a3 ^ 0x775)) ^ 0x96C)) ^ a3)))();
}

uint64_t sub_1002E793C@<X0>(uint64_t a1@<X1>, int a2@<W2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD))(a1 + 8 * (((a2 + 10052) * (*(_DWORD *)(v3 + 3992) > a3)) ^ a2)))(0);
}

uint64_t sub_1002E7970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E78A4(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E799C(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1128) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1
                                                      + 8
                                                      * (int)(((v3 + 1 == ((v2 - 1083955554) & 0x409BDFF6 ^ 0x916))
                                                             * ((v2 + 1052400308) & 0xC145BAFF ^ 0x182C)) ^ v2))
                                          - 8))(1700729504);
}

uint64_t sub_1002E7A28()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((81 * (v1 == 32)) ^ v0))
                            - (v0 ^ 0xB97u)
                            + 661))();
}

uint64_t sub_1002E7A58(uint64_t a1)
{
  unsigned int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 + 126) * (v1 < *(_DWORD *)(v4 + 3988))) ^ v3)) - 12))();
}

uint64_t sub_1002E7A84(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E799C(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E7AB8(unint64_t a1)
{
  int v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1120) - v2 + 31) = a1 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((v2 + 1 == ((v1 - 2105821205) & 0x7D844D3D) - 2017)
                                          * (((v1 - 209331555) & 0xC7A3ADF) - 3311)) ^ v1))
                            - 8))();
}

uint64_t sub_1002E7B3C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8 * ((12716 * (v3 == 32)) ^ a3))
                            - (((a3 - 5501) ^ 0xFFFFFFFFFFFFE516)
                             + ((a3 - 2117) | 0x82Au))))();
}

uint64_t sub_1002E7B80@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((111
                                                       * (((a1 < *(_DWORD *)(v3 + 8272)) ^ ((v1 + 27) ^ (v1 - 66))) & 1)) ^ v1))
                                         - 8))(0);
}

uint64_t sub_1002E7BD4()
{
  uint64_t v0;

  return sub_1002E7AB8(*(unsigned int *)(v0 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E7C0C(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1280) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((8664 * (((((v2 - 446) | 1u) + 4966) ^ ((v2 + 322) | 0x1066u)) + v3 == 32)) ^ v2))
                            - 8))();
}

uint64_t sub_1002E7C7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * (((v4 == 32) * (a4 - 2033)) | a4)) - 8))();
}

uint64_t sub_1002E7CA4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * (((1247 * (a4 ^ 0x803) + 9702) * (v4 < *(_DWORD *)(v5 + 9152))) ^ a4))
                            - 8))();
}

uint64_t sub_1002E7CE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E7C0C(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E7D18(int a1)
{
  char v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = *(_QWORD *)(v6 + 144) - v4;
  *(_QWORD *)(v6 + 9416) = ((v3 + 1280294305) & 0xB3B05BF7) - 2059602767;
  *(_BYTE *)(v7 + 31) = v2 >> (v1 & ((((v3 - 95) & 0xF7) - 79) ^ 0xE8));
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (10667 * (v4 != 31)))) - 8);
  *(_DWORD *)(v6 + 9464) = 994009731;
  *(_DWORD *)(v6 + 4040) = 74;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1840);
  *(_DWORD *)(v6 + 7944) = a1;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002E7E38()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                     + 8 * ((254 * (v1 == ((v0 - 6553) ^ 0x1ED))) ^ v0))
                                         - 12))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1002E7E70@<X0>(unsigned int a1@<W0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (1393 * (a2 < a1)))) - (v3 ^ 0x1C1)))();
}

uint64_t sub_1002E7EA0(int a1)
{
  return sub_1002E7D18(a1);
}

uint64_t sub_1002E7ED8@<X0>(char a1@<W4>, char a2@<W5>, unsigned __int8 a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8
                                        * ((885 * (a3 == ((a2 + v3 - 93 - 46) ^ a1))) ^ (v3 - 1885)))
                            - (((v3 - 211) | 0x22Fu) ^ 0x1627)))();
}

void sub_1002E7F3C()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E7F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1296) - v5 + ((v4 + 1095502124) & 0xBEB3FEFF) - 5648) = v6 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * ((6841 * (v5 + 1 == ((v4 - 2087257353) & 0x7C68FFE7 ^ 0x8C2))) ^ v4))
                            - 8))();
}

uint64_t sub_1002E7FE8(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((16353 * (v1 == a1 - 5647)) ^ a1)) - 4))();
}

uint64_t sub_1002E8018(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * (((((a1 - 3118) | 0x402) + 9593) * (*(_DWORD *)(v4 + 3996) > v3)) ^ a1))
                            - 4))();
}

uint64_t sub_1002E8054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E7F58(a1, a2, a3);
}

uint64_t sub_1002E8088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 680) - v3 + 31) = v6 >> v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * (v4 | (v3 == 31) | (4 * (v3 == 31)))) - 12))(2163153090);
}

uint64_t sub_1002E80E8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744) + 8
                                                       * ((612 * (v2 == ((4 * a2) ^ 0xFFFFDFF6) + a2 - 1344)) ^ a2)))();
}

uint64_t sub_1002E811C@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v2 ^ 0x202A) + 1330) ^ ((v2 ^ 0x2B5C) + 14)) * (*(_DWORD *)(v3 + 3992) <= a2)) ^ v2 ^ 0x2B5C)))();
}

uint64_t sub_1002E815C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E8088(a1, a2, a3);
}

uint64_t sub_1002E8188(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 712) - v3 + 31) = a1 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((((v4 + 5635) ^ 0x1884) + 1105) * (v3 == 31)) ^ v4)) - 12))();
}

uint64_t sub_1002E81E8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 ^ 0x289) - 914)) ^ v1))
                            - 8))();
}

uint64_t sub_1002E8214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3
                                                     + 8
                                                     * ((((5 * (v4 ^ 0x195)) ^ 0x1FFC) * (*(_DWORD *)(v5 + 3988) > v3)) ^ v4))
                                         - 8))(0);
}

uint64_t sub_1002E824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E8188(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E827C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 704) - v4 + 31) = a3 >> v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6
                                                      + 8
                                                      * ((467 * (v4 + 1 == ((v3 - 1688) | 0x1205u) - 4645)) ^ v3))
                                          - ((v3 - 722306781) & 0x2B0D99AE ^ 0x19A6)))(2066423545);
}

uint64_t sub_1002E8300()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((12540 * (v0 == ((v1 - 4818) ^ 0x6F8))) ^ v1))
                            - 12))();
}

uint64_t sub_1002E8334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                       + 8
                                                                       * (v4 ^ (15414 * (*(_DWORD *)(v6 + 8272) > a3))))
                                                           - v3
                                                           + 1740))(a1, a2, 0);
}

uint64_t sub_1002E8364(uint64_t a1, uint64_t a2)
{
  return sub_1002E827C(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E83A0(unint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 696) - v3 + ((v2 + 1832302820) & 0x92C94D5E) - 3375) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v2 ^ (4158 * (v3 == 31)))) - ((v2 + 2874) ^ 0x1249)))();
}

uint64_t sub_1002E841C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * (((v4 == a4 - 4645) * (a4 + 10412)) ^ a4)) - 8))();
}

uint64_t sub_1002E8450(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2
                                                     + 8
                                                     * (int)((((((a4 + 387386642) ^ 0x1717185C) + 2841) ^ (a4 + 387386642) & 0xE8E8F2ED)
                                                            * (v4 >= *(_DWORD *)(v5 + 9152))) ^ (a4 - 33)))
                                         - 8))(0);
}

uint64_t sub_1002E84A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E83A0(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E84D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;

  v11 = v8 ^ 0x853D11CF;
  *(_QWORD *)(v10 + 9416) = v11;
  *(_BYTE *)(*(_QWORD *)(v10 + 728) - v9 + 31) = v7 >> v6;
  v12 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * (int)(((v11 - a6 + 1957) * (v9 != 31)) ^ v8)) - 12);
  *(_DWORD *)(v10 + 9464) = 994009555;
  *(_QWORD *)(v10 + 9456) = *(_QWORD *)(v10 + 7048);
  v13 = *(_QWORD *)(v10 + 1712);
  *(_QWORD *)(v10 + 9608) = v13;
  *(_DWORD *)(v10 + 7944) = a3;
  *(_DWORD *)(v10 + 5344) = *(_DWORD *)(v10 + 6072);
  *(_DWORD *)(v10 + 5340) = *(_DWORD *)(v10 + 7616);
  *(_DWORD *)(v10 + 5348) = *(_DWORD *)(v10 + 6084);
  *(_DWORD *)(v10 + 5336) = *(_DWORD *)(v10 + 6080);
  *(_DWORD *)(v10 + 9664) = *(_DWORD *)(v10 + 6976);
  *(_DWORD *)(v10 + 9616) = *(_DWORD *)(v10 + 7096);
  *(_DWORD *)(v10 + 9600) = *(_DWORD *)(v10 + 7020);
  *(_DWORD *)(v10 + 9488) = *(_DWORD *)(v10 + 7064);
  *(_DWORD *)(v10 + 9472) = *(_DWORD *)(v10 + 7136);
  *(_DWORD *)(v10 + 4292) = *(_DWORD *)(v10 + 8280);
  *(_DWORD *)(v10 + 5312) = *(_DWORD *)(v10 + 9680);
  return v12(v13);
}

uint64_t sub_1002E85C8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((10016 * (v0 == ((v1 - 1143230835) & 0x442445FC) - 440)) ^ v1)))();
}

uint64_t sub_1002E8608@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (v3 | (a2 > a3))))();
}

uint64_t sub_1002E8630(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_1002E84D0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1002E865C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * (int)((((a6 + v6 - 2662) ^ 0x853D107F)
                                               * (*(_DWORD *)(v7 + 4040) != 114)) ^ v6))
                            - ((v6 - 445) ^ 0x17F9)))();
}

void sub_1002E86C0()
{
  JUMPOUT(0x1002E9680);
}

uint64_t sub_1002E86D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1800) - v4 + 31) = v5 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (int)(((v6 + 9752) * (v4 == 31)) ^ v6)) - (v6 ^ 0x19A6)))();
}

uint64_t sub_1002E8744(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v1 == 32) * (((8 * a1) ^ 0xA810) + 7368)) ^ a1))
                            - 4))();
}

uint64_t sub_1002E877C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((105
                                          * (((*(_DWORD *)(v3 + 3996) > v2) ^ (-29 * (a2 ^ 0x83))) & 1)) ^ a2))
                            - ((a2 - 5648) | 0x1826u)
                            + 6570))();
}

uint64_t sub_1002E87D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E86D8(a1, a2, a3);
}

uint64_t sub_1002E8814(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 448) - v3 + 31) = a2 >> v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * (v4 ^ (52 * (v3 != 31)))) - 12))(2114652037);
}

uint64_t sub_1002E8878()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * (v0 ^ 0x98A)) ^ v0)))();
}

uint64_t sub_1002E88A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 8 * (((v3 - 1894) * (a3 < *(_DWORD *)(v5 + 3992))) ^ v4)))(a1, 0);
}

uint64_t sub_1002E88CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E8814(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002E8908(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 440) - v3 + 31) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((v3 + 1 == (((v5 ^ 0x183Bu) + 2974) ^ 0xC3BLL)) * (13 * (v5 ^ 0x183B) - 1108)) ^ v5))
                            - 12))();
}

uint64_t sub_1002E8974()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * (478 * (v1 ^ 0xC16) + 5840)) ^ v1))
                            - 12))();
}

uint64_t sub_1002E89AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (((v4 - 3049) * (v3 < *(_DWORD *)(v5 + 3988))) ^ v4))
                                         - 12))(0);
}

uint64_t sub_1002E89DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E8908(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E8A10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 472) - v5 + 31) = a4 >> v7;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(v6 + 8 * (v4 ^ (1078 * (v5 == 31))))
                                                  - ((v4 + 861324599) & 0xCCA931CF)
                                                  + 4414))(*(_QWORD *)(v8 + 7872), 707523889);
}

uint64_t sub_1002E8A88()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((10215 * (v0 == ((v1 - 867355394) & 0x33B2DEEB) - 6691)) ^ v1))
                            - 12))();
}

uint64_t sub_1002E8ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W8>)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                + 8
                                                                                * (int)(v5 ^ (7673
                                                                                            * (*(_DWORD *)(v6 + 8272) > a4))))
                                                                    - (v5 ^ 0x655)))(a1, a2, a3, 0);
}

uint64_t sub_1002E8B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E8A10(a1, a2, a3 + 4, *(unsigned int *)(a3 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E8B44(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 464) - v3 + 31) = a2 >> (v4 & ((v2 - 111) ^ 0xB5));
  return (*(uint64_t (**)(void))(v5 + 8 * ((1953 * (v3 != 31)) ^ v2)))();
}

uint64_t sub_1002E8BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8
                                        * ((7
                                          * (v5 != ((((a5 - 576165195) & 0x22579FB9) - 2636) ^ (a5 + 1678806661) & 0x9BEF717D))) ^ a5))
                            - 12))();
}

uint64_t sub_1002E8C0C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3
                                                              + 8
                                                              * (int)(a2 ^ (14506 * (v2 < *(_DWORD *)(v4 + 9152)))))
                                                  - (a2 ^ 0x1141)))(a1, 0);
}

uint64_t sub_1002E8C48(uint64_t a1)
{
  return sub_1002E8B44(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E8C84(int a1)
{
  char v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v3 ^ 0x57Du) - 2059596882;
  *(_BYTE *)(*(_QWORD *)(v6 + 456) - v4 + 31) = v2 >> v1;
  v7 = *(uint64_t (**)(void))(v5 + 8 * (v3 ^ (6829 * (v4 != 31))));
  *(_DWORD *)(v6 + 9464) = 994009851;
  *(_DWORD *)(v6 + 4040) = 114;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1552);
  *(_DWORD *)(v6 + 7944) = a1;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002E8D80()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                     + 8
                                                     * ((7647 * (v0 == ((v1 - 1510251348) & 0x5A0497FE ^ 0x134))) ^ v1))
                                         - 12))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1002E8DC8@<X0>(unsigned int a1@<W0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (16 * (a1 > a2)))) - ((2 * v2) ^ 0x9C6u) + 264))();
}

uint64_t sub_1002E8DF4(int a1)
{
  return sub_1002E8C84(a1);
}

uint64_t sub_1002E8E38()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 9744)
                                            + 8
                                            * (((((((v0 - 695) | 0x45B) ^ 0x24) & 0xBE) == *(_DWORD *)(v1 + 4040))
                                              * (((v0 - 444740892) & *(_DWORD *)(v1 + 44)) + 2059601025)) ^ v0)))(1327564430);
}

void sub_1002E8EB4()
{
  JUMPOUT(0x1002E9680);
}

uint64_t sub_1002E8ECC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1664) - v5 + 31) = a1 >> v4;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((((v5 == 31) ^ (v3 - 22)) & 1) * (21 * (v3 ^ 0xB1A) - 3421)) | v3)))();
}

uint64_t sub_1002E8F34()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((12266 * (v0 == 32)) ^ v1))
                            - (v1 - 422)
                            + 2989))();
}

uint64_t sub_1002E8F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (53 * (*(_DWORD *)(v5 + 3996) > v3))))
                                         - ((v4 - 258060646) & 0xF61AFBF ^ 0xBB5)))(0);
}

uint64_t sub_1002E8FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E8ECC(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E8FEC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 376) + ((v4 - 618648296) & 0x24DFD5B3 ^ 0x5BCLL) - a2) = v3 >> v2;
  return (*(uint64_t (**)(uint64_t))(a1 + 8 * ((2414 * (((a2 == 31) ^ (v4 + 34)) & 1)) ^ v4)))(3414602979);
}

uint64_t sub_1002E9078(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((5454 * (v2 == (a2 ^ 0x774) + ((a2 - 1186) | 0x4A0) - 2136)) ^ a2))
                            - 4))();
}

uint64_t sub_1002E90B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8 * (((((v5 - 287) | 0x121) - 1441) * (*(_DWORD *)(v6 + 3992) <= v4)) ^ v5))
                            - 4))();
}

uint64_t sub_1002E90F4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return sub_1002E8FEC(a1, a2);
}

uint64_t sub_1002E9120(unint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _BOOL4 v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 368) - v3 + 31) = a1 >> v4;
  v6 = v3 + 1 == (((v2 ^ 0x1166u) - 1797) ^ 0xC8CLL);
  return (*(uint64_t (**)(void))(a2 + 8 * (((4 * v6) | (32 * v6)) ^ v2)))();
}

uint64_t sub_1002E9180()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((1618 * (v1 == ((v0 - 984249522) & 0x3AAA63D7) - 695)) ^ v0)))();
}

uint64_t sub_1002E91BC(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD))(a2 + 8 * (((v3 + 8714) * (*(_DWORD *)(v4 + 3988) > v2)) ^ v3)))(0);
}

uint64_t sub_1002E91F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E9120(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E9230(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 360) - v3 + 31) = a3 >> (v5 & ((v4 - 8) & 0x9C ^ 0x77));
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((8316 * (v3 + ((v4 + 273) | 0x8A8u) == 3275)) ^ v4)))(562470436);
}

uint64_t sub_1002E92B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * ((12231 * (v4 == 32)) ^ a4))
                            - (((a4 - 3020) | 0x213u) ^ 0x2F7)))();
}

uint64_t sub_1002E92F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, unsigned int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((((a3 - 2489) ^ 0x1C32)
                                                                         * (a4 < *(_DWORD *)(v5 + 8272))) ^ a3))
                                                           - 4))(a1, a2, 0);
}

uint64_t sub_1002E9324(uint64_t a1, uint64_t a2)
{
  return sub_1002E9230(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E9358(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 392) - v4 + 31) = a1 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v3 ^ (14 * (v4 != 31))))
                            - (((v3 - 5948) + 1017) ^ (v3 - 4919))))();
}

uint64_t sub_1002E93C0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (10 * (v1 ^ 0x472) - 191)) ^ v1)))();
}

uint64_t sub_1002E93F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(_QWORD))(a3 + 8 * ((((v4 ^ 0x1B4C) - 3666) * (v3 < *(_DWORD *)(v5 + 9152))) ^ v4)))(0);
}

uint64_t sub_1002E9420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E9358(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002E9454(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  *(_QWORD *)(v8 + 9416) = (v6 - 2059596029);
  v9 = (v6 - 275) | 0xA8Cu;
  *(_BYTE *)(*(_QWORD *)(v8 + 384) + (v9 ^ 0xA92) - v5) = v4 >> v3;
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8 * (v6 ^ (7448 * (v5 != 31))));
  *(_DWORD *)(v8 + 9464) = 994009621;
  *(_QWORD *)(v8 + 9456) = *(_QWORD *)(v8 + 7048);
  v11 = *(_QWORD *)(v8 + 1672);
  *(_QWORD *)(v8 + 9608) = v11;
  *(_DWORD *)(v8 + 7944) = a3;
  *(_DWORD *)(v8 + 5344) = *(_DWORD *)(v8 + 6072);
  *(_DWORD *)(v8 + 5340) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 5348) = *(_DWORD *)(v8 + 6084);
  *(_DWORD *)(v8 + 5336) = *(_DWORD *)(v8 + 6080);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 6976);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 7096);
  *(_DWORD *)(v8 + 9600) = *(_DWORD *)(v8 + 7020);
  *(_DWORD *)(v8 + 9488) = *(_DWORD *)(v8 + 7064);
  *(_DWORD *)(v8 + 9472) = *(_DWORD *)(v8 + 7136);
  *(_DWORD *)(v8 + 4292) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 5312) = *(_DWORD *)(v8 + 9680);
  return v10(v11, v9);
}

uint64_t sub_1002E9550(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((29 * (v2 == 32)) ^ a2))
                            - ((a2 - 2425) ^ 0x110)))();
}

uint64_t sub_1002E9584@<X0>(int a1@<W1>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a1 - 642028408) & 0x264489FE ^ 0x2CBE) * (a2 > a3)) ^ a1)) - 4))();
}

uint64_t sub_1002E95C8(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002E9454(a1, a2, a3);
}

uint64_t sub_1002E9604(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                               + 8
                                                               * ((57
                                                                 * (((*(_DWORD *)(v2 + 4040) == 94) ^ ((v1 ^ 0x77) - 38)) & 1)) ^ v1))
                                                   - 12))(a1, 3487880783);
}

void sub_1002E9668()
{
  JUMPOUT(0x1002E967CLL);
}

uint64_t sub_1002E96EC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1560) - v5 + 31) = a2 >> v3;
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * ((((1983 * (v4 ^ 0x6A0)) ^ 0x1A97) * (v5 != 31)) ^ v4)))(2354543027);
}

uint64_t sub_1002E9754()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((3862 * (v0 == (((v1 - 4765) | 0x203) ^ 0x683))) ^ v1))
                            - 12))();
}

uint64_t sub_1002E9790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (121 * (v3 < *(_DWORD *)(v5 + 3996)))))
                                                  - ((v4 + 1642661750) & 0x9E16E7EF)
                                                  + 1687))(a1, 0);
}

uint64_t sub_1002E97D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E96EC(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002E9808@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 760) + (31 - a3)) = a1 >> v3;
  return (*(uint64_t (**)(void))(a2 + 8 * (v4 ^ ((32 * (a3 == 31)) | ((a3 == 31) << 6)))))();
}

uint64_t sub_1002E9874()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * ((v1 - 1730063702) & 0x671E97AB ^ 0x3C94)) ^ v1))
                            - 12))();
}

uint64_t sub_1002E98B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (15422 * (v3 < *(_DWORD *)(v5 + 3992)))))
                                         - ((v4 + 210598486) & 0xF3726FFF ^ 0x6AFLL)))(0);
}

uint64_t sub_1002E9900@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002E9808(*(unsigned int *)(v2 - 0x62AA055D109F20F3), a1, a2);
}

uint64_t sub_1002E9930(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 784) - v3 + 31) = a2 >> v5;
  return (*(uint64_t (**)(_QWORD))(a3 + 8 * (v4 ^ (3454 * (v3 == 31)))))(*(_QWORD *)(v6 + 4000));
}

uint64_t sub_1002E9990()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * (3 * (v1 ^ 0x469) + 1519)) ^ v1))
                            - 4))();
}

uint64_t sub_1002E99C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3 + 8
                                                                   * (v5 ^ (11494 * (*(_DWORD *)(v6 + 3988) > v3))))
                                                  - v4
                                                  + 1727))(a1, 0);
}

uint64_t sub_1002E99F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002E9930(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002E9A1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 776) - a3 + 31) = a2 >> (v4 & (((v3 - 95) | 0x92) + 76));
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v5
                                                              + 8
                                                              * ((((v3 - 1040) ^ 0x771) + a3 != 32) | v3))
                                                  - 8))(a1, *(_QWORD *)(v6 + 7872));
}

uint64_t sub_1002E9A84()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (((v0 == 32) * ((v1 + 1997) ^ 0x1F7)) ^ v1))
                            - 8))();
}

uint64_t sub_1002E9AB0(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                       + 8
                                                                       * (v4 ^ (11095 * (v2 < *(_DWORD *)(v6 + 8272)))))
                                                           - (v3 ^ 0xB88)))(a1, a2, 0);
}

uint64_t sub_1002E9AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002E9A1C(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002E9B14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 768) - v5 + 31) = a4 >> (v6 & (v4 ^ 0x7F));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((7811 * (v5 - 6858 + ((v4 - 2877) | 0x1A88u) == 32)) ^ v4)) - 8))();
}

uint64_t sub_1002E9B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((6792 * (v5 == 32)) ^ a5))
                            - (((a5 - 1615) | 0x644u) ^ 0x769)))();
}

uint64_t sub_1002E9BC8(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v4 & ~((v1 + 11) ^ (v2 < *(_DWORD *)(v3 + 9152))))
                                          * (((v1 - 1509) | 0xA00) - 2923)) ^ v1))
                            - 12))();
}

uint64_t sub_1002E9C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E9B14(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002E9C40(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_QWORD *)(v6 + 9416) = (v4 - 1883253134) & 0xF57D37D7;
  *(_BYTE *)(*(_QWORD *)(v6 + 800) - v5 + ((v4 - 60482274) & 0x39AFBDF) - 6828) = v3 >> ((((v4 + 114) & 0xD7) - 24) & v2);
  v7 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 ^ (5326 * (v5 != 31)))) - 8);
  *(_DWORD *)(v6 + 9464) = 994009791;
  *(_DWORD *)(v6 + 4040) = 94;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1720);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7();
}

uint64_t sub_1002E9D74()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((15555 * (v0 == 32)) ^ v1))
                            - (v1 ^ 0x1B06u)
                            + 453))();
}

uint64_t sub_1002E9DA8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (55 * (a2 > a3)))) - ((v3 + 737274114) & 0xD40DFDFF) + 453))();
}

uint64_t sub_1002E9DEC(uint64_t a1, int a2)
{
  return sub_1002E9C40(a1, a2);
}

uint64_t sub_1002E9E20()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((37
                                          * (*(_DWORD *)(v1 + 4040) == ((v0 - 52) ^ 0x39))) ^ v0))
                            - 4))();
}

void sub_1002E9E8C()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002E9EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1688) - v6 + ((v5 - 3234) | 0x2230) - 8857) = v7 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (int)((5729 * ((v5 ^ 0xD2BLL) + v6 != 32)) ^ v5)) - 4))();
}

uint64_t sub_1002E9F18(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((76 * (v1 == (a1 ^ 0x2F92) - 3338)) ^ a1))
                            - 8))();
}

uint64_t sub_1002E9F48(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (a1 ^ (3031 * (v4 < *(_DWORD *)(v5 + 3996)))))
                            - ((a1 - 5518) ^ 0xD22)))();
}

uint64_t sub_1002E9F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E9EA4(a1, a2, a3, a4);
}

uint64_t sub_1002E9FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 544) - v2 + 31) = v4 >> v3;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a2
                                                               + 8
                                                               * ((56
                                                                 * (((v2 == 31) ^ (((v5 + 78) | 0x16)
                                                                                                  - 71)) & 1)) ^ v5))
                                                   - 4))(32, 963677914);
}

uint64_t sub_1002EA02C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8
                                        * ((167 * (v3 != ((349 * (a3 ^ 0x673) - 1052658103) & 0x3EBE4FF7 ^ 0xD32))) ^ a3))
                            - 8))();
}

uint64_t sub_1002EA080@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 + 8308) * (*(_DWORD *)(v3 + 3992) > a2)) ^ v2)) - 8))();
}

uint64_t sub_1002EA0B4(uint64_t a1, uint64_t a2)
{
  return sub_1002E9FC4(a1, a2);
}

uint64_t sub_1002EA0DC(int a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 536) - v3 + 31) = a2 >> a1;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (v4 ^ (7397 * (v3 == 31)))) - 4))(((v4 - 2060373923) & 0x7ACED2BFu) + a1 - 4135);
}

uint64_t sub_1002EA154(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((12909 * (a1 == ((v1 - 797) ^ 0xD32))) ^ v1))
                            - 8))();
}

uint64_t sub_1002EA184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(a3
                                                             + 8
                                                             * (((v4 - 4120) * (v3 < *(_DWORD *)(v5 + 3988))) ^ v4))
                                                 - 8))(0, 0);
}

uint64_t sub_1002EA1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002EA0DC(0, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002EA1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 528) - v5 + (v4 ^ 0x9Bu) - 4429) = (unint64_t)v6 >> v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((1872 * (((v4 - 3116) ^ 0x5CALL) + v5 == 32)) ^ v4))
                            - 4))();
}

uint64_t sub_1002EA254()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * (int)(((v1 == 32) * ((v0 + 790588043) & 0xD0E095FF ^ 0x1130)) ^ v0)))();
}

uint64_t sub_1002EA290@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 ^ 0x9B) + 8350) * (a2 < *(_DWORD *)(v3 + 8272))) ^ v2)))();
}

uint64_t sub_1002EA2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002EA1E4(a1, a2, a3 + 4, a4);
}

uint64_t sub_1002EA2F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 560) - v5 + 31) = a4 >> v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((v4 - 1739382271) & 0x67ACD97B) - 2640) ^ 0xE72) * (v5 < 0x1F)) ^ v4)))();
}

uint64_t sub_1002EA360(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((8763 * (v1 == ((a1 + 601526004) & 0xDC257FDE ^ 0x14BE))) ^ a1)))();
}

uint64_t sub_1002EA3A0(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 + 3665) | 0x82) ^ 0x599) * (v1 < *(_DWORD *)(v3 + 9152))) ^ a1)))();
}

uint64_t sub_1002EA3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EA2F4(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002EA410(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 - 578831509) & 0xA7BD5397;
  *(_BYTE *)(*(_QWORD *)(v6 + 552) - v5 + 31) = v3 >> v2;
  *(_QWORD *)(v6 + 9416) = v7;
  v8 = *(uint64_t (**)(void))(a1 + 8 * (int)(((v5 != 31) * (v7 + 2059601267)) ^ v4));
  *(_DWORD *)(v6 + 9464) = 994009585;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1696);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002EA518()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((74 * (v0 == ((v1 - 3847) ^ 0x134))) ^ v1))
                            - 4))();
}

uint64_t sub_1002EA54C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (13632 * (a3 < a2)))) - 3 * (v3 ^ 0x1047u) + 272))();
}

uint64_t sub_1002EA584(uint64_t a1, int a2)
{
  return sub_1002EA410(a1, a2);
}

uint64_t sub_1002EA5B8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (int)((((v1 ^ 0x853D06E1) + 2059596263) * (a1 == 77)) ^ v1))
                            - ((v1 - 4832) ^ 0x41ELL)))();
}

void sub_1002EA620()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002EA638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1736) - v3 + ((v4 - 1313299203) & 0x4E47456C) - 321) = v6 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((15576 * (((v4 - 4832) ^ 0x417) + v3 == 32)) ^ v4))
                            - 8))();
}

uint64_t sub_1002EA6B8(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (((v1 == 32) * ((a1 ^ 0x12E0) - 5868)) ^ a1)))();
}

uint64_t sub_1002EA6E4(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a3 + 8 * ((((a1 + 4832) ^ 0xA31) * (*(_DWORD *)(v4 + 3996) > v3)) ^ a1)))();
}

uint64_t sub_1002EA718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EA638(a1, a2, a3);
}

uint64_t sub_1002EA750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 936) - v3 + (v5 - 4333) - 2460) = v6 >> v4;
  return (*(uint64_t (**)(uint64_t))(a3 + 8
                                                 * ((122 * (v3 + 1 == ((v5 - 6472) ^ 0x140))) ^ v5)))(4289839483);
}

uint64_t sub_1002EA7BC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * ((6994 * (v2 == 32)) ^ a2))
                            - (((a2 - 352) | 0x1AA8u) ^ 0x1AACLL)))();
}

uint64_t sub_1002EA7F4@<X0>(int a1@<W1>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((a1 + 4014) * (*(_DWORD *)(v3 + 3992) > a3)) ^ a1)) - 4))();
}

uint64_t sub_1002EA828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EA750(a1, a2, a3);
}

uint64_t sub_1002EA86C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 928) - v3 + 31) = a1 >> (((v4 + 114) ^ (v4 - 23)) & v5);
  return (*(uint64_t (**)(void))(a3 + 8 * (v4 ^ (15779 * (v3 == 31)))))();
}

uint64_t sub_1002EA8D4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((89 * (v1 == (((v0 - 1769) | 0x1800) ^ 0x1AF2))) ^ v0))
                            - 8))();
}

uint64_t sub_1002EA908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * (((v4 - 797) * (v3 < *(_DWORD *)(v5 + 3988))) ^ v4))
                                         - 8))(0);
}

uint64_t sub_1002EA93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002EA86C(*(unsigned int *)(v3 - 0x62AA055D109F20F3), a2, a3);
}

uint64_t sub_1002EA974(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 920) - v5 + 31) = a4 >> v6;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1
                                                                       + 8
                                                                       * ((2016
                                                                         * (v5 + 1 == ((v4 + 1463) ^ 0x2B6Bu) - 8686)) ^ v4))
                                                           - 4))(*(_QWORD *)(v7 + 7872), a2, 1030330179);
}

uint64_t sub_1002EA9D8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((383 * (v0 == (v1 ^ 0x21A0) - 910)) ^ v1)))();
}

uint64_t sub_1002EAA04@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((v2 - 8456) | 0x2A8) + 930) * (*(_DWORD *)(v3 + 8272) > a2)) ^ v2)))();
}

uint64_t sub_1002EAA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EA974(a1, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002EAA70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 952) - v5 + 31) = a3 >> (v6 & (((v4 + 33) & 0xF5) - 102));
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((683 * (v5 + ((v4 - 1069) | 0x242u) == 642)) ^ v4)) - 4))();
}

uint64_t sub_1002EAAF8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((9154 * (v0 == (v1 ^ 0x945))) ^ v1)) - 8))();
}

uint64_t sub_1002EAB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a4
                                                                       + 8
                                                                       * ((((v5 - 1303) ^ 0x440)
                                                                         * (v4 < *(_DWORD *)(v6 + 9152))) ^ v5))
                                                           - 8))(a1, a2, 0);
}

uint64_t sub_1002EAB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002EAA70(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a4);
}

uint64_t sub_1002EAB98@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v5 - 2128606362) | 0x41D0007u;
  *(_QWORD *)(v6 + 9416) = v7;
  *(_BYTE *)(*(_QWORD *)(v6 + 944) - a3 + 31) = v4 >> v3;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((591 * (a3 + 1 != (v7 + 2059596364) - 579)) ^ v5))
                         - 4);
  *(_DWORD *)(v6 + 9464) = 994009761;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1744);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002EACA4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((230 * (v0 == 32)) ^ v1))
                            - ((v1 + 583) ^ 0x4A2)))();
}

uint64_t sub_1002EACD8(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v4 ^ (1116 * (a2 > v2)))) - (v3 ^ 0x4A2)))();
}

uint64_t sub_1002EAD08@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return sub_1002EAB98(a1, a2, a3);
}

uint64_t sub_1002EAD44()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * (int)(((*(_DWORD *)(v1 + 4040) == (v0 + 36))
                                               * ((v0 - 2059598815) ^ 0x853D17ED)) ^ v0))
                            - 4))();
}

void sub_1002EADAC()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002EADC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1832) - v4 + 31) = v6 >> v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3
                                                      + 8 * ((4977 * (v4 + (v3 + 783) == 3876)) ^ v3))
                                          - 4))(1184070309);
}

uint64_t sub_1002EAE30()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * ((53 * (v0 == ((2 * v1) ^ 0x1648) - 3030)) ^ v1)))();
}

uint64_t sub_1002EAE5C@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((v2 - 3657) | 0xB60) + 2108) * (*(_DWORD *)(v3 + 3996) > a2)) ^ v2)))();
}

uint64_t sub_1002EAE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EADC8(a1, a2, a3);
}

uint64_t sub_1002EAEC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 176) - v6 + 31) = a1 >> ((((v5 - 117) | 0x44) ^ 0xA9u) & v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8 * ((261 * (((v5 + 1613272822) & 0x9FD75F87 ^ 0xF04) + v6 == 32)) ^ v5))
                            - 4))();
}

uint64_t sub_1002EAF50(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744)
                              + 8 * (int)(((v2 == 32) * ((a2 + 94089386) & 0xFA6458D7 ^ 0xD3B)) ^ a2)))();
}

uint64_t sub_1002EAF8C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;

  return (*(uint64_t (**)(_QWORD))(a4
                                           + 8
                                           * (((((a2 + 386) | 0x800) ^ 0x188B) * (*(_DWORD *)(v5 + 3992) > v4)) ^ a2)))(0);
}

uint64_t sub_1002EAFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002EAEC4(*(unsigned int *)(v4 - 0x62AA055D109F20F3), a2, a3, a4);
}

uint64_t sub_1002EAFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;

  *(_BYTE *)(*(_QWORD *)(v7 + 216) - v3 + 31) = v6 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v8 & ~(v5 ^ (v3 == 31))) * ((v5 ^ 0x465) - 5430)) ^ v5)) - 12))();
}

uint64_t sub_1002EB060()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * (((v1 == 32) * ((v0 - 761561563) & 0x2D647BFC ^ 0x1374)) ^ v0)))();
}

uint64_t sub_1002EB09C@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((24 * (v2 ^ 0x1893)) ^ 0x1626) * (*(_DWORD *)(v3 + 3988) > a2)) ^ v2)))();
}

uint64_t sub_1002EB0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EAFF4(a1, a2, a3);
}

uint64_t sub_1002EB11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X4>, int a4@<W8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 208) - v4 + 31) = a3 >> (v5 & (a4 - 121));
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1
                                                                                + 8
                                                                                * (((((a4 - 4658) ^ 0x165B) - 2817)
                                                                                  * (v4 == 31)) ^ a4))
                                                                    - 12))(32, *(_QWORD *)(v6 + 7872), a2, 3232720689);
}

uint64_t sub_1002EB190()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * ((262 * (v0 == ((v1 + 1935352029) & 0x8CA4DB7D) - 4696)) ^ v1)))();
}

uint64_t sub_1002EB1D4(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 ^ 0x1ABC) * (v1 < *(_DWORD *)(v3 + 8272))) ^ v2)))();
}

uint64_t sub_1002EB208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return sub_1002EB11C(a1, a3 + 4, *(unsigned int *)(a3 - 0x62AA055D109F20F3), 1576 * (v3 ^ 0x161Eu));
}

uint64_t sub_1002EB244(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 200) - v5 + 31) = a4 >> a1;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (v4 ^ (408 * (v5 != 31)))) - 12))(((v4 - 1705131398) & 0x65A235CFu) + a1 - 4414);
}

uint64_t sub_1002EB2B8(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((208 * (a1 == 32)) ^ v1))
                            - (v1 ^ 0x9BAu)
                            + 6392))();
}

uint64_t sub_1002EB2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                               + 8
                                                                               * (v5 ^ (797
                                                                                      * (*(_DWORD *)(v6 + 9152) > v3))))
                                                                   - ((52 * (v5 ^ 0x113Du)) ^ 0x18F8)))(0, a2, a3, 0);
}

uint64_t sub_1002EB330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EB244(0, a2 + 4, a3, *(unsigned int *)(a2 - 0x62AA055D109F20F3));
}

uint64_t sub_1002EB364(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v7 = (v4 - 1241556633) & 0xCF3DB4D7;
  *(_QWORD *)(v6 + 9416) = v7;
  *(_BYTE *)(*(_QWORD *)(v6 + 224) - v5 + 31) = v3 >> v2;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1
                                     + 8
                                     * ((6436 * (v5 + 1 != ((727 * (v7 ^ 0x853D1011)) ^ 0x112ALL))) ^ v4))
                         - 12);
  *(_DWORD *)(v6 + 9464) = 994009525;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 1824);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v8();
}

uint64_t sub_1002EB478()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((2612 * (v0 == 32)) | v1))
                            - 59 * (v1 ^ 0x1102u)
                            + 460))();
}

uint64_t sub_1002EB4B4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v3 ^ 0x10D2) - 444) * (a3 < a2)) ^ v3)) - 12))();
}

uint64_t sub_1002EB4E4(uint64_t a1, int a2)
{
  return sub_1002EB364(a1, a2);
}

uint64_t sub_1002EB510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * ((10940 * (a6 == ((((v6 | 0x48) + 87) & 0x77) + 38))) ^ (v6 | 0x848)))
                                                                                             + 2235371539
                                                                                             - (((v6 | 0x848)
                                                                                               - 1086512017) & 0xC5FFDC5F)
                                                                                             - 4);
  *(_DWORD *)(v7 + 7632) = 140;
  *(_DWORD *)(v7 + 4040) = 68;
  *(_QWORD *)(v7 + 7664) = *(_QWORD *)(v7 + 3264);
  v9 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(v7 + 7680) = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v7 + 7656) = v9;
  *(_QWORD *)(v7 + 7688) = *(_QWORD *)(v7 + 3088);
  *(_QWORD *)(v7 + 7696) = *(_QWORD *)(v7 + 2232);
  v10 = *(_QWORD *)(v7 + 2432);
  *(_QWORD *)(v7 + 7704) = v10;
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  v11 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = v9;
  *(_QWORD *)(v7 + 9496) = v10;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  LODWORD(v9) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 7712) = v9;
  v12 = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 7920);
  *(_DWORD *)(v7 + 7944) = v9;
  v13 = *(_DWORD *)(v7 + 7904);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 8312) = v13;
  *(_DWORD *)(v7 + 6944) = *(_DWORD *)(v7 + 7040);
  *(_DWORD *)(v7 + 7648) = v12;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  LODWORD(v10) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 9384) = v10;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8964) = v10;
  *(_DWORD *)(v7 + 6936) = *(_DWORD *)(v7 + 6952);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8196);
  *(_DWORD *)(v7 + 7552) = *(_DWORD *)(v7 + 6984);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 6968) = v10;
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 7928);
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 7912);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  LODWORD(v10) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 9440) = v10;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 7640) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 6992) = v10;
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7152);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 7984) = v10;
  *(_DWORD *)(v7 + 9736) = v10;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 7592) = *(_DWORD *)(v7 + 7080);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8188);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 7584) = *(_DWORD *)(v7 + 7088);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 7576) = *(_DWORD *)(v7 + 7072);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 9096) = v9;
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v8(a1, a2, v11, a3, a4, a5, 80);
}

void sub_1002EB7EC()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002EB804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 9744)
                              + 8
                              * (int)(((v6 ^ (a6 + 753) ^ 0x853D1E80 ^ (1249 * (v6 ^ 0x13D4)))
                                     * (*(_DWORD *)(v7 + 4040) != 102)) ^ v6)))();
}

void sub_1002EB86C()
{
  _DWORD *v0;

  v0[998] = v0[2288];
  v0[997] = v0[2137];
  v0[999] = v0[2068];
  JUMPOUT(0x10031CC58);
}

uint64_t sub_1002EB888(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1808) - v5 + 31) = a2 >> (v3 & ((v4 - 52) ^ 0x5C));
  return (*(uint64_t (**)(void))(a3 + 8 * (v4 ^ (12981 * (v5 == 31)))))();
}

uint64_t sub_1002EB8F8(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (a1 ^ (16 * (v1 == 32))))
                            - ((1693 * (a1 ^ 0xEA0u)) ^ 0x13DFLL)))();
}

uint64_t sub_1002EB92C@<X0>(int a1@<W0>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a1 ^ (4469 * (a3 < *(_DWORD *)(v3 + 3996)))))
                            - ((a1 + 212879676) & 0xF34FBBF7)
                            + 5071))();
}

uint64_t sub_1002EB978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002EB888(a1, *(unsigned int *)(v3 - 0x62AA055D109F20F3), a3);
}

uint64_t sub_1002EB9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 608) - v2 + 31) = v5 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((13407 * (v2 + (v3 - 1979) != 3181)) ^ v3))
                            - (v3 ^ 0x685u)
                            + 4740))();
}

uint64_t sub_1002EBA1C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (int)(((4 * (v0 == 32)) | (16 * (v0 == 32))) ^ v1))
                            - (v1 ^ 0x1288)))();
}

uint64_t sub_1002EBA50(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((((v3 - 1351809953) & 0x5092FD1D) + 9817) * (*(_DWORD *)(v4 + 3992) > v2)) ^ v3))
                            - 4))();
}

uint64_t sub_1002EBA98(uint64_t a1, uint64_t a2)
{
  return sub_1002EB9B0(a1, a2);
}

uint64_t sub_1002EBACC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 632) - v2 + ((9 * (v4 ^ 0x28F) + 2057041839) & 0x8563FFDE) - 957) = a2 >> v3;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5 + 8 * (v4 ^ (6104 * (v2 != 31)))) - 8))(*(_QWORD *)(v6 + 4000));
}

uint64_t sub_1002EBB48(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8 * (((v3 == 32) * ((a3 ^ 0xD) + 8331)) ^ a3)) - 4))();
}

uint64_t sub_1002EBB7C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 8 * ((13 * (*(_DWORD *)(v4 + 3988) <= a2)) ^ v2))
                                                  - (v2 ^ 0xDu)
                                                  + 3146))(a1, 0);
}

uint64_t sub_1002EBBBC(uint64_t a1)
{
  uint64_t v1;

  return sub_1002EBACC(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002EBBEC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X4>, int a3@<W8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 624) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (a3 ^ (11 * (v3 == 31)))) - 8))(a1, 1753256617);
}

uint64_t sub_1002EBC50(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744) + 8 * (((v4 == 32) * (a4 ^ 0xE22)) ^ a4)))();
}

uint64_t sub_1002EBC7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 - 11) ^ 0x3E7) * (v4 < *(_DWORD *)(v6 + 8272))) ^ a4)))();
}

uint64_t sub_1002EBCAC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return sub_1002EBBEC(a1 + 4, *(unsigned int *)(a1 - 0x62AA055D109F20F3), a2);
}

uint64_t sub_1002EBCD4(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 616) - v3 + 31) = a2 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (9441 * (v3 == 31)))) - ((v2 + 3594) ^ v2 ^ 0x155Au ^ 0x76CLL)))();
}

uint64_t sub_1002EBD3C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744) + 8 * (((v3 == 32) * (29 * (a3 ^ 0x11C6) + 11372)) ^ a3)))();
}

uint64_t sub_1002EBD70(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(a1 + 8 * (((a3 ^ 0x231D) * (v3 < *(_DWORD *)(v4 + 9152))) ^ a3)))();
}

uint64_t sub_1002EBDA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002EBCD4(a1, *(unsigned int *)(v1 - 0x62AA055D109F20F3));
}

uint64_t sub_1002EBDCC(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v8 = (v5 - 2059596947);
  *(_BYTE *)(*(_QWORD *)(v7 + 648) - v6 + (v5 ^ 0x122Au) - 5729) = v4 >> v3;
  *(_QWORD *)(v7 + 9416) = v8;
  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (int)(((v8 ^ 0x853D0B07) * (v6 != 31)) | v5)) - 4);
  *(_DWORD *)(v7 + 9464) = 994009815;
  *(_DWORD *)(v7 + 4040) = 102;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  v10 = *(_QWORD *)(v7 + 1816);
  *(_QWORD *)(v7 + 9608) = v10;
  *(_DWORD *)(v7 + 7944) = a3;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v9(v10);
}

uint64_t sub_1002EBED8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((15535 * (v0 == ((v1 - 4223) | 0x1078) - 5721)) ^ v1))
                            - 12))();
}

uint64_t sub_1002EBF20@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((3 * (v3 ^ 0x17F7)) ^ 0x453) * (a3 >= a2)) ^ v3))
                            - ((v3 + 7) ^ 0x168CLL)))();
}

uint64_t sub_1002EBF64(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002EBDCC(a1, a2, a3);
}

uint64_t sub_1002EBF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((15 * ((v5 + 190) ^ 0x14DE) - 4462) ^ (v5 + 190))) - 4))();
}

uint64_t sub_1002EC05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return (*(uint64_t (**)(void))(a5
                              + 8
                              * ((((v5 - 1942320817) & 0x73C57F9F) - 2319) ^ 0x21D4 ^ (v5 - 1942320817) & 0x73C57F9F)))();
}

void sub_1002EC0D0(int a1@<W8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 9416) = (a1 - 9735) ^ 0x853D11CF;
  *(_QWORD *)(v1 + 9456) = *(_QWORD *)(v1 + 7048);
  *(_QWORD *)(v1 + 9608) = *(_QWORD *)(v1 + 1552);
  *(_DWORD *)(v1 + 7944) = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 5344) = *(_DWORD *)(v1 + 6072);
  *(_DWORD *)(v1 + 9464) = 994009603;
  *(_DWORD *)(v1 + 5340) = *(_DWORD *)(v1 + 7616);
  *(_DWORD *)(v1 + 5348) = *(_DWORD *)(v1 + 6084);
  *(_DWORD *)(v1 + 5336) = *(_DWORD *)(v1 + 6080);
  *(_DWORD *)(v1 + 9664) = *(_DWORD *)(v1 + 6976);
  *(_DWORD *)(v1 + 9616) = *(_DWORD *)(v1 + 7096);
  *(_DWORD *)(v1 + 9600) = *(_DWORD *)(v1 + 7020);
  *(_DWORD *)(v1 + 9488) = *(_DWORD *)(v1 + 7064);
  *(_DWORD *)(v1 + 9472) = *(_DWORD *)(v1 + 7136);
  *(_DWORD *)(v1 + 4292) = *(_DWORD *)(v1 + 8280);
  JUMPOUT(0x1002C8A54);
}

uint64_t sub_1002EC1A8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((10682 * (((a2 - 7223) ^ 0x2B0) == 32)) ^ (a2 - 5533))))();
}

uint64_t sub_1002EC1F8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                               + 8
                                                               * (int)(((((v1 ^ 0x2770) + 1194363558) & 0xB8CF7BCD)
                                                                      - 1752) ^ 0x341 ^ ((v1 ^ 0x2770) + 1194363558) & 0xB8CF7BCD))
                                                   - 4))(a1, 3856443902);
}

uint64_t sub_1002EC2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8
                                        * ((25 * (1291 * (((22 * (v5 ^ 0xBD3) - 5710) | 0x802) ^ 0xAE7) != 6455)) ^ (22 * (v5 ^ 0xBD3))))
                            - 8))();
}

void sub_1002EC348()
{
  JUMPOUT(0x1002EC360);
}

uint64_t sub_1002EC3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8
                                        * (int)((((((((v6 - 4620) ^ (unsigned __int16)v5) & 0xFFFFFFF3)
                                                  + (v5 & 0xFFFFFFF3)) & ((((v6 - 4620) ^ (unsigned __int16)v5) & 0x20)
                                                                        + (v5 & 0x20))) == 32)
                                               * (((v6 + 1204866227) & 0xB82F3D6F ^ 0x3A55) + v6 - 29)) ^ (v6 + 2714)))
                            - 4))();
}

uint64_t sub_1002EC440@<X0>(_BYTE *a1@<X0>, char a2@<W8>)
{
  char v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;

  a1[4] = a2;
  *(_DWORD *)(v5 + 5332) = 22;
  v9 = *(_QWORD *)(v5 + 8288);
  *(_DWORD *)(v5 + 9688) = 0;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 9648) + ((723 * (v3 ^ (v8 - 3))) ^ 0x80Fu)) + 123;
  a1[3895] = -70;
  a1[3957] = 32;
  a1[3926] = 50;
  a1[3988] = 55;
  a1[4081] = -14;
  a1[4050] = 22;
  v11 = *(_BYTE **)(v5 + 8448);
  v11[140] = -22;
  v11[109] = -127;
  a1[3954] = 81;
  a1[3923] = -110;
  v11[16] = 103;
  a1[4019] = v2;
  v11[78] = -95;
  v11[171] = 65;
  v11[47] = 73;
  a1[3892] = -24;
  v12 = *(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * ((6641 * ((v6 - 1302587220) > 7)) ^ (v4 + v3 + 546)));
  *(_DWORD *)(v5 + 5204) = 109 * (v10 ^ v7);
  *(_DWORD *)(v5 + 9148) = 1796353962;
  *(_QWORD *)(v5 + 5480) = *(_QWORD *)(v5 + 8520);
  *(_QWORD *)(v5 + 5472) = *(_QWORD *)(v5 + 7744);
  *(_QWORD *)(v5 + 5464) = v9;
  *(_QWORD *)(v5 + 8288) = v9;
  return ((uint64_t (*)(void))(v12 - 4))();
}

void sub_1002EC458(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 5) = a2;
  JUMPOUT(0x1002EC44CLL);
}

uint64_t sub_1002EC468()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 + 5674) ^ 0x32DD) * (v0 != 88)) ^ v1)) - 4))();
}

uint64_t sub_1002EC4B0(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(v2 + 8 * ((a1 ^ 0x3BD8) + 816)))(*(_QWORD *)(v1 + 9368));
}

uint64_t sub_1002EC540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)(v7 + v6) = a5;
  v12 = a1 + 4;
  v13 = 149;
  if (v5 > v9)
    v13 = 21;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8
                                                      * (((*(_BYTE *)(*(_QWORD *)(v8 + 9704) + v13) == 88)
                                                        * (((v10 - 1578532142) & 0x5E1679FD ^ 0x122E) - 2088)) ^ (v10 - 1578532142) & 0x5E1679FD))
                                          - ((((v10 - 1578532142) & 0x5E1679FD) - 4481) | 0x14B1u)
                                          + a3))(v12);
}

void sub_1002EC5CC()
{
  JUMPOUT(0x1002EC4E4);
}

uint64_t sub_1002EC5D8(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(v6
                                                                                             + 8
                                                                                             * (int)((((a1 ^ 0xFFFFD5B8) + a1 - 4618) * (v3 < v4)) ^ a1)))(*(_QWORD *)(v5 + 9368), a2, a3, *(_QWORD *)(v5 + 9680), 0, 0, 0);
}

uint64_t sub_1002EC628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v10 = a6
      + a5
      + ((*(unsigned int *)(a1 - 0x62AA055D109F20F3)
        + a7
        - 0x4D3636417EB0E10CLL
        - (((*(unsigned int *)(a1 - 0x62AA055D109F20F3) + a7) << ((v8 - 21) ^ 0xB0u)) & 0x1029E3DE8)) ^ 0xB2C9C9BE814F1EF4);
  v11 = v10 - 0x4D3636417EB0E10CLL - ((2 * v10) & 0x6593937D029E3DE8);
  *(_DWORD *)(v7 - 0x62AA055D109F20F3) = v11 ^ 0x814F1EF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((62 * ((v11 ^ 0xB2C9C9BE00000000) >> 32 == 0)) ^ v8)) - 4))();
}

uint64_t sub_1002EC860(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v15 = *(unsigned int *)(a1 + v13) + ((a4 >> (a2 + 111)) ^ v7);
  v16 = v15 + v10 - (v11 & (2 * v15));
  *(_DWORD *)(v8 + v13) = v16 ^ v12;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((62 * ((v16 ^ a7) >> 32 == 0)) ^ v9)) - 4))(a1 + 4);
}

uint64_t sub_1002EC8BC@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v2 + v4) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a1 + 6796) ^ (a1 - 396)) * (a2 + 1 == *(_DWORD *)(v3 + 9736))) ^ a1)))();
}

uint64_t sub_1002EC8F0()
{
  return sub_1002EC468();
}

uint64_t sub_1002EC900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * ((2 * (a8 ^ v9)) ^ (7 * (a7 - 1847543031 < v8))))
                                          - ((2 * (a8 ^ v9) + v11) & 0x1CABBBEA)
                                          + a3))(a1 + 4);
}

uint64_t sub_1002EC964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((111 * (v8 != 0)) ^ a8)) - 4))();
}

void sub_1002EC9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v6 + v5) = a5;
  JUMPOUT(0x1002EC908);
}

uint64_t sub_1002ECB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v11;

  v11 = a6 > 7 && v9 - v7 >= ((v6 - 6171) ^ 0x1299uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * ((v11 * (v6 - 10950)) ^ v6)) - 4))();
}

uint64_t sub_1002ECBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _OWORD *v10;
  __int128 v11;

  v10 = (_OWORD *)(v8 - 0x62AA055D109F20F3);
  v11 = *(_OWORD *)(v6 - 0x62AA055D109F20E3);
  *v10 = *(_OWORD *)(v6 - 0x62AA055D109F20F3);
  v10[1] = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * ((1645 * ((a6 & 0xFFFFFFF8) == 8)) ^ v9))
                            - 8))();
}

void sub_1002ECC40()
{
  JUMPOUT(0x1002ECBD4);
}

uint64_t sub_1002ECC4C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * ((((v0 ^ 0xE8E) - 10174) * (v2 != v3)) ^ v0))
                            - 8))();
}

uint64_t sub_1002ECCA0@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  *(_DWORD *)(v5 - 0x62AA055D109F20F3) = *(_DWORD *)(v3 - 0x62AA055D109F20F3);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8 * (((v6 + 1 != a2) * (((a1 - 1845) | a3) + v7)) | (a1 - 1216)))
                            - 12))();
}

void sub_1002ECCEC()
{
  JUMPOUT(0x1002ECCA4);
}

uint64_t sub_1002ECCF8(uint64_t a1)
{
  unsigned __int8 v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  v5 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                            + 8
                                                            * ((((v1 ^ (13 * (v3 ^ 0xEE))) & 1)
                                                              * (497 * (v3 ^ 0x26B4) - 3468)) ^ v3))
                                                - 12);
  *(_QWORD *)(v2 + 9680) = v4 + 263;
  return v5(a1, v4 + 2220);
}

uint64_t sub_1002ECD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((((a5 ^ (v5 + 88)) & 1) * (((v5 - 3412) | 0xA00) - 2589)) ^ v5))
                            - 12))();
}

uint64_t sub_1002ECD88(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 ^ 0xA6C) * (v5 & ~a3)) ^ v3))
                            - ((v3 + 1483927379) & 0xA78D1FFF ^ 0x199ALL)))();
}

uint64_t sub_1002ECDC8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((72 * (a1 ^ 0x1913)) ^ 0x7A0) - 8890) * (v3 & ~v1)) ^ a1)) - 4))();
}

void sub_1002ECE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  _DWORD *v6;

  v6[2332] = a6;
  v6[2328] = v6[2322];
  v6[2434] = 1;
  v6[2422] = 1;
  JUMPOUT(0x1002ECAFCLL);
}

uint64_t sub_1002ECE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char v5;

  return (*(uint64_t (**)(void))(a4 + 8 * (((((v4 - 101858042) & 0x612375E) - 165) * (v5 & 1)) ^ v4)))();
}

uint64_t sub_1002ECE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a4 + 8 * (((3 * (v4 ^ 0xC33) - 10032) * (v6 & ~v5)) ^ v4))
                                          - ((v4 - 2071973160) & 0xB7FCFDF ^ 0x3DALL)))(a4);
}

uint64_t sub_1002ECEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  char v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(a1
                                                                      + 8
                                                                      * (int)(((((a3 + 1108204455) & 0x1DF2349F ^ 0xFFFFFF02)
                                                                              + a3
                                                                              + 5568)
                                                                             * (v3 & 1)) ^ a3))
                                                          - 12))(*(unsigned int *)(v4 + 9448), a2, 0);
}

void sub_1002ECF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  _DWORD *v6;

  v6[2362] = a6;
  v6[2280] = v6[2290];
  v6[2434] = 1;
  v6[2422] = 1;
  JUMPOUT(0x1002ECAE0);
}

uint64_t sub_1002ECFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)(v8 & 0x83BCD99D ^ (29 * (v10 & ~a8))))
                            - ((31 * (v8 & 0x83BCD99D ^ 0x189C)) ^ 0x207)))();
}

uint64_t sub_1002ECFF4()
{
  int v0;
  unsigned __int8 v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3696 * ((v1 ^ ((v0 ^ 0x13) + 71)) & 1)) ^ v0))
                         - 12);
  v2[2364] = 1;
  v2[2049] = v2[2380];
  v2[2358] = 1;
  v2[2270] = 1;
  v2[2394] = 1;
  v2[2374] = 1;
  v2[2253] = 1;
  v2[2372] = 1;
  v2[2368] = 1;
  return v4();
}

void sub_1002ED074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  _DWORD *v6;

  v6[2434] = 1;
  v6[1680] = a6;
  v6[1678] = v6[1491];
  v6[2422] = 1;
  JUMPOUT(0x1002ECAD0);
}

uint64_t sub_1002ED0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v9
                                                              + 8
                                                              * ((6607 * (v10 & ~(((v7 ^ 0x21BF) - 1915) ^ a7))) ^ v7))
                                                  - 4))(a1, *(unsigned int *)(v8 + 8332));
}

uint64_t sub_1002ED104(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                      + 8
                                                                      * ((482
                                                                        * ((((*(_BYTE *)(v3 + 8544) - 61) < 0x40u) ^ (v2 - 36)) & 1)) ^ v2))
                                                          - ((v2 - 1821925924) ^ 0x9367BEDFLL)))(*(unsigned int *)(v3 + 9040), a2, *(unsigned int *)(v3 + 8548));
}

uint64_t sub_1002ED168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                         + 8
                                                                                         * (v4 ^ (4084 * (v5 > 0x1F))))
                                                                             - (((v4 ^ 0x1A66) - 2870) ^ (2 * (v4 ^ 0x1A66u)) ^ 0x1910)))(a1, a2, a3, a4, *(unsigned int *)(v6 + 9624));
}

uint64_t sub_1002ED1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned __int8 a8@<W8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 + 8 * ((237 * (((v8 - 83) ^ (a8 < ((v8 - 115) ^ 0xE1u))) & 1)) ^ v8)) - 12))(a1, a2, a3, a4, a5, a6, a7, *(unsigned int *)(v9 + 9592));
}

uint64_t sub_1002ED1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v6
                                                                      + 8
                                                                      * (((v4 < ((v3 | 0xC8) ^ 0xD1u))
                                                                        * ((((v3 | 0xAC8) - 1598683230) & 0x5F49EFA6)
                                                                         - 36)) ^ (v3 | 0xAC8))))(a1, a2, a3, *(unsigned int *)(v5 + 9632));
}

uint64_t sub_1002ED23C@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x20D7 ^ (102 * (a1 < 4u))))
                            - (v1 ^ 0x9B5u)
                            - (((v1 ^ 0x20D7u) - 4358) ^ 0xFFFFFFFFFFFFE590)))();
}

uint64_t sub_1002ED284()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 ^ ((v1 < 2) * v2))) - (((v0 ^ 0x1E4Bu) - 1506) ^ 0x165)))();
}

uint64_t sub_1002ED2B4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 - 1998241762) & 0x771AB9FF) - 312)
                                * (*(_DWORD *)(v1 + 8544) != 61)) ^ v0)))();
}

uint64_t sub_1002ED2F0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((v0 + 2769) ^ (315
                                                        * ((*(_DWORD *)(v1 + 5236) - 265344313) > 0x1F))))
                            - 4))();
}

void sub_1002ED39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_DWORD *)(v9 + 8544) = 62;
  *(_DWORD *)(v9 + 9736) = 1;
  *(_QWORD *)(v9 + 5240) = v7;
  *(_DWORD *)(v9 + 5236) = v6;
  *(_DWORD *)(v9 + 5232) = v8;
  *(_DWORD *)(v9 + 9688) = 1;
  *(_DWORD *)(v9 + 6712) = a6;
  JUMPOUT(0x1002ECAACLL);
}

uint64_t sub_1002ED3FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned __int8 a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                + 8
                                                                                * (((((((v3 & 0x6C985DFB) - 611900628) ^ 0xFFFFFF9F) & 0xFB) <= a3)
                                                                                  * v4) ^ v3 & 0x6C985DFBu))
                                                                    - (((v3 & 0x6C985DFBu) + 1355) ^ 0x221ALL)))(74, a1, a2, *(unsigned int *)(v5 + 9592));
}

uint64_t sub_1002ED450@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (51 * (a1 < 0x50u)))) - ((v1 - 7010) ^ 0x6B0)))();
}

uint64_t sub_1002ED48C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 - 1783) * (v1 < 0x58)) ^ v0))
                            - (v0 + 4274)
                            + 6069))();
}

uint64_t sub_1002ED4C0@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v1 - 1498996690) ^ 0xA6A7293A) - 2447) ^ (v1 - 1498996690) & 0x5958DD73)
                                     * (a1 > 0x53u)) ^ v1)))();
}

uint64_t sub_1002ED504()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 - 5060) ^ 0x194) * (v1 < 0x56)) ^ v0))
                            - ((v0 - 4926) | 0x400u)
                            + 1561))();
}

uint64_t sub_1002ED540@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(v2
                                           + 8
                                           * (int)(((a1 == ((v1 + 121) ^ 0xCB))
                                                  * ((v1 + 1854060505) & 0x917D4BE5 ^ 0x983)) ^ v1)))(0);
}

uint64_t sub_1002ED5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                + 8
                                                                                * (((a4 >= (v4 ^ 0x4Cu))
                                                                                  * ((v4 - 316054158) & 0x12D6BFDB ^ 0x271F)) ^ v4))
                                                                    - 8))(a1, a2, a3, *(unsigned int *)(v5 + 9592));
}

uint64_t sub_1002ED5FC()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 ^ 0x1C80) - 7055) ^ 0x290) * (v1 < 0x38)) ^ v0 ^ 0x1C80))
                            - ((v0 ^ 0x1C80u)
                             - 3497)
                            + 4431))();
}

uint64_t sub_1002ED640@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((37 * (((a1 < 0x34u) ^ ((v1 ^ 0x2F) + v1 - 117 + 1)) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_1002ED688()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 >= ((v0 & 0x7D) - 38)) * ((v0 & 0x6105CF7D) - 3681)) ^ v0 & 0x6105CF7D))
                            - 4))();
}

uint64_t sub_1002ED6B8@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((103 * (a1 == (-49 * ((v1 - 55) ^ 0x27) - 105))) ^ (v1 - 2359))))(1);
}

uint64_t sub_1002ED720@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 1511) | 0xE57) ^ 0xF78) * (a1 < 0x5Cu)) ^ (v1 + 8569))))();
}

uint64_t sub_1002ED75C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((511 * (v1 < (((_BYTE)v0 - 25) & 0xB5 ^ 0x7Fu))) ^ (v0 - 1930)))
                            - (v0 - 10023)
                            + 349))();
}

uint64_t sub_1002ED7A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(v2
                                           + 8
                                           * ((103
                                             * (*(_DWORD *)(v1 + 8544) != ((6 * ((v0 - 38) & 0x9E ^ 0x38)) ^ 0x73))) ^ v0)))(0);
}

uint64_t sub_1002ED824@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((2038 * ((v1 - 2139182990) & 0x7F815EB1 ^ 0xA93)) ^ 0xFFC) * (a1 > 0x3Bu)) | v1))
                            - 4))();
}

uint64_t sub_1002ED870()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (101 * (v1 < 0x3A))))
                            - ((v0 + 1861071916) & 0x91124767 ^ 0x629)))();
}

uint64_t sub_1002ED8B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((((v0 - 1291) | 0x484) ^ 0x5F9)
                                              * (*(_DWORD *)(v1 + 8544) != 119)) ^ v0)))(1);
}

void sub_1002ED910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  *(_DWORD *)(v6 + 9736) = 1;
  *(_QWORD *)(v6 + 5976) = v7;
  *(_QWORD *)(v6 + 6352) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9296) = *(_QWORD *)(v6 + 3088);
  v9 = *(_DWORD *)(v6 + 8312);
  *(_DWORD *)(v6 + 9328) = v9;
  *(_DWORD *)(v6 + 6344) = v9;
  *(_DWORD *)(v6 + 9096) = a6;
  *(_DWORD *)(v6 + 9688) = 1;
  *(_DWORD *)(v6 + 2180) = v8;
  *(_DWORD *)(v6 + 9288) = a6;
  JUMPOUT(0x1002ECAA0);
}

uint64_t sub_1002ED998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((v4 + 10116) | *(_DWORD *)(v5 + 9736) & 1 | (4 * (*(_DWORD *)(v5 + 9736) & 1u))))
                            - ((v4 + 9700) | 0x80u)
                            + 10110))();
}

uint64_t sub_1002ED9D4@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((((a2 + 1372383917) & 0xAE32EEBF) + 1615) ^ 0x865) * (v3 & ~a1)) ^ (a2 - 9552)))
                            - 8))();
}

uint64_t sub_1002EDA18()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (218 * (*(_DWORD *)(v2 + 9504) != 116))))
                            - ((v0 ^ 0x19E1u)
                             - 2885)
                            + 1650))();
}

uint64_t sub_1002EDA50@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((*(_DWORD *)(v2 + 9464) < 6u) ^ (37 * (a1 ^ 0x90))) & 1)
                                          * ((a1 - 2804) ^ 0x52B)) ^ a1))
                            - 8))();
}

uint64_t sub_1002EDA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  _DWORD *v8;
  int v9;
  uint64_t (*v10)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                       + 8
                                                                                       * (v6 ^ (8358
                                                                                              * (v8[2153] != 122))))
                                                                           - ((((v6 - 302041876) & 0x973DD45F) + 4) ^ (v9 + v6 - 1739)));
  v8[2246] = 118;
  return v10(a1, a2, v8[2314], a4, a6);
}

void sub_1002EDAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;

  *(_DWORD *)(v6 + 8984) = 119;
  v7 = *(_QWORD *)(v6 + 3248);
  v8 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 9632) = a6;
  v9 = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 9736) = 1;
  *(_DWORD *)(v6 + 3956) = 2011274327;
  *(_QWORD *)(v6 + 3968) = *(_QWORD *)(v6 + 6088);
  *(_QWORD *)(v6 + 4392) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 3976) = v7;
  v10 = *(_DWORD *)(v6 + 8332);
  *(_DWORD *)(v6 + 3964) = v10;
  *(_DWORD *)(v6 + 4508) = *(_DWORD *)(v6 + 4332);
  *(_DWORD *)(v6 + 9424) = v10;
  *(_DWORD *)(v6 + 9256) = v8;
  *(_DWORD *)(v6 + 3960) = *(_DWORD *)(v6 + 6188);
  *(_DWORD *)(v6 + 9624) = v9;
  *(_DWORD *)(v6 + 4388) = *(_DWORD *)(v6 + 8312);
  *(_DWORD *)(v6 + 9688) = 1;
  JUMPOUT(0x1002ECA90);
}

uint64_t sub_1002EDD7C@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((8146
                                          * ((((v1 & 0xFB) + 102) ^ (((8 * (v1 & 0xFB ^ 0x12) + 26) & 0xFEu) > a1)) & 1)) ^ v1 & 0x2478CFFBu))
                            - 12))();
}

uint64_t sub_1002EDDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10
                                                                      + 8
                                                                      * (int)(((v8 + ((v6 - 802) ^ 0x853D1C31) - 229)
                                                                             * (*(_DWORD *)(v9 + 8544) != 159)) ^ v6))
                                                          - 8);
  v12 = *(_QWORD *)(v9 + 3248);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7512);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 3072);
  *(_QWORD *)(v9 + 9496) = v12;
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 4404);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8760) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 9480);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 9736) = v7;
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 9264) = a6;
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8704) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  return v11(a1, a2, v12);
}

uint64_t sub_1002EDEF8()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((15 * (v0 ^ 0x4D1)) ^ ((v0 + 2396) | 0x825) ^ 0x3C2A) * (v1 < 0x48)) ^ v0))
                            - 12))();
}

uint64_t sub_1002EDF40@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((126 * (a1 < (((v1 ^ 0xC8) + 107) ^ 0x24u))) ^ v1))
                            - 8))();
}

uint64_t sub_1002EDF7C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 < 0x42) ^ (v0 - 10)) & 1)
                                          * ((v0 - 321980041) & 0x1330FFDB ^ 0xCAE)) ^ v0))
                            - 8))();
}

uint64_t sub_1002EDFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                      + 8
                                                                      * (int)(((((v6 + 398499358) & 0xE83F5EBF) - 3063)
                                                                             * (*(_DWORD *)(v8 + 8544) != 127)) ^ v6))
                                                          - 8);
  v11 = *(_QWORD *)(v8 + 3248);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7512);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 3072);
  *(_QWORD *)(v8 + 9496) = v11;
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 4404);
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  *(_DWORD *)(v8 + 9736) = v7;
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9264) = a6;
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  *(_DWORD *)(v8 + 8544) = 128;
  return v10(a1, a2, v11);
}

void sub_1002EE10C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + 9688) = 1;
  *(_QWORD *)(v0 + 9568) = *(_QWORD *)(v0 + 6088);
  v1 = *(_QWORD *)(v0 + 4240);
  *(_QWORD *)(v0 + 8888) = v1;
  *(_QWORD *)(v0 + 9200) = *(_QWORD *)(v0 + 7880);
  *(_QWORD *)(v0 + 8880) = v1;
  v2 = *(_DWORD *)(v0 + 9256);
  *(_DWORD *)(v0 + 8872) = v2;
  *(_DWORD *)(v0 + 9128) = v2;
  *(_DWORD *)(v0 + 9160) = *(_DWORD *)(v0 + 8312);
  *(_DWORD *)(v0 + 9736) = 1;
  *(_DWORD *)(v0 + 9448) = v2;
  JUMPOUT(0x1002ECA38);
}

uint64_t sub_1002EE17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (*v10)(void);

  *(_QWORD *)(v8 + 8520) = a2;
  *(_DWORD *)(v8 + 9576) = 0;
  *(_DWORD *)(v8 + 9496) = 0;
  *(_DWORD *)(v8 + 9012) = 0;
  *(_DWORD *)(v8 + 9488) = 0;
  *(_DWORD *)(v8 + 9472) = 0;
  v9 = *(_DWORD *)(v8 + 9688);
  *(_DWORD *)(v8 + 9456) = 1;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v7
                                      + 8
                                      * (int)(((((251 * (v6 ^ 0x2785)) ^ 0xFFFFF533) + ((v6 - 1135835524) & 0x43B35E1D))
                                             * ((v9 & 1) == 0)) ^ v6))
                          - 8);
  *(_DWORD *)(v8 + 8196) = a6;
  *(_DWORD *)(v8 + 9432) = 1;
  *(_DWORD *)(v8 + 9080) = 1;
  return v10();
}

uint64_t sub_1002EE224@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((57
                                          * ((*(_DWORD *)(v1 + 9040) & 0xFE) != (((a1 + 36) | 0x26) ^ 0x6B))) ^ a1))
                            - (((a1 - 726) | 0x20u) ^ 0x42FLL)))();
}

uint64_t sub_1002EE278(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  BOOL v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(v3 + 9736) = 0;
  *(_DWORD *)(v3 + 8360) = 680935800;
  v4 = v2 == ((75 * (v1 ^ 0x2C)) ^ 0x77);
  v5 = (uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                  + 8
                                                  * (((32 * ((((v1 ^ 0x2C) + 12) ^ v4) & 1)) & 0xBF | (((((v1 ^ 0x2C) + 12) ^ v4) & 1) << 6)) ^ v1))
                                      - 12);
  *(_DWORD *)(v3 + 8352) = 79;
  *(_DWORD *)(v3 + 9688) = 1;
  v6 = *(_QWORD *)(v3 + 3248);
  *(_QWORD *)(v3 + 8408) = v6;
  v7 = *(_QWORD *)(v3 + 3280);
  *(_QWORD *)(v3 + 8400) = v7;
  *(_QWORD *)(v3 + 8392) = *(_QWORD *)(v3 + 5952);
  *(_QWORD *)(v3 + 8384) = v6;
  *(_QWORD *)(v3 + 8376) = v7;
  LODWORD(v6) = *(_DWORD *)(v3 + 2604);
  *(_DWORD *)(v3 + 8368) = v6;
  *(_DWORD *)(v3 + 8356) = *(_DWORD *)(v3 + 7752);
  *(_DWORD *)(v3 + 9128) = v6;
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  return v5(*(unsigned int *)(v3 + 8616));
}

uint64_t sub_1002EE364(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v3 + 9736) = 0;
  *(_DWORD *)(v3 + 8360) = 680935800;
  v4 = (uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v1 ^ (2400 * (v2 != 76))))
                                      + 2235371539
                                      - ((v1 ^ 0x14C7u)
                                       - 2059600073)
                                      - 8);
  *(_DWORD *)(v3 + 8352) = 77;
  *(_DWORD *)(v3 + 9688) = 1;
  v5 = *(_QWORD *)(v3 + 3248);
  *(_QWORD *)(v3 + 8408) = v5;
  v6 = *(_QWORD *)(v3 + 3280);
  *(_QWORD *)(v3 + 8400) = v6;
  *(_QWORD *)(v3 + 8392) = *(_QWORD *)(v3 + 5952);
  *(_QWORD *)(v3 + 8384) = v5;
  *(_QWORD *)(v3 + 8376) = v6;
  LODWORD(v5) = *(_DWORD *)(v3 + 2604);
  *(_DWORD *)(v3 + 8368) = v5;
  *(_DWORD *)(v3 + 8356) = *(_DWORD *)(v3 + 7752);
  *(_DWORD *)(v3 + 9128) = v5;
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  return v4(*(unsigned int *)(v3 + 8616));
}

uint64_t sub_1002EE444()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * (int)(((((v0 + 84148002) | 0x80390015) ^ 0x853D14D7)
                                               * (*(_DWORD *)(v1 + 9256) != 0)) ^ v0))
                            - 4))();
}

uint64_t sub_1002EE498()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v6;

  v3 = **(_DWORD **)(v1 + 5320);
  *(_DWORD *)(v1 + 1512) = v3 - ((v3 << (v0 ^ 0x16)) & 0x3A) - 99;
  *(_DWORD *)(v1 + 1508) = v0 + 2059598378 + (v3 >> 8) - ((v3 >> 7) & 0x12) - 56;
  *(_DWORD *)(v1 + 1516) = HIWORD(v3) - ((v3 >> 15) & 0x26) + 19;
  *(_DWORD *)(v1 + 1504) = HIBYTE(v3) - ((v3 >> 23) & 0xA) + 5;
  v4 = *(_DWORD *)(v1 + 9256);
  v6 = v4 > 0x1CDF864C || v4 - 484410957 > 0xE32079B4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((11440 * v6) ^ (v0 + 2059598378))) - 12))();
}

uint64_t sub_1002EE4B4()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((((v0 ^ 0x1842) - 4218) | 0x18) ^ 0x18A) * (v1 & 1)) ^ v0 ^ 0x1842))
                            - ((((v0 ^ 0x1842) - 4402) | 0x120u) ^ 0x1EBLL)))();
}

uint64_t sub_1002EE514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12
                                                                                                + 8
                                                                                                * ((1756
                                                                                                  * ((*(_DWORD *)(v7 - 0x5ECCBEE0D7943EALL) & ((v8 - 414) << (v9 + 22))) == ((v8 - 310551720) & 0x97BFB31F ^ v11))) ^ v8));
  *(_QWORD *)(v10 + 5240) = v7;
  v14 = *(_QWORD *)(v10 + 5192);
  *(_QWORD *)(v10 + 9504) = *(_QWORD *)(v10 + 5416);
  *(_QWORD *)(v10 + 9576) = v14;
  *(_QWORD *)(v10 + 9496) = *(_QWORD *)(v10 + 6696);
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 9688) = *(_DWORD *)(v10 + 5412);
  v15 = *(unsigned int *)(v10 + 6720);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 5236) = v6;
  *(_DWORD *)(v10 + 5232) = v9;
  *(_DWORD *)(v10 + 8760) = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 8752) = *(_DWORD *)(v10 + 9480);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 6712) = a6;
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 9136) = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9736) = a6;
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 8704) = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  return v13(a1, a2, v14, a4, a5, v15, 61);
}

uint64_t sub_1002EE680@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + 6696);
  *(_QWORD *)(v2 + 9504) = *(_QWORD *)(v2 + 5416);
  *(_QWORD *)(v2 + 9576) = v3;
  *(_QWORD *)(v2 + 9496) = v3;
  *(_DWORD *)(v2 + 6720) = a1;
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 9688) = *(_DWORD *)(v2 + 5412);
  *(_DWORD *)(v2 + 8748) = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8744) = *(_DWORD *)(v2 + 8628);
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 8664) = *(_DWORD *)(v2 + 8992);
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = *(_DWORD *)(v2 + 9004);
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 8632) = *(_DWORD *)(v2 + 8800);
  v4 = *(_DWORD *)(v2 + 5408);
  *(_DWORD *)(v2 + 9736) = *(_DWORD *)(v2 + 6712);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_QWORD *)(v2 + 9680) = *(_QWORD *)(v2 + 9504);
  if (((a2 - 2059596106) ^ 0x853D1004) + 8378 + v4 - 8395)
    v5 = 137;
  else
    v5 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v5) >> ((-45 * ((a2 - 74) ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v5)) == 30)) ^ (a2 + 8044))))();
}

void sub_1002EE784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  *(_DWORD *)(*(_QWORD *)(v6 + 8248) + 9328) = 0;
  *(_DWORD *)(v6 + 5988) = 277002460;
  *(_QWORD *)(v6 + 8944) = *(_QWORD *)(v6 + 9568);
  *(_DWORD *)(*(_QWORD *)(v6 + 6736) + 2864) = 1;
  *(_QWORD *)(v6 + 8576) = *(_QWORD *)(v6 + 8888);
  *(_QWORD *)(v6 + 8952) = *(_QWORD *)(v6 + 9200);
  *(_QWORD *)(v6 + 8936) = *(_QWORD *)(v6 + 8880);
  *(_QWORD *)(v6 + 9280) = *(_QWORD *)(v6 + 9600);
  *(_QWORD *)(v6 + 9016) = *(_QWORD *)(v6 + 9608);
  *(_DWORD *)(v6 + 9116) = *(_DWORD *)(v6 + 9448);
  *(_DWORD *)(v6 + 9272) = *(_DWORD *)(v6 + 9656);
  *(_DWORD *)(v6 + 9320) = *(_DWORD *)(v6 + 9616);
  *(_DWORD *)(v6 + 8832) = *(_DWORD *)(v6 + 9384);
  *(_DWORD *)(v6 + 9152) = *(_DWORD *)(v6 + 8964);
  *(_DWORD *)(v6 + 8608) = *(_DWORD *)(v6 + 9424);
  *(_DWORD *)(v6 + 9104) = *(_DWORD *)(v6 + 9440);
  *(_DWORD *)(v6 + 8456) = *(_DWORD *)(v6 + 9664);
  *(_DWORD *)(v6 + 8912) = *(_DWORD *)(v6 + 8872);
  *(_DWORD *)(v6 + 9072) = *(_DWORD *)(v6 + 9632);
  *(_DWORD *)(v6 + 8920) = *(_DWORD *)(v6 + 9160);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8904) = *(_DWORD *)(v6 + 8616);
  *(_DWORD *)(v6 + 8552) = *(_DWORD *)(v6 + 9408);
  *(_DWORD *)(v6 + 8900) = *(_DWORD *)(v6 + 9096);
  *(_DWORD *)(v6 + 9312) = a6;
  *(_DWORD *)(v6 + 9184) = *(_DWORD *)(v6 + 9584);
  *(_DWORD *)(v6 + 8572) = *(_DWORD *)(v6 + 8984);
  *(_DWORD *)(v6 + 8932) = *(_DWORD *)(v6 + 8612);
  *(_DWORD *)(v6 + 8328) = *(_DWORD *)(v6 + 9592);
  *(_QWORD *)(v6 + 6904) = *(_QWORD *)(v6 + 7664);
  *(_QWORD *)(v6 + 6872) = *(_QWORD *)(v6 + 7680);
  *(_QWORD *)(v6 + 6864) = *(_QWORD *)(v6 + 7656);
  *(_QWORD *)(v6 + 6888) = *(_QWORD *)(v6 + 7688);
  *(_QWORD *)(v6 + 6880) = *(_QWORD *)(v6 + 7696);
  *(_QWORD *)(v6 + 6896) = *(_QWORD *)(v6 + 7704);
  *(_DWORD *)(v6 + 8080) = *(_DWORD *)(v6 + 8032);
  *(_DWORD *)(v6 + 6928) = *(_DWORD *)(v6 + 7712);
  *(_DWORD *)(v6 + 7920) = *(_DWORD *)(v6 + 7936);
  *(_DWORD *)(v6 + 7904) = *(_DWORD *)(v6 + 8312);
  *(_DWORD *)(v6 + 7040) = *(_DWORD *)(v6 + 6944);
  *(_DWORD *)(v6 + 6856) = *(_DWORD *)(v6 + 7648);
  *(_DWORD *)(v6 + 8064) = *(_DWORD *)(v6 + 7992);
  *(_DWORD *)(v6 + 6952) = *(_DWORD *)(v6 + 6936);
  *(_DWORD *)(v6 + 6984) = *(_DWORD *)(v6 + 7552);
  *(_DWORD *)(v6 + 8136) = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 7000) = *(_DWORD *)(v6 + 6968);
  *(_DWORD *)(v6 + 7928) = *(_DWORD *)(v6 + 7952);
  *(_DWORD *)(v6 + 7912) = *(_DWORD *)(v6 + 7888);
  *(_DWORD *)(v6 + 6912) = *(_DWORD *)(v6 + 7640);
  *(_DWORD *)(v6 + 7964) = 1;
  *(_DWORD *)(v6 + 7008) = *(_DWORD *)(v6 + 6992);
  *(_DWORD *)(v6 + 6920) = *(_DWORD *)(v6 + 7672);
  *(_DWORD *)(v6 + 8040) = *(_DWORD *)(v6 + 8020);
  *(_DWORD *)(v6 + 8116) = *(_DWORD *)(v6 + 8024);
  *(_DWORD *)(v6 + 7152) = *(_DWORD *)(v6 + 8000);
  *(_DWORD *)(v6 + 8272) = *(_DWORD *)(v6 + 7984);
  *(_DWORD *)(v6 + 8056) = *(_DWORD *)(v6 + 8008);
  *(_DWORD *)(v6 + 7080) = *(_DWORD *)(v6 + 7592);
  *(_DWORD *)(v6 + 7088) = *(_DWORD *)(v6 + 7584);
  *(_DWORD *)(v6 + 7072) = *(_DWORD *)(v6 + 7576);
  *(_DWORD *)(v6 + 9680) = *(_DWORD *)(v6 + 7632);
  JUMPOUT(0x1002EE984);
}

uint64_t sub_1002EEA48@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v6 = v3;
  *(_DWORD *)(v5 + 7776) = 0;
  *(_DWORD *)(v5 + 9464) = 0;
  v7 = (a3 - 5998) | 0x1842u;
  v8 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                                            + 8
                                                            * ((((((_DWORD)v7 - 6266) & *(_DWORD *)(*(_QWORD *)(v5 + 5208)
                                                                                                  + 1284)) == 0)
                                                              * (((a3 - 6039) | 0x8AF) - 2230)) ^ (a3 - 774)))
                                                - 4);
  *(_QWORD *)(v5 + 7664) = *(_QWORD *)(v5 + 6904);
  *(_QWORD *)(v5 + 7680) = *(_QWORD *)(v5 + 6872);
  *(_QWORD *)(v5 + 7656) = *(_QWORD *)(v5 + 6864);
  *(_QWORD *)(v5 + 7688) = *(_QWORD *)(v5 + 6888);
  *(_QWORD *)(v5 + 7696) = *(_QWORD *)(v5 + 6880);
  *(_QWORD *)(v5 + 7704) = *(_QWORD *)(v5 + 6896);
  *(_QWORD *)(v5 + 9568) = *(_QWORD *)(v5 + 8944);
  *(_QWORD *)(v5 + 8888) = *(_QWORD *)(v5 + 8576);
  *(_QWORD *)(v5 + 9200) = *(_QWORD *)(v5 + 8952);
  *(_QWORD *)(v5 + 8880) = *(_QWORD *)(v5 + 8936);
  *(_DWORD *)(v5 + 8032) = *(_DWORD *)(v5 + 8080);
  *(_DWORD *)(v5 + 7712) = *(_DWORD *)(v5 + 6928);
  *(_DWORD *)(v5 + 9128) = *(_DWORD *)(v5 + 9328);
  *(_DWORD *)(v5 + 7936) = *(_DWORD *)(v5 + 7920);
  *(_DWORD *)(v5 + 7532) = a2;
  *(_DWORD *)(v5 + 9656) = *(_DWORD *)(v5 + 9272);
  *(_DWORD *)(v5 + 7976) = *(_DWORD *)(v5 + 8212);
  *(_DWORD *)(v5 + 8312) = *(_DWORD *)(v5 + 7904);
  *(_DWORD *)(v5 + 6944) = *(_DWORD *)(v5 + 7040);
  *(_DWORD *)(v5 + 7648) = *(_DWORD *)(v5 + 6856);
  *(_DWORD *)(v5 + 7992) = *(_DWORD *)(v5 + 8064);
  *(_DWORD *)(v5 + 9384) = *(_DWORD *)(v5 + 8832);
  *(_DWORD *)(v5 + 8964) = *(_DWORD *)(v5 + 9152);
  *(_DWORD *)(v5 + 6936) = *(_DWORD *)(v5 + 6952);
  *(_DWORD *)(v5 + 9520) = v4;
  *(_DWORD *)(v5 + 7552) = *(_DWORD *)(v5 + 6984);
  *(_DWORD *)(v5 + 9424) = *(_DWORD *)(v5 + 8608);
  *(_DWORD *)(v5 + 9480) = *(_DWORD *)(v5 + 8136);
  *(_DWORD *)(v5 + 6968) = *(_DWORD *)(v5 + 7000);
  *(_DWORD *)(v5 + 7952) = *(_DWORD *)(v5 + 7928);
  *(_DWORD *)(v5 + 7888) = *(_DWORD *)(v5 + 7912);
  *(_DWORD *)(v5 + 9440) = *(_DWORD *)(v5 + 9104);
  *(_DWORD *)(v5 + 8872) = *(_DWORD *)(v5 + 8912);
  *(_DWORD *)(v5 + 7640) = *(_DWORD *)(v5 + 6912);
  *(_DWORD *)(v5 + 6992) = *(_DWORD *)(v5 + 7008);
  *(_DWORD *)(v5 + 7672) = *(_DWORD *)(v5 + 6920);
  *(_DWORD *)(v5 + 8020) = *(_DWORD *)(v5 + 8040);
  *(_DWORD *)(v5 + 8024) = *(_DWORD *)(v5 + 8116);
  *(_DWORD *)(v5 + 9632) = *(_DWORD *)(v5 + 9072);
  *(_DWORD *)(v5 + 9160) = *(_DWORD *)(v5 + 8920);
  *(_DWORD *)(v5 + 8000) = *(_DWORD *)(v5 + 7152);
  *(_DWORD *)(v5 + 7984) = *(_DWORD *)(v5 + 8272);
  *(_DWORD *)(v5 + 8008) = *(_DWORD *)(v5 + 8056);
  *(_DWORD *)(v5 + 7592) = *(_DWORD *)(v5 + 7080);
  *(_DWORD *)(v5 + 9528) = v6;
  *(_DWORD *)(v5 + 9624) = *(_DWORD *)(v5 + 9264);
  *(_DWORD *)(v5 + 8616) = *(_DWORD *)(v5 + 8904);
  *(_DWORD *)(v5 + 7584) = *(_DWORD *)(v5 + 7088);
  *(_DWORD *)(v5 + 7576) = *(_DWORD *)(v5 + 7072);
  *(_DWORD *)(v5 + 9408) = *(_DWORD *)(v5 + 8552);
  *(_DWORD *)(v5 + 9096) = *(_DWORD *)(v5 + 8900);
  *(_DWORD *)(v5 + 9688) = 1;
  *(_DWORD *)(v5 + 7792) = 1;
  *(_DWORD *)(v5 + 9504) = 1;
  *(_DWORD *)(v5 + 7784) = 1;
  *(_DWORD *)(v5 + 9496) = 1;
  *(_DWORD *)(v5 + 9576) = 1;
  *(_DWORD *)(v5 + 9456) = 1;
  *(_DWORD *)(v5 + 9488) = 1;
  *(_DWORD *)(v5 + 9472) = 1;
  *(_DWORD *)(v5 + 9584) = *(_DWORD *)(v5 + 9184);
  *(_DWORD *)(v5 + 8984) = *(_DWORD *)(v5 + 8572);
  *(_DWORD *)(v5 + 8236) = *(_DWORD *)(v5 + 9240);
  *(_DWORD *)(v5 + 8612) = *(_DWORD *)(v5 + 8932);
  *(_DWORD *)(v5 + 7632) = *(_DWORD *)(v5 + 9680);
  return v8(a1, v7);
}

uint64_t sub_1002EECAC@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  int v7;

  *(_DWORD *)(v4 + 7776) = 0;
  v5 = *(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744)
                           + 8 * ((((**(_BYTE **)(v4 + 6736) & 1) == 0) * ((a2 + 4028) ^ 0x1E26)) ^ a2));
  *(_QWORD *)(v4 + 7664) = *(_QWORD *)(v4 + 6904);
  *(_QWORD *)(v4 + 7680) = *(_QWORD *)(v4 + 6872);
  *(_QWORD *)(v4 + 7656) = *(_QWORD *)(v4 + 6864);
  *(_QWORD *)(v4 + 7688) = *(_QWORD *)(v4 + 6888);
  *(_QWORD *)(v4 + 7696) = *(_QWORD *)(v4 + 6880);
  *(_QWORD *)(v4 + 7704) = *(_QWORD *)(v4 + 6896);
  *(_QWORD *)(v4 + 9568) = *(_QWORD *)(v4 + 8944);
  *(_QWORD *)(v4 + 8888) = *(_QWORD *)(v4 + 8576);
  *(_QWORD *)(v4 + 9200) = *(_QWORD *)(v4 + 8952);
  *(_QWORD *)(v4 + 8880) = *(_QWORD *)(v4 + 8936);
  *(_DWORD *)(v4 + 8032) = *(_DWORD *)(v4 + 8080);
  *(_DWORD *)(v4 + 7712) = *(_DWORD *)(v4 + 6928);
  *(_DWORD *)(v4 + 7936) = *(_DWORD *)(v4 + 7920);
  *(_DWORD *)(v4 + 7532) = a1;
  *(_DWORD *)(v4 + 9656) = *(_DWORD *)(v4 + 9272);
  *(_DWORD *)(v4 + 8312) = *(_DWORD *)(v4 + 7904);
  *(_DWORD *)(v4 + 6944) = *(_DWORD *)(v4 + 7040);
  *(_DWORD *)(v4 + 7648) = *(_DWORD *)(v4 + 6856);
  *(_DWORD *)(v4 + 7992) = *(_DWORD *)(v4 + 8064);
  *(_DWORD *)(v4 + 9384) = *(_DWORD *)(v4 + 8832);
  *(_DWORD *)(v4 + 8964) = *(_DWORD *)(v4 + 9152);
  *(_DWORD *)(v4 + 6936) = *(_DWORD *)(v4 + 6952);
  *(_DWORD *)(v4 + 9520) = v3;
  *(_DWORD *)(v4 + 7552) = *(_DWORD *)(v4 + 6984);
  *(_DWORD *)(v4 + 9424) = *(_DWORD *)(v4 + 8608);
  *(_DWORD *)(v4 + 9480) = *(_DWORD *)(v4 + 8136);
  *(_DWORD *)(v4 + 6968) = *(_DWORD *)(v4 + 7000);
  *(_DWORD *)(v4 + 7952) = *(_DWORD *)(v4 + 7928);
  *(_DWORD *)(v4 + 7888) = *(_DWORD *)(v4 + 7912);
  *(_DWORD *)(v4 + 9440) = *(_DWORD *)(v4 + 9104);
  *(_DWORD *)(v4 + 8872) = *(_DWORD *)(v4 + 8912);
  *(_DWORD *)(v4 + 7640) = *(_DWORD *)(v4 + 6912);
  *(_DWORD *)(v4 + 6992) = *(_DWORD *)(v4 + 7008);
  *(_DWORD *)(v4 + 7672) = *(_DWORD *)(v4 + 6920);
  *(_DWORD *)(v4 + 8020) = *(_DWORD *)(v4 + 8040);
  *(_DWORD *)(v4 + 8024) = *(_DWORD *)(v4 + 8116);
  *(_DWORD *)(v4 + 9632) = *(_DWORD *)(v4 + 9072);
  *(_DWORD *)(v4 + 9160) = *(_DWORD *)(v4 + 8920);
  *(_DWORD *)(v4 + 8000) = *(_DWORD *)(v4 + 7152);
  *(_DWORD *)(v4 + 7984) = *(_DWORD *)(v4 + 8272);
  *(_DWORD *)(v4 + 8008) = *(_DWORD *)(v4 + 8056);
  *(_DWORD *)(v4 + 7592) = *(_DWORD *)(v4 + 7080);
  *(_DWORD *)(v4 + 9528) = v2;
  *(_DWORD *)(v4 + 9624) = *(_DWORD *)(v4 + 9264);
  *(_DWORD *)(v4 + 8616) = *(_DWORD *)(v4 + 8904);
  *(_DWORD *)(v4 + 7584) = *(_DWORD *)(v4 + 7088);
  *(_DWORD *)(v4 + 7576) = *(_DWORD *)(v4 + 7072);
  *(_DWORD *)(v4 + 9408) = *(_DWORD *)(v4 + 8552);
  *(_DWORD *)(v4 + 9096) = *(_DWORD *)(v4 + 8900);
  *(_DWORD *)(v4 + 9584) = *(_DWORD *)(v4 + 9184);
  *(_DWORD *)(v4 + 8984) = *(_DWORD *)(v4 + 8572);
  *(_DWORD *)(v4 + 8612) = *(_DWORD *)(v4 + 8932);
  *(_DWORD *)(v4 + 7632) = *(_DWORD *)(v4 + 9680);
  *(_DWORD *)(v4 + 9592) = 37;
  v6 = *(_QWORD *)(v4 + 9304);
  v7 = *(_DWORD *)(v4 + 9312);
  *(_DWORD *)(v4 + 9128) = v7;
  *(_DWORD *)(v4 + 7976) = *(_DWORD *)(v4 + 8212);
  *(_DWORD *)(v4 + 9688) = 1;
  *(_DWORD *)(v4 + 7792) = 1;
  *(_DWORD *)(v4 + 9504) = 1;
  *(_DWORD *)(v4 + 7784) = 1;
  *(_DWORD *)(v4 + 9496) = 1;
  *(_DWORD *)(v4 + 9576) = 1;
  *(_DWORD *)(v4 + 9456) = 1;
  *(_DWORD *)(v4 + 9488) = 1;
  *(_DWORD *)(v4 + 9472) = 1;
  *(_DWORD *)(v4 + 9464) = 1;
  *(_DWORD *)(v4 + 8236) = *(_DWORD *)(v4 + 9240);
  *(_QWORD *)(v4 + 9600) = v6;
  *(_QWORD *)(v4 + 9608) = *(_QWORD *)(v4 + 5384);
  *(_DWORD *)(v4 + 9448) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 9616) = *(_DWORD *)(v4 + 9328);
  *(_DWORD *)(v4 + 9664) = v7;
  return v5();
}

uint64_t sub_1002EEF20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v0 ^ 0x853D11F8) + 2059605887)
                                               * ((*(_DWORD *)(v1 + 7520) & 0xFE) == 122)) ^ v0))
                            - ((v0 + 3147) ^ 0xE36)))();
}

uint64_t sub_1002EEF70@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                             + 8
                                                                             * (((v2 == (a2 + 64))
                                                                               * ((a2 - 2059599395) ^ (v5 + 75))) ^ a2));
  *(_QWORD *)(v3 + 9280) = *(_QWORD *)(v3 + 9600);
  *(_QWORD *)(v3 + 9016) = *(_QWORD *)(v3 + 9608);
  v7 = *(unsigned int *)(v3 + 8176);
  v8 = *(unsigned int *)(v3 + 7608);
  *(_DWORD *)(v3 + 9320) = *(_DWORD *)(v3 + 9616);
  v9 = *(unsigned int *)(v3 + 7552);
  *(_DWORD *)(v3 + 8456) = *(_DWORD *)(v3 + 9664);
  v10 = *(unsigned int *)(v3 + 9248);
  *(_DWORD *)(v3 + 8188) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 8328) = *(_DWORD *)(v3 + 9592);
  return v6(v7, v8, a1, v9, v10);
}

uint64_t sub_1002EF008()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;

  *(_QWORD *)(v2 + 9280) = *(_QWORD *)(v2 + 9600);
  *(_QWORD *)(v2 + 9016) = *(_QWORD *)(v2 + 9608);
  v3 = *(_DWORD *)(v2 + 8176);
  v4 = *(unsigned int *)(v2 + 8312);
  *(_DWORD *)(v2 + 9320) = *(_DWORD *)(v2 + 9616);
  *(_DWORD *)(v2 + 7552) = *(_DWORD *)(v2 + 7608);
  *(_DWORD *)(v2 + 8456) = *(_DWORD *)(v2 + 9664);
  *(_DWORD *)(v2 + 8188) = *(_DWORD *)(v2 + 9528);
  *(_DWORD *)(v2 + 8328) = v1;
  if (v3 + 1 > 1)
    v5 = v3 + 1;
  else
    v5 = 1;
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 + 9744)
                                                    + 8
                                                    * (((v5 < (v0 ^ 0x853D101F)) * ((v0 + 2059601651) ^ 0x173E)) ^ (v0 + 2059606401))))(v3, v4);
}

uint64_t sub_1002EF0FC(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  *(__n128 *)(v10 - 0x62AA055D109F20F3) = a1;
  *(__n128 *)(v10 - 0x62AA055D109F20E3) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((((v7 & 0xFFFFFFF8) == 8) * v12) ^ v8)) - ((v8 + a7) & v9) + v13))();
}

void sub_1002EF148()
{
  JUMPOUT(0x1002EF11CLL);
}

uint64_t sub_1002EF154(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((a3 - 506) | 0x20A) + 7334) * (v3 != v4)) ^ a3))
                            - ((a3 - 5620) | 0xA20u)
                            + 2846))();
}

uint64_t sub_1002EF198()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(v0 - 0x62AA055D109F20F3) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((496 * (((((v3 + 40) | 0xC8) + 1) ^ (v1 + 1 == v2)) & 1)) ^ ((v3 - 5336) | 0x14C8)))
                            - 8))();
}

void sub_1002EF1F0()
{
  JUMPOUT(0x1002EF1A8);
}

uint64_t sub_1002EF1F8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  _BOOL4 v11;

  v9 = 932 * (v4 ^ 0xB25);
  v11 = ((v6 << 31) & *(_DWORD *)(v8 + 4 * a4 - 0x62AA055D109F20F7)) == 0 && v9 != 2827;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v11 * v7) ^ v9)) - 4))();
}

void sub_1002EF284()
{
  JUMPOUT(0x1002EF254);
}

void sub_1002EF28C(int a1@<W0>, int a2@<W1>, unsigned int a3@<W3>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  unsigned int v22;
  int v23;

  v17 = (v11 - 2059596829);
  v18 = ((v17 ^ 0x853D103B) & v6) + (v10 & 0x1F ^ 0xFFCFF7B6);
  v19 = v18 + 1945845228;
  *(_DWORD *)(v12 + 6828) = v18 + 1945845228;
  v20 = v18 == -3147850;
  v21 = v14 << (v18 + 74);
  if (v19 == 1942697378)
    v22 = a3 + 1;
  else
    v22 = a3;
  *(_DWORD *)(v13 + 4 * v22 - 0x62AA055D109F20F7) = v21;
  v23 = v20;
  *(_DWORD *)(v12 + 6824) = ((v23 | (2 * v23)) ^ 0x5D) - 68;
  *(_QWORD *)(v12 + 9416) = v17;
  *(_QWORD *)(v12 + 8408) = *(_QWORD *)(v12 + 8432);
  *(_QWORD *)(v12 + 8400) = *(_QWORD *)(v12 + 8416);
  *(_QWORD *)(v12 + 8392) = *(_QWORD *)(v12 + 8536);
  *(_QWORD *)(v12 + 8384) = *(_QWORD *)(v12 + 8488);
  *(_QWORD *)(v12 + 8376) = *(_QWORD *)(v12 + 8472);
  *(_QWORD *)(v12 + 8944) = *(_QWORD *)(v12 + 9568);
  *(_QWORD *)(v12 + 8576) = *(_QWORD *)(v12 + 8888);
  *(_QWORD *)(v12 + 8952) = *(_QWORD *)(v12 + 9200);
  *(_QWORD *)(v12 + 8936) = *(_QWORD *)(v12 + 8880);
  *(_QWORD *)(v12 + 7624) = v15;
  *(_DWORD *)(v12 + 8176) = a1;
  *(_DWORD *)(v12 + 9116) = *(_DWORD *)(v12 + 9448);
  *(_DWORD *)(v12 + 9272) = *(_DWORD *)(v12 + 9656);
  *(_DWORD *)(v12 + 8312) = a2;
  *(_DWORD *)(v12 + 7352) = a4;
  *(_DWORD *)(v12 + 8832) = *(_DWORD *)(v12 + 9384);
  *(_DWORD *)(v12 + 9152) = *(_DWORD *)(v12 + 8964);
  *(_DWORD *)(v12 + 7768) = a5;
  *(_DWORD *)(v12 + 8368) = *(_DWORD *)(v12 + 9520);
  *(_DWORD *)(v12 + 8608) = *(_DWORD *)(v12 + 9424);
  *(_DWORD *)(v12 + 8504) = *(_DWORD *)(v12 + 9256);
  *(_DWORD *)(v12 + 8520) = *(_DWORD *)(v12 + 8464);
  *(_DWORD *)(v12 + 8356) = *(_DWORD *)(v12 + 8532);
  *(_DWORD *)(v12 + 8360) = *(_DWORD *)(v12 + 8424);
  *(_DWORD *)(v12 + 9104) = *(_DWORD *)(v12 + 9440);
  *(_DWORD *)(v12 + 8912) = *(_DWORD *)(v12 + 8872);
  *(_DWORD *)(v12 + 8512) = *(_DWORD *)(v12 + 8480);
  *(_DWORD *)(v12 + 9248) = v9;
  *(_DWORD *)(v12 + 9072) = *(_DWORD *)(v12 + 9632);
  *(_DWORD *)(v12 + 8920) = *(_DWORD *)(v12 + 9160);
  *(_DWORD *)(v12 + 7404) = v7;
  *(_DWORD *)(v12 + 8496) = *(_DWORD *)(v12 + 8188);
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8904) = *(_DWORD *)(v12 + 8616);
  *(_DWORD *)(v12 + 7600) = v8;
  *(_DWORD *)(v12 + 8552) = *(_DWORD *)(v12 + 9408);
  *(_DWORD *)(v12 + 8900) = *(_DWORD *)(v12 + 9096);
  *(_DWORD *)(v12 + 9184) = *(_DWORD *)(v12 + 9584);
  *(_DWORD *)(v12 + 8572) = *(_DWORD *)(v12 + 8984);
  *(_DWORD *)(v12 + 8352) = *(_DWORD *)(v12 + 9040);
  *(_DWORD *)(v12 + 7520) = a6;
  *(_DWORD *)(v12 + 8932) = *(_DWORD *)(v12 + 8612);
  *(_DWORD *)(v12 + 8440) = 60;
  *(_QWORD *)(v12 + 7032) = v13;
  *(_QWORD *)(v12 + 7392) = v16;
  *(_DWORD *)(v12 + 9128) = v22;
  *(_DWORD *)(v12 + 8232) = v22;
  *(_DWORD *)(v12 + 7608) = a3;
  JUMPOUT(0x1002EF47CLL);
}

uint64_t sub_1002EF504(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v11 = ((-*(_DWORD *)(v10 - 0x62AA055D109F20F3)
        - 2125521165
        - ((2 * ~*(_DWORD *)(v10 - 0x62AA055D109F20F3)) & 0x29E3DE8)) ^ 0x814F1EF4)
      + *(_DWORD *)(v7 - 0x62AA055D109F20F3);
  *(_DWORD *)(v6 - 0x62AA055D109F20F3) = ((v11 - 2125521164 - ((v11 << (((v8 + 7) | 8) ^ 0x19)) & 0x29E3DE8)) ^ 0x814F1EF4)
                                         + v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * ((1511 * (v5 + 1 == a4)) ^ v8)) - 4))();
}

uint64_t sub_1002EF5C8@<X0>(unsigned int a1@<W3>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                                                 + 8
                                                                                 * (a2 ^ (122
                                                                                        * (a1 < *(_DWORD *)(v2 + 9128)))))
                                                                     + 2235371539
                                                                     - ((a2 - 306234009) & 0x977DBB97)
                                                                     - 4))(2059596029, 0x17AC2EFE7, 0xB2C9C9BF814F1EF3);
}

uint64_t sub_1002EF684@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;

  *(_DWORD *)(v9 + a6) = ((*(_DWORD *)(v10 + a6) - ((((a8 + a4) & v11) + 2 * *(_DWORD *)(v10 + a6) + a1) & a7) + a2) ^ a5)
                       + v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((122 * (a3 + 1 != v13)) ^ a8)) - 8))();
}

uint64_t sub_1002EF6E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  BOOL v14;
  int v15;
  int v16;

  v12 = *(_DWORD *)(v9 + a7);
  v13 = v7 + 1;
  v14 = __CFADD__(v12, 1);
  v15 = v12 + 1;
  v16 = !v14;
  *(_DWORD *)(v9 + a7) = v15;
  if (v13 >= v11)
    v16 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v16 * (((a1 + v8 + 1932) | 0x1F) - 2190)) ^ (a1 + v8 + 2693)))
                            - 12))();
}

uint64_t sub_1002EF734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                       + 8
                                                                                       * (int)(((((v6 + 1902723895) & 0x8E96B7DF)
                                                                                               + ((v6 - 1634521408) & 0x616CDC9D)
                                                                                               - 5330)
                                                                                              * (v5 == 0)) ^ v6));
  *(_QWORD *)(v8 + 8432) = *(_QWORD *)(v8 + 8408);
  *(_QWORD *)(v8 + 8416) = *(_QWORD *)(v8 + 8400);
  *(_QWORD *)(v8 + 8536) = *(_QWORD *)(v8 + 8392);
  *(_QWORD *)(v8 + 8488) = *(_QWORD *)(v8 + 8384);
  *(_QWORD *)(v8 + 8472) = *(_QWORD *)(v8 + 8376);
  *(_QWORD *)(v8 + 9568) = *(_QWORD *)(v8 + 8944);
  *(_QWORD *)(v8 + 8888) = *(_QWORD *)(v8 + 8576);
  *(_QWORD *)(v8 + 9200) = *(_QWORD *)(v8 + 8952);
  *(_QWORD *)(v8 + 8880) = *(_QWORD *)(v8 + 8936);
  *(_QWORD *)(v8 + 9600) = *(_QWORD *)(v8 + 9280);
  *(_QWORD *)(v8 + 9608) = *(_QWORD *)(v8 + 9016);
  *(_DWORD *)(v8 + 9448) = *(_DWORD *)(v8 + 9116);
  *(_DWORD *)(v8 + 9656) = *(_DWORD *)(v8 + 9272);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 9320);
  *(_DWORD *)(v8 + 9384) = *(_DWORD *)(v8 + 8832);
  *(_DWORD *)(v8 + 8964) = *(_DWORD *)(v8 + 9152);
  *(_DWORD *)(v8 + 9520) = *(_DWORD *)(v8 + 8368);
  *(_DWORD *)(v8 + 9424) = *(_DWORD *)(v8 + 8608);
  *(_DWORD *)(v8 + 9256) = *(_DWORD *)(v8 + 8504);
  v11 = *(unsigned int *)(v8 + 9120);
  *(_DWORD *)(v8 + 8464) = *(_DWORD *)(v8 + 8520);
  *(_DWORD *)(v8 + 8532) = *(_DWORD *)(v8 + 8356);
  *(_DWORD *)(v8 + 8424) = *(_DWORD *)(v8 + 8360);
  *(_DWORD *)(v8 + 9440) = *(_DWORD *)(v8 + 9104);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 8456);
  *(_DWORD *)(v8 + 8872) = *(_DWORD *)(v8 + 8912);
  *(_DWORD *)(v8 + 8480) = *(_DWORD *)(v8 + 8512);
  *(_DWORD *)(v8 + 9632) = *(_DWORD *)(v8 + 9072);
  *(_DWORD *)(v8 + 9160) = *(_DWORD *)(v8 + 8920);
  *(_DWORD *)(v8 + 9528) = *(_DWORD *)(v8 + 8496);
  *(_DWORD *)(v8 + 9624) = *(_DWORD *)(v8 + 9264);
  *(_DWORD *)(v8 + 8616) = *(_DWORD *)(v8 + 8904);
  *(_DWORD *)(v8 + 9408) = *(_DWORD *)(v8 + 8552);
  *(_DWORD *)(v8 + 9096) = *(_DWORD *)(v8 + 8900);
  *(_DWORD *)(v8 + 9584) = *(_DWORD *)(v8 + 9184);
  *(_DWORD *)(v8 + 8984) = *(_DWORD *)(v8 + 8572);
  *(_DWORD *)(v8 + 9240) = *(_DWORD *)(v8 + 8440);
  *(_DWORD *)(v8 + 9040) = *(_DWORD *)(v8 + 8352);
  *(_DWORD *)(v8 + 8612) = *(_DWORD *)(v8 + 8932);
  *(_DWORD *)(v8 + 9592) = *(_DWORD *)(v8 + 8328);
  return v10(v9, a2, 1, a4, a5, v11);
}

void sub_1002EF8E4(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_DWORD *)(a1 - 0x62AA055D109F20EFLL) = v1;
  *(_QWORD *)(v2 + 8432) = *(_QWORD *)(v2 + 8408);
  *(_QWORD *)(v2 + 8416) = *(_QWORD *)(v2 + 8400);
  *(_QWORD *)(v2 + 8536) = *(_QWORD *)(v2 + 8392);
  *(_QWORD *)(v2 + 8488) = *(_QWORD *)(v2 + 8384);
  *(_QWORD *)(v2 + 8472) = *(_QWORD *)(v2 + 8376);
  *(_QWORD *)(v2 + 9568) = *(_QWORD *)(v2 + 8944);
  *(_QWORD *)(v2 + 8888) = *(_QWORD *)(v2 + 8576);
  *(_QWORD *)(v2 + 9200) = *(_QWORD *)(v2 + 8952);
  *(_QWORD *)(v2 + 8880) = *(_QWORD *)(v2 + 8936);
  *(_QWORD *)(v2 + 9600) = *(_QWORD *)(v2 + 9280);
  *(_QWORD *)(v2 + 9608) = *(_QWORD *)(v2 + 9016);
  *(_DWORD *)(v2 + 9448) = *(_DWORD *)(v2 + 9116);
  *(_DWORD *)(v2 + 9656) = *(_DWORD *)(v2 + 9272);
  *(_DWORD *)(v2 + 9616) = *(_DWORD *)(v2 + 9320);
  *(_DWORD *)(v2 + 9384) = *(_DWORD *)(v2 + 8832);
  *(_DWORD *)(v2 + 8964) = *(_DWORD *)(v2 + 9152);
  *(_DWORD *)(v2 + 9520) = *(_DWORD *)(v2 + 8368);
  *(_DWORD *)(v2 + 9424) = *(_DWORD *)(v2 + 8608);
  *(_DWORD *)(v2 + 9256) = *(_DWORD *)(v2 + 8504);
  *(_DWORD *)(v2 + 8464) = *(_DWORD *)(v2 + 8520);
  *(_DWORD *)(v2 + 8532) = *(_DWORD *)(v2 + 8356);
  *(_DWORD *)(v2 + 8424) = *(_DWORD *)(v2 + 8360);
  *(_DWORD *)(v2 + 9440) = *(_DWORD *)(v2 + 9104);
  *(_DWORD *)(v2 + 9664) = *(_DWORD *)(v2 + 8456);
  *(_DWORD *)(v2 + 8872) = *(_DWORD *)(v2 + 8912);
  *(_DWORD *)(v2 + 8480) = *(_DWORD *)(v2 + 8512);
  *(_DWORD *)(v2 + 9632) = *(_DWORD *)(v2 + 9072);
  *(_DWORD *)(v2 + 9160) = *(_DWORD *)(v2 + 8920);
  *(_DWORD *)(v2 + 9528) = *(_DWORD *)(v2 + 8496);
  *(_DWORD *)(v2 + 9624) = *(_DWORD *)(v2 + 9264);
  *(_DWORD *)(v2 + 8616) = *(_DWORD *)(v2 + 8904);
  *(_DWORD *)(v2 + 9408) = *(_DWORD *)(v2 + 8552);
  *(_DWORD *)(v2 + 9096) = *(_DWORD *)(v2 + 8900);
  *(_DWORD *)(v2 + 9584) = *(_DWORD *)(v2 + 9184);
  *(_DWORD *)(v2 + 8984) = *(_DWORD *)(v2 + 8572);
  *(_DWORD *)(v2 + 9240) = *(_DWORD *)(v2 + 8440);
  *(_DWORD *)(v2 + 9040) = *(_DWORD *)(v2 + 8352);
  *(_DWORD *)(v2 + 8612) = *(_DWORD *)(v2 + 8932);
  JUMPOUT(0x1002EFA54);
}

uint64_t sub_1002EFA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;

  *(_QWORD *)(v7 + 8520) = a2;
  *(_QWORD *)(v7 + 6904) = *(_QWORD *)(v7 + 7664);
  *(_QWORD *)(v7 + 6872) = *(_QWORD *)(v7 + 7680);
  *(_QWORD *)(v7 + 6864) = *(_QWORD *)(v7 + 7656);
  *(_QWORD *)(v7 + 6888) = *(_QWORD *)(v7 + 7688);
  *(_QWORD *)(v7 + 6880) = *(_QWORD *)(v7 + 7696);
  *(_QWORD *)(v7 + 6896) = *(_QWORD *)(v7 + 7704);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 9568);
  *(_QWORD *)(v7 + 8576) = *(_QWORD *)(v7 + 8888);
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 9200);
  *(_QWORD *)(v7 + 8936) = *(_QWORD *)(v7 + 8880);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_QWORD *)(v7 + 5400) = *(_QWORD *)(v7 + 8264);
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 5396) = *(_DWORD *)(v7 + 7448);
  *(_DWORD *)(v7 + 6928) = *(_DWORD *)(v7 + 7712);
  *(_DWORD *)(v7 + 7920) = *(_DWORD *)(v7 + 7936);
  *(_DWORD *)(v7 + 9116) = *(_DWORD *)(v7 + 9448);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 7904) = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 7040) = *(_DWORD *)(v7 + 6944);
  *(_DWORD *)(v7 + 6856) = *(_DWORD *)(v7 + 7648);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 8832) = *(_DWORD *)(v7 + 9384);
  *(_DWORD *)(v7 + 9152) = *(_DWORD *)(v7 + 8964);
  *(_DWORD *)(v7 + 6952) = *(_DWORD *)(v7 + 6936);
  *(_DWORD *)(v7 + 8196) = *(_DWORD *)(v7 + 9520);
  *(_DWORD *)(v7 + 6984) = *(_DWORD *)(v7 + 7552);
  *(_DWORD *)(v7 + 8608) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 8136) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 7000) = *(_DWORD *)(v7 + 6968);
  *(_DWORD *)(v7 + 7928) = *(_DWORD *)(v7 + 7952);
  *(_DWORD *)(v7 + 7912) = *(_DWORD *)(v7 + 7888);
  *(_DWORD *)(v7 + 4268) = a6;
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 8456) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 8912) = *(_DWORD *)(v7 + 8872);
  *(_DWORD *)(v7 + 6912) = *(_DWORD *)(v7 + 7640);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 7008) = *(_DWORD *)(v7 + 6992);
  *(_DWORD *)(v7 + 6920) = *(_DWORD *)(v7 + 7672);
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 8920) = *(_DWORD *)(v7 + 9160);
  *(_DWORD *)(v7 + 7152) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7080) = *(_DWORD *)(v7 + 7592);
  *(_DWORD *)(v7 + 8188) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8904) = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 7088) = *(_DWORD *)(v7 + 7584);
  *(_DWORD *)(v7 + 7072) = *(_DWORD *)(v7 + 7576);
  *(_DWORD *)(v7 + 8552) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 8900) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 9184) = *(_DWORD *)(v7 + 9584);
  *(_DWORD *)(v7 + 8572) = *(_DWORD *)(v7 + 8984);
  *(_DWORD *)(v7 + 8932) = *(_DWORD *)(v7 + 8612);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 7632);
  *(_DWORD *)(v7 + 8328) = *(_DWORD *)(v7 + 9592);
  v9 = *(_QWORD *)(v7 + 8288);
  *(_DWORD *)(v7 + 5332) = 17;
  *(_DWORD *)(v7 + 4404) = *(_DWORD *)(v7 + 4548);
  *(_DWORD *)(v7 + 8176) = *(_DWORD *)(v7 + 7608);
  v10 = *(_BYTE **)(v7 + 8344);
  *(_DWORD *)(v7 + 9688) = 0;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9648) + ((723 * (v6 ^ (v8 - 3))) ^ 0x827u)) + 83;
  v10[3895] = -70;
  v10[3957] = 32;
  v10[3926] = 50;
  v10[3988] = 55;
  v10[4081] = -14;
  v10[4050] = 22;
  v12 = *(_BYTE **)(v7 + 8448);
  v12[140] = -22;
  v12[109] = -127;
  v10[3954] = 81;
  v10[3923] = -110;
  v12[16] = 103;
  v10[4019] = -71;
  v12[78] = -95;
  v12[171] = 65;
  v12[47] = 73;
  v10[3892] = -24;
  v13 = *(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (v6 + 2059596575));
  *(_DWORD *)(v7 + 5204) = 109 * (v11 ^ 0x5C);
  *(_DWORD *)(v7 + 9148) = 1796353962;
  *(_QWORD *)(v7 + 5480) = *(_QWORD *)(v7 + 8520);
  *(_QWORD *)(v7 + 5472) = *(_QWORD *)(v7 + 7744);
  *(_QWORD *)(v7 + 5464) = v9;
  *(_QWORD *)(v7 + 8288) = v9;
  return ((uint64_t (*)(void))(v13 - 4))();
}

uint64_t sub_1002EFD00(uint64_t a1)
{
  int v1;
  char v2;

  return (*(uint64_t (**)(void))(a1 + 8 * (int)(((((v1 - 5639) ^ 0xFFFFFB9E) + ((v1 - 5639) | 0x46F)) * (v2 & 1)) ^ v1)))();
}

uint64_t sub_1002EFD4C@<X0>(uint64_t a1@<X0>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  _BOOL4 v7;
  _BOOL4 v8;
  uint64_t (*v9)(void);

  *(_QWORD *)(v5 + 8408) = *(_QWORD *)(v5 + 8432);
  *(_QWORD *)(v5 + 8400) = *(_QWORD *)(v5 + 8416);
  *(_QWORD *)(v5 + 8392) = *(_QWORD *)(v5 + 8536);
  *(_QWORD *)(v5 + 8384) = *(_QWORD *)(v5 + 8488);
  *(_QWORD *)(v5 + 8376) = *(_QWORD *)(v5 + 8472);
  *(_QWORD *)(v5 + 8944) = *(_QWORD *)(v5 + 9568);
  *(_QWORD *)(v5 + 8576) = *(_QWORD *)(v5 + 8888);
  *(_QWORD *)(v5 + 8952) = *(_QWORD *)(v5 + 9200);
  *(_QWORD *)(v5 + 8936) = *(_QWORD *)(v5 + 8880);
  *(_QWORD *)(v5 + 9280) = *(_QWORD *)(v5 + 9600);
  *(_QWORD *)(v5 + 9016) = *(_QWORD *)(v5 + 9608);
  *(_DWORD *)(v5 + 9116) = *(_DWORD *)(v5 + 9448);
  *(_DWORD *)(v5 + 9272) = *(_DWORD *)(v5 + 9656);
  *(_DWORD *)(v5 + 9320) = *(_DWORD *)(v5 + 9616);
  *(_DWORD *)(v5 + 8832) = *(_DWORD *)(v5 + 9384);
  *(_DWORD *)(v5 + 9152) = *(_DWORD *)(v5 + 8964);
  *(_DWORD *)(v5 + 8368) = *(_DWORD *)(v5 + 9520);
  *(_DWORD *)(v5 + 8608) = *(_DWORD *)(v5 + 9424);
  *(_DWORD *)(v5 + 8504) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8520) = *(_DWORD *)(v5 + 8464);
  *(_DWORD *)(v5 + 9128) = a2;
  *(_DWORD *)(v5 + 8356) = *(_DWORD *)(v5 + 8532);
  *(_DWORD *)(v5 + 8360) = *(_DWORD *)(v5 + 8424);
  *(_DWORD *)(v5 + 9104) = *(_DWORD *)(v5 + 9440);
  *(_DWORD *)(v5 + 8456) = *(_DWORD *)(v5 + 9664);
  *(_DWORD *)(v5 + 8912) = *(_DWORD *)(v5 + 8872);
  *(_DWORD *)(v5 + 8512) = *(_DWORD *)(v5 + 8480);
  *(_DWORD *)(v5 + 9072) = *(_DWORD *)(v5 + 9632);
  *(_DWORD *)(v5 + 8920) = *(_DWORD *)(v5 + 9160);
  *(_DWORD *)(v5 + 8496) = *(_DWORD *)(v5 + 9528);
  *(_DWORD *)(v5 + 9264) = *(_DWORD *)(v5 + 9624);
  *(_DWORD *)(v5 + 8904) = *(_DWORD *)(v5 + 8616);
  *(_DWORD *)(v5 + 8552) = *(_DWORD *)(v5 + 9408);
  *(_DWORD *)(v5 + 8900) = *(_DWORD *)(v5 + 9096);
  *(_DWORD *)(v5 + 9184) = *(_DWORD *)(v5 + 9584);
  *(_DWORD *)(v5 + 8572) = *(_DWORD *)(v5 + 8984);
  *(_DWORD *)(v5 + 8440) = *(_DWORD *)(v5 + 9240);
  *(_DWORD *)(v5 + 8352) = *(_DWORD *)(v5 + 9040);
  *(_DWORD *)(v5 + 8932) = *(_DWORD *)(v5 + 8612);
  *(_DWORD *)(v5 + 8328) = v3;
  *(_QWORD *)(v5 + 9416) = a3;
  v6 = *(_DWORD *)(v5 + 3940) - 1237261970;
  *(_DWORD *)(v5 + 4220) = 2031140778;
  v7 = v6 < 0xC6C39A4A;
  v8 = v6 > 0xC6C39A4A;
  if (v7 != (a3 + 1099336243) > 0xC6C39A4A)
    v8 = v7;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((4296 * v8) ^ (v4 + (int)a3 + 296))) - 12);
  *(_DWORD *)(v5 + 9688) = 1;
  *(_DWORD *)(v5 + 9736) = 1;
  return v9();
}

uint64_t sub_1002EFE94(uint64_t a1)
{
  int v1;
  unsigned __int8 v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((27
                                          * (((((v1 - 97) | v2) - 37) & 0xFE) == (((v1 + 89) ^ 0xB6) & *(_DWORD *)(v3 + 8800)))) ^ v1))
                            - 8))();
}

uint64_t sub_1002EFEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;

  v10 = (uint64_t (*)(void))(*(_QWORD *)(a1
                                      + 8
                                      * ((8000
                                        * (((v6 + 119) ^ (((((_BYTE)v6 - 113) & 0x3F ^ 0x6D) & 0x7F) == v8)) & 1)) ^ (v6 | 0x400)))
                          - 8);
  *(_DWORD *)(v9 + 8632) = 122;
  v11 = *(_QWORD *)(v9 + 4184);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9576) = v11;
  *(_QWORD *)(v9 + 9496) = *(_QWORD *)(v9 + 2432);
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 7768);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8760) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8752) = a6;
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 9736) = *(_DWORD *)(v9 + 6992);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 9264) = v7;
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8704) = *(_DWORD *)(v9 + 9064);
  return v10();
}

uint64_t sub_1002F0034@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v2 + 8632) = 123;
  v3 = *(_QWORD *)(v2 + 3896);
  *(_QWORD *)(v2 + 9504) = *(_QWORD *)(v2 + 7880);
  *(_QWORD *)(v2 + 9576) = v3;
  *(_QWORD *)(v2 + 9496) = *(_QWORD *)(v2 + 2232);
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 9688) = *(_DWORD *)(v2 + 7768);
  *(_DWORD *)(v2 + 8748) = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8744) = a1;
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 8664) = *(_DWORD *)(v2 + 8992);
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = *(_DWORD *)(v2 + 9004);
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 9064);
  v4 = *(_DWORD *)(v2 + 8312);
  *(_DWORD *)(v2 + 9736) = *(_DWORD *)(v2 + 6968);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_QWORD *)(v2 + 9680) = *(_QWORD *)(v2 + 9504);
  if ((a2 ^ 0x853D1004) + 8378 + v4 - 8395)
    v5 = 137;
  else
    v5 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v5) >> ((-45 * (a2 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v5)) == 30)) ^ (a2 + 2059604150))))();
}

uint64_t sub_1002F032C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _DWORD *v3;
  int v4;
  uint64_t (*v5)(uint64_t, _QWORD);

  v3[2394] = 0;
  v3[2374] = 0;
  v3[2253] = 0;
  v3[2372] = 0;
  v3[2368] = 0;
  v4 = v3[1127];
  v5 = (uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v2
                                                           + 8
                                                           * ((10244
                                                             * (v4 == ((v1 + 757) | 0xA82) + ((v1 + 2545) | 0x1C) - 7074)) ^ v1))
                                               - 12);
  v3[2049] = v3[2380];
  v3[2364] = v4;
  v3[2358] = 1;
  v3[2270] = 1;
  return v5(a1, 0);
}

uint64_t sub_1002F03C4()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 ^ 0x3AEE ^ v0 ^ 0x303B ^ 0xADE) * (v1 > 0x17)) ^ v0)) - 12))();
}

uint64_t sub_1002F0408@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 1277370672) & 0x4C2309F8) - 2202) * (a1 < 0x1Cu)) ^ v1))
                            - ((v1 + 1177262944) & 0xB9D467E4)
                            + 9048))();
}

uint64_t sub_1002F0464()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((((v0 - 439627131) & 0x1A340B77 ^ (v0 - 8700)) * (v1 > 0x19)) ^ v0))
                            - 12))();
}

uint64_t sub_1002F04A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int v12;

  v9 = *(_DWORD *)(v7 + 8544) != (((v6 - 75) | 1) ^ 0x40);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((4 * v9) | (v9 << 13)) ^ v6))
                                                          - (v6
                                                           + 191)
                                                          + 532);
  v11 = *(_QWORD *)(v7 + 2208);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2728);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 3832);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = a6;
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  v12 = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9736) = v12;
  *(_DWORD *)(v7 + 9432) = v12;
  *(_DWORD *)(v7 + 9264) = a5;
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v10(a1, a2, v11);
}

void sub_1002F05D4(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 + 7144) = a3 ^ 0x853D1237;
  v4 = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 7216) = (((a3 ^ 0x244) & v4 ^ 0x64) + ((a3 ^ 0x244) & v4) + 83) & 0x67;
  *(_QWORD *)(v3 + 9280) = *(_QWORD *)(v3 + 9600);
  *(_QWORD *)(v3 + 9016) = *(_QWORD *)(v3 + 9608);
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 8260) = *(_DWORD *)(v3 + 8332);
  *(_DWORD *)(v3 + 7192) = *(_DWORD *)(v3 + 7436);
  *(_DWORD *)(v3 + 7272) = *(_DWORD *)(v3 + 7456);
  *(_DWORD *)(v3 + 7312) = *(_DWORD *)(v3 + 9328);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 9320) = *(_DWORD *)(v3 + 9616);
  *(_DWORD *)(v3 + 6744) = *(_DWORD *)(v3 + 8548);
  *(_DWORD *)(v3 + 7256) = *(_DWORD *)(v3 + 7500);
  *(_DWORD *)(v3 + 7280) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 7128) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 7344) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8136) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 7168) = *(_DWORD *)(v3 + 7464);
  *(_DWORD *)(v3 + 7184) = *(_DWORD *)(v3 + 7488);
  *(_DWORD *)(v3 + 7296) = *(_DWORD *)(v3 + 7484);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 7424) = *(_DWORD *)(v3 + 9664);
  *(_DWORD *)(v3 + 7304) = *(_DWORD *)(v3 + 7480);
  *(_DWORD *)(v3 + 8064) = v4;
  *(_DWORD *)(v3 + 7264) = v4;
  *(_DWORD *)(v3 + 7176) = *(_DWORD *)(v3 + 9248);
  *(_DWORD *)(v3 + 7288) = *(_DWORD *)(v3 + 7476);
  *(_DWORD *)(v3 + 8828) = a1;
  *(_DWORD *)(v3 + 7224) = a1;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 7416) = *(_DWORD *)(v3 + 7432);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 7328) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7112) = *(_DWORD *)(v3 + 0x2000);
  *(_DWORD *)(v3 + 7208) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 7408) = *(_DWORD *)(v3 + 7460);
  *(_DWORD *)(v3 + 7160) = *(_DWORD *)(v3 + 7440);
  *(_DWORD *)(v3 + 7320) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 7336) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 9400) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 7200) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 6760) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 8236) = *(_DWORD *)(v3 + 9240);
  *(_DWORD *)(v3 + 8328) = a2;
  *(_DWORD *)(v3 + 9392) = 88;
  *(_QWORD *)(v3 + 7240) = *(_QWORD *)(v3 + 7736);
  *(_QWORD *)(v3 + 7248) = *(_QWORD *)(v3 + 2576);
  *(_QWORD *)(v3 + 7232) = *(_QWORD *)(v3 + 2208);
  JUMPOUT(0x1003260ECLL);
}

uint64_t sub_1002F0794@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 > 0xBu) * ((v1 ^ 0x23A1) - 8493)) ^ v1)) - 12))();
}

uint64_t sub_1002F07C4()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((v1 < ((v0 - 12) ^ 0x79u))
                                               * (((v0 + 389195252) & 0xE8CD39E9) - 349)) ^ v0))
                            - 4))();
}

uint64_t sub_1002F0804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W5>, char a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int v11;

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                     + 8
                                                                     * (int)(((v5 ^ 0x920FD760 ^ (v6 - 100)) * (a5 == 13)) ^ v5 ^ 0x1732CC4E))
                                                         + 2235371539
                                                         - (v5 ^ 0x920FD760));
  v10 = *(_QWORD *)(v7 + 2392);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 7736);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 3832);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = a4;
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  v11 = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9736) = v11;
  *(_DWORD *)(v7 + 9432) = v11;
  *(_DWORD *)(v7 + 9264) = a3;
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v9(a1, a2, v10);
}

uint64_t sub_1002F0938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  char v11;
  uint64_t v12;

  v8 = v6;
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2728);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 2584);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 2644) = a6;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  v9 = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_QWORD *)(v7 + 9680) = *(_QWORD *)(v7 + 9504);
  v10 = (v6 ^ 0x853D1004) + 8378;
  v11 = -45 * (v6 ^ 4);
  if (v10 + v9 - 8395)
    v12 = 137;
  else
    v12 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + v12) >> (v11 ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + v12)) == 30)) ^ (v8 + 2059604150))))();
}

uint64_t sub_1002F0A34()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 < ((v0 ^ 0xF3) + 103)) * ((v0 - 461) ^ 0x179)) ^ v0)))();
}

uint64_t sub_1002F0A64@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W7>, char a7@<W8>)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;

  *(_QWORD *)(v9 + 7144) = (v7 - 1086325736) & 0xC5FD125F;
  v11 = *(uint64_t (**)(void))(v10
                            + 8
                            * (int)(((a7 != (((_BYTE)v7 + 24) & 0x5F ^ 0x12))
                                   * (v8 + ((v7 + 68943464) | 0x81211010) + 1451)) ^ v7));
  *(_DWORD *)(v9 + 9392) = 65;
  *(_DWORD *)(v9 + 7216) = 7;
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 2696);
  v12 = *(_QWORD *)(v9 + 2736);
  *(_QWORD *)(v9 + 9496) = v12;
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 7768);
  v13 = *(_DWORD *)(v9 + 8024);
  v14 = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8760) = v14;
  v15 = *(_DWORD *)(v9 + 9480);
  *(_DWORD *)(v9 + 8752) = v15;
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8672) = a5;
  v16 = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8704) = v16;
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 6744) = a2;
  *(_DWORD *)(v9 + 7344) = v14;
  *(_DWORD *)(v9 + 8136) = v15;
  *(_DWORD *)(v9 + 7424) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 7200) = v16;
  *(_DWORD *)(v9 + 6760) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 8328) = a6;
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 9736) = *(_DWORD *)(v9 + 3116);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 9264) = a4;
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  *(_QWORD *)(v9 + 7240) = v12;
  *(_QWORD *)(v9 + 7248) = *(_QWORD *)(v9 + 4088);
  *(_QWORD *)(v9 + 7232) = *(_QWORD *)(v9 + 4048);
  *(_DWORD *)(v9 + 8080) = *(_DWORD *)(v9 + 8032);
  *(_DWORD *)(v9 + 8260) = a1;
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 8064) = *(_DWORD *)(v9 + 7992);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7280) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  *(_DWORD *)(v9 + 7264) = *(_DWORD *)(v9 + 4084);
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  *(_DWORD *)(v9 + 7224) = *(_DWORD *)(v9 + 4044);
  *(_DWORD *)(v9 + 8040) = *(_DWORD *)(v9 + 8020);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 8116) = v13;
  *(_DWORD *)(v9 + 9072) = a3;
  *(_DWORD *)(v9 + 7328) = *(_DWORD *)(v9 + 8000);
  *(_DWORD *)(v9 + 8272) = *(_DWORD *)(v9 + 7984);
  *(_DWORD *)(v9 + 8056) = *(_DWORD *)(v9 + 8008);
  *(_DWORD *)(v9 + 7112) = *(_DWORD *)(v9 + 0x2000);
  *(_DWORD *)(v9 + 7208) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7320) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7336) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 8236) = *(_DWORD *)(v9 + 9240);
  return v11();
}

uint64_t sub_1002F0D20@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W7>, int a7@<W8>)
{
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  int v14;
  int v15;
  int v16;

  v11 = a7 ^ (v8 + 351);
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v10
                                      + 8
                                      * ((833
                                        * (*(_DWORD *)(v9 + 8544) != ((a7 - v7 - 77) ^ 0x28))) ^ a7))
                          - (v11 ^ 0x853D101BLL));
  *(_DWORD *)(v9 + 7216) = 4;
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 4072);
  v13 = *(_QWORD *)(v9 + 4088);
  *(_QWORD *)(v9 + 9496) = v13;
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 7768);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  v14 = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8760) = v14;
  v15 = *(_DWORD *)(v9 + 9480);
  *(_DWORD *)(v9 + 8752) = v15;
  *(_DWORD *)(v9 + 8696) = a5;
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  v16 = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8704) = v16;
  *(_QWORD *)(v9 + 7144) = v11;
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 8828) = a5;
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 6744) = a2;
  *(_DWORD *)(v9 + 7344) = v14;
  *(_DWORD *)(v9 + 8136) = v15;
  *(_DWORD *)(v9 + 7424) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 7200) = v16;
  *(_DWORD *)(v9 + 6760) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 8328) = a6;
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  LODWORD(v11) = *(_DWORD *)(v9 + 4084);
  *(_DWORD *)(v9 + 9736) = v11;
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 9264) = a4;
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  *(_QWORD *)(v9 + 7240) = *(_QWORD *)(v9 + 2592);
  *(_QWORD *)(v9 + 7248) = *(_QWORD *)(v9 + 4064);
  *(_QWORD *)(v9 + 7232) = v13;
  *(_DWORD *)(v9 + 8080) = *(_DWORD *)(v9 + 8032);
  *(_DWORD *)(v9 + 8260) = a1;
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 8064) = *(_DWORD *)(v9 + 7992);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7280) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  *(_DWORD *)(v9 + 7264) = *(_DWORD *)(v9 + 4100);
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  *(_DWORD *)(v9 + 7224) = v11;
  *(_DWORD *)(v9 + 8040) = *(_DWORD *)(v9 + 8020);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 8116) = *(_DWORD *)(v9 + 8024);
  *(_DWORD *)(v9 + 9072) = a3;
  *(_DWORD *)(v9 + 7328) = *(_DWORD *)(v9 + 8000);
  *(_DWORD *)(v9 + 8272) = *(_DWORD *)(v9 + 7984);
  *(_DWORD *)(v9 + 8056) = *(_DWORD *)(v9 + 8008);
  *(_DWORD *)(v9 + 7112) = *(_DWORD *)(v9 + 0x2000);
  *(_DWORD *)(v9 + 7208) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7320) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7336) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 9392) = 64;
  *(_DWORD *)(v9 + 8236) = *(_DWORD *)(v9 + 9240);
  return v12();
}

uint64_t sub_1002F0FCC@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((31 * (((a1 < 0x14u) ^ (v1 + (v1 ^ 0x9D))) & 1)) ^ v1)))();
}

uint64_t sub_1002F1008()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 < 0x16) ^ (17 * (v0 ^ 0xFE))) & 1) * (v0 - 9254)) ^ v0))
                            - 8))();
}

uint64_t sub_1002F1040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                     + 8
                                                                     * ((7363
                                                                       * (((*(_DWORD *)(v7 + 8544) == 83) ^ (v6 - 122)) & 1)) ^ v6))
                                                         - 4);
  v10 = *(_QWORD *)(v7 + 6088);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2360);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 2648);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = a6;
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = a5;
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v9(a1, a2, v10);
}

uint64_t sub_1002F1170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 2392);
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 2368);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 9424) = a6;
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  v8 = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 9736) = v8;
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = v8;
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  v9 = *(_DWORD *)(v6 + 8312);
  *(_DWORD *)(v6 + 9272) = *(_DWORD *)(v6 + 9656);
  *(_QWORD *)(v6 + 9680) = *(_QWORD *)(v6 + 9504);
  if ((v7 ^ 0x853D1004) + 8378 + v9 - 8395)
    v10 = 137;
  else
    v10 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v6 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v6 + 9640) + v10) >> ((-45 * (v7 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v6 + 9640) + v10)) == 30)) ^ (v7 + 2059604150))))();
}

uint64_t sub_1002F1264@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((460 * (((((((v1 - 69) & 0xEA) + 56) | 0x75) - 107) & 0xFEu) > a1)) ^ (v1 + 764072379) & 0xD2753EEA)))();
}

uint64_t sub_1002F12AC@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W7>, unsigned __int8 a6@<W8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  int v13;
  int v14;

  v9 = v6 - 4455;
  v10 = v6 - 2079855299;
  v11 = (v6 - 402658993) & 0x9D3D13FF;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1365 * (((v10 ^ 0xC) & 0xED) != a6)) ^ v9)) - (v11 ^ 0x853D101BLL));
  *(_DWORD *)(v7 + 8440) = 72;
  *(_DWORD *)(v7 + 8544) = 69;
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2576);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 3832);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  v13 = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  v14 = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8760) = v14;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 9264) = a3;
  *(_DWORD *)(v7 + 8656) = a4;
  *(_QWORD *)(v7 + 9416) = v11;
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 8504) = v14;
  *(_DWORD *)(v7 + 8868) = a4;
  *(_DWORD *)(v7 + 8456) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 8328) = a5;
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  LODWORD(v11) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9736) = v11;
  *(_DWORD *)(v7 + 9432) = v11;
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 9568);
  *(_QWORD *)(v7 + 8576) = *(_QWORD *)(v7 + 8888);
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 9200);
  *(_QWORD *)(v7 + 8936) = *(_QWORD *)(v7 + 8880);
  *(_DWORD *)(v7 + 9128) = v13;
  *(_DWORD *)(v7 + 9116) = *(_DWORD *)(v7 + 9448);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8832) = *(_DWORD *)(v7 + 9384);
  *(_DWORD *)(v7 + 9152) = *(_DWORD *)(v7 + 8964);
  *(_DWORD *)(v7 + 8368) = *(_DWORD *)(v7 + 9520);
  *(_DWORD *)(v7 + 8608) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 8912) = *(_DWORD *)(v7 + 8872);
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 9072) = a2;
  *(_DWORD *)(v7 + 8920) = *(_DWORD *)(v7 + 9160);
  *(_DWORD *)(v7 + 8496) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 8904) = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 8552) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 8900) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 9184) = *(_DWORD *)(v7 + 9584);
  *(_DWORD *)(v7 + 8572) = *(_DWORD *)(v7 + 8984);
  *(_DWORD *)(v7 + 8352) = a1;
  *(_DWORD *)(v7 + 8932) = *(_DWORD *)(v7 + 8612);
  return v12();
}

uint64_t sub_1002F1550(uint64_t a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  v12 = v8 ^ (v9 + 369);
  v13 = *(uint64_t (**)(void))(v11
                            + 8
                            * ((1727
                              * (*(_DWORD *)(v10 + 8544) != ((v8 ^ (v9 + 113)) + 44))) ^ v8));
  *(_DWORD *)(v10 + 7216) = 13;
  *(_QWORD *)(v10 + 9504) = *(_QWORD *)(v10 + 7880);
  *(_QWORD *)(v10 + 9576) = *(_QWORD *)(v10 + 2376);
  *(_QWORD *)(v10 + 9496) = *(_QWORD *)(v10 + 2200);
  v14 = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8764) = v14;
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 9688) = *(_DWORD *)(v10 + 7768);
  v15 = *(_DWORD *)(v10 + 7460);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  v16 = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 8760) = v16;
  v17 = *(_DWORD *)(v10 + 9480);
  *(_DWORD *)(v10 + 8752) = v17;
  *(_DWORD *)(v10 + 8680) = a6;
  v18 = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 9136) = v18;
  *(_DWORD *)(v10 + 9736) = v18;
  v19 = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 8704) = v19;
  *(_QWORD *)(v10 + 9280) = *(_QWORD *)(v10 + 9600);
  *(_QWORD *)(v10 + 9016) = *(_QWORD *)(v10 + 9608);
  *(_DWORD *)(v10 + 9320) = *(_DWORD *)(v10 + 9616);
  *(_DWORD *)(v10 + 6744) = a3;
  *(_DWORD *)(v10 + 7344) = v16;
  *(_DWORD *)(v10 + 8136) = v17;
  *(_DWORD *)(v10 + 7424) = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 7416) = a6;
  *(_DWORD *)(v10 + 7200) = v19;
  *(_DWORD *)(v10 + 6760) = *(_DWORD *)(v10 + 8280);
  *(_DWORD *)(v10 + 8328) = a8;
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 9264) = a5;
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  *(_QWORD *)(v10 + 7144) = v12;
  *(_QWORD *)(v10 + 7240) = *(_QWORD *)(v10 + 6728);
  *(_QWORD *)(v10 + 7248) = *(_QWORD *)(v10 + 1952);
  *(_QWORD *)(v10 + 7232) = *(_QWORD *)(v10 + 2208);
  *(_DWORD *)(v10 + 8080) = *(_DWORD *)(v10 + 8032);
  *(_DWORD *)(v10 + 8260) = a2;
  *(_DWORD *)(v10 + 7192) = *(_DWORD *)(v10 + 7436);
  *(_DWORD *)(v10 + 7272) = *(_DWORD *)(v10 + 7456);
  *(_DWORD *)(v10 + 7312) = *(_DWORD *)(v10 + 9328);
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 8064) = *(_DWORD *)(v10 + 7992);
  *(_DWORD *)(v10 + 7256) = *(_DWORD *)(v10 + 7500);
  *(_DWORD *)(v10 + 7280) = *(_DWORD *)(v10 + 9424);
  *(_DWORD *)(v10 + 7128) = *(_DWORD *)(v10 + 7616);
  *(_DWORD *)(v10 + 7168) = *(_DWORD *)(v10 + 7464);
  *(_DWORD *)(v10 + 7184) = *(_DWORD *)(v10 + 7488);
  *(_DWORD *)(v10 + 7296) = *(_DWORD *)(v10 + 7484);
  *(_DWORD *)(v10 + 9104) = *(_DWORD *)(v10 + 9440);
  *(_DWORD *)(v10 + 7304) = *(_DWORD *)(v10 + 7480);
  *(_DWORD *)(v10 + 7264) = *(_DWORD *)(v10 + 7452);
  *(_DWORD *)(v10 + 7176) = *(_DWORD *)(v10 + 9248);
  *(_DWORD *)(v10 + 7288) = *(_DWORD *)(v10 + 7476);
  *(_DWORD *)(v10 + 7224) = v14;
  *(_DWORD *)(v10 + 8040) = *(_DWORD *)(v10 + 8020);
  *(_DWORD *)(v10 + 8116) = *(_DWORD *)(v10 + 8024);
  *(_DWORD *)(v10 + 9072) = a4;
  *(_DWORD *)(v10 + 7328) = *(_DWORD *)(v10 + 8000);
  *(_DWORD *)(v10 + 8272) = *(_DWORD *)(v10 + 7984);
  *(_DWORD *)(v10 + 8056) = *(_DWORD *)(v10 + 8008);
  *(_DWORD *)(v10 + 7112) = *(_DWORD *)(v10 + 0x2000);
  *(_DWORD *)(v10 + 7208) = *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 7408) = v15;
  *(_DWORD *)(v10 + 7160) = *(_DWORD *)(v10 + 7440);
  *(_DWORD *)(v10 + 7320) = *(_DWORD *)(v10 + 9156);
  *(_DWORD *)(v10 + 7336) = *(_DWORD *)(v10 + 9408);
  *(_DWORD *)(v10 + 9400) = *(_DWORD *)(v10 + 9224);
  *(_DWORD *)(v10 + 9392) = 68;
  *(_DWORD *)(v10 + 8236) = *(_DWORD *)(v10 + 9240);
  return v13();
}

uint64_t sub_1002F17D8()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((5 * ((v0 + 478) ^ 0xA95)) ^ 0x18D) * (v1 > 0x1D)) | v0)) - 12))();
}

uint64_t sub_1002F180C(uint64_t a1, int a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  *(_QWORD *)(v11 + 7144) = (v8 - 578956079) & 0xA7BF307F;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v12
                                      + 8
                                      * ((1422
                                        * ((((v8 - 47) ^ 0xCC) & 0x7F) == *(_DWORD *)(v11 + 8544))) ^ v8))
                          + 2235371539
                          - (v8 - v9 - 2482)
                          - 4);
  *(_DWORD *)(v11 + 7216) = 46;
  *(_QWORD *)(v11 + 9504) = *(_QWORD *)(v11 + 7880);
  *(_QWORD *)(v11 + 9576) = *(_QWORD *)(v11 + 2632);
  *(_QWORD *)(v11 + 9496) = *(_QWORD *)(v11 + 2720);
  *(_DWORD *)(v11 + 8764) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8768) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 9688) = *(_DWORD *)(v11 + 7768);
  *(_DWORD *)(v11 + 8748) = *(_DWORD *)(v11 + 8980);
  v14 = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 8760) = v14;
  v15 = *(_DWORD *)(v11 + 9480);
  *(_DWORD *)(v11 + 8752) = v15;
  *(_DWORD *)(v11 + 9136) = *(_DWORD *)(v11 + 9056);
  *(_DWORD *)(v11 + 8672) = a6;
  v16 = *(_DWORD *)(v11 + 9064);
  *(_DWORD *)(v11 + 8704) = v16;
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 6744) = a3;
  *(_DWORD *)(v11 + 7344) = v14;
  *(_DWORD *)(v11 + 8136) = v15;
  *(_DWORD *)(v11 + 7424) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 7200) = v16;
  *(_DWORD *)(v11 + 6760) = *(_DWORD *)(v11 + 8280);
  *(_DWORD *)(v11 + 8328) = a8;
  *(_DWORD *)(v11 + 8736) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 8728) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 8720) = *(_DWORD *)(v11 + 8968);
  *(_DWORD *)(v11 + 8712) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 8840);
  v17 = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8688) = v17;
  *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8992);
  v18 = *(_DWORD *)(v11 + 8000);
  *(_DWORD *)(v11 + 9736) = v18;
  *(_DWORD *)(v11 + 9432) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 9264) = a5;
  *(_DWORD *)(v11 + 8656) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 8648) = *(_DWORD *)(v11 + 9004);
  *(_DWORD *)(v11 + 8640) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 8632) = *(_DWORD *)(v11 + 8800);
  *(_QWORD *)(v11 + 7240) = *(_QWORD *)(v11 + 2696);
  *(_QWORD *)(v11 + 7248) = *(_QWORD *)(v11 + 2272);
  *(_QWORD *)(v11 + 7232) = *(_QWORD *)(v11 + 2280);
  *(_DWORD *)(v11 + 8080) = *(_DWORD *)(v11 + 8032);
  *(_DWORD *)(v11 + 8260) = a2;
  *(_DWORD *)(v11 + 7192) = *(_DWORD *)(v11 + 7436);
  *(_DWORD *)(v11 + 7272) = *(_DWORD *)(v11 + 7456);
  *(_DWORD *)(v11 + 7312) = *(_DWORD *)(v11 + 9328);
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 8064) = *(_DWORD *)(v11 + 7992);
  *(_DWORD *)(v11 + 7256) = *(_DWORD *)(v11 + 7500);
  *(_DWORD *)(v11 + 7280) = *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 7128) = *(_DWORD *)(v11 + 7616);
  *(_DWORD *)(v11 + 7168) = *(_DWORD *)(v11 + 7464);
  *(_DWORD *)(v11 + 7184) = *(_DWORD *)(v11 + 7488);
  *(_DWORD *)(v11 + 7296) = *(_DWORD *)(v11 + 7484);
  *(_DWORD *)(v11 + 9104) = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 7304) = *(_DWORD *)(v11 + 7480);
  *(_DWORD *)(v11 + 7264) = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 7176) = *(_DWORD *)(v11 + 9248);
  *(_DWORD *)(v11 + 7288) = *(_DWORD *)(v11 + 7476);
  *(_DWORD *)(v11 + 7224) = v17;
  *(_DWORD *)(v11 + 8040) = *(_DWORD *)(v11 + 8020);
  *(_DWORD *)(v11 + 7416) = *(_DWORD *)(v11 + 7432);
  *(_DWORD *)(v11 + 8116) = *(_DWORD *)(v11 + 8024);
  *(_DWORD *)(v11 + 9072) = v10;
  *(_DWORD *)(v11 + 7328) = v18;
  *(_DWORD *)(v11 + 8272) = *(_DWORD *)(v11 + 7984);
  *(_DWORD *)(v11 + 8056) = *(_DWORD *)(v11 + 8008);
  *(_DWORD *)(v11 + 7112) = *(_DWORD *)(v11 + 0x2000);
  *(_DWORD *)(v11 + 7208) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 7408) = *(_DWORD *)(v11 + 7460);
  *(_DWORD *)(v11 + 7160) = *(_DWORD *)(v11 + 7440);
  *(_DWORD *)(v11 + 7320) = *(_DWORD *)(v11 + 9156);
  *(_DWORD *)(v11 + 7336) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 9400) = *(_DWORD *)(v11 + 9224);
  *(_DWORD *)(v11 + 9392) = 92;
  *(_DWORD *)(v11 + 8236) = *(_DWORD *)(v11 + 9240);
  return v13();
}

uint64_t sub_1002F1AC4@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (((v1 ^ 0x5C) + 81) & 0x79 ^ 0x73u) <= a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * v3) | (8 * v3)) ^ v1 ^ 0xB5C)) - (v1 ^ 0x23BFu) + 2417))();
}

uint64_t sub_1002F1B1C(uint64_t a1, int a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  int v16;
  int v17;

  v13 = v8 - 2078273866;
  v14 = *(_QWORD *)(v12
                  + 8
                  * ((833 * (*(_DWORD *)(v11 + 8544) == ((v8 - 9) ^ (v8 - v9 - 77)))) ^ v8));
  *(_QWORD *)(v11 + 7144) = v13 | 0x11D0000u;
  v15 = (uint64_t (*)(void))(v14 - 12);
  *(_DWORD *)(v11 + 9392) = 79;
  *(_DWORD *)(v11 + 7216) = 26;
  *(_QWORD *)(v11 + 9504) = *(_QWORD *)(v11 + 7880);
  *(_QWORD *)(v11 + 9576) = *(_QWORD *)(v11 + 7680);
  *(_QWORD *)(v11 + 9496) = *(_QWORD *)(v11 + 7696);
  *(_DWORD *)(v11 + 8764) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8768) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 9688) = *(_DWORD *)(v11 + 7768);
  v16 = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 8760) = v16;
  v17 = *(_DWORD *)(v11 + 9480);
  *(_DWORD *)(v11 + 8752) = v17;
  *(_DWORD *)(v11 + 8712) = a6;
  *(_DWORD *)(v11 + 9136) = *(_DWORD *)(v11 + 9056);
  LODWORD(v14) = *(_DWORD *)(v11 + 9064);
  *(_DWORD *)(v11 + 8704) = v14;
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 6744) = a3;
  *(_DWORD *)(v11 + 7344) = v16;
  *(_DWORD *)(v11 + 8136) = v17;
  *(_DWORD *)(v11 + 7296) = a6;
  *(_DWORD *)(v11 + 7424) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 7264) = a6;
  *(_DWORD *)(v11 + 7200) = v14;
  *(_DWORD *)(v11 + 6760) = *(_DWORD *)(v11 + 8280);
  *(_DWORD *)(v11 + 8328) = a8;
  *(_DWORD *)(v11 + 8748) = *(_DWORD *)(v11 + 8980);
  LODWORD(v14) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 8736) = v14;
  *(_DWORD *)(v11 + 8728) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 8720) = *(_DWORD *)(v11 + 8968);
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 8688) = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 8672) = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 9736) = *(_DWORD *)(v11 + 9384);
  *(_DWORD *)(v11 + 9432) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 9264) = a5;
  *(_DWORD *)(v11 + 8656) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 8648) = *(_DWORD *)(v11 + 9004);
  *(_DWORD *)(v11 + 8640) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 8632) = *(_DWORD *)(v11 + 8800);
  *(_QWORD *)(v11 + 7240) = *(_QWORD *)(v11 + 4176);
  *(_QWORD *)(v11 + 7248) = *(_QWORD *)(v11 + 2336);
  *(_QWORD *)(v11 + 7232) = *(_QWORD *)(v11 + 2296);
  *(_DWORD *)(v11 + 8080) = *(_DWORD *)(v11 + 8032);
  *(_DWORD *)(v11 + 8260) = a2;
  *(_DWORD *)(v11 + 7192) = *(_DWORD *)(v11 + 7436);
  *(_DWORD *)(v11 + 7272) = *(_DWORD *)(v11 + 7456);
  *(_DWORD *)(v11 + 7312) = *(_DWORD *)(v11 + 9328);
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 8064) = *(_DWORD *)(v11 + 7992);
  *(_DWORD *)(v11 + 7256) = *(_DWORD *)(v11 + 7500);
  *(_DWORD *)(v11 + 7280) = *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 7128) = *(_DWORD *)(v11 + 7616);
  *(_DWORD *)(v11 + 7168) = *(_DWORD *)(v11 + 7464);
  *(_DWORD *)(v11 + 7184) = *(_DWORD *)(v11 + 7488);
  *(_DWORD *)(v11 + 9104) = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 7304) = *(_DWORD *)(v11 + 7480);
  *(_DWORD *)(v11 + 7176) = *(_DWORD *)(v11 + 9248);
  *(_DWORD *)(v11 + 7288) = *(_DWORD *)(v11 + 7476);
  *(_DWORD *)(v11 + 7224) = v14;
  *(_DWORD *)(v11 + 8040) = *(_DWORD *)(v11 + 8020);
  *(_DWORD *)(v11 + 7416) = *(_DWORD *)(v11 + 7432);
  *(_DWORD *)(v11 + 8116) = *(_DWORD *)(v11 + 8024);
  *(_DWORD *)(v11 + 9072) = v10;
  *(_DWORD *)(v11 + 7328) = *(_DWORD *)(v11 + 8000);
  *(_DWORD *)(v11 + 8272) = *(_DWORD *)(v11 + 7984);
  *(_DWORD *)(v11 + 8056) = *(_DWORD *)(v11 + 8008);
  *(_DWORD *)(v11 + 7112) = *(_DWORD *)(v11 + 0x2000);
  *(_DWORD *)(v11 + 7208) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 7408) = *(_DWORD *)(v11 + 7460);
  *(_DWORD *)(v11 + 7160) = *(_DWORD *)(v11 + 7440);
  *(_DWORD *)(v11 + 7320) = *(_DWORD *)(v11 + 9156);
  *(_DWORD *)(v11 + 7336) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 9400) = *(_DWORD *)(v11 + 9224);
  *(_DWORD *)(v11 + 8236) = *(_DWORD *)(v11 + 9240);
  return v15();
}

uint64_t sub_1002F1DBC(uint64_t a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  v12 = (v8 - 1753280482) & 0xEDBDFE97;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * (int)(((v9 + v12 + 557) * (*(_DWORD *)(v10 + 8544) == 75)) ^ v8))
                          - 12);
  *(_DWORD *)(v10 + 9392) = 75;
  *(_DWORD *)(v10 + 7216) = 23;
  *(_QWORD *)(v10 + 9504) = *(_QWORD *)(v10 + 7880);
  *(_QWORD *)(v10 + 9576) = *(_QWORD *)(v10 + 2584);
  *(_QWORD *)(v10 + 9496) = *(_QWORD *)(v10 + 2512);
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 9688) = *(_DWORD *)(v10 + 7768);
  v14 = *(_DWORD *)(v10 + 7440);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  v15 = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 8760) = v15;
  v16 = *(_DWORD *)(v10 + 9480);
  *(_DWORD *)(v10 + 8752) = v16;
  *(_DWORD *)(v10 + 9136) = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 8704) = a6;
  *(_QWORD *)(v10 + 9280) = *(_QWORD *)(v10 + 9600);
  *(_QWORD *)(v10 + 9016) = *(_QWORD *)(v10 + 9608);
  *(_DWORD *)(v10 + 9320) = *(_DWORD *)(v10 + 9616);
  *(_DWORD *)(v10 + 6744) = a3;
  *(_DWORD *)(v10 + 7344) = v15;
  *(_DWORD *)(v10 + 8136) = v16;
  *(_DWORD *)(v10 + 7424) = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 7320) = a6;
  *(_DWORD *)(v10 + 7200) = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 6760) = *(_DWORD *)(v10 + 8280);
  *(_DWORD *)(v10 + 8328) = a8;
  v17 = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8728) = v17;
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 9736) = v17;
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 9264) = a5;
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  *(_QWORD *)(v10 + 7144) = v12;
  *(_QWORD *)(v10 + 7240) = *(_QWORD *)(v10 + 3000);
  *(_QWORD *)(v10 + 7248) = *(_QWORD *)(v10 + 2392);
  *(_QWORD *)(v10 + 7232) = *(_QWORD *)(v10 + 2360);
  *(_DWORD *)(v10 + 8080) = *(_DWORD *)(v10 + 8032);
  *(_DWORD *)(v10 + 8260) = a2;
  *(_DWORD *)(v10 + 7192) = *(_DWORD *)(v10 + 7436);
  *(_DWORD *)(v10 + 7272) = *(_DWORD *)(v10 + 7456);
  *(_DWORD *)(v10 + 7312) = *(_DWORD *)(v10 + 9328);
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 8064) = *(_DWORD *)(v10 + 7992);
  *(_DWORD *)(v10 + 7256) = *(_DWORD *)(v10 + 7500);
  *(_DWORD *)(v10 + 7280) = *(_DWORD *)(v10 + 9424);
  *(_DWORD *)(v10 + 7128) = *(_DWORD *)(v10 + 7616);
  *(_DWORD *)(v10 + 7168) = *(_DWORD *)(v10 + 7464);
  v18 = *(_DWORD *)(v10 + 7488);
  *(_DWORD *)(v10 + 7184) = v18;
  *(_DWORD *)(v10 + 7296) = *(_DWORD *)(v10 + 7484);
  *(_DWORD *)(v10 + 9104) = *(_DWORD *)(v10 + 9440);
  *(_DWORD *)(v10 + 7304) = *(_DWORD *)(v10 + 7480);
  *(_DWORD *)(v10 + 7264) = *(_DWORD *)(v10 + 2644);
  *(_DWORD *)(v10 + 7176) = *(_DWORD *)(v10 + 9248);
  *(_DWORD *)(v10 + 7288) = *(_DWORD *)(v10 + 7476);
  *(_DWORD *)(v10 + 7224) = v18;
  *(_DWORD *)(v10 + 8040) = *(_DWORD *)(v10 + 8020);
  *(_DWORD *)(v10 + 7416) = *(_DWORD *)(v10 + 7432);
  *(_DWORD *)(v10 + 8116) = *(_DWORD *)(v10 + 8024);
  *(_DWORD *)(v10 + 9072) = a4;
  *(_DWORD *)(v10 + 7328) = *(_DWORD *)(v10 + 8000);
  *(_DWORD *)(v10 + 8272) = *(_DWORD *)(v10 + 7984);
  *(_DWORD *)(v10 + 8056) = *(_DWORD *)(v10 + 8008);
  *(_DWORD *)(v10 + 7112) = *(_DWORD *)(v10 + 0x2000);
  *(_DWORD *)(v10 + 7208) = *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 7408) = *(_DWORD *)(v10 + 7460);
  *(_DWORD *)(v10 + 7160) = v14;
  *(_DWORD *)(v10 + 7336) = *(_DWORD *)(v10 + 9408);
  *(_DWORD *)(v10 + 9400) = *(_DWORD *)(v10 + 9224);
  *(_DWORD *)(v10 + 8236) = *(_DWORD *)(v10 + 9240);
  return v13();
}

uint64_t sub_1002F2060(int a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  int v15;
  int v16;
  int v17;
  int v18;

  v12 = v8 ^ 0x853D1962;
  v13 = (v8 - v9 - 2145);
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (v8 ^ (7890 * (*(_DWORD *)(v10 + 8544) != 71))))
                          + 0x10A7A2022
                          - v13
                          - v12
                          + 8);
  *(_DWORD *)(v10 + 9392) = 71;
  *(_DWORD *)(v10 + 7216) = 16;
  *(_DWORD *)(v10 + 8440) = 73;
  *(_DWORD *)(v10 + 8544) = 72;
  *(_QWORD *)(v10 + 7144) = v12;
  *(_QWORD *)(v10 + 9280) = *(_QWORD *)(v10 + 9600);
  *(_QWORD *)(v10 + 9016) = *(_QWORD *)(v10 + 9608);
  *(_QWORD *)(v10 + 7240) = *(_QWORD *)(v10 + 2656);
  *(_QWORD *)(v10 + 7248) = *(_QWORD *)(v10 + 6008);
  *(_DWORD *)(v10 + 7272) = a6;
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 9320) = *(_DWORD *)(v10 + 9616);
  LODWORD(v12) = *(_DWORD *)(v10 + 9424);
  *(_DWORD *)(v10 + 7280) = v12;
  v15 = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 7344) = v15;
  *(_DWORD *)(v10 + 7184) = *(_DWORD *)(v10 + 7488);
  *(_DWORD *)(v10 + 9104) = *(_DWORD *)(v10 + 9440);
  v16 = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 7424) = v16;
  *(_DWORD *)(v10 + 7224) = a6;
  *(_DWORD *)(v10 + 9072) = a4;
  v17 = *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 7208) = v17;
  v18 = *(_DWORD *)(v10 + 9408);
  *(_DWORD *)(v10 + 7336) = v18;
  *(_DWORD *)(v10 + 8236) = *(_DWORD *)(v10 + 9240);
  *(_DWORD *)(v10 + 8328) = a8;
  *(_QWORD *)(v10 + 9416) = v13;
  *(_DWORD *)(v10 + 8608) = v12;
  *(_DWORD *)(v10 + 8504) = v15;
  *(_DWORD *)(v10 + 7488) = a6;
  *(_DWORD *)(v10 + 8456) = v16;
  *(_DWORD *)(v10 + 8496) = v17;
  *(_DWORD *)(v10 + 8552) = v18;
  *(_QWORD *)(v10 + 7232) = *(_QWORD *)(v10 + 2384);
  *(_DWORD *)(v10 + 8080) = *(_DWORD *)(v10 + 8032);
  *(_DWORD *)(v10 + 8260) = a2;
  *(_DWORD *)(v10 + 7192) = *(_DWORD *)(v10 + 7436);
  *(_DWORD *)(v10 + 7312) = *(_DWORD *)(v10 + 9328);
  *(_DWORD *)(v10 + 8064) = *(_DWORD *)(v10 + 7992);
  *(_DWORD *)(v10 + 6744) = a3;
  *(_DWORD *)(v10 + 7256) = *(_DWORD *)(v10 + 7500);
  *(_DWORD *)(v10 + 7128) = *(_DWORD *)(v10 + 7616);
  *(_DWORD *)(v10 + 8136) = *(_DWORD *)(v10 + 9480);
  *(_DWORD *)(v10 + 7168) = *(_DWORD *)(v10 + 7464);
  *(_DWORD *)(v10 + 7296) = *(_DWORD *)(v10 + 7484);
  *(_DWORD *)(v10 + 7304) = *(_DWORD *)(v10 + 7480);
  *(_DWORD *)(v10 + 7264) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 7176) = *(_DWORD *)(v10 + 9248);
  *(_DWORD *)(v10 + 7288) = *(_DWORD *)(v10 + 7476);
  *(_DWORD *)(v10 + 9136) = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 8040) = *(_DWORD *)(v10 + 8020);
  *(_DWORD *)(v10 + 7416) = *(_DWORD *)(v10 + 7432);
  *(_DWORD *)(v10 + 8116) = *(_DWORD *)(v10 + 8024);
  *(_DWORD *)(v10 + 7328) = *(_DWORD *)(v10 + 8000);
  *(_DWORD *)(v10 + 8272) = *(_DWORD *)(v10 + 7984);
  *(_DWORD *)(v10 + 8056) = *(_DWORD *)(v10 + 8008);
  *(_DWORD *)(v10 + 7112) = *(_DWORD *)(v10 + 0x2000);
  *(_DWORD *)(v10 + 7408) = *(_DWORD *)(v10 + 7460);
  *(_DWORD *)(v10 + 7160) = *(_DWORD *)(v10 + 7440);
  *(_DWORD *)(v10 + 7320) = *(_DWORD *)(v10 + 9156);
  *(_DWORD *)(v10 + 9400) = *(_DWORD *)(v10 + 9224);
  *(_DWORD *)(v10 + 7200) = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 6760) = *(_DWORD *)(v10 + 8280);
  *(_QWORD *)(v10 + 8408) = *(_QWORD *)(v10 + 8432);
  *(_QWORD *)(v10 + 8400) = *(_QWORD *)(v10 + 8416);
  *(_QWORD *)(v10 + 8392) = *(_QWORD *)(v10 + 8536);
  *(_QWORD *)(v10 + 8384) = *(_QWORD *)(v10 + 8488);
  *(_QWORD *)(v10 + 8376) = *(_QWORD *)(v10 + 8472);
  *(_QWORD *)(v10 + 8944) = *(_QWORD *)(v10 + 9568);
  *(_QWORD *)(v10 + 8576) = *(_QWORD *)(v10 + 8888);
  *(_QWORD *)(v10 + 8952) = *(_QWORD *)(v10 + 9200);
  *(_QWORD *)(v10 + 8936) = *(_QWORD *)(v10 + 8880);
  *(_DWORD *)(v10 + 9128) = *(_DWORD *)(v10 + 8312);
  *(_DWORD *)(v10 + 9116) = *(_DWORD *)(v10 + 9448);
  *(_DWORD *)(v10 + 8832) = *(_DWORD *)(v10 + 9384);
  *(_DWORD *)(v10 + 9152) = *(_DWORD *)(v10 + 8964);
  *(_DWORD *)(v10 + 8368) = *(_DWORD *)(v10 + 9520);
  *(_DWORD *)(v10 + 8520) = *(_DWORD *)(v10 + 8464);
  *(_DWORD *)(v10 + 8356) = *(_DWORD *)(v10 + 8532);
  *(_DWORD *)(v10 + 8360) = *(_DWORD *)(v10 + 8424);
  *(_DWORD *)(v10 + 8912) = *(_DWORD *)(v10 + 8872);
  *(_DWORD *)(v10 + 8512) = *(_DWORD *)(v10 + 8480);
  *(_DWORD *)(v10 + 8920) = *(_DWORD *)(v10 + 9160);
  *(_DWORD *)(v10 + 9264) = a5;
  *(_DWORD *)(v10 + 8904) = *(_DWORD *)(v10 + 8616);
  *(_DWORD *)(v10 + 8900) = *(_DWORD *)(v10 + 9096);
  *(_DWORD *)(v10 + 9184) = *(_DWORD *)(v10 + 9584);
  *(_DWORD *)(v10 + 8572) = *(_DWORD *)(v10 + 8984);
  *(_DWORD *)(v10 + 8352) = a1;
  *(_DWORD *)(v10 + 8932) = *(_DWORD *)(v10 + 8612);
  return v14();
}

uint64_t sub_1002F2344@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W5>, int a4@<W7>, char a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  int v13;
  int v14;

  v10 = v5 - 7236;
  v11 = (v6 + v5 - 7236 - 1824);
  *(_QWORD *)(v8 + 7144) = v11;
  v12 = *(uint64_t (**)(void))(v9 + 8 * (int)(((((v11 + 2059601422) | 0x182) ^ 0xA4D) * (a5 == 25)) ^ v10));
  *(_DWORD *)(v8 + 9392) = 85;
  *(_DWORD *)(v8 + 7216) = 36;
  *(_QWORD *)(v8 + 9280) = *(_QWORD *)(v8 + 9600);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_QWORD *)(v8 + 7240) = *(_QWORD *)(v8 + 2624);
  *(_QWORD *)(v8 + 7248) = *(_QWORD *)(v8 + 6728);
  *(_QWORD *)(v8 + 7232) = *(_QWORD *)(v8 + 2584);
  *(_DWORD *)(v8 + 8080) = *(_DWORD *)(v8 + 8032);
  *(_DWORD *)(v8 + 8260) = a1;
  *(_DWORD *)(v8 + 7192) = *(_DWORD *)(v8 + 7436);
  *(_DWORD *)(v8 + 7272) = *(_DWORD *)(v8 + 7456);
  *(_DWORD *)(v8 + 7312) = *(_DWORD *)(v8 + 9328);
  v13 = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 9272) = v13;
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 8064) = *(_DWORD *)(v8 + 7992);
  *(_DWORD *)(v8 + 6744) = a2;
  *(_DWORD *)(v8 + 7256) = *(_DWORD *)(v8 + 7500);
  *(_DWORD *)(v8 + 7280) = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 7128) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 7344) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8136) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 7168) = *(_DWORD *)(v8 + 7464);
  *(_DWORD *)(v8 + 7184) = *(_DWORD *)(v8 + 7488);
  *(_DWORD *)(v8 + 7296) = *(_DWORD *)(v8 + 7484);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 7424) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 7304) = a3;
  *(_DWORD *)(v8 + 8236) = *(_DWORD *)(v8 + 9240);
  *(_DWORD *)(v8 + 7264) = v13;
  *(_DWORD *)(v8 + 7176) = *(_DWORD *)(v8 + 9248);
  *(_DWORD *)(v8 + 7288) = *(_DWORD *)(v8 + 7476);
  v14 = *(_DWORD *)(v8 + 7440);
  *(_DWORD *)(v8 + 7224) = v14;
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8040) = *(_DWORD *)(v8 + 8020);
  *(_DWORD *)(v8 + 7416) = *(_DWORD *)(v8 + 7432);
  *(_DWORD *)(v8 + 8116) = *(_DWORD *)(v8 + 8024);
  *(_DWORD *)(v8 + 9072) = v7;
  *(_DWORD *)(v8 + 7328) = *(_DWORD *)(v8 + 8000);
  *(_DWORD *)(v8 + 8272) = *(_DWORD *)(v8 + 7984);
  *(_DWORD *)(v8 + 8056) = *(_DWORD *)(v8 + 8008);
  *(_DWORD *)(v8 + 7112) = *(_DWORD *)(v8 + 0x2000);
  *(_DWORD *)(v8 + 7208) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 7408) = *(_DWORD *)(v8 + 7460);
  *(_DWORD *)(v8 + 7160) = v14;
  *(_DWORD *)(v8 + 7320) = *(_DWORD *)(v8 + 9156);
  *(_DWORD *)(v8 + 7336) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 9400) = *(_DWORD *)(v8 + 9224);
  *(_DWORD *)(v8 + 7200) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 6760) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 8328) = a4;
  return v12();
}

uint64_t sub_1002F250C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t (*v8)(void);
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;

  v12 = *(_DWORD *)(v11 + 8312);
  v13 = (v10 - 1757428360) & 0xEDFD32F7;
  *(_QWORD *)(v11 + 9416) = v13;
  *(_DWORD *)(v11 + 8440) = (v13 ^ 0x2C) + (v12 & 0x13 ^ 0x13) + (v12 & 0x13);
  *(_QWORD *)(v11 + 8408) = *(_QWORD *)(v11 + 8432);
  *(_QWORD *)(v11 + 8400) = *(_QWORD *)(v11 + 8416);
  *(_QWORD *)(v11 + 8392) = *(_QWORD *)(v11 + 8536);
  *(_QWORD *)(v11 + 8384) = *(_QWORD *)(v11 + 8488);
  *(_QWORD *)(v11 + 8376) = *(_QWORD *)(v11 + 8472);
  *(_QWORD *)(v11 + 8944) = *(_QWORD *)(v11 + 9568);
  *(_QWORD *)(v11 + 8576) = *(_QWORD *)(v11 + 8888);
  *(_QWORD *)(v11 + 8952) = *(_QWORD *)(v11 + 9200);
  *(_QWORD *)(v11 + 8936) = *(_QWORD *)(v11 + 8880);
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 9116) = *(_DWORD *)(v11 + 9448);
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 7992) = a6;
  *(_DWORD *)(v11 + 8832) = *(_DWORD *)(v11 + 9384);
  *(_DWORD *)(v11 + 9152) = *(_DWORD *)(v11 + 8964);
  *(_DWORD *)(v11 + 8368) = *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 8608) = *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 8504) = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 8520) = *(_DWORD *)(v11 + 8464);
  *(_DWORD *)(v11 + 8356) = *(_DWORD *)(v11 + 8532);
  *(_DWORD *)(v11 + 8360) = *(_DWORD *)(v11 + 8424);
  *(_DWORD *)(v11 + 9104) = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 8456) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 8912) = *(_DWORD *)(v11 + 8872);
  *(_DWORD *)(v11 + 8512) = *(_DWORD *)(v11 + 8480);
  *(_DWORD *)(v11 + 9072) = *(_DWORD *)(v11 + 9632);
  *(_DWORD *)(v11 + 8920) = *(_DWORD *)(v11 + 9160);
  *(_DWORD *)(v11 + 8496) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 9264) = *(_DWORD *)(v11 + 9624);
  *(_DWORD *)(v11 + 8904) = *(_DWORD *)(v11 + 8616);
  *(_DWORD *)(v11 + 8552) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 8900) = *(_DWORD *)(v11 + 9096);
  *(_DWORD *)(v11 + 9184) = *(_DWORD *)(v11 + 9584);
  *(_DWORD *)(v11 + 8572) = *(_DWORD *)(v11 + 8984);
  *(_DWORD *)(v11 + 8352) = *(_DWORD *)(v11 + 9040);
  *(_DWORD *)(v11 + 8932) = *(_DWORD *)(v11 + 8612);
  *(_DWORD *)(v11 + 8328) = a8;
  *(_DWORD *)(v11 + 8544) = 86;
  v14 = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 9128) = v12;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                     + 8
                                     * (int)((12803
                                            * (v14 != ((*(_QWORD *)(v11 + 9416) - 1400777838) & 0xCE413D5F)
                                                    - 8457)) ^ (*(_QWORD *)(v11 + 9416) + 2059600627)))
                         - 4);
  *(_DWORD *)(v11 + 9688) = 1;
  *(_DWORD *)(v11 + 9736) = 1;
  return v8();
}

uint64_t sub_1002F269C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W5>, int a4@<W7>, unsigned __int8 a5@<W8>)
{
  int v5;
  uint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v11 = (v5 - 6545) ^ 0x853D1AD1;
  v12 = (uint64_t (*)(void))(v6
                          + *(_QWORD *)(v10
                                      + 8
                                      * ((5698 * (a5 == ((v5 + 111 - v7 + 78) ^ 2))) ^ (v5 - 6545)))
                          - v11
                          - 4);
  *(_DWORD *)(v9 + 9392) = 81;
  *(_DWORD *)(v9 + 7216) = 27;
  *(_QWORD *)(v9 + 7144) = v11;
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_QWORD *)(v9 + 7240) = *(_QWORD *)(v9 + 2288);
  *(_QWORD *)(v9 + 7248) = *(_QWORD *)(v9 + 7688);
  *(_QWORD *)(v9 + 7232) = *(_QWORD *)(v9 + 7696);
  *(_DWORD *)(v9 + 8080) = *(_DWORD *)(v9 + 8032);
  *(_DWORD *)(v9 + 8260) = a1;
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8064) = *(_DWORD *)(v9 + 7992);
  *(_DWORD *)(v9 + 6744) = a2;
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7280) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7344) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8136) = *(_DWORD *)(v9 + 9480);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 7424) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  *(_DWORD *)(v9 + 7264) = *(_DWORD *)(v9 + 7712);
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  *(_DWORD *)(v9 + 7224) = *(_DWORD *)(v9 + 9384);
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8040) = *(_DWORD *)(v9 + 8020);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 8116) = *(_DWORD *)(v9 + 8024);
  *(_DWORD *)(v9 + 9072) = v8;
  *(_DWORD *)(v9 + 7328) = *(_DWORD *)(v9 + 8000);
  *(_DWORD *)(v9 + 8272) = *(_DWORD *)(v9 + 7984);
  *(_DWORD *)(v9 + 8056) = *(_DWORD *)(v9 + 8008);
  *(_DWORD *)(v9 + 7112) = *(_DWORD *)(v9 + 0x2000);
  *(_DWORD *)(v9 + 7208) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 7160) = a3;
  *(_DWORD *)(v9 + 7320) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7336) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 7200) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 6760) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 8236) = *(_DWORD *)(v9 + 9240);
  *(_DWORD *)(v9 + 8328) = a4;
  return v12();
}

void sub_1002F2870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  *(_QWORD *)(v9 + 7144) = v8;
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 8080) = *(_DWORD *)(v9 + 8032);
  *(_DWORD *)(v9 + 8260) = *(_DWORD *)(v9 + 8332);
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 9272) = a6;
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8064) = *(_DWORD *)(v9 + 7992);
  *(_DWORD *)(v9 + 6744) = *(_DWORD *)(v9 + 8548);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7280) = *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7344) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8136) = *(_DWORD *)(v9 + 9480);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 7424) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 7304) = *(_DWORD *)(v9 + 7480);
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  v10 = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 9104) = v10;
  *(_DWORD *)(v9 + 7224) = v10;
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8040) = *(_DWORD *)(v9 + 8020);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 8116) = *(_DWORD *)(v9 + 8024);
  *(_DWORD *)(v9 + 9072) = *(_DWORD *)(v9 + 9632);
  *(_DWORD *)(v9 + 7328) = *(_DWORD *)(v9 + 8000);
  *(_DWORD *)(v9 + 8272) = *(_DWORD *)(v9 + 7984);
  *(_DWORD *)(v9 + 8056) = *(_DWORD *)(v9 + 8008);
  *(_DWORD *)(v9 + 7112) = *(_DWORD *)(v9 + 0x2000);
  *(_DWORD *)(v9 + 7208) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7320) = *(_DWORD *)(v9 + 9156);
  v11 = *(_DWORD *)(v9 + 7452);
  *(_DWORD *)(v9 + 7336) = *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 7200) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 6760) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 8236) = *(_DWORD *)(v9 + 9240);
  *(_DWORD *)(v9 + 8328) = a8;
  *(_DWORD *)(v9 + 9392) = 82;
  *(_DWORD *)(v9 + 7216) = 30;
  *(_QWORD *)(v9 + 7240) = *(_QWORD *)(v9 + 2648);
  *(_QWORD *)(v9 + 7248) = *(_QWORD *)(v9 + 7696);
  *(_QWORD *)(v9 + 7232) = *(_QWORD *)(v9 + 7704);
  *(_DWORD *)(v9 + 7264) = *(_DWORD *)(v9 + 9384);
  *(_DWORD *)(v9 + 9736) = v11;
  JUMPOUT(0x10031D888);
}

uint64_t sub_1002F2A04@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W5>, int a4@<W7>, unsigned __int8 a5@<W8>)
{
  int v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  int v11;
  int v12;
  int v13;

  *(_QWORD *)(v8 + 9416) = (v5 - 1916939752) & 0xF77F3C5F;
  v10 = *(uint64_t (**)(void))(v9
                            + 8 * ((2349 * (a5 != (v5 - v6 + 117 + ((v5 + 24) & 0x5F) - 17))) ^ v5));
  *(_DWORD *)(v8 + 8440) = 79;
  *(_DWORD *)(v8 + 8544) = 89;
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 2992);
  *(_QWORD *)(v8 + 9496) = *(_QWORD *)(v8 + 3832);
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  v11 = *(_DWORD *)(v8 + 8312);
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  v12 = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8760) = v12;
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 9136) = a3;
  *(_DWORD *)(v8 + 9264) = a2;
  *(_QWORD *)(v8 + 9280) = *(_QWORD *)(v8 + 9600);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 8504) = v12;
  *(_DWORD *)(v8 + 8456) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 8864) = a3;
  *(_DWORD *)(v8 + 8328) = a4;
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  v13 = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9736) = v13;
  *(_DWORD *)(v8 + 9432) = v13;
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  *(_QWORD *)(v8 + 8408) = *(_QWORD *)(v8 + 8432);
  *(_QWORD *)(v8 + 8400) = *(_QWORD *)(v8 + 8416);
  *(_QWORD *)(v8 + 8392) = *(_QWORD *)(v8 + 8536);
  *(_QWORD *)(v8 + 8384) = *(_QWORD *)(v8 + 8488);
  *(_QWORD *)(v8 + 8376) = *(_QWORD *)(v8 + 8472);
  *(_QWORD *)(v8 + 8944) = *(_QWORD *)(v8 + 9568);
  *(_QWORD *)(v8 + 8576) = *(_QWORD *)(v8 + 8888);
  *(_QWORD *)(v8 + 8952) = *(_QWORD *)(v8 + 9200);
  *(_QWORD *)(v8 + 8936) = *(_QWORD *)(v8 + 8880);
  *(_DWORD *)(v8 + 9128) = v11;
  *(_DWORD *)(v8 + 9116) = *(_DWORD *)(v8 + 9448);
  *(_DWORD *)(v8 + 9272) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 8832) = *(_DWORD *)(v8 + 9384);
  *(_DWORD *)(v8 + 9152) = *(_DWORD *)(v8 + 8964);
  *(_DWORD *)(v8 + 8368) = *(_DWORD *)(v8 + 9520);
  *(_DWORD *)(v8 + 8608) = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 8520) = *(_DWORD *)(v8 + 8464);
  *(_DWORD *)(v8 + 8356) = *(_DWORD *)(v8 + 8532);
  *(_DWORD *)(v8 + 8360) = *(_DWORD *)(v8 + 8424);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 8912) = *(_DWORD *)(v8 + 8872);
  *(_DWORD *)(v8 + 8512) = *(_DWORD *)(v8 + 8480);
  *(_DWORD *)(v8 + 9072) = v7;
  *(_DWORD *)(v8 + 8920) = *(_DWORD *)(v8 + 9160);
  *(_DWORD *)(v8 + 8496) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 8904) = *(_DWORD *)(v8 + 8616);
  *(_DWORD *)(v8 + 8552) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 8900) = *(_DWORD *)(v8 + 9096);
  *(_DWORD *)(v8 + 9184) = *(_DWORD *)(v8 + 9584);
  *(_DWORD *)(v8 + 8572) = *(_DWORD *)(v8 + 8984);
  *(_DWORD *)(v8 + 8352) = a1;
  *(_DWORD *)(v8 + 8932) = *(_DWORD *)(v8 + 8612);
  return v10();
}

uint64_t sub_1002F2C6C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W7>, char a6@<W8>)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  v11 = v6 ^ 0x853D1962;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v6 ^ (588 * (a6 != 17)))) - (v11 ^ v7));
  *(_DWORD *)(v9 + 7216) = 24;
  *(_QWORD *)(v9 + 7144) = v11;
  v13 = *(_QWORD *)(v9 + 6088);
  *(_QWORD *)(v9 + 9504) = *(_QWORD *)(v9 + 7880);
  *(_QWORD *)(v9 + 9576) = *(_QWORD *)(v9 + 3000);
  *(_QWORD *)(v9 + 9496) = *(_QWORD *)(v9 + 2496);
  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 7768);
  v14 = *(_DWORD *)(v9 + 9408);
  v15 = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8760) = v15;
  v16 = *(_DWORD *)(v9 + 9480);
  *(_DWORD *)(v9 + 8752) = v16;
  *(_DWORD *)(v9 + 8688) = a4;
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  v17 = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8704) = v17;
  *(_QWORD *)(v9 + 9280) = *(_QWORD *)(v9 + 9600);
  *(_QWORD *)(v9 + 9016) = *(_QWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 9320) = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 6744) = a2;
  *(_DWORD *)(v9 + 7280) = a4;
  *(_DWORD *)(v9 + 7344) = v15;
  *(_DWORD *)(v9 + 8136) = v16;
  *(_DWORD *)(v9 + 7424) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 7264) = a4;
  *(_DWORD *)(v9 + 7200) = v17;
  *(_DWORD *)(v9 + 6760) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 8328) = a5;
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  v18 = *(_DWORD *)(v9 + 7480);
  *(_DWORD *)(v9 + 9736) = v18;
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 9264) = a3;
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  *(_QWORD *)(v9 + 7240) = *(_QWORD *)(v9 + 4168);
  *(_QWORD *)(v9 + 7248) = v13;
  *(_QWORD *)(v9 + 7232) = *(_QWORD *)(v9 + 2224);
  *(_DWORD *)(v9 + 8080) = *(_DWORD *)(v9 + 8032);
  *(_DWORD *)(v9 + 8260) = a1;
  *(_DWORD *)(v9 + 7192) = *(_DWORD *)(v9 + 7436);
  *(_DWORD *)(v9 + 7272) = *(_DWORD *)(v9 + 7456);
  *(_DWORD *)(v9 + 7312) = *(_DWORD *)(v9 + 9328);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 8064) = *(_DWORD *)(v9 + 7992);
  *(_DWORD *)(v9 + 7256) = *(_DWORD *)(v9 + 7500);
  *(_DWORD *)(v9 + 7128) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 7168) = *(_DWORD *)(v9 + 7464);
  *(_DWORD *)(v9 + 7184) = *(_DWORD *)(v9 + 7488);
  *(_DWORD *)(v9 + 7296) = *(_DWORD *)(v9 + 7484);
  *(_DWORD *)(v9 + 9104) = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 7304) = v18;
  *(_DWORD *)(v9 + 7176) = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 7288) = *(_DWORD *)(v9 + 7476);
  LODWORD(v11) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 7224) = v11;
  *(_DWORD *)(v9 + 8040) = *(_DWORD *)(v9 + 8020);
  *(_DWORD *)(v9 + 7416) = *(_DWORD *)(v9 + 7432);
  *(_DWORD *)(v9 + 8116) = *(_DWORD *)(v9 + 8024);
  *(_DWORD *)(v9 + 9072) = v8;
  *(_DWORD *)(v9 + 7328) = *(_DWORD *)(v9 + 8000);
  *(_DWORD *)(v9 + 8272) = *(_DWORD *)(v9 + 7984);
  *(_DWORD *)(v9 + 8056) = *(_DWORD *)(v9 + 8008);
  *(_DWORD *)(v9 + 7112) = *(_DWORD *)(v9 + 0x2000);
  *(_DWORD *)(v9 + 7208) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 7408) = *(_DWORD *)(v9 + 7460);
  *(_DWORD *)(v9 + 7160) = *(_DWORD *)(v9 + 7440);
  *(_DWORD *)(v9 + 7320) = v11;
  *(_DWORD *)(v9 + 7336) = v14;
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 9392) = 78;
  *(_DWORD *)(v9 + 8236) = *(_DWORD *)(v9 + 9240);
  return v12();
}

void sub_1002F2EFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_DWORD *)(v8 + 9496) = v6;
  *(_QWORD *)(v8 + 9280) = *(_QWORD *)(v8 + 9600);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_DWORD *)(v8 + 9736) = *(_DWORD *)(v8 + 7352);
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 8628) = v5;
  *(_DWORD *)(v8 + 9480) = a5;
  *(_DWORD *)(v8 + 8456) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 8188) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 8544) = v7;
  *(_DWORD *)(v8 + 8328) = a4;
  JUMPOUT(0x1002BDA78);
}

uint64_t sub_1002F2F80@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 - 47) ^ 0x33) & 0x7Fu) > a1) * ((v1 ^ 0x34C6) - 4858)) ^ v1)))();
}

uint64_t sub_1002F2FBC@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((a1 < (115 * (v1 & 0x7F ^ 0x18) - 53))
                                * ((v1 & 0x421A2D7F ^ 0x2018) + 32)) ^ v1 & 0x421A2D7F)))();
}

uint64_t sub_1002F3004()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 + 8961) ^ (2 * (v1 < 0x22))))
                            - ((v0 + 2418) ^ 0x979)))();
}

uint64_t sub_1002F303C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W5>, char a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                           + 8
                                                           * ((((((v5 - 2144076171) | 0x5091003) + 4007) ^ (v6 + v5 - 415))
                                                             * (a5 == 33)) ^ v5));
  v10 = *(_QWORD *)(v7 + 2592);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2720);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 2736);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = a4;
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 3116);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = a3;
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v9(a1, a2, v10);
}

uint64_t sub_1002F316C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  char v11;
  uint64_t v12;

  v8 = v6;
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2696);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 2336);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 7476) = a6;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  v9 = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_QWORD *)(v7 + 9680) = *(_QWORD *)(v7 + 9504);
  v10 = (v6 ^ 0x853D1004) + 8378;
  v11 = -45 * (v6 ^ 4);
  if (v10 + v9 - 8395)
    v12 = 137;
  else
    v12 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + v12) >> (v11 ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + v12)) == 30)) ^ (v8 + 2059604150))))();
}

uint64_t sub_1002F3268()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((121
                                          * (*(_DWORD *)(v1 + 9256) == (((v0 + 70511564) | 0x81090012) ^ 0x853D1017))) ^ v0))
                            - 4))();
}

uint64_t sub_1002F32C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v10 = *(_QWORD *)(v9 + 9536);
  *(_DWORD *)(v9 + 5160) = 0;
  v11 = *(unsigned __int8 *)(v10 + 59) ^ a8;
  *(_DWORD *)(v9 + 9392) = v11;
  *(_DWORD *)(v9 + 5148) = 109 * v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((1809 * (*(_DWORD *)(v9 + 9256) != 0)) ^ (v8 + 2059604340))) - 12))();
}

uint64_t sub_1002F32D8@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((78 * (v1 ^ 0x16) + 64) & 0xFEu) <= a1)
                                          * (2 * (v1 ^ 0x18C7) - 5969)) ^ v1))
                            - 8))();
}

uint64_t sub_1002F3328@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 < 0x2Eu) ^ (17 * (v1 ^ 0x45))) & 1) * (5 * (v1 ^ 0x21BF) - 393)) ^ v1)))();
}

uint64_t sub_1002F3368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9
                                                            + 8
                                                            * (int)(((((*(_DWORD *)(v8 + 8544) == 107) ^ (v6 ^ (v7 + 113))) & 1)
                                                                   * (((v6 - 2079850911) | 0x1351017) ^ 0x853D3465)) ^ v6));
  v11 = *(_QWORD *)(v8 + 3168);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 3232);
  *(_QWORD *)(v8 + 9496) = v11;
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = a6;
  *(_DWORD *)(v8 + 9736) = *(_DWORD *)(v8 + 7952);
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9264) = a5;
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  return v10(a1, a2, v11);
}

uint64_t sub_1002F34B4@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v2 + 3232);
  *(_QWORD *)(v2 + 9504) = *(_QWORD *)(v2 + 7880);
  *(_QWORD *)(v2 + 9576) = *(_QWORD *)(v2 + 3072);
  *(_QWORD *)(v2 + 9496) = v4;
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  v5 = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8748) = v5;
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8744) = *(_DWORD *)(v2 + 8628);
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 7952) = a1;
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 8664) = *(_DWORD *)(v2 + 8992);
  *(_DWORD *)(v2 + 9736) = v5;
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = *(_DWORD *)(v2 + 9004);
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 8632) = *(_DWORD *)(v2 + 8800);
  *(_DWORD *)(v2 + 9688) = *(_DWORD *)(v2 + 7768);
  v6 = *(_DWORD *)(v2 + 8312);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_QWORD *)(v2 + 9680) = *(_QWORD *)(v2 + 9504);
  if ((a2 ^ 0x853D1004) + 8378 + v6 - 8395)
    v7 = 137;
  else
    v7 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v7) >> ((-45 * (a2 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v7)) == 30)) ^ (a2 + 2059604150))))();
}

uint64_t sub_1002F35A4()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v1 < 0x52) ^ (v0 + 108)) & 1) * v2) ^ v0))
                            - 4))();
}

uint64_t sub_1002F35D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int v11;

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                     + 8
                                                                     * (int)(((((v6 + 70054187) | 0x81100017) ^ 0x853D35DF)
                                                                            * (*(_DWORD *)(v7 + 8544) != 143)) ^ (v6 - 7540)))
                                                         - ((v6 - 7540) ^ 0xACu)
                                                         + 449);
  v10 = *(_QWORD *)(v7 + 3168);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 3144);
  *(_QWORD *)(v7 + 9496) = v10;
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  v11 = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 7952) = a6;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = a6;
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = v11;
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v9(a1, a2, v10);
}

void sub_1002F3724(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v3 + 8248) + 1696) = 0;
  v4 = *(_QWORD *)(v3 + 7048) + 32;
  *(_QWORD *)(v3 + 9416) = (a3 - 939566262) & 0xBD3DB2FF;
  *(_QWORD *)(v3 + 6904) = *(_QWORD *)(v3 + 7664);
  *(_QWORD *)(v3 + 6872) = *(_QWORD *)(v3 + 7680);
  *(_QWORD *)(v3 + 6864) = *(_QWORD *)(v3 + 7656);
  *(_QWORD *)(v3 + 6888) = *(_QWORD *)(v3 + 7688);
  *(_QWORD *)(v3 + 6880) = *(_QWORD *)(v3 + 7696);
  *(_QWORD *)(v3 + 6896) = *(_QWORD *)(v3 + 7704);
  *(_QWORD *)(v3 + 8944) = *(_QWORD *)(v3 + 9568);
  *(_QWORD *)(v3 + 8576) = *(_QWORD *)(v3 + 8888);
  *(_QWORD *)(v3 + 8952) = *(_QWORD *)(v3 + 9200);
  *(_QWORD *)(v3 + 8936) = *(_QWORD *)(v3 + 8880);
  *(_QWORD *)(v3 + 9280) = *(_QWORD *)(v3 + 9600);
  *(_QWORD *)(v3 + 9016) = *(_QWORD *)(v3 + 9608);
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 6928) = *(_DWORD *)(v3 + 7712);
  *(_DWORD *)(v3 + 7920) = *(_DWORD *)(v3 + 7936);
  *(_DWORD *)(v3 + 9116) = *(_DWORD *)(v3 + 9448);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 7904) = *(_DWORD *)(v3 + 8312);
  *(_DWORD *)(v3 + 5344) = *(_DWORD *)(v3 + 6072);
  *(_DWORD *)(v3 + 9320) = *(_DWORD *)(v3 + 9616);
  *(_DWORD *)(v3 + 7040) = *(_DWORD *)(v3 + 6944);
  *(_DWORD *)(v3 + 6856) = *(_DWORD *)(v3 + 7648);
  *(_DWORD *)(v3 + 8064) = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 8832) = *(_DWORD *)(v3 + 9384);
  *(_DWORD *)(v3 + 9152) = *(_DWORD *)(v3 + 8964);
  *(_DWORD *)(v3 + 6952) = *(_DWORD *)(v3 + 6936);
  *(_DWORD *)(v3 + 8196) = *(_DWORD *)(v3 + 9520);
  *(_DWORD *)(v3 + 6984) = *(_DWORD *)(v3 + 7552);
  *(_DWORD *)(v3 + 9464) = 994009694;
  *(_DWORD *)(v3 + 8608) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 5340) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 8136) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 7000) = *(_DWORD *)(v3 + 6968);
  *(_DWORD *)(v3 + 7928) = a2;
  *(_DWORD *)(v3 + 7912) = *(_DWORD *)(v3 + 7888);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 8456) = *(_DWORD *)(v3 + 9664);
  *(_DWORD *)(v3 + 8912) = *(_DWORD *)(v3 + 8872);
  *(_DWORD *)(v3 + 6912) = *(_DWORD *)(v3 + 7640);
  *(_DWORD *)(v3 + 5348) = *(_DWORD *)(v3 + 6084);
  *(_DWORD *)(v3 + 7008) = *(_DWORD *)(v3 + 6992);
  *(_DWORD *)(v3 + 6920) = *(_DWORD *)(v3 + 7672);
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 5336) = *(_DWORD *)(v3 + 6080);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 9664) = *(_DWORD *)(v3 + 6976);
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 8920) = *(_DWORD *)(v3 + 9160);
  *(_DWORD *)(v3 + 9616) = *(_DWORD *)(v3 + 7096);
  *(_DWORD *)(v3 + 7152) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 9600) = *(_DWORD *)(v3 + 7020);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7080) = *(_DWORD *)(v3 + 7592);
  *(_DWORD *)(v3 + 8188) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 9488) = *(_DWORD *)(v3 + 7064);
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8904) = *(_DWORD *)(v3 + 8616);
  *(_DWORD *)(v3 + 7088) = *(_DWORD *)(v3 + 7584);
  *(_DWORD *)(v3 + 9472) = *(_DWORD *)(v3 + 7136);
  *(_DWORD *)(v3 + 7072) = *(_DWORD *)(v3 + 7576);
  *(_DWORD *)(v3 + 8552) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 8900) = *(_DWORD *)(v3 + 9096);
  *(_DWORD *)(v3 + 4292) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 9184) = *(_DWORD *)(v3 + 9584);
  *(_DWORD *)(v3 + 8572) = *(_DWORD *)(v3 + 8984);
  *(_DWORD *)(v3 + 8932) = *(_DWORD *)(v3 + 8612);
  *(_DWORD *)(v3 + 5312) = *(_DWORD *)(v3 + 7632);
  *(_DWORD *)(v3 + 8328) = a1;
  *(_DWORD *)(v3 + 8544) = 144;
  *(_DWORD *)(v3 + 2348) = 1;
  *(_QWORD *)(v3 + 9608) = v4;
  *(_QWORD *)(v3 + 9456) = v4;
  JUMPOUT(0x1002A024CLL);
}

uint64_t sub_1002F3DA4()
{
  int v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((252
                                * ((((5 * (v0 ^ v1) - 38) & 0xE7 ^ 4) + *(_DWORD *)(v2 + 8544)) > 0xA1u)) ^ v0)))();
}

uint64_t sub_1002F3DF0@<X0>(unsigned __int8 a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W5>, unsigned __int8 a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v10 = *(uint64_t (**)(void))(v9 + 8 * ((1727 * (a6 >= (((v6 - v7 + 97) | 0x14u) ^ a1))) ^ v6));
  *(_QWORD *)(v8 + 7144) = (v6 - v7 - 139);
  *(_DWORD *)(v8 + 7216) = 69;
  v11 = *(_QWORD *)(v8 + 6008);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7512);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 2208);
  *(_QWORD *)(v8 + 9496) = *(_QWORD *)(v8 + 7880);
  *(_DWORD *)(v8 + 8764) = a5;
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 4404);
  v12 = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8760) = v12;
  v13 = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8752) = v13;
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  v14 = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8704) = v14;
  *(_QWORD *)(v8 + 9280) = *(_QWORD *)(v8 + 9600);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 6744) = a3;
  *(_DWORD *)(v8 + 7344) = v12;
  *(_DWORD *)(v8 + 8136) = v13;
  *(_DWORD *)(v8 + 8868) = a5;
  *(_DWORD *)(v8 + 7424) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 7264) = a5;
  *(_DWORD *)(v8 + 7200) = v14;
  *(_DWORD *)(v8 + 6760) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 8328) = a4;
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  *(_DWORD *)(v8 + 9736) = *(_DWORD *)(v8 + 8312);
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9264) = *(_DWORD *)(v8 + 9624);
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  *(_QWORD *)(v8 + 7240) = *(_QWORD *)(v8 + 3896);
  *(_QWORD *)(v8 + 7248) = v11;
  *(_QWORD *)(v8 + 7232) = *(_QWORD *)(v8 + 6088);
  *(_DWORD *)(v8 + 8080) = *(_DWORD *)(v8 + 8032);
  *(_DWORD *)(v8 + 8260) = a2;
  *(_DWORD *)(v8 + 7192) = *(_DWORD *)(v8 + 7436);
  *(_DWORD *)(v8 + 7272) = *(_DWORD *)(v8 + 7456);
  *(_DWORD *)(v8 + 7312) = *(_DWORD *)(v8 + 9328);
  *(_DWORD *)(v8 + 9272) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 8064) = *(_DWORD *)(v8 + 7992);
  *(_DWORD *)(v8 + 7256) = *(_DWORD *)(v8 + 7500);
  v15 = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 7280) = v15;
  *(_DWORD *)(v8 + 7128) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 7168) = *(_DWORD *)(v8 + 7464);
  *(_DWORD *)(v8 + 7184) = *(_DWORD *)(v8 + 7488);
  *(_DWORD *)(v8 + 7296) = *(_DWORD *)(v8 + 7484);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 7304) = *(_DWORD *)(v8 + 7480);
  *(_DWORD *)(v8 + 7176) = *(_DWORD *)(v8 + 9248);
  *(_DWORD *)(v8 + 7288) = *(_DWORD *)(v8 + 7476);
  *(_DWORD *)(v8 + 7224) = v15;
  *(_DWORD *)(v8 + 8040) = *(_DWORD *)(v8 + 8020);
  *(_DWORD *)(v8 + 7416) = *(_DWORD *)(v8 + 7432);
  *(_DWORD *)(v8 + 8116) = *(_DWORD *)(v8 + 8024);
  *(_DWORD *)(v8 + 9072) = *(_DWORD *)(v8 + 9632);
  *(_DWORD *)(v8 + 7328) = *(_DWORD *)(v8 + 8000);
  *(_DWORD *)(v8 + 8272) = *(_DWORD *)(v8 + 7984);
  *(_DWORD *)(v8 + 8056) = *(_DWORD *)(v8 + 8008);
  *(_DWORD *)(v8 + 7112) = *(_DWORD *)(v8 + 0x2000);
  *(_DWORD *)(v8 + 7208) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 7408) = *(_DWORD *)(v8 + 7460);
  *(_DWORD *)(v8 + 7160) = *(_DWORD *)(v8 + 7440);
  *(_DWORD *)(v8 + 7320) = *(_DWORD *)(v8 + 9156);
  *(_DWORD *)(v8 + 7336) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 9400) = *(_DWORD *)(v8 + 9224);
  *(_DWORD *)(v8 + 9392) = 154;
  *(_DWORD *)(v8 + 8236) = *(_DWORD *)(v8 + 9240);
  return v10();
}

uint64_t sub_1002F409C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((8180 * (((v1 < 0x3E) ^ v0 ^ 0x73) & 1)) ^ v0))
                            - (v0 ^ 0xE8Du)
                            + 349))();
}

uint64_t sub_1002F40D8(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  int v12;
  int v13;
  int v14;

  v9 = v6 ^ 0x853D1176;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v8
                                      + 8 * (((v6 ^ 0x220) * (*(_DWORD *)(v7 + 8544) != 123)) ^ v6))
                          - 12);
  *(_DWORD *)(v7 + 7216) = 57;
  v11 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7512);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2208);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 2072);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 4404);
  *(_DWORD *)(v7 + 8744) = a6;
  v12 = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8760) = v12;
  v13 = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8752) = v13;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  v14 = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8704) = v14;
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 6744) = a3;
  *(_DWORD *)(v7 + 7344) = v12;
  *(_DWORD *)(v7 + 8136) = v13;
  *(_DWORD *)(v7 + 8868) = a6;
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 7264) = a6;
  *(_DWORD *)(v7 + 7200) = v14;
  *(_DWORD *)(v7 + 6760) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 8328) = a4;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 280);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  *(_QWORD *)(v7 + 7144) = v9;
  *(_QWORD *)(v7 + 7240) = *(_QWORD *)(v7 + 3280);
  *(_QWORD *)(v7 + 7248) = v11;
  *(_QWORD *)(v7 + 7232) = *(_QWORD *)(v7 + 3896);
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 8260) = a2;
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 7256) = *(_DWORD *)(v7 + 7500);
  *(_DWORD *)(v7 + 7280) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  *(_DWORD *)(v7 + 7224) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 7416) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 7328) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7112) = *(_DWORD *)(v7 + 0x2000);
  *(_DWORD *)(v7 + 7208) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7320) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 7336) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 9392) = 124;
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 9240);
  return v10();
}

uint64_t sub_1002F437C(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v10 = *(uint64_t (**)(void))(v9
                            + 8
                            * ((1727
                              * (((*(_DWORD *)(v7 + 8544) == 147) ^ (v6 ^ (v8 + 113))) & 1)) ^ v6));
  *(_DWORD *)(v7 + 7216) = 66;
  v11 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7512);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2208);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 7880);
  *(_DWORD *)(v7 + 8764) = a6;
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 4404);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  v12 = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8760) = v12;
  v13 = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8752) = v13;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  v14 = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8704) = v14;
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 6744) = a3;
  *(_DWORD *)(v7 + 7344) = v12;
  *(_DWORD *)(v7 + 8136) = v13;
  *(_DWORD *)(v7 + 8868) = a6;
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 7264) = a6;
  *(_DWORD *)(v7 + 7200) = v14;
  *(_DWORD *)(v7 + 6760) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 8328) = a4;
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  *(_QWORD *)(v7 + 7144) = v6 ^ (v8 + 369);
  *(_QWORD *)(v7 + 7240) = *(_QWORD *)(v7 + 4184);
  *(_QWORD *)(v7 + 7248) = v11;
  *(_QWORD *)(v7 + 7232) = *(_QWORD *)(v7 + 6088);
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 8260) = a2;
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 7256) = *(_DWORD *)(v7 + 7500);
  v15 = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 7280) = v15;
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  *(_DWORD *)(v7 + 7224) = v15;
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 7416) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 7328) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7112) = *(_DWORD *)(v7 + 0x2000);
  *(_DWORD *)(v7 + 7208) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7320) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 7336) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 9392) = 148;
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 9240);
  return v10();
}

uint64_t sub_1002F4618(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v9 = (v6 - 2059599685);
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v8
                                      + 8
                                      * (int)(((v9 ^ 0x853D1356) * (*(_DWORD *)(v7 + 8544) != 115)) ^ (v6 - 3579)))
                          - 12);
  *(_DWORD *)(v7 + 7216) = 52;
  v11 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7512);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2208);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 7880);
  *(_DWORD *)(v7 + 8764) = a6;
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 4404);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  v12 = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8760) = v12;
  v13 = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8752) = v13;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  v14 = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8704) = v14;
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 6744) = a3;
  *(_DWORD *)(v7 + 7344) = v12;
  *(_DWORD *)(v7 + 8136) = v13;
  *(_DWORD *)(v7 + 8868) = a6;
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 7264) = a6;
  *(_DWORD *)(v7 + 7200) = v14;
  *(_DWORD *)(v7 + 6760) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 8328) = a4;
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  *(_QWORD *)(v7 + 7144) = v9;
  *(_QWORD *)(v7 + 7240) = *(_QWORD *)(v7 + 4184);
  *(_QWORD *)(v7 + 7248) = v11;
  *(_QWORD *)(v7 + 7232) = *(_QWORD *)(v7 + 6088);
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 8260) = a2;
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 7256) = *(_DWORD *)(v7 + 7500);
  v15 = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 7280) = v15;
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  *(_DWORD *)(v7 + 7224) = v15;
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 7416) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 7328) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7112) = *(_DWORD *)(v7 + 0x2000);
  *(_DWORD *)(v7 + 7208) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7320) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 7336) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 9392) = 116;
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 9240);
  return v10();
}

uint64_t sub_1002F48C0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, unsigned __int8 a5@<W8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  int v11;
  int v12;
  int v13;

  *(_QWORD *)(v6 + 7144) = (v5 - 2147152209) | 0x5380007u;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((833 * ((((v5 - 81) | 7) + 66) == a5)) ^ v5))
                         + 2235371539
                         - (v5 ^ (v7 + 351))
                         - 8);
  *(_DWORD *)(v6 + 7216) = 68;
  v10 = *(_QWORD *)(v6 + 6008);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7512);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 2208);
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 2144);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 4404);
  v11 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v11;
  *(_DWORD *)(v6 + 8752) = a4;
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  v12 = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8704) = v12;
  *(_QWORD *)(v6 + 9280) = *(_QWORD *)(v6 + 9600);
  *(_QWORD *)(v6 + 9016) = *(_QWORD *)(v6 + 9608);
  *(_DWORD *)(v6 + 9320) = *(_DWORD *)(v6 + 9616);
  *(_DWORD *)(v6 + 6744) = a2;
  *(_DWORD *)(v6 + 7344) = v11;
  v13 = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 8136) = v13;
  *(_DWORD *)(v6 + 8868) = a4;
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 9664);
  *(_DWORD *)(v6 + 7264) = a4;
  *(_DWORD *)(v6 + 7224) = v13;
  *(_DWORD *)(v6 + 7200) = v12;
  *(_DWORD *)(v6 + 6760) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 8328) = a3;
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9736) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_QWORD *)(v6 + 7240) = *(_QWORD *)(v6 + 4240);
  *(_QWORD *)(v6 + 7248) = v10;
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 4184);
  *(_DWORD *)(v6 + 8080) = *(_DWORD *)(v6 + 8032);
  *(_DWORD *)(v6 + 8260) = a1;
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 9272) = *(_DWORD *)(v6 + 9656);
  *(_DWORD *)(v6 + 8064) = *(_DWORD *)(v6 + 7992);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7280) = *(_DWORD *)(v6 + 9424);
  *(_DWORD *)(v6 + 7128) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 9104) = *(_DWORD *)(v6 + 9440);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 8040) = *(_DWORD *)(v6 + 8020);
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 8116) = *(_DWORD *)(v6 + 8024);
  *(_DWORD *)(v6 + 9072) = *(_DWORD *)(v6 + 9632);
  *(_DWORD *)(v6 + 7328) = *(_DWORD *)(v6 + 8000);
  *(_DWORD *)(v6 + 8272) = *(_DWORD *)(v6 + 7984);
  *(_DWORD *)(v6 + 8056) = *(_DWORD *)(v6 + 8008);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7208) = *(_DWORD *)(v6 + 9528);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 7336) = *(_DWORD *)(v6 + 9408);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 9392) = 150;
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  return v9();
}

uint64_t sub_1002F4B80@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, char a5@<W8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  int v12;
  int v13;

  v8 = v5 - 2352;
  v9 = (v5 - 2352) ^ 0x853D1176;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v8 ^ (833 * (a5 == 57))))
                          - v9
                          + 0x10A7A2022
                          - (v8 - 2059596106));
  *(_DWORD *)(v6 + 7216) = 54;
  v11 = *(_QWORD *)(v6 + 6008);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7512);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 2208);
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 2144);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 4404);
  v12 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v12;
  *(_DWORD *)(v6 + 8752) = a4;
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  v13 = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8704) = v13;
  *(_QWORD *)(v6 + 7144) = v9;
  *(_QWORD *)(v6 + 9280) = *(_QWORD *)(v6 + 9600);
  *(_QWORD *)(v6 + 9016) = *(_QWORD *)(v6 + 9608);
  *(_DWORD *)(v6 + 9320) = *(_DWORD *)(v6 + 9616);
  *(_DWORD *)(v6 + 6744) = a2;
  *(_DWORD *)(v6 + 7344) = v12;
  LODWORD(v9) = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 8136) = v9;
  *(_DWORD *)(v6 + 8868) = a4;
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 9664);
  *(_DWORD *)(v6 + 7264) = a4;
  *(_DWORD *)(v6 + 7224) = v9;
  *(_DWORD *)(v6 + 7200) = v13;
  *(_DWORD *)(v6 + 6760) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 8328) = a3;
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9736) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_QWORD *)(v6 + 7240) = *(_QWORD *)(v6 + 4240);
  *(_QWORD *)(v6 + 7248) = v11;
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 4184);
  *(_DWORD *)(v6 + 8080) = *(_DWORD *)(v6 + 8032);
  *(_DWORD *)(v6 + 8260) = a1;
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 9272) = *(_DWORD *)(v6 + 9656);
  *(_DWORD *)(v6 + 8064) = *(_DWORD *)(v6 + 7992);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  *(_DWORD *)(v6 + 7280) = *(_DWORD *)(v6 + 9424);
  *(_DWORD *)(v6 + 7128) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 9104) = *(_DWORD *)(v6 + 9440);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 8040) = *(_DWORD *)(v6 + 8020);
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 8116) = *(_DWORD *)(v6 + 8024);
  *(_DWORD *)(v6 + 9072) = *(_DWORD *)(v6 + 9632);
  *(_DWORD *)(v6 + 7328) = *(_DWORD *)(v6 + 8000);
  *(_DWORD *)(v6 + 8272) = *(_DWORD *)(v6 + 7984);
  *(_DWORD *)(v6 + 8056) = *(_DWORD *)(v6 + 8008);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7208) = *(_DWORD *)(v6 + 9528);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 7336) = *(_DWORD *)(v6 + 9408);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 9392) = 118;
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  return v10();
}

void sub_1002F4E3C()
{
  JUMPOUT(0x1002F4E50);
}

uint64_t sub_1002F4F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  _BOOL4 v19;

  v11 = (v6 - 228588186) & 0xD9FF7FD;
  v12 = *(_DWORD *)(a5 + a3);
  v13 = *(unsigned __int8 *)(v10 + (((v12 >> ((v11 ^ 0xC) + 88)) & 0x7F | ((v12 & 1) << 7)) ^ 0x25));
  *(_DWORD *)(v8 + 1548) = (v13 ^ (32 * (v13 ^ 0x45)) ^ 0xFFFFFFE5) - ((2 * (v13 ^ 0x45) + 20) & 0x3A) - 89;
  *(_DWORD *)(v8 + 1496) = (v12 >> 8) - 4 * (v12 >> 9) + 126;
  v14 = HIWORD(v12) - ((v12 >> 15) & 0x1FFAC);
  v15 = (v12 >> 21) & 0xF8 | (v12 >> 29);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 9536) + (v15 ^ 0x3B));
  *(_DWORD *)(v8 + 1492) = v14 + 86;
  *(_DWORD *)(v8 + 1500) = 109 * (v16 ^ v15 ^ v7) - ((26 * (v16 ^ v15 ^ v7)) & 0x16) - 117;
  v17 = *(_DWORD *)(v8 + 9256);
  v19 = v17 > 0x805C648D || v5 + v11 + 2141094870 < v17 + 2141428594;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                          + 8 * ((5167 * v19) ^ v11))
                                                                              - 12))(a1, a2, 2235367631, a4, 2059600627);
}

void sub_1002F4FA8()
{
  JUMPOUT(0x1002F4FBCLL);
}

uint64_t sub_1002F5050@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t (*v10)(void);

  v6 = v3 - 7889;
  v7 = v2 + v3 - 7889 - 697;
  v8 = *(_DWORD *)(a2 - 0x62AA055D109F20F3);
  *(_DWORD *)(v5 + 5156) = v8;
  *(_DWORD *)(v5 + 9280) = ((v3 - 4414) ^ (v8 >> 15) & 0x1FF84 ^ 0xFFFFFFB2) + HIWORD(v8) - 61;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 9560) + (HIBYTE(v8) ^ 0x26)) ^ 0x60;
  *(_DWORD *)(v5 + 9320) = v9;
  *(_DWORD *)(v5 + 9416) = v9 + 3;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((9883 * (*(_DWORD *)(v5 + 9256) > v7)) ^ v6)) - 12);
  *(_DWORD *)(v5 + 5164) = v4;
  return v10();
}

void sub_1002F507C()
{
  JUMPOUT(0x1002F5090);
}

uint64_t sub_1002F51B4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v13;

  v8 = *(_DWORD *)(a1 + v6);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9552) + ((-87 * v8) ^ 0x8BLL)) + 94;
  *(_DWORD *)(v4 + 1488) = (67 * (v2 ^ 0x420)) ^ ((v9 >> 5) | (8 * v9)) ^ 0x74;
  *(_DWORD *)(v4 + 1484) = (v8 >> 8) - ((v8 >> 7) & 0x72) + 57;
  *(_DWORD *)(v4 + 1520) = HIWORD(v8) - ((v8 >> 15) & 0x2A) + 21;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9640) + ((-87 * HIBYTE(v8)) ^ 0x20));
  *(_DWORD *)(v4 + 1524) = ((((v10 >> 1) & 0x46 ^ v10) >> 5) | (8 * ((v10 >> 1) & 0x46 ^ v10))) ^ v5;
  v11 = *(_DWORD *)(v4 + 9256);
  v13 = v11 > 0xD17A8FA5 || (v3 ^ 0x7A4u) + v1 + 780165218 < v11 + 780496986;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v13 | (4 * v13)) ^ v2)) - 12))();
}

uint64_t sub_1002F5248@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  _DWORD *v4;
  unsigned int v5;
  unsigned int v6;

  v5 = (v3 + 390869907) & 0xE8B3D9FF;
  v6 = *(_DWORD *)(a2 - 0x62AA055D109F20F3);
  v4[1288] = v6 + (((v5 - 4096) | 0x1620) ^ 0xFFFFFFF0) - (((467 * (v5 ^ 0x1044)) ^ 0x51) & (2 * v6));
  v4[1286] = (v6 >> 8) - ((v6 >> 7) & 0x6A) - 75;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((38 * (v4[2314] <= v2 - 4172 + v5)) ^ v5)) - 8))();
}

uint64_t sub_1002F537C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  _BOOL4 v10;

  v6 = v2 + 7986;
  v7 = *(_DWORD *)(a1 + v4);
  v3[370] = v7 - ((((v6 - 1162748935) & 0x454E0B7F) - 116) & (2 * v7)) - 16;
  v3[367] = (v7 >> 8) - ((v6 - 113) & (2 * (v7 >> 8))) - 75;
  v3[368] = HIWORD(v7) - ((v7 >> 15) & 0x1FF84) - 62;
  v3[369] = HIBYTE(v7) - ((v7 >> 23) & 0x6A) - 75;
  v8 = v3[2314];
  v10 = v8 < 0x27293513 && (v6 ^ 0x23DAu) + v1 - 657343755 >= v8 - 657011987;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((58 * v10) ^ v6)) - 8))();
}

uint64_t sub_1002F5414(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;

  *(_DWORD *)(v4 + 5136) = -113;
  *(_DWORD *)(v4 + 9400) = 0;
  *(_DWORD *)(v4 + 5132) = 14;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9560) + 38) ^ 0x60;
  *(_DWORD *)(v4 + 5140) = v5 - ((2 * v5 + 6) & 0xFFFFFFCA) + 104;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((16311 * (*(_DWORD *)(v4 + 9256) > v2)) ^ v3)) - 12))();
}

uint64_t sub_1002F54E0()
{
  int v0;
  int v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v2[362] = -84;
  v2[365] = 54;
  v2[366] = -56;
  v2[386] = 51;
  v4 = v2[2314];
  v5 = v0 + 821110943 < v4 + 821442711;
  if (v4 > 0xCF09C768 != (v0 + 821110943) < 0x30F63897)
    v5 = v4 > 0xCF09C768;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((8947 * v5) ^ v1)) - 8))();
}

void sub_1002F54E8()
{
  JUMPOUT(0x1002F5510);
}

uint64_t sub_1002F55A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  _DWORD *v4;
  int v5;
  unsigned int v6;

  v5 = 347 * (v3 ^ 0x166E);
  v6 = *(_DWORD *)(a2 - 0x62AA055D109F20F3);
  v4[1282] = v6 - ((2 * v6) & 0xFFFFFFE3) - 15;
  v4[1280] = HIWORD(v6) + ~((v5 ^ 0x26D1) & (2 * HIWORD(v6))) - 31;
  v4[1297] = HIBYTE(v6) - ((v6 >> 23) & 0x56) - 85;
  return (*(uint64_t (**)(void))(a1 + 8 * (v5 | (4 * ((v5 ^ 0x410u) + v2 < v4[2314])))))();
}

void sub_1002F55D8()
{
  JUMPOUT(0x1002F5618);
}

uint64_t sub_1002F56E8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  _BOOL4 v11;

  v6 = 633 * (v2 ^ 0xB57);
  v7 = *(_DWORD *)(a1 + v4);
  *(_DWORD *)(v3 + 1452) = v7 - ((2 * v7) & 0xFFFFFFDC) + 110;
  *(_DWORD *)(v3 + 1440) = (v7 >> 8) - ((((v6 - 1334912892) & 0x4F9123FC) + 74) & (v7 >> 7)) - 101;
  *(_DWORD *)(v3 + 1540) = HIWORD(v7) - ((v7 >> 15) & 0x1FFA8) - 44;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 9560) + (HIBYTE(v7) ^ 0x26)) ^ 0x60;
  *(_DWORD *)(v3 + 1456) = v8 - ((2 * v8 + 6) & 0xFFFFFFEC) - 7;
  v9 = *(_DWORD *)(v3 + 9256);
  v10 = v1 + v6 + 1938159186;
  v11 = v9 + 1938492852 > v10;
  if (v9 > 0x8C74F24B != v10 < 0x738B0DB4)
    v11 = v9 > 0x8C74F24B;
  return (*(uint64_t (**)(void))(v5 + 8 * ((9624 * v11) ^ v6)))();
}

void sub_1002F570C()
{
  JUMPOUT(0x1002F5718);
}

uint64_t sub_1002F577C@<X0>(uint64_t a1@<X1>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;

  v6 = *(_DWORD *)(a3 - 0x62AA055D109F20F3);
  *(_DWORD *)(v5 + 5124) = v6 - ((2 * v6) & 0x5E) - 81;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 9536)
                          + (((v6 >> 21) & 7 | (8 * BYTE2(v6))) ^ 0xF9 ^ ((HIWORD(v6) & 0xC2 ^ 0xC2)
                                                                                         + (HIWORD(v6) & 0xC2))));
  *(_DWORD *)(v5 + 5096) = (v6 >> ((v4 - 26) & 0xF9 ^ 0xF9))
                         + ((v4 - 132) ^ 0xFFFFFFBA)
                         - ((2 * (v6 >> ((v4 - 26) & 0xF9 ^ 0xF9))) & 0x6E);
  v8 = v7 ^ ((v6 >> 21) & 7 | (8 * HIWORD(v6))) ^ a2;
  *(_DWORD *)(v5 + 5112) = 109 * v8 - ((90 * v8) & 0x72) + 57;
  *(_DWORD *)(v5 + 5116) = HIBYTE(v6) - ((v6 >> 23) & 0x1B8) - 36;
  return (*(uint64_t (**)(void))(a1
                              + 8 * ((22 * (((v4 + 7894) ^ 0x22E6u) + v3 >= *(_DWORD *)(v5 + 9256))) ^ (v4 + 7894))))();
}

uint64_t sub_1002F58AC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v6 = (v2 - 863405933) & 0x337683ED;
  v7 = *(_DWORD *)(a1 + v4);
  v3[384] = v7 - ((2 * v7) & 0x7C) + 62;
  v3[361] = (((v6 - 1001) | 0x408) ^ 0xFFFFFF90) + (v7 >> 8) + (((v6 + 2076) | 0x286) ^ (v7 >> 7) & 0x34 ^ 0x71);
  v3[359] = HIWORD(v7) - ((v7 >> 15) & 0x1FF90) - 56;
  v3[383] = HIBYTE(v7) - ((v7 >> 23) & 0x1E8) + 116;
  v8 = v1 + v6 + 1477863131;
  v9 = v3[2314];
  v10 = (v9 > 0xA7E48541) ^ (v8 < 0x581B7ABE);
  v11 = v8 < v9 + 1478195902;
  if (v10)
    v11 = v9 > 0xA7E48541;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2023 * !v11) ^ v6)) - 4))();
}

void sub_1002F58D8()
{
  JUMPOUT(0x1002F58F0);
}

uint64_t sub_1002F59E0(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  _DWORD *v4;

  v4[1277] = 41;
  v4[1273] = -6;
  v4[2408] = 93;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * ((4317 * (v2 < v4[2314])) ^ v3)) - 12))(2059596029);
}

uint64_t sub_1002F5AD8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  _DWORD *v4;
  uint64_t v5;
  _BOOL4 v6;

  v4[357] = ((a3 + v3 - 68685657) | 0x4181013) ^ 0xFFFFFF8C;
  v4[355] = 26;
  v4[358] = 39;
  v6 = v4[2306] != 0;
  v4[354] = -37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (12259 * v6))) - 4))();
}

void sub_1002F5AE4()
{
  JUMPOUT(0x1002F5B14);
}

uint64_t sub_1002F5B94@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  _DWORD *v4;
  int v5;
  unsigned int v6;

  v6 = *(_DWORD *)(a3 - 0x62AA055D109F20F3);
  v4[1275] = (v6 >> 8) - ((v6 >> 7) & 0x70) - 72;
  v4[1272] = (v3 ^ 0x853D139A) + HIWORD(v6) - ((v6 >> 15) & 0x1FFB4) + 67;
  v4[1276] = HIBYTE(v6) - ((v6 >> 23) & 0x1B2) + 89;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ 0xF1D ^ (7913 * (a2 != v5)))) - 4))();
}

void sub_1002F5BB4()
{
  JUMPOUT(0x1002F5BC8);
}

uint64_t sub_1002F5C70@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;

  v4 = *(_DWORD *)(*(_QWORD *)(v2 + 8248) + 9504);
  v5 = a1 + a2;
  *(_DWORD *)(v2 + 1424) = v4 >> (((v5 - 19) & 0xEE) + 34);
  *(_DWORD *)(v2 + 1528) = HIBYTE(v4) - ((v4 >> 23) & 0x16) + 11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((464 * (*(_DWORD *)(v2 + 9224) <= 1u)) ^ (v5 + 1429))) - 12))();
}

uint64_t sub_1002F5D04(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  unsigned int v9;

  v9 = *(_DWORD *)(a7 + 3156);
  *(_DWORD *)(v8 + 5184) = (v7 ^ (a3 - 2283)) + v9 - ((v7 - a3 + 1224) & (2 * v9)) - 87;
  *(_QWORD *)(v8 + 6848) = (v9 >> 8) - ((v9 >> 7) & 0x60) - 80;
  *(_DWORD *)(v8 + 5076) = HIWORD(v9) - ((v9 >> 15) & 0x1FFCC) - 26;
  *(_DWORD *)(v8 + 5084) = HIBYTE(v9) - 4 * (v9 >> 25) + 126;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((5794 * (a6 > 1)) ^ (a1 + v7 + 1043))) - 8))();
}

void sub_1002F5D14()
{
  JUMPOUT(0x1002F5D24);
}

uint64_t sub_1002F5D90()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = *(unsigned __int8 *)(v4 + 37);
  *(_DWORD *)(v2 + 1404) = (*(unsigned __int8 *)(*(_QWORD *)(v2 + 9560) + ((v1 - 3545) | 0xD20u) - 7431) ^ 0x60) + 3;
  *(_DWORD *)(v2 + 1412) = (v5 ^ (32 * v5) ^ 0x45) + 10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1008 * (v0 >= *(_DWORD *)(v2 + 9224))) ^ v1)) - 4))();
}

void sub_1002F5D98()
{
  JUMPOUT(0x1002F5DA4);
}

uint64_t sub_1002F5E3C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  _DWORD *v5;
  int v6;
  unsigned int v7;

  v6 = (v4 + 1319) ^ 0x121C;
  v7 = *(_DWORD *)(a3 - 0x62AA055D109F20F3);
  v5[1265] = v7 - ((2 * v7) & 0x5A) - 83;
  v5[1270] = ((v6 - 3217) ^ 0xFFFFFFFC) + (v7 >> 8) - ((v7 >> 7) & 0x1FFFFAC);
  v5[1266] = (~(v7 >> 15) | 0xFFFFFFBB) + HIWORD(v7) - 93;
  v5[1268] = (~(v7 >> 23) | 0x77) + HIBYTE(v7) - 59;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((13941 * (v3 - 5946 + v6 < a2)) ^ v6)) - 8))();
}

void sub_1002F5E70()
{
  JUMPOUT(0x1002F5E98);
}

uint64_t sub_1002F5F1C()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 + 1864) = 0;
  *(_DWORD *)(v3 + 1408) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((13510 * (v2 > v0)) ^ v1)))();
}

uint64_t sub_1002F5F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)(v12 + 1400) = (*(unsigned __int8 *)(*(_QWORD *)(v12 + 9704) + a8) ^ (v11 + 127) ^ v10) + 10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((8122 * (v8 < *(_DWORD *)(v12 + 9224))) ^ v9)) - 4))();
}

void sub_1002F5F64()
{
  JUMPOUT(0x1002F5F78);
}

uint64_t sub_1002F5FF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W5>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  _DWORD *v6;
  unsigned int v7;
  uint64_t (*v8)(void);

  v7 = *(_DWORD *)(a4 + a2);
  v6[1295] = v7 + ((v7 << ((v5 ^ 0x91) + 87)) & 0xFFFFFF80) + 64;
  v6[1267] = (v7 >> 8) - ((v7 >> 7) & 0x2C) + 22;
  v6[1263] = HIBYTE(v7) - (v7 >> 29 << 6) - 32;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((6202 * (a3 > (v5 ^ 0x173Au) + v4)) ^ v5 ^ 0x1D91)) - 8);
  v6[2316] = v7;
  return v8();
}

uint64_t sub_1002F6014()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v7 = v2 + 48;
  v8 = *(_DWORD *)(v0 + v5);
  *(_DWORD *)(v4 + 1864) = v8;
  *(_DWORD *)(v4 + 1408) = v8 >> ((-101 * ((v7 + 23) ^ 0x37)) ^ 0xB6);
  return (*(uint64_t (**)(void))(v6 + 8 * ((13510 * (v3 > ((v7 - 233) ^ 0x1D2Cu) + v1)) ^ (v7 - 233))))();
}

void sub_1002F6070()
{
  JUMPOUT(0x1002F609CLL);
}

uint64_t sub_1002F6114()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v7 = (v2 - 3770) | 0x400;
  v8 = *(_DWORD *)(v0 + v4);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 9640) + ((-87 * v8) ^ 0x20)) ^ 0xFFFFFFAE;
  v10 = (((-87 * v8) & ((v7 + 2444) ^ 0x66) ^ 6) + ((-87 * v8) & ((v7 + 2444) ^ 0x66) ^ 0xFFFFFFF0)) ^ v9 ^ (v9 >> 1) & 0x46;
  *(_DWORD *)(v3 + 1396) = (v10 >> 5) | (8 * v10);
  v11 = *(unsigned __int8 *)(v6 + (((v8 >> 1) & 0x80 | ((unsigned __int16)v8 >> 9)) ^ 0x25));
  *(_DWORD *)(v3 + 1376) = (v11 ^ (32 * v11) ^ 0x45) + 20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((12153 * ((v7 ^ 0x505u) + v1 < *(_DWORD *)(v3 + 9224))) ^ v7))
                            - 8))();
}

uint64_t sub_1002F61AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W5>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  _DWORD *v6;
  unsigned int v7;

  v7 = *(_DWORD *)(a4 + a2);
  v6[1264] = v7 - ((2 * v7) & 0xFFFFFFD2) + 105;
  v6[1262] = (v7 >> 8) - ((v7 >> 8 << ((v5 - 123) ^ 0xCA)) & (((v5 - 68) | 0x48) - 122)) - 24;
  v6[1292] = HIWORD(v7) - 4 * (v7 >> 17) - 2;
  v6[1294] = (~(v7 >> 23) | 0x73) + HIBYTE(v7) - 57;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                             * (((4 * (v4 - 8261 + v5 >= a3)) | (8 * (v4 - 8261 + v5 >= a3))) ^ v5))
                            - 4))();
}

uint64_t sub_1002F6274()
{
  return sub_1002F633C();
}

uint64_t sub_1002F632C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  unsigned int v6;
  int v7;
  _DWORD *v8;

  v8[1256] = -20;
  v8[2422] = (v7 ^ 0x13BB) - 5;
  v8[2318] = 0;
  v8[2406] = 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((15340 * (v6 < a6)) ^ v7)) - 12))();
}

uint64_t sub_1002F633C()
{
  unsigned int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9552)
                          + ((-87 * v1) ^ 0x69 ^ ((((169 * v1) & 0x22 ^ 0x22) + ((169 * v1) & 0x22)) | (v2 + v3) ^ 0x2066u)))
     + 94;
  *(_DWORD *)(v4 + 1380) = ((v6 >> 5) | (8 * v6)) ^ 0xFFFFFF8C;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((11991 * (v0 < *(_DWORD *)(v4 + 9224))) ^ v2)) - 4))();
}

uint64_t sub_1002F63B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v14 = *(_DWORD *)(v8 + v12);
  *(_DWORD *)(v11 + 1860) = v14;
  *(_QWORD *)(v11 + 1384) = (((v10 ^ 0x2E34) - 76729003) & 0x492AB7F ^ 0xFFFFFFCD) + HIBYTE(v14) - ((v14 >> 23) & 0x68);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((1607 * (a8 > (v10 ^ 0xE91u) + v9)) ^ v10 ^ 0x2E34)) - 4))();
}

uint64_t sub_1002F6430@<X0>(int a1@<W0>, _BYTE *a2@<X3>, int a3@<W5>, unsigned int a4@<W8>)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t (*v26)(uint64_t);

  v17 = (v7 - 1840044201) & 0x6DACB97D;
  v18 = *(_DWORD *)(v4 + v10);
  v19 = *(_QWORD *)(v8 + 9568);
  *(_DWORD *)(v8 + 7856) = 0;
  v20 = (v18 >> 13) & 0xF8 | (v18 >> 21) & 7;
  v21 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 9536) + ((v17 - a1 - 101) ^ v20 ^ 0x853D102C)) ^ v20 ^ 0xFFFFFFB9;
  *(_DWORD *)(v8 + 1344) = HIBYTE(v5);
  *(_DWORD *)(v8 + 1368) = HIWORD(v5);
  *(_DWORD *)(v8 + 1360) = HIBYTE(a4);
  *(_DWORD *)(v8 + 1340) = a4 >> 8;
  *(_DWORD *)(v8 + 1356) = HIBYTE(v6);
  *(_DWORD *)(v8 + 1352) = HIWORD(v6);
  *(_DWORD *)(v8 + 1364) = v6 >> 8;
  *(_DWORD *)(v8 + 1348) = 109 * v21;
  *(_QWORD *)(v8 + 6904) = *(_QWORD *)(v8 + 7664);
  *(_QWORD *)(v8 + 6872) = *(_QWORD *)(v8 + 7680);
  *(_QWORD *)(v8 + 6864) = *(_QWORD *)(v8 + 7656);
  *(_QWORD *)(v8 + 6888) = *(_QWORD *)(v8 + 7688);
  *(_QWORD *)(v8 + 6880) = *(_QWORD *)(v8 + 7696);
  *(_QWORD *)(v8 + 6896) = *(_QWORD *)(v8 + 7704);
  *(_QWORD *)(v8 + 8944) = v19;
  *(_QWORD *)(v8 + 8576) = *(_QWORD *)(v8 + 8888);
  *(_QWORD *)(v8 + 8952) = *(_QWORD *)(v8 + 9200);
  *(_QWORD *)(v8 + 8936) = *(_QWORD *)(v8 + 8880);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_QWORD *)(v8 + 5400) = *(_QWORD *)(v8 + 8264);
  *(_QWORD *)(v8 + 9504) = v15;
  *(_DWORD *)(v8 + 8080) = *(_DWORD *)(v8 + 8032);
  *(_DWORD *)(v8 + 5396) = *(_DWORD *)(v8 + 7448);
  *(_DWORD *)(v8 + 6928) = *(_DWORD *)(v8 + 7712);
  *(_DWORD *)(v8 + 7920) = *(_DWORD *)(v8 + 7936);
  *(_DWORD *)(v8 + 9116) = *(_DWORD *)(v8 + 9448);
  *(_DWORD *)(v8 + 9272) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 7904) = *(_DWORD *)(v8 + 8312);
  *(_DWORD *)(v8 + 5344) = *(_DWORD *)(v8 + 6072);
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 7040) = *(_DWORD *)(v8 + 6944);
  *(_DWORD *)(v8 + 6856) = *(_DWORD *)(v8 + 7648);
  *(_DWORD *)(v8 + 8064) = *(_DWORD *)(v8 + 7992);
  *(_DWORD *)(v8 + 8832) = *(_DWORD *)(v8 + 9384);
  *(_DWORD *)(v8 + 9152) = *(_DWORD *)(v8 + 8964);
  *(_DWORD *)(v8 + 6952) = *(_DWORD *)(v8 + 6936);
  *(_DWORD *)(v8 + 8196) = *(_DWORD *)(v8 + 9520);
  *(_DWORD *)(v8 + 6984) = *(_DWORD *)(v8 + 7552);
  *(_DWORD *)(v8 + 8608) = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 5340) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 8136) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 7000) = *(_DWORD *)(v8 + 6968);
  *(_DWORD *)(v8 + 7928) = v13;
  *(_DWORD *)(v8 + 7912) = *(_DWORD *)(v8 + 7888);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 8456) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 8912) = *(_DWORD *)(v8 + 8872);
  *(_DWORD *)(v8 + 6912) = *(_DWORD *)(v8 + 7640);
  *(_DWORD *)(v8 + 5348) = *(_DWORD *)(v8 + 6084);
  *(_DWORD *)(v8 + 7008) = *(_DWORD *)(v8 + 6992);
  *(_DWORD *)(v8 + 6920) = *(_DWORD *)(v8 + 7672);
  *(_DWORD *)(v8 + 8040) = *(_DWORD *)(v8 + 8020);
  *(_DWORD *)(v8 + 5336) = *(_DWORD *)(v8 + 6080);
  *(_DWORD *)(v8 + 8116) = *(_DWORD *)(v8 + 8024);
  *(_DWORD *)(v8 + 8920) = *(_DWORD *)(v8 + 9160);
  *(_DWORD *)(v8 + 7152) = *(_DWORD *)(v8 + 8000);
  *(_DWORD *)(v8 + 8272) = *(_DWORD *)(v8 + 7984);
  *(_DWORD *)(v8 + 8056) = *(_DWORD *)(v8 + 8008);
  *(_DWORD *)(v8 + 7080) = *(_DWORD *)(v8 + 7592);
  *(_DWORD *)(v8 + 8188) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 9264) = a3;
  v22 = *(_DWORD *)(v8 + 8616);
  *(_DWORD *)(v8 + 9072) = v22;
  *(_DWORD *)(v8 + 8904) = v22;
  *(_DWORD *)(v8 + 7088) = *(_DWORD *)(v8 + 7584);
  *(_DWORD *)(v8 + 7072) = *(_DWORD *)(v8 + 7576);
  *(_DWORD *)(v8 + 8552) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 8900) = *(_DWORD *)(v8 + 9096);
  *(_DWORD *)(v8 + 4292) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 9184) = *(_DWORD *)(v8 + 9584);
  *(_DWORD *)(v8 + 8572) = *(_DWORD *)(v8 + 8984);
  *(_DWORD *)(v8 + 8932) = v14;
  *(_DWORD *)(v8 + 5312) = *(_DWORD *)(v8 + 7632);
  *(_DWORD *)(v8 + 8328) = *(_DWORD *)(v8 + 9592);
  v23 = *(_QWORD *)(v8 + 8288);
  *(_DWORD *)(v8 + 1332) = HIBYTE(v11);
  *(_DWORD *)(v8 + 1316) = v11 >> 8;
  *(_DWORD *)(v8 + 1336) = HIWORD(v9);
  v24 = *(_DWORD *)(v8 + 1860);
  *(_DWORD *)(v8 + 1328) = HIWORD(v24);
  *(_DWORD *)(v8 + 1312) = v24 >> 8;
  v25 = *(_DWORD *)(v8 + 1864);
  *(_DWORD *)(v8 + 1324) = HIBYTE(v25);
  *(_DWORD *)(v8 + 1304) = HIWORD(v25);
  *(_DWORD *)(v8 + 1308) = v18 >> 8;
  *(_DWORD *)(v8 + 1372) = v18;
  *(_DWORD *)(v8 + 1320) = HIBYTE(v18);
  *(_DWORD *)(v8 + 9040) = 77;
  *(_DWORD *)(v8 + 7848) = 92;
  v16[3926] = 50;
  v16[4050] = 22;
  v16[3957] = 32;
  v16[3923] = -110;
  v16[3954] = 81;
  a2[78] = -95;
  v16[4019] = -71;
  v16[3988] = 55;
  v16[4081] = -14;
  a2[171] = 65;
  a2[140] = -22;
  a2[109] = -127;
  a2[16] = 103;
  a2[47] = 73;
  v16[3895] = -70;
  v16[3892] = -24;
  v26 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                    + 8
                                                    * ((3572 * (((v17 - a1 - 125) ^ 1) & 1)) ^ (v17 - 44)))
                                        - 8);
  *(_DWORD *)(v8 + 9148) = 1796353962;
  *(_QWORD *)(v8 + 7728) = *(_QWORD *)(v8 + 8520);
  *(_QWORD *)(v8 + 7720) = *(_QWORD *)(v8 + 7744);
  *(_QWORD *)(v8 + 8288) = v23;
  return v26(7223);
}

void sub_1002F6450()
{
  JUMPOUT(0x1002F6468);
}

uint64_t sub_1002F64EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t (*v15)(void);

  v12 = *(_DWORD *)(a5 + a2);
  v13 = (v6 ^ 0x1ECA) + v5;
  v14 = v12 ^ a4 ^ *(unsigned __int8 *)(v11 + (v12 ^ 0xAALL));
  *(_DWORD *)(v9 + 5044) = v14 - ((2 * v14 + 6) & (v7 ^ 0xFFFFD087)) + 89;
  *(_DWORD *)(v9 + 5028) = (v12 >> 8) - (v10 & (v12 >> 7)) + 46;
  *(_QWORD *)(v9 + 5032) = HIWORD(v12) - ((v12 >> 15) & 0x1FFAA) + 85;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((25 * (a3 > v13)) ^ v7)) - 4);
  *(_DWORD *)(v9 + 9736) = v8;
  return v15();
}

uint64_t sub_1002F6504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)(v10 + 1860) = 0;
  *(_QWORD *)(v10 + 1384) = (v9 - 76729003) & 0x492AB7F ^ 0xFFFFFFCD;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((1607 * (a8 > v8)) ^ v9)) - 4))();
}

uint64_t sub_1002F68EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W5>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  v7 = (v5 + 508777940) & 0xE1ACBF09;
  v8 = *(_DWORD *)(a4 + a2);
  v9 = (v8 >> ((v7 + 79) ^ 0x50)) - 2 * ((v8 >> ((v7 + 79) ^ 0x50)) & 0x1F);
  *(_DWORD *)(v6 + 9184) = v9 - 91;
  *(_DWORD *)(v6 + 9136) = v9 - 97;
  *(_DWORD *)(v6 + 5012) = (~(v8 >> 15) | 0x79) + HIWORD(v8) - 60;
  *(_QWORD *)(v6 + 6840) = HIBYTE(v8) - ((v8 >> 23) & 0x70) - 72;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((2126 * (v4 - 8712 + v7 < a3)) ^ v7)) - 4))();
}

uint64_t sub_1002F69A0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  char v5;
  _DWORD *v6;
  int v7;
  unsigned int v8;

  v7 = v4 ^ 0x2951;
  v8 = *(_DWORD *)(a4 + a3);
  v6[1254] = v8 - ((2 * v8) & 0x50) - 88;
  v6[1251] = (v8 >> ((v7 - 65) ^ (v5 + 8))) - ((2 * (v8 >> ((v7 - 65) ^ (v5 + 8)))) & 0xFFFFFFA8) + 84;
  v6[1250] = (v8 >> (a1 + (v7 ^ 0x4F) - 4)) + (~(2 * (v8 >> (a1 + (v7 ^ 0x4F) - 4))) | 0xFFFFFFB7) + 37;
  v6[1252] = HIBYTE(v8) - ((v8 >> 23) & 0x1CC) - 26;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v7 ^ (6132 * (v6[2306] != 0)))) - 12))();
}

uint64_t sub_1002F6A70(uint64_t a1, uint64_t a2)
{
  int v2;
  char v3;
  uint64_t v4;
  unsigned int v5;

  v5 = *(_DWORD *)(*(_QWORD *)(v4 + 8248) + 9504);
  *(_DWORD *)(v4 + 6680) = (*(unsigned __int8 *)(*(_QWORD *)(v4 + 9560) + (BYTE1(v5) ^ 0x26)) ^ 0x60) + 3;
  *(_DWORD *)(v4 + 6664) = v5 >> (-96 * (v2 ^ (v3 + 8)) + ((v2 + 100) & 0xDF) - 75);
  *(_DWORD *)(v4 + 9576) = (~(v5 >> 23) | 0x6D) + HIBYTE(v5) - 54;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((493 * (*(_DWORD *)(v4 + 9224) <= 1u)) ^ (v2 + 2059603158))) - 8))();
}

uint64_t sub_1002F6B38(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t (*v8)(void);

  *(_DWORD *)(v5 + 9504) = -47;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 9544) + 37);
  v7 = v6 ^ (32 * v6) ^ 0x45;
  *(_DWORD *)(v5 + 9104) = v7;
  *(_DWORD *)(v5 + 4992) = v7 + 10;
  *(_DWORD *)(v5 + 9496) = 41;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((43 * (v2 < *(_DWORD *)(v5 + 9224))) ^ v3)) - 8);
  *(_DWORD *)(v5 + 5020) = v4;
  return v8();
}

uint64_t sub_1002F6C00@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;

  v7 = *(_DWORD *)(v3 + a2);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 9552) + ((BYTE1(v7) * ((v5 + 57) & 0xFD)) ^ 0x8BLL)) + 94;
  *(_DWORD *)(v6 + 4980) = ((v8 >> 5) | (8 * v8)) ^ 0xFFFFFF98;
  *(_DWORD *)(v6 + 4996) = v7 >> ((v5 + 11) & 0xB7 ^ 0x25);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((219 * (a3 <= v4 + v5 - 4209)) ^ v5)) - 12))();
}

uint64_t sub_1002F6CB4@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W6>, unsigned int a4@<W8>)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_DWORD *)(v6 + 4984) = 0;
  *(_DWORD *)(v6 + 4976) = 0;
  *(_DWORD *)(v6 + 4988) = (*(unsigned __int8 *)(*(_QWORD *)(v6 + 9680) + 170) ^ a3) + 3;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((4544 * (a4 > v4)) | v5)) - 12);
  *(_DWORD *)(v6 + 6656) = a1;
  return v7();
}

uint64_t sub_1002F6D3C@<X0>(uint64_t a1@<X1>, int a2@<W7>, unsigned int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v7 = *(_DWORD *)(v3 - 0x62AA055D109F20F3);
  v8 = (v7 >> (v5 ^ 0x43)) & 0x80 | (v7 >> 17) & 0x7F;
  LODWORD(v8) = *(unsigned __int8 *)(*(_QWORD *)(v6 + 9704) + (v8 ^ 0x95)) ^ ((v8 ^ 0xFFFFFF98) + (v8 ^ 0x7E) + 1) ^ a2;
  *(_QWORD *)(v6 + 9488) = v8 - ((2 * (_DWORD)v8 + 20) & 0x5E) - 71;
  *(_DWORD *)(v6 + 9152) = HIBYTE(v7);
  *(_DWORD *)(v6 + 9464) = HIBYTE(v7) - ((v7 >> 23) & 0x198) - 52;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((214 * (a3 > (v5 ^ 0x64Bu) + v4)) ^ v5)) - 4))();
}

uint64_t sub_1002F6E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 9456) = HIWORD(*(_DWORD *)(v2 + v6)) - ((*(_DWORD *)(v2 + v6) >> 15) & 0x2Au) + 21;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((27 * (*(_DWORD *)(v5 + 9224) > ((v4 - 1289) ^ 0x140u) + v3)) ^ (v4 - 1289)))
                            - (((v4 + 4686) | 0x101u) ^ 0x1995)))();
}

uint64_t sub_1002F6E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v7 = *(_DWORD *)(v2 + v6);
  *(_DWORD *)(v5 + 4960) = v7;
  *(_QWORD *)(v5 + 9472) = (v7 >> 8) - ((v7 >> 7) & 0x10) - 120;
  *(_DWORD *)(v5 + 4968) = (*(unsigned __int8 *)(*(_QWORD *)(v5 + 9560)
                                               + ((v7 >> ((((((v4 + 94) & 0xF9) + 102) & 0xBE) - 97) ^ 0x45)) ^ 0x26)) ^ 0x60)
                         + 3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((39
                                          * (((v4 - 1939292578) & 0x739759F9 ^ 0x1998u) + v3 >= *(_DWORD *)(v5 + 9224))) ^ (v4 - 1939292578) & 0x739759F9))
                            - 4))();
}

void sub_1002F6F58()
{
  JUMPOUT(0x1002B6958);
}

uint64_t sub_1002F6F60()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v1 < ((v0 - 18) ^ v0 ^ 0x38);
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * v3) | (32 * v3)) ^ v0)))();
}

uint64_t sub_1002F6F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W5>, unsigned __int8 a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                     + 8
                                                                     * (int)(((a5 == (v5 - 32 - v6 - 23))
                                                                            * ((v5 + 1760 - v6 - 2597) ^ 0x853D3391)) ^ (v5 + 1760)))
                                                         - 4);
  v10 = *(_QWORD *)(v7 + 1576);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  v11 = *(_QWORD *)(v7 + 3144);
  *(_QWORD *)(v7 + 9576) = v11;
  *(_QWORD *)(v7 + 9496) = v11;
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = a4;
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = a3;
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = a4;
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  return v9(a1, a2, v10);
}

void sub_1002F70AC()
{
  JUMPOUT(0x1002BBBB4);
}

uint64_t sub_1002F70B4@<X0>(unsigned __int8 a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((95 * (a1 >= ((v1 + 9) ^ 0xD4 ^ ((_BYTE)v1 + 89) & 0x71u))) ^ v1))
                            - 12))();
}

uint64_t sub_1002F7104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int v12;

  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9
                                                            + 8
                                                            * (int)(((((v6 - v7 - 1310881) | 0x140016) ^ 0x853D35B7)
                                                                   * (*(_DWORD *)(v8 + 8544) != 103)) ^ v6));
  v11 = *(_QWORD *)(v8 + 3120);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 1576);
  *(_QWORD *)(v8 + 9496) = v11;
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = a6;
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  v12 = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 9736) = v12;
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9264) = a5;
  *(_DWORD *)(v8 + 8648) = v12;
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  return v10(a1, a2, v11);
}

uint64_t sub_1002F723C@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + 3160);
  *(_QWORD *)(v2 + 9504) = *(_QWORD *)(v2 + 7880);
  *(_QWORD *)(v2 + 9576) = *(_QWORD *)(v2 + 1576);
  *(_QWORD *)(v2 + 9496) = v3;
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 9688) = *(_DWORD *)(v2 + 7768);
  *(_DWORD *)(v2 + 8748) = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8744) = *(_DWORD *)(v2 + 8628);
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 8664) = *(_DWORD *)(v2 + 8992);
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = a1;
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 8632) = *(_DWORD *)(v2 + 8800);
  v4 = *(_DWORD *)(v2 + 8312);
  *(_DWORD *)(v2 + 9736) = *(_DWORD *)(v2 + 7936);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_QWORD *)(v2 + 9680) = *(_QWORD *)(v2 + 9504);
  if ((a2 ^ 0x853D1004) + 8378 + v4 - 8395)
    v5 = 137;
  else
    v5 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v5) >> ((-45 * (a2 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v5)) == 30)) ^ (a2 + 2059604150))))();
}

uint64_t sub_1002F7330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, unsigned __int8 a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int v9;

  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                     + 8
                                                                     * ((1955
                                                                       * (((((v4 | 0x20) - 81) | 7) + 58) == a4)) ^ (v4 | 0x20)))
                                                         - ((((v4 | 0x20u) - 2077229407) | *(_DWORD *)(v5 + 96)) ^ 0x853D101BLL));
  v8 = *(_QWORD *)(v5 + 3128);
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7880);
  *(_QWORD *)(v5 + 9576) = *(_QWORD *)(v5 + 1576);
  *(_QWORD *)(v5 + 9496) = v8;
  *(_DWORD *)(v5 + 8764) = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 7768);
  *(_DWORD *)(v5 + 8748) = a3;
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 8760) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8752) = *(_DWORD *)(v5 + 9480);
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8680) = *(_DWORD *)(v5 + 8808);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  v9 = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 8664) = v9;
  *(_DWORD *)(v5 + 9736) = v9;
  *(_DWORD *)(v5 + 9432) = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 9264) = *(_DWORD *)(v5 + 9624);
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 8640) = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 8704) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  return v7(a1, a2, v8);
}

uint64_t sub_1002F7480@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 3168);
  *(_QWORD *)(v2 + 9504) = *(_QWORD *)(v2 + 7880);
  *(_QWORD *)(v2 + 9576) = *(_QWORD *)(v2 + 1576);
  *(_QWORD *)(v2 + 9496) = v4;
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 9688) = *(_DWORD *)(v2 + 7768);
  *(_DWORD *)(v2 + 8748) = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8744) = *(_DWORD *)(v2 + 8628);
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 8664) = a1;
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = *(_DWORD *)(v2 + 9004);
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 8632) = *(_DWORD *)(v2 + 8800);
  v5 = *(_DWORD *)(v2 + 8312);
  *(_DWORD *)(v2 + 9736) = *(_DWORD *)(v2 + 7952);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_QWORD *)(v2 + 9680) = *(_QWORD *)(v2 + 9504);
  if ((a2 ^ 0x853D1004) + 8378 + v5 - 8395)
    v6 = 137;
  else
    v6 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v6) >> ((-45 * (a2 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v2 + 9640) + v6)) == 30)) ^ (a2 + 2059604150))))();
}

uint64_t sub_1002F76B0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, unsigned __int8 a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  int v13;
  int v14;
  int v15;

  v10 = (v5 - 704661762) & *(_DWORD *)(v7 + 100);
  *(_QWORD *)(v7 + 7144) = (v8 + v5 - 353);
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v9
                                      + 8
                                      * (((a5 >= ((v8 + v5 - 97) ^ 0x48u)) * (v6 + v10 + 557)) ^ v5))
                          - 12);
  *(_DWORD *)(v7 + 7216) = 71;
  v12 = *(_QWORD *)(v7 + 6008);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7512);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 2208);
  *(_QWORD *)(v7 + 9496) = *(_QWORD *)(v7 + 2072);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 4404);
  *(_DWORD *)(v7 + 8744) = a4;
  v13 = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8760) = v13;
  v14 = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8752) = v14;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  v15 = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8704) = v15;
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 6744) = a2;
  *(_DWORD *)(v7 + 7344) = v13;
  *(_DWORD *)(v7 + 8136) = v14;
  *(_DWORD *)(v7 + 8868) = a4;
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 7264) = a4;
  *(_DWORD *)(v7 + 7200) = v15;
  *(_DWORD *)(v7 + 6760) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 8328) = a3;
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 280);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  *(_QWORD *)(v7 + 7240) = *(_QWORD *)(v7 + 3280);
  *(_QWORD *)(v7 + 7248) = v12;
  *(_QWORD *)(v7 + 7232) = *(_QWORD *)(v7 + 3896);
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 8260) = a1;
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 7256) = *(_DWORD *)(v7 + 7500);
  *(_DWORD *)(v7 + 7280) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  *(_DWORD *)(v7 + 7224) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 7416) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 7328) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7112) = *(_DWORD *)(v7 + 0x2000);
  *(_DWORD *)(v7 + 7208) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7320) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 7336) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 9392) = 156;
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 9240);
  return v11();
}

uint64_t sub_1002F7964@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, unsigned __int8 a5@<W8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;

  *(_QWORD *)(v6 + 7144) = v5 ^ (v7 + 369);
  v9 = *(uint64_t (**)(void))(v8
                           + 8
                           * ((1727 * (a5 == (((v5 + 104) | 0x10) + (v5 ^ (v7 + 113) ^ 0x31)))) ^ v5));
  *(_DWORD *)(v6 + 7216) = 55;
  v10 = *(_QWORD *)(v6 + 6008);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7512);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 2208);
  *(_QWORD *)(v6 + 9496) = *(_QWORD *)(v6 + 7880);
  *(_DWORD *)(v6 + 8764) = a4;
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 4404);
  v11 = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8760) = v11;
  v12 = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 8752) = v12;
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  v13 = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8704) = v13;
  *(_QWORD *)(v6 + 9280) = *(_QWORD *)(v6 + 9600);
  *(_QWORD *)(v6 + 9016) = *(_QWORD *)(v6 + 9608);
  *(_DWORD *)(v6 + 9320) = *(_DWORD *)(v6 + 9616);
  *(_DWORD *)(v6 + 6744) = a2;
  *(_DWORD *)(v6 + 7344) = v11;
  *(_DWORD *)(v6 + 8136) = v12;
  *(_DWORD *)(v6 + 8868) = a4;
  *(_DWORD *)(v6 + 7424) = *(_DWORD *)(v6 + 9664);
  *(_DWORD *)(v6 + 7264) = a4;
  *(_DWORD *)(v6 + 7200) = v13;
  *(_DWORD *)(v6 + 6760) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 8328) = a3;
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9736) = *(_DWORD *)(v6 + 8312);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_QWORD *)(v6 + 7240) = *(_QWORD *)(v6 + 3896);
  *(_QWORD *)(v6 + 7248) = v10;
  *(_QWORD *)(v6 + 7232) = *(_QWORD *)(v6 + 6088);
  *(_DWORD *)(v6 + 8080) = *(_DWORD *)(v6 + 8032);
  *(_DWORD *)(v6 + 8260) = a1;
  *(_DWORD *)(v6 + 7192) = *(_DWORD *)(v6 + 7436);
  *(_DWORD *)(v6 + 7272) = *(_DWORD *)(v6 + 7456);
  *(_DWORD *)(v6 + 7312) = *(_DWORD *)(v6 + 9328);
  *(_DWORD *)(v6 + 9272) = *(_DWORD *)(v6 + 9656);
  *(_DWORD *)(v6 + 8064) = *(_DWORD *)(v6 + 7992);
  *(_DWORD *)(v6 + 7256) = *(_DWORD *)(v6 + 7500);
  v14 = *(_DWORD *)(v6 + 9424);
  *(_DWORD *)(v6 + 7280) = v14;
  *(_DWORD *)(v6 + 7128) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 7168) = *(_DWORD *)(v6 + 7464);
  *(_DWORD *)(v6 + 7184) = *(_DWORD *)(v6 + 7488);
  *(_DWORD *)(v6 + 7296) = *(_DWORD *)(v6 + 7484);
  *(_DWORD *)(v6 + 9104) = *(_DWORD *)(v6 + 9440);
  *(_DWORD *)(v6 + 7304) = *(_DWORD *)(v6 + 7480);
  *(_DWORD *)(v6 + 7176) = *(_DWORD *)(v6 + 9248);
  *(_DWORD *)(v6 + 7288) = *(_DWORD *)(v6 + 7476);
  *(_DWORD *)(v6 + 7224) = v14;
  *(_DWORD *)(v6 + 8040) = *(_DWORD *)(v6 + 8020);
  *(_DWORD *)(v6 + 7416) = *(_DWORD *)(v6 + 7432);
  *(_DWORD *)(v6 + 8116) = *(_DWORD *)(v6 + 8024);
  *(_DWORD *)(v6 + 9072) = *(_DWORD *)(v6 + 9632);
  *(_DWORD *)(v6 + 7328) = *(_DWORD *)(v6 + 8000);
  *(_DWORD *)(v6 + 8272) = *(_DWORD *)(v6 + 7984);
  *(_DWORD *)(v6 + 8056) = *(_DWORD *)(v6 + 8008);
  *(_DWORD *)(v6 + 7112) = *(_DWORD *)(v6 + 0x2000);
  *(_DWORD *)(v6 + 7208) = *(_DWORD *)(v6 + 9528);
  *(_DWORD *)(v6 + 7408) = *(_DWORD *)(v6 + 7460);
  *(_DWORD *)(v6 + 7160) = *(_DWORD *)(v6 + 7440);
  *(_DWORD *)(v6 + 7320) = *(_DWORD *)(v6 + 9156);
  *(_DWORD *)(v6 + 7336) = *(_DWORD *)(v6 + 9408);
  *(_DWORD *)(v6 + 9400) = *(_DWORD *)(v6 + 9224);
  *(_DWORD *)(v6 + 9392) = 122;
  *(_DWORD *)(v6 + 8236) = *(_DWORD *)(v6 + 9240);
  return v9();
}

uint64_t sub_1002F7C18(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  *(_QWORD *)(v8 + 7144) = (v7 + v6 + 2128340603) | 0x81241010;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v9
                                      + 8
                                      * ((5400
                                        * (((*(_DWORD *)(v8 + 8544) == 95) ^ (v7 + v6 + 123)) & 1)) ^ v6))
                          - 4);
  *(_DWORD *)(v8 + 9392) = 95;
  *(_DWORD *)(v8 + 7216) = 47;
  *(_QWORD *)(v8 + 9280) = *(_QWORD *)(v8 + 9600);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_QWORD *)(v8 + 7240) = *(_QWORD *)(v8 + 7696);
  *(_QWORD *)(v8 + 7248) = *(_QWORD *)(v8 + 2560);
  *(_QWORD *)(v8 + 7232) = *(_QWORD *)(v8 + 1952);
  *(_DWORD *)(v8 + 8080) = *(_DWORD *)(v8 + 8032);
  *(_DWORD *)(v8 + 8260) = a2;
  *(_DWORD *)(v8 + 7192) = a6;
  *(_DWORD *)(v8 + 7272) = *(_DWORD *)(v8 + 7456);
  *(_DWORD *)(v8 + 7312) = *(_DWORD *)(v8 + 9328);
  *(_DWORD *)(v8 + 9272) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 8064) = *(_DWORD *)(v8 + 7992);
  *(_DWORD *)(v8 + 6744) = a3;
  *(_DWORD *)(v8 + 7256) = *(_DWORD *)(v8 + 7500);
  *(_DWORD *)(v8 + 7280) = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 7128) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 7344) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8136) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 7168) = *(_DWORD *)(v8 + 7464);
  *(_DWORD *)(v8 + 7184) = *(_DWORD *)(v8 + 7488);
  *(_DWORD *)(v8 + 7296) = *(_DWORD *)(v8 + 7484);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 7424) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 7304) = *(_DWORD *)(v8 + 7480);
  *(_DWORD *)(v8 + 7408) = *(_DWORD *)(v8 + 7460);
  *(_DWORD *)(v8 + 7264) = a6;
  *(_DWORD *)(v8 + 7176) = *(_DWORD *)(v8 + 9248);
  *(_DWORD *)(v8 + 7288) = *(_DWORD *)(v8 + 7476);
  *(_DWORD *)(v8 + 7224) = *(_DWORD *)(v8 + 7452);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8040) = *(_DWORD *)(v8 + 8020);
  *(_DWORD *)(v8 + 7416) = *(_DWORD *)(v8 + 7432);
  *(_DWORD *)(v8 + 8116) = *(_DWORD *)(v8 + 8024);
  *(_DWORD *)(v8 + 9072) = *(_DWORD *)(v8 + 9632);
  *(_DWORD *)(v8 + 7328) = *(_DWORD *)(v8 + 8000);
  *(_DWORD *)(v8 + 8272) = *(_DWORD *)(v8 + 7984);
  *(_DWORD *)(v8 + 8056) = *(_DWORD *)(v8 + 8008);
  *(_DWORD *)(v8 + 7112) = *(_DWORD *)(v8 + 0x2000);
  *(_DWORD *)(v8 + 7208) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 7160) = *(_DWORD *)(v8 + 7440);
  *(_DWORD *)(v8 + 7320) = *(_DWORD *)(v8 + 9156);
  *(_DWORD *)(v8 + 7336) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 9400) = *(_DWORD *)(v8 + 9224);
  *(_DWORD *)(v8 + 7200) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 6760) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 8236) = *(_DWORD *)(v8 + 9240);
  *(_DWORD *)(v8 + 8328) = a4;
  return v10();
}

void sub_1002F7DE4(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 + 7144) = (a3 - 2421);
  *(_QWORD *)(v3 + 9280) = *(_QWORD *)(v3 + 9600);
  *(_QWORD *)(v3 + 9016) = *(_QWORD *)(v3 + 9608);
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 8260) = *(_DWORD *)(v3 + 8332);
  *(_DWORD *)(v3 + 7192) = *(_DWORD *)(v3 + 7436);
  *(_DWORD *)(v3 + 7272) = *(_DWORD *)(v3 + 7456);
  *(_DWORD *)(v3 + 7312) = *(_DWORD *)(v3 + 9328);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 9320) = *(_DWORD *)(v3 + 9616);
  *(_DWORD *)(v3 + 8064) = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 6744) = *(_DWORD *)(v3 + 8548);
  *(_DWORD *)(v3 + 7256) = *(_DWORD *)(v3 + 7500);
  *(_DWORD *)(v3 + 7280) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 7128) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 7344) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8136) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 7168) = *(_DWORD *)(v3 + 7464);
  *(_DWORD *)(v3 + 7184) = *(_DWORD *)(v3 + 7488);
  *(_DWORD *)(v3 + 7296) = *(_DWORD *)(v3 + 7484);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 7424) = *(_DWORD *)(v3 + 9664);
  *(_DWORD *)(v3 + 7304) = *(_DWORD *)(v3 + 7480);
  *(_DWORD *)(v3 + 7176) = *(_DWORD *)(v3 + 9248);
  *(_DWORD *)(v3 + 7288) = *(_DWORD *)(v3 + 7476);
  v4 = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 7224) = v4;
  *(_DWORD *)(v3 + 9136) = v4;
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 7416) = *(_DWORD *)(v3 + 7432);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 7328) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7112) = *(_DWORD *)(v3 + 0x2000);
  *(_DWORD *)(v3 + 7208) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 7264) = a2;
  *(_DWORD *)(v3 + 7408) = a2;
  *(_DWORD *)(v3 + 7160) = *(_DWORD *)(v3 + 7440);
  *(_DWORD *)(v3 + 7320) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 7336) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 9400) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 7200) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 6760) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 8236) = *(_DWORD *)(v3 + 9240);
  *(_DWORD *)(v3 + 8328) = a1;
  *(_DWORD *)(v3 + 9392) = 96;
  *(_DWORD *)(v3 + 7216) = 49;
  *(_QWORD *)(v3 + 7240) = *(_QWORD *)(v3 + 7688);
  *(_QWORD *)(v3 + 7248) = *(_QWORD *)(v3 + 2376);
  *(_QWORD *)(v3 + 7232) = *(_QWORD *)(v3 + 2200);
  JUMPOUT(0x1003260ECLL);
}

uint64_t sub_1002F7F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int v12;

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                      + 8
                                                                      * (int)((((v6 - 2412) ^ 0x853D396B ^ ((v6 + 18150600) | 0x84281016))
                                                                             * (v7 == 45)) ^ v6))
                                                          - 4);
  v11 = *(_QWORD *)(v8 + 3160);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 3144);
  *(_QWORD *)(v8 + 9496) = v11;
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  v12 = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 7936) = a6;
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  *(_DWORD *)(v8 + 9736) = a6;
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9264) = a5;
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = v12;
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  return v10(a1, a2, v11);
}

void sub_1002F80AC(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;

  *(_DWORD *)(*(_QWORD *)(v3 + 8560) + 736) = 0;
  *(_QWORD *)(v3 + 9416) = a3 ^ 0x853D11DA;
  *(_QWORD *)(v3 + 6904) = *(_QWORD *)(v3 + 7664);
  *(_QWORD *)(v3 + 6872) = *(_QWORD *)(v3 + 7680);
  *(_QWORD *)(v3 + 6864) = *(_QWORD *)(v3 + 7656);
  *(_QWORD *)(v3 + 6888) = *(_QWORD *)(v3 + 7688);
  *(_QWORD *)(v3 + 6880) = *(_QWORD *)(v3 + 7696);
  *(_QWORD *)(v3 + 6896) = *(_QWORD *)(v3 + 7704);
  *(_QWORD *)(v3 + 8944) = *(_QWORD *)(v3 + 9568);
  *(_QWORD *)(v3 + 8576) = *(_QWORD *)(v3 + 8888);
  *(_QWORD *)(v3 + 8952) = *(_QWORD *)(v3 + 9200);
  *(_QWORD *)(v3 + 8936) = *(_QWORD *)(v3 + 8880);
  *(_QWORD *)(v3 + 9280) = *(_QWORD *)(v3 + 9600);
  *(_QWORD *)(v3 + 9016) = *(_QWORD *)(v3 + 9608);
  *(_DWORD *)(v3 + 8080) = *(_DWORD *)(v3 + 8032);
  *(_DWORD *)(v3 + 6928) = *(_DWORD *)(v3 + 7712);
  *(_DWORD *)(v3 + 7920) = a2;
  *(_DWORD *)(v3 + 9116) = *(_DWORD *)(v3 + 9448);
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 7904) = *(_DWORD *)(v3 + 8312);
  *(_DWORD *)(v3 + 5344) = *(_DWORD *)(v3 + 6072);
  *(_DWORD *)(v3 + 9320) = *(_DWORD *)(v3 + 9616);
  *(_DWORD *)(v3 + 7040) = *(_DWORD *)(v3 + 6944);
  *(_DWORD *)(v3 + 6856) = *(_DWORD *)(v3 + 7648);
  *(_DWORD *)(v3 + 8064) = *(_DWORD *)(v3 + 7992);
  *(_DWORD *)(v3 + 8832) = *(_DWORD *)(v3 + 9384);
  *(_DWORD *)(v3 + 9152) = *(_DWORD *)(v3 + 8964);
  *(_DWORD *)(v3 + 6952) = *(_DWORD *)(v3 + 6936);
  *(_DWORD *)(v3 + 8196) = *(_DWORD *)(v3 + 9520);
  *(_DWORD *)(v3 + 6984) = *(_DWORD *)(v3 + 7552);
  *(_DWORD *)(v3 + 9464) = 994009436;
  *(_DWORD *)(v3 + 8608) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 5340) = *(_DWORD *)(v3 + 7616);
  *(_DWORD *)(v3 + 8136) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 7000) = *(_DWORD *)(v3 + 6968);
  *(_DWORD *)(v3 + 7928) = *(_DWORD *)(v3 + 7952);
  *(_DWORD *)(v3 + 7912) = *(_DWORD *)(v3 + 7888);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 8456) = *(_DWORD *)(v3 + 9664);
  *(_DWORD *)(v3 + 8912) = *(_DWORD *)(v3 + 8872);
  *(_DWORD *)(v3 + 6912) = *(_DWORD *)(v3 + 7640);
  *(_DWORD *)(v3 + 7008) = *(_DWORD *)(v3 + 6992);
  *(_DWORD *)(v3 + 6920) = *(_DWORD *)(v3 + 7672);
  *(_DWORD *)(v3 + 8040) = *(_DWORD *)(v3 + 8020);
  *(_DWORD *)(v3 + 5336) = *(_DWORD *)(v3 + 6080);
  *(_DWORD *)(v3 + 8116) = *(_DWORD *)(v3 + 8024);
  *(_DWORD *)(v3 + 9664) = *(_DWORD *)(v3 + 6976);
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 8920) = *(_DWORD *)(v3 + 9160);
  *(_DWORD *)(v3 + 9616) = *(_DWORD *)(v3 + 7096);
  *(_DWORD *)(v3 + 7152) = *(_DWORD *)(v3 + 8000);
  *(_DWORD *)(v3 + 9600) = *(_DWORD *)(v3 + 7020);
  *(_DWORD *)(v3 + 8272) = *(_DWORD *)(v3 + 7984);
  *(_DWORD *)(v3 + 8056) = *(_DWORD *)(v3 + 8008);
  *(_DWORD *)(v3 + 7080) = *(_DWORD *)(v3 + 7592);
  *(_DWORD *)(v3 + 8188) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 9488) = *(_DWORD *)(v3 + 7064);
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8904) = *(_DWORD *)(v3 + 8616);
  *(_DWORD *)(v3 + 7088) = *(_DWORD *)(v3 + 7584);
  *(_DWORD *)(v3 + 9472) = *(_DWORD *)(v3 + 7136);
  *(_DWORD *)(v3 + 7072) = *(_DWORD *)(v3 + 7576);
  *(_DWORD *)(v3 + 8552) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 8900) = *(_DWORD *)(v3 + 9096);
  *(_DWORD *)(v3 + 4292) = *(_DWORD *)(v3 + 8280);
  *(_DWORD *)(v3 + 9184) = *(_DWORD *)(v3 + 9584);
  *(_DWORD *)(v3 + 8572) = *(_DWORD *)(v3 + 8984);
  *(_DWORD *)(v3 + 8932) = *(_DWORD *)(v3 + 8612);
  *(_DWORD *)(v3 + 5312) = *(_DWORD *)(v3 + 7632);
  *(_DWORD *)(v3 + 8328) = a1;
  *(_DWORD *)(v3 + 8544) = 106;
  *(_DWORD *)(v3 + 5348) = 1;
  JUMPOUT(0x1002F8320);
}

uint64_t sub_1002F8330(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;

  v10 = v6 - v7;
  v11 = *(_QWORD *)(v9
                  + 8
                  * (int)((((v6 - 2051057386) & 0xFF7DB59F ^ (v6 - v7 + 754))
                         * (*(_DWORD *)(v8 + 8544) != 99)) ^ v6));
  *(_QWORD *)(v8 + 7144) = (v10 - 77);
  *(_DWORD *)(v8 + 7216) = 50;
  v12 = *(_QWORD *)(v8 + 2184);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 4320);
  *(_QWORD *)(v8 + 9496) = v12;
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  v13 = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8760) = v13;
  v14 = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8752) = v14;
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 9432) = a6;
  v15 = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8704) = v15;
  *(_QWORD *)(v8 + 9280) = *(_QWORD *)(v8 + 9600);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 6744) = a3;
  *(_DWORD *)(v8 + 7256) = a6;
  *(_DWORD *)(v8 + 7344) = v13;
  *(_DWORD *)(v8 + 8136) = v14;
  *(_DWORD *)(v8 + 7424) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 7264) = a6;
  *(_DWORD *)(v8 + 7224) = a6;
  *(_DWORD *)(v8 + 7200) = v15;
  *(_DWORD *)(v8 + 6760) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 8328) = a4;
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  *(_DWORD *)(v8 + 9736) = *(_DWORD *)(v8 + 7500);
  *(_DWORD *)(v8 + 9264) = a5;
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  *(_QWORD *)(v8 + 7240) = *(_QWORD *)(v8 + 3184);
  *(_QWORD *)(v8 + 7248) = v12;
  *(_QWORD *)(v8 + 7232) = v12;
  *(_DWORD *)(v8 + 8080) = *(_DWORD *)(v8 + 8032);
  *(_DWORD *)(v8 + 8260) = a2;
  *(_DWORD *)(v8 + 7192) = *(_DWORD *)(v8 + 7436);
  *(_DWORD *)(v8 + 7272) = *(_DWORD *)(v8 + 7456);
  *(_DWORD *)(v8 + 7312) = *(_DWORD *)(v8 + 9328);
  *(_DWORD *)(v8 + 9272) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 8064) = *(_DWORD *)(v8 + 7992);
  *(_DWORD *)(v8 + 7280) = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 7128) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 7168) = *(_DWORD *)(v8 + 7464);
  *(_DWORD *)(v8 + 7184) = *(_DWORD *)(v8 + 7488);
  *(_DWORD *)(v8 + 7296) = *(_DWORD *)(v8 + 7484);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 7304) = *(_DWORD *)(v8 + 7480);
  *(_DWORD *)(v8 + 7176) = *(_DWORD *)(v8 + 9248);
  *(_DWORD *)(v8 + 7288) = *(_DWORD *)(v8 + 7476);
  *(_DWORD *)(v8 + 8040) = *(_DWORD *)(v8 + 8020);
  *(_DWORD *)(v8 + 7416) = *(_DWORD *)(v8 + 7432);
  *(_DWORD *)(v8 + 8116) = *(_DWORD *)(v8 + 8024);
  *(_DWORD *)(v8 + 9072) = *(_DWORD *)(v8 + 9632);
  *(_DWORD *)(v8 + 7328) = *(_DWORD *)(v8 + 8000);
  *(_DWORD *)(v8 + 8272) = *(_DWORD *)(v8 + 7984);
  *(_DWORD *)(v8 + 8056) = *(_DWORD *)(v8 + 8008);
  *(_DWORD *)(v8 + 7112) = *(_DWORD *)(v8 + 0x2000);
  *(_DWORD *)(v8 + 7208) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 7408) = *(_DWORD *)(v8 + 7460);
  *(_DWORD *)(v8 + 7160) = *(_DWORD *)(v8 + 7440);
  *(_DWORD *)(v8 + 7320) = *(_DWORD *)(v8 + 9156);
  *(_DWORD *)(v8 + 7336) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 9400) = *(_DWORD *)(v8 + 9224);
  *(_DWORD *)(v8 + 9392) = 100;
  *(_DWORD *)(v8 + 8236) = *(_DWORD *)(v8 + 9240);
  return ((uint64_t (*)(void))(v11 - 12))();
}

uint64_t sub_1002F85CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W5>, unsigned __int8 a5@<W8>)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  int v10;

  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                     + 8
                                                                     * ((4578
                                                                       * ((((v5 - 76) | 2) + 18) == a5)) ^ v5))
                                                         - 12);
  v9 = *(_QWORD *)(v6 + 3160);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 3224);
  *(_QWORD *)(v6 + 9496) = v9;
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  v10 = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = v10;
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9736) = *(_DWORD *)(v6 + 7936);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9264) = a3;
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = a4;
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  return v8(a1, a2, v9);
}

void sub_1002F86F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  v7 = *(_QWORD *)(v6 + 3224);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 7880);
  *(_QWORD *)(v6 + 9576) = *(_QWORD *)(v6 + 3072);
  *(_QWORD *)(v6 + 9496) = v7;
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 9688) = *(_DWORD *)(v6 + 7768);
  *(_DWORD *)(v6 + 7936) = a6;
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  LODWORD(v7) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8720) = v7;
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 9256);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 9480);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 9136) = *(_DWORD *)(v6 + 9056);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9736) = v7;
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 9064);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  JUMPOUT(0x1002F87DCLL);
}

uint64_t sub_1002F87E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, char a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                     + 8
                                                                     * (int)((((((v4 | 0x100) - 1786791586) & 0xEFBD5557 ^ *(_DWORD *)(v5 + 52))
                                                                             + (((v4 | 0x100) - 12772930) & 0x85FFF4F7))
                                                                            * (a4 == 97)) ^ (v4 | 0x100)))
                                                         - 12);
  v8 = *(_QWORD *)(v5 + 3240);
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7512);
  *(_QWORD *)(v5 + 9576) = *(_QWORD *)(v5 + 3072);
  *(_QWORD *)(v5 + 9496) = v8;
  *(_DWORD *)(v5 + 8764) = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 4404);
  *(_DWORD *)(v5 + 8748) = *(_DWORD *)(v5 + 8980);
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 8760) = a3;
  *(_DWORD *)(v5 + 8752) = *(_DWORD *)(v5 + 9480);
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8680) = *(_DWORD *)(v5 + 8808);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 8664) = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 9736) = *(_DWORD *)(v5 + 9224);
  *(_DWORD *)(v5 + 9432) = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 9264) = *(_DWORD *)(v5 + 9624);
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 8640) = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 8704) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  return v7(a1, a2, v8);
}

uint64_t sub_1002F8934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;

  v8 = v6;
  v9 = *(_QWORD *)(v7 + 3280);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7512);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 3072);
  *(_QWORD *)(v7 + 9496) = v9;
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8752) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  v10 = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 9736) = v10;
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 9264) = v10;
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 9224) = a6;
  *(_DWORD *)(v7 + 8704) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 4404);
  v11 = *(_DWORD *)(v7 + 8176);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_QWORD *)(v7 + 9680) = *(_QWORD *)(v7 + 9504);
  if ((v8 ^ 0x853D1004) + 8378 + v11 - 8395)
    v12 = 137;
  else
    v12 = 32;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 9744)
                              + 8
                              * ((492
                                * (((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + v12) >> ((-45 * (v8 ^ 4)) ^ 0xA8)) & 0x46 ^ *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + v12)) == 30)) ^ (v8 + 2059604150))))();
}

uint64_t sub_1002F8F04()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (int)(((((v0 + 1375269220) & 0xAE070FFF) - 2729) * (v1 < 0x4E)) ^ v0))
                            - 12))();
}

uint64_t sub_1002F8F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, char a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  int v8;

  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                                                     + 8
                                                                     * ((((v4 - 2217) ^ 0x17C1) * (a4 == 77)) ^ (v4 - 2140)))
                                                         + 2235371539
                                                         - ((v4 - 2140) ^ 0x853D1176)
                                                         - 8);
  v7 = *(_QWORD *)(v5 + 3160);
  *(_QWORD *)(v5 + 9504) = *(_QWORD *)(v5 + 7880);
  *(_QWORD *)(v5 + 9576) = *(_QWORD *)(v5 + 3144);
  *(_QWORD *)(v5 + 9496) = v7;
  *(_DWORD *)(v5 + 8764) = *(_DWORD *)(v5 + 8828);
  *(_DWORD *)(v5 + 8768) = *(_DWORD *)(v5 + 8860);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 7768);
  v8 = *(_DWORD *)(v5 + 8784);
  *(_DWORD *)(v5 + 7936) = a3;
  *(_DWORD *)(v5 + 8748) = *(_DWORD *)(v5 + 8980);
  *(_DWORD *)(v5 + 8736) = *(_DWORD *)(v5 + 8792);
  *(_DWORD *)(v5 + 8728) = *(_DWORD *)(v5 + 8816);
  *(_DWORD *)(v5 + 8744) = *(_DWORD *)(v5 + 8628);
  *(_DWORD *)(v5 + 8720) = *(_DWORD *)(v5 + 8968);
  *(_DWORD *)(v5 + 8760) = *(_DWORD *)(v5 + 9256);
  *(_DWORD *)(v5 + 8752) = *(_DWORD *)(v5 + 9480);
  *(_DWORD *)(v5 + 8712) = *(_DWORD *)(v5 + 8868);
  *(_DWORD *)(v5 + 8696) = *(_DWORD *)(v5 + 8840);
  *(_DWORD *)(v5 + 8688) = *(_DWORD *)(v5 + 8864);
  *(_DWORD *)(v5 + 8680) = *(_DWORD *)(v5 + 8808);
  *(_DWORD *)(v5 + 9136) = *(_DWORD *)(v5 + 9056);
  *(_DWORD *)(v5 + 8672) = *(_DWORD *)(v5 + 8848);
  *(_DWORD *)(v5 + 8664) = *(_DWORD *)(v5 + 8992);
  *(_DWORD *)(v5 + 9736) = a3;
  *(_DWORD *)(v5 + 9432) = *(_DWORD *)(v5 + 9172);
  *(_DWORD *)(v5 + 9264) = *(_DWORD *)(v5 + 9624);
  *(_DWORD *)(v5 + 8656) = *(_DWORD *)(v5 + 8776);
  *(_DWORD *)(v5 + 8648) = *(_DWORD *)(v5 + 9004);
  *(_DWORD *)(v5 + 8640) = v8;
  *(_DWORD *)(v5 + 8704) = *(_DWORD *)(v5 + 9064);
  *(_DWORD *)(v5 + 8632) = *(_DWORD *)(v5 + 8800);
  return v6(a1, a2, v7);
}

void sub_1002F908C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)(*(_QWORD *)(v8 + 8560) + 736) = 0;
  v9 = *(_QWORD *)(v8 + 7048) + 32;
  *(_QWORD *)(v8 + 9416) = v6 ^ 0x853D1103;
  *(_QWORD *)(v8 + 6904) = *(_QWORD *)(v8 + 7664);
  *(_QWORD *)(v8 + 6872) = *(_QWORD *)(v8 + 7680);
  *(_QWORD *)(v8 + 6864) = *(_QWORD *)(v8 + 7656);
  *(_QWORD *)(v8 + 6888) = *(_QWORD *)(v8 + 7688);
  *(_QWORD *)(v8 + 6880) = *(_QWORD *)(v8 + 7696);
  *(_QWORD *)(v8 + 6896) = *(_QWORD *)(v8 + 7704);
  *(_QWORD *)(v8 + 8944) = *(_QWORD *)(v8 + 9568);
  *(_QWORD *)(v8 + 8576) = *(_QWORD *)(v8 + 8888);
  *(_QWORD *)(v8 + 8952) = *(_QWORD *)(v8 + 9200);
  *(_QWORD *)(v8 + 8936) = *(_QWORD *)(v8 + 8880);
  *(_QWORD *)(v8 + 9280) = *(_QWORD *)(v8 + 9600);
  *(_QWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 9608);
  *(_QWORD *)(v8 + 9608) = v9;
  *(_QWORD *)(v8 + 9456) = v9;
  *(_DWORD *)(v8 + 8080) = *(_DWORD *)(v8 + 8032);
  *(_DWORD *)(v8 + 6928) = *(_DWORD *)(v8 + 7712);
  *(_DWORD *)(v8 + 7920) = a6;
  *(_DWORD *)(v8 + 9116) = *(_DWORD *)(v8 + 9448);
  *(_DWORD *)(v8 + 9272) = *(_DWORD *)(v8 + 9656);
  *(_DWORD *)(v8 + 7904) = *(_DWORD *)(v8 + 8312);
  *(_DWORD *)(v8 + 5344) = *(_DWORD *)(v8 + 6072);
  *(_DWORD *)(v8 + 9320) = *(_DWORD *)(v8 + 9616);
  *(_DWORD *)(v8 + 7040) = *(_DWORD *)(v8 + 6944);
  *(_DWORD *)(v8 + 6856) = *(_DWORD *)(v8 + 7648);
  *(_DWORD *)(v8 + 8064) = *(_DWORD *)(v8 + 7992);
  *(_DWORD *)(v8 + 8832) = *(_DWORD *)(v8 + 9384);
  *(_DWORD *)(v8 + 9152) = *(_DWORD *)(v8 + 8964);
  *(_DWORD *)(v8 + 6952) = *(_DWORD *)(v8 + 6936);
  *(_DWORD *)(v8 + 8196) = *(_DWORD *)(v8 + 9520);
  *(_DWORD *)(v8 + 6984) = *(_DWORD *)(v8 + 7552);
  *(_DWORD *)(v8 + 9464) = 994009684;
  *(_DWORD *)(v8 + 8608) = *(_DWORD *)(v8 + 9424);
  *(_DWORD *)(v8 + 5340) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 8136) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 7000) = *(_DWORD *)(v8 + 6968);
  *(_DWORD *)(v8 + 7928) = *(_DWORD *)(v8 + 7952);
  *(_DWORD *)(v8 + 7912) = *(_DWORD *)(v8 + 7888);
  *(_DWORD *)(v8 + 9104) = *(_DWORD *)(v8 + 9440);
  *(_DWORD *)(v8 + 8456) = *(_DWORD *)(v8 + 9664);
  *(_DWORD *)(v8 + 8912) = *(_DWORD *)(v8 + 8872);
  *(_DWORD *)(v8 + 6912) = *(_DWORD *)(v8 + 7640);
  *(_DWORD *)(v8 + 7008) = *(_DWORD *)(v8 + 6992);
  *(_DWORD *)(v8 + 6920) = *(_DWORD *)(v8 + 7672);
  *(_DWORD *)(v8 + 8040) = *(_DWORD *)(v8 + 8020);
  *(_DWORD *)(v8 + 5336) = *(_DWORD *)(v8 + 6080);
  *(_DWORD *)(v8 + 8116) = *(_DWORD *)(v8 + 8024);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 6976);
  *(_DWORD *)(v8 + 9072) = *(_DWORD *)(v8 + 9632);
  *(_DWORD *)(v8 + 8920) = *(_DWORD *)(v8 + 9160);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 7096);
  *(_DWORD *)(v8 + 7152) = *(_DWORD *)(v8 + 8000);
  *(_DWORD *)(v8 + 9600) = *(_DWORD *)(v8 + 7020);
  *(_DWORD *)(v8 + 8272) = *(_DWORD *)(v8 + 7984);
  *(_DWORD *)(v8 + 8056) = *(_DWORD *)(v8 + 8008);
  *(_DWORD *)(v8 + 7080) = *(_DWORD *)(v8 + 7592);
  *(_DWORD *)(v8 + 8188) = *(_DWORD *)(v8 + 9528);
  *(_DWORD *)(v8 + 9488) = *(_DWORD *)(v8 + 7064);
  *(_DWORD *)(v8 + 9264) = *(_DWORD *)(v8 + 9624);
  *(_DWORD *)(v8 + 8904) = *(_DWORD *)(v8 + 8616);
  *(_DWORD *)(v8 + 7088) = *(_DWORD *)(v8 + 7584);
  *(_DWORD *)(v8 + 9472) = *(_DWORD *)(v8 + 7136);
  *(_DWORD *)(v8 + 7072) = *(_DWORD *)(v8 + 7576);
  *(_DWORD *)(v8 + 8552) = *(_DWORD *)(v8 + 9408);
  *(_DWORD *)(v8 + 8900) = *(_DWORD *)(v8 + 9096);
  *(_DWORD *)(v8 + 4292) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 9184) = *(_DWORD *)(v8 + 9584);
  *(_DWORD *)(v8 + 8572) = *(_DWORD *)(v8 + 8984);
  *(_DWORD *)(v8 + 8932) = *(_DWORD *)(v8 + 8612);
  *(_DWORD *)(v8 + 5312) = *(_DWORD *)(v8 + 7632);
  *(_DWORD *)(v8 + 8328) = v7;
  *(_DWORD *)(v8 + 8544) = 138;
  *(_DWORD *)(v8 + 5348) = 1;
  JUMPOUT(0x1002A024CLL);
}

uint64_t sub_1002F9310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int v11;
  int v12;
  int v13;

  v8 = *(_DWORD *)(v7 + 8544) == 131;
  *(_QWORD *)(v7 + 7144) = (v6 - 2059598174);
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                                                     + 8
                                                                     * (int)(((v6
                                                                             + 2059593335
                                                                             + ((v6 - 2013303510) & 0xFD3D9977)
                                                                             + 585)
                                                                            * v8) ^ v6))
                                                         - 4);
  *(_DWORD *)(v7 + 7216) = 64;
  v10 = *(_QWORD *)(v7 + 2184);
  *(_QWORD *)(v7 + 9504) = *(_QWORD *)(v7 + 7880);
  *(_QWORD *)(v7 + 9576) = *(_QWORD *)(v7 + 4320);
  *(_QWORD *)(v7 + 9496) = v10;
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 9688) = *(_DWORD *)(v7 + 7768);
  v11 = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8760) = v11;
  v12 = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 8752) = v12;
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 9432) = a6;
  v13 = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 8704) = v13;
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 6744) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 7256) = a6;
  *(_DWORD *)(v7 + 7344) = v11;
  *(_DWORD *)(v7 + 8136) = v12;
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 7264) = a6;
  *(_DWORD *)(v7 + 7224) = a6;
  *(_DWORD *)(v7 + 7200) = v13;
  *(_DWORD *)(v7 + 6760) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 8328) = *(_DWORD *)(v7 + 9592);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v7 + 7500);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8632) = *(_DWORD *)(v7 + 8800);
  *(_QWORD *)(v7 + 7240) = *(_QWORD *)(v7 + 3184);
  *(_QWORD *)(v7 + 7248) = v10;
  *(_QWORD *)(v7 + 7232) = v10;
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 8260) = *(_DWORD *)(v7 + 8332);
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 7280) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 7416) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 7328) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7112) = *(_DWORD *)(v7 + 0x2000);
  *(_DWORD *)(v7 + 7208) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7320) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 7336) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 9392) = 132;
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 9240);
  return v9(a1, a2, v10);
}

uint64_t sub_1002F95D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int v11;

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                                                     + 8
                                                                     * ((8897
                                                                       * (((v6 - 34) ^ (*(_DWORD *)(v8 + 8544) == ((v7 + v6 + 15) ^ 0x90))) & 1)) ^ v6))
                                                         - 4);
  v10 = *(_QWORD *)(v8 + 3120);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 1576);
  *(_QWORD *)(v8 + 9496) = v10;
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = a6;
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = *(_DWORD *)(v8 + 8992);
  v11 = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 9736) = v11;
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9264) = *(_DWORD *)(v8 + 9624);
  *(_DWORD *)(v8 + 8648) = v11;
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  return v9(a1, a2, v10);
}

void sub_1002F970C()
{
  JUMPOUT(0x1002F7240);
}

uint64_t sub_1002F9714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                                                     + 8
                                                                     * (int)(((((v7 + v6 + 2127229974) | 0x81351011) ^ 0x853D100F)
                                                                            * (*(_DWORD *)(v8 + 8544) == 139)) ^ v6))
                                                         - 4);
  v10 = *(_QWORD *)(v8 + 3168);
  *(_QWORD *)(v8 + 9504) = *(_QWORD *)(v8 + 7880);
  *(_QWORD *)(v8 + 9576) = *(_QWORD *)(v8 + 3232);
  *(_QWORD *)(v8 + 9496) = v10;
  *(_DWORD *)(v8 + 8764) = *(_DWORD *)(v8 + 8828);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8860);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 7768);
  *(_DWORD *)(v8 + 8748) = *(_DWORD *)(v8 + 8980);
  *(_DWORD *)(v8 + 8736) = *(_DWORD *)(v8 + 8792);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 8816);
  *(_DWORD *)(v8 + 8744) = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 8968);
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 9256);
  *(_DWORD *)(v8 + 8752) = *(_DWORD *)(v8 + 9480);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8868);
  *(_DWORD *)(v8 + 8696) = *(_DWORD *)(v8 + 8840);
  *(_DWORD *)(v8 + 8688) = *(_DWORD *)(v8 + 8864);
  *(_DWORD *)(v8 + 8680) = *(_DWORD *)(v8 + 8808);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 9056);
  *(_DWORD *)(v8 + 8672) = *(_DWORD *)(v8 + 8848);
  *(_DWORD *)(v8 + 8664) = a6;
  *(_DWORD *)(v8 + 9736) = *(_DWORD *)(v8 + 7952);
  *(_DWORD *)(v8 + 9432) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 9264) = *(_DWORD *)(v8 + 9624);
  *(_DWORD *)(v8 + 8656) = *(_DWORD *)(v8 + 8776);
  *(_DWORD *)(v8 + 8648) = *(_DWORD *)(v8 + 9004);
  *(_DWORD *)(v8 + 8640) = *(_DWORD *)(v8 + 8784);
  *(_DWORD *)(v8 + 8704) = *(_DWORD *)(v8 + 9064);
  *(_DWORD *)(v8 + 8632) = *(_DWORD *)(v8 + 8800);
  return v9(a1, a2, v10);
}

void sub_1002F9854()
{
  JUMPOUT(0x1002F34BCLL);
}

void sub_1002F9860(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  *(_QWORD *)(v3 + 8264) = v5;
  *(_DWORD *)(v3 + 7448) = a3;
  v6 = *(_DWORD *)(v3 + 7944);
  *(_DWORD *)(v3 + 3992) = v4;
  *(_DWORD *)(v3 + 7616) = *(_DWORD *)(v3 + 5340);
  *(_DWORD *)(v3 + 3988) = v6;
  *(_DWORD *)(v3 + 3996) = *(_DWORD *)(v3 + 9472);
  JUMPOUT(0x10031CC50);
}

uint64_t sub_1002F9918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((v8 + ((v7 + 19392603) | 0x84151003) - 163)
                                     * (*(_DWORD *)(v9 + 5332) != 17)) ^ v7)))();
}

void sub_1002F9960(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 1) = a2;
  JUMPOUT(0x1002EC44CLL);
}

void sub_1002F9970(_BYTE *a1@<X0>, char a2@<W8>)
{
  *a1 = a2;
  JUMPOUT(0x1002EC44CLL);
}

uint64_t sub_1002F9980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((*(_DWORD *)(v8 + 5332) == (((v7 - 102) | 0x13) ^ 4))
                                     * ((v7 - 1652613011) & 0xE7BDD23F ^ (v9 + 206))) ^ v7)))();
}

void sub_1002F99E0(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_BYTE *)(a1 + 2) = a2;
  *(_DWORD *)(v2 + 5332) = 20;
  JUMPOUT(0x1002F9A0CLL);
}

uint64_t sub_1002F9B50(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  *(_QWORD *)(v2 + 5480) = *(_QWORD *)(v2 + 8520);
  *(_QWORD *)(v2 + 5472) = *(_QWORD *)(v2 + 7744);
  *(_QWORD *)(v2 + 8288) = *(_QWORD *)(v2 + 5464);
  *(_BYTE *)(a1 + 3985) = v4 ^ 0xF4;
  v6 = *(uint64_t (**)(void))(v5
                           + 8
                           * ((11931
                             * (((v1 - 98) ^ (v3 + ((v1 - 2087) | 0x900u) - 1302589614 < 8)) & 1)) ^ ((v1 - 2087) | 0x900)));
  *(_DWORD *)(v2 + 9688) = 1;
  return v6();
}

void sub_1002F9BAC(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2872) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_1002F9BC0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2880) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_1002F9BD4(int a1@<W7>, char a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;

  v8 = (a2 - 67) | 0x14;
  v9 = *(_DWORD *)(v2 + 8628);
  if (a1 != (v8 + 34))
    v9 = v4;
  *(_DWORD *)(v2 + 8744) = v9;
  v10 = *(_DWORD *)(v2 + 9624);
  if (a1 == (v8 + 34))
    v10 = v4;
  *(_DWORD *)(v2 + 9264) = v10;
  *(_DWORD *)(v2 + 8032) = *(_DWORD *)(v2 + 8080);
  *(_DWORD *)(v2 + 8332) = v3;
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 7436) = *(_DWORD *)(v2 + 7192);
  *(_DWORD *)(v2 + 7456) = v7;
  *(_DWORD *)(v2 + 9328) = *(_DWORD *)(v2 + 7312);
  *(_DWORD *)(v2 + 7992) = *(_DWORD *)(v2 + 8064);
  *(_DWORD *)(v2 + 8748) = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 7500) = v6;
  *(_DWORD *)(v2 + 9424) = v5;
  *(_DWORD *)(v2 + 7616) = *(_DWORD *)(v2 + 7128);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 7344);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 8136);
  *(_DWORD *)(v2 + 7464) = *(_DWORD *)(v2 + 7168);
  *(_DWORD *)(v2 + 7488) = *(_DWORD *)(v2 + 7184);
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 7484) = *(_DWORD *)(v2 + 7296);
  *(_DWORD *)(v2 + 9440) = *(_DWORD *)(v2 + 9104);
  *(_DWORD *)(v2 + 7480) = *(_DWORD *)(v2 + 7304);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9248) = *(_DWORD *)(v2 + 7176);
  *(_DWORD *)(v2 + 7476) = *(_DWORD *)(v2 + 7288);
  *(_DWORD *)(v2 + 8020) = *(_DWORD *)(v2 + 8040);
  *(_DWORD *)(v2 + 7432) = *(_DWORD *)(v2 + 7416);
  *(_DWORD *)(v2 + 8024) = *(_DWORD *)(v2 + 8116);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 9080) = *(_DWORD *)(v2 + 9072);
  *(_DWORD *)(v2 + 8000) = *(_DWORD *)(v2 + 7328);
  *(_DWORD *)(v2 + 8664) = *(_DWORD *)(v2 + 8992);
  *(_DWORD *)(v2 + 7984) = *(_DWORD *)(v2 + 8272);
  *(_DWORD *)(v2 + 8008) = *(_DWORD *)(v2 + 8056);
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 0x2000) = *(_DWORD *)(v2 + 7112);
  *(_DWORD *)(v2 + 9528) = *(_DWORD *)(v2 + 7208);
  *(_DWORD *)(v2 + 7460) = *(_DWORD *)(v2 + 7408);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = *(_DWORD *)(v2 + 9004);
  *(_DWORD *)(v2 + 7440) = *(_DWORD *)(v2 + 7160);
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 9008) = *(_DWORD *)(v2 + 7320);
  *(_DWORD *)(v2 + 7452) = *(_DWORD *)(v2 + 9736);
  *(_DWORD *)(v2 + 9408) = *(_DWORD *)(v2 + 7336);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 7200);
  *(_DWORD *)(v2 + 9012) = *(_DWORD *)(v2 + 8236);
  *(_DWORD *)(v2 + 8632) = *(_DWORD *)(v2 + 8800);
  if (a1 == (v8 + 34))
    v11 = *(_QWORD *)(v2 + 3280);
  else
    v11 = *(_QWORD *)(v2 + 3896);
  if (a1 == (v8 + 34))
    v12 = 83;
  else
    v12 = 82;
  *(_QWORD *)(v2 + 9680) = *(_QWORD *)(v2 + 7512);
  v13 = *(_DWORD *)(v2 + 8176);
  v14 = *(_QWORD *)(v2 + 9680);
  *(_QWORD *)(v2 + 8160) = v14;
  *(_QWORD *)(v2 + 9600) = v14;
  *(_QWORD *)(v2 + 8168) = v11;
  *(_QWORD *)(v2 + 9608) = v11;
  *(_DWORD *)(v2 + 8828) = *(_DWORD *)(v2 + 8764);
  *(_DWORD *)(v2 + 8860) = *(_DWORD *)(v2 + 8768);
  *(_DWORD *)(v2 + 9656) = *(_DWORD *)(v2 + 9272);
  *(_DWORD *)(v2 + 8980) = *(_DWORD *)(v2 + 8748);
  *(_DWORD *)(v2 + 8792) = *(_DWORD *)(v2 + 8736);
  *(_DWORD *)(v2 + 8816) = *(_DWORD *)(v2 + 8728);
  *(_DWORD *)(v2 + 8628) = *(_DWORD *)(v2 + 8744);
  *(_DWORD *)(v2 + 8968) = *(_DWORD *)(v2 + 8720);
  *(_DWORD *)(v2 + 9256) = *(_DWORD *)(v2 + 8760);
  *(_DWORD *)(v2 + 9480) = *(_DWORD *)(v2 + 8752);
  *(_DWORD *)(v2 + 8868) = *(_DWORD *)(v2 + 8712);
  *(_DWORD *)(v2 + 8840) = *(_DWORD *)(v2 + 8696);
  *(_DWORD *)(v2 + 8152) = v13;
  *(_DWORD *)(v2 + 9664) = v13;
  *(_DWORD *)(v2 + 8864) = *(_DWORD *)(v2 + 8688);
  *(_DWORD *)(v2 + 8808) = *(_DWORD *)(v2 + 8680);
  *(_DWORD *)(v2 + 9056) = *(_DWORD *)(v2 + 9136);
  *(_DWORD *)(v2 + 8848) = *(_DWORD *)(v2 + 8672);
  *(_DWORD *)(v2 + 9632) = *(_DWORD *)(v2 + 9080);
  *(_DWORD *)(v2 + 8992) = *(_DWORD *)(v2 + 8664);
  *(_DWORD *)(v2 + 9172) = *(_DWORD *)(v2 + 9432);
  *(_DWORD *)(v2 + 9616) = v4;
  *(_DWORD *)(v2 + 8548) = v4;
  *(_DWORD *)(v2 + 9624) = *(_DWORD *)(v2 + 9264);
  *(_DWORD *)(v2 + 8776) = *(_DWORD *)(v2 + 8656);
  *(_DWORD *)(v2 + 9004) = *(_DWORD *)(v2 + 8648);
  *(_DWORD *)(v2 + 8784) = *(_DWORD *)(v2 + 8640);
  *(_DWORD *)(v2 + 9156) = *(_DWORD *)(v2 + 9008);
  *(_DWORD *)(v2 + 9224) = *(_DWORD *)(v2 + 9400);
  *(_DWORD *)(v2 + 9064) = *(_DWORD *)(v2 + 8704);
  *(_DWORD *)(v2 + 8280) = v12;
  *(_DWORD *)(v2 + 8544) = *(_DWORD *)(v2 + 9392);
  *(_DWORD *)(v2 + 9240) = *(_DWORD *)(v2 + 9012);
  *(_DWORD *)(v2 + 8800) = *(_DWORD *)(v2 + 8632);
  *(_DWORD *)(v2 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_1002F9DB4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t, _QWORD, uint64_t);
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;

  v16 = v8 ^ 0x1D25;
  v17 = a8 == (((((v8 ^ 0x25) + 39) & 0x1F) + 29) & 0x3F);
  v18 = v8 ^ 0x1D25 ^ (a5 + 938);
  *(_QWORD *)(v10 + 9416) = v18;
  v19 = v18 ^ 0x853D17F5;
  v20 = v17;
  v21 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(a4 + 8 * ((v20 * v19) ^ v16)) - 12);
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 8332) = v11;
  *(_DWORD *)(v10 + 7436) = *(_DWORD *)(v10 + 7192);
  *(_DWORD *)(v10 + 7456) = v15;
  *(_DWORD *)(v10 + 9328) = *(_DWORD *)(v10 + 7312);
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 8548) = *(_DWORD *)(v10 + 6744);
  *(_DWORD *)(v10 + 7500) = v14;
  *(_DWORD *)(v10 + 7616) = *(_DWORD *)(v10 + 7128);
  *(_DWORD *)(v10 + 9480) = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 7464) = *(_DWORD *)(v10 + 7168);
  *(_DWORD *)(v10 + 7488) = *(_DWORD *)(v10 + 7184);
  *(_DWORD *)(v10 + 7484) = *(_DWORD *)(v10 + 7296);
  *(_DWORD *)(v10 + 8456) = a7;
  *(_DWORD *)(v10 + 7480) = *(_DWORD *)(v10 + 7304);
  *(_DWORD *)(v10 + 9248) = *(_DWORD *)(v10 + 7176);
  *(_DWORD *)(v10 + 7476) = *(_DWORD *)(v10 + 7288);
  *(_DWORD *)(v10 + 9056) = *(_DWORD *)(v10 + 9136);
  *(_DWORD *)(v10 + 8020) = *(_DWORD *)(v10 + 8040);
  *(_DWORD *)(v10 + 7432) = *(_DWORD *)(v10 + 7416);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8000) = *(_DWORD *)(v10 + 7328);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 0x2000) = *(_DWORD *)(v10 + 7112);
  *(_DWORD *)(v10 + 7460) = *(_DWORD *)(v10 + 7408);
  *(_DWORD *)(v10 + 7440) = *(_DWORD *)(v10 + 7160);
  *(_DWORD *)(v10 + 9156) = *(_DWORD *)(v10 + 7320);
  *(_DWORD *)(v10 + 7452) = *(_DWORD *)(v10 + 9736);
  v22 = *(unsigned int *)(v10 + 9400);
  *(_DWORD *)(v10 + 9224) = v22;
  *(_DWORD *)(v10 + 9064) = *(_DWORD *)(v10 + 7200);
  *(_DWORD *)(v10 + 8280) = *(_DWORD *)(v10 + 6760);
  *(_DWORD *)(v10 + 8544) = *(_DWORD *)(v10 + 9392);
  v23 = *(_DWORD *)(v10 + 7344);
  *(_DWORD *)(v10 + 8504) = v23;
  *(_DWORD *)(v10 + 9256) = v23;
  *(_DWORD *)(v10 + 9424) = v13;
  *(_DWORD *)(v10 + 9664) = v13;
  v24 = *(_DWORD *)(v10 + 7208);
  *(_DWORD *)(v10 + 8496) = v24;
  *(_DWORD *)(v10 + 9528) = v24;
  v25 = *(_DWORD *)(v10 + 7336);
  *(_DWORD *)(v10 + 8552) = v25;
  *(_DWORD *)(v10 + 9408) = v25;
  *(_DWORD *)(v10 + 9240) = *(_DWORD *)(v10 + 8236);
  *(_DWORD *)(v10 + 9592) = 43;
  *(_DWORD *)(v10 + 8440) = 89;
  *(_QWORD *)(v10 + 8408) = *(_QWORD *)(v10 + 8432);
  *(_QWORD *)(v10 + 8400) = *(_QWORD *)(v10 + 8416);
  *(_QWORD *)(v10 + 8392) = *(_QWORD *)(v10 + 8536);
  *(_QWORD *)(v10 + 8384) = *(_QWORD *)(v10 + 8488);
  *(_QWORD *)(v10 + 8376) = *(_QWORD *)(v10 + 8472);
  *(_QWORD *)(v10 + 8944) = v9;
  *(_QWORD *)(v10 + 8576) = *(_QWORD *)(v10 + 8888);
  *(_QWORD *)(v10 + 8952) = *(_QWORD *)(v10 + 9200);
  *(_QWORD *)(v10 + 8936) = *(_QWORD *)(v10 + 8880);
  v26 = *(_QWORD *)(v10 + 6728);
  *(_DWORD *)(v10 + 9128) = *(_DWORD *)(v10 + 8312);
  *(_DWORD *)(v10 + 9116) = *(_DWORD *)(v10 + 9448);
  *(_DWORD *)(v10 + 8832) = *(_DWORD *)(v10 + 9384);
  *(_DWORD *)(v10 + 9152) = *(_DWORD *)(v10 + 8964);
  *(_DWORD *)(v10 + 8368) = *(_DWORD *)(v10 + 9520);
  *(_DWORD *)(v10 + 8520) = *(_DWORD *)(v10 + 8464);
  *(_DWORD *)(v10 + 8356) = *(_DWORD *)(v10 + 8532);
  *(_DWORD *)(v10 + 8360) = *(_DWORD *)(v10 + 8424);
  *(_DWORD *)(v10 + 8912) = *(_DWORD *)(v10 + 8872);
  *(_DWORD *)(v10 + 8512) = *(_DWORD *)(v10 + 8480);
  *(_DWORD *)(v10 + 8920) = *(_DWORD *)(v10 + 9160);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8904) = *(_DWORD *)(v10 + 8616);
  *(_DWORD *)(v10 + 8900) = *(_DWORD *)(v10 + 9096);
  *(_DWORD *)(v10 + 9184) = *(_DWORD *)(v10 + 9584);
  *(_DWORD *)(v10 + 8572) = *(_DWORD *)(v10 + 8984);
  *(_DWORD *)(v10 + 8352) = a1;
  *(_DWORD *)(v10 + 8932) = *(_DWORD *)(v10 + 8612);
  *(_QWORD *)(v10 + 9600) = *(_QWORD *)(v10 + 6088);
  *(_QWORD *)(v10 + 9608) = v26;
  *(_DWORD *)(v10 + 9656) = v12;
  *(_DWORD *)(v10 + 9616) = v12;
  *(_DWORD *)(v10 + 9440) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 9632) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 8608) = v12;
  return v21(v12, a2, 0, v22);
}

void sub_1002FA07C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2968) = a1;
  *(_DWORD *)(v1 + 7856) = 59;
  *(_DWORD *)(v1 + 7848) = 151;
  JUMPOUT(0x1002FA154);
}

uint64_t sub_1002FA24C()
{
  int v0;
  char v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[966] = v3[1065];
  v3[965] = v3[968];
  v3[1036] = v4;
  *(_BYTE *)(v6 + 3985) = v1 ^ 0xF4;
  return ((uint64_t (*)(void))(2235371539
                            - ((3 * ((v0 + 806) ^ 0x64F) + 1568715) | 0x85251011)
                            + *(_QWORD *)(v5 + 8
                                             * ((709 * ((v2 - 1765825435) > 7)) ^ (v0 + 806) ^ 0xBB2))))();
}

uint64_t sub_1002FA324()
{
  int v0;
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + 4016) = v1 ^ (((v0 - 127) & 0xD7 ^ 0x38) + v0 + 13);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((240 * ((v2 - 1765825435) < 8)) ^ (v0 + 3372))) - 8))();
}

uint64_t sub_1002FA3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  char v7;
  unsigned __int8 **v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned __int8 v16;
  unsigned __int8 *v17;
  unsigned __int8 v18;
  uint64_t v19;
  unint64_t v20;
  unsigned __int8 *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unsigned __int8 *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  _BYTE *v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  unsigned __int8 v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unsigned __int8 v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  char v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  __int128 v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  __int128 v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  __int128 v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  __int128 v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  __int128 v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  __int128 v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  char v195;

  v15 = (v6 - 2063272062) | 0x381001;
  v16 = ((v7 + v15 - 18) & (v9 + 1) ^ 2) + ((v7 + v15 - 18) & (v9 + 1));
  *(_QWORD *)(v10 + 9504) = v5;
  *(_QWORD *)(v10 + 9280) = v14;
  *(_QWORD *)(v10 + 8240) = v12;
  *(_DWORD *)(v10 + 8308) = v9;
  *(_DWORD *)(v10 + 8300) = v13;
  *(_DWORD *)(v10 + 8304) = v11;
  v17 = *v8;
  v18 = ((*v8)[14] >> 3) | (32 * (*v8)[14]);
  v19 = **(_QWORD **)(v10 + 9352);
  v20 = (unint64_t)*(unsigned __int8 *)(v19 + 12) << 8;
  v21 = *(unsigned __int8 **)(v10 + 9712);
  v22 = v20 & 0x1000 | ((unint64_t)v21[90] << 16);
  v23 = (unint64_t)(*v8)[24] << 48;
  v24 = (**(_BYTE **)(v10 + 8224) ^ (a5 + v15 - 90));
  *(_DWORD *)(v10 + 9664) = a5 + v15;
  v25 = (**(_BYTE **)(v10 + 8216) ^ (a5 + v15 - 90)) | v20 & 0xFFFFFFFFFFFFEFFFLL;
  LOBYTE(v20) = v21[36];
  v26 = (2 * v20) & 0x38;
  v27 = **(unsigned __int8 ***)(v10 + 8144);
  v28 = v20 ^ 0x9C;
  *(_DWORD *)(v10 + 9736) = v15 + 2059596029;
  v29 = *(_QWORD *)(a2 + 8 * (v15 + 2059595782));
  v30 = *(unsigned __int8 *)(v19 + 1);
  LOBYTE(v15) = v26 + v28;
  v31 = v21[20];
  v32 = (v17[8] >> 1) | (v17[8] << 7);
  *(_QWORD *)(v10 + 9688) = v29 + 283;
  v33 = *(_BYTE **)(v10 + 7840);
  v34 = v22 | v25 | (v24 << 24);
  v35 = v29 + 540;
  v36 = *(_BYTE *)(v29 + 540 + (v15 ^ 0xC0));
  v37 = (v18 ^ 0x4D ^ *(_BYTE *)(v29 + 283 + (v18 ^ 0x88))) - 65;
  v38 = (unint64_t)*(unsigned __int8 *)(v19 + 13) << 56;
  v39 = v34 | ((unint64_t)v21[54] << 32);
  v40 = v36 ^ 0x4C;
  v41 = v17[26];
  v42 = v39 | v23 | (v30 << 40);
  v43 = v38 ^ (0xFF00000000000000 * *(unsigned __int8 *)(v19 + 13));
  v44 = *v27 | (unint64_t)(unsigned __int16)(v37 << 8) | ((*v33 ^ 0xB0) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(-7 * (v36 ^ 0x4C)) << 24);
  v45 = v44 | ((unint64_t)v17[17] << 32) | ((unint64_t)v21[51] << 40) | ((unint64_t)v27[6] << 48);
  v46 = v42 + ((unint64_t)v21[1] << 56);
  v47 = v45 + v43 + v45 - (v45 ^ v38) - 2 * ((v45 - (v45 ^ v38)) & v43);
  v48 = v17[9] | ((unint64_t)(-7
                                                    * (*(_BYTE *)(v29 + 540 + ((v41 - 100) ^ 0xC0)) ^ 0x4C)) << 8);
  v49 = v31 | ((unint64_t)v21[7] << 8) | ((unint64_t)*(unsigned __int8 *)(v19 + 2) << 16) | ((unint64_t)v21[92] << 48) | ((unint64_t)v17[19] << 56) | ((unint64_t)v21[74] << 32) | ((unint64_t)*(unsigned __int8 *)(v19 + 7) << 24) | ((unint64_t)*(unsigned __int8 *)(v19 + 6) << 40);
  v50 = (v48 ^ -(uint64_t)v48 ^ (((2 * (-1816793845 - (int)v48)) & 0x25EALL)
                              + ((0x9861D82593B5ED0BLL - v48) ^ 0x679E27DA6C4A12F5)))
      + ((unint64_t)*(unsigned __int8 *)(v19 + 14) << 16);
  v51 = ((unint64_t)v17[15] << 32) | ((unint64_t)v17[1] << 24) | ((unint64_t)v17[32] << 40);
  v52 = *(unsigned __int8 *)(v29 + (v32 ^ 0x54) + 12);
  if (v44)
    v53 = (v52 >> 2) ^ 0x11;
  else
    v53 = 46;
  v54 = v53 & (v52 >> 2) ^ ((v52 >> 2) & 0xD1 | ((_BYTE)v52 << 6));
  v55 = (unint64_t)v21[19] << 48;
  v56 = v50 ^ v51;
  v57 = v50 & v55;
  v58 = (v50 ^ v51) + v55;
  v59 = *(unsigned int *)(v19 + 8);
  v60 = v58 - 2 * v57;
  v61 = v47 ^ v59;
  v62 = (((unint64_t)v17[23] << (v41 & 0x10) << (v41 & 0x10 ^ 0x10u)) | ((unint64_t)v17[37] << 8) | ((unint64_t)v17[18] << 56)) ^ (((unint64_t)v17[2] << 40) | ((unint64_t)v21[82] << 48) | ((unint64_t)v21[59] << 32) | v21[58]) ^ ((unint64_t)((v54 ^ 0x29 ^ (-16 * v54)) + 31) << 24);
  v63 = v47 ^ v59 ^ v49 ^ 0xA016BC24B7A8D977;
  v64 = v62 ^ v46;
  v65 = v60 ^ ((unint64_t)v21[17] << 56);
  v66 = v64 ^ 0x9AF652FDFA97F854 ^ v47 ^ v59 ^ 0x7EFD6E4BA10EA42ELL;
  v67 = v64 ^ 0x9AF652FDFA97F854 | v47 ^ v59 ^ 0x7EFD6E4BA10EA42ELL;
  v68 = v62 + (v65 ^ 0x66B42170FA29716ALL) - 2 * (v62 & (v65 ^ 0x66B42170FA29716ALL));
  v69 = (v61 ^ v49 ^ 0xA016BC24B7A8D977) & (v61 ^ 0x810291B45EF15BD1);
  v70 = v64 ^ 0x6509AD02056807ABLL;
  if ((v56 & 0x80000000000) != 0)
    v71 = 0xFFFFF80000000000;
  else
    v71 = 0x80000000000;
  v72 = __ROR8__(v66, 13) ^ __ROR8__(v67, 13) ^ 0x26CE55904FD957C9;
  v73 = (v68 ^ 0x1B8739A505B5424CLL) & (((v65 ^ 0x66B42170FA29716ALL) + v71) ^ 0xFFFFF7FFFFFFFFFFLL);
  v74 = __ROR8__((v65 ^ 0x66B42170FA29716ALL) & (v61 ^ v49 ^ 0x5FE943DB48572688), 21) ^ __ROR8__(v61 ^ 0x7EFD6E4BA10EA42ELL, 21);
  v75 = v74 ^ 0x9B737ED6E9D64B97;
  v76 = v68 ^ 0x1B8739A505B5424CLL ^ __ROR8__(v72, 51);
  v77 = (v75 << 21) & 0xFEFFFFFFFFE00000 ^ v70 ^ v69 ^ ((v75 << 21) & 0x100000000000000 | (v74 >> 43) | 0xDADD3AC972E00000);
  v78 = (((v77 ^ 0x42AC0DFF18EAF909) + (v77 | 0xBD53F200E71506F6) + 1) ^ 0x9850F000A1010482)
      + (v77 & 0x42AC0DFF18EAF909 ^ 0x2A8092400E25101);
  v79 = v73 ^ v63;
  *((_QWORD *)&v80 + 1) = v79 ^ -(uint64_t)v79 ^ ((v79 ^ 0x71F90AAF4B015B75) - 0x71F90AAF4B015B75);
  *(_QWORD *)&v80 = *((_QWORD *)&v80 + 1) - 0x71F90AAF4B015B76;
  v81 = v78 ^ (-7 * (*(_BYTE *)(v35 + (((v78 >> 61) + 156) ^ 0xC0)) ^ 0x4C)) ^ (8 * v78) ^ (v78 >> 39) ^ (v78 << 25);
  v82 = v65 ^ (v68 ^ 0xE478C65AFA4ABDB3) & v70 ^ v79 ^ 0x5C15CA165129E222;
  v83 = v82 >> (v61 & 0xA) >> (v61 & 0xA ^ 0xA);
  v84 = v76 ^ v70 ^ v69;
  v85 = v76 ^ 0xDBD18B5A517C8C71 ^ __ROR8__(v76 ^ 0xDBD18B5A517C8C71, 7) ^ ((v76 ^ 0xDBD18B5A517C8C71) >> 41);
  v86 = v85 & 0xFBEB6D2A6CB82839;
  v87 = v85 & 0x41492D59347D7C6;
  v88 = (v82 >> 17) | (v82 << 54);
  v89 = __ROR8__(__ROR8__(*((_QWORD *)&v80 + 1) - 0x71F90AAF4B015B76, 19) & 0xFFF81FFFFFFFFFFFLL ^ __ROR8__((v80 >> 1) ^ (*((_QWORD *)&v80 + 1) - 0x71F90AAF4B015B76), 13) ^ 0x17FC653716A9ADCFLL, 51) ^ ((*((_QWORD *)&v80 + 1) - 0x71F90AAF4B015B76) << 58) ^ v81;
  v90 = v82 ^ (v82 << 47);
  if ((v81 & 0x80) != 0)
    v91 = -128;
  else
    v91 = 128;
  *((_QWORD *)&v92 + 1) = v84 ^ 0xB44C5028398C2245;
  *(_QWORD *)&v92 = v84;
  v93 = v86 ^ ((v76 ^ 0xDBD18B5A517C8C71) << 23) & 0xFBEB6D2A6C800000 | v87 ^ ((v76 ^ 0xDBD18B5A517C8C71) << 23) & 0x41492D593000000;
  v94 = v90 ^ v83 ^ v88;
  v95 = v93 ^ v94;
  v96 = v84 ^ 0xB44C5028398C2245 ^ __ROR8__(v84 ^ 0xB44C5028398C2245, 19) ^ (v92 >> 28) ^ v93;
  v97 = v96 ^ 0xB44C50283;
  v98 = v81 & (v96 ^ 0xFFFFFFF4BB3AFD7CLL) ^ v93 ^ v94;
  v99 = ((v91 + v81) ^ 0xFFFFFFFFFFFFFF7FLL) & (v89 ^ 0x8CA6E2D535B9E2FFLL) ^ v97;
  v100 = v98 ^ 0xCC7BE9A4BE673377 ^ v99;
  v101 = v81 & 0x20000000000000;
  v102 = (v89 ^ 0x73591D2ACA461D00) & v94;
  v103 = v81 & 0xFFDFFFFFFFFFFFFFLL;
  if ((v102 & v101) != 0)
    v101 = -v101;
  v104 = (v101 + v102) ^ v103;
  v105 = v104 ^ v99 ^ 0xF0CC8DD092A1AF2FLL;
  *((_QWORD *)&v107 + 1) = v105;
  *(_QWORD *)&v107 = v104 ^ ~v99;
  v106 = v107 >> 61;
  v108 = v89 ^ 0x8CA6E2D535B9E2FFLL ^ v93 & ~v94;
  v109 = v108 ^ 0x5356F0674821AEC6;
  *((_QWORD *)&v107 + 1) = v108;
  *(_QWORD *)&v107 = v108 ^ 0x5356F0674821AEC6;
  v110 = v107 >> 1;
  v111 = v94 ^ 0x47C99E12AA55AA20 ^ v97 & ~v95 ^ v108;
  v112 = v111 ^ __ROR8__(v111, 10);
  v113 = (v105 >> 39) & 0x4000;
  v114 = v106 ^ v105;
  if ((v114 & v113) != 0)
    v113 = -v113;
  v115 = (v113 + v114) ^ (v105 >> 39) & 0xFFFFFFFFFFFFBFFFLL;
  v116 = v115 ^ (v105 << 25);
  *((_QWORD *)&v117 + 1) = v115;
  *(_QWORD *)&v117 = v116;
  v118 = (v117 >> 22) ^ __ROR8__(v110 ^ v109 ^ (v109 >> 6) ^ (v109 << 58), 22);
  v119 = ((0xBFBBAA5FCFDB5187 - (v98 & 0x1000000000000000)) & 0x9C81284E02D04181 ^ v98 & 0xCCC5784E02D467A9 | v98 & 0x233A87B1FD2B9856) ^ 0x233A8211CD0B1006;
  v120 = v119 ^ __ROR8__(v119, 7) ^ (v119 >> 41) ^ (v119 << 23);
  v121 = (v112 + (v111 << 47) - 2 * (v112 & (v111 << 47))) ^ (v111 >> 17);
  v122 = __ROR8__(v118 ^ 0x9319FDD7951A92DDLL, 42);
  *(_QWORD *)&v117 = __ROR8__(__ROR8__(v121, 23) ^ __ROR8__(v120, 23) ^ 0x30668A50A29F8279, 41);
  v123 = v120 ^ __ROR8__(v100, 28) ^ ((v100 ^ (v100 >> 19) ^ -(uint64_t)(v100 ^ (v100 >> 19)) ^ ((v100 << 45)
                                                                                              - (v100 ^ (v100 >> 19) ^ (v100 << 45))))
                                    + (v100 << 45));
  v124 = v117 ^ 0x28514FC13C983345;
  v125 = v122 ^ 0x75E546A4B764C67FLL ^ (v117 ^ 0x28514FC13C983345) & ~v121;
  v126 = v121 ^ 0x313BC7C92EDDA5FDLL ^ v123 & (v117 ^ 0xD7AEB03EC367CCBALL) ^ v125;
  v127 = v126 ^ __ROR8__(v126, 10);
  v128 = __ROR8__(__ROR8__(v126, 61) ^ 0x228C743FBD208966, 20) ^ 0x8966228C743FBD2;
  if (v40)
    v129 = v122 ^ 0x75E546A4B764C67FLL ^ v121;
  else
    v129 = v121;
  if (v114)
    v130 = v129;
  else
    v130 = -1;
  v131 = v128 & 0x10000000000000;
  v132 = v128 & 0xFFEFFFFFFFFFFFFFLL;
  if ((v131 & v127) != 0)
    v131 = -v131;
  v133 = v131 + v127 + v132 - 2 * ((v131 + v127) & v132);
  v134 = v116 & ~v123;
  v135 = (v122 ^ 0x75E546A4B764C67FLL) & ~v116 ^ v123;
  v136 = v134 ^ v124;
  v137 = (v135 ^ v134 ^ v124 ^ -(uint64_t)(v135 ^ v134 ^ v124) ^ ((v135 ^ v134 ^ v124 ^ 0xAC6D121EA7274154)
                                                               + 0x5392EDE158D8BEACLL))
       + 0x5392EDE158D8BEABLL;
  v138 = v116 ^ 0x4A2C537256ACF1F5 ^ v135 ^ (v122 ^ 0x8A1AB95B489B3980) & v121 & v130;
  v139 = v138 ^ __ROR8__(v138, 61) ^ (v138 >> 39) ^ (v138 << 25);
  v140 = v136 ^ 0xAD2A34AC12844DDDLL ^ __ROR8__(v136 ^ 0xAD2A34AC12844DDDLL, 7) ^ ((v136 ^ 0xAD2A34AC12844DDDLL) >> 41) ^ ((v136 ^ 0xAD2A34AC12844DDDLL) << 23);
  v141 = __ROR8__((((v125 ^ 0x802A65F49FF1DF13) & 0x3F) << 40) ^ __ROR8__(v125 ^ 0x802A65F49FF1DF13 ^ __ROR8__(v125 ^ 0x802A65F49FF1DF13, 1) ^ ((v125 ^ 0x802A65F49FF1DF13) >> 6), 18) ^ 0xC2AA087E3CE41932, 46);
  v142 = v137 & 0xFFFF7FFFFFFFFFFFLL ^ (v137 << 45) ^ (v137 >> 28) ^ (v137 << 36) ^ (v137 & 0x800000000000 | (v137 >> 19));
  v143 = v142 ^ v140;
  v144 = v139 ^ v141 ^ 0x21F8F39064CB0AA8;
  v145 = v144 & ~v139 ^ v142 ^ v140;
  v146 = v139 ^ 0xC0C4E4651798A92FLL ^ v133 & (v139 ^ v141 ^ 0xDE070C6F9B34F557) ^ v145;
  v147 = v146 ^ (v146 >> 39) ^ __ROR8__(v146, 61) ^ (v146 << 25);
  v148 = v133 ^ ~v142 ^ (v142 ^ v140 | ~(v133 ^ v140));
  *((_QWORD *)&v149 + 1) = v140 & ~v133 ^ v144;
  *(_QWORD *)&v149 = *((_QWORD *)&v149 + 1) ^ 0x3508012E90BBEBA6;
  v150 = v133 ^ v140 ^ v139 & ~v143;
  v151 = v150 ^ 0x76AE5B4ADE1196D6;
  v152 = v150 ^ 0x76AE5B4ADE1196D6 ^ __ROR8__(v150 ^ 0x76AE5B4ADE1196D6, 7);
  v153 = v152 ^ ((v150 ^ 0x76AE5B4ADE1196D6) >> 41);
  v154 = (v149 >> 1) ^ *((_QWORD *)&v149 + 1) ^ 0x3508012E90BBEBA6 ^ ((*((_QWORD *)&v149 + 1) ^ 0x3508012E90BBEBA6uLL) >> 6) ^ ((*((_QWORD *)&v149 + 1) ^ 0x3508012E90BBEBA6) << 58);
  v155 = (v148 + *((_QWORD *)&v149 + 1) - 2 * (v148 & *((_QWORD *)&v149 + 1))) ^ (v133
                                                                                - ((2 * v133) & 0x6237310441395C28)
                                                                                - 0x4EE4677DDF6351ECLL);
  v156 = v155 ^ __ROR8__(v155, 10) ^ (v155 >> 17) ^ (v155 << 47);
  v157 = v150 ^ v145 ^ 0x9D5823204F6787ADLL ^ __ROR8__(v150 ^ v145 ^ 0x9D5823204F6787ADLL, 19) ^ ((v150 ^ v145 ^ 0x9D5823204F6787ADLL) >> 28) ^ ((v150 ^ v145 ^ 0x9D5823204F6787ADLL) << 36);
  v158 = (v152 ^ (v151 << 23)) & 0xC000000000000000 | (((4 * v153) ^ (v151 << 25)) >> 2);
  if (((v75 << 21) & 0xFEFFFFFFFFE00000) != 0)
    v159 = v147;
  else
    v159 = -1;
  v160 = v157 ^ v158;
  v161 = (v156 ^ v158) + ((v160 ^ v159) & v147) - 2 * ((v156 ^ v158) & (v160 ^ v159) & v147);
  v162 = v154 & ~v147 ^ 0xC3F7FB6F0CB8251 ^ v157 ^ v158;
  v163 = v162 ^ 0xE52EAC0EC822ADFDLL ^ v161;
  v164 = v163 ^ __ROR8__(v163, 19) ^ (v163 >> 28);
  v166 = v147 ^ v154;
  *((_QWORD *)&v167 + 1) = v158 & ~v156 ^ v166;
  *(_QWORD *)&v167 = *((_QWORD *)&v167 + 1) ^ 0x67A03F47EDFD3E5ELL;
  v168 = v147 ^ v162 ^ v156 & ~v166 ^ 0xAE7D72A59B361DFCLL;
  v169 = v156 ^ *((_QWORD *)&v167 + 1) ^ 0x9CCA9ACA596472A0 ^ (__ROR8__(__ROR8__(v156 ^ v158, 49) ^ 0x5C16390997F57536, 15) ^ 0x159347D38DECD015) & v160;
  v170 = (v163 << 36) & 0x4000000000;
  v171 = (v167 >> 1) ^ *((_QWORD *)&v167 + 1) ^ 0x67A03F47EDFD3E5ELL ^ ((*((_QWORD *)&v167 + 1) ^ 0x67A03F47EDFD3E5EuLL) >> 6) ^ ((*((_QWORD *)&v167 + 1) ^ 0x67A03F47EDFD3E5ELL) << 58);
  if ((v164 & v170) != 0)
    v170 = -v170;
  v172 = (v170 + v164) ^ (v163 << 36) & 0xFFFFFFBFFFFFFFFFLL;
  v173 = v168 ^ __ROR8__(v168, 61) ^ (v168 >> 39) ^ (v168 << 25);
  v174 = v169 ^ __ROR8__(v169, 10) ^ (v169 >> 17) ^ (v169 << 47);
  v165 = v161 ^ 0x3548F5C53C294B00;
  v175 = ((v165 >> 41) | (v161 << 57)) ^ (v165 << 23) ^ ((((v165 ^ -(uint64_t)v165 ^ (v165 - (v165 ^ -(uint64_t)v165)))
                                                         + v165) ^ ((((v161 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v165)
                                                                  + ((v161 ^ 0x3548F5C53C294B00uLL) >> 7)
                                                                  - 2 * (((v161 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v165)))
                                                       + ((v161 ^ 0x3548F5C53C294B00uLL) >> 7));
  v176 = v175 ^ v174;
  v177 = v175 ^ v172;
  v178 = v175 ^ v172 ^ v171 & ~v173;
  v179 = v173 & ~(v175 ^ v172) ^ v175 ^ v174;
  v180 = v179 + (v178 ^ 0x4D060D9B6336773BLL) - 2 * ((v178 ^ 0x4D060D9B6336773BLL) & v179);
  v181 = __ROR8__(v180, 28) ^ (v180 << 45) ^ ((v180 >> 19) & 0x1D5D80B9A53ELL ^ v180 & 0xC6D5BD5D80B9A53ELL | (v180 >> 19) & 0x2A27F465AC1 ^ v180 & 0x392A42A27F465AC1);
  **(_BYTE **)(v10 + 8216) = v181 - ((2 * v181) & 0x60) - 80;
  v21[54] = BYTE4(v181);
  *(_BYTE *)(v19 + 1) = BYTE5(v181);
  v182 = v173 ^ v174 & ~(v173 ^ v171) ^ 0x9F6C7F18AE9A2457 ^ v178;
  v183 = v182 ^ (v182 >> 61) ^ (v182 >> 39) ^ (8 * v182);
  *v27 = v183;
  *v33 = BYTE2(v183) - ((2 * BYTE2(v183)) & 0x60) - 80;
  v21[90] = BYTE2(v181);
  *(_BYTE *)(v19 + 12) = BYTE1(v181);
  v17[24] = BYTE6(v181);
  v17[14] = BYTE1(v183);
  **(_BYTE **)(v10 + 8224) = BYTE3(v181) - ((2 * BYTE3(v181)) & 0x60) - 80;
  v21[1] = HIBYTE(v181);
  v184 = v183 ^ (v182 << 25);
  v21[36] = BYTE3(v184);
  v185 = *(_BYTE *)(*(_QWORD *)(v10 + 9688) + (((v184 >> 27) & 0xE0 | (v184 >> 35) & 0x1F) ^ 0x88));
  v27[6] = BYTE6(v184);
  v186 = v175 & ~v174 ^ v173 ^ v171;
  v187 = v186 ^ 0xEDF3F080C7FF14BCLL ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) << 58) ^ (((v186 ^ 0xEDF3F080C7FF14BCLL) >> 6) | (v186 << 63));
  *(_BYTE *)(v19 + 7) = (v186 ^ 0xC7FF14BC ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 24;
  v21[74] = BYTE4(v187);
  v21[51] = BYTE5(v184);
  v21[7] = (unsigned __int16)(v186 ^ 0x14BC ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 8;
  v21[20] = v186 ^ 0xBC ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v186 ^ 0xEDF3F080C7FF14BCLL) >> 6);
  *(_BYTE *)(v19 + 13) = HIBYTE(v184);
  v188 = (v172 ^ v174) + (v177 | ~v176);
  if (v75)
    v189 = v188 + 1;
  else
    v189 = v177;
  v190 = __ROR8__(__ROR8__(v179, 43) ^ __ROR8__(v186 ^ v174 ^ v179 ^ v189 & ~v176, 43) ^ 0x1632D02E588C9E02, 21) ^ 0x2771B2465AE27B69;
  v191 = v190 ^ __ROR8__(v190, 10) ^ (v190 >> 17);
  *(_BYTE *)(v19 + 14) = BYTE2(v191);
  *(_BYTE *)(v19 + 2) = BYTE2(v187);
  v17[17] = (v185 ^ ((v184 >> 27) & 0xE0 | (v184 >> 35) & 0x1F) ^ 0x4D) - 65;
  v17[26] = BYTE1(v191);
  *(_BYTE *)(v19 + 6) = BYTE5(v187);
  v192 = v179 ^ 0x7A845D75A8E0B07DLL ^ __ROR8__(v179 ^ 0x7A845D75A8E0B07DLL, 7) ^ ((v179 ^ 0x7A845D75A8E0B07DLL) >> 41);
  v21[58] = v192;
  v17[19] = HIBYTE(v187);
  v17[1] = BYTE3(v191);
  v17[9] = v191;
  v193 = v191 ^ (v190 << 47);
  v21[19] = BYTE6(v193);
  v17[37] = BYTE1(v192);
  v21[17] = HIBYTE(v193);
  v17[15] = BYTE4(v191);
  v21[92] = BYTE6(v187);
  v17[32] = BYTE5(v193);
  v194 = v192 ^ ((v179 ^ 0x7A845D75A8E0B07DLL) << 23);
  v17[23] = BYTE2(v194);
  v195 = *(_BYTE *)(v35
                  + ((((v192 ^ ((v179 ^ 0xA8E0B07D) << 23)) >> 24) - 100) ^ 0xC0));
  *(_DWORD *)(v10 + 12364) = v59;
  v21[59] = BYTE4(v194);
  v21[82] = BYTE6(v194);
  v17[2] = BYTE5(v194);
  v17[8] = -7 * (v195 ^ 0x4C);
  v17[18] = HIBYTE(v194);
  *(_DWORD *)(**(_QWORD **)(v10 + 9352) + 8) = v59 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v10 + 9744)
                                        + 8 * ((120 * (v16 > 0xFu)) ^ (*(_DWORD *)(v10 + 9736) + 1912)))
                            - 12))();
}

uint64_t sub_1002FA3E8()
{
  char v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v5 + 4047) = v0 ^ 0xF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((11090
                                          * ((((v1 - 4927) | 0x144) ^ 0xFFFFFEB5)
                                           + v2
                                           + ((((v1 - 4927) | 0x144) + 1087) ^ (v4 + 1412) ^ 0x1382B47A) > 7)) ^ ((v1 - 4927) | 0x144)))
                            - 8))();
}

uint64_t sub_1002FA46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  char v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(v10 + 4078) = v6 ^ 0xF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((13
                                          * (v7 - 1765825435 < ((((v5 + 3752) | 0x803) - a5 - 2349) ^ (v9 - 1994) ^ (2 * ((v5 + 3752) | 0x803)) ^ 0x203Cu))) ^ ((v5 + 3752) | 0x803)))
                            - 12))();
}

void sub_1002FA4A0()
{
  JUMPOUT(0x1002FA41CLL);
}

uint64_t sub_1002FA518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 1288)
           + ((v4 - 1371186385) & 0x51BAAFE9 ^ 0xFFFFFFFFFFFFFEACLL)
           - v6
           + (v4 + 2698)) = v7 >> v5;
  return (*(uint64_t (**)(_QWORD))(a4 + 8 * (v4 ^ (55 * (v6 == 31)))))(0);
}

uint64_t sub_1002FA584(uint64_t a1, char a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 9744)
                                                     + 8
                                                     * ((10682
                                                       * (v3 + (((a2 - 1) | -a2) & 8) == ((a3 - 2698) ^ 0x2B0))) ^ (a3 - 1008))))(a1, ((a3 - 1008) ^ 0x92BLL) + v4);
}

uint64_t sub_1002FA5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2
                                                     + 8
                                                     * ((((a3 - 1690) ^ 0x296A) * (*(_DWORD *)(v5 + 9152) > v4)) ^ a3)))(a1, v3);
}

uint64_t sub_1002FA610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002FA518(a1, v4, a3, a4);
}

uint64_t sub_1002FA644(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v6 + 9416) = (v4 + 85786355) | 0x80201010;
  *(_BYTE *)(*(_QWORD *)(v6 + 1208) - a1 + 31) = v3 >> v2;
  v7 = *(uint64_t (**)(uint64_t))(v5 + 8 * (v4 ^ (947 * (a1 != 31))));
  *(_DWORD *)(v6 + 9464) = 994009719;
  *(_DWORD *)(v6 + 4040) = 70;
  *(_QWORD *)(v6 + 9456) = *(_QWORD *)(v6 + 7048);
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 2160);
  *(_DWORD *)(v6 + 7944) = a2;
  *(_DWORD *)(v6 + 5344) = *(_DWORD *)(v6 + 6072);
  *(_DWORD *)(v6 + 5340) = *(_DWORD *)(v6 + 7616);
  *(_DWORD *)(v6 + 5348) = *(_DWORD *)(v6 + 6084);
  *(_DWORD *)(v6 + 5336) = *(_DWORD *)(v6 + 6080);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 6976);
  *(_DWORD *)(v6 + 9616) = *(_DWORD *)(v6 + 7096);
  *(_DWORD *)(v6 + 9600) = *(_DWORD *)(v6 + 7020);
  *(_DWORD *)(v6 + 9488) = *(_DWORD *)(v6 + 7064);
  *(_DWORD *)(v6 + 9472) = *(_DWORD *)(v6 + 7136);
  *(_DWORD *)(v6 + 4292) = *(_DWORD *)(v6 + 8280);
  *(_DWORD *)(v6 + 5312) = *(_DWORD *)(v6 + 9680);
  return v7(a1 + 1);
}

uint64_t sub_1002FA748(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                                              + 8 * (((v1 == 32) * ((v2 ^ 0xCBD) + 10902)) ^ v2))
                                                  - 4))(a1, *(unsigned int *)(v3 + 8548));
}

uint64_t sub_1002FA77C@<X0>(unsigned int a1@<W1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (22 * (a1 > a2)))) - (v2 - 3221) + 272))();
}

uint64_t sub_1002FA7AC(uint64_t a1, int a2)
{
  return sub_1002FA644(a1, a2);
}

uint64_t sub_1002FA7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return sub_1002FAD90(a1, a2, a3, a4, v5 + 3 * (v4 ^ 0x1A17u) - 822);
}

uint64_t sub_1002FA810()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 < 2) ^ ((v0 ^ 0xBF) - 112)) & 1 | (8
                                                                                         * (((v1 < 2) ^ ((v0 ^ 0xBF) - 112)) & 1))) ^ v0 ^ 0x3BFu)))();
}

uint64_t sub_1002FA844(uint64_t a1, char a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 - 59733403) & 0x38F787B ^ 0x288D) * (a2 != 2)) ^ (v2 - 544)))
                            - ((v2 - 741574006) & 0x2C337F3E)
                            + 7982))();
}

uint64_t sub_1002FA8B8(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((381
                                                                 * (((v2 == 1302587220) ^ (v1 - 77)) & 1)) ^ v1))
                                                   - 12))(a1, 1);
}

void sub_1002FA8FC()
{
  JUMPOUT(0x1002FA7F4);
}

uint64_t sub_1002FA93C(uint64_t a1, char a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 - 8561) | 0x2390) ^ (74 * (a2 == 0))))
                            - ((((v2 - 8561) | 0x2390u) - 8340) ^ 0x6F8)))();
}

uint64_t sub_1002FA9AC(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((((((v1 - 6095) | 0x1828) - 5313) ^ 0x9A2)
                                                                 * (v2 == 1302587220)) ^ v1))
                                                   - 4))(a1, 1);
}

void sub_1002FA9F4()
{
  JUMPOUT(0x1002FAA54);
}

uint64_t sub_1002FAAC0@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(void);

  *(_BYTE *)(a1 + 4016) = (v6 + v2 + 92 - 82) ^ a2 ^ 0xE3;
  v7 = *(uint64_t (**)(void))(v5
                           + 8
                           * ((1416 * (v4 + v2 - 5284 - 1302589614 >= (((v2 - 7158) | 0xDA5) ^ 0xFADu))) ^ (v2 - 5284)));
  *(_DWORD *)(v3 + 9688) = 2;
  return v7();
}

void sub_1002FAC6C()
{
  JUMPOUT(0x1002FACD8);
}

void sub_1002FACA0()
{
  JUMPOUT(0x1002FACB4);
}

void sub_1002FAD34()
{
  JUMPOUT(0x1002FAD88);
}

uint64_t sub_1002FAD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, char a7)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  *(_BYTE *)(a1 + 4078) = a7 ^ 0xF4;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((3573 * ((v9 - 1302587220) > 7)) ^ v7))
                          - (a5 ^ 0x853D1013));
  *(_DWORD *)(v8 + 9688) = 4;
  return v11();
}

uint64_t sub_1002FADE8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  *(_BYTE *)(*(_QWORD *)(v1 + 8448) + 13) = v3 ^ 0xF4;
  v6 = *(uint64_t (**)(void))(v5
                           + 8
                           * (int)(((((a1 - 80) ^ ((v2 - 1302587228) < 8)) & 1)
                                  * (v4 + ((a1 - 1107495456) & 0xC73FF437) - 721)) ^ (a1 - 7341)));
  *(_DWORD *)(v1 + 9688) = 5;
  return v6();
}

void sub_1002FB2EC()
{
  JUMPOUT(0x1002FB35CLL);
}

void sub_1002FB3C0()
{
  JUMPOUT(0x1002FB3F4);
}

uint64_t sub_1002FB450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1002FB47C(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_1002FB47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  *(_BYTE *)(*(_QWORD *)(v8 + 8448) + 106) = a7 ^ (((v7 - 32) | 1) - 35);
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v10
                                      + 8
                                      * (((16 * ((v9 - 1302587220) > 7)) | (((v9 - 1302587220) > 7) << 7)) ^ v7))
                          - 4);
  *(_DWORD *)(v8 + 9688) = 8;
  return v11();
}

uint64_t sub_1002FB4EC@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t (*v7)(void);

  v5 = (v1 - 1308304896) & 0x4DFAFF76;
  v6 = (v3 - 1302587228) ^ (((a1 >> 8) & 0x30C9231B ^ 0x3081031A | (a1 >> 8) & 0x30C9231B ^ 0x482001) - 71967792);
  *(_BYTE *)(*(_QWORD *)(v2 + 8448) + 137) = a1 ^ 0xF4;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                     + 8
                                     * ((1784
                                       * (((2 * v6) & 0xDFE7DEFE ^ 0x58E5DCD6)
                                        + (v6 ^ (((v5 - 1916800895) & 0xF77D1C5F) - 1102052995))
                                        - 1878257535 >= (v5 ^ 0xDC3u) - 3821)) ^ v5))
                         - 4);
  *(_DWORD *)(v2 + 9688) = 9;
  return v7();
}

uint64_t sub_1002FB624@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  *(_BYTE *)(*(_QWORD *)(v3 + 8448) + 168) = v4 ^ 0xF4;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((50 * ((v1 - 1878257543) > 7)) ^ ((a1 - 2933) | 0x410)))
                         - ((((a1 - 2933) | 0x410) ^ 0x13Du)
                          + ((((a1 - 2933) | 0x410u) - v2 - 1660) ^ 0xFFFFFFFF7AC2E94CLL)));
  *(_DWORD *)(v3 + 9688) = 10;
  return v6();
}

void sub_1002FB664()
{
  JUMPOUT(0x1002FB6B0);
}

uint64_t sub_1002FB6D4()
{
  return sub_100324B5C();
}

uint64_t sub_1002FB704(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  *(_BYTE *)(*(_QWORD *)(v7 + 7832) + (31 - v3)) = v6 >> (v5 & (((v4 - 71) | 0x82) ^ 0x75));
  v8 = 149;
  if ((v3 + 1) < 0x20)
    v8 = 21;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(a1
                                     + 8
                                     * (((*(_BYTE *)(*(_QWORD *)(v7 + 9704) + v8) == 88)
                                       * (((v4 - 953120365) & 0x38CF6EFF) - 3763)) ^ v4))
                         - 12);
  *(_DWORD *)(v7 + 7944) = a3;
  *(_QWORD *)(v7 + 8264) = *(_QWORD *)(v7 + 7824);
  return v9();
}

uint64_t sub_1002FB798(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744)
                              + 8
                              * (int)(((v4 != ((a4 + 590372677) & 0xDCCF967F) - 5679)
                                     * (((a4 + 244652400) & 0xF16AE69D) - 8326)) ^ a4)))();
}

uint64_t sub_1002FB7F8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v3 - 1924252233) & 0x72B1B7FF ^ 0x1FB1) * (a3 > v4)) ^ v3)))();
}

uint64_t sub_1002FB838(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1002FB704(a1, a2, a3);
}

void sub_1002FB87C(char a1@<W4>, int a2@<W5>, int a3@<W6>, int a4@<W7>, char a5@<W8>)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;

  v12 = a1 + a5 - 70;
  v13 = *(_DWORD *)(v6 + 7296);
  if (a4 == (v12 ^ 0x3E))
    v13 = v8;
  *(_DWORD *)(v6 + 7484) = v13;
  v14 = *(_DWORD *)(v6 + 7416);
  if (a4 != (v12 ^ 0x3E))
    v14 = v8;
  *(_DWORD *)(v6 + 7432) = v14;
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8332) = v7;
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 7436) = *(_DWORD *)(v6 + 7192);
  *(_DWORD *)(v6 + 7456) = v11;
  *(_DWORD *)(v6 + 9328) = *(_DWORD *)(v6 + 7312);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 7500) = v10;
  *(_DWORD *)(v6 + 9424) = v9;
  *(_DWORD *)(v6 + 7616) = v5;
  *(_DWORD *)(v6 + 8760) = *(_DWORD *)(v6 + 7344);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 7464) = a3;
  *(_DWORD *)(v6 + 7488) = *(_DWORD *)(v6 + 7184);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 7480) = *(_DWORD *)(v6 + 7304);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 9248) = a2;
  *(_DWORD *)(v6 + 7476) = *(_DWORD *)(v6 + 7288);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 9080) = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7328);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 0x2000) = *(_DWORD *)(v6 + 7112);
  *(_DWORD *)(v6 + 9528) = *(_DWORD *)(v6 + 7208);
  *(_DWORD *)(v6 + 7460) = *(_DWORD *)(v6 + 7408);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 7440) = *(_DWORD *)(v6 + 7160);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 9008) = *(_DWORD *)(v6 + 7320);
  *(_DWORD *)(v6 + 7452) = *(_DWORD *)(v6 + 9736);
  *(_DWORD *)(v6 + 9408) = *(_DWORD *)(v6 + 7336);
  *(_DWORD *)(v6 + 8704) = *(_DWORD *)(v6 + 7200);
  *(_DWORD *)(v6 + 9012) = *(_DWORD *)(v6 + 8236);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  if (a4 == (v12 ^ 0x3E))
    v15 = *(_QWORD *)(v6 + 2336);
  else
    v15 = *(_QWORD *)(v6 + 2992);
  if (a4 == (v12 ^ 0x3E))
    v16 = 59;
  else
    v16 = 58;
  *(_QWORD *)(v6 + 9680) = *(_QWORD *)(v6 + 7880);
  v17 = *(_DWORD *)(v6 + 8312);
  v18 = *(_QWORD *)(v6 + 9680);
  *(_QWORD *)(v6 + 8160) = v18;
  *(_QWORD *)(v6 + 9600) = v18;
  *(_QWORD *)(v6 + 8168) = v15;
  *(_QWORD *)(v6 + 9608) = v15;
  *(_DWORD *)(v6 + 8828) = *(_DWORD *)(v6 + 8764);
  *(_DWORD *)(v6 + 8860) = *(_DWORD *)(v6 + 8768);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 8980) = *(_DWORD *)(v6 + 8748);
  *(_DWORD *)(v6 + 8792) = *(_DWORD *)(v6 + 8736);
  *(_DWORD *)(v6 + 8816) = *(_DWORD *)(v6 + 8728);
  *(_DWORD *)(v6 + 8628) = *(_DWORD *)(v6 + 8744);
  *(_DWORD *)(v6 + 8968) = *(_DWORD *)(v6 + 8720);
  *(_DWORD *)(v6 + 9256) = *(_DWORD *)(v6 + 8760);
  *(_DWORD *)(v6 + 9480) = *(_DWORD *)(v6 + 8752);
  *(_DWORD *)(v6 + 8868) = *(_DWORD *)(v6 + 8712);
  *(_DWORD *)(v6 + 8840) = *(_DWORD *)(v6 + 8696);
  *(_DWORD *)(v6 + 8152) = v17;
  *(_DWORD *)(v6 + 9664) = v17;
  *(_DWORD *)(v6 + 8864) = *(_DWORD *)(v6 + 8688);
  *(_DWORD *)(v6 + 8808) = *(_DWORD *)(v6 + 8680);
  *(_DWORD *)(v6 + 9056) = *(_DWORD *)(v6 + 9136);
  *(_DWORD *)(v6 + 8848) = *(_DWORD *)(v6 + 8672);
  *(_DWORD *)(v6 + 9632) = *(_DWORD *)(v6 + 9080);
  *(_DWORD *)(v6 + 8992) = *(_DWORD *)(v6 + 8664);
  *(_DWORD *)(v6 + 9172) = *(_DWORD *)(v6 + 9432);
  *(_DWORD *)(v6 + 9616) = v8;
  *(_DWORD *)(v6 + 8548) = v8;
  *(_DWORD *)(v6 + 9624) = *(_DWORD *)(v6 + 9264);
  *(_DWORD *)(v6 + 8776) = *(_DWORD *)(v6 + 8656);
  *(_DWORD *)(v6 + 9004) = *(_DWORD *)(v6 + 8648);
  *(_DWORD *)(v6 + 8784) = *(_DWORD *)(v6 + 8640);
  *(_DWORD *)(v6 + 9156) = *(_DWORD *)(v6 + 9008);
  *(_DWORD *)(v6 + 9224) = *(_DWORD *)(v6 + 9400);
  *(_DWORD *)(v6 + 9064) = *(_DWORD *)(v6 + 8704);
  *(_DWORD *)(v6 + 8280) = v16;
  *(_DWORD *)(v6 + 8544) = *(_DWORD *)(v6 + 9392);
  *(_DWORD *)(v6 + 9240) = *(_DWORD *)(v6 + 9012);
  *(_DWORD *)(v6 + 8800) = *(_DWORD *)(v6 + 8632);
  *(_DWORD *)(v6 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

void sub_1002FBA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, int a6, int a7, int a8)
{
  char v8;
  int v9;
  _DWORD *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v16 = v10[779];
  if (a8 == (a5 + v8 - 51))
    v16 = v12;
  v10[779] = v16;
  v17 = v10[1834];
  if (a8 != (a5 + v8 - 51))
    v17 = v12;
  v10[2352] = v17;
  v10[2008] = v10[2020];
  v10[2083] = v11;
  v10[2191] = v10[2207];
  v10[2192] = v10[2215];
  v10[1859] = v10[1798];
  v10[1864] = v15;
  v10[2332] = v10[1828];
  v10[1998] = v10[2016];
  v10[2187] = v10[2245];
  v10[2184] = v10[2198];
  v10[2182] = v10[2204];
  v10[2186] = v10[2157];
  v10[2180] = v10[2242];
  v10[1875] = v14;
  v10[2356] = v13;
  v10[1904] = v9;
  v10[2190] = v10[1836];
  v10[2188] = v10[2034];
  v10[1866] = a7;
  v10[1872] = v10[1796];
  v10[2178] = v10[2217];
  v10[2174] = v10[2210];
  v10[1871] = v10[1824];
  v10[2360] = v10[2276];
  v10[1870] = v10[1826];
  v10[2172] = v10[2216];
  v10[2170] = v10[2202];
  v10[2312] = a6;
  v10[1869] = v10[1822];
  v10[2005] = v10[2010];
  v10[1858] = v10[1854];
  v10[2006] = v10[2029];
  v10[2168] = v10[2212];
  v10[2270] = v10[2268];
  v10[2000] = v10[1832];
  v10[2166] = v10[2248];
  v10[1996] = v10[2068];
  v10[2002] = v10[2014];
  v10[2358] = v10[2293];
  v10[2048] = v10[1778];
  v10[2382] = v10[1802];
  v10[1865] = v10[1852];
  v10[2316] = v10[2406];
  v10[2164] = v10[2194];
  v10[2162] = v10[2251];
  v10[1860] = v10[1790];
  v10[2160] = v10[2196];
  v10[2252] = v10[1830];
  v10[1863] = v10[2434];
  v10[2176] = v10[1800];
  v10[2253] = v10[2059];
  v10[2158] = v10[2200];
  JUMPOUT(0x1002FBA38);
}

void sub_1002FBC10()
{
  JUMPOUT(0x1002FB6E8);
}

uint64_t sub_1002FBC54@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned __int8 **v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 v15;
  uint64_t v16;
  unint64_t v17;
  unsigned __int8 *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  _BYTE *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unsigned __int8 v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unsigned int v46;
  char v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __int128 v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  __int128 v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  __int128 v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  __int128 v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  __int128 v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  __int128 v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  char v189;

  v6 = (v2 | 0x148) ^ 0x853D115A;
  *(_QWORD *)(v5 + 6776) = HIDWORD(a2) ^ 0xB2C9C9BEAA5293E9;
  *(_DWORD *)(v5 + 4124) = (v6 + 1334804866) ^ v3;
  v7 = *(_QWORD *)(v5 + 6832);
  *(_DWORD *)(v5 + 6812) = v4;
  v8 = *(unsigned __int8 ***)(v5 + 9336);
  v9 = *(_DWORD *)(v5 + 8304);
  v10 = *(_DWORD *)(v5 + 8300);
  v11 = *(_DWORD *)(v5 + 8308);
  v12 = *(_QWORD *)(v5 + 8240);
  v13 = *(_QWORD *)(v5 + 9280);
  *(_QWORD *)(v5 + 9504) = v7;
  *(_QWORD *)(v5 + 9280) = v13;
  *(_QWORD *)(v5 + 8240) = v12;
  *(_DWORD *)(v5 + 8308) = v11;
  *(_DWORD *)(v5 + 8300) = v10;
  *(_DWORD *)(v5 + 8304) = v9;
  v14 = *v8;
  v15 = ((*v8)[14] >> 3) | (32 * (*v8)[14]);
  v16 = **(_QWORD **)(v5 + 9352);
  v17 = (unint64_t)*(unsigned __int8 *)(v16 + 12) << 8;
  v18 = *(unsigned __int8 **)(v5 + 9712);
  v19 = v17 & 0x1000 | ((unint64_t)v18[90] << 16);
  v20 = (unint64_t)(*v8)[24] << 48;
  v21 = (**(_BYTE **)(v5 + 8224) ^ (v6 - 103));
  *(_DWORD *)(v5 + 9664) = v6 + 2059600627;
  v22 = (**(_BYTE **)(v5 + 8216) ^ (v6 - 103)) | v17 & 0xFFFFFFFFFFFFEFFFLL;
  LOBYTE(v17) = v18[36];
  LOBYTE(v11) = (2 * v17) & 0x38;
  v23 = **(unsigned __int8 ***)(v5 + 8144);
  v24 = v17 ^ 0x9C;
  *(_DWORD *)(v5 + 9736) = v6 + 2059596029;
  v25 = *(_QWORD *)(a1 + 8 * (int)(v6 + 2059595782));
  v26 = *(unsigned __int8 *)(v16 + 1);
  LOBYTE(v6) = v11 + v24;
  v27 = v18[20];
  v28 = (v14[8] >> 1) | (v14[8] << 7);
  *(_QWORD *)(v5 + 9688) = v25 + 283;
  v29 = *(_BYTE **)(v5 + 7840);
  v30 = v19 | v22 | (v21 << 24);
  v31 = v25 + 540;
  LOBYTE(v12) = *(_BYTE *)(v25 + 540 + (v6 ^ 0xC0));
  LOBYTE(v9) = (v15 ^ 0x4D ^ *(_BYTE *)(v25 + 283 + (v15 ^ 0x88))) - 65;
  v32 = (unint64_t)*(unsigned __int8 *)(v16 + 13) << 56;
  v33 = v30 | ((unint64_t)v18[54] << 32);
  v34 = v12 ^ 0x4C;
  v35 = v14[26];
  v36 = v33 | v20 | (v26 << 40);
  v37 = v32 ^ (0xFF00000000000000 * *(unsigned __int8 *)(v16 + 13));
  v38 = *v23 | (unint64_t)(unsigned __int16)(v9 << 8) | ((*v29 ^ 0xB0) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(-7 * (v12 ^ 0x4C)) << 24);
  v39 = v38 | ((unint64_t)v14[17] << 32) | ((unint64_t)v18[51] << 40) | ((unint64_t)v23[6] << 48);
  v40 = v36 + ((unint64_t)v18[1] << 56);
  v41 = v39 + v37 + v39 - (v39 ^ v32) - 2 * ((v39 - (v39 ^ v32)) & v37);
  v42 = v14[9] | ((unint64_t)(-7
                                                    * (*(_BYTE *)(v25 + 540 + ((v35 - 100) ^ 0xC0)) ^ 0x4C)) << 8);
  v43 = v27 | ((unint64_t)v18[7] << 8) | ((unint64_t)*(unsigned __int8 *)(v16 + 2) << 16) | ((unint64_t)v18[92] << 48) | ((unint64_t)v14[19] << 56) | ((unint64_t)v18[74] << 32) | ((unint64_t)*(unsigned __int8 *)(v16 + 7) << 24) | ((unint64_t)*(unsigned __int8 *)(v16 + 6) << 40);
  v44 = (v42 ^ -(uint64_t)v42 ^ (((2 * (-1816793845 - (int)v42)) & 0x25EALL)
                              + ((0x9861D82593B5ED0BLL - v42) ^ 0x679E27DA6C4A12F5)))
      + ((unint64_t)*(unsigned __int8 *)(v16 + 14) << 16);
  v45 = ((unint64_t)v14[15] << 32) | ((unint64_t)v14[1] << 24) | ((unint64_t)v14[32] << 40);
  v46 = *(unsigned __int8 *)(v25 + (v28 ^ 0x54) + 12);
  if (v38)
    v47 = (v46 >> 2) ^ 0x11;
  else
    v47 = 46;
  v48 = v47 & (v46 >> 2) ^ ((v46 >> 2) & 0xD1 | ((_BYTE)v46 << 6));
  v49 = (unint64_t)v18[19] << 48;
  v50 = v44 ^ v45;
  v51 = v44 & v49;
  v52 = (v44 ^ v45) + v49;
  v53 = *(unsigned int *)(v16 + 8);
  v54 = v52 - 2 * v51;
  v55 = v41 ^ v53;
  v56 = (((unint64_t)v14[23] << (v35 & 0x10) << (v35 & 0x10 ^ 0x10u)) | ((unint64_t)v14[37] << 8) | ((unint64_t)v14[18] << 56)) ^ (((unint64_t)v14[2] << 40) | ((unint64_t)v18[82] << 48) | ((unint64_t)v18[59] << 32) | v18[58]) ^ ((unint64_t)((v48 ^ 0x29 ^ (-16 * v48)) + 31) << 24);
  v57 = v41 ^ v53 ^ v43 ^ 0xA016BC24B7A8D977;
  v58 = v56 ^ v40;
  v59 = v54 ^ ((unint64_t)v18[17] << 56);
  v60 = v58 ^ 0x9AF652FDFA97F854 ^ v41 ^ v53 ^ 0x7EFD6E4BA10EA42ELL;
  v61 = v58 ^ 0x9AF652FDFA97F854 | v41 ^ v53 ^ 0x7EFD6E4BA10EA42ELL;
  v62 = v56 + (v59 ^ 0x66B42170FA29716ALL) - 2 * (v56 & (v59 ^ 0x66B42170FA29716ALL));
  v63 = (v55 ^ v43 ^ 0xA016BC24B7A8D977) & (v55 ^ 0x810291B45EF15BD1);
  v64 = v58 ^ 0x6509AD02056807ABLL;
  if ((v50 & 0x80000000000) != 0)
    v65 = 0xFFFFF80000000000;
  else
    v65 = 0x80000000000;
  v66 = __ROR8__(v60, 13) ^ __ROR8__(v61, 13) ^ 0x26CE55904FD957C9;
  v67 = (v62 ^ 0x1B8739A505B5424CLL) & (((v59 ^ 0x66B42170FA29716ALL) + v65) ^ 0xFFFFF7FFFFFFFFFFLL);
  v68 = __ROR8__((v59 ^ 0x66B42170FA29716ALL) & (v55 ^ v43 ^ 0x5FE943DB48572688), 21) ^ __ROR8__(v55 ^ 0x7EFD6E4BA10EA42ELL, 21);
  v69 = v68 ^ 0x9B737ED6E9D64B97;
  v70 = v62 ^ 0x1B8739A505B5424CLL ^ __ROR8__(v66, 51);
  v71 = (v69 << 21) & 0xFEFFFFFFFFE00000 ^ v64 ^ v63 ^ ((v69 << 21) & 0x100000000000000 | (v68 >> 43) | 0xDADD3AC972E00000);
  v72 = (((v71 ^ 0x42AC0DFF18EAF909) + (v71 | 0xBD53F200E71506F6) + 1) ^ 0x9850F000A1010482)
      + (v71 & 0x42AC0DFF18EAF909 ^ 0x2A8092400E25101);
  v73 = v67 ^ v57;
  *((_QWORD *)&v74 + 1) = v73 ^ -(uint64_t)v73 ^ ((v73 ^ 0x71F90AAF4B015B75) - 0x71F90AAF4B015B75);
  *(_QWORD *)&v74 = *((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76;
  v75 = v72 ^ (-7 * (*(_BYTE *)(v31 + (((v72 >> 61) + 156) ^ 0xC0)) ^ 0x4C)) ^ (8 * v72) ^ (v72 >> 39) ^ (v72 << 25);
  v76 = v59 ^ (v62 ^ 0xE478C65AFA4ABDB3) & v64 ^ v73 ^ 0x5C15CA165129E222;
  v77 = v76 >> (v55 & 0xA) >> (v55 & 0xA ^ 0xA);
  v78 = v70 ^ v64 ^ v63;
  v79 = v70 ^ 0xDBD18B5A517C8C71 ^ __ROR8__(v70 ^ 0xDBD18B5A517C8C71, 7) ^ ((v70 ^ 0xDBD18B5A517C8C71) >> 41);
  v80 = v79 & 0xFBEB6D2A6CB82839;
  v81 = v79 & 0x41492D59347D7C6;
  v82 = (v76 >> 17) | (v76 << 54);
  v83 = __ROR8__(__ROR8__(*((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76, 19) & 0xFFF81FFFFFFFFFFFLL ^ __ROR8__((v74 >> 1) ^ (*((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76), 13) ^ 0x17FC653716A9ADCFLL, 51) ^ ((*((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76) << 58) ^ v75;
  v84 = v76 ^ (v76 << 47);
  if ((v75 & 0x80) != 0)
    v85 = -128;
  else
    v85 = 128;
  *((_QWORD *)&v86 + 1) = v78 ^ 0xB44C5028398C2245;
  *(_QWORD *)&v86 = v78;
  v87 = v80 ^ ((v70 ^ 0xDBD18B5A517C8C71) << 23) & 0xFBEB6D2A6C800000 | v81 ^ ((v70 ^ 0xDBD18B5A517C8C71) << 23) & 0x41492D593000000;
  v88 = v84 ^ v77 ^ v82;
  v89 = v87 ^ v88;
  v90 = v78 ^ 0xB44C5028398C2245 ^ __ROR8__(v78 ^ 0xB44C5028398C2245, 19) ^ (v86 >> 28) ^ v87;
  v91 = v90 ^ 0xB44C50283;
  v92 = v75 & (v90 ^ 0xFFFFFFF4BB3AFD7CLL) ^ v87 ^ v88;
  v93 = ((v85 + v75) ^ 0xFFFFFFFFFFFFFF7FLL) & (v83 ^ 0x8CA6E2D535B9E2FFLL) ^ v91;
  v94 = v92 ^ 0xCC7BE9A4BE673377 ^ v93;
  v95 = v75 & 0x20000000000000;
  v96 = (v83 ^ 0x73591D2ACA461D00) & v88;
  v97 = v75 & 0xFFDFFFFFFFFFFFFFLL;
  if ((v96 & v95) != 0)
    v95 = -v95;
  v98 = (v95 + v96) ^ v97;
  v99 = v98 ^ v93 ^ 0xF0CC8DD092A1AF2FLL;
  *((_QWORD *)&v101 + 1) = v99;
  *(_QWORD *)&v101 = v98 ^ ~v93;
  v100 = v101 >> 61;
  v102 = v83 ^ 0x8CA6E2D535B9E2FFLL ^ v87 & ~v88;
  v103 = v102 ^ 0x5356F0674821AEC6;
  *((_QWORD *)&v101 + 1) = v102;
  *(_QWORD *)&v101 = v102 ^ 0x5356F0674821AEC6;
  v104 = v101 >> 1;
  v105 = v88 ^ 0x47C99E12AA55AA20 ^ v91 & ~v89 ^ v102;
  v106 = v105 ^ __ROR8__(v105, 10);
  v107 = (v99 >> 39) & 0x4000;
  v108 = v100 ^ v99;
  if ((v108 & v107) != 0)
    v107 = -v107;
  v109 = (v107 + v108) ^ (v99 >> 39) & 0xFFFFFFFFFFFFBFFFLL;
  v110 = v109 ^ (v99 << 25);
  *((_QWORD *)&v111 + 1) = v109;
  *(_QWORD *)&v111 = v110;
  v112 = (v111 >> 22) ^ __ROR8__(v104 ^ v103 ^ (v103 >> 6) ^ (v103 << 58), 22);
  v113 = ((0xBFBBAA5FCFDB5187 - (v92 & 0x1000000000000000)) & 0x9C81284E02D04181 ^ v92 & 0xCCC5784E02D467A9 | v92 & 0x233A87B1FD2B9856) ^ 0x233A8211CD0B1006;
  v114 = v113 ^ __ROR8__(v113, 7) ^ (v113 >> 41) ^ (v113 << 23);
  v115 = (v106 + (v105 << 47) - 2 * (v106 & (v105 << 47))) ^ (v105 >> 17);
  v116 = __ROR8__(v112 ^ 0x9319FDD7951A92DDLL, 42);
  *(_QWORD *)&v111 = __ROR8__(__ROR8__(v115, 23) ^ __ROR8__(v114, 23) ^ 0x30668A50A29F8279, 41);
  v117 = v114 ^ __ROR8__(v94, 28) ^ ((v94 ^ (v94 >> 19) ^ -(uint64_t)(v94 ^ (v94 >> 19)) ^ ((v94 << 45)
                                                                                         - (v94 ^ (v94 >> 19) ^ (v94 << 45))))
                                   + (v94 << 45));
  v118 = v111 ^ 0x28514FC13C983345;
  v119 = v116 ^ 0x75E546A4B764C67FLL ^ (v111 ^ 0x28514FC13C983345) & ~v115;
  v120 = v115 ^ 0x313BC7C92EDDA5FDLL ^ v117 & (v111 ^ 0xD7AEB03EC367CCBALL) ^ v119;
  v121 = v120 ^ __ROR8__(v120, 10);
  v122 = __ROR8__(__ROR8__(v120, 61) ^ 0x228C743FBD208966, 20) ^ 0x8966228C743FBD2;
  if (v34)
    v123 = v116 ^ 0x75E546A4B764C67FLL ^ v115;
  else
    v123 = v115;
  if (v108)
    v124 = v123;
  else
    v124 = -1;
  v125 = v122 & 0x10000000000000;
  v126 = v122 & 0xFFEFFFFFFFFFFFFFLL;
  if ((v125 & v121) != 0)
    v125 = -v125;
  v127 = v125 + v121 + v126 - 2 * ((v125 + v121) & v126);
  v128 = v110 & ~v117;
  v129 = (v116 ^ 0x75E546A4B764C67FLL) & ~v110 ^ v117;
  v130 = v128 ^ v118;
  v131 = (v129 ^ v128 ^ v118 ^ -(uint64_t)(v129 ^ v128 ^ v118) ^ ((v129 ^ v128 ^ v118 ^ 0xAC6D121EA7274154)
                                                               + 0x5392EDE158D8BEACLL))
       + 0x5392EDE158D8BEABLL;
  v132 = v110 ^ 0x4A2C537256ACF1F5 ^ v129 ^ (v116 ^ 0x8A1AB95B489B3980) & v115 & v124;
  v133 = v132 ^ __ROR8__(v132, 61) ^ (v132 >> 39) ^ (v132 << 25);
  v134 = v130 ^ 0xAD2A34AC12844DDDLL ^ __ROR8__(v130 ^ 0xAD2A34AC12844DDDLL, 7) ^ ((v130 ^ 0xAD2A34AC12844DDDLL) >> 41) ^ ((v130 ^ 0xAD2A34AC12844DDDLL) << 23);
  v135 = __ROR8__((((v119 ^ 0x802A65F49FF1DF13) & 0x3F) << 40) ^ __ROR8__(v119 ^ 0x802A65F49FF1DF13 ^ __ROR8__(v119 ^ 0x802A65F49FF1DF13, 1) ^ ((v119 ^ 0x802A65F49FF1DF13) >> 6), 18) ^ 0xC2AA087E3CE41932, 46);
  v136 = v131 & 0xFFFF7FFFFFFFFFFFLL ^ (v131 << 45) ^ (v131 >> 28) ^ (v131 << 36) ^ (v131 & 0x800000000000 | (v131 >> 19));
  v137 = v136 ^ v134;
  v138 = v133 ^ v135 ^ 0x21F8F39064CB0AA8;
  v139 = v138 & ~v133 ^ v136 ^ v134;
  v140 = v133 ^ 0xC0C4E4651798A92FLL ^ v127 & (v133 ^ v135 ^ 0xDE070C6F9B34F557) ^ v139;
  v141 = v140 ^ (v140 >> 39) ^ __ROR8__(v140, 61) ^ (v140 << 25);
  v142 = v127 ^ ~v136 ^ (v136 ^ v134 | ~(v127 ^ v134));
  *((_QWORD *)&v143 + 1) = v134 & ~v127 ^ v138;
  *(_QWORD *)&v143 = *((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6;
  v144 = v127 ^ v134 ^ v133 & ~v137;
  v145 = v144 ^ 0x76AE5B4ADE1196D6;
  v146 = v144 ^ 0x76AE5B4ADE1196D6 ^ __ROR8__(v144 ^ 0x76AE5B4ADE1196D6, 7);
  v147 = v146 ^ ((v144 ^ 0x76AE5B4ADE1196D6) >> 41);
  v148 = (v143 >> 1) ^ *((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6 ^ ((*((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6uLL) >> 6) ^ ((*((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6) << 58);
  v149 = (v142 + *((_QWORD *)&v143 + 1) - 2 * (v142 & *((_QWORD *)&v143 + 1))) ^ (v127
                                                                                - ((2 * v127) & 0x6237310441395C28)
                                                                                - 0x4EE4677DDF6351ECLL);
  v150 = v149 ^ __ROR8__(v149, 10) ^ (v149 >> 17) ^ (v149 << 47);
  v151 = v144 ^ v139 ^ 0x9D5823204F6787ADLL ^ __ROR8__(v144 ^ v139 ^ 0x9D5823204F6787ADLL, 19) ^ ((v144 ^ v139 ^ 0x9D5823204F6787ADLL) >> 28) ^ ((v144 ^ v139 ^ 0x9D5823204F6787ADLL) << 36);
  v152 = (v146 ^ (v145 << 23)) & 0xC000000000000000 | (((4 * v147) ^ (v145 << 25)) >> 2);
  if (((v69 << 21) & 0xFEFFFFFFFFE00000) != 0)
    v153 = v141;
  else
    v153 = -1;
  v154 = v151 ^ v152;
  v155 = (v150 ^ v152) + ((v154 ^ v153) & v141) - 2 * ((v150 ^ v152) & (v154 ^ v153) & v141);
  v156 = v148 & ~v141 ^ 0xC3F7FB6F0CB8251 ^ v151 ^ v152;
  v157 = v156 ^ 0xE52EAC0EC822ADFDLL ^ v155;
  v158 = v157 ^ __ROR8__(v157, 19) ^ (v157 >> 28);
  v160 = v141 ^ v148;
  *((_QWORD *)&v161 + 1) = v152 & ~v150 ^ v160;
  *(_QWORD *)&v161 = *((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5ELL;
  v162 = v141 ^ v156 ^ v150 & ~v160 ^ 0xAE7D72A59B361DFCLL;
  v163 = v150 ^ *((_QWORD *)&v161 + 1) ^ 0x9CCA9ACA596472A0 ^ (__ROR8__(__ROR8__(v150 ^ v152, 49) ^ 0x5C16390997F57536, 15) ^ 0x159347D38DECD015) & v154;
  v164 = (v157 << 36) & 0x4000000000;
  v165 = (v161 >> 1) ^ *((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5ELL ^ ((*((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5EuLL) >> 6) ^ ((*((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5ELL) << 58);
  if ((v158 & v164) != 0)
    v164 = -v164;
  v166 = (v164 + v158) ^ (v157 << 36) & 0xFFFFFFBFFFFFFFFFLL;
  v167 = v162 ^ __ROR8__(v162, 61) ^ (v162 >> 39) ^ (v162 << 25);
  v168 = v163 ^ __ROR8__(v163, 10) ^ (v163 >> 17) ^ (v163 << 47);
  v159 = v155 ^ 0x3548F5C53C294B00;
  v169 = ((v159 >> 41) | (v155 << 57)) ^ (v159 << 23) ^ ((((v159 ^ -(uint64_t)v159 ^ (v159 - (v159 ^ -(uint64_t)v159)))
                                                         + v159) ^ ((((v155 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v159)
                                                                  + ((v155 ^ 0x3548F5C53C294B00uLL) >> 7)
                                                                  - 2 * (((v155 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v159)))
                                                       + ((v155 ^ 0x3548F5C53C294B00uLL) >> 7));
  v170 = v169 ^ v168;
  v171 = v169 ^ v166;
  v172 = v169 ^ v166 ^ v165 & ~v167;
  v173 = v167 & ~(v169 ^ v166) ^ v169 ^ v168;
  v174 = v173 + (v172 ^ 0x4D060D9B6336773BLL) - 2 * ((v172 ^ 0x4D060D9B6336773BLL) & v173);
  v175 = __ROR8__(v174, 28) ^ (v174 << 45) ^ ((v174 >> 19) & 0x1D5D80B9A53ELL ^ v174 & 0xC6D5BD5D80B9A53ELL | (v174 >> 19) & 0x2A27F465AC1 ^ v174 & 0x392A42A27F465AC1);
  **(_BYTE **)(v5 + 8216) = v175 - ((2 * v175) & 0x60) - 80;
  v18[54] = BYTE4(v175);
  *(_BYTE *)(v16 + 1) = BYTE5(v175);
  v176 = v167 ^ v168 & ~(v167 ^ v165) ^ 0x9F6C7F18AE9A2457 ^ v172;
  v177 = v176 ^ (v176 >> 61) ^ (v176 >> 39) ^ (8 * v176);
  *v23 = v177;
  *v29 = BYTE2(v177) - ((2 * BYTE2(v177)) & 0x60) - 80;
  v18[90] = BYTE2(v175);
  *(_BYTE *)(v16 + 12) = BYTE1(v175);
  v14[24] = BYTE6(v175);
  v14[14] = BYTE1(v177);
  **(_BYTE **)(v5 + 8224) = BYTE3(v175) - ((2 * BYTE3(v175)) & 0x60) - 80;
  v18[1] = HIBYTE(v175);
  v178 = v177 ^ (v176 << 25);
  v18[36] = BYTE3(v178);
  v179 = *(_BYTE *)(*(_QWORD *)(v5 + 9688) + (((v178 >> 27) & 0xE0 | (v178 >> 35) & 0x1F) ^ 0x88));
  v23[6] = BYTE6(v178);
  v180 = v169 & ~v168 ^ v167 ^ v165;
  v181 = v180 ^ 0xEDF3F080C7FF14BCLL ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) << 58) ^ (((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6) | (v180 << 63));
  *(_BYTE *)(v16 + 7) = (v180 ^ 0xC7FF14BC ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 24;
  v18[74] = BYTE4(v181);
  v18[51] = BYTE5(v178);
  v18[7] = (unsigned __int16)(v180 ^ 0x14BC ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 8;
  v18[20] = v180 ^ 0xBC ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6);
  *(_BYTE *)(v16 + 13) = HIBYTE(v178);
  v182 = (v166 ^ v168) + (v171 | ~v170);
  if (v69)
    v183 = v182 + 1;
  else
    v183 = v171;
  v184 = __ROR8__(__ROR8__(v173, 43) ^ __ROR8__(v180 ^ v168 ^ v173 ^ v183 & ~v170, 43) ^ 0x1632D02E588C9E02, 21) ^ 0x2771B2465AE27B69;
  v185 = v184 ^ __ROR8__(v184, 10) ^ (v184 >> 17);
  *(_BYTE *)(v16 + 14) = BYTE2(v185);
  *(_BYTE *)(v16 + 2) = BYTE2(v181);
  v14[17] = (v179 ^ ((v178 >> 27) & 0xE0 | (v178 >> 35) & 0x1F) ^ 0x4D) - 65;
  v14[26] = BYTE1(v185);
  *(_BYTE *)(v16 + 6) = BYTE5(v181);
  v186 = v173 ^ 0x7A845D75A8E0B07DLL ^ __ROR8__(v173 ^ 0x7A845D75A8E0B07DLL, 7) ^ ((v173 ^ 0x7A845D75A8E0B07DLL) >> 41);
  v18[58] = v186;
  v14[19] = HIBYTE(v181);
  v14[1] = BYTE3(v185);
  v14[9] = v185;
  v187 = v185 ^ (v184 << 47);
  v18[19] = BYTE6(v187);
  v14[37] = BYTE1(v186);
  v18[17] = HIBYTE(v187);
  v14[15] = BYTE4(v185);
  v18[92] = BYTE6(v181);
  v14[32] = BYTE5(v187);
  v188 = v186 ^ ((v173 ^ 0x7A845D75A8E0B07DLL) << 23);
  v14[23] = BYTE2(v188);
  v189 = *(_BYTE *)(v31
                  + ((((v186 ^ ((v173 ^ 0xA8E0B07D) << 23)) >> 24) - 100) ^ 0xC0));
  *(_DWORD *)(v5 + 12364) = v53;
  v18[59] = BYTE4(v188);
  v18[82] = BYTE6(v188);
  v14[2] = BYTE5(v188);
  v14[8] = -7 * (v189 ^ 0x4C);
  v14[18] = HIBYTE(v188);
  *(_DWORD *)(**(_QWORD **)(v5 + 9352) + 8) = v53 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * ((*(_DWORD *)(v5 + 9736) + 1912) ^ 0x78)) - 12))();
}

uint64_t sub_1002FBCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((121 * (v7 == ((v8 - 32) ^ 0xE))) ^ v8)) - 12))();
}

void sub_1002FBD00(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 25) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_1002FBD10(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 24) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_1002FBD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (int)(((((v7 + 848900) | 0x85301016) ^ 0x853D17E8)
                                               * (*(_DWORD *)(v8 + 5332) != 43)) ^ v7))
                            - 4))();
}

void sub_1002FBD78(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 27) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_1002FBD88(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 26) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_1002FBD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(*(_QWORD *)(v9 + 1248) - v8 + 31) = (unint64_t)v5 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((13858 * (v8 + 1 == ((v7 - 59) ^ 0x149FLL))) ^ v7))
                            - 12))();
}

uint64_t sub_1002FBDFC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v5 == 24) * (15 * (a1 ^ 0x14DE) - 4462)) ^ a1)) - 4))();
}

uint64_t sub_1002FBE38@<X0>(int a1@<W0>, uint64_t a2@<X4>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((a1 - 190) ^ 0x17FD) * (a3 < *(_DWORD *)(v3 + 3992))) ^ a1))
                            - 4))();
}

uint64_t sub_1002FBE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002FBD98(a1, a2, a3, a4, a5);
}

uint64_t sub_1002FBE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;

  *(_BYTE *)(*(_QWORD *)(v9 + 432) - v6 + 31) = v8 >> v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a5
                                                      + 8
                                                      * ((83
                                                        * (((((v5 - 3334) | 0x431u) + 1409) ^ (47 * (v5 ^ 0x1D1Bu)))
                                                         + v6 == 32)) ^ v5))
                                          - 8))(739620895);
}

uint64_t sub_1002FBF10(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8
                                        * (int)(((v5 == 32) * ((1262 * (a2 ^ 0x14B9) + 1573100010) & 0xA23C5CFC ^ 0x211B)) ^ a2))
                            - 8))();
}

uint64_t sub_1002FBF5C@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((195 * (v2 >= *(_DWORD *)(v3 + 3988))) ^ a2)) - 8))();
}

uint64_t sub_1002FBFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002FBE9C(a1, a2, a3, a4, a5);
}

uint64_t sub_1002FBFE4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;

  *(_BYTE *)(*(_QWORD *)(v8 + 424) - v5 + 31) = a1 >> v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v5 + v10 + 143 * (v6 ^ v9) != 32) * v11) ^ v6)) - 4))();
}

uint64_t sub_1002FC054(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v5 != 32) * ((a3 ^ 0x1ED3) - 1146)) | a3)) - 8))();
}

uint64_t sub_1002FC07C@<X0>(uint64_t a1@<X4>, int a2@<W5>, int a3@<W6>, unsigned int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * (((((v4 + v6) ^ a2) + a3) * (a4 < *(_DWORD *)(v5 + 8272))) ^ (v4 + v6)))
                                         - 8))(0);
}

uint64_t sub_1002FC0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1002FBFE4(*(unsigned int *)(v5 - 0x62AA055D109F20F3), a2, a3, a4, a5);
}

uint64_t sub_1002FC0DC@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1264) - v2 + 31) = v4 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((30 * (v2 != 31)) ^ a2)) - 4))();
}

uint64_t sub_1002FC11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v5 != 32) * (v6 ^ v7)) ^ v6)) - 8))();
}

uint64_t sub_1002FC144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (int)((6 * (v9 ^ v12)) ^ ((v8 < *(_DWORD *)(v10 + 9152)) * v11)))
                            - (a8 ^ (24 * (v9 ^ v12)) ^ 0x484)))();
}

uint64_t sub_1002FC184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return sub_1002FC0DC(a5, v5 - 312);
}

uint64_t sub_1002FC1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a5
                                                              + 8
                                                              * (int)((((((v5 + 1598700079) & 0xA0B5C4BB) - 1043) | 0x150)
                                                                     + 1850) ^ (v5 + 1598700079) & 0xA0B5C4BB))
                                                  - 12))(a1, *(unsigned int *)(v6 + 8548));
}

uint64_t sub_1002FC238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(void);

  v11 = a7 + ((a5 + v8 + 140) ^ 0x94EDD333 ^ (a5 + v8 - 712)) < 0xFFFFFFF0;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((16 * v11) | (v11 << 6) | (v8 + 2059598861))) - 4);
  *(_DWORD *)(v9 + 9656) = a8;
  return v12();
}

uint64_t sub_1002FC294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  char v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unint64_t v48;
  int v49;
  int v50;
  int v51;
  unint64_t v52;
  int v53;
  unint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unint64_t v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  unint64_t v69;
  int v70;
  int v71;
  int v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  unint64_t v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unint64_t v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  unint64_t v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unint64_t v132;
  int v133;
  int v134;
  unint64_t v135;
  int v136;
  int v137;
  int v138;
  unint64_t v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  unint64_t v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  unint64_t v175;
  int v176;
  int v177;
  unint64_t v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  unint64_t v184;
  int v185;
  int v186;
  int v187;
  int v188;
  _BYTE *v190;
  _BOOL4 v191;

  *(_DWORD *)(v12 + 9528) = v16;
  v20 = *(_DWORD *)(v12 + 9624);
  v21 = v6 - 2059599665 + v15 + 31 * v20 + 1877;
  *(_DWORD *)(v12 + 9584) = *(unsigned __int8 *)(v18 + v21 - v21 / 0x196 * v19);
  v22 = *(unsigned __int8 *)(v18 + 31 * v20 + 3286 - (31 * v20 + 3286) / 0x196u * v19);
  *(_DWORD *)(v12 + 9600) = *(unsigned __int8 *)(v18 + 31 * v20 + 3317 - (31 * v20 + 3317) / 0x196u * v19);
  v23 = *(unsigned __int8 *)(v18 + 31 * v20 + 3348 - (31 * v20 + 3348) / 0x196u * v19);
  *(_DWORD *)(v12 + 9576) = *(unsigned __int8 *)(v18 + 31 * v20 + 3379 - (31 * v20 + 3379) / 0x196u * v19);
  *(_DWORD *)(v12 + 9568) = *(unsigned __int8 *)(v18 + 31 * v20 + 3410 - (31 * v20 + 3410) / 0x196u * v19);
  *(_DWORD *)(v12 + 9592) = *(unsigned __int8 *)(v18 + 31 * v20 + 3441 - (31 * v20 + 3441) / 0x196u * v19);
  *(_DWORD *)(v12 + 9608) = *(unsigned __int8 *)(v18 + 31 * v20 + 3472 - (31 * v20 + 3472) / 0x196u * v19);
  *(_DWORD *)(v12 + 9616) = *(unsigned __int8 *)(v18 + 31 * v20 + 3503 - (31 * v20 + 3503) / 0x196u * v19);
  *(_DWORD *)(v12 + 9520) = *(unsigned __int8 *)(v18 + 31 * v20 + 3534 - (31 * v20 + 3534) / 0x196u * v19);
  *(_DWORD *)(v12 + 9496) = *(unsigned __int8 *)(v18 + (31 * v20 + 3565) % 0x196u);
  *(_DWORD *)(v12 + 9664) = *(unsigned __int8 *)(v18 + (31 * v20 + 3596) % 0x196u);
  v24 = v22;
  v25 = *(unsigned __int8 *)(v18 + (31 * v20 + 3627) % 0x196u);
  *(_DWORD *)(v12 + 9148) = v17 - 16;
  v26 = *(unsigned __int8 *)(v18 + 31 * (((2 * (v20 + 13)) & 0xD2) + ((v20 + 13) ^ 0x69u)) % 0x196);
  v27 = *(_DWORD *)(v12 + 9600);
  *(_DWORD *)(v12 + 9736) = *(unsigned __int8 *)(v18 + (31 * v20 + 3689) % 0x196u);
  v28 = v23;
  v29 = *(unsigned __int8 *)(v18 + (31 * v20 + 3720) % 0x196u);
  *(_DWORD *)(v12 + 9624) = v20 + 16;
  *(_DWORD *)(v12 + 9688) = v26;
  v30 = *(_DWORD *)(v12 + 9608);
  v31 = *(_DWORD *)(v12 + 9576);
  v32 = *(_DWORD *)(v12 + 9568);
  v33 = *(_DWORD *)(v12 + 9592);
  v34 = *(_DWORD *)(v12 + 9616);
  v35 = *(_DWORD *)(v12 + 9528);
  v36 = *(_DWORD *)(v12 + 9520);
  v37 = *(_DWORD *)(v12 + 9584);
  v38 = *(_DWORD *)(v12 + 9496);
  v39 = v29;
  while (1)
  {
    v41 = v37;
    v42 = ((v37 << 16) + (v24 << 8)) & 0xFFFFFF00 | v27;
    v43 = (v32 << 8) + (v31 << 16) + v33;
    v44 = v28 + (v42 << 8);
    v45 = (v36 << 8) + (v34 << 16);
    v46 = ((_DWORD)v25 << 16) | (*(_DWORD *)(v12 + 9688) << 8);
    v47 = v46 | *(_DWORD *)(v12 + 9736);
    HIDWORD(v48) = a1;
    LODWORD(v48) = a1;
    v49 = (v48 >> 18) + (a1 >> 3);
    HIDWORD(v48) = a1;
    LODWORD(v48) = a1;
    v50 = (v48 >> 7) - v49;
    v51 = *(_DWORD *)(v12 + 9664) + ((v45 | v38) << 8);
    v52 = v39 + (v47 << 8);
    a1 = ((((v45 >> 9) - (v45 >> 11) - ((v45 | v38) >> 2) + (v51 << 15) - (v51 << 13)) ^ v50) - v51) ^ v52;
    HIDWORD(v48) = v11;
    LODWORD(v48) = v11;
    v53 = v48 >> 7;
    v54 = __PAIR64__(v10, __ROR4__(v11, 18));
    v55 = ((_DWORD)v52 << 13) + (v46 >> 11);
    v56 = (v53 ^ v54) + (v11 >> 3);
    LODWORD(v54) = v10;
    v57 = v54 >> 7;
    v11 = (v56 ^ (v47 >> 2) ^ v52 ^ ((_DWORD)v52 << 15) ^ v55 ^ (unsigned __int16)(v52 >> ((v41 & 0x11 ^ 0x11)
                                                                                         + (v41 & 0x11u))))
        - a1;
    HIDWORD(v54) = a1;
    LODWORD(v54) = a1;
    v58 = v54 >> 17;
    HIDWORD(v54) = v10;
    LODWORD(v54) = v10;
    v59 = v54 >> 18;
    HIDWORD(v54) = a1;
    LODWORD(v54) = a1;
    v60 = ((v58 - (v54 >> 19) + (a1 >> 10)) ^ (v57 - v59 + (v10 >> 3))) + a1;
    HIDWORD(v54) = v8;
    LODWORD(v54) = v8;
    v61 = v54 >> 18;
    HIDWORD(v54) = v11;
    LODWORD(v54) = v11;
    v62 = v54 >> 17;
    HIDWORD(v54) = v11;
    LODWORD(v54) = v11;
    v63 = v54 >> 19;
    v10 = v60 ^ v11;
    v64 = __PAIR64__(v60 ^ v11, __ROR4__(v8, 7));
    v65 = (v61 ^ (v8 >> 3) ^ v64) - v11 - (v11 >> 10) - v63 + v62;
    LODWORD(v64) = v10;
    v66 = v64 >> 17;
    v8 = v65 ^ v10;
    HIDWORD(v64) = a3;
    LODWORD(v64) = a3;
    v67 = v64 >> 7;
    HIDWORD(v64) = v10;
    LODWORD(v64) = v10;
    v68 = v64 >> 19;
    v69 = __PAIR64__(v9, __ROR4__(a3, 18));
    v70 = ((v68 + v66) ^ (v10 >> 10)) + (v67 ^ v69 ^ (a3 >> 3));
    LODWORD(v69) = v9;
    v71 = v69 >> 7;
    v73 = __PAIR64__(v65 ^ v10, __ROR4__(v9, 18));
    v72 = v71 ^ v73;
    LODWORD(v73) = v65 ^ v10;
    v74 = v73 >> 19;
    a3 = v70 ^ v65;
    HIDWORD(v73) = v65 ^ v10;
    LODWORD(v73) = v65 ^ v10;
    v75 = v8 ^ (v72 + (v9 >> 3)) ^ (v74 + (v73 >> 17) + (v8 >> 10));
    HIDWORD(v73) = a4;
    LODWORD(v73) = a4;
    v76 = v73 >> 7;
    HIDWORD(v73) = a4;
    LODWORD(v73) = a4;
    v9 = v75 + a3;
    v77 = v76 - (v73 >> 18);
    HIDWORD(v73) = a3;
    LODWORD(v73) = a3;
    v78 = v73 >> 19;
    HIDWORD(v73) = a3;
    LODWORD(v73) = a3;
    v79 = v77 ^ (a4 >> 3) ^ ((v73 >> 17)
                                         - ((a3 >> ((((a4 >> 3) & 0xA ^ 0xAA)
                                                                 + ((a4 >> 3) & 0xA)) & 0xE))
                                          + v78));
    HIDWORD(v73) = v75 + a3;
    LODWORD(v73) = v75 + a3;
    v80 = v73 >> 17;
    a4 = (v79 - v75);
    HIDWORD(v73) = v75 + a3;
    LODWORD(v73) = v75 + a3;
    v81 = v73 >> 19;
    HIDWORD(v73) = v7;
    LODWORD(v73) = v7;
    v82 = v73 >> 7;
    v83 = __PAIR64__(v5, __ROR4__(v7, 18));
    v84 = v82 ^ v83 ^ (v7 >> 3) ^ (v9 >> 10) ^ (v80 - v81);
    LODWORD(v83) = v5;
    v85 = v83 >> 7;
    HIDWORD(v83) = v5;
    LODWORD(v83) = v5;
    v86 = v83 >> 18;
    v7 = v84 - a4 + v9;
    HIDWORD(v83) = a4;
    LODWORD(v83) = a4;
    v87 = (v83 >> 17) ^ (a4 >> 19) ^ (a4 >> 10) ^ (a4 << (((v80 & 0x4D ^ 0x4D) + (v80 & 0x4D)) & 0x8D));
    HIDWORD(v83) = v14;
    LODWORD(v83) = v14;
    v88 = v83 >> 7;
    HIDWORD(v83) = v14;
    LODWORD(v83) = v14;
    v89 = v88 - (v83 >> 18);
    HIDWORD(v83) = v7;
    LODWORD(v83) = v7;
    v90 = v83 >> 17;
    v5 = v85 - (v86 + (v5 >> 3)) - a4 + v7 + v87;
    HIDWORD(v83) = v7;
    LODWORD(v83) = v7;
    v91 = v7 + (v89 ^ (v14 >> 3)) + (v83 >> 19) + v90;
    HIDWORD(v83) = v5;
    LODWORD(v83) = v5;
    v92 = v83 >> 17;
    HIDWORD(v83) = v5;
    LODWORD(v83) = v5;
    v93 = v92 + (v83 >> 19);
    HIDWORD(v83) = a2;
    LODWORD(v83) = a2;
    v94 = v83 >> 2;
    HIDWORD(v83) = a2;
    LODWORD(v83) = a2;
    v95 = v83 >> 22;
    v96 = __PAIR64__(a2, __ROR4__(a2, 13));
    v97 = (v94 ^ v96) - v95;
    LODWORD(v96) = a2;
    v98 = v96 >> 6;
    HIDWORD(v96) = a2;
    LODWORD(v96) = a2;
    v99 = -1477901931 - v98 - (v96 >> 25);
    HIDWORD(v96) = a2;
    LODWORD(v96) = a2;
    v100 = v99 + (v96 >> 11);
    HIDWORD(v96) = v13;
    LODWORD(v96) = v13;
    v101 = (v96 >> 7) ^ __ROR4__(v13, 18);
    v102 = (v44 ^ v100) + (v97 ^ (-3 * a2 + a5 + (a2 ^ a5)));
    HIDWORD(v96) = v102;
    LODWORD(v96) = v102;
    v103 = v96 >> 13;
    HIDWORD(v96) = v102;
    LODWORD(v96) = v102;
    v104 = v96 >> 2;
    v105 = v101 - (v13 >> 3);
    HIDWORD(v96) = v102;
    LODWORD(v96) = v102;
    v106 = v30
         + 70411279
         + (v43 << 8)
         - v102
         + v103
         + v104
         + (v96 >> 22)
         - (v102
          + a2)
         + (v102 ^ a2 ^ (v102 + a2))
         + (a2 ^ __ROR4__(v102, 6) ^ __ROR4__(v102, 11) ^ __ROR4__(v102, 25));
    HIDWORD(v96) = v106;
    LODWORD(v96) = v106;
    v107 = v96 >> 13;
    HIDWORD(v96) = v106;
    LODWORD(v96) = v106;
    v108 = v96 >> 22;
    v110 = __PAIR64__(v106, __ROR4__(v106, 2));
    v109 = v107 ^ v110;
    LODWORD(v110) = v106;
    v111 = v51 - 1979255059 - v106 + v108;
    v112 = 3 * v106 + (v110 >> 11);
    HIDWORD(v110) = v106;
    LODWORD(v110) = v106;
    v113 = v110 >> 25;
    HIDWORD(v110) = v106;
    LODWORD(v110) = v106;
    v114 = v111 + v112 + (v110 >> 6) - v113 + v109 + (v106 ^ v102 ^ (v102 - v106));
    HIDWORD(v110) = v114;
    LODWORD(v110) = v114;
    v115 = v110 >> 2;
    HIDWORD(v110) = v114;
    LODWORD(v110) = v114;
    v116 = v110 >> 13;
    HIDWORD(v110) = v114;
    LODWORD(v110) = v114;
    v117 = v115 - ((v110 >> 22) + v116);
    LOBYTE(v116) = v106 - v114;
    HIDWORD(v110) = v114;
    LODWORD(v110) = v114;
    v118 = v110 >> 6;
    v120 = __PAIR64__(v114, __ROR4__(v114, 11));
    v119 = v118 ^ v120;
    LODWORD(v120) = v114;
    LODWORD(v52) = ((v106 - v114) ^ v114 ^ v106 ^ v117)
                 + ((v106 - 1918460920 + v114 + (v114 ^ v106) + (v120 >> 25) + v119) ^ v52);
    HIDWORD(v120) = v52;
    LODWORD(v120) = v52;
    v121 = v120 >> 2;
    HIDWORD(v120) = v52;
    LODWORD(v120) = v52;
    v122 = -1597126157 - a1 + 3 * v114 + v52 + (v120 >> 11);
    HIDWORD(v120) = v52;
    LODWORD(v120) = v52;
    v123 = v120 >> 6;
    v125 = __PAIR64__(v52, __ROR4__(v52, 13));
    v124 = v121 ^ v125;
    LODWORD(v125) = v52;
    v126 = v122
         - (v52 >> 22)
         - ((_DWORD)v52 << 10)
         - v123
         - (v125 >> 25)
         + v124
         - (v52 ^ v114 ^ (2 * (_DWORD)v52));
    v127 = (v126 << (((v52 >> 22) & 0x1E ^ 0x1E) + ((v52 >> 22) & 0x1E))) ^ (v126 >> ((v116 & 2 ^ 2) + (v116 & 2)));
    HIDWORD(v125) = v126;
    LODWORD(v125) = v126;
    v128 = v125 >> 13;
    HIDWORD(v125) = v126;
    LODWORD(v125) = v126;
    v129 = v125 >> 22;
    HIDWORD(v125) = v126;
    LODWORD(v125) = v126;
    LODWORD(v52) = v11
                 - 1605810818
                 - ((v125 >> 6) ^ __ROR4__(v126, 11) ^ __ROR4__(v126, 25))
                 + ((v127 - (v129 + v128)) ^ (2 * (v126 - v52)));
    HIDWORD(v125) = v52;
    LODWORD(v125) = v52;
    v130 = (v125 >> 2) ^ __ROR4__(v52, 13);
    v132 = __PAIR64__(v52, __ROR4__(v52, 22));
    v131 = v130 ^ v132;
    LODWORD(v132) = v52;
    LODWORD(v126) = v131
                  + 2 * (v52 + v126)
                  + (((((*(_BYTE *)(*(_QWORD *)(v12 + 9560) + ((v52 >> 25) ^ 0x26)) ^ 0x60)
                                       + 3) ^ ((_DWORD)v52 << 7))
                    + 2 * (v52 + v126)
                    + 902442515
                    - ((v132 >> 6) ^ __ROR4__(v52, 11))) ^ v10);
    HIDWORD(v132) = v126;
    LODWORD(v132) = v126;
    v133 = v132 >> 2;
    v135 = __PAIR64__(v126, __ROR4__(v126, 13));
    v134 = v133 ^ v135;
    LODWORD(v135) = v126;
    v136 = v135 >> 25;
    HIDWORD(v135) = v126;
    LODWORD(v135) = v126;
    v137 = v135 >> 6;
    v139 = __PAIR64__(v126, __ROR4__(v126, 22));
    v138 = v134 ^ v139;
    LODWORD(v139) = v126;
    LODWORD(v52) = v8
                 + 715599402
                 + v52
                 + (v126 ^ v52)
                 + v126
                 + v52
                 + (v139 >> 11)
                 - v136
                 - v137
                 + ((v126 + v52) ^ v126)
                 + v138;
    HIDWORD(v139) = v52;
    LODWORD(v139) = v52;
    v140 = v139 >> 2;
    HIDWORD(v139) = v52;
    LODWORD(v139) = v52;
    v141 = v140 - (v139 >> 13);
    HIDWORD(v139) = v52;
    LODWORD(v139) = v52;
    v142 = v139 >> 6;
    HIDWORD(v139) = v52;
    LODWORD(v139) = v52;
    v143 = v139 >> 11;
    HIDWORD(v139) = v52;
    LODWORD(v139) = v52;
    LODWORD(v126) = a3
                  + 839509884
                  + 2 * v126
                  - v143
                  - (v139 >> 25)
                  + v142
                  + ((v52 - v126) ^ (v52 + v126))
                  + (v141 ^ __ROR4__(v52, 22));
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v144 = v139 >> 13;
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v145 = (v139 >> 2) - v144;
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v146 = v139 >> 6;
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v147 = v52 ^ __ROR4__(v126, 25) ^ ((v139 >> 11) + v146);
    HIDWORD(v139) = *(_DWORD *)(v12 + 9656);
    LODWORD(v139) = HIDWORD(v139);
    v148 = v139 >> 18;
    LODWORD(v139) = HIDWORD(v139);
    v149 = v139 >> 7;
    v150 = v9
         + 735346473
         + v52
         + 2 * v126
         - (v126 ^ v52)
         - ((v126 + v52) ^ (2 * v126))
         + v147
         + (v145 ^ __ROR4__(v126, 22));
    HIDWORD(v139) = v150;
    LODWORD(v139) = v150;
    LODWORD(v52) = v148 + v149;
    v151 = v150 - v126;
    v152 = (v150 - v126 - 2 * v150) ^ (v150 + v126);
    LODWORD(v126) = 1001847661 - a4 + v126 + v150 - (v139 >> 13);
    HIDWORD(v139) = v150;
    LODWORD(v139) = v150;
    LODWORD(v126) = v126 - (v139 >> 22);
    HIDWORD(v139) = v150;
    LODWORD(v139) = v150;
    v153 = (v139 >> 2) + v151;
    HIDWORD(v139) = v150;
    LODWORD(v139) = v150;
    v154 = v153 + (v139 >> 25);
    HIDWORD(v139) = v150;
    LODWORD(v139) = v150;
    v155 = v139 >> 6;
    HIDWORD(v139) = v150;
    LODWORD(v139) = v150;
    LODWORD(v126) = v126 + v154 + (v139 >> 11) - v155 - v152;
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v156 = v139 >> 2;
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v157 = v7 + 1015065585 - (v139 >> 22);
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v158 = v157 - (v139 >> 25);
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v159 = v156 + (v139 >> 6);
    HIDWORD(v139) = v126;
    LODWORD(v139) = v126;
    v160 = v158
         + v159
         - (v139 >> 11)
         - (((v126 >> 13) - 1369494618 - ((v126 >> 12) & 0xE574C)) ^ 0xAE5F2BA6 | ((_DWORD)v126 << 19));
    HIDWORD(v139) = v160;
    LODWORD(v139) = v160;
    v161 = v139 >> 22;
    v162 = (v160 - v126) ^ (v160 + v126);
    v163 = __PAIR64__(v160, __ROR4__(v160, 25));
    LODWORD(v126) = v160 ^ v126 ^ __ROR4__(v160, 11) ^ __ROR4__(v160, 6) ^ v163 ^ (v160 - v126);
    LODWORD(v163) = v160;
    LODWORD(v126) = 810676494 - v5 - v161 + v162 + ((v163 >> 13) ^ __ROR4__(v160, 2)) + v126;
    HIDWORD(v163) = v126;
    LODWORD(v163) = v126;
    v164 = v163 >> 2;
    HIDWORD(v163) = v126;
    LODWORD(v163) = v126;
    v165 = v163 >> 13;
    HIDWORD(v163) = v126;
    LODWORD(v163) = v126;
    v166 = v163 >> 6;
    v167 = v165 + v164;
    HIDWORD(v163) = v126;
    LODWORD(v163) = v126;
    v168 = (v163 >> 11) + v166;
    HIDWORD(v163) = v126;
    LODWORD(v163) = v126;
    v169 = v168 - (v163 >> 25);
    v14 = v5 ^ (v91 + (v7 >> 10));
    v170 = v93 - (v5 >> 10);
    v171 = v52 - (*(_DWORD *)(v12 + 9656) >> 3);
    LODWORD(v52) = v169 ^ v160;
    HIDWORD(v163) = v14;
    LODWORD(v163) = v14;
    v172 = v163 >> 17;
    LODWORD(v52) = 2000435870 - v14 + v160 + (v167 ^ __ROR4__(v126, 22)) + v52;
    HIDWORD(v163) = v52;
    LODWORD(v163) = v52;
    v173 = v163 >> 2;
    HIDWORD(v163) = v52;
    LODWORD(v163) = v52;
    v13 = (v170 ^ v105) - (v5 + v14);
    v174 = v173 - (v163 >> 13);
    v175 = __PAIR64__(v52, __ROR4__(v52, 22));
    v176 = (v174 ^ v175) - ((v126 - v52) ^ (v52 + v126));
    LODWORD(v175) = v52;
    v177 = -523147947 - v13 + 2 * v52 + (v175 >> 25);
    v178 = __PAIR64__(v52, __ROR4__(v14, 19));
    v179 = (v172 ^ v178) - (v14 >> 10);
    LODWORD(v178) = v52;
    v180 = v177 + ((v178 >> 11) ^ __ROR4__(v52, 6)) + v176;
    HIDWORD(v178) = v180;
    LODWORD(v178) = v180;
    v181 = v178 >> 13;
    v182 = v179 ^ v171;
    v184 = __PAIR64__(v180, __ROR4__(v180, 2));
    v183 = v181 ^ v184;
    LODWORD(v184) = v180;
    v185 = v183 + (v184 >> 22);
    HIDWORD(v184) = v180;
    LODWORD(v184) = v180;
    v186 = v184 >> 25;
    HIDWORD(v184) = v180;
    LODWORD(v184) = v180;
    v187 = v184 >> 11;
    HIDWORD(v184) = v180;
    LODWORD(v184) = v180;
    LODWORD(v126) = 2 * v52 + 1843881407 + v180 - 3 * v180 - v186 - v187 + (v184 >> 6);
    a5 ^= v180;
    v188 = (v182 + v14) ^ v13;
    a2 = (((v180 ^ v52) + 2 * v180) ^ ((_DWORD)v52 - v180) ^ v185)
       - (_DWORD)a2
       + (v126 ^ v188);
    if (v35 != 2)
      break;
    *(_DWORD *)(v12 + 9656) = v188;
    v33 = 0;
    v38 = 0;
    v24 = 0;
    v30 = 0;
    v37 = 0;
    v34 = 0;
    LOBYTE(v27) = 0;
    *(_DWORD *)(v12 + 9664) = 0;
    v36 = 0;
    v31 = 0;
    v32 = 0;
    v28 = 0;
    v40 = *(_DWORD *)(v12 + 9632);
    v39 = v40;
    *(_DWORD *)(v12 + 9736) = BYTE1(v40);
    *(_DWORD *)(v12 + 9688) = HIWORD(v40);
    v25 = HIBYTE(v40);
    LOBYTE(v35) = 1;
    *(_DWORD *)(v12 + 9632) = v25;
  }
  if (v35 != 1)
    return sub_1002FC238(a1, a2, a3, a4, 2059600627, v25, *(_DWORD *)(v12 + 9148), v188);
  *(_BYTE *)(*(_QWORD *)(v12 + 8448) + 16) = a5;
  v190 = *(_BYTE **)(v12 + 8344);
  v190[3988] = a2;
  v190[3895] = BYTE3(a2);
  v190[3926] = BYTE2(a2);
  v190[4050] = BYTE2(a5);
  v191 = -1248972896 * ((BYTE3(a2) & 0xD5 ^ 0xAA804FD5) + (BYTE3(a2) & 0xD5)) > (*(_DWORD *)(v12 + 7848)
                                                                                                - 92);
  v190[4081] = BYTE1(a5);
  v190[3957] = BYTE1(a2);
  v190[4019] = HIBYTE(a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744) + 8 * ((v191 | (16 * v191)) ^ 0x106)) - 8))();
}

uint64_t sub_1002FDA74(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * (((((((v3 - 62) | 1) + 3) & 0xFEu) <= v2)
                                                                          * (((v3 + 712) | 0x788) - 5920)) ^ (v3 + 5603)))
                                                            - 4))(a1, a2, 2235367631);
}

uint64_t sub_1002FDAF8()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 3340) | 0x180) ^ 0x99C) * (v0 < 0x18u)) ^ v1)))();
}

uint64_t sub_1002FDB24()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 ^ 0x12A0) - 4614) ^ 0x948) * (v1 < 0x14)) ^ v0)) - 12))();
}

uint64_t sub_1002FDB58()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((((v0 < 0x12u) ^ (v1 + 110)) & 1)
                                               * (((v1 - 18439314) ^ 0xFEE6BF4E) - 322)) ^ v1))
                            - 8))();
}

uint64_t sub_1002FDB9C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((a6 == 110) ^ (((v6 & 0xF3) - 127) | 0x13)) & 1)
                                     * (a1 + (((v6 & 0x11967F3) - 33756644) & 0x873FFF77) - 263)) ^ v6 & 0x11967F3)))();
}

void sub_1002FDC08(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 19) = a1;
  *(_DWORD *)(v1 + 7856) = 20;
  *(_DWORD *)(v1 + 7848) = 112;
  JUMPOUT(0x1002FA150);
}

uint64_t sub_1002FDC1C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v3 ^ (46 * (v2 < 0x30u))))
                                                            - ((v3 + 2001505699) & 0x88B377DF ^ (v3 + 1090279001) & 0xBF03BDFF ^ 0x3362)))(a1, a2, 2235367631);
}

uint64_t sub_1002FDCA8()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 > 0x27) * (v0 ^ 0x12CE)) ^ v0)))();
}

uint64_t sub_1002FDCC8()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 ^ 0x337F) - 8567) * (v0 < 0x2Cu)) ^ v1 ^ 0x3B1A)))();
}

uint64_t sub_1002FDCFC()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 >= (v0 + 120)) * ((v0 - 120791491) & 0x733273F ^ 0x27C3)) ^ (v0 - 62)))
                            - 4))();
}

uint64_t sub_1002FDD40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned __int8 a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((a1 + v6 - 3853 - a5 + 163 - 247) * (a6 == 134)) ^ (v6 - 3853)))
                            + 2235371539
                            - ((v6 - 407012509) & 0x9D7F733F)
                            - 4))();
}

void sub_1002FDDA0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2888) = a1;
  *(_DWORD *)(v1 + 7856) = 43;
  *(_DWORD *)(v1 + 7848) = 135;
  JUMPOUT(0x1002FA150);
}

uint64_t sub_1002FDDB8()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((55 * (v0 < ((v1 ^ 0x9E) + v1 + 106))) ^ v1)))();
}

uint64_t sub_1002FDDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((((v6 - 22) ^ 0x12) & a6) == 92) * ((v6 + 3207) ^ 0x299E)) ^ v6))
                            - 8))();
}

uint64_t sub_1002FDE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((a6 & 0xFE) == ((v6 + 61) ^ 0xE9 ^ ((v6 + 34) | 0x8E))) ^ v6))
                            - 8))();
}

uint64_t sub_1002FDE64(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((((a6 == 92) ^ (v6 - 76) & 0x37) & 1)
                                          * (a1 + ((v6 - 2051198028) ^ 0x8048C8) - 254)) ^ v6))
                            - 12))();
}

void sub_1002FDEC4(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 1) = a1;
  *(_DWORD *)(v1 + 7856) = 2;
  *(_DWORD *)(v1 + 7848) = 94;
  JUMPOUT(0x1002FA150);
}

uint64_t sub_1002FEE78()
{
  char v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v1 - 717409950) & 0xAFFFBB1F) + 8) ^ v1 ^ 0x853D3382) * (v0 == 25)) | v1)))();
}

void sub_1002FEEC8(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 25) = a1;
  *(_DWORD *)(v1 + 7856) = 26;
  *(_DWORD *)(v1 + 7848) = 118;
  JUMPOUT(0x1002FA150);
}

uint64_t sub_1002FEEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (v6 | (8 * (a6 != (((v6 + 61) | 4) ^ 0x69))))))();
}

void sub_1002FEF2C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2840) = a1;
  *(_DWORD *)(v1 + 7856) = 36;
  *(_DWORD *)(v1 + 7848) = 128;
  JUMPOUT(0x1002FA150);
}

uint64_t sub_1002FEF44(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * (int)(((a1 + ((v5 - 1484969925) & 0xDDBFD01F) - 161) * (v6 == 9)) ^ v5))
                            - ((v5 - a5 - 1202) ^ 0x853D1013)))();
}

void sub_1002FEF98(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 9) = a1;
  *(_DWORD *)(v1 + 7856) = 10;
  *(_DWORD *)(v1 + 7848) = 102;
  JUMPOUT(0x1002FA150);
}

uint64_t sub_1002FEFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((8170 * (a6 == (((v6 + 78) ^ 0xCD) - 125))) ^ (v6 - 5298)))
                            - 8))();
}

void sub_1002FEFEC(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2760) = a1;
  *(_DWORD *)(v1 + 7856) = 63;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF008(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 18) = a1;
  *(_DWORD *)(v1 + 7856) = 19;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF01C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2808) = a1;
  *(_DWORD *)(v1 + 7856) = 44;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF034(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2800) = a1;
  *(_DWORD *)(v1 + 7856) = 50;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF04C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 30) = a1;
  *(_DWORD *)(v1 + 7856) = 31;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF060(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2848) = a1;
  *(_DWORD *)(v1 + 7856) = 38;
  *(_DWORD *)(v1 + 7848) = 130;
  JUMPOUT(0x1002FA150);
}

void sub_1002FF078(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 15) = a1;
  *(_DWORD *)(v1 + 7856) = 16;
  *(_DWORD *)(v1 + 7848) = 108;
  JUMPOUT(0x1002FA150);
}

void sub_1002FF08C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 20) = a1;
  *(_DWORD *)(v1 + 7856) = 21;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF0A0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2792) = a1;
  *(_DWORD *)(v1 + 7856) = 48;
  *(_DWORD *)(v1 + 7848) = 140;
  JUMPOUT(0x1002FA15CLL);
}

void sub_1002FF0B8(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 7) = a1;
  *(_DWORD *)(v1 + 7856) = 8;
  JUMPOUT(0x1002FF0C8);
}

void sub_1002FF0D4(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2776) = a1;
  *(_DWORD *)(v1 + 7856) = 55;
  *(_DWORD *)(v1 + 7848) = 147;
  JUMPOUT(0x1002FA15CLL);
}

void sub_1002FF0EC(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 26) = a1;
  *(_DWORD *)(v1 + 7856) = 27;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF100(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 3024) = a1;
  *(_DWORD *)(v1 + 7856) = 33;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF118(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 11) = a1;
  *(_DWORD *)(v1 + 7856) = 12;
  *(_DWORD *)(v1 + 7848) = 104;
  JUMPOUT(0x1002FF1A0);
}

void sub_1002FF12C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2752) = a1;
  *(_DWORD *)(v1 + 7856) = 61;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF144(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 17) = a1;
  *(_DWORD *)(v1 + 7856) = 18;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF158(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2872) = a1;
  *(_DWORD *)(v1 + 7856) = 41;
  JUMPOUT(0x1002FF16CLL);
}

void sub_1002FF174(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 3) = a1;
  *(_DWORD *)(v1 + 7856) = 4;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF188(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2768) = a1;
  *(_DWORD *)(v1 + 7856) = 51;
  JUMPOUT(0x1002FF19CLL);
}

void sub_1002FF1A8(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 28) = a1;
  *(_DWORD *)(v1 + 7856) = 29;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF1BC(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2864) = a1;
  *(_DWORD *)(v1 + 7856) = 40;
  JUMPOUT(0x1002FF1D0);
}

void sub_1002FF1DC(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 13) = a1;
  *(_DWORD *)(v1 + 7856) = 14;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF1F0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2952) = a1;
  *(_DWORD *)(v1 + 7856) = 57;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF208(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 22) = a1;
  *(_DWORD *)(v1 + 7856) = 23;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF21C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2904) = a1;
  *(_DWORD *)(v1 + 7856) = 46;
  JUMPOUT(0x1002FF230);
}

void sub_1002FF23C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 4) = a1;
  *(_DWORD *)(v1 + 7856) = 5;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF250(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2928) = a1;
  *(_DWORD *)(v1 + 7856) = 53;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF268(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 24) = a1;
  *(_DWORD *)(v1 + 7856) = 25;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF27C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2832) = a1;
  *(_DWORD *)(v1 + 7856) = 35;
  JUMPOUT(0x1002FA14CLL);
}

void sub_1002FF294(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 8) = a1;
  *(_DWORD *)(v1 + 7856) = 9;
  JUMPOUT(0x1002FA14CLL);
}

uint64_t sub_1002FF2A8@<X0>(uint64_t a1@<X1>, int a2@<W4>, int a3@<W7>, char a4@<W8>)
{
  unsigned __int8 **v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unsigned __int8 *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned __int8 v27;
  _BYTE *v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unsigned __int8 v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unsigned int v46;
  char v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __int128 v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  __int128 v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  __int128 v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  __int128 v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  __int128 v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  __int128 v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  char v189;

  **(_BYTE **)(v6 + 2984) = a4;
  v10 = *(_QWORD *)(v6 + 8240);
  *(_QWORD *)(v6 + 9504) = *(_QWORD *)(v6 + 9504);
  *(_QWORD *)(v6 + 9280) = v9;
  *(_QWORD *)(v6 + 8240) = v10;
  *(_DWORD *)(v6 + 8308) = v5;
  *(_DWORD *)(v6 + 8300) = v8;
  *(_DWORD *)(v6 + 8304) = v7;
  v11 = *v4;
  v12 = ((*v4)[14] >> 3) | (32 * (*v4)[14]);
  v13 = **(_QWORD **)(v6 + 9352);
  v14 = (unint64_t)*(unsigned __int8 *)(v13 + 12) << 8;
  v15 = *(unsigned __int8 **)(v6 + 9712);
  v16 = v14 & 0x1000 | ((unint64_t)v15[90] << 16);
  v17 = (unint64_t)(*v4)[24] << 48;
  v18 = (**(_BYTE **)(v6 + 8224) ^ (a2 + a3 - 90));
  *(_DWORD *)(v6 + 9664) = a2 + a3;
  v19 = (**(_BYTE **)(v6 + 8216) ^ (a2 + a3 - 90)) | v14 & 0xFFFFFFFFFFFFEFFFLL;
  LOBYTE(v14) = v15[36];
  v20 = (2 * v14) & 0x38;
  v21 = **(unsigned __int8 ***)(v6 + 8144);
  v22 = v14 ^ 0x9C;
  *(_DWORD *)(v6 + 9736) = a3 + 2059596029;
  v23 = *(_QWORD *)(a1 + 8 * (a3 + 2059595782));
  v24 = *(unsigned __int8 *)(v13 + 1);
  v25 = v20 + v22;
  v26 = v15[20];
  v27 = (v11[8] >> 1) | (v11[8] << 7);
  *(_QWORD *)(v6 + 9688) = v23 + 283;
  v28 = *(_BYTE **)(v6 + 7840);
  v29 = v16 | v19 | (v18 << 24);
  v30 = v23 + 540;
  LOBYTE(v10) = *(_BYTE *)(v23 + 540 + (v25 ^ 0xC0));
  v31 = (v12 ^ 0x4D ^ *(_BYTE *)(v23 + 283 + (v12 ^ 0x88))) - 65;
  v32 = (unint64_t)*(unsigned __int8 *)(v13 + 13) << 56;
  v33 = v29 | ((unint64_t)v15[54] << 32);
  v34 = v10 ^ 0x4C;
  v35 = v11[26];
  v36 = v33 | v17 | (v24 << 40);
  v37 = v32 ^ (0xFF00000000000000 * *(unsigned __int8 *)(v13 + 13));
  v38 = *v21 | (unint64_t)(unsigned __int16)(v31 << 8) | ((*v28 ^ 0xB0) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(-7 * (v10 ^ 0x4C)) << 24);
  v39 = v38 | ((unint64_t)v11[17] << 32) | ((unint64_t)v15[51] << 40) | ((unint64_t)v21[6] << 48);
  v40 = v36 + ((unint64_t)v15[1] << 56);
  v41 = v39 + v37 + v39 - (v39 ^ v32) - 2 * ((v39 - (v39 ^ v32)) & v37);
  v42 = v11[9] | ((unint64_t)(-7
                                                    * (*(_BYTE *)(v23 + 540 + ((v35 - 100) ^ 0xC0)) ^ 0x4C)) << 8);
  v43 = v26 | ((unint64_t)v15[7] << 8) | ((unint64_t)*(unsigned __int8 *)(v13 + 2) << 16) | ((unint64_t)v15[92] << 48) | ((unint64_t)v11[19] << 56) | ((unint64_t)v15[74] << 32) | ((unint64_t)*(unsigned __int8 *)(v13 + 7) << 24) | ((unint64_t)*(unsigned __int8 *)(v13 + 6) << 40);
  v44 = (v42 ^ -(uint64_t)v42 ^ (((2 * (-1816793845 - (int)v42)) & 0x25EALL)
                              + ((0x9861D82593B5ED0BLL - v42) ^ 0x679E27DA6C4A12F5)))
      + ((unint64_t)*(unsigned __int8 *)(v13 + 14) << 16);
  v45 = ((unint64_t)v11[15] << 32) | ((unint64_t)v11[1] << 24) | ((unint64_t)v11[32] << 40);
  v46 = *(unsigned __int8 *)(v23 + (v27 ^ 0x54) + 12);
  if (v38)
    v47 = (v46 >> 2) ^ 0x11;
  else
    v47 = 46;
  v48 = v47 & (v46 >> 2) ^ ((v46 >> 2) & 0xD1 | ((_BYTE)v46 << 6));
  v49 = (unint64_t)v15[19] << 48;
  v50 = v44 ^ v45;
  v51 = v44 & v49;
  v52 = (v44 ^ v45) + v49;
  v53 = *(unsigned int *)(v13 + 8);
  v54 = v52 - 2 * v51;
  v55 = v41 ^ v53;
  v56 = (((unint64_t)v11[23] << (v35 & 0x10) << (v35 & 0x10 ^ 0x10u)) | ((unint64_t)v11[37] << 8) | ((unint64_t)v11[18] << 56)) ^ (((unint64_t)v11[2] << 40) | ((unint64_t)v15[82] << 48) | ((unint64_t)v15[59] << 32) | v15[58]) ^ ((unint64_t)((v48 ^ 0x29 ^ (-16 * v48)) + 31) << 24);
  v57 = v41 ^ v53 ^ v43 ^ 0xA016BC24B7A8D977;
  v58 = v56 ^ v40;
  v59 = v54 ^ ((unint64_t)v15[17] << 56);
  v60 = v58 ^ 0x9AF652FDFA97F854 ^ v41 ^ v53 ^ 0x7EFD6E4BA10EA42ELL;
  v61 = v58 ^ 0x9AF652FDFA97F854 | v41 ^ v53 ^ 0x7EFD6E4BA10EA42ELL;
  v62 = v56 + (v59 ^ 0x66B42170FA29716ALL) - 2 * (v56 & (v59 ^ 0x66B42170FA29716ALL));
  v63 = (v55 ^ v43 ^ 0xA016BC24B7A8D977) & (v55 ^ 0x810291B45EF15BD1);
  v64 = v58 ^ 0x6509AD02056807ABLL;
  if ((v50 & 0x80000000000) != 0)
    v65 = 0xFFFFF80000000000;
  else
    v65 = 0x80000000000;
  v66 = __ROR8__(v60, 13) ^ __ROR8__(v61, 13) ^ 0x26CE55904FD957C9;
  v67 = (v62 ^ 0x1B8739A505B5424CLL) & (((v59 ^ 0x66B42170FA29716ALL) + v65) ^ 0xFFFFF7FFFFFFFFFFLL);
  v68 = __ROR8__((v59 ^ 0x66B42170FA29716ALL) & (v55 ^ v43 ^ 0x5FE943DB48572688), 21) ^ __ROR8__(v55 ^ 0x7EFD6E4BA10EA42ELL, 21);
  v69 = v68 ^ 0x9B737ED6E9D64B97;
  v70 = v62 ^ 0x1B8739A505B5424CLL ^ __ROR8__(v66, 51);
  v71 = (v69 << 21) & 0xFEFFFFFFFFE00000 ^ v64 ^ v63 ^ ((v69 << 21) & 0x100000000000000 | (v68 >> 43) | 0xDADD3AC972E00000);
  v72 = (((v71 ^ 0x42AC0DFF18EAF909) + (v71 | 0xBD53F200E71506F6) + 1) ^ 0x9850F000A1010482)
      + (v71 & 0x42AC0DFF18EAF909 ^ 0x2A8092400E25101);
  v73 = v67 ^ v57;
  *((_QWORD *)&v74 + 1) = v73 ^ -(uint64_t)v73 ^ ((v73 ^ 0x71F90AAF4B015B75) - 0x71F90AAF4B015B75);
  *(_QWORD *)&v74 = *((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76;
  v75 = v72 ^ (-7 * (*(_BYTE *)(v30 + (((v72 >> 61) + 156) ^ 0xC0)) ^ 0x4C)) ^ (8 * v72) ^ (v72 >> 39) ^ (v72 << 25);
  v76 = v59 ^ (v62 ^ 0xE478C65AFA4ABDB3) & v64 ^ v73 ^ 0x5C15CA165129E222;
  v77 = v76 >> (v55 & 0xA) >> (v55 & 0xA ^ 0xA);
  v78 = v70 ^ v64 ^ v63;
  v79 = v70 ^ 0xDBD18B5A517C8C71 ^ __ROR8__(v70 ^ 0xDBD18B5A517C8C71, 7) ^ ((v70 ^ 0xDBD18B5A517C8C71) >> 41);
  v80 = v79 & 0xFBEB6D2A6CB82839;
  v81 = v79 & 0x41492D59347D7C6;
  v82 = (v76 >> 17) | (v76 << 54);
  v83 = __ROR8__(__ROR8__(*((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76, 19) & 0xFFF81FFFFFFFFFFFLL ^ __ROR8__((v74 >> 1) ^ (*((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76), 13) ^ 0x17FC653716A9ADCFLL, 51) ^ ((*((_QWORD *)&v74 + 1) - 0x71F90AAF4B015B76) << 58) ^ v75;
  v84 = v76 ^ (v76 << 47);
  if ((v75 & 0x80) != 0)
    v85 = -128;
  else
    v85 = 128;
  *((_QWORD *)&v86 + 1) = v78 ^ 0xB44C5028398C2245;
  *(_QWORD *)&v86 = v78;
  v87 = v80 ^ ((v70 ^ 0xDBD18B5A517C8C71) << 23) & 0xFBEB6D2A6C800000 | v81 ^ ((v70 ^ 0xDBD18B5A517C8C71) << 23) & 0x41492D593000000;
  v88 = v84 ^ v77 ^ v82;
  v89 = v87 ^ v88;
  v90 = v78 ^ 0xB44C5028398C2245 ^ __ROR8__(v78 ^ 0xB44C5028398C2245, 19) ^ (v86 >> 28) ^ v87;
  v91 = v90 ^ 0xB44C50283;
  v92 = v75 & (v90 ^ 0xFFFFFFF4BB3AFD7CLL) ^ v87 ^ v88;
  v93 = ((v85 + v75) ^ 0xFFFFFFFFFFFFFF7FLL) & (v83 ^ 0x8CA6E2D535B9E2FFLL) ^ v91;
  v94 = v92 ^ 0xCC7BE9A4BE673377 ^ v93;
  v95 = v75 & 0x20000000000000;
  v96 = (v83 ^ 0x73591D2ACA461D00) & v88;
  v97 = v75 & 0xFFDFFFFFFFFFFFFFLL;
  if ((v96 & v95) != 0)
    v95 = -v95;
  v98 = (v95 + v96) ^ v97;
  v99 = v98 ^ v93 ^ 0xF0CC8DD092A1AF2FLL;
  *((_QWORD *)&v101 + 1) = v99;
  *(_QWORD *)&v101 = v98 ^ ~v93;
  v100 = v101 >> 61;
  v102 = v83 ^ 0x8CA6E2D535B9E2FFLL ^ v87 & ~v88;
  v103 = v102 ^ 0x5356F0674821AEC6;
  *((_QWORD *)&v101 + 1) = v102;
  *(_QWORD *)&v101 = v102 ^ 0x5356F0674821AEC6;
  v104 = v101 >> 1;
  v105 = v88 ^ 0x47C99E12AA55AA20 ^ v91 & ~v89 ^ v102;
  v106 = v105 ^ __ROR8__(v105, 10);
  v107 = (v99 >> 39) & 0x4000;
  v108 = v100 ^ v99;
  if ((v108 & v107) != 0)
    v107 = -v107;
  v109 = (v107 + v108) ^ (v99 >> 39) & 0xFFFFFFFFFFFFBFFFLL;
  v110 = v109 ^ (v99 << 25);
  *((_QWORD *)&v111 + 1) = v109;
  *(_QWORD *)&v111 = v110;
  v112 = (v111 >> 22) ^ __ROR8__(v104 ^ v103 ^ (v103 >> 6) ^ (v103 << 58), 22);
  v113 = ((0xBFBBAA5FCFDB5187 - (v92 & 0x1000000000000000)) & 0x9C81284E02D04181 ^ v92 & 0xCCC5784E02D467A9 | v92 & 0x233A87B1FD2B9856) ^ 0x233A8211CD0B1006;
  v114 = v113 ^ __ROR8__(v113, 7) ^ (v113 >> 41) ^ (v113 << 23);
  v115 = (v106 + (v105 << 47) - 2 * (v106 & (v105 << 47))) ^ (v105 >> 17);
  v116 = __ROR8__(v112 ^ 0x9319FDD7951A92DDLL, 42);
  *(_QWORD *)&v111 = __ROR8__(__ROR8__(v115, 23) ^ __ROR8__(v114, 23) ^ 0x30668A50A29F8279, 41);
  v117 = v114 ^ __ROR8__(v94, 28) ^ ((v94 ^ (v94 >> 19) ^ -(uint64_t)(v94 ^ (v94 >> 19)) ^ ((v94 << 45)
                                                                                         - (v94 ^ (v94 >> 19) ^ (v94 << 45))))
                                   + (v94 << 45));
  v118 = v111 ^ 0x28514FC13C983345;
  v119 = v116 ^ 0x75E546A4B764C67FLL ^ (v111 ^ 0x28514FC13C983345) & ~v115;
  v120 = v115 ^ 0x313BC7C92EDDA5FDLL ^ v117 & (v111 ^ 0xD7AEB03EC367CCBALL) ^ v119;
  v121 = v120 ^ __ROR8__(v120, 10);
  v122 = __ROR8__(__ROR8__(v120, 61) ^ 0x228C743FBD208966, 20) ^ 0x8966228C743FBD2;
  if (v34)
    v123 = v116 ^ 0x75E546A4B764C67FLL ^ v115;
  else
    v123 = v115;
  if (v108)
    v124 = v123;
  else
    v124 = -1;
  v125 = v122 & 0x10000000000000;
  v126 = v122 & 0xFFEFFFFFFFFFFFFFLL;
  if ((v125 & v121) != 0)
    v125 = -v125;
  v127 = v125 + v121 + v126 - 2 * ((v125 + v121) & v126);
  v128 = v110 & ~v117;
  v129 = (v116 ^ 0x75E546A4B764C67FLL) & ~v110 ^ v117;
  v130 = v128 ^ v118;
  v131 = (v129 ^ v128 ^ v118 ^ -(uint64_t)(v129 ^ v128 ^ v118) ^ ((v129 ^ v128 ^ v118 ^ 0xAC6D121EA7274154)
                                                               + 0x5392EDE158D8BEACLL))
       + 0x5392EDE158D8BEABLL;
  v132 = v110 ^ 0x4A2C537256ACF1F5 ^ v129 ^ (v116 ^ 0x8A1AB95B489B3980) & v115 & v124;
  v133 = v132 ^ __ROR8__(v132, 61) ^ (v132 >> 39) ^ (v132 << 25);
  v134 = v130 ^ 0xAD2A34AC12844DDDLL ^ __ROR8__(v130 ^ 0xAD2A34AC12844DDDLL, 7) ^ ((v130 ^ 0xAD2A34AC12844DDDLL) >> 41) ^ ((v130 ^ 0xAD2A34AC12844DDDLL) << 23);
  v135 = __ROR8__((((v119 ^ 0x802A65F49FF1DF13) & 0x3F) << 40) ^ __ROR8__(v119 ^ 0x802A65F49FF1DF13 ^ __ROR8__(v119 ^ 0x802A65F49FF1DF13, 1) ^ ((v119 ^ 0x802A65F49FF1DF13) >> 6), 18) ^ 0xC2AA087E3CE41932, 46);
  v136 = v131 & 0xFFFF7FFFFFFFFFFFLL ^ (v131 << 45) ^ (v131 >> 28) ^ (v131 << 36) ^ (v131 & 0x800000000000 | (v131 >> 19));
  v137 = v136 ^ v134;
  v138 = v133 ^ v135 ^ 0x21F8F39064CB0AA8;
  v139 = v138 & ~v133 ^ v136 ^ v134;
  v140 = v133 ^ 0xC0C4E4651798A92FLL ^ v127 & (v133 ^ v135 ^ 0xDE070C6F9B34F557) ^ v139;
  v141 = v140 ^ (v140 >> 39) ^ __ROR8__(v140, 61) ^ (v140 << 25);
  v142 = v127 ^ ~v136 ^ (v136 ^ v134 | ~(v127 ^ v134));
  *((_QWORD *)&v143 + 1) = v134 & ~v127 ^ v138;
  *(_QWORD *)&v143 = *((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6;
  v144 = v127 ^ v134 ^ v133 & ~v137;
  v145 = v144 ^ 0x76AE5B4ADE1196D6;
  v146 = v144 ^ 0x76AE5B4ADE1196D6 ^ __ROR8__(v144 ^ 0x76AE5B4ADE1196D6, 7);
  v147 = v146 ^ ((v144 ^ 0x76AE5B4ADE1196D6) >> 41);
  v148 = (v143 >> 1) ^ *((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6 ^ ((*((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6uLL) >> 6) ^ ((*((_QWORD *)&v143 + 1) ^ 0x3508012E90BBEBA6) << 58);
  v149 = (v142 + *((_QWORD *)&v143 + 1) - 2 * (v142 & *((_QWORD *)&v143 + 1))) ^ (v127
                                                                                - ((2 * v127) & 0x6237310441395C28)
                                                                                - 0x4EE4677DDF6351ECLL);
  v150 = v149 ^ __ROR8__(v149, 10) ^ (v149 >> 17) ^ (v149 << 47);
  v151 = v144 ^ v139 ^ 0x9D5823204F6787ADLL ^ __ROR8__(v144 ^ v139 ^ 0x9D5823204F6787ADLL, 19) ^ ((v144 ^ v139 ^ 0x9D5823204F6787ADLL) >> 28) ^ ((v144 ^ v139 ^ 0x9D5823204F6787ADLL) << 36);
  v152 = (v146 ^ (v145 << 23)) & 0xC000000000000000 | (((4 * v147) ^ (v145 << 25)) >> 2);
  if (((v69 << 21) & 0xFEFFFFFFFFE00000) != 0)
    v153 = v141;
  else
    v153 = -1;
  v154 = v151 ^ v152;
  v155 = (v150 ^ v152) + ((v154 ^ v153) & v141) - 2 * ((v150 ^ v152) & (v154 ^ v153) & v141);
  v156 = v148 & ~v141 ^ 0xC3F7FB6F0CB8251 ^ v151 ^ v152;
  v157 = v156 ^ 0xE52EAC0EC822ADFDLL ^ v155;
  v158 = v157 ^ __ROR8__(v157, 19) ^ (v157 >> 28);
  v160 = v141 ^ v148;
  *((_QWORD *)&v161 + 1) = v152 & ~v150 ^ v160;
  *(_QWORD *)&v161 = *((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5ELL;
  v162 = v141 ^ v156 ^ v150 & ~v160 ^ 0xAE7D72A59B361DFCLL;
  v163 = v150 ^ *((_QWORD *)&v161 + 1) ^ 0x9CCA9ACA596472A0 ^ (__ROR8__(__ROR8__(v150 ^ v152, 49) ^ 0x5C16390997F57536, 15) ^ 0x159347D38DECD015) & v154;
  v164 = (v157 << 36) & 0x4000000000;
  v165 = (v161 >> 1) ^ *((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5ELL ^ ((*((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5EuLL) >> 6) ^ ((*((_QWORD *)&v161 + 1) ^ 0x67A03F47EDFD3E5ELL) << 58);
  if ((v158 & v164) != 0)
    v164 = -v164;
  v166 = (v164 + v158) ^ (v157 << 36) & 0xFFFFFFBFFFFFFFFFLL;
  v167 = v162 ^ __ROR8__(v162, 61) ^ (v162 >> 39) ^ (v162 << 25);
  v168 = v163 ^ __ROR8__(v163, 10) ^ (v163 >> 17) ^ (v163 << 47);
  v159 = v155 ^ 0x3548F5C53C294B00;
  v169 = ((v159 >> 41) | (v155 << 57)) ^ (v159 << 23) ^ ((((v159 ^ -(uint64_t)v159 ^ (v159 - (v159 ^ -(uint64_t)v159)))
                                                         + v159) ^ ((((v155 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v159)
                                                                  + ((v155 ^ 0x3548F5C53C294B00uLL) >> 7)
                                                                  - 2 * (((v155 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v159)))
                                                       + ((v155 ^ 0x3548F5C53C294B00uLL) >> 7));
  v170 = v169 ^ v168;
  v171 = v169 ^ v166;
  v172 = v169 ^ v166 ^ v165 & ~v167;
  v173 = v167 & ~(v169 ^ v166) ^ v169 ^ v168;
  v174 = v173 + (v172 ^ 0x4D060D9B6336773BLL) - 2 * ((v172 ^ 0x4D060D9B6336773BLL) & v173);
  v175 = __ROR8__(v174, 28) ^ (v174 << 45) ^ ((v174 >> 19) & 0x1D5D80B9A53ELL ^ v174 & 0xC6D5BD5D80B9A53ELL | (v174 >> 19) & 0x2A27F465AC1 ^ v174 & 0x392A42A27F465AC1);
  **(_BYTE **)(v6 + 8216) = v175 - ((2 * v175) & 0x60) - 80;
  v15[54] = BYTE4(v175);
  *(_BYTE *)(v13 + 1) = BYTE5(v175);
  v176 = v167 ^ v168 & ~(v167 ^ v165) ^ 0x9F6C7F18AE9A2457 ^ v172;
  v177 = v176 ^ (v176 >> 61) ^ (v176 >> 39) ^ (8 * v176);
  *v21 = v177;
  *v28 = BYTE2(v177) - ((2 * BYTE2(v177)) & 0x60) - 80;
  v15[90] = BYTE2(v175);
  *(_BYTE *)(v13 + 12) = BYTE1(v175);
  v11[24] = BYTE6(v175);
  v11[14] = BYTE1(v177);
  **(_BYTE **)(v6 + 8224) = BYTE3(v175) - ((2 * BYTE3(v175)) & 0x60) - 80;
  v15[1] = HIBYTE(v175);
  v178 = v177 ^ (v176 << 25);
  v15[36] = BYTE3(v178);
  v179 = *(_BYTE *)(*(_QWORD *)(v6 + 9688) + (((v178 >> 27) & 0xE0 | (v178 >> 35) & 0x1F) ^ 0x88));
  v21[6] = BYTE6(v178);
  v180 = v169 & ~v168 ^ v167 ^ v165;
  v181 = v180 ^ 0xEDF3F080C7FF14BCLL ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) << 58) ^ (((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6) | (v180 << 63));
  *(_BYTE *)(v13 + 7) = (v180 ^ 0xC7FF14BC ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 24;
  v15[74] = BYTE4(v181);
  v15[51] = BYTE5(v178);
  v15[7] = (unsigned __int16)(v180 ^ 0x14BC ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 8;
  v15[20] = v180 ^ 0xBC ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v180 ^ 0xEDF3F080C7FF14BCLL) >> 6);
  *(_BYTE *)(v13 + 13) = HIBYTE(v178);
  v182 = (v166 ^ v168) + (v171 | ~v170);
  if (v69)
    v183 = v182 + 1;
  else
    v183 = v171;
  v184 = __ROR8__(__ROR8__(v173, 43) ^ __ROR8__(v180 ^ v168 ^ v173 ^ v183 & ~v170, 43) ^ 0x1632D02E588C9E02, 21) ^ 0x2771B2465AE27B69;
  v185 = v184 ^ __ROR8__(v184, 10) ^ (v184 >> 17);
  *(_BYTE *)(v13 + 14) = BYTE2(v185);
  *(_BYTE *)(v13 + 2) = BYTE2(v181);
  v11[17] = (v179 ^ ((v178 >> 27) & 0xE0 | (v178 >> 35) & 0x1F) ^ 0x4D) - 65;
  v11[26] = BYTE1(v185);
  *(_BYTE *)(v13 + 6) = BYTE5(v181);
  v186 = v173 ^ 0x7A845D75A8E0B07DLL ^ __ROR8__(v173 ^ 0x7A845D75A8E0B07DLL, 7) ^ ((v173 ^ 0x7A845D75A8E0B07DLL) >> 41);
  v15[58] = v186;
  v11[19] = HIBYTE(v181);
  v11[1] = BYTE3(v185);
  v11[9] = v185;
  v187 = v185 ^ (v184 << 47);
  v15[19] = BYTE6(v187);
  v11[37] = BYTE1(v186);
  v15[17] = HIBYTE(v187);
  v11[15] = BYTE4(v185);
  v15[92] = BYTE6(v181);
  v11[32] = BYTE5(v187);
  v188 = v186 ^ ((v173 ^ 0x7A845D75A8E0B07DLL) << 23);
  v11[23] = BYTE2(v188);
  v189 = *(_BYTE *)(v30
                  + ((((v186 ^ ((v173 ^ 0xA8E0B07D) << 23)) >> 24) - 100) ^ 0xC0));
  *(_DWORD *)(v6 + 12364) = v53;
  v15[59] = BYTE4(v188);
  v15[82] = BYTE6(v188);
  v11[2] = BYTE5(v188);
  v11[8] = -7 * (v189 ^ 0x4C);
  v11[18] = HIBYTE(v188);
  *(_DWORD *)(**(_QWORD **)(v6 + 9352) + 8) = v53 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((*(_DWORD *)(v6 + 9736) + 1912) ^ 0x78)) - 12))();
}

uint64_t sub_1002FF2C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  char v18;
  _BYTE *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  char v29;
  char v30;
  unsigned __int8 v31;
  int v32;
  unint64_t v33;
  unsigned __int8 v34;
  char v35;
  uint64_t v36;
  unsigned __int8 v37;
  char v38;
  char v39;
  uint64_t v40;
  unsigned __int8 v41;
  char v42;
  char v43;
  unsigned __int8 v44;
  char v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  char v51;
  char v52;
  uint64_t v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _DWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _DWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;

  *(_DWORD *)(v7 + 8612) = 0;
  *(_QWORD *)(v7 + 9584) = a7;
  *(_DWORD *)(v7 + 9656) = a7 ^ 0xF4EA23EA;
  v8 = *(_DWORD *)(v7 + 9672) ^ 0xCD462A76;
  *(_DWORD *)(v7 + 9632) = v8;
  v9 = *(_DWORD *)(v7 + 9696) ^ 0xFE05CCCD;
  *(_DWORD *)(v7 + 9664) = v9;
  v10 = *(_DWORD *)(v7 + 9512) ^ 0xA4DBC001;
  v11 = v9 - 914456245;
  v12 = v10 - (v9 - 914456245);
  *(_DWORD *)(v7 + 9624) = v12;
  v13 = v8 - v10 + (a7 ^ 0xF4EA23EA);
  *(_DWORD *)(v7 + 9600) = v13;
  v14 = v13 - 2139830770;
  v15 = v11 - (v13 - 2139830770);
  *(_DWORD *)(v7 + 9616) = v15;
  v16 = v12 - v14 + 48588192;
  *(_DWORD *)(v7 + 9696) = v15 + v16;
  v17 = (v15 + v16) ^ v16;
  *(_DWORD *)(v7 + 9608) = v17;
  LOBYTE(v15) = *(_BYTE *)(*(_QWORD *)(v7 + 9680) + (*(_QWORD *)(v7 + 4664) ^ 0x6CLL));
  LOBYTE(v12) = -87 * (*(_DWORD *)(v7 + 4552) ^ 7);
  v18 = *(_DWORD *)(v7 + 4600) ^ 0x3A;
  v19 = *(_BYTE **)(v7 + 8344);
  v19[3888] = (*(_QWORD *)(v7 + 4664) ^ (v15 + (~(2 * v15) | 0x49) - 36) ^ 0x7E) + 3;
  v19[3919] = v18;
  v20 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + (v12 ^ 0x20));
  v21 = *(_QWORD *)(v7 + 9640);
  v19[3981] = *(_DWORD *)(v7 + 4704) ^ 0x86;
  v19[4012] = *(_DWORD *)(v7 + 4684) ^ 0x69;
  LOBYTE(v12) = *(_DWORD *)(v7 + 4956) ^ 0xD5;
  v19[3950] = ((((v20 >> 1) & 0x46 ^ v20) >> 5) | (8 * ((v20 >> 1) & 0x46 ^ v20))) ^ 0xF0;
  v19[4074] = *(_DWORD *)(v7 + 4624) ^ 0x87;
  v19[4043] = v12;
  v22 = *(_QWORD *)(v7 + 9560);
  v23 = ((*(_BYTE *)(v7 + 4632) ^ 0xEB) >> 1) | ((*(_DWORD *)(v7 + 4632) ^ 0xFFFFFFEB) << 7);
  v24 = *(unsigned __int8 **)(v7 + 8448);
  v24[9] = (*(_BYTE *)(v22 + (*(_QWORD *)(v7 + 4584) ^ 5)) ^ 0x60) + 3;
  *(_DWORD *)(v7 + 9576) = v23 ^ 0x7E;
  v25 = *(_QWORD *)(v7 + 4752);
  v26 = *(_QWORD *)(v7 + 9728);
  *(_BYTE *)(v26 + (~(_BYTE)v25 & 0xF8) + (unint64_t)(v25 & 0xF8)) = (((v23 ^ 0x98) + (v23 ^ 0x7E) + 1) ^ 0xB9 ^ *(_BYTE *)(*(_QWORD *)(v7 + 9704) + (v23 ^ 0x95))) + 10;
  v27 = v26;
  v24[133] = *(_DWORD *)(v7 + 4576) ^ 0x73;
  v28 = *(_DWORD *)(v7 + 4580) ^ 0xC9;
  v24[102] = *(_DWORD *)(v7 + 4656) ^ 0x86;
  v24[71] = v28;
  LOBYTE(v23) = (~(_BYTE)v25 & 0xA8 ^ 0xAC) + (~(_BYTE)v25 & 0xA8);
  LOBYTE(v23) = *(_DWORD *)(v7 + 4648) ^ (v23 - ((2 * v23 + 98) & 0x60) - 97);
  v29 = *(_DWORD *)(v7 + 4604) ^ 0xED;
  v24[164] = *(_DWORD *)(v7 + 4724) ^ 0x2E;
  v19[4071] = v29;
  v30 = *(_DWORD *)(v7 + 4828) ^ 0x85;
  v31 = *(_DWORD *)(v7 + 4660) ^ 0xD5;
  v19[3916] = v23;
  v24[195] = v31;
  v19[4009] = v30;
  LOBYTE(v23) = *(_DWORD *)(v7 + 4832) ^ 0xDC;
  v32 = *(_DWORD *)(v7 + 4560);
  HIDWORD(v33) = v32 ^ 0x17;
  LODWORD(v33) = (v32 ^ 0x20) << 24;
  v24[6] = *(_DWORD *)(v7 + 4568) ^ 0xB1;
  v19[4040] = v23;
  v34 = *(_DWORD *)(v7 + 4788) ^ 0xC2;
  v35 = *(_DWORD *)(v7 + 4692) ^ 0xA8;
  v19[3947] = *(_DWORD *)(v7 + 4676) ^ 0xB1;
  v19[3978] = v35;
  v24[68] = v34;
  v24[37] = *(_DWORD *)(v7 + 4556) ^ 8;
  v36 = *(_QWORD *)(v7 + 9648);
  LOBYTE(v23) = (((v33 >> 29) ^ 0xBA) + *(_BYTE *)(v36 + ((v33 >> 29) ^ 0xB6)) + 1) ^ 0x5C;
  v19[3944] = *(_DWORD *)(v7 + 4836) ^ 0x95;
  v37 = *(_DWORD *)(v7 + 4608) ^ 0x63;
  v24[99] = 109 * v23;
  v24[130] = *(_DWORD *)(v7 + 4564) ^ 0x96;
  v24[192] = v37;
  v24[161] = *(_DWORD *)(v7 + 4732) ^ 0x4B;
  LODWORD(v26) = *(_DWORD *)(v7 + 4748);
  HIDWORD(v33) = v26 ^ 9;
  LODWORD(v33) = (_DWORD)v26 << 24;
  v38 = *(_DWORD *)(v7 + 4644) ^ 0x80;
  v19[3975] = *(_DWORD *)(v7 + 4804) ^ 0x6A;
  v19[3913] = v38;
  v39 = *(_BYTE *)(*(_QWORD *)(v7 + 9536) + ((v33 >> 29) ^ 0xD3));
  v40 = *(_QWORD *)(v7 + 9536);
  v24[96] = -91;
  LOBYTE(v23) = 109 * ((v33 >> 29) ^ 0x51 ^ v39);
  v41 = *(_DWORD *)(v7 + 6156) ^ 1;
  v19[4006] = v23;
  LOBYTE(v23) = *(_DWORD *)(v7 + 4764) ^ 0x80;
  v24[3] = v41;
  v19[4037] = v23;
  v42 = *(_QWORD *)(v7 + 6336) ^ 0x1D;
  v24[127] = ((v17 & 0x18 ^ 0x18) + (v17 & 0x18) - ((2 * ((v17 & 0x18 ^ 0x18) + (v17 & 0x18))) & 0x30) + 92) ^ *(_DWORD *)(v7 + 5104);
  v19[4068] = v42;
  LOBYTE(v20) = *(_DWORD *)(v7 + 5108);
  v24[34] = *(_DWORD *)(v7 + 6292) ^ 0x1D;
  *(_BYTE *)(v27 + (-54 * ((v20 & 0xAF ^ 0x8B) + ((v20 ^ 0x34) & 0xAF)))) = *(_DWORD *)(v7 + 4948) ^ 0x1D;
  v43 = *(_DWORD *)(v7 + 5092) ^ 0xE7;
  v24[65] = *(_DWORD *)(v7 + 6128) ^ 0x61;
  v19[4003] = v43;
  v44 = *(_DWORD *)(v7 + 5112) ^ 0x24;
  v45 = *(_DWORD *)(v7 + 5116) ^ 0xC1;
  v19[3941] = *(_DWORD *)(v7 + 4852) ^ 0x4D;
  v24[189] = *(_DWORD *)(v7 + 5100) ^ 0xA5;
  *v24 = v44;
  v19[4065] = v45;
  v46 = *(_DWORD *)(v7 + 5088) ^ 0x47;
  v19[3972] = *(_DWORD *)(v7 + 4908) ^ 0x1D;
  v47 = *(_DWORD *)(v7 + 5124) ^ 0xB2;
  v19[4034] = v20 ^ 0x34;
  v24[158] = v46;
  LOBYTE(v23) = *(_DWORD *)(v7 + 5096) ^ 0x2A;
  v48 = *(_DWORD *)(v7 + 5128) ^ 0xEC;
  v24[62] = v47;
  v24[31] = v23;
  LOBYTE(v23) = *(_DWORD *)(v7 + 5120) ^ 0xFD;
  v24[186] = v48;
  v24[93] = *(_DWORD *)(v7 + 5188) ^ 0xB6;
  v24[124] = v23;
  v49 = *(_DWORD *)(v7 + 4876) ^ 0x1D;
  v19[3907] = *(_DWORD *)(v7 + 5140) ^ 0x78;
  v24[155] = v49;
  v19[3969] = *(_DWORD *)(v7 + 4784) ^ 0x4C;
  v19[3918] = *(_DWORD *)(v7 + 4680);
  LOBYTE(v23) = *(_DWORD *)(v7 + 4940) ^ 0x1D;
  v50 = *(_DWORD *)(v7 + 5152) ^ 0x80;
  v19[4000] = *(_DWORD *)(v7 + 5136) ^ 0x92;
  v19[4031] = v23;
  v24[39] = *(_DWORD *)(v7 + 4760);
  LOBYTE(v23) = *(_DWORD *)(v7 + 4900) ^ 0xDF;
  v51 = *(_DWORD *)(v7 + 5132) ^ 0x13;
  v19[3946] = *(_DWORD *)(v7 + 4860);
  v19[3938] = v51;
  v24[28] = v50;
  v52 = *(_DWORD *)(v7 + 5144) ^ 0xA8;
  v19[4073] = *(_DWORD *)(v7 + 4620);
  v24[90] = v23;
  v19[4011] = *(_DWORD *)(v7 + 4736);
  LOBYTE(v23) = *(_DWORD *)(v7 + 4884) ^ 0x1D;
  v19[4093] = v52;
  v19[4062] = v23;
  v24[194] = *(_DWORD *)(v7 + 4696);
  LOBYTE(v23) = *(_DWORD *)(v7 + 4824) ^ 0x91;
  v24[160] = *(_DWORD *)(v7 + 4728);
  v24[59] = v23;
  v24[5] = *(_DWORD *)(v7 + 4636);
  v19[3943] = *(_DWORD *)(v7 + 4744);
  v24[101] = *(_DWORD *)(v7 + 4640);
  v19[4042] = *(_DWORD *)(v7 + 4780);
  v24[121] = *(_DWORD *)(v7 + 4896) ^ 0x1D;
  v24[70] = *(_DWORD *)(v7 + 4740);
  v19[3977] = *(_DWORD *)(v7 + 4616);
  v24[8] = *(_DWORD *)(v7 + 4856);
  v19[3915] = *(_DWORD *)(v7 + 4596);
  v24[132] = *(_DWORD *)(v7 + 4688);
  v19[4008] = *(_DWORD *)(v7 + 4924);
  v24[95] = *(_DWORD *)(v7 + 6288);
  v19[3912] = *(_DWORD *)(v7 + 4628);
  v19[3940] = *(_DWORD *)(v7 + 4964);
  v24[98] = *(_DWORD *)(v7 + 4716);
  v24[36] = *(_DWORD *)(v7 + 4700);
  v24[64] = *(_QWORD *)(v7 + 6216);
  v19[3974] = *(_DWORD *)(v7 + 4820);
  v24[163] = *(_DWORD *)(v7 + 4844);
  v24[157] = *(_DWORD *)(v7 + 4916);
  v24[67] = *(_DWORD *)(v7 + 4652);
  v19[3937] = *(_DWORD *)(v7 + 4988);
  v19[4039] = *(_DWORD *)(v7 + 4772);
  v19[4005] = *(_DWORD *)(v7 + 4768);
  v24[126] = -68;
  v19[4067] = *(_DWORD *)(v7 + 4712);
  v24[2] = *(_DWORD *)(v7 + 6332);
  v24[188] = *(_DWORD *)(v7 + 4912);
  v19[4070] = *(_DWORD *)(v7 + 4572);
  v19[4036] = *(_DWORD *)(v7 + 4928);
  v24[191] = v25;
  v24[58] = *(_DWORD *)(v7 + 4920);
  v19[3906] = *(_DWORD *)(v7 + 5172);
  v24[129] = *(_DWORD *)(v7 + 4612);
  v24[61] = *(_DWORD *)(v7 + 4944);
  v24[151] = *(_DWORD *)(v7 + 4812);
  v19[4095] = *(_DWORD *)(v7 + 4952);
  v24[123] = *(_DWORD *)(v7 + 4800);
  v24[33] = *(_QWORD *)(v7 + 6320);
  v24[30] = *(_DWORD *)(v7 + 4796);
  v19[3971] = *(_DWORD *)(v7 + 4968);
  v19[3909] = *(_DWORD *)(v7 + 4932);
  v19[3968] = *(_DWORD *)(v7 + 4888);
  v19[4030] = *(_DWORD *)(v7 + 4976);
  v24[185] = *(_DWORD *)(v7 + 4904);
  v24[92] = *(_DWORD *)(v7 + 4972);
  v19[4064] = *(_DWORD *)(v7 + 4960);
  v24[27] = *(_DWORD *)(v7 + 4980);
  v19[4061] = *(_DWORD *)(v7 + 4880);
  v19[4092] = *(_DWORD *)(v7 + 4996);
  v19[3999] = *(_DWORD *)(v7 + 4984);
  v19[4002] = *(_DWORD *)(v7 + 4892);
  v24[120] = *(_DWORD *)(v7 + 4992);
  v19[4033] = *(_DWORD *)(v7 + 4792);
  v24[154] = *(_DWORD *)(v7 + 4840);
  v24[89] = *(_DWORD *)(v7 + 4808);
  v53 = v19[3918];
  v54 = *(unsigned __int8 *)(v21 + ((-87 * *(_DWORD *)(v7 + 4720)) ^ 0x20));
  LODWORD(v25) = v19[3950];
  v55 = v54 ^ (v54 >> 1) & 0x46 ^ 0x1E;
  v56 = *(_QWORD *)(v7 + 9544);
  v57 = *(_BYTE *)(v56
                 + ((((v19[3981] ^ 0xE6001Du) >> 1) | ((v19[3981] ^ 0x1D) << 7)) ^ 0x25));
  v58 = v19[4011];
  *(_DWORD *)(v7 + 9592) = a3;
  v59 = (uint64_t)*(&off_1004ECA20 + a3 - 3023);
  *(_QWORD *)(v7 + 9688) = v59;
  v60 = v59 + 10;
  v61 = ((((v57 ^ (32 * v57) ^ 0x45) + 10) ^ 0xEB)
       + (((v57 ^ (32 * v57) ^ 0x45) + 10) ^ 0x8807)
       + 1) ^ *(unsigned __int16 *)(v59 + 10 + 2 * (((v57 ^ (32 * v57) ^ 0x45) + 10) ^ 0xBDu));
  HIDWORD(v33) = v25 ^ 0x1D;
  LODWORD(v33) = (_DWORD)v25 << 24;
  LOBYTE(v25) = ((v33 >> 29) ^ 0x52) + *(_BYTE *)(v36 + ((v33 >> 29) ^ 0x5ELL));
  v62 = (uint64_t)*(&off_1004ECA20 + a3 - 3242);
  LODWORD(v58) = *(_DWORD *)(v62 + 59820 + 4 * (v58 ^ 0xDA));
  *(_QWORD *)(v7 + 8640) = v62 + 59820;
  v63 = *(_DWORD *)(v7 + 4708) ^ 0xB8u;
  LOBYTE(v27) = (v55 >> 2) | ((_BYTE)v55 << 6);
  *(_QWORD *)(v7 + 9136) = v62 + 13008;
  LODWORD(v33) = __ROR4__(*(_DWORD *)(v62 + 13008 + 4 * v63), 19);
  v64 = (109
       * (((((v55 >> 2) | (v55 << 6)) ^ 0x52)
         + *(unsigned __int8 *)(v36 + (v27 ^ 0x5ELL))
         + 1) ^ 0x5C)) ^ 0xFFFFFFD9;
  *(_QWORD *)(v7 + 9528) = (v64 >> 5) | (8 * v64);
  v65 = *(_DWORD *)(v62
                  + 45964
                  + 4
                  * ((109
                                     * (*(_BYTE *)(v40
                                                 + (((v64 >> 5) | (8 * v64)) ^ 0x3BLL)) ^ ((v64 >> 5) | (8 * v64)) ^ 0xB9)) ^ 0x52u));
  v66 = *(_DWORD *)(v62 + 28044 + 4 * (v53 ^ 0xF1));
  v67 = v58 ^ 0x46F90B2B ^ v33 ^ ((v58 ^ 0x46F90B2B) >> 1) & 0xA056852;
  *(_QWORD *)(v7 + 9568) = v67;
  LODWORD(v58) = v67 ^ __ROR4__(v65, 29) ^ (v66 << 21) ^ 0x92163CC5;
  v68 = v58 ^ (v66 >> 11);
  v69 = (v58 >> 21) & 0xF8 | (v58 >> 29);
  LOBYTE(v58) = 109 * ((v25 + 1) ^ 0x5C);
  v70 = v22;
  LOBYTE(v25) = (*(_BYTE *)(v22 + (v19[3919] ^ 0x3BLL)) ^ 0x60) + 3;
  LODWORD(v63) = *(_DWORD *)(v62 + 58740 + 4 * (v25 ^ 0x3Cu));
  *(_QWORD *)(v7 + 9128) = v62 + 58740;
  HIDWORD(v33) = v63;
  LODWORD(v33) = v63;
  LODWORD(v22) = *(_DWORD *)(v62 + 34380 + 4 * (v19[3888] ^ 0xC4));
  *(_QWORD *)(v7 + 9096) = v62 + 34380;
  *(_QWORD *)(v7 + 8728) = v62 + 5648;
  LODWORD(v58) = *(_DWORD *)(v62 + 5648 + 4 * (v58 ^ 0xCBu)) ^ v58 ^ v22 ^ (v33 >> 30) ^ (1394708534 * (v33 >> 30)) ^ v61;
  LOBYTE(v61) = *(_BYTE *)(v36 + (v69 ^ 0x5E));
  v19[3949] = BYTE2(v68);
  v19[3980] = BYTE1(v68);
  LOBYTE(v63) = v58 ^ 0x87;
  v19[3919] = (v58 ^ 0x790C4687) >> 16;
  v19[3888] = (v58 ^ 0x790C4687) >> 24;
  v19[3950] = (unsigned __int16)(v58 ^ 0x4687) >> 8;
  v19[4011] = v68;
  v19[3918] = 109 * ((v61 + (v69 ^ 0x52) + 1) ^ 0x5C);
  v71 = v19[4074];
  LODWORD(v58) = ((v19[4043] ^ 0x1D) << 16) | ((v71 ^ 0x1D) << 8);
  v72 = (v71 >> 5) & 0xFFFFFFFFFFFFFF07 | (8 * ((v71 ^ 0x1D) & 0x1FLL));
  v73 = v24[9];
  LODWORD(v58) = (v58 | v73) ^ 0xED001D;
  v19[3981] = v63;
  LODWORD(v73) = ((v73 ^ 0x1B) + (v58 ^ 0x88EA) + 1) ^ *(unsigned __int16 *)(v60 + 2 * (v73 ^ 0x4D));
  v74 = v40;
  v75 = (109 * (*(_BYTE *)(v40 + (v72 ^ 0x3B)) ^ v72 ^ 0xB9)) ^ 0xBAu;
  *(_QWORD *)(v7 + 9200) = v62 + 8812;
  LOBYTE(v58) = *(_BYTE *)(v56 + (((v58 >> 9) & 0x80 | (v58 >> 17)) ^ 0x25));
  HIDWORD(v33) = *(_DWORD *)(v62 + 58740 + 4 * (((v58 ^ (32 * v58) ^ 0x45) + 10) ^ 0x13u));
  LODWORD(v33) = HIDWORD(v33);
  v76 = v19[4012];
  LODWORD(v58) = (-706386747 * *(_DWORD *)(v62 + 8812 + 4 * v75)) ^ *(_DWORD *)(v62 + 34380 + 4 * (v76 ^ 0xE6)) ^ (v33 >> 30) ^ v73 ^ 0x126A900E ^ (1394708534 * (v33 >> 30));
  v77 = v24[39];
  *(_QWORD *)(v7 + 9520) = v77;
  LODWORD(v73) = *(_DWORD *)(v62 + 59820 + 4
                                         * (((*(_BYTE *)(v70 + (v77 ^ 0x26)) ^ 0x60) + 3) ^ 0xEFu));
  v78 = *(_QWORD *)(v7 + 9136);
  LODWORD(v73) = v73 ^ __ROR4__(*(_DWORD *)(v78 + 4 * (v24[8] ^ 0xCALL)), 19) ^ (v73 >> 1) & 0xA056852;
  v79 = v19[4073] ^ 0xEBLL;
  *(_QWORD *)(v7 + 8736) = v62 + 45964;
  LODWORD(v73) = v73 ^ __ROR4__(*(_DWORD *)(v62 + 45964 + 4 * v79), 29);
  LODWORD(v79) = *(_DWORD *)(v62 + 28044 + 4 * (v19[4042] ^ 0x79));
  *(_QWORD *)(v7 + 9160) = v62 + 28044;
  LODWORD(v73) = v73 ^ __ROR4__(v79, 11) ^ 0x9AB48335;
  v24[8] = BYTE1(v73);
  v19[4012] = BYTE3(v58);
  v19[4073] = BYTE2(v73);
  v19[4042] = BYTE3(v73);
  v24[39] = v73;
  v19[4074] = BYTE1(v58);
  v24[9] = v58;
  v19[4043] = BYTE2(v58);
  LODWORD(v73) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + (v76 & 0x17 ^ 0x102) + (v76 & 0x17 ^ 0x15));
  LODWORD(v76) = (v24[70] << 24) | (v24[101] << 16);
  v80 = (v24[163] | (v24[132] << 8)) + (v76 ^ 0x5B0F1FFE) + ((2 * v76) & 0xB61E0000);
  v81 = v24[102];
  LOBYTE(v40) = 109
              * ((*(_BYTE *)(v36
                           + ((((v24[133] ^ 0x46) >> 5) & 7 | (8
                                                                              * (((v24[133] | ((v73 ^ 0x1D) << 16) | ((v81 ^ 0x1D) << 8)) ^ 0x46) & 0x1FLL))) ^ 0x5E))
                + ((((v24[133] ^ 0x46) >> 5) & 7 | (8 * ((v24[133] ^ 0x46) & 0x1F))) ^ 0x52)
                + 1) ^ 0x5C);
  v82 = (v80 - 1527717886) ^ (((((v27 ^ 0xCF) + (v27 ^ 0x30)) & 0x1F0 ^ 0xFFFFFF0F) + 1) | 0x800);
  v83 = *(_QWORD *)(v7 + 9704);
  LOBYTE(v25) = *(_BYTE *)(v74 + (((v82 >> 5) & 0xF8 | ((unsigned __int16)v82 >> 13)) ^ 0x3BLL)) ^ (v25 & 0xB1 ^ 0x90 | v25 & 0xB1 ^ 0x21 | 8) ^ ((v82 >> 5) & 0xF8 | ((unsigned __int16)v82 >> 13));
  v84 = (-79 * (((v63 & 0xDD ^ 0xDD) + (v63 & 0xDD)) & 0xF1)) ^ 0x48u ^ ((*(_BYTE *)(v83 + ((((v82 & 1) << 7) | (v82 >> 1)) ^ 0x95)) ^ (((((v82 & 1) << 7) | (v82 >> 1)) ^ 0x98) + ((((v82 & 1) << 7) | (v82 >> 1)) ^ 0x7E) + 1) ^ 0xB9) + 10);
  *(_QWORD *)(v7 + 8720) = v62 + 38548;
  v85 = v78;
  LODWORD(v25) = *(_DWORD *)(v62 + 38548 + 4 * v84) ^ __ROR4__(*(_DWORD *)(v78 + 4 * ((109 * v25) ^ 0xB3u)), 19);
  v86 = *(_QWORD *)(v7 + 9680);
  LOBYTE(v84) = HIBYTE(v82) ^ 0x63 ^ *(_BYTE *)(v86 + (HIBYTE(v82) ^ 0xAALL));
  v87 = v24[40];
  LODWORD(v63) = v87 ^ v81 ^ 0x1D ^ *(_DWORD *)(*(_QWORD *)(v7 + 8728) + 4 * (v81 ^ 0x62));
  *(_QWORD *)(v7 + 9080) = v62 + 51268;
  LODWORD(v87) = v63 ^ *(_DWORD *)(v62 + 51268 + 4 * (v73 ^ 0x7C)) ^ *(_DWORD *)(v62
                                                                                               + 42812
                                                                                               + 4 * (v87 ^ 0xAD));
  LOWORD(v63) = (v40 ^ 0x31) + (v40 ^ 0x88DD) + 1;
  LODWORD(v73) = v87 ^ 0x2F9696C5 ^ (unsigned __int16)(v63 ^ *(_WORD *)(v60 + 2 * (v40 ^ 0x67u)));
  LODWORD(v81) = *(_DWORD *)(v62 + 45964 + 4 * (BYTE2(v82) ^ 0x23u));
  LODWORD(v84) = *(_DWORD *)(v62 + 28044 + 4 * ((v84 + 3) ^ 0x5Cu));
  v24[40] = BYTE3(v73);
  LODWORD(v84) = v25 ^ 0x64654251 ^ __ROR4__(v81, 29) ^ __ROR4__(v84, 11) ^ 0xC5C21B42;
  v24[132] = BYTE1(v84);
  v24[70] = BYTE3(v84);
  v24[102] = BYTE1(v73);
  v24[163] = v84;
  v24[101] = BYTE2(v84);
  v24[71] = BYTE2(v73);
  v24[133] = v73;
  v88 = (unint64_t)v24[194] << ((v82 & 0xC5) + (v82 & 0xC5 ^ 0xC5) - (v63 & 0x8E) + (v63 | 0x71) - 30);
  LOBYTE(v63) = *(_BYTE *)(v56 + (((v19[3946] >> 1) | (v19[3946] << 7)) ^ 0x25));
  LODWORD(v73) = (v19[3915] << 16) | (((v63 ^ (32 * v63) ^ 0x45) + 10) << 8);
  LODWORD(v63) = ((v19[3947] ^ 0x88BB) + (v19[3947] ^ 0x57) + 1) ^ *(unsigned __int16 *)(v60 + 2 * (v19[3947] ^ 0x57u ^ ((v88 & 0x9B ^ 0x9B) + (v88 & 0x9B) - 69)));
  v89 = v24[164];
  LODWORD(v79) = *(_DWORD *)(v62 + 42812 + 4 * (v89 ^ 0xA8));
  *(_QWORD *)(v7 + 8696) = v62 + 42812;
  v90 = *(_QWORD *)(v7 + 9200);
  v91 = *(_QWORD *)(v7 + 9128);
  HIDWORD(v33) = *(_DWORD *)(v91 + 4 * (v24[195] ^ 0x9BLL));
  LODWORD(v33) = HIDWORD(v33);
  LODWORD(v89) = v89 ^ v79 ^ (v33 >> 30) ^ (-706386747 * *(_DWORD *)(v90 + 4 * (v19[3916] ^ 0x29))) ^ (1394708534 * (v33 >> 30)) ^ 0x427E67F9 ^ v63;
  LODWORD(v73) = v73 ^ v88;
  LOBYTE(v63) = v73 ^ v19[3977];
  LODWORD(v79) = *(_DWORD *)(*(_QWORD *)(v7 + 8640) + 4 * (v63 ^ 0x12u));
  LODWORD(v40) = *(_DWORD *)(v85 + 4 * (BYTE1(v73) ^ 0x32u));
  v92 = v85;
  LODWORD(v88) = BYTE3(v88);
  *(_QWORD *)(v7 + 9736) = v62;
  v93 = v62 + 76720;
  LODWORD(v73) = v88 ^ *(_DWORD *)(v62 + 76720 + 4 * (BYTE2(v73) ^ 0x4Fu)) ^ v79 ^ __ROR4__(v40, 19);
  LODWORD(v88) = *(_DWORD *)(v62 + 14064 + 4 * (v88 ^ 0xAC));
  *(_QWORD *)(v7 + 8704) = v62 + 14064;
  LODWORD(v88) = v73 ^ (v79 >> 1) & 0xA056852 ^ v88 ^ 0xC4CEC4EA;
  v19[3915] = BYTE2(v88);
  v19[3916] = BYTE1(v89);
  v94 = *(_QWORD *)(v7 + 9728);
  *(_BYTE *)(v94 + ((v25 ^ 0x64654251 | v25 ^ 0xFFFFFFEF) & 0x3ALL)) = BYTE1(v88);
  v24[164] = BYTE3(v89);
  v24[195] = BYTE2(v89);
  v24[194] = BYTE3(v88);
  v95 = *(_QWORD *)(v7 + 9640);
  LODWORD(v25) = *(unsigned __int8 *)(v95 + ((-87 * v89) ^ 0x20)) ^ 0x58 ^ ((*(unsigned __int8 *)(v95 + ((-87 * v89) ^ 0x20)) ^ 0xFFFFFFAE) >> 1) & 0x46;
  LODWORD(v25) = *(unsigned __int8 *)(v95
                                    + ((-87 * (((v25 >> 5) | (8 * v25)) ^ 0x1D)) ^ 0x20));
  v19[3977] = v88;
  v19[3947] = ((((v25 >> 1) & 0x46 ^ v25) >> 5) | (8
                                                                                * ((v25 >> 1) & 0x46 ^ v25))) ^ 0xF0;
  LOBYTE(v88) = *(_BYTE *)(v56 + (((v19[4009] >> 1) | (v19[4009] << 7)) ^ 0x25));
  LOBYTE(v88) = (v88 ^ (32 * v88) ^ 0x45) + (v63 & 0xA) + (v63 & 0xA ^ 0xA);
  LODWORD(v25) = *(unsigned __int8 *)(v95
                                    + (((-87 * v19[4071]) ^ ((v88 & 0xD9 ^ 0xD9) + (v88 & 0xD9))) ^ 0xF9u));
  LOBYTE(v25) = (((v25 >> 1) & 0x46 ^ v25) >> 5) | (8
                                                                                 * ((v25 >> 1) & 0x46 ^ v25));
  LODWORD(v87) = (v25 ^ 0x5B) + (v25 ^ 0x88B7);
  LODWORD(v25) = *(unsigned __int16 *)(v60 + 2 * (v25 ^ 0xDu));
  v96 = v60;
  *(_QWORD *)(v7 + 8664) = v60;
  LODWORD(v25) = (v87 + 1) ^ v25;
  LOBYTE(v87) = v88 ^ *(_BYTE *)(v86 + (v88 ^ 0xB7));
  LOBYTE(v88) = v19[3978];
  v97 = *(_QWORD *)(v7 + 9552);
  LOBYTE(v63) = *(_BYTE *)(v97 + ((-87 * (v88 ^ 0x7A)) ^ 0x8BLL)) + 94;
  LOBYTE(v73) = (v19[4039] >> 1) | (v19[4039] << 7);
  v98 = v83;
  v99 = v90;
  LODWORD(v63) = ((v63 >> 5) | (8 * v63)) ^ 0xCE;
  HIDWORD(v33) = *(_DWORD *)(v91 + 4 * (((v87 ^ 0x7E) + 3) ^ 0xF3u));
  LODWORD(v33) = HIDWORD(v33);
  LODWORD(v25) = (-706386747 * *(_DWORD *)(v90 + 4 * (v19[4040] ^ 0x82))) ^ *(_DWORD *)(v62 + 42812 + 4 * (v63 ^ 0xA2)) ^ (v33 >> 30) ^ (1394708534 * (v33 >> 30)) ^ v63 ^ v25;
  v100 = *(_QWORD *)(v7 + 8720);
  LODWORD(v87) = *(_DWORD *)(v100 + 4 * (v24[5] ^ 0xF8));
  v101 = v92;
  LODWORD(v63) = *(_DWORD *)(v92 + 4 * (v19[4070] ^ 0xBELL));
  LODWORD(v73) = *(_DWORD *)(v62
                           + 76720
                           + 4
                           * (((((v73 ^ 0x98) + (v73 ^ 0x7E) + 1) ^ 0xB9 ^ *(_BYTE *)(v83 + (v73 ^ 0x95)))
                                              + 10) ^ 0xA2u));
  v102 = v19[4008];
  LODWORD(v79) = *(_DWORD *)(v62 + 14064 + 4 * (v102 ^ 0xD));
  LODWORD(v25) = v25 ^ 0x8CCBFE6A;
  v19[3978] = BYTE3(v25);
  LODWORD(v87) = v102 ^ v87 ^ __ROR4__(v63, 19) ^ v79 ^ v73 ^ 0x5D2DDDAA;
  v19[4008] = BYTE3(v87);
  *(_BYTE *)(v94
           + ((v88 & 0x24 ^ 4)
                             - (((*(_QWORD *)(v7 + 9520) & 0xAF ^ 0xA6) + (*(_QWORD *)(v7 + 9520) & 0xAF ^ 9)) & 0xBB)
                             + (v88 & 0x24 ^ 0x20))) = BYTE2(v25);
  LOBYTE(v88) = (*(_QWORD *)(v7 + 9528) & 0x8D ^ 0x8D) + (*(_QWORD *)(v7 + 9528) & 0x8D);
  v19[4039] = BYTE2(v87);
  v103 = *(_QWORD *)(v7 + 9560);
  LOBYTE(v88) = v88 ^ 0xED ^ *(_BYTE *)(v103 + (BYTE1(v25) ^ 0xC0));
  v24[5] = v87;
  v19[4070] = BYTE1(v87);
  v19[4071] = v25;
  v19[4040] = v88 + 3;
  LODWORD(v88) = *(unsigned __int8 *)(v95 + ((-87 * (v24[37] ^ 0x1D)) ^ 0x20));
  LODWORD(v83) = ((v24[6] ^ 0x1D) << 24) | ((((((v88 >> 1) & 0x46 ^ v88) >> 5) | (8 * ((v88 >> 1) & 0x46 ^ v88))) ^ 0xF0) << 16);
  v104 = (v24[68] ^ 0x1DLL) << ((*(_QWORD *)(v7 + 9568) & 8 ^ 8) + (*(_QWORD *)(v7 + 9568) & 8));
  LOBYTE(v88) = *(_BYTE *)(v56 + (((v24[129] >> 1) | (v24[129] << 7)) ^ 0x25)) ^ 0x45;
  LODWORD(v83) = v83 ^ v104;
  LOBYTE(v95) = v88 ^ ((*(_DWORD *)(v7 + 9576) & 0xA0 ^ 0xA0) + (*(_DWORD *)(v7 + 9576) & 0xA0));
  v105 = (v24[99] ^ v104) ^ 0x70u;
  v106 = *(_QWORD *)(v7 + 9688) + 526;
  *(_QWORD *)(v7 + 8656) = v106;
  v107 = *(_QWORD *)(v7 + 9648);
  v108 = *(_QWORD *)(v7 + 9080);
  LODWORD(v104) = *(unsigned __int16 *)(v106 + 2 * v105) ^ (-706386747 * *(_DWORD *)(v99 + 4 * (BYTE1(v104) ^ 0xB0))) ^ 0x5389 ^ *(_DWORD *)(v108 + 4 * ((109 * ((*(_BYTE *)(v107 + (((v83 >> 13) & 0xF8 | (v83 >> 21) & 7) ^ 0x5ELL)) + (((v83 >> 13) & 0xF8 | (v83 >> 21) & 7) ^ 0x52) + 1) ^ 0x5C)) ^ 0x87u));
  v109 = ((unint64_t)v24[98] >> 1) & 0xFFFFFFFFFFFFFF7FLL | ((unint64_t)(v24[98] & 1) << 7);
  v110 = *(_QWORD *)(v7 + 9096);
  v111 = *(_QWORD *)(v7 + 8640);
  LODWORD(v95) = *(_DWORD *)(v111 + 4 * (((v95 ^ (32 * v88)) + 10) ^ 0xB3u));
  LODWORD(v104) = v104 ^ 0x1F62CB80 ^ *(_DWORD *)(v110
                                                + 4
                                                * (((v104 & 0xF6 ^ 0x99)
                                                                   + (v104 & 0xF6 ^ 0x6F)
                                                                   + (*(_BYTE *)(v98
                                                                               + (((v83 >> 17) & 0x80 | (v83 >> 25)) ^ 0x95)) ^ ((((v83 >> 17) & 0x80 | (v83 >> 25)) ^ 0x98) + (((v83 >> 17) & 0x80 | (v83 >> 25)) ^ 0x7E) + 1) ^ 0xB9)
                                                                   + 2) ^ 0xCu));
  LODWORD(v88) = *(_DWORD *)(v101
                           + 4
                           * (((((v109 ^ 0x9E) + (v109 ^ 0x78) + 1) ^ 0xB9 ^ *(_BYTE *)(v98 + (v109 ^ 0x93)))
                                              + 10) ^ 0xB3u));
  v112 = ((*(_BYTE *)(v103 + (v24[67] ^ 0x26)) ^ 0x60) + 3) ^ 0x77u;
  v113 = v93;
  *(_QWORD *)(v7 + 8712) = v93;
  LODWORD(v112) = *(_DWORD *)(v93 + 4 * v112);
  LODWORD(v109) = *(_DWORD *)(*(_QWORD *)(v7 + 9160) + 4 * (v24[36] ^ 0x7DLL));
  v24[6] = BYTE3(v104);
  LODWORD(v95) = v95 ^ (v95 >> 1) & 0xA056852 ^ __ROR4__(v88, 19) ^ v112 ^ __ROR4__(v109, 11) ^ 0x2CEF3FF0;
  v24[36] = BYTE3(v95);
  LOBYTE(v88) = *(_BYTE *)(v97 + ((-87 * BYTE2(v104)) ^ 0x8BLL));
  v24[67] = BYTE2(v95);
  v24[98] = BYTE1(v95);
  v24[37] = (((v88 + 94) >> 5) | (8 * (v88 + 94))) ^ 0x98;
  v24[99] = v104;
  v24[68] = BYTE1(v104);
  v24[129] = v95;
  LOBYTE(v95) = (v24[130] >> 5) | (8 * v24[130]);
  LOBYTE(v112) = (v95 ^ 0x52) + *(_BYTE *)(v107 + (v95 ^ 0x5ELL));
  LODWORD(v109) = v24[161];
  LODWORD(v104) = (v109 ^ 0x1D) & (v109 ^ 0xE2) ^ 0xEC ^ (v19[3913] | ((v109 ^ 0x1D) << 16));
  LOBYTE(v104) = 109
               * ((*(_BYTE *)(v107 + (((v104 >> 5) | (8 * v104)) ^ 0x5ELL))
                 + (((v104 >> 5) | (8 * v104)) ^ 0x52)
                 + 1) ^ 0x5C);
  LOWORD(v25) = ((v104 ^ 0x88DD) + (v104 ^ 0x31) + 1) ^ *(_WORD *)(v96 + 2 * (v104 ^ 0x67u));
  v114 = v24[160];
  v115 = v19[3912];
  v116 = (((unint64_t)v24[191] << 16) | (v114 << 24) | (v115 << 8)) ^ 0x170000;
  v117 = (v116 >> 9) & 0x80 | (v116 >> 17) & 0x7F;
  LODWORD(v73) = *(_DWORD *)(v111 + 4 * (v19[3943] ^ 0x3CLL)) ^ 0x46F90B2B;
  v118 = *(_QWORD *)(v7 + 9736) + 16508;
  LODWORD(v111) = *(_DWORD *)(v118 + 4 * (v115 ^ 0x6A));
  *(_QWORD *)(v7 + 8648) = v118;
  LODWORD(v116) = v111 ^ v115 ^ v73 ^ ((v73 & 0x140AD0A4) >> (!(v25 & 1) + (v25 & 1)));
  v119 = v98;
  v120 = *(_QWORD *)(v7 + 8728);
  HIDWORD(v33) = *(_DWORD *)(v91 + 4 * (v109 ^ 0xFE));
  LODWORD(v33) = HIDWORD(v33);
  LODWORD(v112) = ((109 * ((v112 + 1) ^ 0x5C)) ^ v24[192]) ^ *(_DWORD *)(v120 + 4
                                                                                               * (v24[192] ^ 0xEDu)) ^ (v33 >> 30) ^ (1394708534 * (v33 >> 30)) ^ *(_DWORD *)(*(_QWORD *)(v7 + 8696) + 4 * ((109 * ((v112 + 1) ^ 0x5C)) ^ 0xBEu)) ^ 0xBDEE1DBB ^ (unsigned __int16)v25;
  v121 = *(_QWORD *)(v7 + 8704);
  LODWORD(v109) = v114 ^ *(_DWORD *)(v121 + 4 * (v114 ^ 0xFE)) ^ *(_DWORD *)(v113
                                                                           + 4
                                                                           * (((((v117 ^ 0x98)
                                                                                                + (v117 ^ 0x7E)
                                                                                                + 1) ^ 0xB9 ^ *(_BYTE *)(v98 + (v117 ^ 0x95)))
                                                                                              + 10) ^ 0xB4u)) ^ 0xA713CE28 ^ v116 ^ 0xCBE04E5D;
  v19[3912] = BYTE1(v109);
  v24[191] = BYTE2(v109);
  v24[161] = BYTE2(v112);
  v24[192] = BYTE1(v112);
  v19[3913] = v112;
  v24[130] = BYTE3(v112);
  v19[3943] = v109;
  v24[160] = BYTE3(v109);
  v122 = *(_QWORD *)(v7 + 9536);
  LODWORD(v109) = v19[4037];
  HIDWORD(v33) = ~(_DWORD)v109;
  LODWORD(v33) = (_DWORD)v109 << 24;
  LOBYTE(v109) = (v33 >> 29) ^ 0xB9 ^ *(_BYTE *)(v122 + ((v33 >> 29) ^ 0x3BLL));
  v123 = v97;
  LODWORD(v112) = *(unsigned __int8 *)(v97
                                     + ((-11
                                                        * (((v19[3975] >> 5) | (8 * v19[3975])) ^ 0x51 ^ *(_BYTE *)(v122 + (((v19[3975] >> 5) | (8 * v19[3975])) ^ 0xD3)))) ^ 0x8BLL))
                + 94;
  HIDWORD(v33) = v112 ^ 0x13;
  LODWORD(v33) = (_DWORD)v112 << 24;
  v124 = *(_QWORD *)(v7 + 8656);
  v125 = v19[4006];
  LODWORD(v109) = *(_DWORD *)(v120 + 4 * (v125 ^ 0x6D)) ^ *(unsigned __int16 *)(v124
                                                                              + 2
                                                                              * ((109 * v109) ^ 0x6Cu)) ^ *(_DWORD *)(v108 + 4 * ((v33 >> 29) ^ 4u));
  v126 = *(_QWORD *)(v7 + 9728);
  v127 = v110;
  LODWORD(v109) = v109 ^ *(_DWORD *)(v110
                                   + 4
                                   * (*(unsigned __int8 *)(v126 + ((v116 ^ 0x5D | v116 ^ 0xA2) + 57)) ^ 0xA0));
  LODWORD(v116) = (v116 & 0x8B ^ 0x82 | (v116 ^ 0xCBE04E5D) & 0x8B) ^ v19[4036];
  v128 = *(_QWORD *)(v7 + 9680);
  v129 = *(_QWORD *)(v7 + 8736);
  LODWORD(v95) = v116 ^ *(_DWORD *)(v100
                                  + 4
                                  * (((*(_BYTE *)(v103 + (v19[4067] ^ 0x26)) ^ 0x60)
                                                     + 3) ^ 0x7Eu)) ^ *(_DWORD *)(v121
                                                                                + ((4 * v19[3974]) ^ 0x1BC)) ^ *(_DWORD *)(v118 + 4 * (v116 ^ 0x5B)) ^ __ROR4__(*(_DWORD *)(v129 + 4 * (((v19[4005] ^ 0x63 ^ *(_BYTE *)(v128 + (v19[4005] ^ 0xAALL))) - (v95 & 0xFD ^ 0xCD | v95 & 0xFD ^ 0x30)) ^ 0x33)), 29) ^ v19[3974] ^ 0x512A7DAB;
  v130 = v119;
  v19[3974] = (*(_BYTE *)(v119 + (((v95 >> 17) & 0x80 | (v95 >> 25)) ^ 0x95)) ^ ((((v95 >> 17) & 0x80 | (v95 >> 25)) ^ 0x98) + (((v95 >> 17) & 0x80 | (v95 >> 25)) ^ 0x7E) + 1) ^ 0xB9)
            + 10;
  v19[3944] = BYTE3(v109) ^ 0x1C;
  LOBYTE(v116) = *(_BYTE *)(v123 + ((-87 * (BYTE2(v109) ^ 0x2F)) ^ 0x8BLL)) + 94;
  v19[4006] = BYTE1(v109) ^ 0x73;
  v19[4036] = BYTE1(v95);
  v19[3975] = ((v116 >> 5) | (8 * v116)) ^ 0x85;
  v19[4005] = BYTE2(v95);
  LOBYTE(v116) = *(_BYTE *)(v103 + (v125 ^ 0xCF ^ v109));
  v19[4067] = v95;
  v19[4037] = ((v116 ^ 0x60) + 3) ^ 0x1D;
  LODWORD(v114) = v24[34] ^ *(_DWORD *)(v120 + 4 * (v24[34] ^ 0x82));
  v131 = ((unint64_t)v24[33] << 16) | ((unint64_t)v24[2] << 24) | v24[95];
  v132 = *(_QWORD *)(v7 + 8640);
  LODWORD(v25) = *(_DWORD *)(v132 + 4 * (v24[95] ^ 0x4CLL)) ^ 0x46F90B2B;
  v133 = *(_QWORD *)(v7 + 9136);
  LODWORD(v25) = (v25 >> 1) & 0xA056852 ^ v25 ^ __ROR4__(*(_DWORD *)(v133+ 4* (((*(_BYTE *)(v103 + (v24[64] ^ 0x26)) ^ 0x60)+ 3) ^ 0xDFu)), 19) ^ __ROR4__(*(_DWORD *)(v129+ 4* (((v131 ^ 0x4F000000) >> 16) ^ 0x83)), 29);
  LOBYTE(v91) = ((v131 ^ 0x4F000000) >> 24 << (((((v131 ^ 0x4F000000) >> 16) & 0x22 ^ 0x22)
                                              + (((v131 ^ 0x4F000000) >> 16) & 0x22)) & 0x40 | (((v25 ^ (~v24[95] + v24[95])) & 7) + (v25 & 7))))
              + ((v131 ^ 0x4F000000) >> 25);
  *(_DWORD *)(v7 + 9576) = v91 ^ 0x7E;
  v134 = v130;
  LODWORD(v125) = v114 ^ *(unsigned __int16 *)(v124 + 2 * (v24[65] ^ 0x22)) ^ 0x1D;
  LOBYTE(v114) = (v24[3] ^ 0x63 ^ *(_BYTE *)(v128 + (v24[3] ^ 0xAALL))) + 3;
  v135 = *(_QWORD *)(v7 + 9536);
  v136 = *(_QWORD *)(v7 + 9080);
  v137 = v127;
  LODWORD(v114) = v125 ^ *(_DWORD *)(v127 + 4 * (v19[4068] ^ 0x3ELL)) ^ 0xD6CF9935 ^ *(_DWORD *)(v136 + 4 * ((109 * (*(_BYTE *)(v135 + (((v114 >> 5) | (8 * v114)) ^ 0xD3)) ^ ((v114 >> 5) | (8 * v114)) ^ 0x51)) ^ 0x53u));
  LODWORD(v25) = *(_DWORD *)(v121
                           + 4
                           * (((*(_BYTE *)(v130 + (v91 ^ 0x95)) ^ ((v91 ^ 0x98) + (v91 ^ 0x7E) + 1) ^ 0xB9)
                                              + 10) ^ 0xEFu)) ^ v25;
  LODWORD(v109) = v25 ^ ((*(_BYTE *)(v130 + (v91 ^ 0x95)) ^ ((v91 ^ 0x98)
                                                                                               + (v91 ^ 0x7E)
                                                                                               + 1) ^ 0xB9)
                                        + 10) ^ 0x5AF6D7DE;
  v138 = *(_QWORD *)(v7 + 9544);
  LOBYTE(v25) = *(_BYTE *)(v138 + (((v25 >> 17) & 0x80 | (v109 >> 25)) ^ 0x25));
  v24[64] = BYTE1(v109);
  v24[3] = BYTE2(v114);
  v24[33] = BYTE2(v109);
  v24[2] = (v25 ^ (32 * v25) ^ 0x45) + 10;
  v24[95] = v109;
  v24[34] = BYTE1(v114);
  v19[4068] = BYTE3(v114);
  v24[65] = v114;
  v139 = (v24[96] ^ 0x1DLL) << ((v125 & 0x18 ^ 8) + (v125 & 0x18 ^ 0x10));
  v140 = v24[158];
  v141 = v140 ^ 0xAAE2;
  v140 ^= 0x1DuLL;
  v142 = v141 | v140;
  LODWORD(v115) = v139 ^ ((v24[127] ^ 0x1D) << 16);
  LOWORD(v140) = (v24[189] | (unsigned __int16)((_WORD)v140 << 8)) ^ v139;
  v143 = *(_QWORD *)(v7 + 9648);
  v144 = *(_QWORD *)(v7 + 9200);
  LODWORD(v115) = (-706386747 * *(_DWORD *)(v144 + 4 * (BYTE1(v140) ^ 0xC7u))) ^ *(_DWORD *)(v136
                                                                                             + 4
                                                                                             * (WORD1(v115) & 0xBF ^ (WORD1(v115) & 0x40 | 0xB4) ^ 0x70)) ^ *(_DWORD *)(v137 + 4 * (BYTE3(v139) ^ 0x72));
  LOBYTE(v114) = *(_BYTE *)(v138 + (((v24[157] >> 1) | (v24[157] << 7)) ^ 0x25));
  LOBYTE(v139) = ((*(_BYTE *)(v103 + (*(unsigned __int8 *)(v126 + (v142 ^ 0xAAEA)) ^ 0x26)) ^ 0x60) + 3) ^ 0x88;
  v145 = *(_QWORD *)(v7 + 8712);
  LODWORD(v140) = *(unsigned __int16 *)(v124
                                      + 2
                                      * ((109
                                                         * ((*(_BYTE *)(v143
                                                                      + ((((v140 ^ 0x25u) >> 5) & 0xFFFFFF07 | (8 * ((v140 ^ 0x25) & 0x1F))) ^ 0x5ELL))
                                                           + ((((v140 ^ 0x25u) >> 5) & 7 | (8 * ((v140 ^ 0x25) & 0x1F))) ^ 0x52)
                                                           + 1) ^ 0x5C)) ^ 0x6Cu));
  v146 = v124;
  LODWORD(v142) = v115 ^ v140;
  LODWORD(v129) = v115 ^ v140 ^ 0xCA0C7F3B;
  LODWORD(v114) = *(_DWORD *)(v132 + 4 * v139) ^ __ROR4__(*(_DWORD *)(v133 + 4 * (v24[188] ^ 0x91)), 19) ^ *(_DWORD *)(v145+ 4* (((v114 ^ (32 * v114) ^ 0x45) + 10) ^ 0xE3u)) ^ (*(_DWORD *)(v132 + 4 * v139) >> 1) & 0xA056852 ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v7 + 9160) + 4 * (v24[126] ^ 0xAFLL)), 11) ^ 0xD657333A;
  LOBYTE(v121) = *(_BYTE *)(v135 + (((v129 >> 21) & 0xF8 | (v129 >> 29)) ^ 0x3BLL));
  v24[126] = BYTE3(v114);
  LOBYTE(v115) = v121 ^ ((v129 >> 21) & 0xF8 | (v129 >> 29)) ^ 0xB9;
  v147 = (v129 >> 13) & 0xF8 | (v142 >> 21) & 7;
  v24[96] = (109 * v115) ^ 0x1D;
  LOBYTE(v142) = *(_BYTE *)(v135 + (v147 ^ 0x3B));
  v148 = v135;
  v24[158] = BYTE1(v129);
  v24[157] = BYTE2(v114);
  v149 = (v129 >> 1) | ((v129 & 1) << 7);
  v24[188] = BYTE1(v114);
  v24[127] = 109 * (v147 ^ 0xB9 ^ v142);
  LOBYTE(v142) = (((v149 ^ 0x98) + (v149 ^ 0x7E) + 1) ^ 0xB9 ^ *(_BYTE *)(v134 + (v149 ^ 0x95))) + 10;
  LOBYTE(v142) = (v142 >> 5) | (8 * v142);
  LOBYTE(v129) = *(_BYTE *)(v143 + (v142 ^ 0xB6));
  v19[3909] = v114;
  v24[189] = 109 * ((v129 + (v142 ^ 0xBA) + 1) ^ 0x5C);
  v150 = v19[3940];
  v151 = v19[4003];
  v152 = (v151 | ((v19[3972] ^ 0x1DLL) << 8) | ((v19[3910] ^ 0x1DLL) << 24) | ((v19[3941] ^ 0x1DLL) << 16)) ^ 0xBD1D;
  LOBYTE(v152) = *(_BYTE *)(v138 + (((v152 >> 1) & 0x80 | ((unsigned __int16)v152 >> 9)) ^ 0x25)) ^ 0x45;
  LODWORD(v140) = (-706386747
                 * *(_DWORD *)(v144
                             + 4
                             * (((v152 ^ (((v149 & 0xA0 ^ 0xA0) + (v149 & 0xA0)) | 0x20) ^ (32 * v152))
                                                + 10) ^ 0x7Du))) ^ *(_DWORD *)(v136
                                                                             + 4
                                                                             * ((v140 & 0x70 ^ 0x40 | v140 & 0x70 ^ 0x30) ^ v19[3941] ^ 0xBBu)) ^ *(_DWORD *)(v137 + 4 * (v19[3910] ^ 0xDAu));
  v153 = v19[4033];
  v154 = v132;
  LODWORD(v149) = *(_DWORD *)(v132 + 4 * (v153 ^ 0x87)) ^ 0x46F90B2B;
  v155 = *(_QWORD *)(v7 + 8704);
  LODWORD(v151) = *(unsigned __int16 *)(v146 + 2 * (v151 ^ 0xF0));
  LODWORD(v135) = v150 ^ v149 ^ __ROR4__(*(_DWORD *)(v133+ 4* (((((unint64_t)v150 << 24) | ((unint64_t)v19[4002] << 8) | ((unint64_t)v19[3971] << 16) | v153) >> ((*(_DWORD *)(v7 + 9576) ^ v91) & 0xDB ^ 0x52)) ^ 0x75)), 19) ^ *(_DWORD *)(v145 + 4 * (v19[3971] ^ 0xF3)) ^ (v149 >> 1) & 0xA056852 ^ *(_DWORD *)(v155 + 4 * (v150 ^ 0xB9)) ^ 0xF6524C1D;
  v19[3940] = BYTE3(v135);
  LODWORD(v151) = v151 ^ v140;
  v156 = ((BYTE2(v140) ^ 0x4Cu) >> 5) & 0xFFFFFF07 | (8 * ((BYTE2(v140) ^ 0x4C) & 0x1F));
  v19[3910] = ((unint64_t)(v151 ^ 0x6851950D) >> ((v139 & 0x18 ^ 0x18) + (v139 & 0x18))) ^ 0x1D;
  LOBYTE(v134) = *(_BYTE *)(v143 + (v156 ^ 0x5E));
  v19[4002] = BYTE1(v135);
  v19[3941] = 109 * ((v134 + (v156 ^ 0x52) + 1) ^ 0x5C);
  v19[3972] = ((unsigned __int16)(v151 ^ 0x5300) >> 8) ^ 0xDB;
  v19[4003] = v151 ^ 0x10;
  v19[4033] = v135;
  v19[3971] = BYTE2(v135);
  LOBYTE(v134) = ((v19[4034] >> 5) | (8 * v19[4034])) ^ 0x51 ^ *(_BYTE *)(v148
                                                                        + (((v19[4034] >> 5) | (8 * v19[4034])) ^ 0xD3));
  v157 = *(_QWORD *)(v7 + 8664);
  LODWORD(v135) = ((v24[31] ^ 0x1B) + (v24[31] ^ 0x88F7) + 1) ^ *(unsigned __int16 *)(v157 + 2 * (v24[31] ^ 0x4DLL));
  v158 = *(_QWORD *)(v7 + 9560);
  LODWORD(v156) = *v24;
  LODWORD(v150) = v156 ^ 0x1D;
  v159 = *(_QWORD *)(v7 + 8728);
  LODWORD(v156) = *(_DWORD *)(v159 + 4 * (v156 ^ 0xCF)) ^ v156 ^ 0x8267C333 ^ *(_DWORD *)(v136 + ((4 * ((*(_BYTE *)(v158 + (v19[4065] ^ 0x3BLL)) ^ 0x60) + 3)) ^ 0xF4)) ^ (unsigned __int16)v135 ^ 0xA137;
  LOBYTE(v151) = *(_BYTE *)(v138 + (((v24[61] >> 1) | (v24[61] << 7)) ^ 0x25));
  LODWORD(v151) = *(_DWORD *)(v154 + 4 * (((v151 ^ (32 * v151) ^ 0x45) + 10) ^ 0xA0u)) ^ ((v150 ^ 0x8267C32E) & 0x261032B | v150 & 0x2B ^ 0x44980801);
  v160 = *(_QWORD *)(v7 + 9640);
  LODWORD(v149) = *(unsigned __int8 *)(v160 + ((-87 * v19[4095]) ^ 0x20)) ^ 0xFFFFFFAE;
  LODWORD(v150) = (v149 >> 1) & 0x46 ^ v149 ^ ((((v135 ^ 0xFFFFE15B) & 8)
                                                            + ((v135 ^ 0xFFFFE15B) & 8 ^ 8)
                                                            - 8) | 0xFFFFFFF6);
  LODWORD(v149) = (v19[4064] >> 1) | (v19[4064] << 7);
  v161 = *(_QWORD *)(v7 + 9704);
  LOBYTE(v149) = ((((v149 ^ 0x98) + (v149 ^ 0x7E) + 1) ^ 0xB9 ^ *(_BYTE *)(v161
                                                                         + (((v19[4064] >> 1) | (v19[4064] << 7)) ^ 0x95)))
                + 10) ^ 0xC7;
  LODWORD(v134) = v156 ^ *(_DWORD *)(v137 + ((4 * (109 * v134)) ^ 0x2FC));
  LODWORD(v149) = *(unsigned __int8 *)(v138
                                     + (((v149 >> 1) | ((_BYTE)v149 << 7)) ^ 0x25u));
  LOBYTE(v156) = (v149 ^ 0xE5 ^ ((unint64_t)((2 * (_DWORD)v149) ^ 0xFFFFFF8A) << (((v156 & 8)
                                                                                        + (v156 & 8 ^ 8)
                                                                                        + 20) & 0xE7)))
               + 10;
  LODWORD(v151) = *(_DWORD *)(v145 + 4 * (((v150 >> 5) | (8 * v150)) ^ 0x5Fu)) ^ __ROR4__(*(_DWORD *)(v133 + 4 * (v24[30] ^ 0x63)), 19) ^ (v151 >> 1) & 0xA056852 ^ v151 ^ *(_DWORD *)(v155 + 4 * (v156 ^ 0xEFu)) ^ 0x413131BE;
  v19[4064] = BYTE3(v151);
  v19[4034] = (v134 ^ 0xD9617A8B) >> 24;
  LOBYTE(v149) = *(_BYTE *)(v138
                          + ((((v134 ^ 0xD9617A8B) >> 9) & 0x80 | ((v134 ^ 0xD9617A8B) >> 17) & 0x7F) ^ 0x25));
  v19[4065] = (v149 ^ (32 * v149) ^ 0x45) + 10;
  *(_BYTE *)(*(_QWORD *)(v7 + 9728) + ((v135 ^ 0x84 | v135 ^ 0xFFFFE15B) & 0xCFLL)) = BYTE2(v151);
  LOBYTE(v135) = *(_BYTE *)(v161
                          + (((v134 >> 1) & 0x80 | ((unsigned __int16)(v134 ^ 0x7A8B) >> 9)) ^ 0x95)) ^ ((((v134 >> 1) & 0x80 | ((unsigned __int16)(v134 ^ 0x7A8B) >> 9)) ^ 0x98) + (((v134 >> 1) & 0x80 | ((unsigned __int16)(v134 ^ 0x7A8B) >> 9)) ^ 0x7E) + 1) ^ 0xB9;
  v162 = (((v134 ^ 0xD9617A8B) & 1) << 7) | ((v134 ^ 0x8B) >> 1);
  v163 = v158;
  LOBYTE(v135) = *(_BYTE *)(v158 + ((v135 + 10) ^ 0x3BLL));
  v24[30] = BYTE1(v151);
  *v24 = (v135 ^ 0x60) + 3;
  LOBYTE(v135) = *(_BYTE *)(v161 + (v162 ^ 0x95)) ^ ((v162 ^ 0x98) + (v162 ^ 0x7E) + 1) ^ 0xB9;
  v24[61] = v151 ^ v156;
  v24[31] = (v135 + 10) ^ 0x1D;
  LODWORD(v135) = v24[123];
  LOBYTE(v162) = *(_BYTE *)(v138
                          + ((((v24[93] ^ 0x1D) >> 1) | ((v24[93] ^ 0x1D) << 7)) ^ 0x25));
  v164 = (unint64_t)((v162 ^ (32 * v162) ^ 0x45) + 10) << ((v135 & 0x10 ^ 0x10) + (v135 & 0x10));
  LOBYTE(v139) = *(_BYTE *)(*(_QWORD *)(v7 + 9552) + ((-87 * (v24[124] ^ 0x1D)) ^ 0x8BLL)) + 94;
  LODWORD(v151) = (v24[155] | ((v24[62] ^ 0x1D) << 24) | ((((v139 >> 5) | (8 * v139)) ^ 0x98) << 8)) ^ v164;
  LODWORD(v139) = (((v24[155] ^ v164) ^ 0x8882) + ((v24[155] ^ v164) ^ 0x6E) + 1) ^ *(unsigned __int16 *)(v157 + 2 * ((v24[155] ^ v164) ^ 0x38u));
  LOBYTE(v156) = (*(_BYTE *)(v158 + (BYTE1(v151) ^ 0x95)) ^ 0x60) + 3;
  LODWORD(v150) = (v156 & 0x42 ^ 0xEEC5B942) + (v156 & 0x42);
  v165 = *(_QWORD *)(v7 + 9128);
  HIDWORD(v33) = *(_DWORD *)(v165 + 4 * (BYTE2(v164) ^ 0xEELL));
  LODWORD(v33) = HIDWORD(v33);
  v166 = *(_QWORD *)(v7 + 8696);
  LODWORD(v164) = *(_DWORD *)(v166 + 4 * (BYTE3(v151) ^ 0x22)) ^ (v33 >> 30) ^ (1394708534 * (v33 >> 30)) ^ BYTE3(v151);
  LODWORD(v151) = *(_DWORD *)(*(_QWORD *)(v7 + 9200) + 4 * (v156 ^ 0x7Du));
  LODWORD(v164) = v164 ^ v139;
  LODWORD(v139) = *(_DWORD *)(*(_QWORD *)(v7 + 8720)
                            + 4 * (((*(_BYTE *)(v163 + (v24[185] ^ 0xA9)) ^ 0x60) + 3) ^ 0x6Bu));
  v167 = v24[154];
  v168 = *(_QWORD *)(v7 + 8648);
  LODWORD(v149) = *(_DWORD *)(v168 + 4 * (v167 ^ 0x2C));
  LODWORD(v135) = *(_DWORD *)(*(_QWORD *)(v7 + 8736) + 4 * (v135 ^ 0x24));
  LODWORD(v153) = *(_DWORD *)(*(_QWORD *)(v7 + 9160) + 4 * (v24[92] ^ 0x28));
  LODWORD(v151) = (-706386747 * v151) ^ v164 ^ 0xAF612041;
  v24[62] = BYTE3(v151);
  LODWORD(v167) = v167 ^ v139 ^ v149 ^ v150 ^ __ROR4__(v135, 29) ^ __ROR4__(v153, 11) ^ 0x35DE8E27;
  v24[92] = BYTE3(v167);
  v24[123] = BYTE2(v167);
  v24[93] = BYTE2(v151);
  LODWORD(v135) = *(unsigned __int8 *)(v160 + ((-87 * BYTE1(v151)) ^ 0x20));
  LODWORD(v135) = (v135 >> 1) & 0x46 ^ v135;
  LOBYTE(v164) = v135 >> 5;
  LOBYTE(v139) = (v135 >> 5) | (8 * v135);
  v24[124] = v139 ^ 0xF0;
  v24[154] = BYTE1(v167);
  v169 = (v151 >> 5) | (8 * (v151 & 0x1F));
  v170 = *(_QWORD *)(v7 + 9648);
  LOBYTE(v151) = *(_BYTE *)(v170 + (v169 ^ 0x5E));
  v24[185] = v167;
  v24[155] = (109 * ((v151 + (v169 ^ 0x52) + 1) ^ 0x5C)) ^ 0x1D;
  LOBYTE(v167) = (v19[3999] >> 1) | (v19[3999] << 7);
  LOBYTE(v150) = *(_BYTE *)(v161 + (v167 ^ 0x95)) ^ ((v167 ^ 0x98) + (v167 ^ 0x7E) + 1) ^ 0xB9;
  LOWORD(v167) = ((v19[3969] ^ 0x7C) + (v19[3969] ^ 0x8890) + 1) ^ *(_WORD *)(v157 + 2 * (v19[3969] & 0x56 ^ 0x54 ^ (v19[3969] ^ 0x7C | 0x56u)));
  LODWORD(v149) = (v169 & 0x56 ^ 0x46) + (v169 & 0x56 ^ 0x10);
  v171 = v24[186];
  LODWORD(v149) = ((*(_BYTE *)(v163 + (v171 ^ 0xC4)) ^ 0x60) + 3) ^ v149;
  v172 = *(_QWORD *)(v7 + 9536);
  HIDWORD(v33) = *(_DWORD *)(v165 + 4 * (v19[3907] ^ 0xD1));
  LODWORD(v33) = HIDWORD(v33);
  v173 = *(_QWORD *)(v7 + 8640);
  LODWORD(v153) = *(_DWORD *)(v173 + 4 * ((v150 + 10) ^ 0xB5u));
  LODWORD(v151) = v19[3938] ^ *(_DWORD *)(v159 + 4 * (v19[3938] ^ 0x18)) ^ (v33 >> 30) ^ (1394708534 * (v33 >> 30)) ^ (unsigned __int16)v167 ^ v149 ^ 0xB810A967 ^ *(_DWORD *)(v166 + 4 * (v149 ^ 0xA2));
  LOBYTE(v111) = v19[3968];
  LODWORD(v155) = *(_DWORD *)(v168 + 4 * (v111 ^ 0x8Du));
  LODWORD(v150) = (*(unsigned __int8 *)(v163
                                      + ((109
                                                         * (((v19[3937] >> 5) | (8 * v19[3937])) ^ 0xB9 ^ *(_BYTE *)(v172 + (((v19[3937] >> 5) | (8 * v19[3937])) ^ 0x3BLL)))) ^ 0xE4)) ^ 0x60)
                + 3;
  LODWORD(v161) = *(_DWORD *)(*(_QWORD *)(v7 + 8712) + 4 * (v150 ^ 0xB4u));
  LOBYTE(v160) = v19[3906];
  v174 = *(_QWORD *)(v7 + 8704);
  LODWORD(v166) = *(_DWORD *)(v174 + 4 * (v160 ^ 0xEAu));
  v19[3938] = BYTE1(v151);
  LODWORD(v153) = (v111 ^ v160) ^ v155 ^ v153 ^ 0x46F90B2B ^ ((v153 ^ 0x46F90B2B) >> 1) & 0xA056852 ^ v166 ^ 0x682319A7 ^ v161;
  v19[3968] = BYTE1(v153);
  v24[186] = BYTE3(v151);
  v19[3906] = BYTE3(v153);
  v19[3907] = BYTE2(v151);
  v19[3999] = v153;
  v19[3937] = BYTE2(v153);
  v19[3969] = v151;
  LODWORD(v151) = v19[4000] ^ 0x63 ^ *(unsigned __int8 *)(*(_QWORD *)(v7 + 9680)
                                                                         + (v19[4000] ^ 0xAALL));
  *(_DWORD *)(v7 + 8632) = 1;
  LODWORD(v151) = v151 + 3;
  HIDWORD(v33) = v151 ^ ((((v164 & 1) == 0) + (v139 & 1)) | 0x1C);
  LODWORD(v33) = (_DWORD)v151 << 24;
  LOBYTE(v164) = (*(_BYTE *)(v163 + (v19[4093] ^ 0x3BLL)) ^ 0x60) + 3;
  LOWORD(v164) = ((v164 ^ 0x78) + (v164 ^ 0x8894) + 1) ^ *(_WORD *)(v157 + 2 * (v164 ^ 0x2Eu));
  LODWORD(v139) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640)
                                     + ((-87
                                                        * ((((((v33 >> 29) ^ 0x52)
                                                            + *(_BYTE *)(v170 + ((v33 >> 29) ^ 0x5ELL))
                                                            + 1) ^ 0x5C)
                                                          * ((v167 & 0x6D ^ 0x24) + (v167 & 0x6D ^ 0x49))) ^ 0xD4)) ^ 0x20));
  v175 = ((((v150 ^ 0x40) & 0xD0) + ((v150 ^ 0xFFFFFFB4) & 0xD0)) | 0x60) ^ v24[27] ^ 0xBLL;
  v176 = *(_QWORD *)(v7 + 9544);
  LOBYTE(v151) = *(_BYTE *)(v176
                          + ((((v19[4062] ^ 0x1D) >> 1) | ((v19[4062] ^ 0x1D) << 7)) ^ 0x25));
  LODWORD(v150) = ((v151 ^ (32 * v151) ^ 0x45) + 10) ^ 0x42;
  LODWORD(v151) = *(_DWORD *)(v159 + 4 * (((v151 ^ (32 * v151) ^ 0x45) + 10) ^ 2u));
  v177 = *(_QWORD *)(v7 + 9128);
  HIDWORD(v33) = *(_DWORD *)(v177 + 4 * (v19[4031] ^ 0x20));
  LODWORD(v33) = HIDWORD(v33);
  v178 = *(_QWORD *)(v7 + 9096);
  LODWORD(v151) = (v33 >> 30) ^ (1394708534 * (v33 >> 30)) ^ v151 ^ *(_DWORD *)(v178
                                                                              + 4
                                                                              * (((((v139 >> 1) & 0x46 ^ v139) >> 5) | (8 * ((v139 >> 1) & 0x46 ^ v139))) ^ 0x9Eu));
  LOBYTE(v171) = *(_BYTE *)(*(_QWORD *)(v7 + 9552)
                          + ((v19[4061] * (((v171 & 0x29 ^ 0x29) + (v171 & 0x29)) | 0x89)) ^ 0x8BLL))
               + 94;
  LODWORD(v139) = v150 ^ (unsigned __int16)v164;
  LODWORD(v175) = (v19[4092] ^ v19[4030]) ^ *(_DWORD *)(v168 + 4 * (v19[4092] ^ 0xC8u)) ^ *(_DWORD *)(v173 + 4 * v175) ^ 0x46F90B2B ^ *(_DWORD *)(v174 + 4 * (v19[4030] ^ 0x5Fu)) ^ ((*(_DWORD *)(v173 + 4 * v175) ^ 0x46F90B2Bu) >> 1) & 0xA056852 ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v7 + 8736) + 4 * (((v171 >> 5) | (8 * v171)) ^ 0x2Au)), 29) ^ 0x6E36BA5;
  v19[4030] = BYTE3(v175);
  v19[4061] = BYTE2(v175);
  LOWORD(v164) = v164 ^ 0xE15B;
  LODWORD(v139) = v139 ^ 0x428697D ^ v151;
  *(_BYTE *)(*(_QWORD *)(v7 + 9728)
           + (~(_WORD)v164 & 0x4E36 ^ (v164 & 0x4E36 | 0xE44D15A3AF3D0000) ^ (v164 & 0x4EB9 | 0xE44D15A3AF3D0000 | ~(_WORD)v164 & 0x4EB9))) = BYTE2(v139) ^ 0x1D;
  v179 = (*(_DWORD *)(v7 + 9592) - 3274) | 0xEE8u;
  *(_QWORD *)(v7 + 9520) = v179;
  v180 = ((*(_QWORD *)(v7 + 9584) ^ 0xC05D98E9F4EA23EALL) >> (((v179 ^ 0xD9) & *(_QWORD *)(v7 + 9584) ^ 0x20)
                                                            + ((v179 ^ 0xD9) & *(_QWORD *)(v7 + 9584)))) ^ 0x95386D2FAC67C1A6;
  *(_QWORD *)(v7 + 6832) = v180 & 0xF687428A452BD27 ^ 0xB4061CA11FB54839 ^ ((v180 & 0xF6874285BAD42D8)
                                                                              - (v180 & 0x6485408128D0248)
                                                                              + (v180 & 0x6485408128D0248 ^ 0x6CFD51F329D976BLL));
  LODWORD(v171) = *(_DWORD *)(v7 + 9672) ^ 0x32B9D589;
  LODWORD(v168) = *(_DWORD *)(v7 + 9600);
  *(_DWORD *)(v7 + 9672) = v171
                         + 2 * (v168 - 1983605499)
                         - 1795848416
                         - ((2 * (v171 + 2 * (v168 - 1983605499) + 1648079255)) & 0x6573AB12);
  *(_DWORD *)(v7 + 9696) ^= (v168 - 1983605499) ^ 0xFE05CCCD;
  v19[4000] = BYTE3(v151) ^ 0x19;
  LOBYTE(v151) = ((v139 >> 5) & 0xF8 | ((unsigned __int16)v139 >> 13)) ^ 0xB9 ^ *(_BYTE *)(v172 + (((v139 >> 5) & 0xF8 | ((unsigned __int16)v139 >> 13)) ^ 0x3BLL));
  v19[4092] = BYTE1(v175);
  v19[4062] = (109 * v151) ^ ((~(_BYTE)v164 & 0x1D) + (v164 & 0x1D));
  v19[4093] = (109
             * (((((v139 >> 5) | (8 * (v139 & 0x1F))) ^ 0x52)
               + *(_BYTE *)(v170 + (((v139 >> 5) | (8 * (v139 & 0x1F))) ^ 0x5ELL))
               + 1) ^ 0x5C)) ^ 0x1D;
  v181 = v176;
  v24[27] = v175;
  LOBYTE(v151) = *(_BYTE *)(v172 + (((v24[90] >> 5) | (8 * v24[90])) ^ 0xD3));
  v182 = *(_QWORD *)(v7 + 9736);
  LOWORD(v139) = *(_WORD *)(v157 + 2 * (v24[121] ^ 0x3ELL)) ^ ((v24[121] ^ 0x68) + (v24[121] ^ 0x8884) + 1);
  HIDWORD(v33) = *(_DWORD *)(v177 + ((4 * (v24[59] ^ 0x1DLL)) ^ 0x13C));
  LODWORD(v33) = HIDWORD(v33);
  LODWORD(v164) = (1394708534 * (v33 >> 30)) ^ (v33 >> 30) ^ *(_DWORD *)(v178
                                                                       + ((4
                                                                         * ((*(_BYTE *)(v163 + (v24[28] ^ 0x3BLL)) ^ 0x60)
                                                                                           + 3)) ^ 0x254)) ^ (-706386747 * *(_DWORD *)(*(_QWORD *)(v7 + 9200) + 4 * ((109 * (((v24[90] >> 5) | (8 * v24[90])) ^ 0x51 ^ v151)) ^ 0xEDu)));
  LOBYTE(v151) = *(_BYTE *)(v176 + (((v24[89] >> 1) | (v24[89] << 7)) ^ 0x25));
  LODWORD(v151) = *(_DWORD *)(*(_QWORD *)(v7 + 8720) + 4 * (v24[151] ^ 0xEDLL)) ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v7 + 9136)+ 4 * (v24[120] ^ 0xFDLL)), 19) ^ *(_DWORD *)(*(_QWORD *)(v7 + 8712) + 4 * (((v151 ^ (32 * v151) ^ 0x45) + 10) ^ 0xD5u)) ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v7 + 9160) + 4 * (v24[58] ^ 0x27)), 11) ^ 0x360B1C2C;
  v24[89] = BYTE2(v151);
  v24[28] = BYTE3(v164) ^ 0xC4;
  v24[58] = BYTE3(v151);
  LOWORD(v139) = v164 ^ v139;
  v24[59] = BYTE2(v164) ^ 0x40;
  v24[120] = BYTE1(v151);
  v24[121] = v139 ^ 0x63;
  v24[90] = BYTE1(v139) ^ 0x7E;
  v24[151] = v151;
  LODWORD(v176) = *(_DWORD *)(v7 + 5328);
  LODWORD(v160) = *(_DWORD *)(v7 + 5316);
  LODWORD(v170) = *(_DWORD *)(v7 + 6312);
  LODWORD(v149) = -(int)v176 - v160 + v170;
  LODWORD(v133) = *(_DWORD *)(v7 + 6136);
  LODWORD(v178) = -(int)v149 - 570456343 + v160 - v149 + 583038815;
  LODWORD(v150) = v178 ^ (v160 - v133 - v149 + 583038815);
  *(_DWORD *)(v7 + 9504) = (v149 - 187774631) ^ 0x3C5BCFBF ^ v178;
  LODWORD(v151) = ((*(_BYTE *)(v7 + 5168) ^ 0xE3) >> 1) | ((*(_DWORD *)(v7 + 5168) ^ 0xFFFFFFE3) << 7);
  v183 = *(_DWORD *)(v7 + 4864) ^ 0x1Du;
  *(_QWORD *)(v7 + 8512) = v183;
  *(_QWORD *)(v7 + 8504) = (v183 & 0xD3 ^ 0xD3) + (v183 & 0xD3);
  *(_DWORD *)(v7 + 9008) = (*(_DWORD *)(v7 + 9512) ^ 0x5B243FFE) - 20035760;
  *(_DWORD *)(v7 + 8768) = 1341980924 - v133;
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 9632) + 2055416290;
  *(_DWORD *)(v7 + 8872) = -102630092 - v170;
  *(_DWORD *)(v7 + 8880) = *(_DWORD *)(v7 + 9656) - 219365217;
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 9664) + 2139188866;
  *(_DWORD *)(v7 + 8688) = v149 + 282260166;
  *(_DWORD *)(v7 + 9012) = *(_DWORD *)(v7 + 9624) + 1286858811;
  *(_DWORD *)(v7 + 8680) = v133 - v149 - 752551446;
  *(_DWORD *)(v7 + 8964) = 996421109 - v168;
  *(_DWORD *)(v7 + 8748) = -(int)v176 - ((1859762414 - 2 * v176) & 0x5CBE574C) - 1513355235;
  *(_DWORD *)(v7 + 8752) = 2084405004 - *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 8888) = 991917491 - (v160 - v133);
  *(_DWORD *)(v7 + 8744) = v171 - 1843727824;
  *(_DWORD *)(v7 + 9568) = v150 - 397711303;
  LODWORD(v157) = v176 + 2 * (v149 - 187774631) + 463085070;
  LODWORD(v171) = *(_DWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9664) = v168 - 1983605499 - v171;
  *(_DWORD *)(v7 + 9512) = v171 ^ 0xA4DBC001;
  *(_QWORD *)(v7 + 9528) = *(_QWORD *)(v7 + 9688) - 12;
  *(_DWORD *)(v7 + 9496) = (v149 - 187774631 - v150) ^ 0x965112E8;
  *(_QWORD *)(v7 + 8496) = (-87 * (*(_DWORD *)(v7 + 5148) ^ 0x1D)) ^ 0x20;
  v184 = (*(_DWORD *)(v7 + 4936) >> 5) | (8 * *(_DWORD *)(v7 + 4936));
  *(_QWORD *)(v7 + 8440) = v184;
  *(_QWORD *)(v7 + 8408) = v184 ^ 0xD3;
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 6840) ^ 0xFLL;
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 5032) ^ 0x6ELL;
  *(_QWORD *)(v7 + 8384) = (-87 * (*(_DWORD *)(v7 + 4816) ^ 0x4A)) ^ 0x20;
  *(_DWORD *)(v7 + 8376) = (v151 ^ 0xFFFFFF98) + (v151 ^ 0x7E) + 1;
  *(_QWORD *)(v7 + 8368) = v151 ^ 0x95;
  *(_QWORD *)(v7 + 8360) = *(_QWORD *)(v7 + 6848) ^ 7;
  v185 = *(_QWORD *)(v7 + 8288);
  *(_QWORD *)(v7 + 7416) = v185 - 0x194C6113CD9FFCD4;
  *(_QWORD *)(v7 + 7408) = v185 - 0x194C6113CD9FFCD3;
  *(_QWORD *)(v7 + 7344) = v185 - 0x194C6113CD9FFCD2;
  *(_QWORD *)(v7 + 7336) = v185 - 0x194C6113CD9FFCD1;
  *(_QWORD *)(v7 + 7328) = v185 - 0x194C6113CD9FFCD0;
  *(_QWORD *)(v7 + 7320) = v185 - 0x194C6113CD9FFCCFLL;
  *(_QWORD *)(v7 + 7312) = v185 - 0x194C6113CD9FFCCELL;
  *(_QWORD *)(v7 + 7304) = v185 - 0x194C6113CD9FFCCDLL;
  *(_QWORD *)(v7 + 7296) = v185 - 0x194C6113CD9FFCCCLL;
  *(_QWORD *)(v7 + 7288) = v185 - 0x194C6113CD9FFCCBLL;
  *(_QWORD *)(v7 + 7280) = v185 - 0x194C6113CD9FFCCALL;
  *(_QWORD *)(v7 + 7272) = v185 - 0x194C6113CD9FFCC9;
  *(_QWORD *)(v7 + 7264) = v185 - 0x194C6113CD9FFCC8;
  *(_QWORD *)(v7 + 7256) = v185 - 0x194C6113CD9FFCC7;
  *(_QWORD *)(v7 + 7248) = v185 - 0x194C6113CD9FFCC6;
  *(_QWORD *)(v7 + 7240) = v185 - 0x194C6113CD9FFCC5;
  *(_QWORD *)(v7 + 7232) = v185 - 0x194C6113CD9FFCC4;
  *(_QWORD *)(v7 + 7224) = v185 - 0x194C6113CD9FFCC3;
  *(_QWORD *)(v7 + 7216) = v185 - 0x194C6113CD9FFCC2;
  *(_QWORD *)(v7 + 7208) = v185 - 0x194C6113CD9FFCC1;
  *(_QWORD *)(v7 + 7200) = v185 - 0x194C6113CD9FFCC0;
  *(_QWORD *)(v7 + 7192) = v185 - 0x194C6113CD9FFCBFLL;
  *(_QWORD *)(v7 + 7184) = v185 - 0x194C6113CD9FFCBELL;
  *(_QWORD *)(v7 + 7176) = v185 - 0x194C6113CD9FFCBDLL;
  *(_QWORD *)(v7 + 7168) = v185 - 0x194C6113CD9FFCBCLL;
  *(_QWORD *)(v7 + 7160) = v185 - 0x194C6113CD9FFCBBLL;
  *(_QWORD *)(v7 + 7144) = v185 - 0x194C6113CD9FFCBALL;
  *(_QWORD *)(v7 + 7128) = v185 - 0x194C6113CD9FFCB9;
  *(_QWORD *)(v7 + 7112) = v185 - 0x194C6113CD9FFCB8;
  *(_QWORD *)(v7 + 6992) = v185 - 0x194C6113CD9FFCB7;
  *(_QWORD *)(v7 + 6968) = v185 - 0x194C6113CD9FFCB6;
  *(_QWORD *)(v7 + 6944) = v185 - 0x194C6113CD9FFCB5;
  *(_DWORD *)(v7 + 8760) = v160 + 1368518716;
  *(_DWORD *)(v7 + 8984) = v176 - 153512584;
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 5156) ^ 0x1D;
  *(_DWORD *)(v7 + 8352) = *(_DWORD *)(v7 + 5160) ^ 0x1D;
  *(_DWORD *)(v7 + 8312) = *(_DWORD *)(v7 + 5164) ^ 0x1D;
  *(_DWORD *)(v7 + 8288) = *(_DWORD *)(v7 + 5000) ^ 0x39;
  *(_DWORD *)(v7 + 8280) = *(_DWORD *)(v7 + 5016) ^ 0xFFFFFFB5;
  *(_DWORD *)(v7 + 8264) = *(_DWORD *)(v7 + 5008) ^ 0xFFFFFFFB;
  *(_DWORD *)(v7 + 8260) = *(_DWORD *)(v7 + 5004) ^ 0x49;
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 4848) ^ 0xFFFFFF88;
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 5012) ^ 0xFFFFFFDE;
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 4872) ^ 0x1D;
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 5020) ^ 0x1D;
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 5044) ^ 0x4B;
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 5028) ^ 0x33;
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 4868) ^ 0x1D;
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 4776) ^ 0xFFFFFFF6;
  *(_DWORD *)(v7 + 7976) = *(_DWORD *)(v7 + 5024) ^ 0xFFFFFFF1;
  *(_DWORD *)(v7 + 7952) = *(_DWORD *)(v7 + 5176) ^ 0xFFFFFFDB;
  *(_DWORD *)(v7 + 7936) = *(_DWORD *)(v7 + 5056) ^ 0x74;
  *(_DWORD *)(v7 + 7888) = *(_DWORD *)(v7 + 5048) ^ 0xFFFFFFF5;
  *(_DWORD *)(v7 + 7792) = *(_DWORD *)(v7 + 5052) ^ 0xFFFFFFFD;
  *(_DWORD *)(v7 + 7784) = *(_DWORD *)(v7 + 5072) ^ 0xFFFFFFD9;
  *(_DWORD *)(v7 + 7776) = *(_DWORD *)(v7 + 5180) ^ 0x5D;
  *(_DWORD *)(v7 + 7712) = *(_DWORD *)(v7 + 5060) ^ 0xFFFFFFB0;
  *(_DWORD *)(v7 + 7704) = *(_DWORD *)(v7 + 5080) ^ 0x4B;
  *(_DWORD *)(v7 + 7696) = *(_DWORD *)(v7 + 5068) ^ 0xB;
  *(_DWORD *)(v7 + 7688) = *(_DWORD *)(v7 + 5064) ^ 0xFFFFFFBF;
  *(_DWORD *)(v7 + 7680) = *(_DWORD *)(v7 + 5084) ^ 0x63;
  *(_DWORD *)(v7 + 7672) = *(_DWORD *)(v7 + 5076) ^ 0xFFFFFFFB;
  *(_DWORD *)(v7 + 7664) = *(_DWORD *)(v7 + 5184) ^ 0xFFFFFFF9;
  *(_DWORD *)(v7 + 9688) = 0;
  *(_DWORD *)(v7 + 8616) = -*(_DWORD *)(v7 + 8764);
  *(_DWORD *)(v7 + 9608) = v157;
  *(_DWORD *)(v7 + 9488) = 0;
  LODWORD(v133) = *(_QWORD *)(v7 + 9520) + 608;
  LODWORD(v150) = 31 * *(_DWORD *)(v7 + 9688);
  v186 = *(_QWORD *)(v7 + 9728);
  LOBYTE(v184) = *(_BYTE *)(v186 + v150 % 0x196) ^ 0x1D;
  LODWORD(v184) = *(unsigned __int8 *)(v181
                                     + (((v184 >> 1) | ((_BYTE)v184 << 7)) ^ 0x25));
  *(_DWORD *)(v7 + 9632) = v133;
  LOBYTE(v171) = *(_BYTE *)(v186 + ((int)v150 + 62) % 0x196u) ^ 0x1D;
  LOBYTE(v185) = *(_BYTE *)(v181 + (((v171 >> 1) | ((_BYTE)v171 << 7)) ^ 0x25));
  LODWORD(v184) = (((*(unsigned __int8 *)(v186 + ((int)v150 + 31) % 0x196u) ^ 0x1D) << 16) | ((v184 ^ 0x45 ^ ((_DWORD)v184 << (v133 ^ 0x5C))) << 24) | (((v185 ^ (32 * v185) ^ 0x45) + 10) << 8) | *(unsigned __int8 *)(v186 + ((int)v150 + 93) % 0x196u))
                + 167772160;
  v187 = *(_QWORD *)(v7 + 9528);
  *(_QWORD *)(v7 + 9656) = v187 + 1064;
  LODWORD(v164) = 24301
                * *(unsigned __int16 *)(v187 + 1064 + 2 * ((v176 + 2 * (v149 + 89) - 42) ^ 0xE2u));
  LOBYTE(v151) = *(_BYTE *)(*(_QWORD *)(v7 + 9552)
                          + ((-87
                                             * (((v176 + 2 * (v149 - 187774631) + 576253910) >> 16) ^ 0xD1)) ^ 0x8BLL))
               + 94;
  *(_QWORD *)(v7 + 9448) = v182 + 21768;
  LODWORD(v185) = *(_DWORD *)(v182
                            + 21768
                            + 4
                            * (((unsigned __int16)(v176 + 2 * (v149 - 13991) - 4138) >> 8) ^ 0x4A ^ ((((_DWORD)v176 + 2 * ((_DWORD)v149 - 187774631) + 576253910) & 0xEC ^ 0xEC) + (((_DWORD)v176 + 2 * ((_DWORD)v149 - 187774631) + 576253910) & 0xECu))));
  v188 = v182 + 71436;
  LODWORD(v151) = *(_DWORD *)(v182 + 71436 + 4
                                           * (((v151 >> 5) | (8 * v151)) ^ 0x70u))
                + (((v151 >> 5) | (8 * v151)) ^ 0xBDD1BCC1)
                + 1;
  *(_QWORD *)(v7 + 9624) = v182 + 18624;
  LODWORD(v184) = v185 ^ ((((v176 + 2 * (v149 - 187774631) + 576253910) >> 24) ^ 0x65) - 483488748) ^ (v164 >> 2) & 0x36F ^ (unsigned __int16)v164 ^ *(_DWORD *)(v182 + 18624 + 4 * (((v185 & 0x7A ^ 0x7A) + (v185 & 0x7A)) ^ ((v176 + 2 * (v149 - 187774631) + 576253910) >> 24) ^ 0x65)) ^ v151 ^ v184;
  v189 = *(_DWORD **)(v7 + 9720);
  v189[207] = v184 ^ 0x92D77CC0;
  LODWORD(v139) = *(unsigned __int8 *)(v186 + ((int)v150 + 8649) % 0x196u);
  LODWORD(v185) = (*(unsigned __int8 *)(v186 + ((int)v150 + 8556) % 0x196u) << 24) | (*(unsigned __int8 *)(v186 + ((int)v150 + 8587) % 0x196u) << 16) | (*(unsigned __int8 *)(v186 + ((int)v150 + 8618) % 0x196u) << 8);
  LODWORD(v24) = *(_DWORD *)(v7 + 9672);
  *(_QWORD *)(v7 + 9600) = v182 + 3520;
  LODWORD(v151) = *(_DWORD *)(v182 + 3520 + 4 * (v24 ^ 0xB1u));
  *(_DWORD *)(v7 + 9672) = (_DWORD)v24;
  LODWORD(v149) = (((v24 >> 8) ^ 0x32B9B6 ^ *(unsigned __int8 *)(*(_QWORD *)(v7 + 9680)
                                                                             + (BYTE1(v24) ^ 0x7FLL)))
                 + 3) ^ 0xFFFFFFDF;
  v190 = (109
                         * ((*(_BYTE *)(*(_QWORD *)(v7 + 9648)
                                      + (((v149 >> 5) | (8 * v149)) ^ 0x5ELL))
                           + (((v149 >> 5) | (8 * v149)) ^ 0x52)
                           + 1) ^ 0x5C)) ^ 0xB8u;
  *(_QWORD *)(v7 + 9576) = v182 + 35460;
  LODWORD(v190) = *(_DWORD *)(v182 + 35460 + 4 * v190);
  *(_QWORD *)(v7 + 9480) = v182 + 64072;
  LODWORD(v111) = *(_DWORD *)(v182 + 64072 + 4 * (((v24 ^ 0x61DD358) >> 16) ^ 0x25u));
  *(_QWORD *)(v7 + 9440) = v182 + 25932;
  LODWORD(v185) = ((v24 ^ 0x61DD358) >> 24) ^ __ROR4__(v151, 25) ^ (v185 | v139) ^ v111 ^ *(_DWORD *)(v182 + 25932 + 4 * (((v24 ^ 0x61DD358) >> 24) ^ 0x99)) ^ v190;
  LODWORD(v139) = v185 ^ 0xD29DF4DE;
  LODWORD(v151) = v185 ^ 0x425C2581;
  v189[70] = v185 ^ 0x425C2581;
  *(_QWORD *)(v7 + 9472) = v182 + 22796;
  LODWORD(v185) = -1138332033 * *(_DWORD *)(v182 + 22796 + 4 * (v184 ^ 0xE9u));
  *(_QWORD *)(v7 + 9592) = v187 + 2682;
  LODWORD(v190) = *(unsigned __int16 *)(v187 + 2682 + 2 * (BYTE1(v184) ^ 0xE4u));
  v191 = *(_QWORD *)(v7 + 9536);
  LOBYTE(v111) = *(_BYTE *)(v191 + (((v151 >> 5) & 0xF8 | ((unsigned __int16)v151 >> 13)) ^ 0x3BLL)) ^ ((v151 >> 5) & 0xF8 | ((unsigned __int16)v151 >> 13)) ^ 0xB9;
  *(_QWORD *)(v7 + 9432) = v182 + 65132;
  LODWORD(v178) = v139 ^ 0x6A;
  LOBYTE(v139) = *(_BYTE *)(*(_QWORD *)(v7 + 9560) + (BYTE2(v139) ^ 0xE7));
  LODWORD(v190) = v185 ^ (v185 >> 5) ^ (v185 >> 4) ^ v190 ^ *(_DWORD *)(v182
                                                                                                  + 65132
                                                                                                  + 4 * (BYTE2(v184) ^ 0xFCu)) ^ *(_DWORD *)(v182 + 4 * (BYTE3(v184) ^ 0x54) + 72488);
  *(_QWORD *)(v7 + 9584) = v182 + 67260;
  LODWORD(v178) = *(_DWORD *)(v182 + 67260 + 4 * v178);
  *(_QWORD *)(v7 + 9416) = v182 + 27020;
  LODWORD(v111) = *(_DWORD *)(v182 + 27020 + 4 * ((109 * v111) ^ 0x66u)) ^ 0xFB13C97E;
  LODWORD(v155) = ((((v139 & 0x60 ^ 0x60) + (v139 & 0x60)) ^ v139) + 3);
  LODWORD(v139) = BYTE3(v151);
  *(_QWORD *)(v7 + 9456) = v182 + 36488;
  LODWORD(v151) = *(_DWORD *)(v182 + 36488 + 4 * (v155 ^ 0xEE));
  *(_QWORD *)(v7 + 9464) = v182 + 52;
  LODWORD(v151) = (*(_DWORD *)(v182 + 52 + 4 * (v139 ^ 0xA8)) - 744648795) ^ v151 ^ v155 ^ ((v111 ^ (v178 + 2105132842) ^ (1501451596 * v111) ^ 0x3F3F797F) - 1061124479 + ((2 * (v111 ^ (v178 + 2105132842) ^ (1501451596 * v111))) & 0x7E7EF2FE));
  LODWORD(v182) = *(_DWORD *)(v7 + 9512);
  LODWORD(v164) = *(_DWORD *)(v7 + 9568) + 397711303;
  LODWORD(v133) = (v24 ^ 0xCD462A76) + 1;
  v189[140] = (*(_DWORD *)(v7 + 9696) ^ 0x1FA3332)
            + 1434674199
            + ((v133 + (v24 ^ 0x1DC3C7CC ^ (v151 + 851039625 - ((2 * v151) & 0x6573AB12)))) ^ ((v164 ^ (v157 + 113168840) ^ v190 ^ 0xE0AD1426) + (v164 ^ (v157 + 113168840) ^ v190 ^ 0x2912C15 ^ v151) + 1) ^ ((v182 ^ 0x5B243FFE) + (v182 ^ 0x1DC3C7CC ^ (v151 - 1529102335 - ((2 * v151) & 0x49B78002))) + 1))
            + 1;
  LODWORD(v187) = *(_DWORD *)(v7 + 9504) ^ 0x3C5BCFBF;
  *v189 = v187 - 14651308 + (v190 ^ 0x1F52EBD9);
  LODWORD(v151) = *(unsigned __int8 *)(v186 + ((int)v150 + 124) % 0x196u);
  LODWORD(v190) = (1828716544
                 * (((v151 >> 5) | (8 * v151)) ^ 0x51 ^ *(unsigned __int8 *)(v191
                                                                                         + (((v151 >> 5) | (8 * v151)) ^ 0xD3)))) | ((*(unsigned __int8 *)(v186 + ((int)v150 + 155) % 0x196u) ^ 0x1D) << 16);
  LODWORD(v151) = (*(unsigned __int8 *)(v186 + ((int)v150 + 186) % 0x196u) ^ 0x1D) << ((v139 & 8 ^ 8) + (v139 & 8));
  LODWORD(v139) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640)
                                     + ((-87 * *(_BYTE *)(v186 + ((int)v150 + 217) % 0x196u)) ^ 0x20));
  LOBYTE(v111) = (((v139 >> 1) & 0x46 ^ v139) >> 5) | (8
                                                                                    * ((v139 >> 1) & 0x46 ^ v139));
  LODWORD(v139) = v164 - (v157 + 113168840);
  LODWORD(v24) = v139 + 1160864075;
  LOWORD(v164) = 24301
               * *(_WORD *)(*(_QWORD *)(v7 + 9656)
                          + 2
                          * (((((((v24 >> 1) | ((v24 & 1) << 7)) ^ 0x98)
                                               + (((v24 >> 1) | ((v24 & 1) << 7)) ^ 0x7E)
                                               + 1) ^ 0xB9 ^ *(_BYTE *)(*(_QWORD *)(v7 + 9704)
                                                                      + (((v24 >> 1) | ((v24 & 1) << 7)) ^ 0x95)))
                                             + 10) ^ 0x21u));
  LOWORD(v160) = (unsigned __int16)v164 >> 2;
  LOWORD(v155) = ((unsigned __int16)v164 >> 2) & 0x36F ^ v164;
  LODWORD(v164) = (BYTE2(v24) ^ 0xBDD1BC9E) + *(_DWORD *)(v188 + 4 * (BYTE2(v24) ^ 0x2Fu));
  v192 = *(_QWORD *)(v7 + 9736) + 19672;
  *(_QWORD *)(v7 + 9504) = v192;
  LODWORD(v176) = *(_DWORD *)(v192 + 4 * ((v24 >> 24) ^ 0x1B))
                + ((v24 >> 24) ^ 0xD214389A);
  v193 = *(_QWORD *)(v7 + 9736) + 10956;
  *(_QWORD *)(v7 + 9616) = v193;
  LODWORD(v164) = v190 ^ *(_DWORD *)(v193 + 4 * (((unsigned __int16)(v139 + 24907) >> 8) ^ 0x7Eu)) ^ (v164 + 1) ^ v111 ^ 0xF0 ^ v176 ^ v151;
  LODWORD(v155) = v164 ^ (unsigned __int16)v155;
  v189[206] = v155 ^ 0xD65B70AF;
  LODWORD(v191) = v133 + (v182 ^ 0xA4DBC001);
  *(_DWORD *)(v7 + 9400) = v191;
  LODWORD(v178) = *(_DWORD *)(v7 + 9688);
  LODWORD(v133) = 31 * (v178 | 5);
  LODWORD(v190) = *(unsigned __int8 *)(v186
                                     + 31
                                     * ((((55 - *(_DWORD *)(v7 + 9608)) | ((_DWORD)v157 + 113168840)) & 0x114)
                                      + (v178 | 5))
                                     % 0x196);
  LOBYTE(v190) = *(_BYTE *)(*(_QWORD *)(v7 + 9544)
                          + (((v190 >> 1) | ((_BYTE)v190 << 7)) ^ 0x25));
  LODWORD(v150) = (*(unsigned __int8 *)(v186 + ((int)v150 + 8680) % 0x196u) << 24) | (((v190 ^ (32 * v190) ^ 0x45) + 10) << 16) | (*(unsigned __int8 *)(v186 + ((int)v133 + 8587) % 0x196u) << 8) | *(unsigned __int8 *)(v186 + ((int)v133 + 8618) % 0x196u);
  v194 = *(_QWORD *)(v7 + 9736) + 30152;
  *(_QWORD *)(v7 + 9608) = v194;
  v195 = *(_QWORD *)(v7 + 9736) + 15448;
  LODWORD(v150) = *(_DWORD *)(*(_QWORD *)(v7 + 9576)
                            + 4
                            * (((unsigned __int16)(v191 + 24907) >> 8) ^ ((v160 & 0x6F ^ 0x6F)
                                                                                         + (v160 & 0x6F)) ^ 0xE)) ^ *(_DWORD *)(v194 + 4 * (((v191 + 1160864075) >> 24) ^ 0xEC)) ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v7 + 9600) + 4 * ((v191 + 75) ^ 0xDu)), 25) ^ *(_DWORD *)(v195 + 4 * (((v191 + 1160864075) >> 16) ^ 0x66u)) ^ v150;
  v189[69] = v150 ^ 0xCF731265;
  LODWORD(v151) = *(_DWORD *)(v7 + 9496) ^ 0x965112E8;
  LODWORD(v176) = v151 - v139;
  v196 = *(_QWORD *)(v7 + 9680);
  LODWORD(v139) = v157 + 113168840 - v151;
  v197 = v155 ^ 0x8448D13C;
  v198 = *(_QWORD *)(v7 + 9560);
  LODWORD(v160) = *(unsigned __int16 *)(*(_QWORD *)(v7 + 9592)
                                      + 2
                                      * (((*(_BYTE *)(v198 + (BYTE1(v197) ^ 0xD5)) ^ 0x60) + 3) ^ 0xD8u));
  v199 = ((v155 ^ 9 ^ *(_BYTE *)(v196 + (v155 ^ 0xC0))) + 3) ^ 0x6Cu;
  v200 = *(_QWORD *)(v7 + 9736) + 17560;
  *(_QWORD *)(v7 + 9392) = v200;
  LODWORD(v199) = v160 ^ *(_DWORD *)(v200 + 4 * v199);
  LOBYTE(v197) = *(_BYTE *)(*(_QWORD *)(v7 + 9552)
                          + ((-87 * (v197 >> ((v155 & 0x10 ^ 0x10) + (v155 & 0x10)))) ^ 0x8BLL))
               + 94;
  v201 = *(_QWORD *)(v7 + 9736) + 32228;
  *(_QWORD *)(v7 + 9568) = v201;
  LOBYTE(v197) = (v197 >> 5) | (8 * v197);
  LODWORD(v164) = v199 ^ *(_DWORD *)(v201 + 4 * (BYTE3(v164) ^ 0x9C));
  LOBYTE(v199) = *(_BYTE *)(v196 + (v197 ^ 0x69));
  LOBYTE(v197) = v197 ^ 0x98;
  v202 = *(_QWORD *)(v7 + 9736) + 37512;
  *(_QWORD *)(v7 + 9424) = v202;
  LODWORD(v199) = v164 ^ ((v199 ^ v197 ^ 0x38) + 3) ^ 0x9E5640E7 ^ *(_DWORD *)(v202
                                                                                              + 4
                                                                                              * (((v199 ^ v197 ^ 0x38) + 3) ^ 0xC9u));
  *(_DWORD *)(v7 + 9408) = v176;
  LODWORD(v174) = v139 - v176;
  LODWORD(v197) = *(_DWORD *)(*(_QWORD *)(v7 + 9584)
                            + 4 * (v150 ^ 0x65 ^ ((v197 & 0x5B ^ 0x5B) + (v197 & 0x5B)) ^ 0x1F));
  v203 = *(_QWORD *)(v7 + 9416);
  LODWORD(v160) = *(_DWORD *)(v203 + 4 * (BYTE1(v150) ^ 0xF9u));
  LODWORD(v111) = ((v150 ^ 0xCF731265) >> 16);
  v204 = *(_QWORD *)(v7 + 9736) + 4564;
  LODWORD(v182) = *(_DWORD *)(v204 + 4 * (v111 ^ 0x24));
  v205 = *(_QWORD *)(v7 + 9736) + 49148;
  *(_QWORD *)(v7 + 9384) = v205;
  LODWORD(v150) = *(_DWORD *)(v205 + 4 * (BYTE3(v150) ^ 0x31));
  LODWORD(v155) = v187 - v139;
  *(_DWORD *)(*(_QWORD *)(v7 + 9720) + 556) = v187 - v139 + 1434674199 + v199;
  LODWORD(v139) = v160 ^ 0xFB13C97E ^ (1501451596 * (v160 ^ 0xFB13C97E)) ^ (v182 + (v111 ^ 0x938F872C) + 1) ^ v150 ^ 0x1CB0C1E7 ^ (v197 + 2105132842) ^ (4 * (v150 ^ 0x1CB0C1E7) * (v150 ^ 0x1CB0C1E7)) ^ 0x2E16AEB6;
  LODWORD(v205) = *(_DWORD *)(v7 + 9664);
  LODWORD(v160) = v205 - v191;
  LODWORD(v157) = (*(_DWORD *)(v7 + 9672) ^ 0x32B9D589) - v205 - (v205 - v191);
  LODWORD(v199) = ((v139 ^ v199 ^ v24 ^ v174) - (v199 ^ v24 ^ v174)) ^ ((v139 ^ v157) - v157) ^ ((v139 ^ (v191 + 1160864075)) - (v191 + 1160864075));
  LODWORD(v139) = (*(_DWORD *)(v7 + 9696) ^ 0xFE05CCCD) - ((*(_DWORD *)(v7 + 9672) ^ 0x32B9D589) - v205);
  *(_DWORD *)(*(_QWORD *)(v7 + 9720) + 1084) = -14651308 - v139 + v199;
  LODWORD(v199) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + ((int)v133 + 124) % 0x196u);
  v206 = *(_QWORD *)(v7 + 9536);
  LODWORD(v199) = ((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + 31 * (v178 | 8) % 0x196) ^ 0x1D) << 24) | (((109 * (((v199 >> 5) | (8 * v199)) ^ 0xB9 ^ *(_BYTE *)(v206 + (((v199 >> 5) | (8 * v199)) ^ 0x3BLL)))) ^ 0x1D) << 16) | ((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + ((int)v133 + 155) % 0x196u) ^ 0x1D) << 8) | *(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + ((int)v133 + 186) % 0x196u);
  LODWORD(v150) = 24301
                * *(unsigned __int16 *)(*(_QWORD *)(v7 + 9656)
                                      + 2
                                      * ((v178 & 0xB0 | 8 | (-16 - v178) & 0xB8) ^ 0x3B ^ (((v155 + 98) ^ *(_BYTE *)(v196 + ((v155 + 98) ^ 0xAFLL)) ^ 0x66) + 3)));
  LODWORD(v197) = *(_DWORD *)(*(_QWORD *)(v7 + 9504) + 4 * (((v155 + 2101838178) >> 24) ^ 7))
                + (((v155 + 2101838178) >> 24) ^ 0xD2143886);
  LODWORD(v178) = ((v155 + 2101838178) >> 16);
  LODWORD(v187) = *(_DWORD *)(*(_QWORD *)(v7 + 9448)
                            + 4 * (((unsigned __int16)(v155 - 32414) >> 8) ^ 0x9Fu)) ^ v178;
  v207 = *(_QWORD *)(v7 + 9736) + 33316;
  *(_QWORD *)(v7 + 9672) = v207;
  LODWORD(v178) = v187 ^ *(_DWORD *)(v207 + 4 * (v178 ^ 0x32)) ^ v197 ^ (v150 >> 2) & 0x36F ^ (unsigned __int16)v150 ^ v199;
  *(_DWORD *)(*(_QWORD *)(v7 + 9720) + 820) = v178 ^ 0x76B192A7;
  LODWORD(v150) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640) + ((-87 * (v139 + 98)) ^ 0x20));
  LODWORD(v197) = (v139 + 2101838178) >> 24;
  LODWORD(v168) = *(_DWORD *)(*(_QWORD *)(v7 + 9440) + 4 * (v197 ^ 0x73));
  LODWORD(v199) = (*(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + ((int)v133 + 8742) % 0x196u) | (*(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + ((int)v133 + 8680) % 0x196u) << 16) | (*(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + ((int)v133 + 8711) % 0x196u) << 8) | ((*(unsigned __int8 *)(v198 + (*(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + ((int)v133 + 8649) % 0x196u) ^ 0x26)) ^ 0x60) << 24))
                + 50331648;
  *(_QWORD *)(v7 + 9512) = v195;
  LODWORD(v199) = *(_DWORD *)(v195 + 4 * (((v139 + 2101838178) >> 16) ^ 0xACu)) ^ v199;
  v208 = *(_QWORD *)(v7 + 9736) + 69360;
  *(_QWORD *)(v7 + 9504) = v208;
  LODWORD(v170) = *(_DWORD *)(v208 + 4 * (((unsigned __int16)(v139 - 32414) >> 8) ^ 0x9Cu)) ^ 0xD7BE813;
  v209 = *(_QWORD *)(v7 + 9736) + 61988;
  *(_QWORD *)(v7 + 9496) = v209;
  LODWORD(v199) = v199 ^ v170 ^ v168 ^ (v170 >> 1) & 0xE3847E4 ^ *(_DWORD *)(v209
                                                                                         + 4
                                                                                         * ((((v150 ^ (v150 >> 1) & 0x46) >> 5) | (8 * (v150 ^ (v150 >> 1) & 0x46 ^ 0x1E))) ^ 0x53u));
  LODWORD(v150) = v199 ^ v197 ^ 0x2F3FFD20;
  *(_DWORD *)(*(_QWORD *)(v7 + 9720) + 272) = v150;
  LODWORD(v177) = *(_DWORD *)(*(_QWORD *)(v7 + 9392) + 4 * (v178 ^ 0x79u));
  LODWORD(v207) = *(_DWORD *)(*(_QWORD *)(v7 + 9432)
                            + 4 * (((v178 ^ 0x737921F7) >> 16) ^ 0x10u));
  v210 = (8 * ((v199 ^ v197) & 0x1F)) | (v150 >> 5);
  LODWORD(v209) = *(_DWORD *)(v203
                            + 4
                            * ((109
                                               * ((*(_BYTE *)(*(_QWORD *)(v7 + 9648)
                                                            + (((v150 >> 5) & 0xF8 | ((unsigned __int16)v150 >> 13)) ^ 0x5ELL))
                                                 + (((v150 >> 5) & 0xF8 | ((unsigned __int16)v150 >> 13)) ^ 0x52)
                                                 + 1) ^ 0x5C)) ^ 0x96u)) ^ 0xFB13C97E;
  LODWORD(v210) = v209 ^ *(_DWORD *)(*(_QWORD *)(v7 + 9736)
                                   + 4
                                   * ((109 * (*(_BYTE *)(v206 + (v210 ^ 0x3B)) ^ v210 ^ 0xB9)) ^ 0xE3u)
                                   + 11980) ^ ((BYTE2(v150) ^ 0x938F87AC)
                                             + *(_DWORD *)(v204 + 4 * (BYTE2(v150) ^ 0xA4u))
                                             + 1);
  LODWORD(v204) = *(_DWORD *)(*(_QWORD *)(v7 + 9384) + 4 * (BYTE3(v199) ^ 0x62)) ^ 0x1CB0C1E7;
  LODWORD(v209) = v210 ^ v204 ^ (1501451596 * v209) ^ (4 * v204 * v204);
  v211 = *(_QWORD *)(v7 + 9528);
  LODWORD(v199) = *(unsigned __int16 *)(v211
                                      + 2 * (((unsigned __int16)(v178 ^ 0x21F7) >> 8) ^ 0xEu)
                                      + 1606);
  LODWORD(v197) = *(_DWORD *)(*(_QWORD *)(v7 + 9568) + 4 * (BYTE3(v178) ^ 0x8D));
  *(_DWORD *)(*(_QWORD *)(v7 + 9720) + 552) = v155 - 758454919 + (v209 ^ 0x9D09F8BD);
  LODWORD(v210) = (v191 + 1160864075) ^ v160;
  v212 = *(_DWORD **)(v7 + 9720);
  LODWORD(v199) = v199 ^ 0xFFFFA8E9 ^ (v199 >> 2) & 0x17BF;
  v213 = *(_QWORD *)(v7 + 9728);
  LODWORD(v207) = v207 ^ v177 ^ v197 ^ (unsigned __int16)v199;
  LODWORD(v197) = (*(_DWORD *)(v7 + 9408) ^ v24) + 1087583590;
  LODWORD(v160) = (_DWORD)v24 + 2102980095 + v174;
  LODWORD(v204) = v174 - v197;
  LODWORD(v198) = v174 - v197 - (v155 + 2101838178);
  LODWORD(v111) = v210 + 1087583590;
  LODWORD(v178) = *(_DWORD *)(v7 + 9400) - 1031123126 + v157;
  LODWORD(v153) = v157 - (v210 + 1087583590);
  LODWORD(v155) = v153 - (v139 + 2101838178);
  v212[270] = (((v207 ^ 0x94048A8A ^ v155) - v155) ^ ((v207 ^ 0x94048A8A ^ v178) - v178) ^ ((v198 ^ v160 ^ v209 ^ 0x62F60742)
                                                                                          + (v207 ^ 0x90D7237 ^ v198 ^ v160 ^ v209)
                                                                                          + 1))
            - v139
            - 2116489486;
  LODWORD(v207) = v174 - v197 + v160;
  LODWORD(v157) = v207;
  *(_DWORD *)(v7 + 9696) = v207;
  LODWORD(v139) = *(unsigned __int8 *)(v213 + ((int)v133 + 279) % 0x196u);
  v214 = *(unsigned __int8 *)(v213 + ((int)v133 + 217) % 0x196u);
  LOBYTE(v209) = ((v207 & 0x61 ^ 0x61) + (v207 & 0x61)) ^ v214;
  v215 = *(_QWORD *)(v7 + 9680);
  LOBYTE(v209) = v209 ^ *(_BYTE *)(v215 + (v214 ^ 0xB7));
  LODWORD(v214) = (v139 ^ 0x1D) << ((BYTE2(v150) & 8 ^ 8) + (BYTE2(v150) & 8));
  v216 = (unint64_t)((v209 ^ 0x1F) + 3) << (((v139 ^ 0x1D) & 0x18) + (v139 & 0x18));
  LODWORD(v139) = v198 ^ 0xB0CF5E86;
  LODWORD(v150) = (v198 ^ v197) - (v198 ^ 0xB0CF5E86);
  LODWORD(v197) = *(unsigned __int16 *)(v211 + 2 * ((v150 + v157) ^ 0x71u) + 2146) + 27206;
  LOWORD(v198) = (v197 >> 3) & 0xCEB ^ v197;
  LODWORD(v199) = ((v199 & 0x1B ^ 0x1B) + (v199 & 0x1B)) ^ ((v150 + v157) >> 24);
  LODWORD(v197) = (v199 - 483488748) ^ ((*(unsigned __int8 *)(v213 + ((int)v133 + 248) % 0x196u) ^ 0x1D) << 16) ^ *(unsigned __int8 *)(v213 + ((int)v133 + 310) % 0x196u) ^ v214 ^ *(_DWORD *)(*(_QWORD *)(v7 + 9616) + 4 * (((unsigned __int16)(v150 + v157) >> 8) ^ 7u)) ^ *(_DWORD *)(*(_QWORD *)(v7 + 9672) + 4 * (((v150 + v157) >> 16) ^ 0xEFu)) ^ v216 ^ *(_DWORD *)(*(_QWORD *)(v7 + 9624) + 4 * (v199 ^ 0x7A));
  LODWORD(v199) = (unsigned __int16)v198 ^ ((v150 + v157) >> 16) ^ v197;
  v212[204] = v199 ^ 0x6B55A144;
  LODWORD(v214) = ((int)v133 + 8773) % 0x196u;
  LODWORD(v160) = ((int)v133 + 8804) % 0x196u;
  LODWORD(v198) = ((int)v133 + 8835) % 0x196u;
  v217 = *(unsigned __int8 *)(v213 + ((int)v133 + 8866) % 0x196u);
  LODWORD(v214) = (*(unsigned __int8 *)(v213 + v214) << 24) | (*(unsigned __int8 *)(v213
                                                                                                + v160) << 16) | (*(unsigned __int8 *)(v213 + v198) << 8) | ((v217 ^ 0x63 ^ *(_BYTE *)(v215 + (v217 ^ 0xAA))) + 3);
  LODWORD(v217) = v155 ^ v111;
  LODWORD(v111) = v155 ^ 0xB0CF5E86;
  LODWORD(v155) = v217 - (v155 ^ 0xB0CF5E86);
  LODWORD(v178) = v153 + v178;
  LODWORD(v168) = ((v155 + v178) >> 24) ^ 0x40;
  LODWORD(v214) = ((v168 & 0x7D ^ 0x3612BC7D) + (v168 & 0x7D)) ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v7 + 9600)+ 4* ((v155 + v178) ^ 0x3Du)), 25) ^ *(_DWORD *)(*(_QWORD *)(v7 + 9576)+ 4* (((unsigned __int16)(v155 + v178) >> 8) ^ 0x7Fu)) ^ *(_DWORD *)(*(_QWORD *)(v7 + 9480) + 4 * (((v155 + v178) >> 16) ^ 0xF0u)) ^ *(_DWORD *)(*(_QWORD *)(v7 + 9608) + 4 * v168) ^ v214;
  v212[67] = v214 ^ 0x443FE085;
  LODWORD(v139) = v150 ^ v139;
  LODWORD(v204) = v150 + v204;
  LODWORD(v150) = v155 ^ v111;
  LODWORD(v111) = -1138332033 * *(_DWORD *)(*(_QWORD *)(v7 + 9472) + 4 * (v199 ^ 0xE8u));
  LODWORD(v111) = v111 ^ (v111 >> 5) ^ (v111 >> 4);
  LODWORD(v214) = (*(_DWORD *)(*(_QWORD *)(v7 + 9584)
                             + 4
                             * (v214 ^ 0xDE ^ ((v111 & 0xCF ^ 0xCF) + (v111 & 0xCF)) & 0xFFFFFFFB))
                 + 2105132842) ^ ((v214 ^ 0x443FE085) >> 16) ^ *(_DWORD *)(*(_QWORD *)(v7 + 9456) + 4 * (((v214 ^ 0x443FE085) >> 16) ^ 0x71u)) ^ (*(_DWORD *)(*(_QWORD *)(v7 + 9736) + 4 * (BYTE1(v214) ^ 0x78u) + 60908) - 904261308) ^ (*(_DWORD *)(*(_QWORD *)(v7 + 9464) + 4 * (BYTE3(v214) ^ 0x3D)) - 744648795) ^ 0xE002C17A;
  LODWORD(v199) = BYTE2(v197) ^ *(_DWORD *)(*(_QWORD *)(v7 + 9424) + 4 * (BYTE2(v197) ^ 0x8Cu)) ^ *(unsigned __int16 *)(*(_QWORD *)(v7 + 9592) + 2 * (BYTE1(v199) ^ 0x84u)) ^ *(_DWORD *)(*(_QWORD *)(v7 + 9568) + 4 * (BYTE3(v197) ^ 0xE9)) ^ 0x24264D4F ^ v111;
  v212[137] = 1434674199
            - (v155
             + v153)
            + (((v199 ^ (v155 + v153 + v178)) - (v155 + v153 + v178)) ^ ((v199 ^ v150) - v150) ^ ((v199 ^ v214 ^ v139 ^ (v204 + *(_DWORD *)(v7 + 9696)))
                                                                                                - (v214 ^ v139 ^ (v204 + *(_DWORD *)(v7 + 9696)))));
  v212[269] = v204 - 14651308 + v214;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8 * (int)((8096 * (*(_DWORD *)(v7 + 9488) > 0xBu)) ^ *(_QWORD *)(v7 + 9520)))
                            - 8))();
}

void sub_10030469C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  _DWORD *v10;
  int v11;
  int v12;

  v10[2376] = v11;
  v10[2416] = a6;
  v10[2392] = a8;
  v10[2424] = a2;
  v10[2378] = v9;
  v10[2418] = v12;
  v10[2422] += 16;
  v10[2374] = v8 ^ 0x965112E8;
  JUMPOUT(0x100302CFCLL);
}

uint64_t sub_1003046FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unint64_t v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  unsigned __int8 v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unsigned int v86;
  unint64_t v87;
  int v88;
  int v89;

  *(_DWORD *)(v11 + 9664) = a6;
  *(_DWORD *)(v11 + 9696) = a2;
  *(_DWORD *)(v11 + 9688) = v9;
  v17 = 271 * v9;
  v18 = *(_DWORD *)(v11 + 9632) ^ 0x3160;
  v19 = *(_QWORD *)(v11 + 9720);
  v20 = *(_DWORD *)(v19
                  + 4
                  * (unsigned __int16)(271 * v9
                                     + 13550
                                     - 272
                                     * ((unsigned __int16)(((unsigned __int16)(271 * v9 + 13550) * v12) >> 16) >> 8)));
  *(_DWORD *)(v11 + 9600) = v18;
  v21 = *(_DWORD *)(v15 + 4 * (v20 ^ 0x58) + 43880);
  v22 = BYTE2(v20) ^ 0x13;
  v23 = *(_DWORD *)(v15 + 4 * (((v20 ^ 0xC413A193) >> 16) ^ 0xEDu) + 75692);
  v24 = (v20 ^ 0xC413A193) >> 24;
  v25 = *(_DWORD *)(v15 + 4 * (v24 ^ 0xEC) + 63012);
  v26 = *(unsigned int *)(v19 + 4 * ((271 * v9 + 50677) % 0x110u));
  v27 = v20 ^ 0x60 ^ -(v20 ^ 0x60) ^ ((v20 ^ 0x93 ^ (v18 + 728342291))
                                                                      - 728350655);
  v28 = ((v20 ^ 0x40) & (v20 ^ 0xC413A193) | 0x4EE60AE) ^ *(_DWORD *)(v15
                                                                                     + 4 * (BYTE1(v20) ^ 0xB9)
                                                                                     + 74612);
  v29 = *(_DWORD *)(v15 + 4 * (BYTE1(v26) ^ 0x2ALL) + 1136);
  v30 = v24 ^ v21;
  v31 = 1242631213 * v29;
  HIDWORD(v33) = *(_DWORD *)(v15
                           + 4 * (*(_DWORD *)(v19 + 4 * ((271 * v9 + 50677) % 0x110u)) ^ 0xF7)
                           + 20732);
  LODWORD(v33) = HIDWORD(v33);
  v32 = v33 >> 18;
  v34 = 69343322 * v29;
  v35 = (4 * v28) & 0x19FFAF7C;
  v36 = v30 ^ v23;
  HIDWORD(v33) = *(_DWORD *)(*(_QWORD *)(v11 + 9736) + ((v26 >> 22) & 0x3FC ^ 0x3A4) + 23828);
  LODWORD(v33) = HIDWORD(v33);
  v37 = v33 >> 23;
  v38 = *(unsigned int *)(v19 + 4 * ((unsigned __int16)(271 * v9 + 17073) % 0x110u));
  v39 = v36 ^ v22 ^ v25 ^ v28 ^ (v27 - 728350656);
  v40 = *(_DWORD *)(v19 + 4 * ((271 * v9 + 54200) % 0x110u));
  v41 = v40 ^ 0x3D000000;
  v42 = v39 ^ v35;
  v43 = *(_DWORD *)(*(_QWORD *)(v11 + 9736) + 4 * (BYTE1(v38) ^ 0x2ELL) + 41724) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9736)
                                                                                             + 4
                                                                                             * (*(_DWORD *)(v19 + 4 * ((unsigned __int16)(271 * v9 + 17073) % 0x110u)) ^ 0x20)
                                                                                             + 47012) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9736) + 4 * (BYTE2(v38) ^ 0xB9) + 7740) ^ ((BYTE2(v38) ^ 0x1C) + 363181530);
  v44 = v32 ^ BYTE2(v26) ^ *(_DWORD *)(v15 + 4 * (BYTE2(v26) ^ 0x81) + 29124) ^ v31 ^ (1115170184 * v32) ^ (16 * (v31 ^ v34)) ^ v37;
  v45 = a8 + 397711303;
  v46 = v44 ^ (32 * v37);
  v47 = (a8 + 397711303) ^ (v14 + 113168840) ^ v39 ^ v35;
  v48 = v47 ^ 0x2647AA5C;
  v49 = v47 ^ 0x16A1F35F ^ v46;
  v46 ^= 0x7E4A8DF2u;
  v50 = v48 + v49;
  v51 = 109
      * ((*(_BYTE *)(*(_QWORD *)(v11 + 9648) + (((v41 >> 21) & 0xF8 | (v41 >> 29)) ^ 0x5ELL))
        + (((v41 >> 21) & 0xF8 | (v41 >> 29)) ^ 0x52)
        + 1) ^ 0x5C);
  v52 = v16 ^ 0xB1532B0E ^ (v46 + 851039625 - ((2 * v46) & 0x6573AB12));
  v53 = v10 ^ 0xB1532B0E ^ (v46 - 1529102335 - ((2 * v46) & 0x49B78002));
  v54 = (v14 + 113168840) ^ 0x73ACADC0;
  v55 = a8 - 1161279922;
  v56 = (v10 ^ 0x5B243FFE) + v53;
  v57 = (a8 - 1161279922) ^ v54;
  LODWORD(v26) = v57 ^ ((v13 ^ 0x3C5BCFBF) - v54);
  v58 = v57 ^ (v54 - 810553191);
  v60 = *(_DWORD *)(*(_QWORD *)(v11 + 9736) + 4 * (BYTE1(v40) ^ 0x6FLL) + 68320) ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v11 + 9736)+ 4* (v40 ^ 0x84)+ 57672), 25) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9736) + 4 * (BYTE2(v41) ^ 0x8ELL) + 52332) ^ BYTE1(v40) ^ ((BYTE2(v41) ^ 0x88) + 1898054614) ^ v51 ^ 0x55A9328E ^ *(_DWORD *)(*(_QWORD *)(v11 + 9736) + 4 * (v51 ^ 0x83u) + 31196);
  v61 = v50 + 1;
  v62 = v8 - v14 - 1300521266 + v55;
  v63 = *(_DWORD *)(v11 + 9664) + (v16 ^ 0xCD462A76) + (v10 ^ 0xA4DBC001) + 1548623646;
  v64 = *(_DWORD *)(v11 + 9696);
  v65 = (v64 ^ 0x1FA3332)
      + v26
      + *(_DWORD *)(v19 + 4 * ((unsigned __int16)(271 * v9 + 31436) % 0x110u))
      + *(_DWORD *)(v19 + 4 * ((unsigned __int16)(271 * v9 - 31661) % 0x110u))
      + v60
      + (((v16 ^ 0xCD462A76) + v52 + 1) ^ v61 ^ (v56 + 1));
  LODWORD(v38) = *(_DWORD *)(*(_QWORD *)(v11 + 9736) + ((v38 >> 22) & 0x3FC ^ 0x2E4) + 66188);
  v66 = ((v52 & 0x73ACADC0 ^ 0x73ACADC0)
       + (v52 & 0x73ACADC0)
       + 851039625
       - ((2 * ((v52 & 0x73ACADC0 ^ 0x73ACADC0) + (v52 & 0x73ACADC0))) & 0x6573AB00)) ^ v16;
  *(_DWORD *)(v19 + 4 * ((unsigned __int16)(v17 - 29764) % 0x110u)) = v65
                                                                      + ((v45 | (1749772344 - a8)) & 0x55836417)
                                                                      + 1425618899;
  v67 = v66 ^ ((v10 ^ 0xA4DBC001) - 1558991225);
  v68 = ((v64 ^ 0xFE05CCCD) - v66) ^ v67;
  v69 = v43 ^ v38 ^ 0xAAFE4BF;
  v70 = v67 ^ (v66 - 810553191);
  LODWORD(v38) = v26 - 2018164720 + v58;
  v71 = v58 - ((v54 + 769925699) ^ 0x2820E6F);
  v72 = ((v69 ^ (v66 - 810553191)) - (v66 - 810553191)) ^ ((v69 ^ v60 ^ v58) - (v60 ^ v58)) ^ ((v69 ^ v67) - v67);
  v73 = v68 - 2018164720 + v70;
  v74 = v70 - ((v66 + 769925699) ^ 0x2820E6F);
  v75 = (v13 ^ 0x3C5BCFBF)
      + *(_DWORD *)(v19 + 4 * ((v17 - 4336) % 0x110u))
      + *(_DWORD *)(v19 + 4 * ((v17 - 1897) % 0x110u))
      + (v42 ^ 0xD9B855A3)
      + 29302616
      + v72
      - v68;
  *(_DWORD *)(v19 + 4 * ((unsigned __int16)v17 % 0x110u)) = v75 - 14651308;
  v76 = (v75 ^ v38 ^ (-1425618899 - v65)) - v73;
  v77 = v62 ^ 0x54324D40;
  v78 = v63 ^ 0x54324D40;
  v79 = (v62 ^ 0x54324D40 ^ (-1425618899 - v65) ^ v75) - (v63 ^ 0x54324D40);
  v80 = (v63 ^ (-1425618899 - v65) ^ 0xABCDB2BF ^ v73) + (v77 ^ v38 ^ v75) + 1;
  v81 = v74 ^ 0xC413A193 ^ v79;
  v82 = (unsigned __int16)(v17 + 17615);
  v83 = 4 * ((unsigned __int16)(v17 + 17615) % 0x110u);
  *(_DWORD *)(v19 + v83) = v81 ^ v76;
  v84 = 4 * ((v17 + 54742) % 0x110u);
  *(_DWORD *)(v19 + v84) = v80 ^ v71;
  v85 = *(_DWORD *)(v19 + v83);
  LODWORD(v83) = ((((v85 ^ 0xC413A193) >> 24) ^ 0xC0) - 483488748) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9624)
                                                                               + 4
                                                                               * (((v85 ^ 0xC413A193) >> 24) ^ 0xBA));
  v86 = 24301 * *(unsigned __int16 *)(*(_QWORD *)(v11 + 9656) + 2 * (v85 ^ 0x4FLL));
  *(_DWORD *)(v19 + 4 * (v82 % (unint64_t)(((v83 ^ 0xEFF9FBDE) & 0x110) + (v83 & 0x110)))) = *(_DWORD *)(*(_QWORD *)(v11 + 9672) + 4 * (((v85 ^ 0xC413A193) >> 16) ^ 0xF5u)) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9616) + 4 * (BYTE1(v85) ^ 0xA0)) ^ ((v85 ^ 0xC413A193) >> 16) ^ v83 ^ 0xEFF9FBDE ^ 0xE7ECB6FB ^ (v86 >> 2) & 0x36F ^ (unsigned __int16)v86;
  v87 = *(unsigned int *)(v19 + v84);
  v88 = ((v83 ^ 0xEFF9FBDE) & 0x817FA1E8) + (v83 & 0x817FA1E8 ^ 0x60020);
  LODWORD(v83) = *(_DWORD *)(*(_QWORD *)(v11 + 9504) + 4 * (BYTE1(v87) ^ 0xE3)) ^ 0xD7BE813;
  v89 = *(_DWORD *)(v11 + 9688) + 1;
  *(_DWORD *)(v19 + v84) = *(_DWORD *)(*(_QWORD *)(v11 + 9496) + 4 * (*(_DWORD *)(v19 + v84) ^ 0xAFLL)) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9512) + 4 * (BYTE2(v87) ^ 0xAFLL)) ^ v83 ^ (v88 | 0x140C8202) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9608) + 4 * (((HIBYTE(*(_DWORD *)(v19 + v84)) ^ 0xD ^ *(_BYTE *)(*(_QWORD *)(v11 + 9680) + ((v87 >> 24) ^ 0xC4))) + 3) ^ 0x63u)) ^ (v83 >> 1) & 0xE3847E4 ^ 0xDD8BEA;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                                              + 8 * ((195 * (v89 == 64)) ^ *(_DWORD *)(v11 + 9632)))
                                                  - 8))(4261792973, (v78 - (v73 + 1871371905)) ^ (v73 + 1871371905) ^ 0xFE05CCCD);
}

uint64_t sub_100305178(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  uint64_t v135;
  int v136;
  int v137;
  unsigned int v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  unsigned int v185;
  uint64_t (*v186)(void);

  v16 = *(_DWORD *)(v12 + 8984) - 1194695347;
  v17 = *(_DWORD *)(v12 + 8672) + 1827701748;
  v18 = *(_DWORD *)(v12 + 8616);
  v19 = (v7 ^ v16 ^ v8) - (a6 ^ (v18 + a1 - ((2 * v18) & 0xFC0B999A)) ^ a2);
  v20 = v6 + 77212806;
  v21 = ((v8 ^ v16 ^ v18) - v9) ^ ((v7 ^ v16 ^ v18) - a6);
  *(_DWORD *)(v12 + 9672) = v19 ^ (v6 + 77212806);
  *(_DWORD *)(v12 + 9696) = (v21 - 1529102335 - (v14 & (2 * v21))) ^ v10;
  v22 = ((v6 + 77212806) ^ 0xE5F9C3BA) + v7 + 1;
  v23 = *(_DWORD *)(v12 + 8744) + 124339609;
  v24 = v10 ^ 0xBEDDFC44;
  v25 = a6 - (v10 ^ 0xBEDDFC44);
  v26 = (v11 + 1645957589) ^ v22;
  v27 = -1071645798 - *(_DWORD *)(v12 + 8760);
  v22 += 1067711930;
  v28 = v9 ^ 0xF6FC7923;
  v29 = v9 ^ 0xF6FC7923 ^ v24;
  v30 = *(_DWORD *)(v12 + 9008);
  v31 = v27 ^ v30 ^ v13 ^ (((v25 + 1067711930) & 0x8D951252 ^ 0x8D951252) + ((v25 + 1067711930) & 0x8D951252));
  v32 = (v27 ^ v30 ^ v22) - (v25 + 1067711930);
  v33 = v9 ^ 0xB1CEDDED;
  v34 = v20 ^ 0xD0A18AD9 ^ v13;
  v35 = (v30 ^ 0x8D951252 ^ v13 ^ v22) + (v27 ^ v28 ^ 0xB8CD5B31 ^ (v25 + 1067711930)) + 1;
  *(_DWORD *)(v12 + 9656) = v32 ^ v29 ^ (v31 - v33);
  v36 = v26 ^ v34;
  v37 = v22 - v36;
  v38 = v29 ^ v25 ^ ((v15 ^ 0x32B9D589) + 1645957589);
  v39 = v25 + 1067711930 - v38;
  v40 = -*(_DWORD *)(v12 + 8768);
  v41 = v39 + v29;
  v42 = (v37 + v34) ^ v36;
  v43 = v37 ^ v36;
  v44 = v41 + v33;
  v45 = v41 ^ v38;
  v46 = v39 ^ v38;
  *(_DWORD *)(v12 + 9664) = v35 ^ v34;
  v47 = v37 + v34 + (v8 ^ 0xB1CEDDED) + v43;
  v37 -= 14213921;
  v48 = v44 + v46;
  v39 -= 14213921;
  *(_DWORD *)(v12 + 9688) = v45 ^ ((v37 ^ v17 ^ v40) - v39) ^ ((v47 ^ v17 ^ v40) - (v44 + v46));
  *(_DWORD *)(v12 + 9472) = v17;
  v49 = v47 ^ v42;
  v50 = ((v37 ^ v17 ^ v47) - (v39 ^ v40 ^ (v44 + v46))) ^ v42;
  v51 = v46 - v39;
  v52 = v43 - v37;
  v53 = v43 - v37 + 765711723 + v47;
  v54 = 1199491225 - *(_DWORD *)(v12 + 8880);
  v55 = (v49 ^ v37) + v53;
  v56 = v48 ^ v45;
  v57 = v56 + 288891906;
  v58 = (v49 + 288891906) ^ v53;
  v59 = v58 ^ v52;
  v60 = v51 + 765711723 + v48;
  v61 = (v56 ^ v39) + v60;
  v62 = *(_DWORD *)(v12 + 8872);
  v63 = v53 ^ v62;
  v64 = v54 ^ v62;
  v65 = (v53 ^ v64) - v60;
  v66 = (v55 ^ v64) - v61;
  v67 = (v63 ^ v55) - (v60 ^ v54 ^ v61);
  v68 = v55 + v53;
  v53 -= 150387419;
  v69 = v57 ^ v60;
  v70 = v57 ^ v65 ^ v66;
  v71 = v58 - v53;
  *(_DWORD *)(v12 + 9520) = v67 ^ (v49 + 288891906);
  v72 = v57 ^ v60 ^ v51;
  v73 = (*(_DWORD *)(v12 + 8748) ^ 0x51A0D459) + 1;
  v74 = v72 ^ (v61 + v60);
  v75 = v68 ^ v59;
  v76 = v60
      - 150387419
      + (((v60 & 0x9F80339E ^ 0x9F80339E) + (v60 & 0x9F80339E)) & (((((v49 - 108819397) & 0x9392B5E5)
                                                                   + ((108819396 - v49) & 0x9392B5E5)) ^ 0xB3803184) & ~v58 | v58 & 0x20000420));
  v77 = v69 - v76;
  v78 = v73 ^ v23 ^ v75;
  v76 ^= 0x6305B9F0u;
  v53 ^= 0x6305B9F0u;
  v79 = v53 ^ v23;
  v80 = v76 + v74;
  v81 = v77 ^ (v78 - v74) ^ ((v79 ^ v73) - v76);
  v82 = v74 ^ v73 ^ v76;
  v77 -= 998813549;
  v74 += 2030948799;
  v83 = (v79 ^ v75) - v82;
  v84 = v75 + v53;
  v85 = -131595901 - *(_DWORD *)(v12 + 9012);
  v86 = v83 ^ v71;
  v87 = (v74 ^ (v72 - 1700322292)) + 1341124290;
  v88 = v74 - v77;
  v89 = (v75 + 2030948799) ^ (v59 - 1700322292);
  v90 = v75 - v71 - 1265204948;
  v91 = v90 ^ v84;
  v92 = v88 ^ v80;
  v93 = *(_DWORD *)(v12 + 8888);
  v94 = v91 ^ v93;
  v89 += 1341124290;
  v95 = v89 ^ (v71 - 998813549);
  v96 = v93 ^ v85;
  v97 = v77 ^ v87;
  v98 = (v90 ^ v93 ^ v85) - v88;
  v99 = v94 + v90 - 2 * (v94 & v90) - (v80 ^ v85);
  v100 = v90 - v95;
  v101 = v98 ^ v97 ^ ((v91 ^ v96) - (v88 ^ v80));
  v102 = v88 - v97;
  v103 = v100 + 1709027025;
  v104 = v102 + v87;
  v105 = v92 - v102;
  v102 += 1709027025;
  v106 = v104 ^ (v97 + 457336736);
  v107 = v104 ^ v105;
  v105 += 1464916686;
  v108 = v100 + v89;
  v109 = v91 - v100;
  v110 = v109 + 1464916686;
  v111 = (v109 + 1464916686) ^ v103;
  v112 = *(_DWORD *)(v12 + 8752);
  v113 = 1373575266 - *(_DWORD *)(v12 + 8680);
  v114 = v105 ^ v102;
  *(_DWORD *)(v12 + 9616) = *(_DWORD *)(v12 + 8688) - 355257780;
  v115 = v99 ^ v95;
  v116 = v108 ^ (v95 + 457336736);
  v117 = v106 ^ ((v103 ^ v113 ^ v112) - v102) ^ (((v109 + 1464916686) ^ v113 ^ v112) - v105);
  v118 = (v109 ^ v108) - (v109 + 1464916686);
  v119 = ((v111 ^ v112) - (v105 ^ v102 ^ v113)) ^ v116;
  v120 = v116 ^ v110;
  v121 = v50;
  v122 = v105 ^ v106;
  v123 = v107 - v105;
  v124 = v118 + v103 + v120;
  v125 = v124 - 397711303;
  v126 = v124 + v111;
  v127 = v123 + v102;
  v128 = v127 + v122;
  v129 = v118 + 284542463 + v125;
  v130 = v127 + v122 + v114;
  *(_DWORD *)(v12 + 9632) = v126;
  v131 = v126 + v118 + v103;
  v132 = v127 + v122 + v123;
  v133 = v130 + v127;
  *(_DWORD *)(v12 + 9504) = v117;
  *(_DWORD *)(v12 + 9512) = v117 ^ 0xC58A1077;
  *(_DWORD *)(v12 + 9624) = *(_DWORD *)(v12 + 8964);
  v134 = *(_DWORD *)(v12 + 9600);
  *(_DWORD *)(v12 + 9608) = v115;
  *(_DWORD *)(v12 + 9480) = (v134 + 1482) | 0xB4;
  v135 = *(_QWORD *)(v12 + 9736);
  v136 = v81;
  v137 = v119;
  v138 = v86;
  v139 = v135 + 4 * (BYTE2(v86) ^ 0xF1u);
  v140 = *(unsigned int *)(v135 + 4 * (v86 ^ 0x8Eu) + 54476);
  LODWORD(v140) = (v140 >> ((v81 & 0x1D) + ((v81 ^ 0xC6) & 0x1D ^ 0x19u))) | (8 * v140);
  HIDWORD(v141) = *(_DWORD *)(v135 + 4 * (HIBYTE(v86) ^ 0x96) + 56592);
  LODWORD(v141) = HIDWORD(v141);
  v142 = *(_DWORD *)(v135 + 4 * (BYTE1(v86) ^ 0xABu) + 6680) ^ ((BYTE1(v86) ^ 0x8C) - 636204681) ^ *(_DWORD *)(v139 + 9896) ^ 0x116FCDA8 ^ (4 * (*(_DWORD *)(v139 + 9896) ^ 0x116FCDA8)) ^ (v141 >> 25) ^ ((v141 >> 25) >> 3) ^ ((v141 >> 25) >> 5);
  *(_DWORD *)(v12 + 9496) = v70;
  v143 = v121;
  LODWORD(v139) = v129 + 113168840;
  v144 = *(_DWORD *)(v12 + 9632);
  v145 = v131 + 1406281391 + v129;
  LODWORD(v140) = v142 ^ v140 ^ (v140 >> 3) & 0x131F7ABE ^ 0xA817D742;
  *(_DWORD *)(v12 + 9488) = v137;
  v146 = *(_DWORD *)(v12 + 9504);
  *(_DWORD *)(v12 + 9592) = v138;
  *(_DWORD *)(v12 + 9576) = v101;
  *(_DWORD *)(v12 + 9568) = v136;
  v147 = v131 ^ v144 ^ (v131 + 1406281391);
  v148 = v131 - 1851212988;
  v149 = v125 - (v131 ^ v144) + v145 + 510880143;
  v150 = (v137 ^ v101) & v136 ^ v146 & v138 ^ v115 & v138 ^ v146;
  v151 = (v133 - 1851212988) ^ 0x46E7970F;
  v152 = v148 ^ 0x46E7970F;
  v153 = (v132 + v133 + 1406281391 + v128 - (v133 ^ v130)) ^ v151;
  v154 = (v148 ^ 0x46E7970F) + 1681196092;
  v155 = (v132 ^ v133 ^ v130 ^ (v133 + 1406281391)) - (v153 + 476871023);
  v156 = (v132 - v153) ^ v151;
  v157 = v151 + 1681196092;
  *(_DWORD *)(v12 + 9632) = *(_DWORD *)(v12 + 9624)
                          + v144
                          + v147
                          + v150
                          + (*(_DWORD *)(v135 + 15156) ^ 0xE4C35E3F ^ (8 * *(_DWORD *)(v135 + 15156)) & 0x3E2D8600)
                          + v140
                          + 14651308
                          + **(_DWORD **)(v12 + 9720);
  v158 = v152 ^ v149;
  v159 = (v152 ^ v149) + 476871023;
  v160 = (v147 ^ v139) - v159;
  v161 = v152 ^ (v139 - v158);
  *(_DWORD *)(v12 + 9584) = v143;
  v162 = v161 + v154 - (v160 ^ v161);
  v163 = v156 + v151 + 1681196092 - (v155 ^ v156);
  v164 = (v155 ^ v156) + v157;
  LODWORD(v139) = v160 ^ v161 ^ 0xC587AAD8;
  v165 = v155 ^ v156 ^ 0xC587AAD8;
  v166 = ((v160 ^ v161) + v154) ^ 0x3B43174A;
  v162 += 631108847;
  v167 = v139 + 1030457125 - v166;
  v168 = v162 + v166;
  v169 = v162 - 113168840 - v167;
  v170 = v165 + 1030457125 - (v164 ^ 0x3B43174A);
  v171 = (v155 ^ (v153 + 476871023) ^ 0x1464D61A ^ v165) + 1742049721;
  LODWORD(v140) = (v139 ^ v159 ^ 0x1464D61A ^ v160) + 1742049721;
  v172 = *(_DWORD *)(v12 + 9488);
  v173 = v140 ^ v172 ^ (v169 + 113168840);
  v174 = v169 - v168 + 113168840;
  v175 = (((v163 + 631108847 - v170) ^ v146) - (v163 + 631108847 - v170)) ^ ((v171 ^ v146) - v171) ^ ((v173 ^ v146) - v173);
  v168 ^= 0xE4CBFB32;
  LODWORD(v140) = v168 ^ v140;
  v176 = v167 + 773219945 + v140;
  v177 = v174 - v176;
  *(_DWORD *)(v12 + 9624) = v167 + v172;
  v178 = v174 + v168;
  v179 = v178 ^ v140;
  LODWORD(v135) = v175 - v170;
  v178 += 2048997693;
  v180 = v178 + v176;
  v181 = v180 ^ v177;
  v182 = v178 ^ v179 ^ v180;
  v183 = (v180 ^ v177) - v180;
  v180 += 2075816861;
  *(_DWORD *)(v12 + 9616) = v135 + 1881100698;
  v184 = v181 + v178 + v180 + v182 + (v183 ^ v182);
  v185 = v184 + (v180 ^ 0xCB507B8E) + 2 * ((v183 ^ v182) - 1608693980 + v184 + (v180 ^ 0xCB507B8E) + v184);
  v186 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744) + 8 * *(int *)(v12 + 9600)) - 4);
  *(_DWORD *)(v12 + 9632) = v185;
  return v186();
}

void sub_100306150()
{
  int v0;
  int v1;
  _DWORD *v2;
  int v3;
  int v4;

  v2[2378] = v3;
  v2[2380] = v2[2422];
  v2[2376] = v4;
  v2[2422] = v2[2414];
  v2[2416] = v2[2418];
  v2[2414] = v2[2424];
  v2[2418] = v1;
  v2[2424] = v0;
  JUMPOUT(0x100305738);
}

uint64_t sub_1003061AC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  uint64_t (*v74)(_QWORD);

  *(_DWORD *)(v11 + 9488) = a5;
  *(_DWORD *)(v11 + 8964) += *(_DWORD *)(v11 + 9624);
  v19 = (*(_DWORD *)(v11 + 9480) - 422377180) & 0x192CD4E5;
  *(_DWORD *)(v11 + 9496) = v19;
  v20 = a3 - 963072125 + v19;
  *(_DWORD *)(v11 + 9600) = v8 + 397711303;
  v21 = v8 + 397711303 + a4;
  v22 = (a4 - v20) ^ v21;
  v23 = v19 - 963072125 - v12;
  *(_DWORD *)(v11 + 9624) = v23;
  v24 = v12 + a3 - 312508221;
  v25 = (v24 ^ 0xB9D2CFC1) + 254725111;
  *(_DWORD *)(v11 + 9512) = v23 - v22;
  v26 = v22 - v24 - (v23 - v22);
  v27 = (v20 ^ v21) + 1179607899 - v22 - v26;
  v28 = *(_DWORD *)(v11 + 9664);
  v29 = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 9504) = (v25 ^ v28 ^ v27 ^ v29) - (v25 ^ v28 ^ v27);
  v30 = v16 + v15 - 312508221;
  v31 = *(_DWORD *)(v11 + 9672);
  *(_DWORD *)(v11 + 9520) = (v30 ^ v31) - v30;
  v32 = (v30 ^ 0xB9D2CFC1) + 254725111;
  v33 = v18 + a7;
  v34 = (v18 + a7) ^ (a7 - (v15 - 963070908));
  v35 = v33 ^ (v15 - 963070908);
  v36 = 216536991 - v16 - v34;
  v37 = v34 - v15 - (216536991 - v34);
  v38 = v35 + -v15 - (216536991 - v34) + 312508221 - 2 * (v37 + 312508221);
  v39 = ((v38 ^ v29) - v38) ^ ((v32 ^ v29) - v32) ^ *(_DWORD *)(v11 + 9504);
  *(_DWORD *)(v11 + 9672) = (((v35 ^ v31) - v35) ^ *(_DWORD *)(v11 + 9520) ^ ((v24 ^ *(_DWORD *)(v11 + 9696) ^ v20 ^ v21 ^ v31)
                                                                            - (v24 ^ *(_DWORD *)(v11 + 9696) ^ v20 ^ v21)))
                          - (-963070908
                           - v16);
  *(_DWORD *)(v11 + 9600) = (((v9 ^ v16) - v16) ^ ((v9 ^ v18) - v18) ^ ((*(_DWORD *)(v11 + 9600) ^ v12 ^ v10 ^ v9)
                                                                      - (*(_DWORD *)(v11 + 9600) ^ v12 ^ v10)))
                          - v15;
  *(_DWORD *)(v11 + 9520) = v39 - v36;
  v40 = *(_DWORD *)(v11 + 9512) + 1179607899;
  *(_DWORD *)(v11 + 9656) = v40 + v28;
  v41 = v40 - v26 - 701316471;
  v42 = (v25 ^ 0x225ED8A) - 122550861;
  v43 = (v27 ^ 0x4CD82263) + v41;
  v44 = (v26 + 513567012) ^ 0xAE08B846;
  v45 = v44 + v26 + 513567012 + v43;
  v46 = (v32 ^ 0x225ED8A) - 122550861;
  v47 = v36 - (v37 + 312508221) - 1880924370;
  v48 = (v38 ^ 0x4CD82263) + v47;
  *(_DWORD *)(v11 + 9584) = (((v48 ^ *(_DWORD *)(v11 + 9584)) - v48) ^ ((v46 ^ *(_DWORD *)(v11 + 9584)) - v46) ^ ((v42 ^ *(_DWORD *)(v11 + 9688) ^ v43 ^ *(_DWORD *)(v11 + 9584)) - (v42 ^ *(_DWORD *)(v11 + 9688) ^ v43)))
                          - v47;
  v49 = (v37 + 2005683132) ^ 0xAE08B846;
  v50 = v36 - 187749459 - v49;
  v51 = v49 + v37 + 2005683132 + v48;
  v52 = v41 - v44;
  v53 = v41 - v44 + v42;
  v54 = v50 + v46 - (v37 + 2005683132);
  v55 = ((v51 ^ v13) - v51) ^ ((v54 ^ v13) - v54) ^ ((v53 ^ v17 ^ v45 ^ 0x3D9A4039)
                                                   + (v13 ^ 0xC265BFC6 ^ v53 ^ v17 ^ v45)
                                                   + 1);
  v56 = (v37 + 2005683132) ^ 0x1245B8CE;
  v57 = v56 - 1531835465 + v50;
  v58 = v55 - v50;
  v59 = (v53 ^ 0x34B4C64F) + v45;
  v60 = v59 - 113168840 - (v55 & 0xF9412E38) + (v55 | 0x6BED1C7);
  v61 = v52 + v26 + 513567012;
  v62 = (v26 + 513567012) ^ 0x1245B8CE;
  v63 = (v45 ^ (v62 + 41780799)) + 1418243897;
  v64 = *(_DWORD *)(v11 + 9592);
  v65 = (v51 ^ (v56 + 41780799)) + 1418243897;
  v66 = (v54 ^ 0x34B4C64F) + v51;
  v67 = *(_DWORD *)(v11 + 9576);
  v68 = (v67 ^ 0xC58A1077 ^ (v59 + 1103125968) ^ 0xA82DF601 ^ v14 ^ ((v63 ^ 0xCCC3E6F1) - (v59 + 1103125968)))
      - ((v59 + 1103125968) ^ 0xA82DF601 ^ v14 ^ ((v63 ^ 0xCCC3E6F1) - (v59 + 1103125968)) ^ (((v53 ^ 0x34B4C64F) & 0xC58A1077)
                                                                                            + (v53 & 0xC58A1077 ^ 0xC10A1030)));
  v69 = v62 - 1531835465 + v61;
  v70 = (((v65 ^ *(_DWORD *)(v11 + 9568)) - v65) ^ ((v66 ^ *(_DWORD *)(v11 + 9568)) - v66) ^ ((v63 ^ v64 ^ (v60 + 1) ^ *(_DWORD *)(v11 + 9568))
                                                                                            - (v63 ^ v64 ^ (v60 + 1))))
      - v57;
  v71 = v66 + v57;
  v66 += 1103125968;
  *(_DWORD *)(v11 + 8744) += v58;
  *(_DWORD *)(v11 + 8984) += *(_DWORD *)(v11 + 9632) + v10;
  v72 = v59 + v69 + v59 + 1103125968 + *(_DWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 8880) += *(_DWORD *)(v11 + 9688) + v41;
  v73 = a8 + (*(_DWORD *)(v11 + 8748) ^ 0xAE5F2BA6) + v61;
  *(_DWORD *)(v11 + 8748) = v73 - 1369494618 - ((2 * v73) & 0x5CBE574C);
  *(_DWORD *)(v11 + 8760) += *(_DWORD *)(v11 + 9672);
  *(_DWORD *)(v11 + 9012) += v64 + v69;
  *(_DWORD *)(v11 + 9008) += *(_DWORD *)(v11 + 9696) + *(_DWORD *)(v11 + 9624);
  *(_DWORD *)(v11 + 8752) += (((((v65 ^ 0xCCC3E6F1) - v66) ^ v67) - ((v65 ^ 0xCCC3E6F1) - v66)) ^ ((v67 ^ 0xA82DF601 ^ v66)
                                                                                                 - (v66 ^ 0xA82DF601)) ^ v68)
                           - (v71
                            + v66);
  *(_DWORD *)(v11 + 8768) += *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 8888) += v70;
  *(_DWORD *)(v11 + 8764) += *(_DWORD *)(v11 + 9600);
  *(_DWORD *)(v11 + 8872) += *(_DWORD *)(v11 + 9584);
  v74 = (uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                                   + 8
                                                   * (*(_DWORD *)(v11 + 9480) ^ (120
                                                                               * ((*(_DWORD *)(v11 + 8632) & 1) == 0))))
                                       - 8);
  *(_DWORD *)(v11 + 9632) = v72;
  return v74(((((v71 + v66) ^ 0xF3C4ED75) - ((2 * ((v71 + v66) ^ 0xF3C4ED75) - 1367934244) & 0xFC0B999A) - 717141445) ^ 0xFE05CCCD)+ v66+ v51- (-v66- (v71+ v66)));
}

uint64_t sub_100306828(int a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  _BOOL4 v22;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  unsigned __int8 *v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  unsigned int v38;
  int v39;
  char v40;
  unsigned __int8 v41;
  char v42;
  unsigned __int8 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int v63;
  char v64;
  unsigned __int8 v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  unint64_t v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;

  *(_DWORD *)(v11 + 9608) = v9 + v7;
  *(_DWORD *)(v11 + 9504) = v8 ^ 0x3C5BCFBF;
  v16 = v13 ^ 0x965112E8;
  *(_DWORD *)(v11 + 9672) = v10 ^ 0x9DB27CC4;
  *(_DWORD *)(v11 + 9568) = v14 - 397711303;
  v17 = *(_BYTE **)(v11 + 8448);
  v18 = *(_QWORD *)(v11 + 9728);
  v19 = *(_QWORD *)(v11 + 9704);
  v20 = *(_QWORD *)(v11 + 9680);
  v21 = *(_DWORD *)(v11 + 8612);
  if (!v21)
  {
    v32 = *(unsigned __int8 **)(v11 + 8344);
    v33 = *(_QWORD *)(v11 + 9544);
    v34 = *(_DWORD *)(v11 + 9656);
    v35 = *(_DWORD *)(v11 + 9632);
    *(_DWORD *)(v11 + 9496) = v16;
    *(_DWORD *)(v11 + 9664) = a1;
    v17[121] ^= 0x28u;
    v17[90] ^= 3u;
    v36 = 64;
LABEL_6:
    v37 = v20;
    *(_DWORD *)(v11 + 8612) = v36;
    *(_DWORD *)(v11 + 9688) = v35 + *(_DWORD *)(v11 + 8680);
    *(_DWORD *)(v11 + 9696) = v12;
    *(_DWORD *)(v11 + 9512) = v15;
    *(_DWORD *)(v11 + 8632) = 0;
    *(_DWORD *)(v11 + 8672) += v34;
    v38 = v32[3918];
    v39 = v32[3949];
    v40 = ((v32[3919] ^ 0x1D) >> 1) & 0x7E;
    v41 = ((v40 ^ 0x7E) + v40) ^ (((v32[3919] ^ 0x1D) >> 1) | ((v32[3919] ^ 0x1D) << 7));
    v42 = *(_BYTE *)(v19 + (v41 ^ 0xEBLL)) ^ (v41 + (v41 ^ 0xE6) + 1) ^ 0xB9;
    *(_QWORD *)(v11 + 9520) = 3833;
    v43 = v42 + 10;
    v44 = *(_QWORD *)(v11 + 9648);
    v45 = *(_BYTE *)(v33 + (((v32[3981] >> 1) | (v32[3981] << 7)) ^ 0x1BLL));
    v46 = *(_QWORD *)(v11 + 8656);
    v47 = *(unsigned __int16 *)(v46 + 2 * (((v45 ^ (32 * v45) ^ 0x45) + 10) ^ 0x6Cu));
    v48 = *(_QWORD *)(v11 + 9200);
    HIDWORD(v49) = *(_DWORD *)(*(_QWORD *)(v11 + 9128) + 4 * (v43 ^ 0xEAu));
    LODWORD(v49) = HIDWORD(v49);
    v50 = v47 ^ (-706386747
               * *(_DWORD *)(v48
                           + 4
                           * ((109
                                              * ((*(_BYTE *)(v44
                                                           + (((v32[3950] >> 5) | (8 * v32[3950])) ^ 0xB6))
                                                + (((v32[3950] >> 5) | (8 * v32[3950])) ^ 0xBA)
                                                + 1) ^ 0x5C)) ^ 0x52u))) ^ (v49 >> 30) ^ (1394708534 * (v49 >> 30));
    v51 = *(_QWORD *)(v11 + 8720);
    LOBYTE(v38) = *(_BYTE *)(v33 + (((v38 >> 1) | ((_BYTE)v38 << 7)) ^ 0x25));
    v52 = v38 ^ (32 * v38) ^ 0x45;
    v53 = *(_QWORD *)(v11 + 9160);
    v54 = *(_QWORD *)(v11 + 8696);
    v55 = v50 ^ 0x672860C1 ^ v32[3888] ^ *(_DWORD *)(v54 + 4 * (v32[3888] ^ 0xCELL));
    v56 = *(_DWORD *)(*(_QWORD *)(v11 + 8712)
                    + 4 * (v39 ^ 0xEE ^ (502 - (v50 ^ 0x3E | v50 ^ 0xC1u)))) ^ *(_DWORD *)(v51 + 4 * (v32[4011] ^ 0xE6)) ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v11 + 9136) + 4 * (v32[3980] ^ 0x6CLL)), 19) ^ __ROR4__(*(_DWORD *)(v53 + 4 * ((v52 + 10) ^ 0x61u)), 11) ^ 0x5CB7261;
    v32[3919] = BYTE2(v55) ^ 0xDA;
    v32[3918] = HIBYTE(v56);
    v32[3888] = (unsigned __int16)(HIWORD(v55) ^ 0xE8DA) >> 8;
    v32[3949] = BYTE2(v56);
    LOBYTE(v39) = *(_BYTE *)(v33 + (((v55 >> 1) & 0x80 | ((unsigned __int16)(v55 ^ 0xF46B) >> 9)) ^ 0x25));
    v32[3980] = BYTE1(v56);
    v32[3981] = v55 ^ 0x6B;
    v32[4011] = v56;
    v32[3950] = (v39 ^ (32 * v39) ^ 0x45) + 10;
    v57 = v32[4042];
    v58 = -87 * v32[4012];
    v59 = (-87 * v32[4012]) ^ 0x20;
    v60 = *(_QWORD *)(v11 + 9640);
    v61 = *(unsigned __int8 *)(v60 + v59) ^ 0x58 ^ ((~*(unsigned __int8 *)(v60 + v59) & 0x8Cu) >> (!(v52 & 1) + (v52 & 1)));
    v62 = v32[4073];
    v63 = *(unsigned __int8 *)(v60
                             + ((-87 * (((v61 >> 5) | (8 * v61)) ^ 0x1D)) ^ 0x20));
    v64 = (v47 & 8 ^ 8) + (v47 & 8);
    v65 = *(_BYTE *)(*(_QWORD *)(v11 + 9552) + ((-87 * (v17[39] ^ 0xCC)) ^ 0x8BLL)) + 94;
    v66 = *(_DWORD *)(*(_QWORD *)(v11 + 9080)
                    + 4 * (((v32[4043] ^ *(_BYTE *)(v37 + (v32[4043] ^ 0xB7)) ^ 0x7E) + 3) ^ 0xB1u)) ^ (-706386747 * *(_DWORD *)(v48 + 4 * (v32[4074] ^ 9))) ^ ((v17[9] ^ 0x41) + (v17[9] ^ 0x88AD) + 1) ^ *(unsigned __int16 *)(*(_QWORD *)(v11 + 8664) + 2 * (v17[9] ^ 0x17u)) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9096) + 4 * ((((v63 ^ (v63 >> 1) & 0x46) >> 5) | (8 * (v63 ^ (v63 >> 1) & 0x46 ^ 0x1E))) ^ 0x26u));
    v67 = ((((v57 << 24) | (v62 << 16) | ((unint64_t)v17[8] << 8) | v17[39]) ^ 0xCC) >> v64);
    v68 = *(_QWORD *)(v11 + 8648);
    v69 = *(_QWORD *)(v11 + 8736);
    LODWORD(v67) = *(_DWORD *)(v68 + 4 * (v67 ^ 0xDD)) ^ v67;
    HIDWORD(v49) = *(_DWORD *)(v53 + 4 * (v57 ^ 0x46));
    LODWORD(v49) = HIDWORD(v49);
    LODWORD(v57) = v49 >> 11;
    LODWORD(v62) = *(_DWORD *)(v51 + 4 * (((v65 >> 5) | (8 * v65)) ^ 0xF3u)) ^ __ROR4__(*(_DWORD *)(v69 + 4 * (v62 ^ 0xDF)), 29) ^ v57 ^ 0x2197835B ^ ((v67 ^ 0x705FB755) + 1145046593 + ((2 * v67) & 0x777FF37E ^ 0x17409154));
    LOBYTE(v63) = *(_BYTE *)(*(_QWORD *)(v11 + 9544) + (((v66 >> 17) & 0x80 | ((v66 ^ 0x44B6250E) >> 25)) ^ 0x25));
    v32[4073] = BYTE2(v62);
    v32[4042] = BYTE3(v62);
    v32[4043] = (v66 ^ 0x44B6250E) >> 16;
    *(_BYTE *)(v18 + (((v57 & 0xD8 ^ 0xD8) + (v57 & 0xD8)) ^ v59 & (v58 ^ 0xFFFFFFDF))) = BYTE1(v62);
    v32[4074] = (unsigned __int16)(v66 ^ 0x250E) >> 8;
    v32[4012] = ((v63 ^ (32 * v63) ^ 0x45) + 10) ^ 0x1D;
    LOBYTE(v66) = *(_BYTE *)(*(_QWORD *)(v11 + 9560) + (v66 ^ 0xCELL));
    v70 = *(_QWORD *)(v11 + 9560);
    *(_DWORD *)(v11 + 8688) += *(_DWORD *)(v11 + 9488);
    v17[39] = v62;
    v17[9] = (v66 ^ 0x60) + 3;
    v71 = *(unsigned __int8 *)(v60 + ((-87 * v17[70]) ^ 0x20));
    LOWORD(v57) = (109
                                  * ((*(_BYTE *)(v44 + (((v17[101] >> 5) | (8 * v17[101])) ^ 0x5ELL))
                                    + (((v17[101] >> 5) | (8 * v17[101])) ^ 0x52)
                                    + 1) ^ 0x5C));
    v72 = *(_QWORD *)(v11 + 8728);
    LODWORD(v59) = *(unsigned __int8 *)(v60 + ((-87 * (v17[71] ^ 0x88)) ^ 0x20));
    v73 = *(_QWORD *)(v11 + 9128);
    HIDWORD(v49) = *(_DWORD *)(v73
                             + 4
                             * (((((v59 >> 1) & 0x46 ^ v59) >> 5) | (8 * ((v59 >> 1) & 0x46 ^ v59))) ^ 0xE3u));
    LODWORD(v49) = HIDWORD(v49);
    LODWORD(v59) = v49 >> 30;
    LOBYTE(v63) = *(_BYTE *)(*(_QWORD *)(v11 + 9544) + (((v17[163] >> 1) | (v17[163] << 7)) ^ 0x25));
    v74 = (-1450129381 * (_DWORD)v59) << (((v49 & 0x40000000) == 0) + ((v49 & 0x40000000) != 0));
    LODWORD(v62) = *(unsigned __int8 *)(v60 + ((-87 * (v17[40] ^ 0x1D)) ^ 0x20));
    LOBYTE(v62) = ((v62 ^ (v62 >> 1) & 0x46) >> 5) | (8
                                                                                   * (v62 ^ (v62 >> 1) & 0x46 ^ 0x1E));
    v75 = v51;
    v76 = *(_DWORD *)(v51
                    + 4
                    * (((*(_BYTE *)(v70 + (((v63 ^ (32 * v63) ^ 0x45) + 10) ^ 0x26)) ^ 0x60)
                                       + 3) ^ 0x51u));
    v77 = v17[132];
    v78 = *(_DWORD *)(v68 + 4 * (v77 ^ 0x25));
    v79 = *(_DWORD *)(v69
                    + 4
                    * (((v57 ^ 0xCE ^ *(_BYTE *)(v37 + ((unsigned __int16)v57 ^ 7))) + 3) ^ 0x52u));
    HIDWORD(v49) = (((v71 >> 1) & 0x46 ^ v71) >> 5) | (8 * ((v71 >> 1) & 0x46 ^ v71));
    LODWORD(v49) = (HIDWORD(v49) ^ 0xF0) << 24;
    LODWORD(v59) = v17[102] ^ *(unsigned __int16 *)(v46 + 2 * (v17[133] ^ 0x86)) ^ *(_DWORD *)(v72 + 4 * (v17[102] ^ 0xE9)) ^ *(_DWORD *)(v54 + 4 * (v62 ^ 0xB1u)) ^ v59 ^ v62 ^ 0xF14EAD16 ^ v74;
    v80 = *(_QWORD *)(v11 + 9704);
    v81 = *(_QWORD *)(v11 + 9160);
    v82 = *(_DWORD *)(v81
                    + 4
                    * ((((((v49 >> 25) ^ 0x98) + ((v49 >> 25) ^ 0x7E) + 1) ^ 0xB9 ^ *(_BYTE *)(v80 + ((v49 >> 25) ^ 0x95)))
                                       + 10) ^ 0xE4u));
    v17[40] = BYTE3(v59);
    v83 = v76 ^ v78 ^ v77 ^ __ROR4__(v79, 29) ^ __ROR4__(v82, 11) ^ 0xABE85FDF;
    v17[132] = BYTE1(v83);
    v17[71] = BYTE2(v59);
    v17[163] = v83;
    v17[102] = BYTE1(v59);
    v17[133] = v59;
    v17[101] = BYTE2(v83);
    v17[70] = HIBYTE(v83);
    LOBYTE(v83) = *(_BYTE *)(*(_QWORD *)(v11 + 9544) + (((v17[195] >> 1) | (v17[195] << 7)) ^ 0x25));
    LOBYTE(v59) = (v83 ^ (32 * v83) ^ 0x45) + 10;
    v84 = v32[3946];
    LODWORD(v57) = *(unsigned __int8 *)(v60 + ((-87 * (v32[3947] ^ 0x1D)) ^ 0x20));
    v85 = *(_QWORD *)(v11 + 9552);
    v86 = v46;
    LODWORD(v57) = *(unsigned __int16 *)(v46
                                       + 2
                                       * ((((v57 ^ (v57 >> 1) & 0x46) >> 5) | (8 * (v57 ^ (v57 >> 1) & 0x46 ^ 0x1E))) ^ 2u));
    LOBYTE(v62) = *(_BYTE *)(v85 + ((-87 * (v32[3916] ^ 0x1D)) ^ 0x8BLL)) + 94;
    v87 = *(_QWORD *)(v11 + 9080);
    LODWORD(v59) = *(_DWORD *)(v72 + 4 * (((v62 >> 5) | (8 * v62)) ^ 0x62u)) ^ ((v62 >> 5) | (8 * v62)) ^ *(_DWORD *)(v87 + 4 * (v59 ^ 0x43u)) ^ v57;
    v88 = *(_QWORD *)(v11 + 9096);
    LODWORD(v57) = *(_DWORD *)(v88 + 4 * (v17[164] ^ 0x23));
    LODWORD(v77) = *(_DWORD *)(v51 + 4 * (v32[3977] ^ 1));
    v89 = *(_DWORD *)(v68 + 4 * (v84 ^ 0x70));
    LODWORD(v59) = v59 ^ v57 ^ 0xE46C9D25 ^ (993562527
                                           * ((v57 & 0x8D0559BB ^ 0x901409A) + ((v57 ^ 0xE46C9D25) & 0x8D0559BB))) ^ 0xDE55936B;
    LODWORD(v57) = *(_DWORD *)(*(_QWORD *)(v11 + 8712) + 4 * (v32[3915] ^ 0x70));
    v90 = *(_DWORD *)(v81 + 4 * (v17[194] ^ 0x5CLL));
    v32[3916] = BYTE1(v59);
    LODWORD(v84) = v84 ^ v77 ^ v57 ^ v89 ^ __ROR4__(v90, 11) ^ 0x53D52134;
    v32[3947] = v59;
    v32[3946] = BYTE1(v84);
    v17[164] = BYTE3(v59);
    v17[194] = BYTE3(v84);
    v32[3977] = v84;
    v17[195] = BYTE2(v59);
    v32[3915] = BYTE2(v84);
    v91 = *(_QWORD *)(v11 + 9648);
    LOBYTE(v84) = 109
                * (((((v32[4008] >> 5) | (8 * v32[4008])) ^ 0x52)
                  + *(_BYTE *)(v91
                             + (((WORD1(v84) & 0x6E ^ 0x6E) + (WORD1(v84) & 0x6E)) ^ ((v32[4008] >> 5) | (8 * v32[4008])) ^ 0x30))
                  + 1) ^ 0x5C);
    LODWORD(v57) = 109
                 * (((v32[4071] >> 5) | (8 * v32[4071])) ^ 0xFFFFFFB9 ^ *(unsigned __int8 *)(*(_QWORD *)(v11 + 9536)
                                                                                           + (((v32[4071] >> 5) | (8 * v32[4071])) ^ 0x3BLL)));
    v92 = (v57 >> 5) | (8 * (v57 & 0x1F));
    v93 = *(_QWORD *)(v11 + 9536);
    LOBYTE(v77) = ((v32[4009] ^ 0x1D) >> 1) | ((v32[4009] ^ 0x1D) << 7);
    HIDWORD(v49) = *(_DWORD *)(v73
                             + 4
                             * (((((v77 ^ 0x98) + (v77 ^ 0x7E) + 1) ^ 0xB9 ^ *(_BYTE *)(v80 + (v77 ^ 0x95)))
                                                + 10) ^ 0xCu));
    LODWORD(v49) = HIDWORD(v49);
    LODWORD(v77) = v49 >> 30;
    v94 = *(_DWORD *)(v75 + 4 * (v17[5] ^ 0xFDLL));
    LOBYTE(v62) = *(_BYTE *)(*(_QWORD *)(v11 + 9544) + (((v32[4070] >> 1) | (v32[4070] << 7)) ^ 0x25));
    LOBYTE(v62) = (v62 ^ (32 * v62) ^ 0x45) + 10;
    v95 = v68;
    v96 = *(_DWORD *)(v68 + 4 * (v62 ^ 0xA8u));
    v97 = *(unsigned __int8 *)(v85 + ((-87 * v32[4039]) ^ 0x8BLL)) + 94;
    HIDWORD(v49) = v97 ^ 0x13;
    LODWORD(v49) = v97 << 24;
    v98 = *(_QWORD *)(v11 + 8736);
    v99 = *(_DWORD *)(v98 + 4 * ((v49 >> 29) ^ 0x54u));
    LODWORD(v59) = *(unsigned __int16 *)(v86
                                       + 2
                                       * ((109 * (*(_BYTE *)(v93 + (v92 ^ 0xD3)) ^ v92 ^ 0x51)) ^ 0xBCu)) ^ (-706386747 * *(_DWORD *)(*(_QWORD *)(v11 + 9200) + 4 * ~v32[4040])) ^ *(_DWORD *)(v88 + 4 * (v32[3978] ^ 0xD0)) ^ v77 ^ (1394708534 * v77) ^ 0xCC21BC8C;
    LODWORD(v57) = *(_DWORD *)(*(_QWORD *)(v11 + 8704) + 4 * (v84 ^ 0xEu));
    v32[3978] = BYTE3(v59);
    v32[4040] = BYTE1(v59);
    LODWORD(v84) = v84 ^ v94 ^ v96 ^ v62 ^ v57 ^ __ROR4__(v99, 29) ^ 0x1EFD1128;
    v17[5] = v84;
    v32[4008] = BYTE3(v84);
    v32[4071] = v59;
    v32[4039] = BYTE2(v84);
    v32[4070] = BYTE1(v84);
    v32[4009] = BYTE2(v59);
    v100 = *(_QWORD *)(v11 + 8664);
    v101 = *(_DWORD *)(v88
                     + 4
                     * ((109
                                        * (((v17[6] >> 5) | (8 * v17[6])) ^ 0x51 ^ *(_BYTE *)(v93
                                                                                            + (((v17[6] >> 5) | (8 * v17[6])) ^ 0xD3)))) ^ 0x41u));
    v102 = (8 * ((v17[129] ^ 0x95) & 0x1F)) | ((v17[129] ^ 0x95) >> 5);
    v103 = *(_QWORD *)(v11 + 8640);
    LODWORD(v92) = *(_DWORD *)(v103
                             + 4 * ((109 * (v102 ^ 0xB9 ^ *(_BYTE *)(v93 + (v102 ^ 0x3B)))) ^ 0xF8u)) ^ 0x46F90B2B;
    v104 = v98;
    v105 = *(_QWORD *)(v11 + 9160);
    v106 = v17[98] ^ *(_DWORD *)(v95 + 4 * (v17[98] ^ 0xF7)) ^ v92 ^ (v92 >> 1) & 0xA056852 ^ __ROR4__(*(_DWORD *)(v98 + 4 * (((v17[67] ^ 0x63 ^ *(_BYTE *)(v37 + (v17[67] ^ 0xAALL))) + 3) ^ 0x74u)), 29) ^ __ROR4__(*(_DWORD *)(v105 + 4 * (v17[36] ^ 7)), 11) ^ 0x483B1A08;
    LODWORD(v84) = v17[68] ^ *(_DWORD *)(v72 + 4 * (v17[68] ^ 7)) ^ ((v17[99] ^ 0x88CE) + (v17[99] ^ 0x22) + 1) ^ *(unsigned __int16 *)(v100 + 2 * (v17[99] ^ 0x74)) ^ *(_DWORD *)(v87 + 4 * (v17[37] ^ 0xB8)) ^ 0x881F0265 ^ v101;
    LOBYTE(v59) = 109
                * ((*(_BYTE *)(v91 + (((v106 >> 21) & 0xF8 | (v106 >> 29)) ^ 0x5ELL))
                  + (((v106 >> 21) & 0xF8 | (v106 >> 29)) ^ 0x52)
                  + 1) ^ 0x5C);
    v17[6] = BYTE3(v84);
    v17[36] = v59;
    v17[67] = BYTE2(v106);
    v17[98] = BYTE1(v106);
    v17[129] = v106;
    v17[99] = v84;
    v17[68] = BYTE1(v84);
    v17[37] = BYTE2(v84);
    LODWORD(v84) = ((*(_BYTE *)(*(_QWORD *)(v11 + 9560) + (v17[130] ^ 0x26)) ^ 0x60)
                                   + 3) ^ 0x1D;
    LODWORD(v57) = ((v17[192] ^ 0x1D) >> 1) | ((v17[192] ^ 0x1D) << 7);
    v107 = *(_QWORD *)(v11 + 9704);
    v108 = v32[3913];
    LODWORD(v92) = v108 ^ 0x70;
    v109 = v108 ^ 0x26;
    LODWORD(v108) = (v108 & 0xFF00FFFF | ((109
                                                          * (((v17[161] >> 5) | (8 * v17[161])) ^ 0x51 ^ *(_BYTE *)(v93 + (((v17[161] >> 5) | (8 * v17[161])) ^ 0xD3)))) << 16) | ((_DWORD)v84 << 24)) ^ 0x99001D;
    LODWORD(v92) = (v92 + (v108 ^ 0x8881) + 1) ^ *(unsigned __int16 *)(v100 + 2 * v109);
    HIDWORD(v49) = *(unsigned __int8 *)(v107
                                      + ((((v17[192] ^ 0x1D) >> 1) | ((v17[192] ^ 0x1D) << 7)) ^ 0x95)) ^ ((v57 ^ 0x7E) + (v57 ^ 0x67) - 2 * (v57 ^ 0x67)) ^ 0xFFFFFFB9;
    LODWORD(v49) = (HIDWORD(v49) << 24) + 167772160;
    v110 = *(_QWORD *)(v11 + 9200);
    LOBYTE(v108) = *(_BYTE *)(v85 + ((-87 * BYTE2(v108)) ^ 0x8BLL)) + 94;
    v111 = *(_QWORD *)(v11 + 8696);
    v112 = *(_DWORD *)(v103 + 4 * (v32[3943] ^ 0x5ALL));
    v113 = *(_DWORD *)(v87 + 4 * (((v108 >> 5) | (8 * v108)) ^ 0x55u)) ^ (-706386747 * *(_DWORD *)(v110 + 4 * (((*(_BYTE *)(v107 + ((v49 >> 25) ^ 0x95)) ^ (((v49 >> 25) ^ 0x98) + ((v49 >> 25) ^ 0x7E) + 1) ^ 0xB9) + 10) ^ 0xBCu))) ^ *(_DWORD *)(v111 + 4 * (((*(_BYTE *)(*(_QWORD *)(v11 + 9560) + (v17[130] ^ 0x26)) ^ 0x60) + 3) ^ 0xC0u));
    v114 = *(_QWORD *)(v11 + 9136);
    LODWORD(v84) = v84 ^ v92 ^ 0xA7061DC1 ^ v113;
    LODWORD(v59) = v112 ^ (v112 >> 1) & 0xA056852 ^ __ROR4__(*(_DWORD *)(v114 + 4 * (v32[3912] ^ 0x66)), 19) ^ __ROR4__(*(_DWORD *)(v104 + 4 * (v17[191] ^ 0x3ELL)), 29) ^ __ROR4__(*(_DWORD *)(v105 + 4 * (v17[160] ^ 0x2BLL)), 11) ^ 0xC2761D21;
    LOBYTE(v57) = (109
                 * (*(_BYTE *)(v93 + (((v84 >> 21) & 0xF8 | (v84 >> 29)) ^ 0x3BLL)) ^ ((v84 >> 21) & 0xF8 | (v84 >> 29)) ^ 0xB9)) ^ 0x1D;
    v17[160] = BYTE3(v59);
    v115 = (v84 >> 13) & 0xF8 | (v113 >> 21) & 7;
    v17[130] = v57;
    LOBYTE(v113) = *(_BYTE *)(v93 + (v115 ^ 0x3B));
    v32[3912] = BYTE1(v59);
    v32[3943] = v59;
    v17[192] = BYTE1(v84);
    v17[191] = BYTE2(v59);
    v17[161] = 109 * (v115 ^ 0xB9 ^ v113);
    v32[3913] = v84;
    v116 = v32[4006];
    v117 = v32[3944];
    LOBYTE(v57) = v116 ^ 0xAA;
    v118 = *(_QWORD *)(v11 + 9680);
    LOBYTE(v115) = (v32[4067] >> 1) | (v32[4067] << 7);
    v119 = v32[4037];
    HIDWORD(v49) = v119 ^ 0x1D;
    LODWORD(v49) = v119 << 24;
    v120 = *(_QWORD *)(v11 + 9648);
    v121 = *(_QWORD *)(v11 + 8656);
    LOWORD(v119) = *(_WORD *)(v121
                            + 2
                            * ((109
                                               * ((*(_BYTE *)(v120 + ((v49 >> 29) ^ 0x5ELL))
                                                 + ((v49 >> 29) ^ 0x52)
                                                 + 1) ^ 0x5C)) ^ 0xD4u));
    LODWORD(v116) = -706386747
                  * *(_DWORD *)(v110
                              + 4 * (((v116 ^ 0x63 ^ *(_BYTE *)(v118 + (v116 ^ 0xAA))) + 3) ^ 0xAEu));
    v122 = *(_QWORD *)(v11 + 9128);
    HIDWORD(v49) = *(_DWORD *)(v122 + 4 * (v32[3975] ^ 0xB1));
    LODWORD(v49) = HIDWORD(v49);
    LODWORD(v86) = *(_DWORD *)(v111 + 4 * (v117 ^ 0xC2u));
    LODWORD(v115) = *(_DWORD *)(v103
                              + 4
                              * (((*(_BYTE *)(v107 + (v115 ^ 0x95)) ^ ((v115 ^ 0x98) + (v115 ^ 0x7E) + 1) ^ 0xB9)
                                                 + 10) ^ 0xBFu)) ^ 0x46F90B2B;
    LOWORD(v119) = v119 ^ v117;
    v123 = v115 >> 1;
    LODWORD(v116) = (unsigned __int16)v119 ^ v116 ^ v86 ^ (v49 >> 30) ^ (1394708534 * (v49 >> 30)) ^ 0x72EAF9A;
    LODWORD(v84) = v32[3974] ^ ((v57 & 0x35 ^ 0x3F457935) + (v57 & 0x35)) ^ v115 ^ __ROR4__(*(_DWORD *)(v114+ 4* (v32[4036] ^ 0x2ELL)), 19) ^ *(_DWORD *)(*(_QWORD *)(v11 + 8704) + 4 * (v32[3974] ^ 0x9ALL)) ^ (v115 >> 1) & 0xA056852 ^ __ROR4__(*(_DWORD *)(v104 + 4 * (v32[4005] ^ 4)), 29) ^ 0xD328F756;
    v32[3944] = BYTE3(v116);
    v32[3974] = BYTE3(v84);
    v32[3975] = BYTE2(v116);
    v32[4005] = BYTE2(v84);
    v32[4006] = BYTE1(v116);
    v32[4036] = BYTE1(v84);
    LOBYTE(v59) = (109
                 * (((((8 * (v116 & 0x1F)) | (v116 >> 5)) ^ 0x52)
                   + *(_BYTE *)(v120 + (((8 * (v116 & 0x1F)) | (v116 >> 5)) ^ 0x5E))
                   + 1) ^ 0x5C)) ^ 0x1D;
    v32[4067] = v84;
    v32[4037] = v59;
    v124 = v122;
    v125 = v17[65] ^ 0x1Du;
    HIDWORD(v49) = *(_DWORD *)(v122 + ((4 * (v17[3] ^ 0x1DLL)) ^ 0x334));
    LODWORD(v49) = HIDWORD(v49);
    LOBYTE(v125) = ((_DWORD)v125 << (((v125 >> 1) & 7 ^ 7) + ((v125 >> 1) & 7))) + (v125 >> 1);
    LODWORD(v125) = *(unsigned __int16 *)(v121
                                        + 2
                                        * (((*(_BYTE *)(v107
                                                                       + (((v123 & 0x42 ^ 0xEB) + (v123 & 0x42)) ^ v125 ^ 0x7E)) ^ ((v125 ^ 0x98) + (v125 ^ 0x7E) + 1) ^ 0xB9)
                                                           + 10) ^ 0x23u));
    LOBYTE(v119) = *(_BYTE *)(*(_QWORD *)(v11 + 9544) + (((v17[95] >> 1) | (v17[95] << 7)) ^ 0x25)) ^ 0x45;
    v126 = *(_DWORD *)(v103 + 4 * (((v119 ^ (32 * v119) ^ 0xA0) + 10) ^ 0x8Bu)) ^ 0x46F90B2B;
    v127 = *(_QWORD *)(v11 + 8712);
    v128 = *(_QWORD *)(v11 + 9160);
    v129 = v17[64] ^ *(_DWORD *)(*(_QWORD *)(v11 + 8648) + 4 * (v17[64] ^ 0x53)) ^ *(_DWORD *)(v127 + 4 * (v17[33] ^ 0x59)) ^ v126 ^ (v126 >> 1) & 0xA056852 ^ __ROR4__(*(_DWORD *)(v128 + 4 * (v17[2] ^ 0xD7)), 11) ^ 0x2F1D4C69;
    LODWORD(v84) = v17[34] ^ *(_DWORD *)(v111 + ((4 * (v32[4068] ^ 0x1DLL)) ^ 0x148)) ^ (v49 >> 30) ^ *(_DWORD *)(*(_QWORD *)(v11 + 8728) + 4 * (v17[34] ^ 0xCFLL)) ^ (1394708534 * (v49 >> 30)) ^ v32[4068] ^ 0x1D ^ 0x982A7ACF ^ v125;
    v17[2] = HIBYTE(v129);
    v32[4068] = BYTE3(v84);
    v17[3] = BYTE2(v84);
    v17[33] = BYTE2(v129);
    v17[34] = BYTE1(v84);
    LOBYTE(v116) = (8 * v84) | (v84 >> 5);
    v17[64] = BYTE1(v129);
    LOBYTE(v84) = *(_BYTE *)(v120 + (v116 ^ 0x5ELL));
    v17[95] = v129;
    v17[65] = 109 * (((v116 ^ 0x52) + v84 + 1) ^ 0x5C);
    v130 = *(_QWORD *)(v11 + 9536);
    v131 = v118;
    v132 = ((((v17[127] >> 5) | (8 * v17[127])) ^ 0x51 ^ *(_BYTE *)(v130
                                                                                   + (((v17[127] >> 5) | (8 * v17[127])) ^ 0xD3)))
                           * (((BYTE2(v129) & 0xB6 ^ 0xB6) + (BYTE2(v129) & 0xB6)) ^ 0xDB));
    LODWORD(v118) = (v17[189] ^ 0x63 ^ *(unsigned __int8 *)(v118 + (v17[189] ^ 0xAALL)))
                  - (v129 & 0x29)
                  - (v129 & 0x29 ^ 0x29)
                  + 44;
    LODWORD(v93) = v118 ^ 0x3B;
    v133 = *(_QWORD *)(v11 + 8664);
    v134 = v124;
    HIDWORD(v49) = *(_DWORD *)(v124 + ((4 * v132) ^ 0x3B4));
    LODWORD(v49) = HIDWORD(v49);
    v135 = *(_QWORD *)(v11 + 9560);
    LODWORD(v102) = *(_DWORD *)(v103
                              + 4 * (((*(_BYTE *)(v135 + (v32[3909] ^ 0x26)) ^ 0x60) + 3) ^ 0xE1u)) ^ 0x46F90B2B;
    v136 = *(_QWORD *)(v11 + 9096);
    LODWORD(v92) = (v49 >> 30) ^ *(_DWORD *)(v136 + 4 * (v17[96] ^ 0xF6)) ^ (-706386747
                                                                                              * *(_DWORD *)(*(_QWORD *)(v11 + 9200) + ((4 * (v17[158] ^ 0x1DLL)) ^ 0xF8))) ^ ((v118 ^ 0x88D7) + v93 + 1) ^ *(unsigned __int16 *)(v133 + 2 * (v118 ^ 0x6Du)) ^ ((unint64_t)(-1450129381 * (v49 >> 30)) << (((v132 & 0x21 ^ 0x21) + (v132 & 0x21)) & 0x43));
    v137 = *(_QWORD *)(v11 + 9136);
    HIDWORD(v49) = *(_DWORD *)(v128 + 4 * (v17[126] ^ 0xB5));
    LODWORD(v49) = HIDWORD(v49);
    LODWORD(v59) = v49 >> 11;
    LODWORD(v116) = (v102 >> 1) & 0xA056852 ^ v102 ^ __ROR4__(*(_DWORD *)(v137+ 4 * (v17[188] ^ 6)), 19) ^ *(_DWORD *)(v127+ 4* (((v17[157] ^ 0xEB ^ *(_BYTE *)(v131 + (v17[157] ^ 0x22))) + 3) ^ 0xB4u));
    LODWORD(v57) = v92 ^ 0x1007140C;
    LODWORD(v109) = v116 ^ v59 ^ 0xFA3C559C;
    v138 = ((v92 ^ 0x1007140C) >> 21) & 0xF8 | (v92 >> 29);
    v139 = v120;
    LOBYTE(v92) = *(_BYTE *)(v120 + (v138 ^ 0x5E));
    v17[126] = BYTE3(v109);
    v17[96] = 109 * ((v92 + (v138 ^ 0x52) + 1) ^ 0x5C);
    LOBYTE(v138) = *(_BYTE *)(v107 + (((v57 >> 9) & 0x80 | (v57 >> 17) & 0x7F) ^ 0x95));
    v17[189] = v57;
    v17[188] = BYTE1(v109);
    v17[157] = BYTE2(v109);
    v32[3909] = v109;
    v17[158] = BYTE1(v57);
    v17[127] = ((v138 ^ ((((v57 >> 9) & 0x80 | (v57 >> 17) & 0x7F) ^ 0x98)
                       + (((v57 >> 9) & 0x80 | (v57 >> 17) & 0x7F) ^ 0x7E)
                       + 1) ^ 0xB9)
              + 10) ^ 0x1D;
    LODWORD(v138) = ((((v32[3940] >> 5) | (8 * v32[3940])) ^ 0x52)
                   + *(unsigned __int8 *)(v120 + (((v32[3940] >> 5) | (8 * v32[3940])) ^ 0x5ELL))
                   + 1) ^ 0x5C;
    v140 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 9728) + (((v116 & 0x10 ^ 0x10) + (v116 & 0x10)) | 0x63));
    v141 = *(_QWORD *)(v11 + 8728);
    v142 = v133;
    LODWORD(v59) = (unsigned __int16)((((v59 & 0x7713 ^ 0x7713) + (v59 & 0x7713)) ^ v140 ^ 0xFFE1) + (v140 ^ 0x1E) + 1) ^ *(unsigned __int16 *)(v133 + 2 * (v140 ^ 0x48));
    HIDWORD(v49) = *(_DWORD *)(v134 + 4 * (v32[3941] ^ 0x59));
    LODWORD(v49) = HIDWORD(v49);
    LODWORD(v140) = v32[3972] ^ *(_DWORD *)(v136 + 4 * (v32[3910] ^ 0x6BLL)) ^ *(_DWORD *)(v141
                                                                                         + 4 * (v32[3972] ^ 0xA1)) ^ (v49 >> 30) ^ (1394708534 * (v49 >> 30));
    LODWORD(v59) = v140 ^ 0x8267C340 ^ v59;
    v143 = *(_DWORD *)(v103 + 4 * (v32[4033] ^ 0x6ELL));
    v144 = v137;
    LOBYTE(v109) = 109
                 * (((104 * v138) | ((109 * v138) >> 5)) ^ 0xB9 ^ *(_BYTE *)(v130
                                                                                            + (((104 * v138) | ((109 * v138) >> 5)) ^ 0x3BLL)));
    v145 = *(_QWORD *)(v11 + 8704);
    LODWORD(v57) = v143 ^ __ROR4__(*(_DWORD *)(v137 + 4 * (v32[4002] ^ 0x69)), 19) ^ *(_DWORD *)(v127
                                                                                                 + 4
                                                                                                 * (v32[3971] ^ 0xD4)) ^ (v143 >> 1) & 0xA056852 ^ 0xCBE1CBCE ^ *(_DWORD *)(v145 + 4 * (v109 ^ 0x4Bu));
    v32[3910] = (*(_BYTE *)(v135 + (BYTE3(v140) ^ 0xB0)) ^ 0x60) + 3;
    v32[3940] = BYTE3(v57);
    v32[3941] = BYTE2(v59) ^ 0x65;
    v32[3971] = BYTE2(v57);
    v32[3972] = BYTE1(v59) ^ 0x78;
    v32[4002] = BYTE1(v57);
    v146 = (((v59 ^ 0xB8u) >> 5) & 0xFFFFFF07 | (8 * ((v59 ^ 0xB8) & 0x1F))) ^ ((v93 | v118) & 0x21 | 0xD8);
    LOBYTE(v146) = 109 * (v146 ^ *(_BYTE *)(v130 + (v146 ^ 0xC2)) ^ 0x40);
    v32[4033] = v57 ^ v109;
    v32[4003] = v146;
    v147 = *(_QWORD *)(v11 + 9640);
    LODWORD(v57) = *(unsigned __int8 *)(v147 + ((-87 * v32[4034]) ^ 0x20));
    LOBYTE(v57) = (((v57 >> 1) & 0x46 ^ v57) >> 5) | (8
                                                                                   * ((v57 >> 1) & 0x46 ^ v57));
    LODWORD(v140) = *(unsigned __int8 *)(v147 + ((-87 * (*v17 ^ 0x1D)) ^ 0x20));
    LOBYTE(v140) = (((v140 >> 1) & 0x46 ^ v140) >> 5) | (8
                                                                                      * ((v140 >> 1) & 0x46 ^ v140));
    v148 = *(_QWORD *)(v11 + 9080);
    v149 = v145;
    LODWORD(v59) = *(_DWORD *)(v141 + 4 * (v140 ^ 0xD5u)) ^ v57 ^ 0xED ^ *(_DWORD *)(v148 + 4 * (((*(_BYTE *)(v135 + (v32[4065] ^ 0x3BLL)) ^ 0x60) + 3) ^ 0xCAu)) ^ ((v17[31] ^ 0x8867) + (v17[31] ^ 0x8B) + 1) ^ *(unsigned __int16 *)(v142 + 2 * (v17[31] ^ 0xDDu)) ^ *(_DWORD *)(*(_QWORD *)(v11 + 8696) + 4 * (v57 ^ 0x4Cu));
    LODWORD(v140) = v140 ^ 0x1AFDC9E1 ^ v59;
    LODWORD(v134) = v32[4064] ^ *(_DWORD *)(*(_QWORD *)(v11 + 8720) + 4 * (v17[61] ^ 0xELL)) ^ __ROR4__(*(_DWORD *)(v144 + 4 * (v17[30] ^ 0x6DLL)), 19) ^ *(_DWORD *)(v127 + 4 * (v32[4095] ^ 0x6CLL)) ^ *(_DWORD *)(v145 + 4 * (v32[4064] ^ 0xC0)) ^ 0x678011B3;
    LOBYTE(v146) = *(_BYTE *)(*(_QWORD *)(v11 + 9704)
                            + (((v134 >> 17) & 0x80 | (v134 >> 25)) ^ 0x95)) ^ ((((v134 >> 17) & 0x80 | (v134 >> 25)) ^ 0x98) + (((v134 >> 17) & 0x80 | (v134 >> 25)) ^ 0x7E) + 1) ^ 0xB9;
    v32[4095] = BYTE2(v134);
    v32[4064] = v146 + 10;
    v32[4065] = BYTE2(v140);
    v32[4034] = BYTE3(v140);
    *(_DWORD *)(v11 + 9656) = v140 >> 5;
    v150 = (v140 >> 5) & 0xF8 | ((unsigned __int16)v59 >> 13);
    LOBYTE(v59) = *(_BYTE *)(v139 + (v150 ^ 0x58));
    v17[30] = BYTE1(v134);
    v17[61] = v134;
    *v17 = 109 * (((v150 ^ 0x54) + v59 + 1) ^ 0x5C);
    v17[31] = v140;
    LOBYTE(v134) = -87 * v17[154];
    LOWORD(v59) = v134 & 0xBE ^ 0x1B06;
    LOBYTE(v109) = *(_BYTE *)(*(_QWORD *)(v11 + 9552) + ((-87 * v17[124]) ^ 0x8BLL)) + 94;
    LODWORD(v109) = *(unsigned __int8 *)(v147
                                       + ((-87 * (((v109 >> 5) | (8 * v109)) ^ 0x81)) ^ 0x20));
    LODWORD(v150) = v17[155];
    v151 = v142;
    v152 = *(unsigned __int8 *)(v147 + (v134 ^ 0x20));
    v153 = v17[123];
    LOBYTE(v92) = *(_BYTE *)(*(_QWORD *)(v11 + 9544)
                           + ((((v17[62] ^ 0x99) << ((v134 ^ v59 ^ 0x38) & 0x3A ^ 0x3D)) & 0xE0 | ((v17[62] ^ 0x99uLL) >> 1)) ^ 0x25));
    LODWORD(v109) = ((((v109 >> 1) & 0x46 ^ v109) >> 5) | (8 * ((v109 >> 1) & 0x46 ^ v109))) ^ 0xF0;
    v154 = *(_QWORD *)(v11 + 9096);
    v155 = ((v17[92] << 24) | ((_DWORD)v153 << 16) | ((((v152 ^ (v152 >> 1) & 0x46) >> 5) | (8 * (v152 ^ (v152 >> 1) & 0x46 ^ 0x1E))) << 8)) ^ 0xD8A2798B;
    LODWORD(v140) = *(_DWORD *)(v148 + 4 * (v17[93] ^ 0x6D ^ (v17[93] & 0xAD ^ 0xD | v17[93] & 0xAD ^ 0xA0u))) ^ v109 ^ ((v150 ^ 0x8870) + (v150 ^ 0x9C) + 1) ^ *(unsigned __int16 *)(v142 + 2 * (v150 ^ 0xCA)) ^ *(_DWORD *)(v154 + 4 * (((v92 ^ (32 * v92) ^ 0x45) + 10) ^ 0x6Eu));
    v156 = *(_QWORD *)(v11 + 8640);
    LODWORD(v140) = v140 ^ *(_DWORD *)(v141 + 4 * (v109 ^ 0x4D));
    LODWORD(v92) = *(_DWORD *)(v156 + 4 * (v17[185] ^ 0x73)) ^ 0x46F90B2B;
    LODWORD(v138) = BYTE1(v155);
    LODWORD(v134) = *(_DWORD *)(*(_QWORD *)(v11 + 9736)
                              + 4 * (v134 & 0x1E ^ 0x19 ^ v59 & 0x101E)
                              + 4 * (BYTE1(v155) ^ 0xA9u));
    v155 >>= 24;
    LODWORD(v134) = v134 ^ v92 ^ *(_DWORD *)(v127 + 4 * (v153 ^ 0x16)) ^ (v92 >> 1) & 0xA056852 ^ *(_DWORD *)(v149 + 4 * (v155 ^ 0xEF)) ^ 0x134A8486;
    v157 = v134 ^ v155 ^ v138;
    v17[93] = (v140 ^ 0xE71575E7) >> 16;
    v17[62] = (v140 ^ 0xE71575E7) >> 24;
    v17[124] = (unsigned __int16)(v140 ^ 0x75E7) >> 8;
    v17[123] = BYTE2(v134);
    v17[92] = BYTE3(v157);
    v17[154] = v157 >> (-88 * ((v150 & 0x3D ^ 0x3D) + (v150 & 0x3D)));
    v17[155] = v140 ^ 0xFA;
    v17[185] = v157;
    v158 = v32[3906];
    LOBYTE(v109) = 109
                 * (((((v32[3969] >> 5) | (8 * v32[3969])) ^ 0x52)
                   + *(_BYTE *)(v139 + (((v32[3969] >> 5) | (8 * v32[3969])) ^ 0x5ELL))
                   + 1) ^ 0x5C);
    v159 = v151;
    LODWORD(v92) = ((v109 ^ 0x67) + (v109 ^ 0x888B) + 1) ^ *(unsigned __int16 *)(v151 + 2 * (v109 ^ 0x31u));
    v160 = ((unsigned __int16)(((v32[3938] ^ 0x1D) << 8) ^ 0x791D) >> 8);
    v161 = *(_QWORD *)(v11 + 9128);
    v162 = *(_QWORD *)(v11 + 9680);
    LODWORD(v134) = *(unsigned __int8 *)(v147 + ((-87 * v32[3999]) ^ 0x20));
    v163 = *(_QWORD *)(v11 + 9544);
    LODWORD(v151) = (((v134 >> 1) & 0x46 ^ v134) >> 5) | (8
                                                                                       * ((v134 >> 1) & 0x46 ^ v134));
    HIDWORD(v49) = *(_DWORD *)(v161 + 4 * (v32[3907] ^ 0x7BLL));
    LODWORD(v49) = HIDWORD(v49);
    v164 = v154;
    LODWORD(v140) = v160 ^ (v49 >> 30) ^ *(_DWORD *)(v141 + 4 * (v160 ^ 0x4D)) ^ (1394708534 * (v49 >> 30)) ^ *(_DWORD *)(v154 + 4 * ((((((((v17[186] ^ 0x1D) << 24) | ((v32[3938] ^ 0x1D) << 8)) ^ 0x3A75791Du) >> 24) ^ *(_BYTE *)(v162 + ((((((v17[186] ^ 0x1D) << 24) | ((v32[3938] ^ 0x1D) << 8)) ^ 0x3A75791Du) >> 24) ^ 0xB7)) ^ 0x7E) + 3) ^ 0x6Eu));
    LODWORD(v160) = *(_DWORD *)(v156
                              + 4
                              * (((((v134 >> 1) & 0x46 ^ v134) >> 5) | (8 * ((v134 >> 1) & 0x46 ^ v134))) ^ 0x2Fu));
    v165 = v156;
    v166 = *(_QWORD *)(v11 + 9136);
    LODWORD(v150) = *(_DWORD *)(v166 + 4 * (v32[3968] ^ 0x44));
    v167 = *(_QWORD *)(v11 + 9560);
    LODWORD(v140) = v140 ^ v92;
    LODWORD(v92) = *(_DWORD *)(v127
                             + 4 * (((*(_BYTE *)(v167 + (v32[3937] ^ 0xA1)) ^ 0x60) + 3) ^ 0xB4u));
    LODWORD(v153) = *(_DWORD *)(v149 + 4 * (v158 ^ 0x9F));
    v17[186] = (v140 ^ 0x7253B433) >> 24;
    LODWORD(v160) = v160 ^ 0x46F90B2B;
    LODWORD(v49) = __ROR4__(v150, 19);
    LODWORD(v150) = (v160 >> 1) & 0xA056852 ^ v92;
    LODWORD(v92) = ~*(_DWORD *)(v11 + 9656) & 0x10;
    LODWORD(v146) = v158 ^ v160 ^ v49 ^ v150 ^ v153 ^ 0x1021B09F;
    v168 = (v140 >> 1) & 0x80 | ((unsigned __int16)(v140 ^ 0xB433) >> 9);
    v32[3906] = BYTE3(v146);
    v32[3907] = (v140 ^ 0x7253B433) >> 16;
    v32[3937] = BYTE2(v146);
    LOBYTE(v158) = (v168 ^ 0x98) + (v168 ^ 0x7E);
    LOBYTE(v168) = *(_BYTE *)(*(_QWORD *)(v11 + 9704) + (v168 ^ 0x95));
    v32[3969] = v140 ^ 0x33;
    v32[3999] = v146;
    v32[3968] = BYTE1(v146);
    v32[3938] = (v168 ^ (v158 + 1) ^ 0xB9) + 10;
    LODWORD(v158) = (v32[4093] | ((v32[4031] ^ 0x1D) << 16) | ((v32[4000] ^ 0x1D) << 24) | ((v32[4062] ^ 0x1D) << 8)) ^ (59313936 - v92 - (v92 ^ 0x3890F10) + 29);
    LODWORD(v168) = (v32[4093] ^ (16 - v92 - (v92 ^ 0x10) + 29));
    LODWORD(v92) = ((unsigned __int16)((v32[4093] | ((v32[4062] ^ 0x1D) << 8)) ^ (3856
                                                                                                 - v92
                                                                                                 - (v92 ^ 0xF10)
                                                                                                 + 29)) >> 8);
    v169 = (v158 >> 17) & 0x80 | (v158 >> 25);
    HIDWORD(v49) = *(_DWORD *)(v161 + 4 * (BYTE2(v158) ^ 0x85u));
    LODWORD(v49) = HIDWORD(v49);
    v170 = v164;
    LODWORD(v158) = (v49 >> 30) ^ *(_DWORD *)(v141 + 4 * (v92 ^ 0x52)) ^ (1394708534 * (v49 >> 30)) ^ *(_DWORD *)(v164 + 4 * (((*(_BYTE *)(v163 + (v169 ^ 0x25)) ^ (32 * *(_BYTE *)(v163 + (v169 ^ 0x25))) ^ 0x45) + 10) ^ 0x60u));
    LOBYTE(v146) = 109
                 * ((*(_BYTE *)(v139 + (((v32[4030] >> 5) | (8 * v32[4030])) ^ 0x5ELL))
                   + (((v32[4030] >> 5) | (8 * v32[4030])) ^ 0x52)
                   + 1) ^ 0x5C);
    LOWORD(v168) = v158 ^ v92 ^ ((v168 ^ 0x8898) + (v168 ^ 0x74) + 1) ^ *(_WORD *)(v159
                                                                                 + 2 * (v168 ^ 0x22));
    v171 = *(_QWORD *)(v11 + 8736);
    LODWORD(v146) = (v146 ^ v32[4092]) ^ *(_DWORD *)(*(_QWORD *)(v11 + 8720)
                                                                    + 4 * (v17[27] ^ 0x7ELL)) ^ *(_DWORD *)(*(_QWORD *)(v11 + 8648) + 4 * ~v32[4092]) ^ *(_DWORD *)(v149 + 4 * (v146 ^ 0x3Bu)) ^ __ROR4__(*(_DWORD *)(v171 + 4 * (v32[4061] ^ 0xF5)), 29) ^ 0x5CB20510;
    v32[4030] = BYTE3(v146);
    v32[4000] = BYTE3(v158) ^ 0x4E;
    v172 = *(_QWORD *)(v11 + 9536);
    LOBYTE(v158) = 109
                 * (*(_BYTE *)(v172
                             + ((((BYTE2(v158) ^ 0x3Fu) >> 5) & 0xFFFFFF07 | (8 * ((BYTE2(v158) ^ 0x3F) & 0x1F))) ^ 0x3BLL)) ^ (((BYTE2(v158) ^ 0x3Fu) >> 5) & 7 | (8 * ((BYTE2(v158) ^ 0x3F) & 0x1F))) ^ 0xB9);
    v32[4062] = BYTE1(v168) ^ 0x75;
    v32[4092] = BYTE1(v146);
    v32[4031] = v158;
    v32[4061] = BYTE2(v146);
    LOBYTE(v92) = *(_BYTE *)(v162 + (v168 ^ 0x43));
    v17[27] = v146;
    v32[4093] = (v92 ^ ((BYTE2(v146) & 0x61 ^ 0x61) + (BYTE2(v146) & 0x61)) ^ v168 ^ 0xEB) + 3;
    LODWORD(v92) = *(_DWORD *)(v165 + 4 * (v17[151] ^ 0x67)) ^ 0x46F90B2B;
    LODWORD(v146) = v17[58] ^ v92 ^ __ROR4__(*(_DWORD *)(v166+ 4 * (v17[120] ^ 6)), 19) ^ *(_DWORD *)(v149+ 4* (v17[58] ^ 0x13)) ^ (v92 >> 1) & 0xA056852 ^ __ROR4__(*(_DWORD *)(v171 + 4 * ((109 * (((v17[89] >> 5) | (8 * v17[89])) ^ 0xB9 ^ *(_BYTE *)(v172 + (((v17[89] >> 5) | (8 * v17[89])) ^ 0x3BLL)))) ^ 0x40u)), 29) ^ 0x9CE7B10F;
    LODWORD(v134) = *(unsigned __int16 *)(*(_QWORD *)(v11 + 8656)
                                        + 2
                                        * (((*(_BYTE *)(v167
                                                                       + (*(unsigned __int8 *)(*(_QWORD *)(v11 + 9728)
                                                                                             + (~(_DWORD)v151 & 0x49 ^ 0x149u)
                                                                                             + (unint64_t)(~(_DWORD)v151 & 0x49)) ^ 0x3BLL)) ^ 0x60)
                                                           + 3) ^ 0xECu)) ^ (-706386747
                                                                           * *(_DWORD *)(*(_QWORD *)(v11 + 9200)
                                                                                       + 4
                                                                                       * (v17[90] ^ 0x1ALL))) ^ *(_DWORD *)(*(_QWORD *)(v11 + 9080) + 4 * ~v17[59]) ^ *(_DWORD *)(v170 + 4 * (v17[28] ^ 0xC0));
    v17[58] = BYTE3(v146);
    v17[89] = BYTE2(v146);
    v17[90] = ((unsigned __int16)(v134 ^ 0x5300) >> 8) ^ 0x3B;
    v17[28] = ((v134 ^ 0x67225277) >> 24) ^ 0x54;
    v17[120] = BYTE1(v146);
    v17[121] = v134 ^ 0x33;
    v17[151] = v146;
    v17[59] = ((v134 ^ 0x67225277) >> 16) ^ 0xF6;
    *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 9688);
    JUMPOUT(0x100302CC4);
  }
  *(_DWORD *)(v11 + 9664) = a1;
  *(_DWORD *)(v11 + 9496) = v16;
  if (v21 != 64)
  {
    v36 = v21 + 64;
    v32 = *(unsigned __int8 **)(v11 + 8344);
    v33 = *(_QWORD *)(v11 + 9544);
    v34 = *(_DWORD *)(v11 + 9656);
    v35 = *(_DWORD *)(v11 + 9632);
    goto LABEL_6;
  }
  *(_DWORD *)(v11 + 7584) = v12;
  *(_DWORD *)(v11 + 7424) = -*(_DWORD *)(v11 + 8984);
  v22 = *(_QWORD *)(v11 + 6296) == 37;
  v24 = ((v10 ^ 0xAF0BA94D) - 1529102335 - ((2 * (v10 ^ 0xAF0BA94D)) & 0x49B78002)) ^ v15;
  *(_DWORD *)(v11 + 7616) = a1 - v24;
  v25 = a1 - v24 + (a3 ^ 0xF3C4ED75);
  v26 = v14;
  v27 = a5 - (v10 ^ 0xAF0BA94D) - v25;
  v28 = v13 - (v9 ^ v26);
  *(_DWORD *)(v11 + 7448) = v26;
  v29 = v8 - v9 - (v28 + v26);
  v30 = v28 + v26 - 1680245913;
  *(_DWORD *)(v11 + 7592) = v28 - v29;
  *(_DWORD *)(v11 + 7576) = v29;
  *(_DWORD *)(v11 + 7648) = v30;
  *(_DWORD *)(v11 + 7552) = v13;
  *(_DWORD *)(v11 + 7640) = v25 - 1680245913;
  *(_DWORD *)(v11 + 7632) = v27;
  *(_DWORD *)(v11 + 8612) = v13 - v30;
  *(_DWORD *)(v11 + 7656) = v28 + v26 + 1373250207;
  *(_DWORD *)(v11 + 9384) = v27
                          - 1241471176
                          + v24
                          + ((a1 - (v25 - 1680245913)) ^ 0xF1378093)
                          + ((v25 + 1373250207) ^ -(1680245913 - v25 + v27));
  *(_DWORD *)(v11 + 8616) = (a1 - (v25 - 1680245913)) ^ 0xF1378093;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((74 * v22) | 0x715)) - 8))();
}

void sub_10030B0B8()
{
  _DWORD *v0;
  int v1;

  v0[2246] = -510937745;
  v0[2153] = 128;
  v0[2376] = v0[2400];
  v0[2374] = v1;
  JUMPOUT(0x100308C38);
}

uint64_t sub_10030B100(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  int v108;
  int v109;
  int v110;
  uint64_t v111;
  unsigned int v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  int v133;
  char v134;
  uint64_t v135;
  unsigned int v136;
  char v137;
  char v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  unsigned __int8 v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int v163;
  unint64_t v164;
  uint64_t v165;
  int v166;
  unint64_t v167;
  int v168;
  int v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  BOOL v178;
  int v179;
  int v180;

  v11 = *(_DWORD *)(v7 + 9472) + *(_DWORD *)(v7 + 9656);
  v12 = *(_DWORD *)(v7 + 8680) + *(_DWORD *)(v7 + 9632);
  v13 = *(_DWORD *)(v7 + 9688) + *(_DWORD *)(v7 + 6020) + *(_DWORD *)(v7 + 6024);
  v14 = 1194695347 - *(_DWORD *)(v7 + 8984);
  v15 = *(_DWORD *)(v7 + 8764);
  v16 = *(_DWORD *)(v7 + 9504);
  v17 = *(_DWORD *)(v7 + 7584);
  v18 = *(_DWORD *)(v7 + 9664);
  *(_QWORD *)(v7 + 9656) = ((v16 ^ v15 ^ 0xAA0ADD57 ^ *(_DWORD *)(v7 + 9496))
                          - ((*(_DWORD *)(v7 + 7424) + 1161521024 - ((2 * v14) & 0xFC0B999A)) ^ v17 ^ v18)) ^ *(_DWORD *)(v7 + 7448);
  v19 = *(_DWORD *)(v7 + 8688) + 177508120 + *(_DWORD *)(v7 + 9616);
  v20 = ((v17 ^ 0x1FA3332) + (v14 ^ 0x3C5BCFBF ^ v15 ^ v16) + 1) ^ ((*(_DWORD *)(v7 + 7552) ^ v15 ^ v14) - v18);
  *(_DWORD *)(v7 + 8720) = v20 + v8 - ((2 * v20) & 0x49B78002);
  v21 = -1071645798 - *(_DWORD *)(v7 + 8760);
  v22 = *(_DWORD *)(v7 + 7632);
  v23 = *(_DWORD *)(v7 + 7616) - v22;
  v24 = ((*(_DWORD *)(v7 + 7576) ^ v21 ^ *(_DWORD *)(v7 + 9008)) - v22) ^ *(_DWORD *)(v7 + 7640) ^ ((*(_DWORD *)(v7 + 7592) ^ v21 ^ *(_DWORD *)(v7 + 9008))
                                                                                                  - v23);
  v25 = (a4 - (v22 ^ v21 ^ v23)) ^ *(_DWORD *)(v7 + 7648);
  v26 = -v11;
  v27 = *(_DWORD *)(v7 + 8768);
  v28 = *(_DWORD *)(v7 + 8612);
  v29 = v27 ^ v26 ^ v28 ^ 0xF1378093;
  v30 = *(_DWORD *)(v7 + 7656);
  v31 = v30 ^ v27 ^ v26;
  v32 = v27 ^ 0xF1378093 ^ v28 ^ v30;
  v33 = *(_DWORD *)(v7 + 6036);
  v34 = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 9736) = v32 - (v33 ^ v34 ^ v26);
  v35 = (v29 - v34) ^ *(_DWORD *)(v7 + 6040) ^ (v31 - v33);
  v36 = *(_DWORD *)(v7 + 8880);
  v37 = *(_DWORD *)(v7 + 8872);
  v38 = *(_DWORD *)(v7 + 6048);
  v39 = ((v10 ^ v37 ^ (1199491225 - v36)) - v9) ^ *(_DWORD *)(v7 + 6044) ^ ((v38 ^ v37 ^ (1199491225 - v36)) - a6);
  v40 = ((v10 ^ v37 ^ v38) - (a6 ^ v9 ^ (1199491225 - v36))) ^ *(_DWORD *)(v7 + 6060);
  v41 = 1808085550 - ((v36 + 411121510) & 0x17B497C7) - ((1199491225 - v36) & 0x17B497C7) + v13;
  v42 = *(_DWORD *)(v7 + 8744) + 124339609;
  v43 = *(_DWORD *)(v7 + 6072);
  v44 = *(_DWORD *)(v7 + 6068);
  v45 = v43 ^ v44 ^ v42;
  v46 = (*(_DWORD *)(v7 + 8748) ^ 0x51A0D459) + 1;
  v47 = v42 ^ v46;
  v48 = (v44 ^ v47) - *(_DWORD *)(v7 + 6064);
  v49 = 907 * (v6 ^ 0x10E);
  v50 = *(_DWORD *)(v7 + 6080) ^ 0x205AF343;
  *(_DWORD *)(v7 + 9608) = v49;
  v51 = v12 - 1373579801 + v49;
  v52 = -*(_DWORD *)(v7 + 8964);
  *(_DWORD *)(v7 + 9664) = v48 ^ ((v43 ^ v47) - *(_DWORD *)(v7 + 6084));
  v53 = *(_DWORD *)(v7 + 6136);
  *(_DWORD *)(v7 + 8712) = v45 - (v53 ^ v46);
  v54 = *(_DWORD *)(v7 + 6216);
  v55 = v54 + 125840319;
  v56 = *(_DWORD *)(v7 + 6128) - 1029688031;
  v57 = (*(_DWORD *)(v7 + 6156) - 33174323 - ((2 * *(_DWORD *)(v7 + 6156)) & 0xFC0B999A)) ^ v53 ^ 0xFE05CCCD;
  v59 = *(_DWORD *)(v7 + 6332);
  v60 = ((v59 ^ 0xB38A905F ^ v54 ^ *(_DWORD *)(v7 + 6288)) - (v50 ^ (v57 - 1815059684 - ((2 * v57) & 0x27A0C638)))) ^ v56;
  v61 = (v59 ^ 0xB38A905F) + v56;
  v62 = -*(_DWORD *)(v7 + 8752);
  v63 = v56 ^ 0x698BD115 ^ (v54 + 125840319);
  v64 = v54 + 125840319 + v61;
  v65 = *(_DWORD *)(v7 + 6292);
  v66 = *(_DWORD *)(v7 + 6312);
  v67 = (((v61 - v63) ^ v64 ^ v51) - (v66 ^ v65 ^ v62)) ^ v63;
  v68 = ((v51 ^ v62 ^ v64) - v65) ^ *(_DWORD *)(v7 + 6320) ^ ((v51 ^ v62 ^ (v61 - v63)) - v66);
  v69 = v41 ^ v59 ^ 0xB063C78 ^ v55;
  v70 = (v61 - v63) ^ (v64 + v63);
  v71 = v69 + v63;
  v72 = *(_DWORD *)(v7 + 9696);
  v73 = ((v69 + v63) ^ v19 ^ v52) + (v72 ^ 0x1FA3332) + 1;
  *(_DWORD *)(v7 + 6312) = v70 ^ 0x965112E8;
  v74 = v70 ^ 0x9F805C16 ^ v19 ^ v52;
  v75 = *(_DWORD *)(v7 + 6336);
  v76 = v75 ^ v72 ^ (*(_DWORD *)(v7 + 6744) - 33174323 - ((2 * v52) & 0xFC0B999A));
  *(_DWORD *)(v7 + 6136) = v71;
  v77 = *(_QWORD *)(v7 + 9680);
  *(_DWORD *)(v7 + 8672) = *(unsigned __int8 *)(v77 + (HIBYTE(v25) ^ 0xAALL)) ^ HIBYTE(v25);
  v78 = ((v70 ^ 0x9F805C16 ^ v19 ^ v71) - v76) ^ (v61 + (v70 ^ 0x607FA3E9) + 1);
  *(_DWORD *)(v7 + 9504) = v35;
  v79 = *(_QWORD *)(v7 + 9560);
  *(_QWORD *)(v7 + 8688) = v79 + (HIBYTE(v35) ^ 0x26);
  v80 = ((v73 ^ (v74 - v75)) - 1529102335 - ((2 * (v73 ^ (v74 - v75))) & 0x49B78002)) ^ *(_DWORD *)(v7 + 9512);
  *(_DWORD *)(v7 + 8748) = v39;
  v81 = (v39 >> 17) & 0x80 | (v39 >> 25);
  v82 = *(_QWORD *)(v7 + 9704);
  *(_DWORD *)(v7 + 8696) = *(unsigned __int8 *)(v82 + (v81 ^ 0x95)) ^ ((v81 ^ 0xFFFFFF98) + (v81 ^ 0x7E) + 1);
  v83 = (*(_DWORD *)(v7 + 9568) >> 13) & 0xF8 | (*(_DWORD *)(v7 + 9568) >> 21) & 7u;
  v84 = WORD1(v78);
  *(_QWORD *)(v7 + 9496) = v78;
  LODWORD(v81) = v78 >> 18;
  v85 = *(_QWORD *)(v7 + 9536);
  v86 = *(unsigned __int8 *)(v85 + (v83 ^ 0x3B));
  *(_DWORD *)(v7 + 8728) = v40;
  v87 = (v40 >> 9) & 0x80 | (v40 >> 17) & 0x7F;
  *(_DWORD *)(v7 + 9472) = v86 ^ v83;
  *(_DWORD *)(v7 + 8736) = v24;
  v88 = *(unsigned __int8 *)(v77 + (BYTE2(v24) ^ 0xAALL));
  *(_DWORD *)(v7 + 9688) = v60;
  v89 = (v60 >> 13) & 0xF8 | (v60 >> 21) & 7;
  *(_DWORD *)(v7 + 8656) = *(unsigned __int8 *)(v82 + (v87 ^ 0x95)) ^ ((v87 ^ 0x98) + (v87 ^ 0x7E) + 1);
  *(_DWORD *)(v7 + 9464) = v88 ^ HIWORD(v24);
  *(_DWORD *)(v7 + 8680) = *(unsigned __int8 *)(v85 + (v89 ^ 0x3B)) ^ v89;
  *(_DWORD *)(v7 + 9448) = v25;
  v90 = (v25 >> 5) & 0xF8 | ((unsigned __int16)v25 >> 13);
  v91 = *(_QWORD *)(v7 + 9648);
  LODWORD(v83) = (v90 ^ 0x52) + *(unsigned __int8 *)(v91 + (v90 ^ 0x5E));
  LODWORD(v89) = *(unsigned __int8 *)(v77 + (BYTE1(v80) ^ 0xAALL));
  LODWORD(v90) = *(unsigned __int8 *)(a3 + ((-87 * v68) ^ 0x8BLL)) + 94;
  *(_DWORD *)(v7 + 9488) = v80;
  LODWORD(v90) = ((v90 >> 5) | (8 * v90)) ^ 0xFFFFFF98;
  *(_DWORD *)(v7 + 8704) = v89 ^ (v80 >> 8);
  *(_DWORD *)(v7 + 9480) = v84;
  *(_DWORD *)(v7 + 8640) = (v90 >> 5) | (8 * v90);
  *(_DWORD *)(v7 + 8744) = v68;
  LODWORD(v89) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9544) + (((v68 >> 9) & 0x80 | (v68 >> 17) & 0x7F) ^ 0x25));
  *(_DWORD *)(v7 + 6128) = v84 - 8 * v81 + 124;
  *(_DWORD *)(v7 + 8648) = v83 + 1;
  *(_DWORD *)(v7 + 9520) = v67;
  *(_QWORD *)(v7 + 8664) = v79 + (BYTE1(v67) ^ 0x26u);
  *(_DWORD *)(v7 + 9456) = v89 ^ (32 * v89);
  v92 = *(_QWORD *)(v7 + 9592);
  v93 = *(_QWORD *)(v7 + 9584);
  v94 = *(_QWORD *)(v7 + 9624);
  v95 = v94 ^ (v94 >> 26) ^ *(_QWORD *)(v7 + 9576) ^ (*(_QWORD *)(v7 + 9576) << 23) ^ ((*(_QWORD *)(v7 + 9576) ^ (*(_QWORD *)(v7 + 9576) << 23)) >> 17);
  v96 = v94 ^ (v94 << 23) ^ ((v94 ^ (v94 << 23)) >> 17) ^ v95 ^ (v95 >> 26);
  v97 = v95 ^ (v95 << 23);
  v98 = v92 ^ (v92 >> 26) ^ v93 ^ (v93 << 23) ^ ((v93 ^ (unint64_t)(v93 << 23)) >> 17);
  LOBYTE(v72) = v94 + 2 * ((v94 ^ ((v94 ^ (v94 << 23)) >> 17) ^ v95 ^ (v95 >> 26)) + v95);
  LOBYTE(v89) = (v92 ^ (v92 >> 26) ^ v93 ^ ((v93 ^ (unint64_t)(v93 << 23)) >> 17)) & 0x17;
  v99 = v98 ^ (v98 >> 26) ^ (v92 << ((v89 ^ 0x17u) + v89)) ^ v92 ^ (((v92 << ((v89 ^ 0x17u) + v89)) ^ v92) >> 17);
  v100 = v98 ^ (v98 << 23) ^ ((v98 ^ (v98 << 23)) >> 17) ^ v99 ^ (v99 >> 26);
  v101 = ((v96 << 23) - 0x4D3636417EB0E10CLL - ((v96 << 24) & 0x6593937D02000000)) ^ v96 ^ 0xB2C9C9BE814F1EF4;
  v102 = v101 ^ (v101 >> 17) ^ v100 ^ (v100 >> 26);
  v103 = v100 ^ (v100 << 23) ^ ((v100 ^ (v100 << 23)) >> 17) ^ v102 ^ (v102 >> 26);
  v104 = v102 ^ (v102 << 23) ^ ((v102 ^ (v102 << 23)) >> 17);
  v105 = (((v96 >> 26) ^ (v97 >> 17)) - 0x4D3636417EB0E10CLL - ((2 * ((v96 >> 26) ^ (v97 >> 17))) & 0x937D029E3DE8)) ^ v97;
  v106 = v105 ^ v96 ^ 0xB2C9C9BE814F1EF4;
  LOBYTE(v87) = v72 + v106;
  LODWORD(v94) = (8 * (v98 + v92)) | ((v98 + v92) >> 5);
  LOBYTE(v97) = *(_BYTE *)(v91 + (((8 * (v98 + v92)) | ((v98 + v92) >> 5)) ^ 0x5ELL));
  *(_DWORD *)(v7 + 9012) = v94;
  LOBYTE(v72) = v102 + (v98 ^ ((v98 ^ (v98 << 23)) >> 17) ^ v99 ^ (v99 >> 26));
  LODWORD(v97) = (v99
                                 + (v92 ^ (v92 >> 26) ^ v93 ^ ((v93 ^ (unint64_t)(v93 << 23)) >> 17))
                                 + 109 * ((v97 + (v94 ^ 0x52) + 1) ^ 0x5C)
                                 + (v98 ^ ((v98 ^ (v98 << 23)) >> 17) ^ v99 ^ (v99 >> 26))
                                 + v99);
  v107 = 2 * (v72 & v87) - v97 + (v72 ^ v87);
  v108 = ((v100 ^ ((v100 ^ (v100 << 23)) >> 17) ^ v102 ^ (v102 >> 26)) + v102);
  v109 = (1518385745 * v99) ^ (1518385745 * v96) ^ v108;
  LODWORD(v94) = v109 ^ (v107 | 0xA75E6F88);
  v110 = v94 ^ (v94 >> 8) ^ WORD1(v94);
  v111 = v91;
  *(_DWORD *)(v7 + 8984) = v94;
  v112 = ((v107 & 0x2F638418 ^ 0x2F638418) + (v107 & 0x2F638418)) ^ 0x2F638461 ^ BYTE3(v94);
  v113 = v104 ^ v103;
  v114 = v113 ^ 0xB2C9C9BE814F1EF4 ^ ((v103 >> 26) - 0x4D3636417EB0E10CLL - ((v103 >> 25) & 0x7D029E3DE8));
  *(_QWORD *)(v7 + 9136) = v114;
  v115 = v114 + v103;
  v116 = (2 * (v114 + v103)) & 0x6593937D029E3DE8;
  v117 = v87 - (_DWORD)v97 + v72;
  v118 = (*(_DWORD *)(v7 + 9520) >> 5) & 7 | (8 * (*(_DWORD *)(v7 + 9520) & 0x1Fu));
  *(_DWORD *)(v7 + 9592) = (v118 ^ 0x52) + *(unsigned __int8 *)(v111 + (v118 ^ 0x5E));
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9664) ^ *(_DWORD *)(v7 + 6760);
  v119 = (*(_DWORD *)(v7 + 9736) ^ *(_DWORD *)(v7 + 6936));
  v120 = (1205074617 * v100) ^ (1205074617 * v106) ^ ((v113 ^ (v103 >> 26)) + v103);
  v121 = -v120 & 7;
  if ((v120 & 7) != 0)
    v122 = -1;
  else
    v122 = 0;
  v123 = v122 << v121;
  v124 = ~((_BYTE)v122 << v121);
  if ((v120 & 7) != 0)
    v125 = v124;
  else
    v125 = 0;
  v126 = v112 ^ v110;
  *(_QWORD *)(v7 + 9576) = v115 - 0x4D3636417EB0E10CLL - v116;
  *(_QWORD *)(v7 + 9128) = v106;
  v127 = v100 ^ v106 ^ (16 * (v105 ^ v96 ^ (v100 - ((2 * v100) & 0x29E3DE8) + 21962484))) ^ (v115 - 12 - v116);
  v128 = v127 ^ 0xF4;
  *(_DWORD *)(v7 + 8616) = -(v127 ^ 0xF4);
  *(_QWORD *)(v7 + 9096) = v96;
  v129 = v108 + 2075924527 * (v99 - v96);
  v130 = (v117 ^ 0xE0CC26DC) & 0xD822AA1E ^ 0x6B0684A0 ^ (((v117 ^ 0xE0CC26DC) & 0xD822AA61)
                                                        - ((2 * (v117 ^ 0xE0CC26DC)) & 0x30444040)
                                                        + 502474032);
  v131 = (v130 | 0x307062A3) - (v130 | 0xCF8F9D5C);
  if (((v127 ^ 0xF4) & 7) != 0)
    v132 = 255;
  else
    v132 = 0;
  v133 = v132 << (-(v127 ^ 0xF4) & 7);
  if ((v128 & 7) != 0)
    v134 = ~(_BYTE)v133;
  else
    v134 = 0;
  v135 = *(_QWORD *)(v7 + 9680);
  v136 = v129 ^ (v117 | 0xA75E6F88);
  v137 = *(_BYTE *)(v135 + ((v134 & v117) ^ 0xAALL)) ^ v134 & v117 ^ 0x63;
  v138 = *(_BYTE *)(v111 + (((v136 >> 5) & 0xF8 | ((unsigned __int16)v136 >> 13)) ^ 0x5ELL))
       + (((v136 >> 5) & 0xF8 | ((unsigned __int16)v136 >> 13)) ^ 0x52);
  v139 = (v129 ^ (v117 | 0x88)) ^ HIBYTE(v136) ^ BYTE2(v136);
  *(_DWORD *)(v7 + 8888) = v129;
  *(_DWORD *)(v7 + 8964) = v109;
  v140 = 29 * v129 + 227 * v109 + (v120 & 7u);
  v141 = (v121 | (v120 << 7)) ^ v120;
  v142 = *(unsigned int *)(v7 + 9504);
  *(_QWORD *)(v7 + 9160) = v142;
  v143 = *(_QWORD *)(v7 + 9176) + 6;
  v144 = *(unsigned __int8 *)(v143 + (BYTE1(v142) ^ 0xCBLL));
  *(_DWORD *)(v7 + 8632) = v127;
  v145 = v141 ^ (v127 << 7) ^ v128;
  v146 = (81 * v144) ^ 0xFFFFFF9E ^ *(unsigned __int8 *)(v135 + ((81 * v144) ^ 0x57));
  *(_DWORD *)(v7 + 8764) = v107 & 0x7F;
  LODWORD(v142) = 16843009 * (v107 & 0x7F);
  *(_DWORD *)(v7 + 9008) = v117;
  v147 = v135;
  *(_DWORD *)(v7 + 8880) = v142;
  v148 = (v142 + 1094542869 * (v117 - v107));
  *(_DWORD *)(v7 + 9080) = v107;
  *(_DWORD *)(v7 + 8760) = v123;
  LODWORD(v142) = 16843009 * v123;
  *(_DWORD *)(v7 + 8768) = v142;
  v149 = v125 & v107 ^ v142;
  v150 = ((((v146 + 3) ^ 0x81 ^ (2 * (((v146 + 3) ^ 0x81) & v148))) & v149) >> (-(char)v128 & 7))
       + ((unint64_t)((v146 + 3) ^ 0xFFFFFF81 ^ (2 * (((v146 + 3) ^ 0xFFFFFF81) & v148))) << v140);
  *(_QWORD *)(v7 + 9200) = v119;
  v151 = (81 * *(unsigned __int8 *)(v143 + (BYTE1(v119) ^ 0xC9))) ^ 0x75;
  *(_DWORD *)(v7 + 9440) = v131 - 812671652;
  v152 = (v131 - 812671652) ^ 0x4685C36F;
  *(_DWORD *)(v7 + 9424) = v152;
  v153 = 16843009 * v152;
  v154 = v151 ^ (2 * (v151 & (16843009 * v152)));
  *(_DWORD *)(v7 + 8752) = v133;
  LODWORD(v142) = 16843009 * v133;
  *(_DWORD *)(v7 + 8872) = v142;
  LODWORD(v135) = (v137 + 3) ^ v142;
  *(_QWORD *)(v7 + 6296) = 37;
  LOBYTE(v144) = *(_BYTE *)(*(_QWORD *)(v7 + 9544)
                          + ((((v154 & v135) >> 1) | ((v154 & v135) << 7)) ^ 0x25));
  *(_DWORD *)(v7 + 8612) = 16843009 * v126;
  v155 = (16843009 * v126) ^ 0x79797979;
  v156 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640)
                            + ((-87
                                               * (((*(_BYTE *)(*(_QWORD *)(v7 + 9560) + (v150 ^ 0x26)) ^ 0x60) + 3) ^ v126 ^ 0x79 ^ (v154 << ((v127 ^ 0xF4) & 7)) ^ ((unint64_t)((v144 ^ (32 * v144) ^ 0x45) + 10) >> v145))) ^ 0x20));
  v157 = v139 ^ 0x5D ^ (109 * ((v138 + 1) ^ 0x5C));
  *(_DWORD *)(v7 + 9600) = ((v156 ^ (v156 >> 1) & 0x46) >> 5) | (8 * (v156 ^ (v156 >> 1) & 0x46 ^ 0x1E));
  LOBYTE(v156) = (81 * *(_BYTE *)(v143 + (*(_DWORD *)(v7 + 9632) ^ 0xA9))) ^ 0x3F;
  LOBYTE(v156) = v156 ^ (2 * (v156 & ((v131 + 92) ^ 0x6F)));
  v158 = *(_DWORD *)(v7 + 9568);
  v159 = ((unint64_t)(v156 & v135) >> v145) | ((unint64_t)v156 << v140);
  v160 = (81
        * *(unsigned __int8 *)(v143
                             + (((HIBYTE(v158) ^ 0x7B ^ *(_BYTE *)(v147 + (HIBYTE(v158) ^ 0xB2))) + 3) ^ 0x5DLL))) ^ 0xFFFFFF82;
  v161 = v160 ^ (2 * (v160 & v148));
  v162 = (((v161 & v149) >> (-(v127 ^ 0xF4) & 7)) >> 1) & 0xFFFFFF7F | ((((v161 & v149) >> (-(v127 ^ 0xF4) & 7)) & 1) << 7);
  LODWORD(v142) = *(_DWORD *)(v7 + 9688);
  v163 = (81 * *(unsigned __int8 *)(v143 + (((unint64_t)v142 >> 24) ^ 0x43))) ^ 0xFFFFFF84;
  HIDWORD(v164) = *(unsigned __int8 *)(v111 + (((v163 >> 5) | (8 * v163)) ^ 0x5ELL))
                + (((v163 >> 5) | (8 * v163)) ^ 0x52)
                + 1;
  LODWORD(v164) = (((109 * (HIDWORD(v164) ^ 0x5C)) & (16843009 * v152)) << 25) ^ (1828716544 * (HIDWORD(v164) ^ 0x5C));
  *(_DWORD *)(v7 + 9408) = v159;
  v165 = *(_QWORD *)(v7 + 9704);
  v166 = (*(unsigned __int8 *)(v165 + ((v164 >> 25) ^ 0x95)) ^ 0xFFFFFFB9 ^ (((v164 >> 25) ^ 0x7E)
                                                                                              - ((v164 >> 25) ^ 0x7E ^ ((v159 & 0x19 ^ 0x19) + (v159 & 0x19)))))
       + 10;
  v167 = (unint64_t)(v166 & v135) >> v145;
  *(_DWORD *)(v7 + 6292) = (((*(unsigned __int8 *)(v165 + (v162 ^ 0x95)) ^ ((v162 ^ 0x98) + (v162 ^ 0x7E) + 1) ^ 0xFFFFFFB9)
                           + 10) | (v161 << v140)) ^ v155 ^ ((v166 << ((v127 ^ 0xF4) & 7))
                                                           + (*(unsigned __int8 *)(v147 + (v167 ^ 0xAA)) ^ v167 ^ 0x63)
                                                           + 3);
  LOBYTE(v166) = (81 * *(_BYTE *)(v143 + (BYTE1(v158) ^ 0xB9))) ^ 0xDB;
  v168 = (((v166 ^ (2 * (v166 & v148))) & v135) >> (-(v127 ^ 0xF4) & 7))
       + ((v166 ^ (2 * (v166 & v148))) << ((v127 ^ 0xF4) & 7));
  v169 = (81 * *(unsigned __int8 *)(v143 + (BYTE1(v142) ^ 0x70))) ^ 9;
  v170 = (((2 * (v169 & v153 ^ *(unsigned __int8 *)(v147 + ((v169 & v153) ^ 0xAALL)))) ^ 0xFFFFFFC6) + 6) ^ v169;
  v171 = (((unint64_t)(v170 & v149) >> v145) >> 5) & 0xFFFFFF07 | (8 * (((unint64_t)(v170 & v149) >> v145) & 0x1F));
  LOBYTE(v170) = (109
                * (*(_BYTE *)(*(_QWORD *)(v7 + 9536) + (v171 ^ 0x3B)) ^ (v167 & 0xB1 ^ 0xA0 | v167 & 0xB1 ^ 0x11) ^ v171 ^ 8)) | (v170 << v140);
  v172 = (109 * (*(_DWORD *)(v7 + 9472) ^ 0xB9)) ^ 0x9DLL;
  *(_QWORD *)(v7 + 9384) = v172;
  LOBYTE(v161) = *(_BYTE *)(*(_QWORD *)(v7 + 9552)
                          + ((-87 * (v142 ^ 0xBC)) ^ 0xE2 ^ (((v172 & 8 ^ 8) + (v172 & 8)) | 0x69)))
               + 94;
  *(_DWORD *)(v7 + 9472) = 16843009 * v157;
  v173 = (16843009 * v157) ^ 0x5D5D5D5D;
  LODWORD(v142) = 81
                * *(unsigned __int8 *)(v143 + (((v161 >> 5) | (8 * v161)) ^ 0xC5));
  *(_DWORD *)(v7 + 9400) = v142;
  LODWORD(v142) = v142 ^ 0x7D;
  LOBYTE(v167) = *(_BYTE *)(v147 + ((v142 & v153) ^ 0xAALL));
  *(_DWORD *)(v7 + 6288) = v168 ^ v173 ^ v170;
  v174 = (((2 * (v142 & v153 ^ v167)) ^ 0xC6) + 6) >> 1;
  v175 = *(_QWORD *)(v7 + 9176);
  LOBYTE(v174) = (*(_BYTE *)(v165 + (v174 ^ 0x95)) ^ ((v174 ^ 0x98) + (v174 ^ 0x7E) + 1) ^ 0xB9) + 10;
  *(_DWORD *)(v7 + 9392) = v142;
  v176 = *(_QWORD *)(v7 + 9496);
  LODWORD(v174) = (((v174 ^ v142) & v135) >> (-(v127 ^ 0xF4) & 7)) ^ ((v174 ^ v142) << ((v127 ^ 0xF4) & 7));
  LOBYTE(v161) = (81 * *(_BYTE *)(v143 + (BYTE3(v176) ^ 0xDDLL))) ^ 0x9E;
  LOBYTE(v161) = (*(_BYTE *)(v147 + ((v161 ^ (2 * (v161 & v153))) ^ 0xAALL)) ^ v161 ^ (2 * (v161 & v153)) ^ 0x63)
               + 3;
  *(_DWORD *)(v7 + 9584) = v149;
  LODWORD(v142) = *(_DWORD *)(v7 + 9488);
  LOBYTE(v157) = (81 * *(_BYTE *)(v143 + (BYTE3(v142) ^ 0xBALL))) ^ 0x21;
  LODWORD(v174) = *(_DWORD *)(v7 + 9480) ^ 0x16 ^ (((-87 * v174) ^ 0x8B) & 0xBC | (-87 * (_BYTE)v174) & 0xBC ^ 0x34);
  *(_QWORD *)(v7 + 9432) = (v127 ^ 0xF4) & 7;
  *(_QWORD *)(v7 + 9664) = -(v127 ^ 0xF4) & 7;
  *(_DWORD *)(v7 + 9616) = v155;
  v177 = ((((v157 ^ (2 * (v157 & v148))) & v135) >> (-(v127 ^ 0xF4) & 7))
        + ((v157 ^ (2 * (v157 & v148))) << ((v127 ^ 0xF4) & 7))) ^ v155 ^ (((unint64_t)(v161 & v149) >> v145) | ((unint64_t)v161 << v140));
  LOBYTE(v174) = *(_BYTE *)(v175 + 5069 + v174) ^ 0xCB;
  *(_QWORD *)(v7 + 9688) = v148;
  *(_DWORD *)(v7 + 9736) = v135;
  *(_QWORD *)(v7 + 9416) = v145;
  *(_QWORD *)(v7 + 9480) = v140;
  LODWORD(v161) = (((81 * *(unsigned __int8 *)(v143 + (BYTE2(v142) ^ 0x6ALL))) ^ 0xFFFFFF9E ^ *(unsigned __int8 *)(v147 + ((81 * *(_BYTE *)(v143 + (BYTE2(v142) ^ 0x6ALL))) ^ 0x57)))
                 + 3) ^ 0xFFFFFF82;
  *(_QWORD *)(v7 + 6320) = ((*(unsigned __int8 *)(v147 + ((2 * (v161 & v153 & 0x7FLL)) ^ 0xAA)) ^ (2 * (v161 & v153)) ^ 0x63)
                          + 3) ^ v161;
  *(_DWORD *)(v7 + 9624) = v173;
  v178 = ((((unint64_t)((v174 ^ (2 * (v174 & v148))) & v135) >> v145)
                          + ((unint64_t)(v174 ^ (2 * (v174 & v148))) << v140)) ^ v173 | *(_DWORD *)(v7 + 9600) | (((((unint64_t)((v174 ^ (2 * (v174 & v148))) & v135) >> v145) + ((unint64_t)(v174 ^ (2 * (v174 & v148))) << v140)) ^ v173) - 50)) == 0;
  v179 = *(_DWORD *)(v7 + 9608);
  LOBYTE(v142) = 109 * ((*(_DWORD *)(v7 + 9592) + 1) ^ 0x5C);
  *(_QWORD *)(v7 + 6216) = (*(_DWORD *)(v7 + 9456) ^ 0x45u) + 10;
  *(_DWORD *)(v7 + 6332) = (81 * *(unsigned __int8 *)(v143 + (v142 ^ 0xEFLL))) ^ 0xFFFFFFE0;
  *(_DWORD *)(v7 + 6156) = v177 - ((2 * v177) & 0x38) + 28;
  *(_QWORD *)(v7 + 9464) = v143;
  *(_QWORD *)(v7 + 6336) = 81 * *(unsigned __int8 *)(v143 + (BYTE1(v176) ^ 0x82));
  v180 = v178;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * ((949 * v180) ^ v179)) - 12))();
}

uint64_t sub_10030EFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  *(_QWORD *)(v7 + 8288) = v5;
  v8 = (v6 ^ 0x125) + *(_DWORD *)(v7 + 6812) - 1872;
  v9 = *(_QWORD *)(v7 + 9744);
  *(_BYTE *)(*(_QWORD *)(v7 + 8344) + 3889) = a5;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v9
                                      + 8
                                      * ((((v8 - 1302587220) < 8)
                                        * ((((v6 ^ 0x125) - 2059597681) ^ 0x7AC2E1BC) + (v6 ^ 0x125) + 1765)) ^ v6 ^ 0x125))
                          - 8);
  *(_DWORD *)(v7 + 9688) = 11;
  return v10();
}

uint64_t sub_10030F058(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v24;
  int v25;
  uint64_t v26;
  char v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v11 = v8;
  *(_DWORD *)(v7 + 8512) = v5;
  *(_QWORD *)(v7 + 8504) = (*(_DWORD *)(v7 + 8712) ^ *(_DWORD *)(v7 + 5424));
  v12 = (*(_DWORD *)(v7 + 8720) ^ *(_DWORD *)(v7 + 5432));
  v13 = *(_DWORD *)(v7 + 8640);
  v14 = *(_QWORD *)(v7 + 9648);
  v15 = *(unsigned __int8 *)(v14 + ((v6 - 79) ^ v13));
  *(_DWORD *)(v7 + 8712) = a2;
  *(_DWORD *)(v7 + 8640) = (v13 ^ 0x52) + v15;
  v16 = (a1 - 919247424) & 0x36CA9BFD;
  *(_DWORD *)(v7 + 8720) = v16;
  v17 = (v16 ^ 0x1388) & (8 * *(_QWORD *)(v7 + 9656)) & 0xFFFFFFF8 | (*(_QWORD *)(v7 + 9656) >> 5);
  v18 = *(_QWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 8496) = (v17 ^ 0x52) + *(unsigned __int8 *)(v14 + (v17 ^ 0x5E));
  LODWORD(v17) = (-1560281088 * *(_DWORD *)(v7 + 8760)) & *(_DWORD *)(v7 + 8964);
  v19 = (*(_DWORD *)(v7 + 9012) & 0x1C) + ~*(_DWORD *)(v7 + 9012);
  v20 = (-2030043136 * *(_DWORD *)(v7 + 8752)) & *(_DWORD *)(v7 + 8888);
  v21 = *(_DWORD *)(v7 + 8880);
  *(_DWORD *)(v7 + 8964) = a5;
  v22 = (v21 >> ((v21 & 7 ^ 7) + (v21 & 7))) ^ (v11 >> 7) ^ ((v11 ^ v21) >> 6);
  v24 = (*(_DWORD *)(v7 + 8984) ^ 0xB39CC5EA)
      - 1609980669 * (*(_DWORD *)(v7 + 8764) + (*(_DWORD *)(v7 + 9440) ^ 0xB97A3C90));
  LODWORD(v17) = *(_DWORD *)(v7 + 8768) ^ ~(_DWORD)v17;
  v25 = v21;
  v26 = *(_QWORD *)(v7 + 9680);
  v27 = *(_BYTE *)(v26 + (v21 ^ 0xAALL)) ^ v21 ^ 0x63;
  v28 = *(_DWORD *)(v7 + 9008);
  *(_QWORD *)(v7 + 8768) = v9;
  v29 = *(_DWORD *)(v7 + 9080);
  *(_DWORD *)(v7 + 9592) = (-765605705 * (v25 | v29 & 0xFFFFFF80)) ^ (-765605705 * v29) ^ (693822933
                                                                                         * (v29
                                                                                          - (v25 ^ v29 & 0xFFFFFF80))
                                                                                         + 1585984779
                                                                                         * (((v27 + 3) ^ v29 & 0xFFFFFF80)
                                                                                          - v29)
                                                                                         + v17);
  LODWORD(v17) = (v28 ^ (1812921073 * v28) ^ (v11 + (v28 & 0xFFFFFF80)) ^ (1812921073
                                                                                          * (v11 | v28 & 0xFFFFFF80)) ^ (((v11 + (v28 & 0xFFFFFF80)) ^ v28) >> 8) ^ *(_DWORD *)(v7 + 8872) ^ ~v20)
               - (v11 | v28 & 0xFFFFFF80);
  v30 = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 9012) = v24 + 901197611 * v30 + (v22 ^ 0x57CF08DC);
  v31 = *(unsigned __int8 *)(v10
                           + (*(_QWORD *)(v7 + 9096) & 0x13CDLL ^ 0x13CD)
                           + (*(_QWORD *)(v7 + 9096) & 0x13CDLL)
                           + ((v12 >> 24) ^ 0xB5));
  *(_DWORD *)(v7 + 9608) = v17 + v28 + 806863071 - ((2 * (v17 + v28)) & 0x602F81BE);
  LODWORD(v17) = v31 ^ 0x41 ^ (2 * (v11 & (v31 ^ 0x41)));
  v32 = *(_DWORD *)(v7 + 9584);
  v33 = *(_QWORD *)(v7 + 9432);
  v34 = *(_QWORD *)(v7 + 9664);
  v35 = *(_QWORD *)(v7 + 9552);
  v36 = ((v19 & 0x10 ^ 0x13) + (v19 & 0x10)) ^ (*(unsigned __int8 *)(v35
                                                                   + ((-87
                                                                                      * (((v32 & v17) >> v34)
                                                                                       + ((_DWORD)v17 << v33))) ^ 0x8BLL))
                                              + 94);
  LODWORD(v17) = *(unsigned __int8 *)(a4 + (BYTE3(v18) ^ 0x95)) ^ 0xFFFFFFD2;
  v37 = *(_QWORD *)(v7 + 9688);
  v38 = *(_DWORD *)(v7 + 9736);
  v39 = *(_QWORD *)(v7 + 9416);
  v40 = *(_QWORD *)(v7 + 9480);
  LOBYTE(v17) = ((unint64_t)(v38 & (v17 ^ (2 * (v37 & v17)))) >> v39) ^ ((unint64_t)(v17 ^ (2 * (v37 & v17))) << v40);
  v41 = *(_QWORD *)(v7 + 9464);
  LOBYTE(v31) = (81 * *(_BYTE *)(v41 + (BYTE2(v12) ^ 0x94))) ^ 0xFD;
  LOBYTE(v31) = (v31 >> 5) | (8 * v31);
  v42 = *(_QWORD *)(v7 + 9544);
  LODWORD(v17) = *(unsigned __int8 *)(v42 + (((v17 >> 1) | ((_BYTE)v17 << 7)) ^ 0x25));
  LOBYTE(v20) = *(_BYTE *)(v14 + (v31 ^ 0x5ELL));
  *(_DWORD *)(v7 + 9080) = ((v36 >> 5) | (8 * v36)) ^ v30 ^ ((v17 ^ (32 * v17) ^ 0x45) + 10);
  LOBYTE(v36) = (*(_BYTE *)(v26 + ((109 * ((v20 + (v31 ^ 0x52) + 1) ^ 0x5C)) ^ 0x78)) ^ (109 * ((v20 + (v31 ^ 0x52) + 1) ^ 0x5C)) ^ 0xB1)
              + 3;
  v43 = (*(_QWORD *)(v7 + 9128) & 0x11 ^ 0x11) + (*(_QWORD *)(v7 + 9128) & 0x11);
  *(_QWORD *)(v7 + 9656) = v18;
  v44 = BYTE2(v18) ^ 0xA0;
  *(_QWORD *)(v7 + 8888) = v44;
  v45 = *(_QWORD *)(v7 + 9560);
  LODWORD(v43) = ((*(unsigned __int8 *)(v45 + ((81 * *(_BYTE *)(v41 + v44)) ^ 0xE0u ^ (v43 | 0x3A))) ^ 0x60)
                + 3) ^ 0xFFFFFFAA;
  LODWORD(v14) = *(_DWORD *)(v7 + 9624);
  v46 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640)
                           + ((-87
                                              * (((unint64_t)(v32 & (v36 ^ (2 * (v11 & v36)))) >> v39) ^ ((unint64_t)(v36 ^ (2 * (v11 & v36))) << v40) ^ v14 ^ (((v38 & (v43 ^ (2 * (v37 & v43)))) >> v34) | ((v43 ^ (2 * (v37 & v43))) << v33)))) ^ 0x20));
  v47 = *(_QWORD *)(v7 + 9640);
  LOBYTE(v43) = *(_BYTE *)(a4 + (BYTE1(v12) ^ 0x2ALL)) ^ 0xA8;
  LOBYTE(v31) = *(_BYTE *)(v41 + BYTE1(v18));
  *(_DWORD *)(v7 + 9456) = ((v46 ^ (v46 >> 1) & 0x46) >> 5) | (8 * (v46 ^ (v46 >> 1) & 0x46 ^ 0x1E));
  LOBYTE(v46) = (81 * v31) ^ 0xA7 ^ (2 * (v11 & ((81 * v31) ^ 0xA7)));
  LOBYTE(v31) = *(_BYTE *)(a4 + (v12 ^ 5));
  v48 = *(unsigned __int8 *)(v47 + ((-87 * (v37 & (v31 ^ 0x55))) ^ 0x20));
  LOBYTE(v18) = v34;
  LOBYTE(v31) = *(_BYTE *)(v45
                         + (v31 ^ 0x73u ^ ((unint64_t)(((((v48 >> 1) & 0x46 ^ v48) >> 5) | (8 * ((v48 >> 1) & 0x46 ^ v48))) ^ 0xFFFFFFF0) << ((*(_QWORD *)(v7 + 9136) & 0xD) + (*(_QWORD *)(v7 + 9136) & 0xD ^ 0xD) - 12))));
  *(_DWORD *)(v7 + 9008) = ((unint64_t)(v43 ^ (2 * (v37 & v43))) << v40) ^ (((unint64_t)(v32 & v46) >> v39)
                                                                                                  + (v46 << v33)) ^ (((v43 ^ (2 * (v37 & v43))) & v38) >> v34);
  LODWORD(v43) = (81
                * *(unsigned __int8 *)(v41 + ((109 * ((*(_DWORD *)(v7 + 8496) + 1) ^ 0x5C)) ^ 0x51))) ^ 0x69;
  LODWORD(v12) = *(unsigned __int8 *)(v42
                                    + (((2 * (unint64_t)(v11 & v43 & 0x7F)) >> ((!(v12 & 0x10000) + (BYTE2(v12) & 1)) | 1u)) ^ 0x25));
  v49 = ((v12 ^ (32 * (_DWORD)v12) ^ 0x45) + 10) ^ v43;
  LOBYTE(v43) = *(_BYTE *)(v35
                         + ((-87 * ((unint64_t)(v38 & v49) >> v39)) ^ 0x8BLL))
              + 94;
  *(_DWORD *)(v7 + 9136) = v14 ^ (((((v31 ^ 0x60u) + 3) & v32) >> v34) | (((v31 ^ 0x60) + 3) << v33)) ^ ((v49 << v40) + (((v43 >> 5) | (8 * v43)) ^ 0x98));
  v50 = v37;
  LODWORD(v37) = *(_DWORD *)(v7 + 8736);
  v51 = (81 * *(unsigned __int8 *)(v41 + (((unint64_t)v37 >> 24) ^ 0x5C))) ^ 0xE;
  v52 = v51 ^ (2 * (v50 & v51));
  LODWORD(v43) = ((*(_DWORD *)(v7 + 8672) ^ 0x63) + 3) ^ 0x3D;
  LODWORD(v43) = (81
                * *(unsigned __int8 *)(v41
                                     + (((((((v43 >> 1) | ((_BYTE)v43 << 7)) ^ 0x98)
                                                          + (((v43 >> 1) | ((_BYTE)v43 << 7)) ^ 0x7E)
                                                          + 1) ^ 0xB9 ^ *(_BYTE *)(*(_QWORD *)(v7 + 9704)
                                                                                 + (((v43 >> 1) | ((_BYTE)v43 << 7)) ^ 0x95)))
                                                        + 10) ^ 0x5DLL))) ^ 0xFFFFFFED;
  v53 = *(_QWORD *)(v7 + 9704);
  LODWORD(v43) = (*(unsigned __int8 *)(v53
                                     + (((v43 >> 1) | ((_BYTE)v43 << 7)) ^ 0x95)) ^ ((((v43 >> 1) | ((_DWORD)v43 << 7)) ^ 0xFFFFFF98) + (((v43 >> 1) | ((_DWORD)v43 << 7)) ^ 0x7E) + 1) ^ 0xFFFFFFB9)
               + 10;
  LOBYTE(v43) = (109
               * (*(_BYTE *)(*(_QWORD *)(v7 + 9176)
                           + ((((v43 & v11) >> 4) & 7 | (16 * (v43 & v11))) ^ 0x3BLL)
                           + 1951) ^ (((v43 & v11) >> 4) & 7 | (16 * (v43 & v11)) | 8) ^ 0xB1)) ^ v43;
  LOBYTE(v31) = *(_BYTE *)(v35 + ((-87 * (v52 << v33)) ^ 0x8Bu)) + 94;
  *(_DWORD *)(v7 + 8984) = ((unint64_t)(v43 & v32) >> v39) ^ ((unint64_t)v43 << v40) ^ v14 ^ (((v31 >> 5) | (8 * v31)) ^ ((v38 & v52) >> v18) ^ 0x98);
  LOBYTE(v52) = *(_BYTE *)(a4 + ((109 * (*(_DWORD *)(v7 + 8648) ^ 0x5C)) ^ 0xA5)) ^ 0xA5;
  LOBYTE(v52) = ((*(_BYTE *)(v45 + ((2 * (v11 & v52 & 0x7F)) ^ 0x26)) ^ 0x60) + 3) ^ v52;
  LOBYTE(v45) = v38;
  LOBYTE(v43) = ((v38 & v52) >> 1) | ((v38 & v52) << 7);
  v54 = ((unint64_t)((*(_BYTE *)(v53 + (v43 ^ 0x95)) ^ ((v43 ^ 0x98)
                                                                                                 + (v43 ^ 0x7E)
                                                                                                 + 1) ^ 0xB9)
                                           + 10) >> v39)
      + (v52 << v33);
  v55 = BYTE1(v37) ^ 0xD2;
  LOBYTE(v31) = (81 * *(_BYTE *)(v41 + v55)) ^ 0xF0;
  LODWORD(v49) = *(_DWORD *)(v7 + 9448) ^ 0x88 ^ (v55 & 0x9C | (v37 >> 8) & 0x9C ^ 0xC);
  LODWORD(v14) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 8880) = ((((v31 ^ (2 * (v31 & v50))) & v32) >> v18) | ((unint64_t)(v31 ^ (2 * (v31 & v50))) << v40)) ^ v14 ^ v54;
  v56 = a4;
  LOBYTE(v49) = *(_BYTE *)(a4 + v49) ^ 0x42;
  v57 = *(unsigned __int8 *)(a4 + (v37 ^ 0x49)) ^ 0x18;
  v58 = *(_QWORD *)(v7 + 9680);
  LOBYTE(v57) = v57 ^ ((*(_BYTE *)(v58 + ((2 * (v57 & v50 & 0x7FLL)) ^ 0xAA)) ^ (2 * (v57 & v50)) ^ 0x63)
                     + 3);
  LODWORD(v37) = v14;
  LODWORD(v49) = (((unint64_t)((v49 ^ (2 * (v49 & v11))) & v32) >> v18) | ((unint64_t)(v49 ^ (2 * (v49 & v11))) << v40)) ^ v14 ^ (((unint64_t)(v45 & v57) >> v39) | (v57 << v33));
  LOBYTE(v57) = ((**(_BYTE **)(v7 + 8688) ^ 0x60) + 3) ^ 0x36;
  v59 = *(_QWORD *)(v7 + 9536);
  v60 = (v49 >> 5) | (8 * (v49 & 0x1F));
  v61 = *(_QWORD *)(v7 + 9648);
  LODWORD(v49) = *(unsigned __int8 *)(a4
                                    + ((109
                                                       * (((v57 >> 5) | (8 * v57)) ^ 0xB9 ^ *(_BYTE *)(v59 + (((v57 >> 5) | (8 * v57)) ^ 0x3BLL)))) ^ 0x88));
  *(_DWORD *)(v7 + 8764) = *(unsigned __int8 *)(v61 + (v60 ^ 0x5E)) + (v60 ^ 0x52);
  v62 = *(_QWORD *)(v7 + 9544);
  LODWORD(v55) = *(unsigned __int8 *)(v62
                                    + (((((v49 ^ 0x20) & v50) >> 1) | (((v49 ^ 0x20) & v50) << 7)) ^ 0x25)) ^ 0x45;
  HIDWORD(v63) = v49;
  LODWORD(v63) = (((((_DWORD)v55 << 6) ^ (2 * (_DWORD)v55) ^ 0x40) + 20) ^ v49 ^ 0x20) << 24;
  LODWORD(v49) = ((*(_BYTE *)(v53 + ((v63 >> 25) ^ 0x95)) ^ (((v63 >> 25) ^ 0x98)
                                                                                               + ((v63 >> 25) ^ 0x7E)
                                                                                               + 1) ^ 0xB9)
                                 + 10);
  v64 = *(_QWORD *)(v7 + 9200);
  LOBYTE(v57) = (81 * *(_BYTE *)(v41 + ((v64 >> 24) ^ 0x95))) ^ 0xFD;
  LOBYTE(v57) = (109
               * (*(_BYTE *)(v59 + (((v57 >> 5) | (8 * v57)) ^ 0x3BLL)) ^ ((v57 >> 5) | (8 * v57)) ^ 0xB9)) ^ 0x21;
  *(_DWORD *)(v7 + 8872) = ((unint64_t)((v57 ^ (2 * (v57 & v11))) & v45) >> v39) ^ ((unint64_t)(v57 ^ (2 * (v57 & v11))) << v40) ^ v37 ^ (((v49 & v32) >> v18) + ((_DWORD)v49 << v33));
  LODWORD(v49) = *(unsigned __int8 *)(a4 + (BYTE2(*(_QWORD *)(v7 + 9160)) ^ 0xC9)) ^ 0x7B;
  v65 = *(_QWORD *)(v7 + 9640);
  v66 = *(unsigned __int8 *)(v65 + ((-87 * (BYTE2(v64) ^ 0x79)) ^ 0x20));
  v67 = *(unsigned __int8 *)(a4
                           + ((((v66 ^ (v66 >> 1) & 0x46) >> 5) | (8 * (v66 ^ (v66 >> 1) & 0x46 ^ 0x1E))) ^ 0x88)) ^ 0xFFFFFF97;
  v68 = 109
      * ((*(unsigned __int8 *)(v61 + (((v67 >> 5) | (8 * v67)) ^ 0x5ELL))
        + (((v67 >> 5) | (8 * v67)) ^ 0x52)
        + 1) ^ 0x5C);
  v69 = v68 ^ (2 * (v68 & v11));
  LOBYTE(v28) = v33;
  LODWORD(v49) = ((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9560)
                                      + (((v49 ^ (2
                                                                               * (v49 & v50))) << v33) ^ 0x26)) ^ 0x60)
                + 3) ^ ((unint64_t)((v49 ^ (2 * (v49 & v50))) & v32) >> v39);
  LODWORD(v33) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 9160) = v49 ^ v33 ^ (((109
                                                         * ((*(_BYTE *)(v61
                                                                      + ((((v69 & v45) >> 5) | (8 * (v69 & v45))) ^ 0x5ELL))
                                                           + ((((v69 & v45) >> 5) | (8 * (v69 & v45))) ^ 0x52)
                                                           + 1) ^ 0x5C)) >> v18)
                                      + (v69 << v40));
  LODWORD(v49) = (81 * *(unsigned __int8 *)(v41 + (*(_DWORD *)(v7 + 9504) ^ 0x9FLL))) ^ 0x4E;
  LODWORD(v69) = *(unsigned __int8 *)(v62 + (v11 & v49 & 0x7F ^ 0x25));
  LODWORD(v49) = ((v69 ^ (32 * v69) ^ 0x45) + 10) ^ v49;
  v70 = (((unint64_t)(v49 & v32) >> v39) >> 5) & 0xFFFFFF07 | (8 * (((unint64_t)(v49 & v32) >> v39) & 0x1F));
  LOBYTE(v69) = 81 * *(_BYTE *)(v41 + (v64 ^ 0x76));
  LODWORD(v69) = *(unsigned __int8 *)(v65 + ((-87 * (v69 ^ 0xF ^ (2 * ((v69 ^ 0xF) & v50)))) ^ 0x20));
  v71 = ((((v69 >> 1) & 0x46 ^ v69) >> 5) | (8
                                                                          * ((v69 >> 1) & 0x46 ^ v69))) ^ 0xFFFFFFF0;
  v72 = v33;
  *(_DWORD *)(v7 + 9504) = (((_DWORD)v49 << v28)
                          + 109 * ((*(unsigned __int8 *)(v61 + (v70 ^ 0x5E)) + (v70 ^ 0x52) + 1) ^ 0x5C)) ^ (v71 << v40) ^ v33 ^ ((v71 & v45) >> v18);
  LOBYTE(a4) = (*(_DWORD *)(v7 + 8696) ^ 0xB9) + 10;
  LOBYTE(v49) = (81
               * *(_BYTE *)(v41
                          + (((a4 ^ 0x6D ^ *(_BYTE *)(v58 + (a4 ^ 0xA4))) + 3) ^ 0x5DLL))) ^ 0x60;
  v73 = *(unsigned int *)(v7 + 8728);
  LOBYTE(v71) = *(_BYTE *)(v56 + ((v73 >> 24) ^ 0x1E)) ^ 0xD0;
  *(_DWORD *)(v7 + 8752) = ((((v71 ^ (2 * (v71 & v11))) & v45) >> v18) | ((unint64_t)(v71 ^ (2 * (v71 & v11))) << v40)) ^ (((unint64_t)((v49 ^ (2 * (v49 & v50))) & v32) >> v39) | ((v49 ^ (2 * (v49 & v50))) << v28));
  LODWORD(v64) = *(_DWORD *)(v7 + 8748);
  v74 = v56;
  LOBYTE(v49) = *(_BYTE *)(v56 + (BYTE2(v64) ^ 0x3FLL)) ^ 0xB0;
  LOBYTE(v70) = 2 * (v49 & v50);
  LOBYTE(v56) = ((v70 ^ v49) >> 5) | (8 * (v70 ^ v49));
  LOBYTE(v70) = ((*(_BYTE *)(v61 + (v56 ^ 0x5ELL)) + (v56 ^ 0x52) + 1) ^ 0x5C)
              * ((v70 & 0x6C) - (v70 | 0x93));
  LOBYTE(v60) = (81 * *(_BYTE *)(v41 + (((*(_DWORD *)(v7 + 8656) ^ 0xB9) + 10) ^ 0xA1))) ^ 0xA4;
  LOBYTE(v71) = (81 * *(_BYTE *)(v41 + (BYTE1(v64) ^ 0x1ALL))) ^ 0xD1;
  LODWORD(v53) = v37;
  *(_DWORD *)(v7 + 9200) = ((((v60 ^ (2 * (v60 & v11))) & v45) >> v18) | ((unint64_t)(v60 ^ (2 * (v60 & v11))) << v40)) ^ v37 ^ (((v70 & v32) >> v39) + (v70 << v28));
  LOBYTE(v37) = v18;
  v75 = v74;
  v76 = *(unsigned __int8 *)(v74 + (BYTE1(v73) ^ 3)) ^ 0x53;
  v77 = *(_QWORD *)(v7 + 9560);
  LOBYTE(v59) = (*(_BYTE *)(v77 + (v50 & v76 ^ 0x26)) ^ 0x60) + 3;
  *(_DWORD *)(v7 + 8760) = ((((v71 ^ (2 * (v71 & v11))) & v32) >> v18)
                          + ((unint64_t)(v71 ^ (2 * (v71 & v11))) << v40)) ^ v53 ^ (((unint64_t)((v76 ^ (2 * v59)) & v45) >> v39) + ((v76 ^ (2 * v59)) << v28));
  LOBYTE(v71) = *(_BYTE *)(v74 + (v64 ^ 0x78)) ^ 0x9C;
  v78 = *(_QWORD *)(v7 + 9536);
  LOBYTE(v71) = 109
              * (*(_BYTE *)(v78 + (((v71 >> 5) | (8 * v71)) ^ 0x3BLL)) ^ ((v71 >> 5) | (8 * v71)) ^ 0xB9);
  LOBYTE(v71) = v71 ^ (2 * (v71 & v50));
  v79 = *(_QWORD *)(v7 + 9552);
  LOBYTE(v76) = *(_BYTE *)(v79 + ((-87 * (v71 & v45)) ^ 0x8BLL)) + 94;
  LOBYTE(v60) = (81 * *(_BYTE *)(v41 + v73)) ^ 0xA7;
  LODWORD(v71) = ((unint64_t)v71 << v40) | ((((v76 >> 5) | (8 * v76)) ^ 0x98u) >> v18);
  LOBYTE(v76) = 109
              * (*(_BYTE *)(v78 + (((v60 >> 5) | (8 * v60)) ^ 0x3BLL)) ^ ((v60 >> 5) | (8 * v60)) ^ 0xB9);
  *(_DWORD *)(v7 + 8748) = v71 ^ v72 ^ (((unint64_t)((v76 ^ (2 * (v76 & v11))) & v32) >> v39)
                                      + ((v76 ^ (2 * (v76 & v11))) << v28));
  v80 = *(_QWORD *)(v7 + 8504);
  LODWORD(v71) = *(unsigned __int8 *)(v75 + ((v80 >> 24) ^ 0xD3));
  *(_QWORD *)(v7 + 8440) = v75;
  v81 = v71 ^ 0xD ^ (2 * ((v71 ^ 0xD) & v11));
  LOBYTE(v76) = (a4 & 0x51 ^ 0x51) + (a4 & 0x51);
  LODWORD(v73) = *(_DWORD *)(v7 + 9632);
  v82 = BYTE3(v73);
  LODWORD(v76) = (*(unsigned __int8 *)(v77 + ((*(_BYTE *)(v41 + (v82 ^ 0x4D)) * v76) ^ 0x3FLL)) ^ 0x60)
               + 3;
  v83 = *(_QWORD *)(v7 + 9544);
  LODWORD(v60) = *(unsigned __int8 *)(v83 + (v50 & v76 & 0x7F ^ 0x25));
  LODWORD(v76) = ((v60 ^ (32 * v60) ^ 0x45) + 10) ^ v76;
  LODWORD(v60) = *(unsigned __int8 *)(v41
                                    + ((((v59 & 0x39 ^ 0x39) + (v59 & 0x39)) ^ BYTE2(v73)) ^ 0x22u));
  HIDWORD(v63) = v60;
  LODWORD(v63) = ((((81 * (_DWORD)v60) ^ 0x22) & v11) << 25) ^ (((81 * (_DWORD)v60) ^ 0x22) << 24);
  LOBYTE(v48) = *(_BYTE *)(v75 + (BYTE2(v80) ^ 0xF6)) ^ 0x62;
  LOBYTE(v59) = *(_BYTE *)(v77 + ((2 * (v48 & v50 & 0x7F)) ^ 0x26));
  *(_DWORD *)(v7 + 8736) = ((*(unsigned __int8 *)(v77 + (((unint64_t)(v81 & v32) >> v39) ^ 0x26)) ^ 0x60)
                          + (v81 << v40)
                          + 3) ^ v53 ^ (((v76 & v45) >> v18) + ((_DWORD)v76 << v28));
  LOBYTE(v76) = *(_BYTE *)(v83 + ((v63 >> 25) ^ 0x25));
  LODWORD(v76) = ((v76 ^ (32 * v76) ^ 0x45) + 10);
  LODWORD(v60) = v53;
  *(_DWORD *)(v7 + 9128) = (((unint64_t)((((v59 ^ 0x60u) + 3) ^ v48) & v45) >> v39)
                          + ((unint64_t)(((v59 ^ 0x60) + 3) ^ v48) << v40)) ^ v53 ^ (((v76 & v32) >> v18) | ((_DWORD)v76 << v28));
  LODWORD(v49) = (81
                * *(unsigned __int8 *)(v41
                                     + (((((*(_BYTE *)(v79
                                                                                       + ((-87 * (BYTE1(v80) ^ 0x4B)) ^ 0x8BLL))
                                                                            + 94) ^ 0x13) >> ((v56 & 5 ^ 5) + (v56 & 5)))
                                                        + 8
                                                        * ((*(_BYTE *)(v79
                                                                     + ((-87 * (BYTE1(v80) ^ 0x4B)) ^ 0x8BLL))
                                                          + 94) ^ 0x13)) ^ 0x5DLL))) ^ 0x45;
  LODWORD(v53) = v11;
  LOBYTE(v81) = (81 * *(_BYTE *)(v41 + (BYTE1(v73) ^ 0x51))) ^ 0x69;
  LOBYTE(v81) = ((unint64_t)((v81 ^ (2 * (v81 & v50))) & v45) >> v39)
              + ((unint64_t)(v81 ^ (2 * (v81 & v50))) << v40);
  v84 = (v81 >> 5) | (8 * (v81 & 0x1F));
  *(_DWORD *)(v7 + 8728) = ((v49 ^ (2 * (v49 & v11))) << v28) ^ v60 ^ (((v49 ^ (2 * (v49 & v11))) & v32) >> v18) ^ (109 * ((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9648) + (v84 ^ 0x5E)) + (v84 ^ 0x52) + 1) ^ 0x5C));
  LODWORD(v81) = (81 * *(unsigned __int8 *)(v41 + (v80 ^ 0xECLL))) ^ 0x1A;
  LODWORD(v84) = ((v81 & v50) >> 1) | ((v81 & v50) << 7);
  v85 = *(_QWORD *)(v7 + 9704);
  LODWORD(v84) = ((v84 ^ 0xFFFFFF98) + (v84 ^ 0x7E) + 1) ^ *(unsigned __int8 *)(v85
                                                                              + ((((v81 & v50) >> 1) | ((v81 & v50) << 7)) ^ 0x95));
  LODWORD(v81) = v81 ^ (2 * (((2 * v84) & 0x14 ^ 0x10) + (v84 ^ 0x33)));
  v86 = ((((v81 & v32) >> v37) >> 5) & 0xFFFFFF07 | (8
                                                                                  * (((v81 & v32) >> v37) & 0x1F))) ^ ((v82 & 0xFFFFFFF9 ^ 0xE9) + (v82 & 0xFFFFFFF9 ^ 0x10));
  v87 = *(_QWORD *)(v7 + 9536);
  LOBYTE(v77) = v28;
  LODWORD(v56) = *(_DWORD *)(v7 + 9624);
  LODWORD(v81) = (109 * (*(unsigned __int8 *)(v87 + (v86 ^ 0xC2)) ^ v86 ^ 0x40)) ^ ((_DWORD)v81 << v28) ^ v56;
  *(_DWORD *)(v7 + 9408) ^= 109
                          * (*(unsigned __int8 *)(v87
                                                + (((v81 >> 5) | (8 * v81)) ^ 0x3BLL)) ^ ((v81 >> 5) | (8 * v81)) ^ 0xFFFFFFB9);
  LOBYTE(v81) = ((*(_BYTE *)(*(_QWORD *)(v7 + 9680)
                           + ((81 * *(_BYTE *)(v41 + *(_QWORD *)(v7 + 9384))) ^ 0x57)) ^ (81 * *(_BYTE *)(v41 + *(_QWORD *)(v7 + 9384))) ^ 0x9E)
               + 3) ^ 0xBA;
  LOBYTE(v86) = (81 * *(_BYTE *)(v41 + ((109 * (*(_DWORD *)(v7 + 8680) ^ 0xB9)) ^ 0x20))) ^ 0x34;
  v88 = *(_QWORD *)(v7 + 9640);
  LODWORD(v47) = *(unsigned __int8 *)(v88
                                    + ((-87
                                                       * ((81
                                                         * *(_BYTE *)(v41
                                                                    + (*(_DWORD *)(v7 + 9568) ^ 0xB6))) ^ 0xFD)) ^ 0x20));
  *(_DWORD *)(v7 + 8696) = ((unint64_t)((v86 ^ (2 * (v86 & v50))) & v32) >> v39) ^ ((unint64_t)(v86 ^ (2 * (v86 & v50))) << v40) ^ ((((v81 ^ (2 * (v81 & v11))) & v45) >> v37) | ((v81 ^ (2 * (v81 & v11))) << v28));
  LODWORD(v81) = ((((v47 >> 1) & 0x46 ^ v47) >> 5) | (8
                                                                                   * ((v47 >> 1) & 0x46 ^ v47))) ^ 0xFFFFFFB8;
  v89 = v81 ^ (2 * (v81 & v50));
  v90 = *(_QWORD *)(v7 + 9544);
  LOBYTE(v47) = *(_BYTE *)(v90
                         + (((((unint64_t)(v89 & v32) >> v39) >> 1) | ((unint64_t)(v89 & v32) >> v39 << 7)) ^ 0x25));
  LOBYTE(v89) = (v89 << v40) | ((v47 ^ (32 * v47) ^ 0x45) + 10);
  LOBYTE(v47) = *(_BYTE *)(v79 + *(_QWORD *)(v7 + 8768)) + 94;
  LODWORD(v89) = *(unsigned __int8 *)(v88
                                    + ((-87
                                                       * (v56 ^ ((*(_BYTE *)(v85
                                                                           + (((v89 >> 1) | ((_BYTE)v89 << 7)) ^ 0x95)) ^ ((((v89 >> 1) | ((_BYTE)v89 << 7)) ^ 0x98) + (((v89 >> 1) | ((_BYTE)v89 << 7)) ^ 0x7E) + 1) ^ 0xB9)
                                                               + 10) ^ 0x98 ^ ((v47 >> 5) | (8 * v47)))) ^ 0x20));
  *(_DWORD *)(v7 + 8768) = (((v89 >> 1) & 0x46 ^ v89) >> 5) | (8
                                                                                            * ((v89 >> 1) & 0x46 ^ v89));
  LODWORD(v87) = *(_DWORD *)(v7 + 8744);
  v91 = *(_QWORD *)(v7 + 8440);
  LOBYTE(v89) = *(_BYTE *)(v91 + (BYTE3(v87) ^ 0xA2)) ^ 0x51;
  LOBYTE(v89) = *(_BYTE *)(v90 + (((v89 >> 1) | ((_BYTE)v89 << 7)) ^ 0x25));
  LOBYTE(v89) = (v89 ^ (32 * v89) ^ 0x44) + 10;
  LOBYTE(v47) = *(_BYTE *)(v90
                         + (((-36 - ((*(_DWORD *)(v7 + 9400) ^ 0x82) & *(_DWORD *)(v7 + 9392))) ^ (((v89 & v53) >> 1) | ((v89 & v53) << 7))) ^ 0xF9u)) ^ 0x45;
  v92 = v79;
  LOBYTE(v47) = *(_BYTE *)(v79 + ((-87 * (((_BYTE)v47 << 6) ^ (2 * v47) ^ 0x40) + 52) & 0xFE ^ 0x8BLL))
              + 94;
  LOBYTE(v89) = v89 ^ 0x98 ^ ((v47 >> 5) | (8 * v47));
  LODWORD(v60) = *(_DWORD *)(v7 + 9520);
  v93 = v91;
  LOBYTE(v47) = *(_BYTE *)(v91 + (BYTE3(v60) ^ 0x89)) ^ 0xA2;
  v94 = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 9400) = (((v89 & v32) >> v37) + (v89 << v28)) ^ v94 ^ (((unint64_t)((v47 ^ (2 * (v47 & v50))) & v45) >> v39) + ((unint64_t)(v47 ^ (2 * (v47 & v50))) << v40));
  LOBYTE(v89) = *(_BYTE *)(v91 + (*(_QWORD *)(v7 + 6216) ^ 0x51)) ^ 0x67;
  LOBYTE(v89) = v89 ^ (2 * (v89 & v50));
  v95 = *(_QWORD *)(v7 + 9536);
  LODWORD(v86) = *(unsigned __int8 *)(v88
                                    + ((-87 * ((81 * *(_BYTE *)(v41 + (BYTE2(v60) ^ 0x4DLL))) ^ 0x19)) ^ 0x20));
  LODWORD(v47) = ((v86 ^ (v86 >> 1) & 0x46) >> 5) | (8
                                                                                  * (v86 ^ (v86 >> 1) & 0x46 ^ 0x1E));
  LODWORD(v79) = v53;
  LODWORD(v47) = ((unint64_t)((v47 ^ (2 * (v47 & v53))) & v45) >> v39) | ((v47 ^ (2 * (v47 & v53))) << v77);
  LOBYTE(v53) = v94;
  *(_DWORD *)(v7 + 9568) = (((109
                                             * (*(_BYTE *)(v95
                                                         + ((((v89 & v32) >> 5) | (8 * (v89 & v32))) ^ 0x3BLL)) ^ (((v89 & v32) >> 5) | (8 * (v89 & v32))) ^ 0xB9)) >> v37) | ((unint64_t)v89 << v40)) ^ v94 ^ v47;
  LOBYTE(v89) = (81 * *(_BYTE *)(v41 + (BYTE1(v87) ^ 0x9BLL))) ^ 0x41;
  v96 = *(_QWORD *)(v7 + 9560);
  LODWORD(v89) = ((v89 ^ (2 * (v89 & v79))) << v77)
               + ((unint64_t)((*(_BYTE *)(v96
                                                                + (((v89 ^ (2 * (v89 & v79))) & v32) ^ 0x26)) ^ 0x60)
                                                    + 3) >> v39);
  v97 = *(_QWORD *)(v7 + 9680);
  LODWORD(v89) = ((*(unsigned __int8 *)(v97 + (v89 ^ 0xAALL)) ^ v89 ^ 0x63) + 3) ^ v94;
  LOBYTE(v86) = (81 * *(_BYTE *)(v41 + (((**(_BYTE **)(v7 + 8664) ^ 0x60) + 3) ^ 0xA9))) ^ 0x3F;
  LODWORD(v86) = *(unsigned __int8 *)(v92 + ((-87 * (v86 ^ (2 * (v86 & v50)))) ^ 0x8BLL)) + 94;
  LODWORD(v60) = (81
                * *(unsigned __int8 *)(v41 + ((109 * ((*(_DWORD *)(v7 + 8640) + 1) ^ 0x5C)) ^ 0xALL))) ^ 0x35;
  v98 = ((v86 >> 5) | (8 * (_DWORD)v86)) ^ 0xFFFFFF98;
  *(_DWORD *)(v7 + 9392) = (109
                          * ((*(unsigned __int8 *)(*(_QWORD *)(v7 + 9648)
                                                 + (((v89 >> 5) | (8 * v89)) ^ 0x5ELL))
                            + (((v89 >> 5) | (8 * v89)) ^ 0x52)
                            + 1) ^ 0x5C)) ^ (((v98 & v45) >> v37) + (v98 << v40));
  LODWORD(v89) = 109
               * (*(unsigned __int8 *)(v95 + (((v60 >> 5) | (8 * v60)) ^ 0x3BLL)) ^ ((v60 >> 5) | (8 * v60)) ^ 0xFFFFFFB9);
  LOBYTE(v89) = ((*(_BYTE *)(v97 + ((2 * (v89 & v50 & 0x7FLL)) ^ 0xAA)) ^ (2 * (v89 & v50)) ^ 0x63)
               + (v79 & 3 ^ 3)
               + (v79 & 3)) ^ v89;
  LODWORD(v98) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9544)
                                    + ((((((unint64_t)v89 << v40) & 1) << 7) | (((unint64_t)v89 << v40) >> 1)) ^ 0x25));
  LODWORD(v89) = ((v89 & v32) >> v37) | ((v98 ^ (32 * v98) ^ 0x45) + 10);
  LODWORD(v98) = *(_DWORD *)(v7 + 6332) ^ (2 * (*(_DWORD *)(v7 + 6332) & v79));
  *(_DWORD *)(v7 + 9384) = ((unint64_t)(v98 & v45) >> v39) ^ ((_DWORD)v98 << v77) ^ v94 ^ v89;
  v99 = *(_QWORD *)(v7 + 6320);
  v100 = (((v99 & v32) >> v37) >> 1) & 0xFFFFFF7F | ((((v99 & v32) >> v37) & 1) << 7);
  *(_DWORD *)(v7 + 9096) = (((_DWORD)v99 << v77)
                          + (*(unsigned __int8 *)(*(_QWORD *)(v7 + 9704) + (v100 ^ 0x95)) ^ ((v100 ^ 0x98)
                                                                                           + (v100 ^ 0x7E)
                                                                                           + 1) ^ 0xFFFFFFB9)
                          + 10) ^ *(_DWORD *)(v7 + 8712);
  LOBYTE(v91) = v53;
  LODWORD(v87) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9640)
                                    + ((-87 * (*(_QWORD *)(v7 + 6336) ^ 0xCD)) ^ 0x20));
  LODWORD(v87) = ((v87 ^ (v87 >> 1) & 0x46) >> 5) | (8
                                                                                  * (v87 ^ (v87 >> 1) & 0x46 ^ 0x1E));
  LOBYTE(v99) = v87 ^ (2 * (v87 & v50));
  LOBYTE(v53) = v45;
  LODWORD(v45) = 1241 * (*(_DWORD *)(v7 + 8720) ^ 0x1371);
  LOBYTE(v87) = *(_BYTE *)(v93 + (*(_QWORD *)(v7 + 9496) ^ 0x89)) ^ 0xA2;
  *(_DWORD *)(v7 + 9576) = (((v87 ^ (2 * (v87 & v50))) & v53) >> v37) | ((v87 ^ (2 * (v87 & v50))) << v77);
  LODWORD(v56) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 9012) + v56 - 901197612 * v56 + 1211800615;
  *(_DWORD *)(v7 + 9448) = 109 * ((*(_DWORD *)(v7 + 8764) + 1) ^ 0x5C);
  *(_DWORD *)(v7 + 9480) = *(_DWORD *)(v7 + 8752) ^ v56;
  *(_DWORD *)(v7 + 9488) = (*(unsigned __int8 *)(v96 + (*(_DWORD *)(v7 + 8728) ^ 0x26)) ^ 0x60) + 3;
  *(_DWORD *)(v7 + 9496) = *(_DWORD *)(v7 + 8696) ^ v56;
  *(_DWORD *)(v7 + 9012) = *(_DWORD *)(v7 + 8768) ^ 0xFFFFFFF0;
  *(_DWORD *)(v7 + 9464) = *(_DWORD *)(v7 + 9600);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9608) ^ 0x3017C0DF;
  LOWORD(v87) = -15177 * *(_WORD *)(*(_QWORD *)(v7 + 9528) + 2 * (((_DWORD)v45 - 4113) ^ 0x331u) + 3204);
  LODWORD(v93) = (unsigned __int16)v87 ^ 0x7CF0 ^ (2 * (((unsigned __int16)v87 ^ 0x7CF0) & *(_QWORD *)(v7 + 9688)));
  LOBYTE(v100) = *(_BYTE *)(*(_QWORD *)(v7 + 9704) + 149) ^ 0x17;
  LOBYTE(v100) = 2 * (((2 * v100) & 0x14 ^ 0x10) + (v100 ^ 0x33));
  *(_DWORD *)(*(_QWORD *)(v7 + 4536)
            + 4
            * ((((unint64_t)(v100 & v32) >> v39) | ((unint64_t)v100 << v77)) ^ v91)) = ((v93 & *(_DWORD *)(v7 + 9736)) >> *(_QWORD *)(v7 + 9664)) ^ v56 ^ ((unint64_t)(v93 & *(_DWORD *)(v7 + 9656)) << v40);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (int)(v45 ^ 0x11)) - 4))(v99 << v77);
}

void sub_100310F74()
{
  JUMPOUT(0x100310E64);
}

uint64_t sub_100310F7C@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  int v4;
  unint64_t v5;
  unsigned __int8 v6;
  int v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned __int8 v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  int v35;
  unsigned int v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  unint64_t v46;
  int v47;
  char v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unint64_t v54;
  unsigned int v55;
  int v56;
  unint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unint64_t v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unint64_t v81;
  int v82;
  int v83;
  unint64_t v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  uint64_t v94;
  int v95;
  int v96;
  int v97;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  unint64_t v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  unint64_t v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unint64_t v115;
  int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  unint64_t v125;
  int v126;
  int v127;
  int v128;
  uint64_t v129;
  int v130;
  uint64_t (*v131)(void);

  *(_DWORD *)(v9 + 8768) = v13;
  v17 = (v16 - 715) | 0x123u;
  v18 = a2 ^ v7 ^ a1 ^ (v5 >> v11) ^ a3;
  v19 = *(_DWORD *)(v9 + 9576) ^ v15 ^ v8;
  v20 = *(_DWORD *)(v9 + 8748) | (*(_DWORD *)(v9 + 8760) << 8);
  *(_QWORD *)(v9 + 8888) = v17;
  LODWORD(v17) = (v17 ^ 0xFE00) & (*(_DWORD *)(v9 + 8880) << 8);
  v21 = *(_DWORD *)(v9 + 8984) << 24;
  v22 = *(_DWORD *)(v9 + 9136) | (v6 << 8);
  v23 = ((a4 << 16) + 16515072) & 0xFF0000;
  v24 = *(_DWORD *)(v9 + 9080) << 24;
  v25 = *(_DWORD *)(v9 + 8512) << 24;
  v26 = *(_DWORD *)(v9 + 8872) << 24;
  *(_DWORD *)(v9 + 8760) = v20;
  v27 = (unsigned __int16)v20 | (*(_DWORD *)(v9 + 9480) << 24) | (*(_DWORD *)(v9 + 9200) << 16);
  *(_DWORD *)(v9 + 8728) = v21;
  v28 = v21 & 0xFFFFFF00 | *(_DWORD *)(v9 + 9448);
  *(_DWORD *)(v9 + 8748) = v17;
  *(_DWORD *)(v9 + 8720) = v23;
  v29 = *(_QWORD *)(v9 + 9664);
  v30 = v28 | v17 | v23;
  *(_DWORD *)(v9 + 8712) = v26;
  v31 = v26 & 0xFF000000 | (unsigned __int16)(*(_DWORD *)(v9 + 9464) << 8) | (*(_DWORD *)(v9 + 9160) << 16) | *(_DWORD *)(v9 + 9504);
  *(_DWORD *)(v9 + 8744) = v24;
  v32 = v24 & 0xFF00FFFF | (*(_DWORD *)(v9 + 9456) << 16);
  *(_DWORD *)(v9 + 8752) = v22;
  v33 = v32 | v22;
  v34 = v19;
  v35 = *(_DWORD *)(v9 + 8736) << 24;
  v36 = v25 & 0xFF00FFFF | (*(_DWORD *)(v9 + 9096) << 16);
  *(_DWORD *)(v9 + 8764) = v18;
  v37 = v36 & 0xFFFF0000 | (v18 << 8) | v19;
  v38 = *(_QWORD *)(v9 + 9688);
  *(_QWORD *)(v9 + 9632) = v11;
  v39 = v10;
  *(_DWORD *)(v9 + 9416) = 2 * v38;
  LODWORD(v38) = (2 * v38) & 0x2338D78E ^ 0x119C6BC7;
  v40 = 33686018 * *(_DWORD *)(v9 + 9424);
  v41 = *(_DWORD *)(v9 + 9736) & v38;
  v42 = v40 & 0xC538D78E ^ 0xE29C6BC7;
  v43 = v7;
  v44 = *(_DWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 8736) = v35;
  v45 = v35 & 0xFFFF00FF | (*(_DWORD *)(v9 + 9488) << 8);
  v46 = (unint64_t)(v4 & v42) >> *(_QWORD *)(v9 + 9632);
  v47 = *(_DWORD *)(v9 + 9592);
  v48 = v12;
  v49 = v46 | ((v47 & v42) << v12);
  *(_QWORD *)(v9 + 8872) = v34;
  LODWORD(v46) = *(_DWORD *)(v14 + 4 * v34);
  LODWORD(v34) = *(_DWORD *)(v14 + ((v37 >> 22) & 0x3FC));
  LODWORD(v17) = *(_DWORD *)(v14 + 4 * BYTE1(v37));
  v50 = *(_DWORD *)(v14 + 4 * BYTE2(v37));
  *(_DWORD *)(v9 + 7712) = v33;
  v51 = v33 ^ (((unint64_t)((v44 ^ 0x3014C0CF) & v38) << v39) | (v41 >> v29)) ^ v46 ^ v49 ^ __ROR4__(v34, 8) ^ __ROR4__(v17, 24) ^ __ROR4__(v50, 16);
  LOBYTE(v23) = v29;
  LODWORD(v29) = *(_DWORD *)(v9 + 9520);
  *(_DWORD *)(v9 + 9576) = v29 ^ v15;
  *(_DWORD *)(v9 + 8408) = v30;
  LODWORD(v38) = v51 ^ v29 ^ v15 ^ v30;
  *(_DWORD *)(v9 + 9528) = v38;
  v52 = v43;
  v53 = v38 ^ v43;
  *(_DWORD *)(v9 + 8672) = v31;
  LODWORD(v46) = v38 ^ v43 ^ v31;
  *(_DWORD *)(v9 + 8680) = v27;
  v54 = v27 ^ v29 ^ v15 ^ v46;
  v55 = v45 & 0xFF00FF00 | (*(_DWORD *)(v9 + 9128) << 16) | *(_DWORD *)(v9 + 9408);
  v57 = __PAIR64__(v29, __ROR4__(*(_DWORD *)(v14 + 4 * BYTE2(v54)), 16));
  v56 = v29 ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE1(v54)), 24) ^ __ROR4__(*(_DWORD *)(v14 + ((v54 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v14 + 4 * (v27 ^ v29 ^ v15 ^ v46)) ^ v57;
  LODWORD(v57) = v29;
  LODWORD(v38) = v57 >> 8;
  *(_DWORD *)(v9 + 9600) = v38;
  *(_DWORD *)(v9 + 8440) = v55;
  v58 = v55 ^ v38 ^ __ROR4__(v56, 8);
  v59 = ((*(_DWORD *)(v9 + 9736) & (v40 & 0xA2C673F0 ^ 0x516339F8)) >> v23)
      + ((unint64_t)(v47 & (v40 & 0xA2C673F0 ^ 0x516339F8)) << v39);
  v60 = *(_DWORD *)(v9 + 9416);
  v61 = *(_DWORD *)(v9 + 9584);
  LODWORD(v17) = (((v44 ^ 0x300740D8) & (v60 & 0xB0C673F0 ^ 0x586339F8)) << v48)
               + ((unint64_t)(v61 & (v60 & 0xB0C673F0 ^ 0x586339F8)) >> *(_QWORD *)(v9 + 9632));
  LODWORD(v38) = *(_DWORD *)(v9 + 9568) << 16;
  *(_DWORD *)(v9 + 8704) = v38;
  LODWORD(v34) = v38 & 0xFF00FF | (unsigned __int16)(*(_DWORD *)(v9 + 9392) << 8) | (*(_DWORD *)(v9 + 9400) << 24);
  LODWORD(v38) = *(_DWORD *)(v9 + 9012);
  *(_DWORD *)(v9 + 8696) = v38;
  v62 = v38 | (*(_DWORD *)(v9 + 6292) << 24) | (*(_DWORD *)(v9 + 9496) << 16) | (*(_DWORD *)(v9 + 6288) << 8);
  LODWORD(v34) = v34 & 0xFFFFFF00 | *(_DWORD *)(v9 + 9384);
  v63 = v52;
  *(_DWORD *)(v9 + 8368) = v62;
  v64 = v62 ^ v29 ^ v52;
  *(_DWORD *)(v9 + 8504) = v34;
  *(_DWORD *)(v9 + 8640) = v58 ^ v64;
  LODWORD(v34) = v34 ^ v15 ^ v58 ^ v64;
  *(_QWORD *)(v9 + 8688) = v37;
  *(_DWORD *)(v9 + 9568) = v29 ^ v52;
  v65 = v37 ^ v29 ^ v52 ^ v34;
  v66 = *(_DWORD *)(v14 + 4 * BYTE2(v65));
  v67 = v17 ^ v59;
  LODWORD(v17) = *(_DWORD *)(v14 + ((v65 >> 22) & 0x3FC));
  *(_DWORD *)(v9 + 8664) = v51;
  v68 = v67 ^ v51 ^ __ROR4__(v66, 16) ^ (v17 >> 8) ^ ((_DWORD)v17 << 24) ^ *(_DWORD *)(v14 + 4 * (v37 ^ v29 ^ v52 ^ v34)) ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE1(v65)), 24);
  LODWORD(v46) = v46 ^ v29;
  *(_DWORD *)(v9 + 8512) = v46;
  *(_DWORD *)(v9 + 8648) = v68 ^ v53;
  v69 = v46 ^ v15 ^ v68 ^ v53;
  *(_QWORD *)(v9 + 7784) = v54;
  v70 = v69 ^ v54;
  v71 = v69 ^ v54 ^ v29 ^ v52;
  v72 = v29 ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE1(v71)), 24) ^ __ROR4__(*(_DWORD *)(v14 + ((v71 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v14 + 4 * (v69 ^ v54 ^ v29 ^ v52));
  *(_QWORD *)(v9 + 8656) = v71;
  LODWORD(v57) = __ROR4__(*(_DWORD *)(v14 + 4 * BYTE2(v71)), 16);
  LOBYTE(v52) = v48;
  v73 = (((v44 ^ 0x3014C09B) & (v60 & 0xDEB8BF12 ^ 0x6F5C5F89)) << v48) | ((v61 & (v60 & 0xDEB8BF12 ^ 0x6F5C5F89)) >> v23);
  v74 = v40;
  LODWORD(v71) = v40 & 0xC0B8BF12 ^ 0x605C5F89;
  v75 = *(_DWORD *)(v9 + 9592);
  LOBYTE(v44) = v39;
  v76 = v73 ^ ((unint64_t)(v75 & v71) << v39);
  LODWORD(v34) = v34 ^ v29;
  v77 = *(_DWORD *)(v9 + 9600);
  v78 = v77 ^ __ROR4__(v72 ^ v57, 8);
  v79 = v78 ^ v64;
  *(_DWORD *)(v9 + 8392) = v34;
  *(_DWORD *)(v9 + 8984) = v78 ^ v64;
  *(_DWORD *)(v9 + 9012) = v78 ^ v64 ^ v15;
  v80 = v34 ^ v63 ^ v78 ^ v64 ^ v15;
  *(_QWORD *)(v9 + 7888) = v65;
  v81 = v65 ^ *(_DWORD *)(v9 + 9576) ^ v80;
  v82 = v76 ^ ((unint64_t)(*(_DWORD *)(v9 + 9736) & v71) >> *(_QWORD *)(v9 + 9632)) ^ *(_DWORD *)(v14 + 4 * (v65 ^ *(_BYTE *)(v9 + 9576) ^ v80)) ^ (*(_DWORD *)(v14 + ((v81 >> 22) & 0x3FC)) << 24) ^ (*(_DWORD *)(v14 + ((v81 >> 22) & 0x3FC)) >> 8) ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE1(v81)), 24) ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE2(v81)), 16);
  v83 = v82 ^ *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 8496) = v83;
  LODWORD(v34) = v83 ^ v15;
  *(_DWORD *)(v9 + 7792) = v69 ^ v29;
  v84 = v70 ^ v69 ^ v29 ^ v83 ^ v15;
  LODWORD(v71) = v29 ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE2(v84)), 16) ^ __ROR4__(*(_DWORD *)(v14 + ((v84 >> 22) & 0x3FC)), 8);
  LODWORD(v57) = __ROR4__(*(_DWORD *)(v14 + 4 * BYTE1(v84)), 24);
  *(_QWORD *)(v9 + 8008) = v84;
  LODWORD(v71) = v71 ^ v57 ^ *(_DWORD *)(v14 + 4 * (v70 ^ v69 ^ v29 ^ v83 ^ v15));
  *(_DWORD *)(v9 + 7776) = v58;
  *(_DWORD *)(v9 + 7976) = v78 ^ v58;
  v85 = v78 ^ v58 ^ v77 ^ __ROR4__(v71, 8);
  *(_DWORD *)(v9 + 9424) = v85;
  v86 = v74;
  LODWORD(v71) = v74 & 0xA92E3BB0 ^ 0x54971DD8;
  v87 = v61 & v71;
  LODWORD(v71) = v75 & v71;
  LOBYTE(v75) = v23;
  LODWORD(v71) = ((_DWORD)v71 << v52) | (v87 >> v23);
  v88 = v60;
  v89 = v60 & 0x9F2E3BB0 ^ 0xCF971DD8;
  v90 = *(_DWORD *)(v9 + 9608);
  LOBYTE(v74) = v44;
  v91 = (((unint64_t)((v90 ^ 0x101700D8) & v89) << v44)
       + ((unint64_t)(*(_DWORD *)(v9 + 9736) & v89) >> *(_QWORD *)(v9 + 9632))) ^ v71;
  *(_DWORD *)(v9 + 7952) = v68;
  LODWORD(v37) = v82 ^ v68;
  v92 = v85 ^ v79;
  *(_DWORD *)(v9 + 8384) = v92;
  *(_DWORD *)(v9 + 7936) = v80 ^ v29;
  LODWORD(v84) = v92 ^ v80 ^ v29;
  *(_DWORD *)(v9 + 9008) = v84;
  v93 = v81 ^ *(_DWORD *)(v9 + 9568);
  *(_DWORD *)(v9 + 8400) = v84 ^ v15;
  v94 = v93 ^ v84 ^ v15;
  *(_QWORD *)(v9 + 9080) = v94;
  v95 = *(_DWORD *)(v14 + 4 * BYTE1(v94));
  v96 = *(_DWORD *)(v14 + 4 * BYTE2(v94));
  *(_DWORD *)(v9 + 8376) = v37;
  v97 = v91 ^ v37 ^ __ROR4__(v95, 24) ^ __ROR4__(v96, 16);
  v98 = *(_QWORD *)(v9 + 9544);
  LOBYTE(v91) = *(_BYTE *)(v98 + (((v94 >> 17) & 0x80 | (v94 >> 25)) ^ 0x25));
  v99 = v97 ^ __ROR4__(*(_DWORD *)(v14 + 4 * ((v91 ^ (32 * v91) ^ 0x45) + 10)), 8) ^ *(_DWORD *)(v14 + 4 * v94);
  v100 = *(_DWORD *)(v9 + 9472) ^ (v29 - 1369494618 - ((2 * v29) & 0x5CBE574C));
  v101 = v34 ^ v69;
  LODWORD(v34) = v99 ^ v34;
  v102 = v34 ^ v70;
  v103 = *(_DWORD *)(v14 + 4 * (v34 ^ v70)) ^ v29 ^ __ROR4__(*(_DWORD *)(v14 + ((v102 >> 22) & 0x3FC)), 8) ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE2(v102)), 16);
  LOBYTE(v91) = *(_BYTE *)(v98
                         + ((((v34 ^ v70) >> 1) & 0x80 | ((unsigned __int16)(v34 ^ v70) >> 9)) ^ 0x25));
  LODWORD(v57) = __ROR4__(*(_DWORD *)(v14 + 4 * ((v91 ^ (32 * v91) ^ 0x45) + 10)), 24);
  LODWORD(v71) = v90;
  *(_DWORD *)(v9 + 8880) = v90 ^ 0x3007C0D7;
  v104 = (((v90 ^ 0x3007C0D7) & (v86 & 0xBECBD566 ^ 0x5F65EAB3)) << v52) | ((v61 & (v86 & 0xBECBD566 ^ 0x5F65EAB3)) >> v75);
  LODWORD(v94) = v88;
  v105 = *(_DWORD *)(v9 + 9592);
  v106 = ((unint64_t)(*(_DWORD *)(v9 + 9736) & (v88 & 0x76CBD566 ^ 0xBB65EAB3)) >> *(_QWORD *)(v9 + 9632)) | ((unint64_t)(v105 & (v88 & 0x76CBD566 ^ 0xBB65EAB3)) << v74);
  v107 = *(_DWORD *)(v9 + 9600);
  v108 = v107 ^ __ROR4__(v103 ^ v57, 8);
  v109 = v108 ^ *(_DWORD *)(v9 + 8984);
  *(_QWORD *)(v9 + 7992) = v81;
  v110 = v81 ^ v29 ^ v109;
  v111 = *(_DWORD *)(v14 + ((v110 >> 22) & 0x3FC));
  *(_DWORD *)(v9 + 8020) = v99;
  v112 = v106 ^ v29 ^ v104 ^ v99 ^ __ROR4__(v111, 8) ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE2(v110)), 16) ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE1(v110)), 24) ^ *(_DWORD *)(v14 + 4 * (v81 ^ v29 ^ v109));
  *(_DWORD *)(v9 + 7984) = v101;
  v113 = v100 ^ v101 ^ 0xF30276FB ^ v34;
  LODWORD(v34) = v34 ^ v29;
  *(_DWORD *)(v9 + 8000) = v34;
  v114 = v34 ^ v15 ^ v112;
  LODWORD(v34) = v113 ^ *(_DWORD *)(v9 + 9624);
  *(_DWORD *)(v9 + 8236) = v114;
  *(_QWORD *)(v9 + 8024) = v102;
  *(_DWORD *)(v9 + 8280) = v34 ^ v114;
  LODWORD(v34) = v102 ^ v15 ^ v34 ^ v114;
  v115 = v34 ^ v29;
  v116 = v29 ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE1(v115)), 24) ^ __ROR4__(*(_DWORD *)(v14 + 4 * BYTE2(v115)), 16);
  LODWORD(v57) = __ROR4__(*(_DWORD *)(v14 + ((v115 >> 22) & 0x3FC)), 8);
  *(_QWORD *)(v9 + 8264) = v115;
  v117 = v116 ^ v57 ^ *(_DWORD *)(v14 + 4 * (v34 ^ v29));
  v118 = v108 ^ *(_DWORD *)(v9 + 9424);
  *(_DWORD *)(v9 + 8032) = v118;
  v119 = v118 ^ v107 ^ __ROR4__(v117, 8);
  v120 = v94 & 0xDBCB639C ^ 0x6DE5B1CE;
  v121 = (v61 & v120) >> v75;
  *(_DWORD *)(v9 + 8984) = v71 ^ 0x3017C0DE;
  v122 = ((v71 ^ 0x3017C0DE) & v120) << v52;
  *(_DWORD *)(v9 + 9472) = v122;
  v123 = (v122 | v121) ^ ((unint64_t)(v105 & (v86 & 0xFDCB639C ^ 0xFEE5B1CE)) << v74) ^ ((unint64_t)(*(_DWORD *)(v9 + 9736) & (v86 & 0xFDCB639C ^ 0xFEE5B1CE)) >> *(_QWORD *)(v9 + 9632));
  *(_DWORD *)(v9 + 8312) = v119;
  v124 = v119 ^ *(_DWORD *)(v9 + 9008);
  LODWORD(v81) = *(_DWORD *)(v9 + 9576);
  *(_QWORD *)(v9 + 8360) = v110;
  v125 = v110 ^ v81 ^ v124;
  LODWORD(v71) = *(_DWORD *)(v14 + 4 * BYTE1(v125));
  *(_DWORD *)(v9 + 8260) = v112;
  *(_QWORD *)(v9 + 6336) = v125 >> 24;
  v126 = v123 ^ v112 ^ __ROR4__(v71, 24) ^ __ROR4__(*(_DWORD *)(v14 + 4 * (v125 >> 24)), 8) ^ *(_DWORD *)(v14 + 4 * (v110 ^ v81 ^ v124));
  v127 = *(_DWORD *)(v14 + 4 * BYTE2(v125));
  LODWORD(v57) = __ROR4__(v127, 16);
  *(_DWORD *)(v9 + 9008) = v126 ^ v57;
  LODWORD(v110) = v126 ^ v57 ^ v113;
  *(_DWORD *)(v9 + 7688) = v110;
  LODWORD(v110) = v110 ^ v34;
  LOBYTE(v126) = *(_BYTE *)(v98
                          + (((BYTE2(v127) & 0xF9 ^ 0xF9) + (BYTE2(v127) & 0xF9)) ^ 0xDC ^ ((v110 >> 17) & 0x80 | (v110 >> 25))));
  v128 = *(_DWORD *)(v14
                   + 4
                   * (((v126 ^ (32 * (v126 ^ 0x45)) ^ 0xE5)
                                      - 2 * (((v126 ^ (32 * (v126 ^ 0x45)) ^ 0xE5) + 10) & 0x57 ^ (v126 ^ 0x45) & 1)
                                      + 96) ^ 0x56u));
  LOBYTE(v34) = *(_BYTE *)(*(_QWORD *)(v9 + 9560) + (BYTE1(v110) ^ 0x26));
  v129 = (v110 >> 9) & 0x80 | (v110 >> 17) & 0x7F;
  *(_DWORD *)(v9 + 7704) = v129 ^ 0x7E;
  LOBYTE(v129) = *(_BYTE *)(*(_QWORD *)(v9 + 9704) + (v129 ^ 0x95)) ^ ((((v110 >> 9) & 0x80 | (v110 >> 17) & 0x7F) ^ 0x98)
                                                                     + (((v110 >> 9) & 0x80 | (v110 >> 17) & 0x7F) ^ 0x7E)
                                                                     + 1) ^ 0xB9;
  LODWORD(v57) = __ROR4__(*(_DWORD *)(v14 + 4 * ((v34 ^ 0x60) + 3)), 24);
  *(_DWORD *)(v9 + 8356) = v110;
  v130 = v29 ^ __ROR4__(v128, 8) ^ v57 ^ *(_DWORD *)(v14 + 4 * v110);
  LODWORD(v57) = __ROR4__(*(_DWORD *)(v14 + 4 * (v129 + 10)), 16);
  *(_DWORD *)(v9 + 8964) = v86;
  *(_DWORD *)(v9 + 8352) = v109;
  *(_DWORD *)(v9 + 7696) = v124 ^ v29;
  LODWORD(v94) = *(_DWORD *)(v9 + 9568);
  *(_DWORD *)(v9 + 6332) = BYTE3(v71);
  v131 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                       + 8
                                       * ((14
                                         * (-3
                                          * (((v125 ^ v94 ^ v124 ^ v29 ^ v15 ^ v107 ^ __ROR4__(v130 ^ v57, 8) ^ v109 ^ v15) >> 16) & 0xAD) == 0xF6)) ^ v16))
                           - 12);
  *(_QWORD *)(v9 + 6296) = 37;
  *(_QWORD *)(v9 + 6320) = *(_QWORD *)(v9 + 9080) >> 8;
  *(_QWORD *)(v9 + 8288) = *(_QWORD *)(v9 + 5920);
  return v131();
}

uint64_t sub_100311B64()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  *(_DWORD *)(v1 + 8888) = v2;
  v4 = (v3 - 1062939476) & 0x3F5B2ABC;
  *(_DWORD *)(v1 + 9012) = v4;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8 * ((30 * ((((v4 - 273) ^ 0x154) & ((v0 + 130) ^ v0)) != 0)) | (v3 + 8301))))();
}

void sub_100311BD4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, char a6, unsigned int a7, int a8)
{
  char v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  unint64_t v17;
  int v18;
  int v19;
  int v20;
  unsigned int v22;
  char v23;
  unsigned int v25;
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  uint64_t v90;
  unsigned int v91;
  int v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  int v97;
  int v98;
  int v99;
  int v100;
  BOOL v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unint64_t v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  BOOL v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  char v292;
  char v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  int v305;
  uint64_t v306;
  int v307;
  uint64_t v308;
  int v309;
  uint64_t v310;
  unint64_t v311;
  uint64_t v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  int v317;
  uint64_t v318;
  char v319;
  char v320;
  int v321;
  int v322;
  int v323;
  int v324;
  unsigned int v325;
  int v326;
  int v327;
  char v328;
  unsigned int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  unint64_t v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  unint64_t v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  uint64_t v353;
  int v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  unint64_t v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  unint64_t v365;
  unsigned int v366;
  char v367;
  unint64_t v368;
  unsigned int v369;
  uint64_t v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  unint64_t v378;
  unint64_t v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  char v386;
  unsigned int v387;
  char v388;
  int v389;
  unsigned int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  unint64_t v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  unint64_t v404;
  int v405;
  int v406;
  char v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  unint64_t v413;
  int v414;
  uint64_t v415;
  int v416;
  int v417;
  int v418;
  int v419;
  unint64_t v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  unint64_t v427;
  int v428;
  int v429;
  char v430;
  int v431;
  unsigned int v432;
  int v433;
  int v434;
  uint64_t v435;
  int v436;
  int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  unsigned int v442;
  uint64_t v443;
  unsigned int v444;
  uint64_t v445;
  unsigned int v446;
  uint64_t v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  int v451;
  uint64_t v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  uint64_t v456;
  unsigned int v457;
  uint64_t v458;
  uint64_t v459;
  int v460;
  unint64_t v461;
  unint64_t v462;
  unint64_t v463;
  unsigned int v464;
  unint64_t v465;
  int v466;
  unint64_t v467;
  unint64_t v468;
  unint64_t v469;
  unint64_t v470;
  unsigned int v471;
  unint64_t v472;
  unsigned int v473;
  unint64_t v474;
  unint64_t v475;
  unint64_t v476;
  unint64_t v477;
  unint64_t v478;
  unint64_t v479;
  unint64_t v480;
  unint64_t v481;
  uint64_t v482;
  uint64_t v483;
  int v484;
  int v485;
  int v486;
  uint64_t v487;
  uint64_t v488;
  int v489;
  int v490;
  uint64_t v491;
  uint64_t v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  uint64_t v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  BOOL v517;
  char v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  BOOL v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  int v642;
  int v643;
  int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  int v649;
  int v650;
  int v651;
  int v652;
  int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  int v717;
  int v718;
  int v719;
  int v720;
  int v721;
  int v722;
  int v723;
  int v724;
  int v725;
  int v726;
  int v727;
  int v728;
  int v729;
  int v730;
  int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  int v736;
  int v737;
  int v738;
  int v739;
  int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  int v750;
  int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  int v760;
  int v761;
  unsigned int v762;
  int v763;
  int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  int v774;
  int v775;
  int v776;
  int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  int v783;
  int v784;
  int v785;
  int v786;
  int v787;
  int v788;
  int v789;
  int v790;
  int v791;
  int v792;
  int v793;
  int v794;
  int v795;
  int v796;
  int v797;
  int v798;
  unsigned int v799;
  int v800;
  int v801;
  int v802;
  unsigned int v803;
  int v804;
  int v805;
  int v806;
  int v807;
  int v808;
  int v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  int v816;
  int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  unsigned int v824;
  int v825;
  int v826;
  int v827;
  unsigned int v828;
  int v829;
  int v830;
  int v831;
  int v832;
  int v833;
  int v834;
  int v835;
  int v836;
  int v837;
  int v838;
  int v839;
  int v840;
  unsigned int v841;
  int v842;
  int v843;
  unsigned int v844;
  unsigned int v845;
  unsigned int v846;
  unsigned int v847;
  unsigned int v848;
  unsigned int v849;
  int v850;
  unsigned int v851;
  int v852;
  int v853;
  int v854;
  int v855;
  int v856;
  int v857;
  int v858;
  int v859;
  int v860;
  int v861;
  int v862;
  int v863;
  int v864;
  int v865;
  int v866;
  int v867;
  unsigned int v868;
  int v869;
  int v870;
  int v871;
  int v872;
  int v873;
  int v874;
  int v875;
  int v876;
  int v877;
  int v878;
  unsigned int v879;
  int v880;
  int v881;
  int v882;
  int v883;
  int v884;
  int v885;
  int v886;
  int v887;
  int v888;
  int v889;
  int v890;
  int v891;
  int v892;
  unsigned int v893;
  unsigned int v894;
  unsigned int v895;
  unsigned int v896;
  int v897;
  int v898;
  int v899;
  int v900;
  unsigned int v901;
  unsigned int v902;
  int v903;
  unsigned int v904;
  int v905;
  int v906;
  int v907;
  int v908;
  int v909;
  int v910;
  int v911;
  int v912;
  int v913;
  int v914;
  int v915;
  int v916;
  int v917;
  int v918;
  int v919;
  unsigned int v920;
  unsigned int v921;
  int v922;
  int v923;
  int v924;
  int v925;
  int v926;
  int v927;
  int v928;
  int v929;
  unsigned int v930;
  unsigned int v931;
  int v932;
  int v933;
  int v934;
  unsigned int v935;
  unsigned int v936;
  int v937;
  int v938;
  int v939;
  int v940;
  int v941;
  int v942;
  int v943;
  int v944;
  int v945;
  unsigned int v946;
  int v947;
  int v948;
  unsigned int v949;
  int v950;
  int v951;
  unsigned int v952;
  int v953;
  int v954;
  int v955;
  unsigned int v956;
  unsigned int v957;
  int v958;
  int v959;
  int v960;
  int v961;
  int v962;
  int v963;
  int v964;
  int v965;
  int v966;
  int v967;
  int v968;
  int v969;
  int v970;
  int v971;
  int v972;
  int v973;
  int v974;
  int v975;
  int v976;
  int v977;
  int v978;
  int v979;
  int v980;
  unsigned int v981;
  unsigned int v982;
  unsigned int v983;
  unsigned int v984;
  unsigned int v985;
  unsigned int v986;
  unsigned int v987;
  int v988;
  int v989;
  int v990;
  int v991;
  int v992;
  int v993;
  unsigned int v994;
  unsigned int v995;
  int v996;
  int v997;
  unsigned int v998;
  int v999;
  int v1000;
  int v1001;
  int v1002;
  int v1003;
  int v1004;
  int v1005;
  int v1006;
  int v1007;
  int v1008;
  int v1009;
  int v1010;
  int v1011;
  int v1012;
  int v1013;
  int v1014;
  int v1015;
  int v1016;
  int v1017;
  int v1018;
  int v1019;
  int v1020;
  int v1021;
  int v1022;
  int v1023;
  int v1024;
  int v1025;
  int v1026;
  int v1027;
  int v1028;
  int v1029;
  int v1030;
  unsigned int v1031;
  unsigned int v1032;
  unsigned int v1033;
  int v1034;
  int v1035;
  int v1036;
  int v1037;
  int v1038;
  int v1039;
  int v1040;
  int v1041;
  int v1042;
  int v1043;
  int v1044;
  int v1045;
  int v1046;
  int v1047;
  unsigned int v1048;
  int v1049;
  int v1050;
  int v1051;
  int v1052;
  int v1053;
  int v1054;
  unsigned int v1055;
  uint64_t v1056;
  uint64_t v1057;
  unsigned int v1058;
  int v1059;
  int v1060;
  uint64_t v1061;
  char *v1062;
  uint64_t v1063;
  char *v1064;
  unsigned int v1065;
  int v1066;
  int v1067;
  int v1068;
  int v1069;
  int v1070;
  int v1071;
  int v1072;
  int v1073;
  int v1074;
  int v1075;
  int v1076;
  int v1077;
  unsigned int v1078;
  int v1079;
  int v1080;
  int v1081;
  int v1082;
  int v1083;
  int v1084;
  int v1085;
  int v1086;
  int v1087;
  int v1088;
  int v1089;
  int v1090;
  int v1091;
  int v1092;
  int v1093;
  int v1094;
  int v1095;
  int v1096;
  int v1097;
  int v1098;
  int v1099;
  int v1100;
  int v1101;
  int v1102;
  int v1103;
  int v1104;
  int v1105;
  int v1106;
  int v1107;
  int v1108;
  int v1109;
  int v1110;
  int v1111;
  int v1112;
  int v1113;
  int v1114;
  int v1115;
  int v1116;
  int v1117;
  int v1118;
  int v1119;
  int v1120;
  int v1121;
  int v1122;
  int v1123;
  int v1124;
  int v1125;
  int v1126;
  int v1127;
  int v1128;
  int v1129;
  int v1130;
  int v1131;
  int v1132;
  int v1133;
  int v1134;
  int v1135;
  int v1136;
  int v1137;
  int v1138;
  unsigned int v1139;
  int v1140;
  int v1141;
  _DWORD *v1142;
  unsigned int v1143;
  int v1144;
  unsigned int v1145;
  uint64_t v1146;
  int v1147;
  uint64_t v1148;
  int v1149;
  unsigned int v1150;
  int v1151;
  unsigned int v1152;
  int v1153;
  unsigned int v1154;
  int v1155;
  int v1156;
  int v1157;
  int v1158;
  _DWORD *v1159;
  uint64_t v1160;
  uint64_t *v1161;
  uint64_t v1162;
  unsigned int v1163;
  int v1164;
  unsigned int v1165;
  int v1166;
  unsigned int v1167;
  int v1168;
  uint64_t v1169;
  uint64_t v1170;
  int v1171;
  uint64_t v1172;
  uint64_t v1173;
  uint64_t *v1174;
  uint64_t v1175;
  char *v1176;
  int v1177;
  char *v1178;
  uint64_t v1179;
  unsigned int v1180;
  int v1181;
  uint64_t v1182;
  uint64_t v1183;
  unsigned int v1184;
  int v1185;
  unsigned int v1186;
  int v1187;
  int v1188;
  unsigned int v1189;
  int v1190;
  unsigned int v1191;
  int v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  _DWORD *v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t *v1200;
  int v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  unsigned int v1207;
  int v1208;
  unsigned int v1209;
  int v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  int v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  char *v1219;
  uint64_t v1220;
  int v1221;
  char *v1222;
  uint64_t v1223;
  uint64_t v1224;
  unsigned int v1225;
  int v1226;
  unsigned int v1227;
  int v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  char *v1235;
  char *v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  char *v1240;
  char *v1241;
  char *v1242;
  uint64_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  uint64_t v1249;
  char *v1250;
  char *v1251;
  uint64_t v1252;
  uint64_t v1253;
  uint64_t v1254;
  uint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  uint64_t v1259;
  uint64_t v1260;
  uint64_t v1261;
  char *v1262;
  char *v1263;
  uint64_t v1264;
  uint64_t v1265;
  uint64_t v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  char *v1272;
  uint64_t v1273;
  char *v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  int v1279;
  uint64_t v1280;
  uint64_t v1281;
  uint64_t v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  uint64_t v1289;
  uint64_t v1290;

  v18 = v11;
  v19 = *(_DWORD *)(v13 + 9520);
  *(_DWORD *)(v13 + 9472) = *(_DWORD *)(v13 + 8612) ^ v19 ^ 0xD72652DF ^ *(_DWORD *)(v13 + 7688);
  *(_DWORD *)(v13 + 7664) = v14;
  *(_DWORD *)(v13 + 8288) = a8;
  v20 = v15;
  v22 = *(_DWORD *)(v13 + 9592);
  *(_DWORD *)(v13 + 8612) = v12;
  v23 = v16;
  v25 = ((a7 & (v15 & 0xA2688C80 ^ 0xD1344640)) >> a6) + ((v22 & (v15 & 0xA2688C80 ^ 0xD1344640)) << v16);
  v26 = 33686018 * (*(_DWORD *)(v13 + 9440) ^ 0x685C36F);
  v27 = *(_DWORD *)(v13 + 9608);
  v28 = v9;
  v29 = *(_DWORD *)(v13 + 9584);
  *(_DWORD *)(v13 + 7944) = v10;
  v30 = v8;
  v31 = *(_QWORD *)(v13 + 4536);
  *(_DWORD *)(v13 + 9440) = ((unint64_t)((v27 ^ 0x1014C0C0) & (v26 & 0x10688C80 ^ 0x8344640u)) << v9) ^ v25 ^ ((unint64_t)(v29 & (v26 & 0x10688C80 ^ 0x8344640)) >> v8) ^ *(_DWORD *)(v13 + 9008) ^ __ROR4__(*(_DWORD *)(v31 + 4 * BYTE1(v17)), 24) ^ __ROR4__(*(_DWORD *)(v31 + ((v17 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v31 + 4 * v17) ^ __ROR4__(*(_DWORD *)(v31 + 4 * BYTE2(v17)), 16);
  *(_DWORD *)(v13 + 7680) = *(_DWORD *)(v13 + 9624) - 1369494618 - ((2 * *(_DWORD *)(v13 + 9624)) & 0x5CBE574C);
  v32 = *(_DWORD *)(v13 + 8964);
  *(_DWORD *)(v13 + 7712) ^= ((((v27 ^ 0x2017C0DF) & (v32 & 0x4FAFEA9A ^ 0x27D7F54D)) << v23) | ((v29 & (v32 & 0x4FAFEA9A ^ 0x27D7F54D)) >> a6)) ^ ((unint64_t)(a7 & (v20 & 0x6F8FCABA ^ 0x37C7E55D)) >> v8) ^ ((unint64_t)(v22 & (v20 & 0x6F8FCABA ^ 0x37C7E55D)) << v9);
  *(_DWORD *)(v13 + 7648) = (((unint64_t)((v27 ^ 0x301700DF) & (v32 & 0xBF3E0CB6 ^ 0x5F9F065B)) << v23) | ((unint64_t)(v29 & (v32 & 0xBF3E0CB6 ^ 0x5F9F065B)) >> v8)) ^ (((a7 & (v20 & 0x9F1E2C96 ^ 0x4F8F164B)) >> a6) + ((unint64_t)(v22 & (v20 & 0x9F1E2C96 ^ 0x4F8F164B)) << v9));
  *(_DWORD *)(v13 + 7688) = ((((v27 ^ 0x101700DE) & (v20 & 0x9BDE399C ^ 0xCDEF1CCE)) << v23)
                           + ((unint64_t)(v29 & (v20 & 0x9BDE399C ^ 0xCDEF1CCE)) >> v8)) ^ (((a7 & (v32 & 0xB6F314B0 ^ 0x5B798A58)) >> a6)
                                                                                                 + ((unint64_t)(v22 & (v32 & 0xB6F314B0 ^ 0x5B798A58)) << v9));
  *(_DWORD *)(v13 + 7656) = ((unint64_t)(a7 & (v20 & 0xBE190EB2 ^ 0xDF0C8759)) >> v8) ^ ((unint64_t)(v22 & (v20 & 0xBE190EB2 ^ 0xDF0C8759)) << v9);
  *(_DWORD *)(v13 + 7640) = (((v27 ^ 0x101600DF) & (v32 & 0x9334239E ^ 0x499A11CF)) << v23)
                          + ((v29 & (v32 & 0x9334239E ^ 0x499A11CF)) >> a6);
  *(_DWORD *)(v13 + 7632) = ((unint64_t)(v29 & (v20 & 0x89004286 ^ 0xC4802143)) >> v8) | ((unint64_t)(v22 & (v20 & 0x89004286 ^ 0xC4802143)) << v9);
  *(_DWORD *)(v13 + 7616) = (((v27 ^ 0x3017C00C) & (v20 & 0xF6BDFA08 ^ 0xFB5EFD04)) << v23) | ((a7 & (v20 & 0xF6BDFA08 ^ 0xFB5EFD04)) >> a6);
  *(_DWORD *)(v13 + 7592) = ((unint64_t)(v29 & (v32 & 0x400B4CBE ^ 0xA005A65F)) >> v8) | ((unint64_t)(v22 & (v32 & 0x400B4CBE ^ 0xA005A65F)) << v9);
  v33 = (*(_DWORD *)(v13 + 7704) & 0xCE ^ 0x10CA17CE) + (*(_DWORD *)(v13 + 7704) & 0xCE);
  *(_DWORD *)(v13 + 7704) = ((unint64_t)(v29 & (v32 & 0x9722992A ^ 0x4B914C95)) >> v8) | ((unint64_t)(v22 & (v32 & 0x9722992A ^ 0x4B914C95)) << v23);
  v34 = *(_DWORD *)(v13 + 9656);
  *(_DWORD *)(v13 + 7584) = ((unint64_t)((v33 ^ v20 & 0x21942F9C) & v34) << v9) | (((v33 ^ v20 & 0x21942F9C) & a7) >> a6);
  *(_DWORD *)(v13 + 7784) = (((unint64_t)((v27 ^ 0x30160047) & (v20 & 0x32EC3446 ^ 0x19761A23u)) << v9) | ((unint64_t)(a7 & (v20 & 0x32EC3446 ^ 0x19761A23)) >> v8)) ^ (((v22 & (v32 & 0x845A82F0 ^ 0x422D4178)) << v23) | ((v29 & (v32 & 0x845A82F0 ^ 0x422D4178)) >> a6)) ^ *(_QWORD *)(v13 + 7784);
  *(_DWORD *)(v13 + 7776) ^= ((unint64_t)((v27 ^ 0x1700DE) & (v32 & 0x84E60CFC ^ 0x4273067E)) << v9) ^ (((a7 & (v20 & 0x2446AC5C ^ 0x1223562E)) >> a6) | ((v22 & (v20 & 0x2446AC5C ^ 0x1223562E)) << v23)) ^ ((unint64_t)(v29 & (v32 & 0x84E60CFC ^ 0x4273067E)) >> v8);
  *(_DWORD *)(v13 + 7576) = ((unint64_t)(v29 & (v32 & 0x887BA7B4 ^ 0x443DD3DA)) >> v8) ^ ((unint64_t)(v22 & (v32 & 0x887BA7B4 ^ 0x443DD3DA)) << v9);
  *(_DWORD *)(v13 + 7424) = (((v27 ^ 0x3017809E) & (v20 & 0x28DB0714 ^ 0x146D838A)) << v23)
                          + ((a7 & (v20 & 0x28DB0714 ^ 0x146D838A)) >> a6);
  *(_DWORD *)(v13 + 7448) = ((unint64_t)(a7 & (v20 & 0x1C3EFCF2 ^ 0xE1F7E79)) >> v8) | ((unint64_t)(v22 & (v20 & 0x1C3EFCF2 ^ 0xE1F7E79)) << v23);
  *(_DWORD *)(v13 + 7888) = ((unint64_t)((v27 ^ 0x3006C0DE) & (v20 & 0xFB049BD4 ^ 0xFD824DEA)) << v23) ^ ((unint64_t)(v29 & (v20 & 0xFB049BD4 ^ 0xFD824DEA)) >> v8) ^ (((a7 & (v32 & 0x5BA43B74 ^ 0xADD21DBA)) >> a6) + ((unint64_t)(v22 & (v32 & 0x5BA43B74 ^ 0xADD21DBA)) << v9)) ^ *(_QWORD *)(v13 + 7888);
  *(_DWORD *)(v13 + 7952) ^= ((unint64_t)((v27 ^ 0x301740DF) & (v32 & 0x78264F56 ^ 0xBC1327AB)) << v23) ^ (((unint64_t)(v22 & (v20 & 0x58066F76 ^ 0xAC0337BB)) << v9) | ((v29 & (v20 & 0x58066F76 ^ 0xAC0337BB)) >> a6)) ^ ((unint64_t)(a7 & (v32 & 0x78264F56 ^ 0xBC1327AB)) >> v8);
  *(_DWORD *)(v13 + 7416) = (((v27 ^ 0x3004C0CF) & (v32 & 0x7BC8D1CA ^ 0x3DE468E5)) << v23)
                          + ((unint64_t)(v29 & (v32 & 0x7BC8D1CA ^ 0x3DE468E5)) >> v8);
  *(_DWORD *)(v13 + 7304) = a5;
  v35 = v29;
  *(_DWORD *)(v13 + 7792) ^= (((unint64_t)((v27 ^ 0x3007401F) & (v26 & 0x3A0A6E3E ^ 0x1D05371Fu)) << v9) | ((a7 & (v26 & 0x3A0A6E3E ^ 0x1D05371F)) >> a6)) ^ ((unint64_t)(v29 & (v20 & 0x1A2A4E1E ^ 0xD15270F)) >> v8) ^ ((unint64_t)(v22 & (v20 & 0x1A2A4E1E ^ 0xD15270F)) << v23);
  *(_DWORD *)(v13 + 7408) = (((unint64_t)((v27 ^ 0x1014C018) & (v32 & 0x90B8E430 ^ 0xC85C7218)) << v9) | ((a7 & (v32 & 0x90B8E430 ^ 0xC85C7218)) >> a6)) ^ ((unint64_t)(v29 & (v20 & 0xB098C410 ^ 0xD84C6208)) >> v8) ^ ((unint64_t)(v22 & (v20 & 0xB098C410 ^ 0xD84C6208)) << v23);
  v36 = *(_DWORD *)(v13 + 8984);
  *(_DWORD *)(v13 + 7280) = (((unint64_t)(v36 & (v32 & 0x161D6578 ^ 0x8B0EB2BC)) << v23) | ((unint64_t)(a7 & (v32 & 0x161D6578 ^ 0x8B0EB2BC)) >> v8)) ^ (((unint64_t)(v22 & (v20 & 0xA017964 ^ 0x8500BCB2)) << v9) | ((v29 & (v20 & 0xA017964 ^ 0x8500BCB2)) >> a6)) ^ *(_DWORD *)(v13 + 7976);
  *(_DWORD *)(v13 + 7976) = ((a7 & (v20 & 0x7A2246C6 ^ 0xBD112363)) >> a6) ^ (((v27 ^ 0x301340C7) & (v20 & 0x7A2246C6 ^ 0xBD112363)) << v23) ^ (((unint64_t)(v29 & (v32 & 0x663E5ADA ^ 0xB31F2D6D)) >> v8) | ((unint64_t)(v22 & (v32 & 0x663E5ADA ^ 0xB31F2D6D)) << v9)) ^ *(_DWORD *)(v13 + 7936);
  *(_DWORD *)(v13 + 7936) = ((unint64_t)((v27 ^ 0x3017809E) & (v20 & 0xD56F3714 ^ 0x6AB79B8A)) << v9) ^ ((unint64_t)(v29 & (v20 & 0xD56F3714 ^ 0x6AB79B8A)) >> v8) ^ (((a7 & (v32 & 0xC9732B08 ^ 0x64B99584)) >> a6) | ((v22 & (v32 & 0xC9732B08 ^ 0x64B99584)) << v23)) ^ *(_QWORD *)(v13 + 7992);
  *(_DWORD *)(v13 + 7296) = ((a7 & (v20 & 0x11CC82F2 ^ 0x88E64179)) >> a6) ^ (((v27 ^ 0x1006C0DB) & (v20 & 0x11CC82F2 ^ 0x88E64179)) << v23) ^ (((unint64_t)(v29 & (v32 & 0x8D501E6E ^ 0xC6A80F37)) >> v8) + ((unint64_t)(v22 & (v32 & 0x8D501E6E ^ 0xC6A80F37)) << v9));
  *(_DWORD *)(v13 + 7272) = ((unint64_t)(a7 & (v26 & 0x35E5EAE0 ^ 0x1AF2F570)) >> v8) | ((unint64_t)(v22 & (v26 & 0x35E5EAE0 ^ 0x1AF2F570)) << v23);
  *(_DWORD *)(v13 + 7992) = (((unint64_t)((v27 ^ 0x201180DF) & (v20 & 0xCCB13FEA ^ 0xE6589FF5)) << v9) | ((unint64_t)(v29 & (v20 & 0xCCB13FEA ^ 0xE6589FF5)) >> v8)) ^ (((a7 & (v32 & 0x502DA376 ^ 0xA816D1BB)) >> a6) | ((v22 & (v32 & 0x502DA376 ^ 0xA816D1BB)) << v23)) ^ *(_DWORD *)(v13 + 7984);
  *(_DWORD *)(v13 + 8008) = (((unint64_t)((v27 ^ 0x2006C0DF) & (v32 & 0xCACCD17A ^ 0x656668BD)) << v9) | ((v29 & (v32 & 0xCACCD17A ^ 0x656668BD)) >> a6)) ^ ((unint64_t)(a7 & (v20 & 0x56504DE6 ^ 0x2B2826F3)) >> v8) ^ ((unint64_t)(v22 & (v20 & 0x56504DE6 ^ 0x2B2826F3)) << v23) ^ *(_QWORD *)(v13 + 8008);
  v37 = (((unint64_t)((v27 ^ 0x3016C013) & (v20 & 0xEFB48822 ^ 0x77DA4411)) << v9) | ((unint64_t)(a7 & (v20 & 0xEFB48822 ^ 0x77DA4411)) >> v8)) ^ (((v22 & (v32 & 0x96CDF15A ^ 0xCB66F8AD)) << v23) | ((v29 & (v32 & 0x96CDF15A ^ 0xCB66F8AD)) >> a6)) ^ *(_DWORD *)(v13 + 9424);
  *(_DWORD *)(v13 + 7984) = ((unint64_t)((v27 ^ 0x1016C0DB) & (v20 & 0x96BC98D2 ^ 0xCB5E4C69)) << v9)
                          + ((unint64_t)(v29 & (v20 & 0x96BC98D2 ^ 0xCB5E4C69)) >> v8);
  *(_DWORD *)(v13 + 7264) = (((v27 ^ 0x300340DF) & (v32 & 0x7C02596A ^ 0x3E012CB5)) << v23) | ((v29 & (v32 & 0x7C02596A ^ 0x3E012CB5)) >> a6);
  *(_DWORD *)(v13 + 7248) = ((unint64_t)(a7 & (v20 & 0x57B2012 ^ 0x82BD9009)) >> v8) | ((unint64_t)(v22 & (v20 & 0x57B2012 ^ 0x82BD9009)) << v9);
  v38 = (((unint64_t)((v27 ^ 0x3010005F) & (v32 & 0x71A0246E ^ 0x38D01237u)) << v9) | ((unint64_t)(a7 & (v32 & 0x71A0246E ^ 0x38D01237)) >> v8)) ^ (((v22 & (v20 & 0x8D95D16 ^ 0x846CAE8B)) << v23) | ((v29 & (v20 & 0x8D95D16 ^ 0x846CAE8B)) >> a6)) ^ a4;
  *(_DWORD *)(v13 + 6332) = v38;
  v39 = ((a7 & 0x61ACB23E ^ 0x61ACB23E) + (a7 & 0x61ACB23E)) ^ v32 & 0xC359647C;
  *(_DWORD *)(v13 + 9424) = (((unint64_t)((v27 ^ 0x3003005F) & (v32 & 0xA002107A ^ 0x5001083D)) << v9)
                           + ((v29 & (v32 & 0xA002107A ^ 0x5001083D)) >> a6)) ^ (((unint64_t)(a7 & (v20 & 0xA80A1872 ^ 0x54050C39)) >> v8)
                                                                               + ((v22 & (v20 & 0xA80A1872 ^ 0x54050C39)) << v23)) ^ *(_DWORD *)(v13 + 8020);
  *(_DWORD *)(v13 + 9080) = (((unint64_t)((v27 ^ 0x2015C05E) & v39) << v9) | ((v39 & v29) >> a6)) ^ (((unint64_t)(a7 & (v20 & 0xCB516C74 ^ 0x65A8B63A)) >> v8) | ((unint64_t)(v22 & (v20 & 0xCB516C74 ^ 0x65A8B63A)) << v23)) ^ *(_DWORD *)(v13 + 8000);
  *(_DWORD *)(v13 + 8888) ^= ((v22 & (v26 & 0x2E366742 ^ 0x171B33A1)) << v23) ^ ((v29 & (v26 & 0x2E366742 ^ 0x171B33A1)) >> a6) ^ (((unint64_t)((v27 ^ 0x301740CF) & (v20 & 0x263E6F4A ^ 0x131F37A5u)) << v9) + ((unint64_t)(a7 & (v20 & 0x263E6F4A ^ 0x131F37A5)) >> v8));
  *(_DWORD *)(v13 + 7312) = v27 ^ 0x3017C01F;
  *(_DWORD *)(v13 + 8024) = (((unint64_t)((v27 ^ 0x2015C09C) & (v32 & 0xC239B328 ^ 0xE11CD994)) << v9) | ((unint64_t)(v29 & (v32 & 0xC239B328 ^ 0xE11CD994)) >> v8)) ^ (((a7 & (v20 & 0xCA31BB20 ^ 0xE518DD90)) >> a6) + ((v22 & (v20 & 0xCA31BB20 ^ 0xE518DD90)) << v23)) ^ *(_QWORD *)(v13 + 8024);
  *(_DWORD *)(v13 + 8000) = ((v20 & 0x8A011A20 ^ 0xAF455AA5) + (v20 & 0x8A011A20)) ^ v20 & 0x5E8AB54A;
  *(_DWORD *)(v13 + 8020) = ((unint64_t)((v27 ^ 0x3017C01F) & (v20 & 0x36A7F02A ^ 0x1B53F815u)) << v9) ^ ((unint64_t)(v29 & (v20 & 0x36A7F02A ^ 0x1B53F815)) >> v8) ^ (((a7 & (v32 & 0xB8297EA4 ^ 0x5C14BF52)) >> a6) + ((v22 & (v32 & 0xB8297EA4 ^ 0x5C14BF52)) << v23));
  *(_DWORD *)(v13 + 7240) = ((unint64_t)(a7 & (v32 & 0xD0043BC4 ^ 0xE8021DE2)) >> v8) | ((unint64_t)(v22 & (v32 & 0xD0043BC4 ^ 0xE8021DE2)) << v23);
  *(_DWORD *)(v13 + 7232) = ((unint64_t)(v36 & (v32 & 0xA2EF97D4 ^ 0xD177CBEA)) << v9) | ((unint64_t)(a7 & (v32 & 0xA2EF97D4 ^ 0xD177CBEA)) >> v8);
  *(_DWORD *)(v13 + 7224) = (((unint64_t)((v27 ^ 0x3007C083) & (v32 & 0xE34BF902 ^ 0x71A5FC81)) << v9) | ((v29 & (v32 & 0xE34BF902 ^ 0x71A5FC81)) >> a6)) ^ (((unint64_t)(a7 & (v20 & 0x6DC5778C ^ 0x36E2BBC6)) >> v8) + ((v22 & (v20 & 0x6DC5778C ^ 0x36E2BBC6)) << v23));
  *(_DWORD *)(v13 + 7216) = ((unint64_t)(v29 & (v26 & 0x30003C0E ^ 0x98001E07)) >> v8) ^ ((unint64_t)(v22 & (v26 & 0x30003C0E ^ 0x98001E07)) << v9);
  *(_DWORD *)(v13 + 7192) = (((v27 ^ 0x1015C0D7) & (v20 & 0x99A995A6 ^ 0x4CD4CAD3)) << v23)
                          + ((a7 & (v20 & 0x99A995A6 ^ 0x4CD4CAD3)) >> a6);
  *(_DWORD *)(v13 + 7184) = ((a7 & (v20 & 0x12E9CF50 ^ 0x974E7A8)) >> a6) ^ ((unint64_t)(v22 & (v20 & 0x12E9CF50 ^ 0x974E7A8)) << v9) ^ ((((v27 ^ 0x300040DC) & (v32 & 0xBB4066F8 ^ 0xDDA0337C)) << v23) + ((unint64_t)(v29 & (v32 & 0xBB4066F8 ^ 0xDDA0337C)) >> v8));
  *(_DWORD *)(v13 + 7176) = ((v22 & (v32 & 0x7B2958B0 ^ 0x3D94AC58)) << v23) | ((v29 & (v32 & 0x7B2958B0 ^ 0x3D94AC58)) >> a6);
  *(_DWORD *)(v13 + 7168) = ((unint64_t)((v27 ^ 0x3000C09C) & (v20 & 0xD280F118 ^ 0xE940788C)) << v9) | ((unint64_t)(a7 & (v20 & 0xD280F118 ^ 0xE940788C)) >> v8);
  *(_QWORD *)(v13 + 7208) = v17;
  v40 = v20;
  *(_DWORD *)(v13 + 7160) = ((((v27 ^ 0x3017C0D3) & (v20 & 0xAF56E7A2 ^ 0x57AB73D1)) << v23) | ((a7 & (v20 & 0xAF56E7A2 ^ 0x57AB73D1)) >> a6)) ^ (((unint64_t)(v29 & (v26 & 0x6FF4E0A ^ 0x837FA705)) >> v8) | ((unint64_t)(v22 & (v26 & 0x6FF4E0A ^ 0x837FA705)) << v9));
  *(_DWORD *)(v13 + 7144) = ((unint64_t)((v27 ^ 0x17C09F) & (v32 & 0x8956FD1A ^ 0x44AB7E8D)) << v23) ^ (((a7 & (v20 & 0x2DF259BE ^ 0x16F92CDF)) >> a6) + ((unint64_t)(v22 & (v20 & 0x2DF259BE ^ 0x16F92CDF)) << v9)) ^ ((unint64_t)(v29 & (v32 & 0x8956FD1A ^ 0x44AB7E8D)) >> v8);
  *(_DWORD *)(v13 + 7112) = ((unint64_t)(a7 & (v32 & 0xC7358F30 ^ 0x639AC798)) >> v8) ^ ((unint64_t)(v22 & (v32 & 0xC7358F30 ^ 0x639AC798)) << v9);
  *(_DWORD *)(v13 + 6936) = ((((v27 ^ 0x3007C0DF) & (v32 & 0x7F0770DE ^ 0x3F83B86F)) << v23) | ((v29 & (v32 & 0x7F0770DE ^ 0x3F83B86F)) >> a6)) ^ (((unint64_t)(a7 & (v20 & 0xDBA3D47A ^ 0x6DD1EA3D)) >> v8) | ((unint64_t)(v22 & (v20 & 0xDBA3D47A ^ 0x6DD1EA3D)) << v9)) ^ *(_DWORD *)(v13 + 7696);
  *(_DWORD *)(v13 + 7200) = (((unint64_t)((v27 ^ 0x3017C017) & (v20 & 0x67D55626 ^ 0xB3EAAB13)) << v9) | ((unint64_t)(a7 & (v20 & 0x67D55626 ^ 0xB3EAAB13)) >> v8)) ^ (((v22 & (v32 & 0xC371F282 ^ 0xE1B8F941)) << v23) + ((v29 & (v32 & 0xC371F282 ^ 0xE1B8F941)) >> a6)) ^ v18;
  *(_DWORD *)(v13 + 6944) = ((unint64_t)((v27 ^ 0x201700CC) & (v20 & 0xC36A0288 ^ 0xE1B50144)) << v9)
                          + ((unint64_t)(a7 & (v20 & 0xC36A0288 ^ 0xE1B50144)) >> v8);
  *(_DWORD *)(v13 + 6760) = ((((v27 ^ 0x2010C04C) & (v32 & 0xC7E0BA48 ^ 0xE3F05D24)) << v23)
                           + ((a7 & (v32 & 0xC7E0BA48 ^ 0xE3F05D24)) >> a6)) ^ (((unint64_t)(v29 & (v20 & 0xC8EFB546 ^ 0x6477DAA3)) >> v8) | ((unint64_t)(v22 & (v20 & 0xC8EFB546 ^ 0x6477DAA3)) << v9));
  v41 = (((unint64_t)((v27 ^ 0x3006C01F) & (v20 & 0x5004BC16 ^ 0xA8025E0B)) << v9)
       + ((unint64_t)(a7 & (v20 & 0x5004BC16 ^ 0xA8025E0B)) >> v8)) ^ (((v22 & (v32 & 0x5F0BB318 ^ 0x2F85D98C)) << v23)
                                                                            + ((v29 & (v32 & 0x5F0BB318 ^ 0x2F85D98C)) >> a6));
  *(_DWORD *)(v13 + 6336) = v41 - 1369494618 - ((2 * v41) & 0x5CBE574C);
  v42 = v32 & 0x310574AC ^ 0x11097425;
  *(_DWORD *)(v13 + 6744) = ((unint64_t)(v34 & ((v42 | v32 & 0xA928842) ^ 0xCC28A52)) << v9) ^ (((a7 & (v20 & 0x3498F3E0 ^ 0x9A4C79F0)) >> a6) + ((v22 & (v20 & 0x3498F3E0 ^ 0x9A4C79F0)) << v23)) ^ ((unint64_t)(v29 & ((v42 | v32 & 0xA928842) ^ 0xCC28A52)) >> v8);
  *(_DWORD *)(v13 + 6320) = ((unint64_t)((v27 ^ 0x3007C0DF) & (v32 & 0x668EBABE ^ 0x33475D5Fu)) << v9) | ((unint64_t)(a7 & (v32 & 0x668EBABE ^ 0x33475D5F)) >> v8);
  *(_DWORD *)(v13 + 6296) = ((unint64_t)(v29 & (v20 & 0x83DEF070 ^ 0x41EF7838)) >> v8) | ((unint64_t)(v22 & (v20 & 0x83DEF070 ^ 0x41EF7838)) << v23);
  v43 = *(_DWORD *)(v13 + 8768);
  LODWORD(v31) = (2 * (((v42 & 0x1000642C ^ 0x54F26D2C) + (v42 & 0x1008642D)) & v43)) ^ 0x54FA6D2D;
  v44 = v34;
  *(_DWORD *)(v13 + 6216) = ((unint64_t)(v34 & v31) << v9) | ((a7 & v31) >> a6);
  *(_DWORD *)(v13 + 6128) = ((unint64_t)(v34 & (v20 & 0xB975629A ^ 0xDCBAB14D)) << v9)
                          + ((v35 & (v20 & 0xB975629A ^ 0xDCBAB14D)) >> a6);
  *(_DWORD *)(v13 + 6084) = ((unint64_t)(a7 & (v32 & 0x935F48B0 ^ 0xC9AFA458)) >> v8) ^ ((unint64_t)(v22 & (v32 & 0x935F48B0 ^ 0xC9AFA458)) << v23);
  *(_DWORD *)(v13 + 6072) = ((((v27 ^ 0x3017C090) & (v32 & 0xF15BF520 ^ 0x78ADFA90)) << v23)
                           + ((a7 & (v32 & 0xF15BF520 ^ 0x78ADFA90)) >> a6)) ^ ((unint64_t)(v35 & (v20 & 0xDB71DF0A ^ 0x6DB8EF85)) >> v8) ^ ((unint64_t)(v22 & (v20 & 0xDB71DF0A ^ 0x6DB8EF85)) << v9);
  *(_DWORD *)(v13 + 6080) = ((unint64_t)(a7 & (v20 & 0x25A0401A ^ 0x92D0200D)) >> v8)
                          + ((unint64_t)(v22 & (v20 & 0x25A0401A ^ 0x92D0200D)) << v9);
  v45 = (*(_DWORD *)(v13 + 9012) - 1854256458) & 0x6E85BBDF;
  *(_DWORD *)(v13 + 7320) = v45;
  LODWORD(v31) = (v45 ^ 0x9AD) & (v37 + v38 + 26);
  *(_DWORD *)(v13 + 6068) = ((a7 & (v20 & 0xA4740792 ^ 0xD23A03C9)) >> a6) ^ ((v22 & (v20 & 0xA4740792 ^ 0xD23A03C9)) << v23) ^ ((unint64_t)((v27 ^ 0x1600DB) & (v32 & 0x845427B2 ^ 0xC22A13D9)) << v28) ^ ((unint64_t)(v35 & (v32 & 0x845427B2 ^ 0xC22A13D9)) >> v8) ^ *(_DWORD *)(v13 + 8408);
  v46 = v26;
  *(_DWORD *)(v13 + 7336) = v26;
  *(_DWORD *)(v13 + 8408) = ((unint64_t)(a7 & (v26 & 0x129B801C ^ 0x94DC00E)) >> v8) ^ ((unint64_t)(v22 & (v26 & 0x129B801C ^ 0x94DC00E)) << v23);
  *(_DWORD *)(v13 + 8440) ^= ((a7 & (v20 & 0x4CBE14AC ^ 0xA65F0A56)) >> a6) ^ ((unint64_t)(v22 & (v20 & 0x4CBE14AC ^ 0xA65F0A56)) << v28) ^ (((unint64_t)((v27 ^ 0x301380C0) & (v32 & 0x61933980 ^ 0x30C99CC0u)) << v23) | ((unint64_t)(v35 & (v32 & 0x61933980 ^ 0x30C99CC0)) >> v8));
  *(_DWORD *)(v13 + 6064) = v27 ^ 0x1017C0DE;
  v47 = v27;
  v48 = (((unint64_t)((v27 ^ 0x1017C0DE) & (v32 & 0x941BDEBC ^ 0x4A0DEF5E)) << v28) | ((v35 & (v32 & 0x941BDEBC ^ 0x4A0DEF5E)) >> a6)) ^ ((unint64_t)(a7 & (v20 & 0xB936F390 ^ 0xDC9B79C8)) >> v8) ^ ((unint64_t)(v22 & (v20 & 0xB936F390 ^ 0xDC9B79C8)) << v23) ^ *(_DWORD *)(v13 + 8368);
  v49 = (16843009 * v31) ^ (2 * ((16843009 * v31) & *(_QWORD *)(v13 + 9688)));
  v50 = 16843009 * v31;
  v51 = v49 & v35;
  *(_QWORD *)(v13 + 6992) = v51;
  v52 = v51 >> a6;
  v53 = v49 & v34;
  v54 = (_DWORD)v53 << v23;
  *(_DWORD *)(v13 + 8368) = v48 ^ ((v51 >> a6) + ((_DWORD)v53 << v23));
  *(_DWORD *)(v13 + 6060) = ((a7 & (v32 & 0xF358AD2A ^ 0x79AC5695)) >> a6) ^ (((unint64_t)(v35 & (v40 & 0xD3788D0A ^ 0x69BC4685)) >> v8) | ((unint64_t)(v22 & (v40 & 0xD3788D0A ^ 0x69BC4685)) << v23)) ^ ((unint64_t)((v47 ^ 0x3014C09F) & (v32 & 0xF358AD2A ^ 0x79AC5695)) << v28) ^ *(_DWORD *)(v13 + 8680);
  v55 = *(_DWORD *)(v13 + 7648) ^ *(_DWORD *)(v13 + 8672);
  v56 = v28;
  *(_QWORD *)(v13 + 7344) = v53 << v28;
  *(_DWORD *)(v13 + 8680) = v55 ^ ((v53 << v28) + (v51 >> a6));
  *(_DWORD *)(v13 + 7648) = ((v22 & (v32 & 0x1E76F2B0 ^ 0x8F3B7958)) << v23) | ((v35 & (v32 & 0x1E76F2B0 ^ 0x8F3B7958)) >> a6);
  v57 = v40;
  *(_DWORD *)(v13 + 6048) = ((unint64_t)((v47 ^ 0x30004007) & (v40 & 0xA8C04406 ^ 0xD4602203)) << v28) ^ ((unint64_t)(a7 & (v40 & 0xA8C04406 ^ 0xD4602203)) >> v30);
  *(_DWORD *)(v13 + 6044) = ((unint64_t)(v22 & (v32 & 0x6C95B2B0 ^ 0xB64AD958)) << v28)
                          + ((v35 & (v32 & 0x6C95B2B0 ^ 0xB64AD958)) >> a6);
  v58 = v47;
  *(_DWORD *)(v13 + 6040) = (((v47 ^ 0x30138007) & (v40 & 0xDA230406 ^ 0xED118203)) << v23)
                          + ((unint64_t)(a7 & (v40 & 0xDA230406 ^ 0xED118203)) >> v30);
  *(_DWORD *)(v13 + 8672) = *(_DWORD *)(v13 + 7688) ^ *(_DWORD *)(v13 + 8504) ^ ((v53 << v28) | (v51 >> a6));
  *(_DWORD *)(v13 + 8688) = *(_DWORD *)(v13 + 7640) ^ *(_DWORD *)(v13 + 7656) ^ *(_QWORD *)(v13 + 8688);
  *(_DWORD *)(v13 + 9528) ^= *(_DWORD *)(v13 + 7592) ^ v19 ^ *(_DWORD *)(v13 + 7616);
  *(_DWORD *)(v13 + 8664) ^= ((a7 & (v46 & 0x3FB6F430 ^ 0x9FDB7A18)) >> a6) ^ *(_DWORD *)(v13 + 7632) ^ (((v47 ^ 0x3017C018) & (v46 & 0x3FB6F430 ^ 0x9FDB7A18)) << v23);
  v59 = *(_DWORD *)(v13 + 8512) ^ *(_DWORD *)(v13 + 7704);
  v60 = v49 & v22;
  *(_DWORD *)(v13 + 7688) = (_DWORD)v60 << v23;
  LODWORD(v51) = (v51 >> a6) ^ ((_DWORD)v60 << v23);
  *(_DWORD *)(v13 + 7632) = v51;
  *(_DWORD *)(v13 + 8512) = v59 ^ v51 ^ *(_DWORD *)(v13 + 7584);
  *(_DWORD *)(v13 + 8640) ^= *(_DWORD *)(v13 + 7576) ^ v19 ^ *(_DWORD *)(v13 + 7424);
  *(_DWORD *)(v13 + 8504) = *(_DWORD *)(v13 + 7448) ^ ((v35 & (v32 & 0xBC9E5C52 ^ 0x5E4F2E29)) >> a6) ^ ((unint64_t)((v47 ^ 0x3017405B) & (v32 & 0xBC9E5C52 ^ 0x5E4F2E29)) << v28) ^ *(_DWORD *)(v13 + 8392);
  *(_DWORD *)(v13 + 8648) ^= ((unint64_t)(v22 & (v40 & 0x5BE8F1EA ^ 0x2DF478F5)) << v28) ^ v19 ^ ((a7 & (v40 & 0x5BE8F1EA ^ 0x2DF478F5)) >> a6) ^ *(_DWORD *)(v13 + 7416);
  v61 = v60 << v28;
  LODWORD(v60) = (v60 << v28) + v52;
  LODWORD(v28) = *(_DWORD *)(v13 + 8312);
  *(_DWORD *)(v13 + 8656) = *(_DWORD *)(v13 + 7408) ^ *(_QWORD *)(v13 + 8656) ^ v60;
  *(_DWORD *)(v13 + 7672) = v50;
  v62 = v50 ^ (2 * (v50 & v43));
  v63 = v62 & a7;
  v64 = v62 & v44;
  v65 = v63 >> v30;
  *(_DWORD *)(v13 + 8392) = ((v63 >> v30) | ((_DWORD)v64 << v23)) ^ *(_DWORD *)(v13 + 7664);
  v66 = v62 & v35;
  v67 = v66 >> v30;
  *(_DWORD *)(v13 + 8768) = *(_DWORD *)(v13 + 7296) ^ *(_DWORD *)(v13 + 8376) ^ ((v66 >> v30) + ((_DWORD)v64 << v23));
  v68 = v35;
  v69 = v19 ^ ((v35 & (v57 & 0xA979767C ^ 0x54BCBB3E)) >> a6) ^ ((unint64_t)((v58 ^ 0x3015C05E) & (v57 & 0xA979767C ^ 0x54BCBB3E)) << v56) ^ *(_DWORD *)(v13 + 7272) ^ *(_DWORD *)(v13 + 8496);
  v70 = ((v22 & (v32 & 0xEFC5E1AA ^ 0x77E2F0D5)) << v23) ^ v19 ^ ((a7 & (v32 & 0xEFC5E1AA ^ 0x77E2F0D5)) >> a6) ^ *(_DWORD *)(v13 + 7984) ^ *(_DWORD *)(v13 + 8384);
  v71 = v49 & a7;
  v72 = v71 >> a6;
  *(_DWORD *)(v13 + 7552) = v54;
  *(_DWORD *)(v13 + 8496) = v70 ^ ((v71 >> a6) + v54);
  v73 = v62 & v22;
  *(_QWORD *)(v13 + 7640) = v73;
  v74 = v56;
  v75 = v73 << v56;
  *(_DWORD *)(v13 + 8384) = (v75 + (v66 >> v30)) ^ v37;
  LODWORD(v73) = *(_DWORD *)(v13 + 7248) ^ v19 ^ *(_DWORD *)(v13 + 7264);
  *(_QWORD *)(v13 + 7576) = v66 >> v30;
  *(_DWORD *)(v13 + 8888) ^= ((_DWORD)v64 << v23) ^ (v66 >> v30);
  *(_DWORD *)(v13 + 7584) = v71 >> a6;
  *(_DWORD *)(v13 + 8376) = *(_DWORD *)(v13 + 8024) ^ (v71 >> a6) ^ v61;
  v76 = *(_DWORD *)(v13 + 8000);
  v77 = (v58 ^ 0x3007C0CF) & v76;
  v78 = v68 & v76;
  LOBYTE(v76) = a6;
  v79 = v74;
  LODWORD(v77) = v19 ^ (v78 >> a6) ^ (v77 << v74) ^ *(_DWORD *)(v13 + 7240);
  LODWORD(v63) = v63 >> a6;
  *(_DWORD *)(v13 + 7416) = v63;
  *(_DWORD *)(v13 + 7696) = (_DWORD)v64 << v23;
  LODWORD(v63) = v77 ^ (v63 + ((_DWORD)v64 << v23));
  LODWORD(v77) = ((v22 & (v57 & 0x2C61195A ^ 0x96308CAD)) << v23) ^ ((v68 & (v57 & 0x2C61195A ^ 0x96308CAD)) >> a6) ^ *(_DWORD *)(v13 + 7232);
  LODWORD(v74) = *(_DWORD *)(v13 + 8400);
  *(_DWORD *)(v13 + 8024) = v73 ^ v74;
  v80 = v71 >> v30;
  LODWORD(v71) = (v71 >> v30) | v54;
  v81 = v80;
  *(_QWORD *)(v13 + 7424) = v80;
  *(_DWORD *)(v13 + 8400) = v77 ^ v74 ^ v71 ^ *(_DWORD *)(v13 + 8352);
  v82 = *(_QWORD *)(v13 + 6992) >> v30;
  *(_DWORD *)(v13 + 7984) = *(_DWORD *)(v13 + 8020) ^ *(_DWORD *)(v13 + 8032) ^ (v82 + v61);
  LODWORD(v80) = *(_DWORD *)(v13 + 7224) ^ *(_QWORD *)(v13 + 8360);
  LODWORD(v66) = v66 >> a6;
  *(_DWORD *)(v13 + 7448) = v66;
  *(_DWORD *)(v13 + 8352) = v80 ^ (v75 + v66);
  LODWORD(v80) = *(_DWORD *)(v13 + 7216) ^ v19 ^ *(_DWORD *)(v13 + 7192);
  LODWORD(v73) = v67 | ((_DWORD)v64 << v23);
  *(_DWORD *)(v13 + 7592) = v73;
  *(_DWORD *)(v13 + 8360) = v80 ^ v73 ^ *(_DWORD *)(v13 + 8260);
  LODWORD(v80) = *(_DWORD *)(v13 + 8236) ^ v19;
  LODWORD(v73) = *(_DWORD *)(v13 + 7184) ^ v80;
  *(_DWORD *)(v13 + 7776) ^= v61 | v72;
  *(_DWORD *)(v13 + 8236) = v69 ^ (v61 | v72);
  *(_DWORD *)(v13 + 8260) = v73 ^ (v61 | v72);
  LODWORD(v73) = *(_DWORD *)(v13 + 7176) ^ v19 ^ *(_DWORD *)(v13 + 7168);
  v83 = v64 << v79;
  v84 = v79;
  *(_QWORD *)(v13 + 7328) = v79;
  *(_DWORD *)(v13 + 8280) ^= v73 ^ (v65 + (v64 << v79));
  LODWORD(v73) = *(_DWORD *)(v13 + 7160) ^ *(_QWORD *)(v13 + 8264);
  LODWORD(v77) = v28;
  LODWORD(v64) = *(_DWORD *)(v13 + 7144) ^ v28;
  v85 = *(_DWORD *)(v13 + 7688);
  *(_QWORD *)(v13 + 7408) = v82;
  *(_DWORD *)(v13 + 7656) = *(_DWORD *)(v13 + 7712) ^ (v82 + v85);
  *(_DWORD *)(v13 + 7936) ^= v82 + v85;
  *(_DWORD *)(v13 + 8264) = v64 ^ (v82 + v85);
  v86 = v57;
  LODWORD(v67) = *(_DWORD *)(v13 + 9608);
  LODWORD(v64) = ((v68 & (v57 & 0x63912B94 ^ 0x31C895CA)) >> v76) ^ *(_DWORD *)(v13 + 9624) ^ v19 ^ (((v67 ^ 0x301180DE) & (v57 & 0x63912B94 ^ 0x31C895CA)) << v23) ^ *(_DWORD *)(v13 + 7112);
  LODWORD(v71) = *(_DWORD *)(v13 + 8288);
  *(_DWORD *)(v13 + 7704) = v63 ^ v71;
  v87 = *(_DWORD *)(v13 + 7416);
  *(_DWORD *)(v13 + 7712) = *(_DWORD *)(v13 + 6068) ^ v83 ^ v87;
  *(_DWORD *)(v13 + 8032) = v73 ^ (v52 | v85);
  *(_DWORD *)(v13 + 8000) = *(_DWORD *)(v13 + 6936) ^ (v52 | v85);
  *(_DWORD *)(v13 + 8288) = *(_DWORD *)(v13 + 6072) ^ *(_QWORD *)(v13 + 7208) ^ (v65 | v75);
  LODWORD(v73) = *(_DWORD *)(v13 + 6084) ^ v19 ^ *(_DWORD *)(v13 + 6128);
  v88 = *(_DWORD *)(v13 + 7552);
  *(_DWORD *)(v13 + 7264) = v52 | v88;
  v89 = v52;
  *(_DWORD *)(v13 + 8020) = v73 ^ (v52 | v88) ^ *(_DWORD *)(v13 + 7304);
  v90 = v75;
  *(_DWORD *)(v13 + 8612) ^= *(_DWORD *)(v13 + 6296) ^ v19 ^ *(_DWORD *)(v13 + 6216) ^ v66 ^ v75;
  *(_DWORD *)(v13 + 7272) = v81 + v88;
  LODWORD(v63) = ((v68 & (v86 & 0x4CA49094 ^ 0x2652484A)) >> v76) ^ 0xAE5F2BA6 ^ ((v22 & (v86 & 0x4CA49094 ^ 0x2652484A)) << v23) ^ *(_DWORD *)(v13 + 6320);
  *(_DWORD *)(v13 + 7664) = v64 ^ v71 ^ v83 ^ v87 ^ v77;
  *(_DWORD *)(v13 + 8312) = v63 ^ v77 ^ (v81 + v88 - 1369494618 - ((2 * (v81 + v88)) & 0x5CBE574C)) ^ *(_DWORD *)(v13 + 7944);
  LODWORD(v75) = *(_DWORD *)(v13 + 9472);
  LODWORD(v73) = v75 ^ *(_DWORD *)(v13 + 7680);
  v91 = *(_QWORD *)(v13 + 7640) << v23;
  *(_DWORD *)(v13 + 9472) = v75 ^ *(_DWORD *)(v13 + 6336) ^ (v65 | v91);
  LODWORD(v75) = *(_DWORD *)(v13 + 9008);
  LODWORD(v80) = *(_DWORD *)(v13 + 9568) ^ v80 ^ v75;
  LODWORD(v64) = *(_DWORD *)(v13 + 6760) ^ v80;
  *(_QWORD *)(v13 + 7256) = v61;
  *(_DWORD *)(v13 + 7944) = v64 ^ (v61 | v82);
  v92 = v87;
  *(_DWORD *)(v13 + 9008) = v19 ^ ((v68 & (v32 & 0xCC650D86 ^ 0x663286C3)) >> v76) ^ ((v22 & (v32 & 0xCC650D86 ^ 0x663286C3)) << v23) ^ *(_DWORD *)(v13 + 6944) ^ *(_DWORD *)(v13 + 7696) ^ v87 ^ v75;
  LODWORD(v64) = v19 ^ ((v68 & (v32 & 0x9316F6AC ^ 0xC98B7B56)) >> v76) ^ *(_DWORD *)(v13 + 6080) ^ ((*(_DWORD *)(v13 + 6064) & (v32 & 0x9316F6AC ^ 0xC98B7B56)) << v23);
  LODWORD(v63) = *(_DWORD *)(v13 + 9440);
  LODWORD(v80) = v80 ^ *(_DWORD *)(v13 + 9616) ^ v63;
  v93 = *(_QWORD *)(v13 + 7576);
  *(_DWORD *)(v13 + 7296) = v83 + v93;
  *(_DWORD *)(v13 + 9440) = v64 ^ (v83 + v93) ^ v63;
  LODWORD(v73) = v73 ^ v80;
  v94 = *(_DWORD *)(v13 + 7688);
  v95 = *(_DWORD *)(v13 + 7584);
  *(_DWORD *)(v13 + 7680) = *(_DWORD *)(v13 + 6044) ^ v19 ^ *(_DWORD *)(v13 + 6040) ^ v94 ^ v95 ^ v80;
  LODWORD(v80) = v19 ^ ((v68 & (v86 & 0xA42D36AA ^ 0x52169B55)) >> v76) ^ ((unint64_t)((v67 ^ 0x301780DF) & (v86 & 0xA42D36AA ^ 0x52169B55)) << v84) ^ *(_DWORD *)(v13 + 8408);
  LODWORD(v64) = *(_DWORD *)(v13 + 7648) ^ *(_DWORD *)(v13 + 9576) ^ *(_DWORD *)(v13 + 6048);
  LODWORD(v75) = *(_DWORD *)(v13 + 8356);
  *(_DWORD *)(v13 + 7648) = *(_DWORD *)(v13 + 6744) ^ v75;
  v96 = *(_QWORD *)(v13 + 7344);
  *(_DWORD *)(v13 + 7304) = v96 | v95;
  v97 = v80 ^ (v96 | v95) ^ v73;
  *(_DWORD *)(v13 + 8408) = v64 ^ v75 ^ v91 ^ v93 ^ v73;
  *(_DWORD *)(v13 + 6968) = v89;
  v98 = *(_DWORD *)(v13 + 7280) ^ v61 ^ v89;
  *(_DWORD *)(v13 + 7176) = v61 ^ v89;
  v99 = *(_DWORD *)(v13 + 8656);
  v100 = *(_DWORD *)(v13 + 7704);
  LODWORD(v80) = v100 ^ *(_QWORD *)(v13 + 4536) ^ (v99 + v98);
  LODWORD(v64) = (v80 ^ 0x62D92597) & 0x246C92BF ^ 0xFC7B4C3E ^ (-2
                                                               - ((~((v80 ^ 0x62D92597) & 0x246C92BD) | 0xDC1FCEAE)
                                                                + ((v80 ^ 0x62D92597) & 0x40C82AC | 0x23E03151)));
  *(_DWORD *)(v13 + 7640) = v64 - ((2 * v64) & 0x326FABC);
  v101 = (v80 & 1) == 0;
  *(_DWORD *)(v13 + 7184) = v91;
  *(_DWORD *)(v13 + 7280) = v65 + v91;
  v102 = *(_DWORD *)(v13 + 6060) ^ (v65 + v91);
  v103 = *(_DWORD *)(v13 + 7656);
  if (v101)
    v104 = *(_DWORD *)(v13 + 7656);
  else
    v104 = *(_DWORD *)(v13 + 6060) ^ (v65 + v91);
  *(_DWORD *)(v13 + 8356) = v104;
  v105 = *(_DWORD *)(v13 + 7712);
  if (v101)
    v103 = *(_DWORD *)(v13 + 7712);
  *(_DWORD *)(v13 + 7656) = v103;
  v106 = *(_DWORD *)(v13 + 8680);
  if (!v101)
    v102 = *(_DWORD *)(v13 + 8680);
  *(_DWORD *)(v13 + 7616) = v102;
  if (v101)
    v107 = v106;
  else
    v107 = v105;
  *(_DWORD *)(v13 + 8680) = v107;
  *(_DWORD *)(v13 + 7192) = v90 + v65;
  v108 = *(_DWORD *)(v13 + 8440) ^ (v90 + v65);
  v109 = *(_DWORD *)(v13 + 8688) ^ v91 ^ v65;
  v110 = *(_DWORD *)(v13 + 8368);
  if (v101)
    v111 = *(_DWORD *)(v13 + 8368);
  else
    v111 = *(_DWORD *)(v13 + 8440) ^ (v90 + v65);
  *(_DWORD *)(v13 + 8440) = v111;
  if (!v101)
    v108 = v109;
  *(_DWORD *)(v13 + 7712) = v108;
  v112 = *(_DWORD *)(v13 + 8672);
  if (!v101)
    v109 = *(_DWORD *)(v13 + 8672);
  *(_DWORD *)(v13 + 6944) = v109;
  if (!v101)
    v112 = v110;
  *(_DWORD *)(v13 + 8672) = v112;
  v113 = *(_DWORD *)(v13 + 9528) ^ v61 ^ v89;
  v114 = *(_DWORD *)(v13 + 7696);
  *(_DWORD *)(v13 + 7168) = v65 + v114;
  v115 = *(_DWORD *)(v13 + 8664) ^ (v65 + v114);
  v116 = v83;
  *(_QWORD *)(v13 + 6992) = v83;
  v117 = v65;
  v118 = *(_DWORD *)(v13 + 7784) ^ (v83 | v65);
  v119 = v83 | v65;
  *(_DWORD *)(v13 + 7208) = v83 | v65;
  v120 = *(_DWORD *)(v13 + 8512);
  if (v101)
    v121 = v118;
  else
    v121 = *(_DWORD *)(v13 + 8512);
  *(_DWORD *)(v13 + 9528) = v121;
  if (!v101)
    v120 = v113;
  *(_DWORD *)(v13 + 6936) = v120;
  if (v101)
    v118 = v115;
  *(_DWORD *)(v13 + 6744) = v118;
  if (!v101)
    v113 = v115;
  *(_DWORD *)(v13 + 7784) = v113;
  v122 = *(_DWORD *)(v13 + 8640) ^ *(_DWORD *)(v13 + 7592);
  v123 = *(_QWORD *)(v13 + 7424);
  v124 = *(_DWORD *)(v13 + 8504) ^ v94 ^ v123;
  v125 = *(_DWORD *)(v13 + 7448);
  *(_DWORD *)(v13 + 7232) = v83 | v125;
  v126 = *(_DWORD *)(v13 + 7888) ^ (v83 | v125);
  if (v101)
    v127 = *(_DWORD *)(v13 + 7888) ^ (v83 | v125);
  else
    v127 = v124;
  *(_DWORD *)(v13 + 8640) = v127;
  if (v101)
    v128 = v124;
  else
    v128 = v122;
  *(_DWORD *)(v13 + 8664) = v128;
  v129 = *(_DWORD *)(v13 + 7776);
  if (!v101)
    v122 = *(_DWORD *)(v13 + 7776);
  *(_DWORD *)(v13 + 8368) = v122;
  if (v101)
    v130 = v129;
  else
    v130 = v126;
  *(_DWORD *)(v13 + 7888) = v130;
  *(_DWORD *)(v13 + 7216) = v95 | v88;
  v131 = *(_DWORD *)(v13 + 7952) ^ (v95 | v88);
  *(_QWORD *)(v13 + 7128) = v90;
  v132 = *(_DWORD *)(v13 + 8648) ^ v90 ^ v93;
  v133 = *(_DWORD *)(v13 + 7792) ^ v114;
  *(_QWORD *)(v13 + 7288) = v117;
  v134 = v133 ^ v117;
  if (v101)
    v135 = v99;
  else
    v135 = v134;
  *(_DWORD *)(v13 + 7952) = v135;
  if (v101)
    v136 = v131;
  else
    v136 = v99;
  if (v101)
    v137 = v134;
  else
    v137 = v132;
  if (v101)
    v138 = v132;
  else
    v138 = v131;
  *(_DWORD *)(v13 + 7144) = v116 + v92;
  v139 = *(_DWORD *)(v13 + 7976) ^ (v116 + v92);
  v140 = *(_DWORD *)(v13 + 8392);
  if (v101)
    v141 = *(_DWORD *)(v13 + 7976) ^ (v116 + v92);
  else
    v141 = *(_DWORD *)(v13 + 8392);
  *(_DWORD *)(v13 + 8648) = v141;
  if (!v101)
    v140 = v98;
  *(_DWORD *)(v13 + 8504) = v140;
  v142 = *(_DWORD *)(v13 + 7936);
  if (!v101)
    v98 = *(_DWORD *)(v13 + 7936);
  *(_DWORD *)(v13 + 8512) = v98;
  if (v101)
    v143 = v142;
  else
    v143 = v139;
  *(_DWORD *)(v13 + 7776) = v143;
  *(_DWORD *)(v13 + 7248) = v90 ^ v92;
  v144 = *(_DWORD *)(v13 + 8024) ^ v90 ^ v92;
  v145 = *(_QWORD *)(v13 + 7408) ^ v88;
  *(_DWORD *)(v13 + 7240) = v145;
  v146 = v145 ^ *(_DWORD *)(v13 + 6332);
  v147 = *(_DWORD *)(v13 + 8496);
  v148 = *(_DWORD *)(v13 + 8384);
  if (v101)
    v149 = *(_DWORD *)(v13 + 8496);
  else
    v149 = *(_DWORD *)(v13 + 8384);
  *(_DWORD *)(v13 + 7976) = v149;
  if (v101)
    v150 = v144;
  else
    v150 = v147;
  if (v101)
    v151 = v146;
  else
    v151 = v144;
  *(_DWORD *)(v13 + 6320) = v151;
  if (v101)
    v152 = v148;
  else
    v152 = v146;
  *(_DWORD *)(v13 + 7160) = v116 + v125;
  v153 = *(_DWORD *)(v13 + 7992) ^ (v116 + v125);
  *(_DWORD *)(v13 + 7224) = v123 + v94;
  if (v101)
    v154 = v153;
  else
    v154 = *(_DWORD *)(v13 + 8236);
  if (v101)
    v155 = *(_DWORD *)(v13 + 8236);
  else
    v155 = *(_DWORD *)(v13 + 8768);
  if (v101)
    v156 = *(_DWORD *)(v13 + 8008) ^ (v123 + v94);
  else
    v156 = v153;
  if (v101)
    v157 = *(_DWORD *)(v13 + 8768);
  else
    v157 = *(_DWORD *)(v13 + 8008) ^ (v123 + v94);
  v158 = *(_DWORD *)(v13 + 9424) ^ *(_DWORD *)(v13 + 7632);
  *(_DWORD *)(v13 + 7112) = v117 ^ v116;
  if (v101)
    v159 = *(_DWORD *)(v13 + 8376);
  else
    v159 = *(_DWORD *)(v13 + 8888);
  if (v101)
    v160 = v158;
  else
    v160 = *(_DWORD *)(v13 + 8376);
  if (v101)
    v161 = *(_DWORD *)(v13 + 8888);
  else
    v161 = *(_DWORD *)(v13 + 9080) ^ v117 ^ v116;
  if (v101)
    v162 = *(_DWORD *)(v13 + 9080) ^ v117 ^ v116;
  else
    v162 = v158;
  v163 = *(_DWORD *)(v13 + 8352);
  v164 = *(_DWORD *)(v13 + 7984);
  if (v101)
    v165 = *(_DWORD *)(v13 + 7984);
  else
    v165 = *(_DWORD *)(v13 + 8352);
  *(_DWORD *)(v13 + 8376) = v165;
  if (v101)
    v166 = v100;
  else
    v166 = v164;
  v167 = *(_DWORD *)(v13 + 8400);
  if (v101)
    v168 = *(_DWORD *)(v13 + 8400);
  else
    v168 = v100;
  *(_DWORD *)(v13 + 8236) = v168;
  if (v101)
    v169 = v163;
  else
    v169 = v167;
  v170 = *(_DWORD *)(v13 + 7200) ^ v119;
  v171 = *(_DWORD *)(v13 + 8264);
  v172 = *(_DWORD *)(v13 + 7664);
  if (v101)
    v173 = *(_DWORD *)(v13 + 7664);
  else
    v173 = *(_DWORD *)(v13 + 8264);
  *(_DWORD *)(v13 + 8008) = v173;
  v174 = *(_DWORD *)(v13 + 8000);
  if (v101)
    v172 = *(_DWORD *)(v13 + 8000);
  *(_DWORD *)(v13 + 8024) = v172;
  if (v101)
    v174 = v170;
  *(_DWORD *)(v13 + 8000) = v174;
  if (!v101)
    v171 = v170;
  *(_DWORD *)(v13 + 7936) = v171;
  if (v101)
    v175 = *(_DWORD *)(v13 + 8280);
  else
    v175 = *(_DWORD *)(v13 + 8260);
  if (v101)
    v176 = *(_DWORD *)(v13 + 8260);
  else
    v176 = *(_DWORD *)(v13 + 8360);
  v177 = *(_DWORD *)(v13 + 8032);
  if (v101)
    v178 = *(_DWORD *)(v13 + 8032);
  else
    v178 = *(_DWORD *)(v13 + 8280);
  if (v101)
    v177 = *(_DWORD *)(v13 + 8360);
  *(_DWORD *)(v13 + 7200) = v96 ^ v89;
  v179 = *(_DWORD *)(v13 + 7648) ^ v96 ^ v89;
  v180 = *(_DWORD *)(v13 + 9008);
  if (v101)
    v181 = *(_DWORD *)(v13 + 7944);
  else
    v181 = *(_DWORD *)(v13 + 9008);
  v182 = *(_DWORD *)(v13 + 9472);
  if (v101)
    v183 = *(_DWORD *)(v13 + 9472);
  else
    v183 = *(_DWORD *)(v13 + 7944);
  if (v101)
    v182 = v179;
  *(_DWORD *)(v13 + 6216) = v182;
  if (!v101)
    v180 = v179;
  v184 = *(_DWORD *)(v13 + 8612);
  v185 = *(_DWORD *)(v13 + 8312);
  if (v101)
    v186 = *(_DWORD *)(v13 + 8612);
  else
    v186 = *(_DWORD *)(v13 + 8312);
  *(_DWORD *)(v13 + 6296) = v186;
  v187 = *(_DWORD *)(v13 + 8020);
  if (v101)
    v184 = *(_DWORD *)(v13 + 8020);
  *(_DWORD *)(v13 + 7792) = v184;
  v188 = *(_DWORD *)(v13 + 8288);
  if (v101)
    v187 = *(_DWORD *)(v13 + 8288);
  *(_DWORD *)(v13 + 6128) = v187;
  if (v101)
    v189 = v185;
  else
    v189 = v188;
  v190 = *(_DWORD *)(v13 + 9440);
  v191 = *(_DWORD *)(v13 + 8408);
  if (v101)
    v192 = *(_DWORD *)(v13 + 9440);
  else
    v192 = *(_DWORD *)(v13 + 8408);
  *(_DWORD *)(v13 + 6760) = v192;
  v193 = *(_DWORD *)(v13 + 7680);
  if (v101)
    v190 = *(_DWORD *)(v13 + 7680);
  *(_DWORD *)(v13 + 6332) = v190;
  if (v101)
    v193 = v97;
  *(_DWORD *)(v13 + 6336) = v193;
  if (v101)
    v97 = v191;
  v194 = *(_DWORD *)(v13 + 7640) + 1100184926;
  v195 = v194 == 1643642830;
  v196 = *(_DWORD *)(v13 + 7656);
  v197 = *(_DWORD *)(v13 + 7616);
  if (*(_DWORD *)(v13 + 7640) == 543457904)
    v198 = *(_DWORD *)(v13 + 7616);
  else
    v198 = *(_DWORD *)(v13 + 7656);
  *(_DWORD *)(v13 + 9424) = v198;
  if (v194 == 1643642830)
    v199 = v196;
  else
    v199 = v197;
  *(_DWORD *)(v13 + 8656) = v199;
  v200 = *(_DWORD *)(v13 + 8440);
  v201 = *(_DWORD *)(v13 + 6944);
  if (v194 == 1643642830)
    v202 = *(_DWORD *)(v13 + 8440);
  else
    v202 = *(_DWORD *)(v13 + 6944);
  *(_DWORD *)(v13 + 8688) = v202;
  if (v194 == 1643642830)
    v203 = v201;
  else
    v203 = v200;
  *(_DWORD *)(v13 + 8768) = v203;
  v204 = *(_DWORD *)(v13 + 8356);
  v205 = *(_DWORD *)(v13 + 8680);
  if (v194 == 1643642830)
    v206 = *(_DWORD *)(v13 + 8680);
  else
    v206 = *(_DWORD *)(v13 + 8356);
  *(_DWORD *)(v13 + 8260) = v206;
  if (v194 == 1643642830)
    v207 = v204;
  else
    v207 = v205;
  *(_DWORD *)(v13 + 8288) = v207;
  v208 = *(_DWORD *)(v13 + 6936);
  v209 = *(_DWORD *)(v13 + 6744);
  if (v194 == 1643642830)
    v210 = *(_DWORD *)(v13 + 6936);
  else
    v210 = *(_DWORD *)(v13 + 6744);
  *(_DWORD *)(v13 + 7656) = v210;
  if (v194 == 1643642830)
    v211 = v209;
  else
    v211 = v208;
  *(_DWORD *)(v13 + 7664) = v211;
  v212 = *(_DWORD *)(v13 + 7712);
  v213 = *(_DWORD *)(v13 + 8672);
  if (v194 == 1643642830)
    v214 = *(_DWORD *)(v13 + 7712);
  else
    v214 = *(_DWORD *)(v13 + 8672);
  *(_DWORD *)(v13 + 8680) = v214;
  if (v194 == 1643642830)
    v215 = v213;
  else
    v215 = v212;
  *(_DWORD *)(v13 + 8400) = v215;
  v216 = *(_DWORD *)(v13 + 9528);
  v217 = *(_DWORD *)(v13 + 7784);
  if (v194 == 1643642830)
    v218 = *(_DWORD *)(v13 + 9528);
  else
    v218 = *(_DWORD *)(v13 + 7784);
  *(_DWORD *)(v13 + 7648) = v218;
  if (v194 == 1643642830)
    v219 = v217;
  else
    v219 = v216;
  *(_DWORD *)(v13 + 7640) = v219;
  v220 = *(_DWORD *)(v13 + 8640);
  v221 = *(_DWORD *)(v13 + 8368);
  if (v194 == 1643642830)
    v222 = *(_DWORD *)(v13 + 8368);
  else
    v222 = *(_DWORD *)(v13 + 8640);
  *(_DWORD *)(v13 + 8352) = v222;
  if (v194 == 1643642830)
    v223 = v220;
  else
    v223 = v221;
  *(_DWORD *)(v13 + 9528) = v223;
  if (v194 == 1643642830)
    v224 = v137;
  else
    v224 = v136;
  *(_DWORD *)(v13 + 8312) = v224;
  if (v194 == 1643642830)
    v225 = v136;
  else
    v225 = v137;
  *(_DWORD *)(v13 + 8672) = v225;
  v226 = *(_DWORD *)(v13 + 8664);
  v227 = *(_DWORD *)(v13 + 7888);
  if (v194 == 1643642830)
    v228 = *(_DWORD *)(v13 + 8664);
  else
    v228 = *(_DWORD *)(v13 + 7888);
  *(_DWORD *)(v13 + 8392) = v228;
  if (v194 == 1643642830)
    v229 = v227;
  else
    v229 = v226;
  *(_DWORD *)(v13 + 8640) = v229;
  v230 = *(_DWORD *)(v13 + 7952);
  if (v194 == 1643642830)
    v231 = v138;
  else
    v231 = *(_DWORD *)(v13 + 7952);
  *(_DWORD *)(v13 + 8020) = v231;
  if (v194 == 1643642830)
    v232 = v230;
  else
    v232 = v138;
  *(_DWORD *)(v13 + 7984) = v232;
  if (v194 == 1643642830)
    v233 = v156;
  else
    v233 = v155;
  *(_DWORD *)(v13 + 8368) = v233;
  if (v194 == 1643642830)
    v234 = v155;
  else
    v234 = v156;
  *(_DWORD *)(v13 + 8664) = v234;
  v235 = *(_DWORD *)(v13 + 8504);
  v236 = *(_DWORD *)(v13 + 7776);
  if (v194 == 1643642830)
    v237 = *(_DWORD *)(v13 + 7776);
  else
    v237 = *(_DWORD *)(v13 + 8504);
  *(_DWORD *)(v13 + 8440) = v237;
  if (v194 == 1643642830)
    v238 = v235;
  else
    v238 = v236;
  *(_DWORD *)(v13 + 7776) = v238;
  if (v194 == 1643642830)
    v239 = v152;
  else
    v239 = v150;
  *(_DWORD *)(v13 + 8496) = v239;
  if (v194 == 1643642830)
    v240 = v150;
  else
    v240 = v152;
  *(_DWORD *)(v13 + 8356) = v240;
  if (v194 == 1643642830)
    v241 = v154;
  else
    v241 = v157;
  *(_DWORD *)(v13 + 7944) = v241;
  if (v194 == 1643642830)
    v242 = v157;
  else
    v242 = v154;
  *(_DWORD *)(v13 + 7992) = v242;
  v243 = *(_DWORD *)(v13 + 7976);
  v244 = *(_DWORD *)(v13 + 6320);
  if (v194 == 1643642830)
    v245 = *(_DWORD *)(v13 + 6320);
  else
    v245 = *(_DWORD *)(v13 + 7976);
  *(_DWORD *)(v13 + 9080) = v245;
  if (v194 == 1643642830)
    v246 = v243;
  else
    v246 = v244;
  *(_DWORD *)(v13 + 9440) = v246;
  v247 = *(_DWORD *)(v13 + 8648);
  v248 = *(_DWORD *)(v13 + 8512);
  if (v194 == 1643642830)
    v249 = *(_DWORD *)(v13 + 8648);
  else
    v249 = *(_DWORD *)(v13 + 8512);
  *(_DWORD *)(v13 + 7704) = v249;
  if (v194 == 1643642830)
    v250 = v248;
  else
    v250 = v247;
  *(_DWORD *)(v13 + 7712) = v250;
  if (v194 == 1643642830)
    v251 = v159;
  else
    v251 = v162;
  *(_DWORD *)(v13 + 8360) = v251;
  if (v194 == 1643642830)
    v252 = v162;
  else
    v252 = v159;
  *(_DWORD *)(v13 + 8384) = v252;
  if (v194 == 1643642830)
    v253 = v160;
  else
    v253 = v161;
  *(_DWORD *)(v13 + 8280) = v253;
  if (v194 == 1643642830)
    v254 = v161;
  else
    v254 = v160;
  *(_DWORD *)(v13 + 9008) = v254;
  if (v194 == 1643642830)
    v255 = v166;
  else
    v255 = v169;
  *(_DWORD *)(v13 + 8264) = v255;
  if (v194 == 1643642830)
    v256 = v169;
  else
    v256 = v166;
  *(_DWORD *)(v13 + 8032) = v256;
  v257 = *(_DWORD *)(v13 + 8376);
  v258 = *(_DWORD *)(v13 + 8236);
  if (v194 == 1643642830)
    v259 = *(_DWORD *)(v13 + 8236);
  else
    v259 = *(_DWORD *)(v13 + 8376);
  *(_DWORD *)(v13 + 8888) = v259;
  if (v194 == 1643642830)
    v260 = v257;
  else
    v260 = v258;
  *(_DWORD *)(v13 + 7888) = v260;
  if (v194 == 1643642830)
    v261 = v175;
  else
    v261 = v177;
  *(_DWORD *)(v13 + 9472) = v261;
  if (v194 == 1643642830)
    v262 = v177;
  else
    v262 = v175;
  *(_DWORD *)(v13 + 7976) = v262;
  v263 = *(_DWORD *)(v13 + 8008);
  v264 = *(_DWORD *)(v13 + 8000);
  if (v194 == 1643642830)
    v265 = *(_DWORD *)(v13 + 8008);
  else
    v265 = *(_DWORD *)(v13 + 8000);
  *(_DWORD *)(v13 + 8236) = v265;
  if (v194 == 1643642830)
    v266 = v264;
  else
    v266 = v263;
  *(_DWORD *)(v13 + 8648) = v266;
  if (v194 == 1643642830)
    v267 = v176;
  else
    v267 = v178;
  *(_DWORD *)(v13 + 7784) = v267;
  if (v194 == 1643642830)
    v268 = v178;
  else
    v268 = v176;
  *(_DWORD *)(v13 + 8612) = v268;
  v269 = *(_DWORD *)(v13 + 8024);
  v270 = *(_DWORD *)(v13 + 7936);
  if (v194 == 1643642830)
    v271 = *(_DWORD *)(v13 + 8024);
  else
    v271 = *(_DWORD *)(v13 + 7936);
  *(_DWORD *)(v13 + 7952) = v271;
  if (v194 == 1643642830)
    v272 = v270;
  else
    v272 = v269;
  *(_DWORD *)(v13 + 8000) = v272;
  v273 = *(_DWORD *)(v13 + 6216);
  if (v194 == 1643642830)
    v274 = v181;
  else
    v274 = *(_DWORD *)(v13 + 6216);
  *(_DWORD *)(v13 + 7616) = v274;
  if (v194 == 1643642830)
    v275 = v273;
  else
    v275 = v181;
  *(_DWORD *)(v13 + 8512) = v275;
  v276 = *(_DWORD *)(v13 + 6296);
  v277 = *(_DWORD *)(v13 + 6128);
  if (v194 == 1643642830)
    v278 = *(_DWORD *)(v13 + 6296);
  else
    v278 = *(_DWORD *)(v13 + 6128);
  *(_DWORD *)(v13 + 7680) = v278;
  if (v194 == 1643642830)
    v279 = v277;
  else
    v279 = v276;
  *(_DWORD *)(v13 + 8008) = v279;
  v280 = *(_DWORD *)(v13 + 7792);
  if (v194 == 1643642830)
    v281 = *(_DWORD *)(v13 + 7792);
  else
    v281 = v189;
  *(_DWORD *)(v13 + 7936) = v281;
  if (v194 == 1643642830)
    v282 = v189;
  else
    v282 = v280;
  *(_DWORD *)(v13 + 8376) = v282;
  if (v194 == 1643642830)
    v283 = v180;
  else
    v283 = v183;
  *(_DWORD *)(v13 + 7792) = v283;
  if (v194 == 1643642830)
    v284 = v183;
  else
    v284 = v180;
  *(_DWORD *)(v13 + 8504) = v284;
  v285 = *(_DWORD *)(v13 + 6332);
  if (v194 == 1643642830)
    v286 = *(_DWORD *)(v13 + 6332);
  else
    v286 = v97;
  *(_DWORD *)(v13 + 8024) = v286;
  if (v194 == 1643642830)
    v287 = v97;
  else
    v287 = v285;
  *(_DWORD *)(v13 + 8408) = v287;
  v288 = *(_DWORD *)(v13 + 9448) | *(_DWORD *)(v13 + 8728) | *(_DWORD *)(v13 + 8748) | *(_DWORD *)(v13 + 8720);
  *(_DWORD *)(v13 + 8748) = v288;
  v289 = (*(_DWORD *)(v13 + 9200) << 16) | (*(_DWORD *)(v13 + 9480) << 24) | *(_DWORD *)(v13 + 8760);
  *(_DWORD *)(v13 + 9448) = v289;
  v290 = (*(_DWORD *)(v13 + 9464) << 8) | *(_DWORD *)(v13 + 8712) | (*(_DWORD *)(v13 + 9160) << 16) | *(_DWORD *)(v13 + 9504);
  *(_DWORD *)(v13 + 9464) = v290;
  v291 = *(_DWORD *)(v13 + 8744) | (*(_DWORD *)(v13 + 9456) << 16) | *(_DWORD *)(v13 + 8752);
  *(_DWORD *)(v13 + 9480) = v291;
  v292 = *(_DWORD *)(v13 + 9136);
  v293 = *(_BYTE *)(*(_QWORD *)(v13 + 9544)
                  + (((*(_DWORD *)(v13 + 9392) << ((v292 & 7 ^ 7) + (v292 & 7)))
                                     + ((*(_DWORD *)(v13 + 9392) & 0xFEu) >> 1)) ^ 0x25));
  v294 = (*(_DWORD *)(v13 + 9400) << 24) + (((v293 ^ (32 * v293) ^ 0x45) + 10) << 8);
  v295 = (*(_DWORD *)(v13 + 8764) << 8)
       + ((*(_DWORD *)(v13 + 9096) << 16) | ((*(_DWORD *)(v13 + 6156) ^ 0x1C) << 24));
  v296 = *(_DWORD *)(v13 + 8736) | (*(_DWORD *)(v13 + 9488) << 8) | (*(_DWORD *)(v13 + 9128) << 16) | *(_DWORD *)(v13 + 9408);
  *(_DWORD *)(v13 + 9200) = v296;
  v297 = *(_DWORD *)(v13 + 8696) | (*(_DWORD *)(v13 + 6292) << 24) | (*(_DWORD *)(v13 + 9496) << 16) | (*(_DWORD *)(v13 + 6288) << 8);
  *(_DWORD *)(v13 + 3768) = v297;
  v298 = v294 + *(_DWORD *)(v13 + 9384) + *(_DWORD *)(v13 + 8704);
  *(_DWORD *)(v13 + 9384) = v298;
  v299 = *(_DWORD *)(v13 + 8964);
  v300 = *(_DWORD *)(v13 + 9608);
  v301 = *(_DWORD *)(v13 + 9736);
  v302 = *(_QWORD *)(v13 + 9632);
  v303 = *(_QWORD *)(v13 + 9432);
  v304 = *(_DWORD *)(v13 + 9416);
  v305 = *(_DWORD *)(v13 + 9584);
  v306 = *(_QWORD *)(v13 + 9664);
  v307 = *(_DWORD *)(v13 + 9592);
  v308 = *(_QWORD *)(v13 + 7328);
  v309 = v291 ^ (((unint64_t)(v307 & (v304 & 0x3AE3EEE8 ^ 0x9D71F774)) << v308)
               + ((v305 & (v304 & 0x3AE3EEE8 ^ 0x9D71F774)) >> v306)) ^ (((unint64_t)((v300 ^ 0x3013C0DC) & (v299 & 0xDCE3EEE8 ^ 0x6E71F774)) << v303) | ((unint64_t)(v301 & (v299 & 0xDCE3EEE8 ^ 0x6E71F774)) >> v302));
  v310 = *(_QWORD *)(v13 + 8872);
  v311 = (v310 + v295);
  v312 = *(_QWORD *)(v13 + 4536);
  v313 = v309 ^ __ROR4__(*(_DWORD *)(v312 + ((v311 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v312 + 4 * v310) ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v311)), 24);
  *(_QWORD *)(v13 + 3744) = v311;
  v314 = v313 ^ __ROR4__(*(_DWORD *)(v312 + 4 * (v311 >> ((v292 & 0x10 ^ 0x10) + (v292 & 0x10u)))), 16);
  v315 = *(_DWORD *)(v13 + 9520);
  LODWORD(v310) = v288 ^ v315 ^ v314;
  *(_DWORD *)(v13 + 9160) = v314;
  *(_DWORD *)(v13 + 9392) = v310 ^ v290;
  v316 = v310;
  *(_DWORD *)(v13 + 9096) = v310;
  v317 = *(_DWORD *)(v13 + 9576);
  LODWORD(v310) = v289 ^ v317 ^ v310 ^ v290;
  LOBYTE(v313) = *(_BYTE *)(*(_QWORD *)(v13 + 9648)
                          + (((v310 >> 5) & 0xF8 | ((unsigned __int16)v310 >> 13)) ^ 0x5ELL))
               + (((v310 >> 5) & 0xF8 | ((unsigned __int16)v310 >> 13)) ^ 0x52);
  v318 = *(_QWORD *)(v13 + 9680);
  v319 = *(_BYTE *)(v318 + (BYTE2(v310) ^ 0xAALL)) ^ BYTE2(v310) ^ 0x63;
  v320 = *(_BYTE *)(*(_QWORD *)(v13 + 9648) + (((v310 >> 21) & 0xF8 | (v310 >> 29)) ^ 0x5ELL))
       + (((v310 >> 21) & 0xF8 | (v310 >> 29)) ^ 0x52);
  v321 = v310;
  *(_DWORD *)(v13 + 9136) = v310;
  v322 = *(_DWORD *)(v312 + 4 * v310) ^ v315 ^ __ROR4__(*(_DWORD *)(v312+ 4* (109* ((v313 + 1) ^ 0x5C))), 24) ^ __ROR4__(*(_DWORD *)(v312+ 4* (v319 + 3)), 16);
  v323 = __ROR4__(*(_DWORD *)(v312 + 4 * (109 * ((v320 + 1) ^ 0x5C))), 8);
  v324 = ((unint64_t)(v301 & (v299 & 0x93A39666 ^ 0xC9D1CB33)) >> v302)
       + ((unint64_t)(v307 & (v299 & 0x93A39666 ^ 0xC9D1CB33)) << v308);
  v325 = v304 & 0x81A39666 ^ 0xC0D1CB33;
  v326 = v300;
  v327 = (v300 ^ 0x13C057) & v325;
  v328 = v306;
  v329 = v324 ^ ((v305 & v325) >> v306) ^ (v327 << v303);
  v330 = v296 ^ __ROR4__(v322 ^ v323, 8);
  v331 = v330 ^ *(_DWORD *)(v13 + 9600);
  *(_DWORD *)(v13 + 9456) = v331;
  v332 = v297 ^ v317 ^ v331;
  *(_DWORD *)(v13 + 9488) = v332;
  v333 = *(_DWORD *)(v13 + 9624);
  v334 = v332 ^ v333;
  v335 = v334 ^ v298;
  v336 = v311 ^ v317 ^ v334 ^ v298;
  v337 = v329 ^ v314 ^ __ROR4__(*(_DWORD *)(v312 + ((v336 >> 22) & 0x3FC)), 8) ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v336)), 24);
  v338 = __ROR4__(*(_DWORD *)(v312 + 4 * BYTE2(v336)), 16);
  *(_QWORD *)(v13 + 8872) = v336;
  v339 = v337 ^ v338 ^ *(_DWORD *)(v312 + 4 * v336);
  v340 = v315;
  LODWORD(v306) = *(_DWORD *)(v13 + 9392);
  LODWORD(v310) = v306 ^ v315;
  *(_DWORD *)(v13 + 9128) = v306 ^ v315;
  v341 = v315 ^ v333;
  v342 = v333;
  v343 = v341 ^ v310 ^ v321;
  *(_DWORD *)(v13 + 9400) = v339 ^ v316;
  LODWORD(v310) = v339;
  *(_DWORD *)(v13 + 8760) = v339;
  v344 = *(_DWORD *)(v13 + 9616);
  LODWORD(v311) = v339 ^ v316 ^ v344;
  v345 = v343 ^ v311;
  v346 = v340 ^ __ROR4__(*(_DWORD *)(v312 + ((v345 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v312
                                                                                    + 4
                                                                                    * (v343 ^ v311)) ^ __ROR4__(*(_DWORD *)(v312 + 4 * ((*(_BYTE *)(v318 + (BYTE2(v345) ^ 0xAALL)) ^ BYTE2(v345) ^ 0x63) + 3)), 16);
  *(_QWORD *)(v13 + 8736) = v345;
  v347 = v330 ^ __ROR4__(v346 ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v345)), 24), 8);
  *(_DWORD *)(v13 + 9504) = v347 ^ v334;
  *(_DWORD *)(v13 + 8720) = v347;
  *(_DWORD *)(v13 + 8764) = v335 ^ v340;
  *(_DWORD *)(v13 + 8744) = v335;
  *(_DWORD *)(v13 + 9408) = v347 ^ v334 ^ v344;
  v348 = v335 ^ v340 ^ v342 ^ v336 ^ v347 ^ v334 ^ v344;
  v349 = v326;
  LOBYTE(v334) = *(_BYTE *)(*(_QWORD *)(v13 + 9536)
                          + ((((v348 ^ v340) >> 5) & 0xF8 | ((unsigned __int16)(v348 ^ v340) >> 13)) ^ 0x3BLL)) ^ (((v348 ^ v340) >> 5) & 0xF8 | ((unsigned __int16)(v348 ^ v340) >> 13)) ^ 0xB9;
  v350 = v304;
  v351 = v304 & 0x67EE06E0 ^ 0x33F70370;
  v352 = *(_DWORD *)(v13 + 9592);
  v353 = *(_QWORD *)(v13 + 7328);
  v354 = *(_DWORD *)(v13 + 9736);
  *(_DWORD *)(v13 + 8752) = v348 ^ v340;
  v355 = ((v354 & v351) >> v328) ^ ((unint64_t)(v352 & v351) << v353) ^ ((((v326 ^ 0x301700D0) & (v299 & 0x79EE06E0 ^ 0x3CF70370)) << v303) + ((unint64_t)(v305 & (v299 & 0x79EE06E0 ^ 0x3CF70370u)) >> v302)) ^ v310 ^ __ROR4__(*(_DWORD *)(v312 + 4 * ((v348 ^ v340) >> 24)), 8) ^ *(_DWORD *)(v312 + 4 * (v348 ^ v340));
  LOBYTE(v351) = *(_BYTE *)(*(_QWORD *)(v13 + 9544)
                          + ((((v348 ^ v340) >> 9) & 0x80 | ((v348 ^ v340) >> 17) & 0x7F) ^ 0x25));
  v356 = v355 ^ __ROR4__(*(_DWORD *)(v312 + 4 * ((v351 ^ (32 * v351) ^ 0x45) + 10)), 16) ^ __ROR4__(*(_DWORD *)(v312 + 4 * (109 * v334)), 24);
  v357 = v306;
  *(_DWORD *)(v13 + 8728) = v311 ^ v306;
  v358 = v356 ^ v311;
  LODWORD(v310) = v311 ^ v306 ^ v342 ^ v356 ^ v311;
  v359 = v345 ^ *(_DWORD *)(v13 + 9576) ^ v310;
  v360 = v310;
  *(_DWORD *)(v13 + 6288) = v310;
  v361 = v340 ^ __ROR4__(*(_DWORD *)(v312 + ((v359 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v312 + 4 * v359) ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE2(v359)), 16);
  v362 = v359;
  *(_QWORD *)(v13 + 8712) = v359;
  v363 = *(_DWORD *)(v13 + 9600);
  LODWORD(v359) = v347 ^ v363 ^ __ROR4__(v361 ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v359)), 24), 8);
  *(_DWORD *)(v13 + 9496) = v359;
  v364 = v359 ^ v335;
  v365 = v359 ^ v335 ^ v348;
  v366 = v299 & 0x84D4F016 ^ 0x426A780B;
  v367 = v353;
  v368 = (unint64_t)((v349 ^ 0x16C01F) & v366) << v353;
  v369 = *(_DWORD *)(v13 + 9584);
  v370 = *(_QWORD *)(v13 + 9632);
  v371 = v368 ^ (((v354 & (v350 & 0xB2D4F016 ^ 0xD96A780B)) >> v328) | ((v352 & (v350 & 0xB2D4F016 ^ 0xD96A780B)) << v303)) ^ ((unint64_t)(v369 & v366) >> v370) ^ *(_DWORD *)(v312 + 4 * v365) ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v365)), 24) ^ __ROR4__(*(_DWORD *)(v312 + 4 * (109 * ((*(_BYTE *)(*(_QWORD *)(v13 + 9648) + (((v365 >> 13) & 0xF8 | (v365 >> 21) & 7) ^ 0x5ELL)) + (((v365 >> 13) & 0xF8 | (v365 >> 21) & 7) ^ 0x52) + 1) ^ 0x5C))), 16);
  v372 = v365;
  *(_QWORD *)(v13 + 6944) = v365;
  v373 = __ROR4__(*(_DWORD *)(v312 + ((v365 >> 22) & 0x3FC)), 8);
  *(_DWORD *)(v13 + 8696) = v358 ^ v340;
  *(_DWORD *)(v13 + 8704) = v356;
  v374 = v371 ^ v373 ^ v356;
  v375 = v340;
  v376 = v374 ^ v358;
  v377 = v374;
  *(_DWORD *)(v13 + 6936) = v374;
  v378 = v356 ^ v357 ^ v362 ^ v374 ^ v358;
  v379 = *(unsigned int *)(v312 + 4 * BYTE2(v378));
  v380 = *(_DWORD *)(v13 + 6760);
  v381 = *(_DWORD *)(v13 + 6336);
  if (v195)
    v382 = *(_DWORD *)(v13 + 6760);
  else
    v382 = *(_DWORD *)(v13 + 6336);
  *(_DWORD *)(v13 + 9392) = v382;
  if (v195)
    v383 = v381;
  else
    v383 = v380;
  *(_DWORD *)(v13 + 9576) = v383;
  v384 = v375 ^ __ROR4__(*(_DWORD *)(v312 + 4 * (v378 >> ((BYTE2(v379) & 8 ^ 8) + (BYTE2(v379) & 8u)))), 24) ^ ((v379 >> 16) | ((_DWORD)v379 << 16)) ^ *(_DWORD *)(v312+ 4* (v356 ^ v357 ^ v362 ^ v376));
  *(_QWORD *)(v13 + 6744) = v378;
  v385 = __ROR4__(*(_DWORD *)(v312 + ((v378 >> 22) & 0x3FC)), 8);
  v386 = v367;
  v387 = v299 & 0xA2EBD2D6 ^ 0xD175E96B;
  v388 = v303;
  v389 = (((unint64_t)(*(_DWORD *)(v13 + 9656) & (v350 & 0x6AEBD2D6 ^ 0x3575E96Bu)) << v367) | ((v369 & (v350 & 0x6AEBD2D6 ^ 0x3575E96B)) >> v328)) ^ (((unint64_t)(v354 & v387) >> v370) | ((unint64_t)(v352 & v387) << v303));
  v390 = *(_DWORD *)(v13 + 9568);
  *(_DWORD *)(v13 + 6336) = v364 ^ v390;
  v391 = v363 ^ __ROR4__(v384 ^ v385, 8);
  v392 = v391 ^ *(_DWORD *)(v13 + 9504);
  *(_DWORD *)(v13 + 3780) = v392;
  v393 = v392 ^ v342 ^ v364 ^ v390;
  v394 = *(_DWORD *)(v13 + 9616);
  v395 = v372 ^ v394 ^ v393;
  v396 = v395 ^ v375;
  *(_QWORD *)(v13 + 6760) = v396;
  LOBYTE(v384) = *(_BYTE *)(*(_QWORD *)(v13 + 9552) + ((-87 * BYTE2(v396)) ^ 0x8BLL)) + 94;
  v397 = v389 ^ v377 ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v396)), 24) ^ __ROR4__(*(_DWORD *)(v312 + ((v396 >> 22) & 0x3FC)), 8) ^ __ROR4__(*(_DWORD *)(v312+ 4* (((v384 >> 5) | (8 * v384)) ^ 0x98u)), 16) ^ *(_DWORD *)(v312 + 4 * (v395 ^ v375));
  v398 = v394;
  *(_DWORD *)(v13 + 6128) = v376 ^ v394;
  *(_DWORD *)(v13 + 6156) = v376 ^ v360;
  v399 = v397 ^ v376 ^ v394;
  v400 = v397;
  *(_DWORD *)(v13 + 6084) = v397;
  *(_DWORD *)(v13 + 6292) = v399 ^ v342;
  v401 = v399 ^ v342 ^ v376 ^ v360;
  v402 = v401 ^ v398;
  *(_DWORD *)(v13 + 6296) = v402;
  v403 = v402 ^ v378;
  v404 = v403 ^ v390;
  *(_QWORD *)(v13 + 6320) = v404;
  v405 = __ROR4__(v375 ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v404)), 24) ^ __ROR4__(*(_DWORD *)(v312+ 4* (v404 >> ((((v397 ^ v375) & 0x50 ^ 0x50) + ((v397 ^ v375) & 0x50)) & 0xBF))), 16) ^ __ROR4__(*(_DWORD *)(v312+ ((v404 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v312+ 4* v404), 8);
  v406 = *(_DWORD *)(v13 + 9608);
  v407 = v386;
  v408 = ((unint64_t)((v406 ^ 0x1007C0DC) & (v350 & 0x100D7CF8 ^ 0x806BE7Cu)) << v388) ^ ((unint64_t)(v369 & (v350 & 0x100D7CF8 ^ 0x806BE7C)) >> v370) ^ (((v354 & (*(_DWORD *)(v13 + 7336) & 0x360D7CF8 ^ 0x9B06BE7C)) >> v328) + ((unint64_t)(v352 & (*(_DWORD *)(v13 + 7336) & 0x360D7CF8 ^ 0x9B06BE7C)) << v386));
  v409 = v391 ^ *(_DWORD *)(v13 + 9496);
  *(_DWORD *)(v13 + 6064) = v409;
  LODWORD(v396) = v375;
  LODWORD(v404) = v393 ^ v375;
  *(_DWORD *)(v13 + 6068) = v393 ^ v375;
  v410 = ((v375 >> 8) | (v375 << 24)) ^ v405 ^ v409;
  *(_DWORD *)(v13 + 6216) = v410;
  v411 = v410 ^ v392 ^ v342;
  *(_DWORD *)(v13 + 6072) = v411;
  v412 = v411 ^ v404;
  v413 = v411 ^ v404 ^ v395;
  v414 = v412;
  *(_DWORD *)(v13 + 5432) = v412;
  v415 = v312;
  v416 = v408 ^ v400 ^ __ROR4__(*(_DWORD *)(v312 + ((v413 >> 22) & 0x3FC)), 8) ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v413)), 24);
  v417 = *(_DWORD *)(v312 + 4 * v413);
  v418 = v413;
  *(_QWORD *)(v13 + 6024) = v413;
  v419 = v416 ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE2(v413)), 16);
  LODWORD(v413) = v399 ^ v417 ^ v419;
  *(_DWORD *)(v13 + 6332) = v413;
  *(_DWORD *)(v13 + 6020) = v419 ^ v417;
  LODWORD(v413) = v413 ^ v401;
  *(_DWORD *)(v13 + 6080) = v413;
  v420 = v403 ^ v396 ^ v413;
  v421 = v396 ^ __ROR4__(*(_DWORD *)(v312 + 4 * BYTE1(v420)), 24) ^ __ROR4__(*(_DWORD *)(v312 + ((v420 >> 22) & 0x3FC)), 8) ^ *(_DWORD *)(v312+ 4 * v420);
  v422 = v420;
  *(_QWORD *)(v13 + 5424) = v420;
  v423 = *(_DWORD *)(v13 + 9600) ^ __ROR4__(v421 ^ __ROR4__(*(_DWORD *)(v415 + 4 * BYTE2(v420)), 16), 8);
  *(_DWORD *)(v13 + 6060) = v423;
  v424 = *(_DWORD *)(v13 + 8964);
  v425 = v423 ^ v392;
  *(_DWORD *)(v13 + 6036) = v425;
  v426 = v425 ^ v414;
  *(_DWORD *)(v13 + 6040) = v426;
  v427 = v418 ^ v342 ^ v426;
  *(_QWORD *)(v13 + 6048) = v427;
  LODWORD(v420) = (((unint64_t)((v406 ^ 0x3006405C) & (v350 & 0x30446668 ^ 0x18223334u)) << v407)
                 + ((v369 & (v350 & 0x30446668 ^ 0x18223334)) >> v328)) ^ ((unint64_t)(v352 & (v424 & 0x82446668 ^ 0xC1223334)) << v388) ^ ((unint64_t)(v354 & (v424 & 0x82446668 ^ 0xC1223334)) >> v370) ^ v419 ^ v417 ^ __ROR4__(*(_DWORD *)(v415 + 4 * BYTE1(v427)), 24) ^ __ROR4__(*(_DWORD *)(v415 + ((v427 >> 22) & 0x3FC)), 8) ^ __ROR4__(*(_DWORD *)(v415 + 4 * BYTE2(v427)), 16) ^ *(_DWORD *)(v415 + 4 * v427);
  *(_DWORD *)(v13 + 6044) = v420;
  LODWORD(v420) = v420 ^ v401;
  *(_DWORD *)(v13 + 9600) = v420;
  *(_DWORD *)(v13 + 9624) = (v422 ^ v342 ^ v420 ^ 0x3F7F733F) - 1065317183 + ((2 * (v422 ^ v342 ^ v420)) & 0x7EFEE67E);
  v428 = v350;
  LOBYTE(v401) = v407;
  *(_DWORD *)(v13 + 3776) = ((unint64_t)((v406 ^ 0x3017C0DC) & (v350 & 0x5DEE8AD8 ^ 0x2EF7456Cu)) << v407) | ((unint64_t)(v369 & (v350 & 0x5DEE8AD8 ^ 0x2EF7456C)) >> v370);
  LOBYTE(v393) = v388;
  *(_DWORD *)(v13 + 3772) = ((v354 & (v424 & 0x7DCEAAF8 ^ 0x3EE7557Cu)) >> v328) | ((v352 & (v424 & 0x7DCEAAF8 ^ 0x3EE7557C)) << v388);
  v429 = v352;
  v430 = v370;
  *(_DWORD *)(v13 + 3764) = ((unint64_t)(v354 & (v424 & 0x7E2DFED2 ^ 0x3F16FF69u)) >> v370)
                          + ((v352 & (v424 & 0x7E2DFED2 ^ 0x3F16FF69)) << v393);
  *(_DWORD *)(v13 + 3760) = ((unint64_t)(v369 & (v350 & 0x9A1271A4 ^ 0x4D0938D2)) >> v370) ^ ((unint64_t)(v352 & (v350 & 0x9A1271A4 ^ 0x4D0938D2)) << v407);
  *(_DWORD *)(v13 + 3756) = (((v406 ^ 0x3017805C) & (v350 & 0x51950E58 ^ 0x28CA872C)) << v393) | ((v369 & (v350 & 0x51950E58 ^ 0x28CA872C)) >> v328);
  LODWORD(v420) = v424 & 0xC0D5525E ^ 0x606AA92F;
  *(_DWORD *)(v13 + 3736) = v420;
  v431 = *(_DWORD *)(v13 + 9656);
  *(_DWORD *)(v13 + 3752) = ((unint64_t)(v431 & v420) << v407) ^ (((v354 & (v350 & 0xEDF87F72 ^ 0xF6FC3FB9)) >> v328)
                                                                                     + ((v352 & (v350 & 0xEDF87F72 ^ 0xF6FC3FB9)) << v393));
  *(_DWORD *)(v13 + 3768) ^= (((unint64_t)((v406 ^ 0x3011C0D7) & (v424 & 0xE41168E6 ^ 0xF208B473)) << v407)
                            + ((unint64_t)(v369 & (v424 & 0xE41168E6 ^ 0xF208B473)) >> v430)) ^ (((v354 & (v350 & 0xC93C45CA ^ 0x649E22E5)) >> v328) + ((v352 & (v350 & 0xC93C45CA ^ 0x649E22E5)) << v393));
  *(_DWORD *)(v13 + 3732) = ((unint64_t)(v352 & (v424 & 0xE1DCAE60 ^ 0xF0EE5730)) << v407) ^ ((v369 & (v424 & 0xE1DCAE60 ^ 0xF0EE5730)) >> v328) ^ ((unint64_t)((v406 ^ 0x2011C0CE) & (v350 & 0xCCF1834C ^ 0x6678C1A6)) << v393) ^ ((unint64_t)(v354 & (v350 & 0xCCF1834C ^ 0x6678C1A6)) >> v430);
  *(_DWORD *)(v13 + 3744) = ((unint64_t)((v406 ^ 0x2013C0DC) & (v350 & 0x45728B68 ^ 0x22B945B4u)) << v393) ^ ((unint64_t)(v354 & (v350 & 0x45728B68 ^ 0x22B945B4u)) >> v430) ^ *(_QWORD *)(v13 + 3744) ^ (((unint64_t)(v352 & (v424 & 0x685FA644 ^ 0xB42FD322)) << v407) | ((v369 & (v424 & 0x685FA644 ^ 0xB42FD322)) >> v328));
  LODWORD(v415) = *(_DWORD *)(v13 + 7336);
  *(_DWORD *)(v13 + 8880) = ((unint64_t)(v352 & (v415 & 0x1E7B5F50 ^ 0x8F3DAFA8)) << v407) ^ ((unint64_t)(v369 & (v415 & 0x1E7B5F50 ^ 0x8F3DAFA8)) >> v328) ^ (((unint64_t)(*(_DWORD *)(v13 + 8880) & (v350 & 0xA8CDE9E6 ^ 0xD466F4F3)) << v393) | ((unint64_t)(v354 & (v350 & 0xA8CDE9E6 ^ 0xD466F4F3)) >> v430));
  v432 = v369;
  *(_DWORD *)(v13 + 9656) = ((unint64_t)(v431 & (v350 & 0xFCBE976A ^ 0x7E5F4BB5)) << v393) | ((unint64_t)(v369 & (v350 & 0xFCBE976A ^ 0x7E5F4BB5)) >> v430);
  *(_DWORD *)(v13 + 3728) = ((unint64_t)(v369 & (v424 & 0xCEF8D906 ^ 0xE77C6C83)) >> v430) ^ ((unint64_t)(v352 & (v350 & 0x784E6FB0 ^ 0xBC2737D8)) << v393) ^ ((unint64_t)((v406 ^ 0x2014C087) & (v424 & 0xCEF8D906 ^ 0xE77C6C83)) << v407) ^ ((v354 & (v350 & 0x784E6FB0 ^ 0xBC2737D8)) >> v328);
  *(_DWORD *)(v13 + 3724) = ((unint64_t)(v354 & (v350 & 0x539A4C34 ^ 0x29CD261Au)) >> v430) | ((unint64_t)(v352 & (v350 & 0x539A4C34 ^ 0x29CD261Au)) << v407);
  *(_DWORD *)(v13 + 3720) = ((v352 & (v424 & 0xE6298070 ^ 0xF314C038)) << v393) | ((v369 & (v424 & 0xE6298070 ^ 0xF314C038)) >> v328);
  *(_DWORD *)(v13 + 3716) = ((unint64_t)((v406 ^ 0x200580D8) & (v350 & 0x468920D0 ^ 0xA3449068)) << v407)
                          + ((unint64_t)(v354 & (v350 & 0x468920D0 ^ 0xA3449068)) >> v430);
  *(_DWORD *)(v13 + 3712) = ((((v406 ^ 0x3017C01B) & (v424 & 0xA2FB9832 ^ 0x517DCC19)) << v393) | ((v354 & (v424 & 0xA2FB9832 ^ 0x517DCC19)) >> v328)) ^ (((unint64_t)(v369 & (v350 & 0x25B3892 ^ 0x12D9C49)) >> v430) | ((unint64_t)(v352 & (v350 & 0x25B3892 ^ 0x12D9C49u)) << v407));
  *(_DWORD *)(v13 + 3708) = (((unint64_t)((v406 ^ 0x3016C0DE) & (v350 & 0xEA7CBFFC ^ 0x753E5FFE)) << v393) | ((unint64_t)(v354 & (v350 & 0xEA7CBFFC ^ 0x753E5FFE)) >> v430)) ^ (((unint64_t)(v352 & (v424 & 0x4ADC1F5C ^ 0x256E0FAEu)) << v407) | ((v369 & (v424 & 0x4ADC1F5C ^ 0x256E0FAE)) >> v328));
  *(_DWORD *)(v13 + 3704) = ((v352 & (v350 & 0xC88EF704 ^ 0xE4477B82)) << v393) ^ ((v369 & (v350 & 0xC88EF704 ^ 0xE4477B82)) >> v328) ^ (((unint64_t)((v406 ^ 0x3017C096) & (v424 & 0xE8AED724 ^ 0xF4576B92)) << v407) + ((unint64_t)(v354 & (v424 & 0xE8AED724 ^ 0xF4576B92)) >> v430));
  *(_DWORD *)(v13 + 3700) = ((unint64_t)(v354 & (v350 & 0xF4FEC45E ^ 0xFA7F622F)) >> v430) | ((unint64_t)(v352 & (v350 & 0xF4FEC45E ^ 0xFA7F622F)) << v393);
  LODWORD(v427) = v406;
  *(_DWORD *)(v13 + 3696) = ((unint64_t)((v406 ^ 0x3017C05F) & (v424 & 0xD4DEE47E ^ 0xEA6F723F)) << v407)
                          + ((v369 & (v424 & 0xD4DEE47E ^ 0xEA6F723F)) >> v328);
  *(_DWORD *)(v13 + 3692) = (((unint64_t)((v406 ^ 0x3013C0D3) & (v424 & 0x63B3A6E2 ^ 0x31D9D371u)) << v407)
                           + ((v354 & (v424 & 0x63B3A6E2 ^ 0x31D9D371u)) >> v328)) ^ ((unint64_t)(v369 & (v350 & 0x439386C2 ^ 0x21C9C361)) >> v430) ^ ((unint64_t)(v352 & (v350 & 0x439386C2 ^ 0x21C9C361u)) << v393);
  *(_DWORD *)(v13 + 3688) = ((v354 & (v350 & 0xAAE7F976 ^ 0xD573FCBB)) >> v328)
                          + ((unint64_t)(v352 & (v350 & 0xAAE7F976 ^ 0xD573FCBB)) << v407);
  *(_DWORD *)(v13 + 3684) = (((v406 ^ 0x7C0DF) & (v424 & 0x8AC7D956 ^ 0xC563ECAB)) << v393)
                          + ((unint64_t)(v369 & (v424 & 0x8AC7D956 ^ 0xC563ECAB)) >> v430);
  *(_DWORD *)(v13 + 3680) = (((unint64_t)((v406 ^ 0x13C0C7) & (v350 & 0x86F2EF46 ^ 0xC37977A3)) << v407)
                           + ((v369 & (v350 & 0x86F2EF46 ^ 0xC37977A3)) >> v328)) ^ (((unint64_t)(v354 & (v424 & 0x9AEEF35A ^ 0xCD7779AD)) >> v430)
                                                                                   + ((v352 & (v424 & 0x9AEEF35A ^ 0xCD7779AD)) << v393));
  *(_DWORD *)(v13 + 3676) = ((unint64_t)((v406 ^ 0x101180CC) & (v415 & 0x16B106C8 ^ 0xB588364)) << v407) | ((unint64_t)(v369 & (v415 & 0x16B106C8 ^ 0xB588364)) >> v430);
  *(_DWORD *)(v13 + 3672) = ((unint64_t)(v354 & (v350 & 0xCBF0A024 ^ 0xE5F85012)) >> v430) ^ ((unint64_t)(v352 & (v350 & 0xCBF0A024 ^ 0xE5F85012)) << v407);
  *(_DWORD *)(v13 + 3668) = (((v406 ^ 0x3016C01C) & (v424 & 0xD7ECBC38 ^ 0xEBF65E1C)) << v393) | ((v369 & (v424 & 0xD7ECBC38 ^ 0xEBF65E1C)) >> v328);
  *(_DWORD *)(v13 + 3664) = ((((v406 ^ 0x1017409E) & (v424 & 0x933A573C ^ 0xC99D2B9E)) << v393)
                           + ((unint64_t)(v369 & (v424 & 0x933A573C ^ 0xC99D2B9E)) >> v430)) ^ (((v354 & (v350 & 0x8F264B20 ^ 0xC7932590)) >> v328) | ((unint64_t)(v352 & (v350 & 0x8F264B20 ^ 0xC7932590)) << v407));
  *(_DWORD *)(v13 + 3660) = ((((v406 ^ 0x13C0D0) & (v424 & 0x8372BDE0 ^ 0xC1B95EF0)) << v393) | ((v354 & (v424 & 0x8372BDE0 ^ 0xC1B95EF0)) >> v328)) ^ (((unint64_t)(v369 & (v350 & 0x1FEE217C ^ 0x8FF710BE)) >> v430) | ((unint64_t)(v352 & (v350 & 0x1FEE217C ^ 0x8FF710BE)) << v407));
  *(_DWORD *)(v13 + 3656) = ((unint64_t)(v354 & (v415 & 0x11091016 ^ 0x8884880B)) >> v430)
                          + ((v352 & (v415 & 0x11091016 ^ 0x8884880B)) << v393);
  *(_DWORD *)(v13 + 3652) = ((unint64_t)(v354 & (v350 & 0xE66D8192 ^ 0xF336C0C9)) >> v430) ^ ((unint64_t)(v352 & (v350 & 0xE66D8192 ^ 0xF336C0C9)) << v393);
  *(_DWORD *)(v13 + 3648) = (((unint64_t)((v406 ^ 0x3001C0D3) & (v424 & 0xA58166E2 ^ 0x52C0B371)) << v393) | ((unint64_t)(v369 & (v424 & 0xA58166E2 ^ 0x52C0B371)) >> v430)) ^ (((v354 & (v350 & 0x391DFA7E ^ 0x1C8EFD3Fu)) >> v328) | ((unint64_t)(v352 & (v350 & 0x391DFA7E ^ 0x1C8EFD3Fu)) << v407));
  *(_DWORD *)(v13 + 3644) = (((unint64_t)((v406 ^ 0x200740DB) & (v424 & 0x4F4A7DD2 ^ 0xA7A53EE9)) << v407)
                           + ((v354 & (v424 & 0x4F4A7DD2 ^ 0xA7A53EE9)) >> v328)) ^ (((unint64_t)(v369 & (v350 & 0x363304AA ^ 0x1B198255)) >> v430)
                                                                                   + ((v352 & (v350 & 0x363304AA ^ 0x1B198255)) << v393));
  *(_DWORD *)(v13 + 3640) = ((unint64_t)((v406 ^ 0x3017C09F) & (v350 & 0x3E1ECB1A ^ 0x9F0F658D)) << v407) | ((v354 & (v350 & 0x3E1ECB1A ^ 0x9F0F658D)) >> v328);
  *(_DWORD *)(v13 + 3636) = ((unint64_t)(v369 & (v424 & 0x4767B262 ^ 0x23B3D931)) >> v430) ^ ((unint64_t)(v352 & (v424 & 0x4767B262 ^ 0x23B3D931u)) << v393);
  *(_DWORD *)(v13 + 3632) = ((unint64_t)(v354 & (v350 & 0x969455DC ^ 0x4B4A2AEE)) >> v430) ^ ((unint64_t)(v352 & (v350 & 0x969455DC ^ 0x4B4A2AEE)) << v393);
  *(_DWORD *)(v13 + 3628) = (((unint64_t)((v406 ^ 0x3007C097) & (v424 & 0xE8058926 ^ 0x7402C493)) << v407) | ((unint64_t)(v369 & (v424 & 0xE8058926 ^ 0x7402C493)) >> v430)) ^ (((v354 & (v350 & 0x917CF05E ^ 0xC8BE782F)) >> v328) + ((v352 & (v350 & 0x917CF05E ^ 0xC8BE782F)) << v393));
  *(_DWORD *)(v13 + 3624) = ((unint64_t)((v406 ^ 0x174017) & (v424 & 0x812E4A26 ^ 0x40972513)) << v393) ^ (((v354 & (v350 & 0x8926422E ^ 0x44932117)) >> v328) | ((unint64_t)(v352 & (v350 & 0x8926422E ^ 0x44932117)) << v407)) ^ ((unint64_t)(v369 & (v424 & 0x812E4A26 ^ 0x40972513)) >> v430);
  *(_DWORD *)(v13 + 3620) = (((unint64_t)((v406 ^ 0x2017C018) & (v424 & 0x42356A10 ^ 0x211AB508u)) << v407) | ((v369 & (v424 & 0x42356A10 ^ 0x211AB508)) >> v328)) ^ ((unint64_t)(v354 & (v350 & 0x4A3D6218 ^ 0x251EB10Cu)) >> v430) ^ ((unint64_t)(v352 & (v350 & 0x4A3D6218 ^ 0x251EB10Cu)) << v393);
  *(_DWORD *)(v13 + 3616) = ((v354 & (v350 & 0xEE89E302 ^ 0x7744F181)) >> v328) ^ ((v352 & (v350 & 0xEE89E302 ^ 0x7744F181)) << v393) ^ (((unint64_t)((v406 ^ 0x3001C08F) & (v424 & 0xE681EB0A ^ 0x7340F585)) << v407) + ((unint64_t)(v369 & (v424 & 0xE681EB0A ^ 0x7340F585)) >> v430));
  *(_DWORD *)(v13 + 3612) = (((unint64_t)((v406 ^ 0x3016C0DC) & (v424 & 0xE274B1E8 ^ 0xF13A58F4)) << v407)
                           + ((v354 & (v424 & 0xE274B1E8 ^ 0xF13A58F4)) >> v328)) ^ ((unint64_t)(v369 & (v350 & 0x6CFA3F66 ^ 0xB67D1FB3)) >> v430) ^ ((unint64_t)(v352 & (v350 & 0x6CFA3F66 ^ 0xB67D1FB3)) << v393);
  *(_DWORD *)(v13 + 3608) = ((unint64_t)((v406 ^ 0x3017808E) & (v424 & 0xEEBB250C ^ 0xF75D9286)) << v407) | ((unint64_t)(v369 & (v424 & 0xEEBB250C ^ 0xF75D9286)) >> v430);
  *(_DWORD *)(v13 + 3604) = ((v354 & (v350 & 0x6035AB82 ^ 0xB01AD5C1)) >> v328)
                          + ((v352 & (v350 & 0x6035AB82 ^ 0xB01AD5C1)) << v393);
  *(_DWORD *)(v13 + 3600) = ((unint64_t)(v369 & (v350 & 0x575B284 ^ 0x82BAD942)) >> v430) ^ ((unint64_t)((v406 ^ 0x17C0C6) & (v350 & 0x575B284 ^ 0x82BAD942)) << v393) ^ ((unint64_t)(v352 & (v424 & 0x8BFB3C0A ^ 0xC5FD9E05)) << v407) ^ ((v354 & (v424 & 0x8BFB3C0A ^ 0xC5FD9E05)) >> v328);
  v433 = ((v354 & (v424 & 0x85FB779A ^ 0x42FDBBCD)) >> v328)
       + ((unint64_t)(v352 & (v424 & 0x85FB779A ^ 0x42FDBBCD)) << v407);
  LODWORD(v420) = ((*(_QWORD *)(v13 + 9688) & 0x5BAFC8A) << ((*(_DWORD *)(v13 + 8616) & 1u)
                                                           + ((*(_DWORD *)(v13 + 8632) & 1) == 0))) ^ 0x5BAFC8A;
  v434 = *(_DWORD *)(v13 + 8984);
  *(_DWORD *)(v13 + 9688) = (((v434 & v420) << v393)
                           + ((unint64_t)(v420 & v369) >> v430)) ^ v433;
  *(_DWORD *)(v13 + 8632) = ((unint64_t)((v406 ^ 0x101780DB) & (v415 & 0x1CAD3B72 ^ 0xE569DB9)) << v393) ^ ((unint64_t)(v354 & (v415 & 0x1CAD3B72 ^ 0xE569DB9)) >> v430);
  *(_DWORD *)(v13 + 8616) = (((v406 ^ 0x30138000) & (v350 & 0x3DF33E00 ^ 0x1EF99F00)) << v393)
                          + ((unint64_t)(v369 & (v350 & 0x3DF33E00 ^ 0x1EF99F00)) >> v430);
  *(_DWORD *)(v13 + 3596) = ((v354 & (v350 & 0x39A6B9AC ^ 0x1CD35CD6u)) >> v328) ^ ((v429 & (v350 & 0x39A6B9AC ^ 0x1CD35CD6)) << v393) ^ (((unint64_t)((v406 ^ 0x10078006) & (v424 & 0x900F1004 ^ 0xC8078802)) << v407) | ((unint64_t)(v369 & (v424 & 0x900F1004 ^ 0xC8078802)) >> v430));
  *(_DWORD *)(v13 + 3592) = (((unint64_t)((v406 ^ 0x3003809F) & (v350 & 0x61032F36 ^ 0x3081979Bu)) << v407) | ((unint64_t)(v354 & (v350 & 0x61032F36 ^ 0x3081979Bu)) >> v430)) ^ (((v429 & (v424 & 0xC5A78B92 ^ 0x62D3C5C9)) << v393) + ((v369 & (v424 & 0xC5A78B92 ^ 0x62D3C5C9)) >> v328));
  *(_DWORD *)(v13 + 3588) = ((unint64_t)((v406 ^ 0x3017C0CF) & (v350 & 0xE77755CA ^ 0x73BBAAE5)) << v407) | ((v369 & (v350 & 0xE77755CA ^ 0x73BBAAE5)) >> v328);
  *(_DWORD *)(v13 + 3584) = ((v354 & (v350 & 0x3A462A9E ^ 0x9D23154F)) >> v328)
                          + ((v429 & (v350 & 0x3A462A9E ^ 0x9D23154F)) << v393);
  *(_DWORD *)(v13 + 3580) = ((unint64_t)((v406 ^ 0x1013C01F) & (v424 & 0x9EE28E3A ^ 0xCF71471D)) << v407) | ((unint64_t)(v369 & (v424 & 0x9EE28E3A ^ 0xCF71471D)) >> v430);
  *(_DWORD *)(v13 + 3576) = ((((v406 ^ 0x1380DF) & (v350 & 0x15327EA ^ 0x80A993F5)) << v393)
                           + ((v354 & (v350 & 0x15327EA ^ 0x80A993F5)) >> v328)) ^ ((unint64_t)(v429 & (v424 & 0xA5F7834E ^ 0xD2FBC1A7)) << v407) ^ ((unint64_t)(v369 & (v424 & 0xA5F7834E ^ 0xD2FBC1A7)) >> v430);
  *(_DWORD *)(v13 + 3572) = (((unint64_t)((v406 ^ 0x3001C0DB) & (v424 & 0xB801F2B2 ^ 0x5C00F959)) << v407) | ((v354 & (v424 & 0xB801F2B2 ^ 0x5C00F959)) >> v328)) ^ (((unint64_t)(v369 & (v350 & 0xB70EFDBC ^ 0xDB877EDE)) >> v430) + ((v429 & (v350 & 0xB70EFDBC ^ 0xDB877EDE)) << v393));
  *(_DWORD *)(v13 + 7312) = ((unint64_t)(*(_DWORD *)(v13 + 7312) & (v424 & 0xE69DB63E ^ 0x734EDB1F)) << v407) | ((unint64_t)(v369 & (v424 & 0xE69DB63E ^ 0x734EDB1F)) >> v430);
  *(_DWORD *)(v13 + 3568) = ((unint64_t)(v429 & (v424 & 0x5B7F16DC ^ 0xADBF8B6E)) << v407) | ((v369 & (v424 & 0x5B7F16DC ^ 0xADBF8B6E)) >> v328);
  *(_DWORD *)(v13 + 3564) = ((unint64_t)((v406 ^ 0x301000DB) & (v350 & 0x547019D2 ^ 0x2A380CE9u)) << v393) ^ ((unint64_t)(v354 & (v350 & 0x547019D2 ^ 0x2A380CE9u)) >> v430);
  *(_DWORD *)(v13 + 3560) = (((unint64_t)((v406 ^ 0x13C0DF) & (v424 & 0x8023FFDA ^ 0xC011FFED)) << v407) | ((unint64_t)(v354 & (v424 & 0x8023FFDA ^ 0xC011FFED)) >> v430)) ^ (((v429 & (v350 & 0x8F2CF0D4 ^ 0x4796786A)) << v393) | ((v369 & (v350 & 0x8F2CF0D4 ^ 0x4796786A)) >> v328));
  *(_DWORD *)(v13 + 3556) = ((v354 & (v350 & 0x7F00624E ^ 0xBF803127)) >> v328) | ((v429 & (v350 & 0x7F00624E ^ 0xBF803127)) << v393);
  *(_DWORD *)(v13 + 3552) = ((unint64_t)(v369 & (v424 & 0xDDB1BC72 ^ 0xEED8DE39)) >> v430)
                          + ((unint64_t)(v429 & (v424 & 0xDDB1BC72 ^ 0xEED8DE39)) << v407);
  *(_DWORD *)(v13 + 3548) = (((v406 ^ 0x3017C05C) & (v350 & 0xF79B9658 ^ 0xFBCDCB2C)) << v393) | ((v354 & (v350 & 0xF79B9658 ^ 0xFBCDCB2C)) >> v328);
  *(_DWORD *)(v13 + 3544) = ((unint64_t)(v369 & (v350 & 0x61C7F6CC ^ 0x30E3FB66)) >> v430) ^ ((unint64_t)(v429 & (v350 & 0x61C7F6CC ^ 0x30E3FB66u)) << v393);
  *(_DWORD *)(v13 + 3540) = (((unint64_t)((v406 ^ 0x3017C00F) & (v424 & 0x6ADF460A ^ 0x356FA305u)) << v407) | ((v354 & (v424 & 0x6ADF460A ^ 0x356FA305u)) >> v328)) ^ (((unint64_t)(v369 & (v350 & 0x40F56C20 ^ 0x207AB610)) >> v430) + ((v429 & (v350 & 0x40F56C20 ^ 0x207AB610)) << v393));
  *(_DWORD *)(v13 + 3536) = ((v354 & (v350 & 0x25D3AAB0 ^ 0x92E9D558)) >> v328) ^ ((v429 & (v350 & 0x25D3AAB0 ^ 0x92E9D558)) << v393) ^ ((unint64_t)((v406 ^ 0x10178007) & (v424 & 0x93651C06 ^ 0xC9B28E03)) << v407) ^ ((unint64_t)(v369 & (v424 & 0x93651C06 ^ 0xC9B28E03)) >> v430);
  *(_DWORD *)(v13 + 3532) = (((v406 ^ 0x3017C09B) & (v350 & 0xB86AE112 ^ 0x5C357089)) << v393)
                          + ((unint64_t)(v354 & (v350 & 0xB86AE112 ^ 0x5C357089)) >> v430);
  *(_DWORD *)(v13 + 3528) = ((unint64_t)(v429 & (v415 & 0xEDC57A4 ^ 0x76E2BD2)) << v407)
                          + ((unint64_t)(v369 & (v415 & 0xEDC57A4 ^ 0x76E2BD2)) >> v328);
  *(_DWORD *)(v13 + 7336) = ((unint64_t)((v406 ^ 0x3005C0D8) & (v415 & 0x3DC95690 ^ 0x9EE4AB48)) << v407) | ((unint64_t)(v354 & (v415 & 0x3DC95690 ^ 0x9EE4AB48)) >> v328);
  LODWORD(v420) = v350 & 0x5E0DDEF2 ^ 0x2F06EF79;
  v435 = (v406 ^ 0x3007C0DB) & v420;
  *(_DWORD *)(v13 + 3380) = (v369 & v420) >> v328;
  v436 = v424;
  LODWORD(v420) = v424 & 0xBA325184 ^ 0x5D1928C2;
  *(_DWORD *)(v13 + 3424) = (v406 ^ 0x301340C6) & v420;
  *(_DWORD *)(v13 + 3376) = (v354 & v420) >> v328;
  v437 = v424 & 0x4A0821DC ^ 0x250410EE;
  *(_DWORD *)(v13 + 3412) = (v354 & v437) >> v328;
  v438 = v424 & 0xE52CFA82 ^ 0x72967D41;
  *(_DWORD *)(v13 + 3400) = (v427 ^ 0x3016C0C3) & v438;
  *(_DWORD *)(v13 + 3408) = (v369 & v438) >> v328;
  v439 = v350 & 0x7C73FFA0 ^ 0x3E39FFD0;
  *(_DWORD *)(v13 + 3372) = (v427 ^ 0x3013C0D0) & v439;
  *(_DWORD *)(v13 + 3404) = (v354 & v439) >> v328;
  v440 = v350 & 0xAAD1AD4 ^ 0x5568D6A;
  v441 = v354;
  *(_DWORD *)(v13 + 3444) = (v354 & v440) >> v328;
  v442 = v350 & 0x8D958C8A ^ 0xC6CAC645;
  v443 = (v427 ^ 0x17C0CF) & v442;
  *(_DWORD *)(v13 + 3448) = (v369 & v442) >> v328;
  v444 = v436 & 0x7AF11D0E ^ 0xBD788E87;
  v445 = (v427 ^ 0x3011808F) & v444;
  *(_DWORD *)(v13 + 3452) = (v369 & v444) >> v328;
  v446 = v436 & 0xEFED2CA4 ^ 0xF7F69652;
  v447 = (v427 ^ 0x301780D6) & v446;
  *(_DWORD *)(v13 + 3484) = (v432 & v446) >> v328;
  v448 = v436 & 0x7D2AD8F4 ^ 0x3E956C7A;
  v449 = v434 & v448;
  *(_DWORD *)(v13 + 3488) = (v441 & v448) >> v328;
  v450 = v350 & 0x77044376 ^ 0xBB8221BB;
  v451 = v427;
  v452 = (v427 ^ 0x300640DF) & v450;
  *(_DWORD *)(v13 + 3492) = (v441 & v450) >> v328;
  LODWORD(v420) = v350 & 0xB50492DA ^ 0xDA82496D;
  *(_DWORD *)(v13 + 3496) = (v432 & v420) >> v328;
  LODWORD(v427) = v436;
  v453 = v436 & 0x945A97A8 ^ 0xCA2D4BD4;
  *(_DWORD *)(v13 + 3500) = (v441 & v453) >> v328;
  v454 = v350 & 0xE992B930 ^ 0xF4C95C98;
  *(_DWORD *)(v13 + 3516) = (v441 & v454) >> v328;
  v455 = v436 & 0x4BEDDCE6 ^ 0x25F6EE73;
  v456 = (v451 ^ 0x2017C0D7) & v455;
  *(_DWORD *)(v13 + 8984) = (v441 & v455) >> v328;
  v457 = v436 & 0x98FFD948 ^ 0xCC7FECA4;
  LODWORD(v396) = (v432 & v457) >> v328;
  v458 = (v451 ^ 0x1017C0CC) & v457;
  v459 = v435 << v407;
  v460 = v427;
  LODWORD(v435) = v427 & 0x71B52E78 ^ 0x38DA973C;
  LODWORD(v427) = v429;
  v461 = (unint64_t)(v429 & v435) << v401;
  v462 = (unint64_t)(v429 & v437) << v401;
  LODWORD(v415) = v460 & 0xDCD35F00 ^ 0x6E69AF80;
  v463 = (unint64_t)(v429 & v415) << v401;
  *(_QWORD *)(v13 + 3384) = v443 << v401;
  *(_QWORD *)(v13 + 3392) = v445 << v401;
  *(_QWORD *)(v13 + 3416) = v447 << v401;
  *(_QWORD *)(v13 + 3432) = v449 << v401;
  *(_QWORD *)(v13 + 3456) = v452 << v401;
  *(_QWORD *)(v13 + 3464) = (unint64_t)(v427 & v420) << v401;
  *(_QWORD *)(v13 + 3472) = (unint64_t)(v427 & v453) << v401;
  v464 = v460 & 0x552A4864 ^ 0xAA952432;
  *(_QWORD *)(v13 + 3504) = (unint64_t)((v451 ^ 0x30174056) & v464) << v401;
  *(_QWORD *)(v13 + 3520) = v456 << v401;
  *(_DWORD *)(v13 + 9664) = (v458 << v401) | v396;
  LODWORD(v458) = *(_DWORD *)(v13 + 3424) << v393;
  v465 = v432 & *(_DWORD *)(v13 + 3736);
  LODWORD(v456) = *(_DWORD *)(v13 + 3400) << v393;
  v466 = *(_DWORD *)(v13 + 3372) << v393;
  v467 = v432 & v415;
  LODWORD(v447) = (v427 & v440) << v393;
  LODWORD(v420) = v428 & 0x7522D0FC ^ 0x3A91687E;
  *(_DWORD *)(v13 + 3400) = (v427 & v420) << v393;
  v468 = v432 & v420;
  LODWORD(v420) = v460 & 0xDEADEADE ^ 0x6F56F56F;
  v469 = v432 & v420;
  *(_QWORD *)(v13 + 3736) = (unint64_t)(v427 & v420) << v393;
  LODWORD(v420) = v460 & 0x43D3F16E ^ 0x21E9F8B7;
  *(_QWORD *)(v13 + 7328) = (unint64_t)(v427 & v420) << v393;
  *(_DWORD *)(v13 + 8964) = (v427 & v454) << v393;
  v470 = v432 & v464;
  v471 = v428 & 0x8B7FE026 ^ 0xC5BFF013;
  v472 = v432 & v471;
  *(_QWORD *)(v13 + 9608) = (unint64_t)(v427 & v471) << v393;
  v473 = v428 & 0x2E496FFE ^ 0x9724B7FF;
  LODWORD(v452) = (v427 & v473) << v393;
  v474 = v441 & v435;
  v475 = v441 & v420;
  v476 = v441 & v473;
  LOBYTE(v460) = v430;
  v477 = v474 >> v430;
  v478 = v465 >> v430;
  v479 = v467 >> v430;
  v480 = v468 >> v430;
  v481 = v469 >> v460;
  *(_QWORD *)(v13 + 3424) = v475 >> v460;
  *(_QWORD *)(v13 + 9584) = v470 >> v460;
  *(_QWORD *)(v13 + 9592) = v472 >> v460;
  *(_DWORD *)(v13 + 9736) = (v476 >> v460) + v452;
  v482 = *(_QWORD *)(v13 + 7408);
  v483 = *(_QWORD *)(v13 + 7344);
  *(_DWORD *)(v13 + 9632) = *(_DWORD *)(v13 + 9480) ^ *(_DWORD *)(v13 + 3776) ^ *(_DWORD *)(v13 + 3772) ^ (v482 + v483);
  LODWORD(v468) = *(_DWORD *)(v13 + 3764) ^ *(_DWORD *)(v13 + 3380) ^ v459 ^ *(_DWORD *)(v13 + 8748);
  *(_DWORD *)(v13 + 8748) = *(_DWORD *)(v13 + 3376) ^ *(_DWORD *)(v13 + 3760) ^ v458 ^ *(_DWORD *)(v13 + 9464);
  LODWORD(v475) = *(_DWORD *)(v13 + 3756) ^ v461 ^ *(_DWORD *)(v13 + 9448) ^ v477;
  LODWORD(v443) = *(_DWORD *)(v13 + 7688);
  v484 = *(_DWORD *)(v13 + 6968);
  *(_DWORD *)(v13 + 9480) = *(_DWORD *)(v13 + 3752) ^ *(_DWORD *)(v13 + 9200) ^ v478 ^ (v484 + v443);
  LODWORD(v472) = *(_DWORD *)(v13 + 7184);
  LODWORD(v458) = *(_DWORD *)(v13 + 7416);
  *(_DWORD *)(v13 + 9448) = *(_DWORD *)(v13 + 3732) ^ *(_DWORD *)(v13 + 9384) ^ (v458 + v472);
  LODWORD(v476) = *(_DWORD *)(v13 + 8880) ^ *(_DWORD *)(v13 + 9160);
  v485 = *(_DWORD *)(v13 + 7168);
  *(_DWORD *)(v13 + 9432) = v475 ^ v485;
  *(_DWORD *)(v13 + 9464) = v476 ^ v485;
  *(_DWORD *)(v13 + 9656) ^= v462 ^ *(_DWORD *)(v13 + 9568) ^ *(_DWORD *)(v13 + 3412) ^ *(_DWORD *)(v13 + 9096) ^ *(_DWORD *)(v13 + 7176);
  LODWORD(v475) = *(_DWORD *)(v13 + 3728) ^ *(_DWORD *)(v13 + 9128);
  LODWORD(v477) = *(_DWORD *)(v13 + 7696);
  v486 = *(_DWORD *)(v13 + 7448);
  *(_DWORD *)(v13 + 9416) = *(_DWORD *)(v13 + 3724) ^ *(_DWORD *)(v13 + 3408) ^ v456 ^ v477 ^ v486 ^ *(_DWORD *)(v13 + 9136);
  *(_DWORD *)(v13 + 9568) = *(_DWORD *)(v13 + 3404) ^ v463 ^ v466 ^ v479 ^ *(_DWORD *)(v13 + 9456) ^ *(_DWORD *)(v13 + 7264);
  LODWORD(v462) = *(_DWORD *)(v13 + 9520);
  *(_DWORD *)(v13 + 9488) ^= *(_DWORD *)(v13 + 3720) ^ v462 ^ *(_DWORD *)(v13 + 3716) ^ *(_DWORD *)(v13 + 7192);
  LODWORD(v479) = *(_DWORD *)(v13 + 3712) ^ v443 ^ *(_DWORD *)(v13 + 8764);
  v487 = *(_QWORD *)(v13 + 6992);
  *(_DWORD *)(v13 + 9160) = *(_DWORD *)(v13 + 3708) ^ *(_QWORD *)(v13 + 8872) ^ (v487 | v458);
  LODWORD(v461) = v482;
  *(_DWORD *)(v13 + 9456) = *(_DWORD *)(v13 + 3704) ^ *(_DWORD *)(v13 + 8760) ^ (v482 | v443);
  *(_DWORD *)(v13 + 9400) ^= *(_DWORD *)(v13 + 3700) ^ v462 ^ *(_DWORD *)(v13 + 3696) ^ *(_DWORD *)(v13 + 7144);
  *(_DWORD *)(v13 + 9200) = *(_DWORD *)(v13 + 3692) ^ *(_DWORD *)(v13 + 8728) ^ *(_DWORD *)(v13 + 7272);
  LODWORD(v478) = *(_DWORD *)(v13 + 3680) ^ *(_DWORD *)(v13 + 8720);
  v488 = *(_QWORD *)(v13 + 7128);
  v489 = v488 ^ v486 ^ *(_DWORD *)(v13 + 3688) ^ *(_DWORD *)(v13 + 3684) ^ *(_QWORD *)(v13 + 8736);
  *(_DWORD *)(v13 + 9136) = v447 ^ v462 ^ *(_DWORD *)(v13 + 3444) ^ *(_DWORD *)(v13 + 3676) ^ *(_DWORD *)(v13 + 9504) ^ *(_DWORD *)(v13 + 7112);
  LODWORD(v476) = *(_DWORD *)(v13 + 3668) ^ *(_DWORD *)(v13 + 3672) ^ *(_DWORD *)(v13 + 8744);
  LODWORD(v447) = *(_DWORD *)(v13 + 3664) ^ *(_DWORD *)(v13 + 8752);
  *(_DWORD *)(v13 + 9504) = *(_DWORD *)(v13 + 3656) ^ *(_DWORD *)(v13 + 3448) ^ *(_QWORD *)(v13 + 3384) ^ *(_DWORD *)(v13 + 8696) ^ *(_DWORD *)(v13 + 7160);
  LODWORD(v465) = *(_DWORD *)(v13 + 3660) ^ *(_DWORD *)(v13 + 8704);
  v490 = v462 ^ *(_DWORD *)(v13 + 3452) ^ *(_DWORD *)(v13 + 3652) ^ *(_QWORD *)(v13 + 3392) ^ *(_DWORD *)(v13 + 6288);
  v491 = *(_QWORD *)(v13 + 7256);
  v492 = *(_QWORD *)(v13 + 7424);
  *(_DWORD *)(v13 + 8720) = v475 ^ v491 ^ v492;
  *(_DWORD *)(v13 + 9128) = v490 ^ v491 ^ v492;
  *(_DWORD *)(v13 + 9096) = *(_DWORD *)(v13 + 3648) ^ *(_QWORD *)(v13 + 8712) ^ (v486 | v477);
  v493 = *(_DWORD *)(v13 + 9408);
  LODWORD(v463) = v476 ^ v493;
  LODWORD(v475) = v462 ^ *(_DWORD *)(v13 + 3636) ^ *(_DWORD *)(v13 + 3640) ^ v493;
  v494 = v488 | v458;
  LODWORD(v452) = v488;
  LODWORD(v476) = *(_DWORD *)(v13 + 3644) ^ (v488 | v458);
  LODWORD(v488) = *(_DWORD *)(v13 + 9496);
  *(_DWORD *)(v13 + 9408) = v476 ^ v488;
  v495 = v461;
  v496 = *(_DWORD *)(v13 + 7552);
  LODWORD(v461) = v461 + v496;
  *(_DWORD *)(v13 + 9496) = v461 ^ v475 ^ v488;
  LODWORD(v475) = *(_DWORD *)(v13 + 3632) ^ *(_DWORD *)(v13 + 3484) ^ *(_QWORD *)(v13 + 3416);
  v497 = *(_DWORD *)(v13 + 3744) ^ v483 ^ v495;
  *(_DWORD *)(v13 + 7272) = v479 ^ v495;
  *(_DWORD *)(v13 + 8880) = v475 ^ (v495 | v483) ^ *(_DWORD *)(v13 + 6336);
  v498 = v468 ^ v472 ^ v458;
  *(_DWORD *)(v13 + 8764) = *(_DWORD *)(v13 + 3628) ^ (v458 | v472) ^ *(_QWORD *)(v13 + 6944);
  *(_DWORD *)(v13 + 8872) = *(_DWORD *)(v13 + 3624) ^ (v486 | v472) ^ *(_DWORD *)(v13 + 6936);
  *(_DWORD *)(v13 + 8760) = *(_DWORD *)(v13 + 3400) ^ v462 ^ v480 ^ *(_DWORD *)(v13 + 3488) ^ *(_QWORD *)(v13 + 3432) ^ (v483 | v492) ^ *(_DWORD *)(v13 + 6128);
  *(_DWORD *)(v13 + 8704) = v465 ^ v492 ^ v443;
  *(_DWORD *)(v13 + 8728) = *(_DWORD *)(v13 + 3620) ^ v492 ^ v443 ^ *(_DWORD *)(v13 + 6156);
  LODWORD(v465) = *(_DWORD *)(v13 + 7232);
  *(_DWORD *)(v13 + 8752) = *(_DWORD *)(v13 + 3616) ^ v465 ^ *(_QWORD *)(v13 + 6744);
  LODWORD(v475) = v492 | v443;
  v499 = v492;
  LODWORD(v492) = v443;
  *(_DWORD *)(v13 + 8744) = *(_DWORD *)(v13 + 3612) ^ v475 ^ *(_DWORD *)(v13 + 6064);
  v500 = *(_QWORD *)(v13 + 7576);
  *(_DWORD *)(v13 + 8736) = *(_DWORD *)(v13 + 3600) ^ (v452 | v500) ^ *(_DWORD *)(v13 + 6068);
  *(_DWORD *)(v13 + 8712) = *(_DWORD *)(v13 + 9688) ^ *(_DWORD *)(v13 + 7216) ^ *(_QWORD *)(v13 + 6760);
  *(_DWORD *)(v13 + 9688) = *(_DWORD *)(v13 + 3492) ^ *(_QWORD *)(v13 + 3736) ^ *(_QWORD *)(v13 + 3456) ^ v481 ^ *(_DWORD *)(v13 + 7592) ^ *(_DWORD *)(v13 + 6084);
  v501 = v447 ^ v465;
  v502 = *(_DWORD *)(v13 + 3604) ^ v462 ^ *(_DWORD *)(v13 + 3608) ^ v465 ^ *(_DWORD *)(v13 + 3780);
  LODWORD(v481) = v462;
  LODWORD(v475) = v462 ^ *(_DWORD *)(v13 + 3496) ^ *(_QWORD *)(v13 + 3464) ^ *(_DWORD *)(v13 + 8632);
  LODWORD(v483) = v491 | v484;
  LODWORD(v462) = *(_DWORD *)(v13 + 7584);
  *(_DWORD *)(v13 + 8696) = v475 ^ v462 ^ v491 ^ *(_DWORD *)(v13 + 6292);
  LODWORD(v458) = *(_DWORD *)(v13 + 7208);
  v503 = *(_DWORD *)(v13 + 3768) ^ v458;
  *(_DWORD *)(v13 + 8616) ^= *(_QWORD *)(v13 + 3472) ^ v481 ^ *(_DWORD *)(v13 + 3500) ^ v458 ^ *(_DWORD *)(v13 + 6296);
  LODWORD(v475) = *(_DWORD *)(v13 + 7632);
  v504 = v478 ^ v475;
  *(_DWORD *)(v13 + 7632) = *(_DWORD *)(v13 + 3596) ^ v475 ^ *(_QWORD *)(v13 + 6320);
  LODWORD(v475) = *(_DWORD *)(v13 + 3592) ^ *(_DWORD *)(v13 + 7200);
  *(_DWORD *)(v13 + 8632) = *(_QWORD *)(v13 + 3424) ^ *(_QWORD *)(v13 + 7328) ^ v481 ^ *(_DWORD *)(v13 + 3588) ^ *(_DWORD *)(v13 + 7280) ^ *(_DWORD *)(v13 + 6072);
  v505 = v481 ^ *(_DWORD *)(v13 + 9616);
  *(_DWORD *)(v13 + 7552) = v505 ^ *(_DWORD *)(v13 + 3584) ^ *(_DWORD *)(v13 + 3580) ^ v496 ^ v499 ^ *(_DWORD *)(v13 + 5432);
  *(_DWORD *)(v13 + 7424) = *(_DWORD *)(v13 + 3576) ^ (v452 | v486) ^ *(_QWORD *)(v13 + 6024);
  v506 = *(_DWORD *)(v13 + 7224);
  v507 = v463 ^ v506;
  *(_DWORD *)(v13 + 9616) = *(_DWORD *)(v13 + 3572) ^ v506 ^ *(_DWORD *)(v13 + 6020);
  LODWORD(v463) = v486 ^ v481 ^ *(_DWORD *)(v13 + 8964) ^ *(_DWORD *)(v13 + 3516) ^ *(_DWORD *)(v13 + 7312) ^ v487;
  *(_DWORD *)(v13 + 8964) = *(_DWORD *)(v13 + 7240) ^ *(_DWORD *)(v13 + 3568) ^ *(_DWORD *)(v13 + 3564) ^ *(_DWORD *)(v13 + 6080);
  *(_DWORD *)(v13 + 7448) = *(_DWORD *)(v13 + 3560) ^ *(_DWORD *)(v13 + 7248) ^ *(_QWORD *)(v13 + 5424);
  v508 = *(_DWORD *)(v13 + 8748) ^ v483;
  v509 = *(_DWORD *)(v13 + 6216);
  v510 = v475 ^ v509;
  *(_DWORD *)(v13 + 8748) = *(_QWORD *)(v13 + 3504) ^ *(_DWORD *)(v13 + 3556) ^ *(_QWORD *)(v13 + 9584) ^ v483 ^ v509 ^ *(_DWORD *)(v13 + 6060);
  *(_DWORD *)(v13 + 7416) = v477 ^ v481 ^ *(_DWORD *)(v13 + 3552) ^ *(_DWORD *)(v13 + 3548) ^ *(_QWORD *)(v13 + 7288) ^ *(_DWORD *)(v13 + 6036);
  *(_DWORD *)(v13 + 7408) = *(_DWORD *)(v13 + 8984) ^ *(_DWORD *)(v13 + 3544) ^ *(_QWORD *)(v13 + 3520) ^ *(_DWORD *)(v13 + 7296) ^ *(_DWORD *)(v13 + 6040);
  *(_DWORD *)(v13 + 9584) = ((*(_DWORD *)(v13 + 3540) ^ (v462 + v492))
                           - 1369494618
                           - ((2 * (*(_DWORD *)(v13 + 3540) ^ (v462 + v492))) & 0x5CBE574C)) ^ 0xAE5F2BA6 ^ *(_QWORD *)(v13 + 6048);
  LODWORD(v475) = *(_DWORD *)(v13 + 3536) ^ v494;
  v511 = *(_DWORD *)(v13 + 6332);
  v512 = v463 ^ v511;
  v513 = v505 ^ *(_DWORD *)(v13 + 3532) ^ *(_DWORD *)(v13 + 3528) ^ v461 ^ v511;
  v514 = *(_DWORD *)(v13 + 6044);
  *(_DWORD *)(v13 + 8984) = v475 ^ v514;
  *(_DWORD *)(v13 + 7696) = v513 ^ v514;
  *(_DWORD *)(v13 + 9608) = *(_QWORD *)(v13 + 9592) ^ *(_QWORD *)(v13 + 9608) ^ v481 ^ *(_DWORD *)(v13 + 7336) ^ (v500 | v472) ^ *(_DWORD *)(v13 + 9600);
  v515 = *(_DWORD *)(v13 + 7304) ^ v481 ^ *(_DWORD *)(v13 + 9736) ^ *(_DWORD *)(v13 + 9664) ^ *(_DWORD *)(v13 + 9624);
  v516 = (v504 + v489) ^ *(_QWORD *)(v13 + 4536) ^ v502;
  *(_DWORD *)(v13 + 9384) = v516;
  v517 = ((v516 ^ 0x83BCC207) & 1) == 0;
  v518 = v516 ^ 7;
  *(_DWORD *)(v13 + 7592) = v516 ^ 0x83BCC207;
  if (((v516 ^ 0x83BCC207) & 1) != 0)
    v519 = v508;
  else
    v519 = v498;
  *(_DWORD *)(v13 + 9664) = v519;
  v520 = *(_DWORD *)(v13 + 9432);
  if (v517)
    v521 = v508;
  else
    v521 = *(_DWORD *)(v13 + 9432);
  *(_DWORD *)(v13 + 7688) = v521;
  v522 = *(_DWORD *)(v13 + 9632);
  if (v517)
    v523 = v520;
  else
    v523 = *(_DWORD *)(v13 + 9632);
  if (!v517)
    v522 = v498;
  *(_DWORD *)(v13 + 7584) = v522;
  v524 = *(_DWORD *)(v13 + 9448);
  if (v517)
    v525 = v503;
  else
    v525 = *(_DWORD *)(v13 + 9448);
  *(_DWORD *)(v13 + 9520) = v525;
  v526 = *(_DWORD *)(v13 + 9480);
  if (v517)
    v503 = *(_DWORD *)(v13 + 9480);
  *(_DWORD *)(v13 + 9632) = v503;
  if (v517)
    v526 = v497;
  *(_DWORD *)(v13 + 7576) = v526;
  if (v517)
    v527 = v524;
  else
    v527 = v497;
  *(_DWORD *)(v13 + 7328) = v527;
  v528 = *(_DWORD *)(v13 + 9464);
  v529 = *(_DWORD *)(v13 + 9416);
  if (v517)
    v530 = *(_DWORD *)(v13 + 9416);
  else
    v530 = *(_DWORD *)(v13 + 9464);
  *(_DWORD *)(v13 + 9736) = v530;
  v531 = *(_DWORD *)(v13 + 8720);
  if (v517)
    v529 = *(_DWORD *)(v13 + 8720);
  *(_DWORD *)(v13 + 7344) = v529;
  v532 = *(_DWORD *)(v13 + 9656);
  if (v517)
    v531 = *(_DWORD *)(v13 + 9656);
  *(_DWORD *)(v13 + 9600) = v531;
  if (v517)
    v533 = v528;
  else
    v533 = v532;
  v534 = *(_DWORD *)(v13 + 9568);
  v535 = *(_DWORD *)(v13 + 9160);
  if (v517)
    v536 = *(_DWORD *)(v13 + 9160);
  else
    v536 = *(_DWORD *)(v13 + 9568);
  v537 = *(_DWORD *)(v13 + 9488);
  if (!v517)
    v534 = *(_DWORD *)(v13 + 9488);
  *(_DWORD *)(v13 + 7336) = v534;
  v538 = *(_DWORD *)(v13 + 7272);
  if (v517)
    v539 = v537;
  else
    v539 = *(_DWORD *)(v13 + 7272);
  if (!v517)
    v538 = v535;
  *(_DWORD *)(v13 + 8720) = v538;
  v540 = *(_DWORD *)(v13 + 9456);
  if (v517)
    v541 = v489;
  else
    v541 = *(_DWORD *)(v13 + 9456);
  *(_DWORD *)(v13 + 9488) = v541;
  if (v517)
    v542 = v540;
  else
    v542 = *(_DWORD *)(v13 + 9400);
  if (v517)
    v543 = *(_DWORD *)(v13 + 9400);
  else
    v543 = *(_DWORD *)(v13 + 9200);
  if (v517)
    v544 = *(_DWORD *)(v13 + 9200);
  else
    v544 = v489;
  v545 = *(_DWORD *)(v13 + 9136);
  if (v517)
    v546 = *(_DWORD *)(v13 + 9136);
  else
    v546 = v507;
  *(_DWORD *)(v13 + 9592) = v546;
  if (v517)
    v547 = v504;
  else
    v547 = v545;
  if (v517)
    v548 = v507;
  else
    v548 = v501;
  if (v517)
    v549 = v501;
  else
    v549 = v504;
  *(_DWORD *)(v13 + 9568) = v549;
  v550 = *(_DWORD *)(v13 + 9128);
  v551 = *(_DWORD *)(v13 + 9096);
  if (v517)
    v552 = *(_DWORD *)(v13 + 9128);
  else
    v552 = *(_DWORD *)(v13 + 9096);
  *(_DWORD *)(v13 + 9400) = v552;
  v553 = *(_DWORD *)(v13 + 8704);
  if (!v517)
    v551 = *(_DWORD *)(v13 + 8704);
  *(_DWORD *)(v13 + 9464) = v551;
  v554 = *(_DWORD *)(v13 + 9504);
  if (v517)
    v550 = *(_DWORD *)(v13 + 9504);
  *(_DWORD *)(v13 + 9200) = v550;
  if (v517)
    v555 = v553;
  else
    v555 = v554;
  v556 = *(_DWORD *)(v13 + 8880);
  if (v517)
    v557 = *(_DWORD *)(v13 + 9496);
  else
    v557 = *(_DWORD *)(v13 + 8880);
  v558 = *(_DWORD *)(v13 + 9408);
  if (v517)
    v559 = *(_DWORD *)(v13 + 9408);
  else
    v559 = *(_DWORD *)(v13 + 9496);
  *(_DWORD *)(v13 + 9504) = v559;
  if (v517)
    v560 = *(_DWORD *)(v13 + 8764);
  else
    v560 = v558;
  if (v517)
    v561 = v556;
  else
    v561 = *(_DWORD *)(v13 + 8764);
  v562 = *(_DWORD *)(v13 + 8728);
  v563 = *(_DWORD *)(v13 + 8760);
  if (v517)
    v564 = *(_DWORD *)(v13 + 8760);
  else
    v564 = *(_DWORD *)(v13 + 8728);
  *(_DWORD *)(v13 + 9496) = v564;
  v565 = *(_DWORD *)(v13 + 8872);
  if (v517)
    v566 = *(_DWORD *)(v13 + 8872);
  else
    v566 = v563;
  *(_DWORD *)(v13 + 8880) = v566;
  v567 = *(_DWORD *)(v13 + 8752);
  if (v517)
    v568 = *(_DWORD *)(v13 + 8752);
  else
    v568 = v565;
  *(_DWORD *)(v13 + 9416) = v568;
  if (v517)
    v567 = v562;
  v569 = *(_DWORD *)(v13 + 8744);
  if (v517)
    v570 = *(_DWORD *)(v13 + 8744);
  else
    v570 = v502;
  *(_DWORD *)(v13 + 8764) = v570;
  v571 = *(_DWORD *)(v13 + 8712);
  if (v517)
    v572 = *(_DWORD *)(v13 + 8712);
  else
    v572 = v569;
  *(_DWORD *)(v13 + 9456) = v572;
  if (v517)
    v573 = *(_DWORD *)(v13 + 8736);
  else
    v573 = v571;
  if (v517)
    v574 = v502;
  else
    v574 = *(_DWORD *)(v13 + 8736);
  *(_DWORD *)(v13 + 8752) = v574;
  v575 = *(_DWORD *)(v13 + 8616);
  v576 = *(_DWORD *)(v13 + 7632);
  if (v517)
    v577 = *(_DWORD *)(v13 + 8616);
  else
    v577 = *(_DWORD *)(v13 + 7632);
  *(_DWORD *)(v13 + 9408) = v577;
  v578 = *(_DWORD *)(v13 + 8696);
  if (v517)
    v579 = *(_DWORD *)(v13 + 8696);
  else
    v579 = v575;
  *(_DWORD *)(v13 + 9448) = v579;
  v580 = *(_DWORD *)(v13 + 9688);
  if (v517)
    v581 = v576;
  else
    v581 = *(_DWORD *)(v13 + 9688);
  *(_DWORD *)(v13 + 9432) = v581;
  if (v517)
    v582 = v580;
  else
    v582 = v578;
  v583 = *(_DWORD *)(v13 + 7552);
  v584 = *(_DWORD *)(v13 + 7424);
  if (v517)
    v585 = *(_DWORD *)(v13 + 7552);
  else
    v585 = *(_DWORD *)(v13 + 7424);
  *(_DWORD *)(v13 + 9480) = v585;
  if (v517)
    v586 = *(_DWORD *)(v13 + 8632);
  else
    v586 = v583;
  if (v517)
    v587 = v584;
  else
    v587 = v510;
  if (v517)
    v588 = v510;
  else
    v588 = *(_DWORD *)(v13 + 8632);
  *(_DWORD *)(v13 + 9096) = v588;
  v589 = *(_DWORD *)(v13 + 7448);
  if (v517)
    v590 = *(_DWORD *)(v13 + 7448);
  else
    v590 = *(_DWORD *)(v13 + 9616);
  if (v517)
    v591 = *(_DWORD *)(v13 + 9616);
  else
    v591 = v512;
  *(_DWORD *)(v13 + 8744) = v591;
  v592 = *(_DWORD *)(v13 + 8964);
  if (v517)
    v593 = v512;
  else
    v593 = *(_DWORD *)(v13 + 8964);
  if (!v517)
    v592 = v589;
  v594 = *(_DWORD *)(v13 + 8748);
  v595 = *(_DWORD *)(v13 + 9584);
  if (v517)
    v596 = *(_DWORD *)(v13 + 9584);
  else
    v596 = *(_DWORD *)(v13 + 8748);
  *(_DWORD *)(v13 + 8760) = v596;
  v597 = *(_DWORD *)(v13 + 7416);
  if (v517)
    v598 = v594;
  else
    v598 = *(_DWORD *)(v13 + 7416);
  *(_DWORD *)(v13 + 7304) = v598;
  if (v517)
    v599 = v597;
  else
    v599 = *(_DWORD *)(v13 + 7408);
  if (v517)
    v600 = *(_DWORD *)(v13 + 7408);
  else
    v600 = v595;
  v601 = *(_DWORD *)(v13 + 9608);
  if (v517)
    v602 = *(_DWORD *)(v13 + 9608);
  else
    v602 = v515;
  *(_DWORD *)(v13 + 8632) = v602;
  v603 = *(_DWORD *)(v13 + 8984);
  if (v517)
    v604 = v515;
  else
    v604 = *(_DWORD *)(v13 + 8984);
  v605 = *(_DWORD *)(v13 + 7696);
  if (!v517)
    v603 = *(_DWORD *)(v13 + 7696);
  *(_DWORD *)(v13 + 7312) = v603;
  if (!v517)
    v605 = v601;
  v606 = (v518 & 2) == 0;
  v607 = *(_DWORD *)(v13 + 9664);
  if ((v518 & 2) != 0)
    v608 = v523;
  else
    v608 = *(_DWORD *)(v13 + 9664);
  *(_DWORD *)(v13 + 9128) = v608;
  if (!v606)
    v523 = v607;
  *(_DWORD *)(v13 + 9624) = v523;
  v609 = *(_DWORD *)(v13 + 7688);
  v610 = *(_DWORD *)(v13 + 7584);
  if (v606)
    v611 = *(_DWORD *)(v13 + 7584);
  else
    v611 = *(_DWORD *)(v13 + 7688);
  *(_DWORD *)(v13 + 9616) = v611;
  if (v606)
    v612 = v609;
  else
    v612 = v610;
  *(_DWORD *)(v13 + 7280) = v612;
  v613 = *(_DWORD *)(v13 + 9520);
  v614 = *(_DWORD *)(v13 + 7576);
  if (v606)
    v615 = *(_DWORD *)(v13 + 7576);
  else
    v615 = *(_DWORD *)(v13 + 9520);
  *(_DWORD *)(v13 + 9664) = v615;
  if (v606)
    v616 = v613;
  else
    v616 = v614;
  *(_DWORD *)(v13 + 7576) = v616;
  v617 = *(_DWORD *)(v13 + 9632);
  v618 = *(_DWORD *)(v13 + 7328);
  if (v606)
    v619 = *(_DWORD *)(v13 + 7328);
  else
    v619 = *(_DWORD *)(v13 + 9632);
  *(_DWORD *)(v13 + 9656) = v619;
  if (v606)
    v620 = v617;
  else
    v620 = v618;
  *(_DWORD *)(v13 + 9520) = v620;
  v621 = *(_DWORD *)(v13 + 7344);
  if (v606)
    v622 = *(_DWORD *)(v13 + 7344);
  else
    v622 = v533;
  *(_DWORD *)(v13 + 7584) = v622;
  if (!v606)
    v533 = v621;
  *(_DWORD *)(v13 + 8872) = v533;
  if (v606)
    v623 = v536;
  else
    v623 = v539;
  *(_DWORD *)(v13 + 9160) = v623;
  if (!v606)
    v539 = v536;
  *(_DWORD *)(v13 + 9136) = v539;
  v624 = *(_DWORD *)(v13 + 9736);
  v625 = *(_DWORD *)(v13 + 9600);
  if (v606)
    v626 = *(_DWORD *)(v13 + 9600);
  else
    v626 = *(_DWORD *)(v13 + 9736);
  *(_DWORD *)(v13 + 7552) = v626;
  if (v606)
    v627 = v624;
  else
    v627 = v625;
  *(_DWORD *)(v13 + 9632) = v627;
  v628 = *(_DWORD *)(v13 + 8720);
  v629 = *(_DWORD *)(v13 + 7336);
  if (v606)
    v630 = *(_DWORD *)(v13 + 8720);
  else
    v630 = *(_DWORD *)(v13 + 7336);
  *(_DWORD *)(v13 + 7408) = v630;
  if (v606)
    v631 = v629;
  else
    v631 = v628;
  *(_DWORD *)(v13 + 7336) = v631;
  if (v606)
    v632 = v544;
  else
    v632 = v542;
  *(_DWORD *)(v13 + 7688) = v632;
  if (v606)
    v544 = v542;
  *(_DWORD *)(v13 + 7424) = v544;
  v633 = *(_DWORD *)(v13 + 9488);
  if (v606)
    v634 = *(_DWORD *)(v13 + 9488);
  else
    v634 = v543;
  *(_DWORD *)(v13 + 7328) = v634;
  if (v606)
    v635 = v543;
  else
    v635 = v633;
  *(_DWORD *)(v13 + 9736) = v635;
  if (v606)
    v636 = v547;
  else
    v636 = v548;
  *(_DWORD *)(v13 + 9608) = v636;
  if (!v606)
    v548 = v547;
  *(_DWORD *)(v13 + 7416) = v548;
  v637 = *(_DWORD *)(v13 + 9400);
  if (v606)
    v638 = *(_DWORD *)(v13 + 9400);
  else
    v638 = v555;
  *(_DWORD *)(v13 + 7344) = v638;
  if (v606)
    v639 = v555;
  else
    v639 = v637;
  *(_DWORD *)(v13 + 7448) = v639;
  if (v606)
    v640 = v557;
  else
    v640 = v560;
  *(_DWORD *)(v13 + 9400) = v640;
  if (v606)
    v641 = v560;
  else
    v641 = v557;
  *(_DWORD *)(v13 + 9600) = v641;
  v642 = *(_DWORD *)(v13 + 9464);
  v643 = *(_DWORD *)(v13 + 9200);
  if (v606)
    v644 = *(_DWORD *)(v13 + 9200);
  else
    v644 = *(_DWORD *)(v13 + 9464);
  *(_DWORD *)(v13 + 8696) = v644;
  if (v606)
    v645 = v642;
  else
    v645 = v643;
  *(_DWORD *)(v13 + 9488) = v645;
  v646 = *(_DWORD *)(v13 + 9592);
  v647 = *(_DWORD *)(v13 + 9568);
  if (v606)
    v648 = *(_DWORD *)(v13 + 9592);
  else
    v648 = *(_DWORD *)(v13 + 9568);
  *(_DWORD *)(v13 + 7696) = v648;
  if (v606)
    v649 = v647;
  else
    v649 = v646;
  *(_DWORD *)(v13 + 7632) = v649;
  v650 = *(_DWORD *)(v13 + 9504);
  if (v606)
    v651 = v561;
  else
    v651 = *(_DWORD *)(v13 + 9504);
  *(_DWORD *)(v13 + 8704) = v651;
  if (v606)
    v652 = v650;
  else
    v652 = v561;
  *(_DWORD *)(v13 + 8736) = v652;
  v653 = *(_DWORD *)(v13 + 8880);
  if (v606)
    v654 = v567;
  else
    v654 = *(_DWORD *)(v13 + 8880);
  *(_DWORD *)(v13 + 9504) = v654;
  if (v606)
    v655 = v653;
  else
    v655 = v567;
  *(_DWORD *)(v13 + 9688) = v655;
  v656 = *(_DWORD *)(v13 + 9496);
  v657 = *(_DWORD *)(v13 + 9416);
  if (v606)
    v658 = *(_DWORD *)(v13 + 9496);
  else
    v658 = *(_DWORD *)(v13 + 9416);
  *(_DWORD *)(v13 + 9464) = v658;
  if (v606)
    v659 = v657;
  else
    v659 = v656;
  *(_DWORD *)(v13 + 8728) = v659;
  v660 = *(_DWORD *)(v13 + 8764);
  if (v606)
    v661 = v573;
  else
    v661 = *(_DWORD *)(v13 + 8764);
  *(_DWORD *)(v13 + 8880) = v661;
  if (v606)
    v662 = v660;
  else
    v662 = v573;
  *(_DWORD *)(v13 + 8748) = v662;
  v663 = *(_DWORD *)(v13 + 9456);
  v664 = *(_DWORD *)(v13 + 8752);
  if (v606)
    v665 = *(_DWORD *)(v13 + 8752);
  else
    v665 = *(_DWORD *)(v13 + 9456);
  *(_DWORD *)(v13 + 9496) = v665;
  if (v606)
    v666 = v663;
  else
    v666 = v664;
  *(_DWORD *)(v13 + 9416) = v666;
  v667 = *(_DWORD *)(v13 + 9408);
  if (v606)
    v668 = *(_DWORD *)(v13 + 9408);
  else
    v668 = v582;
  *(_DWORD *)(v13 + 9584) = v668;
  if (v606)
    v669 = v582;
  else
    v669 = v667;
  *(_DWORD *)(v13 + 9456) = v669;
  if (v606)
    v670 = v587;
  else
    v670 = v586;
  *(_DWORD *)(v13 + 9568) = v670;
  if (v606)
    v671 = v586;
  else
    v671 = v587;
  *(_DWORD *)(v13 + 9592) = v671;
  v672 = *(_DWORD *)(v13 + 9448);
  v673 = *(_DWORD *)(v13 + 9432);
  if (v606)
    v674 = *(_DWORD *)(v13 + 9432);
  else
    v674 = *(_DWORD *)(v13 + 9448);
  *(_DWORD *)(v13 + 8720) = v674;
  if (v606)
    v675 = v672;
  else
    v675 = v673;
  *(_DWORD *)(v13 + 9408) = v675;
  if (v606)
    v676 = v593;
  else
    v676 = v590;
  *(_DWORD *)(v13 + 8964) = v676;
  if (v606)
    v677 = v590;
  else
    v677 = v593;
  *(_DWORD *)(v13 + 8764) = v677;
  v678 = *(_DWORD *)(v13 + 9480);
  v679 = *(_DWORD *)(v13 + 9096);
  if (v606)
    v680 = *(_DWORD *)(v13 + 9480);
  else
    v680 = *(_DWORD *)(v13 + 9096);
  *(_DWORD *)(v13 + 9432) = v680;
  if (v606)
    v681 = v679;
  else
    v681 = v678;
  *(_DWORD *)(v13 + 8616) = v681;
  v682 = *(_DWORD *)(v13 + 8744);
  if (v606)
    v683 = v592;
  else
    v683 = *(_DWORD *)(v13 + 8744);
  *(_DWORD *)(v13 + 9448) = v683;
  if (v606)
    v684 = v682;
  else
    v684 = v592;
  *(_DWORD *)(v13 + 9200) = v684;
  v685 = *(_DWORD *)(v13 + 8760);
  if (v606)
    v686 = *(_DWORD *)(v13 + 8760);
  else
    v686 = v599;
  *(_DWORD *)(v13 + 8984) = v686;
  if (v606)
    v687 = v599;
  else
    v687 = v685;
  *(_DWORD *)(v13 + 8752) = v687;
  v688 = *(_DWORD *)(v13 + 7304);
  if (v606)
    v689 = v600;
  else
    v689 = *(_DWORD *)(v13 + 7304);
  *(_DWORD *)(v13 + 8712) = v689;
  if (v606)
    v690 = v688;
  else
    v690 = v600;
  *(_DWORD *)(v13 + 9480) = v690;
  if (v606)
    v691 = v604;
  else
    v691 = v605;
  *(_DWORD *)(v13 + 9096) = v691;
  if (v606)
    v692 = v605;
  else
    v692 = v604;
  *(_DWORD *)(v13 + 8760) = v692;
  v693 = *(_DWORD *)(v13 + 8632);
  v694 = *(_DWORD *)(v13 + 7312);
  if (v606)
    v695 = *(_DWORD *)(v13 + 8632);
  else
    v695 = *(_DWORD *)(v13 + 7312);
  *(_DWORD *)(v13 + 8744) = v695;
  if (v606)
    v696 = v694;
  else
    v696 = v693;
  *(_DWORD *)(v13 + 8632) = v696;
  v697 = *(_DWORD *)(v13 + 8260);
  v698 = *(_DWORD *)(v13 + 7984);
  v699 = *(_DWORD *)(v13 + 8020);
  v700 = *(_DWORD *)(v13 + 8312);
  v701 = *(_DWORD *)(v13 + 7776);
  v702 = *(_DWORD *)(v13 + 7704);
  v703 = *(_DWORD *)(v13 + 7944);
  v704 = *(_DWORD *)(v13 + 8368);
  v705 = *(_DWORD *)(v13 + 7992);
  v706 = *(_DWORD *)(v13 + 8280);
  v707 = *(_DWORD *)(v13 + 8360);
  v708 = *(_DWORD *)(v13 + 8264);
  v709 = *(_DWORD *)(v13 + 8032);
  v710 = *(_DWORD *)(v13 + 7888);
  v711 = *(_DWORD *)(v13 + 7784);
  v712 = *(_DWORD *)(v13 + 7976);
  v713 = *(_DWORD *)(v13 + 8236);
  v714 = *(_DWORD *)(v13 + 7952);
  v715 = *(_DWORD *)(v13 + 8000);
  v716 = *(_DWORD *)(v13 + 7616);
  v717 = *(_DWORD *)(v13 + 8612) ^ *(_DWORD *)(v13 + 9472) ^ *(_DWORD *)(v13 + 8640) ^ *(_DWORD *)(v13 + 9528) ^ *(_DWORD *)(v13 + 8656) ^ v697 ^ *(_DWORD *)(v13 + 9424) ^ *(_DWORD *)(v13 + 8288) ^ *(_DWORD *)(v13 + 8688) ^ *(_DWORD *)(v13 + 8400) ^ *(_DWORD *)(v13 + 8768) ^ *(_DWORD *)(v13 + 8680) ^ *(_DWORD *)(v13 + 8352) ^ *(_DWORD *)(v13 + 8392) ^ v699 ^ v698 ^ v700 ^ *(_DWORD *)(v13 + 8672) ^ v701 ^ v702 ^ *(_DWORD *)(v13 + 8440) ^ *(_DWORD *)(v13 + 7712) ^ *(_DWORD *)(v13 + 8664) ^ v703 ^ v704 ^ v705 ^ *(_DWORD *)(v13 + 9440) ^ *(_DWORD *)(v13 + 8356) ^ *(_DWORD *)(v13 + 9080) ^ *(_DWORD *)(v13 + 8496) ^ *(_DWORD *)(v13 + 8384) ^ *(_DWORD *)(v13 + 9008) ^ v706 ^ v707 ^ v708 ^ *(_DWORD *)(v13 + 8888) ^ v709 ^ v710 ^ v711 ^ v712 ^ *(_DWORD *)(v13 + 8648) ^ v713 ^ v714 ^ v715 ^ v716;
  v718 = *(_DWORD *)(v13 + 8504) ^ *(_DWORD *)(v13 + 8512);
  *(_DWORD *)(v13 + 7296) = v718;
  v719 = *(_DWORD *)(v13 + 7792);
  v720 = *(_DWORD *)(v13 + 7936);
  v721 = v718 ^ v717 ^ v719 ^ v720 ^ *(_DWORD *)(v13 + 7680) ^ *(_DWORD *)(v13 + 8008) ^ *(_DWORD *)(v13 + 8376);
  v722 = *(_DWORD *)(v13 + 9576);
  v723 = *(_DWORD *)(v13 + 8024);
  v724 = v721 ^ v722 ^ *(_DWORD *)(v13 + 8408) ^ v723;
  *(_DWORD *)(v13 + 7304) = v724;
  v725 = ((((*(_DWORD *)(v13 + 9448)
           - *(_DWORD *)(v13 + 9568)
           + ((((v684 - (v698 + v697) + 687200640) ^ *(_DWORD *)(v13 + 9688)) - (v707 + v701)) ^ v709)) ^ v705)
         - *(_DWORD *)(v13 + 9432)) ^ v703)
       + v722;
  v726 = *(_DWORD *)(v13 + 7672);
  v727 = (((v708 - v700 + v704 + *(_DWORD *)(v13 + 9600) + (*(_DWORD *)(v13 + 9504) ^ v726 ^ v725)) ^ v699)
        - *(_DWORD *)(v13 + 9496)) ^ *(_DWORD *)(v13 + 7688);
  v728 = *(_DWORD *)(v13 + 7640);
  v729 = *(_DWORD *)(v13 + 7656);
  v730 = *(_DWORD *)(v13 + 7648);
  v731 = *(_DWORD *)(v13 + 7664);
  v732 = *(_DWORD *)(v13 + 9392);
  v733 = v732 ^ v728 ^ 0x1B8E2A9D ^ v729 ^ v730 ^ v731 ^ v724;
  *(_DWORD *)(v13 + 7312) = v733;
  v734 = *(_DWORD *)(v13 + 7592);
  v735 = *(_DWORD *)(v13 + 7336);
  v736 = *(_DWORD *)(v13 + 9480) ^ v735 ^ (*(_DWORD *)(v13 + 8760)
                                         - v712
                                         + (((*(_DWORD *)(v13 + 9160) ^ *(_DWORD *)(v13 + 9616) ^ ((((*(_DWORD *)(v13 + 8632) ^ *(_DWORD *)(v13 + 8616) ^ ((v729 ^ v706 ^ (*(_DWORD *)(v13 + 9408) - v711 + ((*(_DWORD *)(v13 + 9584) + v728 + (*(_DWORD *)(v13 + 8964) ^ *(_DWORD *)(v13 + 9736) ^ (*(_DWORD *)(v13 + 8764) - (v710 + v719 + *(_DWORD *)(v13 + 9664) + v720) + v733 + v727))) ^ *(_DWORD *)(v13 + 9592)))) - (*(_DWORD *)(v13 + 7632) + *(_DWORD *)(v13 + 8728)))) + v702) ^ v716)
                                                                                                 - v734))
                                           + *(_DWORD *)(v13 + 8748)) ^ v732));
  v737 = *(_DWORD *)(v13 + 7416);
  v738 = *(_DWORD *)(v13 + 9400);
  v739 = *(_DWORD *)(v13 + 7408);
  v740 = (v739
        - *(_DWORD *)(v13 + 8720)
        + (((v713 ^ *(_DWORD *)(v13 + 8680) ^ (((((*(_DWORD *)(v13 + 9424) - v737 + v736) ^ v738)
                                               + *(_DWORD *)(v13 + 9416)) ^ *(_DWORD *)(v13 + 8640))
                                             - *(_DWORD *)(v13 + 8688)))
          - (v714
           + *(_DWORD *)(v13 + 9656))) ^ v715)) ^ *(_DWORD *)(v13 + 9008);
  v741 = *(_DWORD *)(v13 + 7344);
  v742 = *(_DWORD *)(v13 + 8376);
  v743 = v730 ^ *(_DWORD *)(v13 + 8672) ^ ((((*(_DWORD *)(v13 + 9128) ^ *(_DWORD *)(v13 + 8768) ^ (((*(_DWORD *)(v13 + 9080) + *(_DWORD *)(v13 + 8664) - *(_DWORD *)(v13 + 8888) - *(_DWORD *)(v13 + 8656) + *(_DWORD *)(v13 + 9624) + *(_DWORD *)(v13 + 9520) - v741 - *(_DWORD *)(v13 + 9488) + v740) ^ v723)
                                                                                                 + *(_DWORD *)(v13 + 8612)))
                                           - *(_DWORD *)(v13 + 8712)) ^ *(_DWORD *)(v13 + 9440))
                                         - v742);
  v744 = *(_DWORD *)(v13 + 8400);
  v745 = *(_DWORD *)(v13 + 8392);
  v746 = *(_DWORD *)(v13 + 8356);
  v747 = *(_DWORD *)(v13 + 7424);
  v748 = *(_DWORD *)(v13 + 8352);
  v749 = *(_DWORD *)(v13 + 8384);
  v750 = *(_DWORD *)(v13 + 8440);
  v751 = *(_DWORD *)(v13 + 7448);
  v752 = *(_DWORD *)(v13 + 7576);
  v753 = *(_DWORD *)(v13 + 7280);
  v754 = v753
       + v752
       + *(_DWORD *)(v13 + 9096)
       + ((v750
         - v734
         - *(_DWORD *)(v13 + 9632)
         + v751
         + ((v731
           + v749
           + (*(_DWORD *)(v13 + 8872) ^ *(_DWORD *)(v13 + 9472) ^ (*(_DWORD *)(v13 + 9456)
                                                                 - v748
                                                                 + ((v747
                                                                   - (v734
                                                                    + *(_DWORD *)(v13 + 9464))
                                                                   + (*(_DWORD *)(v13 + 8736) ^ v746 ^ ((*(_DWORD *)(v13 + 8696) ^ *(_DWORD *)(v13 + 9136) ^ *(_DWORD *)(v13 + 8880) ^ (*(_DWORD *)(v13 + 9528) + v744 - *(_DWORD *)(v13 + 9608) + v743)) + v745))) ^ *(_DWORD *)(v13 + 8704))))) ^ *(_DWORD *)(v13 + 8648))) ^ *(_DWORD *)(v13 + 8752));
  v755 = *(_DWORD *)(v13 + 7712);
  v756 = *(_DWORD *)(v13 + 8496);
  v757 = *(_DWORD *)(v13 + 7552);
  v758 = *(_DWORD *)(v13 + 8408);
  v759 = *(_DWORD *)(v13 + 8008);
  v760 = *(_DWORD *)(v13 + 8288);
  v761 = *(_DWORD *)(v13 + 7584);
  *(_DWORD *)(v13 + 7296) ^= v761 ^ *(_DWORD *)(v13 + 8984) ^ (((v757
                                                               - (v756
                                                                + *(_DWORD *)(v13 + 7696))
                                                               - v758
                                                               + *(_DWORD *)(v13 + 8744)
                                                               + (v754 ^ v755)) ^ v759)
                                                             - v760);
  v762 = (v738 & 0x8A2D1941 ^ 0x8A2D1941) + (v738 & 0x8A2D1941);
  v763 = v742 & 0x23AC60B6 ^ 0x23AC60B6;
  *(_DWORD *)(v13 + 7288) = v763 + (v742 & 0x23AC60B6);
  v764 = v726 ^ *(_DWORD *)(v13 + 7784) ^ v756 ^ *(_DWORD *)(v13 + 8664) ^ v750 ^ v755 ^ *(_DWORD *)(v13 + 7984) ^ *(_DWORD *)(v13 + 8020) ^ v760 ^ *(_DWORD *)(v13 + 8688) ^ *(_DWORD *)(v13 + 8656) ^ *(_DWORD *)(v13 + 8260) ^ *(_DWORD *)(v13 + 9424) ^ v744 ^ *(_DWORD *)(v13 + 8768) ^ *(_DWORD *)(v13 + 8680) ^ v748 ^ v745 ^ *(_DWORD *)(v13 + 9528) ^ *(_DWORD *)(v13 + 8640) ^ *(_DWORD *)(v13 + 8000) ^ *(_DWORD *)(v13 + 8312) ^ *(_DWORD *)(v13 + 8672) ^ *(_DWORD *)(v13 + 7776) ^ *(_DWORD *)(v13 + 7704) ^ *(_DWORD *)(v13 + 7944) ^ *(_DWORD *)(v13 + 8368) ^ *(_DWORD *)(v13 + 7992) ^ *(_DWORD *)(v13 + 9440) ^ v746 ^ *(_DWORD *)(v13 + 9080) ^ v749 ^ *(_DWORD *)(v13 + 9008) ^ *(_DWORD *)(v13 + 8360) ^ *(_DWORD *)(v13 + 8264) ^ *(_DWORD *)(v13 + 8280) ^ *(_DWORD *)(v13 + 8888) ^ *(_DWORD *)(v13 + 8032) ^ *(_DWORD *)(v13 + 7888) ^ *(_DWORD *)(v13 + 9472) ^ *(_DWORD *)(v13 + 8612) ^ *(_DWORD *)(v13 + 7976) ^ *(_DWORD *)(v13 + 8236) ^ *(_DWORD *)(v13 + 7952) ^ *(_DWORD *)(v13 + 8648) ^ v759 ^ v742 ^ *(_DWORD *)(v13 + 8512);
  v765 = *(_DWORD *)(v13 + 7616);
  *(_DWORD *)(v13 + 7264) = v765 - (((v742 & 0x2046006) + 1414660609 + (v763 & 0x2046006)) | 0x90102096);
  v766 = *(_DWORD *)(v13 + 7680);
  v767 = v764 ^ v765 ^ *(_DWORD *)(v13 + 8504) ^ *(_DWORD *)(v13 + 7792) ^ v766 ^ *(_DWORD *)(v13 + 7936) ^ *(_DWORD *)(v13 + 8024) ^ *(_DWORD *)(v13 + 9576) ^ v758;
  v768 = *(_DWORD *)(v13 + 7688);
  *(_DWORD *)(v13 + 7248) = (v762 | 0xAEF4900) + v768;
  v769 = *(_DWORD *)(v13 + 7632);
  v770 = *(_DWORD *)(v13 + 9128);
  v771 = *(_DWORD *)(v13 + 8872);
  v772 = *(_DWORD *)(v13 + 9384) ^ v769 ^ v737 ^ v768 ^ v747 ^ *(_DWORD *)(v13 + 9624) ^ *(_DWORD *)(v13 + 9616) ^ v770 ^ v753 ^ *(_DWORD *)(v13 + 9520) ^ v752 ^ *(_DWORD *)(v13 + 9656) ^ *(_DWORD *)(v13 + 9664) ^ v771 ^ v757 ^ v761 ^ v735 ^ *(_DWORD *)(v13 + 9632);
  v773 = *(_DWORD *)(v13 + 9136);
  v774 = *(_DWORD *)(v13 + 9160);
  v775 = *(_DWORD *)(v13 + 7328);
  v776 = *(_DWORD *)(v13 + 7696);
  v777 = *(_DWORD *)(v13 + 8696);
  v778 = *(_DWORD *)(v13 + 8704);
  v779 = v772 ^ v773 ^ v739 ^ v774 ^ *(_DWORD *)(v13 + 9736) ^ v775 ^ *(_DWORD *)(v13 + 9608) ^ v776 ^ v751 ^ v777 ^ v741 ^ *(_DWORD *)(v13 + 9488) ^ v778 ^ *(_DWORD *)(v13 + 9600);
  v780 = *(_DWORD *)(v13 + 8736);
  v781 = *(_DWORD *)(v13 + 8728);
  v782 = *(_DWORD *)(v13 + 8748);
  v783 = *(_DWORD *)(v13 + 8880);
  v784 = *(_DWORD *)(v13 + 8720);
  v785 = *(_DWORD *)(v13 + 8616);
  v786 = *(_DWORD *)(v13 + 8964);
  v787 = *(_DWORD *)(v13 + 8764);
  v788 = *(_DWORD *)(v13 + 8712);
  v789 = *(_DWORD *)(v13 + 8752);
  v790 = v767 ^ v779 ^ v780 ^ *(_DWORD *)(v13 + 9400) ^ *(_DWORD *)(v13 + 9688) ^ *(_DWORD *)(v13 + 9464) ^ *(_DWORD *)(v13 + 9504) ^ v781 ^ *(_DWORD *)(v13 + 9416) ^ v782 ^ *(_DWORD *)(v13 + 9496) ^ v783 ^ *(_DWORD *)(v13 + 9456) ^ *(_DWORD *)(v13 + 9408) ^ *(_DWORD *)(v13 + 9584) ^ v784 ^ *(_DWORD *)(v13 + 9568) ^ v785 ^ *(_DWORD *)(v13 + 9592) ^ *(_DWORD *)(v13 + 9432) ^ *(_DWORD *)(v13 + 9448) ^ *(_DWORD *)(v13 + 9200) ^ v786 ^ v787 ^ v788 ^ v789 ^ *(_DWORD *)(v13 + 9480);
  v791 = *(_DWORD *)(v13 + 8632);
  *(_DWORD *)(v13 + 7232) = v791 - *(_DWORD *)(v13 + 7288);
  v792 = *(_DWORD *)(v13 + 8984);
  v793 = v790 ^ v792 ^ v791;
  v794 = *(_DWORD *)(v13 + 8744);
  v795 = *(_DWORD *)(v13 + 8760);
  v796 = *(_DWORD *)(v13 + 9096);
  *(_DWORD *)(v13 + 8632) = v793 ^ v795 ^ v794 ^ v796 ^ *(_DWORD *)(v13 + 7304);
  v797 = v776 - 102940175;
  v798 = v782 + 1476462075;
  *(_DWORD *)(v13 + 8728) = v771 ^ 0xB7D598C2;
  v799 = (v770 ^ 0x2B1B3BB7) - (v771 ^ 0xB7D598C2);
  *(_DWORD *)(v13 + 8704) = v799;
  v800 = *(_DWORD *)(v13 + 8032) + 1808817506;
  v801 = *(_DWORD *)(v13 + 7784) - v799 + 1877118501;
  *(_DWORD *)(v13 + 8032) = v801;
  v802 = v801 ^ *(_DWORD *)(v13 + 8440);
  *(_DWORD *)(v13 + 7784) = v802;
  v803 = v802 ^ v800 ^ 0xFEDADB0C;
  *(_DWORD *)(v13 + 7688) = v803;
  v804 = v803 ^ (v773 + 1116704701);
  *(_DWORD *)(v13 + 8748) = v804;
  v805 = v795 - v804 + 241617735;
  *(_DWORD *)(v13 + 8440) = v805;
  v806 = v805 ^ v797;
  *(_DWORD *)(v13 + 8760) = v806;
  v807 = v806 ^ v798;
  *(_DWORD *)(v13 + 7256) = v807;
  v808 = *(_DWORD *)(v13 + 7552) ^ 0x673A37A7;
  v809 = v807 ^ (v781 + 1995319255);
  *(_DWORD *)(v13 + 8872) = v809;
  v810 = v809 + v808;
  *(_DWORD *)(v13 + 7696) = v810;
  v811 = v810 ^ (v778 + 1354654824);
  *(_DWORD *)(v13 + 7240) = v811;
  v812 = *(_DWORD *)(v13 + 8496) + 1206637516;
  v813 = *(_DWORD *)(v13 + 7648) - v811 - 1405302292;
  *(_DWORD *)(v13 + 7288) = v813;
  v814 = v813 ^ (v769 - 427929381);
  *(_DWORD *)(v13 + 7616) = v814;
  v815 = v814 ^ v812;
  v816 = *(_DWORD *)(v13 + 8260) - (v814 ^ v812) - 1764083163;
  *(_DWORD *)(v13 + 7272) = v816;
  v817 = *(_DWORD *)(v13 + 9424) - 777440862;
  v818 = v766;
  v819 = *(_DWORD *)(v13 + 7664) - 2145931510;
  v820 = (*(_DWORD *)(v13 + 7296) - v766) ^ v775;
  v821 = *(_DWORD *)(v13 + 8400) + 1374690724;
  v822 = *(_DWORD *)(v13 + 8392) - 532314332;
  v823 = v774 - v816 - 1736300894;
  *(_DWORD *)(v13 + 7552) = v823;
  v824 = (v785 ^ 0xFE1A9749) - v823;
  *(_DWORD *)(v13 + 7648) = v824;
  v825 = v794 - v824 + 1872180814;
  *(_DWORD *)(v13 + 8260) = v825;
  v826 = *(_DWORD *)(v13 + 9440) + 371698237 + v825;
  *(_DWORD *)(v13 + 8744) = v826;
  v827 = v826 + (v786 ^ 0x409FB5B7);
  *(_DWORD *)(v13 + 8496) = v827;
  v828 = v827 ^ v787 ^ 0xB067F04D;
  *(_DWORD *)(v13 + 7304) = v828;
  v829 = v828 ^ v819;
  *(_DWORD *)(v13 + 8616) = v829;
  v830 = v783 - v829 + 31281084;
  *(_DWORD *)(v13 + 8392) = v830;
  v831 = *(_DWORD *)(v13 + 8368) - 1153484495 + v830;
  *(_DWORD *)(v13 + 9440) = v831;
  v832 = v831 ^ v821;
  *(_DWORD *)(v13 + 7664) = v832;
  v833 = *(_DWORD *)(v13 + 8024) - v832 - 668242816;
  *(_DWORD *)(v13 + 8880) = v833;
  v834 = *(_DWORD *)(v13 + 9008) - v833 + 12106364;
  *(_DWORD *)(v13 + 9424) = v834;
  v835 = *(_DWORD *)(v13 + 7248) - v834;
  *(_DWORD *)(v13 + 9008) = v835;
  v836 = v775 - v835 + 1720065868;
  *(_DWORD *)(v13 + 9160) = v836;
  v837 = *(_DWORD *)(v13 + 7592);
  v838 = v837 - v836 + 2076396787;
  *(_DWORD *)(v13 + 8400) = v838;
  v839 = v838 ^ (v753 - 318304025);
  *(_DWORD *)(v13 + 9136) = v839;
  v840 = *(_DWORD *)(v13 + 8408) - v839 - 549370294;
  *(_DWORD *)(v13 + 8408) = v840;
  v841 = v840 ^ v780 ^ 0xE6D6D554;
  *(_DWORD *)(v13 + 8964) = v841;
  v842 = v841 ^ (v820 + 851778278);
  *(_DWORD *)(v13 + 8024) = v842;
  v843 = v842 ^ (v792 + 1721124385);
  *(_DWORD *)(v13 + 7296) = v843;
  v844 = v843 + (v777 ^ 0xB9030621);
  *(_DWORD *)(v13 + 8764) = v844;
  *(_DWORD *)(v13 + 7328) = v844 ^ v822;
  v845 = *(_DWORD *)(v13 + 9624) ^ 0xD51B989F ^ v844 ^ v822;
  *(_DWORD *)(v13 + 7248) = v845;
  v846 = *(_DWORD *)(v13 + 7992) - v845;
  *(_DWORD *)(v13 + 8984) = *(_DWORD *)(v13 + 9080) + 1507149070;
  *(_DWORD *)(v13 + 7992) = v846 + 1296622764;
  v847 = v788 ^ 0xF3BEEF12 ^ (v846 + 1296622764);
  *(_DWORD *)(v13 + 9128) = v847;
  v848 = *(_DWORD *)(v13 + 7264) - v847;
  *(_DWORD *)(v13 + 7280) = v848;
  v849 = v848 + (v789 ^ 0x13F5CF83);
  *(_DWORD *)(v13 + 7192) = v849;
  v850 = *(_DWORD *)(v13 + 9576) + 109001145;
  v851 = *(_DWORD *)(v13 + 7976) + 1790619053 + v849;
  *(_DWORD *)(v13 + 9080) = v851;
  v852 = v851 ^ *(_DWORD *)(v13 + 7232);
  *(_DWORD *)(v13 + 7976) = v852;
  v853 = v852 + (*(_DWORD *)(v13 + 9400) ^ 0x2DC2DCE0);
  *(_DWORD *)(v13 + 8752) = v853;
  v854 = *(_DWORD *)(v13 + 9528) ^ 0x44E7862F;
  v855 = v784 + 149522709 + v853;
  *(_DWORD *)(v13 + 9400) = v855;
  v856 = *(_DWORD *)(v13 + 9384) ^ 0x331E6FA5;
  v857 = v855 + v854;
  *(_DWORD *)(v13 + 7224) = v857;
  v858 = v857 + v856;
  *(_DWORD *)(v13 + 9576) = v858;
  v859 = v858 ^ v850;
  *(_DWORD *)(v13 + 7184) = v859;
  *(_DWORD *)(v13 + 9624) = v859 ^ v817;
  v860 = *(_DWORD *)(v13 + 9520) ^ 0x4B4B8147 ^ v859 ^ v817;
  *(_DWORD *)(v13 + 7216) = v860;
  v861 = *(_DWORD *)(v13 + 7888) + 302029046 + v860;
  *(_DWORD *)(v13 + 8736) = v861;
  v862 = *(_DWORD *)(v13 + 7344) + 1118396945 + v861;
  *(_DWORD *)(v13 + 7888) = v862;
  v863 = *(_DWORD *)(v13 + 9408) - 934278509;
  v864 = *(_DWORD *)(v13 + 7952) - 1439562103;
  v865 = *(_DWORD *)(v13 + 9472) + 598980651 + v862;
  *(_DWORD *)(v13 + 7264) = v865;
  v866 = v865 ^ v863;
  *(_DWORD *)(v13 + 8720) = v866;
  v867 = v866 ^ *(_DWORD *)(v13 + 9456);
  *(_DWORD *)(v13 + 9456) = v867;
  *(_DWORD *)(v13 + 9472) = v867 ^ v837;
  v868 = v867 ^ v837 ^ *(_DWORD *)(v13 + 9632) ^ 0xAF840CF7;
  *(_DWORD *)(v13 + 9528) = v868;
  v869 = v868 ^ v864;
  *(_DWORD *)(v13 + 7232) = v868 ^ v864;
  v870 = *(_DWORD *)(v13 + 8384) + 78100301;
  v871 = *(_DWORD *)(v13 + 8000) + 1721892236 + v869;
  *(_DWORD *)(v13 + 8384) = v871;
  v872 = *(_DWORD *)(v13 + 8680) - v871 + 1800569469;
  *(_DWORD *)(v13 + 7952) = v872;
  *(_DWORD *)(v13 + 8000) = v872 ^ v870;
  v873 = *(_DWORD *)(v13 + 8888) - 1486007872 + (v872 ^ v870);
  *(_DWORD *)(v13 + 9408) = v873;
  v874 = *(_DWORD *)(v13 + 9656) - v873;
  v875 = *(_DWORD *)(v13 + 9488) + 2073751594;
  v876 = *(_DWORD *)(v13 + 8356) + 27744604;
  v877 = *(_DWORD *)(v13 + 9664) ^ 0xF82F48C;
  v874 += 1506356527;
  *(_DWORD *)(v13 + 7200) = v874;
  v878 = v877 - v874;
  *(_DWORD *)(v13 + 7344) = v878;
  v879 = v878 ^ *(_DWORD *)(v13 + 9480) ^ 0xE62956F0;
  *(_DWORD *)(v13 + 8696) = v879;
  *(_DWORD *)(v13 + 7208) = v879 ^ v876;
  v880 = *(_DWORD *)(v13 + 8664) + 2083168160 + (v879 ^ v876);
  v881 = v880 ^ v875;
  *(_DWORD *)(v13 + 8356) = v881;
  v882 = *(_DWORD *)(v13 + 7312) - v881 - 2095092217;
  *(_DWORD *)(v13 + 7176) = v882;
  v883 = *(_DWORD *)(v13 + 8312) - v882 - 1324027117;
  *(_DWORD *)(v13 + 9488) = v883;
  v884 = *(_DWORD *)(v13 + 9496) ^ 0x26A0A7D8;
  v885 = *(_DWORD *)(v13 + 9504) + 1150552739 + v883;
  *(_DWORD *)(v13 + 9656) = v885;
  *(_DWORD *)(v13 + 7312) = v885 + v884;
  v886 = *(_DWORD *)(v13 + 8612) + 347673363 + v885 + v884;
  *(_DWORD *)(v13 + 9632) = v886;
  v887 = *(_DWORD *)(v13 + 8768) + 729814321;
  v888 = *(_DWORD *)(v13 + 9432) - v886 + 1764157790;
  *(_DWORD *)(v13 + 9496) = v888;
  v889 = *(_DWORD *)(v13 + 7936) ^ 0x758D615 ^ v888;
  *(_DWORD *)(v13 + 7168) = v889;
  v890 = v889 ^ v887;
  v891 = *(_DWORD *)(v13 + 8020) - (v889 ^ v887) + 1852642320;
  *(_DWORD *)(v13 + 8020) = v891;
  v892 = *(_DWORD *)(v13 + 7448) - 1392033488 + v891;
  *(_DWORD *)(v13 + 8612) = v892;
  v893 = *(_DWORD *)(v13 + 8688) ^ 0xCDF4EA37 ^ v892;
  *(_DWORD *)(v13 + 8688) = v893;
  v894 = v893 + (*(_DWORD *)(v13 + 7576) ^ 0x9CE1AAE6);
  v895 = *(_DWORD *)(v13 + 8236) ^ 0xABB57A88 ^ v894;
  *(_DWORD *)(v13 + 8768) = v895;
  v896 = v894;
  *(_DWORD *)(v13 + 9384) = v894;
  v897 = *(_DWORD *)(v13 + 8376) - 331918108;
  v898 = *(_DWORD *)(v13 + 9448) + 850279389;
  *(_DWORD *)(v13 + 8312) = v898;
  v899 = *(_DWORD *)(v13 + 7792) - 303180097;
  v900 = *(_DWORD *)(v13 + 8512) + 1156056860;
  v901 = *(_DWORD *)(v13 + 9392) + 483717994 + v895;
  *(_DWORD *)(v13 + 8512) = v901;
  v902 = *(_DWORD *)(v13 + 8264) + 2130274698 + v901;
  *(_DWORD *)(v13 + 7792) = v902;
  v903 = *(_DWORD *)(v13 + 8280) + 983114078;
  v904 = v818 + 2001071463 + v902;
  *(_DWORD *)(v13 + 8264) = v904;
  v905 = v904 ^ v903;
  *(_DWORD *)(v13 + 8280) = v905;
  v906 = *(_DWORD *)(v13 + 7640) - 306336949;
  v907 = *(_DWORD *)(v13 + 7656) - 1770178619;
  v908 = *(_DWORD *)(v13 + 9616) - 1325286879;
  v909 = *(_DWORD *)(v13 + 7424) - v905 - 851019904;
  *(_DWORD *)(v13 + 7680) = v909;
  v910 = *(_DWORD *)(v13 + 9464) + 463882827 + v909;
  v911 = v910 + (*(_DWORD *)(v13 + 8504) ^ 0x53EC096E);
  *(_DWORD *)(v13 + 9616) = v911;
  v912 = v898 ^ v906 ^ v911;
  *(_DWORD *)(v13 + 9464) = v912;
  v913 = *(_DWORD *)(v13 + 8672) - 118200044 + v912;
  v914 = v913 ^ v907;
  v915 = v913 ^ v907 ^ v908;
  v916 = *(_DWORD *)(v13 + 7944) + 1871295921;
  v917 = *(_DWORD *)(v13 + 8640) - 61923176;
  v918 = *(_DWORD *)(v13 + 7776) - v915 - 1592477548;
  *(_DWORD *)(v13 + 9664) = v918;
  v919 = v918 ^ v916;
  v920 = (*(_DWORD *)(v13 + 8352) ^ 0x8833F531) - (v918 ^ v916);
  v921 = *(_DWORD *)(v13 + 7704) - 1189376862 + v920;
  *(_DWORD *)(v13 + 9504) = v921;
  v922 = v921 ^ *(_DWORD *)(v13 + 7712);
  *(_DWORD *)(v13 + 7936) = v922;
  *(_DWORD *)(v13 + 7712) = v922 ^ v917;
  v923 = v922 ^ v917 ^ *(_DWORD *)(v13 + 8008) ^ 0x3831800;
  v924 = v923 ^ (v796 + 1897901951);
  *(_DWORD *)(v13 + 7448) = v924;
  v925 = *(_DWORD *)(v13 + 9608) + 1500270127;
  v926 = *(_DWORD *)(v13 + 9592) + 1250550066 + v924;
  *(_DWORD *)(v13 + 7640) = v926;
  v927 = v926 ^ v899;
  *(_DWORD *)(v13 + 9608) = v927;
  v928 = *(_DWORD *)(v13 + 7336) - v927 + 1596348544;
  v929 = *(_DWORD *)(v13 + 8656) - v928 + 282667797;
  *(_DWORD *)(v13 + 7424) = v929;
  v930 = *(_DWORD *)(v13 + 9416) ^ 0xF46A35BB ^ v929;
  v931 = (*(_DWORD *)(v13 + 9600) ^ 0x4D502370) - v930;
  *(_DWORD *)(v13 + 9600) = v931;
  v932 = v931 ^ v900;
  v933 = *(_DWORD *)(v13 + 7584) + 536949892 + (v931 ^ v900);
  v934 = v925 - v933;
  v935 = *(_DWORD *)(v13 + 8360) ^ 0xC2746310 ^ (v925 - v933);
  v936 = *(_DWORD *)(v13 + 8648) - 1111410911 + v935;
  v937 = v936 ^ (*(_DWORD *)(v13 + 9200) + 363339399);
  v938 = v937 ^ v897;
  v939 = *(_DWORD *)(v13 + 9568) + 2016091735 + (v937 ^ v897);
  *(_DWORD *)(v13 + 9416) = v939;
  v940 = *(_DWORD *)(v13 + 7672) - v939 + 1715665272;
  v941 = v940 + (*(_DWORD *)(v13 + 7408) ^ 0x7D6123C);
  v942 = v941 ^ *(_DWORD *)(v13 + 8984);
  *(_DWORD *)(v13 + 8984) = v942;
  v943 = *(_DWORD *)(v13 + 9736) - 242254878 + v942;
  v944 = *(_DWORD *)(v13 + 8288) - v943;
  v945 = *(_DWORD *)(v13 + 9584) + 585456387;
  v946 = v896 + *(_DWORD *)(v13 + 8764);
  *(_DWORD *)(v13 + 9584) = v946;
  v947 = v944 + 110639393;
  v948 = (v944 + 110639393) ^ v945;
  v949 = v815 - v946;
  *(_DWORD *)(v13 + 9432) = v949;
  v950 = *(_DWORD *)(v13 + 7984) - 1740849900 + v948;
  v951 = *(_DWORD *)(v13 + 8632) ^ 0x20A2C9DD ^ v950;
  v952 = (*(_DWORD *)(v13 + 7416) ^ 0xD27B0F16) - v951;
  v953 = v919 ^ v949;
  *(_DWORD *)(v13 + 8236) = v953;
  v954 = v953 + *(_DWORD *)(v13 + 7240);
  *(_DWORD *)(v13 + 8764) = v954;
  *(_DWORD *)(v13 + 9480) = v954 ^ v880;
  v955 = *(_DWORD *)(v13 + 8748) - (v954 ^ v880);
  *(_DWORD *)(v13 + 8888) = v955;
  v956 = v955 + v920;
  *(_DWORD *)(v13 + 9200) = v956;
  v957 = v941 - v956;
  *(_DWORD *)(v13 + 9448) = v957;
  v958 = v957 ^ *(_DWORD *)(v13 + 9008);
  *(_DWORD *)(v13 + 9520) = v958;
  v959 = v958 ^ *(_DWORD *)(v13 + 7256);
  *(_DWORD *)(v13 + 9392) = v959;
  v960 = v959 ^ *(_DWORD *)(v13 + 9408);
  *(_DWORD *)(v13 + 9592) = v960;
  v961 = *(_DWORD *)(v13 + 9688) ^ 0x4A7E1E79;
  v962 = *(_DWORD *)(v13 + 8872) - v960;
  *(_DWORD *)(v13 + 8872) = v962;
  v963 = v962 + *(_DWORD *)(v13 + 8744);
  *(_DWORD *)(v13 + 8712) = v963;
  v964 = *(_DWORD *)(v13 + 8964) - v963;
  *(_DWORD *)(v13 + 9096) = v964;
  v965 = v964 + *(_DWORD *)(v13 + 8760);
  *(_DWORD *)(v13 + 9408) = v965;
  v966 = v965 + v935;
  *(_DWORD *)(v13 + 8964) = v966;
  v967 = *(_DWORD *)(v13 + 8696) ^ v966;
  *(_DWORD *)(v13 + 7632) = v967;
  v968 = *(_DWORD *)(v13 + 8752) - v967;
  *(_DWORD *)(v13 + 8748) = v968;
  v969 = v968 + v910;
  *(_DWORD *)(v13 + 8744) = v969;
  v970 = v969 + *(_DWORD *)(v13 + 8728);
  *(_DWORD *)(v13 + 8728) = v970;
  v971 = v970 ^ v932;
  *(_DWORD *)(v13 + 8696) = v971;
  v972 = v971 + *(_DWORD *)(v13 + 8720);
  *(_DWORD *)(v13 + 9008) = v972;
  v973 = v972 + *(_DWORD *)(v13 + 8496);
  *(_DWORD *)(v13 + 7592) = v973;
  v974 = v973 + v914;
  *(_DWORD *)(v13 + 8752) = v974;
  v975 = v974 ^ v913;
  *(_DWORD *)(v13 + 8640) = v975;
  v976 = v975 + v937;
  *(_DWORD *)(v13 + 8760) = v976;
  v977 = v976 ^ *(_DWORD *)(v13 + 9400);
  *(_DWORD *)(v13 + 8680) = v977;
  v978 = v977 + v940;
  *(_DWORD *)(v13 + 8368) = v978;
  v979 = v978 ^ *(_DWORD *)(v13 + 8616);
  *(_DWORD *)(v13 + 9688) = v979;
  v980 = v979 ^ *(_DWORD *)(v13 + 8736);
  *(_DWORD *)(v13 + 8736) = v980;
  *(_DWORD *)(v13 + 8648) = v950 - v980;
  v981 = *(_DWORD *)(v13 + 9472) ^ 0xC2738DB6 ^ (v950 - v980);
  *(_DWORD *)(v13 + 8664) = v981;
  v982 = *(_DWORD *)(v13 + 7344) - v981;
  *(_DWORD *)(v13 + 8632) = v982;
  v983 = *(_DWORD *)(v13 + 7192) - v982;
  *(_DWORD *)(v13 + 8720) = v983;
  v984 = *(_DWORD *)(v13 + 8020) - v983;
  *(_DWORD *)(v13 + 9400) = v984;
  v985 = *(_DWORD *)(v13 + 7184) - v984;
  *(_DWORD *)(v13 + 8616) = v985;
  v986 = *(_DWORD *)(v13 + 7952) - v985;
  *(_DWORD *)(v13 + 8496) = v986;
  v987 = v923 - v986;
  *(_DWORD *)(v13 + 8360) = v987;
  v988 = v987 ^ *(_DWORD *)(v13 + 7272);
  *(_DWORD *)(v13 + 8376) = v988;
  v989 = *(_DWORD *)(v13 + 7288) - v988;
  *(_DWORD *)(v13 + 8672) = v989;
  v990 = v989 + *(_DWORD *)(v13 + 8392);
  *(_DWORD *)(v13 + 8008) = v990;
  v991 = *(_DWORD *)(v13 + 7688) ^ v990;
  *(_DWORD *)(v13 + 9472) = v991;
  v992 = v991 + *(_DWORD *)(v13 + 7616);
  *(_DWORD *)(v13 + 7704) = v992;
  v993 = *(_DWORD *)(v13 + 9496) - v992;
  *(_DWORD *)(v13 + 8392) = v993;
  v994 = v993 + v930;
  *(_DWORD *)(v13 + 8656) = v994;
  v995 = *(_DWORD *)(v13 + 8384) - v994;
  *(_DWORD *)(v13 + 9496) = v995;
  v996 = v995 ^ *(_DWORD *)(v13 + 8356);
  *(_DWORD *)(v13 + 7344) = v996;
  v997 = v996 + *(_DWORD *)(v13 + 8512);
  *(_DWORD *)(v13 + 8512) = v997;
  v998 = v997 ^ *(_DWORD *)(v13 + 7784) ^ 0xFEDADB0C;
  *(_DWORD *)(v13 + 7944) = v998;
  v999 = v998 ^ (v890 - 38456924);
  *(_DWORD *)(v13 + 8356) = v999;
  v1000 = v999 ^ *(_DWORD *)(v13 + 7176);
  *(_DWORD *)(v13 + 7336) = v1000;
  v1001 = v1000 ^ *(_DWORD *)(v13 + 7328);
  *(_DWORD *)(v13 + 8288) = v1001 + v915;
  v1002 = v890 - (v1001 + v915);
  v1003 = v1002 ^ *(_DWORD *)(v13 + 8400);
  *(_DWORD *)(v13 + 8384) = v1003;
  v1004 = v1002;
  *(_DWORD *)(v13 + 7416) = v1002;
  v1005 = *(_DWORD *)(v13 + 8280) - v1003;
  *(_DWORD *)(v13 + 8400) = v1005;
  v1006 = *(_DWORD *)(v13 + 7992) - v1005;
  *(_DWORD *)(v13 + 8280) = v1006;
  v1007 = v951 - v1006;
  *(_DWORD *)(v13 + 7688) = v1007;
  v1008 = *(_DWORD *)(v13 + 8612) - v1007;
  *(_DWORD *)(v13 + 8612) = v1008;
  v1009 = *(_DWORD *)(v13 + 8024) ^ v1008;
  *(_DWORD *)(v13 + 8352) = v1009;
  v1010 = *(_DWORD *)(v13 + 7168) - v1009;
  *(_DWORD *)(v13 + 7992) = v1010;
  v1011 = v1010 + v943;
  *(_DWORD *)(v13 + 7328) = v1011;
  v1012 = *(_DWORD *)(v13 + 7248) - v1011;
  *(_DWORD *)(v13 + 7584) = v1012;
  v1013 = v1012 + *(_DWORD *)(v13 + 8440);
  *(_DWORD *)(v13 + 8504) = v1013;
  v1014 = *(_DWORD *)(v13 + 7224) - v1013;
  *(_DWORD *)(v13 + 7984) = v1014;
  v1015 = *(_DWORD *)(v13 + 7664) - v1014;
  *(_DWORD *)(v13 + 8440) = v1015;
  v1016 = v1015 + *(_DWORD *)(v13 + 7216);
  *(_DWORD *)(v13 + 7664) = v1016;
  v1017 = (v928 - v1016) ^ *(_DWORD *)(v13 + 9664);
  *(_DWORD *)(v13 + 8020) = v1017;
  v1018 = v952 + v961 - v1017;
  *(_DWORD *)(v13 + 7616) = v1018;
  v1019 = v1018 + *(_DWORD *)(v13 + 8264);
  v1020 = v1019 ^ *(_DWORD *)(v13 + 7552);
  *(_DWORD *)(v13 + 7656) = v1020;
  v1021 = v1020 + *(_DWORD *)(v13 + 7976);
  *(_DWORD *)(v13 + 7784) = v1021;
  v1022 = *(_DWORD *)(v13 + 8000) - v1021;
  *(_DWORD *)(v13 + 8264) = v1022;
  v1023 = v1022 ^ *(_DWORD *)(v13 + 7792);
  *(_DWORD *)(v13 + 8000) = v1023;
  v1024 = v1023 ^ *(_DWORD *)(v13 + 7888);
  *(_DWORD *)(v13 + 8024) = v1024;
  v1025 = v1024 + *(_DWORD *)(v13 + 8880);
  v1026 = v1025 ^ *(_DWORD *)(v13 + 8312);
  *(_DWORD *)(v13 + 7776) = v1026;
  v1027 = v1025;
  *(_DWORD *)(v13 + 7224) = v1025;
  v1028 = v1026 + *(_DWORD *)(v13 + 7648);
  *(_DWORD *)(v13 + 7952) = v1028;
  v1029 = *(_DWORD *)(v13 + 8768) - v1028;
  *(_DWORD *)(v13 + 7552) = v1029;
  v1030 = v1029 + *(_DWORD *)(v13 + 7280);
  *(_DWORD *)(v13 + 7576) = v1030;
  v1031 = v936 - v1030;
  *(_DWORD *)(v13 + 8880) = v1031;
  v1032 = v952 - v1031;
  *(_DWORD *)(v13 + 7648) = v1032;
  v1033 = *(_DWORD *)(v13 + 7200) - v1032;
  *(_DWORD *)(v13 + 7272) = v1033;
  v1034 = v1033 ^ v934;
  *(_DWORD *)(v13 + 7976) = v1034;
  v1035 = v1034 ^ *(_DWORD *)(v13 + 7448);
  *(_DWORD *)(v13 + 8312) = v1035;
  v1036 = v1035 ^ *(_DWORD *)(v13 + 8408);
  *(_DWORD *)(v13 + 7448) = v1036;
  v1037 = v1036 + *(_DWORD *)(v13 + 7304);
  *(_DWORD *)(v13 + 7248) = v1037;
  v1038 = *(_DWORD *)(v13 + 7296) - v1037;
  *(_DWORD *)(v13 + 8768) = v1038;
  v1039 = v933 - v1038;
  *(_DWORD *)(v13 + 7280) = v1039;
  v1040 = v1039 ^ *(_DWORD *)(v13 + 7640);
  *(_DWORD *)(v13 + 7288) = v1040;
  v1041 = *(_DWORD *)(v13 + 8260) - v1040;
  *(_DWORD *)(v13 + 7672) = v1041;
  v1042 = v1041 + *(_DWORD *)(v13 + 7208);
  *(_DWORD *)(v13 + 7792) = v1042 + v938;
  v1043 = v1042 + v938 + *(_DWORD *)(v13 + 7696);
  *(_DWORD *)(v13 + 7640) = v1043;
  v1044 = *(_DWORD *)(v13 + 7424) - v1043;
  *(_DWORD *)(v13 + 7408) = v1044;
  v1045 = v947 - v1044;
  *(_DWORD *)(v13 + 7888) = v1045;
  v1046 = v1045 ^ *(_DWORD *)(v13 + 7264);
  *(_DWORD *)(v13 + 7264) = v1046;
  v1047 = v1046 + *(_DWORD *)(v13 + 7680);
  *(_DWORD *)(v13 + 8408) = v1047;
  v1048 = v1047 + (*(_DWORD *)(v13 + 7712) ^ 0x946CA9A7);
  *(_DWORD *)(v13 + 7256) = v1048;
  v1049 = v1048 ^ *(_DWORD *)(v13 + 8032);
  *(_DWORD *)(v13 + 7240) = v1049;
  v1050 = v1049 ^ *(_DWORD *)(v13 + 8688);
  *(_DWORD *)(v13 + 7696) = v1050;
  v1051 = *(_DWORD *)(v13 + 7312) - v1050;
  *(_DWORD *)(v13 + 7304) = v1051;
  *(_DWORD *)(v13 + 7424) = v948 - v1051;
  v1052 = *(_DWORD *)(v13 + 8704) - (v948 - v1051);
  *(_DWORD *)(v13 + 7296) = v1052;
  v1053 = *(_DWORD *)(v13 + 9528) - v1052;
  *(_DWORD *)(v13 + 8688) = v1053;
  v1054 = v1053 ^ *(_DWORD *)(v13 + 7232);
  v1055 = ((v1054 & 0x946CA9A7 ^ 0x946CA9A7) + (v1054 & 0x946CA9A7)) ^ *(_DWORD *)(v13 + 7936);
  v1056 = (int)(**(_DWORD **)(v13 + 9216) & 0xE8B5AED8);
  v1057 = **(_QWORD **)(v13 + 9088);
  v1058 = -333269657 * ((*(_DWORD *)(v1057 + v1056) ^ *(_DWORD *)(v13 + 5668)) & 0x7FFFFFFF);
  v1059 = v1058 ^ HIWORD(v1058);
  v1060 = *(_DWORD *)(v13 + 9012);
  v1061 = (uint64_t)*(&off_1004ECA20 + (v1060 + 446));
  v1062 = (char *)*(&off_1004ECA20 + (v1060 ^ 0x226u)) - 4;
  *(_QWORD *)(v13 + 9736) = v1062;
  v1063 = v1061 - 8;
  v1064 = (char *)*(&off_1004ECA20 + (v1060 ^ 0x1BAu)) - 12;
  v1065 = *(_DWORD *)&v1062[4 * ((-333269657 * v1059) >> 24) + 8] ^ *(_DWORD *)(v1061
                                                                                            - 8
                                                                                            + 4
                                                                                            * ((-333269657 * v1059) >> 24)) ^ *(_DWORD *)&v1064[4 * ((-333269657 * v1059) >> 24)] ^ (-1251540992 * v1059) ^ (-333269657 * v1059) ^ (-1881783609 * ((-333269657 * v1059) >> 24));
  v1066 = v1027 ^ *(_DWORD *)(v13 + 9464);
  v1067 = *(_DWORD *)(v13 + 9456) ^ 0x79122C35 ^ v1054;
  v1068 = v1067 + *(_DWORD *)(v13 + 9080);
  v1069 = v1068 ^ *(_DWORD *)(v13 + 9488);
  v1070 = v1069 ^ *(_DWORD *)(v13 + 8984);
  v1071 = v1070 + *(_DWORD *)(v13 + 9160);
  v1072 = v1071 ^ *(_DWORD *)(v13 + 9128);
  v1073 = *(_DWORD *)(v13 + 9600) - v1072;
  v1074 = *(_DWORD *)(v13 + 9136) - v1073;
  v1075 = v1074 ^ *(_DWORD *)(v13 + 9424);
  LODWORD(v1062) = v1004 + *(_DWORD *)(v13 + 8376);
  *(_DWORD *)(v13 + 7712) = (_DWORD)v1062;
  v1076 = v1075 ^ *(_DWORD *)(v13 + 9632);
  LODWORD(v1062) = v1001 - (_DWORD)v1062;
  *(_DWORD *)(v13 + 7936) = (_DWORD)v1062;
  v1077 = v1076 ^ *(_DWORD *)(v13 + 9576);
  v1078 = v1077 + v1055;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8640);
  *(_DWORD *)(v13 + 8260) = (_DWORD)v1062;
  v1079 = v1078 ^ *(_DWORD *)(v13 + 9608);
  LODWORD(v1062) = v1019 + (_DWORD)v1062;
  *(_DWORD *)(v13 + 9608) = (_DWORD)v1062;
  v1080 = v1079 + *(_DWORD *)(v13 + 9656);
  v1081 = v1080 + *(_DWORD *)(v13 + 9440);
  v1082 = *(_DWORD *)(v13 + 9616) - v1081;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8888);
  *(_DWORD *)(v13 + 9440) = (_DWORD)v1062;
  v1083 = v1075 - (_DWORD)v1062;
  *(_DWORD *)(v13 + 8640) = v1083;
  LODWORD(v1062) = v1082 ^ *(_DWORD *)(v13 + 9504);
  v1084 = v1082 ^ v1083;
  *(_DWORD *)(v13 + 7312) = v1084;
  v1085 = v1054 - v1084;
  *(_DWORD *)(v13 + 9504) = v1085;
  v1086 = v1085 + *(_DWORD *)(v13 + 8720);
  *(_DWORD *)(v13 + 7680) = v1086;
  v1087 = v1086 + *(_DWORD *)(v13 + 7776);
  *(_DWORD *)(v13 + 9424) = v1087;
  v1088 = *(_DWORD *)(v13 + 7248) - v1087;
  *(_DWORD *)(v13 + 9600) = v1088;
  v1089 = *(_DWORD *)(v13 + 9448) - v1088;
  *(_DWORD *)(v13 + 8720) = v1089;
  v1090 = v1089 + v1042;
  *(_DWORD *)(v13 + 9448) = v1090;
  LODWORD(v1061) = (_DWORD)v1062 + *(_DWORD *)(v13 + 9624);
  v1091 = v1090 ^ *(_DWORD *)(v13 + 8728);
  *(_DWORD *)(v13 + 8728) = v1091;
  v1092 = *(_DWORD *)(v13 + 8744) - v1091;
  *(_DWORD *)(v13 + 8744) = v1092;
  v1093 = v1092 + *(_DWORD *)(v13 + 8000);
  *(_DWORD *)(v13 + 8376) = v1093;
  v1094 = v1093 ^ *(_DWORD *)(v13 + 8384);
  *(_DWORD *)(v13 + 8984) = v1094;
  v1095 = v1061 ^ *(_DWORD *)(v13 + 9416);
  v1096 = v1094 + v1076;
  *(_DWORD *)(v13 + 7776) = v1096;
  v1097 = *(_DWORD *)(v13 + 8964) - v1096;
  *(_DWORD *)(v13 + 8032) = v1097;
  v1098 = v1097 + *(_DWORD *)(v13 + 8752);
  *(_DWORD *)(v13 + 8704) = v1098;
  v1099 = v1098 + *(_DWORD *)(v13 + 7640);
  *(_DWORD *)(v13 + 8000) = v1099;
  v1100 = *(_DWORD *)(v13 + 7952) - v1099;
  *(_DWORD *)(v13 + 7952) = v1100;
  v1101 = *(_DWORD *)(v13 + 7240) - v1100;
  *(_DWORD *)(v13 + 9416) = v1101;
  v1102 = v1101 + v1070;
  *(_DWORD *)(v13 + 8888) = v1102;
  v1103 = *(_DWORD *)(v13 + 8616) - v1102;
  *(_DWORD *)(v13 + 7640) = v1103;
  v1104 = *(_DWORD *)(v13 + 7984) - v1103;
  *(_DWORD *)(v13 + 8384) = v1104;
  v1105 = v1104 ^ v1073;
  *(_DWORD *)(v13 + 7984) = v1105;
  v1106 = v1105 ^ *(_DWORD *)(v13 + 7272);
  *(_DWORD *)(v13 + 8752) = v1106;
  v1107 = *(_DWORD *)(v13 + 7944) ^ v1106;
  *(_DWORD *)(v13 + 9128) = v1107;
  v1108 = v1107 + *(_DWORD *)(v13 + 7688);
  *(_DWORD *)(v13 + 9464) = v1108;
  v1109 = v1108 ^ *(_DWORD *)(v13 + 8392);
  v1110 = v1109 + *(_DWORD *)(v13 + 9096);
  *(_DWORD *)(v13 + 8616) = v1110;
  v1111 = v1110 ^ *(_DWORD *)(v13 + 7256);
  *(_DWORD *)(v13 + 7688) = v1111;
  v1112 = v1111 ^ *(_DWORD *)(v13 + 7648);
  *(_DWORD *)(v13 + 8392) = v1112;
  v1113 = v1112 ^ *(_DWORD *)(v13 + 8664);
  *(_DWORD *)(v13 + 7648) = v1113;
  v1114 = v1113 + *(_DWORD *)(v13 + 7656);
  *(_DWORD *)(v13 + 9096) = v1114;
  v1115 = *(_DWORD *)(v13 + 7576) - v1114;
  *(_DWORD *)(v13 + 7576) = v1115;
  v1116 = *(_DWORD *)(v13 + 9008) - v1115;
  *(_DWORD *)(v13 + 8964) = v1116;
  v1117 = v1116 ^ *(_DWORD *)(v13 + 8496);
  *(_DWORD *)(v13 + 8496) = v1117;
  v1118 = v1117 ^ *(_DWORD *)(v13 + 7264);
  *(_DWORD *)(v13 + 9008) = v1118;
  v1119 = v1118 + *(_DWORD *)(v13 + 9384);
  v1120 = v1119 + *(_DWORD *)(v13 + 9392);
  v1121 = v1120 ^ *(_DWORD *)(v13 + 8696);
  *(_DWORD *)(v13 + 9136) = v1121;
  v1122 = v1121 + *(_DWORD *)(v13 + 7992);
  *(_DWORD *)(v13 + 8664) = v1122;
  v1123 = v1122 ^ *(_DWORD *)(v13 + 8712);
  *(_DWORD *)(v13 + 7944) = v1123;
  v1124 = v1123 ^ *(_DWORD *)(v13 + 7280);
  *(_DWORD *)(v13 + 8696) = v1124;
  v1125 = *(_DWORD *)(v13 + 8356) - v1124;
  *(_DWORD *)(v13 + 7992) = v1125;
  v1126 = v1125 ^ v1078;
  v1127 = *(_DWORD *)(v13 + 7288) - (v1125 ^ v1078);
  *(_DWORD *)(v13 + 9160) = v1127;
  v1128 = *(_DWORD *)(v13 + 8288) - v1127;
  *(_DWORD *)(v13 + 8288) = v1128;
  v1129 = v1128 ^ *(_DWORD *)(v13 + 7784);
  *(_DWORD *)(v13 + 9456) = v1129;
  v1130 = v1129 ^ *(_DWORD *)(v13 + 8280);
  *(_DWORD *)(v13 + 7656) = v1130;
  v1131 = v1130 + v1069;
  *(_DWORD *)(v13 + 9488) = v1131;
  *(_DWORD *)(v13 + 9616) = v1074 - v1131;
  v1132 = *(_DWORD *)(v13 + 7552) - (v1074 - v1131);
  *(_DWORD *)(v13 + 7784) = v1132;
  v1133 = v1132 ^ *(_DWORD *)(v13 + 9584);
  *(_DWORD *)(v13 + 9392) = v1133;
  v1134 = v1133 ^ *(_DWORD *)(v13 + 9200);
  v1135 = v1134 + *(_DWORD *)(v13 + 8648);
  *(_DWORD *)(v13 + 8712) = v1135;
  v1136 = v1135 ^ *(_DWORD *)(v13 + 8760);
  *(_DWORD *)(v13 + 8760) = v1136;
  v1137 = v1136 + *(_DWORD *)(v13 + 9432);
  *(_DWORD *)(v13 + 9200) = v1137;
  LODWORD(v1062) = v1137 + (_DWORD)v1062;
  *(_DWORD *)(v13 + 8280) = (_DWORD)v1062;
  LODWORD(v1062) = v1066 ^ v1062;
  *(_DWORD *)(v13 + 9080) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + *(_DWORD *)(v13 + 8512);
  *(_DWORD *)(v13 + 8648) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8440);
  *(_DWORD *)(v13 + 8356) = (_DWORD)v1062;
  LODWORD(v1062) = *(_DWORD *)(v13 + 7296) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 8440) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8632);
  *(_DWORD *)(v13 + 7552) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 7408);
  *(_DWORD *)(v13 + 9384) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ v1077;
  *(_DWORD *)(v13 + 7408) = (_DWORD)v1062;
  LODWORD(v1062) = *(_DWORD *)(v13 + 8352) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 9432) = (_DWORD)v1062;
  v1138 = (_DWORD)v1062 + *(_DWORD *)(v13 + 8400);
  *(_DWORD *)(v13 + 9632) = v1138;
  *(_DWORD *)(v13 + 8512) = v1138 ^ v1079;
  LODWORD(v1062) = (v1138 ^ v1079) + *(_DWORD *)(v13 + 7616);
  *(_DWORD *)(v13 + 9584) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 9480);
  *(_DWORD *)(v13 + 8632) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 7664);
  *(_DWORD *)(v13 + 8400) = (_DWORD)v1062;
  *(_DWORD *)(v13 + 9656) = v1062 ^ v1080;
  v1139 = (v1062 ^ v1080) + *(_DWORD *)(v13 + 7448);
  LODWORD(v1062) = v1139 ^ *(_DWORD *)(v13 + 8368);
  *(_DWORD *)(v13 + 7448) = (_DWORD)v1062;
  LODWORD(v1062) = v1081 - (_DWORD)v1062;
  *(_DWORD *)(v13 + 8352) = (_DWORD)v1062;
  *(_DWORD *)(v13 + 9624) = v1095 - (_DWORD)v1062;
  LODWORD(v1062) = (v1095 - (_DWORD)v1062) ^ *(_DWORD *)(v13 + 8872);
  *(_DWORD *)(v13 + 8368) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + v1067;
  *(_DWORD *)(v13 + 9576) = (_DWORD)v1062;
  LODWORD(v1062) = *(_DWORD *)(v13 + 8008) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 8872) = (_DWORD)v1062;
  v1140 = *(_DWORD *)(v13 + 7424) - (_DWORD)v1062;
  v1141 = v1065 ^ (2023576025 * v1140 + 1140024385);
  v1142 = *(_DWORD **)(v13 + 8248);
  v1142[1587] = v1141;
  v1143 = -333269657 * ((*(_DWORD *)(v1057 + v1056) ^ *(_DWORD *)(v13 + 5908)) & 0x7FFFFFFF);
  v1144 = v1143 ^ HIWORD(v1143);
  v1145 = (-333269657 * v1144) >> 24;
  v1146 = *(_QWORD *)(v13 + 9736);
  v1147 = *(_DWORD *)(v1146 + 4 * (v1145 + 2));
  v1148 = 4 * v1145;
  v1149 = *(_DWORD *)(v1063 + v1148);
  LODWORD(v1062) = v1140 + *(_DWORD *)(v13 + 7792);
  *(_DWORD *)(v13 + 9480) = (_DWORD)v1062;
  v1142[1663] = v1147 ^ v1149 ^ *(_DWORD *)&v1064[v1148] ^ (-1251540992 * v1144) ^ (-333269657 * v1144) ^ (-1881783609 * v1145) ^ (2023576025 * v1119 + 1140024385);
  v1150 = -333269657 * ((*(_DWORD *)(v1057 + v1056) ^ *(_DWORD *)(v13 + 5620)) & 0x7FFFFFFF);
  v1151 = v1150 ^ HIWORD(v1150);
  v1142[1654] = *(_DWORD *)(v1146 + 4 * (((-333269657 * v1151) >> 24) + 2)) ^ *(_DWORD *)(v1063 + 4 * ((-333269657 * v1151) >> 24)) ^ *(_DWORD *)&v1064[4 * ((-333269657 * v1151) >> 24)] ^ (-1251540992 * v1151) ^ (-333269657 * v1151) ^ (-1881783609 * ((-333269657 * v1151) >> 24)) ^ (2023576025 * v1126 + 1140024385);
  v1152 = -333269657 * ((*(_DWORD *)(v1057 + v1056) ^ *(_DWORD *)(v13 + 5804)) & 0x7FFFFFFF);
  v1153 = v1152 ^ HIWORD(v1152);
  v1154 = *(_DWORD *)(v1146 + 4 * (((-333269657 * v1153) >> 24) + 2)) ^ *(_DWORD *)(v1063
                                                                                                  + 4 * ((-333269657 * v1153) >> 24)) ^ *(_DWORD *)&v1064[4 * ((-333269657 * v1153) >> 24)] ^ (-1251540992 * v1153) ^ (-333269657 * v1153) ^ (-1881783609 * ((-333269657 * v1153) >> 24));
  LODWORD(v1062) = *(_DWORD *)(v13 + 8880) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 7792) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8768);
  *(_DWORD *)(v13 + 8008) = (_DWORD)v1062;
  v1155 = (_DWORD)v1062 + *(_DWORD *)(v13 + 7696);
  LODWORD(v1062) = v1155 ^ *(_DWORD *)(v13 + 7224);
  *(_DWORD *)(v13 + 8880) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 9520);
  *(_DWORD *)(v13 + 8768) = (_DWORD)v1062;
  LODWORD(v1062) = *(_DWORD *)(v13 + 8656) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 7616) = (_DWORD)v1062;
  LODWORD(v1062) = *(_DWORD *)(v13 + 9472) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 9472) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8408);
  *(_DWORD *)(v13 + 8408) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 9400);
  *(_DWORD *)(v13 + 7664) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 9688);
  *(_DWORD *)(v13 + 9688) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 9664);
  *(_DWORD *)(v13 + 9400) = (_DWORD)v1062;
  LODWORD(v1062) = *(_DWORD *)(v13 + 8672) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 7696) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8748);
  *(_DWORD *)(v13 + 9520) = (_DWORD)v1062;
  *(_DWORD *)(v13 + 7296) = v1062 ^ v1061;
  LODWORD(v1062) = (v1062 ^ v1061) + *(_DWORD *)(v13 + 7888);
  *(_DWORD *)(v13 + 7424) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8612);
  *(_DWORD *)(v13 + 7888) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + *(_DWORD *)(v13 + 8504);
  *(_DWORD *)(v13 + 8672) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 7672);
  *(_DWORD *)(v13 + 8748) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + *(_DWORD *)(v13 + 9408);
  *(_DWORD *)(v13 + 8656) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + *(_DWORD *)(v13 + 7976);
  *(_DWORD *)(v13 + 9664) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + v1068;
  *(_DWORD *)(v13 + 8504) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 8024);
  *(_DWORD *)(v13 + 7672) = (_DWORD)v1062;
  v1156 = (_DWORD)v1062 + *(_DWORD *)(v13 + 8736);
  LODWORD(v1062) = v1156 + *(_DWORD *)(v13 + 8264);
  *(_DWORD *)(v13 + 8736) = (_DWORD)v1062;
  v1157 = (_DWORD)v1062 + *(_DWORD *)(v13 + 8680);
  *(_DWORD *)(v13 + 7976) = v1157 + v1071;
  *(_DWORD *)(v13 + 8612) = v1157;
  LODWORD(v1062) = v1157 + v1071 + *(_DWORD *)(v13 + 7304);
  *(_DWORD *)(v13 + 8024) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 9592);
  *(_DWORD *)(v13 + 8264) = (_DWORD)v1062;
  LODWORD(v1062) = *(_DWORD *)(v13 + 7328) - (_DWORD)v1062;
  *(_DWORD *)(v13 + 8680) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + *(_DWORD *)(v13 + 7336);
  *(_DWORD *)(v13 + 9592) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + *(_DWORD *)(v13 + 7704);
  *(_DWORD *)(v13 + 9408) = (_DWORD)v1062;
  LODWORD(v1062) = (_DWORD)v1062 + *(_DWORD *)(v13 + 8360);
  *(_DWORD *)(v13 + 7704) = (_DWORD)v1062;
  LODWORD(v1062) = v1062 ^ *(_DWORD *)(v13 + 7344);
  *(_DWORD *)(v13 + 8360) = (_DWORD)v1062;
  v1158 = (_DWORD)v1062 + v1072;
  v1142[1594] = v1154 ^ (2023576025 * ((_DWORD)v1062 + v1072) + 1140024385);
  v1159 = *(_DWORD **)(v13 + 9216);
  v1160 = (int)(*v1159 & 0xE8B5AED8);
  v1161 = *(uint64_t **)(v13 + 9088);
  v1162 = *v1161;
  LODWORD(v1148) = -333269657 * ((*(_DWORD *)(*v1161 + v1160) ^ *(_DWORD *)(v13 + 5888)) & 0x7FFFFFFF);
  LODWORD(v1148) = v1148 ^ WORD1(v1148);
  v1142[1547] = *(_DWORD *)(v1146 + 4 * (((-333269657 * v1148) >> 24) + 2)) ^ *(_DWORD *)(v1063 + 4 * ((-333269657 * v1148) >> 24)) ^ *(_DWORD *)&v1064[4 * ((-333269657 * v1148) >> 24)] ^ (-1251540992 * v1148) ^ (-333269657 * v1148) ^ (-1881783609 * ((-333269657 * v1148) >> 24)) ^ (2023576025 * v1134 + 1140024385);
  v1163 = -333269657 * ((*(_DWORD *)(v1162 + v1160) ^ *(_DWORD *)(v13 + 5564)) & 0x7FFFFFFF);
  v1164 = v1163 ^ HIWORD(v1163);
  v1142[1678] = *(_DWORD *)(v1146 + 4 * (((-333269657 * v1164) >> 24) + 2)) ^ *(_DWORD *)(v1063 + 4 * ((-333269657 * v1164) >> 24)) ^ *(_DWORD *)&v1064[4 * ((-333269657 * v1164) >> 24)] ^ (-1251540992 * v1164) ^ (-333269657 * v1164) ^ (-1881783609 * ((-333269657 * v1164) >> 24)) ^ (2023576025 * v1155 + 1140024385);
  v1165 = -333269657 * ((*(_DWORD *)(v1162 + v1160) ^ *(_DWORD *)(v13 + 5720)) & 0x7FFFFFFF);
  v1166 = v1165 ^ HIWORD(v1165);
  v1142[1611] = *(_DWORD *)(v1146 + 4 * (((-333269657 * v1166) >> 24) + 2)) ^ *(_DWORD *)(v1063 + 4 * ((-333269657 * v1166) >> 24)) ^ *(_DWORD *)&v1064[4 * ((-333269657 * v1166) >> 24)] ^ (-1251540992 * v1166) ^ (-333269657 * v1166) ^ (-1881783609 * ((-333269657 * v1166) >> 24)) ^ (2023576025 * v1120 + 1140024385);
  LODWORD(v1160) = -333269657 * ((*(_DWORD *)(v1162 + v1160) ^ *(_DWORD *)(v13 + 5848)) & 0x7FFFFFFF);
  LODWORD(v1160) = v1160 ^ WORD1(v1160);
  v1167 = (-333269657 * v1160) >> 24;
  v1168 = *(_DWORD *)(v1146 + 4 * (v1167 + 2));
  v1169 = 4 * v1167;
  v1170 = v1063;
  *(_QWORD *)(v13 + 9528) = v1063;
  v1171 = v1168 ^ *(_DWORD *)(v1063 + v1169);
  LODWORD(v1169) = *(_DWORD *)&v1064[v1169];
  *(_QWORD *)(v13 + 9568) = v1064;
  v1142[1586] = v1171 ^ v1169 ^ (-1251540992 * v1160) ^ (-333269657 * v1160) ^ (-1881783609 * v1167) ^ (2023576025 * v1156 + 1140024385);
  v1172 = (int)(*v1159 & 0xE8B5AED8);
  v1173 = *v1161;
  v1174 = v1161;
  LODWORD(v1160) = -333269657 * ((*(_DWORD *)(*v1161 + v1172) ^ *(_DWORD *)(v13 + 5892)) & 0x7FFFFFFF);
  LODWORD(v1160) = v1160 ^ WORD1(v1160);
  v1142[1566] = *(_DWORD *)(v1146 + 4 * (((-333269657 * v1160) >> 24) + 2)) ^ *(_DWORD *)(v1170 + 4 * ((-333269657 * v1160) >> 24)) ^ *(_DWORD *)&v1064[4 * ((-333269657 * v1160) >> 24)] ^ (-1251540992 * v1160) ^ (-333269657 * v1160) ^ (-1881783609 * ((-333269657 * v1160) >> 24)) ^ (2023576025 * v1109 + 1140024385);
  LODWORD(v1160) = -333269657 * ((*(_DWORD *)(v1173 + v1172) ^ *(_DWORD *)(v13 + 5780)) & 0x7FFFFFFF);
  LODWORD(v1160) = v1160 ^ WORD1(v1160);
  LODWORD(v1161) = *(_DWORD *)(v13 + 9012);
  v1175 = (uint64_t)*(&off_1004ECA20 + (v1161 ^ 0x1F8));
  v1176 = (char *)*(&off_1004ECA20 + ((_DWORD)v1161 + 247)) - 12;
  v1177 = -333269657 * v1160;
  LODWORD(v1169) = (-333269657 * v1160) >> 24;
  LODWORD(v1146) = -1251540992 * v1160;
  v1178 = (char *)*(&off_1004ECA20 + (v1161 ^ 0x321)) - 4;
  v1142[1621] = *(_DWORD *)&v1176[4 * (v1169 + 1)] ^ *(_DWORD *)(v1175 + 4 * v1169) ^ *(_DWORD *)&v1178[4 * (v1169 + 6)] ^ v1146 ^ v1177 ^ (956247407 * v1169) ^ (2023576025 * v1139 + 1140024385);
  v1179 = *(_QWORD *)(v13 + 5944) + 4 * (((v1157 & 0x42 ^ 0x42) + (v1157 & 0x42)) | 0x21u);
  LODWORD(v1172) = -333269657 * (((v1179 + 1836845361) ^ *(_DWORD *)(v1173 + v1172)) & 0x7FFFFFFF);
  LODWORD(v1172) = v1172 ^ WORD1(v1172);
  v1180 = (-333269657 * v1172) >> 24;
  v1181 = *(_DWORD *)(v13 + 7312);
  *(_DWORD *)v1179 = *(_DWORD *)&v1176[4 * v1180 + 4] ^ *(_DWORD *)(v1175 + 4 * v1180) ^ *(_DWORD *)&v1178[4 * v1180 + 24] ^ (2023576025 * v1181 + 1140024385) ^ (-1251540992 * v1172) ^ (-333269657 * v1172) ^ (956247407 * v1180);
  LODWORD(v1161) = v1158 + *(_DWORD *)(v13 + 8312);
  *(_DWORD *)(v13 + 8312) = (_DWORD)v1161;
  v1182 = (int)(*v1159 & 0xE8B5AED8);
  v1183 = *v1174;
  v1184 = -333269657 * ((*(_DWORD *)(*v1174 + v1182) ^ *(_DWORD *)(v13 + 5548)) & 0x7FFFFFFF);
  v1185 = v1184 ^ HIWORD(v1184);
  LODWORD(v1179) = *(_DWORD *)&v1176[4 * ((-333269657 * v1185) >> 24) + 4] ^ *(_DWORD *)(v1175 + 4 * ((-333269657 * v1185) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1185) >> 24) + 24] ^ (-1251540992 * v1185) ^ (-333269657 * v1185) ^ (956247407 * ((-333269657 * v1185) >> 24));
  v1186 = v1161 ^ *(_DWORD *)(v13 + 7592);
  v1187 = v1186 ^ *(_DWORD *)(v13 + 8236);
  LODWORD(v1161) = *(_DWORD *)(v13 + 7584) - v1187;
  *(_DWORD *)(v13 + 8236) = (_DWORD)v1161;
  LODWORD(v1172) = v1161 ^ *(_DWORD *)(v13 + 7632);
  v1142[1592] = v1179 ^ (2023576025 * v1172 + 1140024385);
  LODWORD(v1179) = -333269657 * ((*(_DWORD *)(v1183 + v1182) ^ *(_DWORD *)(v13 + 5832)) & 0x7FFFFFFF);
  LODWORD(v1179) = v1179 ^ WORD1(v1179);
  v1188 = *(_DWORD *)(v13 + 7416);
  v1142[1559] = *(_DWORD *)&v1176[4 * ((-333269657 * v1179) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1179) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1179) >> 24) + 24] ^ (-1251540992 * v1179) ^ (-333269657 * v1179) ^ (956247407 * ((-333269657 * v1179) >> 24)) ^ (2023576025 * (v1188 + 549829801));
  v1189 = -333269657 * ((*(_DWORD *)(v1183 + v1182) ^ *(_DWORD *)(v13 + 5600)) & 0x7FFFFFFF);
  v1190 = v1189 ^ HIWORD(v1189);
  LODWORD(v1056) = (-333269657 * v1190) >> 24;
  LODWORD(v1179) = (v1188 + 549829801) | (523912022 - v1188);
  v1142[1641] = *(_DWORD *)&v1176[4 * (v1056 + 1)] ^ *(_DWORD *)(v1175 + 4 * v1056) ^ *(_DWORD *)&v1178[4 * (v1056 + 6)] ^ (-1251540992 * v1190) ^ (-333269657 * v1190) ^ (956247407 * v1056) ^ (2023576025 * *(_DWORD *)(v13 + 7296) + 1140024385);
  v1191 = -333269657 * ((*(_DWORD *)(v1183 + v1182) ^ *(_DWORD *)(v13 + 5656)) & 0x7FFFFFFF);
  v1192 = v1191 ^ HIWORD(v1191);
  v1142[1616] = *(_DWORD *)&v1176[4 * ((-333269657 * v1192) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1192) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1192) >> 24) + 24] ^ (-1251540992 * v1192) ^ (-333269657 * v1192) ^ (956247407 * ((-333269657 * v1192) >> 24)) ^ ((*(_DWORD *)(v13 + 7408) + 549829801) * (v1179 & 0x388400D8 | 0x40195101));
  v1193 = (int)(*v1159 & 0xE8B5AED8);
  v1194 = *v1174;
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(*v1174 + v1193) ^ *(_DWORD *)(v13 + 5748)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1588] = *(_DWORD *)&v1176[4 * ((-333269657 * v1169) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1169) >> 24) + 24] ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (956247407 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7448) + 1140024385);
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(v1194 + v1193) ^ *(_DWORD *)(v13 + 5552)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1643] = *(_DWORD *)&v1176[4 * ((-333269657 * v1169) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1169) >> 24) + 24] ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (956247407 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7552) + 1140024385);
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(v1194 + v1193) ^ *(_DWORD *)(v13 + 5824)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1624] = *(_DWORD *)&v1176[4 * ((-333269657 * v1169) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1169) >> 24) + 24] ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (956247407 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7424) + 1140024385);
  LODWORD(v1161) = -333269657 * ((*(_DWORD *)(v1194 + v1193) ^ *(_DWORD *)(v13 + 5576)) & 0x7FFFFFFF);
  LODWORD(v1161) = v1161 ^ (v1161 >> 16);
  v1142[1660] = *(_DWORD *)&v1176[4 * ((-333269657 * (_DWORD)v1161) >> 24) + 4] ^ *(_DWORD *)(v1175 + 4 * ((-333269657 * (_DWORD)v1161) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * (_DWORD)v1161) >> 24) + 24] ^ (-1251540992 * (_DWORD)v1161) ^ (-333269657 * (_DWORD)v1161) ^ (956247407 * ((-333269657 * (_DWORD)v1161) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7576) + 1140024385);
  v1195 = (int)(*v1159 & 0xE8B5AED8);
  v1196 = *v1174;
  LODWORD(v1194) = -333269657 * ((*(_DWORD *)(*v1174 + v1195) ^ *(_DWORD *)(v13 + 5568)) & 0x7FFFFFFF);
  LODWORD(v1194) = v1194 ^ WORD1(v1194);
  v1142[1636] = *(_DWORD *)&v1176[4 * ((-333269657 * v1194) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1194) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1194) >> 24) + 24] ^ (-1251540992 * v1194) ^ (-333269657 * v1194) ^ (956247407 * ((-333269657 * v1194) >> 24)) ^ (2023576025 * v1186 + 1140024385);
  LODWORD(v1194) = -333269657 * ((*(_DWORD *)(v1196 + v1195) ^ *(_DWORD *)(v13 + 6224)) & 0x7FFFFFFF);
  LODWORD(v1194) = v1194 ^ WORD1(v1194);
  v1142[1646] = *(_DWORD *)&v1176[4 * ((-333269657 * v1194) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1194) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1194) >> 24) + 24] ^ (-1251540992 * v1194) ^ (-333269657 * v1194) ^ (956247407 * ((-333269657 * v1194) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7640) + 1140024385);
  LODWORD(v1195) = *(_DWORD *)(v1196 + v1195);
  v1197 = (_DWORD *)(*(_QWORD *)(v13 + 5944) + 4 * ((((v1181 & 0x1B09 ^ 0x1B09) + (v1181 & 0x1B09)) ^ 0x1B09u) + 50));
  LODWORD(v1195) = (-333269657 * ((((_DWORD)v1197 + 1836845361) ^ v1195) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                          * ((((_DWORD)v1197 + 1836845361) ^ v1195) & 0x7FFFFFFF)) >> 16);
  LODWORD(v1194) = *(_DWORD *)&v1176[4 * ((-333269657 * v1195) >> 24) + 4] ^ *(_DWORD *)(v1175 + 4 * ((-333269657 * v1195) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1195) >> 24) + 24] ^ (-1251540992 * v1195) ^ (-333269657 * v1195) ^ (956247407 * ((-333269657 * v1195) >> 24));
  LODWORD(v1195) = *(_DWORD *)(v13 + 7648) + 549829801;
  *v1197 = v1194 ^ (2023576025 * v1195);
  v1198 = (int)(*v1159 & 0xE8B5AED8);
  v1199 = *v1174;
  v1200 = v1174;
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(*v1174 + v1198) ^ *(_DWORD *)(v13 + 5836)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1679] = *(_DWORD *)&v1176[4 * ((-333269657 * v1169) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1169) >> 24) + 24] ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (956247407 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7616) + 1140024385);
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(v1199 + v1198) ^ *(_DWORD *)(v13 + 5756)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1556] = *(_DWORD *)&v1176[4 * ((-333269657 * v1169) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1169) >> 24) + 24] ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (956247407 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7656) + 1140024385);
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(v1199 + v1198) ^ *(_DWORD *)(v13 + 5640)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1577] = *(_DWORD *)&v1176[4 * ((-333269657 * v1169) >> 24) + 4] ^ *(_DWORD *)(v1175
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)&v1178[4 * ((-333269657 * v1169) >> 24) + 24] ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (956247407 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7680) + 1140024385);
  LODWORD(v1176) = -333269657 * ((*(_DWORD *)(v1199 + v1198) ^ *(_DWORD *)(v13 + 5880)) & 0x7FFFFFFF);
  v1201 = *(_DWORD *)(v13 + 9012);
  v1202 = (uint64_t)*(&off_1004ECA20 + (v1201 ^ 0x3D0u));
  LODWORD(v1198) = v1176 ^ (v1176 >> 16);
  v1203 = (uint64_t)*(&off_1004ECA20 + (v1201 ^ 0xBAu));
  v1204 = (uint64_t)*(&off_1004ECA20 + (v1201 + 272));
  v1142[1684] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1198) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1198) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1198) >> 24) + 2)) ^ (-1251540992 * v1198) ^ (-333269657 * v1198) ^ (-1713134055 * ((-333269657 * v1198) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7688) + 1140024385);
  v1205 = (int)(*v1159 & 0xE8B5AED8);
  v1206 = *v1174;
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(*v1174 + v1205) ^ *(_DWORD *)(v13 + 5592)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1572] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1169) >> 24) + 2)) ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (-1713134055 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7664) + 1140024385);
  LODWORD(v1169) = -333269657 * ((*(_DWORD *)(v1206 + v1205) ^ *(_DWORD *)(v13 + 5556)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  v1142[1642] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1169) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1169) >> 24) + 2)) ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (-1713134055 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7672) + 1140024385);
  v1207 = -333269657 * ((*(_DWORD *)(v1206 + v1205) ^ *(_DWORD *)(v13 + 5860)) & 0x7FFFFFFF);
  v1208 = v1207 ^ HIWORD(v1207);
  v1142[1555] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1208) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1208) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1208) >> 24) + 2)) ^ (-1251540992 * v1208) ^ (-333269657 * v1208) ^ (-1713134055 * ((-333269657 * v1208) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7712) + 1140024385);
  v1209 = -333269657 * ((*(_DWORD *)(v1206 + v1205) ^ *(_DWORD *)(v13 + 5728)) & 0x7FFFFFFF);
  v1210 = v1209 ^ HIWORD(v1209);
  v1142[1593] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1210) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1210) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1210) >> 24) + 2)) ^ (-1251540992 * v1210) ^ (-333269657 * v1210) ^ (-1713134055 * ((-333269657 * v1210) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7776) + 1140024385);
  v1211 = (int)(*v1159 & 0xE8B5AED8);
  v1212 = *v1174;
  LODWORD(v1206) = -333269657 * ((*(_DWORD *)(*v1174 + v1211) ^ *(_DWORD *)(v13 + 5460)) & 0x7FFFFFFF);
  LODWORD(v1206) = v1206 ^ WORD1(v1206);
  v1142[1602] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1206) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1206) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1206) >> 24) + 2)) ^ (-1251540992 * v1206) ^ (-333269657 * v1206) ^ (-1713134055 * ((-333269657 * v1206) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7696) + 1140024385);
  LODWORD(v1206) = -333269657 * ((*(_DWORD *)(v1212 + v1211) ^ *(_DWORD *)(v13 + 5800)) & 0x7FFFFFFF);
  LODWORD(v1206) = v1206 ^ WORD1(v1206);
  v1213 = 4 * ((-333269657 * v1206) >> 24);
  v1214 = *(_DWORD *)(v1202 + v1213);
  LODWORD(v1174) = v1172 + *(_DWORD *)(v13 + 8764);
  *(_DWORD *)(v13 + 8764) = (_DWORD)v1174;
  v1142[1659] = *(_DWORD *)(v1203 + v1213) ^ v1214 ^ *(_DWORD *)(v1204
                                                               + 4 * (((-333269657 * v1206) >> 24) + 2)) ^ (-1251540992 * v1206) ^ (-333269657 * v1206) ^ (-1713134055 * ((-333269657 * v1206) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7704) + 1140024385);
  LODWORD(v1172) = -333269657 * ((*(_DWORD *)(v1212 + v1211) ^ *(_DWORD *)(v13 + 5540)) & 0x7FFFFFFF);
  LODWORD(v1172) = v1172 ^ WORD1(v1172);
  LODWORD(v1172) = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1172) >> 24)) ^ *(_DWORD *)(v1202 + 4 * ((-333269657 * v1172) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1172) >> 24) + 2)) ^ (-1251540992 * v1172) ^ (-333269657 * v1172) ^ (-1713134055 * ((-333269657 * v1172) >> 24));
  LODWORD(v1206) = (_DWORD)v1174 + *(_DWORD *)(v13 + 8688);
  *(_DWORD *)(v13 + 8688) = v1206;
  v1142[1674] = v1172 ^ (2023576025 * v1206 + 1140024385);
  LODWORD(v1172) = -333269657 * ((*(_DWORD *)(v1212 + v1211) ^ *(_DWORD *)(v13 + 5760)) & 0x7FFFFFFF);
  LODWORD(v1172) = v1172 ^ WORD1(v1172);
  v1142[1567] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1172) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1172) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1172) >> 24) + 2)) ^ (-1251540992 * v1172) ^ (-333269657 * v1172) ^ (-1713134055 * ((-333269657 * v1172) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7784) + 1140024385);
  v1215 = (int)(*v1159 & 0xE8B5AED8);
  v1216 = *v1200;
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(*v1200 + v1215) ^ *(_DWORD *)(v13 + 6252)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1549] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1212) >> 24) + 2)) ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-1713134055 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7936) + 1140024385);
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(v1216 + v1215) ^ *(_DWORD *)(v13 + 5740)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1629] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1212) >> 24) + 2)) ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-1713134055 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7952) + 1140024385);
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(v1216 + v1215) ^ *(_DWORD *)(v13 + 5776)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1610] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1212) >> 24) + 2)) ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-1713134055 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7792) + 1140024385);
  LODWORD(v1215) = -333269657 * ((*(_DWORD *)(v1216 + v1215) ^ *(_DWORD *)(v13 + 5916)) & 0x7FFFFFFF);
  LODWORD(v1215) = v1215 ^ WORD1(v1215);
  v1142[1609] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1215) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1215) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1215) >> 24) + 2)) ^ (-1251540992 * v1215) ^ (-333269657 * v1215) ^ (-1713134055 * ((-333269657 * v1215) >> 24)) ^ (2023576025 * (*(_DWORD *)(v13 + 9688) ^ *(_DWORD *)(v13 + 8020)) + 1140024385);
  v1217 = (int)(*v1159 & 0xE8B5AED8);
  v1218 = *v1200;
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(*v1200 + v1217) ^ *(_DWORD *)(v13 + 5852)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1670] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1212) >> 24) + 2)) ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-1713134055 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7888) + 1140024385);
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(v1218 + v1217) ^ *(_DWORD *)(v13 + 5560)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1623] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1212) >> 24) + 2)) ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-1713134055 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7984) + 1140024385);
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(v1218 + v1217) ^ *(_DWORD *)(v13 + 5504)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1672] = *(_DWORD *)(v1203 + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1202
                                                                                                  + 4 * ((-333269657 * v1212) >> 24)) ^ *(_DWORD *)(v1204 + 4 * (((-333269657 * v1212) >> 24) + 2)) ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-1713134055 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7992) + 1140024385);
  LODWORD(v1202) = -333269657 * ((*(_DWORD *)(v1218 + v1217) ^ *(_DWORD *)(v13 + 6276)) & 0x7FFFFFFF);
  LODWORD(v1204) = v1202 ^ WORD1(v1202);
  v1219 = (char *)*(&off_1004ECA20 + (v1201 ^ 0x3C2u)) - 4;
  v1220 = (uint64_t)*(&off_1004ECA20 + v1201 - 53);
  LODWORD(v1217) = -333269657 * v1204;
  LODWORD(v1218) = (-333269657 * v1204) >> 24;
  v1221 = -1251540992 * v1204;
  v1222 = (char *)*(&off_1004ECA20 + (v1201 ^ 0x1FFu)) - 12;
  v1142[1617] = *(_DWORD *)(v1220 + 4 * (v1218 + 7)) ^ *(_DWORD *)&v1219[4 * v1218] ^ *(_DWORD *)&v1222[4 * v1218] ^ v1221 ^ v1217 ^ (-2111671725 * v1218) ^ (2023576025 * *(_DWORD *)(v13 + 8000) + 1140024385);
  v1223 = (int)(*v1159 & 0xE8B5AED8);
  v1224 = *v1200;
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(*v1200 + v1223) ^ *(_DWORD *)(v13 + 6272)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1591] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1212) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1212) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1212) >> 24)] ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-2111671725 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 7976) + 1140024385);
  LODWORD(v1212) = -333269657 * ((*(_DWORD *)(v1224 + v1223) ^ *(_DWORD *)(v13 + 5516)) & 0x7FFFFFFF);
  LODWORD(v1212) = v1212 ^ WORD1(v1212);
  v1142[1564] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1212) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1212) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1212) >> 24)] ^ (-1251540992 * v1212) ^ (-333269657 * v1212) ^ (-2111671725 * ((-333269657 * v1212) >> 24)) ^ (2023576025 * v1187 + 1140024385);
  v1225 = -333269657 * ((*(_DWORD *)(v1224 + v1223) ^ *(_DWORD *)(v13 + 5684)) & 0x7FFFFFFF);
  v1226 = v1225 ^ HIWORD(v1225);
  v1142[1598] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1226) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1226) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1226) >> 24)] ^ (-1251540992 * v1226) ^ (-333269657 * v1226) ^ (-2111671725 * ((-333269657 * v1226) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8032) + 1140024385);
  v1227 = -333269657 * ((*(_DWORD *)(v1224 + v1223) ^ *(_DWORD *)(v13 + 5648)) & 0x7FFFFFFF);
  v1228 = v1227 ^ HIWORD(v1227);
  v1142[1626] = *(_DWORD *)&v1219[4 * ((-333269657 * v1228) >> 24)] ^ *(_DWORD *)(v1220
                                                                                              + 4
                                                                                              * (((-333269657 * v1228) >> 24)
                                                                                               + 7)) ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1228) >> 24)] ^ (-1251540992 * v1228) ^ (-333269657 * v1228) ^ (-2111671725 * ((-333269657 * v1228) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8260) + 1140024385);
  v1229 = (int)(*v1159 & 0xE8B5AED8);
  v1230 = *v1200;
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(*v1200 + v1229) ^ *(_DWORD *)(v13 + 5632)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1582] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8008) + 1140024385);
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(v1230 + v1229) ^ *(_DWORD *)(v13 + 5580)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1581] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8024) + 1140024385);
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(v1230 + v1229) ^ *(_DWORD *)(v13 + 5840)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1622] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8280) + 1140024385);
  LODWORD(v1229) = -333269657 * ((*(_DWORD *)(v1230 + v1229) ^ *(_DWORD *)(v13 + 5736)) & 0x7FFFFFFF);
  LODWORD(v1229) = v1229 ^ WORD1(v1229);
  v1142[1615] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1229) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1229) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1229) >> 24)] ^ (-1251540992 * v1229) ^ (-333269657 * v1229) ^ (-2111671725 * ((-333269657 * v1229) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8288) + 1140024385);
  v1231 = (int)(*v1159 & 0xE8B5AED8);
  v1232 = *v1200;
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(*v1200 + v1231) ^ *(_DWORD *)(v13 + 5712)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1575] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8264) + 1140024385);
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(v1232 + v1231) ^ *(_DWORD *)(v13 + 5520)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1545] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8352) + 1140024385);
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(v1232 + v1231) ^ *(_DWORD *)(v13 + 5660)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1560] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8356) + 1140024385);
  LODWORD(v1231) = -333269657 * ((*(_DWORD *)(v1232 + v1231) ^ *(_DWORD *)(v13 + 5764)) & 0x7FFFFFFF);
  LODWORD(v1231) = v1231 ^ WORD1(v1231);
  v1142[1682] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1231) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1231) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1231) >> 24)] ^ (-1251540992 * v1231) ^ (-333269657 * v1231) ^ (-2111671725 * ((-333269657 * v1231) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8376) + 1140024385);
  v1233 = (int)(*v1159 & 0xE8B5AED8);
  v1234 = *v1200;
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(*v1200 + v1233) ^ *(_DWORD *)(v13 + 5872)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1608] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8368) + 1140024385);
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(v1234 + v1233) ^ *(_DWORD *)(v13 + 5784)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1667] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8236) + 1140024385);
  LODWORD(v1224) = -333269657 * ((*(_DWORD *)(v1234 + v1233) ^ *(_DWORD *)(v13 + 5864)) & 0x7FFFFFFF);
  LODWORD(v1224) = v1224 ^ WORD1(v1224);
  v1142[1568] = *(_DWORD *)(v1220 + 4 * (((-333269657 * v1224) >> 24) + 7)) ^ *(_DWORD *)&v1219[4 * ((-333269657 * v1224) >> 24)] ^ *(_DWORD *)&v1222[4 * ((-333269657 * v1224) >> 24)] ^ (-1251540992 * v1224) ^ (-333269657 * v1224) ^ (-2111671725 * ((-333269657 * v1224) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8360) + 1140024385);
  LODWORD(v1219) = -333269657 * ((*(_DWORD *)(v1234 + v1233) ^ *(_DWORD *)(v13 + 6240)) & 0x7FFFFFFF);
  LODWORD(v1219) = v1219 ^ (v1219 >> 16);
  v1235 = (char *)*(&off_1004ECA20 + v1201 - 94) - 8;
  v1236 = (char *)*(&off_1004ECA20 + (v1201 ^ 0x381u)) - 8;
  v1237 = (uint64_t)*(&off_1004ECA20 + (v1201 ^ 0x31Eu));
  LODWORD(v1220) = 2023576025 * *(_DWORD *)(v13 + 8384);
  v1142[1645] = *(_DWORD *)&v1235[4 * ((-333269657 * (_DWORD)v1219) >> 24)] ^ *(_DWORD *)&v1236[4 * ((-333269657 * (_DWORD)v1219) >> 24)] ^ *(_DWORD *)(v1237 + 4 * ((-333269657 * (_DWORD)v1219) >> 24)) ^ (-1251540992 * (_DWORD)v1219) ^ (-333269657 * (_DWORD)v1219) ^ (-846614833 * ((-333269657 * (_DWORD)v1219) >> 24)) ^ (v1220 + 1140024385);
  v1238 = (int)(*v1159 & 0xE8B5AED8);
  v1239 = *v1200;
  LODWORD(v1206) = -333269657 * ((*(_DWORD *)(*v1200 + v1238) ^ *(_DWORD *)(v13 + 6248)) & 0x7FFFFFFF);
  LODWORD(v1206) = v1206 ^ WORD1(v1206);
  v1142[1630] = *(_DWORD *)&v1235[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)&v1236[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)(v1237 + 4 * ((-333269657 * v1206) >> 24)) ^ (-1251540992 * v1206) ^ (-333269657 * v1206) ^ (-846614833 * ((-333269657 * v1206) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8392) + 1140024385);
  LODWORD(v1206) = -333269657 * ((*(_DWORD *)(v1239 + v1238) ^ *(_DWORD *)(v13 + 5904)) & 0x7FFFFFFF);
  LODWORD(v1206) = v1206 ^ WORD1(v1206);
  v1142[1628] = *(_DWORD *)&v1236[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)&v1235[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)(v1237 + 4 * ((-333269657 * v1206) >> 24)) ^ (-1251540992 * v1206) ^ (-333269657 * v1206) ^ (-846614833 * ((-333269657 * v1206) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8400) + 1140024385);
  LODWORD(v1206) = -333269657 * ((*(_DWORD *)(v1239 + v1238) ^ *(_DWORD *)(v13 + 5672)) & 0x7FFFFFFF);
  LODWORD(v1206) = v1206 ^ WORD1(v1206);
  v1142[1561] = *(_DWORD *)&v1236[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)&v1235[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)(v1237 + 4 * ((-333269657 * v1206) >> 24)) ^ (-1251540992 * v1206) ^ (-333269657 * v1206) ^ (-846614833 * ((-333269657 * v1206) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8312) + 1140024385);
  LODWORD(v1235) = *(_DWORD *)(v1239 + v1238);
  LODWORD(v1236) = v1195 | 0x20C5BCA8;
  LODWORD(v1238) = v1195 & 0xDF3A4357;
  LODWORD(v1235) = -333269657 * ((v1235 ^ *(_DWORD *)(v13 + 6256)) & 0x7FFFFFFF);
  LODWORD(v1237) = v1235 ^ (v1235 >> 16);
  v1240 = (char *)*(&off_1004ECA20 + (v1201 ^ 0x3AAu)) - 4;
  v1241 = (char *)*(&off_1004ECA20 + (v1201 ^ 0x16Cu)) - 8;
  LODWORD(v1238) = (_DWORD)v1236 - v1238;
  v1242 = (char *)*(&off_1004ECA20 + (v1201 + 41)) - 8;
  v1142[1596] = *(_DWORD *)&v1241[4 * ((-333269657 * v1237) >> 24) + 4] ^ *(_DWORD *)&v1240[4 * ((-333269657 * v1237) >> 24)] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1237) >> 24) + 4] ^ (-1251540992 * v1237) ^ (-333269657 * v1237) ^ (747805999 * ((-333269657 * v1237) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8440) + 1140024385);
  LODWORD(v1239) = v1238 + *(_DWORD *)(v13 + 8496);
  v1243 = (int)(*v1159 & 0xE8B5AED8);
  v1244 = *v1200;
  LODWORD(v1206) = -333269657 * ((*(_DWORD *)(*v1200 + v1243) ^ *(_DWORD *)(v13 + 6232)) & 0x7FFFFFFF);
  LODWORD(v1206) = v1206 ^ WORD1(v1206);
  v1142[1649] = *(_DWORD *)&v1240[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1206) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1206) >> 24) + 4] ^ (-1251540992 * v1206) ^ (-333269657 * v1206) ^ (747805999 * ((-333269657 * v1206) >> 24)) ^ (2023576025 * v1239 + 2023576025);
  LODWORD(v1239) = -333269657 * ((*(_DWORD *)(v1244 + v1243) ^ *(_DWORD *)(v13 + 5652)) & 0x7FFFFFFF);
  LODWORD(v1239) = v1239 ^ WORD1(v1239);
  v1142[1583] = *(_DWORD *)&v1241[4 * ((-333269657 * v1239) >> 24) + 4] ^ *(_DWORD *)&v1240[4 * ((-333269657 * v1239) >> 24)] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1239) >> 24) + 4] ^ (-1251540992 * v1239) ^ (-333269657 * v1239) ^ (747805999 * ((-333269657 * v1239) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8408) + 1140024385);
  LODWORD(v1239) = 2023576025 * *(_DWORD *)(v13 + 8512);
  LODWORD(v1206) = v1239 + 1140024385;
  v1245 = *(_QWORD *)(v13 + 5944) + 4 * (((v1239 + 65) | (-66 - v1239)) ^ 0x93u);
  LODWORD(v1169) = -333269657 * (((v1245 + 1836845361) ^ *(_DWORD *)(v1244 + v1243)) & 0x7FFFFFFF);
  LODWORD(v1169) = v1169 ^ WORD1(v1169);
  *(_DWORD *)v1245 = *(_DWORD *)&v1241[4 * ((-333269657 * v1169) >> 24) + 4] ^ *(_DWORD *)&v1240[4 * ((-333269657 * v1169) >> 24)] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1169) >> 24) + 4] ^ (-1251540992 * v1169) ^ (-333269657 * v1169) ^ (747805999 * ((-333269657 * v1169) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8504) + 1140024385);
  LODWORD(v1243) = -333269657 * ((*(_DWORD *)(v1244 + v1243) ^ *(_DWORD *)(v13 + 5732)) & 0x7FFFFFFF);
  LODWORD(v1243) = v1243 ^ WORD1(v1243);
  v1142[1664] = *(_DWORD *)&v1240[4 * ((-333269657 * v1243) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1243) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1243) >> 24) + 4] ^ (-1251540992 * v1243) ^ (-333269657 * v1243) ^ (747805999 * ((-333269657 * v1243) >> 24)) ^ v1206;
  v1246 = (int)(*v1159 & 0xE8B5AED8);
  v1247 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1246) ^ *(_DWORD *)(v13 + 5664)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1675] = *(_DWORD *)&v1240[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1245) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (747805999 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8616) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1247 + v1246) ^ *(_DWORD *)(v13 + 5816)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1662] = *(_DWORD *)&v1240[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1245) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (747805999 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8640) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1247 + v1246) ^ *(_DWORD *)(v13 + 5628)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1673] = *(_DWORD *)&v1240[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1245) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (747805999 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8632) + 1140024385);
  LODWORD(v1246) = -333269657 * ((*(_DWORD *)(v1247 + v1246) ^ *(_DWORD *)(v13 + 5596)) & 0x7FFFFFFF);
  LODWORD(v1246) = v1246 ^ WORD1(v1246);
  v1142[1578] = *(_DWORD *)&v1240[4 * ((-333269657 * v1246) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1246) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1246) >> 24) + 4] ^ (-1251540992 * v1246) ^ (-333269657 * v1246) ^ (747805999 * ((-333269657 * v1246) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8648) + 1140024385);
  v1248 = (int)(*v1159 & 0xE8B5AED8);
  v1249 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1248) ^ *(_DWORD *)(v13 + 5704)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1601] = *(_DWORD *)&v1240[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1245) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (747805999 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8664) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1249 + v1248) ^ *(_DWORD *)(v13 + 5812)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1574] = *(_DWORD *)&v1240[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1245) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (747805999 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8612) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1249 + v1248) ^ *(_DWORD *)(v13 + 5536)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1552] = *(_DWORD *)&v1240[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1241[4 * ((-333269657 * v1245) >> 24) + 4] ^ *(_DWORD *)&v1242[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (747805999 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8656) + 1140024385);
  LODWORD(v1240) = -333269657 * ((*(_DWORD *)(v1249 + v1248) ^ *(_DWORD *)(v13 + 6268)) & 0x7FFFFFFF);
  LODWORD(v1248) = v1240 ^ (v1240 >> 16);
  v1250 = (char *)*(&off_1004ECA20 + (v1201 ^ 0xE1u)) - 12;
  v1251 = (char *)*(&off_1004ECA20 + v1201 - 409) - 4;
  v1252 = (uint64_t)*(&off_1004ECA20 + (v1201 + 29));
  v1142[1551] = *(_DWORD *)&v1250[4 * ((-333269657 * v1248) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1248) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1248) >> 24)) ^ (-1251540992 * v1248) ^ (-333269657 * v1248) ^ (-1214155149 * ((-333269657 * v1248) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8672) + 1140024385);
  v1253 = (int)(*v1159 & 0xE8B5AED8);
  v1254 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1253) ^ *(_DWORD *)(v13 + 5700)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1657] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8680) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1254 + v1253) ^ *(_DWORD *)(v13 + 5680)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1613] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8696) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1254 + v1253) ^ *(_DWORD *)(v13 + 5708)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1676] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8704) + 1140024385);
  LODWORD(v1253) = -333269657 * ((*(_DWORD *)(v1254 + v1253) ^ *(_DWORD *)(v13 + 5744)) & 0x7FFFFFFF);
  LODWORD(v1253) = v1253 ^ WORD1(v1253);
  v1142[1681] = *(_DWORD *)&v1250[4 * ((-333269657 * v1253) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1253) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1253) >> 24)) ^ (-1251540992 * v1253) ^ (-333269657 * v1253) ^ (-1214155149 * ((-333269657 * v1253) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8712) + 1140024385);
  v1255 = (int)(*v1159 & 0xE8B5AED8);
  v1256 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1255) ^ *(_DWORD *)(v13 + 5868)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1619] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8720) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1256 + v1255) ^ *(_DWORD *)(v13 + 5604)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  LODWORD(v1206) = 2023576025 * *(_DWORD *)(v13 + 8728);
  LODWORD(v1169) = v1206 + 1140024385;
  v1142[1605] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (v1206 + 1140024385);
  LODWORD(v1245) = (-1140024386 - v1206) & 0xDF3A4357;
  LODWORD(v1206) = -333269657 * ((*(_DWORD *)(v1256 + v1255) ^ *(_DWORD *)(v13 + 5696)) & 0x7FFFFFFF);
  LODWORD(v1206) = v1206 ^ WORD1(v1206);
  v1142[1639] = *(_DWORD *)&v1250[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1206) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1206) >> 24)) ^ (-1251540992 * v1206) ^ (-333269657 * v1206) ^ (-1214155149 * ((-333269657 * v1206) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8744) + 1140024385);
  LODWORD(v1255) = -333269657 * ((*(_DWORD *)(v1256 + v1255) ^ *(_DWORD *)(v13 + 5528)) & 0x7FFFFFFF);
  LODWORD(v1255) = v1255 ^ WORD1(v1255);
  v1142[1597] = *(_DWORD *)&v1250[4 * ((-333269657 * v1255) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1255) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1255) >> 24)) ^ (-1251540992 * v1255) ^ (-333269657 * v1255) ^ (-1214155149 * ((-333269657 * v1255) >> 24)) ^ (2023576025 * (*(_DWORD *)(v13 + 8752) - ((v1169 & 0xDF3A4357) + v1245)));
  v1257 = (int)(*v1159 & 0xE8B5AED8);
  v1258 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1257) ^ *(_DWORD *)(v13 + 5644)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1677] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8760) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1258 + v1257) ^ *(_DWORD *)(v13 + 3140)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1683] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8736) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1258 + v1257) ^ *(_DWORD *)(v13 + 5572)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1612] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8748) + 1140024385);
  LODWORD(v1257) = -333269657 * ((*(_DWORD *)(v1258 + v1257) ^ *(_DWORD *)(v13 + 5856)) & 0x7FFFFFFF);
  LODWORD(v1257) = v1257 ^ WORD1(v1257);
  v1142[1585] = *(_DWORD *)&v1250[4 * ((-333269657 * v1257) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1257) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1257) >> 24)) ^ (-1251540992 * v1257) ^ (-333269657 * v1257) ^ (-1214155149 * ((-333269657 * v1257) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8872) + 1140024385);
  v1259 = (int)(*v1159 & 0xE8B5AED8);
  v1260 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1259) ^ *(_DWORD *)(v13 + 5792)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1606] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8768) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1260 + v1259) ^ *(_DWORD *)(v13 + 5624)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1620] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8888) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1260 + v1259) ^ *(_DWORD *)(v13 + 5636)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1579] = *(_DWORD *)&v1250[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)&v1251[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1252 + 4 * ((-333269657 * v1245) >> 24)) ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-1214155149 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8964) + 1140024385);
  LODWORD(v1251) = -333269657 * ((*(_DWORD *)(v1260 + v1259) ^ *(_DWORD *)(v13 + 5724)) & 0x7FFFFFFF);
  LODWORD(v1259) = v1251 ^ (v1251 >> 16);
  v1261 = (uint64_t)*(&off_1004ECA20 + (v1201 ^ 0x209u));
  v1262 = (char *)*(&off_1004ECA20 + v1201 - 612) - 12;
  v1263 = (char *)*(&off_1004ECA20 + (v1201 + 86)) - 12;
  v1142[1648] = *(_DWORD *)&v1262[4 * ((-333269657 * v1259) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1259) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1259) >> 24)] ^ (-1251540992 * v1259) ^ (-333269657 * v1259) ^ (1705058567 * ((-333269657 * v1259) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8880) + 1140024385);
  v1264 = (int)(*v1159 & 0xE8B5AED8);
  v1265 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1264) ^ *(_DWORD *)(v13 + 5912)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1558] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 8984) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1265 + v1264) ^ *(_DWORD *)(v13 + 5584)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1665] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9008) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1265 + v1264) ^ *(_DWORD *)(v13 + 5544)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1635] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9080) + 1140024385);
  LODWORD(v1264) = -333269657 * ((*(_DWORD *)(v1265 + v1264) ^ *(_DWORD *)(v13 + 5828)) & 0x7FFFFFFF);
  LODWORD(v1264) = v1264 ^ WORD1(v1264);
  v1142[1590] = *(_DWORD *)&v1262[4 * ((-333269657 * v1264) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1264) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1264) >> 24)] ^ (-1251540992 * v1264) ^ (-333269657 * v1264) ^ (1705058567 * ((-333269657 * v1264) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9096) + 1140024385);
  v1266 = (int)(*v1159 & 0xE8B5AED8);
  v1267 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1266) ^ *(_DWORD *)(v13 + 5884)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1669] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9128) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1267 + v1266) ^ *(_DWORD *)(v13 + 5532)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1573] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9136) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1267 + v1266) ^ *(_DWORD *)(v13 + 5752)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1661] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9160) + 1140024385);
  LODWORD(v1266) = -333269657 * ((*(_DWORD *)(v1267 + v1266) ^ *(_DWORD *)(v13 + 5500)) & 0x7FFFFFFF);
  LODWORD(v1266) = v1266 ^ WORD1(v1266);
  v1142[1553] = *(_DWORD *)&v1262[4 * ((-333269657 * v1266) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1266) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1266) >> 24)] ^ (-1251540992 * v1266) ^ (-333269657 * v1266) ^ (1705058567 * ((-333269657 * v1266) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9200) + 1140024385);
  v1268 = (int)(*v1159 & 0xE8B5AED8);
  v1269 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1268) ^ *(_DWORD *)(v13 + 5768)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1668] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9384) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1269 + v1268) ^ *(_DWORD *)(v13 + 5788)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1658] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9392) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1269 + v1268) ^ *(_DWORD *)(v13 + 6236)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1548] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9416) + 1140024385);
  LODWORD(v1268) = -333269657 * ((*(_DWORD *)(v1269 + v1268) ^ *(_DWORD *)(v13 + 6260)) & 0x7FFFFFFF);
  LODWORD(v1268) = v1268 ^ WORD1(v1268);
  v1142[1650] = *(_DWORD *)&v1262[4 * ((-333269657 * v1268) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1268) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1268) >> 24)] ^ (-1251540992 * v1268) ^ (-333269657 * v1268) ^ (1705058567 * ((-333269657 * v1268) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9424) + 1140024385);
  v1270 = (int)(*v1159 & 0xE8B5AED8);
  v1271 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1270) ^ *(_DWORD *)(v13 + 5844)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1647] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9400) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1271 + v1270) ^ *(_DWORD *)(v13 + 5508)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  LODWORD(v1174) = *(_DWORD *)(v13 + 8688) + *(_DWORD *)(v13 + 9496);
  v1142[1655] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9408) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1271 + v1270) ^ *(_DWORD *)(v13 + 5524)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1680] = *(_DWORD *)&v1262[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1261
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1263[4 * ((-333269657 * v1245) >> 24)] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (1705058567 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * (_DWORD)v1174 + 1140024385);
  LODWORD(v1261) = -333269657 * ((*(_DWORD *)(v1271 + v1270) ^ *(_DWORD *)(v13 + 6264)) & 0x7FFFFFFF);
  LODWORD(v1270) = v1261 ^ WORD1(v1261);
  v1272 = (char *)*(&off_1004ECA20 + (v1201 + 193)) - 8;
  v1273 = (uint64_t)*(&off_1004ECA20 + v1201 - 333);
  v1274 = (char *)*(&off_1004ECA20 + (v1201 ^ 0x1BFu)) - 8;
  v1142[1634] = *(_DWORD *)&v1272[4 * ((-333269657 * v1270) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1270) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1270) >> 24) + 4] ^ (-1251540992 * v1270) ^ (-333269657 * v1270) ^ (-893229307 * ((-333269657 * v1270) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9432) + 1140024385);
  v1275 = (int)(*v1159 & 0xE8B5AED8);
  v1276 = *v1200;
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(*v1200 + v1275) ^ *(_DWORD *)(v13 + 3364)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1640] = *(_DWORD *)&v1272[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-893229307 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9440) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1276 + v1275) ^ *(_DWORD *)(v13 + 5772)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1632] = *(_DWORD *)&v1272[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-893229307 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9448) + 1140024385);
  LODWORD(v1245) = -333269657 * ((*(_DWORD *)(v1276 + v1275) ^ *(_DWORD *)(v13 + 6228)) & 0x7FFFFFFF);
  LODWORD(v1245) = v1245 ^ WORD1(v1245);
  v1142[1638] = *(_DWORD *)&v1272[4 * ((-333269657 * v1245) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1245) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1245) >> 24) + 4] ^ (-1251540992 * v1245) ^ (-333269657 * v1245) ^ (-893229307 * ((-333269657 * v1245) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9456) + 1140024385);
  LODWORD(v1219) = (*(_DWORD *)(v13 + 9464) + 549829801) * (((1007459262 - v1220) | (v1220 + 1140024385)) & 0x789D51D9);
  LODWORD(v1220) = -333269657 * ((*(_DWORD *)(v1276 + v1275) ^ *(_DWORD *)(v13 + 5808)) & 0x7FFFFFFF);
  LODWORD(v1220) = v1220 ^ WORD1(v1220);
  v1142[1589] = *(_DWORD *)&v1272[4 * ((-333269657 * v1220) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1220) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1220) >> 24) + 4] ^ (-1251540992 * v1220) ^ (-333269657 * v1220) ^ (-893229307 * ((-333269657 * v1220) >> 24)) ^ v1219;
  v1277 = *v1200;
  v1278 = (int)(*v1159 & 0xE8B5AED8);
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(*v1200 + v1278) ^ *(_DWORD *)(v13 + 6244)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  v1142[1604] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9488) + 1140024385);
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(v1277 + v1278) ^ *(_DWORD *)(v13 + 3360)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  v1142[1625] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9504) + 1140024385);
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(v1277 + v1278) ^ *(_DWORD *)(v13 + 5692)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  v1279 = *(_DWORD *)(v13 + 9480) + 549829801;
  v1142[1570] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9472) + 1140024385);
  LODWORD(v1277) = -333269657 * ((*(_DWORD *)(v1277 + v1278) ^ *(_DWORD *)(v13 + 5900)) & 0x7FFFFFFF);
  LODWORD(v1277) = v1277 ^ WORD1(v1277);
  v1142[1627] = *(_DWORD *)&v1272[4 * ((-333269657 * v1277) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1277) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1277) >> 24) + 4] ^ (-1251540992 * v1277) ^ (-333269657 * v1277) ^ (-893229307 * ((-333269657 * v1277) >> 24)) ^ (2023576025 * v1279);
  v1280 = *v1200;
  v1281 = (int)(*v1159 & 0xE8B5AED8);
  LODWORD(v1276) = -333269657 * ((*(_DWORD *)(*v1200 + v1281) ^ *(_DWORD *)(v13 + 5616)) & 0x7FFFFFFF);
  LODWORD(v1276) = v1276 ^ WORD1(v1276);
  v1142[1571] = *(_DWORD *)&v1272[4 * ((-333269657 * v1276) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1276) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1276) >> 24) + 4] ^ (-1251540992 * v1276) ^ (-333269657 * v1276) ^ (-893229307 * ((-333269657 * v1276) >> 24)) ^ ((*(_DWORD *)(v13 + 8764) + 549829801) * ((v1279 & 0x789D51D9 ^ 0x789D51D9) + (v1279 & 0x789D51D9)));
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(v1280 + v1281) ^ *(_DWORD *)(v13 + 5876)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  v1142[1580] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9576) + 1140024385);
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(v1280 + v1281) ^ *(_DWORD *)(v13 + 3368)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  LODWORD(v1206) = 2023576025 * *(_DWORD *)(v13 + 7944) + 1140024385;
  LODWORD(v1169) = 2023576025 * *(_DWORD *)(v13 + 9520) + 1140024385;
  v1142[1607] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9584) + 1140024385);
  LODWORD(v1280) = -333269657 * ((*(_DWORD *)(v1280 + v1281) ^ *(_DWORD *)(v13 + 5512)) & 0x7FFFFFFF);
  LODWORD(v1280) = v1280 ^ WORD1(v1280);
  v1142[1633] = *(_DWORD *)&v1272[4 * ((-333269657 * v1280) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1280) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1280) >> 24) + 4] ^ (-1251540992 * v1280) ^ (-333269657 * v1280) ^ (-893229307 * ((-333269657 * v1280) >> 24)) ^ v1206;
  v1282 = *v1200;
  v1283 = (int)(*v1159 & 0xE8B5AED8);
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(*v1200 + v1283) ^ *(_DWORD *)(v13 + 5896)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  v1142[1614] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ v1169;
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(v1282 + v1283) ^ *(_DWORD *)(v13 + 5820)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  v1142[1576] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9592) + 1140024385);
  LODWORD(v1275) = -333269657 * ((*(_DWORD *)(v1282 + v1283) ^ *(_DWORD *)(v13 + 5612)) & 0x7FFFFFFF);
  LODWORD(v1275) = v1275 ^ WORD1(v1275);
  v1142[1600] = *(_DWORD *)&v1272[4 * ((-333269657 * v1275) >> 24)] ^ *(_DWORD *)(v1273
                                                                                              + 4
                                                                                              * ((-333269657 * v1275) >> 24)) ^ *(_DWORD *)&v1274[4 * ((-333269657 * v1275) >> 24) + 4] ^ (-1251540992 * v1275) ^ (-333269657 * v1275) ^ (-893229307 * ((-333269657 * v1275) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9600) + 1140024385);
  LODWORD(v1282) = -333269657 * ((*(_DWORD *)(v1282 + v1283) ^ *(_DWORD *)(v13 + 5716)) & 0x7FFFFFFF);
  LODWORD(v1282) = v1282 ^ WORD1(v1282);
  v1284 = *(_QWORD *)(v13 + 9528);
  v1285 = *(_QWORD *)(v13 + 9736);
  v1286 = *(_QWORD *)(v13 + 9568);
  v1142[1563] = *(_DWORD *)(v1284 + 4 * ((-333269657 * v1282) >> 24)) ^ *(_DWORD *)(v1285
                                                                                                  + 4 * (((-333269657 * v1282) >> 24) + 2)) ^ *(_DWORD *)(v1286 + 4 * ((-333269657 * v1282) >> 24)) ^ (-1251540992 * v1282) ^ (-333269657 * v1282) ^ (-1881783609 * ((-333269657 * v1282) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9608) + 1140024385);
  v1287 = *v1200;
  v1288 = (int)(*v1159 & 0xE8B5AED8);
  LODWORD(v1272) = -333269657 * ((*(_DWORD *)(*v1200 + v1288) ^ *(_DWORD *)(v13 + 5588)) & 0x7FFFFFFF);
  LODWORD(v1272) = v1272 ^ (v1272 >> 16);
  v1142[1651] = *(_DWORD *)(v1284 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ *(_DWORD *)(v1285 + 4 * (((-333269657 * (_DWORD)v1272) >> 24) + 2)) ^ *(_DWORD *)(v1286 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (-1251540992 * (_DWORD)v1272) ^ (-333269657 * (_DWORD)v1272) ^ (-1881783609 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9616) + 1140024385);
  LODWORD(v1272) = -333269657 * ((*(_DWORD *)(v1287 + v1288) ^ *(_DWORD *)(v13 + 5796)) & 0x7FFFFFFF);
  LODWORD(v1272) = v1272 ^ (v1272 >> 16);
  v1142[1562] = *(_DWORD *)(v1284 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ *(_DWORD *)(v1285 + 4 * (((-333269657 * (_DWORD)v1272) >> 24) + 2)) ^ *(_DWORD *)(v1286 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (-1251540992 * (_DWORD)v1272) ^ (-333269657 * (_DWORD)v1272) ^ (-1881783609 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9624) + 1140024385);
  LODWORD(v1272) = -333269657 * ((*(_DWORD *)(v1287 + v1288) ^ *(_DWORD *)(v13 + 5676)) & 0x7FFFFFFF);
  LODWORD(v1272) = v1272 ^ (v1272 >> 16);
  v1142[1554] = *(_DWORD *)(v1284 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ *(_DWORD *)(v1285 + 4 * (((-333269657 * (_DWORD)v1272) >> 24) + 2)) ^ *(_DWORD *)(v1286 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (-1251540992 * (_DWORD)v1272) ^ (-333269657 * (_DWORD)v1272) ^ (-1881783609 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9632) + 1140024385);
  LODWORD(v1287) = -333269657 * ((*(_DWORD *)(v1287 + v1288) ^ *(_DWORD *)(v13 + 3356)) & 0x7FFFFFFF);
  LODWORD(v1287) = v1287 ^ WORD1(v1287);
  v1142[1666] = *(_DWORD *)(v1284 + 4 * ((-333269657 * v1287) >> 24)) ^ *(_DWORD *)(v1285
                                                                                                  + 4 * (((-333269657 * v1287) >> 24) + 2)) ^ *(_DWORD *)(v1286 + 4 * ((-333269657 * v1287) >> 24)) ^ (-1251540992 * v1287) ^ (-333269657 * v1287) ^ (-1881783609 * ((-333269657 * v1287) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9664) + 1140024385);
  v1289 = *v1200;
  v1290 = (int)(*v1159 & 0xE8B5AED8);
  LODWORD(v1272) = -333269657 * ((*(_DWORD *)(*v1200 + v1290) ^ *(_DWORD *)(v13 + 5608)) & 0x7FFFFFFF);
  LODWORD(v1272) = v1272 ^ (v1272 >> 16);
  v1142[1631] = *(_DWORD *)(v1284 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ *(_DWORD *)(v1285 + 4 * (((-333269657 * (_DWORD)v1272) >> 24) + 2)) ^ *(_DWORD *)(v1286 + 4 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (-1251540992 * (_DWORD)v1272) ^ (-333269657 * (_DWORD)v1272) ^ (-1881783609 * ((-333269657 * (_DWORD)v1272) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9656) + 1140024385);
  LODWORD(v1290) = -333269657 * ((*(_DWORD *)(v1289 + v1290) ^ *(_DWORD *)(v13 + 5688)) & 0x7FFFFFFF);
  LODWORD(v1290) = v1290 ^ WORD1(v1290);
  v1142[1557] = *(_DWORD *)(v1284 + 4 * ((-333269657 * v1290) >> 24)) ^ *(_DWORD *)(v1285
                                                                                                  + 4 * (((-333269657 * v1290) >> 24) + 2)) ^ *(_DWORD *)(v1286 + 4 * ((-333269657 * v1290) >> 24)) ^ (-1251540992 * v1290) ^ (-333269657 * v1290) ^ (-1881783609 * ((-333269657 * v1290) >> 24)) ^ (2023576025 * *(_DWORD *)(v13 + 9688) + 1140024385);
  *(_QWORD *)(v13 + 8288) = *(_QWORD *)(v13 + 5920);
  JUMPOUT(0x10031CAA8);
}

void sub_10031CB88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 6296) = 37;
  *(_QWORD *)(v0 + 8288) = *(_QWORD *)(v0 + 5920);
  *(_DWORD *)(v0 + 7616) = *(_DWORD *)(v0 + 5340);
  *(_QWORD *)(v0 + 8264) = v1;
  JUMPOUT(0x10031CBB8);
}

void sub_10031CF24()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;

  *(_QWORD *)(v1 + 9624) = v0;
  v3 = *(_DWORD *)(v1 + 9472) + *(_DWORD *)(v1 + 9656);
  v4 = *(_DWORD *)(v1 + 9688) + *(_DWORD *)(v1 + 6020) + *(_DWORD *)(v1 + 6024);
  v5 = 1194695347 - *(_DWORD *)(v1 + 8984);
  v6 = *(_DWORD *)(v1 + 7424) + 1161516489 - ((2 * v5) & 0xFC0B999A);
  v7 = (v2 + 840357036) & 0xCDE93BFF;
  *(_DWORD *)(v1 + 9608) = v7;
  v8 = *(_DWORD *)(v1 + 9664);
  v9 = *(_DWORD *)(v1 + 7584);
  v10 = *(_DWORD *)(v1 + 8764);
  v11 = *(_DWORD *)(v1 + 9504);
  *(_QWORD *)(v1 + 9656) = ((v11 ^ v10 ^ 0xAA0ADD57 ^ *(_DWORD *)(v1 + 9496)) - (v8 ^ v9 ^ (v6 + v7))) ^ *(_DWORD *)(v1 + 7448);
  v12 = *(_DWORD *)(v1 + 8680) - 1373575266 + *(_DWORD *)(v1 + 9632);
  v13 = *(_DWORD *)(v1 + 8688) + 177508120 + *(_DWORD *)(v1 + 9616);
  v14 = ((v9 ^ 0x1FA3332) + (v5 ^ 0x3C5BCFBF ^ v10 ^ v11) + 1) ^ ((*(_DWORD *)(v1 + 7552) ^ v10 ^ v5) - v8);
  v15 = *(_QWORD *)(v1 + 9704);
  v16 = *(_QWORD *)(v1 + 9680);
  *(_DWORD *)(v1 + 8720) = v14 - 1529102335 - ((2 * v14) & 0x49B78002);
  v17 = -1071645798 - *(_DWORD *)(v1 + 8760);
  v18 = *(_DWORD *)(v1 + 7632);
  v19 = *(_DWORD *)(v1 + 7616) - v18;
  v20 = ((*(_DWORD *)(v1 + 7576) ^ v17 ^ *(_DWORD *)(v1 + 9008)) - v18) ^ *(_DWORD *)(v1 + 7640) ^ ((*(_DWORD *)(v1 + 7592) ^ v17 ^ *(_DWORD *)(v1 + 9008))
                                                                                                  - v19);
  v21 = (*(_DWORD *)(v1 + 9400) - (v18 ^ v17 ^ v19)) ^ *(_DWORD *)(v1 + 7648);
  v22 = -v3;
  v23 = *(_DWORD *)(v1 + 8768);
  v24 = *(_DWORD *)(v1 + 8612);
  v25 = v23 ^ v22 ^ v24 ^ 0xF1378093;
  v26 = *(_DWORD *)(v1 + 7656);
  v27 = v26 ^ v23 ^ v22;
  v28 = v23 ^ 0xF1378093 ^ v24 ^ v26;
  v29 = *(_DWORD *)(v1 + 6036);
  v30 = *(_DWORD *)(v1 + 8616);
  *(_DWORD *)(v1 + 9736) = v28 - (v29 ^ v30 ^ v22);
  v31 = (v25 - v30) ^ *(_DWORD *)(v1 + 6040) ^ (v27 - v29);
  v32 = *(_DWORD *)(v1 + 8880);
  v33 = *(_DWORD *)(v1 + 8872);
  v34 = v33 ^ (1199491225 - v32);
  v35 = *(_DWORD *)(v1 + 9392);
  v36 = v35 ^ v33;
  v37 = v35 ^ v34;
  v38 = *(_DWORD *)(v1 + 6048);
  v39 = *(_DWORD *)(v1 + 8632);
  v40 = *(_DWORD *)(v1 + 9384);
  v41 = (v37 - v40) ^ *(_DWORD *)(v1 + 6044) ^ ((v38 ^ v34) - v39);
  v42 = ((v36 ^ v38) - (v39 ^ v40 ^ (1199491225 - v32))) ^ *(_DWORD *)(v1 + 6060);
  v43 = 1808085550 - ((v32 + 411121510) & 0x17B497C7) - ((1199491225 - v32) & 0x17B497C7) + v4;
  v44 = *(_DWORD *)(v1 + 8744) + 124339609;
  v45 = *(_DWORD *)(v1 + 6072);
  v46 = *(_DWORD *)(v1 + 6068);
  v47 = v45 ^ v46 ^ v44;
  v48 = (*(_DWORD *)(v1 + 8748) ^ 0x51A0D459) + 1;
  v49 = *(_DWORD *)(v1 + 6080) ^ 0x205AF343;
  v50 = -*(_DWORD *)(v1 + 8964);
  *(_DWORD *)(v1 + 9664) = ((v46 ^ v44 ^ v48) - *(_DWORD *)(v1 + 6064)) ^ ((v45 ^ v44 ^ v48) - *(_DWORD *)(v1 + 6084));
  v51 = *(_DWORD *)(v1 + 6136);
  *(_DWORD *)(v1 + 8712) = v47 - (v51 ^ v48);
  v52 = *(_DWORD *)(v1 + 6216);
  v53 = v52 + 125840319;
  v54 = *(_DWORD *)(v1 + 6128) - 1029688031;
  v55 = (*(_DWORD *)(v1 + 6156) - 33174323 - ((2 * *(_DWORD *)(v1 + 6156)) & 0xFC0B999A)) ^ v51 ^ 0xFE05CCCD;
  v56 = *(_DWORD *)(v1 + 6332);
  v57 = ((v56 ^ 0xB38A905F ^ v52 ^ *(_DWORD *)(v1 + 6288)) - (v49 ^ (v55 - 1815059684 - ((2 * v55) & 0x27A0C638)))) ^ v54;
  v58 = (v56 ^ 0xB38A905F) + v54;
  v59 = -*(_DWORD *)(v1 + 8752);
  v60 = v54 ^ 0x698BD115 ^ (v52 + 125840319);
  v61 = v52 + 125840319 + v58;
  v62 = *(_DWORD *)(v1 + 6292);
  v63 = (v61 ^ v59 ^ v12) - v62;
  v64 = *(_DWORD *)(v1 + 6312);
  v65 = ((v61 ^ v12 ^ (v58 - v60)) - (v64 ^ v62 ^ v59)) ^ v60;
  v66 = v63 ^ *(_DWORD *)(v1 + 6320) ^ (((v58 - v60) ^ v59 ^ v12) - v64);
  v67 = v43 ^ v56 ^ 0xB063C78 ^ v53;
  v68 = (v58 - v60) ^ (v61 + v60);
  v69 = v67 + v60;
  v70 = *(_DWORD *)(v1 + 9696);
  v71 = ((v67 + v60) ^ v13 ^ v50) + (v70 ^ 0x1FA3332) + 1;
  *(_DWORD *)(v1 + 6312) = v68 ^ 0x965112E8;
  v72 = v68 ^ 0x9F805C16 ^ v13 ^ v50;
  v73 = *(_DWORD *)(v1 + 6336);
  v74 = v73 ^ v70 ^ (*(_DWORD *)(v1 + 6744) - 33174323 - ((2 * v50) & 0xFC0B999A));
  *(_DWORD *)(v1 + 6136) = v69;
  *(_DWORD *)(v1 + 8672) = *(unsigned __int8 *)(v16 + (HIBYTE(v21) ^ 0xAALL)) ^ HIBYTE(v21);
  v75 = ((v68 ^ 0x9F805C16 ^ v13 ^ v69) - v74) ^ (v58 + (v68 ^ 0x607FA3E9) + 1);
  *(_DWORD *)(v1 + 9504) = v31;
  v76 = *(_QWORD *)(v1 + 9560);
  *(_QWORD *)(v1 + 8688) = v76 + (HIBYTE(v31) ^ 0x26);
  v77 = ((v71 ^ (v72 - v73)) - 1529102335 - ((2 * (v71 ^ (v72 - v73))) & 0x49B78002)) ^ *(_DWORD *)(v1 + 9512);
  *(_DWORD *)(v1 + 8748) = v41;
  v78 = (v41 >> 17) & 0x80 | (v41 >> 25);
  *(_DWORD *)(v1 + 8696) = *(unsigned __int8 *)(v15 + (v78 ^ 0x95)) ^ ((v78 ^ 0xFFFFFF98) + (v78 ^ 0x7E) + 1);
  v79 = (*(_DWORD *)(v1 + 9568) >> 13) & 0xF8 | (*(_DWORD *)(v1 + 9568) >> 21) & 7u;
  v80 = WORD1(v75);
  *(_QWORD *)(v1 + 9496) = v75;
  LODWORD(v78) = v75 >> 18;
  v81 = *(_QWORD *)(v1 + 9536);
  v82 = *(unsigned __int8 *)(v81 + (v79 ^ 0x3B));
  *(_DWORD *)(v1 + 8728) = v42;
  v83 = (v42 >> 9) & 0x80 | (v42 >> 17) & 0x7F;
  *(_DWORD *)(v1 + 9472) = v82 ^ v79;
  *(_DWORD *)(v1 + 8736) = v20;
  v84 = *(unsigned __int8 *)(v16 + (BYTE2(v20) ^ 0xAALL));
  *(_DWORD *)(v1 + 9688) = v57;
  v85 = (v57 >> 13) & 0xF8 | (v57 >> 21) & 7;
  *(_DWORD *)(v1 + 8656) = *(unsigned __int8 *)(v15 + (v83 ^ 0x95)) ^ ((v83 ^ 0x98) + (v83 ^ 0x7E) + 1);
  *(_DWORD *)(v1 + 9464) = v84 ^ HIWORD(v20);
  *(_DWORD *)(v1 + 8680) = *(unsigned __int8 *)(v81 + (v85 ^ 0x3B)) ^ v85;
  *(_DWORD *)(v1 + 9448) = v21;
  v86 = (v21 >> 5) & 0xF8 | ((unsigned __int16)v21 >> 13);
  LODWORD(v79) = (v86 ^ 0x52) + *(unsigned __int8 *)(*(_QWORD *)(v1 + 9648) + (v86 ^ 0x5E));
  LODWORD(v85) = *(unsigned __int8 *)(v16 + (BYTE1(v77) ^ 0xAALL));
  LODWORD(v86) = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9552) + ((-87 * v66) ^ 0x8BLL)) + 94;
  *(_DWORD *)(v1 + 9488) = v77;
  LODWORD(v86) = ((v86 >> 5) | (8 * v86)) ^ 0xFFFFFF98;
  *(_DWORD *)(v1 + 8704) = v85 ^ (v77 >> 8);
  *(_DWORD *)(v1 + 9480) = v80;
  *(_DWORD *)(v1 + 8640) = (v86 >> 5) | (8 * v86);
  *(_DWORD *)(v1 + 8744) = v66;
  LODWORD(v85) = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9544) + (((v66 >> 9) & 0x80 | (v66 >> 17) & 0x7F) ^ 0x25));
  *(_DWORD *)(v1 + 6128) = v80 - 8 * v78 + 124;
  *(_DWORD *)(v1 + 8648) = v79 + 1;
  *(_DWORD *)(v1 + 9520) = v65;
  *(_QWORD *)(v1 + 8664) = v76 + (BYTE1(v65) ^ 0x26u);
  *(_DWORD *)(v1 + 9456) = v85 ^ (32 * v85);
  JUMPOUT(0x10030D094);
}

uint64_t sub_10031D5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((v7 == 50) ^ (v8 - 73)) & 1 | (4
                                                                                          * (((v7 == 50) ^ (v8 - 73)) & 1)) | v8))
                            - 4))();
}

void sub_10031D61C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2920) = a1;
  JUMPOUT(0x1002EC44CLL);
}

void sub_10031D630(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2768) = a1;
  JUMPOUT(0x1002EC44CLL);
}

uint64_t sub_10031D644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (v8 ^ (110 * (v7 == 49))))
                            - ((v8 - 1254252884) & 0xCFFF56BF)
                            - (((v8 - 2078018215) | 0x1190013u) ^ 0xFFFFFFFFFFFFFFFALL)))();
}

uint64_t sub_10031D6A8@<X0>(_BYTE *a1@<X0>, int a2@<W7>, char a3@<W8>)
{
  int v3;
  _BYTE *v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  **(_BYTE **)(v8 + 2800) = a3;
  *(_DWORD *)(v8 + 5332) = 67;
  v12 = *(_QWORD *)(v8 + 8288);
  *(_DWORD *)(v8 + 9688) = 0;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 9648) + ((723 * (a2 ^ (v11 - 3))) ^ 0x8B6u)) + 196;
  a1[3895] = -70;
  a1[3957] = 32;
  a1[3926] = 50;
  a1[3988] = 55;
  a1[4081] = -14;
  a1[4050] = 22;
  v4 = *(_BYTE **)(v8 + 8448);
  v4[140] = -22;
  v4[109] = -127;
  a1[3954] = 81;
  a1[3923] = -110;
  v4[16] = 103;
  a1[4019] = -71;
  v4[78] = -95;
  v4[171] = 65;
  v4[47] = 73;
  a1[3892] = -24;
  v5 = *(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * ((6641 * ((v9 - 1302587220) > 7)) ^ (v7 + a2 + 546)));
  *(_DWORD *)(v8 + 5204) = 109 * (v3 ^ v10);
  *(_DWORD *)(v8 + 9148) = 1796353962;
  *(_QWORD *)(v8 + 5480) = *(_QWORD *)(v8 + 8520);
  *(_QWORD *)(v8 + 5472) = *(_QWORD *)(v8 + 7744);
  *(_QWORD *)(v8 + 5464) = v12;
  *(_QWORD *)(v8 + 8288) = v12;
  return ((uint64_t (*)(void))(v5 - 4))();
}

void sub_10031D6BC(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2912) = a1;
  *(_DWORD *)(v1 + 5332) = 66;
  JUMPOUT(0x10032AFF0);
}

uint64_t sub_10031D6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v9 + 3920) = ((v5 ^ 0x6E) - a5 - 65) ^ v7 ^ 0xE3;
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((287
                                              * ((v5 ^ 0x41D)
                                               + v6
                                               + (((v5 ^ 0x126E) + 1542114857) & 0xA4153FBF ^ 0x96BF8059) > 7)) ^ v5 ^ 0x126E)))(7223);
}

void sub_10031D764()
{
  JUMPOUT(0x10031D7ACLL);
}

uint64_t sub_10031D810()
{
  int v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + 3982) = v2 ^ 0xF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((v1 - 1765825435) > 7)
                                               * ((((v0 - 9522) | 0x1948) - 2059603249) ^ 0x853D17D8)) ^ (v0 - 8350)))
                            - 4))();
}

uint64_t sub_10031D840@<X0>(int a1@<W0>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;

  *(_DWORD *)(v3 - 0x62AA055D109F20F7) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v4 + 1 != a3) * a1) ^ v5)) - ((v5 + 738) | v6) + 1448))();
}

uint64_t sub_10031D880@<X0>(int a1@<W0>, uint64_t a2@<X6>, int a3@<W8>)
{
  return sub_10031D840(a1, a2, a3);
}

uint64_t sub_10031D8F4@<X0>(uint64_t a1@<X3>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  int v4;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int *v18;
  uint64_t v19;

  v18 = (int *)(v7 + 4);
  v19 = a4 + 1;
  v4 = *(_DWORD *)(v11 + 4 * v19);
  if (v19 >= v9)
    v4 = 0;
  *v18 = (*(_DWORD *)(v10 + 4 * v19) + v6 + v4 + v16 - (v13 & (2 * (*(_DWORD *)(v10 + 4 * v19) + v6 + v4)))) ^ v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * ((((int)v19 + 1 < v8) * (((v12 ^ v15) + a2) & a3 ^ v14)) ^ v12 ^ v15))
                            - 4))();
}

uint64_t sub_10031D904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = *(_DWORD *)(v7 + 7216) < 0x40u;
  *(_DWORD *)(v5 + 4) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((v6 - 7698 + ((v6 + 2568) | 0x810)) * v8) | v6)) - 8))();
}

uint64_t sub_10031D954@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * ((47 * (((a2 < 0x20) ^ a3 ^ 0x53) & 1)) ^ a3))
                                         - (a3 + 4370)
                                         + 10534))(*(unsigned int *)(v3 + 9040));
}

uint64_t sub_10031D9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((23 * (a8 >= (((-44 * (v8 ^ 0x24)) ^ 0xAA) & 0xFCu))) ^ v8))
                            - (v8 - 4525)
                            + v9))();
}

uint64_t sub_10031DA04@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a3 - 5771) * (a2 < 0x38)) ^ a3))
                            - ((a3 + 1282021278) & 0xB395F9FD)
                            + 10517))();
}

uint64_t sub_10031DA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a4 + 8 * (((((v8 - 10456) | 0x408) - 1042) * (a8 < 0x34)) ^ v8)))();
}

uint64_t sub_10031DA78@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((a3 + 220) ^ 0x5E2) * (a2 < 0x32)) ^ a3)) - 12))();
}

void sub_10031DABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _DWORD *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  char v22;
  int v23;
  int v24;

  v22 = (v8 + 58) & 0xB7;
  v23 = v16[1928];
  if (a8 == (v22 + 26))
    v23 = v18;
  v16[1928] = v23;
  v24 = v16[2276];
  if (a8 != (v22 + 26))
    v24 = v18;
  v16[2360] = v24;
  v16[2008] = v16[2020];
  v16[2083] = v17;
  v16[2191] = v16[2207];
  v16[2192] = v16[2215];
  v16[1859] = v16[1798];
  v16[1864] = v21;
  v16[2332] = v16[1828];
  v16[1998] = v16[2016];
  v16[2187] = v16[2245];
  v16[2184] = v16[2198];
  v16[2182] = v16[2204];
  v16[2186] = v16[2157];
  v16[2180] = v16[2242];
  v16[1875] = v20;
  v16[2356] = v19;
  v16[1904] = v16[1782];
  v16[2190] = v16[1836];
  v16[2188] = v16[2034];
  v16[1866] = v13;
  v16[1872] = v16[1796];
  v16[2178] = v16[2217];
  v16[2174] = v16[2210];
  v16[1871] = v11;
  v16[1870] = v10;
  v16[2172] = v16[2216];
  v16[2170] = v16[2202];
  v16[2312] = v12;
  v16[1869] = v16[1822];
  v16[2005] = v16[2010];
  v16[1858] = v16[1854];
  v16[2006] = v16[2029];
  v16[2168] = v16[2212];
  v16[2270] = v16[2268];
  v16[2000] = v16[1832];
  v16[2166] = v16[2248];
  v16[1996] = v16[2068];
  v16[2002] = v16[2014];
  v16[2358] = v16[2293];
  v16[2048] = v16[1778];
  v16[2382] = v16[1802];
  v16[1865] = v16[1852];
  v16[2316] = v16[2406];
  v16[2164] = v16[2194];
  v16[2162] = v16[2251];
  v16[1860] = v15;
  v16[2160] = v16[2196];
  v16[2252] = v16[1830];
  v16[1863] = v14;
  v16[2352] = v16[1834];
  v16[2176] = v16[1800];
  v16[2253] = v16[2059];
  v16[2158] = v9;
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_10031DC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (int)((((v8 - 2157) ^ 0x20E6) * (a8 > 0x47)) ^ v8))
                            - (v8 ^ 0x296ALL)))();
}

uint64_t sub_10031DCDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W7>, int a4@<W8>)
{
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2
                                                              + 8
                                                              * (((((a4 - 852) | 0x283) ^ 0x1AA0) * (a3 > 0x4B)) ^ a4))
                                                  - ((491 * (a4 ^ 0x1B8Eu)) ^ 0x3DELL)))(a1, *(unsigned int *)(v4 + 7312));
}

uint64_t sub_10031DD30(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t (*v18)(uint64_t);
  int v19;
  int v20;
  int v21;
  int v22;

  v18 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a4
                                                    + 8 * ((1779 * (a8 != (v8 - v10 + 115))) ^ v8))
                                        - (v8 + 4167)
                                        + 5137);
  *(_DWORD *)(v12 + 8032) = *(_DWORD *)(v12 + 8080);
  *(_DWORD *)(v12 + 8332) = v11;
  *(_DWORD *)(v12 + 7436) = *(_DWORD *)(v12 + 7192);
  *(_DWORD *)(v12 + 7456) = v17;
  *(_DWORD *)(v12 + 9328) = a2;
  *(_DWORD *)(v12 + 7992) = *(_DWORD *)(v12 + 8064);
  *(_DWORD *)(v12 + 7500) = v16;
  *(_DWORD *)(v12 + 7616) = *(_DWORD *)(v12 + 7128);
  *(_DWORD *)(v12 + 7464) = *(_DWORD *)(v12 + 7168);
  *(_DWORD *)(v12 + 7488) = *(_DWORD *)(v12 + 7184);
  *(_DWORD *)(v12 + 7484) = *(_DWORD *)(v12 + 7296);
  *(_DWORD *)(v12 + 9440) = *(_DWORD *)(v12 + 9104);
  *(_DWORD *)(v12 + 7480) = *(_DWORD *)(v12 + 7304);
  *(_DWORD *)(v12 + 9248) = *(_DWORD *)(v12 + 7176);
  *(_DWORD *)(v12 + 7476) = *(_DWORD *)(v12 + 7288);
  *(_DWORD *)(v12 + 8020) = *(_DWORD *)(v12 + 8040);
  *(_DWORD *)(v12 + 7432) = *(_DWORD *)(v12 + 7416);
  *(_DWORD *)(v12 + 8024) = *(_DWORD *)(v12 + 8116);
  *(_DWORD *)(v12 + 8000) = *(_DWORD *)(v12 + 7328);
  *(_DWORD *)(v12 + 7984) = *(_DWORD *)(v12 + 8272);
  *(_DWORD *)(v12 + 8008) = *(_DWORD *)(v12 + 8056);
  *(_DWORD *)(v12 + 0x2000) = *(_DWORD *)(v12 + 7112);
  *(_DWORD *)(v12 + 9528) = v9;
  *(_DWORD *)(v12 + 7460) = *(_DWORD *)(v12 + 7408);
  *(_DWORD *)(v12 + 7440) = *(_DWORD *)(v12 + 7160);
  *(_DWORD *)(v12 + 7452) = *(_DWORD *)(v12 + 9736);
  *(_DWORD *)(v12 + 9408) = *(_DWORD *)(v12 + 7336);
  *(_DWORD *)(v12 + 8548) = *(_DWORD *)(v12 + 6744);
  v19 = *(_DWORD *)(v12 + 7344);
  *(_DWORD *)(v12 + 8760) = v19;
  *(_DWORD *)(v12 + 9256) = v19;
  v20 = *(_DWORD *)(v12 + 8136);
  *(_DWORD *)(v12 + 8752) = v20;
  *(_DWORD *)(v12 + 9480) = v20;
  *(_DWORD *)(v12 + 9424) = v15;
  *(_DWORD *)(v12 + 9664) = v15;
  *(_DWORD *)(v12 + 9632) = *(_DWORD *)(v12 + 9072);
  *(_DWORD *)(v12 + 9080) = v14;
  *(_DWORD *)(v12 + 9656) = v14;
  *(_DWORD *)(v12 + 9616) = v14;
  v21 = *(_DWORD *)(v12 + 7320);
  *(_DWORD *)(v12 + 9008) = v21;
  *(_DWORD *)(v12 + 9156) = v21;
  *(_DWORD *)(v12 + 8704) = v13;
  *(_DWORD *)(v12 + 9064) = v13;
  *(_DWORD *)(v12 + 8280) = *(_DWORD *)(v12 + 6760);
  v22 = *(_DWORD *)(v12 + 8236);
  *(_DWORD *)(v12 + 9012) = v22;
  *(_DWORD *)(v12 + 9240) = v22;
  *(_DWORD *)(v12 + 9592) = 46;
  *(_QWORD *)(v12 + 9680) = *(_QWORD *)(v12 + 5952);
  *(_DWORD *)(v12 + 8764) = *(_DWORD *)(v12 + 8828);
  *(_DWORD *)(v12 + 8768) = *(_DWORD *)(v12 + 8860);
  *(_DWORD *)(v12 + 8748) = *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 8736) = *(_DWORD *)(v12 + 8792);
  *(_DWORD *)(v12 + 8728) = *(_DWORD *)(v12 + 8816);
  *(_DWORD *)(v12 + 8744) = *(_DWORD *)(v12 + 8628);
  *(_DWORD *)(v12 + 8720) = *(_DWORD *)(v12 + 8968);
  *(_DWORD *)(v12 + 8712) = *(_DWORD *)(v12 + 8868);
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v12 + 8840);
  *(_DWORD *)(v12 + 8688) = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 8680) = *(_DWORD *)(v12 + 8808);
  *(_DWORD *)(v12 + 8672) = *(_DWORD *)(v12 + 8848);
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 9432) = *(_DWORD *)(v12 + 9172);
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8656) = *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 8648) = *(_DWORD *)(v12 + 9004);
  *(_DWORD *)(v12 + 8640) = *(_DWORD *)(v12 + 8784);
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 9600) = *(_QWORD *)(v12 + 6088);
  *(_QWORD *)(v12 + 9608) = *(_QWORD *)(v12 + 6728);
  *(_DWORD *)(v12 + 9056) = *(_DWORD *)(v12 + 9136);
  *(_DWORD *)(v12 + 9224) = *(_DWORD *)(v12 + 9400);
  *(_DWORD *)(v12 + 8544) = *(_DWORD *)(v12 + 9392);
  return v18(v14);
}

uint64_t sub_10031DF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((a8 < (v8 - 59)) * ((v8 - 1399) ^ 0x1FFF)) ^ v8))
                            - 8))();
}

uint64_t sub_10031DFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  char v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((58 * (a8 < (((v8 ^ 0x9B) * v9) ^ 0xBu))) ^ v8))
                            - 12))();
}

uint64_t sub_10031DFF4@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (a3 ^ 0xEE | (2 * (a2 < (((10 * (a3 ^ 0x3E)) ^ 0x66) & 0xFEu)))))
                            - (((a3 ^ 0xEEu) + 8061) ^ 0x2462)))();
}

uint64_t sub_10031E040@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((19 * (a2 >= (((a3 + 3) & 0xBF) - 35))) ^ a3)))();
}

uint64_t sub_10031E078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t (*v13)(uint64_t, _QWORD);
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  *(_DWORD *)(v6 + 7776) = 0;
  *(_DWORD *)(v6 + 9576) = 0;
  *(_DWORD *)(v6 + 9488) = 0;
  *(_DWORD *)(v6 + 9472) = 0;
  v12 = a5 - 7964;
  v13 = *(uint64_t (**)(uint64_t, _QWORD))(a2
                                                  + 8
                                                  * (int)(((((v12 + 1210833465) & 0xB7D43CFB) - 2263) * (a4 == 2)) ^ v12));
  *(_DWORD *)(v6 + 8032) = *(_DWORD *)(v6 + 8080);
  *(_DWORD *)(v6 + 8332) = v7;
  *(_DWORD *)(v6 + 7436) = *(_DWORD *)(v6 + 7192);
  *(_DWORD *)(v6 + 7456) = v11;
  *(_DWORD *)(v6 + 9328) = *(_DWORD *)(v6 + 7312);
  *(_DWORD *)(v6 + 7992) = *(_DWORD *)(v6 + 8064);
  *(_DWORD *)(v6 + 7500) = v10;
  *(_DWORD *)(v6 + 9424) = v9;
  *(_DWORD *)(v6 + 7616) = v5;
  *(_DWORD *)(v6 + 7464) = *(_DWORD *)(v6 + 7168);
  *(_DWORD *)(v6 + 7488) = *(_DWORD *)(v6 + 7184);
  *(_DWORD *)(v6 + 7484) = *(_DWORD *)(v6 + 7296);
  *(_DWORD *)(v6 + 9440) = *(_DWORD *)(v6 + 9104);
  *(_DWORD *)(v6 + 7480) = *(_DWORD *)(v6 + 7304);
  *(_DWORD *)(v6 + 9248) = *(_DWORD *)(v6 + 7176);
  *(_DWORD *)(v6 + 7476) = *(_DWORD *)(v6 + 7288);
  *(_DWORD *)(v6 + 8020) = *(_DWORD *)(v6 + 8040);
  *(_DWORD *)(v6 + 7432) = *(_DWORD *)(v6 + 7416);
  *(_DWORD *)(v6 + 8024) = *(_DWORD *)(v6 + 8116);
  *(_DWORD *)(v6 + 8000) = *(_DWORD *)(v6 + 7328);
  *(_DWORD *)(v6 + 7984) = *(_DWORD *)(v6 + 8272);
  *(_DWORD *)(v6 + 8008) = *(_DWORD *)(v6 + 8056);
  *(_DWORD *)(v6 + 0x2000) = *(_DWORD *)(v6 + 7112);
  *(_DWORD *)(v6 + 9528) = *(_DWORD *)(v6 + 7208);
  *(_DWORD *)(v6 + 7460) = *(_DWORD *)(v6 + 7408);
  *(_DWORD *)(v6 + 7440) = *(_DWORD *)(v6 + 7160);
  *(_DWORD *)(v6 + 7452) = *(_DWORD *)(v6 + 9736);
  *(_DWORD *)(v6 + 9408) = *(_DWORD *)(v6 + 7336);
  *(_DWORD *)(v6 + 9128) = v8;
  *(_DWORD *)(v6 + 8548) = *(_DWORD *)(v6 + 6744);
  v14 = *(_DWORD *)(v6 + 7344);
  *(_DWORD *)(v6 + 8760) = v14;
  *(_DWORD *)(v6 + 9256) = v14;
  v15 = *(_DWORD *)(v6 + 8136);
  *(_DWORD *)(v6 + 8752) = v15;
  *(_DWORD *)(v6 + 9480) = v15;
  *(_DWORD *)(v6 + 8456) = a3;
  v16 = *(_DWORD *)(v6 + 9072);
  *(_DWORD *)(v6 + 9080) = v16;
  *(_DWORD *)(v6 + 9632) = v16;
  v17 = *(_DWORD *)(v6 + 7320);
  *(_DWORD *)(v6 + 9008) = v17;
  *(_DWORD *)(v6 + 9156) = v17;
  v18 = *(_DWORD *)(v6 + 7200);
  *(_DWORD *)(v6 + 8704) = v18;
  *(_DWORD *)(v6 + 9064) = v18;
  *(_DWORD *)(v6 + 8280) = *(_DWORD *)(v6 + 6760);
  *(_QWORD *)(v6 + 9680) = *(_QWORD *)(v6 + 4392);
  *(_DWORD *)(v6 + 8764) = *(_DWORD *)(v6 + 8828);
  *(_DWORD *)(v6 + 8768) = *(_DWORD *)(v6 + 8860);
  *(_DWORD *)(v6 + 8748) = *(_DWORD *)(v6 + 8980);
  *(_DWORD *)(v6 + 8736) = *(_DWORD *)(v6 + 8792);
  *(_DWORD *)(v6 + 8728) = *(_DWORD *)(v6 + 8816);
  *(_DWORD *)(v6 + 8744) = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8720) = *(_DWORD *)(v6 + 8968);
  *(_DWORD *)(v6 + 8712) = *(_DWORD *)(v6 + 8868);
  *(_DWORD *)(v6 + 8696) = *(_DWORD *)(v6 + 8840);
  *(_DWORD *)(v6 + 8688) = *(_DWORD *)(v6 + 8864);
  *(_DWORD *)(v6 + 8680) = *(_DWORD *)(v6 + 8808);
  *(_DWORD *)(v6 + 8672) = *(_DWORD *)(v6 + 8848);
  *(_DWORD *)(v6 + 8664) = *(_DWORD *)(v6 + 8992);
  *(_DWORD *)(v6 + 9432) = *(_DWORD *)(v6 + 9172);
  *(_DWORD *)(v6 + 9264) = *(_DWORD *)(v6 + 9624);
  *(_DWORD *)(v6 + 8656) = *(_DWORD *)(v6 + 8776);
  *(_DWORD *)(v6 + 8648) = *(_DWORD *)(v6 + 9004);
  *(_DWORD *)(v6 + 8640) = *(_DWORD *)(v6 + 8784);
  *(_DWORD *)(v6 + 9012) = *(_DWORD *)(v6 + 8236);
  *(_DWORD *)(v6 + 8632) = *(_DWORD *)(v6 + 8800);
  *(_DWORD *)(v6 + 9116) = *(_DWORD *)(v6 + 9448);
  *(_DWORD *)(v6 + 9656) = *(_DWORD *)(v6 + 9272);
  *(_DWORD *)(v6 + 7976) = *(_DWORD *)(v6 + 8212);
  *(_DWORD *)(v6 + 9056) = *(_DWORD *)(v6 + 9136);
  *(_DWORD *)(v6 + 9224) = *(_DWORD *)(v6 + 9400);
  *(_DWORD *)(v6 + 9688) = 1;
  *(_DWORD *)(v6 + 7792) = 1;
  *(_DWORD *)(v6 + 9504) = 1;
  *(_DWORD *)(v6 + 7784) = 1;
  *(_DWORD *)(v6 + 9496) = 1;
  *(_DWORD *)(v6 + 9456) = 1;
  *(_DWORD *)(v6 + 9464) = 1;
  *(_DWORD *)(v6 + 8544) = *(_DWORD *)(v6 + 9392);
  return v13(a1, (v12 + 1210833465) & 0xB7D43CFB);
}

uint64_t sub_10031E314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a4
                                                     + 8
                                                     * ((((v8 - 6388) ^ 0x1CC8 ^ ((v8 - 6388) | 0x2048) ^ 0x3C88)
                                                       * (a8 < 0x44)) ^ v8))
                                         - 8))(*(unsigned int *)(v9 + 7208));
}

uint64_t sub_10031E35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((((v8 - 10280) | 0x504) - 1278) * (a8 < 0x42)) ^ v8)) - 4))();
}

void sub_10031E3A0(int a1@<W0>, int a2@<W6>, int a3@<W7>, char a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;

  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 8332) = v9;
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 7436) = *(_DWORD *)(v10 + 7192);
  *(_DWORD *)(v10 + 7456) = v14;
  *(_DWORD *)(v10 + 9328) = v8;
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 7500) = v13;
  *(_DWORD *)(v10 + 9424) = v12;
  *(_DWORD *)(v10 + 8760) = *(_DWORD *)(v10 + 7344);
  *(_DWORD *)(v10 + 8752) = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 7464) = *(_DWORD *)(v10 + 7168);
  *(_DWORD *)(v10 + 7488) = *(_DWORD *)(v10 + 7184);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 7484) = *(_DWORD *)(v10 + 7296);
  *(_DWORD *)(v10 + 9440) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 7480) = *(_DWORD *)(v10 + 7304);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 9248) = *(_DWORD *)(v10 + 7176);
  *(_DWORD *)(v10 + 7476) = *(_DWORD *)(v10 + 7288);
  *(_DWORD *)(v10 + 8020) = *(_DWORD *)(v10 + 8040);
  *(_DWORD *)(v10 + 7432) = *(_DWORD *)(v10 + 7416);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9080) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 8000) = v6;
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 0x2000) = *(_DWORD *)(v10 + 7112);
  *(_DWORD *)(v10 + 9528) = a1;
  *(_DWORD *)(v10 + 7460) = *(_DWORD *)(v10 + 7408);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 7440) = *(_DWORD *)(v10 + 7160);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 7616) = v11;
  *(_DWORD *)(v10 + 9008) = v7;
  *(_DWORD *)(v10 + 7452) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9408) = v5;
  *(_DWORD *)(v10 + 8704) = a2;
  *(_DWORD *)(v10 + 9012) = *(_DWORD *)(v10 + 8236);
  *(_DWORD *)(v10 + 8632) = v4;
  if (a3 == ((a4 + 90) & 0x97 ^ 0x56))
    v15 = 87;
  else
    v15 = 86;
  *(_QWORD *)(v10 + 9680) = *(_QWORD *)(v10 + 7880);
  v16 = *(_QWORD *)(v10 + 3184);
  v17 = *(_DWORD *)(v10 + 8312);
  v18 = *(_QWORD *)(v10 + 9680);
  *(_QWORD *)(v10 + 8160) = v18;
  *(_QWORD *)(v10 + 9600) = v18;
  *(_QWORD *)(v10 + 8168) = v16;
  *(_QWORD *)(v10 + 9608) = v16;
  *(_DWORD *)(v10 + 8828) = *(_DWORD *)(v10 + 8764);
  *(_DWORD *)(v10 + 8860) = *(_DWORD *)(v10 + 8768);
  *(_DWORD *)(v10 + 9656) = *(_DWORD *)(v10 + 9272);
  *(_DWORD *)(v10 + 8980) = *(_DWORD *)(v10 + 8748);
  *(_DWORD *)(v10 + 8792) = *(_DWORD *)(v10 + 8736);
  *(_DWORD *)(v10 + 8816) = *(_DWORD *)(v10 + 8728);
  *(_DWORD *)(v10 + 8628) = *(_DWORD *)(v10 + 8744);
  *(_DWORD *)(v10 + 8968) = *(_DWORD *)(v10 + 8720);
  *(_DWORD *)(v10 + 9256) = *(_DWORD *)(v10 + 8760);
  *(_DWORD *)(v10 + 9480) = *(_DWORD *)(v10 + 8752);
  *(_DWORD *)(v10 + 8868) = *(_DWORD *)(v10 + 8712);
  *(_DWORD *)(v10 + 8840) = *(_DWORD *)(v10 + 8696);
  *(_DWORD *)(v10 + 8152) = v17;
  *(_DWORD *)(v10 + 9664) = v17;
  *(_DWORD *)(v10 + 8864) = *(_DWORD *)(v10 + 8688);
  *(_DWORD *)(v10 + 8808) = *(_DWORD *)(v10 + 8680);
  *(_DWORD *)(v10 + 9056) = *(_DWORD *)(v10 + 9136);
  *(_DWORD *)(v10 + 8848) = *(_DWORD *)(v10 + 8672);
  *(_DWORD *)(v10 + 9632) = *(_DWORD *)(v10 + 9080);
  *(_DWORD *)(v10 + 8992) = *(_DWORD *)(v10 + 8664);
  *(_DWORD *)(v10 + 9172) = *(_DWORD *)(v10 + 9432);
  *(_DWORD *)(v10 + 9616) = v11;
  *(_DWORD *)(v10 + 8548) = v11;
  *(_DWORD *)(v10 + 9624) = *(_DWORD *)(v10 + 9264);
  *(_DWORD *)(v10 + 8776) = *(_DWORD *)(v10 + 8656);
  *(_DWORD *)(v10 + 9004) = *(_DWORD *)(v10 + 8648);
  *(_DWORD *)(v10 + 8784) = *(_DWORD *)(v10 + 8640);
  *(_DWORD *)(v10 + 9156) = *(_DWORD *)(v10 + 9008);
  *(_DWORD *)(v10 + 9224) = *(_DWORD *)(v10 + 9400);
  *(_DWORD *)(v10 + 9064) = *(_DWORD *)(v10 + 8704);
  *(_DWORD *)(v10 + 8280) = v15;
  *(_DWORD *)(v10 + 8544) = *(_DWORD *)(v10 + 9392);
  *(_DWORD *)(v10 + 9240) = *(_DWORD *)(v10 + 9012);
  *(_DWORD *)(v10 + 8800) = *(_DWORD *)(v10 + 8632);
  *(_DWORD *)(v10 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_10031E55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8 * (int)((((v8 + 1324991071) & 0xB106367F ^ 0x2044) * (a8 < 0x28)) ^ v8))
                            - 12))();
}

uint64_t sub_10031E5A0@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((155 * (a2 > 0x23)) ^ a3)) - 12))();
}

uint64_t sub_10031E5C4@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((3 * ((a3 - 440489336) & 0x1A413766 ^ 0x3D1) - 989) ^ (((a3 - 440489336) & 0x1A413766)
                                                                                        - 288))
                                * (a2 < 0x26)) ^ (a3 - 440489336) & 0x1A413766)))();
}

void sub_10031E618(int a1@<W5>, int a2@<W6>, int a3@<W7>, char a4@<W8>)
{
  int v4;
  int v5;
  char v6;
  int v7;
  int v8;
  _DWORD *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v16;

  if (a3 != (a4 - v6 - 3))
    a2 = v11;
  v9[1866] = a2;
  v16 = v9[2202];
  if (a3 == (a4 - v6 - 3))
    v16 = v11;
  v9[2170] = v16;
  v9[2008] = v9[2020];
  v9[2083] = v10;
  v9[2191] = v9[2207];
  v9[2192] = v9[2215];
  v9[1859] = v5;
  v9[1864] = v14;
  v9[2332] = v9[1828];
  v9[1998] = v9[2016];
  v9[2187] = v9[2245];
  v9[2184] = v9[2198];
  v9[2182] = v9[2204];
  v9[2186] = v9[2157];
  v9[2180] = v9[2242];
  v9[1875] = v13;
  v9[2356] = v12;
  v9[1904] = v8;
  v9[2190] = v9[1836];
  v9[2188] = v9[2034];
  v9[1872] = v7;
  v9[2178] = v9[2217];
  v9[2174] = v9[2210];
  v9[1871] = v9[1824];
  v9[2360] = v9[2276];
  v9[1870] = v9[1826];
  v9[2172] = v9[2216];
  v9[2312] = a1;
  v9[1869] = v9[1822];
  v9[2005] = v9[2010];
  v9[1858] = v9[1854];
  v9[2006] = v9[2029];
  v9[2168] = v9[2212];
  v9[2270] = v9[2268];
  v9[2000] = v9[1832];
  v9[2166] = v9[2248];
  v9[1996] = v9[2068];
  v9[2002] = v9[2014];
  v9[2358] = v9[2293];
  v9[2048] = v9[1778];
  v9[2382] = v9[1802];
  v9[1865] = v9[1852];
  v9[2316] = v9[2406];
  v9[2164] = v9[2194];
  v9[2162] = v9[2251];
  v9[1860] = v9[1790];
  v9[2160] = v9[2196];
  v9[2252] = v9[1830];
  v9[1863] = v9[2434];
  v9[2352] = v9[1834];
  v9[2176] = v9[1800];
  v9[2253] = v4;
  v9[2158] = v9[2200];
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_10031E7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(void);

  v11 = (uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v8 ^ (4 * (a8 < (((v8 ^ 9) - 108) ^ 0xCu))))) - 12);
  *(_DWORD *)(v9 + 8608) = v10;
  return v11();
}

uint64_t sub_10031E804@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t (*v17)(uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)(v11 + 9416) = (a6 + 86312804) | 0x80180001;
  v17 = *(uint64_t (**)(uint64_t))(a2 + 8 * ((13 * (a5 == (((a6 + 100) | 1) ^ 0x5E))) | a6));
  *(_DWORD *)(v11 + 8032) = *(_DWORD *)(v11 + 8080);
  *(_DWORD *)(v11 + 8332) = v9;
  *(_DWORD *)(v11 + 7436) = *(_DWORD *)(v11 + 7192);
  *(_DWORD *)(v11 + 7456) = v16;
  *(_DWORD *)(v11 + 9328) = a1;
  *(_DWORD *)(v11 + 7992) = *(_DWORD *)(v11 + 8064);
  *(_DWORD *)(v11 + 8548) = *(_DWORD *)(v11 + 6744);
  *(_DWORD *)(v11 + 7500) = v15;
  *(_DWORD *)(v11 + 7616) = *(_DWORD *)(v11 + 7128);
  *(_DWORD *)(v11 + 9480) = *(_DWORD *)(v11 + 8136);
  *(_DWORD *)(v11 + 7464) = a3;
  *(_DWORD *)(v11 + 7488) = *(_DWORD *)(v11 + 7184);
  *(_DWORD *)(v11 + 7484) = *(_DWORD *)(v11 + 7296);
  *(_DWORD *)(v11 + 8456) = v10;
  *(_DWORD *)(v11 + 7480) = *(_DWORD *)(v11 + 7304);
  *(_DWORD *)(v11 + 9248) = v7;
  *(_DWORD *)(v11 + 7476) = *(_DWORD *)(v11 + 7288);
  *(_DWORD *)(v11 + 9056) = *(_DWORD *)(v11 + 9136);
  *(_DWORD *)(v11 + 8020) = *(_DWORD *)(v11 + 8040);
  *(_DWORD *)(v11 + 7432) = *(_DWORD *)(v11 + 7416);
  *(_DWORD *)(v11 + 8024) = *(_DWORD *)(v11 + 8116);
  *(_DWORD *)(v11 + 8000) = *(_DWORD *)(v11 + 7328);
  *(_DWORD *)(v11 + 7984) = *(_DWORD *)(v11 + 8272);
  *(_DWORD *)(v11 + 8008) = *(_DWORD *)(v11 + 8056);
  *(_DWORD *)(v11 + 0x2000) = *(_DWORD *)(v11 + 7112);
  *(_DWORD *)(v11 + 7460) = *(_DWORD *)(v11 + 7408);
  *(_DWORD *)(v11 + 7440) = *(_DWORD *)(v11 + 7160);
  *(_DWORD *)(v11 + 9156) = *(_DWORD *)(v11 + 7320);
  *(_DWORD *)(v11 + 7452) = a4;
  *(_DWORD *)(v11 + 9224) = *(_DWORD *)(v11 + 9400);
  *(_DWORD *)(v11 + 9064) = v12;
  *(_DWORD *)(v11 + 8280) = *(_DWORD *)(v11 + 6760);
  *(_DWORD *)(v11 + 8544) = *(_DWORD *)(v11 + 9392);
  v18 = *(_DWORD *)(v11 + 7344);
  *(_DWORD *)(v11 + 8504) = v18;
  *(_DWORD *)(v11 + 9256) = v18;
  *(_DWORD *)(v11 + 9424) = v14;
  *(_DWORD *)(v11 + 9664) = v14;
  *(_DWORD *)(v11 + 8496) = v6;
  *(_DWORD *)(v11 + 9528) = v6;
  v19 = *(_DWORD *)(v11 + 7336);
  *(_DWORD *)(v11 + 8552) = v19;
  *(_DWORD *)(v11 + 9408) = v19;
  *(_DWORD *)(v11 + 9240) = *(_DWORD *)(v11 + 8236);
  *(_DWORD *)(v11 + 8440) = 96;
  *(_DWORD *)(v11 + 9592) = 45;
  *(_QWORD *)(v11 + 8408) = *(_QWORD *)(v11 + 8432);
  *(_QWORD *)(v11 + 8400) = *(_QWORD *)(v11 + 8416);
  *(_QWORD *)(v11 + 8392) = *(_QWORD *)(v11 + 8536);
  *(_QWORD *)(v11 + 8384) = *(_QWORD *)(v11 + 8488);
  *(_QWORD *)(v11 + 8376) = *(_QWORD *)(v11 + 8472);
  *(_QWORD *)(v11 + 8944) = *(_QWORD *)(v11 + 9568);
  *(_QWORD *)(v11 + 8576) = *(_QWORD *)(v11 + 8888);
  *(_QWORD *)(v11 + 8952) = *(_QWORD *)(v11 + 9200);
  *(_QWORD *)(v11 + 8936) = *(_QWORD *)(v11 + 8880);
  v20 = *(_QWORD *)(v11 + 6728);
  *(_DWORD *)(v11 + 9128) = *(_DWORD *)(v11 + 8312);
  *(_DWORD *)(v11 + 9116) = *(_DWORD *)(v11 + 9448);
  *(_DWORD *)(v11 + 8832) = *(_DWORD *)(v11 + 9384);
  *(_DWORD *)(v11 + 9152) = *(_DWORD *)(v11 + 8964);
  *(_DWORD *)(v11 + 8368) = *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 8520) = *(_DWORD *)(v11 + 8464);
  *(_DWORD *)(v11 + 8356) = *(_DWORD *)(v11 + 8532);
  *(_DWORD *)(v11 + 8360) = *(_DWORD *)(v11 + 8424);
  *(_DWORD *)(v11 + 8912) = *(_DWORD *)(v11 + 8872);
  *(_DWORD *)(v11 + 8512) = *(_DWORD *)(v11 + 8480);
  *(_DWORD *)(v11 + 8920) = *(_DWORD *)(v11 + 9160);
  *(_DWORD *)(v11 + 9264) = *(_DWORD *)(v11 + 9624);
  *(_DWORD *)(v11 + 8904) = *(_DWORD *)(v11 + 8616);
  *(_DWORD *)(v11 + 8900) = *(_DWORD *)(v11 + 9096);
  *(_DWORD *)(v11 + 9184) = *(_DWORD *)(v11 + 9584);
  *(_DWORD *)(v11 + 8572) = *(_DWORD *)(v11 + 8984);
  *(_DWORD *)(v11 + 8352) = v8;
  *(_DWORD *)(v11 + 8932) = *(_DWORD *)(v11 + 8612);
  *(_QWORD *)(v11 + 9600) = *(_QWORD *)(v11 + 6088);
  *(_QWORD *)(v11 + 9608) = v20;
  *(_DWORD *)(v11 + 9656) = v13;
  *(_DWORD *)(v11 + 9616) = v13;
  *(_DWORD *)(v11 + 9440) = *(_DWORD *)(v11 + 9104);
  *(_DWORD *)(v11 + 9632) = *(_DWORD *)(v11 + 9072);
  return v17(v13);
}

uint64_t sub_10031EAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v8 + 1092) ^ (28 * (a8 < 0x18))))
                            - (((v8 - 9386) | 0x2800u) ^ 0x28A5)))();
}

uint64_t sub_10031EADC@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((a3 - 1547105509) & 0x5C36EDFF ^ 0x21F5) * (a2 > 0x13)) ^ a3)))();
}

uint64_t sub_10031EB20@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)(((((a3 + 706168094) & 0xD5E89FF2) - 1507) * (a2 < 0x16)) ^ (a3 - 3297)))
                            - 8))();
}

void sub_10031EB5C(char a1@<W4>, int a2@<W6>, int a3@<W7>, char a4@<W8>)
{
  int v4;
  _DWORD *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  char v11;
  int v12;
  int v13;

  v11 = (a4 - 108) ^ (a1 + 58);
  v12 = v5[1798];
  if (a3 != (v11 - 2))
    v12 = v7;
  v5[1859] = v12;
  v13 = v5[1790];
  if (a3 == (v11 - 2))
    v13 = v7;
  v5[1860] = v13;
  v5[2008] = v5[2020];
  v5[2083] = v6;
  v5[2191] = v5[2207];
  v5[2192] = v5[2215];
  v5[1864] = v10;
  v5[2332] = v5[1828];
  v5[1998] = v5[2016];
  v5[2187] = v5[2245];
  v5[2184] = v5[2198];
  v5[2182] = v5[2204];
  v5[2186] = v5[2157];
  v5[2180] = v5[2242];
  v5[1875] = v9;
  v5[2356] = v8;
  v5[1904] = v4;
  v5[2190] = v5[1836];
  v5[2188] = v5[2034];
  v5[1866] = v5[1792];
  v5[1872] = v5[1796];
  v5[2178] = v5[2217];
  v5[2174] = v5[2210];
  v5[1871] = v5[1824];
  v5[2360] = v5[2276];
  v5[1870] = v5[1826];
  v5[2172] = v5[2216];
  v5[2170] = v5[2202];
  v5[2312] = a2;
  v5[1869] = v5[1822];
  v5[2005] = v5[2010];
  v5[1858] = v5[1854];
  v5[2006] = v5[2029];
  v5[2168] = v5[2212];
  v5[2270] = v5[2268];
  v5[2000] = v5[1832];
  v5[2166] = v5[2248];
  v5[1996] = v5[2068];
  v5[2002] = v5[2014];
  v5[2358] = v5[2293];
  v5[2048] = v5[1778];
  v5[2382] = v5[1802];
  v5[1865] = v5[1852];
  v5[2316] = v5[2406];
  v5[2164] = v5[2194];
  v5[2162] = v5[2251];
  v5[2160] = v5[2196];
  v5[2252] = v5[1830];
  v5[1863] = v5[2434];
  v5[2352] = v5[1834];
  v5[2176] = v5[1800];
  v5[2253] = v5[2059];
  v5[2158] = v5[2200];
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_10031ED20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W7>, int a4@<W8>)
{
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(a2
                                                                      + 8
                                                                      * (int)(((((a4 + 1293923110) & 0xB2E03D35) - 1299)
                                                                             * (a3 < 0x46)) ^ a4))
                                                          - 8))(a1, *(unsigned int *)(v4 + 7336), *(unsigned int *)(v4 + 7328));
}

uint64_t sub_10031ED64@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;

  *(_QWORD *)(v11 + 9688) = *(_QWORD *)(a4
                                      + 8
                                      * (((a8 == (((((_BYTE)a9 + 22) & 0x37) + 46) & 0x7F))
                                        * (v9 + ((a9 - 4004) ^ (a5 + 1307)) + 2019)) ^ (a9 - 4004)))
                          - 12;
  *(_QWORD *)(v11 + 9680) = *(_QWORD *)(v11 + 7512);
  *(_DWORD *)(v11 + 8032) = *(_DWORD *)(v11 + 8080);
  *(_DWORD *)(v11 + 8332) = v10;
  *(_DWORD *)(v11 + 8764) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8768) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 7436) = *(_DWORD *)(v11 + 7192);
  *(_DWORD *)(v11 + 7456) = v15;
  *(_DWORD *)(v11 + 9328) = *(_DWORD *)(v11 + 7312);
  *(_DWORD *)(v11 + 7992) = *(_DWORD *)(v11 + 8064);
  *(_DWORD *)(v11 + 8748) = *(_DWORD *)(v11 + 8980);
  *(_DWORD *)(v11 + 8736) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 8728) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 8720) = *(_DWORD *)(v11 + 8968);
  *(_DWORD *)(v11 + 7500) = v14;
  *(_DWORD *)(v11 + 9424) = v13;
  *(_DWORD *)(v11 + 7616) = *(_DWORD *)(v11 + 7128);
  *(_DWORD *)(v11 + 8760) = v12;
  *(_DWORD *)(v11 + 8752) = *(_DWORD *)(v11 + 8136);
  *(_DWORD *)(v11 + 7464) = *(_DWORD *)(v11 + 7168);
  *(_DWORD *)(v11 + 7488) = *(_DWORD *)(v11 + 7184);
  *(_DWORD *)(v11 + 8712) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 7484) = *(_DWORD *)(v11 + 7296);
  *(_DWORD *)(v11 + 9440) = *(_DWORD *)(v11 + 9104);
  *(_DWORD *)(v11 + 7480) = *(_DWORD *)(v11 + 7304);
  *(_DWORD *)(v11 + 8688) = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 9248) = *(_DWORD *)(v11 + 7176);
  *(_DWORD *)(v11 + 7476) = *(_DWORD *)(v11 + 7288);
  *(_DWORD *)(v11 + 8020) = *(_DWORD *)(v11 + 8040);
  *(_DWORD *)(v11 + 7432) = *(_DWORD *)(v11 + 7416);
  *(_DWORD *)(v11 + 8024) = *(_DWORD *)(v11 + 8116);
  *(_DWORD *)(v11 + 8672) = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 9080) = *(_DWORD *)(v11 + 9072);
  *(_DWORD *)(v11 + 8000) = a3;
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 7984) = *(_DWORD *)(v11 + 8272);
  *(_DWORD *)(v11 + 8008) = *(_DWORD *)(v11 + 8056);
  *(_DWORD *)(v11 + 9432) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 0x2000) = *(_DWORD *)(v11 + 7112);
  *(_DWORD *)(v11 + 9528) = a1;
  *(_DWORD *)(v11 + 7460) = *(_DWORD *)(v11 + 7408);
  *(_DWORD *)(v11 + 9264) = *(_DWORD *)(v11 + 9624);
  *(_DWORD *)(v11 + 8656) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 8648) = *(_DWORD *)(v11 + 9004);
  *(_DWORD *)(v11 + 7440) = *(_DWORD *)(v11 + 7160);
  *(_DWORD *)(v11 + 8640) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 9008) = a6;
  *(_DWORD *)(v11 + 7452) = *(_DWORD *)(v11 + 9736);
  *(_DWORD *)(v11 + 9408) = a2;
  *(_DWORD *)(v11 + 8704) = a7;
  *(_DWORD *)(v11 + 9012) = *(_DWORD *)(v11 + 8236);
  *(_DWORD *)(v11 + 8632) = *(_DWORD *)(v11 + 8800);
  return (*(uint64_t (**)(void))(v11 + 9688))();
}

void sub_10031EF68(int a1, int a2, int a3, int a4, int a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  *(_DWORD *)(v12 + 8032) = *(_DWORD *)(v12 + 8080);
  *(_DWORD *)(v12 + 8332) = *(_DWORD *)(v12 + 8260);
  *(_DWORD *)(v12 + 8764) = *(_DWORD *)(v12 + 8828);
  *(_DWORD *)(v12 + 8768) = *(_DWORD *)(v12 + 8860);
  *(_DWORD *)(v12 + 7436) = v11;
  *(_DWORD *)(v12 + 7456) = v9;
  *(_DWORD *)(v12 + 9328) = v10;
  *(_DWORD *)(v12 + 7992) = *(_DWORD *)(v12 + 8064);
  *(_DWORD *)(v12 + 8748) = *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 8736) = *(_DWORD *)(v12 + 8792);
  *(_DWORD *)(v12 + 8728) = *(_DWORD *)(v12 + 8816);
  *(_DWORD *)(v12 + 8720) = *(_DWORD *)(v12 + 8968);
  *(_DWORD *)(v12 + 7500) = v8;
  *(_DWORD *)(v12 + 9424) = v19;
  *(_DWORD *)(v12 + 7616) = v18;
  *(_DWORD *)(v12 + 8760) = *(_DWORD *)(v12 + 7344);
  *(_DWORD *)(v12 + 8752) = *(_DWORD *)(v12 + 8136);
  *(_DWORD *)(v12 + 7464) = v15;
  *(_DWORD *)(v12 + 7488) = a4;
  *(_DWORD *)(v12 + 8712) = *(_DWORD *)(v12 + 8868);
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v12 + 8840);
  *(_DWORD *)(v12 + 7484) = v13;
  *(_DWORD *)(v12 + 9440) = *(_DWORD *)(v12 + 9104);
  *(_DWORD *)(v12 + 7480) = a5;
  *(_DWORD *)(v12 + 8688) = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 8680) = *(_DWORD *)(v12 + 8808);
  *(_DWORD *)(v12 + 9248) = v14;
  *(_DWORD *)(v12 + 7476) = v17;
  *(_DWORD *)(v12 + 8020) = *(_DWORD *)(v12 + 8040);
  *(_DWORD *)(v12 + 7432) = *(_DWORD *)(v12 + 7416);
  *(_DWORD *)(v12 + 8024) = *(_DWORD *)(v12 + 8116);
  *(_DWORD *)(v12 + 8672) = *(_DWORD *)(v12 + 8848);
  *(_DWORD *)(v12 + 9080) = *(_DWORD *)(v12 + 9072);
  *(_DWORD *)(v12 + 8000) = a3;
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 7984) = *(_DWORD *)(v12 + 8272);
  *(_DWORD *)(v12 + 8008) = *(_DWORD *)(v12 + 8056);
  *(_DWORD *)(v12 + 9432) = *(_DWORD *)(v12 + 9172);
  *(_DWORD *)(v12 + 0x2000) = *(_DWORD *)(v12 + 7112);
  *(_DWORD *)(v12 + 9528) = a1;
  *(_DWORD *)(v12 + 7460) = *(_DWORD *)(v12 + 7408);
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8656) = *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 8648) = *(_DWORD *)(v12 + 9004);
  *(_DWORD *)(v12 + 7440) = v6;
  *(_DWORD *)(v12 + 8640) = *(_DWORD *)(v12 + 8784);
  *(_DWORD *)(v12 + 8744) = v7;
  *(_DWORD *)(v12 + 9008) = a6;
  *(_DWORD *)(v12 + 7452) = v16;
  *(_DWORD *)(v12 + 9408) = a2;
  *(_DWORD *)(v12 + 8704) = v21;
  *(_DWORD *)(v12 + 9012) = v20;
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 9680) = *(_QWORD *)(v12 + 7512);
  v22 = *(_QWORD *)(v12 + 3896);
  v23 = *(_DWORD *)(v12 + 8176);
  v24 = *(_QWORD *)(v12 + 9680);
  *(_QWORD *)(v12 + 8160) = v24;
  *(_QWORD *)(v12 + 9600) = v24;
  *(_QWORD *)(v12 + 8168) = v22;
  *(_QWORD *)(v12 + 9608) = v22;
  *(_DWORD *)(v12 + 8828) = *(_DWORD *)(v12 + 8764);
  *(_DWORD *)(v12 + 8860) = *(_DWORD *)(v12 + 8768);
  *(_DWORD *)(v12 + 9656) = *(_DWORD *)(v12 + 9272);
  *(_DWORD *)(v12 + 8980) = *(_DWORD *)(v12 + 8748);
  *(_DWORD *)(v12 + 8792) = *(_DWORD *)(v12 + 8736);
  *(_DWORD *)(v12 + 8816) = *(_DWORD *)(v12 + 8728);
  *(_DWORD *)(v12 + 8628) = *(_DWORD *)(v12 + 8744);
  *(_DWORD *)(v12 + 8968) = *(_DWORD *)(v12 + 8720);
  *(_DWORD *)(v12 + 9256) = *(_DWORD *)(v12 + 8760);
  *(_DWORD *)(v12 + 9480) = *(_DWORD *)(v12 + 8752);
  *(_DWORD *)(v12 + 8868) = *(_DWORD *)(v12 + 8712);
  *(_DWORD *)(v12 + 8840) = *(_DWORD *)(v12 + 8696);
  *(_DWORD *)(v12 + 8152) = v23;
  *(_DWORD *)(v12 + 9664) = v23;
  *(_DWORD *)(v12 + 8864) = *(_DWORD *)(v12 + 8688);
  *(_DWORD *)(v12 + 8808) = *(_DWORD *)(v12 + 8680);
  *(_DWORD *)(v12 + 9056) = *(_DWORD *)(v12 + 9136);
  *(_DWORD *)(v12 + 8848) = *(_DWORD *)(v12 + 8672);
  *(_DWORD *)(v12 + 9632) = *(_DWORD *)(v12 + 9080);
  *(_DWORD *)(v12 + 8992) = *(_DWORD *)(v12 + 8664);
  *(_DWORD *)(v12 + 9172) = *(_DWORD *)(v12 + 9432);
  *(_DWORD *)(v12 + 9616) = v7;
  *(_DWORD *)(v12 + 8548) = v7;
  *(_DWORD *)(v12 + 9624) = *(_DWORD *)(v12 + 9264);
  *(_DWORD *)(v12 + 8776) = *(_DWORD *)(v12 + 8656);
  *(_DWORD *)(v12 + 9004) = *(_DWORD *)(v12 + 8648);
  *(_DWORD *)(v12 + 8784) = *(_DWORD *)(v12 + 8640);
  *(_DWORD *)(v12 + 9156) = *(_DWORD *)(v12 + 9008);
  *(_DWORD *)(v12 + 9224) = *(_DWORD *)(v12 + 9400);
  *(_DWORD *)(v12 + 9064) = *(_DWORD *)(v12 + 8704);
  *(_DWORD *)(v12 + 8280) = 99;
  *(_DWORD *)(v12 + 8544) = *(_DWORD *)(v12 + 9392);
  *(_DWORD *)(v12 + 9240) = *(_DWORD *)(v12 + 9012);
  *(_DWORD *)(v12 + 8800) = *(_DWORD *)(v12 + 8632);
  *(_DWORD *)(v12 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_10031F0DC@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((127 * (a2 < (((_BYTE)a3 + 34) & 0xF9 ^ 0xA5u))) ^ (a3 + 4792)))
                            - 139 * ((a3 + 4792) ^ 0x2A0Cu)
                            + 7911))();
}

uint64_t sub_10031F140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8
                                             * (((a8 < ((v8 + 83) ^ 0x7Cu)) * (v8 ^ 0x1F25)) ^ v8))
                            - 12))();
}

uint64_t sub_10031F170@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((a2 < (3 * (a3 ^ 0x3C) + 79)) * (366 * (a3 ^ 0x413) - 5851)) ^ a3))
                            - 4))();
}

uint64_t sub_10031F1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a4 + 8 * ((19 * (a8 >= ((v8 ^ 0xA6) + v8 + 69 - 97))) ^ v8)))();
}

void sub_10031F1F0(char a1@<W4>, int a2@<W6>, int a3@<W7>, char a4@<W8>)
{
  int v4;
  _DWORD *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v11 = v5[771];
  if (a3 == (a1 + a4 - 50))
    v11 = v7;
  v5[771] = v11;
  v12 = v5[1852];
  if (a3 != (a1 + a4 - 50))
    v12 = v7;
  v5[1865] = v12;
  v5[2008] = v5[2020];
  v5[2083] = v6;
  v5[2191] = v5[2207];
  v5[2192] = v5[2215];
  v5[1859] = v5[1798];
  v5[1864] = v10;
  v5[2332] = v5[1828];
  v5[1998] = v5[2016];
  v5[2187] = v5[2245];
  v5[2184] = v5[2198];
  v5[2182] = v5[2204];
  v5[2186] = v5[2157];
  v5[2180] = v5[2242];
  v5[1875] = v9;
  v5[2356] = v8;
  v5[1904] = v4;
  v5[2190] = v5[1836];
  v5[2188] = v5[2034];
  v5[1866] = v5[1792];
  v5[1872] = v5[1796];
  v5[2178] = v5[2217];
  v5[2174] = v5[2210];
  v5[1871] = v5[1824];
  v5[2360] = v5[2276];
  v5[1870] = v5[1826];
  v5[2172] = v5[2216];
  v5[2170] = v5[2202];
  v5[2312] = a2;
  v5[1869] = v5[1822];
  v5[2005] = v5[2010];
  v5[1858] = v5[1854];
  v5[2006] = v5[2029];
  v5[2168] = v5[2212];
  v5[2270] = v5[2268];
  v5[2000] = v5[1832];
  v5[2166] = v5[2248];
  v5[1996] = v5[2068];
  v5[2002] = v5[2014];
  v5[2358] = v5[2293];
  v5[2048] = v5[1778];
  v5[2382] = v5[1802];
  v5[2316] = v5[2406];
  v5[2164] = v5[2194];
  v5[2162] = v5[2251];
  v5[1860] = v5[1790];
  v5[2160] = v5[2196];
  v5[2252] = v5[1830];
  v5[1863] = v5[2434];
  v5[2352] = v5[1834];
  v5[2176] = v5[1800];
  v5[2253] = v5[2059];
  v5[2158] = v5[2200];
  JUMPOUT(0x1002FBA38);
}

void sub_10031F3BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  *(_DWORD *)(v15 + 8032) = *(_DWORD *)(v15 + 8080);
  *(_DWORD *)(v15 + 8332) = v14;
  *(_DWORD *)(v15 + 8764) = *(_DWORD *)(v15 + 8828);
  *(_DWORD *)(v15 + 8768) = *(_DWORD *)(v15 + 8860);
  *(_DWORD *)(v15 + 7436) = *(_DWORD *)(v15 + 7192);
  *(_DWORD *)(v15 + 7456) = v19;
  *(_DWORD *)(v15 + 9328) = v13;
  *(_DWORD *)(v15 + 7992) = *(_DWORD *)(v15 + 8064);
  *(_DWORD *)(v15 + 8748) = *(_DWORD *)(v15 + 8980);
  *(_DWORD *)(v15 + 8736) = *(_DWORD *)(v15 + 8792);
  *(_DWORD *)(v15 + 8728) = *(_DWORD *)(v15 + 8816);
  *(_DWORD *)(v15 + 8744) = *(_DWORD *)(v15 + 8628);
  *(_DWORD *)(v15 + 8720) = *(_DWORD *)(v15 + 8968);
  *(_DWORD *)(v15 + 7500) = v18;
  *(_DWORD *)(v15 + 9424) = v17;
  *(_DWORD *)(v15 + 7616) = *(_DWORD *)(v15 + 7128);
  *(_DWORD *)(v15 + 8760) = *(_DWORD *)(v15 + 7344);
  *(_DWORD *)(v15 + 7464) = *(_DWORD *)(v15 + 7168);
  *(_DWORD *)(v15 + 7488) = *(_DWORD *)(v15 + 7184);
  *(_DWORD *)(v15 + 8712) = *(_DWORD *)(v15 + 8868);
  *(_DWORD *)(v15 + 8696) = *(_DWORD *)(v15 + 8840);
  *(_DWORD *)(v15 + 7484) = *(_DWORD *)(v15 + 7296);
  *(_DWORD *)(v15 + 9440) = *(_DWORD *)(v15 + 9104);
  *(_DWORD *)(v15 + 7480) = *(_DWORD *)(v15 + 7304);
  *(_DWORD *)(v15 + 8688) = *(_DWORD *)(v15 + 8864);
  *(_DWORD *)(v15 + 8680) = *(_DWORD *)(v15 + 8808);
  *(_DWORD *)(v15 + 9248) = *(_DWORD *)(v15 + 7176);
  *(_DWORD *)(v15 + 7476) = *(_DWORD *)(v15 + 7288);
  *(_DWORD *)(v15 + 8020) = *(_DWORD *)(v15 + 8040);
  *(_DWORD *)(v15 + 7432) = *(_DWORD *)(v15 + 7416);
  *(_DWORD *)(v15 + 8024) = *(_DWORD *)(v15 + 8116);
  *(_DWORD *)(v15 + 8672) = *(_DWORD *)(v15 + 8848);
  *(_DWORD *)(v15 + 9080) = *(_DWORD *)(v15 + 9072);
  *(_DWORD *)(v15 + 8000) = v11;
  *(_DWORD *)(v15 + 8664) = *(_DWORD *)(v15 + 8992);
  *(_DWORD *)(v15 + 7984) = *(_DWORD *)(v15 + 8272);
  *(_DWORD *)(v15 + 8008) = *(_DWORD *)(v15 + 8056);
  *(_DWORD *)(v15 + 9432) = *(_DWORD *)(v15 + 9172);
  *(_DWORD *)(v15 + 0x2000) = *(_DWORD *)(v15 + 7112);
  *(_DWORD *)(v15 + 9528) = a1;
  *(_DWORD *)(v15 + 7460) = *(_DWORD *)(v15 + 7408);
  *(_DWORD *)(v15 + 9264) = *(_DWORD *)(v15 + 9624);
  *(_DWORD *)(v15 + 8656) = *(_DWORD *)(v15 + 8776);
  *(_DWORD *)(v15 + 8648) = *(_DWORD *)(v15 + 9004);
  *(_DWORD *)(v15 + 7440) = *(_DWORD *)(v15 + 7160);
  *(_DWORD *)(v15 + 8640) = *(_DWORD *)(v15 + 8784);
  *(_DWORD *)(v15 + 8752) = v16;
  *(_DWORD *)(v15 + 9008) = v12;
  *(_DWORD *)(v15 + 7452) = *(_DWORD *)(v15 + 9736);
  *(_DWORD *)(v15 + 9408) = v10;
  *(_DWORD *)(v15 + 8704) = a7;
  *(_DWORD *)(v15 + 9012) = *(_DWORD *)(v15 + 8236);
  *(_DWORD *)(v15 + 8632) = v9;
  if (a8 == ((a5 + v8 - 36 - 37) ^ 0x55))
    v20 = 94;
  else
    v20 = 95;
  *(_QWORD *)(v15 + 9680) = *(_QWORD *)(v15 + 7512);
  v21 = *(_QWORD *)(v15 + 4184);
  v22 = *(_DWORD *)(v15 + 8176);
  v23 = *(_QWORD *)(v15 + 9680);
  *(_QWORD *)(v15 + 8160) = v23;
  *(_QWORD *)(v15 + 9600) = v23;
  *(_QWORD *)(v15 + 8168) = v21;
  *(_QWORD *)(v15 + 9608) = v21;
  *(_DWORD *)(v15 + 8828) = *(_DWORD *)(v15 + 8764);
  *(_DWORD *)(v15 + 8860) = *(_DWORD *)(v15 + 8768);
  *(_DWORD *)(v15 + 9656) = *(_DWORD *)(v15 + 9272);
  *(_DWORD *)(v15 + 8980) = *(_DWORD *)(v15 + 8748);
  *(_DWORD *)(v15 + 8792) = *(_DWORD *)(v15 + 8736);
  *(_DWORD *)(v15 + 8816) = *(_DWORD *)(v15 + 8728);
  *(_DWORD *)(v15 + 8628) = *(_DWORD *)(v15 + 8744);
  *(_DWORD *)(v15 + 8968) = *(_DWORD *)(v15 + 8720);
  *(_DWORD *)(v15 + 9256) = *(_DWORD *)(v15 + 8760);
  *(_DWORD *)(v15 + 9480) = *(_DWORD *)(v15 + 8752);
  *(_DWORD *)(v15 + 8868) = *(_DWORD *)(v15 + 8712);
  *(_DWORD *)(v15 + 8840) = *(_DWORD *)(v15 + 8696);
  *(_DWORD *)(v15 + 8152) = v22;
  *(_DWORD *)(v15 + 9664) = v22;
  *(_DWORD *)(v15 + 8864) = *(_DWORD *)(v15 + 8688);
  *(_DWORD *)(v15 + 8808) = *(_DWORD *)(v15 + 8680);
  *(_DWORD *)(v15 + 9056) = *(_DWORD *)(v15 + 9136);
  *(_DWORD *)(v15 + 8848) = *(_DWORD *)(v15 + 8672);
  *(_DWORD *)(v15 + 9632) = *(_DWORD *)(v15 + 9080);
  *(_DWORD *)(v15 + 8992) = *(_DWORD *)(v15 + 8664);
  *(_DWORD *)(v15 + 9172) = *(_DWORD *)(v15 + 9432);
  *(_DWORD *)(v15 + 9616) = v16;
  *(_DWORD *)(v15 + 8548) = v16;
  *(_DWORD *)(v15 + 9624) = *(_DWORD *)(v15 + 9264);
  *(_DWORD *)(v15 + 8776) = *(_DWORD *)(v15 + 8656);
  *(_DWORD *)(v15 + 9004) = *(_DWORD *)(v15 + 8648);
  *(_DWORD *)(v15 + 8784) = *(_DWORD *)(v15 + 8640);
  *(_DWORD *)(v15 + 9156) = *(_DWORD *)(v15 + 9008);
  *(_DWORD *)(v15 + 9224) = *(_DWORD *)(v15 + 9400);
  *(_DWORD *)(v15 + 9064) = *(_DWORD *)(v15 + 8704);
  *(_DWORD *)(v15 + 8280) = v20;
  *(_DWORD *)(v15 + 8544) = *(_DWORD *)(v15 + 9392);
  *(_DWORD *)(v15 + 9240) = *(_DWORD *)(v15 + 9012);
  *(_DWORD *)(v15 + 8800) = *(_DWORD *)(v15 + 8632);
  *(_DWORD *)(v15 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_10031F56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v8 - 935) ^ (2045 * (a8 < 0x2C))))
                            - (((v8 - 10130) | 0x851) ^ (548 * ((v8 - 935) ^ 0x23E2u)) ^ 0x20F7)))();
}

uint64_t sub_10031F5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((38 * (a8 < ((-93 * (v8 ^ 0x55)) ^ 0x6Cu))) ^ v8))
                            - ((2 * v8) ^ 0x10A2)))();
}

uint64_t sub_10031F608(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  int v22;
  int v23;
  int v24;

  v20 = (a5 + v8 - 326);
  v21 = *(uint64_t (**)(void))(a4
                            + 8
                            * ((2548
                              * (((a5 + v8 - 70) ^ (a8 == ((a5 + v8 - 70) ^ 0x5D))) & 1)) ^ v8));
  *(_DWORD *)(v14 + 8032) = *(_DWORD *)(v14 + 8080);
  *(_DWORD *)(v14 + 8332) = v12;
  *(_DWORD *)(v14 + 7436) = *(_DWORD *)(v14 + 7192);
  *(_DWORD *)(v14 + 7456) = v19;
  *(_DWORD *)(v14 + 9328) = a2;
  *(_DWORD *)(v14 + 7992) = *(_DWORD *)(v14 + 8064);
  *(_DWORD *)(v14 + 7500) = v18;
  *(_DWORD *)(v14 + 9424) = v17;
  *(_DWORD *)(v14 + 7616) = *(_DWORD *)(v14 + 7128);
  *(_DWORD *)(v14 + 7464) = a6;
  *(_DWORD *)(v14 + 7488) = *(_DWORD *)(v14 + 7184);
  *(_DWORD *)(v14 + 7484) = *(_DWORD *)(v14 + 7296);
  *(_DWORD *)(v14 + 7480) = *(_DWORD *)(v14 + 7304);
  *(_DWORD *)(v14 + 9248) = v10;
  *(_DWORD *)(v14 + 7476) = *(_DWORD *)(v14 + 7288);
  *(_DWORD *)(v14 + 8020) = *(_DWORD *)(v14 + 8040);
  *(_DWORD *)(v14 + 7432) = *(_DWORD *)(v14 + 7416);
  *(_DWORD *)(v14 + 8024) = *(_DWORD *)(v14 + 8116);
  *(_DWORD *)(v14 + 8000) = *(_DWORD *)(v14 + 7328);
  *(_DWORD *)(v14 + 7984) = *(_DWORD *)(v14 + 8272);
  *(_DWORD *)(v14 + 8008) = *(_DWORD *)(v14 + 8056);
  *(_DWORD *)(v14 + 0x2000) = *(_DWORD *)(v14 + 7112);
  *(_DWORD *)(v14 + 7460) = *(_DWORD *)(v14 + 7408);
  *(_DWORD *)(v14 + 9264) = *(_DWORD *)(v14 + 9624);
  *(_DWORD *)(v14 + 7440) = *(_DWORD *)(v14 + 7160);
  *(_DWORD *)(v14 + 7452) = a7;
  *(_DWORD *)(v14 + 9012) = *(_DWORD *)(v14 + 8236);
  *(_DWORD *)(v14 + 8548) = *(_DWORD *)(v14 + 6744);
  *(_DWORD *)(v14 + 8504) = *(_DWORD *)(v14 + 7344);
  v22 = *(_DWORD *)(v14 + 8136);
  *(_DWORD *)(v14 + 8752) = v22;
  *(_DWORD *)(v14 + 9480) = v22;
  *(_DWORD *)(v14 + 8456) = v13;
  *(_DWORD *)(v14 + 9528) = v9;
  *(_DWORD *)(v14 + 8496) = v9;
  v23 = *(_DWORD *)(v14 + 7320);
  *(_DWORD *)(v14 + 9008) = v23;
  *(_DWORD *)(v14 + 9156) = v23;
  v24 = *(_DWORD *)(v14 + 7336);
  *(_DWORD *)(v14 + 9408) = v24;
  *(_DWORD *)(v14 + 8552) = v24;
  *(_DWORD *)(v14 + 8704) = v15;
  *(_DWORD *)(v14 + 9064) = v15;
  *(_DWORD *)(v14 + 8280) = *(_DWORD *)(v14 + 6760);
  *(_DWORD *)(v14 + 8440) = 97;
  *(_QWORD *)(v14 + 9680) = *(_QWORD *)(v14 + 5952);
  *(_DWORD *)(v14 + 8764) = *(_DWORD *)(v14 + 8828);
  *(_DWORD *)(v14 + 8768) = *(_DWORD *)(v14 + 8860);
  *(_DWORD *)(v14 + 8748) = *(_DWORD *)(v14 + 8980);
  *(_DWORD *)(v14 + 8736) = *(_DWORD *)(v14 + 8792);
  *(_DWORD *)(v14 + 8728) = *(_DWORD *)(v14 + 8816);
  *(_DWORD *)(v14 + 8744) = *(_DWORD *)(v14 + 8628);
  *(_DWORD *)(v14 + 8720) = *(_DWORD *)(v14 + 8968);
  *(_DWORD *)(v14 + 8760) = v16;
  *(_DWORD *)(v14 + 8712) = *(_DWORD *)(v14 + 8868);
  *(_DWORD *)(v14 + 8696) = *(_DWORD *)(v14 + 8840);
  *(_DWORD *)(v14 + 9440) = *(_DWORD *)(v14 + 9104);
  *(_DWORD *)(v14 + 8688) = *(_DWORD *)(v14 + 8864);
  *(_DWORD *)(v14 + 8680) = *(_DWORD *)(v14 + 8808);
  *(_DWORD *)(v14 + 8672) = *(_DWORD *)(v14 + 8848);
  *(_DWORD *)(v14 + 9080) = *(_DWORD *)(v14 + 9072);
  *(_DWORD *)(v14 + 8664) = *(_DWORD *)(v14 + 8992);
  *(_DWORD *)(v14 + 9432) = *(_DWORD *)(v14 + 9172);
  *(_DWORD *)(v14 + 8656) = *(_DWORD *)(v14 + 8776);
  *(_DWORD *)(v14 + 8648) = *(_DWORD *)(v14 + 9004);
  *(_DWORD *)(v14 + 8640) = *(_DWORD *)(v14 + 8784);
  *(_DWORD *)(v14 + 8632) = *(_DWORD *)(v14 + 8800);
  *(_QWORD *)(v14 + 9416) = v20;
  *(_QWORD *)(v14 + 8408) = *(_QWORD *)(v14 + 8432);
  *(_QWORD *)(v14 + 8400) = *(_QWORD *)(v14 + 8416);
  *(_QWORD *)(v14 + 8392) = *(_QWORD *)(v14 + 8536);
  *(_QWORD *)(v14 + 8384) = *(_QWORD *)(v14 + 8488);
  *(_QWORD *)(v14 + 8376) = *(_QWORD *)(v14 + 8472);
  *(_QWORD *)(v14 + 8944) = *(_QWORD *)(v14 + 9568);
  *(_QWORD *)(v14 + 8576) = *(_QWORD *)(v14 + 8888);
  *(_QWORD *)(v14 + 8952) = *(_QWORD *)(v14 + 9200);
  *(_QWORD *)(v14 + 8936) = *(_QWORD *)(v14 + 8880);
  *(_DWORD *)(v14 + 9128) = *(_DWORD *)(v14 + 8312);
  *(_DWORD *)(v14 + 9116) = *(_DWORD *)(v14 + 9448);
  *(_DWORD *)(v14 + 8832) = *(_DWORD *)(v14 + 9384);
  *(_DWORD *)(v14 + 9152) = *(_DWORD *)(v14 + 8964);
  *(_DWORD *)(v14 + 8368) = *(_DWORD *)(v14 + 9520);
  *(_DWORD *)(v14 + 8520) = *(_DWORD *)(v14 + 8464);
  *(_DWORD *)(v14 + 8356) = *(_DWORD *)(v14 + 8532);
  *(_DWORD *)(v14 + 8360) = *(_DWORD *)(v14 + 8424);
  *(_DWORD *)(v14 + 8912) = *(_DWORD *)(v14 + 8872);
  *(_DWORD *)(v14 + 8512) = *(_DWORD *)(v14 + 8480);
  *(_DWORD *)(v14 + 9056) = *(_DWORD *)(v14 + 9136);
  *(_DWORD *)(v14 + 8920) = *(_DWORD *)(v14 + 9160);
  *(_DWORD *)(v14 + 8904) = *(_DWORD *)(v14 + 8616);
  *(_DWORD *)(v14 + 9224) = *(_DWORD *)(v14 + 9400);
  *(_DWORD *)(v14 + 8900) = *(_DWORD *)(v14 + 9096);
  *(_DWORD *)(v14 + 9184) = *(_DWORD *)(v14 + 9584);
  *(_DWORD *)(v14 + 8572) = *(_DWORD *)(v14 + 8984);
  *(_DWORD *)(v14 + 8544) = *(_DWORD *)(v14 + 9392);
  *(_DWORD *)(v14 + 8352) = v11;
  *(_DWORD *)(v14 + 8932) = *(_DWORD *)(v14 + 8612);
  return v21();
}

uint64_t sub_10031F904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a4 + 8 * ((126 * (a8 < (((v8 - 114) ^ 0x21) - 32))) ^ (v8 - 114))))();
}

uint64_t sub_10031F934@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  unsigned __int8 v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * ((39 * (a2 < (((a3 - 118) ^ v3) & 0x7Fu))) ^ (a3 - 1269)))
                                         - 4))(*(unsigned int *)(v4 + 7160));
}

void sub_10031F980(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _DWORD *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned __int8 v20;
  int v21;
  int v22;

  v20 = a5 + (v8 & 0x7F) - 70;
  v21 = v14[2241];
  if (a8 != (v20 ^ 0xE))
    v21 = v16;
  v14[2241] = v21;
  v22 = v14[2068];
  if (a8 == (v20 ^ 0xE))
    v22 = v16;
  v14[1996] = v22;
  v14[2008] = v14[2020];
  v14[2083] = v15;
  v14[2191] = v14[2207];
  v14[2192] = v14[2215];
  v14[1859] = v14[1798];
  v14[1864] = v19;
  v14[2332] = v14[1828];
  v14[1998] = v14[2016];
  v14[2187] = v14[2245];
  v14[2184] = v14[2198];
  v14[2182] = v14[2204];
  v14[2186] = v14[2157];
  v14[2180] = v14[2242];
  v14[1875] = v18;
  v14[2356] = v17;
  v14[1904] = v14[1782];
  v14[2190] = v14[1836];
  v14[2188] = v14[2034];
  v14[1866] = v12;
  v14[1872] = v14[1796];
  v14[2178] = v14[2217];
  v14[2174] = v14[2210];
  v14[1871] = v14[1824];
  v14[2360] = v14[2276];
  v14[1870] = v10;
  v14[2172] = v14[2216];
  v14[2170] = v14[2202];
  v14[2312] = v11;
  v14[1869] = v14[1822];
  v14[2005] = v14[2010];
  v14[1858] = v14[1854];
  v14[2006] = v14[2029];
  v14[2168] = v14[2212];
  v14[2270] = v14[2268];
  v14[2000] = v14[1832];
  v14[2166] = v14[2248];
  v14[2002] = v14[2014];
  v14[2358] = v14[2293];
  v14[2048] = v14[1778];
  v14[2382] = v14[1802];
  v14[1865] = v14[1852];
  v14[2316] = v14[2406];
  v14[2164] = v14[2194];
  v14[2162] = v14[2251];
  v14[1860] = a1;
  v14[2160] = v14[2196];
  v14[2252] = v14[1830];
  v14[1863] = v13;
  v14[2352] = v14[1834];
  v14[2176] = v14[1800];
  v14[2253] = v14[2059];
  v14[2158] = v9;
  JUMPOUT(0x1002FBA34);
}

void sub_10031FB44(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  char v8;
  char v9;
  int v10;
  _DWORD *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned __int8 v16;
  int v17;
  int v18;

  v16 = v8 - v9 - 17;
  v17 = v11[2157];
  if (a8 == (v16 ^ 0x51))
    v17 = v12;
  v11[2186] = v17;
  v18 = v11[2406];
  if (a8 != (v16 ^ 0x51))
    v18 = v12;
  v11[2316] = v18;
  v11[2008] = v11[2020];
  v11[2083] = v10;
  v11[2191] = v11[2207];
  v11[2192] = v11[2215];
  v11[1859] = v11[1798];
  v11[1864] = v15;
  v11[2332] = v11[1828];
  v11[1998] = v11[2016];
  v11[2187] = v11[2245];
  v11[2184] = v11[2198];
  v11[2182] = v11[2204];
  v11[2180] = v11[2242];
  v11[1875] = v14;
  v11[2356] = v13;
  v11[1904] = v11[1782];
  v11[2190] = v11[1836];
  v11[2188] = v11[2034];
  v11[1866] = v11[1792];
  v11[1872] = v11[1796];
  v11[2178] = v11[2217];
  v11[2174] = v11[2210];
  v11[1871] = v11[1824];
  v11[2360] = v11[2276];
  v11[1870] = v11[1826];
  v11[2172] = v11[2216];
  v11[2170] = v11[2202];
  v11[2312] = v11[1794];
  v11[1869] = v11[1822];
  v11[2005] = v11[2010];
  v11[1858] = v11[1854];
  v11[2006] = v11[2029];
  v11[2168] = v11[2212];
  v11[2270] = v11[2268];
  v11[2000] = a3;
  v11[2166] = v11[2248];
  v11[1996] = v11[2068];
  v11[2002] = v11[2014];
  v11[2358] = v11[2293];
  v11[2048] = v11[1778];
  v11[2382] = a1;
  v11[1865] = v11[1852];
  v11[2164] = v11[2194];
  v11[2162] = v11[2251];
  v11[1860] = v11[1790];
  v11[2160] = v11[2196];
  v11[2252] = a6;
  v11[1863] = v11[2434];
  v11[2352] = a2;
  v11[2176] = a7;
  v11[2253] = v11[2059];
  v11[2158] = v11[2200];
  JUMPOUT(0x10031FCFCLL);
}

uint64_t sub_10031FD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((a8 < ((-93 * ((v8 + 101) ^ 0x7C)) ^ 0x70u)) * ((v8 - 7015) ^ 0xD66)) ^ (v8 - 7067))))();
}

void sub_10031FD5C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _DWORD *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v4[2008] = v4[2020];
  v4[2083] = v5;
  v4[2191] = v4[2207];
  v4[2192] = v4[2215];
  v4[1859] = v4[1798];
  v4[1864] = v9;
  v4[2332] = v4[1828];
  v4[1998] = v4[2016];
  v4[2187] = v4[2245];
  v4[2184] = v4[2198];
  v4[2182] = v4[2204];
  v4[2186] = v4[2157];
  v4[2180] = v4[2242];
  v4[1875] = v8;
  v4[2356] = v7;
  v4[1904] = v4[1782];
  v4[2190] = v4[1836];
  v4[1866] = v1;
  v4[1872] = v4[1796];
  v4[2178] = v4[2217];
  v4[2174] = v4[2210];
  v4[1871] = v4[1824];
  v4[2360] = v4[2276];
  v4[1870] = v4[1826];
  v4[2172] = v4[2216];
  v4[2170] = v4[2202];
  v4[2312] = v0;
  v4[1869] = v4[1822];
  v4[2005] = v4[2010];
  v4[1858] = v4[1854];
  v4[2006] = v4[2029];
  v4[2168] = v4[2212];
  v4[2270] = v4[2268];
  v4[2000] = v4[1832];
  v4[2166] = v4[2248];
  v4[1996] = v4[2068];
  v4[2002] = v4[2014];
  v4[2358] = v4[2293];
  v4[2048] = v4[1778];
  v4[2382] = v4[1802];
  v4[1865] = v4[1852];
  v4[2316] = v4[2406];
  v4[2164] = v4[2194];
  v4[2162] = v4[2251];
  v4[1860] = v3;
  v4[2160] = v4[2196];
  v4[2188] = v6;
  v4[2252] = v4[1830];
  v4[1863] = v2;
  v4[2352] = v4[1834];
  v4[2176] = v4[1800];
  v4[2253] = v4[2059];
  v4[2158] = v4[2200];
  JUMPOUT(0x10031F558);
}

uint64_t sub_10031FF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  _BOOL4 v9;

  v9 = a8 >= (((v8 - 8294) ^ 2) & 0xDEu);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((4 * v9) | (16 * v9) | v8))
                            - ((v8 - 1451709573) & 0x5687353F ^ 0x52DLL)))();
}

void sub_10031FF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _DWORD *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  int v20;
  int v21;

  v19 = ((v8 | 0x21) + 50) & 0xBF;
  v20 = v13[779];
  if (a8 != (v19 - 17))
    v20 = v15;
  v13[779] = v20;
  v21 = v13[2215];
  if (a8 == (v19 - 17))
    v21 = v15;
  v13[2192] = v21;
  v13[2008] = v13[2020];
  v13[2083] = v14;
  v13[2191] = v13[2207];
  v13[1859] = v13[1798];
  v13[1864] = v18;
  v13[2332] = v13[1828];
  v13[1998] = v13[2016];
  v13[2187] = v13[2245];
  v13[2184] = v13[2198];
  v13[2182] = v13[2204];
  v13[2186] = v13[2157];
  v13[2180] = v13[2242];
  v13[1875] = v17;
  v13[2356] = v16;
  v13[1904] = v12;
  v13[2190] = v13[1836];
  v13[2188] = v13[2034];
  v13[1866] = v13[1792];
  v13[1872] = v13[1796];
  v13[2178] = v13[2217];
  v13[2174] = v13[2210];
  v13[1871] = v13[1824];
  v13[2360] = v13[2276];
  v13[1870] = v13[1826];
  v13[2172] = v13[2216];
  v13[2170] = v13[2202];
  v13[2312] = v13[1794];
  v13[1869] = v10;
  v13[2005] = v13[2010];
  v13[1858] = v9;
  v13[2006] = v13[2029];
  v13[2168] = v13[2212];
  v13[2270] = v13[2268];
  v13[2000] = v13[1832];
  v13[2166] = v13[2248];
  v13[1996] = v13[2068];
  v13[2002] = v13[2014];
  v13[2358] = v13[2293];
  v13[2048] = v13[1778];
  v13[2382] = v13[1802];
  v13[1865] = v11;
  v13[2316] = v13[2406];
  v13[2164] = v13[2194];
  v13[2162] = v13[2251];
  v13[1860] = v13[1790];
  v13[2160] = v13[2196];
  v13[2252] = v13[1830];
  v13[1863] = v13[2434];
  v13[2352] = v13[1834];
  v13[2176] = v13[1800];
  v13[2253] = v13[2059];
  v13[2158] = v13[2200];
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_10032013C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unsigned int a4@<W7>, int a5@<W8>)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a3
                                                                       + 8
                                                                       * ((43
                                                                         * (((a4 < 0x22) ^ (a5 - 82)) & 1)) ^ (a5 + 2531)))
                                                           - ((1753 * ((a5 + 2531) ^ 0x2A58u)) ^ 0xDBELL)))(a1, a2, *(unsigned int *)(v5 + 7192));
}

void sub_100320194(int a1@<W2>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, char a6@<W8>)
{
  int v6;
  char v7;
  int v8;
  _DWORD *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned __int8 v15;
  int v16;
  int v17;

  v15 = a6 - v7 - 17;
  v16 = v9[661];
  if (a5 == (v15 ^ 0x35))
    v16 = v11;
  v9[661] = v16;
  v17 = v9[2198];
  if (a5 != (v15 ^ 0x35))
    v17 = v11;
  v9[2184] = v17;
  v9[2008] = v9[2020];
  v9[2083] = v10;
  v9[2191] = v9[2207];
  v9[2192] = v9[2215];
  v9[1859] = a1;
  v9[1864] = v14;
  v9[2332] = v9[1828];
  v9[1998] = v9[2016];
  v9[2187] = v9[2245];
  v9[2182] = v9[2204];
  v9[2186] = v9[2157];
  v9[2180] = v9[2242];
  v9[1875] = v13;
  v9[2356] = v12;
  v9[1904] = v8;
  v9[2190] = v9[1836];
  v9[2188] = v9[2034];
  v9[1866] = a4;
  v9[1872] = a2;
  v9[2178] = v9[2217];
  v9[2174] = v9[2210];
  v9[1871] = v9[1824];
  v9[2360] = v9[2276];
  v9[1870] = v9[1826];
  v9[2172] = v9[2216];
  v9[2170] = v9[2202];
  v9[2312] = a3;
  v9[1869] = v9[1822];
  v9[2005] = v9[2010];
  v9[1858] = v9[1854];
  v9[2006] = v9[2029];
  v9[2168] = v9[2212];
  v9[2270] = v9[2268];
  v9[2000] = v9[1832];
  v9[2166] = v9[2248];
  v9[1996] = v9[2068];
  v9[2002] = v9[2014];
  v9[2358] = v9[2293];
  v9[2048] = v9[1778];
  v9[2382] = v9[1802];
  v9[1865] = v9[1852];
  v9[2316] = v9[2406];
  v9[2164] = v9[2194];
  v9[2162] = v9[2251];
  v9[1860] = v9[1790];
  v9[2160] = v9[2196];
  v9[2252] = v9[1830];
  v9[1863] = v9[2434];
  v9[2352] = v9[1834];
  v9[2176] = v9[1800];
  v9[2253] = v6;
  v9[2158] = v9[2200];
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_100320354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a4 + 8 * (((((a8 < 0x12) ^ (v8 + 1)) & 1) * (v8 - 8633)) ^ v8)))();
}

void sub_100320380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  char v8;
  char v9;
  int v10;
  _DWORD *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  int v19;

  v17 = a8 == (((v8 ^ 0xFA) - v9 - 50) ^ 5);
  v18 = v11[2204];
  if (!v17)
    v18 = v13;
  v11[2182] = v18;
  v19 = v11[1826];
  if (v17)
    v19 = v13;
  v11[1870] = v19;
  v11[2008] = v11[2020];
  v11[2083] = v12;
  v11[2191] = v11[2207];
  v11[2192] = v11[2215];
  v11[1859] = v11[1798];
  v11[1864] = v16;
  v11[2332] = v11[1828];
  v11[1998] = v11[2016];
  v11[2187] = v11[2245];
  v11[2184] = v11[2198];
  v11[2186] = v11[2157];
  v11[2180] = v11[2242];
  v11[1875] = v15;
  v11[2356] = v14;
  v11[1904] = v10;
  v11[2190] = v11[1836];
  v11[2188] = v11[2034];
  v11[1866] = v11[1792];
  v11[1872] = v11[1796];
  v11[2178] = v11[2217];
  v11[2174] = v11[2210];
  v11[1871] = v11[1824];
  v11[2360] = v11[2276];
  v11[2172] = v11[2216];
  v11[2170] = v11[2202];
  v11[2312] = a7;
  v11[1869] = v11[1822];
  v11[2005] = v11[2010];
  v11[1858] = v11[1854];
  v11[2006] = v11[2029];
  v11[2168] = v11[2212];
  v11[2270] = v11[2268];
  v11[2000] = v11[1832];
  v11[2166] = v11[2248];
  v11[1996] = v11[2068];
  v11[2002] = v11[2014];
  v11[2358] = v11[2293];
  v11[2048] = v11[1778];
  v11[2382] = v11[1802];
  v11[1865] = v11[1852];
  v11[2316] = v11[2406];
  v11[2164] = v11[2194];
  v11[2162] = v11[2251];
  v11[1860] = v11[1790];
  v11[2160] = v11[2196];
  v11[2252] = v11[1830];
  v11[1863] = v11[2434];
  v11[2352] = v11[1834];
  v11[2176] = v11[1800];
  v11[2253] = v11[2059];
  v11[2158] = v11[2200];
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_100320550@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((a2 < 0x3E) ^ (a3 + 38)) & 1) * ((a3 - 7875) ^ 0x3AB)) ^ a3))
                            - 12))();
}

uint64_t sub_100320594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t (*v16)(uint64_t, uint64_t, _QWORD);
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;

  v16 = (uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a4
                                                                     + 8
                                                                     * ((1779
                                                                       * (a8 != (a6 + (v8 ^ 0xCB) + 82))) ^ v8))
                                                         - 12);
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 8332) = v11;
  *(_DWORD *)(v10 + 7436) = *(_DWORD *)(v10 + 7192);
  *(_DWORD *)(v10 + 7456) = v15;
  *(_DWORD *)(v10 + 9328) = *(_DWORD *)(v10 + 7312);
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 7500) = v14;
  *(_DWORD *)(v10 + 7616) = *(_DWORD *)(v10 + 7128);
  *(_DWORD *)(v10 + 7464) = *(_DWORD *)(v10 + 7168);
  *(_DWORD *)(v10 + 7488) = *(_DWORD *)(v10 + 7184);
  *(_DWORD *)(v10 + 7484) = *(_DWORD *)(v10 + 7296);
  *(_DWORD *)(v10 + 9440) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 7480) = *(_DWORD *)(v10 + 7304);
  *(_DWORD *)(v10 + 9248) = *(_DWORD *)(v10 + 7176);
  *(_DWORD *)(v10 + 7476) = *(_DWORD *)(v10 + 7288);
  *(_DWORD *)(v10 + 8020) = *(_DWORD *)(v10 + 8040);
  *(_DWORD *)(v10 + 7432) = *(_DWORD *)(v10 + 7416);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8000) = *(_DWORD *)(v10 + 7328);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 0x2000) = *(_DWORD *)(v10 + 7112);
  *(_DWORD *)(v10 + 9528) = *(_DWORD *)(v10 + 7208);
  *(_DWORD *)(v10 + 7460) = *(_DWORD *)(v10 + 7408);
  *(_DWORD *)(v10 + 7440) = *(_DWORD *)(v10 + 7160);
  *(_DWORD *)(v10 + 7452) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9408) = *(_DWORD *)(v10 + 7336);
  *(_DWORD *)(v10 + 8548) = *(_DWORD *)(v10 + 6744);
  v17 = *(_DWORD *)(v10 + 7344);
  *(_DWORD *)(v10 + 8760) = v17;
  *(_DWORD *)(v10 + 9256) = v17;
  v18 = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 8752) = v18;
  *(_DWORD *)(v10 + 9480) = v18;
  *(_DWORD *)(v10 + 9424) = v13;
  *(_DWORD *)(v10 + 9664) = v13;
  *(_DWORD *)(v10 + 9632) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 9080) = v12;
  *(_DWORD *)(v10 + 9656) = v12;
  *(_DWORD *)(v10 + 9616) = v12;
  v19 = *(_DWORD *)(v10 + 7320);
  *(_DWORD *)(v10 + 9008) = v19;
  *(_DWORD *)(v10 + 9156) = v19;
  v20 = *(_DWORD *)(v10 + 7200);
  *(_DWORD *)(v10 + 8704) = v20;
  *(_DWORD *)(v10 + 9064) = v20;
  *(_DWORD *)(v10 + 8280) = *(_DWORD *)(v10 + 6760);
  v21 = *(_DWORD *)(v10 + 8236);
  *(_DWORD *)(v10 + 9012) = v21;
  *(_DWORD *)(v10 + 9240) = v21;
  *(_DWORD *)(v10 + 9592) = 44;
  *(_QWORD *)(v10 + 9680) = *(_QWORD *)(v10 + 5952);
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 8632) = v9;
  *(_QWORD *)(v10 + 9600) = *(_QWORD *)(v10 + 6088);
  *(_QWORD *)(v10 + 9608) = *(_QWORD *)(v10 + 6728);
  *(_DWORD *)(v10 + 9056) = *(_DWORD *)(v10 + 9136);
  *(_DWORD *)(v10 + 9224) = *(_DWORD *)(v10 + 9400);
  *(_DWORD *)(v10 + 8544) = *(_DWORD *)(v10 + 9392);
  return v16(v12, a2, 0);
}

uint64_t sub_1003207F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a4 + 8 * (((a8 < ((v8 + 104) ^ 0x2Bu)) * ((v8 - 7320) ^ 0x568)) ^ v8)))();
}

uint64_t sub_10032082C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);

  v17 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a4
                                                    + 8
                                                    * ((6734 * (a8 == ((v8 ^ (a5 + 27)) - 10))) ^ v8))
                                        - 12);
  *(_QWORD *)(v11 + 9680) = *(_QWORD *)(v11 + 7880);
  *(_DWORD *)(v11 + 8032) = *(_DWORD *)(v11 + 8080);
  *(_DWORD *)(v11 + 8332) = v12;
  *(_DWORD *)(v11 + 8764) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8768) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 7436) = *(_DWORD *)(v11 + 7192);
  *(_DWORD *)(v11 + 7456) = v16;
  *(_DWORD *)(v11 + 9328) = *(_DWORD *)(v11 + 7312);
  *(_DWORD *)(v11 + 7992) = *(_DWORD *)(v11 + 8064);
  *(_DWORD *)(v11 + 8748) = *(_DWORD *)(v11 + 8980);
  *(_DWORD *)(v11 + 8736) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 8728) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 8720) = *(_DWORD *)(v11 + 8968);
  *(_DWORD *)(v11 + 7500) = v15;
  *(_DWORD *)(v11 + 9424) = v14;
  *(_DWORD *)(v11 + 7616) = v10;
  *(_DWORD *)(v11 + 8760) = *(_DWORD *)(v11 + 7344);
  *(_DWORD *)(v11 + 8752) = *(_DWORD *)(v11 + 8136);
  *(_DWORD *)(v11 + 7464) = *(_DWORD *)(v11 + 7168);
  *(_DWORD *)(v11 + 7488) = *(_DWORD *)(v11 + 7184);
  *(_DWORD *)(v11 + 8712) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 7484) = *(_DWORD *)(v11 + 7296);
  *(_DWORD *)(v11 + 7128) = v10;
  *(_DWORD *)(v11 + 9440) = *(_DWORD *)(v11 + 9104);
  *(_DWORD *)(v11 + 7480) = *(_DWORD *)(v11 + 7304);
  *(_DWORD *)(v11 + 8688) = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 9248) = a7;
  *(_DWORD *)(v11 + 7476) = *(_DWORD *)(v11 + 7288);
  *(_DWORD *)(v11 + 8020) = *(_DWORD *)(v11 + 8040);
  *(_DWORD *)(v11 + 7432) = *(_DWORD *)(v11 + 7416);
  *(_DWORD *)(v11 + 8024) = *(_DWORD *)(v11 + 8116);
  *(_DWORD *)(v11 + 8672) = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 9080) = *(_DWORD *)(v11 + 9072);
  *(_DWORD *)(v11 + 8000) = v13;
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 7984) = *(_DWORD *)(v11 + 8272);
  *(_DWORD *)(v11 + 8008) = *(_DWORD *)(v11 + 8056);
  *(_DWORD *)(v11 + 9432) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 0x2000) = *(_DWORD *)(v11 + 7112);
  *(_DWORD *)(v11 + 9528) = *(_DWORD *)(v11 + 7208);
  *(_DWORD *)(v11 + 7460) = *(_DWORD *)(v11 + 7408);
  *(_DWORD *)(v11 + 9264) = *(_DWORD *)(v11 + 9624);
  *(_DWORD *)(v11 + 8656) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 8648) = *(_DWORD *)(v11 + 9004);
  *(_DWORD *)(v11 + 7440) = *(_DWORD *)(v11 + 7160);
  *(_DWORD *)(v11 + 8640) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 9008) = *(_DWORD *)(v11 + 7320);
  *(_DWORD *)(v11 + 7452) = *(_DWORD *)(v11 + 9736);
  *(_DWORD *)(v11 + 9408) = *(_DWORD *)(v11 + 7336);
  *(_DWORD *)(v11 + 8704) = *(_DWORD *)(v11 + 7200);
  *(_DWORD *)(v11 + 9012) = *(_DWORD *)(v11 + 8236);
  *(_DWORD *)(v11 + 8632) = v9;
  return v17(v16);
}

void sub_100320A10(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  *(_DWORD *)(v13 + 8032) = *(_DWORD *)(v13 + 8080);
  *(_DWORD *)(v13 + 8332) = *(_DWORD *)(v13 + 8260);
  *(_DWORD *)(v13 + 8764) = *(_DWORD *)(v13 + 8828);
  *(_DWORD *)(v13 + 8768) = *(_DWORD *)(v13 + 8860);
  *(_DWORD *)(v13 + 7436) = a3;
  *(_DWORD *)(v13 + 7456) = a1;
  *(_DWORD *)(v13 + 9328) = a2;
  *(_DWORD *)(v13 + 7992) = *(_DWORD *)(v13 + 8064);
  *(_DWORD *)(v13 + 8748) = *(_DWORD *)(v13 + 8980);
  *(_DWORD *)(v13 + 8736) = *(_DWORD *)(v13 + 8792);
  *(_DWORD *)(v13 + 8728) = *(_DWORD *)(v13 + 8816);
  *(_DWORD *)(v13 + 8744) = *(_DWORD *)(v13 + 8628);
  *(_DWORD *)(v13 + 8720) = *(_DWORD *)(v13 + 8968);
  *(_DWORD *)(v13 + 7500) = v12;
  *(_DWORD *)(v13 + 9424) = v20;
  *(_DWORD *)(v13 + 7616) = *(_DWORD *)(v13 + 7128);
  *(_DWORD *)(v13 + 8760) = *(_DWORD *)(v13 + 7344);
  *(_DWORD *)(v13 + 8752) = *(_DWORD *)(v13 + 8136);
  *(_DWORD *)(v13 + 7464) = v14;
  *(_DWORD *)(v13 + 7488) = a4;
  *(_DWORD *)(v13 + 8712) = *(_DWORD *)(v13 + 8868);
  *(_DWORD *)(v13 + 8696) = *(_DWORD *)(v13 + 8840);
  *(_DWORD *)(v13 + 7484) = a6;
  *(_DWORD *)(v13 + 9440) = *(_DWORD *)(v13 + 9104);
  *(_DWORD *)(v13 + 7480) = a5;
  *(_DWORD *)(v13 + 8688) = *(_DWORD *)(v13 + 8864);
  *(_DWORD *)(v13 + 8680) = *(_DWORD *)(v13 + 8808);
  *(_DWORD *)(v13 + 9248) = a7;
  *(_DWORD *)(v13 + 7476) = v19;
  *(_DWORD *)(v13 + 8020) = *(_DWORD *)(v13 + 8040);
  *(_DWORD *)(v13 + 7432) = v17;
  *(_DWORD *)(v13 + 8024) = *(_DWORD *)(v13 + 8116);
  *(_DWORD *)(v13 + 8672) = *(_DWORD *)(v13 + 8848);
  *(_DWORD *)(v13 + 9080) = *(_DWORD *)(v13 + 9072);
  *(_DWORD *)(v13 + 8000) = v9;
  *(_DWORD *)(v13 + 8664) = *(_DWORD *)(v13 + 8992);
  *(_DWORD *)(v13 + 7984) = *(_DWORD *)(v13 + 8272);
  *(_DWORD *)(v13 + 8008) = *(_DWORD *)(v13 + 8056);
  *(_DWORD *)(v13 + 9432) = *(_DWORD *)(v13 + 9172);
  *(_DWORD *)(v13 + 0x2000) = *(_DWORD *)(v13 + 7112);
  *(_DWORD *)(v13 + 9528) = v8;
  *(_DWORD *)(v13 + 7460) = v18;
  *(_DWORD *)(v13 + 9264) = *(_DWORD *)(v13 + 9624);
  *(_DWORD *)(v13 + 8656) = *(_DWORD *)(v13 + 8776);
  *(_DWORD *)(v13 + 8648) = *(_DWORD *)(v13 + 9004);
  *(_DWORD *)(v13 + 7440) = v16;
  *(_DWORD *)(v13 + 8640) = *(_DWORD *)(v13 + 8784);
  *(_DWORD *)(v13 + 9272) = v7;
  *(_DWORD *)(v13 + 9008) = v11;
  *(_DWORD *)(v13 + 7452) = v15;
  *(_DWORD *)(v13 + 9408) = v10;
  *(_DWORD *)(v13 + 8704) = v22;
  *(_DWORD *)(v13 + 9012) = v21;
  *(_DWORD *)(v13 + 8632) = *(_DWORD *)(v13 + 8800);
  *(_QWORD *)(v13 + 9680) = *(_QWORD *)(v13 + 7880);
  v23 = *(_QWORD *)(v13 + 6728);
  v24 = *(_DWORD *)(v13 + 8312);
  v25 = *(_QWORD *)(v13 + 9680);
  *(_QWORD *)(v13 + 8160) = v25;
  *(_QWORD *)(v13 + 9600) = v25;
  *(_QWORD *)(v13 + 8168) = v23;
  *(_QWORD *)(v13 + 9608) = v23;
  *(_DWORD *)(v13 + 8828) = *(_DWORD *)(v13 + 8764);
  *(_DWORD *)(v13 + 8860) = *(_DWORD *)(v13 + 8768);
  *(_DWORD *)(v13 + 9656) = *(_DWORD *)(v13 + 9272);
  *(_DWORD *)(v13 + 8980) = *(_DWORD *)(v13 + 8748);
  *(_DWORD *)(v13 + 8792) = *(_DWORD *)(v13 + 8736);
  *(_DWORD *)(v13 + 8816) = *(_DWORD *)(v13 + 8728);
  *(_DWORD *)(v13 + 8628) = *(_DWORD *)(v13 + 8744);
  *(_DWORD *)(v13 + 8968) = *(_DWORD *)(v13 + 8720);
  *(_DWORD *)(v13 + 9256) = *(_DWORD *)(v13 + 8760);
  *(_DWORD *)(v13 + 9480) = *(_DWORD *)(v13 + 8752);
  *(_DWORD *)(v13 + 8868) = *(_DWORD *)(v13 + 8712);
  *(_DWORD *)(v13 + 8840) = *(_DWORD *)(v13 + 8696);
  *(_DWORD *)(v13 + 8152) = v24;
  *(_DWORD *)(v13 + 9664) = v24;
  *(_DWORD *)(v13 + 8864) = *(_DWORD *)(v13 + 8688);
  *(_DWORD *)(v13 + 8808) = *(_DWORD *)(v13 + 8680);
  *(_DWORD *)(v13 + 9056) = *(_DWORD *)(v13 + 9136);
  *(_DWORD *)(v13 + 8848) = *(_DWORD *)(v13 + 8672);
  *(_DWORD *)(v13 + 9632) = *(_DWORD *)(v13 + 9080);
  *(_DWORD *)(v13 + 8992) = *(_DWORD *)(v13 + 8664);
  *(_DWORD *)(v13 + 9172) = *(_DWORD *)(v13 + 9432);
  *(_DWORD *)(v13 + 9616) = v7;
  *(_DWORD *)(v13 + 8548) = v7;
  *(_DWORD *)(v13 + 9624) = *(_DWORD *)(v13 + 9264);
  *(_DWORD *)(v13 + 8776) = *(_DWORD *)(v13 + 8656);
  *(_DWORD *)(v13 + 9004) = *(_DWORD *)(v13 + 8648);
  *(_DWORD *)(v13 + 8784) = *(_DWORD *)(v13 + 8640);
  *(_DWORD *)(v13 + 9156) = *(_DWORD *)(v13 + 9008);
  *(_DWORD *)(v13 + 9224) = *(_DWORD *)(v13 + 9400);
  *(_DWORD *)(v13 + 9064) = *(_DWORD *)(v13 + 8704);
  *(_DWORD *)(v13 + 8280) = 31;
  *(_DWORD *)(v13 + 8544) = *(_DWORD *)(v13 + 9392);
  *(_DWORD *)(v13 + 9240) = *(_DWORD *)(v13 + 9012);
  *(_DWORD *)(v13 + 8800) = *(_DWORD *)(v13 + 8632);
  *(_DWORD *)(v13 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_100320B84@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((a2 >= (a3 - 126))
                                          * ((a3 - 1445419310) & 0x562731C7 ^ 0x11D)) ^ a3))
                            - 12))();
}

void sub_100320BD4(int a1@<W5>, int a2@<W6>, int a3@<W7>, char a4@<W8>)
{
  int v4;
  int v5;
  char v6;
  int v7;
  _DWORD *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  char v14;
  int v15;
  int v16;

  v14 = a4 + 6;
  v15 = v8[2346];
  if (a3 != (v14 - v6 + 121))
    v15 = v10;
  v8[2346] = v15;
  v16 = v8[2029];
  if (a3 == (v14 - v6 + 121))
    v16 = v10;
  v8[2006] = v16;
  v8[2008] = v8[2020];
  v8[2083] = v9;
  v8[2191] = v8[2207];
  v8[2192] = v8[2215];
  v8[1859] = v8[1798];
  v8[1864] = v13;
  v8[2332] = v8[1828];
  v8[1998] = v8[2016];
  v8[2187] = v8[2245];
  v8[2184] = v8[2198];
  v8[2182] = v8[2204];
  v8[2186] = v8[2157];
  v8[2180] = v8[2242];
  v8[1875] = v12;
  v8[2356] = v11;
  v8[1904] = v7;
  v8[2190] = v8[1836];
  v8[2188] = v8[2034];
  v8[1866] = a2;
  v8[1872] = v8[1796];
  v8[2178] = v8[2217];
  v8[2174] = v8[2210];
  v8[1871] = v8[1824];
  v8[2360] = v8[2276];
  v8[1870] = v5;
  v8[2172] = v8[2216];
  v8[2170] = v8[2202];
  v8[2312] = a1;
  v8[1869] = v8[1822];
  v8[2005] = v8[2010];
  v8[1858] = v8[1854];
  v8[2168] = v8[2212];
  v8[2270] = v8[2268];
  v8[2000] = v8[1832];
  v8[2166] = v8[2248];
  v8[1996] = v8[2068];
  v8[2002] = v8[2014];
  v8[2358] = v8[2293];
  v8[2048] = v8[1778];
  v8[2382] = v8[1802];
  v8[1865] = v8[1852];
  v8[2316] = v8[2406];
  v8[2164] = v8[2194];
  v8[2162] = v8[2251];
  v8[1860] = v8[1790];
  v8[2160] = v8[2196];
  v8[2252] = v8[1830];
  v8[1863] = v8[2434];
  v8[2352] = v8[1834];
  v8[2176] = v8[1800];
  v8[2253] = v8[2059];
  v8[2158] = v4;
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_100320DAC@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((112
                                * ((a3 ^ 0x19 ^ (a2 < ((((_BYTE)a3 - 61) & 0x25 ^ 0xFB) & 0x3Fu))) & 1)) ^ a3)))();
}

void sub_100320E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _DWORD *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  int v21;

  v19 = a8 == (((v8 + 122) & 0x77 ^ 9) & 0x7F);
  v20 = v13[2020];
  if (v19)
    v20 = v15;
  v13[2008] = v20;
  if (v19)
    v21 = v18;
  else
    v21 = v15;
  v13[1864] = v21;
  v13[2083] = v14;
  v13[2191] = v13[2207];
  v13[2192] = v13[2215];
  v13[1859] = v13[1798];
  v13[2332] = v13[1828];
  v13[1998] = v13[2016];
  v13[2187] = v13[2245];
  v13[2184] = v13[2198];
  v13[2182] = v13[2204];
  v13[2186] = v13[2157];
  v13[2180] = v13[2242];
  v13[1875] = v17;
  v13[2356] = v16;
  v13[1904] = v13[1782];
  v13[2190] = v13[1836];
  v13[2188] = v13[2034];
  v13[1866] = v9;
  v13[1872] = v13[1796];
  v13[2178] = v13[2217];
  v13[2174] = v13[2210];
  v13[1871] = v13[1824];
  v13[2360] = v13[2276];
  v13[1870] = v13[1826];
  v13[2172] = v13[2216];
  v13[2170] = v13[2202];
  v13[2312] = v11;
  v13[1869] = v13[1822];
  v13[2005] = v13[2010];
  v13[1858] = v13[1854];
  v13[2006] = v13[2029];
  v13[2168] = v13[2212];
  v13[2270] = v13[2268];
  v13[2000] = v13[1832];
  v13[2166] = v13[2248];
  v13[1996] = v13[2068];
  v13[2002] = v13[2014];
  v13[2358] = v13[2293];
  v13[2048] = v13[1778];
  v13[2382] = v13[1802];
  v13[1865] = v13[1852];
  v13[2316] = v13[2406];
  v13[2164] = v13[2194];
  v13[2162] = v13[2251];
  v13[1860] = v12;
  v13[2160] = v13[2196];
  v13[2252] = v13[1830];
  v13[1863] = v10;
  v13[2352] = v13[1834];
  v13[2176] = v13[1800];
  v13[2253] = v13[2059];
  v13[2158] = v13[2200];
  JUMPOUT(0x1002FBA38);
}

void sub_100320FD8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  _DWORD *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v7[2008] = v7[2020];
  v7[2083] = v8;
  v7[2191] = v7[2207];
  v7[2192] = v7[2215];
  v7[1859] = v7[1798];
  v7[1864] = v12;
  v7[2332] = v7[1828];
  v7[1998] = v7[2016];
  v7[2187] = v7[2245];
  v7[2184] = v7[2198];
  v7[2182] = v7[2204];
  v7[2186] = v7[2157];
  v7[2180] = v7[2242];
  v7[1875] = v11;
  v7[2356] = v10;
  v7[2190] = v7[1836];
  v7[2188] = v7[2034];
  v7[1866] = v4;
  v7[1872] = v7[1796];
  v7[2178] = v7[2217];
  v7[2174] = v7[2210];
  v7[1871] = v2;
  v7[2360] = v7[2276];
  v7[1870] = v1;
  v7[2172] = v7[2216];
  v7[2170] = v7[2202];
  v7[2312] = v3;
  v7[1869] = v7[1822];
  v7[2005] = v7[2010];
  v7[1858] = v7[1854];
  v7[2006] = v7[2029];
  v7[2168] = v7[2212];
  v7[2270] = v7[2268];
  v7[2000] = v7[1832];
  v7[2166] = v7[2248];
  v7[1996] = v7[2068];
  v7[2002] = v7[2014];
  v7[2358] = v7[2293];
  v7[2048] = v7[1778];
  v7[2382] = v7[1802];
  v7[1865] = v7[1852];
  v7[2316] = v7[2406];
  v7[2164] = v7[2194];
  v7[2162] = v7[2251];
  v7[1860] = v6;
  v7[2160] = v7[2196];
  v7[1904] = v9;
  v7[2252] = v7[1830];
  v7[1863] = v5;
  v7[2352] = v7[1834];
  v7[2176] = v7[1800];
  v7[2253] = v7[2059];
  v7[2158] = v0;
  JUMPOUT(0x10031E548);
}

void sub_100321170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v16 = a8 == ((v8 ^ (a5 + 27)) ^ 0x17);
  v17 = *(_DWORD *)(v10 + 7532);
  if (v16)
    v17 = v12;
  *(_DWORD *)(v10 + 7532) = v17;
  v18 = *(_DWORD *)(v10 + 7964);
  if (!v16)
    v18 = v12;
  *(_DWORD *)(v10 + 7964) = v18;
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 8332) = v11;
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 7436) = *(_DWORD *)(v10 + 7192);
  *(_DWORD *)(v10 + 7456) = v15;
  *(_DWORD *)(v10 + 9328) = *(_DWORD *)(v10 + 7312);
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 7500) = v14;
  *(_DWORD *)(v10 + 9424) = v13;
  *(_DWORD *)(v10 + 7616) = v9;
  *(_DWORD *)(v10 + 8760) = *(_DWORD *)(v10 + 7344);
  *(_DWORD *)(v10 + 8752) = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 7464) = *(_DWORD *)(v10 + 7168);
  *(_DWORD *)(v10 + 7488) = *(_DWORD *)(v10 + 7184);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 7484) = *(_DWORD *)(v10 + 7296);
  *(_DWORD *)(v10 + 9440) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 7480) = *(_DWORD *)(v10 + 7304);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 9248) = *(_DWORD *)(v10 + 7176);
  *(_DWORD *)(v10 + 7476) = *(_DWORD *)(v10 + 7288);
  *(_DWORD *)(v10 + 8020) = *(_DWORD *)(v10 + 8040);
  *(_DWORD *)(v10 + 7432) = *(_DWORD *)(v10 + 7416);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9080) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 8000) = *(_DWORD *)(v10 + 7328);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 0x2000) = *(_DWORD *)(v10 + 7112);
  *(_DWORD *)(v10 + 9528) = *(_DWORD *)(v10 + 7208);
  *(_DWORD *)(v10 + 7460) = *(_DWORD *)(v10 + 7408);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 7440) = *(_DWORD *)(v10 + 7160);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 9008) = *(_DWORD *)(v10 + 7320);
  *(_DWORD *)(v10 + 7452) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9408) = *(_DWORD *)(v10 + 7336);
  *(_DWORD *)(v10 + 8704) = *(_DWORD *)(v10 + 7200);
  *(_DWORD *)(v10 + 9012) = *(_DWORD *)(v10 + 8236);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  if (v16)
    v19 = *(_QWORD *)(v10 + 6360);
  else
    v19 = *(_QWORD *)(v10 + 5440);
  if (v16)
    v20 = 14;
  else
    v20 = 16;
  *(_QWORD *)(v10 + 9680) = *(_QWORD *)(v10 + 6352);
  v21 = *(_DWORD *)(v10 + 6344);
  v22 = *(_QWORD *)(v10 + 9680);
  *(_QWORD *)(v10 + 8160) = v22;
  *(_QWORD *)(v10 + 9600) = v22;
  *(_QWORD *)(v10 + 8168) = v19;
  *(_QWORD *)(v10 + 9608) = v19;
  *(_DWORD *)(v10 + 8828) = *(_DWORD *)(v10 + 8764);
  *(_DWORD *)(v10 + 8860) = *(_DWORD *)(v10 + 8768);
  *(_DWORD *)(v10 + 9656) = *(_DWORD *)(v10 + 9272);
  *(_DWORD *)(v10 + 8980) = *(_DWORD *)(v10 + 8748);
  *(_DWORD *)(v10 + 8792) = *(_DWORD *)(v10 + 8736);
  *(_DWORD *)(v10 + 8816) = *(_DWORD *)(v10 + 8728);
  *(_DWORD *)(v10 + 8628) = *(_DWORD *)(v10 + 8744);
  *(_DWORD *)(v10 + 8968) = *(_DWORD *)(v10 + 8720);
  *(_DWORD *)(v10 + 9256) = *(_DWORD *)(v10 + 8760);
  *(_DWORD *)(v10 + 9480) = *(_DWORD *)(v10 + 8752);
  *(_DWORD *)(v10 + 8868) = *(_DWORD *)(v10 + 8712);
  *(_DWORD *)(v10 + 8840) = *(_DWORD *)(v10 + 8696);
  *(_DWORD *)(v10 + 8152) = v21;
  *(_DWORD *)(v10 + 9664) = v21;
  *(_DWORD *)(v10 + 8864) = *(_DWORD *)(v10 + 8688);
  *(_DWORD *)(v10 + 8808) = *(_DWORD *)(v10 + 8680);
  *(_DWORD *)(v10 + 9056) = *(_DWORD *)(v10 + 9136);
  *(_DWORD *)(v10 + 8848) = *(_DWORD *)(v10 + 8672);
  *(_DWORD *)(v10 + 9632) = *(_DWORD *)(v10 + 9080);
  *(_DWORD *)(v10 + 8992) = *(_DWORD *)(v10 + 8664);
  *(_DWORD *)(v10 + 9172) = *(_DWORD *)(v10 + 9432);
  *(_DWORD *)(v10 + 9616) = v12;
  *(_DWORD *)(v10 + 8548) = v12;
  *(_DWORD *)(v10 + 9624) = *(_DWORD *)(v10 + 9264);
  *(_DWORD *)(v10 + 8776) = *(_DWORD *)(v10 + 8656);
  *(_DWORD *)(v10 + 9004) = *(_DWORD *)(v10 + 8648);
  *(_DWORD *)(v10 + 8784) = *(_DWORD *)(v10 + 8640);
  *(_DWORD *)(v10 + 9156) = *(_DWORD *)(v10 + 9008);
  *(_DWORD *)(v10 + 9224) = *(_DWORD *)(v10 + 9400);
  *(_DWORD *)(v10 + 9064) = *(_DWORD *)(v10 + 8704);
  *(_DWORD *)(v10 + 8280) = v20;
  *(_DWORD *)(v10 + 8544) = *(_DWORD *)(v10 + 9392);
  *(_DWORD *)(v10 + 9240) = *(_DWORD *)(v10 + 9012);
  *(_DWORD *)(v10 + 8800) = *(_DWORD *)(v10 + 8632);
  *(_DWORD *)(v10 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

void sub_100321350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _DWORD *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  int v21;

  v19 = a8 == ((((v8 - 2143486275) | 0x5001014) ^ 0x21) & 0xEF);
  v20 = v13[2014];
  if (v19)
    v20 = v15;
  v13[2002] = v20;
  v21 = v13[1802];
  if (!v19)
    v21 = v15;
  v13[2008] = v13[2020];
  v13[2083] = v14;
  v13[2191] = v13[2207];
  v13[2192] = v13[2215];
  v13[1859] = v10;
  v13[1864] = v18;
  v13[2332] = v13[1828];
  v13[1998] = v13[2016];
  v13[2187] = v13[2245];
  v13[2184] = v13[2198];
  v13[2182] = v13[2204];
  v13[2186] = v13[2157];
  v13[2180] = v13[2242];
  v13[1875] = v17;
  v13[2356] = v16;
  v13[1904] = v12;
  v13[2190] = v13[1836];
  v13[2188] = v13[2034];
  v13[1866] = a7;
  v13[1872] = v11;
  v13[2178] = v13[2217];
  v13[2174] = v13[2210];
  v13[1871] = v13[1824];
  v13[2360] = v13[2276];
  v13[1870] = v13[1826];
  v13[2172] = v13[2216];
  v13[2170] = v13[2202];
  v13[2312] = a6;
  v13[1869] = v13[1822];
  v13[2005] = v13[2010];
  v13[1858] = v13[1854];
  v13[2006] = v13[2029];
  v13[2168] = v13[2212];
  v13[2270] = v13[2268];
  v13[2000] = v13[1832];
  v13[2166] = v13[2248];
  v13[1996] = v13[2068];
  v13[2358] = v13[2293];
  v13[2048] = v13[1778];
  v13[2382] = v21;
  v13[1865] = v13[1852];
  v13[2316] = v13[2406];
  v13[2164] = v13[2194];
  v13[2162] = v13[2251];
  v13[1860] = v13[1790];
  v13[2160] = v13[2196];
  v13[2252] = v13[1830];
  v13[1863] = v13[2434];
  v13[2352] = v13[1834];
  v13[2176] = v13[1800];
  v13[2253] = v9;
  v13[2158] = v13[2200];
  JUMPOUT(0x1002FBA38);
}

void sub_100321520(char a1@<W5>, int a2@<W6>, int a3@<W7>, char a4@<W8>)
{
  int v4;
  _DWORD *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v11 = v5[2014];
  if (a3 == (a1 + a4 - 107))
    v11 = v7;
  v5[2002] = v11;
  v12 = v5[1834];
  if (a3 != (a1 + a4 - 107))
    v12 = v7;
  v5[2352] = v12;
  v5[2008] = v5[2020];
  v5[2083] = v6;
  v5[2191] = v5[2207];
  v5[2192] = v5[2215];
  v5[1859] = v5[1798];
  v5[1864] = v10;
  v5[2332] = v5[1828];
  v5[1998] = v5[2016];
  v5[2187] = v5[2245];
  v5[2184] = v5[2198];
  v5[2182] = v5[2204];
  v5[2186] = v5[2157];
  v5[2180] = v5[2242];
  v5[1875] = v9;
  v5[2356] = v8;
  v5[1904] = v4;
  v5[2190] = v5[1836];
  v5[2188] = v5[2034];
  v5[1866] = v5[1792];
  v5[1872] = v5[1796];
  v5[2178] = v5[2217];
  v5[2174] = v5[2210];
  v5[1871] = v5[1824];
  v5[2360] = v5[2276];
  v5[1870] = v5[1826];
  v5[2172] = v5[2216];
  v5[2170] = v5[2202];
  v5[2312] = a2;
  v5[1869] = v5[1822];
  v5[2005] = v5[2010];
  v5[1858] = v5[1854];
  v5[2006] = v5[2029];
  v5[2168] = v5[2212];
  v5[2270] = v5[2268];
  v5[2000] = v5[1832];
  v5[2166] = v5[2248];
  v5[1996] = v5[2068];
  v5[2358] = v5[2293];
  v5[2048] = v5[1778];
  v5[2382] = v5[1802];
  v5[1865] = v5[1852];
  v5[2316] = v5[2406];
  v5[2164] = v5[2194];
  v5[2162] = v5[2251];
  v5[1860] = v5[1790];
  v5[2160] = v5[2196];
  v5[2252] = v5[1830];
  v5[1863] = v5[2434];
  v5[2176] = v5[1800];
  v5[2253] = v5[2059];
  v5[2158] = v5[2200];
  JUMPOUT(0x1002FBA38);
}

uint64_t sub_1003216E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);

  v16 = *(uint64_t (**)(uint64_t))(a4 + 8
                                               * ((1058 * (a8 == ((v8 ^ (a5 + 58)) ^ 0x1E))) ^ v8));
  *(_QWORD *)(v10 + 9680) = *(_QWORD *)(v10 + 7880);
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 8332) = v11;
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 7436) = *(_DWORD *)(v10 + 7192);
  *(_DWORD *)(v10 + 7456) = v15;
  *(_DWORD *)(v10 + 9328) = *(_DWORD *)(v10 + 7312);
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 7500) = v14;
  *(_DWORD *)(v10 + 9424) = v13;
  *(_DWORD *)(v10 + 7616) = v9;
  *(_DWORD *)(v10 + 8760) = *(_DWORD *)(v10 + 7344);
  *(_DWORD *)(v10 + 8752) = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 7464) = v12;
  *(_DWORD *)(v10 + 7488) = *(_DWORD *)(v10 + 7184);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 7484) = *(_DWORD *)(v10 + 7296);
  *(_DWORD *)(v10 + 7128) = v9;
  *(_DWORD *)(v10 + 9440) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 7480) = *(_DWORD *)(v10 + 7304);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 9248) = a7;
  *(_DWORD *)(v10 + 7476) = *(_DWORD *)(v10 + 7288);
  *(_DWORD *)(v10 + 8020) = *(_DWORD *)(v10 + 8040);
  *(_DWORD *)(v10 + 7432) = *(_DWORD *)(v10 + 7416);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9080) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 8000) = *(_DWORD *)(v10 + 7328);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 0x2000) = *(_DWORD *)(v10 + 7112);
  *(_DWORD *)(v10 + 9528) = *(_DWORD *)(v10 + 7208);
  *(_DWORD *)(v10 + 7460) = *(_DWORD *)(v10 + 7408);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 7440) = *(_DWORD *)(v10 + 7160);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 9008) = *(_DWORD *)(v10 + 7320);
  *(_DWORD *)(v10 + 7452) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9408) = *(_DWORD *)(v10 + 7336);
  *(_DWORD *)(v10 + 8704) = *(_DWORD *)(v10 + 7200);
  *(_DWORD *)(v10 + 9012) = *(_DWORD *)(v10 + 8236);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  return v16(v15);
}

void sub_1003218C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  *(_DWORD *)(v13 + 8032) = *(_DWORD *)(v13 + 8080);
  *(_DWORD *)(v13 + 8332) = *(_DWORD *)(v13 + 8260);
  *(_DWORD *)(v13 + 8764) = *(_DWORD *)(v13 + 8828);
  *(_DWORD *)(v13 + 8768) = *(_DWORD *)(v13 + 8860);
  *(_DWORD *)(v13 + 7436) = a3;
  *(_DWORD *)(v13 + 7456) = a1;
  *(_DWORD *)(v13 + 9328) = a2;
  *(_DWORD *)(v13 + 7992) = *(_DWORD *)(v13 + 8064);
  *(_DWORD *)(v13 + 8748) = *(_DWORD *)(v13 + 8980);
  *(_DWORD *)(v13 + 8736) = *(_DWORD *)(v13 + 8792);
  *(_DWORD *)(v13 + 8728) = *(_DWORD *)(v13 + 8816);
  *(_DWORD *)(v13 + 8744) = *(_DWORD *)(v13 + 8628);
  *(_DWORD *)(v13 + 8720) = *(_DWORD *)(v13 + 8968);
  *(_DWORD *)(v13 + 7500) = v12;
  *(_DWORD *)(v13 + 9424) = v20;
  *(_DWORD *)(v13 + 7616) = *(_DWORD *)(v13 + 7128);
  *(_DWORD *)(v13 + 8760) = *(_DWORD *)(v13 + 7344);
  *(_DWORD *)(v13 + 8752) = *(_DWORD *)(v13 + 8136);
  *(_DWORD *)(v13 + 7464) = v14;
  *(_DWORD *)(v13 + 7488) = a4;
  *(_DWORD *)(v13 + 8712) = *(_DWORD *)(v13 + 8868);
  *(_DWORD *)(v13 + 8696) = *(_DWORD *)(v13 + 8840);
  *(_DWORD *)(v13 + 7484) = a6;
  *(_DWORD *)(v13 + 9440) = *(_DWORD *)(v13 + 9104);
  *(_DWORD *)(v13 + 7480) = a5;
  *(_DWORD *)(v13 + 8688) = *(_DWORD *)(v13 + 8864);
  *(_DWORD *)(v13 + 8680) = *(_DWORD *)(v13 + 8808);
  *(_DWORD *)(v13 + 9248) = a7;
  *(_DWORD *)(v13 + 7476) = v19;
  *(_DWORD *)(v13 + 8020) = *(_DWORD *)(v13 + 8040);
  *(_DWORD *)(v13 + 7432) = v17;
  *(_DWORD *)(v13 + 8024) = *(_DWORD *)(v13 + 8116);
  *(_DWORD *)(v13 + 8672) = *(_DWORD *)(v13 + 8848);
  *(_DWORD *)(v13 + 9080) = *(_DWORD *)(v13 + 9072);
  *(_DWORD *)(v13 + 8000) = v10;
  *(_DWORD *)(v13 + 8664) = *(_DWORD *)(v13 + 8992);
  *(_DWORD *)(v13 + 7984) = *(_DWORD *)(v13 + 8272);
  *(_DWORD *)(v13 + 8008) = *(_DWORD *)(v13 + 8056);
  *(_DWORD *)(v13 + 9432) = *(_DWORD *)(v13 + 9172);
  *(_DWORD *)(v13 + 0x2000) = *(_DWORD *)(v13 + 7112);
  *(_DWORD *)(v13 + 9528) = v8;
  *(_DWORD *)(v13 + 7460) = v18;
  *(_DWORD *)(v13 + 9264) = *(_DWORD *)(v13 + 9624);
  *(_DWORD *)(v13 + 8656) = *(_DWORD *)(v13 + 8776);
  *(_DWORD *)(v13 + 8648) = *(_DWORD *)(v13 + 9004);
  *(_DWORD *)(v13 + 7440) = v16;
  *(_DWORD *)(v13 + 8640) = *(_DWORD *)(v13 + 8784);
  *(_DWORD *)(v13 + 9136) = v7;
  *(_DWORD *)(v13 + 9008) = v11;
  *(_DWORD *)(v13 + 7452) = v15;
  *(_DWORD *)(v13 + 9408) = v9;
  *(_DWORD *)(v13 + 8704) = v22;
  *(_DWORD *)(v13 + 9012) = v21;
  *(_DWORD *)(v13 + 8632) = *(_DWORD *)(v13 + 8800);
  *(_QWORD *)(v13 + 9680) = *(_QWORD *)(v13 + 7880);
  v23 = *(_QWORD *)(v13 + 2200);
  v24 = *(_DWORD *)(v13 + 8312);
  v25 = *(_QWORD *)(v13 + 9680);
  *(_QWORD *)(v13 + 8160) = v25;
  *(_QWORD *)(v13 + 9600) = v25;
  *(_QWORD *)(v13 + 8168) = v23;
  *(_QWORD *)(v13 + 9608) = v23;
  *(_DWORD *)(v13 + 8828) = *(_DWORD *)(v13 + 8764);
  *(_DWORD *)(v13 + 8860) = *(_DWORD *)(v13 + 8768);
  *(_DWORD *)(v13 + 9656) = *(_DWORD *)(v13 + 9272);
  *(_DWORD *)(v13 + 8980) = *(_DWORD *)(v13 + 8748);
  *(_DWORD *)(v13 + 8792) = *(_DWORD *)(v13 + 8736);
  *(_DWORD *)(v13 + 8816) = *(_DWORD *)(v13 + 8728);
  *(_DWORD *)(v13 + 8628) = *(_DWORD *)(v13 + 8744);
  *(_DWORD *)(v13 + 8968) = *(_DWORD *)(v13 + 8720);
  *(_DWORD *)(v13 + 9256) = *(_DWORD *)(v13 + 8760);
  *(_DWORD *)(v13 + 9480) = *(_DWORD *)(v13 + 8752);
  *(_DWORD *)(v13 + 8868) = *(_DWORD *)(v13 + 8712);
  *(_DWORD *)(v13 + 8840) = *(_DWORD *)(v13 + 8696);
  *(_DWORD *)(v13 + 8152) = v24;
  *(_DWORD *)(v13 + 9664) = v24;
  *(_DWORD *)(v13 + 8864) = *(_DWORD *)(v13 + 8688);
  *(_DWORD *)(v13 + 8808) = *(_DWORD *)(v13 + 8680);
  *(_DWORD *)(v13 + 9056) = *(_DWORD *)(v13 + 9136);
  *(_DWORD *)(v13 + 8848) = *(_DWORD *)(v13 + 8672);
  *(_DWORD *)(v13 + 9632) = *(_DWORD *)(v13 + 9080);
  *(_DWORD *)(v13 + 8992) = *(_DWORD *)(v13 + 8664);
  *(_DWORD *)(v13 + 9172) = *(_DWORD *)(v13 + 9432);
  *(_DWORD *)(v13 + 9616) = v7;
  *(_DWORD *)(v13 + 8548) = v7;
  *(_DWORD *)(v13 + 9624) = *(_DWORD *)(v13 + 9264);
  *(_DWORD *)(v13 + 8776) = *(_DWORD *)(v13 + 8656);
  *(_DWORD *)(v13 + 9004) = *(_DWORD *)(v13 + 8648);
  *(_DWORD *)(v13 + 8784) = *(_DWORD *)(v13 + 8640);
  *(_DWORD *)(v13 + 9156) = *(_DWORD *)(v13 + 9008);
  *(_DWORD *)(v13 + 9224) = *(_DWORD *)(v13 + 9400);
  *(_DWORD *)(v13 + 9064) = *(_DWORD *)(v13 + 8704);
  *(_DWORD *)(v13 + 8280) = 27;
  *(_DWORD *)(v13 + 8544) = *(_DWORD *)(v13 + 9392);
  *(_DWORD *)(v13 + 9240) = *(_DWORD *)(v13 + 9012);
  *(_DWORD *)(v13 + 8800) = *(_DWORD *)(v13 + 8632);
  *(_DWORD *)(v13 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

void sub_100321A3C(int a1@<W0>, char a2@<W4>, int a3@<W7>, char a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  int v9;
  _DWORD *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v16 = v10[1800];
  if (a3 != ((a2 + a4 - 1 - 70) ^ v8))
    v16 = v12;
  v10[2176] = v16;
  v10[2008] = v10[2020];
  v10[2083] = v11;
  v10[2191] = v10[2207];
  v10[2192] = v10[2215];
  v10[1859] = v10[1798];
  v10[1864] = v15;
  v10[2332] = v10[1828];
  v10[1998] = v10[2016];
  v10[2187] = v10[2245];
  v10[2184] = v10[2198];
  v10[2182] = v10[2204];
  v10[2186] = v10[2157];
  v10[2180] = v10[2242];
  v10[1875] = v14;
  v10[2356] = v13;
  v10[1904] = v10[1782];
  v10[2190] = v10[1836];
  v10[2188] = v10[2034];
  v10[1866] = v7;
  v10[1872] = v10[1796];
  v10[2178] = v10[2217];
  v10[2174] = v10[2210];
  v10[1871] = v10[1824];
  v10[2360] = v10[2276];
  v10[1870] = v5;
  v10[2172] = v10[2216];
  v10[2170] = v10[2202];
  v10[2312] = v6;
  v10[1869] = v10[1822];
  v10[2005] = v10[2010];
  v10[1858] = v10[1854];
  v10[2006] = v10[2029];
  v10[2168] = v10[2212];
  v10[2270] = v10[2268];
  v10[2000] = v10[1832];
  v10[2166] = v10[2248];
  v10[1996] = v10[2068];
  v10[2002] = v10[2014];
  v10[2358] = v10[2293];
  v10[2048] = v10[1778];
  v10[2382] = v10[1802];
  v10[1865] = v10[1852];
  v10[2316] = v10[2406];
  v10[2164] = v10[2194];
  v10[2162] = v10[2251];
  v10[1860] = a1;
  v10[2160] = v10[2196];
  v10[2252] = v10[1830];
  v10[1863] = v9;
  v10[2352] = v10[1834];
  v10[2253] = v10[2059];
  v10[2158] = v4;
  JUMPOUT(0x1002FBA38);
}

void sub_100321BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  int v21;

  v19 = a8 == (((v8 - 52) | 5) ^ 0x21);
  v20 = *(_DWORD *)(v13 + 8628);
  if (!v19)
    v20 = v15;
  *(_DWORD *)(v13 + 8744) = v20;
  v21 = *(_DWORD *)(v13 + 7344);
  if (v19)
    v21 = v15;
  *(_DWORD *)(v13 + 8760) = v21;
  *(_DWORD *)(v13 + 8032) = *(_DWORD *)(v13 + 8080);
  *(_DWORD *)(v13 + 8332) = v14;
  *(_DWORD *)(v13 + 8764) = *(_DWORD *)(v13 + 8828);
  *(_DWORD *)(v13 + 8768) = *(_DWORD *)(v13 + 8860);
  *(_DWORD *)(v13 + 7436) = *(_DWORD *)(v13 + 7192);
  *(_DWORD *)(v13 + 7456) = v18;
  *(_DWORD *)(v13 + 9328) = *(_DWORD *)(v13 + 7312);
  *(_DWORD *)(v13 + 7992) = *(_DWORD *)(v13 + 8064);
  *(_DWORD *)(v13 + 8748) = *(_DWORD *)(v13 + 8980);
  *(_DWORD *)(v13 + 8736) = *(_DWORD *)(v13 + 8792);
  *(_DWORD *)(v13 + 8728) = *(_DWORD *)(v13 + 8816);
  *(_DWORD *)(v13 + 8720) = *(_DWORD *)(v13 + 8968);
  *(_DWORD *)(v13 + 7500) = v17;
  *(_DWORD *)(v13 + 9424) = v16;
  *(_DWORD *)(v13 + 7616) = *(_DWORD *)(v13 + 7128);
  *(_DWORD *)(v13 + 8752) = *(_DWORD *)(v13 + 8136);
  *(_DWORD *)(v13 + 7464) = v10;
  *(_DWORD *)(v13 + 7488) = *(_DWORD *)(v13 + 7184);
  *(_DWORD *)(v13 + 8712) = *(_DWORD *)(v13 + 8868);
  *(_DWORD *)(v13 + 8696) = *(_DWORD *)(v13 + 8840);
  *(_DWORD *)(v13 + 7484) = *(_DWORD *)(v13 + 7296);
  *(_DWORD *)(v13 + 9440) = *(_DWORD *)(v13 + 9104);
  *(_DWORD *)(v13 + 7480) = *(_DWORD *)(v13 + 7304);
  *(_DWORD *)(v13 + 8688) = *(_DWORD *)(v13 + 8864);
  *(_DWORD *)(v13 + 8680) = *(_DWORD *)(v13 + 8808);
  *(_DWORD *)(v13 + 9248) = v9;
  *(_DWORD *)(v13 + 7476) = *(_DWORD *)(v13 + 7288);
  *(_DWORD *)(v13 + 8020) = *(_DWORD *)(v13 + 8040);
  *(_DWORD *)(v13 + 7432) = *(_DWORD *)(v13 + 7416);
  *(_DWORD *)(v13 + 8024) = *(_DWORD *)(v13 + 8116);
  *(_DWORD *)(v13 + 8672) = *(_DWORD *)(v13 + 8848);
  *(_DWORD *)(v13 + 9080) = *(_DWORD *)(v13 + 9072);
  *(_DWORD *)(v13 + 8000) = *(_DWORD *)(v13 + 7328);
  *(_DWORD *)(v13 + 8664) = *(_DWORD *)(v13 + 8992);
  *(_DWORD *)(v13 + 7984) = *(_DWORD *)(v13 + 8272);
  *(_DWORD *)(v13 + 8008) = *(_DWORD *)(v13 + 8056);
  *(_DWORD *)(v13 + 9432) = *(_DWORD *)(v13 + 9172);
  *(_DWORD *)(v13 + 0x2000) = *(_DWORD *)(v13 + 7112);
  *(_DWORD *)(v13 + 9528) = *(_DWORD *)(v13 + 7208);
  *(_DWORD *)(v13 + 7460) = *(_DWORD *)(v13 + 7408);
  *(_DWORD *)(v13 + 9264) = *(_DWORD *)(v13 + 9624);
  *(_DWORD *)(v13 + 8656) = *(_DWORD *)(v13 + 8776);
  *(_DWORD *)(v13 + 8648) = *(_DWORD *)(v13 + 9004);
  *(_DWORD *)(v13 + 7440) = v12;
  *(_DWORD *)(v13 + 8640) = *(_DWORD *)(v13 + 8784);
  *(_DWORD *)(v13 + 9008) = *(_DWORD *)(v13 + 7320);
  *(_DWORD *)(v13 + 7452) = v11;
  *(_DWORD *)(v13 + 9408) = *(_DWORD *)(v13 + 7336);
  *(_DWORD *)(v13 + 8704) = *(_DWORD *)(v13 + 7200);
  *(_DWORD *)(v13 + 9012) = *(_DWORD *)(v13 + 8236);
  *(_DWORD *)(v13 + 8632) = *(_DWORD *)(v13 + 8800);
  *(_QWORD *)(v13 + 9680) = *(_QWORD *)(v13 + 7512);
  JUMPOUT(0x10032D0F4);
}

void sub_100321DC8(int a1@<W7>, char a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  _DWORD *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned __int8 v12;
  int v13;
  int v14;

  v12 = (a2 - 34) | 0x14;
  if (a1 == (v12 ^ 0x12))
    v13 = v3;
  else
    v13 = v8;
  v6[1869] = v13;
  v14 = v6[2029];
  if (a1 == (v12 ^ 0x12))
    v14 = v8;
  v6[2006] = v14;
  v6[2008] = v6[2020];
  v6[2083] = v7;
  v6[2191] = v6[2207];
  v6[2192] = v6[2215];
  v6[1859] = v6[1798];
  v6[1864] = v11;
  v6[2332] = v6[1828];
  v6[1998] = v6[2016];
  v6[2187] = v6[2245];
  v6[2184] = v6[2198];
  v6[2182] = v6[2204];
  v6[2186] = v6[2157];
  v6[2180] = v6[2242];
  v6[1875] = v10;
  v6[2356] = v9;
  v6[1904] = v5;
  v6[2190] = v6[1836];
  v6[2188] = v6[2034];
  v6[1866] = v6[1792];
  v6[1872] = v6[1796];
  v6[2178] = v6[2217];
  v6[2174] = v6[2210];
  v6[1871] = v6[1824];
  v6[2360] = v6[2276];
  v6[1870] = v6[1826];
  v6[2172] = v6[2216];
  v6[2170] = v6[2202];
  v6[2312] = v6[1794];
  v6[2005] = v6[2010];
  v6[1858] = v2;
  v6[2168] = v6[2212];
  v6[2270] = v6[2268];
  v6[2000] = v6[1832];
  v6[2166] = v6[2248];
  v6[1996] = v6[2068];
  v6[2002] = v6[2014];
  v6[2358] = v6[2293];
  v6[2048] = v6[1778];
  v6[2382] = v6[1802];
  v6[1865] = v4;
  v6[2316] = v6[2406];
  v6[2164] = v6[2194];
  v6[2162] = v6[2251];
  v6[1860] = v6[1790];
  v6[2160] = v6[2196];
  v6[2252] = v6[1830];
  v6[1863] = v6[2434];
  v6[2352] = v6[1834];
  v6[2176] = v6[1800];
  v6[2253] = v6[2059];
  v6[2158] = v6[2200];
  JUMPOUT(0x1002FBA34);
}

uint64_t sub_100321F9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t (*v17)(void);

  v17 = (uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((5938 * (a8 == (((v8 + 78) | 0x17) + 10))) ^ v8))
                          - 8);
  *(_QWORD *)(v11 + 9680) = *(_QWORD *)(v11 + 7880);
  *(_DWORD *)(v11 + 8032) = *(_DWORD *)(v11 + 8080);
  *(_DWORD *)(v11 + 8332) = v12;
  *(_DWORD *)(v11 + 8764) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8768) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 7436) = a3;
  *(_DWORD *)(v11 + 7456) = v16;
  *(_DWORD *)(v11 + 9328) = *(_DWORD *)(v11 + 7312);
  *(_DWORD *)(v11 + 7992) = *(_DWORD *)(v11 + 8064);
  *(_DWORD *)(v11 + 8748) = *(_DWORD *)(v11 + 8980);
  *(_DWORD *)(v11 + 8736) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 8728) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 8720) = *(_DWORD *)(v11 + 8968);
  *(_DWORD *)(v11 + 7500) = v15;
  *(_DWORD *)(v11 + 9424) = v14;
  *(_DWORD *)(v11 + 7616) = v10;
  *(_DWORD *)(v11 + 8760) = *(_DWORD *)(v11 + 7344);
  *(_DWORD *)(v11 + 8752) = *(_DWORD *)(v11 + 8136);
  *(_DWORD *)(v11 + 7464) = a7;
  *(_DWORD *)(v11 + 7488) = a5;
  *(_DWORD *)(v11 + 8712) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 7484) = *(_DWORD *)(v11 + 7296);
  *(_DWORD *)(v11 + 9440) = *(_DWORD *)(v11 + 9104);
  *(_DWORD *)(v11 + 9008) = *(_DWORD *)(v11 + 7320);
  *(_DWORD *)(v11 + 7480) = *(_DWORD *)(v11 + 7304);
  *(_DWORD *)(v11 + 8688) = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 9248) = a6;
  *(_DWORD *)(v11 + 7476) = *(_DWORD *)(v11 + 7288);
  *(_DWORD *)(v11 + 8020) = *(_DWORD *)(v11 + 8040);
  *(_DWORD *)(v11 + 7432) = *(_DWORD *)(v11 + 7416);
  *(_DWORD *)(v11 + 8024) = *(_DWORD *)(v11 + 8116);
  *(_DWORD *)(v11 + 8672) = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 9080) = *(_DWORD *)(v11 + 9072);
  *(_DWORD *)(v11 + 8000) = *(_DWORD *)(v11 + 7328);
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 7984) = *(_DWORD *)(v11 + 8272);
  *(_DWORD *)(v11 + 8008) = *(_DWORD *)(v11 + 8056);
  *(_DWORD *)(v11 + 9432) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 0x2000) = *(_DWORD *)(v11 + 7112);
  *(_DWORD *)(v11 + 9528) = *(_DWORD *)(v11 + 7208);
  *(_DWORD *)(v11 + 7460) = *(_DWORD *)(v11 + 7408);
  *(_DWORD *)(v11 + 9264) = *(_DWORD *)(v11 + 9624);
  *(_DWORD *)(v11 + 8656) = v13;
  *(_DWORD *)(v11 + 8648) = *(_DWORD *)(v11 + 9004);
  *(_DWORD *)(v11 + 7440) = *(_DWORD *)(v11 + 7160);
  *(_DWORD *)(v11 + 8640) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 8608) = v13;
  *(_DWORD *)(v11 + 7452) = *(_DWORD *)(v11 + 9736);
  *(_DWORD *)(v11 + 9408) = *(_DWORD *)(v11 + 7336);
  *(_DWORD *)(v11 + 8704) = *(_DWORD *)(v11 + 7200);
  *(_DWORD *)(v11 + 9012) = v9;
  *(_DWORD *)(v11 + 8632) = *(_DWORD *)(v11 + 8800);
  return v17();
}

void sub_100322184(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  *(_DWORD *)(v12 + 8032) = *(_DWORD *)(v12 + 8080);
  *(_DWORD *)(v12 + 8332) = *(_DWORD *)(v12 + 8260);
  *(_DWORD *)(v12 + 8764) = *(_DWORD *)(v12 + 8828);
  *(_DWORD *)(v12 + 8768) = *(_DWORD *)(v12 + 8860);
  *(_DWORD *)(v12 + 7436) = a3;
  *(_DWORD *)(v12 + 7456) = v11;
  *(_DWORD *)(v12 + 9328) = a1;
  *(_DWORD *)(v12 + 7992) = *(_DWORD *)(v12 + 8064);
  *(_DWORD *)(v12 + 8748) = *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 8736) = *(_DWORD *)(v12 + 8792);
  *(_DWORD *)(v12 + 8728) = *(_DWORD *)(v12 + 8816);
  *(_DWORD *)(v12 + 8744) = *(_DWORD *)(v12 + 8628);
  *(_DWORD *)(v12 + 8720) = *(_DWORD *)(v12 + 8968);
  *(_DWORD *)(v12 + 7500) = v10;
  *(_DWORD *)(v12 + 9424) = v19;
  *(_DWORD *)(v12 + 7616) = v14;
  *(_DWORD *)(v12 + 8760) = *(_DWORD *)(v12 + 7344);
  *(_DWORD *)(v12 + 8752) = *(_DWORD *)(v12 + 8136);
  *(_DWORD *)(v12 + 7464) = a7;
  *(_DWORD *)(v12 + 7488) = a5;
  *(_DWORD *)(v12 + 8712) = *(_DWORD *)(v12 + 8868);
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v12 + 8840);
  *(_DWORD *)(v12 + 7484) = a4;
  *(_DWORD *)(v12 + 9440) = *(_DWORD *)(v12 + 9104);
  *(_DWORD *)(v12 + 7480) = a2;
  *(_DWORD *)(v12 + 8688) = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 8680) = *(_DWORD *)(v12 + 8808);
  *(_DWORD *)(v12 + 9248) = a6;
  *(_DWORD *)(v12 + 7476) = v16;
  *(_DWORD *)(v12 + 8020) = *(_DWORD *)(v12 + 8040);
  *(_DWORD *)(v12 + 7432) = v15;
  *(_DWORD *)(v12 + 8024) = *(_DWORD *)(v12 + 8116);
  *(_DWORD *)(v12 + 8672) = *(_DWORD *)(v12 + 8848);
  *(_DWORD *)(v12 + 9080) = *(_DWORD *)(v12 + 9072);
  *(_DWORD *)(v12 + 8000) = v9;
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 7984) = *(_DWORD *)(v12 + 8272);
  *(_DWORD *)(v12 + 8008) = *(_DWORD *)(v12 + 8056);
  *(_DWORD *)(v12 + 9432) = *(_DWORD *)(v12 + 9172);
  *(_DWORD *)(v12 + 0x2000) = *(_DWORD *)(v12 + 7112);
  *(_DWORD *)(v12 + 9528) = v20;
  *(_DWORD *)(v12 + 7460) = v17;
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8656) = *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 8648) = *(_DWORD *)(v12 + 9004);
  *(_DWORD *)(v12 + 7440) = v18;
  *(_DWORD *)(v12 + 8640) = *(_DWORD *)(v12 + 8784);
  v22 = *(_DWORD *)(v12 + 8608);
  *(_DWORD *)(v12 + 9008) = v22;
  *(_DWORD *)(v12 + 7452) = v13;
  *(_DWORD *)(v12 + 9408) = v7;
  *(_DWORD *)(v12 + 8704) = v21;
  *(_DWORD *)(v12 + 9012) = v8;
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 9680) = *(_QWORD *)(v12 + 7880);
  v23 = *(_QWORD *)(v12 + 2224);
  v24 = *(_DWORD *)(v12 + 8312);
  v25 = *(_QWORD *)(v12 + 9680);
  *(_QWORD *)(v12 + 8160) = v25;
  *(_QWORD *)(v12 + 9600) = v25;
  *(_QWORD *)(v12 + 8168) = v23;
  *(_QWORD *)(v12 + 9608) = v23;
  *(_DWORD *)(v12 + 8828) = *(_DWORD *)(v12 + 8764);
  *(_DWORD *)(v12 + 8860) = *(_DWORD *)(v12 + 8768);
  *(_DWORD *)(v12 + 9656) = *(_DWORD *)(v12 + 9272);
  *(_DWORD *)(v12 + 8980) = *(_DWORD *)(v12 + 8748);
  *(_DWORD *)(v12 + 8792) = *(_DWORD *)(v12 + 8736);
  *(_DWORD *)(v12 + 8816) = *(_DWORD *)(v12 + 8728);
  *(_DWORD *)(v12 + 8628) = *(_DWORD *)(v12 + 8744);
  *(_DWORD *)(v12 + 8968) = *(_DWORD *)(v12 + 8720);
  *(_DWORD *)(v12 + 9256) = *(_DWORD *)(v12 + 8760);
  *(_DWORD *)(v12 + 9480) = *(_DWORD *)(v12 + 8752);
  *(_DWORD *)(v12 + 8868) = *(_DWORD *)(v12 + 8712);
  *(_DWORD *)(v12 + 8840) = *(_DWORD *)(v12 + 8696);
  *(_DWORD *)(v12 + 8152) = v24;
  *(_DWORD *)(v12 + 9664) = v24;
  *(_DWORD *)(v12 + 8864) = *(_DWORD *)(v12 + 8688);
  *(_DWORD *)(v12 + 8808) = *(_DWORD *)(v12 + 8680);
  *(_DWORD *)(v12 + 9056) = *(_DWORD *)(v12 + 9136);
  *(_DWORD *)(v12 + 8848) = *(_DWORD *)(v12 + 8672);
  *(_DWORD *)(v12 + 9632) = *(_DWORD *)(v12 + 9080);
  *(_DWORD *)(v12 + 8992) = *(_DWORD *)(v12 + 8664);
  *(_DWORD *)(v12 + 9172) = *(_DWORD *)(v12 + 9432);
  *(_DWORD *)(v12 + 9616) = v22;
  *(_DWORD *)(v12 + 8548) = v22;
  *(_DWORD *)(v12 + 9624) = *(_DWORD *)(v12 + 9264);
  *(_DWORD *)(v12 + 8776) = *(_DWORD *)(v12 + 8656);
  *(_DWORD *)(v12 + 9004) = *(_DWORD *)(v12 + 8648);
  *(_DWORD *)(v12 + 8784) = *(_DWORD *)(v12 + 8640);
  *(_DWORD *)(v12 + 9156) = *(_DWORD *)(v12 + 9008);
  *(_DWORD *)(v12 + 9224) = *(_DWORD *)(v12 + 9400);
  *(_DWORD *)(v12 + 9064) = *(_DWORD *)(v12 + 8704);
  *(_DWORD *)(v12 + 8280) = 51;
  *(_DWORD *)(v12 + 8544) = *(_DWORD *)(v12 + 9392);
  *(_DWORD *)(v12 + 9240) = *(_DWORD *)(v12 + 9012);
  *(_DWORD *)(v12 + 8800) = *(_DWORD *)(v12 + 8632);
  *(_DWORD *)(v12 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_1003222F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t (*v16)(void);

  v16 = (uint64_t (*)(void))(*(_QWORD *)(a4
                                      + 8 * ((6993 * (a8 == (((v8 + 85) | 6) ^ 6))) ^ (v8 - 5130)))
                          - 8);
  *(_QWORD *)(v10 + 9680) = *(_QWORD *)(v10 + 7880);
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 8332) = v11;
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 7436) = *(_DWORD *)(v10 + 7192);
  *(_DWORD *)(v10 + 7456) = v15;
  *(_DWORD *)(v10 + 9328) = *(_DWORD *)(v10 + 7312);
  *(_DWORD *)(v10 + 7992) = *(_DWORD *)(v10 + 8064);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 7500) = v14;
  *(_DWORD *)(v10 + 9424) = v13;
  *(_DWORD *)(v10 + 7616) = v9;
  *(_DWORD *)(v10 + 8760) = *(_DWORD *)(v10 + 7344);
  *(_DWORD *)(v10 + 8752) = *(_DWORD *)(v10 + 8136);
  *(_DWORD *)(v10 + 7464) = *(_DWORD *)(v10 + 7168);
  *(_DWORD *)(v10 + 7488) = *(_DWORD *)(v10 + 7184);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 7484) = *(_DWORD *)(v10 + 7296);
  *(_DWORD *)(v10 + 9440) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 9528) = *(_DWORD *)(v10 + 7208);
  *(_DWORD *)(v10 + 7480) = *(_DWORD *)(v10 + 7304);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 9248) = a7;
  *(_DWORD *)(v10 + 7476) = *(_DWORD *)(v10 + 7288);
  *(_DWORD *)(v10 + 8020) = v12;
  *(_DWORD *)(v10 + 7432) = *(_DWORD *)(v10 + 7416);
  *(_DWORD *)(v10 + 8024) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9080) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 8000) = *(_DWORD *)(v10 + 7328);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 7984) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8008) = *(_DWORD *)(v10 + 8056);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 0x2000) = *(_DWORD *)(v10 + 7112);
  *(_DWORD *)(v10 + 7460) = *(_DWORD *)(v10 + 7408);
  *(_DWORD *)(v10 + 9264) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 7440) = *(_DWORD *)(v10 + 7160);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 8608) = v12;
  *(_DWORD *)(v10 + 9008) = *(_DWORD *)(v10 + 7320);
  *(_DWORD *)(v10 + 7452) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9408) = *(_DWORD *)(v10 + 7336);
  *(_DWORD *)(v10 + 8704) = *(_DWORD *)(v10 + 7200);
  *(_DWORD *)(v10 + 9012) = *(_DWORD *)(v10 + 8236);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  return v16();
}

void sub_1003224F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  *(_DWORD *)(v12 + 8032) = *(_DWORD *)(v12 + 8080);
  *(_DWORD *)(v12 + 8332) = *(_DWORD *)(v12 + 8260);
  *(_DWORD *)(v12 + 8764) = *(_DWORD *)(v12 + 8828);
  *(_DWORD *)(v12 + 8768) = *(_DWORD *)(v12 + 8860);
  *(_DWORD *)(v12 + 7436) = a2;
  *(_DWORD *)(v12 + 7456) = v11;
  *(_DWORD *)(v12 + 9328) = a1;
  *(_DWORD *)(v12 + 7992) = *(_DWORD *)(v12 + 8064);
  *(_DWORD *)(v12 + 8748) = *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 8736) = *(_DWORD *)(v12 + 8792);
  *(_DWORD *)(v12 + 8728) = *(_DWORD *)(v12 + 8816);
  *(_DWORD *)(v12 + 8744) = *(_DWORD *)(v12 + 8628);
  *(_DWORD *)(v12 + 8720) = *(_DWORD *)(v12 + 8968);
  *(_DWORD *)(v12 + 7500) = v10;
  *(_DWORD *)(v12 + 9424) = v19;
  *(_DWORD *)(v12 + 7616) = v14;
  *(_DWORD *)(v12 + 8760) = *(_DWORD *)(v12 + 7344);
  *(_DWORD *)(v12 + 8752) = *(_DWORD *)(v12 + 8136);
  *(_DWORD *)(v12 + 7464) = a6;
  *(_DWORD *)(v12 + 7488) = a3;
  *(_DWORD *)(v12 + 8712) = *(_DWORD *)(v12 + 8868);
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v12 + 8840);
  *(_DWORD *)(v12 + 7484) = a5;
  *(_DWORD *)(v12 + 9440) = *(_DWORD *)(v12 + 9104);
  *(_DWORD *)(v12 + 7480) = a4;
  *(_DWORD *)(v12 + 8688) = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 8680) = *(_DWORD *)(v12 + 8808);
  *(_DWORD *)(v12 + 9248) = a7;
  *(_DWORD *)(v12 + 7476) = v16;
  *(_DWORD *)(v12 + 8020) = *(_DWORD *)(v12 + 8040);
  *(_DWORD *)(v12 + 7432) = v15;
  *(_DWORD *)(v12 + 8024) = *(_DWORD *)(v12 + 8116);
  *(_DWORD *)(v12 + 8672) = *(_DWORD *)(v12 + 8848);
  *(_DWORD *)(v12 + 9080) = *(_DWORD *)(v12 + 9072);
  *(_DWORD *)(v12 + 8000) = v8;
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 7984) = *(_DWORD *)(v12 + 8272);
  *(_DWORD *)(v12 + 8008) = *(_DWORD *)(v12 + 8056);
  *(_DWORD *)(v12 + 9432) = *(_DWORD *)(v12 + 9172);
  *(_DWORD *)(v12 + 0x2000) = *(_DWORD *)(v12 + 7112);
  *(_DWORD *)(v12 + 7460) = v17;
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8656) = *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 8648) = *(_DWORD *)(v12 + 9004);
  *(_DWORD *)(v12 + 7440) = v18;
  *(_DWORD *)(v12 + 8640) = *(_DWORD *)(v12 + 8784);
  v22 = *(_DWORD *)(v12 + 8608);
  *(_DWORD *)(v12 + 9528) = v22;
  *(_DWORD *)(v12 + 9008) = v9;
  *(_DWORD *)(v12 + 7452) = v13;
  *(_DWORD *)(v12 + 9408) = v7;
  *(_DWORD *)(v12 + 8704) = v21;
  *(_DWORD *)(v12 + 9012) = v20;
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 9680) = *(_QWORD *)(v12 + 7880);
  v23 = *(_QWORD *)(v12 + 7736);
  v24 = *(_DWORD *)(v12 + 8312);
  v25 = *(_QWORD *)(v12 + 9680);
  *(_QWORD *)(v12 + 8160) = v25;
  *(_QWORD *)(v12 + 9600) = v25;
  *(_QWORD *)(v12 + 8168) = v23;
  *(_QWORD *)(v12 + 9608) = v23;
  *(_DWORD *)(v12 + 8828) = *(_DWORD *)(v12 + 8764);
  *(_DWORD *)(v12 + 8860) = *(_DWORD *)(v12 + 8768);
  *(_DWORD *)(v12 + 9656) = *(_DWORD *)(v12 + 9272);
  *(_DWORD *)(v12 + 8980) = *(_DWORD *)(v12 + 8748);
  *(_DWORD *)(v12 + 8792) = *(_DWORD *)(v12 + 8736);
  *(_DWORD *)(v12 + 8816) = *(_DWORD *)(v12 + 8728);
  *(_DWORD *)(v12 + 8628) = *(_DWORD *)(v12 + 8744);
  *(_DWORD *)(v12 + 8968) = *(_DWORD *)(v12 + 8720);
  *(_DWORD *)(v12 + 9256) = *(_DWORD *)(v12 + 8760);
  *(_DWORD *)(v12 + 9480) = *(_DWORD *)(v12 + 8752);
  *(_DWORD *)(v12 + 8868) = *(_DWORD *)(v12 + 8712);
  *(_DWORD *)(v12 + 8840) = *(_DWORD *)(v12 + 8696);
  *(_DWORD *)(v12 + 8152) = v24;
  *(_DWORD *)(v12 + 9664) = v24;
  *(_DWORD *)(v12 + 8864) = *(_DWORD *)(v12 + 8688);
  *(_DWORD *)(v12 + 8808) = *(_DWORD *)(v12 + 8680);
  *(_DWORD *)(v12 + 9056) = *(_DWORD *)(v12 + 9136);
  *(_DWORD *)(v12 + 8848) = *(_DWORD *)(v12 + 8672);
  *(_DWORD *)(v12 + 9632) = *(_DWORD *)(v12 + 9080);
  *(_DWORD *)(v12 + 8992) = *(_DWORD *)(v12 + 8664);
  *(_DWORD *)(v12 + 9172) = *(_DWORD *)(v12 + 9432);
  *(_DWORD *)(v12 + 9616) = v22;
  *(_DWORD *)(v12 + 8548) = v22;
  *(_DWORD *)(v12 + 9624) = *(_DWORD *)(v12 + 9264);
  *(_DWORD *)(v12 + 8776) = *(_DWORD *)(v12 + 8656);
  *(_DWORD *)(v12 + 9004) = *(_DWORD *)(v12 + 8648);
  *(_DWORD *)(v12 + 8784) = *(_DWORD *)(v12 + 8640);
  *(_DWORD *)(v12 + 9156) = *(_DWORD *)(v12 + 9008);
  *(_DWORD *)(v12 + 9224) = *(_DWORD *)(v12 + 9400);
  *(_DWORD *)(v12 + 9064) = *(_DWORD *)(v12 + 8704);
  *(_DWORD *)(v12 + 8280) = 35;
  *(_DWORD *)(v12 + 8544) = *(_DWORD *)(v12 + 9392);
  *(_DWORD *)(v12 + 9240) = *(_DWORD *)(v12 + 9012);
  *(_DWORD *)(v12 + 8800) = *(_DWORD *)(v12 + 8632);
  *(_DWORD *)(v12 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_100322660@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v13 = (a5 + 613502245) & 0x5B6E9DF3;
  v14 = (v13 - v6 + 805347434) & 0xCFFF52F7;
  *(_QWORD *)(v7 + 9416) = v14;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)(((v14 ^ (a2 - 2310)) * (a4 == 61)) ^ v13)) - 8);
  *(_DWORD *)(v7 + 8032) = *(_DWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8332) = v8;
  *(_DWORD *)(v7 + 7436) = *(_DWORD *)(v7 + 7192);
  *(_DWORD *)(v7 + 7456) = v12;
  *(_DWORD *)(v7 + 9328) = *(_DWORD *)(v7 + 7312);
  *(_DWORD *)(v7 + 7992) = *(_DWORD *)(v7 + 8064);
  *(_DWORD *)(v7 + 7500) = v11;
  *(_DWORD *)(v7 + 9424) = v10;
  *(_DWORD *)(v7 + 7616) = *(_DWORD *)(v7 + 7128);
  *(_DWORD *)(v7 + 7464) = *(_DWORD *)(v7 + 7168);
  *(_DWORD *)(v7 + 7488) = *(_DWORD *)(v7 + 7184);
  *(_DWORD *)(v7 + 7484) = *(_DWORD *)(v7 + 7296);
  *(_DWORD *)(v7 + 7480) = *(_DWORD *)(v7 + 7304);
  *(_DWORD *)(v7 + 9248) = *(_DWORD *)(v7 + 7176);
  *(_DWORD *)(v7 + 7476) = *(_DWORD *)(v7 + 7288);
  *(_DWORD *)(v7 + 8020) = *(_DWORD *)(v7 + 8040);
  *(_DWORD *)(v7 + 7432) = *(_DWORD *)(v7 + 7416);
  *(_DWORD *)(v7 + 8024) = *(_DWORD *)(v7 + 8116);
  *(_DWORD *)(v7 + 8000) = *(_DWORD *)(v7 + 7328);
  *(_DWORD *)(v7 + 7984) = *(_DWORD *)(v7 + 8272);
  *(_DWORD *)(v7 + 8008) = *(_DWORD *)(v7 + 8056);
  *(_DWORD *)(v7 + 0x2000) = *(_DWORD *)(v7 + 7112);
  *(_DWORD *)(v7 + 7460) = *(_DWORD *)(v7 + 7408);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 7440) = *(_DWORD *)(v7 + 7160);
  *(_DWORD *)(v7 + 7452) = *(_DWORD *)(v7 + 9736);
  *(_DWORD *)(v7 + 9012) = *(_DWORD *)(v7 + 8236);
  *(_DWORD *)(v7 + 8548) = *(_DWORD *)(v7 + 6744);
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 7344);
  v16 = *(_DWORD *)(v7 + 8136);
  *(_DWORD *)(v7 + 8752) = v16;
  *(_DWORD *)(v7 + 9480) = v16;
  *(_DWORD *)(v7 + 8456) = a3;
  v17 = *(_DWORD *)(v7 + 7208);
  *(_DWORD *)(v7 + 9528) = v17;
  *(_DWORD *)(v7 + 8496) = v17;
  v18 = *(_DWORD *)(v7 + 7320);
  *(_DWORD *)(v7 + 9008) = v18;
  *(_DWORD *)(v7 + 9156) = v18;
  v19 = *(_DWORD *)(v7 + 7336);
  *(_DWORD *)(v7 + 9408) = v19;
  *(_DWORD *)(v7 + 8552) = v19;
  v20 = *(_DWORD *)(v7 + 7200);
  *(_DWORD *)(v7 + 8704) = v20;
  *(_DWORD *)(v7 + 9064) = v20;
  *(_DWORD *)(v7 + 8280) = *(_DWORD *)(v7 + 6760);
  *(_DWORD *)(v7 + 8440) = 90;
  *(_QWORD *)(v7 + 9680) = *(_QWORD *)(v7 + 5952);
  *(_DWORD *)(v7 + 8764) = *(_DWORD *)(v7 + 8828);
  *(_DWORD *)(v7 + 8768) = *(_DWORD *)(v7 + 8860);
  *(_DWORD *)(v7 + 8748) = *(_DWORD *)(v7 + 8980);
  *(_DWORD *)(v7 + 8736) = *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8728) = *(_DWORD *)(v7 + 8816);
  *(_DWORD *)(v7 + 8744) = *(_DWORD *)(v7 + 8628);
  *(_DWORD *)(v7 + 8720) = *(_DWORD *)(v7 + 8968);
  *(_DWORD *)(v7 + 8760) = v9;
  *(_DWORD *)(v7 + 8712) = *(_DWORD *)(v7 + 8868);
  *(_DWORD *)(v7 + 8696) = *(_DWORD *)(v7 + 8840);
  *(_DWORD *)(v7 + 9440) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 8688) = *(_DWORD *)(v7 + 8864);
  *(_DWORD *)(v7 + 8680) = *(_DWORD *)(v7 + 8808);
  *(_DWORD *)(v7 + 8672) = *(_DWORD *)(v7 + 8848);
  *(_DWORD *)(v7 + 9080) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 8664) = *(_DWORD *)(v7 + 8992);
  *(_DWORD *)(v7 + 9432) = *(_DWORD *)(v7 + 9172);
  *(_DWORD *)(v7 + 8656) = *(_DWORD *)(v7 + 8776);
  *(_DWORD *)(v7 + 8648) = *(_DWORD *)(v7 + 9004);
  *(_DWORD *)(v7 + 8640) = *(_DWORD *)(v7 + 8784);
  *(_DWORD *)(v7 + 8608) = v9;
  *(_DWORD *)(v7 + 8632) = v5;
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 9568);
  *(_QWORD *)(v7 + 8576) = *(_QWORD *)(v7 + 8888);
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 9200);
  *(_QWORD *)(v7 + 8936) = *(_QWORD *)(v7 + 8880);
  *(_DWORD *)(v7 + 9128) = *(_DWORD *)(v7 + 8312);
  *(_DWORD *)(v7 + 9116) = *(_DWORD *)(v7 + 9448);
  *(_DWORD *)(v7 + 8832) = *(_DWORD *)(v7 + 9384);
  *(_DWORD *)(v7 + 9152) = *(_DWORD *)(v7 + 8964);
  *(_DWORD *)(v7 + 8368) = *(_DWORD *)(v7 + 9520);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 8912) = *(_DWORD *)(v7 + 8872);
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 9056) = *(_DWORD *)(v7 + 9136);
  *(_DWORD *)(v7 + 8920) = *(_DWORD *)(v7 + 9160);
  *(_DWORD *)(v7 + 8904) = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 9224) = *(_DWORD *)(v7 + 9400);
  *(_DWORD *)(v7 + 8900) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 9184) = *(_DWORD *)(v7 + 9584);
  *(_DWORD *)(v7 + 8572) = *(_DWORD *)(v7 + 8984);
  *(_DWORD *)(v7 + 8544) = *(_DWORD *)(v7 + 9392);
  *(_DWORD *)(v7 + 8352) = *(_DWORD *)(v7 + 9040);
  *(_DWORD *)(v7 + 8932) = *(_DWORD *)(v7 + 8612);
  return v15();
}

void sub_100322998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  __int16 v8;
  int v9;
  int v10;
  _DWORD *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  int v19;

  v17 = a8 == (((v8 + 12954) & 0xD857 ^ 0x19) & 0x7FF);
  v18 = v11[2020];
  if (v17)
    v18 = v13;
  v11[2008] = v18;
  v19 = v11[2016];
  if (!v17)
    v19 = v13;
  v11[1998] = v19;
  v11[2083] = v12;
  v11[2191] = v11[2207];
  v11[2192] = v11[2215];
  v11[1859] = v11[1798];
  v11[1864] = v16;
  v11[2332] = v11[1828];
  v11[2187] = v11[2245];
  v11[2184] = v11[2198];
  v11[2182] = v11[2204];
  v11[2186] = v11[2157];
  v11[2180] = v11[2242];
  v11[1875] = v15;
  v11[2356] = v14;
  v11[1904] = v10;
  v11[2190] = v11[1836];
  v11[2188] = v11[2034];
  v11[1866] = v11[1792];
  v11[1872] = v11[1796];
  v11[2178] = v11[2217];
  v11[2174] = v11[2210];
  v11[1871] = v11[1824];
  v11[2360] = v11[2276];
  v11[1870] = v11[1826];
  v11[2172] = v11[2216];
  v11[2170] = v11[2202];
  v11[2312] = a7;
  v11[1869] = v11[1822];
  v11[2005] = v11[2010];
  v11[1858] = v11[1854];
  v11[2006] = v11[2029];
  v11[2168] = v11[2212];
  v11[2270] = v11[2268];
  v11[2000] = v11[1832];
  v11[2166] = v11[2248];
  v11[1996] = v11[2068];
  v11[2002] = v11[2014];
  v11[2358] = v11[2293];
  v11[2048] = v11[1778];
  v11[2382] = v11[1802];
  v11[1865] = v11[1852];
  v11[2316] = v11[2406];
  v11[2164] = v11[2194];
  v11[2162] = v11[2251];
  v11[1860] = v11[1790];
  v11[2160] = v11[2196];
  v11[2252] = v11[1830];
  v11[1863] = v11[2434];
  v11[2352] = v11[1834];
  v11[2176] = v11[1800];
  v11[2253] = v11[2059];
  v11[2158] = v9;
  JUMPOUT(0x1002FBA38);
}

void sub_100322B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, int a6, int a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  _DWORD *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned __int8 v18;
  int v19;
  int v20;

  v18 = a5 + v8 - 70;
  v19 = v12[771];
  if (a8 == (v18 ^ 0x3A))
    v19 = v14;
  v12[771] = v19;
  v20 = v12[1832];
  if (a8 != (v18 ^ 0x3A))
    v20 = v14;
  v12[2000] = v20;
  v12[2008] = v12[2020];
  v12[2083] = v13;
  v12[2191] = v12[2207];
  v12[2192] = v12[2215];
  v12[1859] = v12[1798];
  v12[1864] = v17;
  v12[2332] = v12[1828];
  v12[1998] = v12[2016];
  v12[2187] = v12[2245];
  v12[2184] = v12[2198];
  v12[2182] = v12[2204];
  v12[2186] = v12[2157];
  v12[2180] = v12[2242];
  v12[1875] = v16;
  v12[2356] = v15;
  v12[1904] = v11;
  v12[2190] = v12[1836];
  v12[2188] = v12[2034];
  v12[1866] = a7;
  v12[1872] = v12[1796];
  v12[2178] = v12[2217];
  v12[2174] = v12[2210];
  v12[1871] = v12[1824];
  v12[2360] = v12[2276];
  v12[1870] = v10;
  v12[2172] = v12[2216];
  v12[2170] = v12[2202];
  v12[2312] = a6;
  v12[1869] = v12[1822];
  v12[2005] = v12[2010];
  v12[1858] = v12[1854];
  v12[2006] = v12[2029];
  v12[2168] = v12[2212];
  v12[2270] = v12[2268];
  v12[2166] = v12[2248];
  v12[1996] = v12[2068];
  v12[2002] = v12[2014];
  v12[2358] = v12[2293];
  v12[2048] = v12[1778];
  v12[2382] = v12[1802];
  v12[1865] = v12[1852];
  v12[2316] = v12[2406];
  v12[2164] = v12[2194];
  v12[2162] = v12[2251];
  v12[1860] = v12[1790];
  v12[2160] = v12[2196];
  v12[2252] = v12[1830];
  v12[1863] = v12[2434];
  v12[2352] = v12[1834];
  v12[2176] = v12[1800];
  v12[2253] = v12[2059];
  v12[2158] = v9;
  JUMPOUT(0x1002FBA34);
}

void sub_100322D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _DWORD *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v19 = v13[1796];
  if (a8 != ((((v8 - 70) & 0x37) + 6) & 0x3F))
    v19 = v15;
  v13[1872] = v19;
  v20 = v13[2010];
  if (a8 == ((((v8 - 70) & 0x37) + 6) & 0x3F))
    v20 = v15;
  v13[2005] = v20;
  v13[2008] = v13[2020];
  v13[2083] = v14;
  v13[2191] = v13[2207];
  v13[2192] = v13[2215];
  v13[1859] = v13[1798];
  v13[1864] = v18;
  v13[2332] = v13[1828];
  v13[1998] = v13[2016];
  v13[2187] = v13[2245];
  v13[2184] = v13[2198];
  v13[2182] = v13[2204];
  v13[2186] = v13[2157];
  v13[2180] = v13[2242];
  v13[1875] = v17;
  v13[2356] = v16;
  v13[1904] = v13[1782];
  v13[2190] = v13[1836];
  v13[2188] = v13[2034];
  v13[1866] = v9;
  v13[2178] = v13[2217];
  v13[2174] = v13[2210];
  v13[1871] = v13[1824];
  v13[2360] = v13[2276];
  v13[1870] = v13[1826];
  v13[2172] = v13[2216];
  v13[2170] = v13[2202];
  v13[2312] = v11;
  v13[1869] = v13[1822];
  v13[1858] = v13[1854];
  v13[2006] = v13[2029];
  v13[2168] = v13[2212];
  v13[2270] = v13[2268];
  v13[2000] = v13[1832];
  v13[2166] = v13[2248];
  v13[1996] = v13[2068];
  v13[2002] = v13[2014];
  v13[2358] = v13[2293];
  v13[2048] = v13[1778];
  v13[2382] = v13[1802];
  v13[1865] = v13[1852];
  v13[2316] = v13[2406];
  v13[2164] = v13[2194];
  v13[2162] = v13[2251];
  v13[1860] = v12;
  v13[2160] = v13[2196];
  v13[2252] = v13[1830];
  v13[1863] = v10;
  v13[2352] = v13[1834];
  v13[2176] = v13[1800];
  v13[2253] = v13[2059];
  v13[2158] = v13[2200];
  JUMPOUT(0x1002FBA34);
}

uint64_t sub_100322EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t (*v13)(void);

  *(_BYTE *)(a1 + 3920) = a7 ^ 0xF4;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * ((12182
                                        * ((((v7 ^ 0x954) - 1757) ^ 0x7A8u) + v10 - 1302587220 >= (((((v7 ^ 0x954) - 1060548591) & 0x3F36ABFF)
                                                                                                  - v8
                                                                                                  - 2410) ^ (v12 + 8)))) ^ ((v7 ^ 0x954) - 1757)))
                          - 8);
  *(_DWORD *)(v9 + 9688) = 12;
  return v13();
}

uint64_t sub_100322F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)(v7 + 7792) = 0;
  *(_DWORD *)(v7 + 7776) = 0;
  *(_DWORD *)(v7 + 9496) = 0;
  *(_DWORD *)(v7 + 9576) = 0;
  *(_DWORD *)(v7 + 9456) = 0;
  *(_DWORD *)(v7 + 9488) = 0;
  *(_DWORD *)(v7 + 9472) = 0;
  v8 = (v6 - 2059597979);
  *(_QWORD *)(v7 + 9416) = v8;
  v9 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 + 9744)
                                                                                             + 8
                                                                                             * ((1616
                                                                                               * ((*(_DWORD *)(*(_QWORD *)(v7 + 8248) + 14448) & 1) == (v8 ^ 0x853D1017))) ^ v6));
  *(_DWORD *)(v7 + 8440) = 65;
  v10 = *(_QWORD *)(v7 + 7568);
  v11 = *(unsigned int *)(v7 + 9120);
  *(_DWORD *)(v7 + 9128) = *(_DWORD *)(v7 + 9116);
  *(_QWORD *)(v7 + 8432) = *(_QWORD *)(v7 + 8408);
  *(_QWORD *)(v7 + 8416) = *(_QWORD *)(v7 + 8400);
  *(_QWORD *)(v7 + 8536) = *(_QWORD *)(v7 + 8392);
  *(_QWORD *)(v7 + 8488) = *(_QWORD *)(v7 + 8384);
  *(_QWORD *)(v7 + 8472) = *(_QWORD *)(v7 + 8376);
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 7976) = *(_DWORD *)(v7 + 8212);
  *(_DWORD *)(v7 + 9384) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8368);
  *(_DWORD *)(v7 + 9424) = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 9256) = *(_DWORD *)(v7 + 8504);
  *(_DWORD *)(v7 + 8464) = *(_DWORD *)(v7 + 8520);
  *(_DWORD *)(v7 + 8532) = *(_DWORD *)(v7 + 8356);
  *(_DWORD *)(v7 + 8424) = *(_DWORD *)(v7 + 8360);
  *(_DWORD *)(v7 + 9440) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 8480) = *(_DWORD *)(v7 + 8512);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 9528) = *(_DWORD *)(v7 + 8496);
  *(_DWORD *)(v7 + 9624) = *(_DWORD *)(v7 + 9264);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 9408) = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9688) = 1;
  *(_DWORD *)(v7 + 9504) = 1;
  *(_DWORD *)(v7 + 7784) = 1;
  *(_DWORD *)(v7 + 9464) = 1;
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 9040) = *(_DWORD *)(v7 + 8352);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  return v9(a1, v8 ^ 0x853D086C, a3, v11, 0, a6, v10);
}

uint64_t sub_10032311C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1848) - v6 + 31) = v4 >> v3;
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(a3
                                                            + 8
                                                            * ((22 * (v6 + ((v5 - 671402673) & 0x2804BF7D) != 3951)) ^ v5)))(*(_QWORD *)(v7 + 3312), (v5 - 5144), 1154578670);
}

uint64_t sub_100323188()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((11360 * (v0 + 8 == 617 * (v1 ^ 0xF5B) - 6755)) ^ v1))
                            - 4))();
}

uint64_t sub_1003231CC@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * (((((v2 - 3918) | 0x1A81) - 6552) * (*(_DWORD *)(v3 + 3996) > a2)) ^ v2))
                            - 4))();
}

uint64_t sub_10032320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10032311C(a1, a2, a3);
}

uint64_t sub_100323254(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(*(_QWORD *)(v7 + 1200) - v5 + 31) = a3 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((121 * (v5 + 1 != ((31 * (v3 ^ 0x98C) - 1535364732) & 0x5B83CF9E ^ 0x7AELL))) ^ v3))
                            - 8))();
}

uint64_t sub_1003232D4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744) + 8 * ((11828 * (v2 == ((a2 + 846) ^ 0x999))) ^ a2)))();
}

uint64_t sub_100323300(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 ^ 0x2A85) * (v2 < *(_DWORD *)(v5 + 3992))) ^ a2)))();
}

uint64_t sub_10032332C(uint64_t a1, uint64_t a2)
{
  return sub_100323254(a1 + 4, a2, *(unsigned int *)(a1 - 0x62AA055D109F20F3));
}

uint64_t sub_100323364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v6 + 1184) - v2 + 31) = v5 >> v3;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(a2
                                                              + 8
                                                              * ((535
                                                                * (v2 + 1 == ((1499 * (v4 ^ 0x9BD) + 1248039027) & 0xB59C5FAE)
                                                                           - 1902)) ^ v4))
                                                  - 8))(*(_QWORD *)(v6 + 4000), 1088034205);
}

uint64_t sub_1003233E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * ((9312 * (v4 == 32)) ^ a4))
                            - ((19 * (a4 ^ 0x70Du)) ^ 0x9B1)))();
}

uint64_t sub_10032341C@<X0>(uint64_t a1@<X1>, int a2@<W3>, unsigned int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 | (16 * (*(_DWORD *)(v3 + 3988) > a3))))
                            - (a2 ^ 0xE37u)
                            + 2481))();
}

uint64_t sub_10032344C(uint64_t a1, uint64_t a2)
{
  return sub_100323364(a1, a2);
}

uint64_t sub_100323480@<X0>(unint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 1192) - v2 + 31) = a1 >> v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((v2 + 1 == (a2 ^ 0x1CC2u) - 5964) * (((a2 - 84786096) & 0x50DBFD7) - 4026)) ^ a2))
                            - 8))();
}

uint64_t sub_1003234F8()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (int)((16119 * (v1 == 32)) ^ v0))
                            - (v0 ^ 0x1760)))();
}

uint64_t sub_10032352C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3
                                                              + 8
                                                              * (((v2 + 6506) * (v1 < *(_DWORD *)(v4 + 8272))) ^ v2))
                                                  - 12))(a1, 0);
}

uint64_t sub_100323560(uint64_t a1)
{
  int v1;

  return sub_100323480(*(unsigned int *)(a1 - 0x62AA055D109F20F3), 230 * (v1 ^ 0x1761u));
}

uint64_t sub_100323598(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;

  *(_BYTE *)(*(_QWORD *)(v6 + 1288) - v4 + 31) = a3 >> v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2170 * (v7 & ~((2027 * (v3 ^ 0x3CA)) ^ (v4 == 31)))) ^ v3)) - 8))();
}

uint64_t sub_100323608(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * (((v4 == 32) * ((a4 - 74) ^ 0x1C78)) ^ a4))
                            - ((a4 + 609048614) & 0xDBB29BCB ^ 0x3C4)))();
}

uint64_t sub_100323654@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 ^ (90 * (*(_DWORD *)(v3 + 9152) <= v2))))
                            - (((a2 ^ 0xF8Eu) + 966 + 3090) ^ (2027 * (a2 ^ 0xF8Eu)))))();
}

uint64_t sub_1003236A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100323598(a1, a2, *(unsigned int *)(v2 - 0x62AA055D109F20F3));
}

uint64_t sub_1003236D0(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v8 = (v5 - 2059596214);
  *(_BYTE *)(*(_QWORD *)(v7 + 1208) + (v8 ^ 0x853D1008) - v6) = v4 >> (v3 & ((v5 - 78) ^ 0x80));
  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * (v5 ^ (517 * (v6 != 31)))) - 8);
  *(_DWORD *)(v7 + 9464) = 994009471;
  *(_QWORD *)(v7 + 9416) = v8;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  v10 = *(_QWORD *)(v7 + 2160);
  *(_QWORD *)(v7 + 9608) = v10;
  *(_DWORD *)(v7 + 7944) = a3;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v9(v10);
}

uint64_t sub_1003237E0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (((v0 == 32) * (((v1 - 695) | 5) + (v1 ^ 0xB77))) ^ v1))
                            - 8))();
}

uint64_t sub_10032381C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ 0x13 ^ (19 * (a3 >= a2))))
                            - ((v3 ^ 0x13u)
                             - 671)
                            - (((v3 ^ 0x13u) + 19) ^ 0xFFFFFFFFFFFFFA44)))();
}

uint64_t sub_10032385C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1003236D0(a1, a2, a3);
}

uint64_t sub_10032388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((((v8 - 134229868) & *(_DWORD *)(v9 + 2088))
                                 - 175775787
                                 + ((v8 + 69003271) | *(_DWORD *)(v9 + 2092)))
                                * (v7 != 17)) ^ (v8 + 362))))();
}

void sub_1003238E4(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 16) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_1003238F4(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_BYTE *)(a1 + 17) = a2;
  *(_DWORD *)(v2 + 5332) = 35;
  JUMPOUT(0x1002F9A04);
}

uint64_t sub_100323904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((116
                                          * (*(_DWORD *)(v8 + 5332) != (((v7 + 101) & 0x7F) + 12))) ^ v7))
                            - 12))();
}

void sub_100323954(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 19) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_100323968(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 18) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_100323978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned __int8 v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v3 ^ (209 * (v4 < 0x12u))))
                            - ((v3 - 204814931) & 0xC3514AB ^ 0x4A6)))();
}

uint64_t sub_1003239C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  *(_QWORD *)(v10 + 6776) = a7;
  v12 = a4 + v7 - 1194;
  *(_QWORD *)(v10 + 9416) = v12;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((10085 * ((((v9 + (_DWORD)v12 - 271) ^ 0x1C) & 0xB7) == v11)) ^ v7))
                          - 4);
  *(_DWORD *)(v10 + 9464) = 994009409;
  *(_QWORD *)(v10 + 9456) = *(_QWORD *)(v10 + 7048);
  *(_QWORD *)(v10 + 9608) = v8;
  *(_DWORD *)(v10 + 6812) = *(_DWORD *)(v10 + 9624);
  *(_DWORD *)(v10 + 9664) = *(_DWORD *)(v10 + 6976);
  *(_DWORD *)(v10 + 9616) = *(_DWORD *)(v10 + 7096);
  *(_DWORD *)(v10 + 9600) = *(_DWORD *)(v10 + 7020);
  *(_DWORD *)(v10 + 9488) = *(_DWORD *)(v10 + 7064);
  *(_DWORD *)(v10 + 9472) = *(_DWORD *)(v10 + 7136);
  return v13();
}

uint64_t sub_100323A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(a3 + 8 * (((v4 == (v3 - 63)) * ((v3 - 10500) ^ 0x109)) ^ (v3 - 2362))))();
}

uint64_t sub_100323AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, unint64_t a5@<X8>)
{
  int v5;
  int v6;
  unsigned __int8 **v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned __int8 *v15;
  unsigned __int8 v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unsigned __int8 *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  _BYTE *v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  unsigned __int8 v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unsigned __int8 v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unsigned int v50;
  char v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  __int128 v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  __int128 v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  __int128 v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  __int128 v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  __int128 v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  char v193;

  v14 = a3 + v5 - 333;
  *(_DWORD *)(v9 + 4120) = (v6 ^ 0x5C92C50) - 68158243 + ((v6 << ((a3 + v5 - 77) ^ (a3 - 1))) & 0xAFF78FEE ^ 0xA465874E);
  *(_QWORD *)(v9 + 6776) = HIDWORD(a5) ^ 0xB2C9C9BEAA5293E9;
  *(_DWORD *)(v9 + 6812) = *(_DWORD *)(v9 + 9624);
  *(_QWORD *)(v9 + 9504) = a1;
  *(_QWORD *)(v9 + 9280) = v13;
  *(_QWORD *)(v9 + 8240) = v11;
  *(_DWORD *)(v9 + 8308) = v8;
  *(_DWORD *)(v9 + 8300) = v12;
  *(_DWORD *)(v9 + 8304) = v10;
  v15 = *v7;
  v16 = ((*v7)[14] >> 3) | (32 * (*v7)[14]);
  v17 = **(_QWORD **)(v9 + 9352);
  v18 = (unint64_t)*(unsigned __int8 *)(v17 + 12) << 8;
  v19 = *(unsigned __int8 **)(v9 + 9712);
  v20 = v18 & 0x1000 | ((unint64_t)v19[90] << 16);
  v21 = (unint64_t)(*v7)[24] << 48;
  v22 = (**(_BYTE **)(v9 + 8224) ^ (a4 + v14 - 90));
  *(_DWORD *)(v9 + 9664) = a4 + v14;
  v23 = (**(_BYTE **)(v9 + 8216) ^ (a4 + v14 - 90)) | v18 & 0xFFFFFFFFFFFFEFFFLL;
  LOBYTE(v18) = v19[36];
  v24 = (2 * v18) & 0x38;
  v25 = **(unsigned __int8 ***)(v9 + 8144);
  v26 = v18 ^ 0x9C;
  *(_DWORD *)(v9 + 9736) = v14 + 2059596029;
  v27 = *(_QWORD *)(a2 + 8 * (v14 + 2059595782));
  v28 = *(unsigned __int8 *)(v17 + 1);
  LOBYTE(v14) = v24 + v26;
  v29 = v19[20];
  v30 = (v15[8] >> 1) | (v15[8] << 7);
  *(_QWORD *)(v9 + 9688) = v27 + 283;
  v31 = *(_BYTE **)(v9 + 7840);
  v32 = v20 | v23 | (v22 << 24);
  v33 = v27 + 540;
  v34 = *(_BYTE *)(v27 + 540 + (v14 ^ 0xC0));
  v35 = (v16 ^ 0x4D ^ *(_BYTE *)(v27 + 283 + (v16 ^ 0x88))) - 65;
  v36 = (unint64_t)*(unsigned __int8 *)(v17 + 13) << 56;
  v37 = v32 | ((unint64_t)v19[54] << 32);
  v38 = v34 ^ 0x4C;
  v39 = v15[26];
  v40 = v37 | v21 | (v28 << 40);
  v41 = v36 ^ (0xFF00000000000000 * *(unsigned __int8 *)(v17 + 13));
  v42 = *v25 | (unint64_t)(unsigned __int16)(v35 << 8) | ((*v31 ^ 0xB0) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(-7 * (v34 ^ 0x4C)) << 24);
  v43 = v42 | ((unint64_t)v15[17] << 32) | ((unint64_t)v19[51] << 40) | ((unint64_t)v25[6] << 48);
  v44 = v40 + ((unint64_t)v19[1] << 56);
  v45 = v43 + v41 + v43 - (v43 ^ v36) - 2 * ((v43 - (v43 ^ v36)) & v41);
  v46 = v15[9] | ((unint64_t)(-7
                                                    * (*(_BYTE *)(v27 + 540 + ((v39 - 100) ^ 0xC0)) ^ 0x4C)) << 8);
  v47 = v29 | ((unint64_t)v19[7] << 8) | ((unint64_t)*(unsigned __int8 *)(v17 + 2) << 16) | ((unint64_t)v19[92] << 48) | ((unint64_t)v15[19] << 56) | ((unint64_t)v19[74] << 32) | ((unint64_t)*(unsigned __int8 *)(v17 + 7) << 24) | ((unint64_t)*(unsigned __int8 *)(v17 + 6) << 40);
  v48 = (v46 ^ -(uint64_t)v46 ^ (((2 * (-1816793845 - (int)v46)) & 0x25EALL)
                              + ((0x9861D82593B5ED0BLL - v46) ^ 0x679E27DA6C4A12F5)))
      + ((unint64_t)*(unsigned __int8 *)(v17 + 14) << 16);
  v49 = ((unint64_t)v15[15] << 32) | ((unint64_t)v15[1] << 24) | ((unint64_t)v15[32] << 40);
  v50 = *(unsigned __int8 *)(v27 + (v30 ^ 0x54) + 12);
  if (v42)
    v51 = (v50 >> 2) ^ 0x11;
  else
    v51 = 46;
  v52 = v51 & (v50 >> 2) ^ ((v50 >> 2) & 0xD1 | ((_BYTE)v50 << 6));
  v53 = (unint64_t)v19[19] << 48;
  v54 = v48 ^ v49;
  v55 = v48 & v53;
  v56 = (v48 ^ v49) + v53;
  v57 = *(unsigned int *)(v17 + 8);
  v58 = v56 - 2 * v55;
  v59 = v45 ^ v57;
  v60 = (((unint64_t)v15[23] << (v39 & 0x10) << (v39 & 0x10 ^ 0x10u)) | ((unint64_t)v15[37] << 8) | ((unint64_t)v15[18] << 56)) ^ (((unint64_t)v15[2] << 40) | ((unint64_t)v19[82] << 48) | ((unint64_t)v19[59] << 32) | v19[58]) ^ ((unint64_t)((v52 ^ 0x29 ^ (-16 * v52)) + 31) << 24);
  v61 = v45 ^ v57 ^ v47 ^ 0xA016BC24B7A8D977;
  v62 = v60 ^ v44;
  v63 = v58 ^ ((unint64_t)v19[17] << 56);
  v64 = v62 ^ 0x9AF652FDFA97F854 ^ v45 ^ v57 ^ 0x7EFD6E4BA10EA42ELL;
  v65 = v62 ^ 0x9AF652FDFA97F854 | v45 ^ v57 ^ 0x7EFD6E4BA10EA42ELL;
  v66 = v60 + (v63 ^ 0x66B42170FA29716ALL) - 2 * (v60 & (v63 ^ 0x66B42170FA29716ALL));
  v67 = (v59 ^ v47 ^ 0xA016BC24B7A8D977) & (v59 ^ 0x810291B45EF15BD1);
  v68 = v62 ^ 0x6509AD02056807ABLL;
  if ((v54 & 0x80000000000) != 0)
    v69 = 0xFFFFF80000000000;
  else
    v69 = 0x80000000000;
  v70 = __ROR8__(v64, 13) ^ __ROR8__(v65, 13) ^ 0x26CE55904FD957C9;
  v71 = (v66 ^ 0x1B8739A505B5424CLL) & (((v63 ^ 0x66B42170FA29716ALL) + v69) ^ 0xFFFFF7FFFFFFFFFFLL);
  v72 = __ROR8__((v63 ^ 0x66B42170FA29716ALL) & (v59 ^ v47 ^ 0x5FE943DB48572688), 21) ^ __ROR8__(v59 ^ 0x7EFD6E4BA10EA42ELL, 21);
  v73 = v72 ^ 0x9B737ED6E9D64B97;
  v74 = v66 ^ 0x1B8739A505B5424CLL ^ __ROR8__(v70, 51);
  v75 = (v73 << 21) & 0xFEFFFFFFFFE00000 ^ v68 ^ v67 ^ ((v73 << 21) & 0x100000000000000 | (v72 >> 43) | 0xDADD3AC972E00000);
  v76 = (((v75 ^ 0x42AC0DFF18EAF909) + (v75 | 0xBD53F200E71506F6) + 1) ^ 0x9850F000A1010482)
      + (v75 & 0x42AC0DFF18EAF909 ^ 0x2A8092400E25101);
  v77 = v71 ^ v61;
  *((_QWORD *)&v78 + 1) = v77 ^ -(uint64_t)v77 ^ ((v77 ^ 0x71F90AAF4B015B75) - 0x71F90AAF4B015B75);
  *(_QWORD *)&v78 = *((_QWORD *)&v78 + 1) - 0x71F90AAF4B015B76;
  v79 = v76 ^ (-7 * (*(_BYTE *)(v33 + (((v76 >> 61) + 156) ^ 0xC0)) ^ 0x4C)) ^ (8 * v76) ^ (v76 >> 39) ^ (v76 << 25);
  v80 = v63 ^ (v66 ^ 0xE478C65AFA4ABDB3) & v68 ^ v77 ^ 0x5C15CA165129E222;
  v81 = v80 >> (v59 & 0xA) >> (v59 & 0xA ^ 0xA);
  v82 = v74 ^ v68 ^ v67;
  v83 = v74 ^ 0xDBD18B5A517C8C71 ^ __ROR8__(v74 ^ 0xDBD18B5A517C8C71, 7) ^ ((v74 ^ 0xDBD18B5A517C8C71) >> 41);
  v84 = v83 & 0xFBEB6D2A6CB82839;
  v85 = v83 & 0x41492D59347D7C6;
  v86 = (v80 >> 17) | (v80 << 54);
  v87 = __ROR8__(__ROR8__(*((_QWORD *)&v78 + 1) - 0x71F90AAF4B015B76, 19) & 0xFFF81FFFFFFFFFFFLL ^ __ROR8__((v78 >> 1) ^ (*((_QWORD *)&v78 + 1) - 0x71F90AAF4B015B76), 13) ^ 0x17FC653716A9ADCFLL, 51) ^ ((*((_QWORD *)&v78 + 1) - 0x71F90AAF4B015B76) << 58) ^ v79;
  v88 = v80 ^ (v80 << 47);
  if ((v79 & 0x80) != 0)
    v89 = -128;
  else
    v89 = 128;
  *((_QWORD *)&v90 + 1) = v82 ^ 0xB44C5028398C2245;
  *(_QWORD *)&v90 = v82;
  v91 = v84 ^ ((v74 ^ 0xDBD18B5A517C8C71) << 23) & 0xFBEB6D2A6C800000 | v85 ^ ((v74 ^ 0xDBD18B5A517C8C71) << 23) & 0x41492D593000000;
  v92 = v88 ^ v81 ^ v86;
  v93 = v91 ^ v92;
  v94 = v82 ^ 0xB44C5028398C2245 ^ __ROR8__(v82 ^ 0xB44C5028398C2245, 19) ^ (v90 >> 28) ^ v91;
  v95 = v94 ^ 0xB44C50283;
  v96 = v79 & (v94 ^ 0xFFFFFFF4BB3AFD7CLL) ^ v91 ^ v92;
  v97 = ((v89 + v79) ^ 0xFFFFFFFFFFFFFF7FLL) & (v87 ^ 0x8CA6E2D535B9E2FFLL) ^ v95;
  v98 = v96 ^ 0xCC7BE9A4BE673377 ^ v97;
  v99 = v79 & 0x20000000000000;
  v100 = (v87 ^ 0x73591D2ACA461D00) & v92;
  v101 = v79 & 0xFFDFFFFFFFFFFFFFLL;
  if ((v100 & v99) != 0)
    v99 = -v99;
  v102 = (v99 + v100) ^ v101;
  v103 = v102 ^ v97 ^ 0xF0CC8DD092A1AF2FLL;
  *((_QWORD *)&v105 + 1) = v103;
  *(_QWORD *)&v105 = v102 ^ ~v97;
  v104 = v105 >> 61;
  v106 = v87 ^ 0x8CA6E2D535B9E2FFLL ^ v91 & ~v92;
  v107 = v106 ^ 0x5356F0674821AEC6;
  *((_QWORD *)&v105 + 1) = v106;
  *(_QWORD *)&v105 = v106 ^ 0x5356F0674821AEC6;
  v108 = v105 >> 1;
  v109 = v92 ^ 0x47C99E12AA55AA20 ^ v95 & ~v93 ^ v106;
  v110 = v109 ^ __ROR8__(v109, 10);
  v111 = (v103 >> 39) & 0x4000;
  v112 = v104 ^ v103;
  if ((v112 & v111) != 0)
    v111 = -v111;
  v113 = (v111 + v112) ^ (v103 >> 39) & 0xFFFFFFFFFFFFBFFFLL;
  v114 = v113 ^ (v103 << 25);
  *((_QWORD *)&v115 + 1) = v113;
  *(_QWORD *)&v115 = v114;
  v116 = (v115 >> 22) ^ __ROR8__(v108 ^ v107 ^ (v107 >> 6) ^ (v107 << 58), 22);
  v117 = ((0xBFBBAA5FCFDB5187 - (v96 & 0x1000000000000000)) & 0x9C81284E02D04181 ^ v96 & 0xCCC5784E02D467A9 | v96 & 0x233A87B1FD2B9856) ^ 0x233A8211CD0B1006;
  v118 = v117 ^ __ROR8__(v117, 7) ^ (v117 >> 41) ^ (v117 << 23);
  v119 = (v110 + (v109 << 47) - 2 * (v110 & (v109 << 47))) ^ (v109 >> 17);
  v120 = __ROR8__(v116 ^ 0x9319FDD7951A92DDLL, 42);
  *(_QWORD *)&v115 = __ROR8__(__ROR8__(v119, 23) ^ __ROR8__(v118, 23) ^ 0x30668A50A29F8279, 41);
  v121 = v118 ^ __ROR8__(v98, 28) ^ ((v98 ^ (v98 >> 19) ^ -(uint64_t)(v98 ^ (v98 >> 19)) ^ ((v98 << 45)
                                                                                         - (v98 ^ (v98 >> 19) ^ (v98 << 45))))
                                   + (v98 << 45));
  v122 = v115 ^ 0x28514FC13C983345;
  v123 = v120 ^ 0x75E546A4B764C67FLL ^ (v115 ^ 0x28514FC13C983345) & ~v119;
  v124 = v119 ^ 0x313BC7C92EDDA5FDLL ^ v121 & (v115 ^ 0xD7AEB03EC367CCBALL) ^ v123;
  v125 = v124 ^ __ROR8__(v124, 10);
  v126 = __ROR8__(__ROR8__(v124, 61) ^ 0x228C743FBD208966, 20) ^ 0x8966228C743FBD2;
  if (v38)
    v127 = v120 ^ 0x75E546A4B764C67FLL ^ v119;
  else
    v127 = v119;
  if (v112)
    v128 = v127;
  else
    v128 = -1;
  v129 = v126 & 0x10000000000000;
  v130 = v126 & 0xFFEFFFFFFFFFFFFFLL;
  if ((v129 & v125) != 0)
    v129 = -v129;
  v131 = v129 + v125 + v130 - 2 * ((v129 + v125) & v130);
  v132 = v114 & ~v121;
  v133 = (v120 ^ 0x75E546A4B764C67FLL) & ~v114 ^ v121;
  v134 = v132 ^ v122;
  v135 = (v133 ^ v132 ^ v122 ^ -(uint64_t)(v133 ^ v132 ^ v122) ^ ((v133 ^ v132 ^ v122 ^ 0xAC6D121EA7274154)
                                                               + 0x5392EDE158D8BEACLL))
       + 0x5392EDE158D8BEABLL;
  v136 = v114 ^ 0x4A2C537256ACF1F5 ^ v133 ^ (v120 ^ 0x8A1AB95B489B3980) & v119 & v128;
  v137 = v136 ^ __ROR8__(v136, 61) ^ (v136 >> 39) ^ (v136 << 25);
  v138 = v134 ^ 0xAD2A34AC12844DDDLL ^ __ROR8__(v134 ^ 0xAD2A34AC12844DDDLL, 7) ^ ((v134 ^ 0xAD2A34AC12844DDDLL) >> 41) ^ ((v134 ^ 0xAD2A34AC12844DDDLL) << 23);
  v139 = __ROR8__((((v123 ^ 0x802A65F49FF1DF13) & 0x3F) << 40) ^ __ROR8__(v123 ^ 0x802A65F49FF1DF13 ^ __ROR8__(v123 ^ 0x802A65F49FF1DF13, 1) ^ ((v123 ^ 0x802A65F49FF1DF13) >> 6), 18) ^ 0xC2AA087E3CE41932, 46);
  v140 = v135 & 0xFFFF7FFFFFFFFFFFLL ^ (v135 << 45) ^ (v135 >> 28) ^ (v135 << 36) ^ (v135 & 0x800000000000 | (v135 >> 19));
  v141 = v140 ^ v138;
  v142 = v137 ^ v139 ^ 0x21F8F39064CB0AA8;
  v143 = v142 & ~v137 ^ v140 ^ v138;
  v144 = v137 ^ 0xC0C4E4651798A92FLL ^ v131 & (v137 ^ v139 ^ 0xDE070C6F9B34F557) ^ v143;
  v145 = v144 ^ (v144 >> 39) ^ __ROR8__(v144, 61) ^ (v144 << 25);
  v146 = v131 ^ ~v140 ^ (v140 ^ v138 | ~(v131 ^ v138));
  *((_QWORD *)&v147 + 1) = v138 & ~v131 ^ v142;
  *(_QWORD *)&v147 = *((_QWORD *)&v147 + 1) ^ 0x3508012E90BBEBA6;
  v148 = v131 ^ v138 ^ v137 & ~v141;
  v149 = v148 ^ 0x76AE5B4ADE1196D6;
  v150 = v148 ^ 0x76AE5B4ADE1196D6 ^ __ROR8__(v148 ^ 0x76AE5B4ADE1196D6, 7);
  v151 = v150 ^ ((v148 ^ 0x76AE5B4ADE1196D6) >> 41);
  v152 = (v147 >> 1) ^ *((_QWORD *)&v147 + 1) ^ 0x3508012E90BBEBA6 ^ ((*((_QWORD *)&v147 + 1) ^ 0x3508012E90BBEBA6uLL) >> 6) ^ ((*((_QWORD *)&v147 + 1) ^ 0x3508012E90BBEBA6) << 58);
  v153 = (v146 + *((_QWORD *)&v147 + 1) - 2 * (v146 & *((_QWORD *)&v147 + 1))) ^ (v131
                                                                                - ((2 * v131) & 0x6237310441395C28)
                                                                                - 0x4EE4677DDF6351ECLL);
  v154 = v153 ^ __ROR8__(v153, 10) ^ (v153 >> 17) ^ (v153 << 47);
  v155 = v148 ^ v143 ^ 0x9D5823204F6787ADLL ^ __ROR8__(v148 ^ v143 ^ 0x9D5823204F6787ADLL, 19) ^ ((v148 ^ v143 ^ 0x9D5823204F6787ADLL) >> 28) ^ ((v148 ^ v143 ^ 0x9D5823204F6787ADLL) << 36);
  v156 = (v150 ^ (v149 << 23)) & 0xC000000000000000 | (((4 * v151) ^ (v149 << 25)) >> 2);
  if (((v73 << 21) & 0xFEFFFFFFFFE00000) != 0)
    v157 = v145;
  else
    v157 = -1;
  v158 = v155 ^ v156;
  v159 = (v154 ^ v156) + ((v158 ^ v157) & v145) - 2 * ((v154 ^ v156) & (v158 ^ v157) & v145);
  v160 = v152 & ~v145 ^ 0xC3F7FB6F0CB8251 ^ v155 ^ v156;
  v161 = v160 ^ 0xE52EAC0EC822ADFDLL ^ v159;
  v162 = v161 ^ __ROR8__(v161, 19) ^ (v161 >> 28);
  v164 = v145 ^ v152;
  *((_QWORD *)&v165 + 1) = v156 & ~v154 ^ v164;
  *(_QWORD *)&v165 = *((_QWORD *)&v165 + 1) ^ 0x67A03F47EDFD3E5ELL;
  v166 = v145 ^ v160 ^ v154 & ~v164 ^ 0xAE7D72A59B361DFCLL;
  v167 = v154 ^ *((_QWORD *)&v165 + 1) ^ 0x9CCA9ACA596472A0 ^ (__ROR8__(__ROR8__(v154 ^ v156, 49) ^ 0x5C16390997F57536, 15) ^ 0x159347D38DECD015) & v158;
  v168 = (v161 << 36) & 0x4000000000;
  v169 = (v165 >> 1) ^ *((_QWORD *)&v165 + 1) ^ 0x67A03F47EDFD3E5ELL ^ ((*((_QWORD *)&v165 + 1) ^ 0x67A03F47EDFD3E5EuLL) >> 6) ^ ((*((_QWORD *)&v165 + 1) ^ 0x67A03F47EDFD3E5ELL) << 58);
  if ((v162 & v168) != 0)
    v168 = -v168;
  v170 = (v168 + v162) ^ (v161 << 36) & 0xFFFFFFBFFFFFFFFFLL;
  v171 = v166 ^ __ROR8__(v166, 61) ^ (v166 >> 39) ^ (v166 << 25);
  v172 = v167 ^ __ROR8__(v167, 10) ^ (v167 >> 17) ^ (v167 << 47);
  v163 = v159 ^ 0x3548F5C53C294B00;
  v173 = ((v163 >> 41) | (v159 << 57)) ^ (v163 << 23) ^ ((((v163 ^ -(uint64_t)v163 ^ (v163 - (v163 ^ -(uint64_t)v163)))
                                                         + v163) ^ ((((v159 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v163)
                                                                  + ((v159 ^ 0x3548F5C53C294B00uLL) >> 7)
                                                                  - 2 * (((v159 ^ 0x3548F5C53C294B00uLL) >> 7) ^ v163)))
                                                       + ((v159 ^ 0x3548F5C53C294B00uLL) >> 7));
  v174 = v173 ^ v172;
  v175 = v173 ^ v170;
  v176 = v173 ^ v170 ^ v169 & ~v171;
  v177 = v171 & ~(v173 ^ v170) ^ v173 ^ v172;
  v178 = v177 + (v176 ^ 0x4D060D9B6336773BLL) - 2 * ((v176 ^ 0x4D060D9B6336773BLL) & v177);
  v179 = __ROR8__(v178, 28) ^ (v178 << 45) ^ ((v178 >> 19) & 0x1D5D80B9A53ELL ^ v178 & 0xC6D5BD5D80B9A53ELL | (v178 >> 19) & 0x2A27F465AC1 ^ v178 & 0x392A42A27F465AC1);
  **(_BYTE **)(v9 + 8216) = v179 - ((2 * v179) & 0x60) - 80;
  v19[54] = BYTE4(v179);
  *(_BYTE *)(v17 + 1) = BYTE5(v179);
  v180 = v171 ^ v172 & ~(v171 ^ v169) ^ 0x9F6C7F18AE9A2457 ^ v176;
  v181 = v180 ^ (v180 >> 61) ^ (v180 >> 39) ^ (8 * v180);
  *v25 = v181;
  *v31 = BYTE2(v181) - ((2 * BYTE2(v181)) & 0x60) - 80;
  v19[90] = BYTE2(v179);
  *(_BYTE *)(v17 + 12) = BYTE1(v179);
  v15[24] = BYTE6(v179);
  v15[14] = BYTE1(v181);
  **(_BYTE **)(v9 + 8224) = BYTE3(v179) - ((2 * BYTE3(v179)) & 0x60) - 80;
  v19[1] = HIBYTE(v179);
  v182 = v181 ^ (v180 << 25);
  v19[36] = BYTE3(v182);
  v183 = *(_BYTE *)(*(_QWORD *)(v9 + 9688) + (((v182 >> 27) & 0xE0 | (v182 >> 35) & 0x1F) ^ 0x88));
  v25[6] = BYTE6(v182);
  v184 = v173 & ~v172 ^ v171 ^ v169;
  v185 = v184 ^ 0xEDF3F080C7FF14BCLL ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) << 58) ^ (((v184 ^ 0xEDF3F080C7FF14BCLL) >> 6) | (v184 << 63));
  *(_BYTE *)(v17 + 7) = (v184 ^ 0xC7FF14BC ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 24;
  v19[74] = BYTE4(v185);
  v19[51] = BYTE5(v182);
  v19[7] = (unsigned __int16)(v184 ^ 0x14BC ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) >> 6)) >> 8;
  v19[20] = v184 ^ 0xBC ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) >> 1) ^ ((v184 ^ 0xEDF3F080C7FF14BCLL) >> 6);
  *(_BYTE *)(v17 + 13) = HIBYTE(v182);
  v186 = (v170 ^ v172) + (v175 | ~v174);
  if (v73)
    v187 = v186 + 1;
  else
    v187 = v175;
  v188 = __ROR8__(__ROR8__(v177, 43) ^ __ROR8__(v184 ^ v172 ^ v177 ^ v187 & ~v174, 43) ^ 0x1632D02E588C9E02, 21) ^ 0x2771B2465AE27B69;
  v189 = v188 ^ __ROR8__(v188, 10) ^ (v188 >> 17);
  *(_BYTE *)(v17 + 14) = BYTE2(v189);
  *(_BYTE *)(v17 + 2) = BYTE2(v185);
  v15[17] = (v183 ^ ((v182 >> 27) & 0xE0 | (v182 >> 35) & 0x1F) ^ 0x4D) - 65;
  v15[26] = BYTE1(v189);
  *(_BYTE *)(v17 + 6) = BYTE5(v185);
  v190 = v177 ^ 0x7A845D75A8E0B07DLL ^ __ROR8__(v177 ^ 0x7A845D75A8E0B07DLL, 7) ^ ((v177 ^ 0x7A845D75A8E0B07DLL) >> 41);
  v19[58] = v190;
  v15[19] = HIBYTE(v185);
  v15[1] = BYTE3(v189);
  v15[9] = v189;
  v191 = v189 ^ (v188 << 47);
  v19[19] = BYTE6(v191);
  v15[37] = BYTE1(v190);
  v19[17] = HIBYTE(v191);
  v15[15] = BYTE4(v189);
  v19[92] = BYTE6(v185);
  v15[32] = BYTE5(v191);
  v192 = v190 ^ ((v177 ^ 0x7A845D75A8E0B07DLL) << 23);
  v15[23] = BYTE2(v192);
  v193 = *(_BYTE *)(v33
                  + ((((v190 ^ ((v177 ^ 0xA8E0B07D) << 23)) >> 24) - 100) ^ 0xC0));
  *(_DWORD *)(v9 + 12364) = v57;
  v19[59] = BYTE4(v192);
  v19[82] = BYTE6(v192);
  v15[2] = BYTE5(v192);
  v15[8] = -7 * (v193 ^ 0x4C);
  v15[18] = HIBYTE(v192);
  *(_DWORD *)(**(_QWORD **)(v9 + 9352) + 8) = v57 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * ((*(_DWORD *)(v9 + 9736) + 1912) ^ 0x78)) - 12))();
}

uint64_t sub_100323D8C@<X0>(char a1@<W1>, unint64_t a2@<X4>, uint64_t a3@<X6>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(*(_QWORD *)(v5 + 672) - v4 + 31) = a2 >> a1;
  return (*(uint64_t (**)(void))(a3 + 8 * (((38 * (((a4 - 5994) | 0x1090) ^ 0x1086) - 472) * (v4 == 31)) ^ a4)))();
}

uint64_t sub_100323DF8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((a2 == 32) * (7 * (a3 ^ 0x18B) - 5995)) | a3)) - 4))();
}

uint64_t sub_100323E2C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X6>, int a4@<W8>)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3
                                                              + 8
                                                              * (((a4 + 2633) * (v4 < *(_DWORD *)(v5 + 3988))) ^ a2))
                                                  - 4))(a1, 0);
}

uint64_t sub_100323E58(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100323D8C(0, *(unsigned int *)(a4 - 0x62AA055D109F20F3), a7, a3 + 5277);
}

uint64_t sub_100323E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  *(_BYTE *)(*(_QWORD *)(v11 + 664) - v9 + 31) = v10 >> v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((((v7 - 1540518221) & v12 ^ v13) * (v9 != 31)) ^ v7)) - 8))();
}

uint64_t sub_100323EF4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((12306 * (v7 == 32)) ^ a1)) - ((1574 * (a1 ^ 0x1097u)) ^ 0xC44)))();
}

uint64_t sub_100323F2C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (a1 ^ (14429 * (v7 < *(_DWORD *)(v8 + 8272)))))
                            - ((2 * a1) ^ 0x2D66u)
                            + 3140))();
}

uint64_t sub_100323F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100323E8C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100323FA4@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  char v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;

  *(_BYTE *)(*(_QWORD *)(v5 + 656) - a2 + (v4 ^ v7) - 8685) = v3 >> v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * (v4 ^ ((a2 == 31) * v6))) - 8))(240704627);
}

uint64_t sub_100324004(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  char v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((45 * (((a2 + v9) ^ (v7 == 32)) & 1)) ^ a2))
                            - (a2 ^ v8)
                            + 3136))();
}

uint64_t sub_100324038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((1574 * (v8 & v11 ^ v10) - 1151) * (v7 < *(_DWORD *)(v9 + 9152))) ^ v8 & v11))
                            - 12))();
}

uint64_t sub_100324074@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  return sub_100323FA4(a1, a2);
}

uint64_t sub_1003240A4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)(*(_QWORD *)(v5 + 688) - v3 + (a3 - 67) - 441) = a1 >> v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a3 ^ ((8 * (v3 == 31)) | (32 * (v3 == 31))))) - (a3 ^ 0x4A2u ^ v6)))();
}

uint64_t sub_1003240F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((v8 == 32) * ((49 * (v7 ^ v9)) ^ 0x26B)) ^ v7)) - 8))();
}

uint64_t sub_100324124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a7
                                                     + 8
                                                     * (((((v8 - 1209) | 0x1B) + v10) * (*(_DWORD *)(v9 + 8548) > v7)) ^ v8))
                                         - 8))(0);
}

uint64_t sub_10032415C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return sub_1003240A4(*(unsigned int *)(v8 - 0x62AA055D109F20F3), a7, v7 - 1182);
}

void sub_100324188()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (v1 - 2059596225);
  v4 = *(_QWORD *)(v2 + 3800) + ((v3 - 2235369815) & v0) + ((v3 - 2235369815) & v0 ^ 0x6C0);
  *(_DWORD *)(v2 + 9464) = 994009809;
  *(_QWORD *)(v2 + 9416) = v3;
  *(_QWORD *)(v2 + 9456) = *(_QWORD *)(v2 + 7048);
  *(_QWORD *)(v2 + 9608) = v4;
  *(_DWORD *)(v2 + 7944) = *(_DWORD *)(v2 + 8548);
  *(_DWORD *)(v2 + 5344) = *(_DWORD *)(v2 + 6072);
  *(_DWORD *)(v2 + 5340) = *(_DWORD *)(v2 + 7616);
  *(_DWORD *)(v2 + 5348) = *(_DWORD *)(v2 + 6084);
  *(_DWORD *)(v2 + 5336) = *(_DWORD *)(v2 + 6080);
  *(_DWORD *)(v2 + 9664) = *(_DWORD *)(v2 + 6976);
  *(_DWORD *)(v2 + 9616) = *(_DWORD *)(v2 + 7096);
  *(_DWORD *)(v2 + 9600) = *(_DWORD *)(v2 + 7020);
  *(_DWORD *)(v2 + 9488) = *(_DWORD *)(v2 + 7064);
  *(_DWORD *)(v2 + 9472) = *(_DWORD *)(v2 + 7136);
  *(_DWORD *)(v2 + 4292) = *(_DWORD *)(v2 + 8280);
  JUMPOUT(0x1002C8A58);
}

uint64_t sub_100324204()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((9 * (v0 ^ 0xEE9)) ^ 0x1F1D) * (v1 > 0x11)) ^ v0)))();
}

uint64_t sub_100324244(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * ((31 * (v4 != 18)) ^ v2))
                                                                     - 4))(a1, a2, 385908731, 6643);
}

uint64_t sub_1003242A8(uint64_t a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  unsigned __int8 **v10;
  int v11;
  unsigned __int8 **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _BYTE *v53;
  _BYTE *v54;
  unint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  int v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  int v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  __int128 v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  BOOL v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  unsigned __int8 v204;
  char v205;
  unint64_t v206;
  uint64_t v207;
  unsigned int v208;
  uint64_t v209;
  unint64_t v210;
  unsigned int v211;
  char v212;
  unint64_t v213;
  char v214;
  char v215;
  _BOOL4 v216;

  *(_QWORD *)(v13 + 6832) = v7 ^ (v8 - 1489146523) & 0xDDFF995F ^ 0xB2C9C9BEC42F960ALL;
  *(_DWORD *)(v13 + 4136) = a7 ^ 0x41E83680;
  *(_DWORD *)(v13 + 9688) = 20;
  v18 = (v8 - 1489146523) & 0xDDFF995F;
  *(_QWORD *)(v13 + 9616) = *(_QWORD *)(v13 + 6776);
  *(_DWORD *)(v13 + 9624) = v9;
  *(_QWORD *)(v13 + 9280) = v15;
  v19 = 29 * (v18 ^ (v17 + 348));
  *(_DWORD *)(v13 + 9656) = v19;
  v20 = (v19 + v11) & a3;
  v21 = *(_QWORD *)(v13 + 9712);
  v22 = *(unsigned int *)(v21 + 40);
  v23 = **(unsigned __int8 ***)(v13 + 9352);
  v24 = *v12;
  v25 = *v10;
  v26 = **(unsigned __int8 **)(v13 + 8584);
  v27 = v24[25];
  v28 = v23[21];
  v29 = *(unsigned __int8 *)(v21 + 10);
  *(_QWORD *)(v13 + 9664) = v20;
  v30 = *(unsigned __int8 *)(v21 + 38);
  *(_QWORD *)(v13 + 9736) = v18;
  v31 = (v27 << (v20 ^ a4)) | v28;
  HIDWORD(v32) = v26;
  LODWORD(v32) = (v26 ^ 0xFFFFFFBF) << 24;
  v33 = v29 << (v29 & 0x18) << (v29 & 0x18 ^ 0x18);
  v34 = *(_QWORD *)(v14 + 8 * (int)(v18 ^ 0x853D11BC));
  v35 = v34 + 802;
  v36 = *(_BYTE *)(v34 + 802 + ((v32 >> 28) ^ 0xB4));
  v37 = v33 ^ v31 ^ ((unint64_t)v25[8] << 16);
  v38 = ((unint64_t)v25[5] << 32) + v37 - 2 * (((unint64_t)v25[5] << 32) & v37);
  v39 = v25[2] | ((unint64_t)(-91 * ((-51 * v36) ^ (8 * ((-51 * v36) ^ (20 * v36))) ^ 0xDD)) << 8) | (v30 << 16) | ((unint64_t)*(unsigned __int8 *)(v21 + 11) << 24);
  v40 = v39 ^ -(uint64_t)v39;
  v41 = v39 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v24[11] << 32);
  v42 = (v23[3] | ((unint64_t)v24[10] << 16)) ^ ((unint64_t)*v23 << (v36 & 8) << (v36 & 8 ^ 8u));
  v43 = (v40 ^ (v41 + ((unint64_t)v24[11] << 32) - 2 * v41)) + ((unint64_t)v24[11] << 32);
  LOBYTE(v41) = *(_BYTE *)(v34 + (v25[3] ^ 0xD0)) ^ 0x33;
  HIDWORD(v32) = **(unsigned __int8 **)(v13 + 8600);
  LODWORD(v32) = (HIDWORD(v32) ^ 0xFFFFFFBF) << 24;
  v44 = *(_BYTE *)(v34 + 802 + ((v32 >> 28) ^ 0xB4));
  v45 = ((unint64_t)(**(unsigned __int8 **)(v13 + 8592) ^ 0xB0u) << 32) | ((unint64_t)v23[20] << 40) | ((unint64_t)(((v41 >> (v41 & 7)) >> (v41 & 7 ^ 7)) ^ (2 * v41)) << 48);
  v46 = (-51 * v44) ^ (8 * ((-51 * v44) ^ (20 * v44)));
  v47 = (v45 | ((unint64_t)v24[4] << 56)) ^ (v42 | ((unint64_t)v23[15] << 24));
  LOBYTE(v40) = *(_BYTE *)(v34 + 802 + (((v24[30] >> 4) | (16 * v24[30])) ^ 0xB4));
  v48 = ((*(_BYTE *)(v21 + 60) >> 2) | (*(_BYTE *)(v21 + 60) << 6));
  v49 = v34 + 530;
  v50 = (-51 * v40) ^ (8 * ((-51 * v40) ^ (20 * v40)));
  v51 = v43 ^ (((_DWORD)v22
              + 1
              + v16
              + ((2 * (_DWORD)v22) & 0xA7F04AD2)
              + (((_DWORD)v22 + 1 + (v22 ^ v16)) ^ 0xFFFFFFFE)) | ((unint64_t)v25[4] << 56) | ((unint64_t)v25[7] << 48) | ((unint64_t)v24[5] << 40));
  if ((*(_BYTE *)(v34
                 + 259
                 + (v48 ^ -v48 ^ (140
                                - (((*(_BYTE *)(v21 + 60) >> 2) | (*(_BYTE *)(v21 + 60) << 6)) ^ 0x8Cu)))
                 + 140) & 1) != 0)
    v52 = -19;
  else
    v52 = -17;
  v53 = *(_BYTE **)(v13 + 8088);
  v54 = *(_BYTE **)(v13 + 8096);
  v55 = ((v24[35] | ((unint64_t)v23[4] << 16) | ((unint64_t)*(unsigned __int8 *)(v21 + 64) << 8)) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(-91 * (v46 ^ 0xDD)) << 24) | ((unint64_t)*(unsigned __int8 *)(v21 + 44) << 32) | ((unint64_t)v25[1] << 40)) ^ (((unint64_t)(-91 * (v50 ^ 0xDD)) << 48) | ((unint64_t)((*(unsigned __int8 *)(v21 + 80) ^ 0xFFFFFF9E ^ ((*(unsigned __int8 *)(v21 + 80) ^ 0xFFFFFF9E) + 53) ^ 0x6B ^ *(unsigned __int8 *)(v34 + 530 + (*(unsigned __int8 *)(v21 + 80) ^ 0x96))) - 115) << 56));
  v56 = *(_BYTE **)(v13 + 8120);
  v57 = *(_BYTE **)(v13 + 8104);
  v58 = v51 ^ 0xD8E1CAEB2C156C5DLL;
  v59 = (((*v53 ^ 0xB0) << 16) | ((unint64_t)(65
                                                                                       * ((v52
                                                                                         + *(_BYTE *)(v34 + 259 + (v48 ^ -v48 ^ (140 - (((*(_BYTE *)(v21 + 60) >> 2) | (*(_BYTE *)(v21 + 60) << 6)) ^ 0x8Cu))) + 140)) ^ 0x38)) << 8) | v24[31] | ((*v54 ^ 0xB0) << 24) | ((unint64_t)v25[9] << 40)) ^ (((unint64_t)(*v56 ^ 0xB0u) << 56) | ((unint64_t)(*v57 ^ 0xB0u) << 48) | ((unint64_t)v23[5] << 32));
  v60 = v47 ^ v51 ^ 0xD8E1CAEB2C156C5DLL;
  v61 = v38 ^ (((unint64_t)*(unsigned __int8 *)(v21 + 85) << 40) | ((unint64_t)*(unsigned __int8 *)(v21 + 47) << 48) | ((unint64_t)*v24 << 56)) ^ v59;
  v62 = v55 ^ v59 ^ 0x58BE7B89AC062434;
  v63 = (v55 ^ 0x1D27FF233AC1D70ELL) & (v60 ^ 0x91F9A441F1A06E97);
  v64 = v51 ^ 0x271E3514D3EA93A2;
  v65 = v60 ^ 0x6E065BBE0E5F9168;
  v66 = v62 & (v55 ^ 0xE2D800DCC53E28F1) ^ v65;
  v67 = v63 ^ v58;
  v68 = v47 ^ 0x6E065BBE0E5F9168;
  v69 = v61 ^ 0x1D836F84E10B0A6FLL;
  if (!*v24)
    v68 = v65;
  v70 = v61 ^ 0xE27C907B1EF4F590;
  v71 = (~(2 * v62) + v62) & v70;
  v72 = v70 ^ v68 & v64;
  v73 = v67 ^ v72;
  v74 = v67 ^ v72 ^ 0x9AF8F924A1E35583;
  v75 = v69 & v58 ^ v62;
  v76 = v75 ^ v72;
  v77 = v55 ^ v71 ^ 0x2786144591C14446 ^ v66;
  v78 = v75 ^ 0x116382A17B85A8A8;
  v79 = v77 ^ __ROR8__(v77, 10);
  v80 = v79 & 0x200000;
  if ((v79 & 0x200000 & (v77 >> 17)) != 0)
    v80 = -v80;
  v81 = (65 * ((*(_BYTE *)(v34 + 259 + (((v73 >> 55) & 0xC0 | (v74 >> 63)) ^ 0x8C)) - 18) ^ 0x39)) ^ (8 * v73) ^ v74 ^ (v74 >> 39) ^ (v74 << 25);
  v82 = (v80 + (v77 >> 17)) ^ v79 & 0xFFFFFFFFFFDFFFFFLL;
  v83 = v78 ^ (v78 << 23) ^ ((v78 >> 7) ^ (v78 >> 41) | (v78 << 57));
  v84 = v82 ^ (v77 << 47);
  *((_QWORD *)&v85 + 1) = v76;
  *(_QWORD *)&v85 = v76 ^ 0x7EFE59D31375069CLL;
  v86 = v76 ^ 0x7EFE59D31375069CLL ^ __ROR8__(v76 ^ 0x7EFE59D31375069CLL, 19) ^ (v85 >> 28) ^ v83;
  v87 = v86 ^ 0x375069C000000000;
  v88 = v66 ^ 0x8E06F550B4FEA48ALL ^ __ROR8__(v66, 1) ^ ((v66 ^ 0x8E06F550B4FEA48ALL) >> 6) ^ ((v66 ^ 0x8E06F550B4FEA48ALL) << 58) ^ v81 ^ 0xD7C7C9250F1AAC18;
  *((_QWORD *)&v85 + 1) = v82;
  *(_QWORD *)&v85 = v84;
  *(_QWORD *)&v85 = __ROR8__((v85 >> 42) ^ __ROR8__(v83, 42) ^ 0x57A4613020955AF2, 22);
  v89 = v84 & (v88 ^ 0xB8FC8557A580ADBALL) ^ v81 ^ 0xD7C7C9250F1AAC18;
  v90 = v85 ^ 0x556BC95E9184C082 ^ (v86 ^ 0xC8AF963FFFFFFFFFLL) & (v81 ^ 0xD7C7C9250F1AAC18);
  v91 = (v85 ^ 0xAA9436A16E7B3F7DLL) & v87;
  v92 = (v88 ^ 0x47037AA85A7F5245) & (v81 ^ 0x283836DAF0E553E7) ^ v87;
  v93 = (v85 ^ 0x556BC95E9184C082) & ~v84 ^ v88 ^ 0x47037AA85A7F5245;
  v94 = (v89 + v92 - 2 * (v89 & v92)) ^ 0xF0CC8DD092A1AF2FLL;
  v95 = v90 - 0x404455A03024AE79;
  v96 = ((v93 + (v93 ^ 0xACA90F98B7DE5139) + 1) ^ 0xFFFFFFFFFFFFFFFCLL) + v93;
  v97 = (2 * v90) & 0x7F7754BF9FB6A30ELL;
  v98 = v92 ^ v90 ^ 0xCC7BE9A4BE673377;
  v99 = v84 ^ 0x47C99E12AA55AA20 ^ v91 ^ v93;
  v100 = v95 - v97;
  v101 = (v96 >> 1) & 0x10000000;
  v102 = v100 >> 7;
  if ((v101 & v96) != 0)
    v101 = -v101;
  v103 = (v101 + v96) ^ (v96 >> 1) & 0xFFFFFFFFEFFFFFFFLL;
  v104 = v102 & 0x15A4184970A3B70 ^ v100 & 0xCF5A4184970A3B70;
  v105 = v104 | (v100 >> 7) & 0xA5BE7B68F5C48FLL ^ v100 & 0x30A5BE7B68F5C48FLL;
  v106 = v94 ^ __ROR8__(v94, 61) ^ (v94 >> 39) ^ (v94 << 25);
  v107 = (v103 + (v96 << 63)) ^ __ROR8__(v96, 6);
  v108 = (v104 ^ v102) & 0x20;
  v109 = ((v100 << 57) ^ (v100 << 23) ^ v105 | (v100 >> 41)) ^ v105 & (v100 >> 41);
  if ((v108 & v106) != 0)
    v110 = -v108;
  else
    v110 = (v104 ^ v102) & 0x20;
  v111 = (v110 + v106) ^ v108;
  v112 = v98 ^ __ROR8__(v98, 19) ^ (v98 >> 28) ^ (v98 << 36) ^ v109;
  v113 = (((0x5682E4B04CCE5973 - 2 * ((v99 << 54) & v99)) ^ ((v99 << 54) - 0x5682E4B04CCE5973 + (v99 ^ (v99 >> 10))))
        + 2
        * ((0x5682E4B04CCE5973 - 2 * ((v99 << 54) & v99)) & ((v99 << 54) - 0x5682E4B04CCE5973 + (v99 ^ (v99 >> 10))))) ^ __ROR8__(v99, 17);
  v114 = v113 ^ v109;
  v115 = v113 & ~(v107 ^ v111) ^ v111;
  v116 = v111 & ~v112 ^ v114;
  v117 = v107 ^ v111 ^ (~(2 * v113) + v113) & v114;
  v118 = v107 & ~v111 ^ v112;
  v119 = v115 ^ v118;
  v120 = v112 & ~v114;
  v121 = 0x802A65F49FF1DF13 - (v117 & 0x4000);
  v122 = v116 ^ 0x5392EDE158D8BEABLL ^ v118;
  v123 = v117 & 0xFFFFFFFFFFFFBFFFLL;
  v124 = v120 ^ v113 ^ v117;
  v125 = v121 ^ v123;
  v126 = 8 * (v119 ^ 0x4A2C537256ACF1F5);
  v127 = v119 ^ 0x4A2C537256ACF1F5 ^ ((v119 ^ 0x4A2C537256ACF1F5uLL) >> 61) ^ ((v119 ^ 0x4A2C537256ACF1F5uLL) >> 39);
  v128 = v127 & v126;
  v129 = v127 + v126;
  v130 = (v116 ^ 0xAD2A34AC12844DDDLL) << 57;
  v131 = (v129 - 2 * v128) ^ (v119 << 25);
  v132 = ((v125 >> 6) | (v125 << 63)) ^ (v125 << 58) ^ ((v125 >> 1) & 0x144C40D5A6699F68 ^ v125 & 0x944C40D5A6699F68 | ((v125 >> 1) ^ v125) & 0x6BB3BF2A59966097) ^ v131 ^ 0xE4AD59E3EA000000;
  v133 = (((v124 ^ 0x313BC7C92EDDA5FDLL) >> 10) ^ (v124 >> 17) | ((v124 ^ 0x313BC7C92EDDA5FDLL) << 54)) ^ __ROR8__(__ROR8__(v124 ^ 0x313BC7C92EDDA5FDLL, 9) & 0xFF800000000000FFLL ^ __ROR8__(v124 ^ 0x313BC7C92EDDA5FDLL, 56) ^ 0x6C917F5A85D4E647, 8);
  v134 = (v116 >> 7) ^ __ROR8__(v116 ^ 0xAD2A34AC12844DDDLL, 41) ^ 0x15A54695825089BLL ^ ((((v130 ^ (0xFE00000000000000 * (v116 ^ 0xAD2A34AC12844DDDLL)) ^ ((v116 ^ 0xAD2A34AC12844DDDLL) - (v130 ^ v116 ^ 0xAD2A34AC12844DDDLL) - (((v116 ^ 0xAD2A34AC12844DDDLL) - (v130 ^ v116 ^ 0xAD2A34AC12844DDDLL)) ^ v130)))
                                                                                          + (v116 ^ 0xAD2A34AC12844DDDLL)
                                                                                          - (v130 ^ v116 ^ 0xAD2A34AC12844DDDLL)) ^ (0xFE00000000000000 * (v116 ^ 0xAD2A34AC12844DDDLL)))
                                                                                        + (v116 ^ 0xAD2A34AC12844DDDLL));
  v135 = v134 ^ v133 ^ 0x476C89E2B9614388;
  v136 = ((v122 >> 28) | (v122 << 45)) ^ (v122 << 36) ^ ((v122 >> 19) & 0x196DEA6F2D89 ^ v122 & 0x2326796DEA6F2D89 | (v122 >> 19) & 0x6921590D276 ^ v122 & 0xDCD986921590D276) ^ v134;
  v137 = (v131 ^ 0xE4AD59E3EA000000) & ~v136 ^ v135;
  v138 = (v133 ^ 0x476C89E2B9614388) & ~v132 ^ v131 ^ 0xE4AD59E3EA000000;
  v139 = (v136 ^ -(uint64_t)v136 ^ ((v132 & (v131 ^ 0x1B52A61C15FFFFFFLL)) - (v132 & (v131 ^ 0x1B52A61C15FFFFFFLL) ^ v136)))
       + (v132 & (v131 ^ 0x1B52A61C15FFFFFFLL));
  v140 = v137 ^ 0x9D5823204F6787ADLL ^ v139;
  v141 = v138 ^ 0xC0C4E4651798A92FLL ^ v139;
  v142 = v136 & ~v135;
  v143 = v135 & (v133 ^ 0xB893761D469EBC77) ^ v132;
  v144 = v143 ^ 0x3508012E90BBEBA6;
  LODWORD(v146) = __ROR4__(v22 ^ 0x46B8D103, 6) ^ 0x643F2D94;
  HIDWORD(v146) = v146;
  v145 = v146 >> 26;
  v147 = v133 ^ v142 ^ 0xF677116099FDED9CLL ^ v143;
  v148 = ((v143 ^ 0x3508012E90BBEBA6) >> 6) | (v143 << 63);
  if ((v145 & 0x20000) != 0)
    v149 = -131072;
  else
    v149 = 0x20000;
  v150 = v144 ^ (v144 << 58) ^ (v144 >> 1) ^ v148;
  v151 = (v137 - ((v149 + v145) ^ 0x4971B41Au) + v22) ^ 0x76AE5B4ADE1196D6;
  v152 = v141 ^ __ROR8__(v141, 61) ^ (v141 >> 39) ^ (v141 << 25);
  v153 = v152 ^ v150;
  v154 = v147 ^ __ROR8__(v147, 10) ^ (v147 >> 17) ^ (v147 << 47);
  v155 = v151 ^ __ROR8__(v151, 7) ^ (v151 >> 41) ^ (v151 << 23);
  v156 = v155 ^ v154;
  v157 = v140 ^ __ROR8__(v140, 19) ^ (v140 >> 28) ^ (v140 << 36) ^ v155;
  v158 = v150 & ~v152 ^ v157;
  v159 = v152 & ~v157 ^ v155 ^ v154;
  v160 = __ROR8__(v155 & ~v154, 17);
  v161 = 0x1000000000;
  if (((v159 ^ v158) & 0x1000000000) != 0)
    v161 = 0xFFFFFFF000000000;
  v162 = (v161 + (v159 ^ v158)) ^ 0xE911D3A838E92FACLL;
  v163 = __ROR8__(v160 ^ __ROR8__(v153, 17) ^ 0xF3FA7421DB3CB95BLL, 47);
  v164 = v152 ^ v154 & ~v153 ^ v158 ^ 0xA2420D136BFD9FADLL;
  v165 = v157 & ~v156 ^ v154 ^ v163;
  v166 = v164 ^ __ROR8__(v164, 61) ^ (v164 >> 39) ^ (v164 << 25);
  v167 = __ROR8__(v163 ^ 0x8FE3893E9F4AD9AALL, 6) ^ (v163 << 63) ^ (((v163 ^ 0x8FE3893E9F4AD9AALL) >> 1)
                                                                  + (v163 ^ 0x8FE3893E9F4AD9AALL)
                                                                  - 2
                                                                  * (((v163 ^ 0x8FE3893E9F4AD9AALL) >> 1) & (v163 ^ 0x8FE3893E9F4AD9AALL)));
  v168 = v159 ^ 0x3548F5C53C294B00 ^ ((v159 ^ 0x3548F5C53C294B00) >> 7) ^ (((v159 ^ 0x3548F5C53C294B00) >> 41) | (v159 << 57));
  v169 = (v159 ^ 0x3548F5C53C294B00) << 23;
  v170 = v168 & v169;
  v171 = v168 + v169;
  v172 = v167 ^ v166;
  v173 = v171 - 2 * v170;
  v174 = v165 ^ 0x74892CB32BD39554 ^ ((v165 ^ 0x74892CB32BD39554) << 54) ^ ((v165 ^ 0x74892CB32BD39554) >> (v138 & 0x11) >> (v138 & 0x11 ^ 0x11)) ^ __ROR8__((((v165 ^ 0x74892CB32BD39554) & 0x1FFFF) << 16) ^ __ROR8__((v165 >> 10) ^ 0x1D224B2CCAF4E5, 31) ^ 0x43BCC1B32BEC72D7, 33);
  v175 = v174 ^ 0x95F6396BA1DE60D9;
  v176 = v174 ^ 0x95F6396BA1DE60D9 ^ v173;
  v177 = ((v162 >> 28) | (v162 << 45)) ^ (v162 << 36) ^ v173 ^ __ROR8__(__ROR8__(__ROR8__(v162, 63) & 0xFFFFFFFFFFF00001 ^ __ROR8__(v162, 44) ^ 0x6EAF80F71436AB5CLL, 33) ^ 0xAF2AC674012EF784, 51);
  v178 = (v177 ^ 0xCD84B930D9001B59) & v166 ^ v176;
  v177 ^= 0x327B46CF26FFE4A6uLL;
  v179 = v177 ^ v167 & ~v166;
  v180 = (v174 ^ 0x95F6396BA1DE60D9) & ~v172;
  v181 = (v174 ^ 0x95F6396BA1DE60D9) & 0x800000000;
  v182 = v176 & (v174 ^ 0x6A09C6945E219F26) ^ v172;
  v183 = v177 & ~v176;
  v184 = v175 & 0xFFFFFFF7FFFFFFFFLL;
  v185 = ((v178 ^ -(uint64_t)v178 ^ (v179 - (v178 ^ v179))) + v179) ^ 0x69B66319AD0E859DLL;
  v186 = v166 ^ v180 ^ 0x917EAA74E2F77306 ^ v179;
  if ((v183 & v181) != 0)
    v187 = -(uint64_t)v181;
  else
    v187 = v181;
  v188 = v184 ^ v182 ^ 0x255BF95FCB5E630DLL ^ (v187 + v183);
  v189 = (v182 ^ 0xE293FE325B0CD692) << 58;
  v190 = v178 ^ 0x480CE2D84EC70A20;
  v191 = v186 << 25;
  *((_QWORD *)&v192 + 1) = v182;
  *(_QWORD *)&v192 = v182 ^ 0xE293FE325B0CD692;
  v193 = v186 ^ __ROR8__(v186, 61) ^ (v186 >> 39);
  v194 = v193 & (v186 << 25);
  v195 = __ROR8__((v185 >> 9) & 0x7FFFFFFFF80000 ^ __ROR8__(v185 ^ __ROR8__(v185, 19), 45) ^ 0xAC1171B45801915CLL, 19);
  v196 = (v192 >> 1) ^ v182 ^ 0xE293FE325B0CD692 ^ ((v182 ^ 0xE293FE325B0CD692) >> 6);
  v197 = v196 & 0x800000000000000;
  v198 = v195 ^ (v185 << 36) ^ 0x322B95822E368B00;
  v199 = v46 == 0;
  v200 = v196 ^ 0x800000000000000;
  if (v199)
    v200 = 0xF7FFFFFFFFFFFFFFLL;
  v201 = v200 & v196;
  if ((v197 & v189) != 0)
    v197 = -v197;
  v202 = v193 + v191 - 2 * v194;
  v23[21] = v195;
  v203 = ((v197 + v189) >> 32) ^ HIDWORD(v201);
  v25[8] = BYTE2(v198);
  v24[25] = BYTE1(v198);
  v204 = ((BYTE3(v198) ^ 0x2C) + (BYTE3(v198) | 0xD3) + 1) | BYTE3(v198) & 0x2C;
  v205 = *(_BYTE *)(v35 + (((v204 >> 4) | (16 * (v204 & 0xFu))) ^ 0xB4));
  v25[5] = BYTE4(v198);
  *v24 = HIBYTE(v198);
  v206 = v188 ^ __ROR8__(v188, 10) ^ (v188 >> 17);
  **(_BYTE **)(v13 + 8584) = BYTE1(v193) - ((2 * BYTE1(v193)) & 0x60) - 80;
  v207 = v190 ^ (v190 << 23) ^ __ROR8__(v190, 7);
  v25[2] = v193;
  v24[5] = BYTE5(v202);
  *(_BYTE *)(v21 + 10) = -91 * ((-51 * v205) ^ (8 * ((-51 * v205) ^ (20 * v205))) ^ 0xDD);
  *(_BYTE *)(v21 + 85) = BYTE5(v198);
  *(_BYTE *)(v21 + 38) = BYTE2(v193);
  *(_BYTE *)(v21 + 11) = BYTE3(v202);
  v24[11] = BYTE4(v202);
  *(_BYTE *)(v21 + 47) = BYTE6(v198);
  v208 = *(unsigned __int8 *)(v34 + (BYTE6(v202) ^ 0xD0));
  v209 = *(_QWORD *)(v13 + 9744);
  v25[7] = ((v208 >> 7) | (2 * v208)) ^ 0x66;
  v23[15] = BYTE3(v201);
  **(_BYTE **)(v13 + 8592) = v203 - ((2 * v203) & 0x60) - 80;
  v24[10] = BYTE2(v201);
  v23[3] = v201;
  v25[4] = HIBYTE(v202);
  *v23 = BYTE1(v201);
  LODWORD(v202) = *(unsigned __int8 *)(v34 + (BYTE1(v203) ^ 0xD0));
  **(_BYTE **)(v13 + 8600) = BYTE3(v206) - ((2 * BYTE3(v206)) & 0x60) - 80;
  v24[35] = v206;
  v23[4] = BYTE2(v206);
  v24[4] = HIBYTE(v203);
  v23[20] = ((v202 >> 7) | (2 * v202)) ^ 0x66;
  *(_BYTE *)(v21 + 64) = BYTE1(v206);
  v25[3] = BYTE6(v201);
  v210 = v206 ^ (v188 << 47);
  v211 = *(unsigned __int8 *)(v34 + (BYTE4(v206) ^ 0xD0));
  v25[1] = BYTE5(v210);
  v212 = (v211 >> 7) | (2 * v211);
  v213 = v207 ^ (((v178 & 0xFFFFFE9309388D1BLL ^ 0xB7F31C030138851BLL)
                + 0x16CF6C772E5
                + ((2 * v190) & 0xFFFFFD2612711A36)) >> 41);
  *(_BYTE *)(v21 + 44) = v212 ^ 0x66;
  v24[30] = BYTE6(v210);
  v214 = *(_BYTE *)(v35 + (((v210 >> 52) & 0xF0 | (v210 >> 60)) ^ 0xB4));
  v24[31] = v213;
  *(_BYTE *)(v21 + 80) = -91 * ((-51 * v214) ^ (8 * ((-51 * v214) ^ (20 * v214))) ^ 0xDD);
  v215 = *(_BYTE *)(v49 + (BYTE1(v213) ^ 0x96));
  *v56 = HIBYTE(v207) - ((2 * HIBYTE(v207)) & 0x60) - 80;
  *v53 = BYTE2(v213) - ((2 * BYTE2(v213)) & 0x60) - 80;
  v23[5] = BYTE4(v207);
  *v54 = BYTE3(v207) - ((2 * BYTE3(v207)) & 0x60) - 80;
  v25[9] = BYTE5(v207);
  *(_DWORD *)(v13 + 12324) = v22;
  *v57 = BYTE6(v207) - ((2 * BYTE6(v207)) & 0x60) - 80;
  *(_BYTE *)(v21 + 60) = (v215 ^ BYTE1(v213) ^ 0x9E ^ ((BYTE1(v213) ^ 0x9E) + 53) ^ 0x6B) - 115;
  *(_DWORD *)(v21 + 40) = *(_DWORD *)(v13 + 12324) + 1;
  v216 = *(_DWORD *)(v13 + 9688) < 0x10u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v209
                                        + 8
                                        * (int)((16 * v216) | (32 * v216) | (*(_QWORD *)(v13 + 9736) + 2059604084)))
                            - 8))();
}

uint64_t sub_1003244F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((487 * (((v4 + 2059602417) | 0x41) ^ 0x1A58)) ^ 0x2999 ^ (v4 + 2059604032)))
                            - 4))();
}

uint64_t sub_1003245A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (v5 ^ ((*(_DWORD *)(v6 + 9152) > v4) * v8))) - (v5 ^ v7) + v9))();
}

uint64_t sub_1003245D0@<X0>(uint64_t a1@<X3>, int a2@<W6>, unsigned int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v8 = 2243 * (v6 ^ 0x2054);
  *(_BYTE *)(a4 + ((v8 + a2) & a3) + v4) = *(_DWORD *)(v5 - 0x62AA055D109F20F3);
  return (*(uint64_t (**)(void))(a1 + 8 * (v8 ^ ((v4 == -31) * v7))))();
}

void sub_100324648()
{
  JUMPOUT(0x100324554);
}

uint64_t sub_100324654(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD))(a4
                                           + 8
                                           * (((((a1 - 22) ^ 1) & 1) * (a1 + 2059595973)) ^ (a1 + 2059604040))))(*(unsigned int *)(v4 + 8548));
}

uint64_t sub_1003246CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(*(_QWORD *)(v10 + 640) - v9 + 31) = a1 >> v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((7930 * (v9 + ((v7 + 4138) ^ 0x118Du) == 753)) ^ v7)) - 12))();
}

uint64_t sub_100324734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((50 * (((a6 - 98) ^ (v7 == 32)) & 1)) ^ a6))
                            - (((a6 - 90) | 0x68u) ^ 0x1369)))();
}

uint64_t sub_100324788@<X0>(uint64_t a1@<X6>, int a2@<W7>, unsigned int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (int)(v3 ^ ((*(_DWORD *)(v4 + 3992) > a3) * a2)))
                                         - (v3 ^ 0x1369)))(0);
}

uint64_t sub_1003247C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_1003246CC(*(unsigned int *)(v7 - 0x62AA055D109F20F3), a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1003247F4@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  *(_DWORD *)(v4 + 8236) = v3;
  v5 = v2 - 147;
  *(_DWORD *)(v4 + 8496) = *(_DWORD *)(v4 + 9528);
  v6 = *(_DWORD *)(v4 + 9424);
  *(_QWORD *)(v4 + 8408) = *(_QWORD *)(v4 + 8432);
  *(_QWORD *)(v4 + 8400) = *(_QWORD *)(v4 + 8416);
  *(_QWORD *)(v4 + 8392) = *(_QWORD *)(v4 + 8536);
  *(_QWORD *)(v4 + 8384) = *(_QWORD *)(v4 + 8488);
  *(_QWORD *)(v4 + 8376) = *(_QWORD *)(v4 + 8472);
  *(_QWORD *)(v4 + 8944) = *(_QWORD *)(v4 + 9568);
  v7 = *(_QWORD *)(v4 + 8888);
  *(_QWORD *)(v4 + 8952) = *(_QWORD *)(v4 + 9200);
  *(_QWORD *)(v4 + 8936) = *(_QWORD *)(v4 + 8880);
  *(_DWORD *)(v4 + 9116) = a1;
  *(_DWORD *)(v4 + 9272) = *(_DWORD *)(v4 + 9656);
  *(_DWORD *)(v4 + 8212) = *(_DWORD *)(v4 + 7976);
  *(_DWORD *)(v4 + 8832) = *(_DWORD *)(v4 + 9384);
  *(_DWORD *)(v4 + 9152) = *(_DWORD *)(v4 + 8964);
  *(_DWORD *)(v4 + 8368) = *(_DWORD *)(v4 + 9520);
  *(_DWORD *)(v4 + 8504) = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 8520) = *(_DWORD *)(v4 + 8464);
  *(_DWORD *)(v4 + 8356) = *(_DWORD *)(v4 + 8532);
  *(_DWORD *)(v4 + 8360) = *(_DWORD *)(v4 + 8424);
  *(_DWORD *)(v4 + 9104) = *(_DWORD *)(v4 + 9440);
  *(_DWORD *)(v4 + 8912) = *(_DWORD *)(v4 + 8872);
  *(_DWORD *)(v4 + 8512) = *(_DWORD *)(v4 + 8480);
  *(_DWORD *)(v4 + 9072) = *(_DWORD *)(v4 + 9632);
  *(_DWORD *)(v4 + 8920) = *(_DWORD *)(v4 + 9160);
  *(_DWORD *)(v4 + 9264) = *(_DWORD *)(v4 + 9624);
  *(_DWORD *)(v4 + 8904) = *(_DWORD *)(v4 + 8616);
  v8 = *(_DWORD *)(v4 + 9408);
  *(_DWORD *)(v4 + 8900) = *(_DWORD *)(v4 + 9096);
  v9 = *(_DWORD *)(v4 + 9584);
  v10 = *(_DWORD *)(v4 + 8984);
  *(_DWORD *)(v4 + 8352) = *(_DWORD *)(v4 + 9040);
  *(_DWORD *)(v4 + 8932) = *(_DWORD *)(v4 + 8612);
  v11 = *(_QWORD *)(v4 + 9744);
  *(_DWORD *)(v4 + 8572) = v10;
  *(_DWORD *)(v4 + 8552) = v8;
  *(_DWORD *)(v4 + 9184) = v9;
  *(_DWORD *)(v4 + 8608) = v6;
  *(_QWORD *)(v4 + 9416) = (v5 - 973268509) & 0xBF3FF3F7;
  v12 = 21;
  if (a2 != (v5 ^ 0x23C))
    v12 = 149;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * ((8244
                                        * (((v5 + 118 + v5 - 29) ^ (*(_BYTE *)(*(_QWORD *)(v4 + 9704)
                                                                                              + v12) == 88)) & 1)) ^ v5))
                          - 12);
  *(_DWORD *)(v4 + 9688) = 1;
  *(_QWORD *)(v4 + 8576) = v7;
  *(_DWORD *)(v4 + 9128) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 9736) = 1;
  *(_DWORD *)(v4 + 8440) = *(_DWORD *)(v4 + 8236);
  return v13();
}

uint64_t sub_1003249CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v9 = *(_DWORD *)(v8 + 8440);
  *(_DWORD *)(v8 + 9584) = *(_DWORD *)(v8 + 9184);
  *(_DWORD *)(v8 + 9408) = *(_DWORD *)(v8 + 8552);
  *(_DWORD *)(v8 + 8616) = *(_DWORD *)(v8 + 8904);
  *(_DWORD *)(v8 + 9528) = *(_DWORD *)(v8 + 8496);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 8456);
  *(_DWORD *)(v8 + 9440) = *(_DWORD *)(v8 + 9104);
  *(_DWORD *)(v8 + 8964) = *(_DWORD *)(v8 + 9152);
  *(_DWORD *)(v8 + 9384) = *(_DWORD *)(v8 + 8832);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 9320);
  *(_DWORD *)(v8 + 9656) = *(_DWORD *)(v8 + 9272);
  *(_QWORD *)(v8 + 9608) = *(_QWORD *)(v8 + 9016);
  *(_QWORD *)(v8 + 9600) = *(_QWORD *)(v8 + 9280);
  v10 = *(_QWORD *)(v8 + 9416);
  *(_QWORD *)(v8 + 9568) = *(_QWORD *)(v8 + 8944);
  *(_QWORD *)(v8 + 8888) = *(_QWORD *)(v8 + 8576);
  *(_QWORD *)(v8 + 9200) = *(_QWORD *)(v8 + 8952);
  *(_QWORD *)(v8 + 8880) = *(_QWORD *)(v8 + 8936);
  *(_DWORD *)(v8 + 9448) = *(_DWORD *)(v8 + 9116);
  *(_DWORD *)(v8 + 9424) = *(_DWORD *)(v8 + 8608);
  v11 = *(_DWORD *)(v8 + 8504);
  v12 = *(_DWORD *)(v8 + 8520);
  *(_DWORD *)(v8 + 8872) = *(_DWORD *)(v8 + 8912);
  v13 = *(_DWORD *)(v8 + 8512);
  *(_DWORD *)(v8 + 9160) = *(_DWORD *)(v8 + 8920);
  v14 = *(_DWORD *)(v8 + 9224);
  *(_DWORD *)(v8 + 9096) = *(_DWORD *)(v8 + 8900);
  *(_DWORD *)(v8 + 8984) = *(_DWORD *)(v8 + 8572);
  v15 = *(_DWORD *)(v8 + 8932);
  *(_DWORD *)(v8 + 9240) = v9;
  *(_DWORD *)(v8 + 9040) = *(_DWORD *)(v8 + 8352);
  *(_DWORD *)(v8 + 8480) = v13;
  *(_DWORD *)(v8 + 8424) = *(_DWORD *)(v8 + 8360);
  *(_DWORD *)(v8 + 8532) = *(_DWORD *)(v8 + 8356);
  *(_DWORD *)(v8 + 8464) = v12;
  *(_DWORD *)(v8 + 9520) = *(_DWORD *)(v8 + 8368);
  *(_QWORD *)(v8 + 8472) = *(_QWORD *)(v8 + 8376);
  *(_QWORD *)(v8 + 8488) = *(_QWORD *)(v8 + 8384);
  *(_QWORD *)(v8 + 8536) = *(_QWORD *)(v8 + 8392);
  *(_QWORD *)(v8 + 8416) = *(_QWORD *)(v8 + 8400);
  *(_QWORD *)(v8 + 8432) = *(_QWORD *)(v8 + 8408);
  *(_DWORD *)(v8 + 9256) = v11;
  v4 = *(_DWORD *)(v8 + 9072);
  *(_DWORD *)(v8 + 9624) = *(_DWORD *)(v8 + 9264);
  *(_DWORD *)(v8 + 9224) = v14;
  *(_DWORD *)(v8 + 9592) = a4;
  *(_DWORD *)(v8 + 9632) = v4;
  v5 = (v10 + 388079077) & 0x63A15BE7;
  *(_DWORD *)(v8 + 9504) = v15 & 0xFFFFFFFC;
  *(_DWORD *)(v8 + 9464) = v15 - 116;
  *(_DWORD *)(v8 + 8612) = v15;
  *(_DWORD *)(v8 + 9416) = v15 & 0xFFFFFFFE;
  *(_DWORD *)(v8 + 9400) = v5 - 112;
  v6 = 2226 * (((((v5 ^ 0x59B) - 141284632) & 0x86BCFFB) + 4659) ^ 0x1992);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                                     + 8
                                                     * ((448
                                                       * (*(_DWORD *)(v8 + 9128) == ((v6 - 1797846996) & 0x6B28FFDF)
                                                                                  - 10964)) ^ v6))
                                         - ((v6 + 459) | 0x220u)
                                         + 9895))(*(unsigned int *)(v8 + 9736));
}

uint64_t sub_100324A9C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  _BOOL4 v8;

  v5 = 3613 * ((a1 + 4807) ^ 0x1D4A);
  *(_BYTE *)(v4 + 4013) = v2 ^ 0xF4;
  v6 = v1 - 7170 + v5 + 1212787022;
  v8 = v6 <= 0xB18A04E0
    || (((v2 | ((v5 - 2145066024) | 0x5181005) ^ 0x853D109C) - (v2 & 0x74) + 125) & ((v5 - 153) ^ 0x1B5D)) - 1316354847 <= v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((14823 * v8) ^ v5)) - 12))(7223);
}

void sub_100324B28()
{
  JUMPOUT(0x100324B58);
}

uint64_t sub_100324B5C@<X0>(uint64_t a1@<X0>, char a2@<W6>, char a3@<W8>)
{
  int v3;
  char v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  *(_BYTE *)(a1 + 3982) = ((v4 + a3 - 82 - 11) | 0x10) ^ a2 ^ 0xED;
  v8 = *(uint64_t (**)(void))(v7 + 8 * ((11681 * ((v6 - 1302587220) > 7)) ^ v3));
  *(_DWORD *)(v5 + 9688) = 14;
  return v8();
}

uint64_t sub_100324BB0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_BYTE *)(a1 + 4013) = v5 ^ 0xF4;
  v7 = *(uint64_t (**)(void))(v6
                           + 8
                           * (int)((((v4 - 1302587228) > 7)
                                  * (((((a2 - 379974459) & 0x16A5F973) - v2 - 851175782) & 0xAD7ED3FF) + 5973)) ^ (a2 - 379974459) & 0x16A5F973));
  *(_DWORD *)(v3 + 9688) = 15;
  return v7();
}

void sub_100324BF0()
{
  JUMPOUT(0x1002FA358);
}

uint64_t sub_100324C40@<X0>(int a1@<W8>)
{
  int v1;
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v5 + 3889) = v2 ^ 0xF4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (((((46 * (a1 ^ 0xE60) - 350543289) & 0x14E4D15D ^ 0x175u)
                                                         + v1
                                                         - 1765825427 > 7)
                                                        * (((((46 * (a1 ^ 0xE60) - 350543289) & 0x14E4D15D) + 728) ^ (v4 + 1051))
                                                         + 2059597129)) ^ (46 * (a1 ^ 0xE60) - 350543289) & 0x14E4D15D))
                                          - 8))(7223);
}

uint64_t sub_100324C94(unsigned int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t (*v5)(void);

  v4 = *(_DWORD *)(v2 + 9120);
  *(_DWORD *)(v2 + 6188) = *(_DWORD *)(v2 + 6188) - 5148 + ((v1 - 1657760176) & 0x62CF7C1D);
  v5 = *(uint64_t (**)(void))(v3 + 8 * (v1 ^ (2320 * (v4 >= a1))));
  *(_DWORD *)(v2 + 9592) = 39;
  *(_QWORD *)(v2 + 9600) = *(_QWORD *)(v2 + 6768);
  *(_QWORD *)(v2 + 9608) = *(_QWORD *)(v2 + 7568);
  *(_DWORD *)(v2 + 9448) = a1;
  *(_DWORD *)(v2 + 8212) = *(_DWORD *)(v2 + 7976);
  *(_DWORD *)(v2 + 9616) = a1;
  *(_DWORD *)(v2 + 9664) = v4;
  *(_DWORD *)(v2 + 9240) = *(_DWORD *)(v2 + 8236);
  return v5();
}

uint64_t sub_100324D3C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * (v2 ^ (242 * (v1 != v0))))
                                         - ((3 * (((v2 - 566) | 0x1896) ^ 0x1F8Eu)) ^ 0x9F7)))((**(_DWORD **)(v3 + 9360) * *(_DWORD *)(v3 + 9688)));
}

uint64_t sub_100324DB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a4 ^ (452 * (v4 != 1)))) - 8))();
}

uint64_t sub_100324E20@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_DWORD *)(v9 + v7) = *(_DWORD *)(a6 + v7) + v8 + a4 + *(_DWORD *)(a2 + v7) * a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a5 + 1 != v6) * v10) ^ a3)) - 8))();
}

uint64_t sub_100324E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7
                                                                                 + 8
                                                                                 * (int)(((((a5 + 675) | 0xD1) ^ 0x853D19E4 ^ (v8 + 543) ^ (((a5 + 675) | 0xD1) + 2034889031) & 0x86B615DF)
                                                                                        * (v6 > v5)) ^ ((a5 + 675) | 0xD1)))
                                                                     - 4))(a1, a2, 0x9D55FAA2EF60DF0DLL);
}

uint64_t sub_100324EF0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(uint64_t, _QWORD, unint64_t))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * (int)(((a2 ^ 0x853D19E4 ^ (v6 + 543) ^ (a2 + 2034889031) & 0x86B615DF)
                                                                                       * (v3 > v2)) ^ a2))
                                                                    - 4))(a1, *(_QWORD *)(v4 + 9680), 0x9D55FAA2EF60DF0DLL);
}

uint64_t sub_100324F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(v7 + 8 * ((13245 * (v6 != ((a6 - v9 + 2529) ^ v10) - 2547)) ^ (v8 + a6 + 1567))))();
}

uint64_t sub_100324FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;

  *(_DWORD *)(v9 + a3) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((((v10 - 3894) ^ v14) + a7 != v7) * v15) ^ (v10 - 3894)))
                            - ((v12 + v10 - 3894 - 2547) ^ v13)))();
}

void sub_100325024()
{
  JUMPOUT(0x100324F74);
}

uint64_t sub_10032502C@<X0>(uint64_t a1@<X2>, unsigned int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v7 = a3
     + v4
     + ((*(unsigned int *)(a4 + a1) - 0x4D3636417EB0E10CLL - ((2 * *(unsigned int *)(a4 + a1)) & 0x1029E3DE8)) ^ 0xB2C9C9BE814F1EF4);
  v8 = v7 + (a2 ^ 0xB2C9C9BE814F0FEELL) - ((2 * v7) & 0x6593937D029E3DE8);
  *(_DWORD *)(v5 - 0x62AA055D109F20F3) = v8 ^ 0x814F1EF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((74 * ((v8 ^ 0xB2C9C9BE00000000) >> 32 == 0)) ^ a2)) - 12))();
}

uint64_t sub_100325110@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;

  v14 = *(unsigned int *)(a6 + a1)
      + (v6 ^ HIDWORD(v7))
      + v9
      - (v12 & (2 * (*(unsigned int *)(a6 + a1) + (v6 ^ HIDWORD(v7)))));
  *(_DWORD *)(v8 + a1) = ((a2 ^ a3) * a4) ^ (v13 - 601) ^ v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((((v14 ^ v10) >> 32 == 0) * a5) ^ a2)) - 12))();
}

uint64_t sub_100325170(int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;

  *(_DWORD *)(v4 + a3) = 0;
  v9 = *(_DWORD *)(v5 + 9736) + 1;
  *(_DWORD *)(v5 + 9736) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v8 + v7 + (a1 ^ 0x410) - 1663 - 813) * (v9 == v3)) ^ a1)) - 8))();
}

uint64_t sub_1003251C0(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v9 = (v7 + 500410810) & 0xE22C51DF;
  v10 = v9 - 2059596029;
  *(_BYTE *)(v4 - v6 + 31) = *(_DWORD *)(v5 - 0x62AA055D109F20F3);
  *(_QWORD *)(v8 + 9416) = v10;
  v11 = *(uint64_t (**)(void))(a4 + 8 * (int)(((v10 ^ 0x853D176A) * (v6 != 31)) ^ v9));
  *(_DWORD *)(v8 + 9464) = 994009863;
  *(_DWORD *)(v8 + 4040) = 118;
  *(_QWORD *)(v8 + 9456) = *(_QWORD *)(v8 + 7048);
  *(_QWORD *)(v8 + 9608) = *(_QWORD *)(v8 + 1792);
  *(_DWORD *)(v8 + 7944) = a1;
  *(_DWORD *)(v8 + 5344) = *(_DWORD *)(v8 + 6072);
  *(_DWORD *)(v8 + 5340) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 5348) = *(_DWORD *)(v8 + 6084);
  *(_DWORD *)(v8 + 5336) = *(_DWORD *)(v8 + 6080);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 6976);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 7096);
  *(_DWORD *)(v8 + 9600) = *(_DWORD *)(v8 + 7020);
  *(_DWORD *)(v8 + 9488) = *(_DWORD *)(v8 + 7064);
  *(_DWORD *)(v8 + 9472) = *(_DWORD *)(v8 + 7136);
  *(_DWORD *)(v8 + 4292) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 5312) = *(_DWORD *)(v8 + 9680);
  return v11();
}

uint64_t sub_1003252EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                     + 8
                                                     * ((9076
                                                       * (v0 + ((v1 + 1126) ^ 0x572) == ((v1 + 1126) ^ 0x46E) - 244)) ^ (v1 + 1126)))
                                         - 4))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_100325334@<X0>(unsigned int a1@<W0>, uint64_t a2@<X3>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v3 ^ (11316 * (a3 < a1)))) - 23 * (v3 ^ 0x576u) + 272))();
}

uint64_t sub_100325374(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v10 = (v7 - 583041946) & 0xA7FD9257;
  *(_QWORD *)(v9 + 9416) = v10;
  *(_BYTE *)(v4 - v8 + 31) = v6 >> v5;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(a4
                                      + 8
                                      * ((148
                                        * (((v7 - 2145841479) | 0x5240005u) + v8 + (v10 ^ 0xFFFFFFFFFFFFFFFDLL) == 32)) ^ v7))
                          - 8);
  *(_DWORD *)(v9 + 9464) = 994009821;
  *(_QWORD *)(v9 + 9456) = *(_QWORD *)(v9 + 7048);
  *(_QWORD *)(v9 + 9608) = *(_QWORD *)(v9 + 1808);
  *(_DWORD *)(v9 + 7944) = a1;
  *(_DWORD *)(v9 + 5344) = *(_DWORD *)(v9 + 6072);
  *(_DWORD *)(v9 + 5340) = *(_DWORD *)(v9 + 7616);
  *(_DWORD *)(v9 + 5348) = *(_DWORD *)(v9 + 6084);
  *(_DWORD *)(v9 + 5336) = *(_DWORD *)(v9 + 6080);
  *(_DWORD *)(v9 + 9664) = *(_DWORD *)(v9 + 6976);
  *(_DWORD *)(v9 + 9616) = *(_DWORD *)(v9 + 7096);
  *(_DWORD *)(v9 + 9600) = *(_DWORD *)(v9 + 7020);
  *(_DWORD *)(v9 + 9488) = *(_DWORD *)(v9 + 7064);
  *(_DWORD *)(v9 + 9472) = *(_DWORD *)(v9 + 7136);
  *(_DWORD *)(v9 + 4292) = *(_DWORD *)(v9 + 8280);
  *(_DWORD *)(v9 + 5312) = *(_DWORD *)(v9 + 9680);
  return v11();
}

uint64_t sub_100325480()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 9744)
                                           + 8
                                           * (((((v1 - 22) ^ (v0 == 24)) & 1) * (v1 + 2059595973)) ^ (v1 + 2059604040))))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_1003254E4@<X0>(unsigned int a1@<W0>, uint64_t a2@<X3>, unsigned int a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 ^ 0x2477) * (a1 > a3)) ^ v3)))();
}

uint64_t sub_100325518(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100325374(a1, a2, a3, a4);
}

void sub_10032554C(int a1@<W0>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = (a1 - 2059596214);
  *(_QWORD *)(v4 + 9416) = v5;
  *(_DWORD *)(v4 + 5316) = ((a3 | 0xCEE0FA6C) ^ v5) + v3;
  *(_DWORD *)(v4 + 9464) = 994009797;
  *(_QWORD *)(v4 + 9456) = *(_QWORD *)(v4 + 7048);
  *(_QWORD *)(v4 + 9608) = *(_QWORD *)(v4 + 1560);
  *(_DWORD *)(v4 + 7944) = a2;
  JUMPOUT(0x1003255B4);
}

uint64_t sub_100325610()
{
  return sub_1003286F4(7223);
}

void sub_1003256A4()
{
  JUMPOUT(0x1003256D0);
}

void sub_100325734()
{
  JUMPOUT(0x100325760);
}

void sub_1003257B8()
{
  JUMPOUT(0x100326864);
}

uint64_t sub_1003257E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((421 * (v7 >= (v8 ^ 0x8A ^ ((_BYTE)v8 - 104) & 0xEFu))) ^ v8))
                            - 8))();
}

uint64_t sub_100325834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((v7 >= (v8 ^ 0xE7u)) * (v8 - 10963)) ^ v8)) - 4))();
}

uint64_t sub_100325864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * ((35
                                * (((*(_DWORD *)(v8 + 5332) == ((v7 ^ 0x3A) + 60)) ^ ((v7 ^ 0x3A) + 28)) & 1)) ^ v7 ^ 0x3C3A)))();
}

void sub_1003258BC(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 7) = a2;
  JUMPOUT(0x1002EC44CLL);
}

uint64_t sub_1003258D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((121 * (v7 != (((v8 + 54) ^ 0xF9) + v8 + 54))) ^ (v8 - 2470)))
                            - 8))();
}

void sub_10032591C(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 6) = a2;
  JUMPOUT(0x1002EC44CLL);
}

void sub_10032592C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2928) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_100325940(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2936) = a1;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_100325954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v6;
  int v7;
  unint64_t v8;
  uint64_t v9;

  *(_BYTE *)(*(_QWORD *)(v9 + 7808) + ((v7 + 2743) ^ 0x1DBALL) - v5) = v8 >> v6;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(a5
                                                                      + 8
                                                                      * (((11 * (v7 ^ 0x13B3) - 3354) * (v5 != 31)) ^ v7))
                                                          - 8))(11 * (v7 ^ 0x13B3u), *(_QWORD *)(v9 + 7872), 1158054092);
}

uint64_t sub_1003259BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8
                                        * (int)(((v4 == 24) * (((a4 + 1204863513) & 0xB82F3D6F ^ 0x3A55) + a4 - 2743)) ^ a4))
                            - 4))();
}

uint64_t sub_100325A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8
                                        * ((139 * (((v5 < *(_DWORD *)(v7 + 8272)) ^ (v6 + 119)) & 1)) ^ v6))
                            - ((v6 - 2624) ^ 0x12EALL)))();
}

uint64_t sub_100325A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100325954(a1, a2, a3, a4, a5);
}

uint64_t sub_100325AB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)(*(_QWORD *)(v8 + 7816) - v6 + 31) = a3 >> v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((14138 * ((((v5 + 3476) | 8u) ^ 0x208BLL) + v6 == 32)) ^ v5))
                            - (v5 ^ 0x1C11u)
                            + 3831))();
}

uint64_t sub_100325B20(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * ((6686 * (v1 == (((a1 + 261) | 0x2EA) ^ 0x12CE))) ^ a1))
                            - 4))();
}

uint64_t sub_100325B58(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((((a1 + 1007) ^ 0x1310) * (*(_DWORD *)(v6 + 9152) > v5)) ^ a1))
                            - 4))();
}

uint64_t sub_100325B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100325AB4(a1, a2 + 4, *(unsigned int *)(a2 - 0x62AA055D109F20F3), a4, a5);
}

uint64_t sub_100325BC0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t (*v8)(void);

  v7 = v1 - 300;
  *(_BYTE *)(a1 + 3951) = v4 ^ (((v7 - 115) & 0xEF) + ((v6 + v7 - 82) ^ 0x32));
  v8 = *(uint64_t (**)(void))(v5 + 8 * ((5253 * ((v3 - 1302587228) > 7)) ^ v7));
  *(_DWORD *)(v2 + 9688) = 13;
  return v8();
}

void sub_100325C04(int a1)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 8408) = *(_QWORD *)(v2 + 8432);
  *(_QWORD *)(v2 + 8400) = *(_QWORD *)(v2 + 8416);
  *(_QWORD *)(v2 + 8392) = *(_QWORD *)(v2 + 8536);
  *(_QWORD *)(v2 + 8384) = *(_QWORD *)(v2 + 8488);
  *(_QWORD *)(v2 + 8376) = *(_QWORD *)(v2 + 8472);
  *(_QWORD *)(v2 + 8944) = *(_QWORD *)(v2 + 9568);
  *(_QWORD *)(v2 + 8576) = *(_QWORD *)(v2 + 8888);
  *(_QWORD *)(v2 + 8952) = *(_QWORD *)(v2 + 9200);
  *(_QWORD *)(v2 + 8936) = *(_QWORD *)(v2 + 8880);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_DWORD *)(v2 + 8212) = *(_DWORD *)(v2 + 7976);
  *(_DWORD *)(v2 + 8832) = *(_DWORD *)(v2 + 9384);
  *(_DWORD *)(v2 + 9152) = *(_DWORD *)(v2 + 8964);
  *(_DWORD *)(v2 + 8368) = *(_DWORD *)(v2 + 9520);
  *(_DWORD *)(v2 + 8608) = *(_DWORD *)(v2 + 9424);
  *(_DWORD *)(v2 + 8504) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8520) = *(_DWORD *)(v2 + 8464);
  *(_DWORD *)(v2 + 9128) = a1;
  *(_DWORD *)(v2 + 8356) = *(_DWORD *)(v2 + 8532);
  *(_DWORD *)(v2 + 8360) = *(_DWORD *)(v2 + 8424);
  *(_DWORD *)(v2 + 9104) = *(_DWORD *)(v2 + 9440);
  *(_DWORD *)(v2 + 8912) = *(_DWORD *)(v2 + 8872);
  *(_DWORD *)(v2 + 8512) = *(_DWORD *)(v2 + 8480);
  *(_DWORD *)(v2 + 9072) = *(_DWORD *)(v2 + 9632);
  *(_DWORD *)(v2 + 8920) = *(_DWORD *)(v2 + 9160);
  *(_DWORD *)(v2 + 8496) = *(_DWORD *)(v2 + 9528);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8904) = *(_DWORD *)(v2 + 8616);
  *(_DWORD *)(v2 + 8552) = *(_DWORD *)(v2 + 9408);
  *(_DWORD *)(v2 + 8900) = *(_DWORD *)(v2 + 9096);
  *(_DWORD *)(v2 + 9184) = *(_DWORD *)(v2 + 9584);
  *(_DWORD *)(v2 + 8572) = *(_DWORD *)(v2 + 8984);
  *(_DWORD *)(v2 + 8440) = v1;
  *(_DWORD *)(v2 + 8352) = *(_DWORD *)(v2 + 9040);
  *(_DWORD *)(v2 + 8932) = *(_DWORD *)(v2 + 8612);
  JUMPOUT(0x100325D2CLL);
}

uint64_t sub_100325DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;

  *(_DWORD *)(v7 + 7776) = 0;
  *(_DWORD *)(v7 + 9576) = 0;
  *(_DWORD *)(v7 + 9488) = 0;
  *(_DWORD *)(v7 + 9472) = 0;
  v8 = (v6 + 20450802) | 0x84050005;
  v9 = (v6 + 5723);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * ((7455 * ((*(_BYTE *)(*(_QWORD *)(v7 + 8248) + 4560) & 1) == 0)) ^ v6))
                                                                                              + 2235371539
                                                                                              - v8
                                                                                              - 8);
  *(_QWORD *)(v7 + 7144) = v8;
  *(_QWORD *)(v7 + 8432) = *(_QWORD *)(v7 + 8408);
  *(_QWORD *)(v7 + 8416) = *(_QWORD *)(v7 + 8400);
  *(_QWORD *)(v7 + 8536) = *(_QWORD *)(v7 + 8392);
  *(_QWORD *)(v7 + 8488) = *(_QWORD *)(v7 + 8384);
  *(_QWORD *)(v7 + 8472) = *(_QWORD *)(v7 + 8376);
  *(_QWORD *)(v7 + 9568) = *(_QWORD *)(v7 + 8944);
  *(_QWORD *)(v7 + 8888) = *(_QWORD *)(v7 + 8576);
  *(_QWORD *)(v7 + 9200) = *(_QWORD *)(v7 + 8952);
  *(_QWORD *)(v7 + 8880) = *(_QWORD *)(v7 + 8936);
  *(_DWORD *)(v7 + 9384) = *(_DWORD *)(v7 + 8832);
  *(_DWORD *)(v7 + 8964) = *(_DWORD *)(v7 + 9152);
  *(_DWORD *)(v7 + 9520) = *(_DWORD *)(v7 + 8368);
  *(_DWORD *)(v7 + 8464) = *(_DWORD *)(v7 + 8520);
  *(_DWORD *)(v7 + 8532) = *(_DWORD *)(v7 + 8356);
  *(_DWORD *)(v7 + 8424) = *(_DWORD *)(v7 + 8360);
  *(_DWORD *)(v7 + 8872) = *(_DWORD *)(v7 + 8912);
  *(_DWORD *)(v7 + 8480) = *(_DWORD *)(v7 + 8512);
  *(_DWORD *)(v7 + 9160) = *(_DWORD *)(v7 + 8920);
  *(_DWORD *)(v7 + 9624) = *(_DWORD *)(v7 + 9264);
  *(_DWORD *)(v7 + 8616) = *(_DWORD *)(v7 + 8904);
  *(_DWORD *)(v7 + 9096) = *(_DWORD *)(v7 + 8900);
  *(_DWORD *)(v7 + 9584) = *(_DWORD *)(v7 + 9184);
  *(_DWORD *)(v7 + 8984) = *(_DWORD *)(v7 + 8572);
  *(_DWORD *)(v7 + 8236) = *(_DWORD *)(v7 + 8440);
  *(_DWORD *)(v7 + 9040) = *(_DWORD *)(v7 + 8352);
  *(_DWORD *)(v7 + 8612) = *(_DWORD *)(v7 + 8932);
  v11 = *(_DWORD *)(v7 + 8608);
  *(_DWORD *)(v7 + 7280) = v11;
  *(_DWORD *)(v7 + 9424) = v11;
  v12 = *(_DWORD *)(v7 + 8504);
  *(_DWORD *)(v7 + 7344) = v12;
  *(_DWORD *)(v7 + 9256) = v12;
  v13 = *(_DWORD *)(v7 + 8496);
  *(_DWORD *)(v7 + 7208) = v13;
  *(_DWORD *)(v7 + 9528) = v13;
  v14 = *(_DWORD *)(v7 + 8552);
  *(_DWORD *)(v7 + 7336) = v14;
  *(_DWORD *)(v7 + 9408) = v14;
  *(_DWORD *)(v7 + 7216) = 2;
  v15 = *(_QWORD *)(v7 + 6176);
  *(_QWORD *)(v7 + 7240) = v15;
  *(_QWORD *)(v7 + 7248) = *(_QWORD *)(v7 + 6104);
  *(_QWORD *)(v7 + 7232) = v15;
  *(_DWORD *)(v7 + 8080) = *(_DWORD *)(v7 + 8032);
  *(_DWORD *)(v7 + 8260) = *(_DWORD *)(v7 + 8332);
  *(_DWORD *)(v7 + 7192) = *(_DWORD *)(v7 + 7436);
  *(_DWORD *)(v7 + 7272) = *(_DWORD *)(v7 + 7456);
  *(_DWORD *)(v7 + 9448) = *(_DWORD *)(v7 + 9116);
  *(_DWORD *)(v7 + 7312) = *(_DWORD *)(v7 + 9328);
  *(_DWORD *)(v7 + 8064) = *(_DWORD *)(v7 + 7992);
  *(_DWORD *)(v7 + 6744) = *(_DWORD *)(v7 + 8548);
  *(_DWORD *)(v7 + 7256) = *(_DWORD *)(v7 + 7500);
  *(_DWORD *)(v7 + 7128) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 8136) = *(_DWORD *)(v7 + 9480);
  *(_DWORD *)(v7 + 7168) = *(_DWORD *)(v7 + 7464);
  *(_DWORD *)(v7 + 7184) = *(_DWORD *)(v7 + 7488);
  *(_DWORD *)(v7 + 7296) = *(_DWORD *)(v7 + 7484);
  *(_DWORD *)(v7 + 7424) = *(_DWORD *)(v7 + 8456);
  *(_DWORD *)(v7 + 7304) = *(_DWORD *)(v7 + 7480);
  *(_DWORD *)(v7 + 7264) = *(_DWORD *)(v7 + 6100);
  *(_DWORD *)(v7 + 7176) = *(_DWORD *)(v7 + 9248);
  *(_DWORD *)(v7 + 7288) = *(_DWORD *)(v7 + 7476);
  *(_DWORD *)(v7 + 7224) = *(_DWORD *)(v7 + 9128);
  *(_DWORD *)(v7 + 9136) = *(_DWORD *)(v7 + 9056);
  *(_DWORD *)(v7 + 8040) = *(_DWORD *)(v7 + 8020);
  *(_DWORD *)(v7 + 7416) = *(_DWORD *)(v7 + 7432);
  *(_DWORD *)(v7 + 8116) = *(_DWORD *)(v7 + 8024);
  *(_DWORD *)(v7 + 7328) = *(_DWORD *)(v7 + 8000);
  *(_DWORD *)(v7 + 8272) = *(_DWORD *)(v7 + 7984);
  *(_DWORD *)(v7 + 8056) = *(_DWORD *)(v7 + 8008);
  *(_DWORD *)(v7 + 7112) = *(_DWORD *)(v7 + 0x2000);
  *(_DWORD *)(v7 + 7408) = *(_DWORD *)(v7 + 7460);
  *(_DWORD *)(v7 + 7160) = *(_DWORD *)(v7 + 7440);
  *(_DWORD *)(v7 + 7320) = *(_DWORD *)(v7 + 9156);
  *(_DWORD *)(v7 + 9400) = *(_DWORD *)(v7 + 9224);
  *(_DWORD *)(v7 + 7200) = *(_DWORD *)(v7 + 9064);
  *(_DWORD *)(v7 + 6760) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 9392) = *(_DWORD *)(v7 + 8544);
  *(_DWORD *)(v7 + 9656) = *(_DWORD *)(v7 + 9272);
  *(_DWORD *)(v7 + 7976) = *(_DWORD *)(v7 + 8212);
  *(_DWORD *)(v7 + 9440) = *(_DWORD *)(v7 + 9104);
  *(_DWORD *)(v7 + 9632) = *(_DWORD *)(v7 + 9072);
  *(_DWORD *)(v7 + 9688) = 1;
  *(_DWORD *)(v7 + 7792) = 1;
  *(_DWORD *)(v7 + 9504) = 1;
  *(_DWORD *)(v7 + 7784) = 1;
  *(_DWORD *)(v7 + 9496) = 1;
  *(_DWORD *)(v7 + 9456) = 1;
  *(_DWORD *)(v7 + 9464) = 1;
  return v10(a1, v9, a3, a4, 1, a6, v15);
}

uint64_t sub_1003261C4@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *(_DWORD *)(v6 + 9576) = 0;
  *(_DWORD *)(v6 + 9496) = 0;
  *(_DWORD *)(v6 + 9012) = 0;
  *(_DWORD *)(v6 + 9488) = 0;
  *(_DWORD *)(v6 + 9472) = 0;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((a2 | 0xE) ^ 0x384) * (*(_DWORD *)(v6 + 9456) & 1)) ^ (a2 | 0xE)))
                         - (((a2 | 0xEu) + 125) ^ 0x280));
  *(_QWORD *)(v6 + 9600) = v3;
  *(_QWORD *)(v6 + 9608) = *(_QWORD *)(v6 + 9016);
  *(_DWORD *)(v6 + 9448) = a1;
  *(_DWORD *)(v6 + 8212) = *(_DWORD *)(v6 + 7976);
  *(_DWORD *)(v6 + 9616) = v4;
  *(_DWORD *)(v6 + 8196) = *(_DWORD *)(v6 + 9520);
  *(_DWORD *)(v6 + 9456) = *(_DWORD *)(v6 + 4332);
  *(_DWORD *)(v6 + 9664) = *(_DWORD *)(v6 + 8456);
  *(_DWORD *)(v6 + 9432) = 1;
  *(_DWORD *)(v6 + 9080) = 1;
  *(_DWORD *)(v6 + 9240) = v2;
  *(_DWORD *)(v6 + 9592) = *(_DWORD *)(v6 + 8328);
  return v7();
}

void sub_100326288(int a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 9120) = a1;
  JUMPOUT(0x1003262C0);
}

uint64_t sub_10032634C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((76 * ((((((_BYTE)v8 + 112) & 0xB6) - 32) & 0xFEu) > v7)) ^ v8))
                            - 12))();
}

uint64_t sub_100326390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((25 * (((v7 < 0x16u) ^ (v8 + 58)) & 1)) ^ v8)))();
}

uint64_t sub_1003263C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((31
                                          * (*(_DWORD *)(v8 + 5332) == (((v7 + 81) | 5) + 16))) ^ (v7 + 714)))
                            - 4))();
}

void sub_10032641C(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 22) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_100326430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (int)(((((v7 == 21) ^ ((v8 & 0xCD) + 110)) & 1)
                                               * (v9 + (((v8 & 0x4C54FFCD) - 813746834) & 0xB5BDBBDF) - 253)) ^ v8 & 0x4C54FFCD))
                            - 4))();
}

void sub_100326480(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 20) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_100326490(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 23) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_1003264A0(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 21) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_1003264BC@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;

  *(_DWORD *)(v2 - 0x62AA055D109F20F3) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 + 1 == a2) * ((v4 ^ v5) * v6 + 2266)) ^ v4)) - 8))();
}

uint64_t sub_100326500()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (42 * (v1 != 9)))) - ((v0 - 1243) | 0x50u) + 2762))();
}

uint64_t sub_10032653C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 + 4091) ^ 0x1AEA) * (v1 == 1302587220)) ^ v0)) - 12))();
}

void sub_100326574()
{
  JUMPOUT(0x1002FB574);
}

uint64_t sub_1003266B0()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((29 * (((((v0 - 2248) | 0x2B6) ^ 0x99999999) & 0x4B) == v1)) ^ v0))
                            - ((2 * v0) ^ 0x1996)))();
}

uint64_t sub_1003266F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X8>)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = (((v5 - 1320536597) & 0x4EB5BEBF) - 6) ^ v6;
  *(_QWORD *)(v7 + 9576) = (a5 >> 8) ^ 0xB2E2D4339C1D2C1FLL;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                        + 8
                                                                                        * (v5 ^ (13361
                                                                                               * (v8 != 1302587220))))
                                                                            - 12);
  *(_DWORD *)(v7 + 6812) = 1302587220;
  return v11(a1, a2, a3, a4, v10);
}

uint64_t sub_10032677C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_QWORD *)(v8 + 9576) = ((a6 | (a2 << 56)) ^ 0xF42B1D8D1D523446 ^ (v6 - 2901))
                         + v7
                         - ((2 * ((a6 | (a2 << 56)) ^ 0xF42B1D8D1D523446 ^ (v6 - 2901))) & 0x6593937D029E3DE8);
  *(_DWORD *)(v8 + 6812) = v9;
  return sub_10030EFC0(a1, a2, a3, a4, a5);
}

uint64_t sub_1003267C8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (398 * (v1 == 1302587220))))
                            - ((v0 - 1087758012) & 0x40D5DF3D)
                            + 1841))();
}

void sub_10032682C()
{
  JUMPOUT(0x100326844);
}

uint64_t sub_1003268CC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v2;
  char v3;
  uint64_t v4;
  char v5;
  int v6;

  v6 = ((a2 ^ 0x1B1C) - 666083955) & 0x27B398B6;
  *(_BYTE *)(a1 + 168) = v3 ^ (((v5 + v6 + 4) & 0xF8) + 76);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((8795 * ((v6 ^ 0x8ACu) + v2 - 1765825427 > 7)) ^ v6))
                                          - 4))(7223);
}

uint64_t sub_100326984@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 4044) = a2 ^ 0xF4;
  return sub_10032B1FC();
}

void sub_1003269E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  *(_DWORD *)(v12 + 8764) = *(_DWORD *)(v12 + 8828);
  *(_DWORD *)(v12 + 8768) = *(_DWORD *)(v12 + 8860);
  *(_DWORD *)(v12 + 9272) = *(_DWORD *)(v12 + 9656);
  *(_DWORD *)(v12 + 8748) = *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 9520) = *(_DWORD *)(v12 + 8196);
  *(_DWORD *)(v12 + 8736) = *(_DWORD *)(v12 + 8792);
  *(_DWORD *)(v12 + 8728) = *(_DWORD *)(v12 + 8816);
  *(_DWORD *)(v12 + 8744) = *(_DWORD *)(v12 + 8628);
  *(_DWORD *)(v12 + 7752) = v11;
  *(_DWORD *)(v12 + 8720) = *(_DWORD *)(v12 + 8968);
  *(_DWORD *)(v12 + 8760) = *(_DWORD *)(v12 + 9256);
  *(_DWORD *)(v12 + 8752) = *(_DWORD *)(v12 + 9480);
  *(_DWORD *)(v12 + 8232) = v8;
  *(_DWORD *)(v12 + 8712) = *(_DWORD *)(v12 + 8868);
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v12 + 8840);
  *(_DWORD *)(v12 + 8688) = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 8680) = *(_DWORD *)(v12 + 8808);
  *(_DWORD *)(v12 + 7964) = v10;
  *(_DWORD *)(v12 + 9136) = *(_DWORD *)(v12 + 9056);
  *(_DWORD *)(v12 + 8672) = *(_DWORD *)(v12 + 8848);
  *(_DWORD *)(v12 + 9080) = *(_DWORD *)(v12 + 9632);
  *(_DWORD *)(v12 + 8132) = v9;
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 9432) = *(_DWORD *)(v12 + 9172);
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8656) = *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 8648) = *(_DWORD *)(v12 + 9004);
  *(_DWORD *)(v12 + 8640) = *(_DWORD *)(v12 + 8784);
  *(_DWORD *)(v12 + 9008) = *(_DWORD *)(v12 + 9156);
  *(_DWORD *)(v12 + 9400) = *(_DWORD *)(v12 + 9224);
  *(_DWORD *)(v12 + 8704) = *(_DWORD *)(v12 + 9064);
  *(_DWORD *)(v12 + 9392) = *(_DWORD *)(v12 + 8544);
  *(_DWORD *)(v12 + 9012) = *(_DWORD *)(v12 + 9240);
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 9680) = *(_QWORD *)(v12 + 6352);
  *(_DWORD *)(v12 + 7532) = a8;
  JUMPOUT(0x10032CF7CLL);
}

uint64_t sub_100326B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  unsigned int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((244 * (v7 >= (((v8 + 110) ^ 3) + 35))) ^ v8)))();
}

uint64_t sub_100326B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v7 + 1348813284) & 0x2F9AAFFB ^ (482 * (v8 > 0xB))))
                            - (((((v7 + 1348813284) & 0x2F9AAFFB) + 3374) | 0x90D) ^ (((v7 + 1348813284) & 0x2F9AAFFB)
                                                                                    + 1614122253) & 0x9FCA7EBF ^ 0x179ALL)))();
}

uint64_t sub_100326B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((89 * (((v7 < 0xEu) ^ (v8 - 8)) & 1)) ^ v8))
                            - ((v8 + 385567024) & 0xE904BCFD ^ 0x14E1)))();
}

uint64_t sub_100326BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (int)(((*(_DWORD *)(v8 + 5332) != (((v7 + 90) | 6) ^ 8))
                                               * ((v7 + 1571162) ^ 0x85250006 ^ (v9 + 103))) ^ v7))
                            - 4))();
}

void sub_100326C3C(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_BYTE *)(a1 + 15) = a2;
  *(_DWORD *)(v2 + 5332) = 33;
  JUMPOUT(0x1002F9A04);
}

uint64_t sub_100326C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  unsigned int v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * ((101 * (v7 < ((v8 ^ 0xDB) - 7 * (v8 ^ 0x2F) + 34))) ^ v8)))();
}

uint64_t sub_100326C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((501 * (v7 == ((v8 + 33) ^ 0x1E))) ^ v8)) - 12))();
}

void sub_100326CD0(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 9) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_100326CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (int)(((v7 ^ 0x853D04FA ^ (v9 - 13)) * (v8 == 13)) ^ v7))
                            - ((v7 - 281172982) & 0x95FF571F ^ 0x853D1013)))();
}

void sub_100326D3C(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 13) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_100326D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((16371
                                          * (*(_DWORD *)(v8 + 5332) != (((v7 + 45) & 0xF7) + 4))) ^ v7))
                            - 4))();
}

void sub_100326DAC(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_BYTE *)(a1 + 11) = a2;
  *(_DWORD *)(v2 + 5332) = 29;
  JUMPOUT(0x1002F9A04);
}

void sub_100326DBC(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 14) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_100326DCC(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 8) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_100326DDC(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_BYTE *)(a1 + 12) = a2;
  *(_DWORD *)(v2 + 5332) = 30;
  JUMPOUT(0x1002F9A04);
}

void sub_100326DEC(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 10) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_100326DFC()
{
  JUMPOUT(0x100326E30);
}

uint64_t sub_100326E44@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t (*v5)(void);

  v4 = *(_DWORD *)(v3 + 9496) ^ (((a2 - 74) | 4) + 115);
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((8 * (v4 & 1)) & 0xEF | (16 * (v4 & 1))) ^ a2)) - 12);
  *(_QWORD *)(v3 + 8408) = *(_QWORD *)(v3 + 8432);
  *(_QWORD *)(v3 + 8400) = *(_QWORD *)(v3 + 8416);
  *(_QWORD *)(v3 + 8392) = *(_QWORD *)(v3 + 8536);
  *(_QWORD *)(v3 + 8384) = *(_QWORD *)(v3 + 8488);
  *(_QWORD *)(v3 + 8376) = *(_QWORD *)(v3 + 8472);
  *(_QWORD *)(v3 + 8944) = *(_QWORD *)(v3 + 9568);
  *(_QWORD *)(v3 + 8952) = *(_QWORD *)(v3 + 9200);
  *(_QWORD *)(v3 + 8936) = *(_QWORD *)(v3 + 8880);
  *(_DWORD *)(v3 + 9116) = a1;
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 9656);
  *(_DWORD *)(v3 + 8212) = *(_DWORD *)(v3 + 7976);
  *(_DWORD *)(v3 + 8832) = *(_DWORD *)(v3 + 9384);
  *(_DWORD *)(v3 + 9152) = *(_DWORD *)(v3 + 8964);
  *(_DWORD *)(v3 + 8368) = *(_DWORD *)(v3 + 9520);
  *(_DWORD *)(v3 + 8504) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8520) = *(_DWORD *)(v3 + 8464);
  *(_DWORD *)(v3 + 8356) = *(_DWORD *)(v3 + 8532);
  *(_DWORD *)(v3 + 8360) = *(_DWORD *)(v3 + 8424);
  *(_DWORD *)(v3 + 9104) = *(_DWORD *)(v3 + 9440);
  *(_DWORD *)(v3 + 8912) = *(_DWORD *)(v3 + 8872);
  *(_DWORD *)(v3 + 8512) = *(_DWORD *)(v3 + 8480);
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9632);
  *(_DWORD *)(v3 + 8920) = *(_DWORD *)(v3 + 9160);
  *(_DWORD *)(v3 + 8496) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8904) = *(_DWORD *)(v3 + 8616);
  *(_DWORD *)(v3 + 8900) = *(_DWORD *)(v3 + 9096);
  *(_DWORD *)(v3 + 8352) = *(_DWORD *)(v3 + 9040);
  *(_DWORD *)(v3 + 8932) = *(_DWORD *)(v3 + 8612);
  return v5();
}

uint64_t sub_100326FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * ((v4 + 6164) | 0x414 | (2 * ((v3 & (((v4 + 6164) | 0x414) - 7478)) != 0))))
                                                                     - (((v4 + 6164) | 0x414) ^ 0x1C78u)
                                                                     + 293))(a1, a2, a3, v5);
}

uint64_t sub_100326FFC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;

  v4 = (v2 - 291) | 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((189
                                          * ((*(_BYTE *)(*(_QWORD *)(v3 + 9648)
                                                                        + ((8 * (a2 - 1 != (v4 ^ 0x1C33))) ^ (((v4 - 6416) | 0x450u) - 1813)))
                                                             + 8 * (a2 - 1 != (v4 ^ 0x1C33))) == 9)) ^ v4))
                            - 4))();
}

uint64_t sub_100327070@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v10 = (v6 - 301) | 0xC81u;
  v11 = (unint64_t)*(unsigned int *)(v4 - 0x62AA055D109F20F3) >> v5;
  *(_DWORD *)(a1 - 0x62AA055D109F20F3) = v11;
  if (v11 == v10 - 3201)
    v12 = v2;
  else
    v12 = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7
                                                     + 8 * (int)(((((v10 - 2848) ^ 0x3AC) - 701) * (v8 & ~v9)) | v10)))(v12, v3);
}

uint64_t sub_1003273BC@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  char v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 - 1136780811) & a2 ^ ((a3 + a1) | 0x89) ^ 0x28EC) * (v3 & 1)) ^ a3)))();
}

uint64_t sub_1003273F8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 - 941) ^ v5 ^ (347 * (v0 ^ v4))) * (v2 & ~v3)) ^ v0)))();
}

uint64_t sub_10032742C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 ^ v3) - 2823) ^ 0x1883) * (v2 & ~v4)) ^ v0)))();
}

uint64_t sub_100327450(uint64_t a1, char a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (15676 * (a2 & 1))))
                            - ((((v2 + 2058127668) & 0x85535FFF) - 138) ^ (v2 - 5966))))();
}

uint64_t sub_100327494(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;

  *(_DWORD *)(v8 + 9680) = 0;
  *(_DWORD *)(v8 + 9496) = 0;
  *(_DWORD *)(v8 + 9576) = 0;
  *(_DWORD *)(v8 + 9736) = 0;
  *(_DWORD *)(v8 + 9456) = 0;
  *(_DWORD *)(v8 + 9488) = 0;
  *(_DWORD *)(v8 + 9472) = 0;
  v10 = *(_QWORD *)(v8 + 9024);
  v11 = *(_DWORD *)(v8 + 9052);
  *(_DWORD *)(v8 + 9248) = a1;
  v12 = *(_DWORD *)(v8 + 9036);
  *(_DWORD *)(v8 + 9688) = 1;
  *(_DWORD *)(v8 + 9504) = 1;
  *(_DWORD *)(v8 + 9464) = 1;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (((v11 > v12 >> 5) * (v7 ^ 0x287E)) ^ v7))
                                                                                              - 4))(0, 0, a3, a4, a5, a6, v10);
}

uint64_t sub_1003274F0(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (1630 * (v4 & ~*(_DWORD *)(v3 + 9688)))))
                         + 2235371539
                         - (v1 - 2059596106)
                         - 8);
  *(_DWORD *)(v3 + 7632) = 146;
  v6 = *(_QWORD *)(v3 + 5368);
  *(_QWORD *)(v3 + 7664) = v6;
  v7 = *(_QWORD *)(v3 + 5376);
  *(_QWORD *)(v3 + 7680) = v7;
  v8 = *(_QWORD *)(v3 + 5360);
  *(_QWORD *)(v3 + 7656) = v8;
  *(_QWORD *)(v3 + 7688) = v6;
  *(_QWORD *)(v3 + 7696) = v7;
  *(_QWORD *)(v3 + 7704) = v8;
  *(_QWORD *)(v3 + 9504) = *(_QWORD *)(v3 + 7880);
  *(_QWORD *)(v3 + 9576) = v8;
  *(_QWORD *)(v3 + 9496) = v8;
  *(_DWORD *)(v3 + 8764) = *(_DWORD *)(v3 + 8828);
  *(_DWORD *)(v3 + 8768) = *(_DWORD *)(v3 + 8860);
  *(_DWORD *)(v3 + 9688) = *(_DWORD *)(v3 + 7768);
  v9 = *(_DWORD *)(v3 + 7576);
  *(_DWORD *)(v3 + 7712) = v9;
  LODWORD(v8) = *(_DWORD *)(v3 + 7592);
  *(_DWORD *)(v3 + 9448) = *(_DWORD *)(v3 + 9116);
  *(_DWORD *)(v3 + 8212) = a1;
  *(_DWORD *)(v3 + 7648) = v8;
  LODWORD(v6) = *(_DWORD *)(v3 + 7584);
  *(_DWORD *)(v3 + 9384) = v6;
  *(_DWORD *)(v3 + 8748) = *(_DWORD *)(v3 + 8980);
  *(_DWORD *)(v3 + 8736) = *(_DWORD *)(v3 + 8792);
  *(_DWORD *)(v3 + 8728) = *(_DWORD *)(v3 + 8816);
  *(_DWORD *)(v3 + 8744) = *(_DWORD *)(v3 + 8628);
  *(_DWORD *)(v3 + 8720) = *(_DWORD *)(v3 + 8968);
  *(_DWORD *)(v3 + 8760) = *(_DWORD *)(v3 + 9256);
  *(_DWORD *)(v3 + 8752) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 8712) = *(_DWORD *)(v3 + 8868);
  *(_DWORD *)(v3 + 8696) = *(_DWORD *)(v3 + 8840);
  *(_DWORD *)(v3 + 9440) = v8;
  *(_DWORD *)(v3 + 8688) = *(_DWORD *)(v3 + 8864);
  *(_DWORD *)(v3 + 7640) = v9;
  *(_DWORD *)(v3 + 8680) = *(_DWORD *)(v3 + 8808);
  *(_DWORD *)(v3 + 7672) = v6;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8672) = *(_DWORD *)(v3 + 8848);
  *(_DWORD *)(v3 + 8664) = *(_DWORD *)(v3 + 8992);
  *(_DWORD *)(v3 + 9736) = v8;
  *(_DWORD *)(v3 + 9432) = *(_DWORD *)(v3 + 9172);
  *(_DWORD *)(v3 + 9264) = *(_DWORD *)(v3 + 9624);
  *(_DWORD *)(v3 + 8656) = *(_DWORD *)(v3 + 8776);
  *(_DWORD *)(v3 + 8648) = *(_DWORD *)(v3 + 9004);
  *(_DWORD *)(v3 + 8640) = *(_DWORD *)(v3 + 8784);
  *(_DWORD *)(v3 + 8704) = *(_DWORD *)(v3 + 9064);
  *(_DWORD *)(v3 + 9240) = *(_DWORD *)(v3 + 8236);
  *(_DWORD *)(v3 + 8632) = *(_DWORD *)(v3 + 8800);
  return v5();
}

void sub_10032767C(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(_DWORD *)(v2 + 7632) = 156;
  v3 = *(_QWORD *)(v2 + 4440);
  *(_QWORD *)(v2 + 7664) = v3;
  v4 = *(_QWORD *)(v2 + 4432);
  *(_QWORD *)(v2 + 7680) = v4;
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 9448) = *(_DWORD *)(v2 + 9116);
  *(_DWORD *)(v2 + 8212) = *(_DWORD *)(v2 + 7976);
  *(_DWORD *)(v2 + 8748) = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8744) = *(_DWORD *)(v2 + 8628);
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 8664) = *(_DWORD *)(v2 + 8992);
  *(_DWORD *)(v2 + 7560) = a1;
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = *(_DWORD *)(v2 + 9004);
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 9240) = v1;
  *(_DWORD *)(v2 + 8632) = *(_DWORD *)(v2 + 8800);
  v5 = *(_QWORD *)(v2 + 4424);
  *(_QWORD *)(v2 + 7656) = v5;
  *(_QWORD *)(v2 + 7688) = v3;
  *(_QWORD *)(v2 + 7696) = v4;
  *(_QWORD *)(v2 + 7704) = v5;
  *(_QWORD *)(v2 + 9504) = *(_QWORD *)(v2 + 7880);
  *(_QWORD *)(v2 + 9576) = v5;
  *(_QWORD *)(v2 + 9496) = v5;
  *(_DWORD *)(v2 + 9688) = *(_DWORD *)(v2 + 7768);
  LODWORD(v3) = *(_DWORD *)(v2 + 4468);
  *(_DWORD *)(v2 + 7712) = v3;
  v6 = *(_DWORD *)(v2 + 4464);
  *(_DWORD *)(v2 + 7648) = v6;
  LODWORD(v5) = *(_DWORD *)(v2 + 4460);
  *(_DWORD *)(v2 + 9384) = v5;
  *(_DWORD *)(v2 + 9440) = v6;
  *(_DWORD *)(v2 + 7640) = v3;
  *(_DWORD *)(v2 + 7672) = v5;
  *(_DWORD *)(v2 + 9736) = v6;
  JUMPOUT(0x10032816CLL);
}

uint64_t sub_100327768()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((26
                                          * ((*(_DWORD *)(v2 + 9576) ^ (v0 + 95)) & 1)) ^ v0))
                            - ((v0 + 2649) | 0x800)
                            + 7831))();
}

uint64_t sub_1003277A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((30
                                          * ((*(_DWORD *)(v2 + 9736) ^ (v0 + 96)) & 1)) | v0 | 0xC00))
                            - ((((v0 | 0xC00) + 20771701) | 0x84000001) ^ 0x853D101FLL)))();
}

uint64_t sub_10032780C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((a1 ^ 0x20E7) * (*(_DWORD *)(v2 + 9504) & 1)) ^ a1))
                            - ((a1 - 4504) ^ 0xF4CLL)))();
}

uint64_t sub_100327840@<X0>(int a1@<W0>, int a2@<W8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  *(_DWORD *)(v4 + 9432) = 0;
  *(_DWORD *)(v4 + 9080) = 0;
  *(_DWORD *)(v4 + 9576) = 0;
  *(_DWORD *)(v4 + 9496) = 0;
  *(_DWORD *)(v4 + 9012) = 0;
  *(_DWORD *)(v4 + 9488) = 0;
  *(_DWORD *)(v4 + 9472) = 0;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * (((((10 * (a2 ^ 0x21D6) - 2711) | 0xC02) ^ 0x709) * (v2 & 1)) ^ a2 ^ 0x22EF))
                         - 12);
  *(_QWORD *)(v4 + 9600) = *(_QWORD *)(v4 + 9280);
  *(_QWORD *)(v4 + 9608) = *(_QWORD *)(v4 + 9016);
  *(_DWORD *)(v4 + 9448) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 8212) = *(_DWORD *)(v4 + 7976);
  *(_DWORD *)(v4 + 9616) = *(_DWORD *)(v4 + 9320);
  *(_DWORD *)(v4 + 9052) = a1;
  *(_DWORD *)(v4 + 8196) = *(_DWORD *)(v4 + 9520);
  *(_DWORD *)(v4 + 9456) = *(_DWORD *)(v4 + 9036);
  *(_DWORD *)(v4 + 9664) = *(_DWORD *)(v4 + 8456);
  *(_DWORD *)(v4 + 9240) = *(_DWORD *)(v4 + 8236);
  *(_DWORD *)(v4 + 9592) = *(_DWORD *)(v4 + 8328);
  return v5();
}

uint64_t sub_100327920@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v4 = *(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744)
                           + 8
                           * ((((2 * a2) ^ 0x1B1F)
                             * ((unint64_t)*(unsigned int *)(*(_QWORD *)(v3 + 3320)
                                                                  + 4 * *(unsigned int *)(v3 + 9248)) < *(_QWORD *)(v3 + 4272))) ^ a2));
  *(_DWORD *)(v3 + 9448) = *(_DWORD *)(v3 + 9116);
  *(_DWORD *)(v3 + 8212) = *(_DWORD *)(v3 + 7976);
  *(_DWORD *)(v3 + 9052) = a1;
  *(_DWORD *)(v3 + 9736) = *(_DWORD *)(v3 + 6788);
  *(_DWORD *)(v3 + 8188) = *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 9240) = v2;
  return v4();
}

void sub_10032798C(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 9416) = (a2 ^ 0x9B3u) - 2059596829;
  v3 = *(_QWORD *)(v2 + 6368);
  *(_DWORD *)(v2 + 0x2000) = 1;
  *(_DWORD *)(v3 - 0x62AA055D109F20F3) = 1;
  *(_QWORD *)(v2 + 8408) = *(_QWORD *)(v2 + 8432);
  *(_QWORD *)(v2 + 8400) = *(_QWORD *)(v2 + 8416);
  *(_QWORD *)(v2 + 8392) = *(_QWORD *)(v2 + 8536);
  *(_QWORD *)(v2 + 8384) = *(_QWORD *)(v2 + 8488);
  *(_QWORD *)(v2 + 8376) = *(_QWORD *)(v2 + 8472);
  *(_QWORD *)(v2 + 8944) = *(_QWORD *)(v2 + 9568);
  *(_QWORD *)(v2 + 8576) = *(_QWORD *)(v2 + 8888);
  *(_QWORD *)(v2 + 8952) = *(_QWORD *)(v2 + 9200);
  *(_QWORD *)(v2 + 8936) = *(_QWORD *)(v2 + 8880);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_DWORD *)(v2 + 8212) = *(_DWORD *)(v2 + 7976);
  *(_DWORD *)(v2 + 8832) = *(_DWORD *)(v2 + 9384);
  *(_DWORD *)(v2 + 9052) = a1;
  *(_DWORD *)(v2 + 9152) = *(_DWORD *)(v2 + 8964);
  *(_DWORD *)(v2 + 8368) = *(_DWORD *)(v2 + 9520);
  *(_DWORD *)(v2 + 8608) = *(_DWORD *)(v2 + 9424);
  *(_DWORD *)(v2 + 8504) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8520) = *(_DWORD *)(v2 + 8464);
  *(_DWORD *)(v2 + 8356) = *(_DWORD *)(v2 + 8532);
  *(_DWORD *)(v2 + 8360) = *(_DWORD *)(v2 + 8424);
  *(_DWORD *)(v2 + 9104) = *(_DWORD *)(v2 + 9440);
  *(_DWORD *)(v2 + 8912) = *(_DWORD *)(v2 + 8872);
  *(_DWORD *)(v2 + 8512) = *(_DWORD *)(v2 + 8480);
  *(_DWORD *)(v2 + 9072) = *(_DWORD *)(v2 + 9632);
  *(_DWORD *)(v2 + 8920) = *(_DWORD *)(v2 + 9160);
  *(_DWORD *)(v2 + 8496) = *(_DWORD *)(v2 + 9528);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8904) = *(_DWORD *)(v2 + 8616);
  *(_DWORD *)(v2 + 8552) = *(_DWORD *)(v2 + 9408);
  *(_DWORD *)(v2 + 8900) = *(_DWORD *)(v2 + 9096);
  *(_DWORD *)(v2 + 9184) = *(_DWORD *)(v2 + 9584);
  *(_DWORD *)(v2 + 8572) = *(_DWORD *)(v2 + 8984);
  *(_DWORD *)(v2 + 8352) = *(_DWORD *)(v2 + 9040);
  *(_DWORD *)(v2 + 8932) = *(_DWORD *)(v2 + 8612);
  *(_DWORD *)(v2 + 8440) = 66;
  JUMPOUT(0x100327AF4);
}

uint64_t sub_100327AFC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((a1 - 1554) ^ 0x1275 ^ (a1 + 2066496564) & 0x84D3AFF6)
                                     * (v3 & ~*(_DWORD *)(v2 + 9488))) ^ a1)))();
}

uint64_t sub_100327B40(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  *(_DWORD *)(v4 + 7216) = 0;
  *(_QWORD *)(v4 + 7144) = (v1 - 1350752047) & 0xD5BFDC7F;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((4916
                                       * ((*(_DWORD *)(v4 + 9472) ^ (v1 - 47)) & 1)) ^ v1))
                         - 8);
  v6 = *(_QWORD *)(v4 + 6360);
  *(_QWORD *)(v4 + 7240) = v6;
  *(_QWORD *)(v4 + 7248) = *(_QWORD *)(v4 + 5440);
  *(_QWORD *)(v4 + 7232) = v6;
  *(_DWORD *)(v4 + 8080) = *(_DWORD *)(v4 + 8032);
  *(_DWORD *)(v4 + 8260) = *(_DWORD *)(v4 + 8332);
  *(_DWORD *)(v4 + 7192) = *(_DWORD *)(v4 + 7436);
  *(_DWORD *)(v4 + 7272) = *(_DWORD *)(v4 + 7456);
  *(_DWORD *)(v4 + 9448) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 7312) = a1;
  *(_DWORD *)(v4 + 9272) = *(_DWORD *)(v4 + 9656);
  *(_DWORD *)(v4 + 8212) = *(_DWORD *)(v4 + 7976);
  *(_DWORD *)(v4 + 8064) = *(_DWORD *)(v4 + 7992);
  *(_DWORD *)(v4 + 6744) = *(_DWORD *)(v4 + 8548);
  *(_DWORD *)(v4 + 7256) = *(_DWORD *)(v4 + 7500);
  *(_DWORD *)(v4 + 7280) = *(_DWORD *)(v4 + 9424);
  *(_DWORD *)(v4 + 7128) = *(_DWORD *)(v4 + 7616);
  *(_DWORD *)(v4 + 7344) = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 8136) = *(_DWORD *)(v4 + 9480);
  *(_DWORD *)(v4 + 7168) = *(_DWORD *)(v4 + 7464);
  *(_DWORD *)(v4 + 7184) = *(_DWORD *)(v4 + 7488);
  *(_DWORD *)(v4 + 7296) = *(_DWORD *)(v4 + 7484);
  *(_DWORD *)(v4 + 9104) = *(_DWORD *)(v4 + 9440);
  *(_DWORD *)(v4 + 7424) = *(_DWORD *)(v4 + 8456);
  *(_DWORD *)(v4 + 7304) = *(_DWORD *)(v4 + 7480);
  *(_DWORD *)(v4 + 7264) = *(_DWORD *)(v4 + 7964);
  *(_DWORD *)(v4 + 7176) = *(_DWORD *)(v4 + 9248);
  *(_DWORD *)(v4 + 7288) = *(_DWORD *)(v4 + 7476);
  *(_DWORD *)(v4 + 7224) = *(_DWORD *)(v4 + 7532);
  *(_DWORD *)(v4 + 9136) = *(_DWORD *)(v4 + 9056);
  *(_DWORD *)(v4 + 8040) = *(_DWORD *)(v4 + 8020);
  *(_DWORD *)(v4 + 7416) = *(_DWORD *)(v4 + 7432);
  *(_DWORD *)(v4 + 8116) = *(_DWORD *)(v4 + 8024);
  *(_DWORD *)(v4 + 9072) = *(_DWORD *)(v4 + 9632);
  *(_DWORD *)(v4 + 7328) = *(_DWORD *)(v4 + 8000);
  *(_DWORD *)(v4 + 8272) = *(_DWORD *)(v4 + 7984);
  *(_DWORD *)(v4 + 8056) = *(_DWORD *)(v4 + 8008);
  *(_DWORD *)(v4 + 7112) = *(_DWORD *)(v4 + 0x2000);
  *(_DWORD *)(v4 + 7208) = *(_DWORD *)(v4 + 9528);
  *(_DWORD *)(v4 + 7408) = *(_DWORD *)(v4 + 7460);
  *(_DWORD *)(v4 + 7160) = *(_DWORD *)(v4 + 7440);
  *(_DWORD *)(v4 + 7320) = *(_DWORD *)(v4 + 9156);
  *(_DWORD *)(v4 + 8236) = v2;
  *(_DWORD *)(v4 + 7336) = *(_DWORD *)(v4 + 9408);
  *(_DWORD *)(v4 + 9400) = *(_DWORD *)(v4 + 9224);
  *(_DWORD *)(v4 + 7200) = *(_DWORD *)(v4 + 9064);
  *(_DWORD *)(v4 + 6760) = *(_DWORD *)(v4 + 8280);
  *(_DWORD *)(v4 + 9392) = *(_DWORD *)(v4 + 8544);
  return v5();
}

void sub_100327D00(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 7144) = (a2 + 1154);
  *(_DWORD *)(v2 + 8080) = *(_DWORD *)(v2 + 8032);
  *(_DWORD *)(v2 + 8260) = *(_DWORD *)(v2 + 8332);
  *(_DWORD *)(v2 + 7192) = *(_DWORD *)(v2 + 7436);
  *(_DWORD *)(v2 + 7272) = *(_DWORD *)(v2 + 7456);
  *(_DWORD *)(v2 + 9448) = *(_DWORD *)(v2 + 9116);
  *(_DWORD *)(v2 + 7312) = *(_DWORD *)(v2 + 9328);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_DWORD *)(v2 + 8212) = *(_DWORD *)(v2 + 7976);
  *(_DWORD *)(v2 + 8064) = *(_DWORD *)(v2 + 7992);
  *(_DWORD *)(v2 + 6744) = *(_DWORD *)(v2 + 8548);
  *(_DWORD *)(v2 + 7256) = *(_DWORD *)(v2 + 7500);
  *(_DWORD *)(v2 + 7280) = *(_DWORD *)(v2 + 9424);
  *(_DWORD *)(v2 + 7128) = *(_DWORD *)(v2 + 7616);
  *(_DWORD *)(v2 + 7344) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8136) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 7168) = *(_DWORD *)(v2 + 7464);
  *(_DWORD *)(v2 + 7184) = *(_DWORD *)(v2 + 7488);
  *(_DWORD *)(v2 + 7296) = *(_DWORD *)(v2 + 7484);
  *(_DWORD *)(v2 + 9104) = *(_DWORD *)(v2 + 9440);
  *(_DWORD *)(v2 + 7424) = *(_DWORD *)(v2 + 8456);
  *(_DWORD *)(v2 + 7304) = *(_DWORD *)(v2 + 7480);
  *(_DWORD *)(v2 + 7176) = *(_DWORD *)(v2 + 9248);
  *(_DWORD *)(v2 + 7288) = *(_DWORD *)(v2 + 7476);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8040) = *(_DWORD *)(v2 + 8020);
  *(_DWORD *)(v2 + 7416) = *(_DWORD *)(v2 + 7432);
  *(_DWORD *)(v2 + 8116) = *(_DWORD *)(v2 + 8024);
  *(_DWORD *)(v2 + 9072) = *(_DWORD *)(v2 + 9632);
  *(_DWORD *)(v2 + 7328) = *(_DWORD *)(v2 + 8000);
  *(_DWORD *)(v2 + 8272) = *(_DWORD *)(v2 + 7984);
  *(_DWORD *)(v2 + 8056) = *(_DWORD *)(v2 + 8008);
  *(_DWORD *)(v2 + 7112) = *(_DWORD *)(v2 + 0x2000);
  *(_DWORD *)(v2 + 7208) = *(_DWORD *)(v2 + 9528);
  *(_DWORD *)(v2 + 7408) = *(_DWORD *)(v2 + 7460);
  *(_DWORD *)(v2 + 7160) = *(_DWORD *)(v2 + 7440);
  *(_DWORD *)(v2 + 7320) = *(_DWORD *)(v2 + 9156);
  *(_DWORD *)(v2 + 7336) = *(_DWORD *)(v2 + 9408);
  *(_DWORD *)(v2 + 9400) = *(_DWORD *)(v2 + 9224);
  *(_DWORD *)(v2 + 7200) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 9312) = a1;
  *(_DWORD *)(v2 + 6760) = *(_DWORD *)(v2 + 8280);
  *(_DWORD *)(v2 + 9392) = *(_DWORD *)(v2 + 8544);
  *(_DWORD *)(v2 + 7216) = 1;
  v3 = *(_QWORD *)(v2 + 5440);
  *(_QWORD *)(v2 + 7240) = v3;
  *(_QWORD *)(v2 + 7248) = v3;
  *(_QWORD *)(v2 + 7232) = *(_QWORD *)(v2 + 6360);
  *(_DWORD *)(v2 + 7264) = *(_DWORD *)(v2 + 7964);
  JUMPOUT(0x1003261BCLL);
}

uint64_t sub_100327E84(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * (int)((((*(_DWORD *)(v4 + 9680) ^ ((v1 - 69) | 0x14)) & 1)
                                            * ((v1 - v2 + 962) ^ 0x853D3623)) ^ v1))
                         - 8);
  *(_DWORD *)(v4 + 7632) = 124;
  v6 = *(_QWORD *)(v4 + 5368);
  *(_QWORD *)(v4 + 7664) = v6;
  v7 = *(_QWORD *)(v4 + 5376);
  *(_QWORD *)(v4 + 7680) = v7;
  v8 = *(_QWORD *)(v4 + 5360);
  *(_QWORD *)(v4 + 7656) = v8;
  *(_QWORD *)(v4 + 7688) = v6;
  *(_QWORD *)(v4 + 7696) = v7;
  *(_QWORD *)(v4 + 7704) = v8;
  *(_QWORD *)(v4 + 9504) = *(_QWORD *)(v4 + 7880);
  *(_QWORD *)(v4 + 9576) = v8;
  *(_QWORD *)(v4 + 9496) = v8;
  *(_DWORD *)(v4 + 8764) = *(_DWORD *)(v4 + 8828);
  *(_DWORD *)(v4 + 8768) = *(_DWORD *)(v4 + 8860);
  *(_DWORD *)(v4 + 9688) = *(_DWORD *)(v4 + 7768);
  v9 = *(_DWORD *)(v4 + 7576);
  *(_DWORD *)(v4 + 7712) = v9;
  LODWORD(v6) = *(_DWORD *)(v4 + 7592);
  *(_DWORD *)(v4 + 9448) = *(_DWORD *)(v4 + 9116);
  *(_DWORD *)(v4 + 8212) = a1;
  *(_DWORD *)(v4 + 7648) = v6;
  LODWORD(v8) = *(_DWORD *)(v4 + 7584);
  *(_DWORD *)(v4 + 9384) = v8;
  *(_DWORD *)(v4 + 8748) = *(_DWORD *)(v4 + 8980);
  *(_DWORD *)(v4 + 8736) = *(_DWORD *)(v4 + 8792);
  *(_DWORD *)(v4 + 8728) = *(_DWORD *)(v4 + 8816);
  *(_DWORD *)(v4 + 8744) = *(_DWORD *)(v4 + 8628);
  *(_DWORD *)(v4 + 8720) = *(_DWORD *)(v4 + 8968);
  *(_DWORD *)(v4 + 8760) = *(_DWORD *)(v4 + 9256);
  *(_DWORD *)(v4 + 8752) = *(_DWORD *)(v4 + 9480);
  *(_DWORD *)(v4 + 8712) = *(_DWORD *)(v4 + 8868);
  *(_DWORD *)(v4 + 8696) = *(_DWORD *)(v4 + 8840);
  *(_DWORD *)(v4 + 9440) = v6;
  *(_DWORD *)(v4 + 8688) = *(_DWORD *)(v4 + 8864);
  *(_DWORD *)(v4 + 7640) = v9;
  *(_DWORD *)(v4 + 8680) = *(_DWORD *)(v4 + 8808);
  *(_DWORD *)(v4 + 7672) = v8;
  *(_DWORD *)(v4 + 9136) = *(_DWORD *)(v4 + 9056);
  *(_DWORD *)(v4 + 8672) = *(_DWORD *)(v4 + 8848);
  *(_DWORD *)(v4 + 8664) = *(_DWORD *)(v4 + 8992);
  *(_DWORD *)(v4 + 9736) = v6;
  *(_DWORD *)(v4 + 9432) = *(_DWORD *)(v4 + 9172);
  *(_DWORD *)(v4 + 9264) = *(_DWORD *)(v4 + 9624);
  *(_DWORD *)(v4 + 8656) = *(_DWORD *)(v4 + 8776);
  *(_DWORD *)(v4 + 8648) = *(_DWORD *)(v4 + 9004);
  *(_DWORD *)(v4 + 8640) = *(_DWORD *)(v4 + 8784);
  *(_DWORD *)(v4 + 8704) = *(_DWORD *)(v4 + 9064);
  *(_DWORD *)(v4 + 9240) = *(_DWORD *)(v4 + 8236);
  *(_DWORD *)(v4 + 8632) = *(_DWORD *)(v4 + 8800);
  return v5();
}

void sub_100328020(int a1)
{
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 + 7632) = 134;
  *(_QWORD *)(v2 + 7664) = *(_QWORD *)(v2 + 4440);
  *(_DWORD *)(v2 + 8764) = *(_DWORD *)(v2 + 8828);
  *(_DWORD *)(v2 + 8768) = *(_DWORD *)(v2 + 8860);
  *(_DWORD *)(v2 + 9448) = *(_DWORD *)(v2 + 9116);
  *(_DWORD *)(v2 + 8212) = *(_DWORD *)(v2 + 7976);
  *(_DWORD *)(v2 + 8748) = *(_DWORD *)(v2 + 8980);
  *(_DWORD *)(v2 + 8736) = *(_DWORD *)(v2 + 8792);
  *(_DWORD *)(v2 + 8728) = *(_DWORD *)(v2 + 8816);
  *(_DWORD *)(v2 + 8744) = *(_DWORD *)(v2 + 8628);
  *(_DWORD *)(v2 + 8720) = *(_DWORD *)(v2 + 8968);
  *(_DWORD *)(v2 + 8760) = *(_DWORD *)(v2 + 9256);
  *(_DWORD *)(v2 + 8752) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 8712) = *(_DWORD *)(v2 + 8868);
  *(_DWORD *)(v2 + 8696) = *(_DWORD *)(v2 + 8840);
  *(_DWORD *)(v2 + 8688) = *(_DWORD *)(v2 + 8864);
  *(_DWORD *)(v2 + 8680) = *(_DWORD *)(v2 + 8808);
  *(_DWORD *)(v2 + 9136) = *(_DWORD *)(v2 + 9056);
  *(_DWORD *)(v2 + 8672) = *(_DWORD *)(v2 + 8848);
  *(_DWORD *)(v2 + 8664) = *(_DWORD *)(v2 + 8992);
  *(_DWORD *)(v2 + 7560) = a1;
  *(_DWORD *)(v2 + 9432) = *(_DWORD *)(v2 + 9172);
  *(_DWORD *)(v2 + 9264) = *(_DWORD *)(v2 + 9624);
  *(_DWORD *)(v2 + 8656) = *(_DWORD *)(v2 + 8776);
  *(_DWORD *)(v2 + 8648) = *(_DWORD *)(v2 + 9004);
  *(_DWORD *)(v2 + 8640) = *(_DWORD *)(v2 + 8784);
  *(_DWORD *)(v2 + 8704) = *(_DWORD *)(v2 + 9064);
  *(_DWORD *)(v2 + 9240) = v1;
  *(_DWORD *)(v2 + 8632) = *(_DWORD *)(v2 + 8800);
  *(_QWORD *)(v2 + 7680) = *(_QWORD *)(v2 + 4432);
  JUMPOUT(0x10032810CLL);
}

uint64_t sub_100328244@<X0>(unsigned int a1@<W1>, int a2@<W2>, int a3@<W3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)(v10 + v8) = 0;
  if ((v7 ^ a1) + a7 + a3 >= v9)
    a5 = a6;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((((a4 & (*(unsigned __int8 *)(v11 + a5) >> 1) ^ *(unsigned __int8 *)(v11 + a5)) == 30)
                                * a2) ^ v7)))();
}

uint64_t sub_100328284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;

  *(_DWORD *)(v9 + 9012) = v14;
  *(_DWORD *)(v9 + 9080) = v12;
  *(_DWORD *)(v9 + 9008) = v11;
  *(_DWORD *)(v9 + 9392) = v13;
  *(_DWORD *)(v9 + 9400) = v10;
  *(_QWORD *)(v9 + 6816) = a8;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (((((*(_DWORD *)(v9 + 9736) == 0) ^ (v8 + 8)) & 1)
                                * (((v8 - 1309651826) & 0x4E0F95ED) + 510)) ^ v8)))();
}

uint64_t sub_100328304()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 9664) = v0 + 1;
  return sub_1002EC468();
}

uint64_t sub_100328354(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((a1 - 1212190630) & 0xCD7D9A97 ^ 0x853D0713)
                                               * (*(_DWORD *)(v2 + 9736) < v1)) ^ a1))
                            - (((a1 - 1308) | 0x266u) ^ 0x263)))();
}

uint64_t sub_1003283B8()
{
  return sub_100324D3C();
}

uint64_t sub_1003283D4(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  *(_DWORD *)(v5 + 9488) = 0;
  v6 = v1 - 3181;
  v7 = *(_DWORD *)(v5 + 9464);
  if ((v7 & 1) != 0)
    v8 = *(_DWORD *)(v5 + 7532);
  else
    v8 = *(_DWORD *)(v5 + 7964);
  v9 = *(_DWORD *)(v5 + 9328);
  if ((v7 & 1) == 0)
    v9 = a1;
  *(_DWORD *)(v5 + 9328) = v9;
  v10 = *(_DWORD *)(v5 + 9312);
  if ((v7 & 1) != 0)
    v10 = a1;
  *(_DWORD *)(v5 + 9312) = v10;
  *(_DWORD *)(v5 + 9472) = v6 ^ v7 ^ 1;
  *(_DWORD *)(v5 + 9456) = 1;
  *(_QWORD *)(v5 + 9600) = v3;
  *(_QWORD *)(v5 + 9608) = *(_QWORD *)(v5 + 9016);
  *(_DWORD *)(v5 + 9448) = *(_DWORD *)(v5 + 9116);
  *(_DWORD *)(v5 + 8212) = *(_DWORD *)(v5 + 7976);
  *(_DWORD *)(v5 + 9616) = v4;
  *(_DWORD *)(v5 + 8196) = *(_DWORD *)(v5 + 9520);
  *(_DWORD *)(v5 + 9664) = *(_DWORD *)(v5 + 8456);
  *(_DWORD *)(v5 + 9432) = 1;
  *(_DWORD *)(v5 + 9080) = 1;
  *(_DWORD *)(v5 + 9576) = 1;
  *(_DWORD *)(v5 + 9496) = 1;
  *(_DWORD *)(v5 + 9012) = 1;
  *(_DWORD *)(v5 + 9240) = v2;
  *(_DWORD *)(v5 + 9592) = *(_DWORD *)(v5 + 8328);
  *(_DWORD *)(v5 + 9520) = 1;
  *(_DWORD *)(v5 + 9736) = 1;
  *(_DWORD *)(v5 + 9680) = 1;
  *(_DWORD *)(v5 + 9400) = 1;
  *(_DWORD *)(v5 + 9416) = 0;
  *(_DWORD *)(v5 + 9464) = *(_DWORD *)(v5 + 8132);
  *(_DWORD *)(v5 + 9688) = *(_DWORD *)(v5 + 7964);
  *(_DWORD *)(v5 + 9504) = *(_DWORD *)(v5 + 8232);
  *(_DWORD *)(v5 + 8272) = *(_DWORD *)(v5 + 7752);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v5 + 9744) + 8 * ((83 * (v8 == 0)) ^ v6)))();
}

uint64_t sub_1003284A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _BYTE *v8;
  char v9;
  int v10;
  uint64_t v11;
  unint64_t v12;

  *v8 = v12 >> v9;
  return (*(uint64_t (**)(void))(a5
                              + 8
                              * ((495 * (v11 != ((a8 + v10 - 1425) ^ (unint64_t)(a7 + 36)))) ^ v10)))();
}

uint64_t sub_1003284D4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;

  return (*(uint64_t (**)(void))(a5 + 8 * (((v8 == 24) * ((v9 - a8 + a4) & v10 ^ v11)) ^ (a3 + v9 + 721))))();
}

uint64_t sub_100328510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  return (*(uint64_t (**)(void))(a5
                              + 8
                              * ((67 * (((v5 < *(_DWORD *)(v7 + 9152)) ^ ((v6 ^ v8) + 2)) & 1)) | v6)))();
}

uint64_t sub_100328548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return sub_1003284A0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10032858C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a5 + 8 * ((v6 + 2059596348) ^ 0x1926))
                                                  - ((v6 ^ (a6 + 557))
                                                   + 599)
                                                  + 1182))(2235371539, *(unsigned int *)(v7 + 8548));
}

uint64_t sub_1003285F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  char v8;
  int v9;

  *(_BYTE *)(a4 + 13) = v8 ^ 0xF4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a6
                                                      + 8
                                                      * ((87
                                                        * (((v6 - 5857) ^ (v9 + 335)) + v7 + 293770382 < 8)) ^ (v6 - 5944)))
                                          - 8))(7223);
}

void sub_1003286B4()
{
  JUMPOUT(0x1003286F0);
}

uint64_t sub_1003286F4@<X0>(uint64_t a1@<X3>, char a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a1 + 44) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((556 * (v4 - 1765825427 >= (v2 - 325))) ^ v2))
                            - v3
                            + 2592))();
}

uint64_t sub_100328740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(a4 + 75) = v6 ^ 0xF4;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((137
                                * (v5 - 8 + ((6 * ((v4 + 3107) ^ 0x147B) - 973131401) & 0xBF3DD17F ^ 0x1382B47A) > 7)) ^ (v4 + 3107))))();
}

uint64_t sub_100328768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * (((v6 - 3080) | 0x1D00) ^ (16197 * (v7 != 1765825427)))) - 12))();
}

uint64_t sub_1003287E8@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  int v3;
  _DWORD *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v9 = *(uint64_t (**)(void))(v8
                           + 8
                           * ((105 * (((v2 + 76) ^ ((a1 - 1796353817) < 0xFFFFFFF0)) & 1)) ^ (v7 + v2 + 2844)));
  v4[2434] = v5;
  v4[2422] = a2;
  v4[2416] = v6;
  v4[2414] = v3;
  return v9();
}

uint64_t sub_100328858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t (*v13)(void);

  v9[2364] = 0;
  v9[2402] = 0;
  v9[2394] = 0;
  v9[2392] = 0;
  v9[2398] = 0;
  v9[2366] = 0;
  v9[2396] = 0;
  v12 = v8 - 4364;
  v9[2287] = a8;
  v9[2374] = v12 - v10 - 24;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * (((((a8 == 1796353801) ^ (v12 - 35)) & 1)
                                        * (v12 - v10 + 2059595749)) ^ v12))
                          - 8);
  v9[2382] = 128;
  v9[2376] = v9[2400];
  return v13();
}

uint64_t sub_100328900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t (*v15)(void);

  *(_DWORD *)(v7 + 9608) = 0;
  *(_DWORD *)(v7 + 9576) = 0;
  *(_DWORD *)(v7 + 9568) = 0;
  *(_DWORD *)(v7 + 9592) = 0;
  *(_DWORD *)(v7 + 9464) = 0;
  *(_DWORD *)(v7 + 9584) = 0;
  v11 = a7 & 0x8ED775C7;
  v12 = a7 & 0x8ED775C7 ^ 0x17E5;
  v13 = *(_DWORD *)(v7 + 9148);
  v14 = v8 + ((v13 + 119) & 0x69) + ((v13 + 119) & 0x69 ^ 0x69);
  *(_DWORD *)(v7 + 9504) = *(_DWORD *)(v7 + 9600) + 1;
  *(_DWORD *)(v7 + 9528) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9728) + 31 * v14 - 31 * v14 / 0x196u * v9);
  *(_DWORD *)(v7 + 9496) = v12 - 2059600651;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v10
                                      + 8
                                      * (int)((3007 * (((v13 == 1796353802) ^ (v12 - 11)) & 1)) ^ v11))
                          - 12);
  *(_DWORD *)(v7 + 9456) = 128;
  return v15();
}

uint64_t sub_1003289F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;
  int v16;
  uint64_t (*v17)(void);

  *(_DWORD *)(v8 + 9608) = 0;
  *(_DWORD *)(v8 + 9576) = 0;
  *(_DWORD *)(v8 + 9568) = 0;
  *(_DWORD *)(v8 + 9592) = 0;
  *(_DWORD *)(v8 + 9584) = 0;
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 9640)
                           + ((v9 - 15) ^ (-87
                                                          * *(_BYTE *)(v7
                                                                     + 31 * v10
                                                                     + 3286
                                                                     - (31 * v10 + 3286) / 0x196u * v11))));
  v14 = (v13 >> (((a7 - 46) | 1) ^ 0xF4)) & 0x46;
  v15 = *(_DWORD *)(v8 + 9148) != 1796353803;
  v16 = *(_DWORD *)(v8 + 9504);
  *(_DWORD *)(v8 + 9456) = ((v13 ^ v14) >> 5) | (8 * (v13 ^ v14 ^ 0x1E));
  v17 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (a7 ^ (3868 * v15))) - 8);
  *(_DWORD *)(v8 + 9464) = 128;
  *(_DWORD *)(v8 + 9504) = 2 * (v16 & 1) + (v16 ^ 1);
  return v17();
}

uint64_t sub_100328AF4()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = v0[2287];
  v0[2400] = 31 * v4;
  v0[2366] = *(unsigned __int8 *)(v2
                                + 31 * v4
                                + 2059596029
                                + ((v1 + 979723786) & 0xC59A71BC)
                                - 2059596197
                                + 2979
                                - (31 * v4 + 2059596029 + ((v1 + 979723786) & 0xC59A71BC) - 2059596197 + 2979)
                                / 0x196
                                * v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v1 ^ (990 * (v6 == 1796353804)))) - 12))();
}

uint64_t sub_100328B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  *(_DWORD *)(v7 + 9496) = a7;
  *(_DWORD *)(v7 + 9608) = 0;
  *(_DWORD *)(v7 + 9576) = 0;
  *(_DWORD *)(v7 + 9568) = 0;
  *(_DWORD *)(v7 + 9592) = 0;
  *(_DWORD *)(v7 + 9584) = 0;
  *(_DWORD *)(v7 + 9504) = v9 + 1;
  *(_DWORD *)(v7 + 9480) = 0;
  v10 = (*(unsigned __int8 *)(*(_QWORD *)(v7 + 9560) + 38) ^ 0x60) + 3;
  *(_DWORD *)(v7 + 9448) = 31;
  *(_DWORD *)(v7 + 9472) = 65463;
  *(_DWORD *)(v7 + 9148) = v8;
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 9504);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 + 9744)
                                                                             + 8
                                                                             * ((496
                                                                               * (((*(_DWORD *)(v7 + 9496) + 2059602430) | 2u)
                                                                                - 6676 < 8)) ^ (*(_DWORD *)(v7 + 9496)
                                                                                              + 2059602649)));
  *(_DWORD *)(v7 + 9504) = v10;
  *(_DWORD *)(v7 + 9496) = 0;
  return v11(a1, a2, a3, a4, 0);
}

void sub_100329120()
{
  int v0;
  uint64_t v1;
  int v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v1 + 9520) = v2;
  *(_DWORD *)(v1 + 9608) = v0;
  v4 = (v3 - 49) ^ 0x2B;
  v5 = *(_QWORD *)(v1 + 9632);
  *(_DWORD *)(v1 + 9488) = v5 >> 8;
  v6 = (v5 >> 13) & 0xF8 | (v5 >> 21) & 7;
  *(_DWORD *)(v1 + 9472) = 109 * (((v6 ^ 0x52) + *(unsigned __int8 *)(*(_QWORD *)(v1 + 9648) + (v6 ^ 0x5E)) + 1) ^ 0x5C);
  *(_QWORD *)(v1 + 9632) = v5 >> (-30 * v4 - 82);
  JUMPOUT(0x10032922CLL);
}

uint64_t sub_100329C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)(v8 + 9576) = *(unsigned __int8 *)(v11 + (*(_DWORD *)(v8 + 9600) + 3379) % ((v7 - 5537) ^ 0x709u));
  return (*(uint64_t (**)(void))(v12 + 8 * (int)((((v7 - 138601257) & 0x8D7FD6FF ^ (v10 + 31)) * (v9 != a7 - 7)) ^ v7)))();
}

uint64_t sub_100329C68()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(v1 + 9568) = *(unsigned __int8 *)(v4
                                              + *(_DWORD *)(v1 + 9600)
                                              + 3410
                                              - (*(_DWORD *)(v1 + 9600) + 3410) / 0x196u * v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((v3 == ((v0 - 248728232) & 0xED357E9) + 1796348720)
                                          * ((v0 - 2059597448) ^ (v2 + 30))) ^ v0))
                            - 4))();
}

void sub_100329CE8()
{
  _DWORD *v0;
  int v1;

  v0[2374] = v1;
  v0[2398] = 0;
  v0[2376] = v0[2368] + 6;
  JUMPOUT(0x100329070);
}

void sub_100329D1C()
{
  _DWORD *v0;
  int v1;

  v0[2374] = v1;
  v0[2398] = 0;
  v0[2376] = v0[2368] + 5;
  v0[2392] = 128;
  JUMPOUT(0x100329070);
}

uint64_t sub_100329D4C()
{
  int v0;
  _DWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1[2374] = v0 ^ 0x853D03F6;
  v1[2376] = v1[2368] + 7;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 + 16 * (v2 == 1796353810))) - 4);
  v1[2398] = 128;
  return v4();
}

uint64_t sub_100329E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  uint64_t (*v15)(void);

  v11 = v10;
  *(_DWORD *)(v7 + 9496) = a7 ^ 0x853D0F79;
  v12 = *(unsigned __int8 *)(v9 + (*(_DWORD *)(v7 + 9600) + 3472) % 0x196u);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9544) + (((v12 >> 1) | ((_BYTE)v12 << 7)) ^ 0x25));
  v14 = (v13 ^ (32 * v13) ^ 0x45) + (((a7 ^ 0x853D0F79) + 2059599054) ^ 0xFFFFFFEF);
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (a7 ^ (200 * (*(_DWORD *)(v7 + 9148) == v8 - 4)))) - 8);
  *(_DWORD *)(v7 + 9592) = v14;
  return v15();
}

void sub_100329EB4()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 9504) = *(_DWORD *)(v0 + 9472) + 8;
  JUMPOUT(0x100329078);
}

uint64_t sub_100329ED4()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 9480) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v2 - 613) | 0x2024) ^ 0x2AAC) * (*(_DWORD *)(v1 + 9148) == 1796353812)) | v2))
                            - 4))();
}

void sub_100329F34()
{
  _DWORD *v0;
  int v1;

  v0[2400] = v0[2368] + 9;
  v0[2362] = 31;
  v0[2368] = 65463;
  v0[2287] = v1;
  JUMPOUT(0x1003290C0);
}

uint64_t sub_100329F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)((a7 - 2059606669)
                                                                                          + 8
                                                                                          * (a7 | (2
                                                                                                 * (*(_DWORD *)(v7 + 9148) != 1796353813))))
                                                                              - ((a7 - 10788) | 0x1E02u)
                                                                              + 7802))(a1, a2, a3, a4, 406);
}

uint64_t sub_10032A00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  v9 = v8;
  v10 = *(unsigned __int8 *)(v5 + *(_DWORD *)(v6 + 9600) + 3565 - (*(_DWORD *)(v6 + 9600) + 3565) / 0x196u * a5);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 9680) + (((v7 ^ 0xDC) + 76) ^ v10));
  v12 = *(_DWORD *)(v6 + 9148);
  *(_DWORD *)(v6 + 9504) = 1796353814;
  *(_DWORD *)(v6 + 9448) = (v10 ^ 0x63 ^ v11) + 34;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((21 * (((v12 == 1796353814) ^ ((v7 - 111) | 4)) & 1)) | v7))
                            - 8))();
}

uint64_t sub_10032A0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a5
                                                                                         + 8
                                                                                         * ((216
                                                                                           * (((*(_DWORD *)(v6 + 9148) == 1796353815) ^ (v7 - 71)) & 1)) ^ v7))
                                                                             - 12))(a1, a2, a3, a4, *(unsigned __int8 *)(v5 + (*(_DWORD *)(v6 + 9600) + 3596) % (((v7 + 19979685) | 0x840C1014) ^ 0x853D1181)));
}

void sub_10032A138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_DWORD *)(v9 + 9496) = v8;
  *(_DWORD *)(v9 + 9504) = a8;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9728) + (*(_DWORD *)(v9 + 9600) + 3627) % 0x196u);
  *(_DWORD *)(v9 + 9488) = (v11 ^ *(unsigned __int8 *)(*(_QWORD *)(v9 + 9680) + (v11 ^ 0xAA)) ^ 0x4D ^ (v10 - 921574041) & 0x36EE24AF)
                         + 3;
  *(_DWORD *)(v9 + 9600) = *(_DWORD *)(v9 + 9472) + 13;
  *(_DWORD *)(v9 + 9148) = 1796353816;
  JUMPOUT(0x100329204);
}

void sub_10032A1D4()
{
  _DWORD *v0;
  int v1;

  v0[2400] = v0[2368] + 10;
  v0[2362] = 159;
  v0[2368] = 65463;
  v0[2287] = v1;
  JUMPOUT(0x1003290C4);
}

void sub_10032A210()
{
  _DWORD *v0;

  v0[2400] = v0[2368] + 11;
  v0[2368] = 65463;
  v0[2287] = v0[2376];
  JUMPOUT(0x1003290C4);
}

uint64_t sub_10032A358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7
                                                                       + 8
                                                                       * (((((v7 - 733) ^ 0x545) - 8623) * (v8 < 0x30)) ^ (v7 - 733))))(a1, a2, 385908731, 6643);
}

uint64_t sub_10032A3A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((a2 & ~((v8 - 923050953) ^ (v7 < 0x28u))) * (((v8 - 877) | 0x100) - 8487)) ^ v8))
                            - 12))();
}

uint64_t sub_10032A3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((((v8 < 0x2C) ^ (v7 + 127)) & 1) * ((v7 ^ 0x3825) - 6319)) ^ v7))
                            - 8))();
}

uint64_t sub_10032A42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((91 * (*(_DWORD *)(v8 + 5332) > 0x3Eu)) ^ v7))
                            - 8))();
}

uint64_t sub_10032A464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((v8 == ((v7 ^ (v10 + 39)) + 40)) * (v9 + (v7 ^ (v10 - 217)) - 166)) ^ v7)))();
}

void sub_10032A498(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2784) = a1;
  JUMPOUT(0x1002EC44CLL);
}

uint64_t sub_10032A4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7
                                                                                 + 8
                                                                                 * (int)(((((((v7 - 234358412) & 0xDF7F93E)
                                                                                           - 4354) & v8 ^ 0x10)
                                                                                         + ((((v7 - 234358412) & 0xDF7F93E)
                                                                                           - 4354) & v8) > v8)
                                                                                        * ((v7 - 234358412) ^ 0xF2081784)) ^ (v7 + 1205)))
                                                                     - 8))(a1, a2, 385908731, 6643);
}

uint64_t sub_10032A528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  unsigned int v8;
  BOOL v9;

  v9 = v7 < ((v8 ^ 0x66) - 108);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((4 * ((v9 ^ (v8 - 1)) & 1)) & 0xF7 | (8
                                                                                                 * ((v9 ^ (v8 - 1)) & 1))) ^ v8))
                            - 4))();
}

uint64_t sub_10032A56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((((v8 - 919) | 0x542) ^ 0x2562) * (v7 < 0x38u)) ^ (v8 - 4939)))
                            - (((v8 - 290) | 2u) ^ 0x2283)))();
}

uint64_t sub_10032A5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((((v7 - 6674) ^ 0x87B) * (v8 > 0x33)) ^ v7)) - 12))();
}

uint64_t sub_10032A5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (int)(((((((v8 ^ 0x274) + 1999298494) & 0x88D53FFF) - 3009) ^ ((v8 ^ 0x274) - 1215015426) & 0x486BBDDE)
                                               * (v7 > 0x35u)) ^ v8 ^ 0x274))
                            - 12))();
}

uint64_t sub_10032A650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (v7 ^ (53 * (*(_DWORD *)(v8 + 5332) != 71))))
                            + 2235371539
                            - (v7 ^ (v9 - 590))
                            - 4))();
}

void sub_10032A694(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2944) = a1;
  *(_DWORD *)(v1 + 5332) = 73;
  JUMPOUT(0x1002F9A0CLL);
}

uint64_t sub_10032A6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (int)((1984 * (((v7 < 0x18u) ^ ((v8 ^ 0x2D) - 1)) & 1)) ^ v8 ^ 0xF2081C2D))
                            - 959 * (v8 ^ 0xF20817D6)
                            + 4787))();
}

uint64_t sub_10032A704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (int)((219 * (v7 < (((((v8 - 16) & 0x5F) + 111) & 0x7F) - 33))) ^ (v8 + 412873712) & 0xE764195F))
                            - 12))();
}

uint64_t sub_10032A75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v8 - 2720) ^ (42 * (v7 < 0x1Au))))
                            - ((v8 - 2720) ^ 0x1360u)
                            - 261 * ((v8 - 2720) ^ 0x1896u)
                            + 5928))();
}

uint64_t sub_10032A7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((27 * ((((((v8 & 0x37049DAF) - 6413) | 0x82E) ^ 0xFFFFFF83) & 0xF5) <= v7)) ^ v8 & 0x37049DAFu))
                            - ((v8 & 0x37049DAFu)
                             + 2668)
                            + 10230))();
}

uint64_t sub_10032A804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((((((v7 + 55) | 9) ^ 0x34) & 0xFEu) <= (*(_BYTE *)(v8 + 5332) - 55))
                                          * ((v7 ^ 0x492) - 1662)) ^ v7))
                            - 4))();
}

uint64_t sub_10032A850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;
  BOOL v9;

  v9 = (((v8 - 671149854) ^ 0x32) & 0xF7u) > v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((v8 ^ 0x2A ^ v9) & 1 | (2
                                                                                   * ((v8 ^ 0x2A ^ v9) & 1))) ^ v8))
                            - 12))();
}

void sub_10032A8A4(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2848) = a1;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_10032A8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((46 * ((((((_BYTE)v8 - 85) & 0x7E) - 64) & 0xFEu) > v7)) ^ v8)))();
}

uint64_t sub_10032A908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v8 - 787) ^ (117 * (v7 < 0x3Au))))
                            - ((v8 - 704819635) & 0x2A02AEED ^ (603 * ((v8 - 787) ^ 0x2230u)) ^ 0x1D0)))();
}

uint64_t sub_10032A964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((((v8 - 2059604598) ^ (v9 + 19)) * (v7 == 57)) ^ v8))
                            - ((v8 - 2059604598) ^ 0x853D1013)))();
}

uint64_t sub_10032A9B0@<X0>(_BYTE *a1@<X0>, int a2@<W7>, char a3@<W8>)
{
  int v3;
  _BYTE *v4;
  uint64_t v5;
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;

  **(_BYTE **)(v9 + 2960) = a3;
  *(_DWORD *)(v9 + 5332) = 75;
  v13 = *(_QWORD *)(v9 + 8288);
  *(_DWORD *)(v9 + 9688) = 0;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9648) + ((723 * (a2 ^ (v12 - 3))) ^ 0x8F6u)) + 132;
  a1[3895] = -70;
  a1[3957] = 32;
  a1[3926] = 50;
  a1[3988] = 55;
  a1[4081] = -14;
  a1[4050] = 22;
  v4 = *(_BYTE **)(v9 + 8448);
  v4[140] = -22;
  v4[109] = -127;
  a1[3954] = 81;
  a1[3923] = -110;
  v4[16] = 103;
  a1[4019] = v7;
  v4[78] = -95;
  v4[171] = 65;
  v4[47] = 73;
  a1[3892] = -24;
  v5 = *(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * ((6641 * ((v10 - 1302587220) > 7)) ^ (v8 + a2 + 546)));
  *(_DWORD *)(v9 + 5204) = 109 * (v3 ^ v11);
  *(_DWORD *)(v9 + 9148) = 1796353962;
  *(_QWORD *)(v9 + 5480) = *(_QWORD *)(v9 + 8520);
  *(_QWORD *)(v9 + 5472) = *(_QWORD *)(v9 + 7744);
  *(_QWORD *)(v9 + 5464) = v13;
  *(_QWORD *)(v9 + 8288) = v13;
  return ((uint64_t (*)(void))(v5 - 4))();
}

uint64_t sub_10032A9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((v7 < ((v8 + 80) ^ 0x1Fu)) * (((v8 - 4667) | 0x1041) ^ 0x109A)) ^ v8)))();
}

uint64_t sub_10032AA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((((v8 + 160) ^ 0x2230) * (v7 > 0x29u)) ^ v8))
                            - ((v8 - 1342187966) & 0x50002FFF ^ 0x27F3)))();
}

uint64_t sub_10032AA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((((v7 + 1103881) | 0x852C1013) ^ 0x853D1FE6)
                                     * (*(_DWORD *)(v8 + 5332) == 59)) ^ v7)))();
}

void sub_10032AA9C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2888) = a1;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_10032AAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((11 * ((((((_BYTE)v8 - 18) & 0xFC) - 46) & 0xFEu) <= v7)) ^ v8))
                            - ((v8 + 1996137198) ^ 0x76FAAB6BLL)))();
}

uint64_t sub_10032AB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * ((123
                                * (v7 < ((41 * (v8 ^ 0x2C)) ^ (v8 - 7) & 0xFB ^ 0x95))) ^ v8)))();
}

uint64_t sub_10032AB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(a7 + 8 * (((v9 + v10 + v8 - 2098 - 154) * (v7 == 29)) ^ v8)))();
}

void sub_10032AB88(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 29) = a2;
  JUMPOUT(0x1002EC44CLL);
}

uint64_t sub_10032AB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((v7 < (v8 + 40))
                                          * (((v8 - 9162) | 0x48) + 2916)) ^ v8))
                            - 12))();
}

uint64_t sub_10032ABD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  char v9;
  _BOOL4 v10;

  v10 = v7 == ((v8 ^ (v9 + 88)) ^ 0x36);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v10 | (4 * v10)) ^ v8)) - 8))();
}

void sub_10032AC08(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2824) = a1;
  JUMPOUT(0x1002EC44CLL);
}

uint64_t sub_10032AC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((((v8 + 772) | 2) - 900) * (v7 > 0x3Du)) ^ v8)) - 12))();
}

uint64_t sub_10032AC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((*(_DWORD *)(v9 + 5332) == ((v7 - 101) ^ 0x58))
                                     * (v8 + ((v7 - 172025789) & 0x8F7DF657) - 268)) | (v7 + 10294))))();
}

void sub_10032ACB0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2760) = a1;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_10032ACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((((v8 - 3074) ^ 0x853D0330) - 175775787 + v8 - 2059603730 + 26) * (v7 > 0x2Cu)) ^ (v8 - 3074))))();
}

void sub_10032AD10(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2904) = a1;
  JUMPOUT(0x10032AD20);
}

uint64_t sub_10032AD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((v7 == ((v8 + 88) ^ 0x22)) * (v9 + v8 - 2059606440 - 157)) ^ v8)))();
}

uint64_t sub_10032AD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((29
                                          * (v7 < (((v8 + 104) & 0xBF)
                                                                                + ((v8 + 24) | 0x10)
                                                                                - 7))) ^ v8))
                            - 12))();
}

void sub_10032ADC8(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2856) = a1;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_10032ADDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = *(_DWORD *)(v8 + 5332) == (((v7 - 62) ^ ((v7 - 68) | 6)) ^ 0x4B);
  return (*(uint64_t (**)(void))(a7 + 8 * ((v9 | (2 * v9)) ^ v7)))();
}

void sub_10032AE38(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2968) = a1;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_10032AE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a7 + 8 * (((v9 + ((v8 - 2076709459) | 0x1050011) - 60) * (v7 != 41)) ^ v8)))();
}

uint64_t sub_10032AE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((v8 + ((v7 + 2087771) | 0x851D1003) - 151)
                                     * (*(_DWORD *)(v9 + 5332) != 47)) ^ v7)))();
}

void sub_10032AED8(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 31) = a2;
  JUMPOUT(0x1002F9A00);
}

uint64_t sub_10032AEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((11
                                          * (*(_DWORD *)(v8 + 5332) != ((v7 + 29) ^ 0x24))) ^ (v7 - 2358)))
                            - (((v7 + 87545866) | 0x80051013) ^ 0x853D1013)))();
}

void sub_10032AF54(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2840) = a1;
  *(_DWORD *)(v1 + 5332) = 53;
  JUMPOUT(0x1002F9A04);
}

uint64_t sub_10032AF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  char v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((11 * (v8 == ((v7 - v9 - 110) ^ 0x2A))) ^ v7))
                            + 2235371539
                            - (v7 ^ (v10 + 1150))
                            - 8))();
}

void sub_10032AFB0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2976) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_10032AFC4(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2792) = a1;
  JUMPOUT(0x1002EC44CLL);
}

void sub_10032AFD8(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2776) = a1;
  JUMPOUT(0x10032AFE8);
}

void sub_10032B000(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2816) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_10032B018(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2952) = a1;
  JUMPOUT(0x10032B028);
}

void sub_10032B03C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2808) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_10032B050(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 28) = a2;
  JUMPOUT(0x1002EC44CLL);
}

void sub_10032B060(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 3024) = a1;
  JUMPOUT(0x1002EC44CLL);
}

void sub_10032B074(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2984) = a1;
  *(_DWORD *)(v1 + 9688) = 16;
  JUMPOUT(0x1003244E4);
}

void sub_10032B08C(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2896) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_10032B0A0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2864) = a1;
  *(_DWORD *)(v1 + 5332) = 57;
  JUMPOUT(0x1002F9A04);
}

void sub_10032B0BC(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2744) = a1;
  *(_DWORD *)(v1 + 5332) = 77;
  JUMPOUT(0x1002F9A04);
}

void sub_10032B0D0(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 30) = a2;
  JUMPOUT(0x1002F9A00);
}

void sub_10032B0E0(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2832) = a1;
  JUMPOUT(0x1002F9A00);
}

void sub_10032B0F4(char a1@<W8>)
{
  uint64_t v1;

  **(_BYTE **)(v1 + 2752) = a1;
  JUMPOUT(0x10032B104);
}

void sub_10032B110()
{
  JUMPOUT(0x10032B134);
}

void sub_10032B1A0()
{
  JUMPOUT(0x100330F08);
}

uint64_t sub_10032B1FC@<X0>(int a1@<W1>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  *(_BYTE *)(v6
           + 31 * (_DWORD)a3
           + a1
           - ((((31 * a3 + a1) * (unint64_t)v4) >> 32) >> 8) * v7) = *(_BYTE *)(a2 + a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((19 * (a3 != 63)) ^ v3)) - 12))(844);
}

uint64_t sub_10032B250(int a1, uint64_t a2, __int16 a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  *(_BYTE *)(v10
           + (unsigned __int16)((((v6 + v7) | a3) ^ v8)
                              - v5
                              + 32 * v5
                              - ((unsigned __int16)((((unsigned __int16)((((v6 + v7) | a3) ^ v8)
                                                                                     - v5
                                                                                     + 32 * v5) >> 1)
                                                   * a5) >> 16) >> 5)
                              * v11)) = *(_BYTE *)(a4 + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v5 == 31) * a1) ^ v6)) - 12))();
}

uint64_t sub_10032B2A0@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(v5 + 7223 - (((7223 * (unint64_t)v2) >> 32) >> 8) * v6) = *(_BYTE *)(a1 - 0x194C6113CD9FFCD4);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 + a2 + 2293)))(7223);
}

void sub_10032B308()
{
  JUMPOUT(0x10032B2BCLL);
}

uint64_t sub_10032B310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;

  *(_QWORD *)(v9 + 9616) = a8;
  *(_DWORD *)(v9 + 9624) = v10;
  *(_QWORD *)(v9 + 5464) = a7;
  *(_QWORD *)(v9 + 5472) = a6;
  *(_QWORD *)(v9 + 5480) = a4;
  *(_DWORD *)(v9 + 9600) = 0;
  *(_BYTE *)(*(_QWORD *)(v9 + 8344) + 3983) = *(_DWORD *)(v9 + 5204);
  v12 = *(_DWORD *)(v9 + 9148);
  *(_QWORD *)(v9 + 9632) = (v8 ^ 0x853D1EB9) + 8 * v12 + 573667233;
  *(_QWORD *)(v9 + 9280) = v11;
  return sub_1003287E8(v12, -1800294285);
}

uint64_t sub_10032B3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * ((((((v7 - 42) ^ *(_DWORD *)(v8 + 9736)) & 1) == 0) * (((v7 + 854) | 0x109D) ^ 0x1986)) ^ v7)))();
}

uint64_t sub_10032B3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, int a4@<W8>)
{
  uint64_t v4;
  char v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a3 + 8 * (a4 ^ (56 * (v5 & 1))))
                                                           - ((a4 - 6295) | 0x200u)
                                                           + 772))(a1, a2, *(unsigned int *)(v4 + 9592));
}

uint64_t sub_10032B420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int *v8;
  int v9;

  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(a7
                                                                                               + 8
                                                                                               * (int)(v7 ^ (41 * (v9 & ~v8[2420]))))
                                                                                   - (v7 - 450)
                                                                                   + 322))(v8[2406], v8[2408], a3, v8[2376], a5, v8[2068]);
}

uint64_t sub_10032B45C(int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t (*v13)(void);

  v13 = *(uint64_t (**)(void))(a7 + 8 * ((9614 * ((v12 ^ (((v8 + 58) | 0x28) + 111)) & 1)) ^ v8));
  *(_QWORD *)(v11 + 9680) = *(_QWORD *)(v11 + 8536);
  *(_DWORD *)(v11 + 8764) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8768) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 8748) = *(_DWORD *)(v11 + 8980);
  *(_DWORD *)(v11 + 9520) = v10;
  *(_DWORD *)(v11 + 8736) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 8728) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 7752) = a6;
  *(_DWORD *)(v11 + 8720) = *(_DWORD *)(v11 + 8968);
  *(_DWORD *)(v11 + 8760) = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 8752) = *(_DWORD *)(v11 + 9480);
  *(_DWORD *)(v11 + 8232) = a4;
  *(_DWORD *)(v11 + 8712) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 8688) = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 7964) = v9;
  *(_DWORD *)(v11 + 9136) = *(_DWORD *)(v11 + 9056);
  *(_DWORD *)(v11 + 8672) = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 9080) = a2;
  *(_DWORD *)(v11 + 8132) = a8;
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 9432) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 9264) = a1;
  *(_DWORD *)(v11 + 8656) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 8648) = *(_DWORD *)(v11 + 9004);
  *(_DWORD *)(v11 + 8640) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 9008) = *(_DWORD *)(v11 + 9156);
  *(_DWORD *)(v11 + 9400) = *(_DWORD *)(v11 + 9224);
  *(_DWORD *)(v11 + 8704) = *(_DWORD *)(v11 + 9064);
  *(_DWORD *)(v11 + 9392) = *(_DWORD *)(v11 + 8544);
  *(_DWORD *)(v11 + 9012) = *(_DWORD *)(v11 + 9240);
  *(_DWORD *)(v11 + 8632) = *(_DWORD *)(v11 + 8800);
  return v13();
}

void sub_10032B5A4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;

  *(_DWORD *)(v11 + 7792) = 0;
  *(_DWORD *)(v11 + 7784) = 0;
  *(_DWORD *)(v11 + 7776) = 0;
  *(_DWORD *)(v11 + 9496) = 0;
  *(_DWORD *)(v11 + 9576) = 0;
  *(_DWORD *)(v11 + 9456) = 0;
  *(_DWORD *)(v11 + 9488) = 0;
  *(_DWORD *)(v11 + 9472) = 0;
  v12 = 2089 * (v8 ^ 0x14AB) + 32 * *(_DWORD *)(v11 + 6788) - 6299;
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 9128) = *(_DWORD *)(v11 + 6380);
  *(_DWORD *)(v11 + 9116) = *(_DWORD *)(v11 + 9448);
  *(_DWORD *)(v11 + 7976) = *(_DWORD *)(v11 + 8212);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 9052) = a8;
  *(_DWORD *)(v11 + 9520) = *(_DWORD *)(v11 + 8196);
  *(_DWORD *)(v11 + 7752) = a6;
  *(_DWORD *)(v11 + 8232) = a4;
  *(_DWORD *)(v11 + 8456) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 7964) = v10;
  *(_DWORD *)(v11 + 9036) = v12;
  *(_DWORD *)(v11 + 8132) = v9;
  *(_DWORD *)(v11 + 8236) = *(_DWORD *)(v11 + 9240);
  *(_DWORD *)(v11 + 8328) = a3;
  *(_DWORD *)(v11 + 9688) = 1;
  *(_DWORD *)(v11 + 9504) = 1;
  *(_DWORD *)(v11 + 9464) = 1;
  *(_DWORD *)(v11 + 9736) = 0;
  *(_DWORD *)(v11 + 9680) = 0;
  JUMPOUT(0x100326F74);
}

uint64_t sub_10032B680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int *v8;

  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a7
                                                                     + 8
                                                                     * (int)(((((v7 | 0x258) + 3041) ^ 0x1385)
                                                                            * (v8[2394] & 1)) ^ (v7 | 0x258)))
                                                         - ((29 * ((v7 | 0x258) ^ 0x6CFu)) ^ 0x1F69)))(v8[2049], v8[2406], v8[2408]);
}

uint64_t sub_10032B6EC@<X0>(char a1@<W3>, uint64_t a2@<X6>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a3 ^ (228 * (a1 & 1))))
                            - (((935 * (a3 ^ 0x1F6A) - 10285) | 0x146u) ^ 0x14ELL)))();
}

uint64_t sub_10032B734(int a1, int a2, int a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v12 = (uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (int)(((v8 ^ 0x853D383A ^ (v10 - 17)) * (a5 & 1)) ^ v8)) - 4);
  *(_QWORD *)(v11 + 9680) = *(_QWORD *)(v11 + 7392);
  *(_DWORD *)(v11 + 8764) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8768) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 8748) = *(_DWORD *)(v11 + 8980);
  *(_DWORD *)(v11 + 9520) = a1;
  *(_DWORD *)(v11 + 8736) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 8728) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 7752) = *(_DWORD *)(v11 + 8272);
  *(_DWORD *)(v11 + 8720) = *(_DWORD *)(v11 + 8968);
  *(_DWORD *)(v11 + 8760) = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 8752) = *(_DWORD *)(v11 + 9480);
  *(_DWORD *)(v11 + 8232) = a8;
  *(_DWORD *)(v11 + 8712) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 8688) = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8680) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 7964) = v9;
  *(_DWORD *)(v11 + 9136) = *(_DWORD *)(v11 + 9056);
  *(_DWORD *)(v11 + 8672) = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 9080) = a3;
  *(_DWORD *)(v11 + 8132) = *(_DWORD *)(v11 + 9464);
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 9432) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 9264) = a2;
  *(_DWORD *)(v11 + 8656) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 8648) = *(_DWORD *)(v11 + 9004);
  *(_DWORD *)(v11 + 8640) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 9008) = *(_DWORD *)(v11 + 9156);
  *(_DWORD *)(v11 + 9400) = *(_DWORD *)(v11 + 9224);
  *(_DWORD *)(v11 + 8704) = *(_DWORD *)(v11 + 9064);
  *(_DWORD *)(v11 + 9392) = *(_DWORD *)(v11 + 8544);
  *(_DWORD *)(v11 + 9012) = *(_DWORD *)(v11 + 9240);
  *(_DWORD *)(v11 + 8632) = *(_DWORD *)(v11 + 8800);
  return v12();
}

void sub_10032B87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  *(_DWORD *)(v12 + 8764) = *(_DWORD *)(v12 + 8828);
  *(_DWORD *)(v12 + 8768) = *(_DWORD *)(v12 + 8860);
  *(_DWORD *)(v12 + 9272) = *(_DWORD *)(v12 + 9656);
  *(_DWORD *)(v12 + 8748) = *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 9520) = *(_DWORD *)(v12 + 8196);
  *(_DWORD *)(v12 + 8736) = *(_DWORD *)(v12 + 8792);
  *(_DWORD *)(v12 + 8728) = *(_DWORD *)(v12 + 8816);
  *(_DWORD *)(v12 + 8744) = *(_DWORD *)(v12 + 8628);
  *(_DWORD *)(v12 + 7752) = v11;
  *(_DWORD *)(v12 + 8720) = *(_DWORD *)(v12 + 8968);
  *(_DWORD *)(v12 + 8760) = *(_DWORD *)(v12 + 9256);
  *(_DWORD *)(v12 + 8752) = *(_DWORD *)(v12 + 9480);
  *(_DWORD *)(v12 + 8232) = v8;
  *(_DWORD *)(v12 + 8712) = *(_DWORD *)(v12 + 8868);
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v12 + 8840);
  *(_DWORD *)(v12 + 8688) = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 8680) = *(_DWORD *)(v12 + 8808);
  *(_DWORD *)(v12 + 7964) = v9;
  *(_DWORD *)(v12 + 9136) = *(_DWORD *)(v12 + 9056);
  *(_DWORD *)(v12 + 8672) = *(_DWORD *)(v12 + 8848);
  *(_DWORD *)(v12 + 9080) = *(_DWORD *)(v12 + 9632);
  *(_DWORD *)(v12 + 8132) = v10;
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 9432) = *(_DWORD *)(v12 + 9172);
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8656) = *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 8648) = *(_DWORD *)(v12 + 9004);
  *(_DWORD *)(v12 + 8640) = *(_DWORD *)(v12 + 8784);
  *(_DWORD *)(v12 + 9008) = *(_DWORD *)(v12 + 9156);
  *(_DWORD *)(v12 + 9400) = *(_DWORD *)(v12 + 9224);
  *(_DWORD *)(v12 + 8704) = *(_DWORD *)(v12 + 9064);
  *(_DWORD *)(v12 + 9392) = *(_DWORD *)(v12 + 8544);
  *(_DWORD *)(v12 + 9012) = *(_DWORD *)(v12 + 9240);
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 9680) = *(_QWORD *)(v12 + 7392);
  v13 = *(_QWORD *)(v12 + 7624);
  v14 = *(_DWORD *)(v12 + 7608);
  v15 = *(_QWORD *)(v12 + 9680);
  *(_QWORD *)(v12 + 8160) = v15;
  *(_QWORD *)(v12 + 9600) = v15;
  *(_QWORD *)(v12 + 8168) = v13;
  *(_QWORD *)(v12 + 9608) = v13;
  *(_DWORD *)(v12 + 8828) = *(_DWORD *)(v12 + 8764);
  *(_DWORD *)(v12 + 8860) = *(_DWORD *)(v12 + 8768);
  *(_DWORD *)(v12 + 9656) = *(_DWORD *)(v12 + 9272);
  *(_DWORD *)(v12 + 8980) = *(_DWORD *)(v12 + 8748);
  *(_DWORD *)(v12 + 8792) = *(_DWORD *)(v12 + 8736);
  *(_DWORD *)(v12 + 8816) = *(_DWORD *)(v12 + 8728);
  *(_DWORD *)(v12 + 8628) = *(_DWORD *)(v12 + 8744);
  *(_DWORD *)(v12 + 8968) = *(_DWORD *)(v12 + 8720);
  *(_DWORD *)(v12 + 9256) = *(_DWORD *)(v12 + 8760);
  *(_DWORD *)(v12 + 9480) = *(_DWORD *)(v12 + 8752);
  *(_DWORD *)(v12 + 8868) = *(_DWORD *)(v12 + 8712);
  *(_DWORD *)(v12 + 8840) = *(_DWORD *)(v12 + 8696);
  *(_DWORD *)(v12 + 8152) = v14;
  *(_DWORD *)(v12 + 9664) = v14;
  *(_DWORD *)(v12 + 8864) = *(_DWORD *)(v12 + 8688);
  *(_DWORD *)(v12 + 8808) = *(_DWORD *)(v12 + 8680);
  *(_DWORD *)(v12 + 9056) = *(_DWORD *)(v12 + 9136);
  *(_DWORD *)(v12 + 8848) = *(_DWORD *)(v12 + 8672);
  *(_DWORD *)(v12 + 9632) = *(_DWORD *)(v12 + 9080);
  *(_DWORD *)(v12 + 8992) = *(_DWORD *)(v12 + 8664);
  *(_DWORD *)(v12 + 9172) = *(_DWORD *)(v12 + 9432);
  *(_DWORD *)(v12 + 9616) = a8;
  *(_DWORD *)(v12 + 8548) = a8;
  *(_DWORD *)(v12 + 9624) = *(_DWORD *)(v12 + 9264);
  *(_DWORD *)(v12 + 8776) = *(_DWORD *)(v12 + 8656);
  *(_DWORD *)(v12 + 9004) = *(_DWORD *)(v12 + 8648);
  *(_DWORD *)(v12 + 8784) = *(_DWORD *)(v12 + 8640);
  *(_DWORD *)(v12 + 9156) = *(_DWORD *)(v12 + 9008);
  *(_DWORD *)(v12 + 9224) = *(_DWORD *)(v12 + 9400);
  *(_DWORD *)(v12 + 9064) = *(_DWORD *)(v12 + 8704);
  *(_DWORD *)(v12 + 8280) = 11;
  *(_DWORD *)(v12 + 8544) = *(_DWORD *)(v12 + 9392);
  *(_DWORD *)(v12 + 9240) = *(_DWORD *)(v12 + 9012);
  *(_DWORD *)(v12 + 8800) = *(_DWORD *)(v12 + 8632);
  *(_DWORD *)(v12 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

uint64_t sub_10032B994@<X0>(int a1@<W2>, uint64_t a2@<X6>, int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v9 = a4 - 4333;
  v10 = v4 + ((v9 - 1170) | 0x14u) - 1076;
  *(_QWORD *)(v7 + 9416) = v10;
  v11 = *(uint64_t (**)(void))(a2 + 8 * (int)(((v10 ^ (v4 - 1398)) * (v8 & 1)) ^ v9));
  *(_DWORD *)(v7 + 8440) = 95;
  *(_QWORD *)(v7 + 8408) = *(_QWORD *)(v7 + 8432);
  *(_QWORD *)(v7 + 8400) = *(_QWORD *)(v7 + 8416);
  *(_QWORD *)(v7 + 8392) = *(_QWORD *)(v7 + 8536);
  *(_QWORD *)(v7 + 8384) = *(_QWORD *)(v7 + 8488);
  *(_QWORD *)(v7 + 8376) = *(_QWORD *)(v7 + 8472);
  *(_QWORD *)(v7 + 8944) = *(_QWORD *)(v7 + 9568);
  *(_QWORD *)(v7 + 8576) = *(_QWORD *)(v7 + 8888);
  *(_QWORD *)(v7 + 8952) = *(_QWORD *)(v7 + 9200);
  *(_QWORD *)(v7 + 8936) = *(_QWORD *)(v7 + 8880);
  *(_QWORD *)(v7 + 9280) = *(_QWORD *)(v7 + 9600);
  *(_QWORD *)(v7 + 9016) = *(_QWORD *)(v7 + 9608);
  *(_DWORD *)(v7 + 9128) = a3;
  *(_DWORD *)(v7 + 9116) = *(_DWORD *)(v7 + 9448);
  *(_DWORD *)(v7 + 9272) = *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 9320) = *(_DWORD *)(v7 + 9616);
  *(_DWORD *)(v7 + 8832) = *(_DWORD *)(v7 + 9384);
  *(_DWORD *)(v7 + 9152) = *(_DWORD *)(v7 + 8964);
  *(_DWORD *)(v7 + 8368) = v6;
  *(_DWORD *)(v7 + 7752) = a3;
  *(_DWORD *)(v7 + 8608) = *(_DWORD *)(v7 + 9424);
  *(_DWORD *)(v7 + 8504) = *(_DWORD *)(v7 + 9256);
  *(_DWORD *)(v7 + 8232) = *(_DWORD *)(v7 + 9504);
  *(_DWORD *)(v7 + 8520) = *(_DWORD *)(v7 + 8464);
  *(_DWORD *)(v7 + 8356) = *(_DWORD *)(v7 + 8532);
  *(_DWORD *)(v7 + 8360) = *(_DWORD *)(v7 + 8424);
  *(_DWORD *)(v7 + 9104) = *(_DWORD *)(v7 + 9440);
  *(_DWORD *)(v7 + 8456) = *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 8912) = *(_DWORD *)(v7 + 8872);
  *(_DWORD *)(v7 + 8512) = *(_DWORD *)(v7 + 8480);
  *(_DWORD *)(v7 + 7964) = *(_DWORD *)(v7 + 9688);
  *(_DWORD *)(v7 + 9072) = *(_DWORD *)(v7 + 9632);
  *(_DWORD *)(v7 + 8920) = *(_DWORD *)(v7 + 9160);
  *(_DWORD *)(v7 + 8132) = *(_DWORD *)(v7 + 9464);
  *(_DWORD *)(v7 + 8496) = *(_DWORD *)(v7 + 9528);
  *(_DWORD *)(v7 + 9264) = *(_DWORD *)(v7 + 9624);
  *(_DWORD *)(v7 + 8904) = *(_DWORD *)(v7 + 8616);
  *(_DWORD *)(v7 + 8552) = *(_DWORD *)(v7 + 9408);
  *(_DWORD *)(v7 + 8900) = *(_DWORD *)(v7 + 9096);
  *(_DWORD *)(v7 + 9184) = *(_DWORD *)(v7 + 9584);
  *(_DWORD *)(v7 + 8572) = *(_DWORD *)(v7 + 8984);
  *(_DWORD *)(v7 + 8352) = v5;
  *(_DWORD *)(v7 + 8932) = *(_DWORD *)(v7 + 8612);
  *(_DWORD *)(v7 + 8328) = a1;
  return v11();
}

uint64_t sub_10032BB3C(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  *(_QWORD *)(v12 + 9416) = (v8 - 2059596829);
  v13 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744)
                                      + 8 * ((((v8 - 517048309) & 0x1ED19FCE ^ (v8 + 2934)) * (v9 & 1)) ^ v8))
                          - 12);
  *(_DWORD *)(v12 + 8440) = 88;
  *(_QWORD *)(v12 + 8408) = *(_QWORD *)(v12 + 8432);
  *(_QWORD *)(v12 + 8400) = *(_QWORD *)(v12 + 8416);
  *(_QWORD *)(v12 + 8392) = *(_QWORD *)(v12 + 8536);
  *(_QWORD *)(v12 + 8384) = *(_QWORD *)(v12 + 8488);
  *(_QWORD *)(v12 + 8376) = *(_QWORD *)(v12 + 8472);
  *(_QWORD *)(v12 + 8944) = *(_QWORD *)(v12 + 9568);
  *(_QWORD *)(v12 + 8576) = *(_QWORD *)(v12 + 8888);
  *(_QWORD *)(v12 + 8952) = *(_QWORD *)(v12 + 9200);
  *(_QWORD *)(v12 + 8936) = *(_QWORD *)(v12 + 8880);
  *(_QWORD *)(v12 + 9280) = *(_QWORD *)(v12 + 9600);
  *(_QWORD *)(v12 + 9016) = *(_QWORD *)(v12 + 9608);
  *(_DWORD *)(v12 + 9128) = a8;
  *(_DWORD *)(v12 + 9116) = *(_DWORD *)(v12 + 9448);
  *(_DWORD *)(v12 + 9272) = *(_DWORD *)(v12 + 9656);
  *(_DWORD *)(v12 + 9320) = *(_DWORD *)(v12 + 9616);
  *(_DWORD *)(v12 + 8832) = *(_DWORD *)(v12 + 9384);
  *(_DWORD *)(v12 + 9152) = *(_DWORD *)(v12 + 8964);
  *(_DWORD *)(v12 + 8368) = *(_DWORD *)(v12 + 8196);
  *(_DWORD *)(v12 + 7752) = a8;
  *(_DWORD *)(v12 + 8608) = *(_DWORD *)(v12 + 9424);
  *(_DWORD *)(v12 + 8504) = *(_DWORD *)(v12 + 9256);
  *(_DWORD *)(v12 + 8232) = v11;
  *(_DWORD *)(v12 + 8520) = *(_DWORD *)(v12 + 8464);
  *(_DWORD *)(v12 + 8356) = *(_DWORD *)(v12 + 8532);
  *(_DWORD *)(v12 + 8360) = *(_DWORD *)(v12 + 8424);
  *(_DWORD *)(v12 + 9104) = *(_DWORD *)(v12 + 9440);
  *(_DWORD *)(v12 + 8456) = *(_DWORD *)(v12 + 9664);
  *(_DWORD *)(v12 + 8912) = *(_DWORD *)(v12 + 8872);
  *(_DWORD *)(v12 + 8512) = *(_DWORD *)(v12 + 8480);
  *(_DWORD *)(v12 + 7964) = v10;
  *(_DWORD *)(v12 + 9072) = *(_DWORD *)(v12 + 9632);
  *(_DWORD *)(v12 + 8920) = *(_DWORD *)(v12 + 9160);
  *(_DWORD *)(v12 + 8132) = a1;
  *(_DWORD *)(v12 + 8496) = *(_DWORD *)(v12 + 9528);
  *(_DWORD *)(v12 + 9264) = *(_DWORD *)(v12 + 9624);
  *(_DWORD *)(v12 + 8904) = *(_DWORD *)(v12 + 8616);
  *(_DWORD *)(v12 + 8552) = *(_DWORD *)(v12 + 9408);
  *(_DWORD *)(v12 + 8900) = *(_DWORD *)(v12 + 9096);
  *(_DWORD *)(v12 + 9184) = *(_DWORD *)(v12 + 9584);
  *(_DWORD *)(v12 + 8572) = *(_DWORD *)(v12 + 8984);
  *(_DWORD *)(v12 + 8352) = *(_DWORD *)(v12 + 9040);
  *(_DWORD *)(v12 + 8932) = *(_DWORD *)(v12 + 8612);
  *(_DWORD *)(v12 + 8328) = a3;
  return v13();
}

uint64_t sub_10032BCF8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(void);

  v7 = *(_QWORD *)(v6 + 5992) + 4 * *(unsigned int *)(v6 + 9248);
  v8 = (((unint64_t)*(unsigned int *)(v7 - 0x62AA055D109F20F7) << 32)
      - 0x4D3636417EB0E10CLL
      - (((unint64_t)*(unsigned int *)(v7 - 0x62AA055D109F20F7) << 33) & 0x6593937C00000000)) ^ 0xB2C9C9BE814F1EF4 | *(unsigned int *)(v7 - 0x62AA055D109F20FBLL);
  v9 = (v8 - 0x4D3636417EB0E10CLL - ((v8 << (((a4 - 6) | 0x96) + 99)) & 0x6593937D029E3DE8)) ^ 0xB2C9C9BE814F1EF4;
  v10 = *(_QWORD *)(v6 + 4272);
  *(_QWORD *)(v6 + 4304) = ((2 * (v9 / v10)) & 0xFDABBDAF5DBFD0FCLL)
                         + ((v9 / v10) ^ 0xFED5DED7AEDFE87ELL)
                         + 0x7DEEFFFF7DB317FELL;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744) + 8 * ((v9 < v10) | (16 * (v9 < v10)) | a4)) - 12);
  *(_QWORD *)(v6 + 9280) = *(_QWORD *)(v6 + 9600);
  *(_QWORD *)(v6 + 9016) = *(_QWORD *)(v6 + 9608);
  *(_DWORD *)(v6 + 9320) = *(_DWORD *)(v6 + 9616);
  *(_DWORD *)(v6 + 9520) = *(_DWORD *)(v6 + 8196);
  *(_DWORD *)(v6 + 7752) = a2;
  *(_DWORD *)(v6 + 8232) = v5;
  *(_DWORD *)(v6 + 9736) = *(_DWORD *)(v6 + 6788);
  *(_DWORD *)(v6 + 8456) = *(_DWORD *)(v6 + 9664);
  *(_DWORD *)(v6 + 7964) = v4;
  *(_DWORD *)(v6 + 8132) = a1;
  *(_DWORD *)(v6 + 8188) = *(_DWORD *)(v6 + 9528);
  *(_DWORD *)(v6 + 8328) = a3;
  return v11();
}

void sub_10032BEDC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  _DWORD *v7;
  int v8;

  v7[1948] = 0;
  v7[1946] = 0;
  v7[1944] = 0;
  v7[2374] = 0;
  v7[2394] = 0;
  v7[2364] = 0;
  v7[2372] = 0;
  v7[2368] = 0;
  v8 = v7[2263];
  v7[2282] = v8;
  v7[2279] = v7[2362];
  v7[1994] = v7[2053];
  v7[1697] = v7[2434];
  v7[2312] = v6;
  v7[2259] = ((a4 + 2032792797) & 0x86D61DFF) + 32 * (v8 - v6) - 6235;
  v7[2048] = a6;
  v7[2382] = v7[2047];
  v7[2422] = 1;
  v7[2376] = 1;
  v7[2366] = 1;
  v7[2059] = v7[2310];
  JUMPOUT(0x10032BF90);
}

uint64_t sub_10032BFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((((v7 + 995) ^ 0x17F6) * (v9 & ~*(_DWORD *)(v8 + 9496))) ^ v7))
                            - ((163 * (v7 ^ 0x13B9u)) ^ 0x14ELL)))();
}

uint64_t sub_10032C034(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  int v15;

  v13 = (v8 - 302152423) & 0x973F735F;
  v14 = (uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (v8 ^ (57 * (*(_DWORD *)(v11 + 9416) & 1))))
                          + 2235372354
                          - v13
                          - ((v8 - 2584) | 0x200u)
                          + 3159);
  *(_DWORD *)(v11 + 8440) = 64;
  *(_QWORD *)(v11 + 9416) = v13;
  *(_QWORD *)(v11 + 8408) = *(_QWORD *)(v11 + 8432);
  *(_QWORD *)(v11 + 8400) = *(_QWORD *)(v11 + 8416);
  *(_QWORD *)(v11 + 8392) = *(_QWORD *)(v11 + 8536);
  *(_QWORD *)(v11 + 8384) = *(_QWORD *)(v11 + 8488);
  *(_QWORD *)(v11 + 8376) = *(_QWORD *)(v11 + 8472);
  *(_QWORD *)(v11 + 8944) = *(_QWORD *)(v11 + 9568);
  *(_QWORD *)(v11 + 8576) = *(_QWORD *)(v11 + 8888);
  *(_QWORD *)(v11 + 8952) = *(_QWORD *)(v11 + 9200);
  *(_QWORD *)(v11 + 8936) = *(_QWORD *)(v11 + 8880);
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  v15 = *(_DWORD *)(v11 + 8872);
  *(_DWORD *)(v11 + 9128) = v15;
  *(_DWORD *)(v11 + 9116) = a8;
  *(_DWORD *)(v11 + 9272) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 8832) = *(_DWORD *)(v11 + 9384);
  *(_DWORD *)(v11 + 8368) = a1;
  *(_DWORD *)(v11 + 7752) = *(_DWORD *)(v11 + 8272);
  *(_DWORD *)(v11 + 8232) = *(_DWORD *)(v11 + 9504);
  *(_DWORD *)(v11 + 7964) = v9;
  *(_DWORD *)(v11 + 8132) = *(_DWORD *)(v11 + 9464);
  *(_DWORD *)(v11 + 9520) = a1;
  *(_DWORD *)(v11 + 9152) = *(_DWORD *)(v11 + 8964);
  *(_DWORD *)(v11 + 8608) = *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 8504) = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 8520) = *(_DWORD *)(v11 + 8464);
  *(_DWORD *)(v11 + 8356) = *(_DWORD *)(v11 + 8532);
  *(_DWORD *)(v11 + 8360) = *(_DWORD *)(v11 + 8424);
  *(_DWORD *)(v11 + 9104) = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 8456) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 8912) = v15;
  *(_DWORD *)(v11 + 8512) = *(_DWORD *)(v11 + 8480);
  *(_DWORD *)(v11 + 9072) = a3;
  *(_DWORD *)(v11 + 8920) = *(_DWORD *)(v11 + 9160);
  *(_DWORD *)(v11 + 8496) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 9264) = a2;
  *(_DWORD *)(v11 + 8904) = *(_DWORD *)(v11 + 8616);
  *(_DWORD *)(v11 + 8552) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 8900) = *(_DWORD *)(v11 + 9096);
  *(_DWORD *)(v11 + 9184) = *(_DWORD *)(v11 + 9584);
  *(_DWORD *)(v11 + 8572) = *(_DWORD *)(v11 + 8984);
  *(_DWORD *)(v11 + 8352) = v10;
  *(_DWORD *)(v11 + 8932) = *(_DWORD *)(v11 + 8612);
  *(_DWORD *)(v11 + 8328) = v12;
  return v14();
}

void sub_10032C1E4(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v3 = *(_DWORD *)(v2 + 7380);
  v4 = *(_DWORD *)(v2 + 9172);
  v5 = *(_DWORD *)(v2 + 7560);
  v6 = *(_DWORD *)(v2 + 7360);
  v7 = *(_DWORD *)(v2 + 7364);
  v8 = *(_DWORD *)(v2 + 7384);
  v9 = *(_DWORD *)(v2 + 8548);
  v10 = *(_DWORD *)(v2 + 7536);
  v11 = *(_DWORD *)(v2 + 7368);
  v12 = *(_DWORD *)(v2 + 7544);
  *(_QWORD *)(v2 + 9280) = *(_QWORD *)(v2 + 9600);
  *(_QWORD *)(v2 + 9016) = *(_QWORD *)(v2 + 9608);
  *(_DWORD *)(v2 + 8080) = *(_DWORD *)(v2 + 8032);
  *(_DWORD *)(v2 + 9272) = *(_DWORD *)(v2 + 9656);
  *(_DWORD *)(v2 + 4508) = a2;
  *(_DWORD *)(v2 + 9320) = *(_DWORD *)(v2 + 9616);
  *(_DWORD *)(v2 + 8064) = *(_DWORD *)(v2 + 7992);
  *(_DWORD *)(v2 + 8196) = *(_DWORD *)(v2 + 9520);
  *(_DWORD *)(v2 + 8136) = *(_DWORD *)(v2 + 9480);
  *(_DWORD *)(v2 + 9104) = *(_DWORD *)(v2 + 9440);
  *(_DWORD *)(v2 + 8040) = *(_DWORD *)(v2 + 8020);
  *(_DWORD *)(v2 + 8116) = *(_DWORD *)(v2 + 8024);
  *(_DWORD *)(v2 + 9072) = *(_DWORD *)(v2 + 9632);
  *(_DWORD *)(v2 + 7544) = v12;
  *(_DWORD *)(v2 + 7368) = v11;
  *(_DWORD *)(v2 + 7536) = v10;
  *(_DWORD *)(v2 + 7384) = v8;
  *(_DWORD *)(v2 + 7364) = v7;
  *(_DWORD *)(v2 + 7360) = v6;
  *(_DWORD *)(v2 + 7560) = v5;
  *(_DWORD *)(v2 + 9172) = v4;
  *(_DWORD *)(v2 + 7380) = v3;
  *(_DWORD *)(v2 + 8272) = *(_DWORD *)(v2 + 7984);
  *(_DWORD *)(v2 + 8056) = *(_DWORD *)(v2 + 8008);
  *(_DWORD *)(v2 + 6760) = *(_DWORD *)(v2 + 8280);
  *(_DWORD *)(v2 + 8328) = *(_DWORD *)(v2 + 9592);
  *(_DWORD *)(v2 + 6744) = v9;
  *(_DWORD *)(v2 + 8548) = v9;
  JUMPOUT(0x10032C304);
}

uint64_t sub_10032C58C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((a3 - 1008) | 0x1510) ^ (122 * ((v7 & 0x1F) != 0)))) - 12))();
}

uint64_t sub_10032C644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)(v11 + 4 * a8 - 0x62AA055D109F20F3) = (unint64_t)*(unsigned int *)(v12
                                                                                       - 0x62AA055D109F20F7
                                                                                       + 4 * v8) >> (32 - v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((242 * ((_DWORD)v8 == 1)) ^ v9)) - (v9 + 2009) + 3139))();
}

void sub_10032C6D8()
{
  JUMPOUT(0x10032C688);
}

uint64_t sub_10032C6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (v8 ^ ((v7 > 0x2B) << 7))) - 4))();
}

uint64_t sub_10032C73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  int v16;

  v12 = v9 - 35;
  v13 = (v8 - 1);
  v15 = v10 + 4 * v8 - 0x62AA055D109F20F7 - 4 * (unint64_t)v13 > v10
                                                                                      + 4 * v8
                                                                                      - 0x62AA055D109F20F7;
  v14 = v7 + v11 + (((v12 - 1698794855) & 0x65416FBFu) + 3461 - 5060) * v13;
  v15 = v15 || v14 > v7 + v11;
  v16 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((2023 * v16) ^ v12)) - 4))();
}

uint64_t sub_10032C7C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (a2 ^ (119
                                               * ((unint64_t)(v10 - v9 + 4 * (v7 - v8) - 4) < 0x20))))
                            - a1
                            - (((a2 + 966) | 0x106u) ^ 0xFFFFFFFFFFFFE74BLL)))();
}

uint64_t sub_10032C818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;

  v12 = (_OWORD *)(v10 + 4 * v9 - 0x62AA055D109F20FFLL);
  v13 = *(_OWORD *)(v11 + 4 * v7 - 0x62AA055D109F2103);
  *(v12 - 1) = *(_OWORD *)(v11 + 4 * v7 - 0x62AA055D109F2113);
  *v12 = v13;
  return ((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t))(*(_QWORD *)(a7
                                                                                + 8
                                                                                * ((59 * ((v7 & 0xFFFFFFF8) == 8)) ^ v8))
                                                                    - 12))((v7 & 0xFFFFFFF8) - 16, (char *)v12 + 8 * (v8 - 1211) - 12928, a3, v11 + 4 * v7 - 0x62AA055D109F2123);
}

uint64_t sub_10032C898(uint64_t a1, _OWORD *a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;
  __int128 v10;

  v10 = *a4;
  *(a2 - 1) = *(a4 - 1);
  *a2 = v10;
  return ((uint64_t (*)(uint64_t, char *, uint64_t, __int128 *))(*(_QWORD *)(a7 + 8 * (((a1 == 0) * v9) ^ v7))
                                                                       - 12))(a1 - 8, (char *)a2 + v8, a3, a4 - 2);
}

uint64_t sub_10032C8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((((v9 - 1484) | 0x1340) ^ (v9 - 216156813) & 0xCE245E2 ^ 0x7E6) * (v8 == v7)) ^ v9))
                            - 12))();
}

uint64_t sub_10032C92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;

  *(_DWORD *)(v7 + v13) = *(_DWORD *)(v9 + v13);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (v11 ^ (8 * (((v11 + a6) ^ v12) + v10 == v8)))) - 12))();
}

uint64_t sub_10032C960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((5562
                                          * (((v8 - 35) ^ (v7 < (((v8 + 894) | 0x8C) ^ 0x58Cu))) & 1)) ^ v8))
                            - 4))();
}

uint64_t sub_10032C9AC@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (v2 & 0x2416F7B7 ^ (8
                                                            * (a2 - 1 >= 193 * (v2 & 0x2416F7B7 ^ 0x272Fu)
                                                                                     - 4625))))
                            - (((v2 & 0x2416F7B7u) - 1399) ^ 0x21C8)))();
}

uint64_t sub_10032CA00(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(__n128 *)(v8 - 0x62AA055D109F20FFLL) = a1;
  *(__n128 *)(v8 - 0x62AA055D109F210FLL) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * ((1556
                                          * (((v9 - 12693002) & 0xC18DEB ^ 0x1AALL) == ((v10 + 1) & 0x1FFFFFFF8))) | v9))
                            - 4))();
}

uint64_t sub_10032CA84(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unsigned int v8;
  int v9;

  *(_DWORD *)(v7 - 0x62AA055D109F20F3) = v9;
  return (*(uint64_t (**)(uint64_t))(a7 + 8
                                                 * ((11201 * (v8 >= ((a2 - 759393936) & 0x2D4367ECu) - 1420)) ^ a2)))(3667);
}

uint64_t sub_10032CAE4@<X0>(int a1@<W1>, uint64_t a2@<X6>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((a1 + 6579) ^ (7 * ((a3 - 1) < 7)))) - 12))();
}

uint64_t sub_10032CB28(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  __n128 *v11;

  v11 = (__n128 *)(v8 - 0x62AA055D109F2113);
  v11[1] = a1;
  *v11 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * ((v10 - 1247113789) & 0x4A55677F | (2
                                                                            * ((((v10 - 1247113789) & 0x4A55677F ^ 0x1FFFFFACCLL) & (v9 + (v10 - 2747) - 1333)) != 8))))
                            - 12))();
}

void sub_10032CBC0()
{
  JUMPOUT(0x10032CB8CLL);
}

uint64_t sub_10032CBC8(int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(void);

  v12 = *(uint64_t (**)(void))(a7
                            + 8
                            * (int)(((((v7 + 2621120) | 0x85151011) ^ 0x853D36CA) * (v11 & ~*(_DWORD *)(v10 + 9400))) ^ v7));
  *(_QWORD *)(v10 + 9680) = *(_QWORD *)(v10 + 4392);
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 9520) = v9;
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 7752) = a6;
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 8760) = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 8752) = *(_DWORD *)(v10 + 9480);
  *(_DWORD *)(v10 + 8232) = a4;
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 7964) = v8;
  *(_DWORD *)(v10 + 9136) = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9080) = a2;
  *(_DWORD *)(v10 + 8132) = *(_DWORD *)(v10 + 9464);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 9264) = a1;
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 9008) = *(_DWORD *)(v10 + 9156);
  *(_DWORD *)(v10 + 9400) = *(_DWORD *)(v10 + 9224);
  *(_DWORD *)(v10 + 8704) = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 9392) = *(_DWORD *)(v10 + 8544);
  *(_DWORD *)(v10 + 9012) = *(_DWORD *)(v10 + 9240);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  return v12();
}

void sub_10032CD24(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  *(_DWORD *)(v9 + 8764) = *(_DWORD *)(v9 + 8828);
  *(_DWORD *)(v9 + 8768) = *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 9272) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 8748) = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 9520) = *(_DWORD *)(v9 + 8196);
  *(_DWORD *)(v9 + 8736) = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8728) = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 8744) = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 7752) = a6;
  *(_DWORD *)(v9 + 8720) = *(_DWORD *)(v9 + 8968);
  *(_DWORD *)(v9 + 8760) = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8752) = *(_DWORD *)(v9 + 9480);
  *(_DWORD *)(v9 + 8232) = a4;
  *(_DWORD *)(v9 + 8712) = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8696) = *(_DWORD *)(v9 + 8840);
  *(_DWORD *)(v9 + 8688) = *(_DWORD *)(v9 + 8864);
  *(_DWORD *)(v9 + 8680) = *(_DWORD *)(v9 + 8808);
  *(_DWORD *)(v9 + 7964) = v8;
  *(_DWORD *)(v9 + 9136) = *(_DWORD *)(v9 + 9056);
  *(_DWORD *)(v9 + 8672) = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 9080) = *(_DWORD *)(v9 + 9632);
  *(_DWORD *)(v9 + 8664) = *(_DWORD *)(v9 + 8992);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 9264) = *(_DWORD *)(v9 + 9624);
  *(_DWORD *)(v9 + 8656) = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8648) = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 8640) = *(_DWORD *)(v9 + 8784);
  *(_DWORD *)(v9 + 9008) = *(_DWORD *)(v9 + 9156);
  *(_DWORD *)(v9 + 9400) = *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 8704) = *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 9392) = *(_DWORD *)(v9 + 8544);
  *(_DWORD *)(v9 + 9012) = *(_DWORD *)(v9 + 9240);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 8800);
  *(_QWORD *)(v9 + 9680) = *(_QWORD *)(v9 + 8536);
  v10 = *(_QWORD *)(v9 + 6304);
  v11 = *(_DWORD *)(v9 + 8532);
  *(_DWORD *)(v9 + 8132) = a8;
  v12 = *(_QWORD *)(v9 + 9680);
  *(_QWORD *)(v9 + 8160) = v12;
  *(_QWORD *)(v9 + 9600) = v12;
  *(_QWORD *)(v9 + 8168) = v10;
  *(_QWORD *)(v9 + 9608) = v10;
  *(_DWORD *)(v9 + 8828) = *(_DWORD *)(v9 + 8764);
  *(_DWORD *)(v9 + 8860) = *(_DWORD *)(v9 + 8768);
  *(_DWORD *)(v9 + 9656) = *(_DWORD *)(v9 + 9272);
  *(_DWORD *)(v9 + 8980) = *(_DWORD *)(v9 + 8748);
  *(_DWORD *)(v9 + 8792) = *(_DWORD *)(v9 + 8736);
  *(_DWORD *)(v9 + 8816) = *(_DWORD *)(v9 + 8728);
  *(_DWORD *)(v9 + 8628) = *(_DWORD *)(v9 + 8744);
  *(_DWORD *)(v9 + 8968) = *(_DWORD *)(v9 + 8720);
  *(_DWORD *)(v9 + 9256) = *(_DWORD *)(v9 + 8760);
  *(_DWORD *)(v9 + 9480) = *(_DWORD *)(v9 + 8752);
  *(_DWORD *)(v9 + 8868) = *(_DWORD *)(v9 + 8712);
  *(_DWORD *)(v9 + 8840) = *(_DWORD *)(v9 + 8696);
  *(_DWORD *)(v9 + 8152) = v11;
  *(_DWORD *)(v9 + 9664) = v11;
  *(_DWORD *)(v9 + 8864) = *(_DWORD *)(v9 + 8688);
  *(_DWORD *)(v9 + 8808) = *(_DWORD *)(v9 + 8680);
  *(_DWORD *)(v9 + 9056) = *(_DWORD *)(v9 + 9136);
  *(_DWORD *)(v9 + 8848) = *(_DWORD *)(v9 + 8672);
  *(_DWORD *)(v9 + 9632) = *(_DWORD *)(v9 + 9080);
  *(_DWORD *)(v9 + 8992) = *(_DWORD *)(v9 + 8664);
  *(_DWORD *)(v9 + 9172) = *(_DWORD *)(v9 + 9432);
  *(_DWORD *)(v9 + 9616) = a8;
  *(_DWORD *)(v9 + 8548) = a8;
  *(_DWORD *)(v9 + 9624) = *(_DWORD *)(v9 + 9264);
  *(_DWORD *)(v9 + 8776) = *(_DWORD *)(v9 + 8656);
  *(_DWORD *)(v9 + 9004) = *(_DWORD *)(v9 + 8648);
  *(_DWORD *)(v9 + 8784) = *(_DWORD *)(v9 + 8640);
  *(_DWORD *)(v9 + 9156) = *(_DWORD *)(v9 + 9008);
  *(_DWORD *)(v9 + 9224) = *(_DWORD *)(v9 + 9400);
  *(_DWORD *)(v9 + 9064) = *(_DWORD *)(v9 + 8704);
  *(_DWORD *)(v9 + 8280) = 20;
  *(_DWORD *)(v9 + 8544) = *(_DWORD *)(v9 + 9392);
  *(_DWORD *)(v9 + 9240) = *(_DWORD *)(v9 + 9012);
  *(_DWORD *)(v9 + 8800) = *(_DWORD *)(v9 + 8632);
  *(_DWORD *)(v9 + 9592) = 36;
  JUMPOUT(0x1002BCD18);
}

void sub_10032CE44(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  _DWORD *v10;
  int v11;
  int v12;

  v11 = v10[1883];
  if ((v9 & 1) == 0)
    v11 = a8;
  v10[1883] = v11;
  if ((v9 & 1) != 0)
    v12 = a8;
  else
    v12 = v8;
  v10[1991] = v12;
  v10[2191] = v10[2207];
  v10[2192] = v10[2215];
  v10[2318] = v10[2414];
  v10[2187] = v10[2245];
  v10[2380] = a1;
  v10[2184] = v10[2198];
  v10[2182] = v10[2204];
  v10[2186] = v10[2157];
  v10[1938] = v10[2068];
  v10[2180] = v10[2242];
  v10[2190] = v10[2314];
  v10[2188] = v10[2370];
  v10[2058] = v10[2376];
  v10[2178] = v10[2217];
  v10[2174] = v10[2210];
  v10[2172] = v10[2216];
  v10[2170] = v10[2202];
  v10[2284] = v10[2264];
  v10[2168] = v10[2212];
  v10[2270] = a3;
  v10[2033] = v10[2366];
  v10[2166] = v10[2248];
  v10[2358] = v10[2293];
  v10[2316] = a2;
  v10[2164] = v10[2194];
  v10[2162] = v10[2251];
  v10[2160] = v10[2196];
  v10[2252] = v10[2289];
  v10[2350] = v10[2306];
  v10[2176] = v10[2266];
  v10[2348] = v10[2136];
  v10[2253] = v10[2310];
  v10[2158] = v10[2200];
  JUMPOUT(0x10032CF74);
}

uint64_t sub_10032CF84(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v11 = *(uint64_t (**)(void))(a7
                            + 8
                            * (int)((((*(_DWORD *)(v10 + 9012) ^ ((_BYTE)v8 + 89) & 0x77) & 1)
                                   * ((v8 - 1514293839) & 0xDF7F591F ^ (v9 + 36))) ^ v8));
  *(_QWORD *)(v10 + 9680) = *(_QWORD *)(v10 + 6352);
  *(_DWORD *)(v10 + 8764) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 8768) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 9272) = *(_DWORD *)(v10 + 9656);
  *(_DWORD *)(v10 + 8748) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 9520) = a1;
  *(_DWORD *)(v10 + 8736) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 7752) = *(_DWORD *)(v10 + 8272);
  *(_DWORD *)(v10 + 8720) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 8760) = *(_DWORD *)(v10 + 9256);
  *(_DWORD *)(v10 + 8752) = *(_DWORD *)(v10 + 9480);
  *(_DWORD *)(v10 + 8232) = *(_DWORD *)(v10 + 9504);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8696) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8808);
  *(_DWORD *)(v10 + 7964) = a8;
  *(_DWORD *)(v10 + 9136) = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 9080) = a3;
  *(_DWORD *)(v10 + 8132) = *(_DWORD *)(v10 + 9464);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8992);
  *(_DWORD *)(v10 + 9432) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 9264) = a2;
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 8648) = *(_DWORD *)(v10 + 9004);
  *(_DWORD *)(v10 + 8640) = *(_DWORD *)(v10 + 8784);
  *(_DWORD *)(v10 + 9008) = *(_DWORD *)(v10 + 9156);
  *(_DWORD *)(v10 + 9400) = *(_DWORD *)(v10 + 9224);
  *(_DWORD *)(v10 + 8704) = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 9392) = *(_DWORD *)(v10 + 8544);
  *(_DWORD *)(v10 + 9012) = *(_DWORD *)(v10 + 9240);
  *(_DWORD *)(v10 + 8632) = *(_DWORD *)(v10 + 8800);
  return v11();
}

uint64_t sub_10032D288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7
                                                                                          + 8
                                                                                          * (v9 ^ ((4 * (v8 != v7)) | (8 * (v8 != v7)))))
                                                                              - ((12
                                                                                * ((v9 - 649717252) & 0x2B9F679 ^ 0x1261u)) ^ 0x5A8)))(a1, a2, a3, v10, a3);
}

uint64_t sub_10032D2E8(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7
                                                                                          + 8
                                                                                          * (int)((2898
                                                                                                 * (((v8 == v7) ^ (a1 + 79)) & 1)) ^ a1))
                                                                              - (a1 ^ 0x1A6)))(3667, a2, a3, v9, a3);
}

uint64_t sub_10032D33C@<X0>(int a1@<W0>, uint64_t a2@<X6>, int a3@<W8>)
{
  return sub_10031D840(a1, a2, a3);
}

void sub_10032D350(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)(v11 + 9496) = 0;
  v12 = *(_QWORD *)(v11 + 4304);
  if ((const mach_header_64 *)((((a4 + 87620200) | 0x80041011) - 0x1853D1017) & (v8 + 0x12A212851201782)) == &_mh_execute_header)
    v12 = 0x7CC4DED82C93007BLL;
  *(_QWORD *)(v11 + 4304) = v12;
  *(_DWORD *)(*(_QWORD *)(v11 + 8448) + 3664) = v12 - 747831420;
  *(_QWORD *)(v11 + 9280) = *(_QWORD *)(v11 + 9600);
  *(_QWORD *)(v11 + 9016) = *(_QWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 9736) = *(_DWORD *)(v11 + 9052);
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 9520) = *(_DWORD *)(v11 + 8196);
  *(_DWORD *)(v11 + 7752) = a2;
  *(_DWORD *)(v11 + 8232) = v10;
  *(_DWORD *)(v11 + 8456) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 7964) = v9;
  *(_DWORD *)(v11 + 8132) = a1;
  *(_DWORD *)(v11 + 0x2000) = a8;
  *(_DWORD *)(v11 + 8188) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 8328) = a3;
  JUMPOUT(0x1002BDA78);
}

uint64_t sub_10032D460(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;

  *(_BYTE *)(v6 + (((v8 - 323) | 0x108u) ^ 0x1D2)) = v9 >> v5;
  return (*(uint64_t (**)(void))(a5 + 8 * (v8 | (32 * (v7 != ((v8 - 323) ^ a4) - 2807)))))();
}

uint64_t sub_10032D498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;

  return (*(uint64_t (**)(void))(a5 + 8 * (((v6 == 24) * ((v7 - 2319) ^ a6)) ^ v7)))();
}

uint64_t sub_10032D4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v7;
  int v8;

  return (*(uint64_t (**)(void))(a5 + 8 * (((v8 - 2800) * (v7 < a7)) ^ v8)))();
}

uint64_t sub_10032D4EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  return sub_10032D460(a1, a2, a3, a4, a5);
}

uint64_t sub_10032D518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v18 = 643 * (v8 ^ 0x1889u);
  v19 = (a1 | (*(_QWORD *)(v9 + 9504) << 56)) ^ 0xF4C05D98E9F4EA23;
  v20 = v19 - 0x4D3636417EB0E10CLL - ((v18 ^ 0x6593937D029E2649) & (2 * v19));
  LODWORD(v18) = v18 - 1406;
  *(_DWORD *)(v9 + 8308) += v18 ^ 0x161B;
  *(_QWORD *)(v9 + 9504) = v20;
  LODWORD(v18) = (v18 + 753492092) & 0xD3169F7E;
  *(_BYTE *)(v17 + 4044) = v18 ^ v11 ^ 0xEA;
  *(_QWORD *)(v9 + 7728) = a8;
  *(_QWORD *)(v9 + 7720) = v10;
  *(_QWORD *)(v9 + 8240) = v12;
  *(_QWORD *)(v9 + 9280) = v14;
  *(_BYTE *)(v15 + (unsigned __int16)(4247 - ((unsigned __int16)((2123 * a6) >> 16) >> 5) * v16)) = *v10;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v13 + 8 * (int)(v18 ^ 0x3D)) - 12))(7223, 4247);
}

void sub_10032D5C0()
{
  JUMPOUT(0x1002BC1F0);
}

uint64_t sub_10032D614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _BYTE *v8;
  char v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  unsigned int v14;

  *v8 = v12 >> v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8
                                        * ((30 * (v10 != ((a8 + v11 + v13) & v14 ^ (unint64_t)(a7 + 36)))) ^ v11))
                            - 12))();
}

uint64_t sub_10032D650(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a5
                              + 8
                              * ((1180 * (v5 + 8 == ((((a2 + 666) ^ v6) * v9 + v7) & v8) - 3214)) ^ (a2 + 2059599368))))();
}

uint64_t sub_10032D69C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  uint64_t v6;
  int v7;

  return (*(uint64_t (**)(void))(a5 + 8 * ((((a1 + 297) ^ v7) * (v5 < *(_DWORD *)(v6 + 8272))) ^ a1)))();
}

uint64_t sub_10032D6C8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return sub_10032D614((a1 - 580524934) & 0x229A1CAE ^ 0xCAFu, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10032D70C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(a5 + 8 * ((a1 - a8 - 1700591437) & 0x655CFD9C ^ 0x2ACE ^ (a1 + 2059601348))))();
}

uint64_t sub_10032D780(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  char v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  v12 = v9 ^ 0x853D11CF;
  *(_QWORD *)(v11 + 9416) = v12;
  *(_BYTE *)(v6 - v10 + 31) = v8 >> v7;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(a5
                                      + 8 * ((1782 * (v10 + 1 != ((v12 - a6 + 1343) ^ 0x14A7))) ^ v9))
                          - 12);
  *(_DWORD *)(v11 + 9464) = 994009483;
  *(_QWORD *)(v11 + 9456) = *(_QWORD *)(v11 + 7048);
  *(_QWORD *)(v11 + 9608) = *(_QWORD *)(v11 + 1840);
  *(_DWORD *)(v11 + 7944) = a1;
  *(_DWORD *)(v11 + 5344) = *(_DWORD *)(v11 + 6072);
  *(_DWORD *)(v11 + 5340) = *(_DWORD *)(v11 + 7616);
  *(_DWORD *)(v11 + 5348) = *(_DWORD *)(v11 + 6084);
  *(_DWORD *)(v11 + 5336) = *(_DWORD *)(v11 + 6080);
  *(_DWORD *)(v11 + 9664) = *(_DWORD *)(v11 + 6976);
  *(_DWORD *)(v11 + 9616) = *(_DWORD *)(v11 + 7096);
  *(_DWORD *)(v11 + 9600) = *(_DWORD *)(v11 + 7020);
  *(_DWORD *)(v11 + 9488) = *(_DWORD *)(v11 + 7064);
  *(_DWORD *)(v11 + 9472) = *(_DWORD *)(v11 + 7136);
  *(_DWORD *)(v11 + 4292) = *(_DWORD *)(v11 + 8280);
  *(_DWORD *)(v11 + 5312) = *(_DWORD *)(v11 + 9680);
  return v13();
}

uint64_t sub_10032D870()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                     + 8 * (((v0 == 24) * (((v1 - 5055) | 0x110) ^ 0x311E)) ^ v1))
                                         - 4))(*(unsigned int *)(v2 + 8548));
}

uint64_t sub_10032D8B4@<X0>(unsigned int a1@<W0>, uint64_t a2@<X4>, unsigned int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (v3 ^ (13007 * (a3 < a1)))) - ((v3 - 4783) ^ 0x1DCLL)))();
}

uint64_t sub_10032D8F0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_10032D780(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10032D92C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  unint64_t v12;
  int v13;

  *(_BYTE *)(v9 + ((a8 + v11 - 44) ^ (unint64_t)(a7 - 11)) + v8) = v12 >> (v10 & ((v11 - a6 - 106) ^ (a4 - 47)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v11 ^ ((v8 == -31) * v13))) - 12))();
}

uint64_t sub_10032D978(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;

  return (*(uint64_t (**)(void))(a5 + 8 * ((245 * (v6 + 8 == ((a6 + a1 - 749) ^ 0x1F69) - 3924)) ^ (a6 + a1 - 749))))();
}

uint64_t sub_10032D9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(a5 + 8 * ((((v6 + v8) & v9 ^ v10) * (*(_DWORD *)(v7 + 3988) > v5)) ^ v6)))();
}

uint64_t sub_10032D9E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, int a8)
{
  return sub_10032D92C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10032DA0C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v5;

  return (*(uint64_t (**)(void))(a5
                              + 8
                              * ((1180 * (((983 * (v5 ^ (a4 - 3)) + 135738169) & 0xF7E8CDEF) == 3246)) ^ (v5 + 2059598702))))();
}

uint64_t sub_10032DAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;

  v7[2406] = 0;
  v7[2422] = 0;
  v7[2416] = 0;
  *(_BYTE *)(v8 + 3983) = v7[1964];
  v9 = v7[2287];
  v7[2408] = (v6 ^ v5 ^ 0x225397AF) + 8 * v9;
  return sub_1002FC238(0, 3033867045, 0, 0, a5, 0, v9, 0);
}

uint64_t sub_10032DB4C@<X0>(__int16 a1@<W0>, unint64_t a2@<X3>, int a3@<W5>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  _BOOL4 v11;

  *(_BYTE *)(v8
           + (unsigned __int16)(31 * a4
                              + a1
                              - ((unsigned __int16)((((unsigned __int16)(31 * a4 + a1) >> 1) * a3) >> 16) >> 5)
                              * v9)) = *(_BYTE *)(v5 + a4);
  v11 = (v4 ^ (v10 - 950) ^ a2) + a4 == 32;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v11 | (4 * v11)) ^ (v6 + v4 + 966))))();
}

uint64_t sub_10032DBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return (*(uint64_t (**)(void))(a5 + 8 * ((245 * (((v5 + 1339) ^ 0x1F69) == 3956)) ^ (v5 + 1339))))();
}

void sub_10032DC3C()
{
  JUMPOUT(0x10032DC78);
}

void sub_10032DD14()
{
  unint64_t v0;
  char v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_DWORD *)(v3 + 8300) = v5;
  *(_DWORD *)(v3 + 8304) = v4;
  *(_DWORD *)(v3 + 8308) = v2 - 8;
  *(_QWORD *)(v3 + 9504) = (v0 >> ((v1 - 46) & 0xAF ^ 0x2Bu)) ^ 0xB27B00773FCE51EALL;
  JUMPOUT(0x10032DD94);
}

uint64_t sub_10032DE28@<X0>(__int16 a1@<W2>, int a2@<W5>, uint64_t a3@<X7>, int a4@<W8>)
{
  unsigned int v4;
  __int16 v5;
  int v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;

  *(_BYTE *)(v9
           + (unsigned __int16)(v5
                              + (a1 + a4 + v7) * v4
                              - ((unsigned __int16)((((unsigned __int16)(v5 + (a1 + a4 + v7) * v4) >> 1)
                                                   * a2) >> 16) >> 5)
                              * v10)) = *(_BYTE *)(a3 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v4 > 0x1E) * v6) ^ a4)) - 12))();
}

uint64_t sub_10032DE70(__int16 a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6)
{
  return sub_10032DB4C(a1, a4, a6, 0);
}

void sub_10032DE90()
{
  JUMPOUT(0x10032DEC4);
}

void sub_10032DF2C()
{
  JUMPOUT(0x10032E3D0);
}

uint64_t sub_10032DF64()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((418 * (v1 ^ 0x1799)) ^ (418 * (v1 ^ 0x1799) + 9)) * (v3 == v0)) ^ (418 * (v1 ^ 0x1799))))
                            - 4))();
}

void sub_10032DF9C()
{
  JUMPOUT(0x1002FA2ACLL);
}

uint64_t sub_10032E034()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (205 * (v3 != v0))))
                            - (v1 - 2314)
                            + 4151))();
}

uint64_t sub_10032E064@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  char v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v9 = (v6 - 2059596947);
  *(_BYTE *)(a4 - v7 + 31) = v5 >> v4;
  v10 = (uint64_t (*)(void))(a1 - v9 + *(_QWORD *)(a3 + 8 * ((4625 * (v7 + 1 != v9 - 2235371511)) | v6)));
  *(_DWORD *)(v8 + 9464) = 994009773;
  *(_QWORD *)(v8 + 9416) = v9;
  *(_QWORD *)(v8 + 9456) = *(_QWORD *)(v8 + 7048);
  *(_QWORD *)(v8 + 9608) = *(_QWORD *)(v8 + 1824);
  *(_DWORD *)(v8 + 7944) = a2;
  *(_DWORD *)(v8 + 5344) = *(_DWORD *)(v8 + 6072);
  *(_DWORD *)(v8 + 5340) = *(_DWORD *)(v8 + 7616);
  *(_DWORD *)(v8 + 5348) = *(_DWORD *)(v8 + 6084);
  *(_DWORD *)(v8 + 5336) = *(_DWORD *)(v8 + 6080);
  *(_DWORD *)(v8 + 9664) = *(_DWORD *)(v8 + 6976);
  *(_DWORD *)(v8 + 9616) = *(_DWORD *)(v8 + 7096);
  *(_DWORD *)(v8 + 9600) = *(_DWORD *)(v8 + 7020);
  *(_DWORD *)(v8 + 9488) = *(_DWORD *)(v8 + 7064);
  *(_DWORD *)(v8 + 9472) = *(_DWORD *)(v8 + 7136);
  *(_DWORD *)(v8 + 4292) = *(_DWORD *)(v8 + 8280);
  *(_DWORD *)(v8 + 5312) = *(_DWORD *)(v8 + 9680);
  return v10();
}

uint64_t sub_10032E158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                                              + 8 * ((6438 * (v6 == 24)) ^ (v7 + 2059596348)))
                                                  - ((v7 ^ (a6 + 557))
                                                   + 599)
                                                  + 1182))(a1, *(unsigned int *)(v8 + 8548));
}

uint64_t sub_10032E1A8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v6 ^ (206 * (a2 > v5)))) - ((v6 + 599) ^ 0x4A6)))();
}

uint64_t sub_10032E1E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return sub_10032E064(a1, a2, a3, a4);
}

void sub_10032E214()
{
  JUMPOUT(0x10032E28CLL);
}

uint64_t sub_10032E2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                + 8
                                                                                * ((86
                                                                                  * ((v3 ^ ((((v3 + 38) & 0x67) - 26) == v5)) & 1)) ^ v3))
                                                                    - 12))(a1, a2, a3, *(_QWORD *)(v6 + 8448));
}

uint64_t sub_10032E31C()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x18E8 ^ (238 * (v2 != 1765825427)))) - 12))();
}

uint64_t sub_10032E350()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (111 * (v2 == 1765825427)))) - 8))();
}

void sub_10032E380()
{
  JUMPOUT(0x10032E3A8);
}

void sub_10032E430()
{
  JUMPOUT(0x10032E468);
}

void sub_10032E4BC()
{
  JUMPOUT(0x10031D704);
}

uint64_t sub_10032E4F0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 - 6146) | 7) ^ (v0 - 6137)) * (v1 == 10)) ^ v0)) - 12))();
}

uint64_t sub_10032E534()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 == ((v0 - 5307) ^ 0x694051E4)) * (((v0 - 1701134533) & 0x65652FBE) - 3617)) ^ (v0 - 5307))))();
}

uint64_t sub_10032E58C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((121 * (v2 == ((a1 + 23) ^ 0x36B) + 1765824366)) ^ a1)))();
}

void sub_10032E5C8()
{
  JUMPOUT(0x10031D6ECLL);
}

uint64_t sub_10032E620(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 68) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (v3 + v2 + 3151)) - 12))(11842, a2, 10);
}

void sub_10032E698()
{
  JUMPOUT(0x10032E630);
}

uint64_t sub_10032E6A0(int a1, uint64_t a2, __int16 a3, uint64_t a4, _BYTE *a5, uint64_t a6, int a7, _BYTE *a8)
{
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  int v14;
  uint64_t v15;
  char v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  char v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  unsigned int v57;
  int v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  char v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  unsigned int v75;
  char v76;
  unsigned __int16 v77;
  int v78;
  uint64_t v79;
  int v80;
  char v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  uint64_t v91;
  unsigned int v92;
  int v93;
  int v94;
  unint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  int v101;
  unsigned __int8 **v102;
  unsigned __int8 **v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 *v109;
  unsigned __int8 *v110;
  unsigned __int8 *v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  char v130;
  unint64_t v131;
  char v132;
  unint64_t v133;
  int v134;
  uint64_t v135;
  char v136;
  unint64_t v137;
  char v138;
  _BYTE *v139;
  _BYTE *v140;
  unint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  int v231;
  unint64_t v232;
  unint64_t v233;
  unint64_t v234;
  int v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  unint64_t v250;
  unint64_t v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  unint64_t v256;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  unint64_t v271;
  unint64_t v272;
  unint64_t v273;
  unint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  __int128 v278;
  unint64_t v279;
  unint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  BOOL v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  int v289;
  unsigned __int8 v290;
  char v291;
  unint64_t v292;
  uint64_t v293;
  unsigned int v294;
  uint64_t v295;
  unint64_t v296;
  unsigned int v297;
  char v298;
  unint64_t v299;
  char v300;
  char v301;
  _BOOL4 v302;

  v15 = (v14 + v10 - 2386);
  *(_QWORD *)(v11 + 9736) = v15;
  v16 = a5[3956];
  v17 = *(_DWORD *)(v11 + 4120);
  v18 = *(_DWORD *)(v11 + 4124);
  v19 = (unsigned __int16)(31 * (v18 & 0xF ^ 0xE)
                         + a1
                         - ((unsigned __int16)((10331 * (31 * (v18 & 0xF ^ 0xEu) + a1)) >> 16) >> 6) * v13);
  a5[3956] = *(_BYTE *)(v12 + v19);
  *(_BYTE *)(v12 + v19) = v16;
  v20 = *(_DWORD *)(v11 + 4128);
  v21 = (unsigned __int16)(31 * ((v17 - 1407960276) % 0xFu)
                         + 11873
                         - ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * ((v17 - 1407960276) % 0xFu) + 11873)) >> 16) >> 6)
                         * v13);
  v22 = a5[3987];
  v23 = *(_QWORD *)(v11 + 9648);
  a5[3987] = 109
           * (((((*(_BYTE *)(v12 + v21) >> 5) | (8 * *(_BYTE *)(v12 + v21))) ^ 0x52)
             + *(_BYTE *)(v23 + (((*(_BYTE *)(v12 + v21) >> 5) | (8 * *(_BYTE *)(v12 + v21))) ^ 0x5ELL))
             + 1) ^ 0x5C);
  *(_BYTE *)(v12 + v21) = v22;
  LOBYTE(v21) = a5[4018];
  v24 = (unsigned __int16)(31 * ((v20 ^ 0xC2B88B26 ^ v15) % 0xE)
                         + 11904
                         - ((unsigned __int16)((10331
                                              * (unsigned __int16)(31
                                                                               * ((v20 ^ 0xC2B88B26 ^ v15)
                                                                                % 0xE)
                                                                               + 11904)) >> 16) >> 6)
                         * v13);
  v25 = *(_DWORD *)(v11 + 4116);
  a5[4018] = *(_BYTE *)(v12 + v24);
  *(_BYTE *)(v12 + v24) = v21;
  LOBYTE(v21) = a5[4049];
  v26 = *(_QWORD *)(v11 + 9560);
  v27 = (v18 ^ 0x790185C1) + v25;
  LODWORD(v24) = 31 * ((*(_BYTE *)(v26 + (((v25 - 35398845) % 0xDu) ^ 0x26)) ^ 0x60) + 3) + 11935;
  v28 = (unsigned __int16)(v24 - ((unsigned __int16)((10331 * v24) >> 16) >> 6) * v13);
  LODWORD(v24) = (v18 ^ 0x86FE7A3E) - v27 - v17 + 1443359120;
  a5[4049] = *(_BYTE *)(v12 + v28);
  *(_BYTE *)(v12 + v28) = v21;
  LOBYTE(v28) = a5[4080];
  v29 = ((v17 - 1407960276) ^ (v27 - 35398844)) + 1721500237;
  v30 = (unsigned __int16)(31 * (v24 % 0xC)
                         + 11966
                         - ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * (v24 % 0xC) + 11966)) >> 16) >> 6)
                         * v13);
  a5[4080] = *(_BYTE *)(v12 + v30);
  LODWORD(v19) = (v20 ^ 0x98F89E07) - v24;
  *(_BYTE *)(v12 + v30) = v28;
  v31 = v27 - 501665381;
  LOBYTE(v20) = a8[15];
  LODWORD(v28) = 31
               * ((((((((v29 % 0xB) & 1) << 7) | ((v29 % 0xB) >> 1)) ^ 0x7E)
                                   + (((v24 % 0xC + 4) ^ (27 - v24 % 0xC)) & 0x19 ^ 0x81 ^ ((((v29 % 0xB) & 1) << 7) | ((v29 % 0xB) >> 1)))
                                   + 1) ^ 0xB9 ^ *(_BYTE *)(*(_QWORD *)(v11 + 9704)
                                                          + (((((v29 % 0xB) & 1) << 7) | ((v29 % 0xB) >> 1)) ^ 0x95)))
                                 + 10)
               + 11997;
  v32 = (unsigned __int16)(v28 - ((unsigned __int16)((10331 * v28) >> 16) >> 6) * v13);
  a8[15] = *(_BYTE *)(v12 + v32);
  *(_BYTE *)(v12 + v32) = v20;
  v33 = a8[46];
  v34 = (unsigned __int16)(31 * (v19 - v19 / 0xA * a3)
                         + 12028
                         - 406
                         * ((unsigned __int16)((10331
                                              * (unsigned __int16)(31
                                                                               * (v19 - v19 / 0xA * a3)
                                                                               + 12028)) >> 16) >> 6));
  a8[46] = *(_BYTE *)(v12 + v34);
  *(_BYTE *)(v12 + v34) = v33;
  v35 = (unsigned __int16)(31 * (v31 % 9)
                         + 12059
                         - 406
                         * ((unsigned __int16)((10331 * (unsigned __int16)(31 * (v31 % 9) + 12059)) >> 16) >> 6));
  LODWORD(v24) = v29 + v24;
  v36 = v19 ^ (v27 - 501665381);
  LOBYTE(v17) = a8[77];
  v37 = v36 + v29;
  a8[77] = *(_BYTE *)(v12 + v35);
  LODWORD(v24) = v36 ^ v24;
  *(_BYTE *)(v12 + v35) = v17;
  v38 = (v37 ^ (v27 - 501665381)) + v37;
  *(_DWORD *)(v11 + 9688) = v38;
  LODWORD(v21) = 31
               * (v24
                                 % ((((v31 % 9 + 7) ^ 0xFFFFFFF7) + ((v31 % 9 + 7) | 8) + 1) ^ (8 - v31 % 9) & 8))
               + 12090;
  LOBYTE(v27) = a8[108];
  v39 = (unsigned __int16)(v21 - 406 * ((unsigned __int16)((10331 * v21) >> 16) >> 6));
  a8[108] = *(_BYTE *)(v12 + v39);
  *(_BYTE *)(v12 + v39) = v27;
  LOBYTE(v27) = a8[139];
  v40 = (unsigned __int16)(31 * ((v37 + 2043794545) % 7u)
                         + 12121
                         - 406
                         * ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * ((v37 + 2043794545) % 7u) + 12121)) >> 16) >> 6));
  a8[139] = *(_BYTE *)(v12 + v40);
  *(_BYTE *)(v12 + v40) = v27;
  v41 = (unsigned __int16)(31 * ((v36 - 775101019) % 6u)
                         + 12152
                         - 406
                         * ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * ((v36 - 775101019) % 6u) + 12152)) >> 16) >> 6));
  v42 = a8[170];
  a8[170] = *(_BYTE *)(v12 + v41);
  *(_BYTE *)(v12 + v41) = v42;
  v43 = (v36 - 775101019) ^ v24;
  v44 = (unsigned __int16)(31 * ((v38 + 2043794545) % 5u)
                         + 12183
                         - 406
                         * ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * ((v38 + 2043794545) % 5u) + 12183)) >> 16) >> 6));
  LOBYTE(v30) = a5[3891];
  v45 = (v38 + 2043794545 + v36 - 775101019) ^ v43;
  a5[3891] = *(_BYTE *)(v12 + v44);
  *(_BYTE *)(v12 + v44) = v30;
  v46 = v43 + v37 + 2043794545;
  v47 = (unsigned __int16)(31 * (v43 & 3 ^ 1)
                         + 12214
                         - 406 * ((unsigned __int16)((10331 * (31 * (v43 & 3 ^ 1u) + 12214)) >> 16) >> 6));
  LOBYTE(v44) = *(_BYTE *)(*(_QWORD *)(v11 + 9544)
                         + (((*(_BYTE *)(v12 + v47) >> 1) | (*(_BYTE *)(v12 + v47) << 7)) ^ 0x25));
  v48 = a5[3922];
  a5[3922] = (v44 ^ (32 * v44) ^ 0x45) + 10;
  *(_BYTE *)(v12 + v47) = v48;
  *(_BYTE *)(v12
           + (unsigned __int16)(31 * ((v46 + 676895969) % 3u)
                              + 12245
                              - 406
                              * ((unsigned __int16)((10331
                                                   * (unsigned __int16)(31 * ((v46 + 676895969) % 3u)
                                                                                    + 12245)) >> 16) >> 6))) = a5[3953];
  if ((v45 & 1) != 0)
    v50 = 127;
  else
    v50 = 96;
  v49 = (a5[3984] >> 5) | (8 * a5[3984]);
  *(_BYTE *)(v12 + v50) = 109 * ((*(_BYTE *)(v23 + (v49 ^ 0x5ELL)) + (v49 ^ 0x52) + 1) ^ 0x5C);
  a5[3956] = 0;
  a5[3987] = v8;
  a5[4018] = 2;
  a5[4049] = 3;
  a5[4080] = 4;
  a8[15] = 5;
  a8[46] = 6;
  a8[77] = 7;
  a8[108] = 8;
  a8[139] = 9;
  a8[170] = 10;
  a5[3891] = 11;
  a5[3922] = 12;
  a5[3953] = 13;
  a5[3984] = 14;
  a5[4015] = 15;
  v51 = *(_DWORD *)(v11 + 4140);
  v52 = (unsigned __int16)(31 * (v51 & 0xF ^ 0xE)
                         + 11842
                         - 406 * ((unsigned __int16)((10331 * (31 * (v51 & 0xF ^ 0xEu) + 11842)) >> 16) >> 6));
  v53 = ((*(_BYTE *)(v12 + v52) >> 5) | (8 * *(_BYTE *)(v12 + v52))) ^ 0x5ELL;
  a5[3956] = 109
           * ((*(_BYTE *)(v23 + v53) + (((*(_BYTE *)(v12 + v52) >> 5) | (8 * *(_BYTE *)(v12 + v52))) ^ 0x52) + 1) ^ 0x5C);
  *(_BYTE *)(v12 + v52) = 0;
  v54 = *(_DWORD *)(v11 + 4132);
  v55 = (unsigned __int16)(31 * ((v54 - 92230513) % 0xFu) + 11873);
  v56 = *(unsigned __int8 *)(v12 + v55 % (unint64_t)((v53 & 0x96 ^ 0x196) + (v53 & 0x96)));
  v57 = a7 ^ 0xF4EA23EA;
  LOWORD(v52) = 31 * ((v54 - 92230513) % 0xFu)
              + 11873
              - 406 * ((unsigned __int16)((10331 * v55) >> 16) >> 6);
  LOBYTE(v55) = a5[3987];
  a5[3987] = (v56 ^ 0x63 ^ *(_BYTE *)(*(_QWORD *)(v11 + 9680) + (v56 ^ 0xAA))) + 3;
  v58 = *(_DWORD *)(v11 + 4136);
  *(_BYTE *)(v12 + (unsigned __int16)v52) = v55;
  v59 = (unsigned __int16)(31 * ((v58 ^ 0xB502156A) % 0xE)
                         + 11904
                         - 406
                         * ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * ((v58 ^ 0xB502156A) % 0xE) + 11904)) >> 16) >> 6));
  v60 = a5[4018];
  a5[4018] = *(_BYTE *)(v12 + v59);
  *(_BYTE *)(v12 + v59) = v60;
  LODWORD(v56) = v57 % 0xD;
  LODWORD(v59) = a5[4049];
  v61 = (v51 ^ 0x5EE57EE1) + v57;
  v62 = (unsigned __int16)(31 * v56
                         + 11935
                         - 406
                         * ((unsigned __int16)((10331 * (unsigned __int16)(31 * v56 + 11935)) >> 16) >> 6));
  v63 = (a5[4049] >> 5) | (8 * a5[4049]);
  v64 = *(_QWORD *)(v11 + 9536);
  v65 = *(_BYTE *)(v64 + (v63 ^ 0x3BLL));
  a5[4049] = *(_BYTE *)(v12 + v62);
  *(_BYTE *)(v12 + v62) = 109 * (v63 ^ 0xB9 ^ v65);
  v66 = (v51 ^ 0xA11A811E) - v54 - (v61 + 1) + 92230513;
  v67 = ((v61 + 1) ^ (v54 - 92230513)) + 1721500237;
  v61 -= 466266536;
  v68 = (v58 ^ 0x6A7F105C) - v66;
  v69 = a5[4080];
  v70 = (unsigned __int16)(31 * (v66 % 0xC)
                         + 11966
                         - 406
                         * ((unsigned __int16)((10331 * (unsigned __int16)(31 * (v66 % 0xC) + 11966)) >> 16) >> 6));
  a5[4080] = *(_BYTE *)(v12 + v70);
  *(_BYTE *)(v12 + v70) = v69;
  v71 = (unsigned __int16)(31 * (v67 % 0xB)
                         + 11997
                         - 406
                         * ((unsigned __int16)((10331 * (unsigned __int16)(31 * (v67 % 0xB) + 11997)) >> 16) >> 6));
  v72 = a8[15];
  a8[15] = *(_BYTE *)(v12 + v71);
  *(_BYTE *)(v12 + v71) = v72;
  v73 = a8[46];
  v74 = (unsigned __int16)(31 * (v68 % 0xA)
                         + 12028
                         - 406
                         * ((unsigned __int16)((10331 * (unsigned __int16)(31 * (v68 % 0xA) + 12028)) >> 16) >> 6));
  a8[46] = *(_BYTE *)(v12 + v74);
  LODWORD(v71) = v68 ^ v61;
  *(_BYTE *)(v12 + v74) = v73;
  v75 = 31 * (v61 % 9);
  v76 = *(_BYTE *)(v12 + (v75 + 12059) % (((v75 + 12059) & 0xAB9 ^ (2147471588 - v75) & 0x4076CAB9) - 1081526563));
  v77 = v75 + 12059 - 406 * ((unsigned __int16)((10331 * (unsigned __int16)(v75 + 12059)) >> 16) >> 6);
  v78 = (v67 + v66) ^ v71;
  LOBYTE(v66) = a8[77];
  a8[77] = v76;
  *(_BYTE *)(v12 + v77) = v66;
  v79 = (unsigned __int16)(31 * (v78 & 7)
                         + 12090
                         - 406 * ((unsigned __int16)((10331 * (31 * (v78 & 7u) + 12090)) >> 16) >> 6));
  v80 = v71 + v67;
  v81 = (v59 >> 5) & 3;
  LOBYTE(v74) = *(_BYTE *)(v26 + (a8[108] ^ 0x26));
  LODWORD(v59) = v80 + 2043794545;
  a8[108] = *(_BYTE *)(v12 + v79);
  *(_BYTE *)(v12 + v79) = (v81 ^ 3) + v81 + (v74 ^ 0x60);
  v82 = (v80 + 2043794545) % 7u;
  LODWORD(v79) = ((((120 - v82) | (v82 - 121)) & 0x58) + (((v80 + 113) ^ (-114 - v80)) & 0xC7))
               * (v82 + 391);
  v83 = *(unsigned __int8 *)(v12 + (v79 - 406 * ((10578738 * (unint64_t)v79) >> 32)));
  LODWORD(v79) = a8[139];
  LOBYTE(v83) = (v83 >> 5) | (8 * v83);
  v84 = v83 ^ 0x3BLL;
  LOBYTE(v74) = (((a8[139] >> 5) | (8 * a8[139])) ^ 0x52)
              + *(_BYTE *)(v23 + (((a8[139] >> 5) | (8 * a8[139])) ^ 0x5ELL));
  v85 = *(_BYTE **)(v11 + 8344);
  LODWORD(v71) = v71 - 775101019;
  a8[139] = 109 * (v83 ^ 0xB9 ^ *(_BYTE *)(v64 + v84));
  *(_BYTE *)(v12
           + (unsigned __int16)(31 * v82
                              + 12121
                              - 406
                              * ((unsigned __int16)((10331 * (unsigned __int16)(31 * v82 + 12121)) >> 16) >> 6))) = 109 * ((v74 + 1) ^ 0x5C);
  LOBYTE(v82) = a8[170];
  v86 = (unsigned __int16)(31 * (v71 % 6)
                         + 12152
                         - 406
                         * ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * (v71 % 6) + 12152)) >> 16) >> 6));
  a8[170] = *(_BYTE *)(v12 + v86);
  *(_BYTE *)(v12 + v86) = v82;
  v87 = (v80 ^ v61) + v80 + 2043794545;
  v88 = v71 ^ v78;
  v89 = v87 % 5;
  LODWORD(v71) = v87 + v71;
  v90 = v84 & 0x1F;
  v91 = *(_QWORD *)(v11 + 9736);
  v89 += 393;
  LOBYTE(v90) = *(_BYTE *)(v12
                         + (unsigned __int16)((v90 + (v83 & 0x1F ^ 4)) * v89
                                            - 406
                                            * ((unsigned __int16)((10331 * (v90 + (v83 & 0x1F ^ 4)) * v89) >> 16) >> 6)));
  LOBYTE(v83) = v85[3891];
  v85[3891] = v90;
  *(_BYTE *)(v12
           + (unsigned __int16)(31 * v89
                              - 406
                              * ((unsigned __int16)((10331 * (unsigned __int16)(31 * v89)) >> 16) >> 6))) = v83;
  v92 = (v79 >> 5) & 3;
  LODWORD(v79) = v88 & 3 ^ 1;
  v93 = 31 * v79 + 12214 - 406 * ((10331 * (31 * v79 + 12214)) >> 22);
  v94 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 9552) + ((-87 * v85[3922]) ^ 0x8BLL));
  v85[3922] = *(_BYTE *)(v12
                       + (unsigned __int16)(31 * v79
                                          + 12214
                                          - 406
                                          * ((unsigned __int16)((10331 * (31 * v79 + 12214)) >> 16) >> 6)));
  v94 += 94;
  HIDWORD(v95) = v94 ^ ((v92 ^ 0x13) + v92);
  LODWORD(v95) = v94 << 24;
  v96 = v88 + v59;
  v97 = v71 ^ v88;
  *(_BYTE *)(v12 + (unsigned __int16)(31 * (v79 + (v93 & 0x17E) + (v93 & 0x17E ^ 0x17E)) + 372) % 0x196u) = v95 >> 29;
  v98 = (unsigned __int16)(31 * ((v96 + 676895969) % 3u)
                         + 12245
                         - 406
                         * ((unsigned __int16)((10331
                                              * (unsigned __int16)(31 * ((v96 + 676895969) % 3u) + 12245)) >> 16) >> 6));
  LOBYTE(v79) = v85[3953];
  v85[3953] = *(_BYTE *)(v12 + v98);
  *(_BYTE *)(v12 + v98) = v79;
  v99 = v85[3984];
  if ((v97 & 1) != 0)
    v100 = 127;
  else
    v100 = 96;
  v85[3984] = *(_BYTE *)(v12 + v100);
  *(_BYTE *)(v12 + v100) = v99;
  *(_QWORD *)(v11 + 6832) = v9 ^ 0xB2C9C9BE4112861DLL;
  *(_DWORD *)(v11 + 4116) = *(_DWORD *)(v11 + 9688) + 2079193390;
  *(_DWORD *)(v11 + 4128) = v45 ^ 0x47859B31;
  *(_DWORD *)(v11 + 4124) = v43 ^ 0xA85842FB;
  *(_DWORD *)(v11 + 4120) = v46 + 2084856245;
  *(_DWORD *)(v11 + 4136) = v97 ^ 0xB502156A;
  *(_DWORD *)(v11 + 4140) = v88 ^ 0x8FBCB9DB;
  *(_DWORD *)(v11 + 4132) = v96 + 769126482;
  *(_DWORD *)(v11 + 9688) = 21;
  v101 = *(_DWORD *)(v11 + 6812);
  v102 = *(unsigned __int8 ***)(v11 + 9336);
  v103 = *(unsigned __int8 ***)(v11 + 8144);
  v104 = *(_QWORD *)(v11 + 9280);
  *(_QWORD *)(v11 + 9616) = *(_QWORD *)(v11 + 6776);
  *(_DWORD *)(v11 + 9624) = v101;
  *(_QWORD *)(v11 + 9280) = v104;
  v105 = 29 * (v91 ^ 0x853D1173);
  *(_DWORD *)(v11 + 9656) = v105;
  v106 = (v105 - 385912405) & 0x17007FFB;
  v107 = *(_QWORD *)(v11 + 9712);
  v108 = *(unsigned int *)(v107 + 40);
  v109 = **(unsigned __int8 ***)(v11 + 9352);
  v110 = *v102;
  v111 = *v103;
  v112 = **(unsigned __int8 **)(v11 + 8584);
  v113 = v110[25];
  v114 = v109[21];
  v115 = *(unsigned __int8 *)(v107 + 10);
  *(_QWORD *)(v11 + 9664) = v106;
  v116 = *(unsigned __int8 *)(v107 + 38);
  *(_QWORD *)(v11 + 9736) = v91;
  v117 = (v113 << (v106 ^ 0xF3u)) | v114;
  HIDWORD(v118) = v112;
  LODWORD(v118) = (v112 ^ 0xFFFFFFBF) << 24;
  v119 = v115 << (v115 & 0x18) << (v115 & 0x18 ^ 0x18);
  v120 = (uint64_t)*(&off_1004ECA20 + (int)(v91 ^ 0x853D11BC));
  v121 = v120 + 802;
  v122 = *(_BYTE *)(v120 + 802 + ((v118 >> 28) ^ 0xB4));
  v123 = v119 ^ v117 ^ ((unint64_t)v111[8] << 16);
  v124 = ((unint64_t)v111[5] << 32) + v123 - 2 * (((unint64_t)v111[5] << 32) & v123);
  v125 = v111[2] | ((unint64_t)(-91 * ((-51 * v122) ^ (8 * ((-51 * v122) ^ (20 * v122))) ^ 0xDD)) << 8) | (v116 << 16) | ((unint64_t)*(unsigned __int8 *)(v107 + 11) << 24);
  v126 = v125 ^ -(uint64_t)v125;
  v127 = v125 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v110[11] << 32);
  v128 = (v109[3] | ((unint64_t)v110[10] << 16)) ^ ((unint64_t)*v109 << (v122 & 8) << (v122 & 8 ^ 8u));
  v129 = (v126 ^ (v127 + ((unint64_t)v110[11] << 32) - 2 * v127)) + ((unint64_t)v110[11] << 32);
  LOBYTE(v127) = *(_BYTE *)(v120 + (v111[3] ^ 0xD0)) ^ 0x33;
  HIDWORD(v118) = **(unsigned __int8 **)(v11 + 8600);
  LODWORD(v118) = (HIDWORD(v118) ^ 0xFFFFFFBF) << 24;
  v130 = *(_BYTE *)(v120 + 802 + ((v118 >> 28) ^ 0xB4));
  v131 = ((unint64_t)(**(unsigned __int8 **)(v11 + 8592) ^ 0xB0u) << 32) | ((unint64_t)v109[20] << 40) | ((unint64_t)(((v127 >> (v127 & 7)) >> (v127 & 7 ^ 7)) ^ (2 * v127)) << 48);
  v132 = (-51 * v130) ^ (8 * ((-51 * v130) ^ (20 * v130)));
  v133 = (v131 | ((unint64_t)v110[4] << 56)) ^ (v128 | ((unint64_t)v109[15] << 24));
  LOBYTE(v126) = *(_BYTE *)(v120 + 802 + (((v110[30] >> 4) | (16 * v110[30])) ^ 0xB4));
  v134 = ((*(_BYTE *)(v107 + 60) >> 2) | (*(_BYTE *)(v107 + 60) << 6));
  v135 = v120 + 530;
  v136 = (-51 * v126) ^ (8 * ((-51 * v126) ^ (20 * v126)));
  v137 = v129 ^ (((_DWORD)v108
                + 738712215
                + ((2 * (_DWORD)v108) & 0xA7F04AD2)
                + (((_DWORD)v108 + 1 + (v108 ^ 0x2C07DA96)) ^ 0xFFFFFFFE)) | ((unint64_t)v111[4] << 56) | ((unint64_t)v111[7] << 48) | ((unint64_t)v110[5] << 40));
  if ((*(_BYTE *)(v120
                 + 259
                 + (v134 ^ -v134 ^ (140
                                  - (((*(_BYTE *)(v107 + 60) >> 2) | (*(_BYTE *)(v107 + 60) << 6)) ^ 0x8Cu)))
                 + 140) & 1) != 0)
    v138 = -19;
  else
    v138 = -17;
  v139 = *(_BYTE **)(v11 + 8088);
  v140 = *(_BYTE **)(v11 + 8096);
  v141 = ((v110[35] | ((unint64_t)v109[4] << 16) | ((unint64_t)*(unsigned __int8 *)(v107 + 64) << 8)) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(-91 * (v132 ^ 0xDD)) << 24) | ((unint64_t)*(unsigned __int8 *)(v107 + 44) << 32) | ((unint64_t)v111[1] << 40)) ^ (((unint64_t)(-91 * (v136 ^ 0xDD)) << 48) | ((unint64_t)((*(unsigned __int8 *)(v107 + 80) ^ 0xFFFFFF9E ^ ((*(unsigned __int8 *)(v107 + 80) ^ 0xFFFFFF9E) + 53) ^ 0x6B ^ *(unsigned __int8 *)(v120 + 530 + (*(unsigned __int8 *)(v107 + 80) ^ 0x96))) - 115) << 56));
  v142 = *(_BYTE **)(v11 + 8120);
  v143 = *(_BYTE **)(v11 + 8104);
  v144 = v137 ^ 0xD8E1CAEB2C156C5DLL;
  v145 = (((*v139 ^ 0xB0) << 16) | ((unint64_t)(65
                                                                                         * ((v138
                                                                                           + *(_BYTE *)(v120 + 259 + (v134 ^ -v134 ^ (140 - (((*(_BYTE *)(v107 + 60) >> 2) | (*(_BYTE *)(v107 + 60) << 6)) ^ 0x8Cu))) + 140)) ^ 0x38)) << 8) | v110[31] | ((*v140 ^ 0xB0) << 24) | ((unint64_t)v111[9] << 40)) ^ (((unint64_t)(*v142 ^ 0xB0u) << 56) | ((unint64_t)(*v143 ^ 0xB0u) << 48) | ((unint64_t)v109[5] << 32));
  v146 = v133 ^ v137 ^ 0xD8E1CAEB2C156C5DLL;
  v147 = v124 ^ (((unint64_t)*(unsigned __int8 *)(v107 + 85) << 40) | ((unint64_t)*(unsigned __int8 *)(v107 + 47) << 48) | ((unint64_t)*v110 << 56)) ^ v145;
  v148 = v141 ^ v145 ^ 0x58BE7B89AC062434;
  v149 = (v141 ^ 0x1D27FF233AC1D70ELL) & (v146 ^ 0x91F9A441F1A06E97);
  v150 = v137 ^ 0x271E3514D3EA93A2;
  v151 = v146 ^ 0x6E065BBE0E5F9168;
  v152 = v148 & (v141 ^ 0xE2D800DCC53E28F1) ^ v151;
  v153 = v149 ^ v144;
  v154 = v133 ^ 0x6E065BBE0E5F9168;
  v155 = v147 ^ 0x1D836F84E10B0A6FLL;
  if (!*v110)
    v154 = v151;
  v156 = v147 ^ 0xE27C907B1EF4F590;
  v157 = (~(2 * v148) + v148) & v156;
  v158 = v156 ^ v154 & v150;
  v159 = v153 ^ v158;
  v160 = v153 ^ v158 ^ 0x9AF8F924A1E35583;
  v161 = v155 & v144 ^ v148;
  v162 = v161 ^ v158;
  v163 = v141 ^ v157 ^ 0x2786144591C14446 ^ v152;
  v164 = v161 ^ 0x116382A17B85A8A8;
  v165 = v163 ^ __ROR8__(v163, 10);
  v166 = v165 & 0x200000;
  if ((v165 & 0x200000 & (v163 >> 17)) != 0)
    v166 = -v166;
  v167 = (65 * ((*(_BYTE *)(v120 + 259 + (((v159 >> 55) & 0xC0 | (v160 >> 63)) ^ 0x8C)) - 18) ^ 0x39)) ^ (8 * v159) ^ v160 ^ (v160 >> 39) ^ (v160 << 25);
  v168 = (v166 + (v163 >> 17)) ^ v165 & 0xFFFFFFFFFFDFFFFFLL;
  v169 = v164 ^ (v164 << 23) ^ ((v164 >> 7) ^ (v164 >> 41) | (v164 << 57));
  v170 = v168 ^ (v163 << 47);
  *((_QWORD *)&v171 + 1) = v162;
  *(_QWORD *)&v171 = v162 ^ 0x7EFE59D31375069CLL;
  v172 = v162 ^ 0x7EFE59D31375069CLL ^ __ROR8__(v162 ^ 0x7EFE59D31375069CLL, 19) ^ (v171 >> 28) ^ v169;
  v173 = v172 ^ 0x375069C000000000;
  v174 = v152 ^ 0x8E06F550B4FEA48ALL ^ __ROR8__(v152, 1) ^ ((v152 ^ 0x8E06F550B4FEA48ALL) >> 6) ^ ((v152 ^ 0x8E06F550B4FEA48ALL) << 58) ^ v167 ^ 0xD7C7C9250F1AAC18;
  *((_QWORD *)&v171 + 1) = v168;
  *(_QWORD *)&v171 = v170;
  *(_QWORD *)&v171 = __ROR8__((v171 >> 42) ^ __ROR8__(v169, 42) ^ 0x57A4613020955AF2, 22);
  v175 = v170 & (v174 ^ 0xB8FC8557A580ADBALL) ^ v167 ^ 0xD7C7C9250F1AAC18;
  v176 = v171 ^ 0x556BC95E9184C082 ^ (v172 ^ 0xC8AF963FFFFFFFFFLL) & (v167 ^ 0xD7C7C9250F1AAC18);
  v177 = (v171 ^ 0xAA9436A16E7B3F7DLL) & v173;
  v178 = (v174 ^ 0x47037AA85A7F5245) & (v167 ^ 0x283836DAF0E553E7) ^ v173;
  v179 = (v171 ^ 0x556BC95E9184C082) & ~v170 ^ v174 ^ 0x47037AA85A7F5245;
  v180 = (v175 + v178 - 2 * (v175 & v178)) ^ 0xF0CC8DD092A1AF2FLL;
  v181 = v176 - 0x404455A03024AE79;
  v182 = ((v179 + (v179 ^ 0xACA90F98B7DE5139) + 1) ^ 0xFFFFFFFFFFFFFFFCLL) + v179;
  v183 = (2 * v176) & 0x7F7754BF9FB6A30ELL;
  v184 = v178 ^ v176 ^ 0xCC7BE9A4BE673377;
  v185 = v170 ^ 0x47C99E12AA55AA20 ^ v177 ^ v179;
  v186 = v181 - v183;
  v187 = (v182 >> 1) & 0x10000000;
  v188 = v186 >> 7;
  if ((v187 & v182) != 0)
    v187 = -v187;
  v189 = (v187 + v182) ^ (v182 >> 1) & 0xFFFFFFFFEFFFFFFFLL;
  v190 = v188 & 0x15A4184970A3B70 ^ v186 & 0xCF5A4184970A3B70;
  v191 = v190 | (v186 >> 7) & 0xA5BE7B68F5C48FLL ^ v186 & 0x30A5BE7B68F5C48FLL;
  v192 = v180 ^ __ROR8__(v180, 61) ^ (v180 >> 39) ^ (v180 << 25);
  v193 = (v189 + (v182 << 63)) ^ __ROR8__(v182, 6);
  v194 = (v190 ^ v188) & 0x20;
  v195 = ((v186 << 57) ^ (v186 << 23) ^ v191 | (v186 >> 41)) ^ v191 & (v186 >> 41);
  if ((v194 & v192) != 0)
    v196 = -v194;
  else
    v196 = (v190 ^ v188) & 0x20;
  v197 = (v196 + v192) ^ v194;
  v198 = v184 ^ __ROR8__(v184, 19) ^ (v184 >> 28) ^ (v184 << 36) ^ v195;
  v199 = (((0x5682E4B04CCE5973 - 2 * ((v185 << 54) & v185)) ^ ((v185 << 54)
                                                               - 0x5682E4B04CCE5973
                                                               + (v185 ^ (v185 >> 10))))
        + 2
        * ((0x5682E4B04CCE5973 - 2 * ((v185 << 54) & v185)) & ((v185 << 54)
                                                               - 0x5682E4B04CCE5973
                                                               + (v185 ^ (v185 >> 10))))) ^ __ROR8__(v185, 17);
  v200 = v199 ^ v195;
  v201 = v199 & ~(v193 ^ v197) ^ v197;
  v202 = v197 & ~v198 ^ v200;
  v203 = v193 ^ v197 ^ (~(2 * v199) + v199) & v200;
  v204 = v193 & ~v197 ^ v198;
  v205 = v201 ^ v204;
  v206 = v198 & ~v200;
  v207 = 0x802A65F49FF1DF13 - (v203 & 0x4000);
  v208 = v202 ^ 0x5392EDE158D8BEABLL ^ v204;
  v209 = v203 & 0xFFFFFFFFFFFFBFFFLL;
  v210 = v206 ^ v199 ^ v203;
  v211 = v207 ^ v209;
  v212 = 8 * (v205 ^ 0x4A2C537256ACF1F5);
  v213 = v205 ^ 0x4A2C537256ACF1F5 ^ ((v205 ^ 0x4A2C537256ACF1F5uLL) >> 61) ^ ((v205 ^ 0x4A2C537256ACF1F5uLL) >> 39);
  v214 = v213 & v212;
  v215 = v213 + v212;
  v216 = (v202 ^ 0xAD2A34AC12844DDDLL) << 57;
  v217 = (v215 - 2 * v214) ^ (v205 << 25);
  v218 = ((v211 >> 6) | (v211 << 63)) ^ (v211 << 58) ^ ((v211 >> 1) & 0x144C40D5A6699F68 ^ v211 & 0x944C40D5A6699F68 | ((v211 >> 1) ^ v211) & 0x6BB3BF2A59966097) ^ v217 ^ 0xE4AD59E3EA000000;
  v219 = (((v210 ^ 0x313BC7C92EDDA5FDLL) >> 10) ^ (v210 >> 17) | ((v210 ^ 0x313BC7C92EDDA5FDLL) << 54)) ^ __ROR8__(__ROR8__(v210 ^ 0x313BC7C92EDDA5FDLL, 9) & 0xFF800000000000FFLL ^ __ROR8__(v210 ^ 0x313BC7C92EDDA5FDLL, 56) ^ 0x6C917F5A85D4E647, 8);
  v220 = (v202 >> 7) ^ __ROR8__(v202 ^ 0xAD2A34AC12844DDDLL, 41) ^ 0x15A54695825089BLL ^ ((((v216 ^ (0xFE00000000000000 * (v202 ^ 0xAD2A34AC12844DDDLL)) ^ ((v202 ^ 0xAD2A34AC12844DDDLL) - (v216 ^ v202 ^ 0xAD2A34AC12844DDDLL) - (((v202 ^ 0xAD2A34AC12844DDDLL) - (v216 ^ v202 ^ 0xAD2A34AC12844DDDLL)) ^ v216)))
                                                                                          + (v202 ^ 0xAD2A34AC12844DDDLL)
                                                                                          - (v216 ^ v202 ^ 0xAD2A34AC12844DDDLL)) ^ (0xFE00000000000000 * (v202 ^ 0xAD2A34AC12844DDDLL)))
                                                                                        + (v202 ^ 0xAD2A34AC12844DDDLL));
  v221 = v220 ^ v219 ^ 0x476C89E2B9614388;
  v222 = ((v208 >> 28) | (v208 << 45)) ^ (v208 << 36) ^ ((v208 >> 19) & 0x196DEA6F2D89 ^ v208 & 0x2326796DEA6F2D89 | (v208 >> 19) & 0x6921590D276 ^ v208 & 0xDCD986921590D276) ^ v220;
  v223 = (v217 ^ 0xE4AD59E3EA000000) & ~v222 ^ v221;
  v224 = (v219 ^ 0x476C89E2B9614388) & ~v218 ^ v217 ^ 0xE4AD59E3EA000000;
  v225 = (v222 ^ -(uint64_t)v222 ^ ((v218 & (v217 ^ 0x1B52A61C15FFFFFFLL)) - (v218 & (v217 ^ 0x1B52A61C15FFFFFFLL) ^ v222)))
       + (v218 & (v217 ^ 0x1B52A61C15FFFFFFLL));
  v226 = v223 ^ 0x9D5823204F6787ADLL ^ v225;
  v227 = v224 ^ 0xC0C4E4651798A92FLL ^ v225;
  v228 = v222 & ~v221;
  v229 = v221 & (v219 ^ 0xB893761D469EBC77) ^ v218;
  v230 = v229 ^ 0x3508012E90BBEBA6;
  LODWORD(v232) = __ROR4__(v108 ^ 0x46B8D103, 6) ^ 0x643F2D94;
  HIDWORD(v232) = v232;
  v231 = v232 >> 26;
  v233 = v219 ^ v228 ^ 0xF677116099FDED9CLL ^ v229;
  v234 = ((v229 ^ 0x3508012E90BBEBA6) >> 6) | (v229 << 63);
  if ((v231 & 0x20000) != 0)
    v235 = -131072;
  else
    v235 = 0x20000;
  v236 = v230 ^ (v230 << 58) ^ (v230 >> 1) ^ v234;
  v237 = (v223 - ((v235 + v231) ^ 0x4971B41Au) + v108) ^ 0x76AE5B4ADE1196D6;
  v238 = v227 ^ __ROR8__(v227, 61) ^ (v227 >> 39) ^ (v227 << 25);
  v239 = v238 ^ v236;
  v240 = v233 ^ __ROR8__(v233, 10) ^ (v233 >> 17) ^ (v233 << 47);
  v241 = v237 ^ __ROR8__(v237, 7) ^ (v237 >> 41) ^ (v237 << 23);
  v242 = v241 ^ v240;
  v243 = v226 ^ __ROR8__(v226, 19) ^ (v226 >> 28) ^ (v226 << 36) ^ v241;
  v244 = v236 & ~v238 ^ v243;
  v245 = v238 & ~v243 ^ v241 ^ v240;
  v246 = __ROR8__(v241 & ~v240, 17);
  v247 = 0x1000000000;
  if (((v245 ^ v244) & 0x1000000000) != 0)
    v247 = 0xFFFFFFF000000000;
  v248 = (v247 + (v245 ^ v244)) ^ 0xE911D3A838E92FACLL;
  v249 = __ROR8__(v246 ^ __ROR8__(v239, 17) ^ 0xF3FA7421DB3CB95BLL, 47);
  v250 = v238 ^ v240 & ~v239 ^ v244 ^ 0xA2420D136BFD9FADLL;
  v251 = v243 & ~v242 ^ v240 ^ v249;
  v252 = v250 ^ __ROR8__(v250, 61) ^ (v250 >> 39) ^ (v250 << 25);
  v253 = __ROR8__(v249 ^ 0x8FE3893E9F4AD9AALL, 6) ^ (v249 << 63) ^ (((v249 ^ 0x8FE3893E9F4AD9AALL) >> 1)
                                                                  + (v249 ^ 0x8FE3893E9F4AD9AALL)
                                                                  - 2
                                                                  * (((v249 ^ 0x8FE3893E9F4AD9AALL) >> 1) & (v249 ^ 0x8FE3893E9F4AD9AALL)));
  v254 = v245 ^ 0x3548F5C53C294B00 ^ ((v245 ^ 0x3548F5C53C294B00) >> 7) ^ (((v245 ^ 0x3548F5C53C294B00) >> 41) | (v245 << 57));
  v255 = (v245 ^ 0x3548F5C53C294B00) << 23;
  v256 = v254 & v255;
  v257 = v254 + v255;
  v258 = v253 ^ v252;
  v259 = v257 - 2 * v256;
  v260 = v251 ^ 0x74892CB32BD39554 ^ ((v251 ^ 0x74892CB32BD39554) << 54) ^ ((v251 ^ 0x74892CB32BD39554) >> (v224 & 0x11) >> (v224 & 0x11 ^ 0x11)) ^ __ROR8__((((v251 ^ 0x74892CB32BD39554) & 0x1FFFF) << 16) ^ __ROR8__((v251 >> 10) ^ 0x1D224B2CCAF4E5, 31) ^ 0x43BCC1B32BEC72D7, 33);
  v261 = v260 ^ 0x95F6396BA1DE60D9;
  v262 = v260 ^ 0x95F6396BA1DE60D9 ^ v259;
  v263 = ((v248 >> 28) | (v248 << 45)) ^ (v248 << 36) ^ v259 ^ __ROR8__(__ROR8__(__ROR8__(v248, 63) & 0xFFFFFFFFFFF00001 ^ __ROR8__(v248, 44) ^ 0x6EAF80F71436AB5CLL, 33) ^ 0xAF2AC674012EF784, 51);
  v264 = (v263 ^ 0xCD84B930D9001B59) & v252 ^ v262;
  v263 ^= 0x327B46CF26FFE4A6uLL;
  v265 = v263 ^ v253 & ~v252;
  v266 = (v260 ^ 0x95F6396BA1DE60D9) & ~v258;
  v267 = (v260 ^ 0x95F6396BA1DE60D9) & 0x800000000;
  v268 = v262 & (v260 ^ 0x6A09C6945E219F26) ^ v258;
  v269 = v263 & ~v262;
  v270 = v261 & 0xFFFFFFF7FFFFFFFFLL;
  v271 = ((v264 ^ -(uint64_t)v264 ^ (v265 - (v264 ^ v265))) + v265) ^ 0x69B66319AD0E859DLL;
  v272 = v252 ^ v266 ^ 0x917EAA74E2F77306 ^ v265;
  if ((v269 & v267) != 0)
    v273 = -(uint64_t)v267;
  else
    v273 = v267;
  v274 = v270 ^ v268 ^ 0x255BF95FCB5E630DLL ^ (v273 + v269);
  v275 = (v268 ^ 0xE293FE325B0CD692) << 58;
  v276 = v264 ^ 0x480CE2D84EC70A20;
  v277 = v272 << 25;
  *((_QWORD *)&v278 + 1) = v268;
  *(_QWORD *)&v278 = v268 ^ 0xE293FE325B0CD692;
  v279 = v272 ^ __ROR8__(v272, 61) ^ (v272 >> 39);
  v280 = v279 & (v272 << 25);
  v281 = __ROR8__((v271 >> 9) & 0x7FFFFFFFF80000 ^ __ROR8__(v271 ^ __ROR8__(v271, 19), 45) ^ 0xAC1171B45801915CLL, 19);
  v282 = (v278 >> 1) ^ v268 ^ 0xE293FE325B0CD692 ^ ((v268 ^ 0xE293FE325B0CD692) >> 6);
  v283 = v282 & 0x800000000000000;
  v284 = v281 ^ (v271 << 36) ^ 0x322B95822E368B00;
  v285 = v132 == 0;
  v286 = v282 ^ 0x800000000000000;
  if (v285)
    v286 = 0xF7FFFFFFFFFFFFFFLL;
  v287 = v286 & v282;
  if ((v283 & v275) != 0)
    v283 = -v283;
  v288 = v279 + v277 - 2 * v280;
  v109[21] = v281;
  v289 = ((v283 + v275) >> 32) ^ HIDWORD(v287);
  v111[8] = BYTE2(v284);
  v110[25] = BYTE1(v284);
  v290 = ((BYTE3(v284) ^ 0x2C) + (BYTE3(v284) | 0xD3) + 1) | BYTE3(v284) & 0x2C;
  v291 = *(_BYTE *)(v121 + (((v290 >> 4) | (16 * (v290 & 0xFu))) ^ 0xB4));
  v111[5] = BYTE4(v284);
  *v110 = HIBYTE(v284);
  v292 = v274 ^ __ROR8__(v274, 10) ^ (v274 >> 17);
  **(_BYTE **)(v11 + 8584) = BYTE1(v279) - ((2 * BYTE1(v279)) & 0x60) - 80;
  v293 = v276 ^ (v276 << 23) ^ __ROR8__(v276, 7);
  v111[2] = v279;
  v110[5] = BYTE5(v288);
  *(_BYTE *)(v107 + 10) = -91 * ((-51 * v291) ^ (8 * ((-51 * v291) ^ (20 * v291))) ^ 0xDD);
  *(_BYTE *)(v107 + 85) = BYTE5(v284);
  *(_BYTE *)(v107 + 38) = BYTE2(v279);
  *(_BYTE *)(v107 + 11) = BYTE3(v288);
  v110[11] = BYTE4(v288);
  *(_BYTE *)(v107 + 47) = BYTE6(v284);
  v294 = *(unsigned __int8 *)(v120 + (BYTE6(v288) ^ 0xD0));
  v295 = *(_QWORD *)(v11 + 9744);
  v111[7] = ((v294 >> 7) | (2 * v294)) ^ 0x66;
  v109[15] = BYTE3(v287);
  **(_BYTE **)(v11 + 8592) = v289 - ((2 * v289) & 0x60) - 80;
  v110[10] = BYTE2(v287);
  v109[3] = v287;
  v111[4] = HIBYTE(v288);
  *v109 = BYTE1(v287);
  LODWORD(v288) = *(unsigned __int8 *)(v120 + (BYTE1(v289) ^ 0xD0));
  **(_BYTE **)(v11 + 8600) = BYTE3(v292) - ((2 * BYTE3(v292)) & 0x60) - 80;
  v110[35] = v292;
  v109[4] = BYTE2(v292);
  v110[4] = HIBYTE(v289);
  v109[20] = ((v288 >> 7) | (2 * v288)) ^ 0x66;
  *(_BYTE *)(v107 + 64) = BYTE1(v292);
  v111[3] = BYTE6(v287);
  v296 = v292 ^ (v274 << 47);
  v297 = *(unsigned __int8 *)(v120 + (BYTE4(v292) ^ 0xD0));
  v111[1] = BYTE5(v296);
  v298 = (v297 >> 7) | (2 * v297);
  v299 = v293 ^ (((v264 & 0xFFFFFE9309388D1BLL ^ 0xB7F31C030138851BLL)
                + 0x16CF6C772E5
                + ((2 * v276) & 0xFFFFFD2612711A36)) >> 41);
  *(_BYTE *)(v107 + 44) = v298 ^ 0x66;
  v110[30] = BYTE6(v296);
  v300 = *(_BYTE *)(v121 + (((v296 >> 52) & 0xF0 | (v296 >> 60)) ^ 0xB4));
  v110[31] = v299;
  *(_BYTE *)(v107 + 80) = -91 * ((-51 * v300) ^ (8 * ((-51 * v300) ^ (20 * v300))) ^ 0xDD);
  v301 = *(_BYTE *)(v135 + (BYTE1(v299) ^ 0x96));
  *v142 = HIBYTE(v293) - ((2 * HIBYTE(v293)) & 0x60) - 80;
  *v139 = BYTE2(v299) - ((2 * BYTE2(v299)) & 0x60) - 80;
  v109[5] = BYTE4(v293);
  *v140 = BYTE3(v293) - ((2 * BYTE3(v293)) & 0x60) - 80;
  v111[9] = BYTE5(v293);
  *(_DWORD *)(v11 + 12324) = v108;
  *v143 = BYTE6(v293) - ((2 * BYTE6(v293)) & 0x60) - 80;
  *(_BYTE *)(v107 + 60) = (v301 ^ BYTE1(v299) ^ 0x9E ^ ((BYTE1(v299) ^ 0x9E) + 53) ^ 0x6B) - 115;
  *(_DWORD *)(v107 + 40) = *(_DWORD *)(v11 + 12324) + 1;
  v302 = *(_DWORD *)(v11 + 9688) < 0x10u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v295
                                        + 8
                                        * (int)((16 * v302) | (32 * v302) | (*(_QWORD *)(v11 + 9736) + 2059604084)))
                            - 8))();
}

void sub_10032F538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_DWORD *)(v9 + 9672) = a7 ^ 0xC653F663;
  *(_QWORD *)(v9 + 6832) = v7 ^ 0xB2C9C9BE4112861DLL;
  *(_DWORD *)(v9 + 9688) = ((((v8 + 84936819) | 0x802D0014) + 2059595775) & a7 ^ 2)
                         + ((((v8 + 84936819) | 0x802D0014) + 2059595775) & a7 ^ 0x14);
  JUMPOUT(0x10032F5E0);
}

uint64_t sub_10033085C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1003 * (v0 < (7 * (*(_QWORD *)(v1 + 9664) ^ 0x5B) - 88))) ^ *(_QWORD *)(v1 + 9664)))
                            - ((*(_QWORD *)(v1 + 9664) - 459397900) & 0x1B61E7DE)
                            + 9922))();
}

uint64_t sub_1003308B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((50 * (((v9 < 4u) ^ (105 * (v7 ^ 0xCB))) & 1)) ^ v7)) - 8))(*(_QWORD *)(v8 + 8344), v9, 385908731, 6643, a5, 0xB2C9C9BE814F1EF4, a7, 176);
}

uint64_t sub_100330954()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((*(_DWORD *)(v1 + 9656) ^ 0x2919) + 10168) ^ 0x2921) * (v0 > 0x17)) ^ *(_DWORD *)(v1 + 9656)))
                            - 8))();
}

void sub_10033098C(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 6776) = (v1 - 2059596086) ^ HIDWORD(a1) ^ 0xB2C9C9BE2F6F83FELL;
  *(_DWORD *)(v3 + 6312) = v2 ^ 0x5232EBA7;
  *(_DWORD *)(v3 + 6812) = *(_DWORD *)(v3 + 9624);
  JUMPOUT(0x1002FBCA4);
}

uint64_t sub_1003309E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (((v9 < 0xCu) ^ (v7 - 1)) & 1 ^ v7)) - ((v7 - 6725) ^ 0x613)))(*(_QWORD *)(v8 + 8344), a2, 385908731, 6643, 10331, 0xB2C9C9BE814F1EF4, a7, 176);
}

uint64_t sub_100330A78(uint64_t a1)
{
  int v1;
  unsigned __int8 v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((228
                                                       * ((((52
                                                                            * ((((v1 - 80) | 0x68) + 118) & 0xB7 ^ 0x9B)) ^ 0x6A) & 0xFEu) > v2)) ^ ((v1 - 5200) | 0x1068))))(a1, 4247);
}

uint64_t sub_100330AE8()
{
  int v0;
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((11 * (v1 != (((v0 + 33) ^ 0xCC) - 60))) ^ v0))
                            - 8))();
}

uint64_t sub_100330B28()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (67 * (v1 == 1302587220)))) - 8))();
}

void sub_100330B74()
{
  JUMPOUT(0x10032B124);
}

uint64_t sub_100330BC4()
{
  int v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v3
                                                                                   + 8
                                                                                   * (((((((v0 + 11) | 0x41)
                                                                                        - 61) & 0xFEu) > v2)
                                                                                     * ((v0 ^ 0x2459) - 3370)) ^ v0)))(*(_QWORD *)(v1 + 6832), &off_1004ECA20, v3, 2235371543, 2059600627);
}

uint64_t sub_100330C3C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v4
                                                              + 8
                                                              * ((84
                                                                * (v2 >= (((-49 * (v1 ^ 8)) ^ 0x1C)
                                                                                         + ((v1 - 48) & 0xDD)))) ^ v1))
                                                  - 4))(a1, *(_QWORD *)(v3 + 9616));
}

uint64_t sub_100330C94()
{
  int v0;
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((99 * (((((v0 - 3878) | 0x1429) ^ 0xFFFFFF87) & 0xDE) == v1)) ^ v0))
                            - 4))();
}

uint64_t sub_100330CF4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 ^ ((2 * (v2 == v1)) | (16 * (v2 == v1)))))
                            - ((v0 ^ 0x12u)
                             - 7074)
                            + 789))();
}

uint64_t sub_100330D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t (*v7)(void);
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  *(_BYTE *)(a1 + 4013) = a7 ^ 0xF4;
  v7 = *(uint64_t (**)(void))(v13
                           + 8
                           * (int)((((v12 + v9 + 1593 - 1302589550) > 7)
                                  * (((v9 + 1593 - v10 - 851175782) & 0xAD7ED3FF) + 5973)) ^ (v9 + 1593)));
  *(_DWORD *)(v11 + 9688) = 15;
  return v7();
}

void sub_100330E80()
{
  JUMPOUT(0x100330EA0);
}

void sub_100330EE0()
{
  JUMPOUT(0x100330EF4);
}

void sub_100330F70()
{
  JUMPOUT(0x100330F98);
}

uint64_t sub_100330FFC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(*(_QWORD *)(v10 + 1816) - v8 + 31) = a2 >> v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a7
                                                      + 8
                                                      * ((((v9 - 1244850102) & 0x4A32F7DF ^ 0x13F3) * (v8 != 31)) ^ v9))
                                          - 12))(1450851299);
}

uint64_t sub_100331064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((83 * (v8 ^ 0x32A) + v7 == 2597) * ((83 * (v8 ^ 0x32A) - 1752) ^ 0x341)) ^ (83 * (v8 ^ 0x32A))))
                            - 4))();
}

uint64_t sub_1003310A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 8 * (a3 ^ (1229 * (v3 < *(_DWORD *)(v4 + 3996)))))
                                                  - (a3 ^ 0x938u)
                                                  + 817))(a1, 0);
}

uint64_t sub_1003310E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_100330FFC(a1, *(unsigned int *)(v7 - 0x62AA055D109F20F3), a3, a4, a5, a6, a7);
}

uint64_t sub_100331114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  _BYTE *v8;
  char v9;
  int v10;
  uint64_t v11;
  unint64_t v12;

  *v8 = v12 >> v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v11 != (v10 ^ 0x13CCu ^ a8)) * (v10 - 2766)) ^ v10)) - 4))();
}

uint64_t sub_100331148(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((25 * (v7 + 8 != (((a1 - 5710) | v8) ^ v9) * a6 + a7)) ^ a1)) - 8))();
}

uint64_t sub_100331188(uint64_t a1, uint64_t a2, int a3, unint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v6 ^ ((v5 < *(_DWORD *)(v7 + 3992)) * a3)))
                            - ((v6 - 3669) ^ a4)))();
}

uint64_t sub_1003311B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  return sub_100331114(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_100331244()
{
  JUMPOUT(0x100328664);
}

uint64_t sub_100331280()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (31 * (v1 < 2)))))();
}

uint64_t sub_100331324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unsigned int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * (((a8 != 0) * ((v8 + 430) ^ 0x1978)) ^ v8)))();
}

uint64_t sub_100331348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8 * (((a8 != (v8 ^ 0x38)) * ((v8 ^ 0x2DF0) - 2640)) ^ v8))
                            - 4))();
}

uint64_t sub_100331378()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((7583 * (((v1 ^ (v3 == v0)) & 1) == 0)) ^ v1)) - 8))();
}

uint64_t sub_1003313A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;

  v12 = ((v6 - 2750) | 0x580) + 5803;
  *(_BYTE *)(v11 + 4078) = v8 ^ 0xF4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((13
                                                        * ((v12 ^ 0x1C0Fu) + v7 - 1765825427 < ((v12 - a5 - 2349) ^ (v10 - 1994) ^ (2 * v12) ^ 0x203Cu))) ^ v12))
                                          - 12))(7223);
}

uint64_t sub_10033145C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (int)((((((v5 - 135) | 0x826) ^ 0xFFFFEE1B) + v5 - 2203) * (v6 > 5)) ^ v5))
                                                                                          - 4))(a1, &off_1004ECA20, 2235367631, *(_QWORD *)(v7 + 8448), a5, v8);
}

uint64_t sub_1003314D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a6 + 8 * ((((v8 ^ 0x19B3) + 362 * (v8 ^ 0x1D20) - 3336) * (a8 == 6)) ^ v8)))();
}

uint64_t sub_100331514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  _BOOL4 v8;

  v8 = v7 == ((((4 * v6) ^ 0x187C) + 1765823714) ^ ((v6 - 149) | 0x99));
  return (*(uint64_t (**)(void))(a6 + 8 * (((4 * v8) | (8 * v8)) ^ v6)))();
}

uint64_t sub_10033155C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a6
                                        + 8
                                        * (((((a8 == 5) ^ (v8 - 1)) & 1) * (566 * (v8 ^ 0xCE7) - 6201)) ^ v8))
                            - 12))();
}

uint64_t sub_1003315A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * (v6 ^ (740 * (v7 != 1765825427)))) - 4))();
}

void sub_1003315FC()
{
  JUMPOUT(0x100331688);
}

uint64_t sub_1003327A8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((((*(_DWORD *)(v0 + 9664) + 72) | 0x89) ^ 0xC3) & 0x7Eu) > v2)
                                          * (((*(_DWORD *)(v0 + 9664) - 4362) | 0xC84) - 3600)) ^ (*(_DWORD *)(v0 + 9664)
                                                                                                 - 215)))
                            - 12))();
}

uint64_t sub_1003327F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v9 + 8 * (v7 | (8 * (v10 < (((v7 - 34) ^ 0xB7) + 63))))))(a1, a2, a3, a4, a5, a6, a7, *(_QWORD *)(v8 + 8448));
}

uint64_t sub_10033282C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                         + 8
                                                                                         * ((43
                                                                                           * (v5 < ((v4 - 52) ^ 0xB7u))) ^ v4))
                                                                             - 12))(a1, a2, a3, a4, *(_QWORD *)(v6 + 8344));
}

uint64_t sub_100332880@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  int v2;
  uint64_t v3;
  char v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * (((((v4 == 21) ^ ((v2 ^ 0x77) - a2 - 119)) & 1)
                                                       * (((v2 ^ 0x2677) - 8518) ^ 0x7A5)) ^ v2 ^ 0x2677)))(a1, 2244);
}

uint64_t sub_1003328C8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((a4 >= ((*(_BYTE *)(v4 + 9664) - 57) ^ 0xD9u))
                                          * (((*(_DWORD *)(v4 + 9664) + 2105) ^ 0xD59) - 5608)) ^ (*(_DWORD *)(v4 + 9664)
                                                                                                 + 2105)))
                            - 4))();
}

uint64_t sub_10033290C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((56 * ((((v3 ^ 0x7D) + 1) ^ ((((((_BYTE)v3 + 26) & 0x9E) - 126) & 0xFEu) > v5)) & 1)) ^ v3))
                                                                                       - 12))(a1, a2, a3, 7287, 2059600627, 10331);
}

uint64_t sub_100332980(uint64_t a1)
{
  int v1;
  unsigned __int8 v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t))(*(_QWORD *)(v3
                                                                            + 8
                                                                            * ((116
                                                                              * (((v2 < 0xEu) ^ v1 ^ 0x37) & 1)) ^ v1))
                                                                - (v1 + 1528)
                                                                + 5016))(a1, &off_1004ECA20, 2235367631);
}

uint64_t sub_1003329E0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((((v0 - 2980) | 0x281) + 3585) ^ 0x188D) * (v1 != 14)) ^ v0))
                            - 12))();
}

uint64_t sub_100332A34()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 - 1114193043) & 0x42693FB1 ^ 0x1E3A) * (v1 != 1765825427)) ^ v0)))();
}

uint64_t sub_100332A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((59 * (v9 >= ((7 * (v7 ^ 0xC9)) ^ 0xC1u))) ^ v7)) - (v7 - 147) + 5507))(a1, a2, a3, a4, 2059600627, a6, a7, v9);
}

uint64_t sub_100332AD4(uint64_t a1)
{
  int v1;
  unsigned __int8 v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t))(*(_QWORD *)(v3
                                                                            + 8
                                                                            * ((79
                                                                              * (v2 < (((v1 - 88) ^ 0xA7) + 117))) ^ v1))
                                                                - 12))(a1, &off_1004ECA20, 2235367631);
}

uint64_t sub_100332B3C(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                 + 8
                                                                                 * ((((((v2 - 2137853667) & 0x7F6D0377)
                                                                                     + 1564) ^ 0x937)
                                                                                   * (v4 == 22)) ^ v2))
                                                                     - 12))(a1, a2, 385908731, 6643);
}

void sub_100332BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_DWORD *)(v9 + 9512) = (((v8 - 1073916095) & 0xC53FB59F) - 889924652) ^ a7;
  *(_QWORD *)(v9 + 6832) = v7 ^ 0xB2C9C9BE4112861DLL;
  *(_DWORD *)(v9 + 9688) = 23;
  JUMPOUT(0x1003244E0);
}

uint64_t sub_100332D48@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (42 * (v2 != a1)))))();
}

void sub_100332D74()
{
  JUMPOUT(0x1002FA0B4);
}

uint64_t sub_100332DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unint64_t v11;

  *(_BYTE *)(v8 + v7) = v11 >> (v9 & (v10 + 111 + ((v10 + a6) & a7) - 4));
  return (*(uint64_t (**)(void))(a4 + 8 * (v10 ^ (2795 * (v7 == -31)))))();
}

uint64_t sub_100332E34(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (int)(((v8 + 8 == ((a1 - a5 + 2301) ^ a8)) * (a1 ^ 0x853D306A ^ v9)) ^ (a1 + 2059598054)))
                            - 4))();
}

uint64_t sub_100332E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((((v5 + v7) & v8) + v9) * (*(_DWORD *)(v6 + 8272) > v4)) ^ v5))
                            - 4))();
}

uint64_t sub_100332EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  return sub_100332DE0(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100332F00(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (int)(((((a1 - a5 + 2301) ^ 0x8DD) == 32) * (a1 ^ 0x853D0085)) ^ (a1 + 2059598054)))
                            - 4))();
}

uint64_t sub_100332F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  uint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v7 + v9) = v12 >> v8;
  v14 = 149;
  if (v10 < 0x20)
    v14 = 21;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((*(_BYTE *)(*(_QWORD *)(v13 + 9704) + v14) == 88)
                                * ((((v11 - 819) | a7) - a6 - 1058) ^ (a5 + 68))) ^ v11)))();
}

uint64_t sub_100332FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a4 + 8 * (v9 | (2 * (v8 + 8 == ((v9 - 753) ^ a8))))))();
}

uint64_t sub_100333010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a4 + 8 * (((((v5 + v7) | v8) + v9) * (*(_DWORD *)(v6 + 3988) > v4)) ^ v5)))();
}

uint64_t sub_100333040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  return sub_100332F98(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100333074@<X0>(int a1@<W1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v8 = (v6 - 2062746054) | 0x301005u;
  *(_BYTE *)(v3 - a3 + 31) = v5 >> v4;
  v9 = (uint64_t (*)(void))(2235371539
                         - v8
                         + *(_QWORD *)(a2 + 8 * ((6412 * (((a3 == 31) ^ (v6 - 87)) & 1)) ^ v6))
                         - 8);
  *(_DWORD *)(v7 + 9464) = 994009857;
  *(_QWORD *)(v7 + 9416) = v8;
  *(_QWORD *)(v7 + 9456) = *(_QWORD *)(v7 + 7048);
  *(_QWORD *)(v7 + 9608) = *(_QWORD *)(v7 + 1800);
  *(_DWORD *)(v7 + 7944) = a1;
  *(_DWORD *)(v7 + 5344) = *(_DWORD *)(v7 + 6072);
  *(_DWORD *)(v7 + 5340) = *(_DWORD *)(v7 + 7616);
  *(_DWORD *)(v7 + 5348) = *(_DWORD *)(v7 + 6084);
  *(_DWORD *)(v7 + 5336) = *(_DWORD *)(v7 + 6080);
  *(_DWORD *)(v7 + 9664) = *(_DWORD *)(v7 + 6976);
  *(_DWORD *)(v7 + 9616) = *(_DWORD *)(v7 + 7096);
  *(_DWORD *)(v7 + 9600) = *(_DWORD *)(v7 + 7020);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 7064);
  *(_DWORD *)(v7 + 9472) = *(_DWORD *)(v7 + 7136);
  *(_DWORD *)(v7 + 4292) = *(_DWORD *)(v7 + 8280);
  *(_DWORD *)(v7 + 5312) = *(_DWORD *)(v7 + 9680);
  return v9();
}

uint64_t sub_10033317C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                                              + 8
                                                              * (((v1 == 24) * ((((v2 | 0x1A) - 1043) | 0x150) + 1850)) ^ (v2 | 0x1A)))
                                                  - 12))(a1, *(unsigned int *)(v3 + 8548));
}

uint64_t sub_1003331BC(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (v6 ^ (9203 * (v5 < a2)))) - (v6 - 707) + 460))();
}

uint64_t sub_1003331EC@<X0>(int a1@<W1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_100333074(a1, a2, a3);
}

uint64_t sub_100333218(int a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  int *v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  _BYTE *v63;
  unsigned int v64;
  unint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  char v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;

  v16 = 1199491225 - *(_DWORD *)(v7 + 8880);
  v17 = -1071645798 - *(_DWORD *)(v7 + 8760);
  v18 = (v11 + 818205836) & 0xCF3B1D7E;
  v19 = *(_DWORD *)(v7 + 7424);
  v20 = v19 + 1161521024;
  v21 = v19 + 1194690812 + v18 + 1091;
  v23 = *(_DWORD *)(v7 + 9664);
  v24 = *(_DWORD *)(v7 + 7584);
  v25 = v23 ^ v24 ^ (v20 - ((2 * v21) & 0xFC0B999A));
  v26 = *(_DWORD *)(v7 + 8764);
  v27 = *(_DWORD *)(v7 + 9504) ^ v26;
  v28 = v5;
  v29 = ((v27 ^ v12 ^ 0xAA0ADD57) - v25) ^ *(_DWORD *)(v7 + 7448);
  v30 = ((v24 ^ 0x1FA3332) + (v27 ^ v21 ^ 0x3C5BCFBF) + 1) ^ ((*(_DWORD *)(v7 + 7552) ^ v26 ^ v21) - v23);
  *(_DWORD *)(v7 + 9640) = (v30 - 1529102335 - ((2 * v30) & 0x49B78002)) ^ v15;
  v31 = *(_DWORD *)(v7 + 7632);
  v32 = *(_DWORD *)(v7 + 7616) - v31;
  v33 = ((*(_DWORD *)(v7 + 7576) ^ v17 ^ *(_DWORD *)(v7 + 9008)) - v31) ^ *(_DWORD *)(v7 + 7640) ^ ((*(_DWORD *)(v7 + 7592) ^ v17 ^ *(_DWORD *)(v7 + 9008))
                                                                                                  - v32);
  v34 = (v6 - (v31 ^ v17 ^ v32)) ^ *(_DWORD *)(v7 + 7648);
  v35 = -*(_DWORD *)(v7 + 9472) - *(_DWORD *)(v7 + 9656);
  v36 = *(_DWORD *)(v7 + 8768);
  v37 = *(_DWORD *)(v7 + 8612);
  v38 = *(_DWORD *)(v7 + 7656);
  v39 = (v38 ^ v36 ^ v35) - v14;
  v40 = *(_DWORD *)(v7 + 8616);
  v41 = (v36 ^ v35 ^ 0xF1378093 ^ v37) - v40;
  v42 = (v36 ^ 0xF1378093 ^ v37 ^ v38) - (v14 ^ v40 ^ v35);
  v43 = v41 ^ a5 ^ v39;
  v44 = v42 ^ a3;
  v45 = *(_DWORD *)(v7 + 8872);
  v46 = v10;
  v47 = (v28 ^ v45 ^ v16) - v10;
  v48 = *(_DWORD *)(v7 + 9384);
  v49 = ((v13 ^ v45 ^ v16) - v48) ^ a1 ^ v47;
  v50 = ((v13 ^ v45 ^ v28) - (v46 ^ v16 ^ v48)) ^ v9;
  v51 = *(_QWORD *)(v7 + 9680);
  v52 = (HIBYTE(v34) ^ 0x63 ^ *(_BYTE *)(v51 + (HIBYTE(v34) ^ 0xAALL))) + 3;
  *(_DWORD *)(v7 + 9728) = v49;
  *(_DWORD *)(v7 + 9672) = v43;
  *(_DWORD *)(v7 + 9688) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9560) + (HIBYTE(v43) ^ 0x26));
  v53 = (v49 >> 17) & 0x80 | (v49 >> 25);
  v54 = v8;
  *(_DWORD *)(v7 + 9736) = ((v53 ^ 0xFFFFFF98) + (v53 ^ 0x7E) + 1) ^ 0xFFFFFFB9 ^ *(unsigned __int8 *)(v8 + (v53 ^ 0x95));
  *(_DWORD *)(v7 + 9664) = v33;
  *(_DWORD *)(v7 + 9696) = v50;
  v55 = (v50 >> 9) & 0x80 | (v50 >> 17) & 0x7F;
  v56 = *(_BYTE *)(v51 + (BYTE2(v33) ^ 0xAALL));
  *(_DWORD *)(v7 + 9680) = (v55 ^ 0x98) + (v55 ^ 0x7E);
  *(_DWORD *)(v7 + 9720) = *(unsigned __int8 *)(v54 + (v55 ^ 0x95));
  LOBYTE(a1) = BYTE2(v33) ^ 0x63 ^ v56;
  v57 = v34;
  v58 = *(_QWORD *)(v7 + 9648);
  LOBYTE(v38) = (((v34 >> 5) & 0xF8 | ((unsigned __int16)v34 >> 13)) ^ 0x52)
              + *(_BYTE *)(v58 + (((v34 >> 5) & 0xF8 | ((unsigned __int16)v34 >> 13)) ^ 0x5ELL))
              + 1;
  LOBYTE(v55) = *(_BYTE *)(v58 + (((v29 >> 5) | (8 * (v29 & 0x1F))) ^ 0x5ELL));
  v59 = *(int **)(v7 + 9216);
  v60 = *(uint64_t **)(v7 + 9088);
  v61 = *v60;
  v62 = *v59 & 0xFFFFFFFFE39FBCB0;
  v63 = *(_BYTE **)(v7 + 8560);
  v64 = -333269657 * ((*(_DWORD *)(*v60 + v62) ^ ((_DWORD)v63 + 3512)) & 0x7FFFFFFF);
  v65 = -333269657 * (v64 ^ HIWORD(v64));
  v66 = (char *)*(&off_1004ECA20 + v11 - 6117) - 8;
  LOBYTE(v46) = v55 + (((v29 >> 5) | (8 * (v29 & 0x1F))) ^ 0x52);
  v67 = (char *)*(&off_1004ECA20 + (v11 ^ 0x184E)) - 12;
  v68 = (char *)*(&off_1004ECA20 + (v11 ^ 0x1F1C)) - 8;
  v63[3512] = v66[v65 >> 24] ^ v67[v65 >> 24] ^ v68[(v65 >> 24) + 5] ^ v65 ^ (-89 * BYTE3(v65)) ^ v52;
  LODWORD(v65) = -333269657 * ((*(_DWORD *)(v61 + v62) ^ ((_DWORD)v63 + 3517)) & 0x7FFFFFFF);
  v69 = -333269657 * (v65 ^ WORD1(v65));
  v63[3517] = v66[v69 >> 24] ^ BYTE2(v43) ^ v67[v69 >> 24] ^ v68[(v69 >> 24) + 5] ^ v69 ^ (-89 * BYTE3(v69));
  LODWORD(v69) = -333269657 * ((*(_DWORD *)(v61 + v62) ^ ((_DWORD)v63 + 3509)) & 0x7FFFFFFF);
  v70 = -333269657 * (v69 ^ WORD1(v69));
  v71 = *(_DWORD *)(v7 + 9640);
  v63[3509] = v66[v70 >> 24] ^ BYTE2(v71) ^ v67[v70 >> 24] ^ v68[(v70 >> 24) + 5] ^ v70 ^ (-89 * BYTE3(v70));
  LODWORD(v70) = -333269657 * ((*(_DWORD *)(v61 + v62) ^ ((_DWORD)v63 + 3524)) & 0x7FFFFFFF);
  v72 = -333269657 * (v70 ^ WORD1(v70));
  v63[3524] = v66[v72 >> 24] ^ HIBYTE(v29) ^ v67[v72 >> 24] ^ v68[(v72 >> 24) + 5] ^ v72 ^ (-89 * BYTE3(v72));
  v73 = *v60;
  v74 = *v59 & 0xFFFFFFFFE39FBCB0;
  LODWORD(v72) = -333269657 * ((*(_DWORD *)(*v60 + v74) ^ ((_DWORD)v63 + 3514)) & 0x7FFFFFFF);
  v75 = -333269657 * (v72 ^ WORD1(v72));
  v63[3514] = v66[v75 >> 24] ^ v67[v75 >> 24] ^ v68[(v75 >> 24) + 5] ^ v75 ^ (-89 * BYTE3(v75)) ^ (109 * (v38 ^ 0x5C));
  LODWORD(v75) = -333269657 * ((*(_DWORD *)(v73 + v74) ^ ((_DWORD)v63 + 3510)) & 0x7FFFFFFF);
  v76 = -333269657 * (v75 ^ WORD1(v75));
  v63[3510] = v66[v76 >> 24] ^ BYTE1(v71) ^ v67[v76 >> 24] ^ v68[(v76 >> 24) + 5] ^ v76 ^ (-89 * BYTE3(v76));
  LODWORD(v76) = -333269657 * ((*(_DWORD *)(v73 + v74) ^ ((_DWORD)v63 + 3513)) & 0x7FFFFFFF);
  v77 = -333269657 * (v76 ^ WORD1(v76));
  v63[3513] = v66[v77 >> 24] ^ BYTE2(v57) ^ v67[v77 >> 24] ^ v68[(v77 >> 24) + 5] ^ v77 ^ (-89 * BYTE3(v77));
  LODWORD(v77) = -333269657 * ((*(_DWORD *)(v73 + v74) ^ ((_DWORD)v63 + 3528)) & 0x7FFFFFFF);
  v78 = -333269657 * (v77 ^ WORD1(v77));
  LODWORD(v74) = *(_DWORD *)(v7 + 9664);
  v63[3528] = v66[v78 >> 24] ^ BYTE3(v74) ^ v67[v78 >> 24] ^ v68[(v78 >> 24) + 5] ^ v78 ^ (-89 * BYTE3(v78));
  v79 = *v60;
  v80 = *v59 & 0xFFFFFFFFE39FBCB0;
  LODWORD(v78) = -333269657 * ((*(_DWORD *)(*v60 + v80) ^ ((_DWORD)v63 + 3527)) & 0x7FFFFFFF);
  v81 = -333269657 * (v78 ^ WORD1(v78));
  v63[3527] = v66[v81 >> 24] ^ v67[v81 >> 24] ^ v68[(v81 >> 24) + 5] ^ v81 ^ (-89 * BYTE3(v81)) ^ (109
                                                                                                 * ((v46 + 1) ^ 0x5C));
  LODWORD(v81) = -333269657 * ((*(_DWORD *)(v79 + v80) ^ ((_DWORD)v63 + 3526)) & 0x7FFFFFFF);
  v82 = -333269657 * (v81 ^ WORD1(v81));
  v63[3526] = v66[v82 >> 24] ^ BYTE1(v29) ^ v67[v82 >> 24] ^ v68[(v82 >> 24) + 5] ^ v82 ^ (-89 * BYTE3(v82));
  LODWORD(v82) = -333269657 * ((*(_DWORD *)(v79 + v80) ^ ((_DWORD)v63 + 3529)) & 0x7FFFFFFF);
  v83 = -333269657 * (v82 ^ WORD1(v82));
  v63[3529] = v66[v83 >> 24] ^ v67[v83 >> 24] ^ v68[(v83 >> 24) + 5] ^ v83 ^ (-89 * BYTE3(v83)) ^ (a1 + 3);
  LODWORD(v83) = -333269657 * ((*(_DWORD *)(v79 + v80) ^ *(_QWORD *)(v7 + 3208)) & 0x7FFFFFFF);
  v84 = -333269657 * (v83 ^ WORD1(v83));
  v63[3508] = v66[v84 >> 24] ^ HIBYTE(v71) ^ v67[v84 >> 24] ^ v68[(v84 >> 24) + 5] ^ v84 ^ (-89 * BYTE3(v84));
  v85 = *v60;
  v86 = *v59 & 0xFFFFFFFFE39FBCB0;
  LODWORD(v84) = -333269657 * ((*(_DWORD *)(*v60 + v86) ^ ((_DWORD)v63 + 3533)) & 0x7FFFFFFF);
  v87 = -333269657 * (v84 ^ WORD1(v84));
  v88 = (char *)*(&off_1004ECA20 + (v11 ^ 0x192A)) - 4;
  v89 = (char *)*(&off_1004ECA20 + v11 - 6232) - 4;
  v90 = (char *)*(&off_1004ECA20 + v11 - 5862) - 4;
  v63[3533] = v88[v87 >> 24] ^ BYTE2(v44) ^ v89[(v87 >> 24) + 2] ^ v90[(v87 >> 24) + 6] ^ v87 ^ (-97 * BYTE3(v87));
  LODWORD(v87) = -333269657 * ((*(_DWORD *)(v85 + v86) ^ ((_DWORD)v63 + 3515)) & 0x7FFFFFFF);
  v91 = -333269657 * (v87 ^ WORD1(v87));
  v63[3515] = v88[v91 >> 24] ^ v89[(v91 >> 24) + 2] ^ v90[(v91 >> 24) + 6] ^ v91 ^ (-97 * BYTE3(v91)) ^ v57;
  LODWORD(v91) = -333269657 * ((*(_DWORD *)(v85 + v86) ^ ((_DWORD)v63 + 3525)) & 0x7FFFFFFF);
  v92 = -333269657 * (v91 ^ WORD1(v91));
  v63[3525] = v88[v92 >> 24] ^ BYTE2(v29) ^ v89[(v92 >> 24) + 2] ^ v90[(v92 >> 24) + 6] ^ v92 ^ (-97 * BYTE3(v92));
  LODWORD(v92) = -333269657 * ((*(_DWORD *)(v85 + v86) ^ ((_DWORD)v63 + 3534)) & 0x7FFFFFFF);
  v93 = -333269657 * (v92 ^ WORD1(v92));
  v63[3534] = v88[v93 >> 24] ^ BYTE1(v44) ^ v89[(v93 >> 24) + 2] ^ v90[(v93 >> 24) + 6] ^ v93 ^ (-97 * BYTE3(v93));
  v94 = *v60;
  v95 = *v59 & 0xFFFFFFFFE39FBCB0;
  LODWORD(v93) = -333269657 * ((*(_DWORD *)(*v60 + v95) ^ ((_DWORD)v63 + 3516)) & 0x7FFFFFFF);
  v96 = -333269657 * (v93 ^ WORD1(v93));
  LOBYTE(v23) = *(_DWORD *)(v7 + 9680) + 1;
  v63[3516] = v88[v96 >> 24] ^ v89[(v96 >> 24) + 2] ^ v90[(v96 >> 24) + 6] ^ v96 ^ (-97 * BYTE3(v96)) ^ ((*(_DWORD *)(v7 + 9688) ^ 0x60) + 3);
  LODWORD(v96) = -333269657 * ((*(_DWORD *)(v94 + v95) ^ ((_DWORD)v63 + 3518)) & 0x7FFFFFFF);
  v97 = -333269657 * (v96 ^ WORD1(v96));
  LOBYTE(v96) = v23 ^ 0xB9;
  LODWORD(v86) = *(_DWORD *)(v7 + 9672);
  v63[3518] = v88[v97 >> 24] ^ BYTE1(v86) ^ v89[(v97 >> 24) + 2] ^ v90[(v97 >> 24) + 6] ^ v97 ^ (-97 * BYTE3(v97));
  LODWORD(v97) = -333269657 * ((*(_DWORD *)(v94 + v95) ^ ((_DWORD)v63 + 3532)) & 0x7FFFFFFF);
  v98 = -333269657 * (v97 ^ WORD1(v97));
  v63[3532] = v88[v98 >> 24] ^ HIBYTE(v44) ^ v89[(v98 >> 24) + 2] ^ v90[(v98 >> 24) + 6] ^ v98 ^ (-97 * BYTE3(v98));
  LODWORD(v98) = -333269657 * ((*(_DWORD *)(v94 + v95) ^ ((_DWORD)v63 + 3539)) & 0x7FFFFFFF);
  v99 = -333269657 * (v98 ^ WORD1(v98));
  v100 = *(_DWORD *)(v7 + 9696);
  v63[3539] = v88[v99 >> 24] ^ v89[(v99 >> 24) + 2] ^ v90[(v99 >> 24) + 6] ^ v99 ^ (-97 * BYTE3(v99)) ^ v100;
  v101 = *v60;
  v102 = *v59 & 0xFFFFFFFFE39FBCB0;
  LODWORD(v99) = -333269657 * ((*(_DWORD *)(*v60 + v102) ^ ((_DWORD)v63 + 3535)) & 0x7FFFFFFF);
  v103 = -333269657 * (v99 ^ WORD1(v99));
  LOBYTE(v96) = v96 ^ *(_DWORD *)(v7 + 9720);
  v63[3535] = v88[v103 >> 24] ^ v89[(v103 >> 24) + 2] ^ v90[(v103 >> 24) + 6] ^ v103 ^ (-97 * BYTE3(v103)) ^ v44;
  LODWORD(v103) = -333269657 * ((*(_DWORD *)(v101 + v102) ^ ((_DWORD)v63 + 3511)) & 0x7FFFFFFF);
  v104 = -333269657 * (v103 ^ WORD1(v103));
  v63[3511] = v88[v104 >> 24] ^ v89[(v104 >> 24) + 2] ^ v90[(v104 >> 24) + 6] ^ v104 ^ (-97 * BYTE3(v104)) ^ v71;
  LODWORD(v104) = -333269657 * ((*(_DWORD *)(v101 + v102) ^ ((_DWORD)v63 + 3530)) & 0x7FFFFFFF);
  v105 = -333269657 * (v104 ^ WORD1(v104));
  v63[3530] = v88[v105 >> 24] ^ BYTE1(v74) ^ v89[(v105 >> 24) + 2] ^ v90[(v105 >> 24) + 6] ^ v105 ^ (-97 * BYTE3(v105));
  LODWORD(v105) = -333269657 * ((*(_DWORD *)(v101 + v102) ^ ((_DWORD)v63 + 3536)) & 0x7FFFFFFF);
  v106 = -333269657 * (v105 ^ WORD1(v105));
  v63[3536] = v88[v106 >> 24] ^ HIBYTE(v100) ^ v89[(v106 >> 24) + 2] ^ v90[(v106 >> 24) + 6] ^ v106 ^ (-97 * BYTE3(v106));
  v107 = *v60;
  v108 = *v59 & 0xFFFFFFFFE39FBCB0;
  LODWORD(v106) = -333269657 * ((*(_DWORD *)(*v60 + v108) ^ ((_DWORD)v63 + 3521)) & 0x7FFFFFFF);
  v109 = -333269657 * (v106 ^ WORD1(v106));
  LODWORD(v95) = *(_DWORD *)(v7 + 9728);
  v63[3521] = v88[v109 >> 24] ^ BYTE2(v95) ^ v89[(v109 >> 24) + 2] ^ v90[(v109 >> 24) + 6] ^ v109 ^ (-97 * BYTE3(v109));
  LODWORD(v109) = -333269657 * ((*(_DWORD *)(v107 + v108) ^ ((_DWORD)v63 + 3537)) & 0x7FFFFFFF);
  v110 = -333269657 * (v109 ^ WORD1(v109));
  v63[3537] = v88[v110 >> 24] ^ v89[(v110 >> 24) + 2] ^ v90[(v110 >> 24) + 6] ^ v110 ^ (-97 * BYTE3(v110)) ^ (v96 + 10);
  LODWORD(v96) = -333269657 * ((*(_DWORD *)(v107 + v108) ^ ((_DWORD)v63 + 3520)) & 0x7FFFFFFF);
  v111 = -333269657 * (v96 ^ WORD1(v96));
  LOBYTE(v111) = v88[v111 >> 24] ^ v89[(v111 >> 24) + 2] ^ v90[(v111 >> 24) + 6] ^ v111 ^ (-97 * BYTE3(v111));
  *(_DWORD *)(v7 + 9256) = -760843624;
  v63[3520] = v111 ^ (*(_DWORD *)(v7 + 9736) + 10);
  LODWORD(v111) = -333269657 * ((*(_DWORD *)(v107 + v108) ^ ((_DWORD)v63 + 3531)) & 0x7FFFFFFF);
  v112 = -333269657 * (v111 ^ WORD1(v111));
  v63[3531] = v88[v112 >> 24] ^ v89[(v112 >> 24) + 2] ^ v90[(v112 >> 24) + 6] ^ v112 ^ (-97 * BYTE3(v112)) ^ v74;
  v113 = *v60;
  v114 = *v59 & 0xFFFFFFFFE39FBCB0;
  LODWORD(v107) = -333269657 * ((*(_DWORD *)(*v60 + v114) ^ ((_DWORD)v63 + 3522)) & 0x7FFFFFFF);
  v115 = -333269657 * (v107 ^ WORD1(v107));
  v116 = (uint64_t)*(&off_1004ECA20 + v11 - 6062);
  v117 = (uint64_t)*(&off_1004ECA20 + v11 - 6936);
  v118 = (char *)*(&off_1004ECA20 + (int)(v11 & 0xA3360117)) - 8;
  v63[3522] = *(_BYTE *)(v116 + (v115 >> 24)) ^ BYTE1(v95) ^ *(_BYTE *)((v115 >> 24) + v117 + 1) ^ v118[(v115 >> 24) + 2] ^ v115 ^ (-87 * BYTE3(v115));
  LODWORD(v115) = -333269657 * ((*(_DWORD *)(v113 + v114) ^ ((_DWORD)v63 + 3523)) & 0x7FFFFFFF);
  v119 = -333269657 * (v115 ^ WORD1(v115));
  v63[3523] = *(_BYTE *)(v116 + (v119 >> 24)) ^ *(_BYTE *)((v119 >> 24) + v117 + 1) ^ v118[(v119 >> 24) + 2] ^ v119 ^ (-87 * BYTE3(v119)) ^ v95;
  LODWORD(v119) = -333269657 * ((*(_DWORD *)(v113 + v114) ^ ((_DWORD)v63 + 3538)) & 0x7FFFFFFF);
  v120 = -333269657 * (v119 ^ WORD1(v119));
  v63[3538] = *(_BYTE *)(v116 + (v120 >> 24)) ^ BYTE1(v100) ^ *(_BYTE *)((v120 >> 24) + v117 + 1) ^ v118[(v120 >> 24) + 2] ^ v120 ^ (-87 * BYTE3(v120));
  LODWORD(v113) = -333269657 * ((*(_DWORD *)(v113 + v114) ^ ((_DWORD)v63 + 3519)) & 0x7FFFFFFF);
  v121 = -333269657 * (v113 ^ WORD1(v113));
  *(_QWORD *)(v7 + 6128) = v116;
  LOBYTE(v120) = *(_BYTE *)(v116 + (v121 >> 24));
  *(_QWORD *)(v7 + 9488) = v117;
  LOBYTE(v120) = v120 ^ *(_BYTE *)((v121 >> 24) + v117 + 1);
  *(_QWORD *)(v7 + 9480) = v118;
  v63[3519] = v120 ^ v118[(v121 >> 24) + 2] ^ v121 ^ (-87 * BYTE3(v121)) ^ v86;
  v122 = *(_QWORD *)(v7 + 12336);
  v123 = *(_QWORD *)(v7 + 8248);
  *(_QWORD *)(v7 + 7232) = v123 + 0x615AA8BF64E20AFALL;
  v124 = (_BYTE *)(v122 - 0x194C6113CD9FFCD4);
  *(_QWORD *)(v7 + 6072) = v123 + 0x615AA8BF64E20B0ALL;
  v125 = *(_BYTE **)(v7 + 9208);
  LOBYTE(v118) = (*v124 - 104 - ((2 * *v124) & 0x30)) ^ 0x98;
  LOBYTE(v118) = (_BYTE)v118 - 104 - ((((v11 - 116) & 0x7E) - 68) & (2 * (_BYTE)v118));
  v125[40] = v118 ^ 0x98 ^ *(_BYTE *)(v122 - 0x194C6113CD9FFCD4);
  *v125 = v118 ^ 0x98;
  v126 = *(_BYTE *)(v122 - 0x194C6113CD9FFCD3);
  LOBYTE(v118) = v118 ^ (v126 - 104 - ((2 * v126) & 0x30));
  LOBYTE(v118) = (_BYTE)v118 - 104 - ((2 * (_BYTE)v118) & 0x30);
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 41) = v118 ^ 0x98 ^ v126;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 1) = v118 ^ 0x98;
  LOBYTE(v90) = v118 ^ *(_BYTE *)(v122 - 0x194C6113CD9FFCD2);
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 42) = v118 ^ 0x98;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 2) = v90 ^ 0x98;
  v127 = *(_BYTE *)(v122 - 0x194C6113CD9FFCD1);
  LOBYTE(v88) = (v127 - 104 - ((2 * v127) & 0x30)) ^ v90;
  LOBYTE(v88) = (_BYTE)v88 - 104 - ((2 * (_BYTE)v88) & 0x30);
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 43) = v88 ^ 0x98 ^ v127;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 3) = v88 ^ 0x98;
  LOBYTE(v90) = *(_BYTE *)(v122 - 0x194C6113CD9FFCD0);
  LOBYTE(v88) = v88 ^ ((_BYTE)v90 - 104 - ((2 * (_BYTE)v90) & 0x30));
  LOBYTE(v88) = (_BYTE)v88 - 104 - ((2 * (_BYTE)v88) & 0x30);
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 44) = v88 ^ 0x98 ^ v90;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 4) = v88 ^ 0x98;
  v128 = *(_BYTE *)(v122 - 0x194C6113CD9FFCCFLL);
  LOBYTE(v88) = v88 ^ (v128 - 104 - ((2 * v128) & 0x30));
  LOBYTE(v88) = (_BYTE)v88 - 103 + ~((2 * (_BYTE)v88) & 0x30);
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 45) = v88 ^ 0x98 ^ v128;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 5) = v88 ^ 0x98;
  v129 = (((~(*(unsigned __int8 *)(v122 - 0x194C6113CD9FFCCELL) >> 2) | 0xFFFFFFF7)
         + (*(unsigned __int8 *)(v122 - 0x194C6113CD9FFCCELL) >> 3)
         + 37) ^ 0x24)
       + 32 * *(unsigned __int8 *)(v122 - 0x194C6113CD9FFCCELL);
  v130 = ((((~(*(unsigned __int8 *)(v122 - 0x194C6113CD9FFCCELL) >> 2) | 0xF7)
                           + (*(_BYTE *)(v122 - 0x194C6113CD9FFCCELL) >> 3)
                           + 37) ^ 0x24)
                         + 32 * *(_BYTE *)(v122 - 0x194C6113CD9FFCCELL)) ^ 0xD0;
  v131 = (uint64_t)*(&off_1004ECA20 + (int)(v18 - 3169));
  *(_QWORD *)(v7 + 9568) = v131 + 811;
  LOBYTE(v130) = (*(_BYTE *)(v131 + 811 + v130) ^ v129 ^ 0xD6) + 61;
  LOBYTE(v120) = (v130 - 104 - ((2 * v130) & 0x30)) ^ v88;
  LOBYTE(v120) = v120 - 104 - ((2 * v120) & 0x30);
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 46) = v120 ^ 0x98 ^ v130;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 6) = v120 ^ 0x98;
  LOBYTE(v100) = *(_BYTE *)(v122 - 0x194C6113CD9FFCCDLL);
  LOBYTE(v120) = v120 ^ ((v100 ^ 0x69) - 103 + ~((2 * (v100 ^ 0x69)) & 0x30));
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 47) = v100 ^ 0x98 ^ v120 ^ 0xF1;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 7) = v120 ^ 0x69;
  LOBYTE(v100) = *(_BYTE *)(v122 - 0x194C6113CD9FFCCCLL);
  LOBYTE(v122) = v120 ^ 0xF1 ^ (v100 - 104 - ((2 * v100) & 0x30));
  LOBYTE(v122) = v122 - 104 - ((2 * v122) & 0x30);
  v125[48] = v122 ^ 0x98 ^ v100;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 8) = v122 ^ 0x98;
  LOBYTE(v130) = v124[9];
  LOBYTE(v122) = v122 ^ ((v130 ^ 0x89) - 103 + ~((2 * (v130 ^ 0x89)) & 0x30));
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 49) = v130 ^ 0x98 ^ v122 ^ 0x11;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 9) = v122 ^ 0x89;
  LOBYTE(v120) = v124[10];
  LOBYTE(v100) = v122 ^ 0x11 ^ (v120 - 104 - ((2 * v120) & 0x30));
  LOBYTE(v100) = v100 - 104 - ((2 * v100) & 0x30);
  LOBYTE(v130) = v100 ^ 0x98;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 50) = v100 ^ 0x98 ^ v120;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 10) = v100 ^ 0x98;
  LOBYTE(v100) = v100 ^ v124[11];
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 51) = v130;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 11) = v100 ^ 0x98;
  LOBYTE(v120) = v124[12];
  LOBYTE(v100) = v100 ^ (v120 - 104 - ((2 * v120) & 0x30));
  LOBYTE(v100) = v100 - 104 - ((2 * v100) & 0x30);
  LOBYTE(v130) = v100 ^ 0x98;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 52) = v100 ^ 0x98 ^ v120;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 12) = v100 ^ 0x98;
  LOBYTE(v100) = v100 ^ v124[13];
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 53) = v130;
  LOBYTE(v120) = v100 ^ 0x98;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 13) = v100 ^ 0x98;
  LOBYTE(v100) = v100 ^ v124[14];
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 54) = v120;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 14) = v100 ^ 0x98;
  LOBYTE(v130) = v124[15];
  LOBYTE(v100) = v100 ^ (v130 - 104 - ((2 * v130) & 0x30));
  LOBYTE(v118) = v100 - 104 - ((2 * v100) & 0x30);
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 55) = v118 ^ 0x98 ^ v130;
  *(_QWORD *)(v7 + 9672) = v131 - 8;
  *(_BYTE *)(*(_QWORD *)(v7 + 9208) + 15) = v118 ^ 0x98;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (int)(v18 ^ 0x161D)) - 4))(2773280048);
}

uint64_t sub_1003348D8@<X0>(char a1@<W3>, int a2@<W6>, uint64_t a3@<X7>, int a4@<W8>)
{
  char v4;
  unsigned int v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  char v15;
  unsigned int v16;

  v11 = v4 ^ v8;
  v12 = (a2 + ((a4 - 1928315239) & 0x72EFCFFD) - 4025) ^ v7;
  v13 = 32
      - v12
      - ((v7 & 0xBAD01179 ^ 0x28500161)
       + (v7 & 0xBAD01179 ^ 0x92801018)
       + ((32 - v12) & 0x452FEE88))
      - ((~(2 * (32 - v12)) + 32 - v12) & 0x452FEE88);
  v14 = *(unsigned __int8 *)(a3 + v13 - (((v13 * (unint64_t)v5) >> 32) >> 6) * v6);
  v15 = *(_BYTE *)(a3 + v13 + 40 - ((((v13 + 40) * (unint64_t)v5) >> 32) >> 6) * v6) ^ v14;
  *(_QWORD *)(v9 + 9736) = v14;
  v16 = ((v13 - 201382090 - ((2 * v13) & 0xE7FE4E6C)) ^ 0xF3FF2736) + 40;
  *(_BYTE *)(a3 + v16 - (((v16 * (unint64_t)v5) >> 32) >> 6) * v6) = (v11
                                                                                         - v14
                                                                                         + v15
                                                                                         + a2
                                                                                         - ((2 * (v11 - v14 + v15)) & 0x30)) ^ a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                        + 8
                                        * ((580 * (((a2 + v12 - ((2 * v12 + 2) & 0xA54CE530) + 1) ^ v10) < 0x20)) ^ a4))
                            - 4))();
}

uint64_t sub_100334A20@<X0>(int a1@<W0>, char a2@<W4>, int a3@<W6>, uint64_t a4@<X7>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  char v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  char v18;
  unsigned int v19;

  v12 = v8 ^ v7;
  v13 = a1 ^ 0x2D598D67;
  v14 = *(_BYTE *)(a4 + ((a1 ^ 0x2D598D67u) + 72) % 0x50);
  v13 += 32;
  v15 = v9 - ((v5 + ((a5 + 2106532492) & 0x8270FCF9) - 8356) & (a5 ^ 0xA54CE412)) + 2;
  v16 = *(unsigned __int8 *)(a4 + v13 % 0x50);
  *(_QWORD *)(v10 + 9728) = v16;
  v17 = v14 - v16 + 2 * (v16 & ~v14);
  v18 = v17 + a3 - (a2 & (2 * v17));
  v19 = (v15 & 0x28 ^ 8)
      + (((v6 ^ 0x66666666) + 62) & 0x28)
      + (((v12 ^ a3) + v13 - v16 - 201382090 - ((2 * ((v12 ^ a3) + v13 - v16)) & 0xE7FE4E6C)) ^ 0xF3FF2736);
  if (v19 > 0x4F)
    v19 = (v19 - 80) % 0x50;
  *(_BYTE *)(a4 + v19) = v18 ^ 0x98;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v10 + 9744) + 8 * ((7852 * ((v15 ^ v11) < 0x20)) ^ a5)) - 4))();
}

uint64_t sub_100334B60(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  char v13;
  char v14;
  int v15;
  _QWORD *v16;
  int v17;
  char v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  int v26;

  v18 = a1 ^ v14;
  v19 = (a7 + 35 * (v9 ^ 0x20DB) - 4025) ^ v15;
  v20 = *(unsigned __int8 *)(a8 + 71 - v19 - ((((71 - v19) * (unint64_t)v12) >> 32) >> 6) * v11);
  v21 = v16[1101];
  v19 = 31 - v19;
  v22 = *(unsigned __int8 *)(a8 + v19 - (((v19 * (unint64_t)v12) >> 32) >> 6) * v11);
  v23 = ((*(unsigned __int8 *)(v21
                             + ((((v22 >> 1) - (v22 & 0x48) + 36) | (((_BYTE)v22 << 7)
                                                                                                  - 39) ^ 0xD9) ^ 0xD1))
        + 91) ^ 0x7Fu)
      - 40;
  v24 = ((((*(_BYTE *)(v21 + ((v9 + 122) ^ 0xD7u ^ ((v20 >> 1) | ((_BYTE)v20 << 7))))
          + 91) ^ 0x7F)
        - 40) ^ v22)
      - v22;
  v25 = a7 + v8 - ((v10 + 6) & 0xA54CE530) + 3;
  v16[1215] = v23;
  v16[1213] = v22;
  v26 = v19
      + 2087589119 * (v22 - v23)
      - 201382090
      - ((2 * (v19 + 2087589119 * (v22 - v23))) & 0xE7FE4E6C);
  LOBYTE(v19) = ((v24 + a7 - ((2 * v24) & 0x30)) ^ a7) + v18;
  *(_BYTE *)(a8
           + (v26 ^ 0xF3FF2736)
           + 40
           - (((((v26 ^ 0xF3FF2736) + 40) * (unint64_t)v12) >> 32) >> 6) * v11) = (v19 + a7 - ((2 * v19) & 0x30)) ^ v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16[1218] + 8 * (v9 ^ (27 * ((v25 ^ v17) < 0x20)))) - 12))();
}

uint64_t sub_100334CF0@<X0>(int a1@<W1>, int a2@<W6>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v9 = (v4 ^ 0x2D598D67) + a4 + 3735;
  v10 = *(_BYTE *)(a3 + (v9 - 3953) % 0x50);
  v9 -= 3993;
  v11 = *(unsigned __int8 *)(a3 + v9 % 0x50);
  *(_QWORD *)(v7 + 9696) = v11;
  *(_BYTE *)(a3
           + ((((v6 ^ v5 ^ a2) - (_DWORD)v11 + v9 - 201382090 - ((2 * ((v6 ^ v5 ^ a2) - (_DWORD)v11 + v9)) & 0xE7FE4E6C)) ^ 0xF3FF2736)
            + 40)
           % 0x50) = (v11 ^ -(char)v11 ^ (v10 - (v11 ^ v10))) + v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * (a4 ^ (3891 * (((a2 + (v4 ^ a2) - ((2 * (v4 ^ a2) + 2) & a1) + 1) ^ v8) < 0x20))))
                            - 4))();
}

uint64_t sub_100334DDC@<X0>(int a1@<W6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  char v7;
  int v8;
  char v9;
  _QWORD *v10;
  int v11;
  char v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;

  v12 = (a1 + v9 - ((2 * v9) & 0x30)) ^ v7;
  v13 = (-201382090 - (v8 ^ a1) - ((62 - ((v8 ^ a1) << (((a3 + 102) | 0x31) ^ 0xB8))) & 0xE7FE4E6C) + 31) ^ 0xF3FF2736;
  v14 = v13 + 40 - ((((v13 + 40) * (unint64_t)v5) >> 32) >> 6) * v3;
  v15 = *(unsigned __int8 *)(a2 + v13 - (((v13 * (unint64_t)v5) >> 32) >> 6) * v3);
  v16 = ((*(unsigned __int8 *)(v10[1196]
                             + ((((*(_BYTE *)(a2 + v14) >> 3) - ((*(_BYTE *)(a2 + v14) >> 2) & 8) + 36) ^ 0x24 | (((*(_BYTE *)(a2 + v14) << 6) & 0x80) + 32 * *(_BYTE *)(a2 + v14) - 39) ^ 0xD9u) ^ 0xD0)) ^ (((*(unsigned __int8 *)(a2 + v14) >> 3) - ((*(unsigned __int8 *)(a2 + v14) >> 2) & 8) + 36) ^ 0x24 | (((*(unsigned __int8 *)(a2 + v14) << 6) & 0x3F80) + 32 * *(unsigned __int8 *)(a2 + v14) - 39) ^ 0xFFFFFFD9) ^ 0xD6)
       + 61) ^ v15;
  v10[1211] = v15;
  *(_BYTE *)(a2 + v14) = (v15 - v12 + v16 + a1 - ((2 * (v15 - v12 + v16)) & 0x30)) ^ 0x98;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10[1218]
                                        + 8 * (a3 | (6672 * (((v6 - ((v4 + 4) & 0xA54CE530) + 2) ^ v11) < 0x20))))
                            - 4))();
}

uint64_t sub_100334F20@<X0>(int a1@<W6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  char v6;
  int v7;
  int v8;
  _QWORD *v9;
  int v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  char v18;
  _BOOL4 v19;

  v11 = ((a3 + 3735) ^ 0xF99) + (v3 ^ 0x2D598D67);
  v12 = *(_BYTE *)(a2 + (v11 + 40) % 0x50);
  v13 = *(unsigned __int8 *)(a2 + v11 % ((a3 + 8070) ^ 0x20F8u));
  v14 = *(unsigned __int8 *)(v9[1190]
                           + ((((v13 >> 1) - (v13 & 0x48) + 36) | (((_BYTE)v13 << 7) - 39) ^ 0xD9) ^ 0xD5)) ^ 0xFFFFFFCE;
  v15 = v14 - 2 * ((v14 + 24) & 0x2F ^ v14 & 4) + 3;
  v9[1208] = v15 ^ 0x2Bu;
  v16 = v15 ^ 0x2B;
  v17 = -2041676655 * v16;
  v9[1210] = v13;
  v18 = (v15 ^ (v12 - ((2 * v12) & 0x56) + 43)) - v13;
  LOBYTE(v16) = ((v18 - 104 - ((2 * v18) & 0x30)) ^ 0x98) + v16;
  *(_BYTE *)(v9[1151] + ((v11 ^ v17 ^ (-2041676655 * (v8 ^ v7 ^ 0xD2A67298))) + 40) % 0x50) = (v16
                                                                                             - 104
                                                                                             - ((2 * v16) & 0x30)) ^ v6;
  v19 = ((a1 + v4 - ((v5 + 6) & 0xA54CE530) + 3) ^ v10) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9[1218] + 8 * (a3 | v19 | (16 * v19))) - 4))();
}

uint64_t sub_1003350B4(char a1, int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  char v11;
  int v12;
  unsigned int v13;
  _QWORD *v14;
  int v15;
  int v16;
  unsigned int v17;
  char v18;
  char v19;
  char v20;
  int v21;
  uint64_t v22;
  unsigned int v23;

  v16 = (a3 ^ 0x2D598D67)
      - 201382090
      - ((((a3 ^ 0xFFFFFFFF2D598D67) << ((v9 ^ 0x11u) + 72)) + 64) & ((v9 - 8070) ^ 0xE7FE4F4E))
      + 32;
  v17 = *(unsigned __int8 *)(a8
                           + (v16 ^ 0xF3FF2736)
                           - ((((v16 ^ 0xF3FF2736) * (unint64_t)v13) >> 32) >> 6) * v12);
  v18 = a4 ^ v11;
  v19 = v17 ^ *(_BYTE *)(a8
                       + (v16 ^ 0xF3FF2736)
                       + 40
                       - (((((v16 ^ 0xF3FF2736) + 40) * (unint64_t)v13) >> 32) >> 6) * v12);
  v20 = v19 - v17 + a7 - ((2 * (v19 - v17)) & 0x30);
  v21 = *(unsigned __int8 *)(v14[1190]
                           + ((((v17 >> 1) - (v17 & 0xB2) - 39) ^ a1 | ((_BYTE)v17 << 7)) ^ 0xF1)) ^ v10;
  v22 = (v21 - 2 * ((v21 + 24) & 0x1A ^ v21 & 2) - 16) ^ 0x18u;
  v14[1207] = v22;
  v23 = (v16 ^ (-1793982787 * v17) ^ 0xF3FF2736 ^ (-1793982787 * v22)) + 40;
  *(_BYTE *)(a8 + v23 - (((v23 * (unint64_t)v13) >> 32) >> 6) * v12) = ((v20 ^ a7)
                                                                                           + v18
                                                                                           + a7
                                                                                           - ((2 * ((v20 ^ a7) + v18)) & 0x30)) ^ 0x98;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14[1218]
                                        + 8 * (v9 ^ (412 * (((a2 - ((v8 + 8) & 0xA54CE530) + 4) ^ v15) < 0x20))))
                            - 12))();
}

uint64_t sub_100335244@<X0>(int a1@<W6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  char v13;
  uint64_t v14;

  v11 = v6 ^ a3;
  v12 = (v7 ^ 0x2D598D67) + 32;
  v13 = *(_BYTE *)(a2 + ((v7 ^ 0x2D598D67u) + 72) % (((v5 + 3590) | 0x91) ^ 0xFE9u));
  v14 = *(unsigned __int8 *)(a2 + v12 % 0x50);
  *(_QWORD *)(v9 + 9648) = v14;
  *(_BYTE *)(a2
           + (((v12
              + 943172321 * ((v11 ^ a1) - (_DWORD)v14)
              - 201382090
              - ((2 * (v12 + 943172321 * ((v11 ^ a1) - (_DWORD)v14))) & 0xE7FE4E6C)) ^ 0xF3FF2736)
            + 40)
           % 0x50) = v14 ^ v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                        + 8 * (v5 | (73 * (((a1 + v3 - ((v4 + 10) & v8) + 5) ^ v10) < 0x20))))
                            - 4))();
}

uint64_t sub_100335324@<X0>(int a1@<W6>, uint64_t a2@<X7>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  char v6;
  char v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;

  v11 = (a1 + v7 - ((2 * v7) & 0x30)) ^ v6;
  v12 = ((a3 ^ 0x2D598D67)
       - 2 * (((a3 ^ 0x2D598D67) + 32) & 0x73FF273F ^ (a3 ^ 0x2D598D67) & 9)
       + (((v5 + 3302) | 0x1B1) ^ 0xF3FF28CE)
       - 33) ^ 0xF3FF2736;
  v13 = v12 + 40 - ((((v12 + 40) * (unint64_t)v3) >> 32) >> 6) * v4;
  v14 = *(unsigned __int8 *)(a2 + v12 - (((v12 * (unint64_t)v3) >> 32) >> 6) * v4);
  LOBYTE(v12) = v14 ^ *(_BYTE *)(a2 + v13);
  *(_QWORD *)(v9 + 9640) = v14;
  *(_BYTE *)(a2 + v13) = (v14 - v11 + v12 + 23 - ((2 * (v14 - v11 + v12)) & 0x2E)) ^ 0x17;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                        + 8
                                        * (v5 ^ (667 * (((a1 + (a3 ^ a1) - ((2 * (a3 ^ a1) + 2) & v8) + 1) ^ v10) < 0x20))))
                            - 4))();
}

uint64_t sub_10033542C@<X0>(int a1@<W6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  int v22;

  v10 = v4 ^ v6;
  v11 = (-201382090 - (v7 ^ a1) - ((((v5 - 114) | 0xF09) - 2 * (v7 ^ a1) - 3961) & 0xE7FE4E6C) + 32) ^ 0xF3FF2736;
  v12 = v11 - 1;
  v13 = *(_BYTE *)(a2 + (v11 + 39) % 0x50);
  v14 = *(unsigned __int8 *)(a2 + (v11 - 1) % 0x50);
  v15 = *(unsigned __int8 *)(v8[1203] + ((v14 + 18) ^ 0x47));
  v16 = ((v15 >> 2) | (v15 << 6)) - ((v15 >> 1) & 0x70) + 56;
  v17 = v16 ^ (4 * v16) ^ (2 * v16) ^ 0x60;
  v18 = ((v17 >> 4) | (16 * v17)) - ((2 * ((v17 >> 4) | (16 * v17))) & 0x70) + 56;
  v19 = *(unsigned __int8 *)(v8[1190]
                           + ((((v14 >> 1) - (v14 & 0xB2) - 39) ^ 0xD9u | ((_BYTE)v14 << 7)) ^ 0xF1));
  v20 = a3 - ((v3 + 4) & 0xA54CE530) + 2;
  v21 = ((v19 ^ 0xFFFFFFCE) + ~(2 * (((v19 ^ 0xFFFFFFCE) + 88) & 0x4B ^ v19 & 1)) + 35) ^ 0x4A;
  v22 = ((v19 ^ 0xCE) + ~(2 * (((v19 ^ 0xCE) + 88) & 0x4B ^ v19 & 1)) + 35) ^ 0x4A;
  v8[1202] = v21;
  v8[1204] = v18 ^ 0x38u;
  *(_BYTE *)(a2
           + (((v12
              + 1019232695 * ((v10 ^ 0x49C78117) - v22)
              - 201382090
              - ((2 * (v12 + 1019232695 * ((v10 ^ 0x49C78117) - v22))) & 0xE7FE4E6C)) ^ 0xF3FF2736)
            + 40)
           % 0x50) = ((v21 ^ v13) - v22 + (v18 ^ 0x38) - 104 - ((2 * ((v21 ^ v13) - v22 + (v18 ^ 0x38))) & 0x30)) ^ 0x98;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8[1218] + 8 * (v5 ^ (5409 * ((v20 ^ v9) < 0x20)))) - 4))();
}

uint64_t sub_100335640(char a1, int a2, uint64_t a3, char a4, uint64_t a5, char a6, int a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  char v11;
  char v12;
  unsigned int v13;
  int v14;
  _QWORD *v15;
  int v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  unsigned int v23;

  v17 = a6 ^ a1;
  v18 = (a2 ^ 0x2D598D67) + 32;
  v19 = *(unsigned __int8 *)(a8 + v18 - (((v18 * (unint64_t)v13) >> 32) >> 6) * v14);
  v20 = ((*(unsigned __int8 *)(v15[1101]
                             + (((v19 >> 1) | ((_BYTE)v19 << 7)) ^ ((((v9 - 110) ^ v11) & (v11 ^ a4))
                                                                                   + 253) ^ 8))
        + 91) ^ 0x7Fu)
      - 40;
  v21 = a7 + v10 - ((v8 + 6) & 0xA54CE530) + 3;
  v22 = (-61
       * (v19 ^ *(unsigned __int8 *)(a8
                                   + (a2 ^ 0x2D598D67)
                                   + 72
                                   - (((((a2 ^ 0x2D598D67u) + 72) * (unint64_t)v13) >> 32) >> 6)
                                   * v14))) ^ *(unsigned __int8 *)(v15[1200]
                                                                 + ((-61
                                                                                    * (v19 ^ *(_BYTE *)(a8 + (a2 ^ 0x2D598D67) + 72 - (((((a2 ^ 0x2D598D67u) + 72) * (unint64_t)v13) >> 32) >> 6) * v14))) ^ 0x36));
  v15[1201] = v20;
  v23 = ((v18
        - 1105343205 * (v20 - v19)
        - 201382090
        - ((2 * (v18 - 1105343205 * (v20 - v19))) & 0xE7FE4E6C)) ^ 0xF3FF2736)
      + 40;
  LOBYTE(v22) = (v17 ^ 0x70)
              + v19
              + ((((2 * (v22 ^ 0xC1) - ((4 * v22) & 0x48)) & 0xFE | (((v22 ^ 0xFFFFFFC1) & 0x80) != 0)) + 36) ^ 0x24)
              + 1;
  *(_BYTE *)(a8 + v23 - (((v23 * (unint64_t)v13) >> 32) >> 6) * v14) = (v22
                                                                                           - 104
                                                                                           - ((2 * v22) & 0x30)) ^ v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15[1218] + 8 * (v9 | (4625 * ((v21 ^ v16) < 0x20)))) - 4))();
}

uint64_t sub_1003357C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  char v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  char v26;
  char v27;

  v17 = (a4 ^ 0x2D598D67) + 32;
  v18 = *(_BYTE *)(a8 + ((a4 ^ 0x2D598D67u) + 72) % (v14 ^ 0xFE9u));
  v19 = *(unsigned __int8 *)(a8 + v17 % 0x50);
  v20 = v11 - ((v8 + 8) & v9) + 4;
  v21 = v17 - (v15 ^ a6 ^ 0x49C78117);
  v22 = *(unsigned __int8 *)(*(_QWORD *)(v13 + 8152) + ((v19 * v12) ^ 0xCELL))
      + ((v19 * v12) ^ 0xFFFFFFA7)
      + 98;
  v23 = (((2 * v22) ^ 0xFFFFFF84) - ((4 * v22) & 0xFFFFFFB0) - 39) ^ 0xFFFFFFD9;
  v24 = (v23 & 0xFFFFFFFE | (v22 >> 7) & 1) - ((2 * v23) & 0xFFFFFF87) + 66;
  v25 = v24 ^ 0x42;
  v26 = v24 ^ (v18 - ((2 * v18) & 0x84) + 66);
  v27 = ((v26 - v19 - 104 - (v9 & (2 * (v26 - v19)))) ^ 0x98) + v25;
  *(_BYTE *)(a8 + (((v25 + v21 - 201382090 - ((2 * (v25 + v21)) & 0xE7FE4E6C)) ^ 0xF3FF2736) + 40) % 0x50) = (v27 - 104 - (v9 & (2 * v27))) ^ 0x98;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v13 + 9744) + 8 * (v10 ^ (9951 * ((v20 ^ v16) < 0x20)))) - 4))();
}

uint64_t sub_100335940(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  char v10;
  char v11;
  unsigned int v12;
  _QWORD *v13;
  char v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  char v22;
  unsigned int v23;
  char v24;

  v17 = (v8 ^ 0x2D598D67)
      - 201382058
      - 2 * ((((v9 + 3599) | 0x88) - 4024) & (v8 ^ 0x2D598D67) ^ ((v8 ^ 0x2D598D67) + 32) & 0xF3FF2737);
  v18 = *(unsigned __int8 *)(v13[1203]
                           + ((*(_BYTE *)(a8
                                                         + (v17 ^ 0xF3FF2736)
                                                         + 40
                                                         - (((((v17 ^ 0xF3FF2736) + 40)
                                                                          * (unint64_t)v12) >> 32) >> 6)
                                                         * v16)
                                              + 18) ^ 0x47));
  v19 = ((v18 >> 2) | (v18 << 6)) ^ (4 * ((v18 >> 2) | (v18 << 6))) ^ (2 * ((v18 >> 2) | (v18 << 6)));
  v20 = *(unsigned __int8 *)(v13[1151]
                           + (v17 ^ 0xF3FF2736)
                           - ((((v17 ^ 0xF3FF2736) * (unint64_t)v12) >> 32) >> 6) * v16);
  v21 = v20 ^ (16 * (v19 ^ 0xFFFFFFC8) - ((32 * v19) & 0x40) + 36) ^ (((v19 ^ 0xC8) >> 4)
                                                                    - (((v19 ^ 0xFFFFFFC8) >> 3) & 0x12)
                                                                    - 39) ^ 0xFFFFFFFD;
  v22 = (v11 ^ v14 ^ 0x70)
      + (*(_BYTE *)(v13[1190]
                  + ((((v21 >> 1) - (v21 & 0xB2) - 39) ^ 0xD9u | ((_BYTE)v21 << 7)) ^ 0xF1)) ^ a4)
      - 40
      + 1;
  v23 = (((v17 ^ 0xF3FF2736) - 201382090 - ((2 * (v17 ^ 0xF3FF2736)) & 0xE7FE4E6C)) ^ 0xF3FF2736) + 40;
  v24 = ((v22 - 104 - ((2 * v22) & 0x30)) ^ 0x98) + v20;
  *(_BYTE *)(v13[1151] + v23 - (((v23 * (unint64_t)v12) >> 32) >> 6) * v16) = (v24
                                                                                                  - 104
                                                                                                  - ((2 * v24) & 0x30)) ^ v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13[1218]
                                        + 8
                                        * (v9 ^ (5730
                                               * ((((v8 ^ 0xD2A67298)
                                                  - 760843624
                                                  - ((2 * (v8 ^ 0xD2A67298) + 2) & 0xA54CE530)
                                                  + 1) ^ v15) < 0x20))))
                            - 4))();
}

uint64_t sub_100335B28(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;

  v17 = (v8 ^ 0x2D598D67) - 201382090 - ((v10 - 402764470) & (2 * (v8 ^ 0x2D598D67) + 64)) + 32;
  v18 = *(unsigned __int8 *)(a8 + ((v17 ^ 0xF3FF2736) + 40) % 0x50);
  v19 = *(unsigned __int8 *)(a8 + (v17 ^ 0xF3FF2736) % 0x50);
  *(_BYTE *)(a8
           + ((v19 ^ v17 ^ ((v13 ^ v11 ^ 0x49C78117) - 201382090 - ((2 * (v13 ^ v11 ^ 0x49C78117)) & 0xE7FE4E6C))) + 40)
           % 0x50) = (((*(_BYTE *)(*(_QWORD *)(v12 + 8808)
                                 + ((((~(_BYTE)v18 | 0xB7) + (v18 >> 1) + 37) | (((_BYTE)v18 << 7) - 39) ^ v16) ^ 0xD1))
                      + 91) ^ 0x7F)
                    - 40) ^ v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744)
                                        + 8 * (v10 ^ (7094 * (((v15 - ((a4 + 4) & v9) + 2) ^ v14) < 0x20))))
                            - 4))();
}

uint64_t sub_100335C70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v15 = (a4 ^ 0x2D598D67) + 72 - (((((a4 ^ 0x2D598D67u) + 72) * (unint64_t)v8) >> 32) >> 6) * v11;
  v16 = *(_BYTE *)(a8 + (((175 * (v9 ^ 0x135)) ^ 0xF99) + (a4 ^ 0x2D598D67u)) % ((v9 + 8070) ^ 0x20F8u));
  v17 = *(_BYTE *)(*(_QWORD *)(v12 + 8152) + ((-61 * (v16 ^ *(_BYTE *)(a8 + v15))) ^ 0xCELL))
      + ((-61 * (v16 ^ *(_BYTE *)(a8 + v15))) ^ 0xA7)
      + 98;
  v18 = ((v13 - 104 - ((2 * v13) & 0x30)) ^ 0x8F ^ v10)
      + ((((v17 >> 6) & 0xFE | (v17 < 0)) - 39) ^ 0xD9 | (2 * v17) ^ 0x84);
  v19 = ((v18 - 104 - ((2 * v18) & 0x30)) ^ 0x98) - v16;
  *(_BYTE *)(a8 + v15) = (v19 - 104 - ((2 * v19) & 0x30)) ^ 0x98;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744)
                                        + 8
                                        * (v9 ^ (3158
                                               * ((((a4 ^ 0xD2A67298)
                                                  - 760843624
                                                  - ((2 * (a4 ^ 0xD2A67298) + 2) & 0xA54CE530)
                                                  + 1) ^ v14) < 0x20))))
                            - 4))();
}

uint64_t sub_100335F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  int v16;
  uint64_t (*v17)(void);
  uint64_t v18;

  v14 = ((v8 ^ 0x218A) + 760843333) ^ v9;
  v15 = *(_BYTE *)(a8 + (v14 + 72) % 0x50);
  v14 += 32;
  v16 = *(unsigned __int8 *)(a8 + v14 % 0x50);
  *(_BYTE *)(a8
           + (((v14
              + 1097147225 * ((v10 ^ a7) - v16)
              - 201382090
              - ((2 * (v14 + 1097147225 * ((v10 ^ a7) - v16))) & 0xE7FE4E6C)) ^ 0xF3FF2736)
            + 40)
           % 0x50) = (a7 + (v16 ^ v15) - ((2 * (v16 ^ v15)) & 0x30)) ^ 0x98;
  v17 = (uint64_t (*)(void))(*(_QWORD *)(v11[1218]
                                      + 8
                                      * ((660 * (((a7 + (v9 ^ a7) - ((2 * (v9 ^ a7) + 2) & v12) + 1) ^ v13) < 0x20)) ^ v8))
                          - 12);
  v18 = v11[1209];
  v11[1190] = v18 + 6;
  v11[1203] = v18 + 547;
  v11[1101] = v18 + 277;
  v11[1019] = v18 + 1604;
  v11[1200] = v18 + 1347;
  return v17();
}

uint64_t sub_1003360B0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  unsigned __int8 v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  char v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned __int8 v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned __int8 v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  uint64_t v132;
  int v133;
  int v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int v138;
  uint64_t v139;
  unint64_t v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unint64_t v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unint64_t v157;
  unint64_t v158;
  unsigned int v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  int v172;
  unint64_t v173;
  int v174;
  unsigned int v175;
  int v176;
  unint64_t v177;
  int v178;
  int v179;
  unint64_t v180;
  int v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  _DWORD *v190;
  uint64_t v191;
  unint64_t v192;

  *(_QWORD *)(v0 + 9688) = 3313 * (v5 ^ 0xFBBu);
  v6 = (((v4 << 23) ^ 0xB4557739A1800000)
      - ((2 * ((v4 << 23) ^ 0xB4557739A1800000)) & 0x79B3B2D155000000)
      + 0x3CD9D968AAEE7343) ^ v4;
  v7 = v6 ^ v3 ^ (((v3 >> (-15 * (v5 ^ 0xBBu) + 56)) ^ (v6 >> 17) ^ 0x3A7F958E16)
                - 0x1601A9C7A642C5E1
                - ((2 * ((v3 >> (-15 * (v5 ^ 0xBBu) + 56)) ^ (v6 >> 17) ^ 0x3A7F958E16)) & 0xAC70B37A743ELL));
  v8 = (((v3 << 23) ^ 0x1C2CDE9D0F800000)
      - 0x1601A9C7A642C5E1
      - ((2 * ((v3 << 23) ^ 0x1C2CDE9D0F800000)) & 0xD3FCAC70B3000000)) ^ v3;
  v9 = v8 ^ (v8 >> 17) ^ v7 ^ (v7 >> 26);
  v10 = (((v2 << 23) ^ 0x58A59F6ACD800000)
       - 0x2193514EB4C12A65
       - ((2 * ((v2 << 23) ^ 0x58A59F6ACD800000)) & 0xBCD95D6296000000)) ^ v2;
  v11 = v7 ^ (v7 << 23) ^ ((v7 ^ (v7 << 23)) >> 17) ^ v9 ^ (v9 >> 26);
  v12 = (v3 ^ 0x1F) + 2 * (v9 + v7);
  v13 = (((v1 << 23) ^ 0xA262C4551E800000)
       - 0x1F7694BB3A7755C3
       - ((2 * ((v1 << 23) ^ 0xA262C4551E800000)) & 0xC112D6898B000000)) ^ v1;
  v14 = v10 ^ (v1 >> 26) ^ (v10 >> 17) ^ 0x38225AD131;
  v15 = (v14 - 0x1F7694BB3A7755C3 - ((2 * v14) & 0xC112D6898B11547ALL)) ^ v1;
  v16 = v13 ^ (v13 >> 17) ^ v15 ^ (v15 >> 26);
  v17 = v15 ^ (v15 << 23) ^ ((v15 ^ (v15 << 23)) >> 17) ^ v16 ^ (v16 >> 26);
  v18 = v9 ^ 0xE9FE563859BD3A1FLL ^ ((v9 << 23) - 0x1601A9C7A642C5E1 - ((v9 << 24) & 0xD3FCAC70B3000000));
  v19 = v18 ^ (v18 >> 17);
  v20 = ((v17 << 23) + 0x67AAC2C7F3FF2736 - ((v17 << 24) & 0xCF55858FE7000000)) ^ v17 ^ 0x67AAC2C7F3FF2736;
  v21 = v20 ^ (v20 >> 17);
  v22 = v17 ^ 0x67AAC2C7F3FF2736 ^ ((v17 >> 26) + 0x67AAC2C7F3FF2736 - ((v17 >> 25) & 0xFE7FE4E6CLL)) ^ v19;
  v23 = v22 ^ v21 ^ (v22 >> 26);
  v24 = ((v22 ^ ((v22 ^ ((_DWORD)v22 << 23)) >> 17) ^ v23 ^ (v23 >> 26)) + v23) ^ v17 ^ (v11 >> 3);
  v25 = ((v1 ^ 0x3D) + 2 * (v16 + v15) + (v15 ^ ((v15 ^ (v15 << 23)) >> 17) ^ v16 ^ (v16 >> 26)));
  v26 = ((v17 >> 3) - 760843624 - ((2 * (v17 >> 3)) & 0xA54CE530)) ^ v11 ^ (v24 - 760843624 - ((2 * v24) & 0xA54CE530));
  *(_DWORD *)(v0 + 9656) = v26;
  v27 = (v26 & 7) == 0;
  *(_QWORD *)(v0 + 8168) = v26 & 7;
  *(_DWORD *)(v0 + 9664) = (((2 * ((-v26 ^ 0xBEC67D6F) & 0x943AB50D)) | 0x7E2195D0)
                          - ((-v26 ^ 0xBEC67D6F) & 0x943AB50D)
                          - 1058065128) ^ (-v26 ^ 0xBEC67D6F) & 0x943AB50A;
  if ((v26 & 7) != 0)
    v28 = -1;
  else
    v28 = 0;
  v29 = v28 << ((((2 * ((-(char)v26 ^ 0x6F) & 0xD)) | 0xD0) - ((-(char)v26 ^ 0x6F) & 0xD) + 24) ^ (-(char)v26 ^ 0x6F) & 0xA ^ 0xEF);
  *(_DWORD *)(v0 + 9640) = v29;
  v30 = (((v17 >> 26) ^ v19) + 0x67AAC2C7F3FF2736 - ((2 * ((v17 >> 26) ^ v19)) & 0xCF55858FE7FE4E6CLL)) ^ v17 ^ 0x67AAC2C7F3FF2736;
  v31 = v21 ^ v30 ^ (v30 >> 26);
  v32 = (v30 ^ ((v30 ^ ((_DWORD)v30 << 23)) >> 17) ^ v31 ^ (v31 >> 26)) + v31;
  LOBYTE(v31) = v31 + v30;
  v33 = (v12 + v11);
  v34 = 1173675057 * v11;
  v35 = ((849048511 * v33 - 760843624 - ((1698097022 * v33) & 0xA54CE530)) ^ 0x2D598D67)
      + ((849048511 * v25 - ((87484286 * v25) & 0x1E7FBBE6) + 255843827) ^ 0xF3FDDF3)
      + ((*(_BYTE *)(*(_QWORD *)(v0 + 9568)
                                    + ((((v30 + v17) >> 3) & 0x1F | (32
                                                                                    * (((_DWORD)v30 + (_DWORD)v17) & 7u))) ^ 0xD0)) ^ (((v30 + v17) >> 3) & 0x1F | (32 * ((v30 + v17) & 7))) ^ 0xD6)
                        + 61)
      + 1;
  v36 = v35 - 760843624 - ((2 * v35) & 0xA54CE530);
  v37 = ((((v36 & 0x5C) + (v36 & 0x7F ^ 0x5E)) | 0x8BF90C00) - ((v36 & 0x7F ^ 0x5E) & 0x5C)) ^ 0x1BFD8B5A;
  v38 = ((2 * v37) | 0xA2A70A7E) - v37 - 1364428095;
  v39 = ((-760843624 - 2136728891 * v16 - ((21509514 * v16) & 0xA54CE530)) ^ 0x2D598D67) + v31 + 1;
  v40 = ((v39 - 760843624 - ((2 * v39) & 0xA54CE530)) ^ 0xD2A67298)
      + ((-760843624 - 2136728891 * v9 - ((21509514 * v9) & 0xA54CE530)) ^ 0xD2A67298);
  v41 = v40 - ((2 * v40) & 0x5FB1FEC6);
  v42 = (1173675057 * v17 - 760843624 - ((-1947617182 * v17) & 0xA54CE530)) ^ v34;
  v43 = v42 ^ v32;
  *(_DWORD *)(v0 + 9728) = v43;
  v44 = v42 ^ ~v32;
  LODWORD(v31) = ((v36 & 0xFFFFFF80 ^ 0xF73EA100) - ((2 * (v36 & 0xFFFFFF80 ^ 0xF73EA100)) & 0x91C87E00) + 1222917967) ^ 0x4DF47F67;
  v45 = v31 - ((2 * v31) & 0x50AA2050) + 676663352;
  v46 = v38 ^ 0xC157027F;
  v47 = 16843009 * v46 - 760843624 - ((33686018 * v46) & 0xA54CE530);
  v48 = (-v43 & 7 ^ 0xE767CCEA) - ((2 * (-v43 & 7 ^ 0xE767CCEA)) & 0x4AC10848) + 897098804;
  *(_DWORD *)(v0 + 9704) = v48;
  v49 = ~(_BYTE)v29;
  if (v27)
    v49 = 0;
  *(_DWORD *)(v0 + 9736) = v49;
  v50 = v44 & 7 | 0x80;
  *(_DWORD *)(v0 + 9696) = v50;
  *(_DWORD *)(v0 + 9632) = v50 ^ 0xD2A6721F;
  if ((v50 ^ 0xD2A6721F) == 0xD2A67298)
    v51 = 0;
  else
    v51 = -1;
  v52 = v51 << (v48 ^ 0xDE);
  *(_DWORD *)(v0 + 9720) = v41 - 1344733341;
  v53 = ((1258291200 * v52 - 2007328058 - ((369098752 * v52) & 0x10000000)) ^ 0x885A9AC6) & ((v41 - 1344733341) ^ 0xAF000000);
  v54 = v53 - 760843624 - ((2 * v53) & 0xA54CE530);
  v55 = 16843009 * v52 - 760843624 - ((33686018 * v52) & 0xA54CE530);
  LOWORD(v53) = (v47 & 0xD4 ^ 0x1F11) + (v47 & 0x2B) - 1;
  v56 = *(_QWORD *)(v0 + 9672) + 2645;
  v57 = *(unsigned __int8 *)(v56 + (((32 * (v46 & 7)) | ((v46 - 104 - ((2 * v46) & 0x30)) >> 3)) ^ 6));
  v58 = ((v57 & 0xB ^ 0x42 ^ ((v57 >> 4) | (16 * v57))) + 61) ^ (4 * v36);
  *(_DWORD *)(v0 + 9616) = (((v58 ^ 0x4A99CA60) - 760843624 - 2 * ((v58 ^ 0x4A99CA60) & 0x52A6729E ^ v58 & 6)) ^ v45 ^ v55 ^ v54 ^ ((v47 ^ 0x98) + (v45 ^ 0x8DD8390)) ^ (4 * ((v47 ^ 0x98) + (v45 ^ 0x8DD8390)) - 760843624 - ((8 * ((v47 ^ 0x98) + (v45 ^ 0x8DD8390))) & 0xA54CE530)) ^ 0xF7227C6F)
                         + 369928507
                         * ((v36 ^ 0xD2A67298)
                          - (((v53 & 0x4FA ^ 0x1C06A023) + (v53 & 5) + 537919487) ^ 0x3C16A4AA | v45 ^ 0x8DD8390));
  v59 = v16 ^ v9 ^ ((v16 ^ v9) << 6) ^ (v23 + v22);
  *(_DWORD *)(v0 + 9576) = v59;
  v60 = (-1281940645 * v25) ^ (v22 + v17) ^ (-1281940645 * v33
                                                            - ((1731086006 * v33) & 0xE2F72E12)
                                                            + 1903925001);
  v61 = ((v60 & 0x7F ^ 0x1C843231 | 0x8C062AE3) - (v60 & 0x7F ^ 0x1C843231 | 0x73F9D51C) + 1945752860) ^ 0x908218DB;
  v62 = ((v60 & 0xFFFFFF80 ^ 0x56AD3900) + (v60 & 0xE97E80 ^ 0x4046E7) - ((v60 & 0xFFFFFF80 ^ 0x56AD3900) & 0xE97E80)) ^ 0x5297CC3;
  v63 = ((2 * v62) & 0x9DD4E000) - v62 - 1323987034;
  *(_DWORD *)(v0 + 9584) = *(_DWORD *)(v0 + 9736) & (v60 ^ 9);
  v64 = v59 ^ v60 & 0x58A19077;
  v65 = v64 ^ 0x22C936A2 ^ (((v64 >> 8) ^ HIWORD(v64) ^ 0xF78880)
                          - 760843624
                          - ((2 * ((v64 >> 8) ^ HIWORD(v64) ^ 0xF78880)) & 0x14CE530));
  v66 = v65 & 0xC1363A4B ^ 0x8BCB14E9 ^ (((2 * (v65 & 0xC1363AB4)) | 0x15B65CB2) - (v65 & 0xC1363AB4) + 1965347239);
  v67 = (((2 * v66) | 0x71D71878) - v66 + 1192522692) ^ HIBYTE(v64) ^ 0xB9FBB60A;
  v68 = 16843009 * v67 - 760843624 - ((33686018 * v67) & 0xA54CE530);
  v69 = ~(_BYTE)v52;
  *(_DWORD *)(v0 + 6872) = 1386640024;
  v70 = *(_DWORD *)(v0 + 9728) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 9608) = v70;
  v71 = (v47 & 0x7FFFFFF8 ^ 0xAD598D60 | v47 & 0x7FFFFFF8 ^ 0x52A67298) & v70 ^ 0x40202813;
  *(_DWORD *)(v0 + 9560) = v71 - 85528062 - ((2 * v71) & 0xF5CDF030);
  *(_DWORD *)(v0 + 9592) = v36;
  *(_DWORD *)(v0 + 9736) = -760843623;
  if ((v50 ^ 0xD2A6721F) == 0xD2A67298)
    v69 = 0;
  v72 = ((v69 & (v36 ^ 0x98)) - 760843624 - ((2 * (v69 & (v36 ^ 0x98))) & 0x130)) ^ v55;
  v73 = ((v36 & 0x58A19077 ^ 0xF7FE7F98)
       - 760843623
       + ((2 * ((v36 & 0x58A19077 ^ 0xF7FE7F98) & 0x50A01012 ^ (v35 | 0x7FFFFFFD))) ^ 0x40CC515)) ^ *(_DWORD *)(v0 + 9720);
  v74 = v73 ^ HIWORD(v73) ^ 0xE7B5D0E8 ^ (((v73 >> 8) ^ 0x7D7E8D)
                                        - 760843623
                                        + (~(2 * ((v73 >> 8) ^ 0x7D7E8D)) | 0xFEB31ACF));
  v75 = v74 & 0x71330B63 ^ 0xAF0283F9 ^ ((v74 & 0x71330B9C) - (v74 & 0x6123010C) + (v74 & 0x6123010C ^ 0xEF23816D));
  *(_QWORD *)(v0 + 9184) = v56;
  v76 = *(unsigned __int8 *)(v56 + (((v73 >> 19) & 0xE0 | (v73 >> 27)) ^ 0xBALL));
  v77 = (((v76 >> 4) | (16 * v76)) ^ v76 & 0xB ^ 0x42) + 61;
  v78 = 16843009 * (v77 ^ (((2 * v75) & 0x3D00640) - v75 + 2115501279) ^ 0x3E36FEEF);
  *(_DWORD *)(v0 + 7216) = v78;
  *(_DWORD *)(v0 + 6944) = v68 ^ 0xC2C2C2C2;
  v79 = ((((v78 ^ v68) >> 2) ^ 0x104D7842) - 760843624 - ((2 * (((v78 ^ v68) >> 2) ^ 0x104D7842)) & 0x254CE530)) ^ v68 ^ 0xC2C2C2C2;
  v80 = v78 ^ 0x51515151;
  *(_DWORD *)(v0 + 9528) = -760843624
                         - 450229293 * (v78 ^ 0x51515151)
                         - ((-900458586 * (v78 ^ 0x51515151)) & 0xA54CE530);
  v81 = v78 ^ 0xB5161C39 ^ (v79 - 760843624 - ((2 * v79) & 0xA54CE530));
  v82 = *(_DWORD *)(v0 + 9696);
  v83 = v82 ^ 0x87;
  v84 = *(_DWORD *)(v0 + 9656);
  v85 = *(_QWORD *)(v0 + 8168);
  v86 = (v85 - 760843624 + ((_DWORD)v85 << 7) - ((v84 << 8) & 0x500)) ^ (-1094595471 * v85);
  *(_DWORD *)(v0 + 9648) = 1386640027;
  v87 = *(_DWORD *)(v0 + 9632);
  v88 = ((v86 ^ 0xD2A67298) - 760843624 - 2 * ((v86 ^ 0xD2A67298) & 0x52A6729B ^ v86 & 3)) ^ v87;
  v89 = (v88 - 760843624 - ((2 * v88) & 0xA54CE530)) ^ (((v82 << 7) ^ 0x4380)
                                                      - 760843624
                                                      - ((2 * ((v82 << 7) ^ 0x4380)) & 0x55555555));
  v90 = (v89 - 760843624 - ((2 * v89) & 0xA54CE530)) ^ (-1094595471 * (v82 ^ 0x87)
                                                      - 760843624
                                                      - ((2105776354 * (v82 ^ 0x87)) & 0xA54CE530));
  *(_DWORD *)(v0 + 9544) = v47;
  *(_DWORD *)(v0 + 6068) = v61;
  *(_DWORD *)(v0 + 9680) = 16843009 * v61;
  v91 = 16843009 * v61 - ((33686018 * v61) & 0x112AA610) - 2003479800;
  v92 = (v91 >> 1) ^ ((v47 ^ v91) >> 6) ^ 0x45226502;
  v93 = v91;
  *(_DWORD *)(v0 + 9400) = v91;
  v94 = (v91 ^ 0x776AACF7) + 1;
  *(_DWORD *)(v0 + 7408) = v94;
  *(_DWORD *)(v0 + 9552) = (v47 ^ 0xD2A67298)
                         + v94
                         + ((((v47 ^ 0xD2A67298) >> (!(v77 & 1) + (v77 & 1)))
                           - 760843624
                           - ((2 * ((v47 ^ 0xD2A67298) >> (!(v77 & 1) + (v77 & 1)))) & 0xA54CE530)) ^ (v92 - 760843624 - ((2 * v92) & 0xA54CE530)) ^ 0x36E13FF0);
  v95 = *(_DWORD *)(v0 + 9704) ^ 0xD21F68DE;
  v96 = *(_DWORD *)(v0 + 9664);
  *(_DWORD *)(v0 + 5440) = v96 ^ 0x3F10CAEF;
  *(_DWORD *)(v0 + 9536) = ((-760843624 - 1186177245 * v95 - ((1922612806 * v95) & 0xA54CE530)) ^ 0xD2A67298)
                         + 1186177245 * (v96 ^ 0x3F10CAEF);
  v97 = -760843624 - 813847937 * v80 - ((-1627695874 * v80) & 0xA54CE530);
  v98 = v63 ^ 0x93032382;
  v99 = v93 ^ 8;
  v100 = v99 + (v63 ^ 0x93032382) - 760843624 - ((2 * (v99 + (v63 ^ 0x93032382))) & 0xA54CE530);
  v101 = *(_DWORD *)(v0 + 9640);
  v102 = -1962934272 * v101;
  v101 *= 16843009;
  v103 = *(_DWORD *)(v0 + 9576);
  v104 = *(_DWORD *)(v0 + 9584) ^ v101;
  v105 = ((((v100 ^ v60) >> 3) ^ 0x147BBCB2)
        - 760843624
        - 2 * ((((v100 ^ v60) >> 3) ^ 0x147BBCB2) & 0x12A6729D ^ ((v100 ^ v60) >> 3) & 5)) ^ v100 ^ v101 ^ v102 & v103;
  *(_DWORD *)(v0 + 7256) = v68;
  *(_DWORD *)(v0 + 6712) = v68 ^ 0x1064B05A;
  v106 = (v97 ^ 0x2D598D67) - 363618644 * (v68 ^ 0x1064B05A) + (*(_DWORD *)(v0 + 9528) ^ 0xD2A67298) + v81 + 1;
  v107 = v106 - 760843624 - ((2 * v106) & 0xA54CE530);
  v108 = v72 - 760843624 - ((2 * v72) & 0xA54CE530);
  v109 = v90 - ((2 * v90) & 0x8960E454) - 995069398;
  v110 = ((v84 & 0xFFFFFFF8) - ((2 * v84) & 0x8960E450) - 995069398) ^ v85 ^ 0xC4B0722A;
  v111 = -760843624 - 1832822677 * v110 - ((629321942 * v110) & 0xA54CE530);
  v112 = *(_DWORD *)(v0 + 9560) + 1562;
  v113 = (v112 ^ 0xBAC6D00F | v83) - ((2 * (v112 ^ 0xBAC6D00F | v83)) & 0x48BD7EFA) + 610189181;
  v114 = ((-760843624 - 1832822677 * v84 - ((629321942 * v84) & 0xA54CE530)) ^ 0x2D598D67)
       + (v111 ^ 0xD2A67298)
       + ((v104 - 760843624 - ((2 * v104) & 0xA54CE530)) ^ 0xD2A67298)
       + 1;
  v115 = (v114 - 760843624 - ((2 * v114) & 0xA54CE530)) ^ 0xD2A67298;
  v116 = v115 - 2 * (v115 & 0x717B970B ^ v114 & 2);
  v117 = (v60 ^ 0xA3DDE591 ^ (760843623 - v105 + ((2 * v105) & 0xA54CE530))) + (v100 ^ 0xD2A67298) - (v99 | v98);
  v118 = v117 ^ 0xFBDFFFD9;
  v119 = (2 * v117) & 0xF7BFFFB2;
  v120 = *(_DWORD *)(v0 + 9616) + 1471427932 - ((2 * *(_DWORD *)(v0 + 9616)) & 0xAF686ABA);
  LOBYTE(v95) = v95 - v84;
  v121 = *(_DWORD *)(v0 + 9728);
  v122 = v87 ^ (4 * v121) ^ v108 ^ v112 ^ (((4 * v113) ^ 0x917AFDF4)
                                         - 760843624
                                         - ((2 * ((4 * v113) ^ 0x917AFDF4)) & 0xA54CE530));
  v123 = *(_DWORD *)(v0 + 9592);
  v124 = ((v122 ^ 0x22F968F7)
        + *(_DWORD *)(v0 + 9736)
        + ((2 * ((v122 ^ 0x22F968F7) & 0x52A6729A ^ v122 & 2)) ^ 0xFFFFFFFB)) ^ (((v113 << 8) ^ 0x5EBF7D00)
                                                                               - 760843624
                                                                               - ((2 * ((v113 << 8) ^ 0x5EBF7D00)) & 0xA54CE400));
  *(_DWORD *)(v0 + 7944) = -1521687552;
  v125 = (((v121 << 8) ^ 0xA6729800) - 760843624 - ((2 * ((v121 << 8) ^ 0xA6729800)) & 0xA54CE400)) ^ v121 ^ (v124 - 760843624 - ((2 * v124) & 0xA54CE530));
  v126 = (((*(_DWORD *)(v0 + 9720) << 7) ^ 0xEC7FB180) - 1344733341) ^ *(_DWORD *)(v0 + 9720);
  v127 = (v126 - 760843624 - ((2 * v126) & 0xA54CE530)) ^ v87;
  v128 = v60 ^ (v60 >> 7) ^ v123 ^ (((v123 >> 7) ^ 0x1A54CE5) - 760843624 - ((2 * ((v123 >> 7) ^ 0x1A54CE5)) & 0x14CE530)) ^ *(_DWORD *)(v0 + 9544);
  *(_DWORD *)(v0 + 7040) = v103 ^ 0xD2A67298 ^ ((v103 << 7) - 760843624) ^ (v127 - ((2 * v127) & 0x700DD17C) - 1207506754);
  LOBYTE(v127) = v95 + *(_BYTE *)(v0 + 9608) - ((2 * (v95 + *(_BYTE *)(v0 + 9608))) & 0x2E);
  v129 = (v73 ^ 0x5A15142E)
       + ((*(_DWORD *)(v0 + 9704) >> 4) ^ (32 * (v96 ^ *(_DWORD *)(v0 + 9704))) ^ 0x532A4F52 ^ (*(_DWORD *)(v0 + 9536)
                                                                                              - 671346763))
       + 1;
  v130 = (*(_DWORD *)(v0 + 9696) ^ v85 ^ 0xC4B0722A ^ 0xD7FC0F32 ^ v109)
       + ((v129 - 760843624 - ((2 * v129) & 0xA54CE530)) ^ 0xD2A67298);
  *(_DWORD *)(v0 + 9512) = v130 - 760843624 - ((2 * v130) & 0xA54CE530);
  *(_DWORD *)(v0 + 9696) = v64 ^ *(_DWORD *)(v0 + 9552) ^ v107 ^ ((v107 ^ *(_DWORD *)(v0 + 9552)) >> 1) ^ 0xC456DBF8;
  v131 = v116 + 1903925001;
  *(_DWORD *)(v0 + 6696) = (v116 + 9) ^ 9;
  *(_DWORD *)(v0 + 6084) = v96 ^ 0xDC277724;
  v132 = v96 ^ 0xEFu;
  v133 = 2 * v128;
  *(_DWORD *)(v0 + 9664) = ((2 * v128) ^ 0x67E257C) & (v128 ^ 0x233F12BC);
  v134 = (2 * v128) & 0x20202020 ^ 0x10303030;
  *(_DWORD *)(v0 + 9656) = v134;
  v135 = (v134 - ((2 * v134) & 0x404000) - 1297722760) ^ 0xD2A67298;
  v136 = v131 ^ 0x717B9709;
  v137 = v118 + 69206017 + v119 + 38;
  v138 = v120 + 1;
  LOBYTE(v87) = v120;
  *(_QWORD *)(v0 + 6680) = ((v120 + 1) ^ 0x10B03010) & v135;
  *(_DWORD *)(v0 + 9640) = (v137 & v135) - 760843624 - ((2 * (v137 & v135)) & 0x254CE530);
  v139 = (v127 + 23) ^ 0x17u;
  v140 = (((v131 ^ 0x717B9709) & v135) - 760843624 - ((2 * ((v131 ^ 0x717B9709) & v135)) & 0x254CE530)) ^ 0xD2A67298;
  *(_QWORD *)(v0 + 9616) = v140;
  *(_DWORD *)(v0 + 9608) = (v140 >> ((v127 + 23) ^ 0x17))
                         - 760843624
                         - ((2 * (v140 >> ((v127 + 23) ^ 0x17))) & 0xA54CE530);
  v141 = *(_DWORD *)(v0 + 9400);
  LODWORD(v140) = ((v141 & 0x78F112B9 ^ 0x28A11028 | 0x697DA837)
                 - (v141 & 0x78F112B9 ^ 0x28A11028 | 0x968257C8)
                 - 1769842744) ^ 0x695DAE33;
  *(_DWORD *)(v0 + 7964) = v141 ^ 0x88955308;
  LODWORD(v140) = 2
                * ((604399391
                  * (~((((((2 * v140) | 0xFC55E742) - v140 + 30739551) ^ 0xDE3AF785) - 954101011) | v141 ^ 0x88955308) & 0x3B454D68 | ((((((2 * v140) | 0xFC55E742) - v140 + 30739551) ^ 0xDE3AF785) - 954101011) | v141 ^ 0x88955308) & 0x3B454D6C)) & ((((2 * v140) | 0xFC55E742) - v140 + 30739551) ^ 0xDE3AF784));
  *(_DWORD *)(v0 + 9472) = v138 ^ 0x57B4355C;
  LODWORD(v140) = ((((v140 & 0x3BF4D460 ^ 0x9144460 ^ (v125 ^ 0xE952A6FE) & (v140 ^ 0x10101010))
                   - ((2 * (v140 & 0x3BF4D460 ^ 0x9144460 ^ (v125 ^ 0xE952A6FE) & (v140 ^ 0x10101010))) & 0x3D265AB8)
                   + 512961885) ^ 0x797793D) >> v132)
                + (((v138 ^ 0x57B4355C) & (v140 ^ 0x10101010)) << v85);
  *(_DWORD *)(v0 + 9592) = v140 - ((2 * v140) & 0x5FB1FEC6);
  v142 = 2 * v141;
  LODWORD(v140) = (2 * v141) & 0x2D2D2D2C ^ 0x97BEB296;
  v143 = ((unint64_t)((v131 ^ 0x313B9708) & v140) >> ((v127 + 23) ^ 0x17))
       + ((((v137 & v140) << v85)
         - 760843624
         - ((2 * ((v137 & v140) << v85)) & 0xA54CE530)) ^ 0xD2A67298);
  *(_DWORD *)(v0 + 7640) = v143 - 760843624 - ((2 * v143) & 0xA54CE530);
  v144 = (v128 & 0x96969696 ^ 0x14121094) - ((2 * (v128 & 0x96969696 ^ 0x14121094)) & 0x8290C20) - 317405584;
  v145 = (2 * ((v144 & 0x7AA55EF0 ^ 0x2801889) + (v144 & 0x55AA106 ^ 0x5188001)) - 4) ^ 0x6F862F62;
  *(_DWORD *)(v0 + 9728) = ((unint64_t)((v125 ^ 0x92A63298) & v140) >> v139) ^ (((v138 ^ 0x17B4351C) & v140) << v85);
  *(_DWORD *)(v0 + 9584) = v145;
  LODWORD(v140) = ((unint64_t)((v125 ^ 0xD2A67298) & v145) >> v139) ^ (((v138 ^ 0x57B4355C) & v145) << v85);
  *(_DWORD *)(v0 + 9720) = v140 - 760843624 - ((2 * v140) & 0xA54CE530);
  LODWORD(v140) = (((2 * (v141 & 0x5B5B5B5B ^ 0x10510040)) & 0xB2060294) - (v141 & 0x5B5B5B5B ^ 0x10510040) + 576223761) ^ 0xA21C6B55;
  LODWORD(v140) = 2 * (((2 * v140) | 0x75CDD734) - v140) - 1976424244;
  *(_DWORD *)(v0 + 7632) = ((unint64_t)(v136 & ((2 * v128) & 0xB6B6B6B6 ^ 0x5D6D7F6D)) >> v139) | ((v137 & ((2 * v128) & 0xB6B6B6B6 ^ 0x5D6D7F6D)) << v85);
  *(_DWORD *)(v0 + 9576) = v140 ^ 0x1E9E0877;
  v146 = v140 & 0xA975E330 ^ 0x523554C2 ^ (v138 ^ 0xFEC1D66C) & (v140 ^ 0x1E9E0877);
  *(_QWORD *)(v0 + 6672) = (v146 - ((2 * v146) & 0xBAD06066) - 580374477) ^ 0x874964C0;
  *(_QWORD *)(v0 + 9560) = v140 & 0x76530FEE ^ 0x16120867 ^ (v125 ^ 0xA4F57D77) & (v140 ^ 0x1E9E0877);
  LODWORD(v140) = (v133 & 0xA0A0A0A0 ^ 0x50707070) - ((2 * (v133 & 0xA0A0A0A0 ^ 0x50707070)) & 0x1404100) + 849728120;
  *(_DWORD *)(v0 + 5480) = v140;
  LODWORD(v140) = v140 ^ 0xD2A67298;
  v147 = (v137 & v140) << v85;
  v148 = ((unint64_t)(v136 & v140) >> v139) | v147;
  *(_DWORD *)(v0 + 7624) = v148 - 760843624 - ((2 * v148) & 0xA54CE530);
  *(_QWORD *)(v0 + 6664) = (v138 ^ 0x53B03150) & v140;
  v149 = (2 * v141) & 0xA0A0A0A0 ^ 0x5070F050;
  v150 = (v131 ^ 0x70709000) & v149;
  v151 = (v137 & v149) << v85;
  *(_DWORD *)(v0 + 9448) = v151;
  *(_DWORD *)(v0 + 9704) = ((v150 >> v139) | v151) - 760843624 - ((2 * ((v150 >> v139) | v151)) & 0xA54CE530);
  LODWORD(v140) = (((unint64_t)((v125 ^ 0xD2A27290) & v140) >> v132)
                 - 760843624
                 - ((2 * ((unint64_t)((v125 ^ 0xD2A27290) & v140) >> v132)) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 6656) = v140;
  *(_DWORD *)(v0 + 7616) = v140 + v147 - 760843624 - ((2 * (v140 + v147)) & 0xA54CE530);
  LODWORD(v140) = v141 & 0x10101010 ^ 0x101000;
  v152 = 2 * v140;
  LODWORD(v140) = (2 * v140 - ((4 * v140) & 0x3FFFC000) - 1028234616) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 9552) = v140;
  *(_DWORD *)(v0 + 9424) = v131 ^ 0x717B9708;
  *(_DWORD *)(v0 + 9544) = ((v131 ^ 0x717B9708) & v140) - 760843624 - ((2 * ((v131 ^ 0x717B9708) & v140)) & 0x254CE530);
  *(_DWORD *)(v0 + 9528) = v138 ^ 0x10303010;
  *(_DWORD *)(v0 + 9536) = v131 ^ 0x30301000;
  *(_DWORD *)(v0 + 7484) = (((v138 ^ 0x10303010) & (v152 | 0x10101010)) << v85) ^ ((unint64_t)((v131 ^ 0x30301000) & (v152 | 0x10101010)) >> v139);
  LODWORD(v140) = (2 * v141) & 0x1C1C1C1C ^ 0x1E060A1E;
  v153 = (2 * v141) & 0x1810141C ^ 0x3810500F ^ (v125 ^ 0xA160406) & v140;
  v154 = (((2 * (v128 & 0xE0E0E0E ^ 0x602080E)) & 0x1C041000) - (v128 & 0xE0E0E0E ^ 0x602080E) + 1626089358) ^ 0x60E5AE0E;
  v155 = v154 - ((2 * v154) & 0x5C25090C) - 292387674;
  *(_DWORD *)(v0 + 9464) = v155;
  v156 = 2 * v155;
  LODWORD(v150) = (2 * v155) ^ 0xDB200042;
  *(_DWORD *)(v0 + 9504) = v150;
  *(_DWORD *)(v0 + 9496) = ((((2 * v155) ^ 0xD52E0E4C)
                           - 2 * (((2 * v155) ^ 0xD52E0E4C) & 0x717B971A ^ (2 * v155) & 0x12)
                           + 1903925001) ^ v131 ^ 0xF1F1F1F1)
                         + (v136 | v150);
  v157 = (unint64_t)((v153 - ((2 * v153) & 0x1C10A814) + 258593930) ^ 0x2F79869Bu) >> v139;
  *(_DWORD *)(v0 + 6648) = v157 ^ ((((v137 & v140)
                                   - 760843624
                                   - ((2 * (v137 & v140)) & 0x240C2430)) ^ 0xD2A67298) << v85);
  *(_DWORD *)(v0 + 7480) = v157
                         + (((v138 ^ 0x1614141C) & v140) << v85)
                         - 760843624
                         - ((2 * (v157 + (((v138 ^ 0x1614141C) & v140) << v85))) & 0xA54CE530);
  v158 = (unint64_t)(((v136 & v150)
                           - 760843624
                           - ((2 * (v136 & v150)) & 0xA54CE530)) ^ 0xD2A67298) >> v132;
  *(_DWORD *)(v0 + 7476) = v158 - 760843624 - ((2 * v158) & 0xA54CE530);
  v159 = (2 * v141) & 0x9C9C9C9C ^ 0x5E46CA5E;
  v160 = (unint64_t)((v131 ^ 0x505A9608) & v159) >> v139;
  *(_QWORD *)(v0 + 5920) = v160;
  *(_DWORD *)(v0 + 7464) = ((((v138 ^ 0x5694145C) & v159) << v85) | v160)
                         - 760843624
                         - ((2 * ((((v138 ^ 0x5694145C) & v159) << v85) | v160)) & 0xA54CE530);
  LODWORD(v150) = (2 * v128) & 0x9C9C9C9C ^ 0x4A524A52;
  v161 = (v125 ^ 0xD2865298) & v150;
  *(_DWORD *)(v0 + 6088) = v150;
  *(_QWORD *)(v0 + 6008) = v161;
  v162 = (unint64_t)(((_DWORD)v161 - 760843624 - ((2 * (_DWORD)v161) & 0xA50CA530)) ^ 0xD2A67298) >> v132;
  *(_DWORD *)(v0 + 7536) = v162 - 760843624 - ((2 * v162) & 0xA54CE530);
  v163 = v137 & v159;
  *(_QWORD *)(v0 + 6000) = v163;
  *(_DWORD *)(v0 + 5988) = (_DWORD)v163 << v85;
  *(_DWORD *)(v0 + 6020) = v159;
  v164 = (v125 ^ 0xD2865298) & v159;
  *(_QWORD *)(v0 + 5992) = v164;
  LODWORD(v164) = (v164 >> v139)
                + ((((_DWORD)v163 << v85) - 760843624 - ((2 * ((_DWORD)v163 << v85)) & 0xA54CE530)) ^ 0xD2A67298);
  *(_DWORD *)(v0 + 7460) = v164 - 760843624 - ((2 * v164) & 0xA54CE530);
  *(_DWORD *)(v0 + 9456) = ((v138 ^ 0x5694145C) & v150)
                         - 760843624
                         - 2 * ((v138 ^ 0x5694145C) & v150 & 0x5286529A ^ ((_BYTE)v87 + 33) & 2);
  *(_DWORD *)(v0 + 6024) = v141 & 0xBCBCBCBC;
  LODWORD(v158) = (v141 & 0xBCBCBCBC ^ 0x52534128) - ((2 * (v141 & 0xBCBCBCBC ^ 0x52534128)) & 0x21455038) - 1851610529;
  *(_DWORD *)(v0 + 7344) = v158 ^ 0x99C389E7;
  LODWORD(v158) = 2 * v158;
  v165 = (unint64_t)((v131 ^ 0x717B9708) & (v158 ^ 0x2A774A42)) >> v139;
  *(_DWORD *)(v0 + 7456) = ((v165 - 760843624 - ((2 * v165) & 0xA54CE530)) ^ 0xD2A67298)
                         + ((((v137 & (v158 ^ 0x2A774A42))
                            - 760843624
                            - ((2 * (v137 & (v158 ^ 0x2A774A42))) & 0xA54CE530)) ^ 0xD2A67298) << v85);
  LODWORD(v150) = (2 * v128) & 0x79797978 ^ 0xFCC49DC4;
  *(_DWORD *)(v0 + 6100) = v150;
  *(_QWORD *)(v0 + 8040) = v136;
  v166 = v137 & v150;
  *(_QWORD *)(v0 + 6744) = v166;
  LOBYTE(v87) = v85;
  *(_DWORD *)(v0 + 7452) = ((unint64_t)(((v136 & v150)
                                              - 760843624
                                              - ((2 * (v136 & v150)) & 0xA148E130)) ^ 0xD2A67298) >> v139)
                         + ((_DWORD)v166 << v85);
  v167 = v125 ^ 0xD2A67298;
  *(_DWORD *)(v0 + 9440) = ((unint64_t)(v167 & (v158 ^ 0x2A774A42)) >> v132)
                         + *(_DWORD *)(v0 + 9736)
                         + ~((2 * ((unint64_t)(v167 & (v158 ^ 0x2A774A42)) >> v132)) & 0xA54CE530);
  *(_QWORD *)(v0 + 6640) = ((v158 & 0x13559AB2 ^ 0x4F3F155D ^ (v138 ^ 0x44E1AFEE) & (v158 ^ 0x2A774A42))
                          - 1) ^ 0x4D6A1F5E;
  LODWORD(v163) = (2 * v141) & 0x8080808;
  *(_DWORD *)(v0 + 6040) = v163;
  LODWORD(v158) = (2 * v141) & 0x8000008 ^ 0xBC02089 ^ (v131 ^ 0x80C0400) & (v163 ^ 0x40C0404);
  LODWORD(v164) = ((v138 ^ 0x404040C) & (v163 ^ 0x40C0404)) << v85;
  *(_DWORD *)(v0 + 9432) = (2 * v128) & 0x8080808 ^ 0x40C040C;
  *(_DWORD *)(v0 + 6036) = v131 ^ 0x80408;
  v168 = (unint64_t)((v131 ^ 0x80408) & (v163 ^ 0x40C0404)) >> v132;
  *(_DWORD *)(v0 + 9736) = v168 + v164 - 760843624 - 2 * ((v168 + v164) & *(_DWORD *)(v0 + 9648) ^ v168 & 3);
  *(_DWORD *)(v0 + 7448) = ((unint64_t)(((v158 | 0x486E59F9)
                                              - (v158 | 0xB791A606)
                                              - 1215191546) ^ 0x43AA7970) >> v132)
                         + ((v164 - 760843624 - ((2 * v164) & 0xA54CE530)) ^ 0xD2A67298);
  LODWORD(v158) = (((2 * (v128 & 0x47474747 ^ 0x42074505)) | 0x1FF2E1C0) - (v128 & 0x47474747 ^ 0x42074505) - 268005600) ^ 0xFF95CF8;
  LODWORD(v158) = 2 * (((2 * v158) | 0x1692042A) - v158) + 1768815574;
  LODWORD(v163) = (2 * v141) & 0x8E8E8E8E ^ 0x474DC147;
  *(_DWORD *)(v0 + 6044) = v163;
  *(_DWORD *)(v0 + 7440) = ((((unint64_t)((v131 ^ 0x414B8709) & v163) >> v132)
                           - 760843624
                           - ((2 * ((unint64_t)((v131 ^ 0x414B8709) & v163) >> v132)) & 0xA54CE530)) ^ 0xD2A67298)
                         + (((v138 ^ 0x4784054D) & v163) << v85);
  v169 = (v138 ^ 0x57B4355D) & (v158 ^ 0x53D59559);
  *(_DWORD *)(v0 + 9408) = v158 ^ 0x53D59559;
  v170 = v138 ^ 0x57B4355D;
  LODWORD(v168) = (-1427294242
                 - ((v169 ^ 0xDEDF1CA9) & 0x5002C800 | 0xAAED37DE)
                 + ((v169 ^ 0xDEDF1CA9) & 0x2E00452 | 0x5512C821)) ^ (v169 ^ 0xDEDF1CA9) & 0x15A58B15;
  v171 = 2 * ((v141 & 0x47474747 ^ 0x19050180) - ((2 * (v141 & 0x47474747 ^ 0x19050180)) & 0x34040902)) + 872749426;
  *(_DWORD *)(v0 + 9648) = (v171 ^ 0x6059C72) - 760843624 - 2 * ((v171 ^ 0x6059C72) & 0x52A6729C ^ v171 & 4);
  LODWORD(v158) = v158 & 0x6CCBCF64 ^ 0x880CA24 ^ (v125 ^ 0xBE6DBDFD) & (v158 ^ 0x53D59559);
  *(_QWORD *)(v0 + 6632) = v169;
  LODWORD(v158) = ((unint64_t)(((v158 | 0x542F5923) - (v158 | 0xABD0A6DC) - 1412389156) ^ 0x1C6E1646) >> v139) | ((_DWORD)v169 << v85);
  *(_DWORD *)(v0 + 9632) = v158 - 760843624 - ((2 * v158) & 0xA54CE530);
  LODWORD(v158) = ((v168 ^ 0x5E) + ((2 * v168) | 0x76) + 70) & 0x42;
  *(_DWORD *)(v0 + 7436) = (v158 ^ 0x40) + (v158 ^ 2);
  v172 = v141;
  LODWORD(v158) = (((2 * (v141 & 0xD4D4D4D4 ^ 0x9490D0C4)) & 0xA1200808) - (v141 & 0xD4D4D4D4 ^ 0x9490D0C4) + 205978363) ^ 0x1C46DB3B;
  LODWORD(v158) = (2 * (((2 * v158) | 0x366145DC) - v158) + 1235139108) ^ 0xBE6807D4;
  LODWORD(v169) = v158 - 760843624 - ((2 * v158) & 0xA54CE530);
  *(_DWORD *)(v0 + 6112) = (2 * v128) & 0xA9A9A9A8 ^ 0xD4FCF5FC;
  *(_DWORD *)(v0 + 7360) = v169;
  *(_DWORD *)(v0 + 9416) = (v137 & (v169 ^ 0x672A64C)) - 760843624 - ((2 * (v137 & (v169 ^ 0x672A64C))) & 0xA54CE530);
  v173 = (((v131 ^ 0x717B9709) & (v169 ^ 0x672A64C))
        - 760843624
        - ((2 * ((v131 ^ 0x717B9709) & (v169 ^ 0x672A64C))) & 0xA54CE530)) ^ 0xD2A67298;
  *(_QWORD *)(v0 + 7264) = v170;
  LODWORD(v168) = (v173 >> v139) | ((v170 & (v169 ^ 0x672A64C)) << v85);
  *(_DWORD *)(v0 + 7404) = v168 - 760843624 - ((2 * v168) & 0xA54CE530);
  LODWORD(v168) = ((~((v133 ^ 0x52049064) & 0x9F0CCEE4) | 0xB8DCDCE) + ((v133 ^ 0x52049064) & 0xB0CCCC4 | 0xF4723231)) ^ (v133 ^ 0x52049064) & 0x3BA86A40;
  LODWORD(v168) = ((v168 ^ 0xFFFFFFFE) & 0x2E3ACF3 ^ 0x62A431) + (v168 ^ 0xE07AB630) - ((v168 ^ 0xE07AB630) & 0x2E3ACF3);
  v174 = v168 & 0xADADADAD ^ 0x52DBDEF3;
  v175 = (2 * v141) & 0xA4A4A4A4 ^ 0x5272F652;
  v176 = v170 & v174;
  v177 = (unint64_t)(v167 & v174) >> v139;
  v178 = v176 << v85;
  *(_DWORD *)(v0 + 7392) = v177 | v178;
  *(_DWORD *)(v0 + 7384) = v177 + v178;
  LODWORD(v177) = (2 * ((v128 ^ 0xE92BF12) + (v128 & 0x2DADADAD ^ 0x737F52FF)) + 2) ^ 0x52525252;
  LODWORD(v85) = *(_DWORD *)(v0 + 9472);
  LODWORD(v158) = *(_DWORD *)(v0 + 9424);
  LODWORD(v177) = ((unint64_t)(v158 & v177) >> v139)
                + ((v85 & v177) << v87);
  *(_DWORD *)(v0 + 7380) = v177 - 760843624 - ((2 * v177) & 0xA54CE530);
  *(_DWORD *)(v0 + 7336) = v168 ^ 0xC06DFE6B;
  *(_DWORD *)(v0 + 6060) = v142 & 0xF0F0F0F;
  LODWORD(v168) = (v142 & 0xF0F0F0F ^ 0xB0F148A | 0x529F8CE7) - (v142 & 0xF0F0F0F ^ 0xB0F148A | 0xAD607318) - 1386188008;
  v179 = v168 ^ 0xDF1D19EA;
  *(_DWORD *)(v0 + 6904) = v131;
  v180 = ((((v131 ^ 0x173A49D5) & v179 ^ v168 & 0x6601DE5C) & 0x89E3E27 ^ 0x89E2427)
        + (((v131 ^ 0x173A49D5) & v179 ^ v168 & 0x6601DE5C) & 0xF761C1D8 ^ 0x62410019)
        - 1) ^ 0x2CDE3CF7;
  *(_DWORD *)(v0 + 7328) = v168 ^ 0x8A3CECF5;
  LODWORD(v168) = v168 & 0x690E8043 ^ 0x80E80C3 ^ (v138 ^ 0x3EBAB59E) & (v168 ^ 0xDF1D19EA);
  LODWORD(v168) = v168 - ((2 * v168) & 0x493528CA) + 614110309;
  *(_DWORD *)(v0 + 7320) = (2 * v128) & 0xF0F0F0F ^ 0x532FF011;
  LODWORD(v170) = (2 * v128) & 0xF0F0F0F ^ 0x81898289;
  *(_DWORD *)(v0 + 6104) = v170;
  LODWORD(v150) = ((v125 ^ 0x82860288) & v170) - 760843624 - ((2 * ((v125 ^ 0x82860288) & v170)) & 0x50C0510);
  *(_DWORD *)(v0 + 7304) = v168 ^ 0xB73E66FC;
  LODWORD(v168) = (v168 ^ 0x65981464) << v87;
  LOBYTE(v131) = v87;
  LODWORD(v177) = v168 + 1774730241 + (~(2 * v168) | 0x2C6F87FD);
  *(_DWORD *)(v0 + 7352) = (v180 >> v139) | v168;
  v181 = v172 ^ 0x8955308;
  LODWORD(v168) = ((2 * (v172 & 0x87878787 ^ 0x86020585)) & 0x9000E02) - (v172 & 0x87878787 ^ 0x86020585) + 1397207206;
  LODWORD(v168) = (v168 & 0x9FC0AD36 ^ 0x8A804904) + (v168 ^ 0x1547B6B3) - ((v168 ^ 0x1547B6B3) & 0xDF808D36);
  *(_DWORD *)(v0 + 6628) = (v180 >> v132) - 760843624 - ((2 * (v180 >> v132)) & 0xA54CE530);
  *(_DWORD *)(v0 + 7296) = v168 ^ 0x4DE19F3E;
  LODWORD(v168) = (2 * v168) ^ 0xB9085CCB;
  *(_DWORD *)(v0 + 5464) = *(_DWORD *)(v0 + 9464) ^ 0x383175BE;
  *(_DWORD *)(v0 + 5448) = v156 ^ 0x98672DA;
  *(_DWORD *)(v0 + 5472) = *(_DWORD *)(v0 + 9448) - 760843624 - ((2 * *(_DWORD *)(v0 + 9448)) & 0xA54CE530);
  *(_DWORD *)(v0 + 6616) = v128 ^ 0x4B20202C;
  v182 = *(_QWORD *)(v0 + 8248);
  *(_DWORD *)(v0 + 7020) = v182 + 1836851937;
  *(_DWORD *)(v0 + 7032) = v182 + 1836851741;
  *(_DWORD *)(v0 + 7136) = v182 + 1836852093;
  *(_DWORD *)(v0 + 7024) = v182 + 1836851973;
  *(_DWORD *)(v0 + 6760) = v182 + 1692535555;
  *(_DWORD *)(v0 + 6828) = v182 + 1692535550;
  *(_DWORD *)(v0 + 6768) = v182 + 1692535549;
  *(_DWORD *)(v0 + 6800) = v182 + 1692535552;
  *(_DWORD *)(v0 + 6856) = v182 + 1692535548;
  *(_DWORD *)(v0 + 6840) = v182 + 1692535560;
  *(_DWORD *)(v0 + 6816) = v182 + 1692535553;
  *(_DWORD *)(v0 + 6864) = v182 + 1692535547;
  *(_DWORD *)(v0 + 6824) = v182 + 1692535557;
  *(_DWORD *)(v0 + 6788) = v182 + 1692535561;
  *(_DWORD *)(v0 + 6812) = v182 + 1692535559;
  *(_DWORD *)(v0 + 6832) = v182 + 1692535558;
  *(_DWORD *)(v0 + 6776) = v182 + 1692535551;
  *(_DWORD *)(v0 + 7176) = v128 ^ 0x233F12BF;
  *(_DWORD *)(v0 + 6784) = v182 + 1692535554;
  *(_DWORD *)(v0 + 6848) = v182 + 1692535556;
  *(_DWORD *)(v0 + 7144) = v128 ^ 0x33F12BF;
  *(_DWORD *)(v0 + 6896) = 2 * v128;
  *(_DWORD *)(v0 + 7104) = (2 * v128) ^ 0x467E257E;
  *(_DWORD *)(v0 + 6936) = v128 ^ 0xA33F12BF;
  *(_QWORD *)(v0 + 6608) = *(_QWORD *)(v0 + 9616) >> v132;
  *(_QWORD *)(v0 + 6600) = *(_DWORD *)(v0 + 9640) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 6592) = *(_DWORD *)(v0 + 9608) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 7608) = *(_DWORD *)(v0 + 9592) - 1344733341;
  LODWORD(v170) = *(_DWORD *)(v0 + 9656);
  *(_QWORD *)(v0 + 6584) = *(_DWORD *)(v0 + 9528) & v170;
  *(_QWORD *)(v0 + 6576) = (unint64_t)((v125 ^ 0x10203010) & v170) >> v132;
  LODWORD(v182) = *(_DWORD *)(v0 + 9584);
  *(_QWORD *)(v0 + 6568) = v137 & v182;
  *(_QWORD *)(v0 + 6560) = (unint64_t)(v158 & v182) >> v132;
  LODWORD(v182) = *(_DWORD *)(v0 + 9576);
  *(_QWORD *)(v0 + 6552) = v137 & v182;
  v183 = *(_QWORD *)(v0 + 8040);
  *(_QWORD *)(v0 + 6544) = (unint64_t)(v183 & v182) >> v132;
  *(_QWORD *)(v0 + 6536) = *(_QWORD *)(v0 + 9560) >> v132;
  *(_QWORD *)(v0 + 6528) = v85 & *(_DWORD *)(v0 + 9552);
  v184 = *(_DWORD *)(v0 + 9536) & v170;
  *(_QWORD *)(v0 + 6520) = v137 & v170;
  *(_QWORD *)(v0 + 6512) = v184 >> v132;
  *(_QWORD *)(v0 + 6504) = (unint64_t)(*(_DWORD *)(v0 + 9544) ^ 0xD2A67298) >> v139;
  LODWORD(v158) = *(_DWORD *)(v0 + 9504);
  *(_QWORD *)(v0 + 6496) = v85 & v158;
  *(_QWORD *)(v0 + 6488) = v137 & v158;
  *(_QWORD *)(v0 + 6480) = (unint64_t)(*(_DWORD *)(v0 + 9496) + 1) >> v132;
  *(_QWORD *)(v0 + 6472) = *(_DWORD *)(v0 + 9456) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 6468) = *(_DWORD *)(v0 + 9440) ^ 0xD2A67298;
  LODWORD(v158) = *(_DWORD *)(v0 + 9432);
  *(_QWORD *)(v0 + 7792) = (unint64_t)((v125 ^ 0x40008) & v158) >> v139;
  *(_QWORD *)(v0 + 6456) = v137 & v158;
  *(_QWORD *)(v0 + 6448) = (unint64_t)(v167 & *(_DWORD *)(v0 + 9408)) >> v132;
  *(_QWORD *)(v0 + 6440) = *(_DWORD *)(v0 + 9416) ^ 0xD2A67298;
  *(_QWORD *)(v0 + 6432) = v173 >> v132;
  *(_DWORD *)(v0 + 7368) = *(_DWORD *)(v0 + 9680) & 2;
  LODWORD(v180) = *(_DWORD *)(v0 + 6112);
  *(_QWORD *)(v0 + 6424) = (unint64_t)((v125 ^ 0xD0A47098) & v180) >> v132;
  *(_DWORD *)(v0 + 6912) = v125;
  *(_DWORD *)(v0 + 8936) = -760843632;
  *(_DWORD *)(v0 + 5968) = v125 ^ 0xD2A67290;
  *(_QWORD *)(v0 + 6416) = (unint64_t)((v125 ^ 0xD2A67290) & v175) >> v132;
  *(_DWORD *)(v0 + 7312) = v150;
  v185 = v150 ^ 0xD2A67298;
  v186 = *(_QWORD *)(v0 + 9688);
  *(_QWORD *)(v0 + 6408) = v185 >> v132;
  *(_DWORD *)(v0 + 7288) = v177 + 1;
  *(_QWORD *)(v0 + 6400) = v137 & v179;
  *(_QWORD *)(v0 + 6392) = v137 & v168;
  *(_QWORD *)(v0 + 6384) = (unint64_t)(v183 & v168) >> v132;
  *(_DWORD *)(v0 + 6756) = 4 * *(_DWORD *)(v0 + 9664);
  LODWORD(v168) = *(_DWORD *)(v0 + 7216);
  *(_DWORD *)(v0 + 8760) = v168 ^ 0x51;
  *(_DWORD *)(v0 + 6064) = v128;
  *(_DWORD *)(v0 + 6380) = v128 ^ 0x5CC0ED40;
  *(_DWORD *)(v0 + 6888) = v142;
  *(_DWORD *)(v0 + 7364) = v181;
  LODWORD(v185) = (v142 ^ 0x112AA610) & v181;
  *(_DWORD *)(v0 + 5976) = v185;
  *(_DWORD *)(v0 + 6720) = v142 ^ 0x112AA610;
  *(_DWORD *)(v0 + 6368) = (4 * v185) & (v142 ^ 0x112AA610);
  *(_DWORD *)(v0 + 7600) = *(_DWORD *)(v0 + 9720) ^ 0x7D7E8DFB;
  *(_DWORD *)(v0 + 7592) = *(_DWORD *)(v0 + 9728) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 7584) = *(_DWORD *)(v0 + 9704) ^ 0x7D7E8DFB;
  *(_DWORD *)(v0 + 7432) = *(_DWORD *)(v0 + 9736) ^ 0xAFD8FF63;
  *(_DWORD *)(v0 + 7424) = *(_DWORD *)(v0 + 9648) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 7416) = *(_DWORD *)(v0 + 9632) ^ 0x7D7E8DFB;
  *(_DWORD *)(v0 + 9052) = -1092726468;
  *(_DWORD *)(v0 + 7152) = 601367;
  *(_QWORD *)(v0 + 6352) = v137 & *(_DWORD *)(v0 + 6104);
  *(_DWORD *)(v0 + 6048) = v175;
  *(_QWORD *)(v0 + 6736) = v137 & v175;
  *(_QWORD *)(v0 + 6728) = v137 & v180;
  *(_DWORD *)(v0 + 6704) = v168 ^ 0x83F723C9;
  *(_DWORD *)(v0 + 7088) = (_DWORD)v137 << v131;
  *(_DWORD *)(v0 + 5964) = v125 ^ 0xD0A47098;
  v187 = (v125 ^ 0xD0A47098) & *(_DWORD *)(v0 + 6100);
  *(_QWORD *)(v0 + 5952) = v187;
  *(_QWORD *)(v0 + 6344) = v187 >> v139;
  *(_QWORD *)(v0 + 7008) = v167 >> v132;
  *(_QWORD *)(v0 + 7000) = v183 >> v139;
  *(_DWORD *)(v0 + 6992) = *(_QWORD *)(v0 + 7264) << v131;
  *(_QWORD *)(v0 + 8160) = v139;
  *(_QWORD *)(v0 + 7208) = v167;
  *(_QWORD *)(v0 + 7096) = v167 >> v139;
  *(_QWORD *)(v0 + 8992) = v132;
  *(_QWORD *)(v0 + 6984) = v183 >> v132;
  *(_DWORD *)(v0 + 6336) = *(_DWORD *)(v0 + 7476) ^ 0xD2A67298;
  *(_DWORD *)(v0 + 6332) = *(_DWORD *)(v0 + 7536) ^ 0xD2A67298;
  *(_QWORD *)(v0 + 8176) = v137;
  *(_QWORD *)(v0 + 6320) = v137 & *(_DWORD *)(v0 + 6088);
  *(_DWORD *)(v0 + 9656) = -760843624;
  v188 = *(_QWORD *)(v0 + 9744);
  v189 = *(_QWORD **)(v0 + 9088);
  v190 = *(_DWORD **)(v0 + 9216);
  *(_DWORD *)(v0 + 9736) = 13;
  LODWORD(v170) = v186 - 1427;
  v191 = *(_QWORD *)(v0 + 7232);
  LODWORD(v180) = -333269657 * ((*(_DWORD *)(*v189 + (*v190 & 0x3934A394)) ^ v191) & 0x7FFFFFFF);
  v192 = -333269657 * (v180 ^ WORD1(v180));
  *(_BYTE *)(v191 - 0x615AA8BF64E1825ELL) = *((_BYTE *)*(&off_1004ECA20 + (int)(v170 ^ 0x1663)) + (v192 >> 24)) ^ (*(_BYTE *)(*(_QWORD *)(v0 + 9672) + 2912) + ((-117 * (v170 ^ 0x6A) - 100) & 0x98 ^ 0x90) + ((-117 * (v170 ^ 0x6A) - 100) & 0x98 ^ 0x23)) ^ *((_BYTE *)*(&off_1004ECA20 + (int)v170 - 4304) + (v192 >> 24) - 3) ^ *((_BYTE *)*(&off_1004ECA20 + (int)(v170 ^ 0x1680)) + (v192 >> 24) + 2) ^ v192 ^ (-119 * BYTE3(v192));
  return (*(uint64_t (**)(void))(v188 + 8 * ((3501 * (*(_DWORD *)(v0 + 9736) > 1u)) ^ ((int)v186 - 1427))))();
}

void sub_100338C10()
{
  JUMPOUT(0x100338A34);
}

uint64_t sub_100338C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, _DWORD *a8)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;

  v21 = v10 ^ v11;
  v22 = -333269657 * ((*(_DWORD *)(*a7 + (*a8 & v13)) ^ (v20 + v21)) & 0x7FFFFFFF);
  v23 = -333269657 * (v22 ^ HIWORD(v22));
  *(_BYTE *)(v20 + v21 - 0x615AA8BF64E1825ELL) = *(_BYTE *)((v23 >> 24) + v17 + 1) ^ *(_BYTE *)(a5 + (v23 >> 24)) ^ (*(_BYTE *)(v9 + v21) + (((v8 ^ 0x9A) - 3 * (v10 ^ v14) - ((-6 * (v10 ^ v14)) & 0x84) - 75) ^ 0x42) - 77) ^ *(_BYTE *)((v23 >> 24) + v15 + 2) ^ v23 ^ (BYTE3(v23) * v19);
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((88
                                * ((((_DWORD)v21 - 760843624 - ((2 * (_DWORD)v21 + 2) & v16) + 1) ^ *(_DWORD *)(v12 + 8936)) < 0x10)) ^ v8)))();
}

uint64_t sub_100338D94@<X0>(int a1@<W2>, uint64_t a2@<X4>, int a3@<W5>, _QWORD *a4@<X6>, _DWORD *a5@<X7>, char a6@<W8>)
{
  char v6;
  int v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  _DWORD *v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  char *v61;
  uint64_t v62;
  int v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  char *v84;
  char *v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  uint64_t v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  char *v105;
  uint64_t v106;
  char *v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  int v142;
  uint64_t v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  char *v155;
  char *v156;
  uint64_t v157;
  int v158;
  char *v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  _DWORD *v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  int v215;
  char *v216;
  int v217;
  char *v218;
  int v219;
  char *v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  char *v262;
  char *v263;
  char *v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  char *v326;
  char *v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  char *v351;
  char *v352;
  char *v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  int v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  int v393;
  unsigned int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  unsigned int v403;
  int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unint64_t v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;

  *(_QWORD *)(v10 + 7184) = v11;
  *(_QWORD *)(v10 + 7192) = v13;
  *(_QWORD *)(v10 + 7200) = a2;
  *(_DWORD *)(v10 + 9616) = a3 ^ 0x3C80;
  v15 = (a1 ^ (v9 - 1795) ^ a3 ^ 0x3C80)
      - 2 * (((a1 ^ (v9 - 1795) ^ a3 ^ 0x3C80) + 2090021542) & 0x52A67299 ^ v8 & 1)
      - 818305730;
  v16 = ((v15 >> 13) ^ 0x69533) + (v15 ^ v9) + v9 - (v12 & (2 * (((v15 >> 13) ^ 0x69533) + (v15 ^ v9))));
  v17 = (v16 ^ v9) + ((v16 >> 4) ^ 0xF2D598D6);
  v18 = ((v17 - 25610527) >> (a6 & 0xD ^ 5 | a6 & 0xD ^ 8)) + v17 - 25610527;
  v19 = (v17 + 1 + v9 - (v12 & (2 * (v17 + 1)))) ^ v7;
  v20 = *(_DWORD **)(v10 + 8248);
  v21 = v20[1597];
  v22 = v18 + (v18 >> 2);
  v23 = v20[1650];
  v24 = v20[1581];
  v25 = v9
      + (v22 ^ 0x29EFDF01)
      + ((v22 ^ 0x29EFDF01) >> 14)
      - (v12 & (2 * ((v22 ^ 0x29EFDF01) + ((v22 ^ 0x29EFDF01) >> 14))));
  v26 = *(_DWORD *)(*a4 + (int)(*a5 & 0xE8B5AED8));
  v27 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5504)) & 0x7FFFFFFF);
  v28 = v27 ^ HIWORD(v27);
  v29 = -333269657 * v28;
  v30 = (-333269657 * v28) >> 24;
  v31 = -1251540992 * v28;
  v32 = (char *)*(&off_1004ECA20 + (a3 ^ 0x2653)) - 4;
  v33 = (char *)*(&off_1004ECA20 + a3 - 8491) - 8;
  v34 = (uint64_t)*(&off_1004ECA20 + a3 - 9086);
  *(_DWORD *)(v10 + 9728) = *(_DWORD *)&v32[4 * v30] ^ v20[1672] ^ *(_DWORD *)&v33[4 * v30 + 12] ^ *(_DWORD *)(v34 + 4 * v30) ^ v31 ^ v29 ^ (1337877545 * v30);
  v35 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5528)) & 0x7FFFFFFF);
  v36 = v35 ^ HIWORD(v35);
  v37 = 4 * ((-333269657 * v36) >> 24);
  v38 = *(_DWORD *)&v32[v37];
  *(_DWORD *)(v10 + 9592) = v19 ^ v22;
  v39 = (-1251540992 * v36) ^ v21 ^ (-333269657 * v36) ^ v38 ^ *(_DWORD *)&v33[4
                                                                             * ((-333269657 * v36) >> 24)
                                                                             + 12] ^ (1337877545
                                                                                    * ((-333269657 * v36) >> 24)) ^ *(_DWORD *)(v34 + v37);
  v40 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5580)) & 0x7FFFFFFF);
  v41 = v40 ^ HIWORD(v40);
  v42 = (-1251540992 * v41) ^ v24 ^ (-333269657 * v41) ^ (1337877545 * ((-333269657 * v41) >> 24)) ^ *(_DWORD *)&v32[4 * ((-333269657 * v41) >> 24)] ^ *(_DWORD *)&v33[4 * ((-333269657 * v41) >> 24) + 12] ^ *(_DWORD *)(v34 + 4 * ((-333269657 * v41) >> 24));
  v43 = (v25 ^ 0xD2A67298) + ((v25 >> 7) ^ 0xFE5AB31A) + 1;
  *(_DWORD *)(v10 + 8784) = v43 - 760843624 - (v12 & (2 * v43));
  v44 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5732)) & 0x7FFFFFFF);
  v45 = v44 ^ HIWORD(v44);
  v46 = (-333269657 * v45) ^ (-1251540992 * v45) ^ v20[1664] ^ (1337877545 * ((-333269657 * v45) >> 24)) ^ *(_DWORD *)&v32[4 * ((-333269657 * v45) >> 24)] ^ *(_DWORD *)&v33[4 * ((-333269657 * v45) >> 24) + 12] ^ *(_DWORD *)(v34 + 4 * ((-333269657 * v45) >> 24));
  *(_DWORD *)(v10 + 9148) = 1202855529 * v39 - 1310673425 - ((-1099659602 - 1889256238 * v39) & v12);
  v47 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6260)) & 0x7FFFFFFF);
  v48 = v47 ^ HIWORD(v47);
  v49 = *(_DWORD *)&v32[4 * ((-333269657 * v48) >> 24)] ^ v23 ^ *(_DWORD *)&v33[4
                                                                                            * ((-333269657 * v48) >> 24)
                                                                                            + 12] ^ *(_DWORD *)(v34 + 4 * ((-333269657 * v48) >> 24)) ^ (-1251540992 * v48) ^ (-333269657 * v48) ^ (1337877545 * ((-333269657 * v48) >> 24));
  *(_DWORD *)(v10 + 9640) = v20[1634];
  *(_DWORD *)(v10 + 8116) = 1202855529 * v49 - 1310673425 - ((-1099659602 - 1889256238 * v49) & v12);
  v50 = v20[1632];
  *(_DWORD *)(v10 + 9152) = 1202855529 * v46 - 1310673425 - ((-1099659602 - 1889256238 * v46) & v12);
  v51 = v20[1665];
  *(_DWORD *)(v10 + 9720) = v20[1574];
  v52 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5584)) & 0x7FFFFFFF);
  v53 = v52 ^ HIWORD(v52);
  *(_DWORD *)(v10 + 9664) = (-1251540992 * v53) ^ v51 ^ (-333269657 * v53) ^ (1337877545
                                                                            * ((-333269657 * v53) >> 24)) ^ *(_DWORD *)&v32[4 * ((-333269657 * v53) >> 24)] ^ *(_DWORD *)&v33[4 * ((-333269657 * v53) >> 24) + 12] ^ *(_DWORD *)(v34 + 4 * ((-333269657 * v53) >> 24));
  v54 = v20[1611];
  v55 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5720)) & 0x7FFFFFFF);
  v56 = v55 ^ HIWORD(v55);
  v57 = -333269657 * v56;
  v58 = (-333269657 * v56) >> 24;
  v59 = -1251540992 * v56;
  v60 = a3;
  *(_DWORD *)(v10 + 9736) = a3;
  v61 = (char *)*(&off_1004ECA20 + a3 - 9386) - 4;
  v62 = 4 * v58;
  v63 = *(_DWORD *)&v61[v62];
  v64 = (char *)*(&off_1004ECA20 + v60 - 8521) - 12;
  *(_QWORD *)(v10 + 9704) = v64;
  v65 = (char *)*(&off_1004ECA20 + v60 - 9453) - 4;
  v66 = v57 ^ v59 ^ v54 ^ (1372306415 * v58) ^ v63 ^ *(_DWORD *)&v64[v62] ^ *(_DWORD *)&v65[4 * v58 + 24];
  v67 = *(_DWORD *)&v32[v62];
  v68 = *(_DWORD *)&v33[4 * v58 + 12];
  *(_DWORD *)(v10 + 9688) = v66 - 760843624 - ((2 * v66) & 0xA54CE530);
  v69 = v67 ^ v54 ^ v68 ^ *(_DWORD *)(v34 + v62) ^ v59 ^ v57 ^ (1337877545 * v58);
  *(_DWORD *)(v10 + 9680) = v69 - 760843624 - ((2 * v69) & 0xA54CE530);
  *(_DWORD *)(v10 + 9608) = 1202855529 * v42 - 1310673425 - ((-1099659602 - 1889256238 * v42) & 0xA54CE530);
  v70 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5772)) & 0x7FFFFFFF);
  v71 = v70 ^ HIWORD(v70);
  v72 = *(_DWORD *)&v32[4 * ((-333269657 * v71) >> 24)] ^ v50 ^ *(_DWORD *)&v33[4
                                                                                            * ((-333269657 * v71) >> 24)
                                                                                            + 12] ^ *(_DWORD *)(v34 + 4 * ((-333269657 * v71) >> 24)) ^ (-1251540992 * v71) ^ (-333269657 * v71) ^ (1337877545 * ((-333269657 * v71) >> 24));
  v73 = v20[1576];
  *(_DWORD *)(v10 + 9120) = 1202855529 * *(_DWORD *)(v10 + 9728)
                          - 1310673425
                          - ((-1889256238 * *(_DWORD *)(v10 + 9728) - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9648) = 1202855529 * v72 - 1310673425 - ((-1889256238 * v72 - 1099659602) & 0xA54CE530);
  v74 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6264)) & 0x7FFFFFFF);
  v75 = v74 ^ HIWORD(v74);
  v76 = (-1251540992 * v75) ^ *(_DWORD *)(v10 + 9640) ^ (-333269657 * v75) ^ (1337877545
                                                                            * ((-333269657 * v75) >> 24)) ^ *(_DWORD *)&v32[4 * ((-333269657 * v75) >> 24)] ^ *(_DWORD *)&v33[4 * ((-333269657 * v75) >> 24) + 12] ^ *(_DWORD *)(v34 + 4 * ((-333269657 * v75) >> 24));
  v77 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5820)) & 0x7FFFFFFF);
  v78 = v77 ^ HIWORD(v77);
  v79 = *(_QWORD *)(v10 + 9704);
  v80 = *(_DWORD *)&v61[4 * ((-333269657 * v78) >> 24)] ^ v73 ^ *(_DWORD *)(v79
                                                                                        + 4
                                                                                        * ((-333269657 * v78) >> 24)) ^ *(_DWORD *)&v65[4 * ((-333269657 * v78) >> 24) + 24] ^ (-1251540992 * v78) ^ (-333269657 * v78) ^ (1372306415 * ((-333269657 * v78) >> 24));
  v81 = 1202855529 * v80 - 760843624 - ((-1889256238 * v80) & 0xA54CE530);
  v82 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5632)) & 0x7FFFFFFF);
  v83 = v82 ^ HIWORD(v82);
  v84 = v61;
  v85 = v65;
  v86 = *(_DWORD *)&v61[4 * ((-333269657 * v83) >> 24)] ^ v20[1582] ^ *(_DWORD *)(v79
                                                                                              + 4
                                                                                              * ((-333269657 * v83) >> 24)) ^ (-1251540992 * v83) ^ (-333269657 * v83) ^ *(_DWORD *)&v65[4 * ((-333269657 * v83) >> 24) + 24] ^ (1372306415 * ((-333269657 * v83) >> 24));
  v87 = 1202855529 * v86 - 1111511362 - ((258227410 * v86) & 0x7B7F5D7C);
  *(_DWORD *)(v10 + 9728) = 1202855529 * *(_DWORD *)(v10 + 9664)
                          - 1310673425
                          - ((-1889256238 * *(_DWORD *)(v10 + 9664) - 1099659602) & 0xA54CE530);
  v88 = v20[1556];
  LODWORD(v65) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5812)) & 0x7FFFFFFF);
  LODWORD(v65) = v65 ^ (v65 >> 16);
  LODWORD(v32) = (-1251540992 * (_DWORD)v65) ^ *(_DWORD *)(v10 + 9720) ^ (-333269657 * (_DWORD)v65) ^ (1337877545 * ((-333269657 * (_DWORD)v65) >> 24)) ^ *(_DWORD *)&v32[4 * ((-333269657 * (_DWORD)v65) >> 24)] ^ *(_DWORD *)&v33[4 * ((-333269657 * (_DWORD)v65) >> 24) + 12] ^ *(_DWORD *)(v34 + 4 * ((-333269657 * (_DWORD)v65) >> 24));
  *(_DWORD *)(v10 + 9576) = 1202855529 * (_DWORD)v32
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v32 - 1099659602) & 0xA54CE530);
  LODWORD(v33) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5700)) & 0x7FFFFFFF);
  LODWORD(v33) = v33 ^ (v33 >> 16);
  LODWORD(v32) = *(_DWORD *)&v61[4 * ((-333269657 * (_DWORD)v33) >> 24)] ^ v20[1657] ^ *(_DWORD *)(v79 + 4 * ((-333269657 * (_DWORD)v33) >> 24)) ^ *(_DWORD *)&v85[4 * ((-333269657 * (_DWORD)v33) >> 24) + 24] ^ (-1251540992 * (_DWORD)v33) ^ (-333269657 * (_DWORD)v33) ^ (1372306415 * ((-333269657 * (_DWORD)v33) >> 24));
  LODWORD(v33) = 1202855529 * (_DWORD)v32 - 760843624 - ((-1889256238 * (_DWORD)v32) & 0xA54CE530);
  *(_DWORD *)(v10 + 9288) = (v87 ^ 0xBDBFAEBE) - 1310673425 - ((2 * (v87 ^ 0xBDBFAEBE) - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9552) = (v81 ^ 0xD2A67298) - 1310673425 - ((2 * (v81 ^ 0xD2A67298) - 1099659602) & 0xA54CE530);
  LODWORD(v32) = (1202855529 * v76 - 760843624 - ((-1889256238 * v76) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9312) = (_DWORD)v32 - 1310673425 - ((2 * (_DWORD)v32 - 1099659602) & 0xA54CE530);
  v89 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5864)) & 0x7FFFFFFF);
  v90 = v89 ^ HIWORD(v89);
  LODWORD(v32) = *(_DWORD *)&v61[4 * ((-333269657 * v90) >> 24)] ^ v20[1568] ^ (-1251540992 * v90) ^ (-333269657 * v90) ^ *(_DWORD *)(v79 + 4 * ((-333269657 * v90) >> 24)) ^ *(_DWORD *)&v85[4 * ((-333269657 * v90) >> 24) + 24] ^ (1372306415 * ((-333269657 * v90) >> 24));
  v91 = 1202855529 * (_DWORD)v32 - 760843624 - ((-1889256238 * (_DWORD)v32) & 0xA54CE530);
  LODWORD(v32) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5756)) & 0x7FFFFFFF);
  LODWORD(v32) = v32 ^ (v32 >> 16);
  LODWORD(v32) = (-1251540992 * (_DWORD)v32) ^ v88 ^ (-333269657 * (_DWORD)v32) ^ (1372306415
                                                                                 * ((-333269657
                                                                                                 * (_DWORD)v32) >> 24)) ^ *(_DWORD *)&v61[4 * ((-333269657 * (_DWORD)v32) >> 24)] ^ *(_DWORD *)(v79 + 4 * ((-333269657 * (_DWORD)v32) >> 24)) ^ *(_DWORD *)&v85[4 * ((-333269657 * (_DWORD)v32) >> 24) + 24];
  *(_DWORD *)(v10 + 9304) = 1202855529 * (_DWORD)v32
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v32 - 1099659602) & 0xA54CE530);
  LODWORD(v32) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5648)) & 0x7FFFFFFF);
  LODWORD(v32) = v32 ^ (v32 >> 16);
  v92 = v20[1594];
  *(_DWORD *)(v10 + 9720) = *(_DWORD *)&v61[4 * ((-333269657 * (_DWORD)v32) >> 24)] ^ v20[1626] ^ *(_DWORD *)(v79 + 4 * ((-333269657 * (_DWORD)v32) >> 24)) ^ *(_DWORD *)&v85[4 * ((-333269657 * (_DWORD)v32) >> 24) + 24] ^ (-1251540992 * (_DWORD)v32) ^ (-333269657 * (_DWORD)v32) ^ (1372306415 * ((-333269657 * (_DWORD)v32) >> 24));
  *(_DWORD *)(v10 + 9536) = (v91 ^ 0xD2A67298) - 1310673425 - ((2 * (v91 ^ 0xD2A67298) - 1099659602) & 0xA54CE530);
  v93 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5804)) & 0x7FFFFFFF);
  v94 = v93 ^ HIWORD(v93);
  v95 = 4 * ((-333269657 * v94) >> 24);
  LODWORD(v65) = *(_DWORD *)&v84[v95];
  *(_QWORD *)(v10 + 9416) = v84;
  LODWORD(v95) = *(_DWORD *)(v79 + v95);
  *(_QWORD *)(v10 + 9440) = v85;
  v96 = v65 ^ v92 ^ v95 ^ *(_DWORD *)&v85[4 * ((-333269657 * v94) >> 24) + 24] ^ (-1251540992 * v94) ^ (-333269657 * v94) ^ (1372306415 * ((-333269657 * v94) >> 24));
  v97 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6252)) & 0x7FFFFFFF);
  v98 = v97 ^ HIWORD(v97);
  v99 = (-1251540992 * v98) ^ v20[1549] ^ (-333269657 * v98) ^ *(_DWORD *)&v84[4
                                                                             * ((-333269657 * v98) >> 24)] ^ *(_DWORD *)(v79 + 4 * ((-333269657 * v98) >> 24)) ^ (1372306415 * ((-333269657 * v98) >> 24)) ^ *(_DWORD *)&v85[4 * ((-333269657 * v98) >> 24) + 24];
  v100 = (1202855529 * v99 - 760843624 - ((-1889256238 * v99) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8860) = v100 - 1310673425 - ((2 * v100 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9328) = 1202855529 * v96 - 1310673425 - ((-1889256238 * v96 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8872) = (v33 ^ 0xD2A67298)
                          - 1310673425
                          - ((2 * (v33 ^ 0xD2A67298) - 1099659602) & 0xA54CE530);
  v101 = *(_DWORD *)(v10 + 9688);
  if (v6)
    v101 = *(_DWORD *)(v10 + 9680);
  *(_DWORD *)(v10 + 9496) = v101;
  v102 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5716)) & 0x7FFFFFFF);
  v103 = v102 ^ HIWORD(v102);
  v104 = *(_DWORD *)(v10 + 9736);
  v105 = (char *)*(&off_1004ECA20 + v104 - 9142) - 8;
  v106 = (uint64_t)*(&off_1004ECA20 + (v104 ^ 0x26E6));
  v107 = (char *)*(&off_1004ECA20 + v104 - 8939) - 4;
  *(_DWORD *)(v10 + 9584) = *(_DWORD *)&v105[4 * ((-333269657 * v103) >> 24)] ^ v20[1563] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v103) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v103) >> 24)] ^ (-1251540992 * v103) ^ (-333269657 * v103) ^ (-78448019 * ((-333269657 * v103) >> 24));
  v108 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5564)) & 0x7FFFFFFF);
  v109 = v108 ^ HIWORD(v108);
  v110 = (-333269657 * v109) ^ (-1251540992 * v109) ^ v20[1678] ^ (-78448019 * ((-333269657 * v109) >> 24)) ^ *(_DWORD *)&v105[4 * ((-333269657 * v109) >> 24)] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v109) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v109) >> 24)];
  v111 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5532)) & 0x7FFFFFFF);
  v112 = v111 ^ HIWORD(v111);
  *(_DWORD *)(v10 + 9376) = (-333269657 * v112) ^ (-1251540992 * v112) ^ v20[1573] ^ (-78448019
                                                                                    * ((-333269657 * v112) >> 24)) ^ *(_DWORD *)&v105[4 * ((-333269657 * v112) >> 24)] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v112) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v112) >> 24)];
  v113 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6232)) & 0x7FFFFFFF);
  v114 = v113 ^ HIWORD(v113);
  v115 = (-333269657 * v114) ^ (-1251540992 * v114) ^ v20[1649] ^ (-78448019 * ((-333269657 * v114) >> 24)) ^ *(_DWORD *)&v105[4 * ((-333269657 * v114) >> 24)] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v114) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v114) >> 24)];
  *(_DWORD *)(v10 + 8432) = 1202855529 * v115 - 1310673425 - ((-1889256238 * v115 - 1099659602) & 0xA54CE530);
  v116 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5780)) & 0x7FFFFFFF);
  v117 = v116 ^ HIWORD(v116);
  v118 = *(_DWORD *)&v105[4 * ((-333269657 * v117) >> 24)] ^ v20[1621] ^ *(_DWORD *)(v106
                                                                                                 + 4
                                                                                                 * ((-333269657 * v117) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v117) >> 24)] ^ (-1251540992 * v117) ^ (-333269657 * v117) ^ (-78448019 * ((-333269657 * v117) >> 24));
  v119 = (1202855529 * v118 - 760843624 - ((-1889256238 * v118) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8748) = v119 - 1310673425 - ((2 * v119 - 1099659602) & 0xA54CE530);
  v120 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5768)) & 0x7FFFFFFF);
  v121 = v120 ^ HIWORD(v120);
  v122 = *(_DWORD *)&v105[4 * ((-333269657 * v121) >> 24)] ^ v20[1668] ^ *(_DWORD *)(v106
                                                                                                 + 4
                                                                                                 * ((-333269657 * v121) >> 24)) ^ (-1251540992 * v121) ^ (-333269657 * v121) ^ *(_DWORD *)&v107[4 * ((-333269657 * v121) >> 24)] ^ (-78448019 * ((-333269657 * v121) >> 24));
  *(_DWORD *)(v10 + 9560) = -1310673424;
  *(_DWORD *)(v10 + 7248) = 1202855529 * v122 - 1310673424 + ~((-1889256238 * v122 - 1099659602) & 0xA54CE530);
  v123 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5592)) & 0x7FFFFFFF);
  v124 = v123 ^ HIWORD(v123);
  v125 = (-333269657 * v124) ^ (-1251540992 * v124) ^ v20[1572] ^ (-78448019 * ((-333269657 * v124) >> 24)) ^ *(_DWORD *)&v105[4 * ((-333269657 * v124) >> 24)] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v124) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v124) >> 24)];
  *(_DWORD *)(v10 + 8912) = 1202855529 * v125 - 1310673425 - ((-1889256238 * v125 - 1099659602) & 0xA54CE530);
  v126 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5560)) & 0x7FFFFFFF);
  v127 = v126 ^ HIWORD(v126);
  v128 = (-333269657 * v127) ^ (-1251540992 * v127) ^ v20[1623] ^ (-78448019 * ((-333269657 * v127) >> 24)) ^ *(_DWORD *)&v105[4 * ((-333269657 * v127) >> 24)] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v127) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v127) >> 24)];
  *(_DWORD *)(v10 + 8064) = 1202855529 * v128 - 1310673425 - ((-1889256238 * v128 - 1099659602) & 0xA54CE530);
  v129 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5836)) & 0x7FFFFFFF);
  v130 = v129 ^ HIWORD(v129);
  v131 = *(_DWORD *)&v105[4 * ((-333269657 * v130) >> 24)] ^ v20[1679] ^ *(_DWORD *)(v106
                                                                                                 + 4
                                                                                                 * ((-333269657 * v130) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v130) >> 24)] ^ (-1251540992 * v130) ^ (-333269657 * v130) ^ (-78448019 * ((-333269657 * v130) >> 24));
  *(_DWORD *)(v10 + 8080) = 1202855529 * v131 - 1310673425 - ((-1889256238 * v131 - 1099659602) & 0xA54CE530);
  v132 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 7020)) & 0x7FFFFFFF);
  v133 = v132 ^ HIWORD(v132);
  v134 = *(_DWORD *)&v105[4 * ((-333269657 * v133) >> 24)] ^ v20[1644] ^ *(_DWORD *)(v106
                                                                                                 + 4
                                                                                                 * ((-333269657 * v133) >> 24)) ^ (-1251540992 * v133) ^ (-333269657 * v133) ^ *(_DWORD *)&v107[4 * ((-333269657 * v133) >> 24)] ^ (-78448019 * ((-333269657 * v133) >> 24));
  *(_DWORD *)(v10 + 9528) = 1202855529 * v134 - 1310673425 - ((-1889256238 * v134 - 1099659602) & 0xA54CE530);
  v135 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 7032)) & 0x7FFFFFFF);
  v136 = v135 ^ HIWORD(v135);
  v137 = (-333269657 * v136) ^ (-1251540992 * v136) ^ v20[1595] ^ (-78448019 * ((-333269657 * v136) >> 24)) ^ *(_DWORD *)&v105[4 * ((-333269657 * v136) >> 24)] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v136) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v136) >> 24)];
  *(_DWORD *)(v10 + 8904) = 1202855529 * v137 - 1310673425 - ((-1889256238 * v137 - 1099659602) & 0xA54CE530);
  v138 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5620)) & 0x7FFFFFFF);
  v139 = v138 ^ HIWORD(v138);
  *(_DWORD *)(v10 + 9296) = (-333269657 * v139) ^ (-1251540992 * v139) ^ v20[1654] ^ (-78448019
                                                                                    * ((-333269657 * v139) >> 24)) ^ *(_DWORD *)&v105[4 * ((-333269657 * v139) >> 24)] ^ *(_DWORD *)(v106 + 4 * ((-333269657 * v139) >> 24)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v139) >> 24)];
  v140 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5616)) & 0x7FFFFFFF);
  v141 = v140 ^ HIWORD(v140);
  v142 = v20[1571];
  v143 = 4 * ((-333269657 * v141) >> 24);
  v144 = *(_DWORD *)&v105[v143];
  *(_QWORD *)(v10 + 9680) = v105;
  v145 = v144 ^ v142;
  v146 = *(_DWORD *)(v106 + v143);
  *(_QWORD *)(v10 + 9664) = v106;
  *(_QWORD *)(v10 + 9640) = v107;
  *(_DWORD *)(v10 + 9632) = v145 ^ v146 ^ *(_DWORD *)&v107[v143] ^ (-1251540992 * v141) ^ (-333269657 * v141) ^ (-78448019 * ((-333269657 * v141) >> 24));
  v147 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6272)) & 0x7FFFFFFF);
  v148 = v147 ^ HIWORD(v147);
  v149 = *(_DWORD *)&v105[4 * ((-333269657 * v148) >> 24)] ^ v20[1591] ^ *(_DWORD *)(v106
                                                                                                 + 4
                                                                                                 * ((-333269657 * v148) >> 24)) ^ (-1251540992 * v148) ^ (-333269657 * v148) ^ *(_DWORD *)&v107[4 * ((-333269657 * v148) >> 24)] ^ (-78448019 * ((-333269657 * v148) >> 24));
  *(_DWORD *)(v10 + 9392) = 1202855529 * v149 - 1310673425 - ((-1889256238 * v149 - 1099659602) & 0xA54CE530);
  v150 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5712)) & 0x7FFFFFFF);
  v151 = v150 ^ HIWORD(v150);
  v152 = v20[1575];
  v153 = (-333269657 * v151) >> 24;
  v154 = v104;
  v155 = (char *)*(&off_1004ECA20 + v104 - 8633) - 12;
  v156 = (char *)*(&off_1004ECA20 + (v154 ^ 0x2664)) - 8;
  LODWORD(v106) = *(_DWORD *)&v156[4 * v153 + 8];
  *(_DWORD *)(v10 + 9464) = v106;
  v157 = 4 * v153;
  v158 = *(_DWORD *)&v155[v157];
  v159 = (char *)*(&off_1004ECA20 + v154 - 9270) - 12;
  v160 = *(_DWORD *)&v159[v157];
  *(_DWORD *)(v10 + 9472) = v160;
  v161 = (-333269657 * v151) ^ (-1251540992 * v151) ^ v152 ^ (-602315535 * v153) ^ v158 ^ v106 ^ v160;
  *(_DWORD *)(v10 + 8536) = 1202855529 * v161 - 1310673425 - ((-1099659602 - 1889256238 * v161) & 0xA54CE530);
  v162 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5904)) & 0x7FFFFFFF);
  v163 = v162 ^ HIWORD(v162);
  v164 = (-333269657 * v163) ^ (-1251540992 * v163) ^ v20[1628] ^ (-602315535 * ((-333269657 * v163) >> 24)) ^ *(_DWORD *)&v155[4 * ((-333269657 * v163) >> 24)] ^ *(_DWORD *)&v156[4 * ((-333269657 * v163) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v163) >> 24)];
  v165 = (1202855529 * v164 - 760843624 - ((-1889256238 * v164) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9280) = v165 - 1310673425 - ((2 * v165 - 1099659602) & 0xA54CE530);
  v166 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5724)) & 0x7FFFFFFF);
  v167 = v166 ^ HIWORD(v166);
  LODWORD(v105) = *(_DWORD *)&v155[4 * ((-333269657 * v167) >> 24)] ^ v20[1648] ^ *(_DWORD *)&v156[4 * ((-333269657 * v167) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v167) >> 24)] ^ (-1251540992 * v167) ^ (-333269657 * v167) ^ (-602315535 * ((-333269657 * v167) >> 24));
  *(_DWORD *)(v10 + 8576) = 1202855529 * (_DWORD)v105
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v105) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5828)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  v168 = *(_DWORD *)&v155[4 * ((-333269657 * (_DWORD)v105) >> 24)] ^ v20[1590] ^ *(_DWORD *)&v156[4 * ((-333269657 * (_DWORD)v105) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * (_DWORD)v105) >> 24)] ^ (-1251540992 * (_DWORD)v105) ^ (-333269657 * (_DWORD)v105) ^ (-602315535 * ((-333269657 * (_DWORD)v105) >> 24));
  *(_DWORD *)(v10 + 9504) = 1202855529 * v168 - 1310673425 - ((-1099659602 - 1889256238 * v168) & 0xA54CE530);
  v169 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5680)) & 0x7FFFFFFF);
  v170 = v169 ^ HIWORD(v169);
  v171 = (-333269657 * v170) ^ (-1251540992 * v170) ^ v20[1613] ^ (-602315535 * ((-333269657 * v170) >> 24)) ^ *(_DWORD *)&v155[4 * ((-333269657 * v170) >> 24)] ^ *(_DWORD *)&v156[4 * ((-333269657 * v170) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v170) >> 24)];
  *(_DWORD *)(v10 + 9688) = 1202855529 * v171 - 1310673425 - ((-1099659602 - 1889256238 * v171) & 0xA54CE530);
  v172 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5880)) & 0x7FFFFFFF);
  v173 = v172 ^ HIWORD(v172);
  v174 = (-333269657 * v173) ^ (-1251540992 * v173) ^ v20[1684] ^ (-602315535 * ((-333269657 * v173) >> 24)) ^ *(_DWORD *)&v155[4 * ((-333269657 * v173) >> 24)] ^ *(_DWORD *)&v156[4 * ((-333269657 * v173) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v173) >> 24)];
  *(_DWORD *)(v10 + 9080) = 1202855529 * v174 - 1310673425 - ((-1099659602 - 1889256238 * v174) & 0xA54CE530);
  v175 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5824)) & 0x7FFFFFFF);
  v176 = v175 ^ HIWORD(v175);
  v177 = *(_DWORD *)&v155[4 * ((-333269657 * v176) >> 24)] ^ v20[1624] ^ *(_DWORD *)&v156[4 * ((-333269657 * v176) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v176) >> 24)] ^ (-1251540992 * v176) ^ (-333269657 * v176) ^ (-602315535 * ((-333269657 * v176) >> 24));
  v178 = (1202855529 * v177 - 760843624 - ((-1889256238 * v177) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9544) = v178 - 1310673425 - ((2 * v178 - 1099659602) & 0xA54CE530);
  v179 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5684)) & 0x7FFFFFFF);
  v180 = v179 ^ HIWORD(v179);
  v181 = *(_DWORD *)&v155[4 * ((-333269657 * v180) >> 24)] ^ v20[1598] ^ *(_DWORD *)&v156[4 * ((-333269657 * v180) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v180) >> 24)] ^ (-1251540992 * v180) ^ (-333269657 * v180) ^ (-602315535 * ((-333269657 * v180) >> 24));
  *(_DWORD *)(v10 + 9368) = 1202855529 * v181 - 1310673425 - ((-1099659602 - 1889256238 * v181) & 0xA54CE530);
  v182 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5808)) & 0x7FFFFFFF);
  v183 = v182 ^ HIWORD(v182);
  v184 = (-333269657 * v183) ^ (-1251540992 * v183) ^ v20[1589] ^ (-602315535 * ((-333269657 * v183) >> 24)) ^ *(_DWORD *)&v155[4 * ((-333269657 * v183) >> 24)] ^ *(_DWORD *)&v156[4 * ((-333269657 * v183) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v183) >> 24)];
  *(_DWORD *)(v10 + 9036) = 1202855529 * v184 - 1310673425 - ((-1099659602 - 1889256238 * v184) & 0xA54CE530);
  v185 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5508)) & 0x7FFFFFFF);
  v186 = v185 ^ HIWORD(v185);
  v187 = *(_DWORD *)&v155[4 * ((-333269657 * v186) >> 24)] ^ v20[1655] ^ *(_DWORD *)&v156[4 * ((-333269657 * v186) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v186) >> 24)] ^ (-1251540992 * v186) ^ (-333269657 * v186) ^ (-602315535 * ((-333269657 * v186) >> 24));
  *(_DWORD *)(v10 + 9456) = 1202855529 * v187 - 1310673425 - ((-1099659602 - 1889256238 * v187) & 0xA54CE530);
  *(_DWORD *)(v10 + 9272) = 1202855529 * (*(_DWORD *)(v10 + 9496) ^ 0xD2A67298)
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (*(_DWORD *)(v10 + 9496) ^ 0xD2A67298)) & 0xA54CE530);
  v188 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5748)) & 0x7FFFFFFF);
  v189 = v188 ^ HIWORD(v188);
  v190 = *(_DWORD *)&v155[4 * ((-333269657 * v189) >> 24)] ^ v20[1588] ^ *(_DWORD *)&v156[4 * ((-333269657 * v189) >> 24) + 8] ^ (-1251540992 * v189) ^ (-333269657 * v189) ^ *(_DWORD *)&v159[4 * ((-333269657 * v189) >> 24)] ^ (-602315535 * ((-333269657 * v189) >> 24));
  *(_DWORD *)(v10 + 8868) = 1202855529 * v190 - 1310673425 - ((-1889256238 * v190 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8800) = 1202855529 * *(_DWORD *)(v10 + 9720)
                          - 1310673425
                          - ((-1889256238 * *(_DWORD *)(v10 + 9720) - 1099659602) & 0xA54CE530);
  v191 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5548)) & 0x7FFFFFFF);
  v192 = v191 ^ HIWORD(v191);
  v193 = v20;
  v194 = (-333269657 * v192) ^ (-1251540992 * v192) ^ v20[1592] ^ (-602315535 * ((-333269657 * v192) >> 24)) ^ *(_DWORD *)&v155[4 * ((-333269657 * v192) >> 24)] ^ *(_DWORD *)&v156[4 * ((-333269657 * v192) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v192) >> 24)];
  v195 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5656)) & 0x7FFFFFFF);
  v196 = v195 ^ HIWORD(v195);
  LODWORD(v105) = *(_DWORD *)&v155[4 * ((-333269657 * v196) >> 24)] ^ v193[1616] ^ *(_DWORD *)&v156[4 * ((-333269657 * v196) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v196) >> 24)] ^ (-1251540992 * v196) ^ (-333269657 * v196) ^ (-602315535 * ((-333269657 * v196) >> 24));
  *(_DWORD *)(v10 + 8744) = 1202855529 * v110 - 1310673425 - ((-1099659602 - 1889256238 * v110) & 0xA54CE530);
  v197 = *(_QWORD *)(v10 + 9664);
  v198 = *(_QWORD *)(v10 + 9640);
  v199 = *(_QWORD *)(v10 + 9680);
  v200 = *(_DWORD *)(v199 + v157) ^ v152 ^ *(_DWORD *)(v197 + v157) ^ *(_DWORD *)(v198 + v157) ^ (895942656 * v151) ^ (-333269657 * v151) ^ (2069035629 * v153);
  v201 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5740)) & 0x7FFFFFFF);
  v202 = v201 ^ HIWORD(v201);
  LODWORD(v157) = (-1251540992 * v202) ^ v193[1629];
  v202 *= -333269657;
  v203 = v157 ^ v202 ^ *(_DWORD *)&v155[4 * HIBYTE(v202)] ^ *(_DWORD *)&v156[4 * HIBYTE(v202) + 8] ^ (-602315535 * HIBYTE(v202)) ^ *(_DWORD *)&v159[4 * HIBYTE(v202)];
  *(_DWORD *)(v10 + 7984) = 1202855529 * (_DWORD)v105
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v105) & 0xA54CE530);
  *(_DWORD *)(v10 + 9432) = 1202855529 * v203 - 1310673425 - ((-1099659602 - 1889256238 * v203) & 0xA54CE530);
  *(_DWORD *)(v10 + 9200) = 1202855529 * *(_DWORD *)(v10 + 9584)
                          - ((258227410 * *(_DWORD *)(v10 + 9584) + 510953134) & 0x1E7FBBE6);
  v204 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5600)) & 0x7FFFFFFF);
  v205 = v204 ^ HIWORD(v204);
  v206 = *(_DWORD *)(v199 + 4 * ((-333269657 * v205) >> 24)) ^ v193[1641] ^ *(_DWORD *)(v197 + 4 * ((-333269657 * v205) >> 24)) ^ *(_DWORD *)(v198 + 4 * ((-333269657 * v205) >> 24)) ^ (-1251540992 * v205) ^ (-333269657 * v205) ^ (-78448019 * ((-333269657 * v205) >> 24));
  v207 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5900)) & 0x7FFFFFFF);
  v208 = v207 ^ HIWORD(v207);
  LODWORD(v105) = *(_DWORD *)&v155[4 * ((-333269657 * v208) >> 24)] ^ v193[1627] ^ *(_DWORD *)&v156[4 * ((-333269657 * v208) >> 24) + 8] ^ *(_DWORD *)&v159[4 * ((-333269657 * v208) >> 24)] ^ (-1251540992 * v208) ^ (-333269657 * v208) ^ (-602315535 * ((-333269657 * v208) >> 24));
  v209 = (((895942656 * v151) ^ v152 ^ (-333269657 * v151) ^ v158 ^ *(_DWORD *)(v10 + 9464) ^ (1545168113 * v153) ^ *(_DWORD *)(v10 + 9472)) & 0x47B21E69)
       + (~v200 & 0x47B21E69);
  v210 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5596)) & 0x7FFFFFFF);
  v211 = v210 ^ HIWORD(v210);
  v212 = (-1251540992 * v211) ^ v193[1578];
  v211 *= -333269657;
  v213 = HIBYTE(v211);
  v214 = v212 ^ v211 ^ (6744525 * HIBYTE(v211));
  v215 = *(_DWORD *)(v10 + 9736);
  v216 = (char *)*(&off_1004ECA20 + (v215 ^ 0x27EE)) - 8;
  v217 = v214 ^ *(_DWORD *)&v216[4 * v213];
  v218 = (char *)*(&off_1004ECA20 + v215 - 8478) - 8;
  v219 = *(_DWORD *)&v218[4 * v213 + 24];
  LODWORD(v157) = v213 + 4;
  v220 = (char *)*(&off_1004ECA20 + (v215 ^ 0x218C)) - 4;
  v221 = (v217 ^ v219 ^ *(_DWORD *)&v220[4 * v157]) * v209;
  *(_DWORD *)(v10 + 9172) = 1202855529 * v194 - 1310673425 - ((-1099659602 - 1889256238 * v194) & 0xA54CE530);
  v222 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5872)) & 0x7FFFFFFF);
  v223 = v222 ^ HIWORD(v222);
  v224 = *(_DWORD *)&v216[4 * ((-333269657 * v223) >> 24)] ^ v193[1608] ^ *(_DWORD *)&v218[4 * ((-333269657 * v223) >> 24) + 24] ^ *(_DWORD *)&v220[4 * ((-333269657 * v223) >> 24) + 16] ^ (-1251540992 * v223) ^ (-333269657 * v223) ^ (6744525 * ((-333269657 * v223) >> 24));
  v225 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5556)) & 0x7FFFFFFF);
  v226 = v225 ^ HIWORD(v225);
  LODWORD(v157) = (-1251540992 * v226) ^ v193[1642];
  v226 *= -333269657;
  v227 = v157 ^ v226 ^ *(_DWORD *)&v216[4 * HIBYTE(v226)] ^ *(_DWORD *)&v218[4 * HIBYTE(v226) + 24] ^ (6744525 * HIBYTE(v226)) ^ *(_DWORD *)&v220[4 * HIBYTE(v226) + 16];
  *(_DWORD *)(v10 + 9064) = v221 - 1310673425 - ((2 * v221 - 1099659602) & 0xA54CE530);
  v228 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5588)) & 0x7FFFFFFF);
  v229 = v228 ^ HIWORD(v228);
  LODWORD(v157) = (-1251540992 * v229) ^ v193[1651];
  v229 *= -333269657;
  LODWORD(v157) = v157 ^ v229 ^ (6744525 * HIBYTE(v229)) ^ *(_DWORD *)&v216[4 * HIBYTE(v229)] ^ *(_DWORD *)&v218[4 * HIBYTE(v229) + 24] ^ *(_DWORD *)&v220[4 * HIBYTE(v229) + 16];
  v230 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5848)) & 0x7FFFFFFF);
  v231 = v230 ^ HIWORD(v230);
  v232 = (-1251540992 * v231) ^ v193[1586];
  v231 *= -333269657;
  v233 = v232 ^ v231 ^ (6744525 * HIBYTE(v231)) ^ *(_DWORD *)&v216[4 * HIBYTE(v231)] ^ *(_DWORD *)&v218[4 * HIBYTE(v231) + 24] ^ *(_DWORD *)&v220[4 * HIBYTE(v231) + 16];
  *(_DWORD *)(v10 + 9156) = 1202855529 * v224 - 1310673425 - ((-1099659602 - 1889256238 * v224) & 0xA54CE530);
  v234 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5516)) & 0x7FFFFFFF);
  v235 = v234 ^ HIWORD(v234);
  v236 = *(_DWORD *)&v216[4 * ((-333269657 * v235) >> 24)] ^ v193[1564] ^ *(_DWORD *)&v218[4 * ((-333269657 * v235) >> 24) + 24] ^ *(_DWORD *)&v220[4 * ((-333269657 * v235) >> 24) + 16] ^ (-1251540992 * v235) ^ (-333269657 * v235) ^ (6744525 * ((-333269657 * v235) >> 24));
  *(_DWORD *)(v10 + 9584) = 1202855529 * v157 - 1310673425 - ((-1889256238 * v157 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9136) = 1202855529 * v227 - ((-1889256238 * v227 - 1099659602) & 0xA5CFCFCA);
  *(_DWORD *)(v10 + 8900) = 1202855529 * v206 - 1310673425 - ((-1889256238 * v206 - 1099659602) & 0xA54CE530);
  v237 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5696)) & 0x7FFFFFFF);
  v238 = v237 ^ HIWORD(v237);
  v239 = (-1251540992 * v238) ^ v193[1639];
  v238 *= -333269657;
  v240 = v239 ^ v238 ^ *(_DWORD *)&v216[4 * HIBYTE(v238)] ^ *(_DWORD *)&v218[4 * HIBYTE(v238) + 24] ^ (6744525 * HIBYTE(v238)) ^ *(_DWORD *)&v220[4 * HIBYTE(v238) + 16];
  v241 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5520)) & 0x7FFFFFFF);
  v242 = v241 ^ HIWORD(v241);
  LODWORD(v157) = (-1251540992 * v242) ^ v193[1545];
  v242 *= -333269657;
  v243 = v157 ^ v242 ^ (6744525 * HIBYTE(v242)) ^ *(_DWORD *)&v216[4 * HIBYTE(v242)] ^ *(_DWORD *)&v218[4 * HIBYTE(v242) + 24] ^ *(_DWORD *)&v220[4 * HIBYTE(v242) + 16];
  *(_DWORD *)(v10 + 8848) = 1202855529 * (_DWORD)v105
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v105 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9096) = 1202855529 * v233 - 1310673425 - ((-1889256238 * v233 - 1099659602) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6268)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  LODWORD(v105) = *(_DWORD *)&v216[4 * ((-333269657 * (_DWORD)v105) >> 24)] ^ v193[1551] ^ *(_DWORD *)&v218[4 * ((-333269657 * (_DWORD)v105) >> 24) + 24] ^ *(_DWORD *)&v220[4 * ((-333269657 * (_DWORD)v105) >> 24) + 16] ^ (-1251540992 * (_DWORD)v105) ^ (-333269657 * (_DWORD)v105) ^ (6744525 * ((-333269657 * (_DWORD)v105) >> 24));
  *(_DWORD *)(v10 + 9496) = 1202855529 * v243 - 1310673425 - ((-1889256238 * v243 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9160) = 1202855529 * (_DWORD)v105
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v105 - 1099659602) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5676)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  LODWORD(v105) = *(_DWORD *)&v216[4 * ((-333269657 * (_DWORD)v105) >> 24)] ^ v193[1554] ^ *(_DWORD *)&v218[4 * ((-333269657 * (_DWORD)v105) >> 24) + 24] ^ *(_DWORD *)&v220[4 * ((-333269657 * (_DWORD)v105) >> 24) + 16] ^ (-1251540992 * (_DWORD)v105) ^ (-333269657 * (_DWORD)v105) ^ (6744525 * ((-333269657 * (_DWORD)v105) >> 24));
  v244 = 1202855529 * (_DWORD)v105 - 760843624 - ((-1889256238 * (_DWORD)v105) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5912)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  v245 = (-1251540992 * (_DWORD)v105) ^ v193[1558];
  LODWORD(v105) = -333269657 * (_DWORD)v105;
  v246 = v245 ^ v105 ^ (6744525 * (v105 >> 24)) ^ *(_DWORD *)&v216[4
                                                                                             * (v105 >> 24)] ^ *(_DWORD *)&v218[4 * (v105 >> 24) + 24] ^ *(_DWORD *)&v220[4 * (v105 >> 24) + 16];
  LODWORD(v105) = (1202855529 * v240 - 760843624 - ((-1889256238 * v240) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9384) = (_DWORD)v105 - 1310673425 - ((2 * (_DWORD)v105 - 1099659602) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 3356)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  LODWORD(v105) = *(_DWORD *)&v216[4 * ((-333269657 * (_DWORD)v105) >> 24)] ^ v193[1666] ^ *(_DWORD *)&v218[4 * ((-333269657 * (_DWORD)v105) >> 24) + 24] ^ *(_DWORD *)&v220[4 * ((-333269657 * (_DWORD)v105) >> 24) + 16] ^ (-1251540992 * (_DWORD)v105) ^ (-333269657 * (_DWORD)v105) ^ (6744525 * ((-333269657 * (_DWORD)v105) >> 24));
  *(_DWORD *)(v10 + 9052) = 1202855529 * v236 - 1310673425 - ((-1889256238 * v236 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8548) = 1202855529 * v246 - 1310673425 - ((-1889256238 * v246 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9072) = (v244 ^ 0xD2A67298) - ((2 * (v244 ^ 0xD2A67298) + 1047824046) & 0x5FB1FEC6);
  v247 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5840)) & 0x7FFFFFFF);
  v248 = v247 ^ HIWORD(v247);
  v249 = (-333269657 * v248) >> 24;
  v250 = *(_DWORD *)&v216[4 * v249] ^ v193[1622] ^ *(_DWORD *)&v218[4 * v249 + 24] ^ (-1251540992 * v248) ^ (-333269657 * v248) ^ *(_DWORD *)&v220[4 * v249 + 16] ^ (6744525 * v249);
  v251 = 1202855529 * v250 - 760843624 - ((-1889256238 * v250) & 0xA54CE530);
  v252 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5524)) & 0x7FFFFFFF);
  v253 = v252 ^ HIWORD(v252);
  v254 = (-1251540992 * v253) ^ v193[1680];
  v253 *= -333269657;
  v255 = v254 ^ v253 ^ (6744525 * HIBYTE(v253)) ^ *(_DWORD *)&v216[4 * HIBYTE(v253)] ^ *(_DWORD *)&v218[4 * HIBYTE(v253) + 24] ^ *(_DWORD *)&v220[4 * HIBYTE(v253) + 16];
  v256 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6240)) & 0x7FFFFFFF);
  v257 = v256 ^ HIWORD(v256);
  v258 = *(_DWORD *)&v216[4 * ((-333269657 * v257) >> 24)] ^ v193[1645] ^ *(_DWORD *)&v218[4 * ((-333269657 * v257) >> 24) + 24] ^ *(_DWORD *)&v220[4 * ((-333269657 * v257) >> 24) + 16] ^ (-1251540992 * v257) ^ (-333269657 * v257) ^ (6744525 * ((-333269657 * v257) >> 24));
  v259 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5844)) & 0x7FFFFFFF);
  v260 = v259 ^ HIWORD(v259);
  LODWORD(v157) = (-1251540992 * v260) ^ v193[1647];
  v260 *= -333269657;
  LODWORD(v157) = v157 ^ v260;
  v260 >>= 24;
  v261 = v157 ^ (1763888563 * v260);
  v262 = (char *)*(&off_1004ECA20 + (v215 ^ 0x2631)) - 4;
  v263 = (char *)*(&off_1004ECA20 + (v215 ^ 0x25CF)) - 4;
  v264 = (char *)*(&off_1004ECA20 + (int)(v215 & 0xE6C55932)) - 4;
  v265 = v261 ^ *(_DWORD *)&v264[4 * v260] ^ *(_DWORD *)&v262[4 * v260 + 16] ^ *(_DWORD *)&v263[4 * v260];
  *(_DWORD *)(v10 + 9472) = 1202855529 * (_DWORD)v105
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v105 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9240) = 1202855529 * v265 - 1310673425 - ((-1889256238 * v265 - 1099659602) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6256)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  LODWORD(v105) = (-333269657 * (_DWORD)v105) ^ (-1251540992 * (_DWORD)v105) ^ v193[1596] ^ (1763888563
                                                                                           * ((-333269657 * (_DWORD)v105) >> 24)) ^ *(_DWORD *)&v264[4 * ((-333269657 * (_DWORD)v105) >> 24)] ^ *(_DWORD *)&v262[4 * ((-333269657 * (_DWORD)v105) >> 24) + 16] ^ *(_DWORD *)&v263[4 * ((-333269657 * (_DWORD)v105) >> 24)];
  *(_DWORD *)(v10 + 8696) = 1202855529 * v258 - 1310673425 - ((-1099659602 - 1889256238 * v258) & 0xA54CE530);
  v266 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5672)) & 0x7FFFFFFF);
  v267 = v266 ^ HIWORD(v266);
  v268 = *(_DWORD *)&v264[4 * ((-333269657 * v267) >> 24)] ^ v193[1561] ^ *(_DWORD *)&v262[4 * ((-333269657 * v267) >> 24) + 16] ^ *(_DWORD *)&v263[4 * ((-333269657 * v267) >> 24)] ^ (-1251540992 * v267) ^ (-333269657 * v267) ^ (1763888563 * ((-333269657 * v267) >> 24));
  *(_DWORD *)(v10 + 9720) = (v251 ^ 0xD2A67298) - 1310673425 - ((2 * (v251 ^ 0xD2A67298) - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9224) = 1202855529 * v255 - 1310673425 - ((-1099659602 - 1889256238 * v255) & 0xA54CE530);
  v269 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5856)) & 0x7FFFFFFF);
  v270 = v269 ^ HIWORD(v269);
  v271 = *(_DWORD *)&v264[4 * ((-333269657 * v270) >> 24)] ^ v193[1585] ^ *(_DWORD *)&v262[4 * ((-333269657 * v270) >> 24) + 16] ^ *(_DWORD *)&v263[4 * ((-333269657 * v270) >> 24)] ^ (-1251540992 * v270) ^ (-333269657 * v270) ^ (1763888563 * ((-333269657 * v270) >> 24));
  v272 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5664)) & 0x7FFFFFFF);
  v273 = v272 ^ HIWORD(v272);
  v274 = (-1251540992 * v273) ^ v193[1675];
  v273 *= -333269657;
  v275 = v274 ^ v273 ^ *(_DWORD *)&v264[4 * HIBYTE(v273)] ^ *(_DWORD *)&v262[4 * HIBYTE(v273) + 16] ^ (1763888563 * HIBYTE(v273)) ^ *(_DWORD *)&v263[4 * HIBYTE(v273)];
  v276 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5796)) & 0x7FFFFFFF);
  v277 = v276 ^ HIWORD(v276);
  v278 = (-1251540992 * v277) ^ v193[1562];
  v277 *= -333269657;
  v279 = v278 ^ v277 ^ (1763888563 * HIBYTE(v277)) ^ *(_DWORD *)&v264[4 * HIBYTE(v277)] ^ *(_DWORD *)&v262[4 * HIBYTE(v277) + 16] ^ *(_DWORD *)&v263[4 * HIBYTE(v277)];
  v280 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6248)) & 0x7FFFFFFF);
  v281 = v280 ^ HIWORD(v280);
  v282 = *(_DWORD *)&v264[4 * ((-333269657 * v281) >> 24)] ^ v193[1630] ^ *(_DWORD *)&v262[4 * ((-333269657 * v281) >> 24) + 16] ^ *(_DWORD *)&v263[4 * ((-333269657 * v281) >> 24)] ^ (-1251540992 * v281) ^ (-333269657 * v281) ^ (1763888563 * ((-333269657 * v281) >> 24));
  *(_DWORD *)(v10 + 8424) = 1202855529 * v275 - 1310673425 - ((-1099659602 - 1889256238 * v275) & 0xA54CE530);
  v283 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5896)) & 0x7FFFFFFF);
  v284 = v283 ^ HIWORD(v283);
  LODWORD(v156) = (-333269657 * v284) >> 24;
  LODWORD(v216) = *(_DWORD *)&v216[4 * v156] ^ v193[1614] ^ *(_DWORD *)&v218[4 * ((_DWORD)v156 + 6)] ^ (-1251540992 * v284) ^ (-333269657 * v284) ^ *(_DWORD *)&v220[4 * ((_DWORD)v156 + 4)] ^ (6744525 * (_DWORD)v156);
  *(_DWORD *)(v10 + 9448) = 1202855529 * v279 - 1310673425 - ((-1099659602 - 1889256238 * v279) & 0xA54CE530);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5608)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v220) = (-1251540992 * (_DWORD)v218) ^ v193[1631];
  LODWORD(v218) = -333269657 * (_DWORD)v218;
  LODWORD(v220) = v220 ^ v218;
  LODWORD(v218) = v218 >> 24;
  v285 = 4 * v218;
  *(_QWORD *)(v10 + 9208) = v264;
  LODWORD(v220) = v220 ^ (1763888563 * (_DWORD)v218) ^ *(_DWORD *)&v264[v285];
  *(_QWORD *)(v10 + 9400) = v262;
  LODWORD(v218) = *(_DWORD *)&v262[4 * ((_DWORD)v218 + 4)];
  *(_QWORD *)(v10 + 9264) = v263;
  LODWORD(v218) = v220 ^ v218 ^ *(_DWORD *)&v263[v285];
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5760)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v285) = (-1251540992 * (_DWORD)v220) ^ v193[1567];
  LODWORD(v220) = -333269657 * (_DWORD)v220;
  LODWORD(v220) = v285 ^ v220 ^ (1763888563 * (v220 >> 24)) ^ *(_DWORD *)&v264[4 * (v220 >> 24)] ^ *(_DWORD *)&v262[4 * (v220 >> 24) + 16] ^ *(_DWORD *)&v263[4 * (v220 >> 24)];
  LODWORD(v216) = (1202855529 * (_DWORD)v216 - 760843624 - ((-1889256238 * (_DWORD)v216) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8984) = (_DWORD)v216 - 1310673425 - ((2 * (_DWORD)v216 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9040) = 1202855529 * (_DWORD)v218
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v218 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8712) = 1202855529 * (_DWORD)v105
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v105 - 1099659602) & 0xA54CE530);
  LODWORD(v216) = (1202855529 * v268 - 760843624 - ((-1889256238 * v268) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9024) = (_DWORD)v216 - 1310673425 - ((2 * (_DWORD)v216 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9056) = 1202855529 * v271 - 1310673425 - ((-1889256238 * v271 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9320) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5572)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v216) = *(_DWORD *)(v10 + 9736);
  v286 = (uint64_t)*(&off_1004ECA20 + (int)(v216 ^ 0x2684));
  v287 = (char *)*(&off_1004ECA20 + (int)(v216 ^ 0x2420)) - 4;
  v288 = (uint64_t)*(&off_1004ECA20 + (int)(v216 ^ 0x24F9));
  LODWORD(v220) = *(_DWORD *)(v286 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ v193[1612] ^ *(_DWORD *)&v287[4 * ((-333269657 * (_DWORD)v218) >> 24) + 28] ^ *(_DWORD *)(v288 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ (-1251540992 * (_DWORD)v218) ^ (-333269657 * (_DWORD)v218) ^ (-664440351 * ((-333269657 * (_DWORD)v218) >> 24));
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5764)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v105) = (-1251540992 * (_DWORD)v218) ^ v193[1682];
  LODWORD(v218) = -333269657 * (_DWORD)v218;
  LODWORD(v218) = v105 ^ v218 ^ *(_DWORD *)(v286 + 4 * (v218 >> 24)) ^ *(_DWORD *)&v287[4 * (v218 >> 24) + 28] ^ (-664440351 * (v218 >> 24)) ^ *(_DWORD *)(v288 + 4 * (v218 >> 24));
  LODWORD(v105) = (1202855529 * v282 - 760843624 - ((-1889256238 * v282) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8832) = (_DWORD)v105 - 1310673425 - ((2 * (_DWORD)v105 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9016) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v220) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5892)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  v289 = *(_QWORD *)(v10 + 9680);
  v290 = *(_QWORD *)(v10 + 9664);
  v291 = *(_QWORD *)(v10 + 9640);
  LODWORD(v220) = (-333269657 * (_DWORD)v220) ^ (-1251540992 * (_DWORD)v220) ^ v193[1566] ^ (-78448019
                                                                                           * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v289 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v290 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * (_DWORD)v220) >> 24));
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5552)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  v292 = (-333269657 * (_DWORD)v105) ^ (-1251540992 * (_DWORD)v105) ^ v193[1643] ^ (-78448019
                                                                                  * ((-333269657
                                                                                                  * (_DWORD)v105) >> 24)) ^ *(_DWORD *)(v289 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ *(_DWORD *)(v290 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * (_DWORD)v105) >> 24));
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5884)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  LODWORD(v105) = *(_DWORD *)(v289 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ v193[1669] ^ *(_DWORD *)(v290 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ (-1251540992 * (_DWORD)v105) ^ (-333269657 * (_DWORD)v105) ^ (-78448019 * ((-333269657 * (_DWORD)v105) >> 24));
  v293 = 1202855529 * (_DWORD)v105 - 760843624 - ((-1889256238 * (_DWORD)v105) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 7024)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  LODWORD(v105) = *(_DWORD *)(v289 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ v193[1653] ^ *(_DWORD *)(v290 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ (-1251540992 * (_DWORD)v105) ^ (-333269657 * (_DWORD)v105) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * (_DWORD)v105) >> 24)) ^ (-78448019 * ((-333269657 * (_DWORD)v105) >> 24));
  v294 = 1202855529 * (_DWORD)v105 - 760843624 - ((-1889256238 * (_DWORD)v105) & 0xA54CE530);
  LODWORD(v105) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 7136)) & 0x7FFFFFFF);
  LODWORD(v105) = v105 ^ (v105 >> 16);
  v295 = (-1251540992 * (_DWORD)v105) ^ v193[1683];
  LODWORD(v105) = -333269657 * (_DWORD)v105;
  LODWORD(v105) = v295 ^ v105 ^ (-78448019 * (v105 >> 24)) ^ *(_DWORD *)(v289 + 4 * (v105 >> 24)) ^ *(_DWORD *)(v290 + 4 * (v105 >> 24)) ^ *(_DWORD *)(v291 + 4 * (v105 >> 24));
  *(_DWORD *)(v10 + 8776) = 1202855529 * (_DWORD)v105
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v105 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8932) = 1202855529 * v292 - 1310673425 - ((-1889256238 * v292 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9424) = (v293 ^ 0xD2A67298) - 1310673425 - ((2 * (v293 ^ 0xD2A67298) - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8828) = (v294 ^ 0xD2A67298) - 1310673425 - ((2 * (v294 ^ 0xD2A67298) - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9408) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8964) = 1202855529 * (_DWORD)v218
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v218 - 1099659602) & 0xA54CE530);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5744)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v218) = *(_DWORD *)(v286 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ v193[1681] ^ *(_DWORD *)&v287[4 * ((-333269657 * (_DWORD)v218) >> 24) + 28] ^ *(_DWORD *)(v288 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ (-1251540992 * (_DWORD)v218) ^ (-333269657 * (_DWORD)v218) ^ (-664440351 * ((-333269657 * (_DWORD)v218) >> 24));
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5636)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = *(_DWORD *)(v286 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ v193[1579] ^ *(_DWORD *)&v287[4 * ((-333269657 * (_DWORD)v220) >> 24) + 28] ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ *(_DWORD *)(v288 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ (-664440351 * ((-333269657 * (_DWORD)v220) >> 24));
  *(_DWORD *)(v10 + 8864) = 1202855529 * (_DWORD)v218
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v218 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8920) = 1202855529 * (_DWORD)v220 - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0x8DA3CFC8);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 3368)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v218) = (-333269657 * (_DWORD)v218) ^ (-1251540992 * (_DWORD)v218) ^ v193[1607] ^ (-664440351
                                                                                           * ((-333269657 * (_DWORD)v218) >> 24)) ^ *(_DWORD *)(v286 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ *(_DWORD *)&v287[4 * ((-333269657 * (_DWORD)v218) >> 24) + 28] ^ *(_DWORD *)(v288 + 4 * ((-333269657 * (_DWORD)v218) >> 24));
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5612)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  v296 = (-1251540992 * (_DWORD)v220) ^ v193[1600];
  LODWORD(v220) = -333269657 * (_DWORD)v220;
  LODWORD(v220) = v296 ^ v220 ^ (-78448019 * (v220 >> 24)) ^ *(_DWORD *)(v289 + 4 * (v220 >> 24)) ^ *(_DWORD *)(v290 + 4 * (v220 >> 24)) ^ *(_DWORD *)(v291 + 4 * (v220 >> 24));
  v297 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5788)) & 0x7FFFFFFF);
  v298 = v297 ^ HIWORD(v297);
  v299 = *(_DWORD *)(v286 + 4 * ((-333269657 * v298) >> 24)) ^ v193[1658] ^ *(_DWORD *)&v287[4 * ((-333269657 * v298) >> 24) + 28] ^ *(_DWORD *)(v288 + 4 * ((-333269657 * v298) >> 24)) ^ (-1251540992 * v298) ^ (-333269657 * v298) ^ (-664440351 * ((-333269657 * v298) >> 24));
  v300 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6224)) & 0x7FFFFFFF);
  v301 = v300 ^ HIWORD(v300);
  v302 = *(_DWORD *)(v286 + 4 * ((-333269657 * v301) >> 24)) ^ v193[1646] ^ *(_DWORD *)&v287[4 * ((-333269657 * v301) >> 24) + 28] ^ *(_DWORD *)(v288 + 4 * ((-333269657 * v301) >> 24)) ^ (-1251540992 * v301) ^ (-333269657 * v301) ^ (-664440351 * ((-333269657 * v301) >> 24));
  *(_DWORD *)(v10 + 8768) = 1202855529 * (_DWORD)v220 - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xD3907802);
  *(_DWORD *)(v10 + 8488) = 1202855529 * v299 - 1310673425 - ((-1889256238 * v299 - 1099659602) & 0xA54CE530);
  LODWORD(v220) = (1202855529 * v302 - 2007328058 - ((258227410 * v302) & 0x10B5358C)) ^ 0x885A9AC6;
  *(_DWORD *)(v10 + 8520) = (_DWORD)v220 - 1310673425 - ((2 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5576)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  v303 = (-1251540992 * (_DWORD)v220) ^ v193[1660];
  LODWORD(v220) = -333269657 * (_DWORD)v220;
  LODWORD(v220) = v303 ^ v220 ^ *(_DWORD *)(v286 + 4 * (v220 >> 24)) ^ *(_DWORD *)&v287[4 * (v220 >> 24) + 28] ^ (-664440351 * (v220 >> 24)) ^ *(_DWORD *)(v288 + 4 * (v220 >> 24));
  v304 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5644)) & 0x7FFFFFFF);
  v305 = v304 ^ HIWORD(v304);
  v306 = *(_DWORD *)(v286 + 4 * ((-333269657 * v305) >> 24)) ^ v193[1677] ^ *(_DWORD *)&v287[4 * ((-333269657 * v305) >> 24) + 28] ^ *(_DWORD *)(v288 + 4 * ((-333269657 * v305) >> 24)) ^ (-1251540992 * v305) ^ (-333269657 * v305) ^ (-664440351 * ((-333269657 * v305) >> 24));
  *(_DWORD *)(v10 + 8792) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v220) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5512)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  v307 = *(_QWORD *)(v10 + 9416);
  v308 = *(_QWORD *)(v10 + 9704);
  v309 = *(_QWORD *)(v10 + 9440);
  v310 = *(_DWORD *)(v307 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ v193[1633] ^ *(_DWORD *)(v308 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ *(_DWORD *)(v309 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 6)) ^ (1372306415 * ((-333269657 * (_DWORD)v220) >> 24));
  LODWORD(v220) = (1202855529 * v306 - 760843624 - ((-1889256238 * v306) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8764) = (_DWORD)v220 - ((2 * (_DWORD)v220 + 1047824046) & 0x7B7F5D7C);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5800)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  *(_DWORD *)(v10 + 9128) = (-333269657 * (_DWORD)v220) ^ (-1251540992 * (_DWORD)v220) ^ v193[1659] ^ (1372306415 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v307 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v308 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v309 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 6));
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6228)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = (-333269657 * (_DWORD)v220) ^ (-1251540992 * (_DWORD)v220) ^ v193[1638] ^ (1372306415
                                                                                           * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v307 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v308 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v309 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 6));
  *(_DWORD *)(v10 + 8736) = 1202855529 * v310 - ((-1099659602 - 1889256238 * v310) & 0x9AD66C26);
  v311 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6276)) & 0x7FFFFFFF);
  v312 = v311 ^ HIWORD(v311);
  v313 = *(_DWORD *)(v289 + 4 * ((-333269657 * v312) >> 24)) ^ v193[1617] ^ *(_DWORD *)(v290 + 4 * ((-333269657 * v312) >> 24)) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * v312) >> 24)) ^ (-1251540992 * v312) ^ (-333269657 * v312) ^ (-78448019 * ((-333269657 * v312) >> 24));
  v314 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6236)) & 0x7FFFFFFF);
  v315 = v314 ^ HIWORD(v314);
  v316 = *(_DWORD *)(v289 + 4 * ((-333269657 * v315) >> 24)) ^ v193[1548] ^ *(_DWORD *)(v290 + 4 * ((-333269657 * v315) >> 24)) ^ (-1251540992 * v315) ^ (-333269657 * v315) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * v315) >> 24)) ^ (-78448019 * ((-333269657 * v315) >> 24));
  v317 = (1202855529 * v313 - 760843624 - ((-1889256238 * v313) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9464) = v317 - 1310673425 - ((2 * v317 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 9012) = 1202855529 * (_DWORD)v218
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v218) & 0xA54CE530);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5860)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v218) = (-1251540992 * (_DWORD)v218) ^ v193[1555] ^ (-333269657 * (_DWORD)v218) ^ (-664440351
                                                                                           * ((-333269657 * (_DWORD)v218) >> 24)) ^ *(_DWORD *)(v286 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ *(_DWORD *)&v287[4 * ((-333269657 * (_DWORD)v218) >> 24) + 28] ^ *(_DWORD *)(v288 + 4 * ((-333269657 * (_DWORD)v218) >> 24));
  v318 = (1202855529 * v316 - 1150398823 - ((258227410 * v316) & 0x76DC9D32)) ^ 0xBB6E4E99;
  *(_DWORD *)(v10 + 9004) = v318 - 1310673425 - ((2 * v318 - 1099659602) & 0xA54CE530);
  v319 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 6244)) & 0x7FFFFFFF);
  v320 = v319 ^ HIWORD(v319);
  v321 = *(_DWORD *)(v289 + 4 * ((-333269657 * v320) >> 24)) ^ v193[1604] ^ *(_DWORD *)(v290 + 4 * ((-333269657 * v320) >> 24)) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * v320) >> 24)) ^ (-1251540992 * v320) ^ (-333269657 * v320) ^ (-78448019 * ((-333269657 * v320) >> 24));
  LODWORD(v287) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5668)) & 0x7FFFFFFF);
  LODWORD(v287) = v287 ^ (v287 >> 16);
  *(_DWORD *)(v10 + 8728) = *(_DWORD *)(v307 + 4 * ((-333269657 * (_DWORD)v287) >> 24)) ^ v193[1587] ^ *(_DWORD *)(v308 + 4 * ((-333269657 * (_DWORD)v287) >> 24)) ^ *(_DWORD *)(v309 + 4 * (((-333269657 * (_DWORD)v287) >> 24) + 6)) ^ (-1251540992 * (_DWORD)v287) ^ (-333269657 * (_DWORD)v287) ^ (1372306415 * ((-333269657 * (_DWORD)v287) >> 24));
  LODWORD(v107) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5736)) & 0x7FFFFFFF);
  LODWORD(v107) = v107 ^ (v107 >> 16);
  LODWORD(v107) = (-1251540992 * (_DWORD)v107) ^ v193[1615] ^ (-333269657 * (_DWORD)v107) ^ *(_DWORD *)(v289 + 4 * ((-333269657 * (_DWORD)v107) >> 24)) ^ *(_DWORD *)(v290 + 4 * ((-333269657 * (_DWORD)v107) >> 24)) ^ (-78448019 * ((-333269657 * (_DWORD)v107) >> 24)) ^ *(_DWORD *)(v291 + 4 * ((-333269657 * (_DWORD)v107) >> 24));
  *(_DWORD *)(v10 + 9192) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v220) & 0xA54CE530);
  LODWORD(v218) = (1202855529 * (_DWORD)v218 - 760843624 - ((-1889256238 * (_DWORD)v218) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9248) = (_DWORD)v218 - 1310673425 - ((2 * (_DWORD)v218 - 1099659602) & 0xA54CE530);
  LODWORD(v218) = (1202855529 * v321 - 760843624 - ((-1889256238 * v321) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9008) = (_DWORD)v218 - 1310673425 - ((2 * (_DWORD)v218 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8816) = *(_DWORD *)(v10 + 9560)
                          + 1202855529 * (_DWORD)v107
                          + ~((-1099659602 - 1889256238 * (_DWORD)v107) & 0xA54CE530);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5776)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  v322 = *(_QWORD *)(v10 + 9208);
  v323 = *(_QWORD *)(v10 + 9400);
  v324 = *(_QWORD *)(v10 + 9264);
  LODWORD(v218) = *(_DWORD *)(v322 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ v193[1610] ^ *(_DWORD *)(v323 + 4 * (((-333269657 * (_DWORD)v218) >> 24) + 4)) ^ *(_DWORD *)(v324 + 4 * ((-333269657 * (_DWORD)v218) >> 24)) ^ (-1251540992 * (_DWORD)v218) ^ (-333269657 * (_DWORD)v218) ^ (1763888563 * ((-333269657 * (_DWORD)v218) >> 24));
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5500)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = *(_DWORD *)(v322 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ v193[1553] ^ *(_DWORD *)(v323 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 4)) ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ *(_DWORD *)(v324 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ (1763888563 * ((-333269657 * (_DWORD)v220) >> 24));
  *(_DWORD *)(v10 + 7952) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5660)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = (-333269657 * (_DWORD)v220) ^ (-1251540992 * (_DWORD)v220) ^ v193[1560] ^ (1763888563
                                                                                           * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v322 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v323 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 4)) ^ *(_DWORD *)(v324 + 4 * ((-333269657 * (_DWORD)v220) >> 24));
  *(_DWORD *)(v10 + 8880) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5624)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = (-333269657 * (_DWORD)v220) ^ (-1251540992 * (_DWORD)v220) ^ v193[1620] ^ (1763888563
                                                                                           * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v322 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ *(_DWORD *)(v323 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 4)) ^ *(_DWORD *)(v324 + 4 * ((-333269657 * (_DWORD)v220) >> 24));
  *(_DWORD *)(v10 + 8512) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5628)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = *(_DWORD *)(v322 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ v193[1673] ^ *(_DWORD *)(v323 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 4)) ^ *(_DWORD *)(v324 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ (1763888563 * ((-333269657 * (_DWORD)v220) >> 24));
  *(_DWORD *)(v10 + 8888) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5876)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = *(_DWORD *)(v322 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ v193[1580] ^ *(_DWORD *)(v323 + 4 * (((-333269657 * (_DWORD)v220) >> 24) + 4)) ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ *(_DWORD *)(v324 + 4 * ((-333269657 * (_DWORD)v220) >> 24)) ^ (1763888563 * ((-333269657 * (_DWORD)v220) >> 24));
  *(_DWORD *)(v10 + 9664) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v220 - 1099659602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8952) = 1202855529 * (_DWORD)v218
                          - 1310673425
                          - ((-1889256238 * (_DWORD)v218 - 1099659602) & 0xA54CE530);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5816)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v220) = -333269657 * (_DWORD)v218;
  LODWORD(v307) = *(_DWORD *)(v10 + 9736);
  v325 = (char *)*(&off_1004ECA20 + (int)(v307 ^ 0x25E9)) - 12;
  v326 = (char *)*(&off_1004ECA20 + (int)(v307 ^ 0x255C)) - 12;
  v327 = (char *)*(&off_1004ECA20 + (int)(v307 ^ 0x2593)) - 12;
  LODWORD(v218) = (-333269657 * (_DWORD)v218) ^ (-1251540992 * (_DWORD)v218) ^ v193[1662] ^ (-478510831
                                                                                           * (v220 >> 24)) ^ *(_DWORD *)&v325[4 * (v220 >> 24)] ^ *(_DWORD *)&v326[4 * (v220 >> 24) + 4] ^ *(_DWORD *)&v327[4 * (v220 >> 24) + 16];
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5888)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v220) = *(_DWORD *)&v325[4 * ((-333269657 * (_DWORD)v220) >> 24)] ^ v193[1547] ^ *(_DWORD *)&v326[4 * ((-333269657 * (_DWORD)v220) >> 24) + 4] ^ *(_DWORD *)&v327[4 * ((-333269657 * (_DWORD)v220) >> 24) + 16] ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ (-478510831 * ((-333269657 * (_DWORD)v220) >> 24));
  *(_DWORD *)(v10 + 8720) = 1202855529 * (_DWORD)v220 - ((258227410 * (_DWORD)v220 + 1047824046) & 0x76DC9D32);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5652)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v263) = (-1251540992 * (_DWORD)v220) ^ v193[1583];
  LODWORD(v220) = -333269657 * (_DWORD)v220;
  LODWORD(v220) = v263 ^ v220 ^ (-478510831 * (v220 >> 24)) ^ *(_DWORD *)&v325[4 * (v220 >> 24)] ^ *(_DWORD *)&v326[4 * (v220 >> 24) + 4] ^ *(_DWORD *)&v327[4 * (v220 >> 24) + 16];
  *(_DWORD *)(v10 + 8980) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v220) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5544)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  LODWORD(v263) = (-1251540992 * (_DWORD)v220) ^ v193[1635];
  LODWORD(v220) = -333269657 * (_DWORD)v220;
  LODWORD(v220) = v263 ^ v220 ^ (-478510831 * (v220 >> 24)) ^ *(_DWORD *)&v325[4 * (v220 >> 24)] ^ *(_DWORD *)&v326[4 * (v220 >> 24) + 4] ^ *(_DWORD *)&v327[4 * (v220 >> 24) + 16];
  *(_DWORD *)(v10 + 8968) = 1202855529 * (_DWORD)v220
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v220) & 0xA54CE530);
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5692)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)&v325[4 * ((-333269657 * (_DWORD)v220) >> 24)] ^ v193[1570] ^ *(_DWORD *)&v326[4 * ((-333269657 * (_DWORD)v220) >> 24) + 4] ^ *(_DWORD *)&v327[4 * ((-333269657 * (_DWORD)v220) >> 24) + 16] ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ (-478510831 * ((-333269657 * (_DWORD)v220) >> 24));
  LODWORD(v220) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5536)) & 0x7FFFFFFF);
  LODWORD(v220) = v220 ^ (v220 >> 16);
  v328 = (-333269657 * (_DWORD)v220) >> 24;
  *(_DWORD *)(v10 + 9704) = *(_DWORD *)&v325[4 * v328] ^ v193[1552] ^ *(_DWORD *)&v326[4 * v328 + 4] ^ (-1251540992 * (_DWORD)v220) ^ (-333269657 * (_DWORD)v220) ^ *(_DWORD *)&v327[4 * v328 + 16] ^ (-478510831 * v328);
  v329 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5640)) & 0x7FFFFFFF);
  v330 = v329 ^ HIWORD(v329);
  LODWORD(v286) = (-1251540992 * v330) ^ v193[1577] ^ (-333269657 * v330) ^ (1763888563
                                                                           * ((-333269657 * v330) >> 24)) ^ *(_DWORD *)(v322 + 4 * ((-333269657 * v330) >> 24)) ^ *(_DWORD *)(v323 + 4 * (((-333269657 * v330) >> 24) + 4)) ^ *(_DWORD *)(v324 + 4 * ((-333269657 * v330) >> 24));
  *(_DWORD *)(v10 + 9264) = 1202855529 * (_DWORD)v218
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v218) & 0xA54CE530);
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5604)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  v331 = (-1251540992 * (_DWORD)v218) ^ v193[1605];
  LODWORD(v218) = -333269657 * (_DWORD)v218;
  v332 = v331 ^ v218 ^ (-478510831 * (v218 >> 24)) ^ *(_DWORD *)&v325[4
                                                                                                * (v218 >> 24)] ^ *(_DWORD *)&v326[4 * (v218 >> 24) + 4] ^ *(_DWORD *)&v327[4 * (v218 >> 24) + 16];
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5752)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)&v325[4 * ((-333269657 * (_DWORD)v218) >> 24)] ^ v193[1661] ^ *(_DWORD *)&v326[4 * ((-333269657 * (_DWORD)v218) >> 24) + 4] ^ *(_DWORD *)&v327[4 * ((-333269657 * (_DWORD)v218) >> 24) + 16] ^ (-1251540992 * (_DWORD)v218) ^ (-333269657 * (_DWORD)v218) ^ (-478510831 * ((-333269657 * (_DWORD)v218) >> 24));
  LODWORD(v218) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5784)) & 0x7FFFFFFF);
  LODWORD(v218) = v218 ^ (v218 >> 16);
  LODWORD(v218) = *(_DWORD *)&v325[4 * ((-333269657 * (_DWORD)v218) >> 24)] ^ v193[1667] ^ *(_DWORD *)&v326[4 * ((-333269657 * (_DWORD)v218) >> 24) + 4] ^ *(_DWORD *)&v327[4 * ((-333269657 * (_DWORD)v218) >> 24) + 16] ^ (-1251540992 * (_DWORD)v218) ^ (-333269657 * (_DWORD)v218) ^ (-478510831 * ((-333269657 * (_DWORD)v218) >> 24));
  *(_DWORD *)(v10 + 8480) = 1202855529 * v332 - 1310673425 - ((-1099659602 - 1889256238 * v332) & 0xA54CE530);
  v333 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5568)) & 0x7FFFFFFF);
  v334 = v333 ^ HIWORD(v333);
  LODWORD(v322) = -333269657 * v334;
  *(_DWORD *)(v10 + 9640) = (-333269657 * v334) ^ (-1251540992 * v334) ^ v193[1636] ^ (-478510831 * BYTE3(v322)) ^ *(_DWORD *)&v325[4 * BYTE3(v322)] ^ *(_DWORD *)&v326[4 * BYTE3(v322) + 4] ^ *(_DWORD *)&v327[4 * BYTE3(v322) + 16];
  v335 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5908)) & 0x7FFFFFFF);
  v336 = v335 ^ HIWORD(v335);
  LODWORD(v322) = -333269657 * v336;
  v337 = (-333269657 * v336) ^ (-1251540992 * v336) ^ v193[1663] ^ (-478510831 * BYTE3(v322)) ^ *(_DWORD *)&v325[4 * BYTE3(v322)] ^ *(_DWORD *)&v326[4 * BYTE3(v322) + 4] ^ *(_DWORD *)&v327[4 * BYTE3(v322) + 16];
  LODWORD(v322) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5460)) & 0x7FFFFFFF);
  LODWORD(v322) = v322 ^ WORD1(v322);
  v338 = *(_DWORD *)&v325[4 * ((-333269657 * v322) >> 24)] ^ v193[1602] ^ *(_DWORD *)&v326[4 * ((-333269657 * v322) >> 24) + 4] ^ *(_DWORD *)&v327[4 * ((-333269657 * v322) >> 24) + 16] ^ (-1251540992 * v322) ^ (-333269657 * v322) ^ (-478510831 * ((-333269657 * v322) >> 24));
  LODWORD(v322) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5708)) & 0x7FFFFFFF);
  LODWORD(v322) = v322 ^ WORD1(v322);
  *(_DWORD *)(v10 + 8672) = *(_DWORD *)&v325[4 * ((-333269657 * v322) >> 24)] ^ v193[1676] ^ *(_DWORD *)&v326[4 * ((-333269657 * v322) >> 24) + 4] ^ *(_DWORD *)&v327[4 * ((-333269657 * v322) >> 24) + 16] ^ (-1251540992 * v322) ^ (-333269657 * v322) ^ (-478510831 * ((-333269657 * v322) >> 24));
  *(_DWORD *)(v10 + 9680) = 1202855529 * v338 - 1310673425 - ((-1099659602 - 1889256238 * v338) & 0xA54CE530);
  v339 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5688)) & 0x7FFFFFFF);
  v340 = v339 ^ HIWORD(v339);
  v341 = -333269657 * v340;
  v342 = (-333269657 * v340) ^ (-1251540992 * v340) ^ v193[1557] ^ (-478510831 * HIBYTE(v341)) ^ *(_DWORD *)&v325[4 * HIBYTE(v341)] ^ *(_DWORD *)&v326[4 * HIBYTE(v341) + 4] ^ *(_DWORD *)&v327[4 * HIBYTE(v341) + 16];
  v343 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5792)) & 0x7FFFFFFF);
  v344 = v343 ^ HIWORD(v343);
  v345 = -333269657 * v344;
  v346 = (-333269657 * v344) ^ (-1251540992 * v344) ^ v193[1606] ^ (-478510831 * HIBYTE(v345)) ^ *(_DWORD *)&v325[4 * HIBYTE(v345)] ^ *(_DWORD *)&v326[4 * HIBYTE(v345) + 4] ^ *(_DWORD *)&v327[4 * HIBYTE(v345) + 16];
  *(_DWORD *)(v10 + 8532) = 1202855529 * v342 - 1310673425 - ((-1099659602 - 1889256238 * v342) & 0xA54CE530);
  *(_DWORD *)(v10 + 8752) = 1202855529 * v337 - 1310673425 - ((-1099659602 - 1889256238 * v337) & 0xA54CE530);
  v347 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5852)) & 0x7FFFFFFF);
  v348 = v347 ^ HIWORD(v347);
  LODWORD(v324) = (-333269657 * v348) >> 24;
  LODWORD(v325) = *(_DWORD *)&v325[4 * v324] ^ v193[1670] ^ *(_DWORD *)&v326[4 * (v324 + 1)] ^ *(_DWORD *)&v327[4 * (v324 + 4)] ^ (-1251540992 * v348) ^ (-333269657 * v348) ^ (-478510831 * v324);
  v349 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5728)) & 0x7FFFFFFF);
  v350 = v349 ^ HIWORD(v349);
  LODWORD(v326) = v193[1593] ^ (-1251540992 * v350);
  v350 *= -333269657;
  v351 = (char *)*(&off_1004ECA20 + (int)v307 - 9222) - 4;
  v352 = (char *)*(&off_1004ECA20 + (int)v307 - 9465) - 4;
  v353 = (char *)*(&off_1004ECA20 + (int)v307 - 9179) - 4;
  v354 = *(_DWORD *)&v351[4 * HIBYTE(v350)] ^ v326 ^ v350 ^ *(_DWORD *)&v352[4 * HIBYTE(v350) + 16] ^ (2021099313 * HIBYTE(v350)) ^ *(_DWORD *)&v353[4 * HIBYTE(v350) + 20];
  *(_DWORD *)(v10 + 9104) = 1202855529 * v346 - 1310673425 - ((-1099659602 - 1889256238 * v346) & 0xA54CE530);
  LODWORD(v326) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5832)) & 0x7FFFFFFF);
  LODWORD(v326) = v326 ^ (v326 >> 16);
  LODWORD(v307) = (-1251540992 * (_DWORD)v326) ^ v193[1559];
  LODWORD(v326) = -333269657 * (_DWORD)v326;
  LODWORD(v326) = v307 ^ v326 ^ (2021099313 * (v326 >> 24)) ^ *(_DWORD *)&v351[4 * (v326 >> 24)] ^ *(_DWORD *)&v352[4 * (v326 >> 24) + 16] ^ *(_DWORD *)&v353[4 * (v326 >> 24) + 20];
  *(_DWORD *)(v10 + 8472) = 1202855529 * (_DWORD)v326
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v326) & 0xA54CE530);
  *(_DWORD *)(v10 + 9400) = 1202855529 * v354 - 1310673425 - ((-1099659602 - 1889256238 * v354) & 0xA54CE530);
  v355 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 3364)) & 0x7FFFFFFF);
  v356 = v355 ^ HIWORD(v355);
  LODWORD(v326) = *(_DWORD *)&v351[4 * ((-333269657 * v356) >> 24)] ^ v193[1640] ^ *(_DWORD *)&v352[4 * ((-333269657 * v356) >> 24) + 16] ^ *(_DWORD *)&v353[4 * ((-333269657 * v356) >> 24) + 20] ^ (-1251540992 * v356) ^ (-333269657 * v356) ^ (2021099313 * ((-333269657 * v356) >> 24));
  v357 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5540)) & 0x7FFFFFFF);
  v358 = v357 ^ HIWORD(v357);
  v359 = (-333269657 * v358) >> 24;
  LODWORD(v307) = *(_DWORD *)&v351[4 * v359] ^ v193[1674] ^ *(_DWORD *)&v352[4 * v359 + 16] ^ (-1251540992 * v358) ^ (-333269657 * v358) ^ *(_DWORD *)&v353[4 * v359 + 20] ^ (2021099313 * v359);
  v360 = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5868)) & 0x7FFFFFFF);
  v361 = v360 ^ HIWORD(v360);
  LODWORD(v327) = -333269657 * v361;
  *(_DWORD *)(v10 + 9736) = (-333269657 * v361) ^ (-1251540992 * v361) ^ v193[1619] ^ (2021099313
                                                                                     * (v327 >> 24)) ^ *(_DWORD *)&v351[4 * (v327 >> 24)] ^ *(_DWORD *)&v352[4 * (v327 >> 24) + 16] ^ *(_DWORD *)&v353[4 * (v327 >> 24) + 20];
  LODWORD(v105) = 1202855529 * (_DWORD)v218 - 549829801;
  LODWORD(v262) = *(_DWORD *)(v10 + 9052);
  *(_DWORD *)(v10 + 9416) = (_DWORD)v105
                          + (v262 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v105 + (v262 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v327) = 1202855529 * v307 - 549829801;
  *(_DWORD *)(v10 + 8496) = (*(_DWORD *)(v10 + 9224) ^ 0xD2A67298)
                          - (_DWORD)v327
                          - 760843624
                          - ((2 * ((*(_DWORD *)(v10 + 9224) ^ 0xD2A67298) - (_DWORD)v327)) & 0xA54CE530);
  LODWORD(v307) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 3360)) & 0x7FFFFFFF);
  LODWORD(v307) = v307 ^ WORD1(v307);
  LODWORD(v307) = *(_DWORD *)&v351[4 * ((-333269657 * v307) >> 24)] ^ v193[1625] ^ *(_DWORD *)&v352[4 * ((-333269657 * v307) >> 24) + 16] ^ *(_DWORD *)&v353[4 * ((-333269657 * v307) >> 24) + 20] ^ (-1251540992 * v307) ^ (-333269657 * v307) ^ (2021099313 * ((-333269657 * v307) >> 24));
  LODWORD(v218) = *(_DWORD *)(v10 + 9328);
  LODWORD(v323) = *(_DWORD *)(v10 + 9536);
  *(_DWORD *)(v10 + 8504) = (v323 ^ 0x2D598D67)
                          + (v218 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v323 ^ 0x2D598D67) + (v218 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9224) = 1202855529 * v307 - 1310673425 - ((-1099659602 - 1889256238 * v307) & 0xA54CE530);
  LODWORD(v307) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5704)) & 0x7FFFFFFF);
  LODWORD(v307) = v307 ^ WORD1(v307);
  LODWORD(v324) = (-333269657 * v307) >> 24;
  v362 = *(_DWORD *)&v351[4 * v324] ^ v193[1601] ^ *(_DWORD *)&v352[4 * (v324 + 4)] ^ (-1251540992 * v307) ^ (-333269657 * v307) ^ *(_DWORD *)&v353[4 * (v324 + 5)] ^ (2021099313 * v324);
  LODWORD(v198) = -333269657 * ((v26 ^ *(_DWORD *)(v10 + 5916)) & 0x7FFFFFFF);
  LODWORD(v198) = v198 ^ WORD1(v198);
  LODWORD(v307) = (-1251540992 * v198) ^ v193[1609];
  LODWORD(v198) = -333269657 * v198;
  LODWORD(v307) = v307 ^ v198;
  LODWORD(v198) = BYTE3(v198);
  *(_QWORD *)(v10 + 7072) = v351;
  LODWORD(v307) = v307 ^ (2021099313 * v198) ^ *(_DWORD *)&v351[4 * v198];
  *(_QWORD *)(v10 + 7128) = v352;
  LODWORD(v324) = *(_DWORD *)&v352[4 * (v198 + 4)];
  LODWORD(v352) = *(_DWORD *)(v10 + 9392);
  *(_QWORD *)(v10 + 7112) = v353;
  LODWORD(v198) = v307 ^ v324 ^ *(_DWORD *)&v353[4 * (v198 + 5)];
  LODWORD(v307) = 1202855529 * *(_DWORD *)(v10 + 9632);
  *(_DWORD *)(v10 + 9632) = 549829801
                          - v307
                          + (_DWORD)v327
                          - 760843624
                          - ((2 * (549829801 - v307 + (_DWORD)v327)) & 0xA54CE530);
  LODWORD(v324) = *(_DWORD *)(v10 + 9472);
  *(_DWORD *)(v10 + 8944) = 1202855529 * v362 - 1310673425 - ((-1099659602 - 1889256238 * v362) & 0xA54CE530);
  v363 = *(_DWORD *)(v10 + 8872);
  LODWORD(v197) = 1202855529 * (_DWORD)v325 - 1310673425 - ((-1099659602 - 1889256238 * (_DWORD)v325) & 0xA54CE530);
  LODWORD(v322) = *(_DWORD *)(v10 + 9576);
  *(_DWORD *)(v10 + 9116) = (v322 ^ 0x2D598D67)
                          + (v352 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v322 ^ 0x2D598D67) + (v352 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v220) = 1202855529 * *(_DWORD *)(v10 + 9704) - 549829801;
  LODWORD(v193) = *(_DWORD *)(v10 + 9016);
  *(_DWORD *)(v10 + 9208) = (v193 ^ 0x2D598D67)
                          + (_DWORD)v220
                          - 760843623
                          - ((2 * ((v193 ^ 0x2D598D67) + (_DWORD)v220 + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9560) = 1202855529 * (_DWORD)v326
                          - 1310673425
                          - ((-1099659602 - 1889256238 * (_DWORD)v326) & 0xA54CE530);
  LODWORD(v353) = *(_DWORD *)(v10 + 9456);
  LODWORD(v327) = *(_DWORD *)(v10 + 9552);
  *(_DWORD *)(v10 + 9440) = (v327 ^ 0x2D598D67)
                          + (v353 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v327 ^ 0x2D598D67) + (v353 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v199) = *(_DWORD *)(v10 + 8776);
  v364 = *(_DWORD *)(v10 + 9096);
  *(_DWORD *)(v10 + 9176) = (v364 ^ 0x2D598D67)
                          + (v199 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v364 ^ 0x2D598D67) + (v199 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v325) = 1202855529 * *(_DWORD *)(v10 + 9128) - 549829801;
  LODWORD(v326) = v325 ^ v323;
  LODWORD(v323) = *(_DWORD *)(v10 + 8576);
  *(_DWORD *)(v10 + 8704) = (_DWORD)v326;
  *(_DWORD *)(v10 + 9128) = (v353 ^ 0x2D598D67)
                          + (_DWORD)v325
                          - 760843623
                          - ((2 * ((v353 ^ 0x2D598D67) + (_DWORD)v325 + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 7992) = (v327 ^ 0xD2A67298)
                          + (v363 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v327 ^ 0xD2A67298) + (v363 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v325) = 1202855529 * *(_DWORD *)(v10 + 9640) - 549829801;
  *(_DWORD *)(v10 + 9456) = v325 ^ v262;
  LODWORD(v326) = *(_DWORD *)(v10 + 9024);
  *(_DWORD *)(v10 + 9536) = v325 ^ v326;
  *(_DWORD *)(v10 + 9640) = (v218 ^ 0x2D598D67)
                          + (v326 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v218 ^ 0x2D598D67) + (v326 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v325) = *(_DWORD *)(v10 + 9160) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8552) = v325 ^ v193;
  *(_DWORD *)(v10 + 9704) = (_DWORD)v325
                          + (v197 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((_DWORD)v325 + (v197 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v326) = *(_DWORD *)(v10 + 8900);
  LODWORD(v218) = *(_DWORD *)(v10 + 9172);
  *(_DWORD *)(v10 + 8840) = v105 ^ v218;
  *(_DWORD *)(v10 + 9160) = v307
                          - 549829801
                          + (v218 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * (v307 - 549829801 + (v218 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8464) = (v324 ^ 0xD2A67298)
                          - (_DWORD)v220
                          - 760843624
                          - ((2 * ((v324 ^ 0xD2A67298) - (_DWORD)v220)) & 0xA54CE530);
  LODWORD(v327) = *(_DWORD *)(v10 + 9136) + 841100092;
  LODWORD(v218) = v364 ^ 0xD2A67298;
  v365 = *(_DWORD *)(v10 + 9448);
  *(_DWORD *)(v10 + 8056) = (v327 ^ 0xAD18181A)
                          + (_DWORD)v218
                          - 760843623
                          - ((2 * ((v327 ^ 0xAD18181A) + (_DWORD)v218 + 1)) & 0xA54CE530);
  LODWORD(v218) = v322 ^ 0xD2A67298;
  LODWORD(v322) = *(_DWORD *)(v10 + 8748);
  *(_DWORD *)(v10 + 8416) = (_DWORD)v218
                          + (v199 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((_DWORD)v218 + (v199 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v325) = ((-1889256238 * v286) & 0xFFAE9FF6) + ((1202855529 * v286) ^ 0x7FD74FFB);
  LODWORD(v220) = 1202855529 * *(_DWORD *)(v10 + 9376) - 549829801;
  *(_DWORD *)(v10 + 9376) = *(_DWORD *)(v10 + 9592) ^ *(_DWORD *)(v10 + 8784);
  LODWORD(v286) = 1202855529 * *(_DWORD *)(v10 + 9296) - 549829801;
  *(_DWORD *)(v10 + 8032) = *(_DWORD *)(v10 + 9200) - 293985974;
  *(_DWORD *)(v10 + 9592) = *(_DWORD *)(v10 + 9072) - 1894563142;
  LODWORD(v262) = *(_DWORD *)(v10 + 8920) + 638331707;
  *(_DWORD *)(v10 + 9172) = *(_DWORD *)(v10 + 8768) + 1224900440;
  LODWORD(v353) = *(_DWORD *)(v10 + 8764) - 1661341163;
  LODWORD(v193) = 1202855529 * *(_DWORD *)(v10 + 8728);
  *(_DWORD *)(v10 + 6952) = *(_DWORD *)(v10 + 8736) + 749042026;
  v366 = *(_DWORD *)(v10 + 8720) - 1700228624;
  LODWORD(v218) = 1202855529 * *(_DWORD *)(v10 + 8688) - 549829801;
  *(_DWORD *)(v10 + 9576) = 1202855529 * *(_DWORD *)(v10 + 8680) - 549829801;
  LODWORD(v307) = 1202855529 * *(_DWORD *)(v10 + 8672) - 549829801;
  LODWORD(v105) = 1202855529 * *(_DWORD *)(v10 + 9736) - 549829801;
  v367 = *(_DWORD *)(v10 + 8984);
  LODWORD(v308) = 1202855529 * v198 - ((258227410 * v198 + 1047824046) & 0x301BC6F2) - 146266416;
  LODWORD(v263) = *(_DWORD *)(v10 + 9608);
  LODWORD(v198) = *(_DWORD *)(v10 + 8532) ^ 0x180DE379;
  *(_DWORD *)(v10 + 6188) = v308;
  *(_DWORD *)(v10 + 8544) = v198 ^ v308;
  *(_DWORD *)(v10 + 9052) = v326 ^ 0xD2A67298 ^ v367;
  *(_DWORD *)(v10 + 9072) = v263 ^ 0xD2A67298 ^ *(_DWORD *)(v10 + 8536);
  *(_DWORD *)(v10 + 6176) = (_DWORD)v325 + 1600320348;
  *(_DWORD *)(v10 + 6172) = (_DWORD)v325 + 1600320349;
  *(_DWORD *)(v10 + 6200) = (_DWORD)v193;
  *(_DWORD *)(v10 + 6156) = (_DWORD)v193 - 549829801;
  *(_DWORD *)(v10 + 6216) = (_DWORD)v262;
  LODWORD(v193) = v262 ^ 0x46D1E7E4;
  *(_DWORD *)(v10 + 6080) = v262 ^ 0x46D1E7E4;
  LODWORD(v198) = v324 ^ 0x2D598D67;
  LODWORD(v324) = *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 9296) = v198 + (v324 ^ 0xD2A67298);
  LODWORD(v216) = *(_DWORD *)(v10 + 9616) - 3494;
  *(_DWORD *)(v10 + 9552) = (_DWORD)v216;
  LODWORD(v325) = (_DWORD)v218 - 760843624 - (((_DWORD)v216 - 1521690167) & (2 * (_DWORD)v218));
  *(_DWORD *)(v10 + 9200) = (v352 ^ 0x2D598D67) + (v263 ^ 0xD2A67298);
  LODWORD(v352) = *(_DWORD *)(v10 + 8744);
  LODWORD(v308) = *(_DWORD *)(v10 + 9288);
  *(_DWORD *)(v10 + 8688) = (v308 ^ 0x2D598D67) + (v352 ^ 0xD2A67298);
  LODWORD(v198) = (v363 ^ 0xD2A67298) + (*(_DWORD *)(v10 + 8536) ^ 0xD2A67298);
  *(_DWORD *)(v10 + 9616) = v198 - 760843624 - ((2 * v198) & 0xA54CE530);
  LODWORD(v263) = *(_DWORD *)(v10 + 8080) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8776) = (_DWORD)v218 + (_DWORD)v263 - 760843624 - ((2 * ((_DWORD)v218 + (_DWORD)v263)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9680);
  *(_DWORD *)(v10 + 9448) = v216 ^ v367;
  LODWORD(v218) = (*(_DWORD *)(v10 + 9240) ^ 0xD2A67298) + (v216 ^ 0xD2A67298);
  *(_DWORD *)(v10 + 8768) = (_DWORD)v218 - 760843624 - ((2 * (_DWORD)v218) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9544);
  *(_DWORD *)(v10 + 8736) = v218 ^ v197;
  *(_DWORD *)(v10 + 9328) = (v218 ^ 0xD2A67298) + (v326 ^ 0x2D598D67);
  LODWORD(v324) = v324 ^ v327;
  v368 = *(_DWORD *)(v10 + 9664) ^ 0xD2A67298;
  LODWORD(v216) = *(_DWORD *)(v10 + 9056) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8672) = (_DWORD)v216;
  *(_DWORD *)(v10 + 8872) = v368 + (_DWORD)v216 - 760843624 - ((2 * (v368 + (_DWORD)v216)) & 0xA54CE530);
  LODWORD(v262) = v352 ^ v323;
  *(_DWORD *)(v10 + 8828) = v352 ^ v323;
  LODWORD(v216) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 9664) = v216 ^ v323;
  *(_DWORD *)(v10 + 8656) = (_DWORD)v263
                          + (v216 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v263 + (v216 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v263) = *(_DWORD *)(v10 + 9156);
  *(_DWORD *)(v10 + 9136) = v368 + (v263 ^ 0x2D598D67);
  LODWORD(v218) = *(_DWORD *)(v10 + 8980);
  *(_DWORD *)(v10 + 9736) = v325 ^ v218;
  LODWORD(v216) = *(_DWORD *)(v10 + 8912);
  *(_DWORD *)(v10 + 9016) = v218 ^ v216;
  *(_DWORD *)(v10 + 9680) = *(_DWORD *)(v10 + 8532) ^ v216;
  LODWORD(v218) = *(_DWORD *)(v10 + 9592);
  LODWORD(v198) = *(_DWORD *)(v10 + 9312);
  *(_DWORD *)(v10 + 8764) = (v198 ^ 0x2D598D67)
                          + (v218 ^ 0xAFD8FF63)
                          - 760843623
                          - ((2 * ((v198 ^ 0x2D598D67) + (v218 ^ 0xAFD8FF63) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9544) = v365 ^ v263;
  LODWORD(v216) = *(_DWORD *)(v10 + 9496) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9608) = (v365 ^ 0xD2A67298) + (_DWORD)v216;
  LODWORD(v263) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 9056) = (_DWORD)v216 + (v263 ^ 0xD2A67298);
  LODWORD(v325) = *(_DWORD *)(v10 + 7984);
  *(_DWORD *)(v10 + 8632) = (v325 ^ 0xD2A67298) + (v198 ^ 0xD2A67298);
  LODWORD(v216) = *(_DWORD *)(v10 + 9152);
  *(_DWORD *)(v10 + 8680) = v218 ^ v216;
  LODWORD(v326) = *(_DWORD *)(v10 + 9012);
  *(_DWORD *)(v10 + 7240) = -760843623;
  LODWORD(v198) = (v216 ^ 0x2D598D67)
                + (v326 ^ 0xD2A67298)
                - 760843622
                + ~((2 * ((v216 ^ 0x2D598D67) + (v326 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9472) = v198;
  *(_DWORD *)(v10 + 9096) = v322 ^ v263;
  LODWORD(v218) = *(_DWORD *)(v10 + 9040);
  *(_DWORD *)(v10 + 9156) = (v218 ^ 0x2D598D67) + (v322 ^ 0xD2A67298);
  LODWORD(v216) = *(_DWORD *)(v10 + 9280);
  *(_DWORD *)(v10 + 9024) = v216 ^ v218;
  LODWORD(v218) = *(_DWORD *)(v10 + 8888);
  *(_DWORD *)(v10 + 8608) = v216 ^ v218;
  *(_DWORD *)(v10 + 9496) = v218 ^ v326;
  LODWORD(v218) = *(_DWORD *)(v10 + 9064);
  LODWORD(v263) = *(_DWORD *)(v10 + 8968);
  *(_DWORD *)(v10 + 8920) = (v263 ^ 0x2D598D67)
                          + (v218 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v263 ^ 0x2D598D67) + (v218 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 8712);
  LODWORD(v326) = *(_DWORD *)(v10 + 8880);
  *(_DWORD *)(v10 + 8612) = (v326 ^ 0xD2A67298) + (v216 ^ 0xD2A67298);
  v369 = *(_DWORD *)(v10 + 8932);
  *(_DWORD *)(v10 + 8888) = v216 ^ v369;
  LODWORD(v216) = *(_DWORD *)(v10 + 7248);
  v370 = v216 ^ v369;
  *(_DWORD *)(v10 + 8628) = v216 ^ v325;
  LODWORD(v216) = *(_DWORD *)(v10 + 9720);
  *(_DWORD *)(v10 + 9592) = v263 ^ v216;
  LODWORD(v325) = *(_DWORD *)(v10 + 7952);
  *(_DWORD *)(v10 + 8572) = (v216 ^ 0xD2A67298) + (v325 ^ 0x2D598D67);
  LODWORD(v263) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 7272) = v366;
  *(_DWORD *)(v10 + 8984) = (v263 ^ 0xD2A67298)
                          + (v366 ^ 0x4491B166)
                          - 760843623
                          - ((2 * ((v263 ^ 0xD2A67298) + (v366 ^ 0x4491B166) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8868) = (*(_DWORD *)(v10 + 8944) ^ 0xD2A67298)
                          - (_DWORD)v220
                          - 1150398823
                          - ((2 * ((*(_DWORD *)(v10 + 8944) ^ 0xD2A67298) - (_DWORD)v220)) & 0x76DC9D32);
  *(_DWORD *)(v10 + 8616) = v326 ^ v218;
  LODWORD(v216) = *(_DWORD *)(v10 + 9272);
  *(_DWORD *)(v10 + 9064) = v220 ^ v216;
  LODWORD(v218) = *(_DWORD *)(v10 + 8752);
  *(_DWORD *)(v10 + 9312) = (v216 ^ 0xD2A67298)
                          + (v218 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v216 ^ 0xD2A67298) + (v218 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9392) = v353 ^ v263;
  *(_DWORD *)(v10 + 9152) = (v353 ^ 0x42405141)
                          + (v325 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v353 ^ 0x42405141) + (v325 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 8792) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8932) = (_DWORD)v220 + (_DWORD)v193 - 760843624 - ((2 * ((_DWORD)v220 + (_DWORD)v193)) & 0xA54CE530);
  v371 = (v218 ^ 0xD2A67298) + (*(_DWORD *)(v10 + 9728) ^ 0x2D598D67) + 1;
  *(_DWORD *)(v10 + 8728) = v371 - 760843624 - ((2 * v371) & 0xA54CE530);
  v372 = *(_DWORD *)(v10 + 9688);
  v373 = (*(_DWORD *)(v10 + 9120) ^ 0xD2A67298) + (v372 ^ 0xD2A67298);
  *(_DWORD *)(v10 + 9012) = v373 - 760843624 - ((2 * v373) & 0xA54CE530);
  LODWORD(v325) = *(_DWORD *)(v10 + 9036);
  LODWORD(v326) = *(_DWORD *)(v10 + 9424);
  *(_DWORD *)(v10 + 8576) = (v325 ^ 0xD2A67298)
                          + (v326 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v325 ^ 0xD2A67298) + (v326 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9408);
  *(_DWORD *)(v10 + 8648) = v218 ^ v325;
  v374 = *(_DWORD *)(v10 + 8424);
  *(_DWORD *)(v10 + 9036) = (v374 ^ 0xD2A67298)
                          + (v218 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v374 ^ 0xD2A67298) + (v218 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  v375 = (*(_DWORD *)(v10 + 9384) ^ 0x2D598D67) + (*(_DWORD *)(v10 + 8964) ^ 0xD2A67298);
  LODWORD(v352) = *(_DWORD *)(v10 + 9504) ^ 0xD2A67298;
  LODWORD(v263) = *(_DWORD *)(v10 + 8904);
  LODWORD(v351) = (_DWORD)v352 + (v263 ^ 0x2D598D67) + 1;
  LODWORD(v323) = *(_DWORD *)(v10 + 9192);
  LODWORD(v322) = *(_DWORD *)(v10 + 8816);
  *(_DWORD *)(v10 + 8744) = (v323 ^ v322)
                          - (_DWORD)v351
                          - 760843624
                          - ((2 * ((v323 ^ v322) - (_DWORD)v351)) & 0xA54CE530);
  LODWORD(v353) = (*(_DWORD *)(v10 + 8800) ^ 0x2D598D67) + (*(_DWORD *)(v10 + 8032) ^ 0xF3FDDF3) + 1;
  *(_DWORD *)(v10 + 8980) = v353 ^ 0xD2A67298 ^ v351;
  *(_DWORD *)(v10 + 8536) = v324 ^ 0x52E7E7E5 ^ ++v375;
  LODWORD(v218) = *(_DWORD *)(v10 + 9176);
  *(_DWORD *)(v10 + 8900) = v375 ^ v218;
  *(_DWORD *)(v10 + 8752) = (v218 ^ 0xD2A67298)
                          + (v323 ^ v322)
                          - 760843624
                          - ((2 * ((v218 ^ 0xD2A67298) + (v323 ^ v322))) & 0xA54CE530);
  v376 = *(_DWORD *)(v10 + 9464) ^ 0xD2A67298;
  LODWORD(v193) = v376 - v307;
  *(_DWORD *)(v10 + 9720) = v370 + v376 - v307 - 760843624 - ((2 * (v370 + v376 - v307)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9176) = (v198 ^ 0x2D598D67)
                          + (_DWORD)v353
                          - 760843623
                          - ((2 * ((v198 ^ 0x2D598D67) + (_DWORD)v353 + 1)) & 0xA54CE530);
  v377 = *(_DWORD *)(v10 + 9148);
  *(_DWORD *)(v10 + 8640) = v326 ^ v377;
  *(_DWORD *)(v10 + 9424) = (_DWORD)v262
                          + (v324 ^ 0x7FBE6A82)
                          - 760843623
                          - ((2 * ((_DWORD)v262 + (v324 ^ 0x7FBE6A82) + 1)) & 0xA54CE530);
  LODWORD(v353) = *(_DWORD *)(v10 + 8116) ^ 0xD2A67298;
  LODWORD(v325) = *(_DWORD *)(v10 + 9432) ^ 0xD2A67298;
  v378 = (_DWORD)v325 + v376;
  LODWORD(v216) = (_DWORD)v353 - *(_DWORD *)(v10 + 6176);
  *(_DWORD *)(v10 + 9272) = (_DWORD)v216;
  *(_DWORD *)(v10 + 9280) = v378 - (_DWORD)v216 - 760843624 - ((2 * (v378 - (_DWORD)v216)) & 0xA54CE530);
  LODWORD(v326) = *(_DWORD *)(v10 + 8952);
  LODWORD(v197) = v372 ^ *(_DWORD *)(v10 + 6952);
  *(_DWORD *)(v10 + 9688) = (v326 ^ v308)
                          + (v197 ^ 0x9FCD448B)
                          - 760843624
                          - ((2 * ((v326 ^ v308) + (v197 ^ 0x9FCD448B))) & 0xA54CE530);
  LODWORD(v220) = (_DWORD)v220 + (_DWORD)v352;
  LODWORD(v218) = *(_DWORD *)(v10 + 8848) ^ 0xD2A67298;
  LODWORD(v216) = (v326 ^ 0xD2A67298) + (_DWORD)v218;
  *(_DWORD *)(v10 + 9504) = (_DWORD)v216 + (_DWORD)v220 - 760843624 - ((2 * ((_DWORD)v216 + (_DWORD)v220)) & 0xA54CE530);
  LODWORD(v198) = *(_DWORD *)(v10 + 9172) ^ 0x69C83C01;
  *(_DWORD *)(v10 + 9464) = v198;
  LODWORD(v353) = (_DWORD)v353 + v198;
  *(_DWORD *)(v10 + 8952) = (v326 ^ v308)
                          + (_DWORD)v353
                          - 760843624
                          - ((2 * ((v326 ^ v308) + (_DWORD)v353)) & 0xA54CE530);
  LODWORD(v352) = (*(_DWORD *)(v10 + 9528) ^ 0xD2A67298) + (*(_DWORD *)(v10 + 9224) ^ 0xD2A67298);
  LODWORD(v351) = *(_DWORD *)(v10 + 9156) + 1;
  *(_DWORD *)(v10 + 9040) = (_DWORD)v353 - (_DWORD)v351 - 760843624 - ((2 * ((_DWORD)v353 - (_DWORD)v351)) & 0xA54CE530);
  LODWORD(v308) = *(_DWORD *)(v10 + 8832);
  *(_DWORD *)(v10 + 9432) = v263 ^ v308;
  LODWORD(v326) = *(_DWORD *)(v10 + 8064);
  LODWORD(v353) = v326 ^ v377;
  LODWORD(v263) = *(_DWORD *)(v10 + 9080);
  *(_DWORD *)(v10 + 8968) = (v308 ^ v263)
                          + (v326 ^ v377)
                          - 760843624
                          - ((2 * ((v308 ^ v263) + (v326 ^ v377))) & 0xA54CE530);
  *(_DWORD *)(v10 + 8720) = (_DWORD)v216
                          + (v308 ^ v263)
                          - 760843624
                          - ((2 * ((_DWORD)v216 + (v308 ^ v263))) & 0xA54CE530);
  LODWORD(v308) = *(_DWORD *)(v10 + 9584) ^ 0xD2A67298;
  LODWORD(v262) = (*(_DWORD *)(v10 + 9320) ^ 0xD2A67298) + v308;
  *(_DWORD *)(v10 + 9172) = (_DWORD)v220 - (_DWORD)v262 - 760843624 - ((2 * ((_DWORD)v220 - (_DWORD)v262)) & 0xA54CE530);
  LODWORD(v199) = (*(_DWORD *)(v10 + 9648) ^ 0xD2A67298) - (_DWORD)v105;
  LODWORD(v198) = *(_DWORD *)(v10 + 8552);
  *(_DWORD *)(v10 + 8748) = (v198 ^ 0x2D598D67)
                          + v199
                          - 760843623
                          - ((2 * ((v198 ^ 0x2D598D67) + v199 + 1)) & 0xA54CE530);
  v379 = v374 ^ v263;
  *(_DWORD *)(v10 + 9080) = (v374 ^ v263)
                          - *(_DWORD *)(v10 + 9736)
                          - 760843624
                          - ((2 * ((v374 ^ v263) - *(_DWORD *)(v10 + 9736))) & 0xA54CE530);
  *(_DWORD *)(v10 + 9584) = v378 + (_DWORD)v262 - 760843624 - ((2 * (v378 + (_DWORD)v262)) & 0xA54CE530);
  LODWORD(v216) = (_DWORD)v218 - *(_DWORD *)(v10 + 6200) + 549829801;
  *(_DWORD *)(v10 + 8792) = (_DWORD)v193 - (_DWORD)v216 - 760843624 - ((2 * ((_DWORD)v193 - (_DWORD)v216)) & 0xA54CE530);
  LODWORD(v262) = *(_DWORD *)(v10 + 9328) + 1;
  *(_DWORD *)(v10 + 8880) = (_DWORD)v262 + v370 - 760843624 - ((2 * ((_DWORD)v262 + v370)) & 0xA54CE530);
  LODWORD(v263) = *(_DWORD *)(v10 + 9004);
  v380 = (_DWORD)v325 + (v263 ^ 0xD2A67298);
  LODWORD(v220) = *(_DWORD *)(v10 + 9576);
  *(_DWORD *)(v10 + 8832) = (_DWORD)v220 + (v322 ^ 0xD2A67298);
  LODWORD(v220) = (_DWORD)v220 + v286;
  *(_DWORD *)(v10 + 9104) = v220 ^ v197;
  *(_DWORD *)(v10 + 9156) = (_DWORD)v220
                          + (v198 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v220 + (v198 ^ 0xD2A67298))) & 0xA54CE530);
  v381 = *(_DWORD *)(v10 + 9008) ^ 0xD2A67298;
  v382 = *(_DWORD *)(v10 + 9304);
  *(_DWORD *)(v10 + 8552) = v382 ^ v323;
  LODWORD(v193) = v381 + (v382 ^ 0x2D598D67);
  v383 = v381 + v308;
  LODWORD(v308) = v326 ^ *(_DWORD *)(v10 + 8696);
  *(_DWORD *)(v10 + 9328) = v383 + v308 - 760843624 - ((2 * (v383 + v308)) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 8464);
  *(_DWORD *)(v10 + 8664) = v220 ^ v353;
  LODWORD(v218) = *(_DWORD *)(v10 + 9640);
  *(_DWORD *)(v10 + 9008) = v220 ^ v218;
  *(_DWORD *)(v10 + 9148) = v351 ^ v218;
  *(_DWORD *)(v10 + 8912) = (_DWORD)v216 - v199 + 1774730241 - ((2 * ((_DWORD)v216 - v199)) & 0xD3907802);
  LODWORD(v323) = *(_DWORD *)(v10 + 9632);
  LODWORD(v326) = *(_DWORD *)(v10 + 8612);
  *(_DWORD *)(v10 + 9408) = (_DWORD)v326
                          + (v323 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v326 + (v323 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9296) + 1;
  LODWORD(v353) = *(_DWORD *)(v10 + 9136) + 1;
  *(_DWORD *)(v10 + 9136) = (_DWORD)v216 - (_DWORD)v353 - 760843624 - ((2 * ((_DWORD)v216 - (_DWORD)v353)) & 0xA54CE530);
  v384 = *(_DWORD *)(v10 + 8512) ^ 0xD2A67298;
  LODWORD(v351) = (v263 ^ 0x2D598D67) + v384 + 1;
  LODWORD(v263) = *(_DWORD *)(v10 + 9116);
  LODWORD(v218) = *(_DWORD *)(v10 + 7240);
  *(_DWORD *)(v10 + 9296) = (v263 ^ 0xD2A67298)
                          - (_DWORD)v351
                          + (_DWORD)v218
                          + ~((2 * ((v263 ^ 0xD2A67298) - (_DWORD)v351)) & 0xA54CE530);
  LODWORD(v199) = *(_DWORD *)(v10 + 9728) ^ *(_DWORD *)(v10 + 8432);
  *(_DWORD *)(v10 + 8080) = v262 ^ v199 ^ 0xD2A67298;
  LODWORD(v324) = *(_DWORD *)(v10 + 8680);
  LODWORD(v198) = *(_DWORD *)(v10 + 9024);
  *(_DWORD *)(v10 + 8712) = v198
                          + (v324 ^ 0x82817204)
                          - 760843623
                          - ((2 * (v198 + (v324 ^ 0x82817204) + 1)) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 9056);
  *(_DWORD *)(v10 + 9024) = (_DWORD)v220 - v198 - 760843624 - ((2 * ((_DWORD)v220 - v198)) & 0xA54CE530);
  LODWORD(v322) = *(_DWORD *)(v10 + 9264);
  LODWORD(v197) = *(_DWORD *)(v10 + 9560);
  v385 = (v197 ^ 0xD2A67298) + (v322 ^ 0xD2A67298);
  *(_DWORD *)(v10 + 8864) = v352 ^ v323;
  *(_DWORD *)(v10 + 8116) = v352 ^ 0xD2A67298 ^ v353;
  LODWORD(v325) = *(_DWORD *)(v10 + 9200) + 1;
  LODWORD(v262) = *(_DWORD *)(v10 + 8688) + 1;
  *(_DWORD *)(v10 + 9004) = (_DWORD)v262 + (_DWORD)v325 - 760843624 - ((2 * ((_DWORD)v262 + (_DWORD)v325)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8688) = v380 ^ v262;
  *(_DWORD *)(v10 + 8020) = v379 ^ 0xD2A67298 ^ v380;
  LODWORD(v198) = *(_DWORD *)(v10 + 8504);
  *(_DWORD *)(v10 + 9288) = v198 ^ v263;
  *(_DWORD *)(v10 + 9728) = (v198 ^ 0xD2A67298) + v308 - 760843624 - ((2 * ((v198 ^ 0xD2A67298) + v308)) & 0xA54CE530);
  LODWORD(v198) = *(_DWORD *)(v10 + 6156) + *(_DWORD *)(v10 + 8672);
  *(_DWORD *)(v10 + 9200) = (_DWORD)v326 + v198 - 760843624 - ((2 * ((_DWORD)v326 + v198)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8612) = *(_DWORD *)(v10 + 9464)
                          + (_DWORD)v105
                          - 760843624
                          - ((2 * (*(_DWORD *)(v10 + 9464) + (_DWORD)v105)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9632) = (_DWORD)v325 + v198 - 760843624 - ((2 * ((_DWORD)v325 + v198)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8672) = ((_DWORD)v193 + 1) ^ v351;
  *(_DWORD *)(v10 + 8848) = ((_DWORD)v193 + 1) ^ v216;
  *(_DWORD *)(v10 + 8904) = *(_DWORD *)(v10 + 9736)
                          - v199
                          - 760843624
                          - ((2 * (*(_DWORD *)(v10 + 9736) - v199)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 8572) + 1;
  LODWORD(v198) = *(_DWORD *)(v10 + 9052) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9052) = v198;
  *(_DWORD *)(v10 + 9192) = v198 - (_DWORD)v216 + (_DWORD)v218 + ~((2 * (v198 - (_DWORD)v216)) & 0xA54CE530);
  LODWORD(v198) = v322 ^ *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 8816) = v216 ^ v198;
  *(_DWORD *)(v10 + 9264) = (_DWORD)v220 + v198 - 760843624 - ((2 * ((_DWORD)v220 + v198)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9120) ^ (v286 - 760843624 - ((2 * v286) & 0xA54CE530));
  LODWORD(v198) = *(_DWORD *)(v10 + 9400) ^ 0xD2A67298;
  LODWORD(v105) = *(_DWORD *)(v10 + 8548);
  LODWORD(v263) = *(_DWORD *)(v10 + 8964) ^ v105;
  *(_DWORD *)(v10 + 9056) = v383 ^ 0xD2A67298 ^ v385;
  LODWORD(v325) = (v105 ^ 0x2D598D67) + v198 + 1;
  *(_DWORD *)(v10 + 9528) = v325 ^ v385;
  LODWORD(v218) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 9576) = v218 ^ v325;
  *(_DWORD *)(v10 + 8628) = (_DWORD)v216 - (_DWORD)v218 - 760843624 - ((2 * ((_DWORD)v216 - (_DWORD)v218)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8680) = v324 ^ v216;
  LODWORD(v105) = *(_DWORD *)(v10 + 9368);
  *(_DWORD *)(v10 + 9304) = (v105 ^ 0xD2A67298)
                          + v198
                          - 760843624
                          - ((2 * ((v105 ^ 0xD2A67298) + v198)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 8860);
  *(_DWORD *)(v10 + 9736) = v216 ^ *(_DWORD *)(v10 + 8800);
  LODWORD(v198) = *(_DWORD *)(v10 + 9248) ^ 0xD2A67298;
  v386 = *(_DWORD *)(v10 + 8472);
  LODWORD(v352) = v198 + (v386 ^ 0x2D598D67);
  LODWORD(v262) = (v216 ^ 0xD2A67298)
                + v198
                - 760843624
                - ((2 * ((v216 ^ 0xD2A67298) + v198)) & 0xA54CE530);
  LODWORD(v198) = *(_DWORD *)(v10 + 6172) + (*(_DWORD *)(v10 + 9224) ^ 0x2D598D67);
  LODWORD(v324) = v198 - 760843624 - ((2 * v198) & 0xA54CE530);
  LODWORD(v198) = *(_DWORD *)(v10 + 8520) ^ 0xD2A67298;
  LODWORD(v308) = v384 + v198 - 760843624 - ((2 * (v384 + v198)) & 0xA54CE530);
  v387 = v198
       + (*(_DWORD *)(v10 + 8696) ^ 0xD2A67298)
       - 760843624
       - ((2 * (v198 + (*(_DWORD *)(v10 + 8696) ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v198) = v307 + (v105 ^ 0x2D598D67);
  LODWORD(v218) = *(_DWORD *)(v10 + 8480);
  LODWORD(v325) = *(_DWORD *)(v10 + 9648) ^ v218;
  v388 = (v218 ^ 0xD2A67298) + (*(_DWORD *)(v10 + 9384) ^ 0xD2A67298);
  v389 = v388 - 760843624 - ((2 * v388) & 0xA54CE530);
  *(_DWORD *)(v10 + 9224) = v197 ^ *(_DWORD *)(v10 + 8032);
  LODWORD(v353) = (*(_DWORD *)(v10 + 9704) ^ 0xD2A67298)
                + (*(_DWORD *)(v10 + 8952) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 8952) ^ 0xD2A67298);
  LODWORD(v220) = *(_DWORD *)(v10 + 8544);
  v390 = (*(_DWORD *)(v10 + 9472) ^ 0xD2A67298) + (v220 ^ 0xD2A67298);
  LODWORD(v307) = v390 - 760843624 - ((2 * v390) & 0xA54CE530);
  LODWORD(v351) = *(_DWORD *)(v10 + 8576) ^ 0xD2A67298;
  LODWORD(v216) = *(_DWORD *)(v10 + 8552);
  v391 = (_DWORD)v216 + (_DWORD)v351 - 760843624 - ((2 * ((_DWORD)v216 + (_DWORD)v351)) & 0xA54CE530);
  LODWORD(v323) = *(_DWORD *)(v10 + 9616) ^ 0xD2A67298;
  LODWORD(v286) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 9368) = (v286 ^ 0x4491B166)
                          + v323
                          - 760843623
                          - ((2 * ((v286 ^ 0x4491B166) + v323 + 1)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9416);
  *(_DWORD *)(v10 + 9472) = v323
                          + (v218 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * (v323 + (v218 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v323) = *(_DWORD *)(v10 + 9240) ^ *(_DWORD *)(v10 + 6188);
  v392 = *(_DWORD *)(v10 + 8608);
  *(_DWORD *)(v10 + 9648) = (v323 ^ 0xCAAB91E1) + v392 - 760843624 - ((2 * ((v323 ^ 0xCAAB91E1) + v392)) & 0xA54CE530);
  LODWORD(v197) = *(_DWORD *)(v10 + 8616);
  *(_DWORD *)(v10 + 9616) = v392 - v197 - 760843624 - ((2 * (v392 - v197)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8696) = v323 ^ v220;
  LODWORD(v199) = *(_DWORD *)(v10 + 8832);
  *(_DWORD *)(v10 + 9384) = v199
                          + (v262 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * (v199 + (v262 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v105) = *(_DWORD *)(v10 + 8632);
  *(_DWORD *)(v10 + 9560) = (_DWORD)v105
                          + (v286 ^ 0xBB6E4E99)
                          - 760843624
                          - ((2 * ((_DWORD)v105 + (v286 ^ 0xBB6E4E99))) & 0xA54CE530);
  *(_DWORD *)(v10 + 8544) = (v218 ^ 0x2D598D67)
                          + (_DWORD)v353
                          + 1
                          - 760843623
                          - ((2 * ((v218 ^ 0x2D598D67) + (_DWORD)v353 + 1 + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8868) = v262 ^ *(_DWORD *)(v10 + 7992) ^ 0xD2A67298;
  LODWORD(v220) = *(_DWORD *)(v10 + 8736);
  *(_DWORD *)(v10 + 8860) = (_DWORD)v220 + (_DWORD)v351 - 760843624 - ((2 * ((_DWORD)v220 + (_DWORD)v351)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9640) = (_DWORD)v353
                          + 1
                          + (v387 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v353 + 1 + (v387 ^ 0xD2A67298))) & 0xA54CE530);
  *(_DWORD *)(v10 + 9248) = v220 ^ 0xD2A67298 ^ v105;
  LODWORD(v351) = *(_DWORD *)(v10 + 8920);
  LODWORD(v326) = *(_DWORD *)(v10 + 8704);
  *(_DWORD *)(v10 + 8576) = (v326 ^ 0x2D598D67)
                          + (v351 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v326 ^ 0x2D598D67) + (v351 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v322) = v197 + (v387 ^ 0xD2A67298);
  LODWORD(v197) = *(_DWORD *)(v10 + 7240);
  *(_DWORD *)(v10 + 9464) = v322 + v197 + ~((2 * v322) & 0xA54CE530);
  LODWORD(v322) = *(_DWORD *)(v10 + 8656) ^ 0xD2A67298;
  LODWORD(v323) = *(_DWORD *)(v10 + 8496);
  *(_DWORD *)(v10 + 8800) = (v323 ^ 0xD2A67298) + v322 - 760843624 - ((2 * ((v323 ^ 0xD2A67298) + v322)) & 0xA54CE530);
  LODWORD(v262) = *(_DWORD *)(v10 + 8872) ^ 0xD2A67298;
  LODWORD(v220) = *(_DWORD *)(v10 + 8768);
  *(_DWORD *)(v10 + 8872) = (_DWORD)v262
                          + (v220 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((_DWORD)v262 + (v220 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v193) = *(_DWORD *)(v10 + 8648);
  *(_DWORD *)(v10 + 9240) = v322 - (_DWORD)v193 - 760843624 - ((2 * (v322 - (_DWORD)v193)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8768) = (v220 ^ 0xD2A67298)
                          + (_DWORD)v352
                          + 1
                          - 760843624
                          - ((2 * ((v220 ^ 0xD2A67298) + (_DWORD)v352 + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8608) = v199 + (v386 ^ 0xD2A67298) - 760843624 - ((2 * (v199 + (v386 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 8764) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8572) = (_DWORD)v218 + (_DWORD)v263 - 760843624 - ((2 * ((_DWORD)v218 + (_DWORD)v263)) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 8776);
  *(_DWORD *)(v10 + 9116) = v262 ^ v220;
  LODWORD(v262) = *(_DWORD *)(v10 + 9440) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8764) = (_DWORD)v262
                          + (v220 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((_DWORD)v262 + (v220 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v105) = *(_DWORD *)(v10 + 9016);
  *(_DWORD *)(v10 + 8616) = (_DWORD)v105
                          + (v324 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v105 + (v324 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v220) = (_DWORD)v218 + (_DWORD)v216;
  *(_DWORD *)(v10 + 8736) = v263 ^ v386;
  LODWORD(v218) = *(_DWORD *)(v10 + 6216) ^ *(_DWORD *)(v10 + 8432) ^ 0x9477957C;
  LODWORD(v308) = v308 ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8776) = v308 + (_DWORD)v218 - 760843624 - ((2 * (v308 + (_DWORD)v218)) & 0xA54CE530);
  LODWORD(v263) = *(_DWORD *)(v10 + 9128);
  *(_DWORD *)(v10 + 8504) = v263 ^ ((_DWORD)v352 + 1);
  *(_DWORD *)(v10 + 8520) = (v263 ^ 0xD2A67298)
                          + (_DWORD)v218
                          - 760843624
                          - ((2 * ((v263 ^ 0xD2A67298) + (_DWORD)v218)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8632) = (_DWORD)v193 + (_DWORD)v262 - 760843624 - ((2 * ((_DWORD)v193 + (_DWORD)v262)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8656) = v323 ^ v326;
  LODWORD(v216) = *(_DWORD *)(v10 + 8888);
  LODWORD(v286) = *(_DWORD *)(v10 + 9432);
  *(_DWORD *)(v10 + 8704) = v286 + (_DWORD)v216 - 760843624 - ((2 * (v286 + (_DWORD)v216)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8832) = v308 + (_DWORD)v105 - 760843624 - ((2 * (v308 + (_DWORD)v105)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8008) = (_DWORD)v216
                          + (v324 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v216 + (v324 ^ 0xD2A67298))) & 0xA54CE530);
  *(_DWORD *)(v10 + 9400) = (_DWORD)v220 - ((2 * (_DWORD)v220 + 1375814636) & 0x76DC9D32);
  LODWORD(v216) = *(_DWORD *)(v10 + 8640) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8548) = (_DWORD)v216;
  LODWORD(v326) = (v216 ^ v351)
                + v286
                + 1061258199
                - 760843624
                - ((2 * ((v216 ^ v351) + v286 + 1061258199)) & 0xA54CE530);
  v393 = *(_DWORD *)(v10 + 8932);
  LODWORD(v105) = *(_DWORD *)(v10 + 9064);
  *(_DWORD *)(v10 + 9440) = (v105 ^ 0x2D598D67)
                          + (v393 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v105 ^ 0x2D598D67) + (v393 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v322) = *(_DWORD *)(v10 + 8056) ^ 0xD2A67298;
  LODWORD(v308) = *(_DWORD *)(v10 + 8984);
  LODWORD(v220) = (v308 ^ 0xD2A67298) + v322;
  LODWORD(v216) = *(_DWORD *)(v10 + 9680);
  *(_DWORD *)(v10 + 8648) = v322 ^ v216;
  LODWORD(v323) = *(_DWORD *)(v10 + 8416);
  LODWORD(v263) = *(_DWORD *)(v10 + 9096);
  LODWORD(v262) = (v323 ^ 0x2D598D67) + (_DWORD)v263;
  *(_DWORD *)(v10 + 9128) = v216 ^ 0xD2A67298 ^ v263;
  *(_DWORD *)(v10 + 9680) = v286 ^ v308;
  *(_DWORD *)(v10 + 8964) = (v326 ^ 0xD2A67298)
                          - v286
                          - ((2 * ((v326 ^ 0xD2A67298) - v286) - 2122516398) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9536);
  *(_DWORD *)(v10 + 8000) = (v393 ^ 0x2D598D67)
                          + (v216 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v393 ^ 0x2D598D67) + (v216 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v218) = (v198 + 1 - ((2 * (v198 + 1) + 1704002876) & 0xA54CE530) + 91157814) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8496) = (v216 ^ 0x2D598D67) + (_DWORD)v218 - 852001438;
  LODWORD(v324) = v105 ^ 0xD2A67298 ^ v325;
  *(_DWORD *)(v10 + 8920) = (v389 ^ 0x2D598D67)
                          + (_DWORD)v325
                          - 760843623
                          - ((2 * ((v389 ^ 0x2D598D67) + (_DWORD)v325 + 1)) & 0xA54CE530);
  LODWORD(v198) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9096) = ((_DWORD)v218 - ((2 * ((_DWORD)v218 - 852001438)) & 0xA54CE530) - 1612845062) ^ v198;
  LODWORD(v216) = *(_DWORD *)(v10 + 9392);
  LODWORD(v352) = (v216 ^ 0x6F19DC26) - v198;
  LODWORD(v322) = *(_DWORD *)(v10 + 8840);
  LODWORD(v105) = *(_DWORD *)(v10 + 9448);
  LODWORD(v326) = (v322 ^ 0xD2A67298)
                + (_DWORD)v105
                - 760843624
                - ((2 * ((v322 ^ 0xD2A67298) + (_DWORD)v105)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8552) = v323 ^ 0xBDBFAEBE ^ v216;
  LODWORD(v218) = *(_DWORD *)(v10 + 9304);
  LODWORD(v216) = *(_DWORD *)(v10 + 9208);
  LODWORD(v199) = (v216 ^ 0x2D598D67) + (v218 ^ 0xD2A67298);
  *(_DWORD *)(v10 + 8512) = (v389 ^ 0xD2A67298) - (_DWORD)v105;
  *(_DWORD *)(v10 + 8640) = v218 ^ v322;
  LODWORD(v325) = *(_DWORD *)(v10 + 9036);
  *(_DWORD *)(v10 + 9704) = (v216 ^ 0xD2A67298)
                          + (v325 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v216 ^ 0xD2A67298) + (v325 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  v394 = *(_DWORD *)(v10 + 6952) ^ 0x9FCD448B ^ *(_DWORD *)(v10 + 8944);
  LODWORD(v216) = *(_DWORD *)(v10 + 8488);
  LODWORD(v198) = *(_DWORD *)(v10 + 9320) ^ v216;
  LODWORD(v308) = v216 ^ 0x69C83C01 ^ *(_DWORD *)(v10 + 7272);
  LODWORD(v263) = *(_DWORD *)(v10 + 9152);
  *(_DWORD *)(v10 + 9120) = (v263 ^ 0xD2A67298)
                          + v198
                          - 1150398823
                          - ((2 * ((v263 ^ 0xD2A67298) + v198)) & 0x76DC9D32);
  LODWORD(v105) = *(_DWORD *)(v10 + 9224);
  LODWORD(v218) = *(_DWORD *)(v10 + 9496);
  *(_DWORD *)(v10 + 9736) = (v105 ^ 0xDD99AF6B)
                          + (_DWORD)v218
                          - 760843624
                          - ((2 * ((v105 ^ 0xDD99AF6B) + (_DWORD)v218)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9304) = (v325 ^ 0xD2A67298)
                          + v394
                          - 760843624
                          - ((2 * ((v325 ^ 0xD2A67298) + v394)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9160);
  *(_DWORD *)(v10 + 8532) = v216 ^ v218;
  LODWORD(v193) = *(_DWORD *)(v10 + 9456);
  *(_DWORD *)(v10 + 9496) = (v216 ^ 0xD2A67298)
                          + (v193 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v216 ^ 0xD2A67298) + (v193 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 8720);
  *(_DWORD *)(v10 + 9432) = (v391 ^ 0xD2A67298)
                          + (v218 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((v391 ^ 0xD2A67298) + (v218 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9688) ^ 0xD2A67298;
  LODWORD(v325) = *(_DWORD *)(v10 + 8664);
  *(_DWORD *)(v10 + 9208) = (_DWORD)v216
                          + (v325 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v216 + (v325 ^ 0xD2A67298))) & 0xA54CE530);
  v395 = *(_DWORD *)(v10 + 8728);
  *(_DWORD *)(v10 + 9016) = v198
                          + (v395 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * (v198 + (v395 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9392) = (v307 ^ 0xD2A67298)
                          + (v218 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v307 ^ 0xD2A67298) + (v218 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v262) = (_DWORD)v262 + 1;
  LODWORD(v218) = *(_DWORD *)(v10 + 8612);
  LODWORD(v198) = v308 + (v218 ^ 0xD2A67298);
  *(_DWORD *)(v10 + 9416) = v198 - (_DWORD)v262 - 760843624 - ((2 * (v198 - (_DWORD)v262)) & 0xA54CE530);
  LODWORD(v322) = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 9536) = v218 ^ v322;
  LODWORD(v218) = *(_DWORD *)(v10 + 9312);
  *(_DWORD *)(v10 + 9664) = v218 ^ v322;
  LODWORD(v322) = *(_DWORD *)(v10 + 9072);
  *(_DWORD *)(v10 + 8612) = v218 ^ v322;
  LODWORD(v351) = *(_DWORD *)(v10 + 9544);
  LODWORD(v307) = v394 - (_DWORD)v351;
  *(_DWORD *)(v10 + 8416) = (_DWORD)v351
                          + (v322 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v351 + (v322 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v353) = *(_DWORD *)(v10 + 8672);
  *(_DWORD *)(v10 + 8888) = v198 ^ v353 ^ 0xD2A67298;
  LODWORD(v198) = *(_DWORD *)(v10 + 9368) ^ 0xD2A67298;
  v396 = *(_DWORD *)(v10 + 8880);
  *(_DWORD *)(v10 + 9320) = (v396 ^ 0xD2A67298) + v198 - 760843624 - ((2 * ((v396 ^ 0xD2A67298) + v198)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9504);
  v397 = (v218 ^ 0xD2A67298)
       - (v199
        + 1)
       - 760843624
       - ((2 * ((v218 ^ 0xD2A67298) - (v199 + 1))) & 0xA54CE530);
  *(_DWORD *)(v10 + 8392) = v391 ^ v220;
  LODWORD(v322) = *(_DWORD *)(v10 + 9632);
  *(_DWORD *)(v10 + 9160) = ((2 * ((v322 ^ 0x2D598D67) + (_DWORD)v220 + 1)) & 0x5F2F757C)
                          + (((v322 ^ 0x2D598D67) + (_DWORD)v220 + 1) ^ 0xAF97BABE);
  *(_DWORD *)(v10 + 9632) = v322 ^ 0xD2A67298 ^ v396;
  LODWORD(v198) = v198 - (_DWORD)v353;
  LODWORD(v353) = *(_DWORD *)(v10 + 8504);
  LODWORD(v220) = v197;
  *(_DWORD *)(v10 + 9312) = v198 + v197 + ~((2 * v198) & 0xA54CE530);
  *(_DWORD *)(v10 + 9064) = (_DWORD)v216 - v324 - 760843624 - ((2 * ((_DWORD)v216 - v324)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9036) = (v199 + 1) ^ v325;
  LODWORD(v198) = *(_DWORD *)(v10 + 9052) ^ *(_DWORD *)(v10 + 9608);
  LODWORD(v322) = *(_DWORD *)(v10 + 9720) ^ 0xD2A67298;
  LODWORD(v216) = *(_DWORD *)(v10 + 9648) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9368) = v322 + (_DWORD)v216 - 760843624 - ((2 * (v322 + (_DWORD)v216)) & 0xA54CE530);
  LODWORD(v197) = *(_DWORD *)(v10 + 8520);
  v398 = *(_DWORD *)(v10 + 9080);
  *(_DWORD *)(v10 + 8840) = v197 ^ 0xD2A67298 ^ v398;
  LODWORD(v351) = *(_DWORD *)(v10 + 8628);
  *(_DWORD *)(v10 + 8056) = v351 ^ 0xD2A67298 ^ v398;
  *(_DWORD *)(v10 + 7248) = v218 ^ v352;
  v399 = v198 + (_DWORD)v262;
  LODWORD(v218) = *(_DWORD *)(v10 + 8912);
  *(_DWORD *)(v10 + 9504) = v352 ^ 0xBB6E4E99 ^ v218;
  *(_DWORD *)(v10 + 9448) = (v218 ^ 0x9637C3FE)
                          + v198
                          - 760843623
                          - ((2 * ((v218 ^ 0x9637C3FE) + v198 + 1)) & 0xA54CE530);
  LODWORD(v198) = v263 ^ v193;
  LODWORD(v286) = v308 + (v105 ^ 0x22665094) + 1;
  LODWORD(v105) = *(_DWORD *)(v10 + 8816);
  LODWORD(v262) = (_DWORD)v326;
  *(_DWORD *)(v10 + 9224) = (_DWORD)v105 - v286 - 760843624 - ((2 * ((_DWORD)v105 - v286)) & 0xA54CE530);
  LODWORD(v325) = *(_DWORD *)(v10 + 9728);
  *(_DWORD *)(v10 + 9080) = v325 ^ v324;
  LODWORD(v218) = *(_DWORD *)(v10 + 9240);
  *(_DWORD *)(v10 + 8984) = (v218 ^ 0xD2A67298)
                          + (v325 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((v218 ^ 0xD2A67298) + (v325 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v263) = v322 ^ v218;
  LODWORD(v322) = *(_DWORD *)(v10 + 8832);
  *(_DWORD *)(v10 + 8932) = (_DWORD)v263;
  v400 = *(_DWORD *)(v10 + 8776);
  LODWORD(v218) = *(_DWORD *)(v10 + 9008);
  *(_DWORD *)(v10 + 9608) = v197 ^ v218;
  LODWORD(v325) = *(_DWORD *)(v10 + 9104);
  *(_DWORD *)(v10 + 9728) = (v325 ^ 0x9FCD448B) - (_DWORD)v218;
  LODWORD(v323) = *(_DWORD *)(v10 + 8696);
  *(_DWORD *)(v10 + 9720) = v323 ^ 0xCAAB91E1 ^ v198;
  *(_DWORD *)(v10 + 9008) = v198 + v286 + (_DWORD)v220 + ~((2 * (v198 + v286)) & 0xA54CE530);
  LODWORD(v286) = *(_DWORD *)(v10 + 8828);
  LODWORD(v326) = *(_DWORD *)(v10 + 9592);
  LODWORD(v220) = *(_DWORD *)(v10 + 9096);
  *(_DWORD *)(v10 + 9544) = (v220 ^ 0xD2A67298)
                          - (v286 ^ v326)
                          - 760843624
                          - ((2 * ((v220 ^ 0xD2A67298) - (v286 ^ v326))) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 8680);
  *(_DWORD *)(v10 + 8880) = (v218 ^ 0x7D7E8DFB)
                          + (_DWORD)v216
                          - 760843624
                          - ((2 * ((v218 ^ 0x7D7E8DFB) + (_DWORD)v216)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 8496) + 1;
  *(_DWORD *)(v10 + 9240) = v220 ^ v216;
  LODWORD(v220) = *(_DWORD *)(v10 + 9384);
  *(_DWORD *)(v10 + 9456) = v216 ^ v220;
  *(_DWORD *)(v10 + 9096) = (v220 ^ 0xD2A67298)
                          + (v323 ^ 0x180DE379)
                          - 760843624
                          - ((2 * ((v220 ^ 0xD2A67298) + (v323 ^ 0x180DE379))) & 0xA54CE530);
  *(_DWORD *)(v10 + 9104) = v325 ^ 0x3015BBE8 ^ v218;
  *(_DWORD *)(v10 + 9648) = v105 ^ v351;
  LODWORD(v325) = *(_DWORD *)(v10 + 9272);
  *(_DWORD *)(v10 + 9592) = v286 ^ 0xAFD8FF63 ^ v325;
  LODWORD(v286) = *(_DWORD *)(v10 + 8900);
  LODWORD(v327) = *(_DWORD *)(v10 + 8576);
  *(_DWORD *)(v10 + 9152) = (v327 ^ 0x2D598D67)
                          + (v286 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v327 ^ 0x2D598D67) + (v286 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9264);
  *(_DWORD *)(v10 + 8912) = v218 ^ v326 ^ v325;
  LODWORD(v220) = *(_DWORD *)(v10 + 8512);
  *(_DWORD *)(v10 + 9272) = (v218 ^ 0xD2A67298)
                          - (_DWORD)v220
                          - 760843624
                          - ((2 * ((v218 ^ 0xD2A67298) - (_DWORD)v220)) & 0xA54CE530);
  LODWORD(v326) = *(_DWORD *)(v10 + 8688);
  *(_DWORD *)(v10 + 9688) = (v395 ^ 0xD2A67298)
                          - (_DWORD)v326
                          - 760843624
                          - ((2 * ((v395 ^ 0xD2A67298) - (_DWORD)v326)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 8904);
  LODWORD(v323) = *(_DWORD *)(v10 + 8572);
  *(_DWORD *)(v10 + 8944) = (v323 ^ 0xD2A67298)
                          + (v218 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((v323 ^ 0xD2A67298) + (v218 ^ 0xD2A67298))) & 0xA54CE530);
  *(_DWORD *)(v10 + 8828) = (_DWORD)v220
                          + (v218 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((_DWORD)v220 + (v218 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9012);
  LODWORD(v198) = *(_DWORD *)(v10 + 7992) ^ v216;
  LODWORD(v325) = *(_DWORD *)(v10 + 8548) ^ v216;
  LODWORD(v308) = *(_DWORD *)(v10 + 8608);
  *(_DWORD *)(v10 + 8424) = (v308 ^ 0x2D598D67)
                          + (_DWORD)v325
                          - 760843623
                          - ((2 * ((v308 ^ 0x2D598D67) + (_DWORD)v325 + 1)) & 0xA54CE530);
  LODWORD(v105) = *(_DWORD *)(v10 + 8712);
  LODWORD(v218) = *(_DWORD *)(v10 + 8848);
  *(_DWORD *)(v10 + 8904) = (v105 ^ 0xD2A67298)
                          - (_DWORD)v218
                          - 760843624
                          - ((2 * ((v105 ^ 0xD2A67298) - (_DWORD)v218)) & 0xA54CE530);
  *(_DWORD *)(v10 + 8064) = (_DWORD)v218 + v198 - 760843624 - ((2 * ((_DWORD)v218 + v198)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9176) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8848) = v216 ^ v323;
  *(_DWORD *)(v10 + 9264) = (_DWORD)v216
                          + (v286 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((_DWORD)v216 + (v286 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9584);
  *(_DWORD *)(v10 + 8816) = (v327 ^ 0xD2A67298)
                          + (v218 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v327 ^ 0xD2A67298) + (v218 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9384) = v218 ^ 0xD2A67298 ^ v395;
  LODWORD(v327) = *(_DWORD *)(v10 + 8860);
  LODWORD(v352) = *(_DWORD *)(v10 + 8616);
  *(_DWORD *)(v10 + 9012) = (v352 ^ 0x2D598D67)
                          + (v327 ^ 0xD2A67298)
                          - 760843623
                          - ((2 * ((v352 ^ 0x2D598D67) + (v327 ^ 0xD2A67298) + 1)) & 0xA54CE530);
  v401 = *(_DWORD *)(v10 + 9004);
  LODWORD(v323) = *(_DWORD *)(v10 + 9528);
  *(_DWORD *)(v10 + 8720) = (v401 ^ 0x2D598D67)
                          + v323
                          - 760843623
                          - ((2 * ((v401 ^ 0x2D598D67) + v323 + 1)) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 8532);
  LODWORD(v286) = *(_DWORD *)(v10 + 8748);
  *(_DWORD *)(v10 + 9052) = (v220 ^ 0xD2A67298)
                          + (v286 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v220 ^ 0xD2A67298) + (v286 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 8552) - ((2 * *(_DWORD *)(v10 + 8552) + 888090628) & 0xA54CE530);
  *(_DWORD *)(v10 + 9584) = v326 ^ v327;
  *(_DWORD *)(v10 + 9176) = (_DWORD)v325
                          + (v352 ^ 0xD2A67298)
                          - 760843624
                          - ((2 * ((_DWORD)v325 + (v352 ^ 0xD2A67298))) & 0xA54CE530);
  LODWORD(v352) = *(_DWORD *)(v10 + 8632);
  *(_DWORD *)(v10 + 8696) = (v352 ^ 0xD2A67298)
                          + v323
                          - 760843624
                          - ((2 * ((v352 ^ 0xD2A67298) + v323)) & 0xA54CE530);
  *(_DWORD *)(v10 + 9004) = (v401 ^ 0xD2A67298)
                          + (v105 ^ 0x2D598D67)
                          - 760843623
                          - ((2 * ((v401 ^ 0xD2A67298) + (v105 ^ 0x2D598D67) + 1)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9288) - ((2 * *(_DWORD *)(v10 + 9288) - 380633754) & 0xA54CE530);
  v402 = *(_DWORD *)(v10 + 8752);
  LODWORD(v105) = *(_DWORD *)(v10 + 8612);
  *(_DWORD *)(v10 + 8860) = (v402 ^ 0x2D598D67)
                          + (_DWORD)v105
                          - 760843623
                          - ((2 * ((v402 ^ 0x2D598D67) + (_DWORD)v105 + 1)) & 0xA54CE530);
  LODWORD(v263) = *(_DWORD *)(v10 + 8656);
  *(_DWORD *)(v10 + 9528) = v220 ^ v263;
  LODWORD(v324) = *(_DWORD *)(v10 + 9328);
  LODWORD(v327) = *(_DWORD *)(v10 + 9616);
  LODWORD(v326) = *(_DWORD *)(v10 + 9640);
  *(_DWORD *)(v10 + 8132) = v198 + (_DWORD)v263 - 1111511362 - ((2 * (v198 + (_DWORD)v263)) & 0x7B7F5D7C);
  LODWORD(v198) = *(_DWORD *)(v10 + 9560) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9288) = v198 ^ v352;
  *(_DWORD *)(v10 + 8900) = v198 ^ v308;
  LODWORD(v198) = (*(_DWORD *)(v10 + 9192) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 9192) ^ 0xD2A67298) + 1679055306) & 0xA54CE530);
  LODWORD(v325) = *(_DWORD *)(v10 + 8968) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 8968) = (_DWORD)v105 + (_DWORD)v325 - 760843624 - ((2 * ((_DWORD)v105 + (_DWORD)v325)) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 8640);
  *(_DWORD *)(v10 + 9072) = v220 ^ v286;
  LODWORD(v105) = *(_DWORD *)(v10 + 8704);
  *(_DWORD *)(v10 + 8520) = v220 ^ v105;
  *(_DWORD *)(v10 + 9192) = (v105 ^ 0xD2A67298)
                          + (_DWORD)v325
                          - 760843624
                          - ((2 * ((v105 ^ 0xD2A67298) + (_DWORD)v325)) & 0xA54CE530);
  LODWORD(v325) = (v402 ^ 0xD2A67298) - ((2 * (v402 ^ 0xD2A67298) + 1238258806) & 0xA54CE530);
  LODWORD(v263) = *(_DWORD *)(v10 + 8648) - ((2 * *(_DWORD *)(v10 + 8648) - 1431124052) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 9160) - ((2 * *(_DWORD *)(v10 + 9160) + 1884754012) & 0xA54CE530);
  v403 = ((*(_DWORD *)(v10 + 9400) - 1536233329) ^ 0xBB6E4E99) + 385834506;
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8964) - 1822101823;
  LODWORD(v105) = (_DWORD)v218 + 1830685338;
  LODWORD(v351) = (_DWORD)v216 + 1196323147;
  LODWORD(v308) = v198 - 2068799619;
  v403 ^= 0x2C4D5AC8u;
  LODWORD(v198) = (_DWORD)v325 - 141714221;
  LODWORD(v325) = *(_DWORD *)(v10 + 8800);
  LODWORD(v220) = (_DWORD)v220 - 1965950266;
  *(_DWORD *)(v10 + 7224) = *(_DWORD *)(v10 + 7256) ^ 0x1064B05A ^ v220;
  *(_DWORD *)(v10 + 8432) = *(_DWORD *)(v10 + 8792);
  *(_DWORD *)(v10 + 7272) = *(_DWORD *)(v10 + 9120);
  *(_DWORD *)(v10 + 9400) = *(_DWORD *)(v10 + 9136);
  *(_DWORD *)(v10 + 8136) = *(_DWORD *)(v10 + 9376);
  *(_DWORD *)(v10 + 8964) = *(_DWORD *)(v10 + 9200);
  *(_DWORD *)(v10 + 7160) = (_DWORD)v220;
  *(_DWORD *)(v10 + 6880) = v220 ^ 0x2D598D67;
  *(_DWORD *)(v10 + 8832) = 0;
  LODWORD(v218) = *(_DWORD *)(v10 + 9552) - 2041;
  *(_DWORD *)(v10 + 9160) = (_DWORD)v218;
  LODWORD(v216) = v218 ^ 0xD2A671F6 ^ ((_DWORD)v263 - 1476405650);
  LODWORD(v193) = *(_DWORD *)(v10 + 8864);
  *(_DWORD *)(v10 + 8800) = (v325 ^ 0xD2A67298) + (v193 ^ 0x2D598D67);
  *(_DWORD *)(v10 + 8608) = ((v198 ^ 0xD2A67298) - ((2 * (v198 ^ 0xD2A67298) - 1238258806) & 0xA54CE530) - 1379973027) ^ v400;
  *(_DWORD *)(v10 + 8628) = (v400 ^ 0xD2A67298) + (v325 ^ 0xD2A67298);
  LODWORD(v198) = *(_DWORD *)(v10 + 8536);
  *(_DWORD *)(v10 + 8616) = (v198 ^ 0xD2A67298) - (_DWORD)v216;
  *(_DWORD *)(v10 + 8664) = (_DWORD)v216 + (v327 ^ 0x2D598D67);
  LODWORD(v218) = (v105 ^ 0xD2A67298) + 1703438334;
  *(_DWORD *)(v10 + 9640) = (v326 ^ 0xD2A67298) - (_DWORD)v218;
  *(_DWORD *)(v10 + 8688) = (v262 ^ 0x2D598D67) + (_DWORD)v218;
  LODWORD(v216) = (v308 ^ 0xD2A67298) - ((2 * (v308 ^ 0xD2A67298) - 1679055306) & 0xA54CE530) + 547112371;
  *(_DWORD *)(v10 + 9200) = v327 ^ v216;
  *(_DWORD *)(v10 + 9560) = v322 ^ v216;
  LODWORD(v105) = *(_DWORD *)(v10 + 9576);
  LODWORD(v325) = v105 ^ 0xD2A67298 ^ v322;
  LODWORD(v218) = (v351 ^ 0xD2A67298) - 1957166771;
  LODWORD(v216) = (v351 ^ 0xD2A67298) - ((2 * (_DWORD)v218) & 0xA54CE530);
  LODWORD(v323) = *(_DWORD *)(v10 + 8080);
  *(_DWORD *)(v10 + 8648) = (v198 ^ 0x2D598D67) + (v323 ^ 0xD2A67298);
  LODWORD(v308) = *(_DWORD *)(v10 + 8744);
  *(_DWORD *)(v10 + 8752) = (v262 ^ 0xD2A67298) + (v308 ^ 0x2D598D67);
  *(_DWORD *)(v10 + 8792) = (v326 ^ 0x2D598D67) + (_DWORD)v105;
  LODWORD(v198) = *(_DWORD *)(v10 + 9172);
  LODWORD(v322) = (_DWORD)v218 + (v198 ^ 0xD2A67298);
  LODWORD(v326) = *(_DWORD *)(v10 + 9016);
  v404 = *(_DWORD *)(v10 + 8952);
  *(_DWORD *)(v10 + 8748) = (v326 ^ 0xD2A67298) + (v404 ^ 0x2D598D67);
  LODWORD(v218) = v198 ^ 0x2D598D67;
  LODWORD(v198) = *(_DWORD *)(v10 + 8008);
  *(_DWORD *)(v10 + 8776) = (_DWORD)v218 + (v198 ^ 0xD2A67298);
  LODWORD(v220) = *(_DWORD *)(v10 + 9400);
  LODWORD(v218) = v220 ^ v308;
  *(_DWORD *)(v10 + 8680) = (v198 ^ 0x2D598D67) + (v220 ^ 0xD2A67298);
  LODWORD(v220) = *(_DWORD *)(v10 + 9408);
  LODWORD(v198) = v220 ^ v193;
  LODWORD(v308) = *(_DWORD *)(v10 + 9680);
  *(_DWORD *)(v10 + 9576) = v220 ^ v308;
  LODWORD(v105) = *(_DWORD *)(v10 + 8116);
  *(_DWORD *)(v10 + 9400) = v105 ^ v308;
  LODWORD(v220) = *(_DWORD *)(v10 + 9440);
  *(_DWORD *)(v10 + 8744) = v220 ^ v323;
  *(_DWORD *)(v10 + 9376) = v105 ^ v220;
  *(_DWORD *)(v10 + 9136) = ((_DWORD)v216 + 1576956901) ^ v403;
  LODWORD(v220) = *(_DWORD *)(v10 + 8868);
  *(_DWORD *)(v10 + 8532) = v326 ^ v220;
  LODWORD(v105) = *(_DWORD *)(v10 + 9472);
  *(_DWORD *)(v10 + 9172) = v105 ^ v220;
  *(_DWORD *)(v10 + 8552) = (v105 ^ 0xD2A67298) + (v403 ^ 0x2C4D5AC8);
  LODWORD(v216) = (*(_DWORD *)(v10 + 9148) ^ 0xD2A67298) + (v324 ^ 0xD2A67298);
  LODWORD(v199) = *(_DWORD *)(v10 + 9024);
  v405 = *(_DWORD *)(v10 + 8872);
  *(_DWORD *)(v10 + 8548) = (v199 ^ 0xD2A67298) + (v405 ^ 0x2D598D67);
  LODWORD(v351) = *(_DWORD *)(v10 + 9128);
  LODWORD(v323) = (v351 ^ 0xD2A67298) + (v405 ^ 0xD2A67298);
  v406 = *(_DWORD *)(v10 + 8432);
  LODWORD(v262) = *(_DWORD *)(v10 + 8416);
  *(_DWORD *)(v10 + 9440) = (v406 ^ 0xD2A67298) + (v262 ^ 0x2D598D67);
  LODWORD(v220) = *(_DWORD *)(v10 + 8980) ^ 0xD2A67298;
  LODWORD(v326) = *(_DWORD *)(v10 + 9280) ^ 0xD2A67298;
  LODWORD(v105) = *(_DWORD *)(v10 + 9156);
  LODWORD(v327) = (_DWORD)v326 + (v105 ^ 0xD2A67298);
  *(_DWORD *)(v10 + 8480) = (_DWORD)v220 + (_DWORD)v326;
  *(_DWORD *)(v10 + 8536) = (v353 ^ 0xD2A67298) + (_DWORD)v220;
  LODWORD(v326) = *(_DWORD *)(v10 + 7272);
  *(_DWORD *)(v10 + 9408) = (v353 ^ 0xD2A67298) + (v326 ^ 0xBB6E4E99);
  *(_DWORD *)(v10 + 8504) = (v105 ^ 0x2D598D67) + v307;
  LODWORD(v263) = *(_DWORD *)(v10 + 8000);
  *(_DWORD *)(v10 + 8472) = (v263 ^ 0xD2A67298) - v307;
  LODWORD(v220) = *(_DWORD *)(v10 + 9040);
  *(_DWORD *)(v10 + 9680) = v220 ^ v263;
  *(_DWORD *)(v10 + 9128) = v351 ^ v220;
  LODWORD(v263) = *(_DWORD *)(v10 + 8544);
  LODWORD(v193) = *(_DWORD *)(v10 + 9736);
  v407 = (v193 ^ 0xD2A67298) + (v263 ^ 0xD2A67298);
  v408 = *(_DWORD *)(v10 + 9496);
  LODWORD(v105) = v408 ^ v406;
  LODWORD(v286) = *(_DWORD *)(v10 + 8764);
  *(_DWORD *)(v10 + 8572) = v326 ^ 0x69C83C01 ^ v286;
  LODWORD(v220) = *(_DWORD *)(v10 + 8768);
  LODWORD(v326) = v286 ^ v220;
  *(_DWORD *)(v10 + 8496) = (v408 ^ 0xD2A67298) + (v220 ^ 0xD2A67298);
  v409 = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 8512) = v262 ^ v409;
  LODWORD(v220) = *(_DWORD *)(v10 + 9704);
  LODWORD(v286) = v220 ^ v409;
  LODWORD(v353) = v220 ^ v263;
  *(_DWORD *)(v10 + 9040) = (*(_DWORD *)(v10 + 8424) ^ 0xD2A67298)
                          - 2
                          * (((*(_DWORD *)(v10 + 8424) ^ 0xD2A67298) + 38456924) & 0x52A6729A ^ *(_DWORD *)(v10 + 8424) & 2);
  LODWORD(v263) = *(_DWORD *)(v10 + 8736);
  *(_DWORD *)(v10 + 9280) = v263 ^ v324;
  LODWORD(v308) = *(_DWORD *)(v10 + 9296) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9616) = (v263 ^ 0xD2A67298)
                          + v308
                          - ((2 * ((v263 ^ 0xD2A67298) + v308) + 142173722) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 9248);
  v410 = v404 ^ v220;
  *(_DWORD *)(v10 + 9156) = (v220 ^ *(_DWORD *)(v10 + 9304))
                          - ((2 * (v220 ^ *(_DWORD *)(v10 + 9304)) - 1703556556) & 0xD3907802);
  LODWORD(v220) = *(_DWORD *)(v10 + 9116);
  LODWORD(v324) = v220 ^ v193;
  LODWORD(v262) = *(_DWORD *)(v10 + 8712);
  LODWORD(v263) = *(_DWORD *)(v10 + 8020);
  *(_DWORD *)(v10 + 9736) = v263 ^ v262;
  LODWORD(v197) = *(_DWORD *)(v10 + 8964) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9472) = v197
                          + (*(_DWORD *)(v10 + 8920) ^ 0xD2A67298)
                          - 760843624
                          - ((2 * (v197 + (*(_DWORD *)(v10 + 8920) ^ 0xD2A67298))) & 0xA54CE530);
  *(_DWORD *)(v10 + 9116) = v410 - ((2 * v410 + 852718526) & 0xA54CE530);
  *(_DWORD *)(v10 + 9296) = (*(_DWORD *)(v10 + 8816) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 8816) ^ 0xD2A67298) - 967435988) & 0xA54CE530);
  *(_DWORD *)(v10 + 9248) = (*(_DWORD *)(v10 + 9608) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9608) ^ 0xD2A67298) + 499163394) & 0xA54CE530);
  *(_DWORD *)(v10 + 9120) = (_DWORD)v327 - ((2 * (_DWORD)v327 + 550605668) & 0xA54CE530);
  *(_DWORD *)(v10 + 9328) = (*(_DWORD *)(v10 + 9104) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9104) ^ 0xD2A67298) + 606360194) & 0xA54CE530);
  *(_DWORD *)(v10 + 8868) = v407 - ((2 * v407 - 483235470) & 0xA54CE530);
  *(_DWORD *)(v10 + 8980) = v399 - ((2 * v399 + 863636752) & 0xA5CFCFCA);
  *(_DWORD *)(v10 + 8864) = (_DWORD)v325 - ((2 * (_DWORD)v325 + 1929481358) & 0x76DC9D32);
  *(_DWORD *)(v10 + 8816) = (_DWORD)v218 - 2 * (((_DWORD)v218 + 598499510) & 0x52A67299 ^ v218 & 1);
  *(_DWORD *)(v10 + 8964) = (_DWORD)v216 - 2 * (((_DWORD)v216 + 549370294) & 0x52A67299 ^ v216 & 1);
  *(_DWORD *)(v10 + 9016) = (*(_DWORD *)(v10 + 9264) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9264) ^ 0xD2A67298) + 292824370) & 0xA54CE530);
  *(_DWORD *)(v10 + 9104) = *(_DWORD *)(v10 + 9728) - ((2 * *(_DWORD *)(v10 + 9728) + 1793867164) & 0xA54CE530);
  *(_DWORD *)(v10 + 8764) = v198 - ((2 * v198 - 1415843090) & 0xA54CE530);
  *(_DWORD *)(v10 + 8728) = (*(_DWORD *)(v10 + 9632) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9632) ^ 0xD2A67298) - 1170912774) & 0xA54CE530);
  *(_DWORD *)(v10 + 9632) = (*(_DWORD *)(v10 + 9504) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9504) ^ 0xD2A67298) + 663836216) & 0xA54CE530);
  *(_DWORD *)(v10 + 9504) = (*(_DWORD *)(v10 + 9080) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9080) ^ 0xD2A67298) + 1982853576) & 0xA54CE530);
  *(_DWORD *)(v10 + 8736) = (*(_DWORD *)(v10 + 9448) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9448) ^ 0xD2A67298) + 262783826) & 0xA54CE530);
  *(_DWORD *)(v10 + 8952) = v322 - ((2 * v322 - 1397963474) & 0xA54CE530);
  *(_DWORD *)(v10 + 8704) = (*(_DWORD *)(v10 + 8720) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 8720) ^ 0xD2A67298) - 695346726) & 0xA54CE530);
  *(_DWORD *)(v10 + 8712) = *(_DWORD *)(v10 + 8688) + 1 - ((2 * (*(_DWORD *)(v10 + 8688) + 1) - 299045418) & 0xA54CE530);
  *(_DWORD *)(v10 + 9704) = (*(_DWORD *)(v10 + 7248) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 7248) ^ 0xD2A67298) - 726678798) & 0xA54CE530);
  *(_DWORD *)(v10 + 8720) = (*(_DWORD *)(v10 + 8696) ^ 0xD2A67298)
                          + 1769962991
                          - ((2 * (*(_DWORD *)(v10 + 8696) ^ 0xD2A67298) + 766651716) & 0xA54CE530);
  *(_DWORD *)(v10 + 8872) = (*(_DWORD *)(v10 + 9592) ^ 0xAFD8FF63)
                          - ((2 * (*(_DWORD *)(v10 + 9592) ^ 0xAFD8FF63) - 1700558778) & 0xA54CE530);
  *(_DWORD *)(v10 + 9728) = *(_DWORD *)(v10 + 8800)
                          + 1812231438
                          + ~(2
                            * ((*(_DWORD *)(v10 + 8800) + 425591413) & 0x52A67299 ^ (*(_DWORD *)(v10 + 8800) + 1) & 1));
  *(_DWORD *)(v10 + 8688) = *(_DWORD *)(v10 + 8680) + 1 - ((2 * (*(_DWORD *)(v10 + 8680) + 1) + 713729190) & 0xA54CE530);
  *(_DWORD *)(v10 + 8696) = (v397 ^ 0xD2A67298) - ((2 * (v397 ^ 0xD2A67298) - 2072145474) & 0xA54CE530);
  *(_DWORD *)(v10 + 8680) = *(_DWORD *)(v10 + 8744) - ((2 * *(_DWORD *)(v10 + 8744) + 1868557018) & 0xA54CE530);
  *(_DWORD *)(v10 + 8672) = v197
                          + (v263 ^ 0xD2A67298)
                          - ((2 * (v197 + (v263 ^ 0xD2A67298)) + 540730294) & 0xA54CE530);
  *(_DWORD *)(v10 + 8800) = v323 - ((2 * v323 - 62562168) & 0xA54CE530);
  *(_DWORD *)(v10 + 8656) = *(_DWORD *)(v10 + 8664)
                          + 715562027
                          - 2
                          * ((*(_DWORD *)(v10 + 8664) - 1733950667) & 0x52A67299 ^ (*(_DWORD *)(v10 + 8664) + 715562027) & 1);
  *(_DWORD *)(v10 + 8640) = (v262 ^ v220)
                          - ((2 * (v262 ^ v220) + 677332284) & 0xA54CE530);
  *(_DWORD *)(v10 + 8664) = *(_DWORD *)(v10 + 8648)
                          + 1
                          - ((2 * (*(_DWORD *)(v10 + 8648) + 1) - 1197961302) & 0xA54CE530);
  *(_DWORD *)(v10 + 8632) = (*(_DWORD *)(v10 + 8860) ^ 0xD2A67298)
                          - 2
                          * (((*(_DWORD *)(v10 + 8860) ^ 0xD2A67298) + 1486007872) & 0x52A672B8 ^ *(_DWORD *)(v10 + 8860) & 0x20);
  *(_DWORD *)(v10 + 8612) = (*(_DWORD *)(v10 + 9152) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9152) ^ 0xD2A67298) + 34417900) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 9464);
  LODWORD(v327) = v220 ^ v199;
  LODWORD(v216) = *(_DWORD *)(v10 + 9424) ^ 0xD2A67298;
  LODWORD(v218) = *(_DWORD *)(v10 + 9056) ^ 0xD2A67298;
  *(_DWORD *)(v10 + 9664) = (v220 ^ 0xD2A67298) + (_DWORD)v216;
  *(_DWORD *)(v10 + 8648) = (_DWORD)v216 + (_DWORD)v218 - ((2 * ((_DWORD)v216 + (_DWORD)v218) - 24212728) & 0xA54CE530);
  *(_DWORD *)(v10 + 8768) = (*(_DWORD *)(v10 + 9720) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9720) ^ 0xD2A67298) + 552375454) & 0xA54CE530);
  *(_DWORD *)(v10 + 9024) = (*(_DWORD *)(v10 + 9012) ^ 0xD2A67298)
                          - 2
                          * (((*(_DWORD *)(v10 + 9012) ^ 0xD2A67298) + 1392033488) & 0x52A6729A ^ *(_DWORD *)(v10 + 9012) & 2);
  *(_DWORD *)(v10 + 8848) = (*(_DWORD *)(v10 + 8848) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 8848) ^ 0xD2A67298) - 1966228156) & 0xA54CE530);
  *(_DWORD *)(v10 + 9592) = (_DWORD)v105 - 2 * (((_DWORD)v105 + 792828824) & 0x52A6729A ^ v105 & 2);
  *(_DWORD *)(v10 + 8860) = (*(_DWORD *)(v10 + 9072) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9072) ^ 0xD2A67298) - 55489208) & 0xA54CE530);
  *(_DWORD *)(v10 + 8576) = *(_DWORD *)(v10 + 8608) - ((2 * *(_DWORD *)(v10 + 8608) - 156200602) & 0xA54CE530);
  *(_DWORD *)(v10 + 8744) = (*(_DWORD *)(v10 + 8888) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 8888) ^ 0xD2A67298) + 1280669156) & 0xA54CE530);
  *(_DWORD *)(v10 + 8888) = v286 + 2057658096 - ((2 * v286 + 1342043146) & 0xA54CE530);
  *(_DWORD *)(v10 + 8608) = *(_DWORD *)(v10 + 8504) + 1 - ((2 * (*(_DWORD *)(v10 + 8504) + 1) - 743396474) & 0xA54CE530);
  *(_DWORD *)(v10 + 8904) = (*(_DWORD *)(v10 + 8904) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 8904) ^ 0xD2A67298) + 1993861818) & 0xA54CE530);
  *(_DWORD *)(v10 + 9056) = (_DWORD)v326 - ((2 * (_DWORD)v326 + 855858762) & 0xA54CE530);
  *(_DWORD *)(v10 + 8504) = (*(_DWORD *)(v10 + 9208) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9208) ^ 0xD2A67298) + 1294427042) & 0xA54CE530);
  *(_DWORD *)(v10 + 9012) = (*(_DWORD *)(v10 + 9052) ^ 0xD2A67298)
                          - 2
                          * (((*(_DWORD *)(v10 + 9052) ^ 0xD2A67298) + 64315488) & 0x52A6729C ^ *(_DWORD *)(v10 + 9052) & 4);
  *(_DWORD *)(v10 + 9528) = (*(_DWORD *)(v10 + 9528) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9528) ^ 0xD2A67298) + 147464108) & 0xA54CE530);
  *(_DWORD *)(v10 + 9496) = *(_DWORD *)(v10 + 8616)
                          + 1700164701
                          - ((2 * (*(_DWORD *)(v10 + 8616) - 715562026) + 2058173406) & 0xA54CE530);
  LODWORD(v199) = (*(_DWORD *)(v10 + 8944) ^ 0xD2A67298)
                - 2 * (((*(_DWORD *)(v10 + 8944) ^ 0xD2A67298) + 851019904) & 0x52A6729A ^ *(_DWORD *)(v10 + 8944) & 2);
  v411 = *(_DWORD *)(v10 + 8496) + 644458669 + ~((2 * *(_DWORD *)(v10 + 8496) - 1484362712) & 0xA54CE530);
  *(_DWORD *)(v10 + 9608) = v411;
  LODWORD(v262) = (_DWORD)v353 - ((2 * (_DWORD)v353 + 205880350) & 0xA54CE530);
  *(_DWORD *)(v10 + 8944) = *(_DWORD *)(v10 + 8512) - ((2 * *(_DWORD *)(v10 + 8512) + 304328786) & 0xA54CE530);
  *(_DWORD *)(v10 + 9052) = (*(_DWORD *)(v10 + 8056) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 8056) ^ 0xD2A67298) + 123846352) & 0x5FB1FEC6);
  *(_DWORD *)(v10 + 9096) = (*(_DWORD *)(v10 + 9096) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 9096) ^ 0xD2A67298) - 1110012200) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 9536) ^ 0xD2A67298;
  v412 = (_DWORD)v218 + 1964025535 + (_DWORD)v220;
  *(_DWORD *)(v10 + 8616) = v412;
  *(_DWORD *)(v10 + 8572) -= (2 * *(_DWORD *)(v10 + 8572) + 1881692264) & 0xA54CE530;
  LODWORD(v323) = (*(_DWORD *)(v10 + 9224) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 9224) ^ 0xD2A67298) - 1916213572) & 0xA54CE530);
  *(_DWORD *)(v10 + 8532) -= (2 * *(_DWORD *)(v10 + 8532) + 1064628664) & 0xA54CE530;
  *(_DWORD *)(v10 + 8552) -= 2 * ((*(_DWORD *)(v10 + 8552) + 850860884) & 0x52A67299 ^ *(_DWORD *)(v10 + 8552) & 1);
  *(_DWORD *)(v10 + 9536) = (_DWORD)v220
                          + v308
                          - 2 * (((_DWORD)v220 + v308 + 427417780) & 0x52A6729B ^ ((_DWORD)v220 + v308) & 3);
  *(_DWORD *)(v10 + 8512) = (*(_DWORD *)(v10 + 8828) ^ 0xD2A67298)
                          - ((2 * (*(_DWORD *)(v10 + 8828) ^ 0xD2A67298) - 927765654) & 0xA54CE530);
  LODWORD(v353) = *(_DWORD *)(v10 + 9128) - ((2 * *(_DWORD *)(v10 + 9128) - 3104276) & 0xA54CE530);
  LODWORD(v326) = (*(_DWORD *)(v10 + 8064) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 8064) ^ 0xD2A67298) - 1646913062) & 0xA54CE530);
  *(_DWORD *)(v10 + 8496) = v324 - ((2 * v324 + 2061557894) & 0xA54CE530);
  v413 = (*(_DWORD *)(v10 + 9176) ^ 0xD2A67298)
       - ((2 * (*(_DWORD *)(v10 + 9176) ^ 0xD2A67298) + 666596504) & 0xA54CE530);
  v414 = (*(_DWORD *)(v10 + 9240) ^ 0xD2A67298)
       - ((2 * (*(_DWORD *)(v10 + 9240) ^ 0xD2A67298) - 754610058) & 0xA54CE530);
  LODWORD(v322) = *(_DWORD *)(v10 + 8536) - ((2 * *(_DWORD *)(v10 + 8536) - 822365508) & 0xA54CE530);
  LODWORD(v308) = (*(_DWORD *)(v10 + 9064) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 9064) ^ 0xD2A67298) - 1073899784) & 0xA54CE530);
  *(_DWORD *)(v10 + 8548) = *(_DWORD *)(v10 + 8548)
                          + 1
                          - ((2 * (*(_DWORD *)(v10 + 8548) + 1) - 1987998306) & 0xA54CE530);
  *(_DWORD *)(v10 + 9064) = (*(_DWORD *)(v10 + 8880) ^ 0xD2A67298)
                          - 2
                          * (((*(_DWORD *)(v10 + 8880) ^ 0xD2A67298) + 551135104) & 0x52A6729C ^ *(_DWORD *)(v10 + 8880) & 4);
  LODWORD(v193) = (*(_DWORD *)(v10 + 8968) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 8968) ^ 0xD2A67298) + 1282254242) & 0xA54CE530);
  LODWORD(v105) = (*(_DWORD *)(v10 + 9544) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 9544) ^ 0xD2A67298) + 236400088) & 0xA54CE530);
  LODWORD(v324) = *(_DWORD *)(v10 + 8628) - ((2 * *(_DWORD *)(v10 + 8628) + 693828358) & 0xA54CE530);
  LODWORD(v220) = (*(_DWORD *)(v10 + 9320) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 9320) ^ 0xD2A67298) - 221278786) & 0xA54CE530);
  LODWORD(v198) = (*(_DWORD *)(v10 + 9368) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 9368) ^ 0xD2A67298) - 565335594) & 0xA54CE530);
  v415 = (*(_DWORD *)(v10 + 9456) ^ 0xD2A67298)
       - ((2 * (*(_DWORD *)(v10 + 9456) ^ 0xD2A67298) - 1644393538) & 0xA54CE530);
  v416 = (*(_DWORD *)(v10 + 8900) ^ 0xD2A67298)
       - ((2 * (*(_DWORD *)(v10 + 8900) ^ 0xD2A67298) - 1459628642) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9408) - ((2 * *(_DWORD *)(v10 + 9408) - 766800970) & 0xA54CE530);
  LODWORD(v325) = *(_DWORD *)(v10 + 9560) - ((2 * *(_DWORD *)(v10 + 9560) + 1554881724) & 0xA54CE530);
  LODWORD(v351) = (*(_DWORD *)(v10 + 8912) ^ 0xD2A67298)
                - ((2 * (*(_DWORD *)(v10 + 8912) ^ 0xD2A67298) + 612673898) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9280) - ((2 * *(_DWORD *)(v10 + 9280) + 636608050) & 0xA54CE530);
  LODWORD(v197) = *(_DWORD *)(v10 + 8920);
  HIDWORD(v417) = v197 ^ 0x2A67298;
  LODWORD(v417) = v197 ^ 0xD0000000;
  LODWORD(v262) = (_DWORD)v262 - 657903449;
  *(_DWORD *)(v10 + 8464) = (_DWORD)v262;
  *(_DWORD *)(v10 + 9464) = v323 + 428533238;
  *(_DWORD *)(v10 + 9408) = (_DWORD)v105 - 642643580;
  LODWORD(v263) = ((v262 ^ (v323 + 428533238))
                 - 760843624
                 - ((2 * (v262 ^ (v323 + 428533238))) & 0xA54CE530)) ^ ((_DWORD)v105 - 642643580);
  *(_DWORD *)(v10 + 9280) = (_DWORD)v326 + 563183493;
  LODWORD(v263) = v412 ^ ((_DWORD)v326 + 563183493) ^ ((_DWORD)v263 - 760843624 - ((2 * (_DWORD)v263) & 0xA54CE530));
  *(_DWORD *)(v10 + 9448) = v413 + 1719938276;
  LODWORD(v263) = ((_DWORD)v263 - 760843624 - ((2 * (_DWORD)v263) & 0xA54CE530)) ^ (v413 + 1719938276);
  *(_DWORD *)(v10 + 9424) = v322 + 975457270;
  LODWORD(v263) = ((_DWORD)v263 - 760843624 - ((2 * (_DWORD)v263) & 0xA54CE530)) ^ (v322 + 975457270);
  *(_DWORD *)(v10 + 9152) = v199 + 90176280;
  LODWORD(v263) = ((_DWORD)v263 - 760843624 - ((2 * (_DWORD)v263) & 0xA54CE530)) ^ (v199 + 90176280);
  *(_DWORD *)(v10 + 9456) = v308 - 1297793516;
  LODWORD(v263) = ((_DWORD)v263 - 760843624 - ((2 * (_DWORD)v263) & 0xA54CE530)) ^ (v308 - 1297793516);
  v418 = *(_DWORD *)(v10 + 9440) + 1;
  *(_DWORD *)(v10 + 9264) = v418;
  *(_DWORD *)(v10 + 9440) = (_DWORD)v353 + 1385087886;
  LODWORD(v263) = ((_DWORD)v353 + 1385087886) ^ v418 ^ ((_DWORD)v263 - 760843624 - ((2 * (_DWORD)v263) & 0xA54CE530));
  *(_DWORD *)(v10 + 9224) = v414 + 1009334995;
  LODWORD(v263) = ((_DWORD)v263 - 760843624 - ((2 * (_DWORD)v263) & 0xA54CE530)) ^ (v414 + 1009334995);
  *(_DWORD *)(v10 + 9720) = (_DWORD)v220 - 871483017;
  LODWORD(v220) = ((_DWORD)v220 - 871483017) ^ *(_DWORD *)(v10 + 9172) ^ ((_DWORD)v263
                                                                        - 760843624
                                                                        - ((2 * (_DWORD)v263) & 0xA54CE530));
  LODWORD(v216) = (_DWORD)v216 - 442539599;
  *(_DWORD *)(v10 + 9176) = (_DWORD)v216;
  LODWORD(v216) = ((_DWORD)v220 - 760843624 - ((2 * (_DWORD)v220) & 0xA54CE530)) ^ v216;
  *(_DWORD *)(v10 + 9560) = v198 - 1043511421;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ (v198 - 1043511421);
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8136);
  LODWORD(v326) = (_DWORD)v218 + 1003239539;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ ((_DWORD)v218 + 1003239539);
  *(_DWORD *)(v10 + 8628) = v415 + 564443255;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ (v415 + 564443255);
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9472);
  *(_DWORD *)(v10 + 9128) = (_DWORD)v325 + 16597238;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ ((_DWORD)v325 + 16597238);
  LODWORD(v216) = *(_DWORD *)(v10 + 9200) ^ 0x99EDF3DF ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v216) = *(_DWORD *)(v10 + 9584) ^ 0xCDF4EA37 ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v218) = (_DWORD)v327 - ((2 * (_DWORD)v327 + 1545585848) & 0xA54CE530) - 2135534348;
  *(_DWORD *)(v10 + 9240) = (_DWORD)v218;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v218;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9688);
  *(_DWORD *)(v10 + 9208) = v416 - 1490657945;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ (v416 - 1490657945);
  *(_DWORD *)(v10 + 8828) = (_DWORD)v193 + 2027767145;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ ((_DWORD)v193 + 2027767145);
  *(_DWORD *)(v10 + 9072) = v324 + 1733554203;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ (v324 + 1733554203);
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9192);
  *(_DWORD *)(v10 + 9080) = (_DWORD)v351 - 454506675;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ ((_DWORD)v351 - 454506675);
  LODWORD(v417) = __ROR4__((v417 >> 28) ^ 0x9E3B4804, 4);
  *(_DWORD *)(v10 + 8920) = v417 ^ 0x2C905EDA;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v417 ^ 0x2C905EDA;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v411;
  LODWORD(v216) = *(_DWORD *)(v10 + 9576) ^ 0xD2A67298 ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9008);
  LODWORD(v218) = *(_DWORD *)(v10 + 9064) + 1937775128;
  *(_DWORD *)(v10 + 8544) = (_DWORD)v218;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v218;
  LODWORD(v218) = *(_DWORD *)(v10 + 8496) - 1877548325;
  *(_DWORD *)(v10 + 8912) = (_DWORD)v218;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v218;
  LODWORD(v218) = *(_DWORD *)(v10 + 9640) ^ 0x9641F4B7;
  *(_DWORD *)(v10 + 8376) = (_DWORD)v218;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v218;
  LODWORD(v218) = *(_DWORD *)(v10 + 8532) - 228529292;
  *(_DWORD *)(v10 + 9064) = (_DWORD)v218;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v218;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9416);
  LODWORD(v218) = *(_DWORD *)(v10 + 9052) - 1282810165;
  *(_DWORD *)(v10 + 9052) = (_DWORD)v218;
  LODWORD(v216) = ((_DWORD)v216 - 1344733341 - ((2 * (_DWORD)v216) & 0x5FB1FEC6)) ^ v218;
  LODWORD(v220) = (*(_DWORD *)(v10 + 9312) ^ 0xD2A67298) + 242254878;
  *(_DWORD *)(v10 + 8532) = (_DWORD)v220;
  LODWORD(v216) = v220 ^ *(_DWORD *)(v10 + 7160) ^ ((_DWORD)v216
                                                                - 760843624
                                                                - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v308) = *(_DWORD *)(v10 + 7240);
  LODWORD(v216) = (_DWORD)v216 + v308 + ~((2 * (_DWORD)v216) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9536) + 1814057804;
  *(_DWORD *)(v10 + 8968) = (_DWORD)v218;
  LODWORD(v216) = (v216 ^ v218)
                - 760843624
                - ((2 * (v216 ^ v218)) & 0xA54CE530);
  LODWORD(v218) = *(_DWORD *)(v10 + 9096) + 831633924;
  LODWORD(v198) = *(_DWORD *)(v10 + 8504) + 2033853545;
  *(_DWORD *)(v10 + 8900) = v198;
  LODWORD(v216) = *(_DWORD *)(v10 + 9736) ^ v198 ^ ((v216 ^ v218)
                                                  - 760843624
                                                  - ((2 * (v216 ^ v218)) & 0xA54CE530));
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9648);
  LODWORD(v216) = *(_DWORD *)(v10 + 9432) ^ 0xD27B0F16 ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v198) = (_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9056) - 332914243;
  *(_DWORD *)(v10 + 8400) = (_DWORD)v216;
  LODWORD(v198) = (v198 ^ v216) - 760843624 - ((2 * (v198 ^ v216)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9012) + 1450955512;
  *(_DWORD *)(v10 + 9056) = (_DWORD)v216;
  LODWORD(v198) = (v198 ^ v216) - 760843624 - ((2 * (v198 ^ v216)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9024) + 631189864;
  *(_DWORD *)(v10 + 9368) = (_DWORD)v216;
  LODWORD(v325) = v198 ^ v216;
  LODWORD(v198) = v198 ^ v216 ^ 0x57723A9E;
  LODWORD(v220) = *(_DWORD *)(v10 + 9148) ^ *(_DWORD *)(v10 + 9304) ^ ((v325 & 0xE6D6D554 ^ 0xA084C540)
                                                                     + (v198 & 0xE6D6D554));
  LODWORD(v323) = *(_DWORD *)(v10 + 9704) - 1124183023;
  LODWORD(v325) = *(_DWORD *)(v10 + 6880) + (v323 ^ 0xD2A67298);
  *(_DWORD *)(v10 + 9704) = (_DWORD)v326;
  *(_DWORD *)(v10 + 8432) = (_DWORD)v218;
  v419 = v218 ^ 0x2D598D67;
  LODWORD(v218) = *(_DWORD *)(v10 + 9036);
  v420 = (v326 ^ 0x2D598D67)
       + (_DWORD)v325
       - ((2 * ((v326 ^ 0x2D598D67) + (_DWORD)v325) + 1374401284) & 0xA54CE530)
       - 73642982;
  LODWORD(v325) = *(_DWORD *)(v10 + 9392) ^ 0x4A7E1E79;
  v421 = (v218 ^ 0xEF2DEE77) + v419 + (v420 ^ v325) + 2;
  *(_DWORD *)(v10 + 9312) = v421 - 760843624 - ((2 * v421) & 0xA54CE530);
  LODWORD(v105) = *(_DWORD *)(v10 + 9616) + 1457726885;
  *(_DWORD *)(v10 + 9536) = (_DWORD)v105;
  LODWORD(v216) = *(_DWORD *)(v10 + 9400) ^ 0x69C7D31B;
  *(_DWORD *)(v10 + 8384) = (_DWORD)v216;
  v422 = (v216 ^ v105)
       - 760843624
       - ((2 * (v216 ^ v105)) & 0xA54CE530);
  LODWORD(v216) = *(_DWORD *)(v10 + 9120) + 1661942858;
  *(_DWORD *)(v10 + 9304) = (_DWORD)v216;
  LODWORD(v105) = *(_DWORD *)(v10 + 8964) - 211473330;
  *(_DWORD *)(v10 + 9616) = (_DWORD)v105;
  v423 = ((v422 ^ v216) - 760843624 - ((2 * (v422 ^ v216)) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9136) ^ v105;
  LODWORD(v263) = *(_DWORD *)(v10 + 9632) - 428925516;
  *(_DWORD *)(v10 + 9012) = (_DWORD)v263;
  v424 = v263 ^ *(_DWORD *)(v10 + 9680) ^ ((v423 ^ 0xFEEB2850)
                                                       - 760843624
                                                       - 2 * ((v423 ^ 0xFEEB2850) & 0x52A6729F ^ v423 & 7));
  LODWORD(v216) = *(_DWORD *)(v10 + 9016) + 1533052209;
  *(_DWORD *)(v10 + 9024) = (_DWORD)v216;
  v425 = (v424 - 760843624 - ((2 * v424) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 9328) - 457663527;
  *(_DWORD *)(v10 + 9016) = (_DWORD)v216;
  v426 = (v425 - 760843624 - ((2 * v425) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8872) - 1611123013;
  *(_DWORD *)(v10 + 9632) = (_DWORD)v216;
  v427 = (v426 - 760843624 - ((2 * v426) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8952) - 1459825361;
  *(_DWORD *)(v10 + 8964) = (_DWORD)v216;
  v428 = (v427 - 760843624 - ((2 * v427) & 0xA54CE530)) ^ v216;
  v429 = (v428 - 760843624 - ((2 * v428) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9728);
  LODWORD(v216) = *(_DWORD *)(v10 + 8800) - 792124708;
  *(_DWORD *)(v10 + 9328) = (_DWORD)v216;
  v430 = (v429 - 760843624 - ((2 * v429) & 0xA54CE530)) ^ v216;
  LODWORD(v286) = *(_DWORD *)(v10 + 8640) + 1725306166;
  v431 = (v430 - 760843624 - ((2 * v430) & 0xA54CE530)) ^ v286;
  v432 = (v431 - 760843624 - ((2 * v431) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9004);
  LODWORD(v216) = *(_DWORD *)(v10 + 8944) + 1538804417;
  *(_DWORD *)(v10 + 9120) = (_DWORD)v216;
  v433 = (v432 - 760843624 - ((2 * v432) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8888) + 3501;
  *(_DWORD *)(v10 + 9096) = (_DWORD)v216;
  v434 = (v433 - 760843624 - ((2 * v433) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8612) + 1403848974;
  *(_DWORD *)(v10 + 8800) = (_DWORD)v216;
  v435 = (v434 + v308 + ~((2 * v434) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8512) - 1224726451;
  *(_DWORD *)(v10 + 8880) = (_DWORD)v216;
  v436 = (v435 - 760843624 - ((2 * v435) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8648) - 772949988;
  *(_DWORD *)(v10 + 8952) = (_DWORD)v216;
  v437 = (v436 - 760843624 - ((2 * v436) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8576) - 838943925;
  *(_DWORD *)(v10 + 8648) = (_DWORD)v216;
  v438 = (v437 - 760843624 - ((2 * v437) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8748) + 1;
  *(_DWORD *)(v10 + 8456) = (_DWORD)v216;
  LODWORD(v325) = v216 ^ v325 ^ (v438 - 760843624 - ((2 * v438) & 0xA54CE530));
  LODWORD(v216) = *(_DWORD *)(v10 + 8768) + 1662827751;
  *(_DWORD *)(v10 + 8640) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8548) + 392640871;
  *(_DWORD *)(v10 + 8944) = (_DWORD)v216;
  LODWORD(v198) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216 ^ v198;
  LODWORD(v198) = (v198 - 760843624 - ((2 * v198) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9496);
  LODWORD(v216) = *(_DWORD *)(v10 + 8552) - 2057466388;
  *(_DWORD *)(v10 + 8888) = (_DWORD)v216;
  LODWORD(v198) = (v198 - 760843624 - ((2 * v198) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8608) - 1132541861;
  *(_DWORD *)(v10 + 8872) = (_DWORD)v216;
  LODWORD(v198) = (v198 - 760843624 - ((2 * v198) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 9528) + 1460372078;
  *(_DWORD *)(v10 + 8408) = (_DWORD)v216;
  LODWORD(v198) = (v198 - 760843624 - ((2 * v198) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8860) - 788588228;
  *(_DWORD *)(v10 + 8768) = (_DWORD)v216;
  LODWORD(v198) = (v198 - 760843624 - ((2 * v198) & 0xA54CE530)) ^ v216;
  LODWORD(v325) = v198 - 760843624 - ((2 * v198) & 0xA54CE530);
  LODWORD(v198) = *(_DWORD *)(v10 + 8752) + 1;
  *(_DWORD *)(v10 + 8440) = v198;
  *(_DWORD *)(v10 + 8860) = (_DWORD)v220;
  *(_DWORD *)(v10 + 9148) = v220 ^ 0xD2A67298;
  LODWORD(v216) = *(_DWORD *)(v10 + 8744) + 2026974602;
  *(_DWORD *)(v10 + 8744) = (_DWORD)v216;
  LODWORD(v325) = ((v220 ^ 0xD2A67298 ^ v198 ^ v325)
                 - 760843624
                 - ((2 * (v220 ^ 0xD2A67298 ^ v198 ^ v325)) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 9592) - 2115498448;
  *(_DWORD *)(v10 + 9592) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8572) - 1967481140;
  *(_DWORD *)(v10 + 8576) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v199) = *(_DWORD *)(v10 + 8984);
  LODWORD(v325) = v199 ^ 0x4D502370 ^ ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530));
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v218;
  v439 = v308;
  LODWORD(v216) = *(_DWORD *)(v10 + 8848) - 1743957702;
  *(_DWORD *)(v10 + 8552) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 + v308 + ~((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v262) = *(_DWORD *)(v10 + 8904) - 1911396363;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v262;
  LODWORD(v216) = *(_DWORD *)(v10 + 8632) + 725164248;
  *(_DWORD *)(v10 + 8512) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8656) - 1062872670;
  *(_DWORD *)(v10 + 8548) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8932);
  LODWORD(v218) = *(_DWORD *)(v10 + 8672) + 1657005171;
  *(_DWORD *)(v10 + 8632) = (_DWORD)v218;
  LODWORD(v325) = v218 ^ *(_DWORD *)(v10 + 9376) ^ ((_DWORD)v325
                                                                - 760843624
                                                                - ((2 * (_DWORD)v325) & 0xA54CE530));
  LODWORD(v216) = *(_DWORD *)(v10 + 8664) - 1359824275;
  *(_DWORD *)(v10 + 8612) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  v440 = *(_DWORD *)(v10 + 8680) + 173434885;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v440;
  LODWORD(v216) = *(_DWORD *)(v10 + 8704) - 1108516987;
  *(_DWORD *)(v10 + 8488) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  v441 = *(_DWORD *)(v10 + 8728) - 1346300011;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v441;
  LODWORD(v216) = *(_DWORD *)(v10 + 8688) + 1743504619;
  *(_DWORD *)(v10 + 8608) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8712) - 910366333;
  *(_DWORD *)(v10 + 9544) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9384);
  LODWORD(v216) = *(_DWORD *)(v10 + 8480) ^ 0x2CBCE5D1;
  *(_DWORD *)(v10 + 8848) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8764) + 678718479;
  *(_DWORD *)(v10 + 8572) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v308) = *(_DWORD *)(v10 + 9104) - 2011393690;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v308;
  LODWORD(v220) = *(_DWORD *)(v10 + 8720) + 2891;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v220;
  LODWORD(v216) = *(_DWORD *)(v10 + 8696) + 350567287;
  *(_DWORD *)(v10 + 8536) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v218) = *(_DWORD *)(v10 + 8736) + 1518031937;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v218;
  *(_DWORD *)(v10 + 9104) = v323;
  LODWORD(v351) = *(_DWORD *)(v10 + 8472);
  LODWORD(v325) = v323 ^ v351 ^ ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530));
  LODWORD(v216) = *(_DWORD *)(v10 + 9272) ^ 0x53EC096E;
  *(_DWORD *)(v10 + 8504) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 9504) - 1916900484;
  *(_DWORD *)(v10 + 8496) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v193) = *(_DWORD *)(v10 + 8520);
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v193;
  LODWORD(v216) = *(_DWORD *)(v10 + 8776) + 1;
  *(_DWORD *)(v10 + 8424) = (_DWORD)v216;
  LODWORD(v198) = *(_DWORD *)(v10 + 9288);
  LODWORD(v325) = v216 ^ v198 ^ ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530));
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8840);
  LODWORD(v216) = *(_DWORD *)(v10 + 9664) - ((2 * *(_DWORD *)(v10 + 9664) + 1336485632) & 0xA54CE530) - 92600808;
  *(_DWORD *)(v10 + 9528) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 9116) + 1812999287;
  *(_DWORD *)(v10 + 9504) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v263) = *(_DWORD *)(v10 + 8816) - 162344114;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v263;
  LODWORD(v322) = *(_DWORD *)(v10 + 8864) - 1259399968;
  LODWORD(v325) = ((_DWORD)v325 - 1150398823 - ((2 * (_DWORD)v325) & 0x76DC9D32)) ^ v322;
  LODWORD(v216) = *(_DWORD *)(v10 + 8868) - 1002461359;
  *(_DWORD *)(v10 + 9116) = (_DWORD)v216;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v105) = *(_DWORD *)(v10 + 9296) - 1244561618;
  LODWORD(v325) = ((_DWORD)v325 - 760843624 - ((2 * (_DWORD)v325) & 0xA54CE530)) ^ v105;
  LODWORD(v216) = *(_DWORD *)(v10 + 9248) + 1636221721;
  *(_DWORD *)(v10 + 9272) = (_DWORD)v216;
  LODWORD(v326) = ((_DWORD)v325 + v439 + ~((2 * (_DWORD)v325) & 0xA54CE530)) ^ v216;
  LODWORD(v216) = *(_DWORD *)(v10 + 8980) - 324735379;
  LODWORD(v326) = ((_DWORD)v326 + 1390929893 - ((2 * (_DWORD)v326) & 0xA5CFCFCA)) ^ v216;
  LODWORD(v327) = *(_DWORD *)(v10 + 8792) + 1;
  *(_DWORD *)(v10 + 9320) = v327 ^ 0x6204DF3A;
  LODWORD(v326) = ((_DWORD)v326 - 760843624 - ((2 * (_DWORD)v326) & 0xA54CE530)) ^ v327 ^ 0x6204DF3A;
  LODWORD(v353) = *(_DWORD *)(v10 + 8132) ^ 0xBDBFAEBE;
  *(_DWORD *)(v10 + 6360) = (_DWORD)v353 + 983580881;
  v442 = (_DWORD)v353 + 983580881 - ((2 * (_DWORD)v353 + 2042700786) & 0x7B7F5D7C) - 26;
  LODWORD(v326) = ((_DWORD)v326 - 1111511362 - ((2 * (_DWORD)v326) & 0x7B7F5D7C)) ^ v442;
  *(_DWORD *)(v10 + 8360) = (_DWORD)v218;
  LODWORD(v353) = (*(_DWORD *)(v10 + 9632) ^ 0xD2A67298) + (v218 ^ 0x2D598D67);
  *(_DWORD *)(v10 + 8416) = v286;
  LODWORD(v286) = (*(_DWORD *)(v10 + 9312) ^ v286) + (_DWORD)v353 + 1;
  LODWORD(v286) = (v286 - 760843624 - ((2 * v286) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8888);
  *(_DWORD *)(v10 + 8664) = (_DWORD)v220;
  LODWORD(v286) = ((v220 ^ 0x2D598D67)
                 + v286
                 - 760843623
                 - ((2 * ((v220 ^ 0x2D598D67) + v286 + 1)) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8640);
  *(_DWORD *)(v10 + 9312) = v322 ^ 0xBB6E4E99;
  *(_DWORD *)(v10 + 8904) = (_DWORD)v262;
  LODWORD(v286) = (v286 + (v322 ^ 0xBB6E4E99) - 760843624 - ((2 * (v286 + (v322 ^ 0xBB6E4E99))) & 0xA54CE530)) ^ v262;
  LODWORD(v322) = (*(_DWORD *)(v10 + 9280) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 8800) ^ 0xD2A67298)
                + (v199 ^ 0x9FF651E8)
                + (*(_DWORD *)(v10 + 8944) ^ 0xD2A67298);
  *(_DWORD *)(v10 + 7048) = (_DWORD)v216;
  LODWORD(v286) = v322 + ((v286 + 1390929893 - ((2 * v286) & 0xA5CFCFCA)) ^ v216) + 1;
  LODWORD(v286) = ((*(_DWORD *)(v10 + 9004) ^ 0xBF92ABF)
                 + ((v286 - 760843624 - ((2 * v286) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9448))
                 + 1) ^ *(_DWORD *)(v10 + 8616);
  LODWORD(v322) = (v198 ^ 0x2A015B72)
                + (*(_DWORD *)(v10 + 9192) ^ 0x22DB79EB)
                + (*(_DWORD *)(v10 + 9680) ^ 0xB067F04D)
                + (*(_DWORD *)(v10 + 9016) ^ 0x2D598D67);
  *(_DWORD *)(v10 + 8132) = v442;
  LODWORD(v286) = v322 + (v442 ^ 0xBDBFAEBE) + (*(_DWORD *)(v10 + 8548) ^ 0x2D598D67) + v286 + 4;
  LODWORD(v218) = v351 ^ *(_DWORD *)(v10 + 8532) ^ 0x9239C72F ^ (v286
                                                                             - 760843624
                                                                             - ((2 * v286) & 0xA54CE530));
  *(_DWORD *)(v10 + 8748) = v441;
  LODWORD(v218) = (v441 ^ 0xD2A67298) + (*(_DWORD *)(v10 + 9080) ^ 0xD2A67298) + (_DWORD)v218;
  *(_DWORD *)(v10 + 8656) = v308;
  *(_DWORD *)(v10 + 8368) = v440;
  LODWORD(v218) = (v440 ^ 0xD2A67298)
                + (*(_DWORD *)(v10 + 8632) ^ 0x2D598D67)
                + (v308 ^ 0xD2A67298 ^ v218)
                + 1;
  LODWORD(v218) = ((_DWORD)v218 - 760843624 - ((2 * (_DWORD)v218) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8552);
  LODWORD(v216) = (*(_DWORD *)(v10 + 9120) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 8400) ^ 0x2D598D67)
                + (((_DWORD)v218 - 760843624 - ((2 * (_DWORD)v218) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9224))
                + 2;
  *(_DWORD *)(v10 + 9296) = (_DWORD)v263;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v263;
  LODWORD(v216) = (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8848))
                + (*(_DWORD *)(v10 + 9464) ^ 0xD2A67298);
  LODWORD(v216) = (*(_DWORD *)(v10 + 9536) ^ 0x2D598D67)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8964))
                + 1;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8628);
  LODWORD(v216) = (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9424))
                + (*(_DWORD *)(v10 + 9096) ^ 0xD2A67298);
  *(_DWORD *)(v10 + 9424) = (_DWORD)v105;
  LODWORD(v220) = *(_DWORD *)(v10 + 9116) ^ 0xD2A67298;
  LODWORD(v218) = *(_DWORD *)(v10 + 8608) ^ 0x2D598D67;
  *(_DWORD *)(v10 + 9248) = (_DWORD)v220;
  LODWORD(v216) = (_DWORD)v220
                + (_DWORD)v218
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v105)
                + 1;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8544);
  LODWORD(v216) = (*(_DWORD *)(v10 + 9432) ^ 0xFF228271)
                + (*(_DWORD *)(v10 + 9128) ^ 0xD2A67298)
                + (v193 ^ 0xE62956F0 ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)))
                + 1;
  LODWORD(v216) = (*(_DWORD *)(v10 + 8440) ^ 0xFF64AE78 ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)))
                + (*(_DWORD *)(v10 + 8932) ^ 0x26CC4723);
  v443 = *(_DWORD *)(v10 + 9584);
  LODWORD(v216) = (v443 ^ 0xE0AD6750)
                + (((_DWORD)v216 - 1344733341 - ((2 * (_DWORD)v216) & 0x5FB1FEC6)) ^ *(_DWORD *)(v10 + 9052))
                + 1;
  LODWORD(v198) = *(_DWORD *)(v10 + 7240);
  LODWORD(v216) = ((_DWORD)v216 + v198 + ~((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9072);
  LODWORD(v218) = (*(_DWORD *)(v10 + 8828) ^ 0x2D598D67) + (*(_DWORD *)(v10 + 8572) ^ 0x2D598D67);
  LODWORD(v220) = *(_DWORD *)(v10 + 9384) ^ 0xABB57A88;
  *(_DWORD *)(v10 + 8356) = (_DWORD)v220;
  LODWORD(v216) = (_DWORD)v218
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ v220)
                + 2;
  LODWORD(v216) = (*(_DWORD *)(v10 + 9416) ^ 0xD57060A4)
                + (*(_DWORD *)(v10 + 9544) ^ 0x2D598D67)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9728))
                + 1;
  LODWORD(v216) = (*(_DWORD *)(v10 + 8408) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 9172) ^ 0xD51B989F)
                + (*(_DWORD *)(v10 + 9560) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 8744) ^ 0xD2A67298)
                + (*(_DWORD *)(v10 + 9056) ^ 0xD2A67298)
                + (*(_DWORD *)(v10 + 9496) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 8512) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 9200) ^ 0x4B4B8147)
                + (((_DWORD)v216 + v198 + ~((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8952))
                + 4;
  LODWORD(v216) = (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9528))
                + (*(_DWORD *)(v10 + 8488) ^ 0xD2A67298);
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9472);
  LODWORD(v216) = (*(_DWORD *)(v10 + 9136) ^ 0xF2AA38BD)
                + (*(_DWORD *)(v10 + 9208) ^ 0x2B1B3BB7 ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)))
                + 1;
  LODWORD(v216) = (*(_DWORD *)(v10 + 9012) ^ 0x2D598D67)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8872))
                + 1;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9608);
  LODWORD(v216) = (*(_DWORD *)(v10 + 8900) ^ 0x2D598D67)
                + (*(_DWORD *)(v10 + 9640) ^ 0x44E7862F)
                + (*(_DWORD *)(v10 + 9240) ^ 0xD2A67298)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9408))
                + 1;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8912);
  LODWORD(v216) = *(_DWORD *)(v10 + 8456) ^ 0x6BA574B9 ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v216) = (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9328))
                + (*(_DWORD *)(v10 + 9064) ^ 0xD2A67298);
  LODWORD(v216) = *(_DWORD *)(v10 + 9148) ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v216) = (*(_DWORD *)(v10 + 9152) ^ 0xD2A67298)
                + (*(_DWORD *)(v10 + 9400) ^ 0x449E5E7C)
                + (*(_DWORD *)(v10 + 8880) ^ 0x2D598D67)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8768))
                + 2;
  LODWORD(v216) = (*(_DWORD *)(v10 + 9008) ^ 0xA56A7856)
                + (*(_DWORD *)(v10 + 9376) ^ 0x79122C35)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9592))
                + 1;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8920);
  LODWORD(v216) = (*(_DWORD *)(v10 + 9440) ^ 0xD2A67298)
                + (*(_DWORD *)(v10 + 8648) ^ 0xD2A67298)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8612));
  LODWORD(v216) = (v327 ^ 0x4F5D525D)
                + (*(_DWORD *)(v10 + 9736) ^ 0xFEDADB0C)
                + (*(_DWORD *)(v10 + 9576) ^ 0x92087EBE)
                + (*(_DWORD *)(v10 + 9368) ^ 0xD2A67298)
                + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8536))
                + 2;
  LODWORD(v216) = *(_DWORD *)(v10 + 8424) ^ 0xC153BD1B ^ ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530));
  LODWORD(v218) = *(_DWORD *)(v10 + 9176) ^ 0xD2A67298;
  LODWORD(v198) = *(_DWORD *)(v10 + 9272) ^ 0xD2A67298;
  LODWORD(v220) = *(_DWORD *)(v10 + 9688) ^ 0x4E47D87E;
  *(_DWORD *)(v10 + 9472) = v198;
  LODWORD(v216) = v198
                + (_DWORD)v220
                + (_DWORD)v218
                + (_DWORD)v216
                - 760843624
                - ((2 * (v198 + (_DWORD)v220 + (_DWORD)v218 + (_DWORD)v216)) & 0xA54CE530);
  LODWORD(v220) = *(_DWORD *)(v10 + 9040) - 722386700;
  *(_DWORD *)(v10 + 9192) = (_DWORD)v220;
  LODWORD(v218) = v220 ^ 0x8FD59AEE ^ ((_DWORD)v326 - 760843624 - ((2 * (_DWORD)v326) & 0xA54CE530));
  LODWORD(v220) = (*(_DWORD *)(v10 + 8576) ^ 0x2D598D67) + (*(_DWORD *)(v10 + 8464) ^ 0x2D598D67);
  LODWORD(v325) = *(_DWORD *)(v10 + 9304) ^ 0xD2A67298;
  LODWORD(v263) = *(_DWORD *)(v10 + 9264);
  *(_DWORD *)(v10 + 9116) = (_DWORD)v325;
  LODWORD(v220) = (_DWORD)v325
                + (v263 ^ 0x673A37A7)
                + (_DWORD)v220
                + (*(_DWORD *)(v10 + 9616) ^ 0x2D598D67);
  LODWORD(v325) = *(_DWORD *)(v10 + 9648);
  *(_DWORD *)(v10 + 8344) = v325 ^ 0x946CA9A7;
  LODWORD(v198) = *(_DWORD *)(v10 + 8840);
  *(_DWORD *)(v10 + 8352) = v198 ^ 0x97EFB1A7;
  LODWORD(v216) = (*(_DWORD *)(v10 + 9720) ^ 0x2D598D67)
                + (((_DWORD)v220
                  + (v216 ^ v325 ^ 0x946CA9A7)
                  - 760843621
                  - ((2 * ((_DWORD)v220 + (v216 ^ v325 ^ 0x946CA9A7) + 3)) & 0xA54CE530)) ^ v198 ^ 0x97EFB1A7)
                + 1;
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9504);
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8496);
  LODWORD(v216) = ((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 8504);
  *(_DWORD *)(v10 + 9040) = ((*(_DWORD *)(v10 + 9024) ^ 0x2D598D67)
                           + (((_DWORD)v216 - 760843624 - ((2 * (_DWORD)v216) & 0xA54CE530)) ^ *(_DWORD *)(v10 + 9456))
                           + 1) ^ *(_DWORD *)(v10 + 8968);
  LODWORD(v220) = (6107 * (v443 != 525506735)) ^ *(_DWORD *)(v10 + 9552);
  *(_DWORD *)(v10 + 9172) = *(_DWORD *)(v10 + 9156) + 922951963;
  *(_DWORD *)(v10 + 9400) = __ROR4__(__ROR4__((_DWORD)v218, 8) ^ 0x1DA31901, 24) ^ 0x94560EC7;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v10 + 9744) + 8 * (int)v220))();
}

uint64_t sub_1003417E8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v2 < 0x100) * (((a1 + 815014655) & 0xCF6BCF6E) + ((a1 - 383) ^ 0x5CF))) ^ a1)))();
}

uint64_t sub_10034182C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, char a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  _BOOL4 v31;

  v19 = (v8 + 2060356745) & 0x85317B6F;
  v20 = (*(_DWORD *)(v11 + 9696) ^ 0x1F98E036) + (*(_DWORD *)(v11 + 8784) ^ (v18 + v19 - 2919));
  v21 = a3 ^ (2 * (a3 & a8));
  v22 = *(unsigned __int8 *)(v17
                           + ((((unint64_t)(v21 & v13) >> *(_QWORD *)(v11 + 8992)) + 18) ^ 0xC0));
  v23 = (((v22 ^ 0x4E) >> 4) | (16 * (v22 ^ 0x4E))) ^ (v21 << v16);
  v24 = -1943008957
      * *((_DWORD *)*(&off_1004ECA20 + (int)(v19 - 2202)) + (a3 ^ 0x3D9 ^ (v19 + 1042727960) & 0xC1D933EE) - 1);
  LOBYTE(v23) = *(_BYTE *)(v15 + ((-61 * v23) ^ 0x36)) ^ (-61 * v23) ^ 0xC1;
  LOBYTE(v23) = *(_DWORD *)(v11 + 8760) ^ (((v23 & 0x80) != 0) | (2 * v23));
  v25 = v24 ^ 0xF0A4450E ^ (v24 >> 4) & 0xAD734AA ^ (2 * ((v24 ^ 0xF0A4450E ^ (v24 >> 4) & 0xAD734AA) & v12));
  v26 = ((unint64_t)(v25 & a6) >> a7) + ((v25 & a5) << v16);
  v27 = (v26 + v18 - ((2 * v26) & 0xA54CE530)) ^ *(_DWORD *)(v11 + 9512);
  *(_DWORD *)(a2 + 4 * v23) = (v27 + v18 - ((2 * v27) & 0xA54CE530)) ^ *(_DWORD *)(v11 + 9656);
  v28 = *((unsigned __int16 *)*(&off_1004ECA20 + (int)(v19 - 2220)) + (a3 ^ 0x26u) - 6);
  v29 = (v18 + ((unsigned __int16)v28 ^ 0x641C ^ (v28 >> 1) & 0x91) - ((2 * (v28 ^ 0x641C ^ (v28 >> 1) & 0x91)) & 0xE530)) ^ *(_DWORD *)(v11 + 9696);
  v30 = (v29 + v18 - ((2 * v29) & 0xA54CE530)) ^ a4;
  *(_DWORD *)(v10
            + 4
            * (unsigned __int16)(129 * v23
                               - 260 * ((unsigned __int16)((520257 * v23) >> 16) >> 4))) = (v20 + v14 - ((2 * v20) & 0xA3349AB8)) ^ 0xD2A69DB6 ^ (v30 + v14 - ((2 * v30) & 0xA3349AB8));
  v31 = -1226940159 * (108430735 - (a3 ^ 0x26)) != 1796453519;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((2 * v31) | (16 * v31)) ^ v19)))();
}

uint64_t sub_100341A88()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((4718 * (v2 == (((v0 ^ 0xCEF) - 1050) ^ 0xA67))) ^ v0)))();
}

uint64_t sub_100341AB8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7)
{
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  int v26;
  unsigned int v27;
  unint64_t v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  char *v34;
  char *v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  int v50;
  int v51;
  _BYTE *v52;
  int v53;
  char *v54;
  unint64_t v55;
  char v56;
  char v57;
  char *v58;
  char *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v73;
  unsigned int v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  unint64_t v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unint64_t v119;
  char v120;
  int v121;
  char v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  uint64_t v128;
  int v129;
  unsigned int v130;
  unint64_t v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  int v241;
  unsigned int v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  int v247;
  int v248;
  uint64_t v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  uint64_t v373;
  int v374;
  int v375;
  uint64_t v376;
  uint64_t v377;
  int v378;
  uint64_t v379;
  int v380;
  int v381;
  int v382;
  int v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  uint64_t v390;
  uint64_t v391;
  char v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  int v401;
  int v402;
  unsigned int v403;
  int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  unsigned int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  unsigned int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  BOOL v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  int v440;
  uint64_t v441;
  uint64_t v442;
  int v443;
  unsigned int v444;
  uint64_t v445;
  int v446;
  unsigned int v447;
  unsigned int v448;
  int v449;
  unsigned int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  BOOL v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  int v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  unsigned int v477;
  unint64_t v478;
  unsigned int v479;
  int v480;
  unsigned int v481;
  int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  unsigned int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  uint64_t v539;
  uint64_t v540;
  int v541;
  unsigned int v542;
  int v543;
  unsigned int v544;
  int v545;
  unsigned int v546;
  unsigned int v547;
  int v548;
  int v549;
  int v550;
  unsigned int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  uint64_t v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  unsigned int v571;
  int v572;
  unsigned int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  unsigned int v582;
  int v583;
  unsigned int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  unsigned int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  uint64_t v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  int v650;
  unsigned int v651;
  int v652;
  unsigned int v653;
  unsigned int v654;
  int v655;
  char v656;
  unsigned int v657;
  unsigned int v658;
  unsigned int v659;
  unsigned int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  unsigned int v665;
  int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  int v687;
  unsigned int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  unsigned int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  uint64_t v702;
  int v703;
  unsigned int v704;
  int v705;
  int v706;
  unsigned int v707;
  int v708;
  int v709;
  unint64_t v710;
  int v711;
  int v712;
  int v713;
  int v714;
  unsigned int v715;
  char v716;
  int v717;
  int v718;
  int v719;
  int v720;
  int v721;
  unsigned int v722;
  unsigned int v723;
  int v724;
  int v725;
  int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  int v736;
  int v737;
  int v738;
  int v739;
  int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  unsigned int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  int v750;
  unsigned int v751;
  unsigned int v752;
  unsigned int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  int v760;
  int v761;
  int v762;
  int v763;
  int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  int v774;
  uint64_t v775;
  int v776;
  unsigned int v777;
  int v778;
  unsigned int v779;
  unsigned int v780;
  unsigned int v781;
  int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  unsigned int v786;
  unsigned int v787;
  unsigned int v788;
  int v789;
  int v790;
  unsigned int v791;
  unsigned int v792;
  unsigned int v793;
  unsigned int v794;
  unsigned int v795;
  unsigned int v796;
  unsigned int v797;
  unsigned int v798;
  int v799;
  int v800;
  unsigned int v801;
  int v802;
  unsigned int v803;
  unsigned int v804;
  unsigned int v805;
  BOOL v806;
  unsigned int v807;
  uint64_t v808;
  unsigned int v809;
  uint64_t v810;
  int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  uint64_t v815;
  int v816;
  unsigned int v817;
  int v818;
  unsigned int v819;
  int v820;
  unsigned int v821;
  unsigned int v822;
  int v823;
  int v824;
  unsigned int v825;
  unint64_t v826;
  unsigned int v827;
  unsigned int v828;
  unsigned int v829;
  unsigned __int8 v830;
  char v831;
  unint64_t v832;
  int v833;
  unint64_t v834;
  unsigned int v835;
  unint64_t v836;
  int v837;
  int v838;
  int v839;
  unsigned int v840;
  unsigned int v841;
  int v842;
  unint64_t v843;
  unsigned int v844;
  unsigned int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  int v851;
  unsigned int v852;
  int v853;
  int v854;
  unsigned int v855;
  int v856;
  unsigned int v857;
  unint64_t v858;
  unsigned int v859;
  unsigned int v860;
  int v861;
  int v862;
  int v863;
  unint64_t v864;
  int v865;
  unsigned int v866;
  int v867;
  unsigned int v868;
  int v869;
  int v870;
  int v871;
  int v872;
  unsigned int v873;
  int v874;
  int v875;
  unint64_t v876;
  int v877;
  unint64_t v878;
  unsigned int v879;
  unsigned int v880;
  unsigned int v881;
  int v882;
  unint64_t v883;
  int v884;
  unsigned int v885;
  unint64_t v886;
  unsigned int v887;
  int v888;

  *(_DWORD *)(v9 + 7152) = v13;
  v16 = *(_DWORD *)(*v7 + (*v8 & 0x3934A394));
  v17 = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6760)) & 0x7FFFFFFF);
  v18 = -333269657 * (v17 ^ HIWORD(v17));
  v19 = *(_QWORD *)(v9 + 7200);
  v20 = *(_QWORD *)(v9 + 7192);
  v21 = *(_QWORD *)(v9 + 7184);
  LODWORD(v18) = *(unsigned __int8 *)(v14
                                    + (((*(_BYTE *)(v19 + (v18 >> 24)) ^ v11[357] ^ *(_BYTE *)((v18 >> 24) + v20 + 1) ^ *(_BYTE *)((v18 >> 24) + v21 + 2) ^ v18 ^ (-119 * BYTE3(v18)))
                                                       + 18) ^ 0xC0)) ^ 0x4E;
  HIDWORD(v22) = v18 >> 4;
  LODWORD(v22) = ((HIDWORD(v22) << 24) | ((_DWORD)v18 << 28)) + 1744830464;
  v23 = *(_QWORD *)(v9 + 9672) + 2126;
  v24 = *(unsigned __int8 *)(v23
                           + ((((*(_BYTE *)(*(_QWORD *)(v9 + 8808)
                                                           + ((v22 >> 25) ^ 0xF5))
                                                + 91) ^ 0x7F)
                                              - 40) ^ 0x2FLL));
  v25 = (v24 ^ 0x30) & 0x63 ^ 0xBB ^ (((v24 ^ 0x30) & 0xEB ^ 0xFE) - ((2 * ((v24 ^ 0x30) & 0xEB ^ 0xFE)) & 0xD8) + 108);
  v26 = ((v24 ^ 0x1D) - ((2 * (v24 ^ 0x1D)) & 0x9C) - 50) ^ (((((2 * v25) | 0x24) - v25 + 110) & 0xFC) >> 2) ^ 0xF3;
  *(_DWORD *)(v9 + 9696) = (v26 << 16) - 1150398823 - ((v26 << 17) & 0xDC0000);
  v27 = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6840)) & 0x7FFFFFFF);
  v28 = -333269657 * (v27 ^ HIWORD(v27));
  LOBYTE(v28) = v28 ^ v11[362] ^ *(_BYTE *)(v19 + (v28 >> 24)) ^ *(_BYTE *)((v28 >> 24) + v20 + 1) ^ (-119 * BYTE3(v28)) ^ *(_BYTE *)((v28 >> 24) + v21 + 2);
  v29 = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6816)) & 0x7FFFFFFF);
  v30 = -333269657 * (v29 ^ HIWORD(v29));
  LOBYTE(v30) = v30 ^ v11[355] ^ (-119 * BYTE3(v30)) ^ *(_BYTE *)(v19 + (v30 >> 24)) ^ *(_BYTE *)((v30 >> 24) + v20 + 1) ^ *(_BYTE *)((v30 >> 24) + v21 + 2);
  v31 = (uint64_t)*(&off_1004ECA20 + (a1 ^ 0xF6E));
  *(_QWORD *)(v9 + 7080) = v31;
  v32 = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6824)) & 0x7FFFFFFF);
  v33 = -333269657 * (v32 ^ HIWORD(v32));
  LOBYTE(v20) = v33 ^ v11[359];
  v33 >>= 24;
  LOBYTE(v20) = (-87 * v33) ^ v20 ^ *(_BYTE *)(v31 + v33);
  v34 = (char *)*(&off_1004ECA20 + a1 - 3475) - 4;
  *(_QWORD *)(v9 + 7064) = v34;
  v33 += 3;
  LOBYTE(v20) = v20 ^ v34[v33];
  v35 = (char *)*(&off_1004ECA20 + a1 - 3904) - 8;
  *(_QWORD *)(v9 + 7056) = v35;
  v36 = v20 ^ v35[v33];
  LODWORD(v33) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6788)) & 0x7FFFFFFF);
  v37 = -333269657 * (v33 ^ WORD1(v33));
  LOBYTE(v20) = v37 ^ v11[363];
  v38 = (uint64_t)*(&off_1004ECA20 + (a1 ^ 0xD2E));
  *(_QWORD *)(v9 + 8720) = v14;
  v39 = v38 - 4;
  v40 = (uint64_t)*(&off_1004ECA20 + (a1 ^ 0xDCE));
  v41 = (char *)*(&off_1004ECA20 + (a1 ^ 0xCF1)) - 4;
  LOBYTE(v38) = (121 * BYTE3(v37)) ^ v20 ^ *(_BYTE *)(v38 - 4 + (v37 >> 24)) ^ *(_BYTE *)((v37 >> 24) + v40 + 1) ^ *((_BYTE *)*(&off_1004ECA20 + (a1 ^ 0xCF1)) + (v37 >> 24));
  LODWORD(v37) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6812)) & 0x7FFFFFFF);
  v42 = -333269657 * (v37 ^ WORD1(v37));
  LOBYTE(v20) = v11[361];
  v43 = *(_BYTE *)(v39 + (v42 >> 24));
  v44 = v39;
  *(_QWORD *)(v9 + 6976) = v39;
  v45 = v43 ^ v20 ^ *(_BYTE *)((v42 >> 24) + v40 + 1) ^ v41[(v42 >> 24) + 4];
  LODWORD(v39) = *(unsigned __int8 *)(v23 + ((v30 + 98) ^ 0x86));
  *(_DWORD *)(v9 + 9512) = v39;
  *(_DWORD *)(v9 + 9432) = v39 ^ 0x1D;
  LODWORD(v21) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6832)) & 0x7FFFFFFF);
  v46 = -333269657 * (v21 ^ WORD1(v21));
  v47 = (19
                        - 61
                        * (*(_BYTE *)(v44 + (v46 >> 24)) ^ v11[360] ^ *(_BYTE *)((v46 >> 24) + v40 + 1) ^ v41[(v46 >> 24) + 4] ^ v46 ^ (121 * BYTE3(v46)))) ^ (((v39 ^ 0x1D) & 0xBA ^ 0xBA) + ((v39 ^ 0x1D) & 0xBA));
  LODWORD(v47) = *(unsigned __int8 *)(v23
                                    + (((((v47 ^ *(_BYTE *)(v10 + (v47 ^ 0x8C))) & 0x80) != 0) | (2 * (v47 ^ *(_BYTE *)(v10 + (v47 ^ 0x8C))))) ^ 0x89));
  v48 = *(_QWORD *)(v9 + 9672) + 2928;
  *(_QWORD *)(v9 + 9264) = v48;
  LODWORD(v28) = ((*(unsigned __int8 *)(v48 + ((v28 + 119) ^ 0x21)) ^ 0xEA) << 8) | ((v47 ^ (v47 >> 2) & 0x22 ^ 0x33333333) << 24);
  *(_DWORD *)(v9 + 9696) = *(unsigned __int8 *)(v48 + ((v36 + 110) ^ 0x47)) ^ 0xA6 | *(_DWORD *)(v9 + 9696) ^ 0xBB6E4E99;
  LODWORD(v48) = *(unsigned __int8 *)(v23 + ((v38 + 122) ^ 0x3DLL)) ^ 0x1D;
  v49 = *(unsigned __int8 *)(v23 + (((v45 ^ v42 ^ (121 * BYTE3(v42))) + 116) ^ 0x69));
  *(_QWORD *)(v9 + 9200) = v23;
  LODWORD(v28) = v28 & 0xFF00FF00 | (v48 >> 2) & 0x22 ^ v48 | ((v49 ^ 0xD1 ^ (v49 >> 2) & 0x22) << 16);
  LODWORD(v47) = *(_DWORD *)(v9 + 7256);
  LODWORD(v48) = *(_DWORD *)(v9 + 8432) ^ v47;
  *(_DWORD *)(v9 + 9552) = v48;
  v50 = v48 & 0xA015724D ^ 0x80004240 | v48 & 0xA015724D ^ 0x2015300D;
  *(_DWORD *)(v9 + 9272) = v28 ^ 0xFC;
  LODWORD(v28) = v28 ^ 0xFC ^ (2 * ((v28 ^ 0xFC) & *(_DWORD *)(v9 + 7176)));
  LODWORD(v20) = a6;
  LODWORD(v28) = ((unint64_t)(v28 & a6) >> a7) | ((unint64_t)(v28 & a5) << v12);
  v51 = v28 + v15 - ((2 * v28) & 0xA54CE530);
  LODWORD(v39) = *(_DWORD *)(v9 + 7216);
  LODWORD(v48) = *(_DWORD *)(v9 + 8608) ^ v39;
  *(_DWORD *)(v9 + 9304) = v48;
  v52 = v11;
  v53 = v39;
  LODWORD(v28) = v48 ^ 0x7C08DC36;
  LODWORD(v48) = *(_DWORD *)(v9 + 8744) ^ v47;
  *(_DWORD *)(v9 + 9656) = v48;
  LODWORD(v46) = (v48 ^ 0xC2C2C2C2) + v28;
  v54 = (char *)*(&off_1004ECA20 + a1 - 3042) - 4;
  LODWORD(v28) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6784)) & 0x7FFFFFFF);
  v55 = -333269657 * (v28 ^ WORD1(v28));
  v56 = v52[356];
  v57 = v54[v55 >> 24];
  *(_QWORD *)(v9 + 7168) = v54;
  v58 = (char *)*(&off_1004ECA20 + a1 - 3620) - 4;
  v59 = (char *)*(&off_1004ECA20 + a1 - 3506) - 4;
  LODWORD(v55) = *(unsigned __int8 *)(v23
                                    + (((v57 ^ v56 ^ v58[(v55 >> 24) + 1] ^ v59[(v55 >> 24) + 2] ^ v55 ^ (55 * BYTE3(v55)))
                                                       + 101) ^ 0x36));
  LODWORD(v55) = -61 * (v55 ^ 0xFFFFFF82 ^ (v55 >> 2) & 0x22);
  LODWORD(v55) = *(unsigned __int8 *)(v10 + (v55 ^ 0x36)) ^ v55 ^ 0xFFFFFFC1;
  v60 = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6848)) & 0x7FFFFFFF);
  v61 = -333269657 * (v60 ^ HIWORD(v60));
  v62 = *(_QWORD *)(v9 + 9264);
  LODWORD(v55) = (((v55 & 0x80) << 17) | ((_DWORD)v55 << 25))
               + *(_DWORD *)(v9 + 9696)
               + ((*(unsigned __int8 *)(v62
                                      + (((v58[(v61 >> 24) + 1] ^ v52[358] ^ v61 ^ v54[v61 >> 24] ^ v59[(v61 >> 24) + 2] ^ (55 * BYTE3(v61)))
                                                         + 107) ^ 7)) ^ 0x7F) << 8);
  LODWORD(v55) = v55 ^ (2 * (v55 & *(_DWORD *)(v9 + 7364)));
  LODWORD(v61) = ((unint64_t)(v55 & a5) << v12) | ((unint64_t)(v55 & v20) >> *(_QWORD *)(v9 + 8992));
  *(_DWORD *)(v9 + 9456) = v51;
  v63 = (v51 ^ 0x2D598D67) + 2;
  *(_DWORD *)(v9 + 9416) = v63 + v46;
  LODWORD(v46) = -1752471747 * (v63 + v46) - ((-1752471747 * (v63 + v46)) >> 16);
  LODWORD(v39) = v61 - 760843624 - ((2 * v61) & 0xA54CE530);
  *(_DWORD *)(v9 + 8752) = v39;
  LODWORD(v46) = v39 ^ ((v46 ^ (v46 >> 8))
                      - 760843624
                      - ((2 * (v46 ^ (v46 >> 8))) & 0xA54CE530));
  LODWORD(v48) = *(_DWORD *)(v9 + 8632) ^ v53;
  *(_DWORD *)(v9 + 9256) = v48;
  *(_DWORD *)(v9 + 9688) = (v48 ^ 0x83F723C9) - v46 + 1001199237 * v50 * v46;
  v64 = ((*(_DWORD *)(v9 + 7040) ^ 0xB806E8BE)
       - ((2 * (*(_DWORD *)(v9 + 7040) ^ 0xB806E8BE) + 1809337858) & 0x700DD17C)
       - 302837825) ^ 0xB806E8BE;
  *(_DWORD *)(v9 + 9576) = a1 ^ 0x242;
  LODWORD(v46) = (*(_DWORD *)(v9 + 9528) ^ 0xD2A67298)
               - 2 * (((*(_DWORD *)(v9 + 9528) ^ 0xD2A67298) + 1991750550) & 0x52A67299 ^ *(_DWORD *)(v9 + 9664) & 1);
  *(_DWORD *)(v9 + 7040) = v64 - (((v64 << ((a1 ^ 0x42) + 62)) + 338145790) & 0x700DD17C) - 2112175683;
  v65 = (v64 - ((((_BYTE)v64 << ((a1 ^ 0x42) + 62)) - 2) & 0x7C) - 67) ^ 0xBEu;
  *(_QWORD *)(v9 + 7280) = v65;
  *(_QWORD *)(v9 + 6968) = a5 << ((v64 - ((((_BYTE)v64 << ((a1 ^ 0x42) + 62)) - 2) & 0x7C) - 67) ^ 0xBE);
  v66 = ((unint64_t)((a5 << v65) & ((((_DWORD)v46 - 916576722) ^ 0xD2A67298) + 155733098)) >> v65) | ((unint64_t)(((((_DWORD)v46 - 916576722) ^ 0xD2A67298) + 155733098) & *(_QWORD *)(v9 + 7000)) << a7);
  v67 = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6828)) & 0x7FFFFFFF);
  v68 = -333269657 * (v67 ^ HIWORD(v67));
  v69 = *(_QWORD *)(v9 + 6976);
  LODWORD(v68) = (v68 ^ v52[352] ^ (121 * (v68 >> 24)) ^ *(unsigned __int8 *)(v69 + (v68 >> 24)) ^ *(unsigned __int8 *)((v68 >> 24) + v40 + 1) ^ v41[(v68 >> 24) + 4])
               + 89;
  LODWORD(v68) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9184)
                                    + (((v68 >> 3) | (32 * v68)) ^ 0x17));
  LOBYTE(v68) = *(_BYTE *)(v62
                         + (((((v68 >> 4) | (16 * v68)) ^ v68 & 0xB ^ 0x42) + 61) ^ 0xC1)) ^ 0xC3;
  LODWORD(v46) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6768)) & 0x7FFFFFFF);
  v70 = -333269657 * (v46 ^ WORD1(v46));
  LOBYTE(v70) = *(_BYTE *)(v69 + (v70 >> 24)) ^ v52[351] ^ *(_BYTE *)((v70 >> 24) + v40 + 1) ^ v41[(v70 >> 24) + 4] ^ v70 ^ (121 * BYTE3(v70));
  LODWORD(v61) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6800)) & 0x7FFFFFFF);
  v71 = -333269657 * (v61 ^ WORD1(v61));
  v72 = v71 >> 24;
  v73 = *(_BYTE *)(v69 + (v71 >> 24)) ^ v52[354];
  *(_QWORD *)(v9 + 6312) = v40;
  LOBYTE(v71) = v73 ^ *(_BYTE *)((v71 >> 24) + v40 + 1) ^ v71;
  *(_QWORD *)(v9 + 6304) = v41;
  LOBYTE(v71) = ((v71 ^ v41[v72 + 4] ^ (121 * v72)) + 95) ^ 0x73;
  v74 = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6856)) & 0x7FFFFFFF);
  v75 = -333269657 * (v74 ^ HIWORD(v74));
  v76 = v75 >> 24;
  LODWORD(v23) = *(unsigned __int8 *)((v75 >> 24) + *(_QWORD *)(v9 + 7192) + 1);
  LODWORD(v41) = *(unsigned __int8 *)((v75 >> 24) + *(_QWORD *)(v9 + 7184) + 2);
  v77 = v52[350];
  v78 = 9 * (v75 >> 24);
  v79 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 7200) + (v75 >> 24));
  LODWORD(v40) = v78 ^ v75 ^ v77 ^ v79 ^ v23 ^ v41;
  v80 = *(_QWORD *)(v9 + 9520);
  LODWORD(v68) = ((*(unsigned __int8 *)(v80
                                      + (((v68 >> 1) | ((_BYTE)v68 << 7)) ^ 0xF1)) ^ 0xCE)
                - 40) ^ 0xE4;
  LODWORD(v75) = v23 ^ v79 ^ v41 ^ v75 ^ v77;
  v81 = *(_QWORD *)(v9 + 9200);
  LODWORD(v71) = (v75 ^ v78 | ~(_DWORD)v40) & 0x1D ^ *(unsigned __int8 *)(v81
                                                                        + (((*(_BYTE *)(v80 + (((v71 >> 1) | ((_BYTE)v71 << 7)) ^ 0xF1)) ^ 0xCE)
                                                                                           - 40) ^ 0xCCLL));
  LODWORD(v71) = ((((_DWORD)v68 << 24) - 760843624 - (((_DWORD)v68 << 25) & 0xA4000000)) ^ 0xD2A67298)
               + ((v71 ^ 0x96 ^ (v71 >> 2) & 0x22) << 8);
  LODWORD(v68) = *(unsigned __int8 *)(v62 + ((v70 + 86) ^ 0x29));
  LODWORD(v70) = (v68 ^ 0x8F) & 0xFFFF00FF | ((*(_BYTE *)(v81 + (((v75 ^ (-119 * v76)) + 83) ^ 0xA6)) ^ 5 ^ (*(_BYTE *)(v81 + (((v75 ^ (-119 * v76)) + 83) ^ 0xA6)) >> 2) & 0x22) << 8);
  LODWORD(v40) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6864)) & 0x7FFFFFFF);
  v82 = -333269657 * (v40 ^ WORD1(v40));
  LODWORD(v82) = -61
               * (*(unsigned __int8 *)(*(_QWORD *)(v9 + 7080) + (v82 >> 24)) ^ v52[349] ^ *(unsigned __int8 *)(*(_QWORD *)(v9 + 7064) + (v82 >> 24) + 3) ^ *(unsigned __int8 *)(*(_QWORD *)(v9 + 7056) + (v82 >> 24) + 3) ^ v82 ^ (-87 * (v82 >> 24)));
  v83 = *(_QWORD *)(v9 + 8152);
  LOBYTE(v82) = *(_BYTE *)(v83 + (v82 ^ 0xCELL)) + (v82 ^ 0xA7) + 98;
  LODWORD(v62) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9624)
                                    + (((*(_BYTE *)(v62
                                                                   + ((((((v82 & 0x80) != 0) | (2 * v82)) ^ 0x84)
                                                                                      + 80) ^ 0xB9)) ^ 0xC3)
                                                       + 18) ^ 0x47));
  LODWORD(v82) = v62 >> (v62 & 2) >> (v62 & 2 ^ 2);
  LODWORD(v80) = *(_DWORD *)(v9 + 9512);
  HIDWORD(v22) = *(_DWORD *)(v9 + 9432);
  LODWORD(v22) = (_DWORD)v80 << 24;
  LODWORD(v20) = ((v80 >> 7) & 0xFFFFFFEF | (16 * ((HIDWORD(v22) >> 3) & 1))) ^ (v22 >> 29);
  LODWORD(v20) = v71 + (((v20 >> 3) | (32 * v20)) ^ 0x1E);
  LOBYTE(v62) = (v82 + ((_BYTE)v62 << 6)) ^ (4 * v82) ^ (2 * (v82 + ((_BYTE)v62 << 6))) ^ 0xC8;
  LODWORD(v71) = -333269657 * ((v16 ^ *(_QWORD *)(v9 + 7232)) & 0x7FFFFFFF);
  v84 = -333269657 * (v71 ^ WORD1(v71));
  v85 = *(_QWORD *)(v9 + 7168);
  LODWORD(v84) = *(unsigned __int8 *)(v81
                                    + (((*(_BYTE *)(v85 + (v84 >> 24)) ^ v52[348] ^ v58[(v84 >> 24) + 1] ^ v59[(v84 >> 24) + 2] ^ v84 ^ (55 * BYTE3(v84)))
                                                       + 77) ^ 0xDALL));
  LODWORD(v54) = -333269657 * ((v16 ^ *(_DWORD *)(v9 + 6776)) & 0x7FFFFFFF);
  v86 = -333269657 * (v54 ^ (v54 >> 16));
  v87 = v52[353] ^ v86;
  v86 >>= 24;
  v88 = v87 ^ (55 * v86) ^ *(_BYTE *)(v85 + v86);
  *(_QWORD *)(v9 + 6928) = v58;
  LOBYTE(v82) = v58[v86 + 1];
  *(_QWORD *)(v9 + 6920) = v59;
  LODWORD(v62) = ((((v62 >> 4) | (16 * v62)) ^ 0x35) << 16) | ((v84 ^ (v84 >> 2) & 0x22222222 ^ 0x3F) << 24) | v70;
  LOBYTE(v86) = -61 * (v88 ^ v82 ^ v59[v86 + 2]);
  LOBYTE(v86) = *(_BYTE *)(v83 + (v86 ^ 0xCELL)) + (v86 ^ 0xA7) + 98;
  LODWORD(v86) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 8720)
                                    + ((((((v86 & 0x80) != 0) | (2 * v86)) ^ 0x84) + 110) ^ 0xC0));
  v89 = *(unsigned __int8 *)(v81
                           + (((((v86 ^ 0x4E) >> 4)
                                               - (((v86 ^ 0x4E) >> 3) & 8)
                                               + 36) ^ 0x24 | (16 * (v86 ^ 0x4E)
                                                                              - ((32 * (v86 ^ 0x4E)) & 0xBF)
                                                                              - 39) ^ 0xD9u) ^ 0x71));
  LODWORD(v89) = (v20
                + ((v89 ^ 0xAC ^ ((v89 & 0x8888888888888888 ^ 8) >> (1
                                                                                                 - (v86 ^ 0xB1 | v86 ^ 0x4E)))) << 16)) ^ 0x97;
  LODWORD(v86) = ((v68 ^ 0x4F) + *(_DWORD *)(v9 + 9272) + *(_DWORD *)(v9 + 9696) - v89 - 97) ^ 0x8E;
  *(_DWORD *)(v9 + 7272) = 16843009 * v86 - 1150398823 - ((33686018 * v86) & 0x76DC9D32);
  LODWORD(v75) = *(_DWORD *)(v9 + 7256);
  LODWORD(v86) = *(_DWORD *)(v9 + 9544) ^ v75;
  *(_DWORD *)(v9 + 9512) = v86;
  LODWORD(v52) = *(_DWORD *)(v9 + 7216);
  LODWORD(v69) = *(_DWORD *)(v9 + 9592) ^ v52;
  *(_DWORD *)(v9 + 8312) = v69;
  *(_DWORD *)(v9 + 8300) = *(_DWORD *)(v9 + 9688) - 760843624 - ((2 * *(_DWORD *)(v9 + 9688)) & 0xA54CE530);
  LODWORD(v86) = (v63
                + (v69 ^ 0x83F723C9)
                + (v86 ^ 0x3D3D3D3D)
                - 760843624
                - ((2 * (v63 + (v69 ^ 0x83F723C9) + (v86 ^ 0x3D3D3D3D))) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v9 + 8288) = -1752471747 * v86;
  LODWORD(v86) = -1752471747 * v86 - 760843624 - ((790023802 * v86) & 0xA54CE530);
  LODWORD(v86) = (v86 ^ 0xD2A67298) + (WORD1(v86) ^ 0xFFFF2D59) + 1;
  LODWORD(v58) = *(_DWORD *)(v9 + 8752);
  LODWORD(v86) = (v86 - 760843624 - ((2 * v86) & 0xA54CE530)) ^ 0xD2A672 ^ (((_DWORD)v86
                                                                           - 760843624
                                                                           - ((2 * (_DWORD)v86) & 0xA54CE530)) >> 8) ^ v58;
  LODWORD(v86) = 1001199237 * v86 - 760843624 - ((2002398474 * v86) & 0xA54CE530);
  LODWORD(v69) = v62 ^ 0xFE ^ (2 * ((v62 ^ 0xFE) & *(_DWORD *)(v9 + 7364)));
  LODWORD(v84) = *(_QWORD *)(v9 + 8176);
  v90 = *(_QWORD *)(v9 + 7280);
  v91 = *(_QWORD *)(v9 + 8040);
  v92 = *(_QWORD *)(v9 + 8160);
  LODWORD(v69) = ((unint64_t)(v69 & v84) << v90) | ((unint64_t)(v69 & v91) >> v92);
  LODWORD(v85) = v69 - 760843624 - ((2 * v69) & 0xA54CE530);
  *(_DWORD *)(v9 + 8328) = v85;
  LODWORD(v86) = (v86 ^ 0xD2A67298) + (WORD1(v86) ^ 0xFFFF2D59) + 1;
  v93 = v85 ^ 0xD2A67298;
  *(_DWORD *)(v9 + 8280) = v85 ^ 0xD2A67298;
  LODWORD(v82) = *(_DWORD *)(v9 + 7176);
  LODWORD(v89) = v89 ^ (2 * (v89 & v82));
  v94 = (unint64_t)(v89 & v84) << v90;
  v95 = v91;
  LOBYTE(v81) = v92;
  LODWORD(v89) = v94 ^ ((unint64_t)(v89 & v91) >> v92);
  LODWORD(v85) = v89 - 760843624 - ((2 * v89) & 0xA54CE530);
  *(_DWORD *)(v9 + 8332) = v85;
  LODWORD(v89) = 1795341837
               * (((v86 ^ (v86 >> 8))
                 + v93
                 - 760843624
                 - ((2 * ((v86 ^ (v86 >> 8)) + v93)) & 0xA54CE530)) ^ 0xD2A67298);
  LODWORD(v85) = v85 ^ 0xD2A67298;
  *(_DWORD *)(v9 + 8272) = v85;
  LODWORD(v86) = ((WORD1(v89) + v89) ^ ((WORD1(v89) + v89) >> 8)) + v85;
  LODWORD(v86) = v86 - 760843624 - ((2 * v86) & 0xA54CE530);
  LODWORD(v94) = -760843624 - 2047393163 * (v86 ^ 0xD2A67298) - ((200180970 * (v86 ^ 0xD2A67298)) & 0xA54CE530);
  LODWORD(v94) = (((v94 ^ WORD1(v94)) >> 8) ^ 0xD2A6A0) + (v94 ^ WORD1(v94) ^ 0xD2A6A03E);
  HIDWORD(v22) = v86 ^ 0x12A67298;
  LODWORD(v22) = v86 ^ 0xC0000000;
  LODWORD(v94) = ((v94 - 760843624 - ((2 * v94) & 0xA54CE530)) ^ 0xD2A67298) + *(_QWORD *)(v9 + 6280);
  *(_DWORD *)(v9 + 9528) = v94 - 760843624 - ((2 * v94) & 0xA54CE530);
  LODWORD(v85) = *(_DWORD *)(v9 + 8768) ^ *(_DWORD *)(v9 + 6944) ^ 0xD2A67298;
  *(_DWORD *)(v9 + 9696) = v85;
  *(_DWORD *)(v9 + 8308) = (v22 >> 29) ^ 0xC207154B ^ (((v85 ^ v86) << ((BYTE2(v89) & 3 ^ 3)
                                                                                                  + (BYTE2(v89) & 3))) | ((v85 ^ v86) >> 29));
  LODWORD(v94) = *(_DWORD *)(v9 + 9680) ^ v75;
  *(_DWORD *)(v9 + 8304) = v94;
  LODWORD(v86) = *(_DWORD *)(v9 + 9056) ^ v75;
  *(_DWORD *)(v9 + 9592) = v86;
  v96 = v75;
  LODWORD(v89) = (v94 ^ 0x5FFCBFE8)
               + (((v86 ^ 0xC2C2C2C2)
                 + (v94 ^ 0xA0034017)
                 - 760843624
                 - ((2 * ((v86 ^ 0xC2C2C2C2) + (v94 ^ 0xA0034017))) & 0xA54CE530)) ^ 0xD2A67298)
               + 1;
  *(_DWORD *)(v9 + 8900) = v89 - 760843624 - ((2 * v89) & 0xA54CE530);
  LODWORD(v86) = *(_DWORD *)(v9 + 9416) - 760843624 - ((2 * *(_DWORD *)(v9 + 9416)) & 0xA54CE530);
  LODWORD(v94) = ((v86 & 0x978B673D ^ 0x92826218) + (v86 & 0x978B673D ^ 0x5090525)) * (v86 ^ 0xD2A67298);
  LODWORD(v89) = 1001199237
               * ((v94 - WORD1(v94)) ^ 0xD2A67298 ^ ((v94 - WORD1(v94)) >> 8) ^ v58);
  LODWORD(v89) = v89 - WORD1(v89) - 760843624 - ((2 * (v89 - WORD1(v89))) & 0xA54CE530);
  LODWORD(v89) = ((v89 ^ 0xD274D4EA ^ (v89 >> 8))
                + v93
                - 760843624
                - ((2 * ((v89 ^ 0xD274D4EA ^ (v89 >> 8)) + v93)) & 0xA54CE530)) ^ 0xD2A67298;
  LODWORD(v20) = (1795341837 * v89 - 760843624 - ((-704283622 * v89) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v9 + 7928) = 1386640027;
  v97 = *(_DWORD *)(v9 + 9608) ^ v52;
  LODWORD(v59) = (v97 ^ 0x83F723C9)
               + 301028536
               + v20
               + ((v20 - 2 * ((v20 + 301028536) & 0x52A6729B ^ (1795341837 * v89) & 3) - 459815088) ^ 0x2D598D67)
               + 1;
  *(_DWORD *)(v9 + 8616) = (_DWORD)v59 - 760843624 - ((2 * (_DWORD)v59) & 0xA54CE530);
  v98 = *(_DWORD *)(v9 + 8416) ^ v52;
  v99 = (int)v52;
  LODWORD(v86) = (v86 ^ 0x2D598D67) - 568645611 * v94 + (v98 ^ 0x83F723C9) + 1;
  *(_DWORD *)(v9 + 8712) = v86 - 760843624 - ((2 * v86) & 0xA54CE530);
  LODWORD(v86) = *(_DWORD *)(v9 + 9720) ^ *(_DWORD *)(v9 + 9128);
  LODWORD(v86) = (v86 - 760843624 - ((2 * v86) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9560);
  LODWORD(v85) = *(_DWORD *)(v9 + 8136) ^ 0x52DF857D;
  *(_DWORD *)(v9 + 8032) = v85;
  LODWORD(v86) = (v86 + 255843827 - ((2 * v86) & 0x1E7FBBE6)) ^ v85;
  LODWORD(v89) = *(_DWORD *)(v9 + 9584) ^ v75;
  *(_DWORD *)(v9 + 9156) = v89;
  HIDWORD(v22) = v89 ^ 0x628F5;
  LODWORD(v22) = v89 ^ 0xF300000;
  v100 = (v22 >> 19) ^ __ROR4__((v86 - 760843624 - ((2 * v86) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9704), 19);
  v101 = *(_QWORD *)(v9 + 8168);
  v102 = *(_QWORD *)(v9 + 8992);
  LODWORD(v86) = ((unint64_t)(*(_DWORD *)(v9 + 9312) & *(_QWORD *)(v9 + 7008)) << v102)
               + ((*(_DWORD *)(v9 + 9312) & *(_DWORD *)(v9 + 7088)) >> v101);
  v103 = *(_DWORD *)(v9 + 7104);
  LODWORD(v86) = v103 & (4 * ((v86 ^ (2 * (v86 & v82))) & v82)) ^ v86 ^ (2 * (v86 & v82));
  v104 = *(_DWORD *)(v9 + 7144);
  v105 = *(_DWORD *)(v9 + 6756) & v103;
  LODWORD(v86) = v105 & (16 * (v86 & v104)) ^ v86;
  v106 = v82;
  *(_DWORD *)(v9 + 8848) = v86 ^ 0xD2A67298;
  LODWORD(v86) = (2 * (v86 & v82) - 760843624 - ((4 * (v86 & v82)) & 0xA54CE530)) ^ v86 ^ 0xD2A67298;
  v107 = *(_QWORD *)(v9 + 7264);
  v108 = *(_QWORD *)(v9 + 7208);
  v109 = v81;
  v110 = ((unint64_t)(v86 & v108) >> v81)
       + ((v86 & v107) << v101);
  v111 = *(_DWORD *)(v9 + 6936);
  LODWORD(v86) = (v66 ^ (2 * (v66 & v111))) & v106;
  v112 = 2 * v86;
  v113 = *(_DWORD *)(v9 + 6380) ^ (2 * v86 - ((4 * v86) & 0xD03E6524) - 400608622);
  if ((v66 & v111) == 0)
    v113 = *(_DWORD *)(v9 + 6616);
  v114 = v66 ^ (2 * ((v113 ^ 0x681F3292) & v112 ^ v66 & v111));
  v115 = v104;
  v116 = v105 & (16 * (v114 & v104)) ^ v114;
  *(_DWORD *)(v9 + 9272) = v116 ^ 0xD2A67298;
  v117 = (2 * (v116 & v106) - 760843624 - ((4 * (v116 & v106)) & 0xA54CE530)) ^ v116 ^ 0xD2A67298;
  v118 = v108;
  v119 = (unint64_t)(v117 & v108) >> v102;
  v120 = v102;
  v121 = v107;
  LODWORD(v119) = v119 ^ ((unint64_t)(v117 & v107) << v101);
  v122 = v101;
  v123 = ((unint64_t)((*(_DWORD *)(v9 + 9616) ^ 0xD2A67298) & *(_DWORD *)(v9 + 6992)) >> v101) ^ ((unint64_t)((*(_DWORD *)(v9 + 9616) ^ 0xD2A67298) & *(_QWORD *)(v9 + 7096)) << v109);
  v124 = ((v103 & (4 * ((v123 ^ (2 * (v123 & v106))) & v106)))
        - 760843624
        - ((2 * (v103 & (4 * ((v123 ^ (2 * (v123 & v106))) & v106)))) & 0xA54CE530)) ^ v123 ^ (2 * (v123 & v106));
  v125 = v105 & (16 * ((v124 ^ 0x2A67298) & v115)) ^ v124;
  v126 = *(_DWORD *)(v9 + 7364);
  v127 = (v125 ^ *(_DWORD *)(v9 + 6872)) & v126;
  *(_DWORD *)(v9 + 8776) = v125;
  v128 = *(_QWORD *)(v9 + 8176);
  v129 = ((unint64_t)((v125 ^ 0xD2A67298 ^ (2 * v127)) & v128) << v90)
       + ((unint64_t)((v125 ^ 0xD2A67298 ^ (2 * v127)) & v95) >> v102);
  v130 = *(_DWORD *)(v9 + 9424) ^ 0xD2A67298;
  v131 = (unint64_t)(v130 & *(_QWORD *)(v9 + 6984)) << v102;
  *(_QWORD *)(v9 + 9312) = v128 << v90;
  v132 = ((unint64_t)((v128 << v90) & v130) >> v90) + v131;
  LODWORD(v128) = *(_DWORD *)(v9 + 6720);
  v133 = v128 & (4 * ((v132 ^ (2 * (v132 & v126))) & v126)) ^ v132 ^ (2 * (v132 & v126));
  v134 = *(_DWORD *)(v9 + 6368);
  v135 = v134 & (16 * (v133 & v126)) ^ v133;
  *(_DWORD *)(v9 + 8264) = v135;
  v136 = v110 ^ __ROR4__(v100 ^ 0xB26F294A, 13) ^ v129 ^ (((unint64_t)((v135 ^ (2 * (v135 & v111))) & v118) >> v120)
                                                        + (((v135 ^ (2 * (v135 & v111))) & v121) << v122)) ^ v119;
  v137 = v99 ^ 0x51515151;
  v138 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 8964);
  *(_DWORD *)(v9 + 9616) = v138;
  v139 = (v136 - 760843624 - ((2 * v136) & 0xA54CE530)) ^ v138;
  v140 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 8536);
  *(_DWORD *)(v9 + 9148) = v140;
  v141 = (v139 - 760843624 - ((2 * v139) & 0xA54CE530)) ^ v140;
  v142 = v96 ^ 0x1064B05A;
  v143 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 8572);
  *(_DWORD *)(v9 + 9264) = v143;
  v144 = (v141 - 760843624 - ((2 * v141) & 0xA54CE530)) ^ v143;
  v145 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 9464);
  *(_DWORD *)(v9 + 9680) = v145;
  v146 = (v144 - 760843624 - ((2 * v144) & 0xA54CE530)) ^ v145;
  v147 = v96 ^ *(_DWORD *)(v9 + 9736) ^ 0x3C1819CE;
  *(_DWORD *)(v9 + 8680) = v147;
  v148 = (v146 - 760843624 - ((2 * v146) & 0xA54CE530)) ^ v147;
  v149 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 9408);
  *(_DWORD *)(v9 + 9664) = v149;
  v150 = (v148 - 760843624 - ((2 * v148) & 0xA54CE530)) ^ v149;
  v151 = *(_DWORD *)(v9 + 9052) ^ v96;
  *(_DWORD *)(v9 + 8240) = v151;
  *(_DWORD *)(v9 + 8912) = v151 ^ 0x6D1A3DA1;
  v152 = (v150 - 760843624 - ((2 * v150) & 0xA54CE530)) ^ v151 ^ 0x6D1A3DA1;
  v153 = v96 ^ *(_DWORD *)(v9 + 9640) ^ 0x862544ED;
  *(_DWORD *)(v9 + 8688) = v153;
  v154 = (v152 - 760843624 - ((2 * v152) & 0xA54CE530)) ^ v153;
  v155 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 9064);
  *(_DWORD *)(v9 + 8232) = v155;
  v156 = (v154 - 760843624 - ((2 * v154) & 0xA54CE530)) ^ v155;
  v157 = *(_DWORD *)(v9 + 9008) ^ v99;
  *(_DWORD *)(v9 + 8864) = v157;
  *(_DWORD *)(v9 + 8832) = v157 ^ 0xD962A460;
  v158 = (v156 - 760843624 - ((2 * v156) & 0xA54CE530)) ^ v157 ^ 0xD962A460;
  *(_DWORD *)(v9 + 9640) = v97 ^ 0x51515151;
  v159 = (v158 - 760843624 - ((2 * v158) & 0xA54CE530)) ^ v97 ^ 0x51515151;
  v160 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 9224);
  *(_DWORD *)(v9 + 8696) = v160;
  v161 = (v159 - 760843624 - ((2 * v159) & 0xA54CE530)) ^ v160;
  v162 = v161 - 760843624 - ((2 * v161) & 0xA54CE530);
  v163 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 9208);
  *(_DWORD *)(v9 + 9432) = v163;
  v164 = (v162 ^ v163) - 760843624 - ((2 * (v162 ^ v163)) & 0xA54CE530);
  v165 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 9072);
  *(_DWORD *)(v9 + 8784) = v165;
  v166 = (v164 ^ v165) - 760843624 - ((2 * (v164 ^ v165)) & 0xA54CE530);
  v167 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 9240);
  *(_DWORD *)(v9 + 8792) = v167;
  v168 = (v166 ^ v167) - 760843624 - ((2 * (v166 ^ v167)) & 0xA54CE530);
  v169 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 9080);
  *(_DWORD *)(v9 + 9424) = v169;
  v170 = (v168 ^ v169) - 760843624 - ((2 * (v168 ^ v169)) & 0xA54CE530);
  v171 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 8728) = v171;
  v172 = (v170 ^ v171) - 760843624 - ((2 * (v170 ^ v171)) & 0xA54CE530);
  v173 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 9448);
  *(_DWORD *)(v9 + 8968) = v173;
  v174 = (v172 ^ v173) - 760843624 - ((2 * (v172 ^ v173)) & 0xA54CE530);
  v175 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 9280);
  *(_DWORD *)(v9 + 8672) = v175;
  v176 = ((v174 ^ v175) - 760843624 - ((2 * (v174 ^ v175)) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 7224);
  v177 = *(_DWORD *)(v9 + 9552) ^ 0x1064B05A;
  *(_DWORD *)(v9 + 8920) = v177;
  v178 = (v176 - 760843624 - ((2 * v176) & 0xA54CE530)) ^ v177;
  v179 = v96 ^ *(_DWORD *)(v9 + 9648) ^ 0x840819FD;
  *(_DWORD *)(v9 + 9544) = v179;
  v180 = (v178 - 760843624 - ((2 * v178) & 0xA54CE530)) ^ v179;
  v181 = *(_DWORD *)(v9 + 9592) ^ 0x1064B05A;
  *(_DWORD *)(v9 + 8868) = v181;
  v182 = (v180 - 760843624 - ((2 * v180) & 0xA54CE530)) ^ v181;
  v183 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 8640);
  *(_DWORD *)(v9 + 9552) = v183;
  v184 = (v182 - 760843624 - ((2 * v182) & 0xA54CE530)) ^ v183;
  v185 = *(_DWORD *)(v9 + 8944) ^ v96;
  *(_DWORD *)(v9 + 8236) = v185;
  v186 = v96;
  *(_DWORD *)(v9 + 8544) = v185 ^ 0x1064B05A;
  v187 = (v184 - 760843624 - ((2 * v184) & 0xA54CE530)) ^ v185 ^ 0x1064B05A;
  v188 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 8888);
  v189 = (v187 - 760843624 - ((2 * v187) & 0xA54CE530)) ^ v188;
  LODWORD(v131) = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 8872);
  v190 = (v189 - 760843624 - ((2 * v189) & 0xA54CE530)) ^ v131;
  v191 = (v190 - 760843624 - ((2 * v190) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9696);
  v192 = *(_DWORD *)(v9 + 9656) ^ 0x1064B05A;
  *(_DWORD *)(v9 + 9416) = v192;
  v193 = (v191 - 760843624 - ((2 * v191) & 0xA54CE530)) ^ v192;
  v194 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 8576);
  *(_DWORD *)(v9 + 8400) = v194;
  v195 = (v193 - 760843624 - ((2 * v193) & 0xA54CE530)) ^ v194;
  v196 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 8648);
  *(_DWORD *)(v9 + 9200) = v196;
  v197 = (v195 - 760843624 - ((2 * v195) & 0xA54CE530)) ^ v196;
  v198 = ((*(_DWORD *)(v9 + 9036) ^ v99 ^ 0x418340D9)
        - 1494004419
        - 2 * ((*(_DWORD *)(v9 + 9036) ^ v99 ^ 0x418340D9) & 0x26F34D3F ^ (*(_DWORD *)(v9 + 9036) ^ v99) & 2)) ^ 0xA6F34D3D;
  v199 = (v198 - 2 * ((v198 + 1609097052) & 0x52A67299 ^ v198 & 1) - 1299230220) ^ 0xD2A67298;
  v200 = v199
       - 2
       * ((v199 + 538386596) & 0x52A67299 ^ (((*(_BYTE *)(v9 + 9036) ^ v99 ^ 0xD9)
                                                             + 61
                                                             - 2
                                                             * ((*(_BYTE *)(v9 + 9036) ^ v99 ^ 0xD9) & 0x3F ^ (*(_BYTE *)(v9 + 9036) ^ v99) & 2)) ^ 0x3D) & 1)
       - 222457028;
  v201 = (v197 - 760843624 - ((2 * v197) & 0xA54CE530)) ^ v200;
  v202 = v96 ^ 0x1064B05A ^ *(_DWORD *)(v9 + 8952);
  v203 = (v201 - 760843624 - ((2 * v201) & 0xA54CE530)) ^ v202;
  v204 = v142 ^ *(_DWORD *)(v9 + 8552);
  *(_DWORD *)(v9 + 8736) = v204;
  v205 = (v203 - 760843624 - ((2 * v203) & 0xA54CE530)) ^ v204;
  v206 = v142 ^ *(_DWORD *)(v9 + 8800);
  *(_DWORD *)(v9 + 9152) = v206;
  v207 = (v205 - 760843624 - ((2 * v205) & 0xA54CE530)) ^ v206;
  v208 = v142 ^ *(_DWORD *)(v9 + 8512);
  v209 = (v207 - 760843624 - ((2 * v207) & 0xA54CE530)) ^ v208;
  *(_DWORD *)(v9 + 8828) = v98 ^ 0x51515151;
  v210 = (v209 - 760843624 - ((2 * v209) & 0xA54CE530)) ^ v98 ^ 0x51515151;
  v211 = v142 ^ *(_DWORD *)(v9 + 8548);
  *(_DWORD *)(v9 + 9176) = v211;
  v212 = (v210 - 760843624 - ((2 * v210) & 0xA54CE530)) ^ v211;
  v213 = *(_DWORD *)(v9 + 9256) ^ 0x51515151;
  *(_DWORD *)(v9 + 8704) = v213;
  v214 = (v212 - 760843624 - ((2 * v212) & 0xA54CE530)) ^ v213;
  v215 = v142 ^ *(_DWORD *)(v9 + 8612);
  v216 = (v214 - 760843624 - ((2 * v214) & 0xA54CE530)) ^ v215;
  v217 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 8488);
  *(_DWORD *)(v9 + 9656) = v217;
  v218 = (v216 - 760843624 - ((2 * v216) & 0xA54CE530)) ^ v217;
  v219 = *(_DWORD *)(v9 + 9304) ^ 0x51515151;
  v220 = (v218 - 760843624 - ((2 * v218) & 0xA54CE530)) ^ v219;
  v221 = *(_DWORD *)(v9 + 9384) ^ v99;
  *(_DWORD *)(v9 + 9256) = v221 ^ 0xFAE42BD9;
  v222 = (v220 - 760843624 - ((2 * v220) & 0xA54CE530)) ^ v221 ^ 0xFAE42BD9;
  v223 = v142 ^ *(_DWORD *)(v9 + 9728);
  v224 = (v222 - 760843624 - ((2 * v222) & 0xA54CE530)) ^ v223;
  v225 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 9016);
  *(_DWORD *)(v9 + 9648) = v225;
  v226 = (v224 - 760843624 - ((2 * v224) & 0xA54CE530)) ^ v225;
  v227 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 8504);
  v228 = (v226 - 760843624 - ((2 * v226) & 0xA54CE530)) ^ v227;
  v229 = v228 - 760843624 - ((2 * v228) & 0xA54CE530);
  v230 = v99;
  v231 = (*(_DWORD *)(v9 + 8496) ^ v99 ^ 0x83F723C9)
       - 1494004419
       - 2 * ((*(_DWORD *)(v9 + 8496) ^ v99 ^ 0x83F723C9) & 0x26F34D3F ^ (*(_DWORD *)(v9 + 8496) ^ v99) & 2);
  *(_DWORD *)(v9 + 8628) = v231;
  *(_DWORD *)(v9 + 8260) = v231 ^ 0x74553FA5;
  v232 = v99 ^ 0x51515151 ^ *(_DWORD *)(v9 + 9024);
  *(_DWORD *)(v9 + 8212) = v232;
  v233 = ((v229 ^ v231 ^ 0x74553FA5) - 760843624 - ((2 * (v229 ^ v231 ^ 0x74553FA5)) & 0xA54CE530)) ^ v232;
  v234 = ((v186 ^ *(_DWORD *)(v9 + 9288) ^ 0xC59A14D7)
        + 610189181
        - ((2 * (v186 ^ *(_DWORD *)(v9 + 9288) ^ 0xC59A14D7)) & 0x48BD7EFA)) ^ 0x245EBF7D;
  v235 = (v234 - ((2 * v234 - 979344238) & 0xA54CE530) - 1250515743) ^ 0xD2A67298;
  v236 = v235 - ((2 * v235 + 979344238) & 0xA54CE530) - 271171505;
  *(_DWORD *)(v9 + 8980) = v236;
  v237 = (v233 - 760843624 - ((2 * v233) & 0xA54CE530)) ^ v236;
  v238 = v186 ^ *(_DWORD *)(v9 + 8840) ^ 0x878B01FD;
  v239 = (v237 - 760843624 - ((2 * v237) & 0xA54CE530)) ^ v238;
  v240 = *(_DWORD *)(v9 + 9012) ^ v230;
  *(_DWORD *)(v9 + 9160) = v240 ^ 0xC9A2B0B0 ^ (v239 - 760843624 - ((2 * v239) & 0xA54CE530));
  v241 = *(_DWORD *)(v9 + 7364);
  v242 = (2 * ((*(_DWORD *)(v9 + 7048) ^ 0x52E7E7E5) & v241)
        + 1390929893
        - ((4 * ((*(_DWORD *)(v9 + 7048) ^ 0x52E7E7E5) & v241)) & 0xA5CFCFC8)) ^ *(_DWORD *)(v9 + 7048);
  v243 = *(_QWORD *)(v9 + 7280);
  v244 = *(_QWORD *)(v9 + 8160);
  v245 = ((unint64_t)(v242 & *(_QWORD *)(v9 + 8176)) << v243) | ((unint64_t)(v242 & *(_QWORD *)(v9 + 8040)) >> v244);
  *(_DWORD *)(v9 + 9592) = v245 - 1344733341 - ((2 * v245) & 0x5FB1FEC6);
  v246 = *(_QWORD *)(v9 + 8168);
  v247 = ((unint64_t)(*(_DWORD *)(v9 + 9472) & *(_QWORD *)(v9 + 7096)) << v244) | ((unint64_t)(*(_DWORD *)(v9 + 9472) & *(_DWORD *)(v9 + 6992)) >> v246);
  v248 = *(_DWORD *)(v9 + 7104) & (4 * ((v247 ^ (2 * (v247 & v106))) & v106)) ^ v247 ^ (2 * (v247 & v106));
  *(_DWORD *)(v9 + 9304) = v248 ^ 0xD2A67298 ^ v105 & (16 * (v248 & *(_DWORD *)(v9 + 7144)));
  v249 = *(_QWORD *)(v9 + 8992);
  v250 = ((unint64_t)(*(_QWORD *)(v9 + 9312) & *(_DWORD *)(v9 + 9116)) >> v243) | ((unint64_t)(*(_DWORD *)(v9 + 9116) & *(_QWORD *)(v9 + 6984)) << v249);
  v251 = v128 & (4 * ((v250 ^ (2 * (v250 & v241))) & v241)) ^ v250 ^ (2 * (v250 & v241));
  *(_DWORD *)(v9 + 9312) = v251 ^ 0xD2A67298 ^ v134 & (16 * (v251 & v241));
  v252 = ((unint64_t)(*(_QWORD *)(v9 + 6968) & *(_DWORD *)(v9 + 9248)) >> v243) ^ ((unint64_t)(*(_DWORD *)(v9 + 9248) & *(_QWORD *)(v9 + 7000)) << v244);
  v253 = v128 & (4 * ((v252 ^ (2 * (v252 & v241))) & v241)) ^ v252 ^ (2 * (v252 & v241));
  *(_DWORD *)(v9 + 9472) = v253 ^ 0xD2A67298 ^ v134 & (16 * (v253 & v241));
  v254 = ((unint64_t)((*(_DWORD *)(v9 + 9296) ^ 0xD2A67298) & *(_QWORD *)(v9 + 7008)) << v249) ^ ((unint64_t)((*(_DWORD *)(v9 + 9296) ^ 0xD2A67298) & *(_DWORD *)(v9 + 7088)) >> v246);
  v255 = v128 & (4 * ((v254 ^ (2 * (v254 & v241))) & v241)) ^ v254 ^ (2 * (v254 & v241));
  *(_DWORD *)(v9 + 8816) = v255 ^ 0xD2A67298 ^ v134 & (16 * (v255 & v241));
  v256 = *(_DWORD *)(v9 + 9704) ^ *(_DWORD *)(v9 + 9560);
  LODWORD(v244) = *(_DWORD *)(v9 + 9128) ^ (v256 - 760843624 - ((2 * v256) & 0xA54CE530));
  v257 = *(_DWORD *)(v9 + 9720);
  v258 = v257 ^ (v244 - 760843624 - ((2 * v244) & 0xA54CE530));
  v259 = *(_DWORD *)(v9 + 9156) ^ 0xDD905A6D;
  *(_DWORD *)(v9 + 9384) = v259;
  v260 = (v258 - 760843624 - ((2 * v258) & 0xA54CE530)) ^ v259;
  v261 = (v260 - 760843623 + ~((2 * v260) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9432);
  v262 = *(_DWORD *)(v9 + 9440);
  LODWORD(v128) = *(_DWORD *)(v9 + 9080);
  v263 = ((v262 ^ v128) - 760843624 - ((2 * (v262 ^ v128)) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9640);
  v264 = (v263 - 760843624 - ((2 * v263) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8696);
  v265 = *(_DWORD *)(v9 + 8784) ^ *(_DWORD *)(v9 + 8864) ^ *(_DWORD *)(v9 + 8792) ^ v221 ^ (v264
                                                                                          - 760843624
                                                                                          - ((2 * v264) & 0xA54CE530)) ^ (v261 - 760843624 - ((2 * v261) & 0xA54CE530));
  v266 = ((v265 ^ 0x23868FB9) - 760843624 - 2 * ((v265 ^ 0x23868FB9) & 0x52A6729A ^ v265 & 2)) ^ *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 8764) = v219;
  v267 = (v266 - 760843624 - ((2 * v266) & 0xA54CE530)) ^ v219;
  *(_DWORD *)(v9 + 9296) = v131;
  v268 = (v267 - 760843624 - ((2 * v267) & 0xA54CE530)) ^ v131;
  v269 = (v268 - 760843624 - ((2 * v268) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9696);
  *(_DWORD *)(v9 + 9116) = v188;
  v270 = (v269 - 760843624 - ((2 * v269) & 0xA54CE530)) ^ v188;
  v271 = (v270 - 760843624 - ((2 * v270) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8544);
  v272 = (v271 - 760843624 - ((2 * v271) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9552);
  LODWORD(v131) = *(_DWORD *)(v9 + 8232);
  v273 = (v272 - 760843624 - ((2 * v272) & 0xA54CE530)) ^ v131;
  v274 = (v273 - 760843624 - ((2 * v273) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8688);
  v275 = (v274 - 760843624 - ((2 * v274) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8912);
  v276 = (v275 - 760843624 - ((2 * v275) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8968);
  v277 = (v276 - 760843624 - ((2 * v276) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8672);
  v278 = (v277 - 760843624 - ((2 * v277) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 7224);
  v279 = (v278 - 760843624 - ((2 * v278) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9664);
  v280 = (v279 - 760843624 - ((2 * v279) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8920);
  v281 = (v280 - 760843624 - ((2 * v280) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9680);
  v282 = (v281 - 760843624 - ((2 * v281) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9544);
  v283 = (v282 - 760843624 - ((2 * v282) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8680);
  v284 = (v283 - 760843624 - ((2 * v283) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8868);
  v285 = (v284 - 760843624 - ((2 * v284) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9416);
  v286 = (v285 - 760843624 - ((2 * v285) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9200);
  *(_DWORD *)(v9 + 8912) = v202;
  v287 = (v286 - 760843624 - ((2 * v286) & 0xA54CE530)) ^ v202;
  v288 = (v287 - 760843624 - ((2 * v287) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8400);
  *(_DWORD *)(v9 + 8864) = v200;
  v289 = (v288 - 760843624 - ((2 * v288) & 0xA54CE530)) ^ v200;
  *(_DWORD *)(v9 + 8544) = v208;
  v290 = (v289 - 760843624 - ((2 * v289) & 0xA54CE530)) ^ v208;
  v291 = (v290 - 760843624 - ((2 * v290) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8736);
  v292 = (v291 - 760843624 - ((2 * v291) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9152);
  v293 = (v292 - 760843624 - ((2 * v292) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8828);
  v294 = (v293 - 760843624 - ((2 * v293) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9176);
  v295 = (v294 - 760843624 - ((2 * v294) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8704);
  *(_DWORD *)(v9 + 8828) = v215;
  v296 = (v295 - 760843624 - ((2 * v295) & 0xA54CE530)) ^ v215;
  v297 = (v296 - 760843624 - ((2 * v296) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9264);
  v298 = (v297 - 760843624 - ((2 * v297) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9148);
  *(_DWORD *)(v9 + 8704) = v223;
  v299 = (v298 - 760843624 - ((2 * v298) & 0xA54CE530)) ^ v223;
  v300 = (v299 - 760843624 - ((2 * v299) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8868) = v227;
  v301 = (v300 - 760843624 - ((2 * v300) & 0xA54CE530)) ^ v227;
  v302 = *(_DWORD *)(v9 + 8628) ^ 0x9A19968C ^ (v301 - 760843624 - ((2 * v301) & 0xA54CE530));
  v303 = (v302 - 760843624 - ((2 * v302) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9648);
  v304 = *(_DWORD *)(v9 + 8212);
  v305 = (v303 - 760843624 - ((2 * v303) & 0xA54CE530)) ^ v304;
  v306 = (v305 - 760843624 - ((2 * v305) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8532) = v238;
  v307 = (v306 - 760843624 - ((2 * v306) & 0xA54CE530)) ^ v238;
  *(_DWORD *)(v9 + 9248) = v240 ^ 0x6DBB8AE0 ^ (v307 - 760843624 - ((2 * v307) & 0xA54CE530));
  *(_DWORD *)(v9 + 9504) ^= v142;
  *(_DWORD *)(v9 + 9640) = v142 ^ *(_DWORD *)(v9 + 9632);
  *(_DWORD *)(v9 + 9632) = v142 ^ *(_DWORD *)(v9 + 9104);
  *(_DWORD *)(v9 + 8664) ^= v142;
  *(_DWORD *)(v9 + 9104) = v142 ^ *(_DWORD *)(v9 + 8748);
  *(_DWORD *)(v9 + 8748) = v142 ^ *(_DWORD *)(v9 + 8904);
  v308 = v142 ^ *(_DWORD *)(v9 + 9328);
  v309 = *(_DWORD *)(v9 + 8752);
  *(_DWORD *)(v9 + 8904) = v308;
  v310 = *(_DWORD *)(v9 + 7216);
  *(_DWORD *)(v9 + 8628) = v310 ^ 0x83F723C9 ^ *(_DWORD *)(v9 + 8860);
  *(_DWORD *)(v9 + 8024) = v137 ^ *(_DWORD *)(v9 + 8656);
  *(_DWORD *)(v9 + 8656) = v137 ^ *(_DWORD *)(v9 + 8360);
  *(_DWORD *)(v9 + 9696) = v137 ^ *(_DWORD *)(v9 + 8368);
  *(_DWORD *)(v9 + 8860) = v137 ^ *(_DWORD *)(v9 + 9096);
  *(_DWORD *)(v9 + 8880) ^= v137;
  *(_DWORD *)(v9 + 9328) = v137 ^ *(_DWORD *)(v9 + 9120);
  *(_DWORD *)(v9 + 9120) = v137 ^ *(_DWORD *)(v9 + 8408);
  *(_DWORD *)(v9 + 9096) = v137 ^ *(_DWORD *)(v9 + 9368);
  *(_DWORD *)(v9 + 9368) = v137 ^ *(_DWORD *)(v9 + 9496);
  v311 = v137 ^ *(_DWORD *)(v9 + 8464);
  v312 = ((*(_DWORD *)(v9 + 9584) ^ 0xCDF4EA37 ^ v257)
        - 760843624
        - ((2 * (*(_DWORD *)(v9 + 9584) ^ 0xCDF4EA37 ^ v257)) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9072);
  v313 = (v312 - 760843624 - ((2 * v312) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9224);
  v314 = *(_DWORD *)(v9 + 9008) ^ 0x8833F531 ^ (v313 - 760843624 - ((2 * v313) & 0xA54CE530));
  v315 = (v314 - 760843624 - ((2 * v314) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9064);
  v316 = (v315 - 760843624 - ((2 * v315) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8376);
  v317 = (v316 - 1344733341 - ((2 * v316) & 0x5FB1FEC6)) ^ *(_DWORD *)(v9 + 9052);
  v318 = (v317 - 760843624 - ((2 * v317) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9280);
  v319 = (v318 - 760843624 - ((2 * v318) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9408);
  v320 = (v319 - 760843624 - ((2 * v319) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8344);
  v321 = (v320 - 760843624 - ((2 * v320) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8640);
  v322 = (v321 - 760843624 - ((2 * v321) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8648);
  v323 = *(_DWORD *)(v9 + 9036) ^ 0xC2746310 ^ (v322 - 760843624 - ((2 * v322) & 0xA54CE530));
  v324 = (v323 - 760843624 - ((2 * v323) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8576);
  v325 = (v324 - 760843624 - ((2 * v324) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8552);
  v326 = (v325 - 760843624 - ((2 * v325) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8512);
  v327 = (v326 - 760843624 - ((2 * v326) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8800);
  v328 = (v327 - 760843624 - ((2 * v327) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8416);
  v329 = (v328 - 760843624 - ((2 * v328) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8548);
  v330 = (v329 - 760843624 - ((2 * v329) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8488);
  v331 = (v330 - 760843624 - ((2 * v330) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8356);
  v332 = (v331 - 760843624 - ((2 * v331) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9728);
  v333 = (v332 - 760843624 - ((2 * v332) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8964);
  *(_DWORD *)(v9 + 9224) = *(_DWORD *)(v9 + 8352) ^ *(_DWORD *)(v9 + 9012) ^ (v333
                                                                            - 760843624
                                                                            - ((2 * v333) & 0xA54CE530));
  v334 = *(_DWORD *)(v9 + 9736) ^ *(_DWORD *)(v9 + 9056);
  v335 = v244 ^ *(_DWORD *)(v9 + 9240) ^ ((v334 ^ 0x2C7CA994)
                                        - 760843624
                                        - 2 * ((v334 ^ 0x2C7CA994) & 0x52A6729A ^ v334 & 2));
  v336 = (v335 - 760843623 + ~((2 * v335) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9208);
  v337 = (v336 - 760843624 - ((2 * v336) & 0xA54CE530)) ^ v128;
  v338 = (v337 - 760843624 - ((2 * v337) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9608);
  v339 = (v338 - 760843624 - ((2 * v338) & 0xA54CE530)) ^ v262;
  v340 = (v339 - 760843624 - ((2 * v339) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9448);
  v341 = (v340 - 760843623 + ~((2 * v340) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 7160);
  v342 = (v341 - 760843624 - ((2 * v341) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8432);
  v343 = (v342 - 760843624 - ((2 * v342) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9464);
  v344 = (v343 - 760843624 - ((2 * v343) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8944);
  v345 = (v344 - 760843624 - ((2 * v344) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8888);
  v346 = (v345 - 760843624 - ((2 * v345) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8872);
  v347 = (v346 - 760843624 - ((2 * v346) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8768);
  v348 = (v347 - 760843624 - ((2 * v347) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8744);
  v349 = (v348 - 760843624 - ((2 * v348) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8952);
  v350 = (v349 - 760843624 - ((2 * v349) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8632);
  v351 = (v350 - 760843624 - ((2 * v350) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8612);
  v352 = (v351 - 760843624 - ((2 * v351) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8608);
  v353 = (v352 - 760843623 + ~((2 * v352) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8572);
  v354 = (v353 - 760843624 - ((2 * v353) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8536);
  v355 = (v354 - 760843623 + ~((2 * v354) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8504);
  v356 = (v355 - 760843624 - ((2 * v355) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8496);
  v357 = (v356 - 760843624 - ((2 * v356) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9016);
  *(_DWORD *)(v9 + 9408) = *(_DWORD *)(v9 + 9288) ^ 0x758D615 ^ *(_DWORD *)(v9 + 9024) ^ (v357
                                                                                        - 760843624
                                                                                        - ((2 * v357) & 0xA54CE530));
  v358 = *(_DWORD *)(v9 + 8288) - HIWORD(*(_DWORD *)(v9 + 8288));
  v359 = v309 ^ ((v358 ^ (v358 >> 8)) - 760843624 - ((2 * (v358 ^ (v358 >> 8))) & 0xA54CE530));
  v360 = *(_DWORD *)(v9 + 8240) ^ v359 ^ 0xBFBC4F39 ^ (v359 - 760843624 - ((2 * v359) & 0xA54CE530));
  v361 = ((1001199237 * v359 - ((1001199237 * v359) >> 16)) ^ ((1001199237 * v359 - ((1001199237 * v359) >> 16)) >> 8))
       + *(_DWORD *)(v9 + 8280);
  v362 = (v361 - 760843623 + ~((2 * v361) & 0xA54CE530)) ^ 0xD2A67298;
  v363 = 1795341837 * v362 - 760843624 - ((-704283622 * v362) & 0xA54CE530);
  v364 = ((*(_DWORD *)(v9 + 8300) ^ 0xD2A67298)
        - 1480045081
        + ~(2 * (((*(_DWORD *)(v9 + 8300) ^ 0xD2A67298) + 1428282190) & 0x52A67299 ^ *(_DWORD *)(v9 + 9688) & 1))) ^ 0xD2A67298;
  v365 = (((HIWORD(v363) ^ 0xD2A6) + (v363 ^ 0xD2A67298)) ^ (((HIWORD(v363) ^ 0xD2A6) + (v363 ^ 0xD2A67298)) >> 8))
       + *(_DWORD *)(v9 + 8272);
  v366 = v365 - 760843623 + ~((2 * v365) & 0xA54CE530);
  v367 = -2047393163 * (v366 ^ 0xD2A67298);
  *(_DWORD *)(v9 + 9156) = -760843623;
  LODWORD(v246) = (*(_DWORD *)(v9 + 8236) ^ 0xC2C2C2C2) + (v366 ^ 0xD2A67298) + ((2 * v366) ^ 0x5AB31ACF) + 1;
  LODWORD(v244) = ((v246 - 760843624 - ((2 * v246) & 0xA54CE530)) ^ 0xD2A67298) + (v366 ^ 0xD2A67298);
  *(_DWORD *)(v9 + 8944) = v244 - 760843624 - ((2 * v244) & 0xA54CE530);
  LODWORD(v244) = (((v367 | 0x96D15B4B) - 760843623 + ((200180970 * (v366 ^ 0xD2A67298)) & 0x804C4120 ^ 0xDAFF5BEF)) ^ 0xD2A67298) & v367;
  v368 = v366 ^ v131 ^ (-760843624 - 1314456099 * v244 - ((1666055098 * v244) & 0xA54CE530));
  v369 = (v367 ^ HIWORD(v367)) + *(_QWORD *)(v9 + 6280) + ((v367 ^ HIWORD(v367)) >> 8);
  *(_DWORD *)(v9 + 6288) = 2 * v369;
  v370 = v369 - 760843624 - ((2 * v369) & 0xA54CE530);
  LODWORD(v244) = ((8 * v370) ^ 0x1F619ACC) & 0xCA0A0140 ^ 0x1BA42D40 ^ (((2 * ((8 * v370) ^ 0x1F619ACC)) & 0x94100028)
                                                                       - (((8 * v370) ^ 0x1F619ACC) & 0xCA0A015C)
                                                                       - 1851380408);
  v371 = (v244 | 0x47FFE3EE) - (v244 | 0xB8001C11);
  v372 = ((((((8 * v370) ^ 0x6ACC6B3F) + 1) ^ 0xFD75733F) & 0xA4C4428C)
        - (((((8 * v370) ^ 0x6ACC6B3F) + 1) ^ 0xFD75733F) & 0x8040428C)
        + (((((8 * v370) ^ 0x6ACC6B3F) + 1) ^ 0xFD75733F) & 0x80404288 ^ 0x89695AAA)) ^ ((((8 * v370) ^ 0x6ACC6B3F) + 1) ^ 0xFD75733F) & 0xA4C44294;
  v373 = *(_QWORD *)(v9 + 7280);
  v374 = (*(_QWORD *)(v9 + 6680) << v373) ^ *(_QWORD *)(v9 + 6608);
  *(_DWORD *)(v9 + 7920) = v374 - 760843624 - ((2 * v374) & 0xA54CE530);
  v375 = ((*(_QWORD *)(v9 + 6600) << v373) - 760843624 - ((2 * (*(_QWORD *)(v9 + 6600) << v373)) & 0xA54CE530)) ^ 0xD2A67298 | *(_DWORD *)(v9 + 6592);
  *(_DWORD *)(v9 + 7912) = v375 - 760843624 - ((2 * v375) & 0xA54CE530);
  v376 = *(_QWORD *)(v9 + 6584) << v373;
  v377 = *(_QWORD *)(v9 + 6576);
  *(_DWORD *)(v9 + 7904) = (v376 ^ v377) - 760843624 - ((2 * (v376 ^ v377)) & 0xA54CE530);
  v378 = (*(_QWORD *)(v9 + 6552) << v373) | *(_QWORD *)(v9 + 6544);
  *(_DWORD *)(v9 + 7888) = v378 - 760843624 - ((2 * v378) & 0xA54CE530);
  v379 = *(_QWORD *)(v9 + 6672) << v373;
  *(_QWORD *)(v9 + 7880) = (v379 & 0x18 ^ 0x18) + (v379 & 0x18);
  v380 = *(_DWORD *)(v9 + 8136);
  v381 = v380 ^ *(_DWORD *)(v9 + 8132);
  *(_DWORD *)(v9 + 7872) = 1386640030;
  *(_DWORD *)(v9 + 6296) = v381;
  *(_DWORD *)(v9 + 6292) = v381 ^ 0xE05FF630;
  *(_DWORD *)(v9 + 7864) = (v381 ^ 0xE05FF630) - 760843624 - 2 * ((v381 ^ 0xE05FF630) & 0x52A6729E ^ v381 & 6);
  v382 = ((*(_QWORD *)(v9 + 6664) << v373) - 760843624 - ((2 * (*(_QWORD *)(v9 + 6664) << v373)) & 0xA54CE530)) ^ 0xD2A67298 | *(_DWORD *)(v9 + 6656);
  *(_DWORD *)(v9 + 7856) = v382 - 760843624 - ((2 * v382) & 0xA54CE530);
  v383 = (*(_QWORD *)(v9 + 6520) << v373) | v377;
  *(_DWORD *)(v9 + 8020) = v383 - 760843624 - ((2 * v383) & 0xA54CE530);
  v384 = -760843624 - 1457956229 * (v380 ^ 0x5DE0588E) - ((1379054838 * (v380 ^ 0x5DE0588E)) & 0xA54CE530);
  v385 = (*(_QWORD *)(v9 + 6488) << v373) | *(_QWORD *)(v9 + 6480);
  *(_DWORD *)(v9 + 7768) = v385 - 760843624 - ((2 * v385) & 0xA54CE530);
  v386 = (*(_QWORD *)(v9 + 6496) << v373) + *(_DWORD *)(v9 + 6336);
  *(_DWORD *)(v9 + 7752) = v386 - 760843624 - ((2 * v386) & 0xA54CE530);
  v387 = (*(_QWORD *)(v9 + 6320) << v373) + *(_DWORD *)(v9 + 6332);
  *(_DWORD *)(v9 + 7720) = v387 - 760843624 - ((2 * v387) & 0xA54CE530);
  *(_DWORD *)(v9 + 7712) = (*(_QWORD *)(v9 + 6472) << v373)
                         - 760843624
                         - ((2 * (*(_QWORD *)(v9 + 6472) << v373)) & 0xA54CE530);
  v388 = ((*(_QWORD *)(v9 + 6640) << v373) - 760843624 - ((2 * (*(_QWORD *)(v9 + 6640) << v373)) & 0xA54CE530)) ^ 0xD2A67298 | *(_DWORD *)(v9 + 6468);
  *(_DWORD *)(v9 + 7704) = v388 - 760843624 - ((2 * v388) & 0xA54CE530);
  v389 = (*(_QWORD *)(v9 + 6744) << v373) + *(_QWORD *)(v9 + 6344);
  *(_DWORD *)(v9 + 7696) = v389 - 760843624 - ((2 * v389) & 0xA54CE530);
  v390 = *(_QWORD *)(v9 + 6440) << v373;
  v391 = *(_QWORD *)(v9 + 6432);
  *(_DWORD *)(v9 + 7576) = v390 + v391 - 760843624 - ((2 * (v390 + v391)) & 0xA54CE530);
  *(_DWORD *)(v9 + 7568) = (v390 | v391) - 760843624 - ((2 * (v390 | v391)) & 0xA54CE530);
  v392 = !(((_BYTE)v390 + (_BYTE)v391) & 1) + ((v390 + v391) & 1);
  LODWORD(v377) = (*(_QWORD *)(v9 + 6736) << v373) | *(_QWORD *)(v9 + 6416);
  *(_DWORD *)(v9 + 7560) = v377 - 760843624 - ((2 * v377) & 0xA54CE530);
  LODWORD(v377) = (*(_QWORD *)(v9 + 6392) << v373) | *(_QWORD *)(v9 + 6384);
  *(_DWORD *)(v9 + 7512) = v377 - 760843624 - ((2 * v377) & 0xA54CE530);
  v393 = *(_DWORD *)(v9 + 7256);
  LODWORD(v377) = v393 ^ *(_DWORD *)(v9 + 9392);
  v394 = v310 ^ *(_DWORD *)(v9 + 9004);
  LODWORD(v128) = v310 ^ *(_DWORD *)(v9 + 8932);
  v395 = v310 ^ *(_DWORD *)(v9 + 8984);
  *(_DWORD *)(v9 + 9240) = *(_DWORD *)(v9 + 8392) ^ 0xB8902147;
  *(_DWORD *)(v9 + 8536) = __ROR4__(*(_DWORD *)(v9 + 8308), 3) ^ 0xAAE69031;
  *(_DWORD *)(v9 + 9052) = *(_DWORD *)(v9 + 8312) ^ 0x51515151;
  *(_DWORD *)(v9 + 8964) = *(_DWORD *)(v9 + 9512) ^ 0x1064B05A;
  *(_DWORD *)(v9 + 8952) = *(_DWORD *)(v9 + 8304) ^ 0x72A5328F;
  *(_DWORD *)(v9 + 9440) = v240 ^ 0x51515151;
  *(_DWORD *)(v9 + 9280) = *(_DWORD *)(v9 + 8264) ^ 0xD2A67298;
  *(_DWORD *)(v9 + 9464) = v310 ^ *(_DWORD *)(v9 + 9136) ^ 0x8EA2E48B;
  *(_DWORD *)(v9 + 8888) = v310 ^ *(_DWORD *)(v9 + 8424) ^ 0x9002EC4A;
  *(_DWORD *)(v9 + 9080) = v393 ^ *(_DWORD *)(v9 + 8520) ^ 0xF64DE6AA;
  *(_DWORD *)(v9 + 9288) = v393 ^ *(_DWORD *)(v9 + 8472) ^ 0x825D7775;
  v396 = v393 ^ *(_DWORD *)(v9 + 8480) ^ 0x3CD8558B;
  *(_DWORD *)(v9 + 8872) = v393 ^ *(_DWORD *)(v9 + 9376) ^ 0xBBD0EEF7;
  v397 = v377 ^ 0x5A1AAE23;
  *(_DWORD *)(v9 + 8768) = v394 ^ 0x77F1F689;
  *(_DWORD *)(v9 + 9376) = v128 ^ 0xA53B64EA;
  *(_DWORD *)(v9 + 8800) = v395 ^ 0x1C017221;
  v398 = v310 ^ *(_DWORD *)(v9 + 8440) ^ 0xAE35FF29;
  v399 = v310 ^ *(_DWORD *)(v9 + 8456);
  v400 = *(_DWORD *)(v9 + 9432);
  *(_DWORD *)(v9 + 9448) = v399 ^ 0x3AF425E8;
  *(_DWORD *)(v9 + 8612) = v364 - ((2 * v364 + 1438402916) & 0xA54CE530) - 41642166;
  v401 = v371 - 1207952367;
  v402 = *(_DWORD *)(v9 + 8024);
  *(_QWORD *)(v9 + 7976) = (((((8 * v370) ^ 0x3F) + 1) ^ 0x3F) & 0x88 ^ 0xAA ^ ((((8 * v370) ^ 0x3F) + 1) ^ 0x3F) & 0x94) & 0xBC ^ 0xB4u;
  *(_QWORD *)(v9 + 9736) = (v371 + 17) ^ 0xEAu;
  v403 = (v371 - 1207952367) ^ 0xCDFDE3EA;
  if (((33547246 - v371) & 0x1000000) != 0)
    v404 = -16777216;
  else
    v404 = 0x1000000;
  *(_DWORD *)(v9 + 7848) = v403 + 2;
  *(_DWORD *)(v9 + 7832) = v372 & 0xFFFFFFFC ^ 0x89695AB7;
  *(_DWORD *)(v9 + 7824) = (*(_QWORD *)(v9 + 6568) << v373) | *(_QWORD *)(v9 + 6560);
  *(_DWORD *)(v9 + 7816) = v379 ^ *(_QWORD *)(v9 + 6536);
  *(_DWORD *)(v9 + 7744) = v376 + *(_QWORD *)(v9 + 6512);
  *(_DWORD *)(v9 + 7736) = (*(_QWORD *)(v9 + 6528) << v373) + *(_QWORD *)(v9 + 6504);
  *(_DWORD *)(v9 + 7728) = v384 ^ *(_DWORD *)(v9 + 6648);
  *(_DWORD *)(v9 + 9512) = v372 ^ 0x5BCF282E;
  *(_DWORD *)(v9 + 7680) = v372 ^ 0x89695AB7;
  *(_DWORD *)(v9 + 7672) = (*(_QWORD *)(v9 + 6632) << v373) | *(_QWORD *)(v9 + 6448);
  *(_DWORD *)(v9 + 7936) = (v404 + v403) ^ 0xD3A67298;
  *(_DWORD *)(v9 + 7500) = (*(_QWORD *)(v9 + 6352) << v373) + *(_QWORD *)(v9 + 6408);
  *(_DWORD *)(v9 + 7488) = (*(_QWORD *)(v9 + 6400) << v373) ^ *(_DWORD *)(v9 + 6628);
  *(_DWORD *)(v9 + 7552) = (v392 & 2) + 66;
  *(_DWORD *)(v9 + 9036) = v304;
  v405 = *(_DWORD *)(v9 + 8328);
  *(_DWORD *)(v9 + 9008) = *(_DWORD *)(v9 + 8400);
  *(_DWORD *)(v9 + 9688) = *(_DWORD *)(v9 + 9720);
  v406 = *(_DWORD *)(v9 + 9560);
  *(_DWORD *)(v9 + 9004) = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 9584) = v397;
  *(_DWORD *)(v9 + 8932) = *(_DWORD *)(v9 + 9648);
  *(_DWORD *)(v9 + 9496) = *(_DWORD *)(v9 + 8384);
  *(_DWORD *)(v9 + 9656) = *(_DWORD *)(v9 + 9704);
  *(_DWORD *)(v9 + 8984) = *(_DWORD *)(v9 + 8260);
  v407 = *(_DWORD *)(v9 + 8784);
  v408 = *(_DWORD *)(v9 + 8332);
  *(_DWORD *)(v9 + 7688) = v401;
  *(_DWORD *)(v9 + 9608) = v401 ^ 0x1F5B9172;
  *(_DWORD *)(v9 + 7248) = v370;
  *(_DWORD *)(v9 + 7664) = v370 ^ 0xD2A67298;
  *(_DWORD *)(v9 + 7808) = (v370 ^ 0xD2A67298) + 2;
  v409 = *(_QWORD *)(v9 + 6456) << v373;
  v410 = *(_QWORD *)(v9 + 7792);
  *(_QWORD *)(v9 + 7656) = v409;
  *(_DWORD *)(v9 + 7648) = v409 + v410;
  v411 = *(_QWORD *)(v9 + 6728) << v373;
  v412 = *(_QWORD *)(v9 + 6424);
  *(_QWORD *)(v9 + 6136) = v411;
  *(_DWORD *)(v9 + 7544) = v411 ^ v412;
  *(_DWORD *)(v9 + 8784) = *(_DWORD *)(v9 + 7224);
  *(_DWORD *)(v9 + 8648) = v396;
  *(_DWORD *)(v9 + 8752) = v309;
  LODWORD(v411) = *(_DWORD *)(v9 + 9456) ^ 0x2D598D67;
  v413 = *(_DWORD *)(v9 + 9052);
  v414 = v411;
  *(_DWORD *)(v9 + 8552) = v411;
  v415 = *(_DWORD *)(v9 + 9576);
  *(_DWORD *)(v9 + 7532) = v415 + 6090;
  v416 = *(_DWORD *)(v9 + 8964);
  *(_DWORD *)(v9 + 9648) = v416;
  *(_DWORD *)(v9 + 9012) = v415 ^ 0x1DDF;
  LODWORD(v412) = (v413 ^ 0xD2A67298) + v411 + ((v415 + 6090) ^ 0x258F) + (v416 ^ ((v415 ^ 0x1DDF) + 760839499));
  LODWORD(v412) = -1752471747 * ((v412 - 760843624 - ((2 * v412) & 0xA54CE530)) ^ 0xD2A67298);
  LODWORD(v412) = (v412 - WORD1(v412)) ^ ((v412 - WORD1(v412)) >> 8);
  LODWORD(v412) = 1001199237 * ((v412 - 760843624 - ((2 * v412) & 0xA54CE530)) ^ v309);
  LODWORD(v411) = v412 - WORD1(v412) - 760843624 - ((2 * (v412 - WORD1(v412))) & 0xA54CE530);
  *(_DWORD *)(v9 + 8840) = v411;
  *(_DWORD *)(v9 + 9072) = v405 ^ 0xD2A67298;
  v417 = v405;
  *(_DWORD *)(v9 + 8424) = v405;
  LODWORD(v412) = 1795341837 * ((v411 ^ 0xD274D4EA ^ (v411 >> 8)) + (v405 ^ 0xD2A67298));
  v418 = v408;
  *(_DWORD *)(v9 + 9064) = v408;
  LODWORD(v412) = ((v412 + WORD1(v412)) ^ ((v412 + WORD1(v412)) >> 8)) + (v408 ^ 0xD2A67298);
  LODWORD(v412) = -2047393163 * ((v412 - 760843624 - ((2 * v412) & 0xA54CE530)) ^ 0xD2A67298);
  v419 = *(_QWORD *)(v9 + 6280);
  LODWORD(v412) = (v412 ^ WORD1(v412)) + v419 + ((v412 ^ WORD1(v412)) >> 8);
  LODWORD(v412) = v412 - 760843624 - ((2 * v412) & 0xA54CE530);
  *(_DWORD *)(v9 + 9432) = v412;
  *(_DWORD *)(v9 + 8432) = 8 * v412;
  LODWORD(v412) = ((8 * v412) ^ 0xDBDDAE22) & 0x803706A0 ^ 0xE1A51F1A ^ (511500869
                                                                       - (((8 * v412) ^ 0xDBDDAE22) & 0x800304B8 | 0x1E7CE245)
                                                                       + (((8 * v412) ^ 0xDBDDAE22) & 0x340200 | 0xE1831DBA));
  v420 = ((2 * v412) & 0xC121CBBC) - v412;
  *(_DWORD *)(v9 + 9208) = v406;
  LODWORD(v412) = *(_DWORD *)(v9 + 9528);
  *(_DWORD *)(v9 + 8408) = 8 * v412;
  v421 = v412;
  *(_DWORD *)(v9 + 9560) = v412;
  LODWORD(v412) = ((((8 * v412) ^ 0x6ACC6B3F) + 1) ^ 0x8273BB94) & 0x6168F408 ^ 0x270FFE21 ^ (((2
                                                                                              * (((((8 * v412) ^ 0x6ACC6B3F)
                                                                                                 + 1) ^ 0x8273BB94) & 0x6168F414)) | 0x4EDE9C62)
                                                                                            - (((((8 * v412) ^ 0x6ACC6B3F)
                                                                                               + 1) ^ 0x8273BB94) & 0x6168F414)
                                                                                            - 661605937);
  v422 = (v412 | 0x95CB4AD3) - (v412 | 0x6A34B52C);
  LODWORD(v411) = (v396 ^ 0xD2A67298) + (v311 ^ 0xD2A67298);
  *(_DWORD *)(v9 + 8608) = v411;
  v423 = (v411 - 760843624 - ((2 * v411) & 0xA54CE530)) ^ v418;
  *(_DWORD *)(v9 + 8416) = -169493563 * v423;
  v424 = *(_DWORD *)(v9 + 9156);
  LODWORD(v412) = -169493563 * v423 + v424 + ~((-338987126 * v423) & 0xA54CE530);
  LODWORD(v412) = (v412 ^ 0xD2A67298) + (WORD1(v412) ^ 0xFFFF2D59) + 1;
  LODWORD(v412) = ((v412 - 760843624 - ((2 * v412) & 0xA54CE530)) ^ 0xD2A67298)
                + ((((_DWORD)v412 - 760843624 - ((2 * (_DWORD)v412) & 0xA54CE530)) >> 8) ^ 0xFF2D598D)
                + 1;
  v425 = v309 ^ 0xD2A67298;
  LODWORD(v412) = -1662430723 * (((v412 - 760843624 - ((2 * v412) & 0xA54CE530)) ^ 0xD2A67298) + (v309 ^ 0xD2A67298));
  LODWORD(v412) = ((((v412 ^ WORD1(v412)) >> 8)
                  - 760843624
                  - ((2 * ((v412 ^ WORD1(v412)) >> 8)) & 0x14CE530)) ^ 0xD2A67298)
                + (v412 ^ WORD1(v412));
  v426 = v414 + 1;
  *(_DWORD *)(v9 + 8392) = v414 + 1;
  LODWORD(v412) = 236289761 * (((v412 - 760843624 - ((2 * v412) & 0xA54CE530)) ^ 0xD2A67298) + v414 + 1);
  LODWORD(v412) = v412 + WORD1(v412) - ((v412 + WORD1(v412)) >> 8);
  LODWORD(v412) = 1643001935 * ((v412 - 760843624 - ((2 * v412) & 0xA54CE530)) ^ v417);
  LODWORD(v412) = v412 - WORD1(v412) - 760843624 - ((2 * (v412 - WORD1(v412))) & 0xA54CE530);
  v427 = (v412 ^ 0xD2A67298) + v419 + ((v412 >> 8) ^ 0xD2A672);
  *(_DWORD *)(v9 + 8572) = v427;
  LODWORD(v412) = (v427 - 760843624 - ((2 * v427) & 0xA54CE530)) ^ 0xD2A67298;
  *(_DWORD *)(v9 + 8472) = v412;
  v421 ^= 0x2D598D67u;
  *(_DWORD *)(v9 + 8464) = v421;
  v428 = v421 + 1;
  v429 = v412 + v421 + 1;
  if ((v429 & 1) != 0)
    v430 = *(_DWORD *)(v9 + 9384);
  else
    v430 = v407;
  v431 = *(_DWORD *)(v9 + 8792);
  if ((v429 & 1) != 0)
    v432 = *(_DWORD *)(v9 + 8792);
  else
    v432 = *(_DWORD *)(v9 + 9384);
  *(_DWORD *)(v9 + 9384) = v432;
  if ((v429 & 1) != 0)
    v433 = v400;
  else
    v433 = v431;
  if ((v429 & 1) != 0)
    v434 = v407;
  else
    v434 = v400;
  *(_DWORD *)(v9 + 9528) = v434;
  v435 = (v429 & 2) == 0;
  v436 = v429;
  *(_DWORD *)(v9 + 9136) = v429;
  if ((v429 & 2) != 0)
    v437 = v433;
  else
    v437 = v430;
  if ((v429 & 2) != 0)
    v438 = v430;
  else
    v438 = v433;
  v439 = v420 - 1620108767;
  v440 = v422 + 1781839148;
  *(_DWORD *)(v9 + 9016) = v422 + 1781839148;
  v441 = (v422 + 44) ^ 0xD7u;
  *(_DWORD *)(v9 + 9024) = v420 - 1620108767;
  v442 = (v420 + 33) ^ 0x81u;
  v443 = ((unint64_t)(v438 ^ 0xD2A67298) << ((v420 + 33) ^ 0x81u)) | ((unint64_t)(v438 ^ 0xD2A67298) >> ((v422 + 44) ^ 0xD7u));
  v444 = v443 + v424 + ~((2 * v443) & 0xA54CE530);
  v445 = *(_QWORD *)(v9 + 9736);
  v446 = ((unint64_t)(v437 ^ 0xD2A67298) >> ((v422 + 44) ^ 0xD7u)) ^ ((unint64_t)(v437 ^ 0xD2A67298) << v445);
  v447 = v446 - 760843624 - ((2 * v446) & 0xA54CE530);
  if (v435)
    v448 = v432;
  else
    v448 = v434;
  v449 = ((unint64_t)(v448 ^ 0xD2A67298) >> ((v422 + 44) ^ 0xD7u)) | ((unint64_t)(v448 ^ 0xD2A67298) << v442);
  v450 = v449 - 760843624 - ((2 * v449) & 0xA54CE530);
  v451 = ((v436 - 760843624) ^ 0xD2A67298) + v428;
  *(_DWORD *)(v9 + 8188) = v428;
  v452 = ((v451 - 760843624) ^ 0xD2A67298) + v428;
  v453 = v439 ^ 0x4DEF6A19;
  *(_DWORD *)(v9 + 7984) = v448;
  if ((v439 ^ 0x4DEF6A19) == 0xD2A67298)
    v450 = v448;
  *(_DWORD *)(v9 + 8488) = v450;
  v454 = *(_DWORD *)(v9 + 9608);
  *(_DWORD *)(v9 + 8964) = v437;
  if (v454 == -760843624)
    v447 = v437;
  *(_DWORD *)(v9 + 8496) = v447;
  *(_DWORD *)(v9 + 9720) = v440 ^ 0x470D884F;
  *(_DWORD *)(v9 + 8080) = v438;
  if ((v440 ^ 0x470D884F) == 0xD2A67298)
    v444 = v438;
  *(_DWORD *)(v9 + 8480) = v444;
  *(_DWORD *)(v9 + 8640) = v452;
  v455 = (v452 & 1) == 0;
  v456 = *(_DWORD *)(v9 + 8832);
  if ((v452 & 1) != 0)
    v457 = *(_DWORD *)(v9 + 8832);
  else
    v457 = v360;
  if ((v452 & 1) != 0)
    v458 = v360;
  else
    v458 = *(_DWORD *)(v9 + 8688);
  if ((v452 & 1) != 0)
    v459 = *(_DWORD *)(v9 + 8688);
  else
    v459 = v368;
  if ((v452 & 1) != 0)
    v456 = v368;
  v460 = *(_DWORD *)(v9 + 8800);
  v461 = *(_DWORD *)(v9 + 8628);
  if ((v452 & 1) != 0)
    v462 = *(_DWORD *)(v9 + 8628);
  else
    v462 = *(_DWORD *)(v9 + 8800);
  *(_DWORD *)(v9 + 8632) = v462;
  if ((v452 & 1) != 0)
    v461 = v398;
  *(_DWORD *)(v9 + 8792) = v461;
  if ((v452 & 1) != 0)
    v463 = v413;
  else
    v463 = v398;
  *(_DWORD *)(v9 + 8628) = v463;
  if ((v452 & 1) != 0)
    v464 = v460;
  else
    v464 = v413;
  *(_DWORD *)(v9 + 8360) = v464;
  v465 = *(_DWORD *)(v9 + 8872);
  *(_DWORD *)(v9 + 8344) = v465;
  v466 = *(_DWORD *)(v9 + 8776);
  *(_DWORD *)(v9 + 8332) = v466;
  v467 = *(_DWORD *)(v9 + 8704);
  v468 = *(_DWORD *)(v9 + 9148);
  if (!v455)
    v468 = *(_DWORD *)(v9 + 8704);
  *(_DWORD *)(v9 + 8832) = v468;
  v469 = *(_DWORD *)(v9 + 9256);
  v470 = *(_DWORD *)(v9 + 9264);
  if (v455)
    v470 = *(_DWORD *)(v9 + 9256);
  *(_DWORD *)(v9 + 8800) = v470;
  if (!v455)
    v467 = v469;
  *(_DWORD *)(v9 + 8356) = v467;
  *(_DWORD *)(v9 + 8024) = v402;
  v471 = *(_DWORD *)(v9 + 8664);
  if (v455)
    v471 = v402;
  *(_DWORD *)(v9 + 8744) = v471;
  if (((((v451 - 104) ^ 0x98) + (_BYTE)v428) & 2) != 0)
    v472 = v456;
  else
    v472 = v458;
  if (((((v451 - 104) ^ 0x98) + (_BYTE)v428) & 2) != 0)
    v473 = v458;
  else
    v473 = v456;
  *(_DWORD *)(v9 + 9456) = *(_DWORD *)(v9 + 8768);
  if (((((v451 - 104) ^ 0x98) + (_BYTE)v428) & 2) != 0)
    v474 = v457;
  else
    v474 = v459;
  if (((((v451 - 104) ^ 0x98) + (_BYTE)v428) & 2) != 0)
    v475 = v459;
  else
    v475 = v457;
  *(_QWORD *)(v9 + 9728) = v442;
  v476 = ((unint64_t)(v474 ^ 0xD2A67298) >> v441) | ((unint64_t)(v474 ^ 0xD2A67298) << v442);
  v477 = v476 - 760843624 - ((2 * v476) & 0xA54CE530);
  v478 = v475 ^ 0xD2A67298;
  *(_QWORD *)(v9 + 7520) = v478 >> v441;
  LODWORD(v478) = (v478 >> v441) ^ (v478 << v442);
  v479 = v478 - 760843624 - ((2 * v478) & 0xA54CE530);
  v480 = ((unint64_t)(v472 ^ 0xD2A67298) >> v441) + ((unint64_t)(v472 ^ 0xD2A67298) << v445);
  v481 = v480 - 760843624 - ((2 * v480) & 0xA54CE530);
  v482 = ((unint64_t)(v473 ^ 0xD2A67298) << v445) + ((unint64_t)(v473 ^ 0xD2A67298) >> v441);
  v483 = v482 - 760843624 - ((2 * v482) & 0xA54CE530);
  v484 = (v423 | 0xC9C6FA11) - ((v423 | 0xC9C6FA11) ^ v423) + (*(_DWORD *)(v9 + 8828) ^ 0xD2A67298) - v423;
  v485 = (*(_DWORD *)(v9 + 9680) ^ 0xD2A67298) + (v469 ^ 0xD2A67298);
  v486 = v484 - 760843624 - ((2 * v484) & 0xA54CE530);
  v487 = *(_DWORD *)(v9 + 9064);
  v488 = v487 ^ (v485 - 760843624 - ((2 * v485) & 0xA54CE530));
  v489 = -169493563 * v488;
  v490 = v425;
  *(_DWORD *)(v9 + 9056) = v425;
  v491 = -1662430723 * (v489 - HIWORD(v489) + v425 - ((v489 - HIWORD(v489)) >> 8));
  v492 = ((((v491 ^ HIWORD(v491)) >> 8) - 760843624 - ((2 * ((v491 ^ HIWORD(v491)) >> 8)) & 0x14CE530)) ^ 0xD2A67298)
       + (v491 ^ HIWORD(v491));
  v493 = 236289761 * (((v492 - 760843624 - ((2 * v492) & 0xA54CE530)) ^ 0xD2A67298) + v426);
  v494 = *(_DWORD *)(v9 + 9072);
  v495 = 1643001935 * (v494 ^ (v493 + HIWORD(v493) - ((v493 + HIWORD(v493)) >> 8)));
  v496 = v495 - HIWORD(v495) - 760843624 - ((2 * (v495 - HIWORD(v495))) & 0xA54CE530);
  v497 = (*(_DWORD *)(v9 + 8944) ^ 0xD2A67298) + (v496 ^ 0x2D598D67) + (v496 ^ 0xD2A67298);
  *(_DWORD *)(v9 + 9704) = v453;
  *(_DWORD *)(v9 + 8576) = v474;
  if (v453 == -760843624)
    v477 = v474;
  *(_DWORD *)(v9 + 8688) = v477;
  *(_DWORD *)(v9 + 8768) = v475;
  if (v453 == -760843624)
    v498 = v475;
  else
    v498 = v479;
  *(_DWORD *)(v9 + 8512) = v498;
  *(_DWORD *)(v9 + 8872) = v472;
  *(_DWORD *)(v9 + 7992) = v481;
  if (v454 == -760843624)
    v499 = v472;
  else
    v499 = v481;
  *(_DWORD *)(v9 + 8504) = v499;
  *(_DWORD *)(v9 + 8776) = v473;
  if (v454 == -760843624)
    v500 = v473;
  else
    v500 = v483;
  *(_DWORD *)(v9 + 8520) = v500;
  v501 = *(_DWORD *)(v9 + 8612);
  if ((v451 & 1) != 0)
    v502 = v486;
  else
    v502 = *(_DWORD *)(v9 + 8612);
  *(_DWORD *)(v9 + 9392) = v502;
  v503 = *(_DWORD *)(v9 + 8764);
  if ((v451 & 1) == 0)
    v501 = *(_DWORD *)(v9 + 8764);
  *(_DWORD *)(v9 + 9256) = v501;
  v504 = *(_DWORD *)(v9 + 9004);
  if ((v451 & 1) == 0)
    v503 = *(_DWORD *)(v9 + 9004);
  *(_DWORD *)(v9 + 9052) = v503;
  if ((v451 & 1) != 0)
    v505 = v504;
  else
    v505 = v486;
  *(_DWORD *)(v9 + 8944) = v505;
  v506 = v497 - 760843623 - ((2 * (v497 + 1)) & 0xA54CE530);
  *(_DWORD *)(v9 + 8764) = v506;
  v507 = ((v489 - 760843624 - ((-338987126 * v488) & 0xA54CE530)) ^ 0xD2A67298)
       + (((v489 - 760843624 - ((-338987126 * v488) & 0xA54CE530)) >> 16) ^ 0xFFFF2D59)
       + 1;
  v508 = v490
       + ((v507 - 760843624 - ((2 * v507) & 0xA54CE530)) ^ 0xD2A67298)
       + (((v507 - 760843624 - ((2 * v507) & 0xA54CE530)) >> 8) ^ 0xFF2D598D)
       + 1;
  v509 = (v508 - 760843624 - ((2 * v508) & 0xA54CE530)) ^ 0xD2A67298;
  v510 = -760843624 - 1662430723 * v509 - ((970105850 * v509) & 0xA54CE530);
  v511 = ((HIWORD(v510) ^ 0xD2A6) + *(_DWORD *)(v9 + 9156) + (~(2 * (HIWORD(v510) ^ 0xD2A6)) | 0xFFFF1ACF)) ^ v510;
  v512 = v511 + (v511 >> 8) + 1;
  *(_DWORD *)(v9 + 8384) = v512;
  v513 = v512 + *(_DWORD *)(v9 + 8552) - 760843624 - ((2 * (v512 + *(_DWORD *)(v9 + 8552))) & 0xA54CE530);
  *(_DWORD *)(v9 + 8376) = v513;
  v513 ^= 0xD2A67298;
  *(_DWORD *)(v9 + 8368) = v513;
  v514 = 1643001935
       * (v494 ^ (236289761 * v513 + ((236289761 * v513) >> 16) - ((236289761 * v513 + ((236289761 * v513) >> 16)) >> 8)));
  v515 = v514 - HIWORD(v514) + ((v514 - HIWORD(v514)) >> 8);
  v516 = (*(_DWORD *)(v9 + 9424) ^ 0xD2A67298)
       + ((v515 - 760843624 - ((2 * v515) & 0xA54CE530)) ^ 0x2D598D67)
       + ((v515 - 760843624 - ((2 * v515) & 0xA54CE530)) ^ 0xD2A67298)
       + 1;
  v517 = v516 - 760843624 - ((2 * v516) & 0xA54CE530);
  v518 = *(_DWORD *)(v9 + 8900);
  *(_DWORD *)(v9 + 8552) = v518;
  v519 = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 8352) = v519;
  v520 = *(_DWORD *)(v9 + 9280);
  *(_DWORD *)(v9 + 8828) = v520;
  v521 = *(_DWORD *)(v9 + 9448);
  v522 = *(_DWORD *)(v9 + 9368);
  if ((v451 & 1) == 0)
    v522 = *(_DWORD *)(v9 + 9448);
  *(_DWORD *)(v9 + 9424) = v522;
  if ((v451 & 1) != 0)
    v523 = *(_DWORD *)(v9 + 9096);
  else
    v523 = *(_DWORD *)(v9 + 9120);
  *(_DWORD *)(v9 + 8308) = v523;
  if ((v451 & 1) == 0)
    v518 = *(_DWORD *)(v9 + 9116);
  *(_DWORD *)(v9 + 8848) = v518;
  v524 = *(_DWORD *)(v9 + 9696);
  if ((v451 & 1) == 0)
    v524 = v465;
  *(_DWORD *)(v9 + 8900) = v524;
  if ((v451 & 1) != 0)
    v525 = *(_DWORD *)(v9 + 9648);
  else
    v525 = *(_DWORD *)(v9 + 9104);
  if ((v451 & 1) != 0)
    v526 = v520;
  else
    v526 = v466;
  *(_DWORD *)(v9 + 8312) = v526;
  if ((v451 & 1) != 0)
    v527 = v519;
  else
    v527 = *(_DWORD *)(v9 + 9272);
  *(_DWORD *)(v9 + 8328) = v527;
  v528 = v451;
  v529 = *(_DWORD *)(v9 + 9552);
  if ((v451 & 1) != 0)
    v529 = v506;
  *(_DWORD *)(v9 + 9280) = v529;
  if ((v451 & 1) != 0)
    v530 = *(_DWORD *)(v9 + 8696);
  else
    v530 = v517;
  if ((v451 & 1) != 0)
    v531 = *(_DWORD *)(v9 + 8616);
  else
    v531 = *(_DWORD *)(v9 + 8696);
  v532 = *(_DWORD *)(v9 + 8728);
  if ((v451 & 1) != 0)
    v533 = *(_DWORD *)(v9 + 8728);
  else
    v533 = *(_DWORD *)(v9 + 8616);
  if ((v451 & 1) != 0)
    v532 = v517;
  v534 = *(_DWORD *)(v9 + 8608) ^ v487;
  *(_DWORD *)(v9 + 7952) = v534;
  v535 = -169493563 * (v534 ^ 0xD2A67298) - ((-169493563 * (v534 ^ 0xD2A67298)) >> 16);
  v536 = v535 - 760843624 - ((2 * v535) & 0xA54CE530);
  *(_DWORD *)(v9 + 8728) = (((v536 & 0x4E281841 ^ 0x491094C) + (v536 & 0x8042E432 ^ 0x81026611) - 1) ^ 0x47B11F4C) & (v536 ^ 0x2D598D67) ^ *(_DWORD *)(v9 + 8864);
  if ((v451 & 2) != 0)
    v537 = v532;
  else
    v537 = v531;
  if ((v451 & 2) != 0)
    v538 = v531;
  else
    v538 = v532;
  v539 = *(_QWORD *)(v9 + 9728);
  v540 = v441;
  v541 = ((unint64_t)(v537 ^ 0xD2A67298) << v539) + ((unint64_t)(v537 ^ 0xD2A67298) >> v441);
  v542 = v541 - 760843624 - ((2 * v541) & 0xA54CE530);
  v543 = ((unint64_t)(v538 ^ 0xD2A67298) >> v441) + ((unint64_t)(v538 ^ 0xD2A67298) << v539);
  v544 = v543 - 760843624 - ((2 * v543) & 0xA54CE530);
  v545 = *(_DWORD *)(v9 + 9704);
  *(_DWORD *)(v9 + 8864) = v537;
  if (v545 == -760843624)
    v546 = v537;
  else
    v546 = v542;
  *(_DWORD *)(v9 + 8696) = v546;
  *(_DWORD *)(v9 + 8008) = v538;
  if (v545 == -760843624)
    v547 = v538;
  else
    v547 = v544;
  *(_DWORD *)(v9 + 9004) = v547;
  v548 = *(_DWORD *)(v9 + 8640);
  v549 = *(_DWORD *)(v9 + 9264);
  if ((v548 & 1) != 0)
    v549 = *(_DWORD *)(v9 + 9148);
  *(_DWORD *)(v9 + 9148) = v549;
  v550 = *(_DWORD *)(v9 + 8840);
  v551 = (((2 * (v550 & 0x7EFBD801 ^ 0x83A9001)) | 0xA02DFC78) - (v550 & 0x7EFBD801 ^ 0x83A9001) - 1343684156) ^ 0x1A1EBB6C;
  v552 = (v551 - ((2 * v551) & 0xC7497EC4) - 475742366) ^ 0xF3343A33 | v550 ^ 0xD2A67298;
  v553 = v550 ^ *(_DWORD *)(v9 + 9008) ^ (v552 - 760843624 - ((2 * v552) & 0xA54CE530));
  v554 = *(_DWORD *)(v9 + 9416);
  if ((v548 & 1) != 0)
    v555 = v553;
  else
    v555 = *(_DWORD *)(v9 + 9416);
  *(_DWORD *)(v9 + 9264) = v555;
  v556 = *(_DWORD *)(v9 + 9296);
  if ((v548 & 1) != 0)
    v557 = *(_DWORD *)(v9 + 9296);
  else
    v557 = v553;
  if ((v528 & 2) != 0)
    v558 = v533;
  else
    v558 = v530;
  if ((v528 & 2) != 0)
    v533 = v530;
  v559 = *(_DWORD *)(v9 + 8860);
  v560 = *(_DWORD *)(v9 + 8900);
  if ((v528 & 2) != 0)
    v561 = v525;
  else
    v561 = *(_DWORD *)(v9 + 8900);
  *(_DWORD *)(v9 + 8840) = v561;
  if ((v528 & 2) != 0)
    v562 = v560;
  else
    v562 = v525;
  *(_DWORD *)(v9 + 8860) = v562;
  v563 = *(_QWORD *)(v9 + 9736);
  v564 = ((unint64_t)(v533 ^ 0xD2A67298) << v563) + ((unint64_t)(v533 ^ 0xD2A67298) >> v441);
  v565 = *(_DWORD *)(v9 + 9440);
  *(_DWORD *)(v9 + 8264) = v565;
  v566 = *(_DWORD *)(v9 + 9328);
  v567 = *(_DWORD *)(v9 + 9256);
  v568 = *(_DWORD *)(v9 + 8944);
  if ((v528 & 2) != 0)
    v569 = *(_DWORD *)(v9 + 9256);
  else
    v569 = *(_DWORD *)(v9 + 8944);
  *(_DWORD *)(v9 + 9440) = v569;
  if ((v528 & 2) != 0)
    v570 = v568;
  else
    v570 = v567;
  *(_DWORD *)(v9 + 9328) = v570;
  v571 = v564 - 760843624 - ((2 * v564) & 0xA54CE530);
  v572 = ((unint64_t)(v558 ^ 0xD2A67298) << v563) ^ ((unint64_t)(v558 ^ 0xD2A67298) >> v540);
  v573 = v572 - 760843624 - ((2 * v572) & 0xA54CE530);
  *(_DWORD *)(v9 + 8400) = *(_DWORD *)(v9 + 9320);
  v574 = *(_DWORD *)(v9 + 9464);
  v575 = *(_DWORD *)(v9 + 8848);
  v576 = *(_DWORD *)(v9 + 9280);
  if ((v528 & 2) != 0)
    v577 = *(_DWORD *)(v9 + 9280);
  else
    v577 = *(_DWORD *)(v9 + 8848);
  *(_DWORD *)(v9 + 9464) = v577;
  if ((v528 & 2) != 0)
    v578 = *(_DWORD *)(v9 + 9424);
  else
    v578 = v523;
  *(_DWORD *)(v9 + 8944) = v578;
  v579 = *(_DWORD *)(v9 + 9052);
  if ((v528 & 2) != 0)
    v579 = *(_DWORD *)(v9 + 9392);
  *(_DWORD *)(v9 + 9320) = v579;
  if ((v528 & 2) != 0)
    v580 = v526;
  else
    v580 = v527;
  *(_DWORD *)(v9 + 8900) = v580;
  v581 = *(_DWORD *)(v9 + 9720);
  *(_DWORD *)(v9 + 8000) = v533;
  if (v581 == -760843624)
    v582 = v533;
  else
    v582 = v571;
  *(_DWORD *)(v9 + 8440) = v582;
  v583 = v581;
  *(_DWORD *)(v9 + 8116) = v558;
  if (v581 == -760843624)
    v584 = v558;
  else
    v584 = v573;
  *(_DWORD *)(v9 + 8456) = v584;
  v585 = *(_DWORD *)(v9 + 9136);
  v586 = *(_DWORD *)(v9 + 9456);
  if ((v585 & 1) == 0)
    v586 = v559;
  *(_DWORD *)(v9 + 8612) = v586;
  v587 = *(_DWORD *)(v9 + 9376);
  if ((v585 & 1) != 0)
    v587 = v559;
  *(_DWORD *)(v9 + 8608) = v587;
  v588 = *(_DWORD *)(v9 + 8532);
  if ((v585 & 1) != 0)
    v589 = v565;
  else
    v589 = *(_DWORD *)(v9 + 8532);
  *(_DWORD *)(v9 + 8272) = v589;
  v590 = *(_DWORD *)(v9 + 8980);
  if ((v585 & 1) == 0)
    v588 = *(_DWORD *)(v9 + 8980);
  *(_DWORD *)(v9 + 8288) = v588;
  v591 = *(_DWORD *)(v9 + 8888);
  v592 = *(_DWORD *)(v9 + 9080);
  if ((v585 & 1) != 0)
    v592 = *(_DWORD *)(v9 + 8888);
  *(_DWORD *)(v9 + 8300) = v592;
  if ((v585 & 1) != 0)
    v591 = v574;
  *(_DWORD *)(v9 + 8616) = v591;
  if ((v585 & 1) != 0)
    v593 = *(_DWORD *)(v9 + 9504);
  else
    v593 = v574;
  *(_DWORD *)(v9 + 8280) = v593;
  v594 = *(_DWORD *)(v9 + 9152);
  if ((v585 & 1) == 0)
    v594 = *(_DWORD *)(v9 + 9176);
  *(_DWORD *)(v9 + 8304) = v594;
  if ((v585 & 2) != 0)
    v595 = *(_DWORD *)(v9 + 9384);
  else
    v595 = *(_DWORD *)(v9 + 9528);
  v596 = v528;
  v597 = *(_DWORD *)(v9 + 8764);
  if ((v528 & 1) != 0)
  {
    v597 = *(_DWORD *)(v9 + 9116);
    v598 = v521;
  }
  else
  {
    v598 = *(_DWORD *)(v9 + 9096);
  }
  v599 = *(_DWORD *)(v9 + 9552);
  if ((v528 & 1) != 0)
  {
    v600 = *(_DWORD *)(v9 + 9120);
  }
  else
  {
    v599 = *(_DWORD *)(v9 + 8552);
    v600 = *(_DWORD *)(v9 + 9368);
  }
  v601 = *(_DWORD *)(v9 + 9664);
  v602 = *(_DWORD *)(v9 + 9584);
  if ((v596 & 2) != 0)
    v603 = v599;
  else
    v603 = v597;
  *(_DWORD *)(v9 + 9584) = v603;
  if ((v596 & 2) == 0)
    v597 = v599;
  *(_DWORD *)(v9 + 9664) = v597;
  if ((v596 & 2) != 0)
    v604 = v575;
  else
    v604 = v576;
  *(_DWORD *)(v9 + 9384) = v604;
  v605 = ((unint64_t)(v595 ^ 0xD2A67298) >> v540) ^ ((unint64_t)(v595 ^ 0xD2A67298) << v563);
  v606 = v605 - 760843624 - ((2 * v605) & 0xA54CE530);
  *(_DWORD *)(v9 + 7784) = v598;
  *(_DWORD *)(v9 + 7776) = v600;
  if ((v596 & 2) != 0)
    v607 = v598;
  else
    v607 = v600;
  *(_DWORD *)(v9 + 8764) = v607;
  *(_DWORD *)(v9 + 8064) = v595;
  if (v583 == -760843624)
    v606 = v595;
  *(_DWORD *)(v9 + 9120) = v606;
  v608 = *(_DWORD *)(v9 + 8572);
  v609 = *(_DWORD *)(v9 + 8880);
  v610 = *(_DWORD *)(v9 + 8748);
  if ((v608 & 1) != 0)
    v611 = *(_DWORD *)(v9 + 8748);
  else
    v611 = *(_DWORD *)(v9 + 8880);
  *(_DWORD *)(v9 + 9008) = v611;
  if ((v608 & 1) != 0)
    v610 = v566;
  *(_DWORD *)(v9 + 8232) = v610;
  v612 = v590;
  if ((v608 & 1) != 0)
    v613 = v609;
  else
    v613 = v602;
  *(_DWORD *)(v9 + 8196) = v613;
  v614 = *(_QWORD *)(v9 + 6280);
  if ((v608 & 1) != 0)
    v615 = v602;
  else
    v615 = v566;
  *(_DWORD *)(v9 + 8532) = v615;
  v616 = *(_DWORD *)(v9 + 8984);
  v617 = *(_DWORD *)(v9 + 8868);
  if ((v608 & 1) != 0)
    v618 = *(_DWORD *)(v9 + 8984);
  else
    v618 = *(_DWORD *)(v9 + 8868);
  *(_DWORD *)(v9 + 8260) = v618;
  v619 = *(_DWORD *)(v9 + 9616);
  if ((v608 & 1) != 0)
    v620 = v617;
  else
    v620 = *(_DWORD *)(v9 + 9616);
  *(_DWORD *)(v9 + 8212) = v620;
  v621 = *(_DWORD *)(v9 + 8932);
  if ((v608 & 1) != 0)
    v622 = v619;
  else
    v622 = *(_DWORD *)(v9 + 8932);
  *(_DWORD *)(v9 + 8236) = v622;
  if ((v608 & 1) != 0)
    v623 = v621;
  else
    v623 = v616;
  *(_DWORD *)(v9 + 8932) = v623;
  v624 = *(_DWORD *)(v9 + 9288);
  v625 = *(_DWORD *)(v9 + 9640);
  if ((v608 & 1) != 0)
    v626 = *(_DWORD *)(v9 + 9640);
  else
    v626 = *(_DWORD *)(v9 + 9288);
  *(_DWORD *)(v9 + 8240) = v626;
  v627 = *(_DWORD *)(v9 + 8952);
  if ((v608 & 1) != 0)
    v628 = *(_DWORD *)(v9 + 8952);
  else
    v628 = v625;
  *(_DWORD *)(v9 + 8552) = v628;
  v629 = *(_DWORD *)(v9 + 9632);
  if ((v608 & 1) != 0)
    v630 = *(_DWORD *)(v9 + 9632);
  else
    v630 = v627;
  *(_DWORD *)(v9 + 9552) = v630;
  if ((v608 & 1) != 0)
    v631 = v624;
  else
    v631 = v629;
  *(_DWORD *)(v9 + 8548) = v631;
  v632 = (*(_DWORD *)(v9 + 9200) ^ 0xD2A67298) - 760843624 - ((2 * (*(_DWORD *)(v9 + 9200) ^ 0xD2A67298)) & 0xA54CE530);
  v633 = (v536 ^ 0xD2A67298) + ((v536 >> 8) ^ 0xFF2D598D) + 1;
  v634 = ((v633 - 760843624 - ((2 * v633) & 0xA54CE530)) ^ 0xD2A67298) + *(_DWORD *)(v9 + 9056);
  v635 = v634 - 760843624 - ((2 * v634) & 0xA54CE530);
  v636 = -760843624 - 1662430723 * (v635 ^ 0xD2A67298) - ((970105850 * (v635 ^ 0xD2A67298)) & 0xA54CE530);
  v637 = (*(_DWORD *)(v9 + 9208) ^ 0xD2A67298)
       + (v635 ^ 0x2D598D67)
       + 349836117
       * ((((v636 & 0xFC83BAD0 ^ 0xD3FE77BF) - ((2 * (v636 & 0xFC83BAD0 ^ 0xD3FE77BF)) & 0xA1046520) - 832703864) ^ 0xD2A67298) & (v636 ^ 0xD2A67298))
       + 1;
  v638 = v637 - 760843624 - ((2 * v637) & 0xA54CE530);
  v639 = *(_DWORD *)(v9 + 8912);
  v640 = *(_DWORD *)(v9 + 8736);
  if ((v608 & 1) != 0)
    v641 = (*(_DWORD *)(v9 + 9200) ^ 0xD2A67298)
         - 760843624
         - ((2 * (*(_DWORD *)(v9 + 9200) ^ 0xD2A67298)) & 0xA54CE530);
  else
    v641 = *(_DWORD *)(v9 + 8736);
  *(_DWORD *)(v9 + 9632) = v641;
  if ((v608 & 1) != 0)
    v642 = v639;
  else
    v642 = v632;
  *(_DWORD *)(v9 + 0x2000) = v642;
  v643 = *(_DWORD *)(v9 + 9128);
  v644 = *(_DWORD *)(v9 + 9688);
  if ((v608 & 1) != 0)
    v645 = *(_DWORD *)(v9 + 9688);
  else
    v645 = *(_DWORD *)(v9 + 9128);
  v646 = *(_DWORD *)(v9 + 9656);
  if ((v608 & 1) != 0)
    v647 = *(_DWORD *)(v9 + 9656);
  else
    v647 = v638;
  if ((v608 & 2) != 0)
    v648 = v647;
  else
    v648 = v645;
  if ((v608 & 2) != 0)
    v649 = v645;
  else
    v649 = v647;
  v650 = ((unint64_t)(v648 ^ 0xD2A67298) << v539) | ((unint64_t)(v648 ^ 0xD2A67298) >> v540);
  v651 = v650 - 760843624 - ((2 * v650) & 0xA54CE530);
  v652 = ((unint64_t)(v649 ^ 0xD2A67298) << v539) | ((unint64_t)(v649 ^ 0xD2A67298) >> v540);
  v653 = v652 - 760843624 - ((2 * v652) & 0xA54CE530);
  v654 = (*(_DWORD *)(v9 + 8536) ^ 0xD2A67298) - 760843624 - ((2 * (*(_DWORD *)(v9 + 8536) ^ 0xD2A67298)) & 0xA54CE530);
  *(_DWORD *)(v9 + 8056) = v648;
  if (v545 == -760843624)
    v651 = v648;
  *(_DWORD *)(v9 + 9200) = v651;
  *(_DWORD *)(v9 + 8912) = v649;
  if (v545 != -760843624)
    v649 = v653;
  *(_DWORD *)(v9 + 8536) = v649;
  if ((v548 & 1) != 0)
    v655 = *(_DWORD *)(v9 + 8648);
  else
    v655 = *(_DWORD *)(v9 + 8656);
  v656 = v548;
  if ((v548 & 1) != 0)
    v657 = v654;
  else
    v657 = v556;
  *(_DWORD *)(v9 + 9416) = v554;
  if ((v548 & 1) != 0)
    v658 = v554;
  else
    v658 = v654;
  if ((v608 & 1) != 0)
    v659 = v643;
  else
    v659 = v646;
  if ((v608 & 1) != 0)
    v660 = v638;
  else
    v660 = v644;
  if ((v608 & 1) != 0)
    v661 = *(_DWORD *)(v9 + 8968);
  else
    v661 = v601;
  if ((v608 & 1) != 0)
    v662 = v601;
  else
    v662 = *(_DWORD *)(v9 + 8784);
  if ((v608 & 1) != 0)
    v663 = *(_DWORD *)(v9 + 8784);
  else
    v663 = *(_DWORD *)(v9 + 8672);
  if ((v608 & 1) != 0)
    v664 = *(_DWORD *)(v9 + 8672);
  else
    v664 = *(_DWORD *)(v9 + 8968);
  if ((v608 & 1) != 0)
  {
    v665 = *(_DWORD *)(v9 + 8728);
  }
  else
  {
    v640 = *(_DWORD *)(v9 + 8728);
    v665 = v639;
  }
  v666 = *(_DWORD *)(v9 + 9472);
  if ((v656 & 2) != 0)
    v667 = v557;
  else
    v667 = v658;
  *(_DWORD *)(v9 + 9288) = v667;
  if ((v656 & 2) == 0)
    v658 = v557;
  *(_DWORD *)(v9 + 9472) = v658;
  v668 = *(_DWORD *)(v9 + 9264);
  if ((v656 & 2) != 0)
    v669 = *(_DWORD *)(v9 + 9264);
  else
    v669 = v657;
  *(_DWORD *)(v9 + 9280) = v669;
  if ((v656 & 2) != 0)
    v670 = v657;
  else
    v670 = v668;
  *(_DWORD *)(v9 + 9528) = v670;
  v671 = *(_DWORD *)(v9 + 8816);
  v672 = *(_DWORD *)(v9 + 8792);
  v673 = *(_DWORD *)(v9 + 8360);
  if ((v656 & 2) != 0)
    v674 = *(_DWORD *)(v9 + 8360);
  else
    v674 = *(_DWORD *)(v9 + 8792);
  *(_DWORD *)(v9 + 8816) = v674;
  if ((v656 & 2) != 0)
    v675 = v672;
  else
    v675 = v673;
  *(_DWORD *)(v9 + 8736) = v675;
  v676 = *(_DWORD *)(v9 + 9312);
  v677 = *(_DWORD *)(v9 + 8356);
  v678 = *(_DWORD *)(v9 + 9148);
  if ((v656 & 2) != 0)
    v679 = *(_DWORD *)(v9 + 8356);
  else
    v679 = *(_DWORD *)(v9 + 9148);
  *(_DWORD *)(v9 + 9312) = v679;
  if ((v656 & 2) != 0)
    v680 = v678;
  else
    v680 = v677;
  *(_DWORD *)(v9 + 9208) = v680;
  v681 = *(_DWORD *)(v9 + 8832);
  v682 = *(_DWORD *)(v9 + 8800);
  if ((v656 & 2) != 0)
    v683 = *(_DWORD *)(v9 + 8800);
  else
    v683 = *(_DWORD *)(v9 + 8832);
  *(_DWORD *)(v9 + 9116) = v683;
  if ((v656 & 2) != 0)
    v684 = v681;
  else
    v684 = v682;
  *(_DWORD *)(v9 + 9256) = v684;
  v685 = *(_DWORD *)(v9 + 8744);
  if ((v656 & 2) != 0)
    v686 = v655;
  else
    v686 = *(_DWORD *)(v9 + 8744);
  *(_DWORD *)(v9 + 8848) = v686;
  if ((v656 & 2) != 0)
    v655 = v685;
  *(_DWORD *)(v9 + 8800) = v655;
  v687 = *(_DWORD *)(v9 + 8632);
  if ((v656 & 2) != 0)
    v687 = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 9656) = v687;
  if ((v596 & 1) != 0)
    v688 = *(_DWORD *)(v9 + 8344);
  else
    v688 = *(_DWORD *)(v9 + 9648);
  if ((v596 & 1) != 0)
    v689 = *(_DWORD *)(v9 + 9104);
  else
    v689 = *(_DWORD *)(v9 + 9696);
  if ((v596 & 1) != 0)
    v690 = *(_DWORD *)(v9 + 8332);
  else
    v690 = *(_DWORD *)(v9 + 8352);
  if ((v596 & 1) != 0)
    v691 = v666;
  else
    v691 = v671;
  if ((v596 & 1) != 0)
    v692 = v676;
  else
    v692 = v666;
  if ((v596 & 1) != 0)
    v693 = *(_DWORD *)(v9 + 9304);
  else
    v693 = v676;
  if ((v596 & 1) == 0)
    v671 = *(_DWORD *)(v9 + 9304);
  v694 = *(_DWORD *)(v9 + 8828);
  if ((v596 & 1) != 0)
    v694 = *(_DWORD *)(v9 + 9272);
  v695 = *(_DWORD *)(v9 + 9424);
  if ((v596 & 2) != 0)
    v695 = *(_DWORD *)(v9 + 8308);
  v696 = (v689 ^ 0xD2A67298) + (v695 ^ 0x2D598D67);
  v697 = *(_DWORD *)(v9 + 8328);
  if ((v596 & 2) == 0)
    v697 = *(_DWORD *)(v9 + 8312);
  *(_DWORD *)(v9 + 8888) = v697;
  v698 = *(_DWORD *)(v9 + 8904);
  if ((v596 & 2) != 0)
    v699 = v690;
  else
    v699 = v694;
  *(_DWORD *)(v9 + 8904) = v699;
  if ((v596 & 2) == 0)
    v694 = v690;
  *(_DWORD *)(v9 + 8744) = v694;
  v700 = *(_DWORD *)(v9 + 8920);
  if ((v596 & 2) != 0)
    v701 = v671;
  else
    v701 = v692;
  *(_DWORD *)(v9 + 8920) = v701;
  if ((v596 & 2) != 0)
    v671 = v692;
  *(_DWORD *)(v9 + 8792) = v671;
  *(_DWORD *)(v9 + 9368) = v695;
  v702 = v695 ^ 0xD2A67298;
  *(_QWORD *)(v9 + 8312) = v702;
  v703 = ((v696 - 760843623 - ((2 * (v696 + 1)) & 0xA54CE530)) ^ 0xD2A67298) + v702;
  v704 = v703 - 760843624 - ((2 * v703) & 0xA54CE530);
  *(_DWORD *)(v9 + 8356) = v691;
  *(_DWORD *)(v9 + 8352) = v693;
  if ((v596 & 2) != 0)
    v705 = v693;
  else
    v705 = v691;
  *(_DWORD *)(v9 + 9696) = v705;
  *(_DWORD *)(v9 + 8360) = v596;
  v706 = *(_DWORD *)(v9 + 9392);
  if ((v596 & 2) != 0)
    v706 = *(_DWORD *)(v9 + 9052);
  *(_DWORD *)(v9 + 9448) = v706;
  if ((v596 & 2) != 0)
    v707 = v704;
  else
    v707 = v688;
  *(_DWORD *)(v9 + 8828) = v707;
  if ((v596 & 2) != 0)
    v704 = v688;
  *(_DWORD *)(v9 + 9052) = v704;
  v708 = *(_DWORD *)(v9 + 9136);
  if ((v708 & 1) != 0)
    v709 = *(_DWORD *)(v9 + 9080);
  else
    v709 = *(_DWORD *)(v9 + 9504);
  LODWORD(v710) = __ROR4__(*(_DWORD *)(v9 + 9036) ^ 0x5CBF0D64, 29) ^ 0x70CBFFE4;
  HIDWORD(v710) = v710;
  v711 = (v710 >> 3) - 760843624 - ((2 * (v710 >> 3)) & 0xA54CE530);
  v712 = *(_DWORD *)(v9 + 9136);
  if ((v708 & 1) != 0)
    v713 = v612;
  else
    v713 = v711;
  if ((v708 & 1) != 0)
    v714 = v711;
  else
    v714 = *(_DWORD *)(v9 + 8264);
  v715 = (*(_DWORD *)(v9 + 8544) ^ 0xD2A67298)
       - 760843624
       - 2 * ((*(_DWORD *)(v9 + 8544) ^ 0xD2A67298) & *(_DWORD *)(v9 + 7872) ^ *(_DWORD *)(v9 + 8544) & 6);
  v716 = *(_DWORD *)(v9 + 9136);
  if ((v712 & 1) != 0)
    v717 = *(_DWORD *)(v9 + 9680);
  else
    v717 = v700;
  v718 = *(_DWORD *)(v9 + 8680);
  if ((v712 & 1) != 0)
    v719 = *(_DWORD *)(v9 + 8680);
  else
    v719 = *(_DWORD *)(v9 + 9680);
  if ((v712 & 1) != 0)
    v718 = *(_DWORD *)(v9 + 9544);
  else
    v700 = *(_DWORD *)(v9 + 9544);
  if ((v712 & 1) != 0)
    v720 = v698;
  else
    v720 = *(_DWORD *)(v9 + 9456);
  if ((v712 & 1) != 0)
    v721 = *(_DWORD *)(v9 + 9376);
  else
    v721 = v698;
  if ((v712 & 1) != 0)
    v722 = *(_DWORD *)(v9 + 9176);
  else
    v722 = *(_DWORD *)(v9 + 8712);
  v723 = *(_DWORD *)(v9 + 9152);
  if ((*(_DWORD *)(v9 + 9136) & 1) != 0)
  {
    v723 = (*(_DWORD *)(v9 + 8544) ^ 0xD2A67298)
         - 760843624
         - 2 * ((*(_DWORD *)(v9 + 8544) ^ 0xD2A67298) & *(_DWORD *)(v9 + 7872) ^ *(_DWORD *)(v9 + 8544) & 6);
    v715 = *(_DWORD *)(v9 + 8712);
  }
  if ((*(_DWORD *)(v9 + 9136) & 2) != 0)
    v724 = v717;
  else
    v724 = v718;
  *(_DWORD *)(v9 + 9304) = v724;
  if ((v716 & 2) == 0)
    v718 = v717;
  *(_DWORD *)(v9 + 9152) = v718;
  *(_DWORD *)(v9 + 9456) = *(_DWORD *)(v9 + 9536);
  if ((v716 & 2) != 0)
    v725 = v719;
  else
    v725 = v700;
  *(_DWORD *)(v9 + 9096) = v725;
  if ((v716 & 2) != 0)
    v726 = v700;
  else
    v726 = v719;
  *(_DWORD *)(v9 + 9536) = v726;
  v727 = *(_DWORD *)(v9 + 8304);
  if ((v716 & 2) != 0)
    v728 = v715;
  else
    v728 = *(_DWORD *)(v9 + 8304);
  *(_DWORD *)(v9 + 9616) = v728;
  if ((v716 & 2) != 0)
    v729 = v727;
  else
    v729 = v715;
  *(_DWORD *)(v9 + 9392) = v729;
  if ((v716 & 2) != 0)
    v730 = v723;
  else
    v730 = v722;
  *(_DWORD *)(v9 + 9680) = v730;
  if ((v716 & 2) != 0)
    v731 = v722;
  else
    v731 = v723;
  *(_DWORD *)(v9 + 9640) = v731;
  v732 = *(_DWORD *)(v9 + 8272);
  if ((v716 & 2) != 0)
    v733 = *(_DWORD *)(v9 + 8272);
  else
    v733 = v713;
  *(_DWORD *)(v9 + 8880) = v733;
  if ((v716 & 2) != 0)
    v734 = v713;
  else
    v734 = v732;
  *(_DWORD *)(v9 + 8748) = v734;
  v735 = *(_DWORD *)(v9 + 8288);
  if ((v716 & 2) != 0)
    v736 = *(_DWORD *)(v9 + 8288);
  else
    v736 = v714;
  *(_DWORD *)(v9 + 8984) = v736;
  if ((v716 & 2) != 0)
    v737 = v714;
  else
    v737 = v735;
  *(_DWORD *)(v9 + 8980) = v737;
  v738 = *(_DWORD *)(v9 + 8300);
  v739 = *(_DWORD *)(v9 + 8280);
  if ((v716 & 2) != 0)
    v740 = *(_DWORD *)(v9 + 8280);
  else
    v740 = *(_DWORD *)(v9 + 8300);
  *(_DWORD *)(v9 + 8868) = v740;
  if ((v716 & 2) != 0)
    v741 = v738;
  else
    v741 = v739;
  *(_DWORD *)(v9 + 9036) = v741;
  *(_DWORD *)(v9 + 8328) = v720;
  v742 = *(_DWORD *)(v9 + 8608);
  if ((v716 & 2) == 0)
    v742 = v720;
  *(_DWORD *)(v9 + 9376) = v742;
  *(_DWORD *)(v9 + 8332) = v721;
  v743 = *(_DWORD *)(v9 + 8612);
  if ((v716 & 2) != 0)
    v743 = v721;
  *(_DWORD *)(v9 + 8952) = v743;
  *(_DWORD *)(v9 + 8344) = v709;
  v744 = *(_DWORD *)(v9 + 8616);
  if ((v716 & 2) != 0)
    v744 = v709;
  *(_DWORD *)(v9 + 9504) = v744;
  if ((v608 & 2) != 0)
    v745 = v660;
  else
    v745 = v659;
  if ((v608 & 2) != 0)
    v660 = v659;
  v746 = *(_DWORD *)(v9 + 9496);
  if ((v608 & 2) != 0)
    v747 = v661;
  else
    v747 = v663;
  *(_DWORD *)(v9 + 9544) = v747;
  if ((v608 & 2) != 0)
    v748 = v663;
  else
    v748 = v661;
  *(_DWORD *)(v9 + 9496) = v748;
  if ((v608 & 2) != 0)
    v749 = v664;
  else
    v749 = v662;
  *(_DWORD *)(v9 + 9264) = v749;
  if ((v608 & 2) != 0)
    v750 = v662;
  else
    v750 = v664;
  *(_DWORD *)(v9 + 9148) = v750;
  v751 = *(_DWORD *)(v9 + 9632);
  if ((v608 & 2) != 0)
    v752 = *(_DWORD *)(v9 + 9632);
  else
    v752 = v665;
  *(_DWORD *)(v9 + 9648) = v752;
  if ((v608 & 2) != 0)
    v753 = v665;
  else
    v753 = v751;
  *(_DWORD *)(v9 + 9688) = v753;
  v754 = *(_DWORD *)(v9 + 0x2000);
  if ((v608 & 2) != 0)
    v755 = *(_DWORD *)(v9 + 0x2000);
  else
    v755 = v640;
  *(_DWORD *)(v9 + 9080) = v755;
  if ((v608 & 2) != 0)
    v756 = v640;
  else
    v756 = v754;
  *(_DWORD *)(v9 + 9632) = v756;
  v757 = *(_DWORD *)(v9 + 9008);
  v758 = *(_DWORD *)(v9 + 8532);
  if ((v608 & 2) != 0)
    v759 = *(_DWORD *)(v9 + 9008);
  else
    v759 = *(_DWORD *)(v9 + 8532);
  *(_DWORD *)(v9 + 8968) = v759;
  if ((v608 & 2) != 0)
    v760 = v758;
  else
    v760 = v757;
  *(_DWORD *)(v9 + 9008) = v760;
  v761 = *(_DWORD *)(v9 + 8232);
  v762 = *(_DWORD *)(v9 + 8196);
  if ((v608 & 2) != 0)
    v763 = *(_DWORD *)(v9 + 8196);
  else
    v763 = *(_DWORD *)(v9 + 8232);
  *(_DWORD *)(v9 + 8784) = v763;
  if ((v608 & 2) != 0)
    v764 = v761;
  else
    v764 = v762;
  *(_DWORD *)(v9 + 8832) = v764;
  v765 = *(_DWORD *)(v9 + 8932);
  v766 = *(_DWORD *)(v9 + 8212);
  if ((v608 & 2) != 0)
    v767 = *(_DWORD *)(v9 + 8212);
  else
    v767 = *(_DWORD *)(v9 + 8932);
  *(_DWORD *)(v9 + 9296) = v767;
  if ((v608 & 2) != 0)
    v768 = v765;
  else
    v768 = v766;
  *(_DWORD *)(v9 + 9104) = v768;
  v769 = *(_DWORD *)(v9 + 8260);
  if ((v608 & 2) != 0)
    v770 = *(_DWORD *)(v9 + 8236);
  else
    v770 = *(_DWORD *)(v9 + 8260);
  if ((v608 & 2) == 0)
    v769 = *(_DWORD *)(v9 + 8236);
  *(_DWORD *)(v9 + 9424) = v769;
  v771 = *(_DWORD *)(v9 + 9552);
  v772 = *(_DWORD *)(v9 + 8240);
  if ((v608 & 2) != 0)
    v773 = *(_DWORD *)(v9 + 8240);
  else
    v773 = *(_DWORD *)(v9 + 9552);
  *(_DWORD *)(v9 + 8932) = v773;
  if ((v608 & 2) != 0)
    v774 = v771;
  else
    v774 = v772;
  *(_DWORD *)(v9 + 9128) = v774;
  v775 = *(_QWORD *)(v9 + 9736);
  v776 = ((unint64_t)(v745 ^ 0xD2A67298) >> v540) ^ ((unint64_t)(v745 ^ 0xD2A67298) << v775);
  v777 = v776 - 760843624 - ((2 * v776) & 0xA54CE530);
  *(_QWORD *)(v9 + 9552) = v540;
  v778 = ((unint64_t)(v660 ^ 0xD2A67298) >> v540) | ((unint64_t)(v660 ^ 0xD2A67298) << v775);
  v779 = v778 - 760843624 - ((2 * v778) & 0xA54CE530);
  v780 = (*(_DWORD *)(v9 + 8408) ^ 0x65457579) & 0xC083BCB0 ^ 0x295BDC35 ^ (((*(_DWORD *)(v9 + 8408) ^ 0x65457579) & 0xC083BCA8 ^ 0x8B814F47)
                                                                          - 1);
  v781 = (v780 | 0x4E0AD86A) - (v780 | 0xB1F52795);
  v782 = ((*(_DWORD *)(v9 + 8432) ^ 0x6ACC6B3F) + 1) ^ 0x7CDB20F0;
  v783 = (-2 - ((~(v782 & 0xB8832678) | 0xAD04CFFF) + (v782 & 0xA8000678 | 0x52FB3000))) ^ v782 & 0xB8832660;
  v784 = (v783 & 0x2686E6B8 ^ 0x22000031) + (v783 & 0xD9791947);
  v785 = *(_DWORD *)(v9 + 8416) - HIWORD(*(_DWORD *)(v9 + 8416));
  v786 = -1662430723 * (v785 + *(_DWORD *)(v9 + 9056) - (v785 >> 8));
  v787 = 236289761 * ((v786 ^ HIWORD(v786)) + *(_DWORD *)(v9 + 8392) + ((v786 ^ HIWORD(v786)) >> 8));
  v788 = 1643001935 * (*(_DWORD *)(v9 + 9072) ^ (v787 + HIWORD(v787) - ((v787 + HIWORD(v787)) >> 8)));
  v789 = v788 - HIWORD(v788) + v614 + ((v788 - HIWORD(v788)) >> 8);
  v790 = *(_DWORD *)(v9 + 8368) + *(_DWORD *)(v9 + 8384) + ((2 * *(_DWORD *)(v9 + 8376)) ^ 0x5AB31ACF);
  v791 = v789 - 760843624 - ((2 * v789) & 0xA54CE530);
  v792 = v790 - 760843624 - ((2 * v790) & 0xA54CE530);
  v793 = ((HIWORD(v636) ^ 0xD2A6) - 760843624 - ((2 * (HIWORD(v636) ^ 0xD2A6)) & 0xE530)) ^ v636;
  v794 = 236289761 * (v793 + (v792 ^ 0x2D598D67) + (v793 >> 8)) + 236289761;
  v795 = v794 + HIWORD(v794) - ((v794 + HIWORD(v794)) >> 8);
  v796 = v795 - 760843624 - ((2 * v795) & 0xA54CE530);
  v797 = (v791 ^ 0xD2A67298) + (v746 ^ 0xD2A67298);
  v798 = v797 - 760843624 - ((2 * v797) & 0xA54CE530);
  v799 = *(_DWORD *)(v9 + 8552);
  if ((v608 & 2) == 0)
    v799 = *(_DWORD *)(v9 + 8548);
  *(_DWORD *)(v9 + 8728) = v799;
  v800 = *(_DWORD *)(v9 + 9720);
  *(_DWORD *)(v9 + 8432) = v745;
  if (v800 == -760843624)
    v801 = v745;
  else
    v801 = v777;
  *(_DWORD *)(v9 + 8416) = v660;
  if (v800 == -760843624)
    v779 = v660;
  v802 = v796 ^ *(_DWORD *)(v9 + 8424);
  v803 = *(_DWORD *)(v9 + 9064);
  v804 = *(_DWORD *)(v9 + 8752);
  if ((v797 & 1) != 0)
    v805 = *(_DWORD *)(v9 + 8752);
  else
    v805 = *(_DWORD *)(v9 + 9064);
  if ((v797 & 1) != 0)
    v804 = v792;
  else
    v803 = *(_DWORD *)(v9 + 8424);
  if ((v797 & 1) != 0)
    v792 = *(_DWORD *)(v9 + 8424);
  v806 = (v797 & 2) == 0;
  v807 = v781 - 1309333611;
  v808 = (v781 - 107) ^ 1u;
  if ((v797 & 2) != 0)
    v809 = v804;
  else
    v809 = v803;
  v810 = *(_QWORD *)(v9 + 7976);
  if (v806)
  {
    v803 = v804;
    v812 = v805;
  }
  else
  {
    v812 = v792;
  }
  if (!v806)
    v792 = v805;
  v811 = ((unint64_t)(v809 ^ 0xD2A67298) >> v810) ^ ((unint64_t)(v809 ^ 0xD2A67298) << ((v781 - 107) ^ 1));
  v813 = v811 - 760843624 - ((2 * v811) & 0xA54CE530);
  v814 = v784 - 1;
  v815 = (v784 - 1) ^ 0xDFu;
  v816 = ((unint64_t)(v812 ^ 0xD2A67298) >> ((v784 - 1) ^ 0xDF)) | ((unint64_t)(v812 ^ 0xD2A67298) << v808);
  if (*(_DWORD *)(v9 + 9512) != -760843624)
    v809 = v813;
  v817 = v816 - 760843624 - ((2 * v816) & 0xA54CE530);
  *(_DWORD *)(v9 + 8424) = v814 ^ 0x5DA2BD47;
  if ((v814 ^ 0x5DA2BD47) == 0xD2A67298)
    v817 = v812;
  v818 = ((unint64_t)(v803 ^ 0xD2A67298) << v808) ^ ((unint64_t)(v803 ^ 0xD2A67298) >> v810);
  v819 = v818 - 760843624 - ((2 * v818) & 0xA54CE530);
  *(_QWORD *)(v9 + 8408) = v808;
  *(_QWORD *)(v9 + 8392) = v815;
  v820 = ((unint64_t)(v792 ^ 0xD2A67298) >> v815) + ((unint64_t)(v792 ^ 0xD2A67298) << v808);
  v821 = v820 - 760843624 - ((2 * v820) & 0xA54CE530);
  *(_DWORD *)(v9 + 9072) = v807 ^ 0x3E763999;
  if ((v807 ^ 0x3E763999) == 0xD2A67298)
    v822 = v803;
  else
    v822 = v819;
  if ((v807 ^ 0x3E763999) != 0xD2A67298)
    v792 = v821;
  v823 = *(_DWORD *)(v9 + 9592);
  v824 = v823 ^ *(_DWORD *)(v9 + 7920) ^ ((v792 ^ v779) - 1344733341 - ((2 * (v792 ^ v779)) & 0x5FB1FEC6));
  v825 = v801 ^ *(_DWORD *)(v9 + 7912) ^ ((v823 ^ 0x7D7E8DFB ^ v817)
                                        - 760843624
                                        - ((2 * (v823 ^ 0x7D7E8DFB ^ v817)) & 0xA54CE530));
  v826 = v823 ^ *(_DWORD *)(v9 + 7608) ^ v809 ^ *(_DWORD *)(v9 + 8536);
  v827 = *(_DWORD *)(v9 + 9200) ^ ((v822 ^ *(_DWORD *)(v9 + 7904))
                                 - 760843624
                                 - ((2 * (v822 ^ *(_DWORD *)(v9 + 7904))) & 0xA54CE530));
  v828 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 8720) + (((HIBYTE(v824) ^ 0xD2) + 18) ^ 0xC0)) ^ 0x4E;
  v829 = ((v828 >> 4) - ((v828 >> 3) & 8) + 36) ^ 0x24 | (16 * v828 - ((32 * v828) & 0xFFFFFFBF) - 39) ^ 0xFFFFFFD9;
  v830 = BYTE2(v824) ^ 0xA6;
  v831 = (v829 ^ 0xEB) + ((2 * v829) & 0xD6);
  HIDWORD(v832) = *(_DWORD *)(v614 + 4 * ((unsigned __int16)(v824 ^ 0x7298) >> 8));
  LODWORD(v832) = HIDWORD(v832);
  v833 = (v832 >> 8) - 760843624 - ((2 * (v832 >> 8)) & 0xA54CE530);
  v834 = (v827 - 1344733341 - ((2 * v827) & 0x5FB1FEC6)) ^ v823;
  v835 = *(_DWORD *)(v614 + 4 * ((v827 + 99 - ((2 * v827) & 0xC6)) ^ v823));
  v836 = v825 ^ 0xD2A67298;
  v837 = *(_DWORD *)(v614 + 4 * BYTE2(v834)) ^ __ROR4__(*(_DWORD *)(v614 + ((v836 >> 22) & 0x3FC)), 24);
  LODWORD(v832) = __ROR4__(*(_DWORD *)(v614 + 4 * v826), 16);
  v838 = *(_DWORD *)(v9 + 7808)
       + *(_DWORD *)(v9 + 8464)
       + (*(_DWORD *)(v9 + 9560) ^ 0xD2A67298)
       + (*(_DWORD *)(v9 + 9432) ^ 0x2D598D67)
       + (v833 ^ ((v837 ^ v832) - 760843624 - ((2 * (v837 ^ v832)) & 0xA54CE530)));
  v839 = *(_DWORD *)(v9 + 8480);
  *(_DWORD *)(v9 + 9064) = v823 ^ 0x7D7E8DFB;
  v840 = v823 ^ 0x7D7E8DFB ^ v839 ^ (v838 - 760843624 - ((2 * v838) & 0xA54CE530));
  v841 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9624) + (((v824 ^ 0x98) + 18) ^ 0x47));
  v842 = *(_DWORD *)(v9 + 7592);
  *(_DWORD *)(v9 + 8480) = v840;
  v843 = v842 ^ v840;
  LOBYTE(v842) = *(_BYTE *)(*(_QWORD *)(v9 + 9600) + ((-61 * (v842 ^ v840)) ^ 0x36)) ^ (-61 * (v842 ^ v840)) ^ 0xBC;
  v844 = ((v841 >> 2) | (v841 << 6)) ^ (4 * ((v841 >> 2) | (v841 << 6))) ^ (2 * ((v841 >> 2) | (v841 << 6))) ^ 0xFFFFFFC8;
  v845 = 1643001935 * v802 - ((1643001935 * v802) >> 16);
  v846 = *(_DWORD *)(v614 + 4 * (v831 + 21));
  v847 = (*(_DWORD *)(v9 + 8400) ^ 0xD2A67298) + v614 + v845 + (v845 >> 8);
  HIDWORD(v832) = *(_DWORD *)(v614 + 4 * BYTE1(v834));
  LODWORD(v832) = HIDWORD(v832);
  v848 = (v832 >> 8) ^ __ROR4__(*(_DWORD *)(v614 + 4 * ((v844 >> 4) | (16 * v844))), 16);
  HIDWORD(v832) = *(_DWORD *)(v614 + 4 * BYTE1(v836));
  LODWORD(v832) = HIDWORD(v832);
  v849 = v832 >> 8;
  HIDWORD(v832) = *(_DWORD *)(v614 + 4 * (v825 ^ 0x98u));
  LODWORD(v832) = HIDWORD(v832);
  v850 = (v832 >> 16) ^ __ROR4__(*(_DWORD *)(v614 + ((v834 >> 22) & 0x3FC)), 24);
  v851 = v849 ^ __ROR4__(v846, 24);
  LODWORD(v832) = __ROR4__(*(_DWORD *)(v614 + ((v826 >> 22) & 0x3FC)), 24);
  v852 = *(_DWORD *)(v9 + 8472) + (*(_DWORD *)(v9 + 9456) ^ 0xD2A67298);
  v853 = *(_DWORD *)(v614 + 4 * BYTE2(v836));
  *(_DWORD *)(v9 + 8472) = v852;
  LODWORD(v834) = v852 - 760843624 - ((2 * v852) & 0xA54CE530);
  v854 = v848 ^ v832 ^ v853;
  *(_DWORD *)(v9 + 9056) = v807;
  *(_DWORD *)(v9 + 9176) = v798;
  v855 = *(_DWORD *)(v9 + 7848) + (v807 ^ 0x132FB4FE) + (v798 ^ 0xD2A67298);
  *(_DWORD *)(v9 + 9456) = v834;
  v856 = *(_DWORD *)(v9 + 7600) ^ v823 ^ *(_DWORD *)(v9 + 8488) ^ (v855
                                                                 + (v834 ^ 0x2D598D67)
                                                                 + v854
                                                                 - 760843624
                                                                 - ((2 * (v855 + (v834 ^ 0x2D598D67) + v854)) & 0xA54CE530));
  v857 = (v856 - 760843624 - ((2 * v856) & 0xA54CE530)) ^ v770;
  *(_DWORD *)(v9 + 9200) = v770;
  v858 = (v857 - 760843624 - ((2 * v857) & 0xA54CE530)) ^ v770;
  v859 = ((*(_DWORD *)(v614 + 4 * BYTE1(v858)) << 24)
        - 760843624
        - ((*(_DWORD *)(v614 + 4 * BYTE1(v858)) << 25) & 0xA4000000)) ^ 0xD2A67298 | (*(_DWORD *)(v614
                                                                                                  + 4 * BYTE1(v858)) >> 8);
  v860 = v851 ^ *(_DWORD *)(v614 + 4 * BYTE2(v826)) ^ (((v835 << 16) - 760843624 - ((v835 << 17) & 0xA54C0000)) ^ 0xD2A67298 | HIWORD(v835));
  LODWORD(v836) = (v807 ^ 0x132FB4FE) + *(_DWORD *)(v9 + 7832);
  v861 = *(_DWORD *)(v9 + 9016) ^ 0x6A540528;
  *(_DWORD *)(v9 + 8680) = v861;
  LODWORD(v836) = v836 + 2 * v861 + (*(_DWORD *)(v9 + 9024) ^ 0x9F491881);
  *(_DWORD *)(v9 + 8752) = v814;
  v862 = *(_DWORD *)(v9 + 9156);
  v863 = v836 + (v814 ^ 0x8F04CFDF) + v860 + v862 + ~((2 * (v836 + (v814 ^ 0x8F04CFDF) + v860)) & 0xA54CE530);
  LODWORD(v836) = *(_DWORD *)(v9 + 8496) ^ *(_DWORD *)(v9 + 7640);
  *(_DWORD *)(v9 + 8536) = v863;
  LODWORD(v836) = v863 ^ v823 ^ (v836 - 760843624 - ((2 * v836) & 0xA54CE530));
  v864 = v836 ^ 0xAFD8FF63;
  v865 = *(_DWORD *)(v614 + 4 * BYTE2(v864)) ^ __ROR4__(*(_DWORD *)(v614+ 4* ((((v842 & 0x80) != 0) | (2 * v842)) ^ 0xFAu)), 16);
  v866 = v847 - 760843624 - ((2 * v847) & 0xA54CE530);
  HIDWORD(v832) = *(_DWORD *)(v614 + 4 * BYTE1(v826));
  LODWORD(v832) = HIDWORD(v832);
  v867 = v850 ^ *(_DWORD *)(v614 + 4 * v830);
  *(_DWORD *)(v9 + 8672) = v866;
  v868 = v823 ^ *(_DWORD *)(v9 + 7824) ^ *(_DWORD *)(v9 + 9120) ^ (((v867 + v862 + ~((2 * v867) & 0xA54CE530)) ^ ((v832 >> 8) - 760843624 - ((2 * (v832 >> 8)) & 0xA54CE530)))
                                                                 + (v798 ^ 0xD2A67298)
                                                                 + (v866 ^ 0x2D598D67)
                                                                 + 1);
  v869 = v865 ^ __ROR4__(*(_DWORD *)(v614 + 4 * (HIBYTE(v868) ^ 0x7D)), 24);
  v870 = *(_DWORD *)(v9 + 7632) ^ __ROR4__(*(_DWORD *)(v614 + 4 * ((unsigned __int16)(v868 ^ 0x8DFB) >> 8)), 8) ^ __ROR4__(*(_DWORD *)(v614 + ((v858 >> 22) & 0x3FC)), 24);
  LODWORD(v826) = v823 ^ *(_DWORD *)(v9 + 7888) ^ *(_DWORD *)(v614 + 4 * ((v868 ^ 0x7D7E8DFB) >> 16)) ^ __ROR4__(*(_DWORD *)(v614 + 4 * v858), 16) ^ __ROR4__(*(_DWORD *)(v614 + 4 * BYTE1(v864)), 8) ^ __ROR4__(*(_DWORD *)(v614 + ((v843 >> 22) & 0x3FC)), 24);
  v871 = v823 ^ *(_DWORD *)(v9 + 7816);
  v872 = v871 ^ __ROR4__(*(_DWORD *)(v614 + 4 * (v868 ^ 0xFBu)), 16) ^ __ROR4__(*(_DWORD *)(v614 + 4 * BYTE1(v843)), 8) ^ __ROR4__(*(_DWORD *)(v614 + ((v864 >> 22) & 0x3FC)), 24);
  v873 = v859 - 760843624 - ((2 * v859) & 0xA54CE530);
  HIDWORD(v832) = *(_DWORD *)(v614 + 4 * (v836 ^ 0x63u));
  LODWORD(v832) = HIDWORD(v832);
  LODWORD(v864) = *(_DWORD *)(v9 + 8440) ^ (v869 - 760843624 - ((2 * v869) & 0xA54CE530));
  v874 = v864 - 760843624 - ((2 * v864) & 0xA54CE530);
  v875 = v870 ^ *(_DWORD *)(v614
                          + 4 * ((BYTE2(v843) ^ 0x6F) + ((v843 >> 15) & 0xDE) - 111)) ^ ((v832 >> 16) - 760843624 - ((2 * (v832 >> 16)) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8456);
  LODWORD(v864) = v875 - 1344733341 - ((2 * v875) & 0x5FB1FEC6);
  LODWORD(v836) = v826 ^ *(_DWORD *)(v9 + 8696);
  v876 = v871 ^ ((v874 ^ v873) - 1344733341 - ((2 * (v874 ^ v873)) & 0x5FB1FEC6));
  LODWORD(v858) = v872 ^ *(_DWORD *)(v9 + 9004) ^ *(_DWORD *)(v614 + 4 * BYTE2(v858));
  v877 = *(_DWORD *)(v9 + 8504) ^ *(_DWORD *)(v9 + 7616);
  v878 = v864 ^ v823;
  v879 = *(_DWORD *)(v614 + 4 * (v836 ^ 0x63u));
  v880 = __ROR4__(*(_DWORD *)(v614 + 4 * BYTE1(v878)), 8) ^ 0xD2A67298 ^ (v879 << 16) ^ HIWORD(v879) ^ __ROR4__(*(_DWORD *)(v614 + ((v876 >> 22) & 0x3FC)), 24);
  LODWORD(v864) = *(_DWORD *)(v614 + 4 * ((v858 ^ 0x7D7E8DFB) >> 16));
  *(_DWORD *)(v9 + 8504) = v880;
  LODWORD(v864) = v864 ^ v880;
  *(_DWORD *)(v9 + 9004) = v864;
  LODWORD(v864) = (v877 - 760843624 - ((2 * v877) & 0xA54CE530)) ^ v864;
  LODWORD(v864) = (v864 - 1344733341 - ((2 * v864) & 0x5FB1FEC6)) ^ v823;
  v881 = *(_DWORD *)(v614 + 4 * v864);
  LODWORD(v834) = ((*(_DWORD *)(v614 + 4 * ((unsigned __int16)(v858 ^ 0x8DFB) >> 8)) << 24)
                 - 760843624
                 - ((*(_DWORD *)(v614 + 4 * ((unsigned __int16)(v858 ^ 0x8DFB) >> 8)) << 25) & 0xA4000000)) ^ 0xD2A67298 | (*(_DWORD *)(v614 + 4 * ((unsigned __int16)(v858 ^ 0x8DFB) >> 8)) >> 8);
  v882 = v834 - 760843624 - ((2 * v834) & 0xA54CE530);
  v883 = *(unsigned int *)(v614 + 4 * v878);
  v884 = *(_DWORD *)(v614 + 4 * BYTE2(v876));
  *(_DWORD *)(v9 + 8544) = v882;
  v885 = ((4 * *(_DWORD *)(v9 + 9172)) ^ 0xA720F004)
       - 760843624
       - ((2 * ((4 * *(_DWORD *)(v9 + 9172)) ^ 0xA720F004)) & 0xA54CE530);
  v886 = *(unsigned int *)(v614 + 4 * (v858 ^ 0xFBu));
  v887 = *(_DWORD *)(v614 + 4 * (BYTE2(v836) ^ 0xD8u)) ^ 0xD2A67298 ^ __ROR4__(*(_DWORD *)(v614 + 4 * BYTE1(v876)), 8) ^ __ROR4__(*(_DWORD *)(v614+ ((v878 >> 22) & 0x3FC)), 24) ^ ((unsigned __int16)(v886 >> ((BYTE2(v883) & 0x10 ^ 0x10) + (BYTE2(v883) & 0x10u))) | ((unsigned __int16)v886 << 16));
  *(_DWORD *)(v9 + 8696) = v884 ^ ((v883 >> 16) | ((_DWORD)v883 << 16)) ^ v882;
  *(_DWORD *)(v9 + 8532) = v885;
  *(_DWORD *)(v9 + 9120) = v887;
  LODWORD(v886) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9624) + ((BYTE2(v864) + 18) ^ 0x47));
  LODWORD(v886) = ((v886 >> 2) | ((_DWORD)v886 << 6)) ^ (4
                                                                     * ((v886 >> 2) | ((_DWORD)v886 << 6))) ^ (2 * ((v886 >> 2) | ((_DWORD)v886 << 6)));
  v888 = (984 * (HIWORD(v881) == (unsigned __int16)(HIWORD(v881) + 5347))) ^ *(_DWORD *)(v9 + 9576);
  *(_DWORD *)(v9 + 9576) = *(_DWORD *)(v614
                                     + 4
                                     * (((((v886 >> 4) | (16 * v886)) ^ 0x8C)
                                                        - ((2 * (((v886 >> 4) | (16 * v886)) ^ 0x8C)) & 0x94)
                                                        + 74) ^ 0x4Au));
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * v888) - 12))();
}

uint64_t sub_100346F58(uint64_t a1, int a2, int a3, unsigned int a4, uint64_t a5, char a6, unsigned __int8 a7, unsigned int a8)
{
  int v8;
  unint64_t v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  unsigned int v15;
  char v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned __int8 v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unint64_t v35;
  int v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unint64_t v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  BOOL v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  int v100;
  unint64_t v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  char v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  __int16 v130;
  int v131;
  unsigned int v132;
  unint64_t v133;

  v18 = *(_DWORD *)(v12 + 9012);
  v19 = *(_QWORD *)(v12 + 6280);
  v20 = *(_DWORD *)(v19 + 4 * BYTE2(v17));
  v21 = 53 * (v18 ^ 0x1065);
  *(_DWORD *)(v12 + 8532) = v21;
  v22 = *(unsigned __int8 *)(a5 + (((a8 >> (v18 - 17)) & (v21 ^ 0x1912) | (a8 >> 3) & 0xE0) ^ 0x1ELL));
  v23 = (((v22 >> 4) | (16 * v22)) ^ v22 & 0xB ^ a6) + 61;
  HIDWORD(v24) = v10 + 10908312 - ((2 * v10) & 0x4CE530) + 18;
  LODWORD(v24) = v10;
  v25 = *(unsigned int *)(v19 + 4 * (a7 ^ 0x98u));
  v26 = (unsigned __int16)(v25 >> ((v16 & 0x10 ^ 0x10) + (v16 & 0x10u))) | ((unsigned __int16)v25 << 16);
  *(_DWORD *)(v12 + 9272) = v26
                          - 760843624
                          - 2 * (v26 & 0x52A67299 ^ (v25 >> ((v16 & 0x10 ^ 0x10) + (v16 & 0x10u))) & 1);
  v27 = a2 | HIBYTE(v15);
  v28 = *(_DWORD *)(v19 + ((v9 >> 22) & 0x3FC))
      - 760843624
      - ((2 * *(_DWORD *)(v19 + ((v9 >> 22) & 0x3FC))) & 0xA54CE530);
  LODWORD(v25) = v13 ^ 0xD2A67298;
  *(_DWORD *)(v12 + 8696) = *(_DWORD *)(v19 + 4 * (a8 ^ 5u));
  v29 = *(_DWORD *)(v19 + ((v14 >> 22) & 0x3FC));
  v30 = *(_DWORD *)(v19 + 4 * BYTE1(v9));
  v31 = v25 | (a4 >> 8);
  *(_DWORD *)(v12 + 8688) = 1386640030;
  v32 = ((((v24 >> 24) - 4608) ^ 0xA6729800)
       - 760843624
       - 2 * ((((v24 >> 24) - 4608) ^ 0xA6729800) & 0x52A6729E ^ HIBYTE(v10) & 6)) ^ v20 ^ v8;
  v33 = v32 ^ 0xD2A67298;
  v35 = __PAIR64__(v30, __ROR4__(v28, 24));
  v34 = v35 ^ 0xA67298D2;
  LODWORD(v35) = v30;
  *(_DWORD *)(v12 + 8704) = (2 * v34) & 0xA54CE530;
  *(_DWORD *)(v12 + 9120) = v34 - 760843624;
  v36 = *(_DWORD *)(v19 + 4 * (BYTE2(a3) ^ 0xD8u));
  v37 = v27 ^ ((v35 >> 8) - 760843624 - ((2 * (v35 >> 8)) & 0xA54CE530)) ^ v11;
  v38 = *(_DWORD *)(v12 + 9264);
  v39 = *(_QWORD *)(v12 + 9552);
  v40 = v36 ^ __ROR4__(*(_DWORD *)(v19 + 4 * v23), 8);
  v41 = *(_QWORD *)(v12 + 9736);
  v42 = ((unint64_t)(v38 ^ 0xD2A67298) >> v39) ^ ((unint64_t)(v38 ^ 0xD2A67298) << v41);
  v43 = v42 - 760843624 - ((2 * v42) & 0xA54CE530);
  v44 = *(_DWORD *)(v12 + 9148);
  v45 = *(_QWORD *)(v12 + 9728);
  v46 = *(_DWORD *)(v12 + 9496);
  v47 = ((unint64_t)(v44 ^ 0xD2A67298) << v45) ^ ((unint64_t)(v44 ^ 0xD2A67298) >> v39);
  v48 = v47 - 760843624 - ((2 * v47) & 0xA54CE530);
  v49 = ((unint64_t)(v46 ^ 0xD2A67298) << v41) ^ ((unint64_t)(v46 ^ 0xD2A67298) >> v39);
  v50 = v49 - 760843624 - ((2 * v49) & 0xA54CE530);
  v51 = *(_DWORD *)(v12 + 9544);
  v52 = ((unint64_t)(v51 ^ 0xD2A67298) << v45) + ((unint64_t)(v51 ^ 0xD2A67298) >> v39);
  v53 = v52 - 760843624 - ((2 * v52) & 0xA54CE530);
  v54 = *(_DWORD *)(v12 + 9304);
  v55 = ((unint64_t)(v54 ^ 0xD2A67298) >> v39) + ((unint64_t)(v54 ^ 0xD2A67298) << v41);
  v56 = v55 - 760843624 - ((2 * v55) & 0xA54CE530);
  v57 = *(_DWORD *)(v12 + 9096);
  v58 = *(_DWORD *)(v12 + 9536);
  v59 = v58 ^ 0xD2A67298;
  *(_QWORD *)(v12 + 8512) = v59 >> v39;
  v61 = (v59 << v45) ^ (v59 >> v39);
  v62 = v61 - 760843624 - ((2 * v61) & 0xA54CE530);
  v63 = v37 ^ 0xD2A67298;
  v64 = *(_DWORD *)(v12 + 9720);
  if (v64 == -760843624)
    v65 = v38;
  else
    v65 = v43;
  if (v64 == -760843624)
    v56 = v54;
  else
    v58 = v62;
  *(_DWORD *)(v12 + 9416) = v58;
  v66 = *(_DWORD *)(v12 + 9608);
  if (v66 == -760843624)
    v67 = v46;
  else
    v67 = v50;
  if (v66 == -760843624)
  {
    v68 = v57;
  }
  else
  {
    v60 = ((unint64_t)(v57 ^ 0xD2A67298) << v41) | ((unint64_t)(v57 ^ 0xD2A67298) >> v39);
    v68 = v60 - 760843624 - ((2 * v60) & 0xA54CE530);
  }
  *(_DWORD *)(v12 + 8712) = v68;
  v69 = *(_DWORD *)(v12 + 9704);
  v70 = v69 == -760843624;
  if (v69 == -760843624)
    v53 = v51;
  v71 = v53 ^ 0xD2A67298 ^ *(_DWORD *)(v12 + 9576);
  v72 = v40;
  v73 = (2 * v40) & 0xA54CE530;
  if (v69 == -760843624)
    v48 = v44;
  v74 = v71 ^ v31 ^ __ROR4__(*(_DWORD *)(v12 + 8696), 16);
  v75 = __ROR4__(v29, 24);
  v76 = v33 & 0x52A672B8 ^ v32 & 0x20;
  v77 = v63 & 0x52A67299 ^ v37 & 1;
  v78 = v63 - 760843624;
  v79 = (v74 ^ v75) - 1344733341 - ((2 * (v74 ^ v75)) & 0x5FB1FEC6);
  v80 = *(_DWORD *)(v12 + 9592);
  v81 = (((v78 - 2 * v77) ^ v48) - 1344733341 - ((2 * ((v78 - 2 * v77) ^ v48)) & 0x5FB1FEC6)) ^ v80;
  v82 = (v81 - 760843624 - ((2 * v81) & 0xA54CE530)) ^ *(_DWORD *)(v12 + 8020);
  v83 = v67 ^ *(_DWORD *)(v12 + 7744) ^ (v33 - 760843624 - 2 * v76);
  v84 = (195 * HIBYTE(v82)) ^ *(unsigned __int8 *)(*(_QWORD *)(v12 + 9600)
                                                 + ((-61 * HIBYTE(v82)) ^ 0x36));
  v85 = *(unsigned int *)(v19
                        + 4
                        * (((unint64_t)(v84 ^ 0xC1u) >> (7 - ((v84 ^ 0x3E) & (v84 ^ 0xC1u)))) ^ (2 * (v84 ^ 0xC1))));
  LOBYTE(v84) = ((v85 >> 17) ^ 0x12) & 0x2E ^ 0x5C ^ ((BYTE2(v85) & 0x40)
                                                                  - (((v85 >> 17) ^ 0x12) & 0xAE)
                                                                  + 94);
  v86 = ((v84 | 0xF3) - (v84 | 0xC) + 12) ^ 0xF1 | (v85 >> 25);
  v87 = v80 ^ *(_DWORD *)(v12 + 7736) ^ v79;
  v88 = *(_DWORD *)(v19 + 4 * BYTE1(v87));
  v89 = (v88 >> 8) - 760843624 - ((2 * (v88 >> 8)) & 0x14CE530);
  *(_DWORD *)(v12 + 8696) = v89;
  v90 = (v89 ^ 0xD2A67298 | (v88 << 24)) - 760843624 - 2 * ((v89 ^ 0xD2A67298 | (v88 << 24)) & 0x52A672B8 ^ v89 & 0x20);
  v91 = *(_DWORD *)(v12 + 9064) ^ v65 ^ (*(_DWORD *)(v12 + 9120) - *(_DWORD *)(v12 + 8704)) ^ (v72 - 760843624 - v73) ^ *(_DWORD *)(v12 + 9272);
  v92 = *(_DWORD *)(v12 + 7484);
  *(_DWORD *)(v12 + 9064) = v91;
  v93 = v91 ^ v92;
  v94 = *(_DWORD *)(v19 + 4 * (v93 ^ 0x98u));
  v95 = (v94 << 16) - 760843624 - ((v94 << 17) & 0xA54C0000);
  *(_DWORD *)(v12 + 9120) = v95;
  v96 = v95 ^ 0xD2A67298 | HIWORD(v94);
  v97 = *(_DWORD *)(v12 + 9152);
  v98 = *(_QWORD *)(v12 + 8808);
  v99 = v93 ^ 0xD2A67298;
  v100 = (((*(_BYTE *)(v98 + (v86 ^ 0xF5)) + 91) ^ 0x7F) - 40) | ((_DWORD)v85 << 8);
  v101 = (v83 - 1344733341 - ((2 * v83) & 0x5FB1FEC6)) ^ v80;
  v102 = *(_DWORD *)(v19 + 4 * v101);
  v103 = ((unint64_t)(v97 ^ 0xD2A67298) >> v39) ^ ((unint64_t)(v97 ^ 0xD2A67298) << *(_QWORD *)(v12 + 9728));
  v104 = v96 - 760843624 - ((2 * v96) & 0xA54CE530);
  v105 = *(_DWORD *)(v19 + 4 * BYTE2(v82)) ^ __ROR4__(*(_DWORD *)(v19 + ((v101 >> 22) & 0x3FC)), 24);
  v106 = ((*(_DWORD *)(v19 + 4 * BYTE1(v99)) << 24)
        - 760843624
        - ((*(_DWORD *)(v19 + 4 * BYTE1(v99)) << 25) & 0xA4000000)) ^ 0xD2A67298 | (*(_DWORD *)(v19 + 4 * BYTE1(v99)) >> 8);
  v107 = *(_DWORD *)(v19 + ((v87 >> 22) & 0x3FC));
  v108 = (v107 << 8) - 760843624 - (*(_DWORD *)(v12 + 7944) & (v107 << 9));
  *(_DWORD *)(v12 + 9272) = v108;
  v109 = *(_DWORD *)(v19 + 4 * BYTE2(v87)) ^ __ROR4__(v102, 16) ^ v106 ^ v100;
  v110 = *(_DWORD *)(v19 + 4 * BYTE2(v99)) ^ 0xD2A67298 ^ (*(_DWORD *)(v19 + 4 * BYTE1(v101)) << 24) ^ (*(_DWORD *)(v19 + 4 * BYTE1(v101)) >> 8) ^ __ROR4__(*(_DWORD *)(v19 + 4 * ((*(_BYTE *)(*(_QWORD *)(v12 + 9520) + (((v82 >> 1) | ((v82 & 1) << 7)) ^ 0xF1)) ^ 0xCE) - 40)), 16);
  v111 = *(_DWORD *)(v19 + ((v99 >> 22) & 0x3FC));
  LODWORD(v101) = *(_DWORD *)(v19 + 4 * BYTE2(v101));
  v112 = *(_DWORD *)(v19 + 4 * BYTE1(v82));
  LODWORD(v87) = *(_DWORD *)(v19 + 4 * v87);
  LODWORD(v99) = *(_DWORD *)(v12 + 9248) ^ *(_DWORD *)(v12 + 9408) ^ 0x9ED49D53;
  v113 = v110 ^ ((v108 ^ 0xD2A67298 | HIBYTE(v107)) - 760843624 - ((2 * (v108 ^ 0xD2A67298 | HIBYTE(v107))) & 0xA54CE530));
  v114 = 601084065 * (*(_DWORD *)(v12 + 9172) ^ 0x69C83C01)
       - 760843624
       - ((1202168130 * (*(_DWORD *)(v12 + 9172) ^ 0x69C83C01)) & 0xA54CE530);
  v115 = v113
       + (*(_DWORD *)(v12 + 9192) ^ 0xD2A67298)
       - 760843624
       - ((2 * (v113 + (*(_DWORD *)(v12 + 9192) ^ 0xD2A67298))) & 0xA54CE530);
  *(_DWORD *)(v12 + 8536) = v115;
  v116 = 601084065 * (*(_DWORD *)(v12 + 9040) ^ 0xD2A67298)
       - 760843624
       - ((1202168130 * (*(_DWORD *)(v12 + 9040) ^ 0xD2A67298)) & 0xA54CE530);
  v117 = (v115 ^ 0xD2A67298) + 188437381 * ((*(_DWORD *)(v12 + 9224) ^ 0xB38D1034) + v99) + 188437381;
  *(_DWORD *)(v12 + 8520) = v116;
  v118 = (v114 ^ 0x2D598D67) + (v116 ^ 0xD2A67298) + v109 + 1;
  v119 = (-1457956229 * (*(_DWORD *)(v12 + 8132) ^ *(_DWORD *)(v12 + 9160) ^ 0x7497F6BB)) ^ __ROR4__(v111, 24) ^ v101 ^ __ROR4__(v112, 8);
  v120 = __ROR4__(v87, 16);
  v121 = ((v119 ^ v120) - 760843624 - ((2 * (v119 ^ v120)) & 0xA54CE530)) ^ *(_DWORD *)(v12 + 9240);
  v122 = *(_DWORD *)(v12 + 9400) ^ *(_DWORD *)(v12 + 8032) ^ ((*(_DWORD *)(v12 + 7728) ^ v56)
                                                            - 760843624
                                                            - ((2 * (*(_DWORD *)(v12 + 7728) ^ v56)) & 0xA54CE530)) ^ (v121 + 255843827 - ((2 * v121) & 0x1E7FBBE6));
  v123 = ((*(_DWORD *)(v12 + 8712) ^ *(_DWORD *)(v12 + 7768))
        - 760843624
        - ((2 * (*(_DWORD *)(v12 + 8712) ^ *(_DWORD *)(v12 + 7768))) & 0xA54CE530)) ^ v90;
  *(_DWORD *)(v12 + 9248) = v104;
  v124 = (v105 - 104 - ((2 * v105) & 0x30)) ^ v123 ^ v104;
  v126 = v103 - 760843624 - ((2 * v103) & 0xA54CE530);
  if (v70)
    v126 = v97;
  v125 = (v118 - 760843624 - ((2 * v118) & 0xA54CE530)) ^ *(_DWORD *)(v12 + 7480);
  v127 = (v125 - 760843624 - ((2 * v125) & 0xA54CE530)) ^ v126;
  v128 = (v117 - 760843624 - ((2 * v117) & 0xA54CE530)) ^ *(_DWORD *)(v12 + 7752);
  v129 = (v128 - 760843624 - ((2 * v128) & 0xA54CE530)) ^ *(_DWORD *)(v12 + 9416);
  v130 = (v122 - 157 - ((2 * v122) & 0xFEC6)) ^ v80;
  v131 = (v129 - 1344733341 - ((2 * v129) & 0x5FB1FEC6)) ^ v80;
  v132 = (v127 - 1344733341 - ((2 * v127) & 0x5FB1FEC6)) ^ v80;
  HIDWORD(v133) = *(_DWORD *)(v19
                            + 4
                            * (((*(_BYTE *)(v98 + (((v132 >> 17) & 0x80 | (v132 >> 25)) ^ 0xF5)) + 91) ^ 0x7F)
                                              - 40));
  LODWORD(v133) = HIDWORD(v133);
  *(_DWORD *)(v12 + 9576) = (v133 >> 24) ^ __ROR4__(*(_DWORD *)(v19+ 4* ((v124 + 99 - ((2 * v124) & 0xC6)) ^ v80)), 16) ^ *(_DWORD *)(v19 + 4 * BYTE2(v131)) ^ (((*(_DWORD *)(v19 + 4 * HIBYTE(v130)) << 24)- 760843624- ((*(_DWORD *)(v19 + 4 * HIBYTE(v130)) << 25) & 0xA4000000)) ^ 0xD2A67298 | (*(_DWORD *)(v19 + 4 * HIBYTE(v130)) >> 8));
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744)
                                        + 8
                                        * ((155
                                          * (((53 * (BYTE1(v131) & 0x67) + 120) | BYTE1(v131)) == 0)) ^ *(_DWORD *)(v12 + 9012)))
                            - 8))();
}

uint64_t sub_100347A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  BOOL v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  uint64_t v97;
  unsigned int v98;
  unint64_t v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned __int8 v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  uint64_t v111;
  unint64_t v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned __int8 v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  int v126;
  unint64_t v127;
  char v128;
  unint64_t v129;
  int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  uint64_t v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;

  v14 = *(_QWORD *)(v9 + 9728);
  v15 = *(_QWORD *)(v9 + 9552);
  v16 = ((unint64_t)(*(_DWORD *)(v9 + 9664) ^ a7) << v14) ^ ((unint64_t)(*(_DWORD *)(v9 + 9664) ^ a7) >> v15);
  v17 = v8;
  v18 = v11;
  v19 = ((unint64_t)(*(_DWORD *)(v9 + 9640) ^ a7) << v14) ^ ((unint64_t)(*(_DWORD *)(v9 + 9640) ^ a7) >> v15);
  v20 = ((unint64_t)(*(_DWORD *)(v9 + 9680) ^ a7) << v14) | ((unint64_t)(*(_DWORD *)(v9 + 9680) ^ a7) >> v15);
  v21 = *(_QWORD *)(v9 + 9736);
  v22 = ((unint64_t)(*(_DWORD *)(v9 + 9616) ^ a7) << v21) | ((unint64_t)(*(_DWORD *)(v9 + 9616) ^ a7) >> v15);
  v23 = *(_DWORD *)(v9 + 9328);
  v24 = ((unint64_t)(v23 ^ a7) >> v15) ^ ((unint64_t)(v23 ^ a7) << v14);
  v25 = ((unint64_t)(*(_DWORD *)(v9 + 9632) ^ a7) << v14) | ((unint64_t)(*(_DWORD *)(v9 + 9632) ^ a7) >> v15);
  v26 = *(_DWORD *)(v9 + 9080);
  v27 = ((unint64_t)(v26 ^ a7) << v21) | ((unint64_t)(v26 ^ a7) >> v15);
  *(_DWORD *)(v9 + 9416) = v16 + a7 - (v12 & (2 * v16));
  *(_DWORD *)(v9 + 9408) = v19 + a7 - (v12 & (2 * v19));
  v28 = ((unint64_t)(*(_DWORD *)(v9 + 9648) ^ a7) << v14) ^ ((unint64_t)(*(_DWORD *)(v9 + 9648) ^ a7) >> v15);
  *(_DWORD *)(v9 + 9400) = v20 + a7 - (v12 & (2 * v20));
  *(_DWORD *)(v9 + 9272) = v22 + a7 - (v12 & (2 * v22));
  LOBYTE(v16) = v21;
  v29 = ((unint64_t)(*(_DWORD *)(v9 + 9688) ^ a7) << v21)
      + ((unint64_t)(*(_DWORD *)(v9 + 9688) ^ a7) >> v15);
  *(_DWORD *)(v9 + 9240) = v24 + a7 - (v12 & (2 * v24));
  *(_DWORD *)(v9 + 9248) = v25 + a7 - (v12 & (2 * v25));
  v30 = *(_DWORD *)(v9 + 9280);
  v31 = ((unint64_t)(v30 ^ a7) >> v15) ^ ((unint64_t)(v30 ^ a7) << v14);
  *(_DWORD *)(v9 + 9120) = v27 + a7 - (v12 & (2 * v27));
  *(_DWORD *)(v9 + 9172) = v28 + a7 - (v12 & (2 * v28));
  v32 = *(_DWORD *)(v9 + 9472);
  v33 = ((unint64_t)(v32 ^ a7) << v21) | ((unint64_t)(v32 ^ a7) >> v15);
  *(_DWORD *)(v9 + 9012) = v29 + a7 - (v12 & (2 * v29));
  v34 = v31 + a7 - (v12 & (2 * v31));
  v35 = *(_DWORD *)(v9 + 9528);
  v36 = ((unint64_t)(v35 ^ a7) >> v15) + ((unint64_t)(v35 ^ a7) << v14);
  v37 = v33 + a7 - (v12 & (2 * v33));
  v38 = v36 + a7 - (v12 & (2 * v36));
  v39 = *(_DWORD *)(v9 + 9288);
  v40 = ((unint64_t)(v39 ^ a7) >> v15) | ((unint64_t)(v39 ^ a7) << v16);
  v41 = v40 + a7 - ((2 * v40) & 0xA54CE530);
  v42 = *(_DWORD *)(v9 + 9464);
  v43 = ((unint64_t)(v42 ^ a7) << v16) | ((unint64_t)(v42 ^ a7) >> v15);
  v44 = v43 + a7 - ((2 * v43) & 0xA54CE530);
  v45 = *(_DWORD *)(v9 + 9584);
  v46 = ((((unint64_t)(v45 ^ a7) >> v15) + a7 - ((2 * ((unint64_t)(v45 ^ a7) >> v15)) & 0xA54CE530)) ^ a7)
      + ((unint64_t)(v45 ^ a7) << v14);
  v47 = v46 + a7 - ((2 * v46) & 0xA54CE530);
  v48 = *(_DWORD *)(v9 + 9384);
  v49 = ((unint64_t)(v48 ^ a7) >> v15) + ((unint64_t)(v48 ^ a7) << v16);
  v50 = v49 + a7 - ((2 * v49) & 0xA54CE530);
  v51 = v7 ^ *(_DWORD *)(v9 + 8672);
  v52 = *(_DWORD *)(v9 + 7688) ^ 0x1F5B9ECB;
  *(_DWORD *)(v9 + 9224) = v13;
  *(_DWORD *)(v9 + 8696) = v13 - 6470;
  v53 = v52 ^ (v13 - 6470) ^ v18;
  v54 = (v10 ^ *(_DWORD *)(v9 + 9456) ^ v17 ^ 0xD2A67298)
      - 760843624
      - 2
      * ((v13 ^ 0x28F9) & (v10 ^ *(_DWORD *)(v9 + 9456) ^ v17) ^ (v10 ^ *(_DWORD *)(v9 + 9456) ^ v17 ^ 0xD2A67298) & *(_DWORD *)(v9 + 8688));
  v55 = v51 - 760843624 - ((2 * v51) & 0xA54CE530);
  v56 = *(_DWORD *)(v9 + 9704) == -760843624;
  if (*(_DWORD *)(v9 + 9704) == -760843624)
    v57 = *(_DWORD *)(v9 + 9664);
  else
    v57 = *(_DWORD *)(v9 + 9416);
  v58 = *(_DWORD *)(v9 + 9408);
  if (*(_DWORD *)(v9 + 9704) == -760843624)
    v58 = *(_DWORD *)(v9 + 9640);
  *(_DWORD *)(v9 + 9192) = v58;
  v59 = *(_DWORD *)(v9 + 9680);
  if (!v56)
    v59 = *(_DWORD *)(v9 + 9400);
  *(_DWORD *)(v9 + 9400) = v59;
  if (v56)
    v60 = v23;
  else
    v60 = *(_DWORD *)(v9 + 9240);
  *(_DWORD *)(v9 + 9408) = v60;
  v61 = *(_DWORD *)(v9 + 9720);
  v62 = *(_DWORD *)(v9 + 9616);
  if (v61 != -760843624)
    v62 = *(_DWORD *)(v9 + 9272);
  *(_DWORD *)(v9 + 9240) = v62;
  v63 = *(_DWORD *)(v9 + 9632);
  if (v61 != -760843624)
    v63 = *(_DWORD *)(v9 + 9248);
  *(_DWORD *)(v9 + 9160) = v63;
  v64 = *(_DWORD *)(v9 + 9120);
  if (v61 == -760843624)
    v64 = v26;
  *(_DWORD *)(v9 + 9040) = v64;
  v65 = *(_DWORD *)(v9 + 9648);
  if (v61 != -760843624)
    v65 = *(_DWORD *)(v9 + 9172);
  *(_DWORD *)(v9 + 9120) = v65;
  v66 = *(_DWORD *)(v9 + 9688);
  if (v61 != -760843624)
    v66 = *(_DWORD *)(v9 + 9012);
  *(_DWORD *)(v9 + 9172) = v66;
  if (v61 == -760843624)
    v67 = v30;
  else
    v67 = v34;
  *(_DWORD *)(v9 + 9012) = v67;
  if (v61 == -760843624)
    v68 = v32;
  else
    v68 = v37;
  *(_DWORD *)(v9 + 8704) = v68;
  if (v61 == -760843624)
    v69 = v35;
  else
    v69 = v38;
  *(_DWORD *)(v9 + 8712) = v69;
  if (v61 == -760843624)
    v70 = v39;
  else
    v70 = v41;
  if (v61 == -760843624)
    v71 = v42;
  else
    v71 = v44;
  if (v61 == -760843624)
  {
    v47 = v45;
    v72 = v48;
  }
  else
  {
    v72 = v50;
  }
  v73 = *(_DWORD *)(v9 + 9176);
  v74 = v55 ^ v73;
  v75 = (v54 ^ v73) + *(_DWORD *)(v9 + 7664) - 760843624 - ((2 * ((v54 ^ v73) + *(_DWORD *)(v9 + 7664))) & 0xA54CE530);
  v76 = (v53 - 760843624 - ((2 * v53) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9072);
  v77 = *(_DWORD *)(v9 + 8680) + *(_DWORD *)(v9 + 7680) + *(_DWORD *)(v9 + 9576);
  v78 = v77 - 760843624 - ((2 * v77) & 0xA54CE530);
  v79 = *(_DWORD *)(v9 + 8188);
  v80 = (*(_DWORD *)(v9 + 9432) ^ 0xD2A67298) + v79 + v74;
  v81 = v80 - 760843624 - ((2 * v80) & 0xA54CE530);
  v82 = (v75 ^ 0xD2A67298) + v79 - 760843624 - ((2 * ((v75 ^ 0xD2A67298) + v79)) & 0xA54CE530);
  v83 = *(_DWORD *)(v9 + 9016) ^ 0x95ABFAD7;
  v84 = *(_DWORD *)(v9 + 9056) ^ 0xECD04B01;
  v85 = *(_DWORD *)(v9 + 9024) ^ 0x60B6E77E;
  v86 = *(_DWORD *)(v9 + 8752) ^ 0x70FB3020;
  *(_DWORD *)(v9 + 9176) = v83;
  v87 = v84 + v83 + v85 + v86 + v76 + 2;
  v88 = v87 - 760843624 - ((2 * v87) & 0xA54CE530);
  v89 = *(_DWORD *)(v9 + 9592);
  v90 = ((v47 ^ *(_DWORD *)(v9 + 7720)) - 1344733341 - ((2 * (v47 ^ *(_DWORD *)(v9 + 7720))) & 0x5FB1FEC6)) ^ v89;
  *(_DWORD *)(v9 + 9416) = v82;
  v91 = v90 ^ v82;
  v92 = ((v71 ^ *(_DWORD *)(v9 + 7460)) - 760843624 - ((2 * (v71 ^ *(_DWORD *)(v9 + 7460))) & 0xA54CE530)) ^ v89;
  *(_DWORD *)(v9 + 9024) = v88;
  v93 = v92 ^ v88;
  v94 = v89 ^ *(_DWORD *)(v9 + 7464) ^ v72;
  *(_DWORD *)(v9 + 9272) = v81;
  v95 = v94 ^ v81;
  *(_DWORD *)(v9 + 9248) = v78;
  v96 = ((v89 ^ 0x7D7E8DFB ^ v78) - 760843624 - ((2 * (v89 ^ 0x7D7E8DFB ^ v78)) & 0xA54CE530)) ^ v57;
  v97 = *(_QWORD *)(v9 + 9624);
  v98 = *(unsigned __int8 *)(v97 + (((BYTE2(v93) ^ 0xD8) + 18) ^ 0x47));
  v99 = v95 ^ 0x7D7E8DFB;
  v100 = *(_DWORD *)(v9 + 7712) ^ *(_DWORD *)(v9 + 7536) ^ (v96 - 760843624 - ((2 * v96) & 0xA54CE530));
  v101 = (195 * (HIWORD(v95) ^ 0x7D7E)) ^ *(unsigned __int8 *)(*(_QWORD *)(v9 + 9600)
                                                             + ((-61 * (BYTE2(v95) ^ 0x7E)) ^ 0x36)) ^ 0xFFFFFFC1;
  v102 = ((v98 >> 2) | (v98 << 6)) ^ (4 * ((v98 >> 2) | (v98 << 6))) ^ (2 * ((v98 >> 2) | (v98 << 6))) ^ 0xFFFFFFC8;
  v103 = *(unsigned __int8 *)(v97 + (((BYTE1(v91) ^ 0x72) + 18) ^ 0x47));
  v104 = (v102 >> 4) | (16 * v102);
  v105 = v103 & 0xFC ^ ((v103 >> 2) | (v103 << 6)) ^ (2 * ((v103 >> 2) | (v103 << 6))) ^ 0xFFFFFFC8;
  LOBYTE(v103) = (v105 >> 4) | (16 * v105);
  v106 = *(_QWORD *)(v9 + 6280);
  HIDWORD(v107) = *(_DWORD *)(v106 + 4 * BYTE1(v99));
  LODWORD(v107) = HIDWORD(v107);
  v108 = *(_DWORD *)(v106 + 4 * (v91 ^ 0x98u));
  v109 = ((v108 << 16) - 760843624 - ((v108 << 17) & 0xA54C0000)) ^ 0xD2A67298 | HIWORD(v108);
  v110 = *(_DWORD *)(v106 + ((v99 >> 22) & 0x3FC));
  v111 = *(_QWORD *)(v9 + 8152);
  LOBYTE(v99) = *(_BYTE *)(v111 + ((-61 * HIBYTE(v110)) ^ 0xCELL)) + ((-61 * HIBYTE(v110)) ^ 0xA7) + 98;
  LODWORD(v99) = (((v99 & 0x80) != 0) | (2 * v99)) ^ 0x84 | (v110 << 8);
  v112 = v93 ^ 0xAFD8FF63;
  v113 = *(_DWORD *)(v106 + 4 * ((v100 ^ 0xD2A67298) >> 16)) ^ __ROR4__(*(_DWORD *)(v106+ ((v112 >> 22) & 0x3FC)), 24);
  v114 = (v113 - 760843624 - ((2 * v113) & 0xA54CE530)) ^ ((v107 >> 8) - 760843624 - ((2 * (v107 >> 8)) & 0xA54CE530));
  v115 = (v114 - 760843624 - ((2 * v114) & 0xA54CE530)) ^ (v109 - 760843624 - ((2 * v109) & 0xA54CE530));
  v116 = v89 ^ *(_DWORD *)(v9 + 7456) ^ v70 ^ __ROR4__(*(_DWORD *)(v106 + 4 * (v100 ^ 0x98u)), 16);
  v117 = ((v100 ^ 0xD2A67298) >> 24) - (((v100 ^ 0xD2A67298) >> 23) & 0x70) + 56;
  LOBYTE(v114) = (*(_BYTE *)(*(_QWORD *)(v9 + 8808)
                           + (((v100 >> 1) & 0x80 | ((unsigned __int16)(v100 ^ 0x7298) >> 9)) ^ 0xF5))
                + 91) ^ 0x7F;
  v118 = *(_DWORD *)(v106 + 4 * v104);
  v119 = *(_DWORD *)(v106 + 4 * (v93 ^ 0x63u));
  v120 = *(_DWORD *)(v106 + 4 * (v117 ^ 0x38u));
  v121 = v116 ^ __ROR4__(*(_DWORD *)(v106 + 4 * BYTE1(v112)), 8) ^ *(_DWORD *)(v106 + 4 * (BYTE2(v91) ^ 0xA6u)) ^ v99;
  v122 = v89 ^ *(_DWORD *)(v9 + 7452) ^ *(_DWORD *)(v9 + 8704) ^ (v115 - 760843624 - ((2 * v115) & 0xA54CE530));
  v123 = *(_DWORD *)(v9 + 7704) ^ 0xAFD8FF63 ^ v89 ^ *(_DWORD *)(v9 + 8712) ^ v118 ^ __ROR4__(*(_DWORD *)(v106+ 4* (HIBYTE(v91) ^ 0xD2)), 24) ^ __ROR4__(*(_DWORD *)(v106 + 4 * (v114 - 40)), 8) ^ __ROR4__(*(_DWORD *)(v106 + 4 * (v95 ^ 0xFBu)), 16);
  v124 = v121 ^ 0x7D7E8DFBu;
  v125 = v122 ^ 0xAFD8FF63;
  v126 = *(_DWORD *)(v106 + 4 * (((v101 & 0x80) != 0) | (2 * v101))) ^ *(_DWORD *)(v9 + 7696) ^ __ROR4__(*(_DWORD *)(v106 + 4 * v103), 8) ^ __ROR4__(v119, 16);
  LODWORD(v107) = __ROR4__(v120, 24);
  *(_DWORD *)(v9 + 9576) = 1386640029;
  LODWORD(v97) = ((v126 ^ v107 ^ 0xD2A67298)
                - 760843624
                - 2 * ((v126 ^ v107 ^ 0xD2A67298) & 0x52A6729D ^ (v126 ^ v107) & 5)) ^ *(_DWORD *)(v9 + 9012);
  v127 = ((_DWORD)v97 - 1344733341 - ((2 * (_DWORD)v97) & 0x5FB1FEC6)) ^ v89;
  LOBYTE(v91) = *(_BYTE *)(v111 + ((-61 * (BYTE2(v121) ^ 0x7E)) ^ 0xCEu))
              + ((-61 * (BYTE2(v121) ^ 0x7E)) ^ 0xA7)
              + 98;
  LOBYTE(v118) = (2 * v91) | ((v91 & 0x80) != 0);
  v128 = ((2 * v91) & 0x18 ^ 0x18) + ((2 * v91) & 0x18);
  v129 = *(unsigned int *)(v106 + ((v127 >> 22) & 0x3FC));
  v130 = ((*(_BYTE *)(*(_QWORD *)(v9 + 9568) + (((v129 >> 19) & 0xE0 | (v129 >> 27)) ^ 0xD0)) ^ ((v129 >> 19) & 0xE0 | (v129 >> 27)) ^ 0xD6)
                         + 61) | ((_DWORD)v129 << 8);
  LODWORD(v129) = ((195 * HIBYTE(*(_DWORD *)(v106 + ((v123 >> 22) & 0x3FC)))) ^ 0xFFFFFFA7)
                + *(unsigned __int8 *)(v111
                                     + ((-61 * HIBYTE(*(_DWORD *)(v106 + ((v123 >> 22) & 0x3FC)))) ^ 0xCELL))
                + 98;
  v131 = (((v129 & 0x80) != 0) | (2 * v129)) ^ 0x84 | (*(_DWORD *)(v106 + ((v123 >> 22) & 0x3FC)) << 8);
  LODWORD(v129) = ((v89 ^ 0xAFD8FF63) - ((2 * (v89 ^ 0xAFD8FF63) + 59683884) & 0x5FB1FEC6) + 1906334073) ^ 0xAFD8FF63;
  v132 = v129 - ((2 * v129 + 2087799764) & 0x5FB1FEC6) - 300833459;
  v133 = v132 ^ *(_DWORD *)(v9 + 7648) ^ *(_DWORD *)(v9 + 9040) ^ *(_DWORD *)(v106 + 4 * BYTE2(v125)) ^ __ROR4__(*(_DWORD *)(v106 + 4 * (v121 ^ 0xFBu)), 16) ^ __ROR4__(*(_DWORD *)(v106 + 4 * BYTE1(v127)), 8) ^ v131;
  v134 = ((*(_DWORD *)(v9 + 9120) ^ 0xD2A67298)
        - 760843624
        - 2 * ((*(_DWORD *)(v9 + 9120) ^ 0xD2A67298) & 0x52A6729A ^ *(_DWORD *)(v9 + 9120) & 2)) ^ 0xD2A67298 ^ __ROR4__(*(_DWORD *)(v106 + ((v124 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v106 + 4 * v127), 16) ^ *(_DWORD *)(v106 + 4 * BYTE2(v123)) ^ __ROR4__(*(_DWORD *)(v106 + 4 * BYTE1(v125)), 8);
  v135 = *(unsigned int *)(v106 + 4 * BYTE1(v123));
  v136 = *(_DWORD *)(v106 + 4 * BYTE2(v127));
  LODWORD(v127) = *(_DWORD *)(v9 + 7432) ^ v132 ^ *(_DWORD *)(v9 + 9160) ^ __ROR4__(*(_DWORD *)(v106+ 4* (v122 ^ 0x63u)), 16) ^ (v135 >> 8) ^ *(_DWORD *)(v106 + 4 * (v118 ^ 0x84u)) ^ (v135 << v128) ^ v130;
  LODWORD(v123) = v89 ^ *(_DWORD *)(v9 + 7448) ^ *(_DWORD *)(v9 + 9172) ^ v136 ^ __ROR4__(*(_DWORD *)(v106+ ((v125 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v106 + 4 * v123), 16) ^ __ROR4__(*(_DWORD *)(v106 + 4 * BYTE1(v124)), 8);
  LODWORD(v124) = *(_QWORD *)(v9 + 7656) ^ *(_QWORD *)(v9 + 7792) ^ v132 ^ (v134 - 1344733341 - ((2 * v134) & 0x5FB1FEC6));
  v137 = (((BYTE1(v127) - ((v127 >> 7) & 0x84) + 66) & 0xFE) >> 1) ^ 0x21;
  v138 = (v137 - ((2 * v137) & 0x48) + 36) ^ ((v127 >> 8 << 7) | 0x6F);
  v139 = *(_DWORD *)(v106 + 4 * (BYTE2(v123) ^ 0x7Eu)) ^ __ROR4__(*(_DWORD *)(v106+ 4* ((*(_BYTE *)(*(_QWORD *)(v9 + 9520) + ((v138 + 176637769 - ((2 * v138) & 0x92)) ^ 0xA8747F3)) ^ 0xCE)- 40)), 8) ^ __ROR4__(*(_DWORD *)(v106 + 4 * v124), 16) ^ __ROR4__(*(_DWORD *)(v106+ (((unint64_t)(v133 ^ 0x7D7E8DFBu) >> 22) & 0x3FC)), 24);
  LODWORD(v127) = (*(unsigned __int8 *)(v111
                                      + ((-61
                                                         * (*(_BYTE *)(v9 + 7416) ^ v132 ^ *(_BYTE *)(v9 + 9400) ^ (v139 - 104 - ((2 * v139) & 0x30)))) ^ 0xCELL))
                 + ((195
                   * (*(_DWORD *)(v9 + 7416) ^ v132 ^ *(_DWORD *)(v9 + 9400) ^ (v139
                                                                              - 760843624
                                                                              - ((2 * v139) & 0xA54CE530)))) ^ 0xFFFFFFA7)
                 + 98) ^ *(_DWORD *)(v9 + 7436);
  HIDWORD(v107) = *(_DWORD *)(v106
                            + 4
                            * ((((2 * v127) | ((v127 & 0x80) != 0))
                                               - 2 * (((2 * v127) & 0x2F | ((v127 & 0x80) != 0)) ^ (2 * v127) & 4)
                                               + 43) ^ 0x2Bu));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                                      + 8
                                                      * ((473
                                                        * (((unsigned __int16)(HIWORD(v107) + 6768) | HIWORD(HIDWORD(v107))) != 0)) ^ *(_DWORD *)(v9 + 9224)))
                                          - 12))(3534123672);
}

uint64_t sub_1003489DC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  unint64_t v41;
  unsigned int v42;
  uint64_t v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  unint64_t v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned __int8 v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  unint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  int v90;
  unsigned int v91;
  unint64_t v92;
  int v93;
  unsigned int v94;
  _BOOL4 v95;
  uint64_t (*v96)(uint64_t);

  *(_QWORD *)(v11 + 9400) = v10;
  v19 = *(_DWORD *)(v11 + 9320);
  v20 = v19 ^ 0xD2A67298;
  v21 = v20 << v13;
  v22 = *(_QWORD *)(v11 + 9552);
  v23 = v20 >> v22;
  LODWORD(v20) = 567 * (v6 ^ 0xB94);
  *(_DWORD *)(v11 + 9408) = v20;
  LODWORD(v20) = v20 ^ 0x81;
  *(_DWORD *)(v11 + 9240) = v20;
  v24 = v21 + v23 - 760843624 - ((v20 ^ 0xA54CEA30) & (2 * (v21 + v23)));
  LODWORD(v23) = ((*(_DWORD *)(v18 + 4 * BYTE1(v8)) >> 8)
                - 760843624
                - ((2 * (*(_DWORD *)(v18 + 4 * BYTE1(v8)) >> 8)) & 0x14CE530)) ^ 0xD2A67298 | ((*(_DWORD *)(v18 + 4 * BYTE1(v8)) << 24)
                                                                                               - 760843624
                                                                                               - ((*(_DWORD *)(v18 + 4 * BYTE1(v8)) << 25) & 0xA4000000)) ^ 0xD2A67298;
  v25 = v23 - 760843624 - (v15 & (2 * v23));
  LODWORD(v23) = ((unint64_t)(*(_DWORD *)(v11 + 9440) ^ 0xD2A67298) << v13)
               + ((unint64_t)(*(_DWORD *)(v11 + 9440) ^ 0xD2A67298) >> v22);
  v26 = v23 - 760843624 - (v15 & (2 * v23));
  v27 = *(_DWORD *)(v18 + 4 * BYTE2(a5));
  v28 = *(_DWORD *)(v18 + 4 * a4);
  v29 = *(_DWORD *)(v18 + ((a2 >> 22) & 0x3FC));
  if (v17 == -760843624)
  {
    v30 = *(_DWORD *)(v11 + 9440);
  }
  else
  {
    v19 = v24;
    v30 = v26;
  }
  HIDWORD(v31) = *(_DWORD *)(v18 + 4 * v8);
  LODWORD(v31) = HIDWORD(v31);
  v32 = (v31 >> 16) - 760843624 - 2 * ((v31 >> 16) & *(_DWORD *)(v11 + 9576) ^ *(_DWORD *)&v12 & HIWORD(HIDWORD(v31)));
  v33 = *(_DWORD *)(v18 + 4 * BYTE1(a5));
  v34 = *(_DWORD *)(v18 + 4 * BYTE2(a2));
  v35 = *(_DWORD *)(v18 + ((a4 >> 22) & 0x3FC));
  v36 = *(_DWORD *)(v11 + 7576);
  *(_DWORD *)(v11 + 9592) = v6;
  v37 = *(_DWORD *)(v18 + 4 * BYTE2(a4));
  v38 = *(_DWORD *)(v18 + ((v8 >> 22) & 0x3FC));
  v39 = *(_DWORD *)(v18 + 4 * (v9 ^ 0xFBu));
  v40 = *(_DWORD *)(v18 + 4 * BYTE1(a2));
  v41 = v36 ^ 0x7D7E8DFB ^ v16 ^ v30 ^ v34 ^ (v33 >> 8) ^ (v33 << 24) ^ __ROR4__(v35, 24) ^ v32;
  v42 = (((v40 >> 8) - 760843624 - ((2 * (v40 >> 8)) & 0x14CE530)) ^ 0xD2A67298)
      + *(_DWORD *)(v11 + 7408)
      + ((*(_DWORD *)(v11 + 7964)
        + (v40 << 24)
        - 760843624
        - 2 * ((*(_DWORD *)(v11 + 7964) + (v40 << 24)) & v5 ^ *(_DWORD *)(v11 + 7368))) ^ 0xD2A67298);
  v43 = *(_QWORD *)(v11 + 9728);
  v44 = ((unint64_t)(*(_DWORD *)(v11 + 9448) ^ 0xD2A67298) >> v22) ^ ((unint64_t)(*(_DWORD *)(v11 + 9448) ^ 0xD2A67298) << v43);
  v45 = v44 - 760843624 - (v15 & (2 * v44));
  if (*(_DWORD *)(v11 + 9720) == -760843624)
    v45 = *(_DWORD *)(v11 + 9448);
  v46 = ((v45 ^ *(_DWORD *)(v11 + 7404)) - 760843624 - (v15 & (2 * (v45 ^ *(_DWORD *)(v11 + 7404))))) ^ 0xD2A67298 ^ v37 ^ __ROR4__(v38, 24);
  v47 = __ROR4__(v39, 16);
  *(_DWORD *)(v11 + 9432) = v16;
  v48 = ((v46 ^ v47 ^ v42) - 1344733341 - ((2 * (v46 ^ v47 ^ v42)) & 0x5FB1FEC6)) ^ v16;
  v49 = *(_DWORD *)(v11 + 7544);
  *(_DWORD *)(v11 + 8544) = v14;
  v50 = v14 ^ v49;
  v51 = *(_DWORD *)(v11 + 7568) ^ 0x7D7E8DFB ^ v16 ^ v27 ^ __ROR4__(v28, 16) ^ __ROR4__(v29, 24) ^ v19 ^ v25;
  v52 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 9600) + ((-61 * BYTE2(v51)) ^ 0x36)) ^ (195 * HIWORD(v51)) ^ 0xFFFFFFC1;
  *(_QWORD *)(v11 + 9720) = (v52 >> 7) & 1 | (2 * v52);
  v53 = *(unsigned __int8 *)(v7 + ((-61 * BYTE1(v51)) ^ 0xCELL))
      + ((195 * (v51 >> 8)) ^ 0xFFFFFFA7)
      + 98;
  v54 = ((v53 & 0x80) != 0) | (2 * (v53 ^ *(_BYTE *)(v11 + 7552)));
  HIDWORD(v55) = *(_DWORD *)(v18 + 4 * HIBYTE(v51));
  LODWORD(v55) = HIDWORD(v55);
  v56 = (v55 >> 24) - 760843624 - (v15 & (2 * (v55 >> 24)));
  v57 = *(_DWORD *)(v18 + 4 * (v50 ^ 0x98u));
  v58 = (v57 << 16) - 760843624 - ((v57 << 17) & 0xA54C0000);
  HIDWORD(v55) = *(_DWORD *)(v18 + 4 * ((unsigned __int16)(v50 ^ 0x7298) >> 8));
  LODWORD(v55) = HIDWORD(v55);
  v59 = (v55 >> 8) - 760843624 - (v15 & (2 * (v55 >> 8)));
  v60 = (*(_DWORD *)(v11 + 9176) - ((2 * *(_DWORD *)(v11 + 9176) + 1711993706) & v15) - 2052330419) ^ 0xD2A67298;
  v61 = *(_DWORD *)(v11 + 9256);
  v62 = *(_QWORD *)(v11 + 9736);
  v63 = ((unint64_t)(v61 ^ 0xD2A67298) << v62) ^ ((unint64_t)(v61 ^ 0xD2A67298) >> ((v60
                                                                                                 - ((2 * v60 - 106) & v15)
                                                                                                 - 29) ^ 0x98));
  v64 = v63 - 760843624 - (v15 & (2 * v63));
  v65 = ((unint64_t)(*(_DWORD *)(v11 + 9116) ^ 0xD2A67298) << v62) ^ ((unint64_t)(*(_DWORD *)(v11 + 9116) ^ 0xD2A67298) >> ((v60 - ((2 * v60 - 106) & v15) - 29) ^ 0x98));
  v66 = v65 - 760843624 - (v15 & (2 * v65));
  v67 = ((*(_DWORD *)(v18 + 4 * BYTE1(v48)) << 24)
       - 760843624
       - ((*(_DWORD *)(v18 + 4 * BYTE1(v48)) << 25) & 0xA4000000)) ^ 0xD2A67298 | (*(_DWORD *)(v18 + 4 * BYTE1(v48)) >> 8);
  HIDWORD(v55) = *(_DWORD *)(v18 + 4 * v41);
  LODWORD(v55) = HIDWORD(v55);
  v68 = *(_DWORD *)(v18 + 4 * ((v50 ^ 0xD2A67298) >> 16)) ^ __ROR4__((v55 >> 28) ^ __ROR4__((v67- 760843624- (v15 & (2 * v67))) ^ v56, 12) ^ 0x33D382A5, 20);
  v69 = v68 - 760843624 - (v15 & (2 * v68));
  v70 = ((unint64_t)(*(_DWORD *)(v11 + 9312) ^ 0xD2A67298) >> ((v60 - ((2 * v60 - 106) & v15) - 29) ^ 0x98))
      + ((unint64_t)(*(_DWORD *)(v11 + 9312) ^ 0xD2A67298) << v43);
  v71 = v70 - 760843624 - (v15 & (2 * v70));
  v72 = *(_DWORD *)(v18 + 4 * v54);
  if (v60 - ((2 * v60 - 1711993706) & v15) == -1291486795)
    v73 = *(_DWORD *)(v11 + 9116);
  else
    v73 = v66;
  v74 = v73 ^ *(_DWORD *)(v11 + 7392) ^ v69;
  v75 = (2 * v74) & 0x5FB1FEC6;
  v76 = v74 - 1344733341;
  if (v60 - ((2 * v60 - 1711993706) & v15) == -1291486795)
    v71 = *(_DWORD *)(v11 + 9312);
  v77 = v76 - v75;
  v78 = *(_DWORD *)(v18 + 4 * BYTE2(v41));
  v79 = *(_DWORD *)(v18 + ((v48 >> 22) & 0x3FC));
  v80 = *(_DWORD *)(v11 + 7560) ^ 0xD2A67298 ^ v71 ^ __ROR4__(*(_DWORD *)(v18 + 4 * v48), 16);
  v81 = *(_DWORD *)(v11 + 9432);
  *(_DWORD *)(v11 + 9552) = v58;
  v82 = v58 ^ 0xD2A67298;
  if (v60 - ((2 * v60 - 1711993706) & v15) == -1291486795)
    v84 = v61;
  else
    v84 = v64;
  v85 = __ROR4__(*(_DWORD *)(v18 + ((v41 >> 22) & 0x3FC)), 24);
  v83 = *(_DWORD *)(v18 + 4 * *(_QWORD *)(v11 + 9720));
  v86 = ((v80 ^ v83 ^ v59 ^ v85) - 1344733341 - ((2 * (v80 ^ v83 ^ v59 ^ v85)) & 0x5FB1FEC6)) ^ v81;
  v87 = v82 | HIWORD(v57);
  v88 = v77 ^ v81 ^ 0x382A533Du;
  v89 = *(_DWORD *)(v11 + 7380) ^ __ROR4__(v72, 8) ^ v78;
  v90 = __ROR4__(v79, 24);
  v91 = ((v89 ^ v90 ^ v87 ^ 0xD2A67298)
       - 760843624
       - 2 * ((v89 ^ v90 ^ v87 ^ 0xD2A67298) & *(_DWORD *)(v11 + 9576) ^ (v89 ^ v90 ^ v87) & 5)) ^ v84;
  LOWORD(v87) = (v91 - 157 - ((2 * v91) & 0xFEC6)) ^ v81;
  HIDWORD(v92) = *(_DWORD *)(v18 + 4 * BYTE1(v87));
  LODWORD(v92) = HIDWORD(v92);
  v93 = *(_DWORD *)(v18 + ((v86 >> 22) & 0x3FC));
  v94 = *(_DWORD *)(v18
                  + 4
                  * ((*(_BYTE *)(*(_QWORD *)(v11 + 9520)
                                                + ((((((_BYTE)v87 << 7) - 39) ^ 0xD9) & 0x80u | (v87 >> 1)) ^ 0xF1)) ^ 0xCE)
                                    - 40));
  *(_DWORD *)(v11 + 9720) = (v92 >> 8) - 760843624 - 2 * ((v92 >> 8) & 0x52A6729F ^ (HIDWORD(v92) >> 8) & 7);
  v95 = ((unsigned __int16)(HIWORD(v94) - 12432) | HIWORD(v94)) != 0;
  v96 = (uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                                    + 8 * ((v95 | (4 * v95)) ^ *(_DWORD *)(v11 + 9592)))
                                        - 8);
  HIDWORD(v92) = v93;
  LODWORD(v92) = v93;
  *(_DWORD *)(v11 + 9592) = v92 >> 24;
  return v96(v88);
}

uint64_t sub_100349124@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  char v7;
  int v8;
  int v9;
  unsigned __int8 v10;
  __int16 v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned __int8 v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  unsigned __int8 v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  unint64_t v61;
  int v62;
  uint64_t (*v63)(uint64_t);

  *(_DWORD *)(v12 + 9240) = v8;
  *(_DWORD *)(v12 + 8532) = a7;
  v20 = *(_DWORD *)(v12 + 9408);
  v21 = (v20 + 1278816326) & 0xB3C6CDFB;
  *(_DWORD *)(v12 + 9576) = v21;
  v22 = *(_BYTE *)(*(_QWORD *)(v12 + 8720) + ((HIBYTE(v11) + 18) ^ v21 ^ 0xD03)) ^ 0x4E;
  HIDWORD(v23) = *(_DWORD *)(v19 + 4 * ((v22 >> 4) | (16 * v22)));
  LODWORD(v23) = HIDWORD(v23);
  v24 = *(_DWORD *)(v19 + 4 * BYTE2(a1));
  v25 = *(_DWORD *)(v19 + 4 * (((6 * (v20 ^ 0xD01)) ^ 0xFFFu) & (a2 >> 8)));
  v26 = *(_DWORD *)(v19 + ((a1 >> 22) & 0x3FC));
  v27 = *(_DWORD *)(v19 + 4 * BYTE2(a2));
  v28 = ((v23 >> 8) - 760843624 - (v9 & (2 * (v23 >> 8)))) ^ (v13 | (a6 << 8));
  v29 = *(_DWORD *)(v19 + 4 * BYTE1(a1));
  v30 = *(_DWORD *)(v19 + 4 * BYTE2(a3)) ^ __ROR4__(*(_DWORD *)(v19 + 4 * (v10 ^ 0x3Du)), 16);
  v31 = (v29 >> 8) - 760843624 - ((2 * (v29 >> 8)) & 0x14CE530);
  *(_DWORD *)(v12 + 9056) = v31;
  v32 = *(_DWORD *)(v19 + 4 * v15);
  v33 = v11;
  v34 = *(_DWORD *)(v12 + 9296);
  v35 = (v31 ^ 0xD2A67298 | (v29 << 24)) ^ __ROR4__(v32, 16);
  v36 = *(_DWORD *)(v12 + 9720) ^ __ROR4__(v26, 24) ^ v27;
  v37 = *(_DWORD *)(v12 + 9104);
  v38 = ((unint64_t)(v37 ^ 0xD2A67298) << *(_QWORD *)(v12 + 9736)) | ((unint64_t)(v37 ^ 0xD2A67298) >> v7);
  v39 = v38 - 760843624 - (v9 & (2 * v38));
  *(_DWORD *)(v12 + 9120) = v28;
  v40 = v30 ^ v28;
  if (*(_DWORD *)(v12 + 9608) == -760843624)
    v41 = v37;
  else
    v41 = v39;
  v42 = v16 ^ 0xC643C4E;
  v43 = v16;
  v44 = *(_DWORD *)(v12 + 9200);
  v45 = v18;
  v46 = *(_QWORD *)(v12 + 9728);
  v47 = ((unint64_t)(v44 ^ 0xD2A67298) << v46) | ((unint64_t)(v44 ^ 0xD2A67298) >> v7);
  v48 = v47 - 760843624 - (v9 & (2 * v47));
  v49 = *(_DWORD *)(v12 + 9704);
  *(_DWORD *)(v12 + 8688) = v48;
  if (v49 != -760843624)
    v44 = v48;
  v50 = v35 - 760843624 - (v9 & (2 * v35));
  *(_DWORD *)(v12 + 8696) = v44;
  v51 = v44 ^ v42 ^ *(_DWORD *)(v12 + 9592) ^ v24 ^ (a5 | (a4 << 16)) ^ __ROR4__(v25, 8) ^ *(_DWORD *)(v12 + 7352);
  v52 = v42 ^ *(_DWORD *)(v12 + 7500) ^ v41 ^ v17 ^ v50;
  v53 = ((unint64_t)(v34 ^ 0xD2A67298) << v46) ^ ((unint64_t)(v34 ^ 0xD2A67298) >> v7);
  v54 = v53 - 760843624 - (v9 & (2 * v53));
  v55 = *(_DWORD *)(v19 + 4 * v33);
  *(_DWORD *)(v12 + 8536) = v45;
  if (v45 == -760843624)
    v56 = v34;
  else
    v56 = v54;
  *(_DWORD *)(v12 + 9400) = v40;
  v57 = v36 ^ __ROR4__(v55, 16) ^ v56;
  v58 = (v57 + v14 - ((2 * v57) & 0x5FB1FEC6)) ^ v43;
  v59 = (v58 - 760843624 - (v9 & (2 * v58))) ^ *(_DWORD *)(v12 + 7512);
  v60 = *(_DWORD *)(v19 + 4 * ((v58 - 104 - (v9 & (2 * v58))) ^ *(_BYTE *)(v12 + 7512)));
  v61 = (unint64_t)(v59 >> (v56 & 0x10 ^ 0x10)) >> (v56 & 0x10);
  v62 = *(_DWORD *)(v19 + 4 * ((unsigned __int16)(v51 ^ 0xB1B5) >> 8));
  *(_DWORD *)(v12 + 9176) = (*(_DWORD *)(v19 + 4 * BYTE1(v59)) >> 8)
                          - 760843624
                          - ((2 * (*(_DWORD *)(v19 + 4 * BYTE1(v59)) >> 8)) & 0x14CE530);
  v63 = (uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 + 9744)
                                                    + 8
                                                    * ((9833 * ((v61 + 36) != v61)) ^ v20))
                                        - 8);
  *(_DWORD *)(v12 + 9192) = __ROR4__(v60, 16) ^ 0xD2A67298 ^ __ROR4__(v62, 8);
  return v63(v52);
}

void sub_100349490(int a1@<W1>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  int v5;
  _DWORD *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v6[2170] = v8;
  v6[2306] = v9;
  v12 = v6[2310];
  v6[2288] = v4 ^ 0xEA8C21A5;
  v6[2310] = v12 - 760843624 - (v11 & (2 * v12));
  v6[2279] = a1 ^ 0xA3BCC32D;
  v6[2290] = v5 ^ 0xA3BCC32D;
  v6[2260] = a3 - 760843624 - (v11 & (2 * a3));
  v6[2270] = a2 - 760843624 - (v11 & (2 * a2));
  v6[2287] = a4 ^ 0xD2A67298;
  v6[2168] = v6[1832];
  v6[2166] = v6[1828];
  v6[2293] = v6[1822];
  v6[2176] = v6[1840];
  v6[2157] = v6[1869];
  v6[2178] = v6[2316];
  v6[2276] = v6[2422];
  v6[2274] = v6[1824];
  v6[2164] = v6[1830];
  v6[2154] = v6[1836];
  v6[2153] = v6[1834];
  v6[2352] = v6[2266];
  v6[2316] = v7;
  v6[2398] = v10;
  JUMPOUT(0x100344C58);
}

void sub_1003495A0(unsigned int a1@<W0>, int a2@<W4>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;

  *(_DWORD *)(v8 + 9040) = v3;
  v12 = (*(_DWORD *)(v8 + 9136) & 2) == 0;
  *(_DWORD *)(v8 + 9192) = a3;
  v13 = *(_DWORD *)(v8 + 8608);
  if (!v12)
    v13 = *(_DWORD *)(v8 + 8328);
  *(_DWORD *)(v8 + 9304) = v13;
  v14 = *(_DWORD *)(v8 + 8612);
  if (v12)
    v14 = *(_DWORD *)(v8 + 8332);
  *(_DWORD *)(v8 + 9736) = v14;
  v15 = *(_DWORD *)(v8 + 8616);
  if (v12)
    v15 = *(_DWORD *)(v8 + 8344);
  *(_DWORD *)(v8 + 9072) = v15;
  v16 = (*(_DWORD *)(v8 + 8360) & 2) == 0;
  v17 = *(_DWORD *)(v8 + 7784);
  if ((*(_DWORD *)(v8 + 8360) & 2) != 0)
    v17 = *(_DWORD *)(v8 + 7776);
  *(_DWORD *)(v8 + 9288) = v17;
  v18 = *(_DWORD *)(v8 + 8356);
  if (v16)
    v18 = *(_DWORD *)(v8 + 8352);
  *(_DWORD *)(v8 + 9224) = v18;
  *(_DWORD *)(v8 + 9728) = a1 >> 8;
  v19 = *(_DWORD *)(v8 + 8532) - 3494;
  v20 = *(_DWORD *)(v8 + 8640);
  v21 = *(_DWORD *)(v8 + 8664);
  if ((v20 & 1) != 0)
    v21 = *(_DWORD *)(v8 + 8656);
  v22 = *(_DWORD *)(v8 + 8024);
  *(_DWORD *)(v8 + 9056) = v4;
  if ((v20 & 1) == 0)
    v22 = *(_DWORD *)(v8 + 8648);
  v23 = *(_DWORD *)(v8 + 8632);
  if ((v20 & 2) == 0)
    v23 = *(_DWORD *)(v8 + 8628);
  *(_DWORD *)(v8 + 9384) = v23;
  if ((v20 & 2) != 0)
    v24 = v21;
  else
    v24 = v22;
  *(_DWORD *)(v8 + 9416) = v24;
  if ((v20 & 2) != 0)
    v21 = v22;
  *(_DWORD *)(v8 + 9240) = v21;
  *(_DWORD *)(v8 + 9552) = v19;
  *(_DWORD *)(v8 + 9368) = (v19 - 760846543) ^ v5;
  *(_DWORD *)(v8 + 9016) = *(_QWORD *)(v8 + 8512) - 760843624 - (v11 & (2 * *(_QWORD *)(v8 + 8512)));
  *(_DWORD *)(v8 + 9280) = v6 - 760843624 - (v11 & (2 * v6));
  *(_DWORD *)(v8 + 8712) = v7 ^ 0xD2A67298;
  *(_DWORD *)(v8 + 9172) = v7 ^ 0xD2A67298 ^ v9;
  *(_DWORD *)(v8 + 9156) = *(_DWORD *)(v8 + 5464);
  *(_DWORD *)(v8 + 8392) = *(_DWORD *)(v8 + 5448);
  *(_DWORD *)(v8 + 9012) = *(_DWORD *)(v8 + 7476);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 9688);
  *(_DWORD *)(v8 + 8136) = *(_DWORD *)(v8 + 9376);
  *(_DWORD *)(v8 + 9024) = v10;
  *(_DWORD *)(v8 + 8736) = a2;
  JUMPOUT(0x10033EFD8);
}

void sub_10034973C(int a1@<W0>, int a2@<W3>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;

  v10 = (*(_DWORD *)(v6 + 8572) & 2) == 0;
  *(_DWORD *)(v6 + 9056) = a4;
  v9 = *(_DWORD *)(v6 + 8552);
  if (!v10)
    v9 = *(_DWORD *)(v6 + 8548);
  *(_DWORD *)(v6 + 8520) = v9;
  v10 = (*(_DWORD *)(v6 + 9136) & 2) == 0;
  v11 = *(_DWORD *)(v6 + 8608);
  if ((*(_DWORD *)(v6 + 9136) & 2) != 0)
    v11 = *(_DWORD *)(v6 + 8328);
  *(_DWORD *)(v6 + 9040) = v11;
  v12 = *(_DWORD *)(v6 + 8612);
  if (v10)
    v12 = *(_DWORD *)(v6 + 8332);
  *(_DWORD *)(v6 + 9008) = v12;
  v13 = *(_DWORD *)(v6 + 8616);
  if (v10)
    v13 = *(_DWORD *)(v6 + 8344);
  *(_DWORD *)(v6 + 9156) = v13;
  v14 = (*(_DWORD *)(v6 + 8360) & 2) == 0;
  v15 = *(_DWORD *)(v6 + 7784);
  if ((*(_DWORD *)(v6 + 8360) & 2) != 0)
    v15 = *(_DWORD *)(v6 + 7776);
  *(_DWORD *)(v6 + 8552) = v15;
  v16 = *(_DWORD *)(v6 + 8356);
  if (v14)
    v16 = *(_DWORD *)(v6 + 8352);
  *(_DWORD *)(v6 + 9320) = v16;
  v17 = *(_DWORD *)(v6 + 7532);
  *(_DWORD *)(v6 + 9728) = a1;
  v18 = (v17 - 707021278) & 0x2A243D5D;
  *(_DWORD *)(v6 + 8548) = v7;
  *(_DWORD *)(v6 + 8496) = a3;
  v19 = *(_DWORD *)(v6 + 8640);
  v20 = *(_DWORD *)(v6 + 8664);
  if ((v19 & 1) != 0)
    v20 = *(_DWORD *)(v6 + 8656);
  v21 = *(_DWORD *)(v6 + 8024);
  if ((v19 & 1) == 0)
    v21 = *(_DWORD *)(v6 + 8648);
  if ((v19 & 2) != 0)
    v22 = *(_DWORD *)(v6 + 8632);
  else
    v22 = *(_DWORD *)(v6 + 8628);
  *(_DWORD *)(v6 + 8512) = v22;
  if ((v19 & 2) != 0)
    v23 = v20;
  else
    v23 = v21;
  *(_DWORD *)(v6 + 8472) = v23;
  if ((v19 & 2) != 0)
    v24 = v21;
  else
    v24 = v20;
  *(_DWORD *)(v6 + 9680) = v24;
  *(_DWORD *)(v6 + 9616) = v18;
  *(_DWORD *)(v6 + 9312) = v4 - 760843624 - ((v18 ^ 0xA54CFC3C) & (2 * v4));
  *(_DWORD *)(v6 + 8932) = a2 - 760843624 - ((2 * a2) & 0xA54CE530);
  *(_DWORD *)(v6 + 8488) = v5 - 760843624 - ((2 * v5) & 0xA54CE530);
  *(_DWORD *)(v6 + 9012) = *(_QWORD *)(v6 + 7520) - 760843624 - ((2 * *(_QWORD *)(v6 + 7520)) & 0xA54CE530);
  *(_DWORD *)(v6 + 9064) = *(_DWORD *)(v6 + 9688);
  *(_DWORD *)(v6 + 9080) = *(_DWORD *)(v6 + 5472);
  *(_DWORD *)(v6 + 8464) = *(_DWORD *)(v6 + 5480);
  *(_DWORD *)(v6 + 8752) = *(_DWORD *)(v6 + 9408);
  *(_DWORD *)(v6 + 9148) = v8;
  JUMPOUT(0x10033D474);
}

void sub_100349900()
{
  JUMPOUT(0x100338A1CLL);
}

uint64_t sub_100349948(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  char v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  char v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  char v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unint64_t v148;
  unsigned int v149;
  char v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  int v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  uint64_t v169;
  unsigned int v170;
  unint64_t v171;
  int v172;
  unint64_t v173;
  int v174;
  unint64_t v175;
  unsigned int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  unint64_t v191;
  int v192;
  uint64_t v193;
  int v194;
  unsigned int v195;
  uint64_t v196;
  unint64_t v197;
  int v198;
  unint64_t v199;
  int v200;
  unint64_t v201;
  int v202;
  unsigned int v203;
  unint64_t v204;
  uint64_t v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  uint64_t v211;
  char v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unint64_t v219;
  int v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  char v231;
  unint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  unsigned int v247;
  unint64_t v248;
  unint64_t v249;
  uint64_t v250;
  char v251;
  unint64_t v252;
  unint64_t v253;
  int v254;
  uint64_t v255;
  uint64_t v256;
  int v257;
  unint64_t v258;
  unint64_t v259;
  int v260;
  uint64_t v261;
  int v262;
  unint64_t v263;
  int v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  int v268;
  BOOL v269;
  int v270;
  int v271;
  unint64_t v272;
  unsigned int v273;
  unsigned __int8 v274;
  unint64_t v275;
  unsigned int v276;
  unint64_t v277;
  int v278;
  int v279;
  uint64_t v280;
  unsigned int v281;
  int v282;
  int v283;
  uint64_t v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  uint64_t v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  unint64_t v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  int v304;
  unint64_t v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  uint64_t v322;
  uint64_t v323;
  int v324;
  int v325;
  int v326;
  uint64_t v327;
  int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unint64_t v333;
  unsigned int v334;
  char v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  int v347;
  unint64_t v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  int v357;
  unsigned int v358;
  int v359;
  int v360;
  unint64_t v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned __int16 v373;
  unint64_t v374;
  int v375;
  unint64_t v376;
  int v377;
  int v378;
  unint64_t v379;
  int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  int v385;
  int v386;
  unsigned int v387;
  unsigned int v388;
  int v389;
  int v390;
  unint64_t v391;
  unsigned int v392;
  int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  int v403;
  char v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  char v409;
  int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  unint64_t v415;
  int v416;
  int v417;
  int v418;
  unint64_t v419;
  unsigned int v420;
  unint64_t v421;
  int v422;
  unsigned int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  unsigned int v431;
  int v432;
  unsigned __int8 v433;
  int v434;
  int v435;
  unint64_t v436;
  int v437;
  int v438;
  int v439;
  unsigned int v440;
  int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  int v445;
  int v446;
  uint64_t v447;
  int v448;
  int v449;
  int v450;
  unsigned int v451;
  int v452;
  BOOL v453;
  uint64_t v454;
  int v455;
  int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  BOOL v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  unsigned int v466;
  unsigned int v467;
  int v468;
  int v469;
  unint64_t v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  int v474;
  unsigned int v475;
  unsigned int v476;
  int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  BOOL v485;
  int v486;
  int v487;
  int v488;
  unsigned int v489;
  int v490;
  int v491;
  BOOL v492;
  unsigned int v493;
  int v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  int v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  unsigned int v512;
  unsigned int v513;
  unsigned int v514;
  int v515;
  unsigned int v516;
  unsigned int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  int v527;
  unsigned int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  int v540;
  int v541;
  unsigned int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  int v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  int v569;
  int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  uint64_t v574;
  uint64_t v575;
  int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  int v580;
  int v581;
  unsigned int v582;
  int v583;
  unsigned int v584;
  int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  int v595;
  uint64_t v596;
  unsigned int v597;
  int v598;
  _DWORD *v599;
  _QWORD *v600;
  unsigned int v601;
  unint64_t v602;
  _BYTE *v603;
  unsigned int v604;
  unsigned int v605;
  uint64_t v606;
  unint64_t v607;
  uint64_t v608;
  unsigned int v609;
  unint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  unint64_t v614;
  unint64_t v615;
  uint64_t v616;
  unsigned int v617;
  unint64_t v618;
  unint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  unsigned int v625;
  unsigned int v626;
  unint64_t v627;
  _QWORD *v628;
  unsigned int v629;
  _DWORD *v630;
  unsigned int v631;
  unint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  unsigned int v636;
  unint64_t v637;
  unint64_t v638;
  uint64_t v639;
  uint64_t v640;
  unsigned int v641;
  unint64_t v642;
  uint64_t v643;
  uint64_t v644;
  unsigned int v645;
  unint64_t v646;
  uint64_t v647;
  unint64_t v648;
  unint64_t v649;
  unsigned int v650;
  unint64_t v651;
  unint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  unint64_t v657;
  unint64_t v658;
  unint64_t v659;
  uint64_t v660;
  uint64_t v661;
  unint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  unint64_t v666;
  unint64_t v667;
  unint64_t v668;
  uint64_t v669;
  unint64_t v670;
  unint64_t v671;
  uint64_t v672;
  unint64_t v673;
  uint64_t v674;
  unint64_t v675;
  uint64_t v676;
  unint64_t v677;
  unint64_t v678;
  unint64_t v679;
  unint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  unint64_t v684;
  uint64_t v685;
  unint64_t v686;
  unint64_t v687;
  uint64_t v688;
  unint64_t v689;
  uint64_t v690;
  unint64_t v691;
  uint64_t v692;
  unint64_t v693;
  unint64_t v694;
  uint64_t v695;
  _BYTE *v696;
  unint64_t v697;
  char *v698;
  char *v699;
  char *v700;

  v14 = *(_DWORD *)(v9 + 8552);
  if ((*(_DWORD *)(v9 + 8572) & 2) != 0)
    v14 = *(_DWORD *)(v9 + 8548);
  *(_DWORD *)(v9 + 9040) = v14;
  v15 = (*(_DWORD *)(v9 + 9136) & 2) == 0;
  v16 = 71 * (*(_DWORD *)(v9 + 9240) ^ 0xF55);
  *(_QWORD *)(v9 + 8704) = a1 >> 16;
  *(_QWORD *)(v9 + 8752) = (a7 << 8);
  v17 = *(_DWORD *)(v9 + 8608);
  if (!v15)
    v17 = *(_DWORD *)(v9 + 8328);
  *(_DWORD *)(v9 + 8552) = v17;
  v18 = *(_DWORD *)(v9 + 8612);
  if (v15)
    v18 = *(_DWORD *)(v9 + 8332);
  *(_DWORD *)(v9 + 8608) = v18;
  v19 = *(_DWORD *)(v9 + 8616);
  if (v15)
    v19 = *(_DWORD *)(v9 + 8344);
  *(_DWORD *)(v9 + 8696) = v19;
  v20 = (*(_DWORD *)(v9 + 8360) & 2) == 0;
  v21 = *(_DWORD *)(v9 + 7784);
  if ((*(_DWORD *)(v9 + 8360) & 2) != 0)
    v21 = *(_DWORD *)(v9 + 7776);
  *(_DWORD *)(v9 + 8572) = v21;
  v22 = *(_DWORD *)(v9 + 8356);
  if (v20)
    v22 = *(_DWORD *)(v9 + 8352);
  *(_DWORD *)(v9 + 9560) = v22;
  v23 = *(_DWORD *)(v9 + 8640);
  v24 = *(_DWORD *)(v9 + 8664);
  if ((v23 & 1) != 0)
    v24 = *(_DWORD *)(v9 + 8656);
  v25 = *(_DWORD *)(v9 + 8024);
  if ((v23 & 1) == 0)
    v25 = *(_DWORD *)(v9 + 8648);
  v26 = *(_DWORD *)(v9 + 8632);
  if ((v23 & 2) == 0)
    v26 = *(_DWORD *)(v9 + 8628);
  *(_DWORD *)(v9 + 9156) = v26;
  if ((v23 & 2) != 0)
    v27 = v24;
  else
    v27 = v25;
  *(_DWORD *)(v9 + 9120) = v27;
  if ((v23 & 2) != 0)
    v24 = v25;
  *(_DWORD *)(v9 + 9056) = v24;
  v28 = v7 + 1717232018;
  v29 = *(_DWORD *)(v9 + 6084) ^ 0xCBu;
  v30 = *(_DWORD *)(v9 + 6896) & 0x2A2A2A2A ^ 0x173F353F;
  v31 = *(_DWORD *)(v9 + 6912) ^ 0x12263218;
  *(_DWORD *)(v9 + 8612) = v16;
  v32 = (v16 ^ 0x2A2A3DB9) & *(_DWORD *)(v9 + 6888) ^ 0x153F3715;
  *(_QWORD *)(v9 + 8640) = v32 & *(_QWORD *)(v9 + 7264);
  *(_DWORD *)(v9 + 8632) = *(_DWORD *)(v9 + 6904) ^ 0x313B1709;
  *(_DWORD *)(v9 + 8656) = v30;
  v33 = (v30 - 760843624 + ((2 * v30) & 0x4444410 ^ 0xDFF7DFDF) + 1) ^ 0xD2A67298;
  v34 = *(_QWORD *)(v9 + 7208) & v33;
  *(_QWORD *)(v9 + 8664) = *(_QWORD *)(v9 + 8176) & v33;
  v35 = *(_QWORD *)(v9 + 8160);
  *(_QWORD *)(v9 + 8680) = v34 >> v35;
  *(_DWORD *)(v9 + 8648) = v32;
  *(_DWORD *)(v9 + 8628) = v31;
  *(_QWORD *)(v9 + 8616) = (unint64_t)(v32 & v31) >> v35;
  v36 = *(_DWORD *)(v9 + 9608);
  *(_QWORD *)(v9 + 8672) = v8;
  *(_DWORD *)(v9 + 8760) = v12;
  *(_DWORD *)(v9 + 8688) = v10;
  v37 = *(_QWORD *)(v9 + 8168);
  v38 = *(_QWORD *)(v9 + 8040);
  *(_QWORD *)(v9 + 8712) = v11;
  v39 = *(_QWORD *)(v9 + 5920);
  v40 = v13;
  *(_DWORD *)(v9 + 7936) = v36;
  *(_DWORD *)(v9 + 9224) = v7 + 1717232018;
  *(_DWORD *)(v9 + 9408) = *(_DWORD *)(v9 + 7256) ^ 0xC2C2C2C2;
  v41 = v28 - ((2 * v28 - 851490446) & 0xA54CE530) - 1186588847;
  v42 = *(_DWORD *)(v9 + 9272);
  v43 = *(_DWORD *)(v9 + 9024);
  v44 = *(_DWORD *)(v9 + 9416);
  v45 = *(_DWORD *)(v9 + 9248);
  LODWORD(v34) = (v42 ^ 0x2D598D67) + (v43 ^ 0x2D598D67) + (v44 ^ 0xD2A67298) + (v45 ^ 0x16BA9911);
  v46 = v34 - ((2 * v34 - 1543034790) & 0xA54CE530) - 1532361019;
  LODWORD(v34) = ((unint64_t)((v38 >> v29) & *(_DWORD *)(v9 + 6712)) << v29)
               + ((*(_DWORD *)(v9 + 7088) & *(_DWORD *)(v9 + 6712)) >> v37);
  LODWORD(v34) = v34 - 760843624 - ((2 * v34) & 0xA54CE530);
  v47 = (2
       * (((v34 ^ 0xD2A67298) & *(_DWORD *)(v9 + 7964))
        + 1386640025
        - ((2 * ((v34 ^ 0xD2A67298) & *(_DWORD *)(v9 + 7964))) & 0x254CE530))
       - 2) ^ 0xA54CE530;
  v48 = (2
       * (((v34 ^ 0x98) & *(_BYTE *)(v9 + 7964))
        - 103
        - ((2 * ((v34 ^ 0x98) & *(_BYTE *)(v9 + 7964))) & 0x30))
       + 26) & 2;
  *(_DWORD *)(v9 + 9240) = 1386640026;
  LODWORD(v34) = (v47 - 760843624 - 2 * (v47 & 0x52A6729A ^ v48)) ^ v34;
  LODWORD(v34) = *(_DWORD *)(v9 + 6720) & (4 * (v34 & *(_DWORD *)(v9 + 7364))) ^ v34;
  *(_DWORD *)(v9 + 9176) = v34;
  v49 = (v28 - ((2 * v28 + 114) & 0x30) + 81) ^ 0x98u;
  v50 = v46 ^ *(_DWORD *)(v9 + 8920) ^ ((v34 & 0x625FC380 ^ 0x625FC380) + (v34 & 0x625FC380));
  v51 = *(_QWORD *)(v9 + 9728);
  v52 = (v50 >> ((v28 - ((2 * v28 + 114) & 0x30) + 81) ^ 0x98u)) | (v50 << v51);
  v53 = v46 ^ *(_DWORD *)(v9 + 9560) ^ 0x625FC380u;
  v54 = v46;
  *(_DWORD *)(v9 + 9576) = v46;
  if (v28 - ((2 * v28 - 851490446) & 0xA54CE530) == 425745223)
    v55 = v53;
  else
    v55 = (v53 >> ((v28 - ((2 * v28 + 114) & 0x30) + 81) ^ 0x98u)) ^ (v53 << (v36 ^ 0x98u));
  *(_DWORD *)(v9 + 9192) = v55;
  v56 = v52 - 760843624 - ((2 * v52) & 0xA54CE530);
  v57 = *(_DWORD *)(v9 + 8728);
  v59 = v50 ^ 0xD2A67298;
  if (v41 != -760843624)
    v59 = v56;
  *(_DWORD *)(v9 + 9560) = v59;
  v58 = ((unint64_t)(v57 ^ 0xD2A67298) >> v49) ^ ((unint64_t)(v57 ^ 0xD2A67298) << v51);
  v60 = v58 - 760843624 - ((2 * v58) & 0xA54CE530);
  v61 = *(_DWORD *)(v9 + 8932);
  if (v41 == -760843624)
    v60 = v57;
  *(_DWORD *)(v9 + 9064) = v60;
  v62 = ((unint64_t)(v61 ^ 0xD2A67298) >> v49) + ((unint64_t)(v61 ^ 0xD2A67298) << (v36 ^ 0x98u));
  v63 = v62 - 760843624 - ((2 * v62) & 0xA54CE530);
  v64 = *(_DWORD *)(v9 + 8800);
  if (v41 == -760843624)
    v63 = v61;
  *(_DWORD *)(v9 + 9552) = v63;
  v65 = ((unint64_t)(v64 ^ 0xD2A67298) >> v49) | ((unint64_t)(v64 ^ 0xD2A67298) << (v36 ^ 0x98u));
  v66 = v65 - 760843624 - ((2 * v65) & 0xA54CE530);
  v67 = *(_DWORD *)(v9 + 9056);
  if (v41 == -760843624)
    v66 = v64;
  *(_DWORD *)(v9 + 9016) = v66;
  v68 = ((unint64_t)(v67 ^ 0xD2A67298) >> v49) ^ ((unint64_t)(v67 ^ 0xD2A67298) << v51);
  v69 = v68 - 760843624 - ((2 * v68) & 0xA54CE530);
  v70 = *(_DWORD *)(v9 + 8848);
  if (v41 == -760843624)
    v69 = v67;
  *(_DWORD *)(v9 + 9004) = v69;
  v71 = ((unint64_t)(v70 ^ 0xD2A67298) >> v49) + ((unint64_t)(v70 ^ 0xD2A67298) << v51);
  v72 = v71 - 760843624 - ((2 * v71) & 0xA54CE530);
  v73 = *(_DWORD *)(v9 + 9120);
  if (v41 == -760843624)
    v72 = v70;
  *(_DWORD *)(v9 + 9056) = v72;
  v74 = ((unint64_t)(v73 ^ 0xD2A67298) >> v49) + ((unint64_t)(v73 ^ 0xD2A67298) << (v36 ^ 0x98u));
  v75 = v74 - 760843624 - ((2 * v74) & 0xA54CE530);
  v76 = *(_DWORD *)(v9 + 8840);
  if (v41 == -760843624)
    v75 = v73;
  *(_DWORD *)(v9 + 9012) = v75;
  v77 = ((unint64_t)(v76 ^ 0xD2A67298) >> v49) ^ ((unint64_t)(v76 ^ 0xD2A67298) << (v36 ^ 0x98u));
  v78 = v77 - 760843624 - ((2 * v77) & 0xA54CE530);
  v79 = *(_DWORD *)(v9 + 8828);
  if (v41 == -760843624)
    v78 = v76;
  *(_DWORD *)(v9 + 8992) = v78;
  v80 = ((unint64_t)(v79 ^ 0xD2A67298) >> v49) | ((unint64_t)(v79 ^ 0xD2A67298) << v51);
  v81 = v80 - 760843624 - ((2 * v80) & 0xA54CE530);
  v82 = *(_DWORD *)(v9 + 8552);
  v84 = *(_DWORD *)(v9 + 8860);
  v85 = ((unint64_t)(v84 ^ 0xD2A67298) >> v49) + ((unint64_t)(v84 ^ 0xD2A67298) << (v36 ^ 0x98u));
  *(_DWORD *)(v9 + 9608) = -760843623;
  v86 = v85 - 760843623 + ~((2 * v85) & 0xA54CE530);
  if (v41 == -760843624)
    v86 = v84;
  *(_DWORD *)(v9 + 8932) = v86;
  if (v41 == -760843624)
    v81 = v79;
  *(_DWORD *)(v9 + 8936) = v81;
  v83 = ((unint64_t)(v82 ^ 0xD2A67298) >> v49) + ((unint64_t)(v82 ^ 0xD2A67298) << v51);
  v87 = v83 - 760843624 - ((2 * v83) & 0xA54CE530);
  if (v41 == -760843624)
    v87 = v82;
  *(_DWORD *)(v9 + 8920) = v87;
  v88 = ((((unint64_t)(*(_DWORD *)(v9 + 8952) ^ 0xD2A67298) >> v49)
        - 760843624
        - ((2 * ((unint64_t)(*(_DWORD *)(v9 + 8952) ^ 0xD2A67298) >> v49)) & 0xA54CE530)) ^ 0xD2A67298)
      + ((unint64_t)(*(_DWORD *)(v9 + 8952) ^ 0xD2A67298) << v51);
  v89 = v88 - 760843624 - ((2 * v88) & 0xA54CE530);
  v90 = *(_DWORD *)(v9 + 9376);
  if (v41 == -760843624)
    v89 = *(_DWORD *)(v9 + 8952);
  *(_DWORD *)(v9 + 8952) = v89;
  v91 = ((unint64_t)(v90 ^ 0xD2A67298) >> v49) + ((unint64_t)(v90 ^ 0xD2A67298) << (v36 ^ 0x98u));
  v92 = v91 - 760843624 - ((2 * v91) & 0xA54CE530);
  v93 = *(_DWORD *)(v9 + 8968);
  if (v41 == -760843624)
    v92 = v90;
  *(_DWORD *)(v9 + 8860) = v92;
  v94 = ((unint64_t)(v93 ^ 0xD2A67298) >> v49) ^ ((unint64_t)(v93 ^ 0xD2A67298) << v51);
  v95 = v94 - 760843624 - ((2 * v94) & 0xA54CE530);
  if (v41 == -760843624)
    v95 = v93;
  *(_DWORD *)(v9 + 8840) = v95;
  v96 = *(_DWORD *)(v9 + 8832);
  v97 = ((((unint64_t)(v96 ^ 0xD2A67298) >> v49)
        - 760843624
        - ((2 * ((unint64_t)(v96 ^ 0xD2A67298) >> v49)) & 0xA54CE530)) ^ 0xD2A67298)
      + ((((unint64_t)(v96 ^ 0xD2A67298) << v51)
        - 760843624
        - ((2 * ((unint64_t)(v96 ^ 0xD2A67298) << v51)) & 0xA54CE530)) ^ 0xD2A67298);
  v98 = v97 - 760843624 - ((2 * v97) & 0xA54CE530);
  v99 = *(_DWORD *)(v9 + 8784);
  if (v41 == -760843624)
    v98 = *(_DWORD *)(v9 + 8832);
  *(_DWORD *)(v9 + 8848) = v98;
  v100 = ((unint64_t)(v99 ^ 0xD2A67298) >> v49) ^ ((unint64_t)(v99 ^ 0xD2A67298) << (v36 ^ 0x98u));
  v101 = v100 - 760843624 - ((2 * v100) & 0xA54CE530);
  if (v41 == -760843624)
    v101 = v99;
  *(_DWORD *)(v9 + 8832) = v101;
  v102 = ((((unint64_t)(*(_DWORD *)(v9 + 9656) ^ 0xD2A67298) << (v36 ^ 0x98u))
         - 760843624
         - ((2 * ((unint64_t)(*(_DWORD *)(v9 + 9656) ^ 0xD2A67298) << (v36 ^ 0x98u))) & 0xA54CE530)) ^ 0xD2A67298)
       + ((unint64_t)(*(_DWORD *)(v9 + 9656) ^ 0xD2A67298) >> v49);
  v103 = v102 - 760843624 - ((2 * v102) & 0xA54CE530);
  v104 = *(_DWORD *)(v9 + 8944);
  v106 = *(_DWORD *)(v9 + 8572);
  if (v41 == -760843624)
    v103 = *(_DWORD *)(v9 + 9656);
  *(_DWORD *)(v9 + 9656) = v103;
  v105 = ((unint64_t)(v104 ^ 0xD2A67298) >> v49) + ((unint64_t)(v104 ^ 0xD2A67298) << v51);
  v108 = v105 - 760843624 - ((2 * v105) & 0xA54CE530);
  if (v36 == -760843624)
  {
    v109 = v106;
  }
  else
  {
    v107 = ((unint64_t)(v106 ^ 0xD2A67298) >> v49) ^ ((unint64_t)(v106 ^ 0xD2A67298) << (v36 ^ 0x98u));
    v109 = v107 - 760843624 - ((2 * v107) & 0xA54CE530);
  }
  v110 = (*(_QWORD *)(v9 + 8312) >> v49) ^ (*(_QWORD *)(v9 + 8312) << (v36 ^ 0x98u));
  *(_DWORD *)(v9 + 9172) = v41;
  if (v41 != -760843624)
    v104 = v108;
  v111 = v110 - 760843624 - ((2 * v110) & 0xA54CE530);
  v112 = *(_DWORD *)(v9 + 9368);
  if (v41 != -760843624)
    v112 = v111;
  v113 = v54 ^ *(_DWORD *)(v9 + 9696);
  v114 = v36 ^ 0x98;
  *(_QWORD *)(v9 + 9160) = v36 ^ 0x98u;
  v115 = ((unint64_t)(v113 ^ 0x625FC380u) >> v49) | ((unint64_t)(v113 ^ 0x625FC380u) << (v36 ^ 0x98u));
  v116 = v115 - 760843624 - ((2 * v115) & 0xA54CE530);
  v117 = *(_DWORD *)(v9 + 9040);
  v119 = v113 ^ 0xB0F9B118;
  if (v36 != -760843624)
    v119 = v116;
  *(_DWORD *)(v9 + 9120) = v119;
  v118 = ((unint64_t)(v117 ^ 0xD2A67298) >> v49) + ((unint64_t)(v117 ^ 0xD2A67298) << (v36 ^ 0x98u));
  v120 = v118 - 760843624 - ((2 * v118) & 0xA54CE530);
  v121 = *(_DWORD *)(v9 + 8608);
  if (v36 == -760843624)
    v120 = v117;
  *(_DWORD *)(v9 + 9040) = v120;
  v122 = ((unint64_t)(v121 ^ 0xD2A67298) >> v49) + ((unint64_t)(v121 ^ 0xD2A67298) << v114);
  v123 = v122 - 760843624 - ((2 * v122) & 0xA54CE530);
  v124 = *(_DWORD *)(v9 + 9008);
  if (v36 == -760843624)
    v123 = v121;
  *(_DWORD *)(v9 + 8968) = v123;
  v125 = ((unint64_t)(v124 ^ 0xD2A67298) >> v49) | ((unint64_t)(v124 ^ 0xD2A67298) << v114);
  v126 = v125 - 760843624 - ((2 * v125) & 0xA54CE530);
  v127 = *(_DWORD *)(v9 + 8736);
  if (v36 == -760843624)
    v126 = v124;
  *(_DWORD *)(v9 + 9008) = v126;
  v128 = ((unint64_t)(v127 ^ 0xD2A67298) >> v49) + ((unint64_t)(v127 ^ 0xD2A67298) << v114);
  v129 = v128 - 760843624 - ((2 * v128) & 0xA54CE530);
  if (v36 == -760843624)
    v129 = v127;
  *(_DWORD *)(v9 + 8944) = v129;
  v130 = *(_DWORD *)(v9 + 9052);
  v131 = v51;
  v133 = ((unint64_t)(*(_DWORD *)(v9 + 9128) ^ 0xD2A67298) >> v49) ^ ((unint64_t)(*(_DWORD *)(v9 + 9128) ^ 0xD2A67298) << v51);
  v134 = v133 - 760843624 - ((2 * v133) & 0xA54CE530);
  v135 = *(_DWORD *)(v9 + 9704);
  if (v135 == -760843624)
    v134 = *(_DWORD *)(v9 + 9128);
  *(_DWORD *)(v9 + 9128) = v134;
  v132 = ((unint64_t)(v130 ^ 0xD2A67298) >> v49)
       + ((((unint64_t)(v130 ^ 0xD2A67298) << v51)
         - 760843624
         - ((2 * ((unint64_t)(v130 ^ 0xD2A67298) << v51)) & 0xA54CE530)) ^ 0xD2A67298);
  v136 = v132 - 760843624 - ((2 * v132) & 0xA54CE530);
  v137 = *(_DWORD *)(v9 + 9156);
  if (v135 == -760843624)
    v136 = v130;
  *(_DWORD *)(v9 + 9696) = v136;
  v138 = ((unint64_t)(v137 ^ 0xD2A67298) >> v49) | ((unint64_t)(v137 ^ 0xD2A67298) << v131);
  v139 = v138 - 760843624 - ((2 * v138) & 0xA54CE530);
  v140 = *(_DWORD *)(v9 + 8816) ^ 0xD2A67298;
  v141 = v140 >> v49;
  v142 = v49;
  v143 = v131;
  v144 = v141 ^ (v140 << v131);
  if (v135 == -760843624)
    v145 = v137;
  else
    v145 = v139;
  v146 = v144 - 760843624 - ((2 * v144) & 0xA54CE530);
  if (v135 == -760843624)
    v146 = *(_DWORD *)(v9 + 8816);
  *(_DWORD *)(v9 + 9052) = v146;
  v147 = *(_DWORD *)(v9 + 8904);
  v148 = v147 ^ 0xD2A67298;
  *(_QWORD *)(v9 + 9368) = v148;
  v149 = v147;
  v150 = v142;
  *(_QWORD *)(v9 + 9136) = v142;
  v151 = (((v148 >> v142) - 760843624 - ((2 * (v148 >> v142)) & 0xA54CE530)) ^ 0xD2A67298) + (v148 << v143);
  v152 = v151 - 760843624 - ((2 * v151) & 0xA54CE530);
  v153 = *(_DWORD *)(v9 + 8764);
  v154 = ((unint64_t)(v153 ^ 0xD2A67298) >> v150)
       + ((((unint64_t)(v153 ^ 0xD2A67298) << v143)
         - 760843624
         - ((2 * ((unint64_t)(v153 ^ 0xD2A67298) << v143)) & 0xA54CE530)) ^ 0xD2A67298);
  v155 = v154 - 760843624 - ((2 * v154) & 0xA54CE530);
  if (v135 == -760843624)
    v152 = v149;
  *(_DWORD *)(v9 + 9156) = v152;
  if (v135 == -760843624)
    v155 = v153;
  v156 = *(_DWORD *)(v9 + 8612) - 3756;
  *(_DWORD *)(v9 + 9376) = v156;
  v157 = v112 ^ (v39 + *(_DWORD *)(v9 + 5988) - 760843624 - ((v156 ^ 0xA54CEDD7) & (2 * (v39 + *(_DWORD *)(v9 + 5988)))));
  v158 = *(_DWORD *)(v9 + 9432);
  v159 = v42 ^ v158 ^ (v157 - 760843624 - ((2 * v157) & 0xA54CE530));
  v160 = *(_QWORD *)(v9 + 7264);
  v161 = *(_QWORD *)(v9 + 7280);
  v162 = (unint64_t)(v160 & *(_DWORD *)(v9 + 6020)) << v161;
  v163 = (v162 - 760843624 - ((2 * v162) & 0xA54CE530)) ^ (v39 - 760843624 - ((2 * v39) & 0xA54CE530));
  v164 = (v163 - 760843624 - ((2 * v163) & 0xA54CE530)) ^ 0x7D7E8DFB ^ v158 ^ v155 ^ v44;
  v165 = (unint64_t)(v160 & *(_DWORD *)(v9 + 6088)) << v161;
  v166 = *(_QWORD *)(v9 + 6008) >> v29;
  *(_QWORD *)(v9 + 9736) = v29;
  v167 = v158 ^ 0x7D7E8DFB ^ ((v166 | v165)
                            - 760843624
                            - ((2 * (v166 | v165)) & 0xA54CE530)) ^ v104 ^ v43;
  v168 = v161;
  v169 = *(_QWORD *)(v9 + 8160);
  LODWORD(v165) = (*(_QWORD *)(v9 + 6000) << v161) | ((unint64_t)((*(_QWORD *)(v9 + 5992)
                                                                        - 760843624
                                                                        - ((2 * *(_QWORD *)(v9 + 5992)) & 0xA50CA530)) ^ 0xD2A67298) >> v169);
  LODWORD(v165) = v109 ^ (v165 - 760843624 - ((2 * v165) & 0xA54CE530));
  LODWORD(v165) = (v165 - 760843624 - ((2 * v165) & 0xA54CE530)) ^ v45;
  v170 = (195 * ((v159 >> 8) ^ 0xAFD8FF)) ^ *(unsigned __int8 *)(*(_QWORD *)(v9 + 9600)
                                                               + ((-61 * ~BYTE1(v159)) ^ 0x36)) ^ 0xFFFFFFC1;
  v171 = v159 ^ 0xAFD8FF63;
  LOBYTE(v159) = ((-61 * (v159 ^ 0x63)) ^ 0xA7)
               + *(_BYTE *)(*(_QWORD *)(v9 + 8152) + ((-61 * (v159 ^ 0x63)) ^ 0xCELL))
               + 98;
  *(_QWORD *)(v9 + 9248) = (v167 >> 9) & 0x80 | (v167 >> 17) & 0x7F;
  v172 = *(_DWORD *)(v40 + 4 * ((((v159 & 0x80) != 0) | (2 * v159)) ^ 0x84u));
  v173 = ((_DWORD)v165 - 1344733341 - ((2 * (_DWORD)v165) & 0x5FB1FEC6)) ^ v158;
  HIDWORD(v175) = v172 - ((2 * v172) & 0xE530) + 29363;
  LODWORD(v175) = v172;
  v174 = v175 >> 16;
  v176 = *(_DWORD *)(v40 + ((v173 >> 22) & 0x3FC));
  v177 = v160;
  v178 = *(_DWORD *)(v9 + 7944);
  v179 = (v176 << 8) - 760843624 - (v178 & (v176 << 9));
  v180 = *(_DWORD *)(v40 + 4 * (((v170 & 0x80) != 0) | (2 * v170)));
  v181 = ((v180 >> 8) - 760843624 - ((2 * (v180 >> 8)) & 0x14CE530)) ^ 0xD2A67298 | (v180 << 24);
  LOBYTE(v161) = v169;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * v167);
  LODWORD(v175) = HIDWORD(v175);
  v182 = (((*(_DWORD *)(v40 + 4 * BYTE1(v167)) >> 8)
         - 760843624
         - ((2 * (*(_DWORD *)(v40 + 4 * BYTE1(v167)) >> 8)) & 0x14CE530)) ^ 0xD2A67298 | (*(_DWORD *)(v40 + 4 * BYTE1(v167)) << 24)) ^ __ROR4__(*(_DWORD *)(v40 + 4 * ((v165 + 99 - ((2 * v165) & 0xC6)) ^ v158)), 16) ^ *(_DWORD *)(v40 + 4 * BYTE2(v164)) ^ (((*(_DWORD *)(v40 + ((v171 >> 22) & 0x3FC)) << 8) - 760843624 - (v178 & (*(_DWORD *)(v40 + ((v171 >> 22) & 0x3FC)) << 9))) ^ 0xD2A67298 | HIBYTE(*(_DWORD *)(v40 + ((v171 >> 22) & 0x3FC))));
  LODWORD(v160) = (v175 >> 16) ^ HIBYTE(v176) ^ *(_DWORD *)(v40 + 4 * BYTE2(v171));
  v183 = (v182 - 760843624 - ((2 * v182) & 0xA54CE530)) ^ v145;
  v184 = *(_QWORD *)(v9 + 8168);
  v185 = *(_QWORD *)(v9 + 5952) >> v29;
  v186 = v185 ^ (*(_QWORD *)(v9 + 6744) << v184);
  *(_DWORD *)(v9 + 9272) = (v186 - 760843624 - ((2 * v186) & 0xA54CE530)) ^ v158 ^ (v183
                                                                                  - 1344733341
                                                                                  - ((2 * v183) & 0x5FB1FEC6));
  LODWORD(v171) = *(_DWORD *)(v9 + 6888) & 0x79797978 ^ 0xAD949CAC;
  v187 = *(_DWORD *)(v9 + 6024) ^ 0xBCB02C28;
  v188 = *(_DWORD *)(v40 + 4 * BYTE1(v164));
  LODWORD(v169) = *(_DWORD *)(v9 + 6904) ^ 0x71799508;
  *(_DWORD *)(v9 + 9416) = v169;
  v189 = *(_QWORD *)(v9 + 8176);
  LOBYTE(v183) = v168;
  v190 = ((unint64_t)(v189 & v171) << v168) | ((unint64_t)(v169 & v171) >> v161);
  LODWORD(v160) = *(_DWORD *)(v9 + 9052) ^ 0xD2A67298 ^ __ROR4__(v188, 8) ^ v179 ^ (v160
                                                                                  - 760843624
                                                                                  - ((2 * v160) & 0xA54CE530));
  v191 = (v190 - 1344733341 - ((2 * v190) & 0x5FB1FEC6)) ^ 0xD2A67298 ^ v158 ^ *(_DWORD *)(v9 + 9656) ^ __ROR4__(*(_DWORD *)(v40 + 4 * v164), 16) ^ *(_DWORD *)(v40 + 4 * (((*(_BYTE *)(*(_QWORD *)(v9 + 8808) + (((v173 >> 9) & 0x80 | (v173 >> 17) & 0x7F) ^ 0xF5)) + 91) ^ 0x7F) - 40)) ^ __ROR4__(*(_DWORD *)(v40 + ((v167 >> 22) & 0x3FC)), 24) ^ v181;
  v192 = (v177 & *(_DWORD *)(v9 + 6100)) << v184;
  LOBYTE(v177) = v184;
  LODWORD(v184) = *(_DWORD *)(v40
                            + 4
                            * (((*(_BYTE *)(*(_QWORD *)(v9 + 8808) + (*(_QWORD *)(v9 + 9248) ^ 0xF5))
                                                + 91) ^ 0x7F)
                                              - 40)) ^ (v185 + v192 - 760843624 - ((2 * (v185 + v192)) & 0xA54CE530)) ^ __ROR4__(*(_DWORD *)(v40 + ((v164 >> 22) & 0x3FC)), 24) ^ (v174 - 1769472);
  LODWORD(v175) = __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v173)), 8);
  *(_DWORD *)(v9 + 9656) = 1386640030;
  LODWORD(v165) = ((v184 ^ v175 ^ 0xA03E7298)
                 - 760843624
                 - 2 * ((v184 ^ v175 ^ 0xA03E7298) & 0x52A6729E ^ (v184 ^ v175) & 6)) ^ *(_DWORD *)(v9 + 8944);
  LODWORD(v184) = (((2 * (v187 - ((2 * v187) & 0x79614910)) - 43791600) ^ 0x70A06B16) - 2) ^ 0x593764F8;
  v193 = *(_QWORD *)(v9 + 7208);
  LODWORD(v184) = ((unint64_t)(v189 & v184) << v183) | ((unint64_t)(v193 & v184) >> v161);
  v194 = (v160 - 1344733341 - ((2 * v160) & 0x5FB1FEC6)) ^ v158;
  v195 = (v194 - 760843624 - ((2 * v194) & 0xA54CE530)) ^ (v184 - 760843624 - ((2 * v184) & 0xA54CE530));
  LODWORD(v167) = HIBYTE(v195) * ((v167 & 0xC3 ^ 0xC3) + (v167 & 0xC3));
  v196 = *(_QWORD *)(v9 + 8152);
  LOBYTE(v167) = *(_BYTE *)(v196 + (v167 ^ 0xCELL)) + (v167 ^ 0xA7) + 98;
  LOBYTE(v160) = ((v167 & 0x80) != 0) | (2 * v167);
  v197 = ((_DWORD)v165 - 1344733341 - ((2 * (_DWORD)v165) & 0x5FB1FEC6)) ^ v158;
  LODWORD(v167) = *(unsigned __int8 *)(v196
                                     + ((-61 * HIBYTE(*(_DWORD *)(v40 + ((v197 >> 22) & 0x3FC)))) ^ 0xCELL))
                + ((195 * HIBYTE(*(_DWORD *)(v40 + ((v197 >> 22) & 0x3FC)))) ^ 0xFFFFFFA7)
                + 98;
  LOBYTE(v167) = ((((char)v167 >> 6) & 0xFE | ((v167 & 0x80) != 0)) - 39) ^ 0xD9 | (2 * v167) ^ 0x84;
  v198 = v167 & 7;
  LODWORD(v167) = v167 | (*(_DWORD *)(v40 + ((v197 >> 22) & 0x3FC)) << 8);
  LODWORD(v165) = v167 & 0x52A6729F ^ v198;
  LODWORD(v196) = *(_DWORD *)(v9 + 9272);
  v199 = v196 ^ 0xD2A67298;
  v200 = (*(_DWORD *)(v40 + 4 * BYTE1(v199)) >> ((*(_DWORD *)(v9 + 8912) & 8 ^ 8) + (*(_DWORD *)(v9 + 8912) & 8))) | (*(_DWORD *)(v40 + 4 * BYTE1(v199)) << 24);
  v201 = *(unsigned int *)(v40 + 4 * (v191 >> 24));
  *(_DWORD *)(v9 + 9248) = v167 - 760843624 - 2 * v165;
  LOBYTE(v165) = v160 ^ 0x84;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * v195);
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v160) = v175 >> 16;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * v165);
  LODWORD(v175) = HIDWORD(v175);
  *(_DWORD *)(v9 + 9052) = (v175 >> 24) - 760843624 - ((2 * (v175 >> 24)) & 0xA54CE530);
  LODWORD(v171) = (2 * *(_DWORD *)(v9 + 6064)) & 0x8080808 ^ 0x40C040C;
  v202 = *(_DWORD *)(v40 + 4 * BYTE2(v197)) ^ (*(_DWORD *)(v40 + ((v199 >> 22) & 0x3FC)) << 8) ^ HIBYTE(*(_DWORD *)(v40 + ((v199 >> 22) & 0x3FC)));
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * (v196 ^ 0x98u));
  LODWORD(v175) = HIDWORD(v175);
  LOBYTE(v165) = v177;
  v203 = (((*(_DWORD *)(v40 + 4 * BYTE1(v197)) << 24)
         - 760843624
         - ((*(_DWORD *)(v40 + 4 * BYTE1(v197)) << 25) & 0xA4000000)) ^ 0xD2A67298 | (*(_DWORD *)(v40
                                                                                                  + 4 * BYTE1(v197)) >> 8)) ^ __ROR4__(*(_DWORD *)(v40 + 4 * v191), 16);
  LODWORD(v184) = *(_DWORD *)(v9 + 6036);
  v204 = v184 & v171;
  v205 = *(_QWORD *)(v9 + 9736);
  v206 = *(_DWORD *)(v9 + 9008) ^ ((v204 >> v205)
                                 + ((((*(_QWORD *)(v9 + 7264) & v171) << v177)
                                   - 760843624
                                   - ((2 * ((*(_QWORD *)(v9 + 7264) & v171) << v177)) & 0xA54CE530)) ^ 0xD2A67298)) ^ (v202 - 760843624 - ((2 * v202) & 0xA54CE530));
  LODWORD(v161) = v203 - 760843624 - ((2 * v203) & 0xA54CE530);
  v207 = (v160 - 760843624 - ((2 * v160) & 0xA54CE530)) ^ v158 ^ ((((*(_DWORD *)(v40 + 4 * BYTE1(v191)) >> 8)
                                                                  - 760843624
                                                                  - ((2 * (*(_DWORD *)(v40 + 4 * BYTE1(v191)) >> 8)) & 0x14CE530)) ^ 0xD2A67298)
                                                                + (((*(_DWORD *)(v40 + 4 * BYTE1(v191)) << 24)
                                                                  - 760843624
                                                                  - ((*(_DWORD *)(v40 + 4 * BYTE1(v191)) << 25) & 0xA4000000)) ^ 0xD2A67298)) ^ (v206 - 760843624 - ((2 * v206) & 0xA54CE530));
  v208 = (*(_DWORD *)(v40 + 4 * BYTE2(v195)) - 760843624 - ((2 * *(_DWORD *)(v40 + 4 * BYTE2(v195))) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8840);
  v209 = v158 ^ __ROR4__(*(_DWORD *)(v40 + 4 * v197), 16) ^ v200 ^ ((v201 >> ((BYTE3(v191) & 0x18 ^ 0x18) + (BYTE3(v191) & 0x18u))) | ((_DWORD)v201 << 8)) ^ (v208 - 760843624 - ((2 * v208) & 0xA54CE530));
  v210 = *(_DWORD *)(v9 + 6040) ^ 0x80000;
  LODWORD(v197) = (v210 - ((4 * *(_DWORD *)(v9 + 6068)) & 0x10) - 693995876) ^ 0xD2A67298;
  LODWORD(v164) = *(_QWORD *)(v9 + 7264);
  LODWORD(v197) = ((unint64_t)(v193 & v197) >> v205) ^ ((unint64_t)(v164 & v197) << *(_QWORD *)(v9 + 7280));
  v211 = *(_QWORD *)(v9 + 8176);
  v212 = v165;
  LODWORD(v193) = v158 ^ (v204 >> *(_QWORD *)(v9 + 8160)) ^ ((unint64_t)(v211 & v171) << v165) ^ *(_DWORD *)(v9 + 8848) ^ *(_DWORD *)(v40 + 4 * BYTE2(v199)) ^ v161 ^ *(_DWORD *)(v9 + 9052);
  LODWORD(v165) = ((((unint64_t)(v184 & (v210 | 0x4040404)) >> v205)
                  - 760843624
                  - ((2 * ((unint64_t)(v184 & (v210 | 0x4040404)) >> v205)) & 0x254CE530)) ^ 0xD2A67298)
                + ((v164 & (v210 | 0x4040404)) << v165);
  LODWORD(v184) = (v165 - 760843624 - ((2 * v165) & 0xA54CE530)) ^ v158 ^ *(_DWORD *)(v9 + 8832) ^ __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v195)), 8) ^ *(_DWORD *)(v40 + 4 * BYTE2(v191)) ^ ((v175 >> 16) - 760843624 - ((2 * (v175 >> 16)) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9248);
  LODWORD(v165) = v209 ^ (v197 - 760843624 - ((2 * v197) & 0xA54CE530));
  v213 = v193 ^ 0x7D7E8DFB;
  v214 = v213 >> ((v209 & 0x10 ^ 0x10) + (v209 & 0x10));
  LODWORD(v161) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9600) + ((-61 * ~BYTE1(v165)) ^ 0x36)) ^ (195 * ((v165 >> 8) ^ 0xAFD8FF)) ^ 0xFFFFFFBC;
  v215 = *(_QWORD *)(v9 + 8152);
  v216 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9624) + (((BYTE2(v184) ^ 0xD8) + 18) ^ 0x47));
  v217 = *(unsigned __int8 *)(v215
                            + (((v204 & 8 ^ 0x69) + (v204 & 8)) ^ 0xA7 ^ (-61 * (BYTE1(v193) ^ 0x8D))))
       + ((195 * ((v193 >> 8) ^ 0x7D7E8D)) ^ 0xFFFFFFA7)
       + 98;
  HIDWORD(v175) = v217 ^ 0x42;
  LODWORD(v175) = v217 << 24;
  LOBYTE(v217) = v175 >> 31;
  v218 = ((v216 >> 2) | (v216 << 6)) ^ (4 * ((v216 >> 2) | (v216 << 6))) ^ (2 * ((v216 >> 2) | (v216 << 6)));
  v219 = v207 ^ 0xAFD8FF63;
  HIDWORD(v175) = *(_DWORD *)(v40
                            + 4
                            * ((((v165 ^ 0xAFD8FF63) >> 24)
                                               - (((v165 ^ 0xAFD8FF63) >> 23) & 0x56)
                                               + 43) ^ 0x2BLL));
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v196) = (v175 >> 24) ^ __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v219)), 8) ^ *(_DWORD *)(v40
                                                                                               + 4
                                                                                               * (((*(_BYTE *)(*(_QWORD *)(v9 + 8808) + (((v214 >> 1) | ((v214 & 1) << 7)) ^ 0xF5)) + 91) ^ 0x7F) - 40));
  v220 = *(_DWORD *)(v40
                   + 4
                   * ((((v218 ^ 0xC8) >> 4) - (((v218 ^ 0xFFFFFFC8) >> 3) & 0x12) - 39) ^ 0xD9 | (16 * (v218 ^ 0xC8) - ((32 * v218) & 0x40) + 36) ^ 0x24u));
  LODWORD(v197) = *(_DWORD *)(v40 + 4 * ((((v161 & 0x80) != 0) | (2 * v161)) ^ 0xFAu));
  v221 = *(unsigned int *)(v40 + 4 * (v207 ^ 0x63u));
  LOBYTE(v190) = (((v196 & 8 ^ 8) + (v196 & 8)) | 0x10) & BYTE2(v221) | ~BYTE2(v221) & 0x18;
  v222 = *(unsigned int *)(v40 + 4 * v217);
  LODWORD(v160) = *(_DWORD *)(v40 + 4 * ((v165 ^ 0xAFD8FF63) >> 16)) ^ ((v221 >> 16) | ((_DWORD)v221 << 16));
  v223 = v184 ^ 0xAFD8FF63;
  LODWORD(v222) = __ROR4__(*(_DWORD *)(v40 + ((v223 >> 22) & 0x3FC)), 24) ^ 0xD2A67298 ^ v160 ^ ((v222 << v190)
                                                                                               + (v222 >> 8)
                                                                                               - 760843624
                                                                                               - ((2
                                                                                                 * ((v222 << v190)
                                                                                                  + (v222 >> 8))) & 0xA54CE530));
  LODWORD(v160) = *(_DWORD *)(v9 + 6896) & 0x8E8E8E8E ^ 0x41494349;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * (v184 ^ 0x63u));
  LODWORD(v175) = HIDWORD(v175);
  v224 = v211 & v160;
  v225 = *(_QWORD *)(v9 + 7280);
  LODWORD(v171) = *(_DWORD *)(v9 + 6912) ^ 0xC2864288;
  v226 = v171 & v160;
  v227 = *(_QWORD *)(v9 + 8160);
  LODWORD(v193) = ((v224 << v225) - 760843624 - ((2 * (v224 << v225)) & 0xA54CE530)) ^ ((v226 >> v227)
                                                                                      - 760843624
                                                                                      - ((2 * (v226 >> v227)) & 0xA54CE530)) ^ v158 ^ *(_DWORD *)(v9 + 8860) ^ __ROR4__(*(_DWORD *)(v40 + 4 * (v193 ^ 0xFBu)), 16) ^ (((v197 >> 8) - 760843624 - ((2 * (v197 >> 8)) & 0x14CE530)) ^ 0xD2A67298 | (((_DWORD)v197 << 24) - 760843624 - (((_DWORD)v197 << 25) & 0xA4000000)) ^ 0xD2A67298) ^ (v220 - 760843624 - ((2 * v220) & 0xA54CE530)) ^ __ROR4__(*(_DWORD *)(v40 + ((v219 >> 22) & 0x3FC)), 24);
  v228 = *(_QWORD *)(v9 + 8040);
  LOBYTE(v191) = v227;
  LODWORD(v197) = ((unint64_t)(v228 & v160) >> v227)
                + ((((_DWORD)v224 << v212) - 760843624 - ((2 * ((_DWORD)v224 << v212)) & 0xA54CE530)) ^ 0xD2A67298);
  v229 = *(_QWORD *)(v9 + 7264);
  v230 = ((_DWORD)v197 - 760843624 - ((2 * (_DWORD)v197) & 0xA54CE530)) ^ 0x7D7E8DFB ^ v158 ^ *(_DWORD *)(v9 + 8920) ^ v196 ^ ((v175 >> 16) - 760843624 - ((2 * (v175 >> 16)) & 0xA54CE530));
  v231 = v205;
  LODWORD(v225) = ((unint64_t)(((v171 & *(_DWORD *)(v9 + 6044))
                                     - 760843624
                                     - ((2 * (v171 & *(_DWORD *)(v9 + 6044))) & 0x850C8510)) ^ 0xD2A67298) >> v205)
                + ((((unint64_t)(v229 & *(_DWORD *)(v9 + 6044)) << v225)
                  - 760843624
                  - ((2 * ((unint64_t)(v229 & *(_DWORD *)(v9 + 6044)) << v225)) & 0xA54CE530)) ^ 0xD2A67298);
  v232 = ((_DWORD)v225 - 760843624 - ((2 * (_DWORD)v225) & 0xA54CE530)) ^ v158 ^ *(_DWORD *)(v9 + 8968) ^ ((_DWORD)v222 - 1344733341 - ((2 * (_DWORD)v222) & 0x5FB1FEC6));
  LODWORD(v171) = v229;
  v233 = *(_QWORD *)(v9 + 7280);
  v234 = v226 >> v231;
  LOBYTE(v226) = *(_QWORD *)(v9 + 9736);
  LODWORD(v225) = v234 ^ ((unint64_t)(v229 & v160) << v233);
  LODWORD(v225) = *(_DWORD *)(v9 + 8952) ^ (v225 - 760843624 - ((2 * v225) & 0xA54CE530)) ^ *(_DWORD *)(v40 + 4 * BYTE2(v219)) ^ __ROR4__(*(_DWORD *)(v40 + 4 * (v165 ^ 0x63u)), 16) ^ __ROR4__(*(_DWORD *)(v40 + ((v213 >> 22) & 0x3FC)), 24);
  LODWORD(v175) = __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v223)), 8);
  LODWORD(v225) = (v225 ^ v175) - 1344733341 - ((2 * (v225 ^ v175)) & 0x5FB1FEC6);
  v235 = ((v193 >> 17) & 0x80 | (v193 >> 25)) ^ 0x26;
  v236 = (-61 * (BYTE2(v193) ^ 0xD8)) ^ (*(_DWORD *)(v9 + 6084) & 7 ^ 0xA4 | *(_DWORD *)(v9 + 6084) & 7 ^ 3u);
  LOBYTE(v196) = v236 + *(_BYTE *)(v215 + (v236 ^ 0x69)) + 98;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * v232);
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v161) = (v175 >> 16) - 760843624 - ((2 * (v175 >> 16)) & 0xA54CE530);
  LODWORD(v236) = v225 ^ v158;
  LODWORD(v225) = (((*(_DWORD *)(v40 + 4 * v230) << 16)
                  - 760843624
                  - ((*(_DWORD *)(v40 + 4 * v230) << 17) & 0xA54C0000)) ^ 0xD2A67298 | HIWORD(*(_DWORD *)(v40 + 4 * v230))) ^ __ROR4__(*(_DWORD *)(v40 + 4 * ((v225 ^ v158) >> 24)), 24) ^ *(_DWORD *)(v40 + 4 * ((((v196 & 0x80) != 0) | (2 * v196)) ^ 0x84u));
  LODWORD(v196) = *(_DWORD *)(v40 + 4 * BYTE1(v232));
  LODWORD(v219) = (((_DWORD)v196 - ((2 * (_DWORD)v196) & 0x30)) << 24) - 1744830464;
  LODWORD(v225) = ((v196 >> 8) - 760843624 - ((2 * (v196 >> 8)) & 0x14CE530)) ^ (v225 - 760843624 - ((2 * v225) & 0xA54CE530));
  LODWORD(v225) = ((v219 ^ 0x98000000) - 760843624 - ((2 * (v219 ^ 0x98000000)) & 0xA4000000)) ^ (v225
                                                                                                - 760843624
                                                                                                - ((2 * v225) & 0xA54CE530));
  LODWORD(v219) = ~(v193 >> 8);
  LODWORD(v196) = *(_DWORD *)(v40 + 4 * (v193 ^ 0x63u));
  HIDWORD(v175) = v196 - ((2 * v196) & 0xE530) + 29347;
  LODWORD(v175) = v196;
  LODWORD(v196) = (((v175 >> 16) - 720896) ^ 0x72980000)
                + *(_DWORD *)(v9 + 9608)
                + ~(2 * ((((v175 >> 16) - 720896) ^ 0x72980000) & *(_DWORD *)(v9 + 9656) ^ WORD1(v196) & 6));
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * v236);
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v193) = (v175 >> 16) - 760843624 - ((2 * (v175 >> 16)) & 0xA54CE530);
  LODWORD(v234) = __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v230)), 8) ^ 0xD2A67298 ^ *(_DWORD *)(v40 + 4 * BYTE2(v232));
  LODWORD(v175) = __ROR4__(*(_DWORD *)(v40 + 4 * ((*(_BYTE *)(*(_QWORD *)(v9 + 9520) + v235) ^ 0xCE) - 40)), 24);
  LODWORD(v235) = (v234 ^ v175 ^ v193) - 760843624 - ((2 * (v234 ^ v175 ^ v193)) & 0xA54CE530);
  LODWORD(v193) = *(_DWORD *)(v9 + 6888) & 0xA9A9A9A8 ^ 0xD5FC74D4;
  v237 = *(_QWORD *)(v9 + 8176);
  v238 = *(_QWORD *)(v9 + 8168);
  LODWORD(v235) = v158 ^ ((*(_DWORD *)(v9 + 9416) & v193) >> v191) ^ ((unint64_t)(v237 & v193) << v238) ^ *(_DWORD *)(v9 + 9696) ^ v235;
  LODWORD(v196) = v158 ^ ((unint64_t)(v171 & v193) << v233) ^ ((*(_DWORD *)(v9 + 5964) & v193) >> v191) ^ *(_DWORD *)(v9 + 8932) ^ __ROR4__(*(_DWORD *)(v40 + ((v232 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v40 + 4 * BYTE2(v230)) ^ __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v236)), 8) ^ v196;
  LODWORD(v193) = *(_DWORD *)(v9 + 6112);
  LODWORD(v215) = ((v228 & v193) >> v226) ^ (*(_QWORD *)(v9 + 6728) << v238);
  LODWORD(v215) = *(_DWORD *)(v9 + 8936) ^ (v215 - 760843624 - ((2 * v215) & 0xA54CE530));
  LODWORD(v236) = (v215 - 760843624 - ((2 * v215) & 0xA54CE530)) ^ v158 ^ __ROR4__(*(_DWORD *)(v40 + ((v230 >> 22) & 0x3FC)), 24) ^ v161 ^ __ROR4__(*(_DWORD *)(v40 + 4 * v219), 8) ^ *(_DWORD *)(v40 + 4 * BYTE2(v236));
  LODWORD(v224) = *(_DWORD *)(v9 + 6896);
  LODWORD(v230) = v224 & 0x882189A8 ^ 0x4031881A ^ (*(_DWORD *)(v9 + 6912) ^ 0x1891F960) & v193;
  v239 = v233;
  LODWORD(v225) = *(_DWORD *)(v9 + 8992) ^ ((unint64_t)(v171 & v193) << v233) ^ (v225 - 760843624 - ((2 * v225) & 0xA54CE530));
  v240 = (((v230 | 0x5B5760C2) - (v230 | 0xA4A89F3D) - 1532453059) ^ 0xDB526920) >> v191;
  LODWORD(v225) = (v225 - 1344733341 - ((2 * v225) & 0x5FB1FEC6)) ^ v158;
  v241 = ((_DWORD)v225 - 760843624 - ((2 * (_DWORD)v225) & 0xA54CE530)) ^ ((_DWORD)v240
                                                                         - 760843624
                                                                         - ((2 * (_DWORD)v240) & 0xA54CE530));
  LODWORD(v225) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 8720) + ((17 - BYTE1(v196)) ^ 0xC0)) ^ 0x4E;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * (v236 ^ 0x63u));
  LODWORD(v175) = HIDWORD(v175);
  *(_QWORD *)(v9 + 9696) = ((v225 >> 4) - ((v225 >> 3) & 8) + 36) ^ 0x24 | (16 * (_DWORD)v225 - ((32 * (_DWORD)v225) & 0xFFFFFFBF) - 39) ^ 0xD9;
  LODWORD(v215) = (v175 >> 16) - 760843624 - ((2 * (v175 >> 16)) & 0xA54CE530);
  v242 = v236 ^ 0xAFD8FF63;
  v243 = v196 ^ 0xAFD8FF63;
  LODWORD(v232) = ((*(_DWORD *)(v40 + ((v242 >> 22) & 0x3FC)) << 8)
                 - 760843624
                 - (*(_DWORD *)(v9 + 7944) & (*(_DWORD *)(v40 + ((v242 >> 22) & 0x3FC)) << 9))) ^ 0xD2A67298 | HIBYTE(*(_DWORD *)(v40 + ((v242 >> 22) & 0x3FC)));
  v244 = v235 ^ 0xAFD8FF63;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * BYTE1(v244));
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v219) = (HIBYTE(*(_DWORD *)(v40 + ((v243 >> 22) & 0x3FC)))
                 - 760843624
                 - ((*(_DWORD *)(v40 + ((v243 >> 22) & 0x3FC)) >> 23) & 0x130)) ^ 0xD2A67298 | (*(_DWORD *)(v40 + ((v243 >> 22) & 0x3FC)) << 8);
  LODWORD(v238) = *(_DWORD *)(v40 + 4 * BYTE1(v242));
  LODWORD(v234) = (v175 >> 8) - 760843624 - ((2 * (v175 >> 8)) & 0xA54CE530);
  LODWORD(v223) = v224 & 0xA4A4A4A4 ^ 0x56767676;
  v245 = *(_DWORD *)(v9 + 5968) & v223;
  LODWORD(v233) = (v245 >> v226) + ((unint64_t)(v237 & v223) << v233);
  LODWORD(v160) = ((v238 >> 8) - 760843624 - ((2 * (v238 >> 8)) & 0x14CE530)) ^ 0xD2A67298 | ((_DWORD)v238 << 24);
  v246 = *(_QWORD *)(v9 + 8168);
  v247 = *(_DWORD *)(v9 + 6048);
  v248 = (*(_DWORD *)(v9 + 6904) ^ 0x70729600) & v247;
  LODWORD(v235) = (v248 >> v226) ^ ((*(_QWORD *)(v9 + 6736) << v246)
                                  - 760843624
                                  - ((2 * (*(_QWORD *)(v9 + 6736) << v246)) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9004) ^ __ROR4__(*(_DWORD *)(v40 + 4 * (v235 ^ 0x63u)), 16) ^ *(_DWORD *)(v40 + 4 * BYTE2(v242));
  LODWORD(v175) = __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v241)), 8);
  LOBYTE(v226) = v191;
  v249 = v248 >> v191;
  v250 = *(_QWORD *)(v9 + 7264);
  v251 = v246;
  LODWORD(v249) = *(_DWORD *)(v9 + 9016) ^ (v249 + ((v250 & v247) << v246)) ^ (*(_DWORD *)(v40 + 4 * BYTE2(v241))
                                                                                           - 760843624
                                                                                           - ((2
                                                                                             * *(_DWORD *)(v40 + 4 * BYTE2(v241))) & 0xA54CE530));
  LODWORD(v249) = (v249 - 760843624 - ((2 * v249) & 0xA54CE530)) ^ v234;
  LODWORD(v196) = __ROR4__(*(_DWORD *)(v40 + 4 * (v196 ^ 0x63u)), 16) ^ 0xD2A67298 ^ v232 ^ (v249 - 760843624 - ((2 * v249) & 0xA54CE530));
  LODWORD(v249) = v196 - 1344733341 - ((2 * v196) & 0x5FB1FEC6);
  LODWORD(v196) = *(_DWORD *)(v9 + 9012) ^ (v233 - 760843624 - ((2 * v233) & 0xA54CE530));
  LODWORD(v246) = (v196 - 760843624 - ((2 * v196) & 0xA54CE530)) ^ v158 ^ v215 ^ __ROR4__(*(_DWORD *)(v40+ ((v241 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v40 + 4 * BYTE2(v244)) ^ __ROR4__(*(_DWORD *)(v40 + 4 * *(_QWORD *)(v9 + 9696)), 8);
  LODWORD(v241) = (((unint64_t)(v250 & v223) << v239) | (v245 >> v226)) ^ 0xD2A67298 ^ *(_DWORD *)(v9 + 9056) ^ __ROR4__(*(_DWORD *)(v40 + 4 * v241), 16) ^ __ROR4__(*(_DWORD *)(v40 + ((v244 >> 22) & 0x3FC)), 24) ^ (*(_DWORD *)(v40 + 4 * BYTE2(v243)) - 760843624 - ((2 * *(_DWORD *)(v40 + 4 * BYTE2(v243))) & 0xA54CE530)) ^ (v160 - 760843624 - 2 * (v160 & 0x52A67299 ^ (v238 >> 8) & 1));
  LODWORD(v196) = (v241 - 1344733341 - ((2 * v241) & 0x5FB1FEC6)) ^ v158;
  v252 = ((v235 ^ v219 ^ v175)
        - 1344733341
        - ((2 * (v235 ^ v219 ^ v175)) & 0x5FB1FEC6)) ^ v158;
  LODWORD(v241) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9600) + ((-61 * BYTE3(v196)) ^ 0x36)) ^ (195 * BYTE3(v196)) ^ 0xFFFFFFC1;
  LOBYTE(v244) = ((v241 & 0x80) != 0) | (2 * v241);
  LODWORD(v232) = *(_DWORD *)(v40 + 4 * BYTE1(v252))
                - 760843624
                - ((2 * *(_DWORD *)(v40 + 4 * BYTE1(v252))) & 0xA54CE530);
  v253 = v249 ^ v158;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * (v246 ^ 0x63u));
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v249) = (v175 >> 16) ^ __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v253)), 8);
  *(_DWORD *)(v9 + 9696) = -760843776;
  HIDWORD(v175) = v232 ^ 0x98;
  LODWORD(v175) = v232 ^ 0xD2A67200;
  LODWORD(v232) = (v175 >> 8) - 760843624 - ((2 * (v175 >> 8)) & 0xA54CE530);
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * v244);
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v244) = v249 ^ *(_DWORD *)(v40
                                   + 4
                                   * ((BYTE2(v252) - ((v252 >> 15) & 0x94) + 74) ^ 0x4ALL)) ^ ((v175 >> 24) - 760843624 - ((2 * (v175 >> 24)) & 0xA54CE530));
  LODWORD(v215) = v246 ^ 0xAFD8FF63;
  HIDWORD(v175) = *(_DWORD *)(v40 + 4 * BYTE1(v196));
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v246) = (*(_DWORD *)(v40 + 4 * BYTE2(v196))
                 - 760843624
                 - ((2 * *(_DWORD *)(v40 + 4 * BYTE2(v196))) & 0xA54CE530)) ^ __ROR4__(*(_DWORD *)(v40+ 4* v253), 16) ^ v232 ^ __ROR4__(*(_DWORD *)(v40 + 4 * ((((v246 ^ 0xAFD8FF63) >> 24) ^ 0x6B) + (((v246 ^ 0xAFD8FF63) >> 23) & 0xD6) - 107)), 24);
  LODWORD(v249) = (v175 >> 8) ^ __ROR4__(*(_DWORD *)(v40 + 4 * v252), 16);
  HIDWORD(v175) = *(_DWORD *)(v40 + ((v252 >> 22) & 0x3FC));
  LODWORD(v175) = HIDWORD(v175);
  LODWORD(v232) = *(_DWORD *)(v9 + 6060) ^ 0x868D8187;
  v254 = *(_DWORD *)(v9 + 6104);
  LODWORD(v243) = *(_DWORD *)(v9 + 6896) & 0x20706 ^ 0x222084 ^ (*(_DWORD *)(v9 + 6912) ^ 0x8204850F) & v254;
  v255 = *(_QWORD *)(v9 + 8176) & v232;
  v256 = *(_QWORD *)(v9 + 9736);
  LODWORD(v246) = *(_DWORD *)(v9 + 9064) ^ (((unint64_t)((((2 * (_DWORD)v243) | 0xD25D94F4)
                                                               - (_DWORD)v243
                                                               + 382809478) ^ 0xE98C687F) >> v256)
                                          + ((v250 & v254) << v251)) ^ (v246
                                                                                    - 760843624
                                                                                    - ((2 * v246) & 0xA54CE530));
  v257 = v246 - 1344733341 - ((2 * v246) & 0x5FB1FEC6);
  *(_DWORD *)(v9 + 9416) = 1386640027;
  v258 = (*(_DWORD *)(v9 + 6904) ^ 0x10B8709) & v232;
  LODWORD(v160) = (v258 >> v256)
                + ((((_DWORD)v255 << v251) - 760843624 - ((2 * ((_DWORD)v255 << v251)) & 0xA54CE530)) ^ 0xD2A67298);
  LODWORD(v243) = (v160 - 1344733341 - ((2 * v160) & 0x5FB1FEC6)) ^ v158;
  v259 = ((_DWORD)v243 + 1774730241 - ((2 * (_DWORD)v243) & 0xD3907802)) ^ 0x69C83C01 ^ *(_DWORD *)(v9 + 9040) ^ __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v215)), 8) ^ ((v175 >> 24) - 760843624 - ((2 * (v175 >> 24)) & 0xA54CE530)) ^ *(_DWORD *)(v40 + 4 * BYTE2(v253)) ^ __ROR4__(*(_DWORD *)(v40 + 4 * v196), 16);
  LODWORD(v196) = *(_DWORD *)(v9 + 9128) ^ ((((v255 << v239) - 760843624 - ((2 * (v255 << v239)) & 0xA54CE530)) ^ 0xD2A67298)
                                          + (v258 >> v226)) ^ ((v244 ^ 0xD2A67298)
                                                             - 760843624
                                                             - 2 * ((v244 ^ 0xD2A67298) & 0x52A6729B ^ v244 & 3));
  v260 = v196 - 1344733341 - ((2 * v196) & 0x5FB1FEC6);
  v261 = *(_QWORD *)(v9 + 8152);
  LODWORD(v244) = *(unsigned __int8 *)(v261 + ((-61 * v259) ^ 0xCELL))
                + ((195 * v259) ^ 0xFFFFFFA7)
                + 98;
  v262 = (v244 >> 7) & 1 | (2 * v244);
  LODWORD(v253) = (((unint64_t)(v250 & v232) << v239) + (v258 >> v226)) ^ 0xD2A67298 ^ __ROR4__(*(_DWORD *)(v40 + ((v253 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v40 + 4 * BYTE2(v215)) ^ (v249 - 760843624 - ((2 * v249) & 0xA54CE530));
  LODWORD(v253) = (v253 - 1344733341 - ((2 * v253) & 0x5FB1FEC6)) ^ v158;
  v263 = ((_DWORD)v253 - 760843624 - ((2 * (_DWORD)v253) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9552);
  LODWORD(v249) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9184)
                                     + (((v263 >> 11) & 0xE0 | (v263 >> 19) & 0x1F) ^ 0x15));
  v264 = ((v249 >> 4) | (16 * v249)) ^ ((*(_DWORD *)(v9 + 6888) & 2 ^ 0x42) + (*(_DWORD *)(v9 + 6888) & 2)) ^ v249 & 0xB;
  v265 = *(_QWORD *)(v9 + 7976);
  v266 = *(_QWORD *)(v9 + 8408);
  LODWORD(v249) = ((unint64_t)(*(_DWORD *)(v9 + 9036) ^ 0xD2A67298) >> v265) | ((unint64_t)(*(_DWORD *)(v9 + 9036) ^ 0xD2A67298) << v266);
  LODWORD(v232) = ((unint64_t)(*(_DWORD *)(v9 + 8696) ^ 0xD2A67298) >> v265) ^ ((unint64_t)(*(_DWORD *)(v9 + 8696) ^ 0xD2A67298) << v266);
  v267 = v249 - 760843624 - ((2 * v249) & 0xA54CE530);
  v268 = v232 - 760843624 - ((2 * v232) & 0xA54CE530);
  LODWORD(v265) = *(_DWORD *)(v9 + 9512);
  v269 = (_DWORD)v265 == -760843624;
  if ((_DWORD)v265 == -760843624)
    v270 = *(_DWORD *)(v9 + 9036);
  else
    v270 = v267;
  if (v269)
    v271 = *(_DWORD *)(v9 + 8696);
  else
    v271 = v268;
  v272 = v257 ^ v158;
  v273 = *(unsigned __int8 *)(v261
                            + ((-61 * HIBYTE(*(_DWORD *)(v40 + ((v259 >> 22) & 0x3FC)))) ^ 0xCELL))
       + ((195 * HIBYTE(*(_DWORD *)(v40 + ((v259 >> 22) & 0x3FC)))) ^ 0xFFFFFFA7)
       + 98;
  v274 = ((v273 & 0x80) != 0) | (2 * v273);
  v275 = v260 ^ v158;
  v276 = (*(_DWORD *)(v40 + ((v259 >> 22) & 0x3FC)) << 8) ^ __ROR4__(*(_DWORD *)(v40 + 4 * (v260 ^ v158)), 16) ^ (((*(_DWORD *)(v40 + 4 * BYTE1(v272)) << 24)- 760843624- ((*(_DWORD *)(v40 + 4 * BYTE1(v272)) << 25) & 0xA4000000)) ^ 0xD2A67298 | (*(_DWORD *)(v40 + 4 * BYTE1(v272)) >> 8)) ^ v274 ^ 0x84 ^ *(_DWORD *)(v40 + 4 * (v264 + 61));
  HIDWORD(v277) = *(_DWORD *)(v40 + 4 * BYTE1(v275));
  LODWORD(v277) = HIDWORD(v277);
  v278 = (v277 >> 8) ^ __ROR4__(*(_DWORD *)(v40 + ((v263 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v40 + 4 * BYTE2(v272));
  LODWORD(v277) = __ROR4__(*(_DWORD *)(v40 + 4 * (v262 ^ 0x84u)), 16);
  v279 = ((v278 ^ v277) - 760843624 - ((2 * (v278 ^ v277)) & 0xA54CE530)) ^ v271;
  v280 = *(_QWORD *)(v9 + 8176);
  v281 = *(_DWORD *)(v9 + 8648);
  v282 = ((unint64_t)(v281 & v280) << v251) ^ *(_QWORD *)(v9 + 8616) ^ v270 ^ (v276
                                                                                                  - 760843624
                                                                                                  - ((2 * v276) & 0xA54CE530));
  v283 = ((unint64_t)(*(_DWORD *)(v9 + 8656) & *(_DWORD *)(v9 + 8628)) >> v256) ^ ((unint64_t)(*(_DWORD *)(v9 + 8656) & v280) << v251) ^ v158 ^ (v279 - 1344733341 - ((2 * v279) & 0x5FB1FEC6));
  *(_DWORD *)(v9 + 9248) = v283;
  v284 = *(_QWORD *)(v9 + 3152);
  v285 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * BYTE2(v283)
                                      - 260 * ((unsigned __int16)((520257 * BYTE2(v283)) >> 16) >> 4)));
  *(_DWORD *)(v9 + 9128) = v285;
  v286 = (v282 - 1344733341 - ((2 * v282) & 0x5FB1FEC6)) ^ v158;
  *(_DWORD *)(v9 + 9552) = v286;
  v287 = 129 * BYTE1(v286) % ((HIBYTE(v285) & 4 ^ 0x104) + (HIBYTE(v285) & 4));
  v288 = *(_QWORD *)(v9 + 8392);
  v289 = ((unint64_t)(*(_DWORD *)(v9 + 9504) ^ 0xD2A67298) >> v288)
       + ((unint64_t)(*(_DWORD *)(v9 + 9504) ^ 0xD2A67298) << v266);
  v290 = v289 - 760843624 - ((2 * v289) & 0xA54CE530);
  v291 = ((unint64_t)(*(_DWORD *)(v9 + 8868) ^ 0xD2A67298) >> v288)
       + ((unint64_t)(*(_DWORD *)(v9 + 8868) ^ 0xD2A67298) << v266);
  v292 = v291 - 760843624 - ((2 * v291) & 0xA54CE530);
  v293 = *(_DWORD *)(v9 + 9072);
  if (v293 == -760843624)
    v290 = *(_DWORD *)(v9 + 9504);
  v294 = *(_DWORD *)(v40
                   + 4
                   * ((*(_BYTE *)(*(_QWORD *)(v9 + 9520)
                                                 + (((v263 >> 1) | ((_BYTE)v263 << 7)) ^ 0xF1)) ^ 0xCE)
                                     - ((v263 >> 1) & 0x28)
                                     + ((v263 >> 1) | 0xD7)
                                     + 1));
  HIDWORD(v295) = *(_DWORD *)(v40 + 4 * BYTE1(v259));
  LODWORD(v295) = HIDWORD(v295);
  v296 = (v295 >> 8) ^ (v294 << 16) ^ HIWORD(v294) ^ __ROR4__(*(_DWORD *)(v40 + ((v272 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v40 + 4 * BYTE2(v275));
  v297 = *(_DWORD *)(v40 + 4 * BYTE2(v259));
  HIDWORD(v295) = *(_DWORD *)(v40 + 4 * v272);
  LODWORD(v295) = HIDWORD(v295);
  v298 = (v295 >> 16) ^ __ROR4__(*(_DWORD *)(v40 + 4 * BYTE1(v263)), 8) ^ __ROR4__(*(_DWORD *)(v40 + ((v275 >> 22) & 0x3FC)), 24);
  if (v293 == -760843624)
    v299 = *(_DWORD *)(v9 + 8868);
  else
    v299 = v292;
  v300 = (*(_QWORD *)(v9 + 8640) << v251) ^ ((unint64_t)(v281 & *(_DWORD *)(v9 + 8632)) >> v256) ^ v299 ^ (v296 - 760843624 - ((2 * v296) & 0xA54CE530));
  v301 = (*(_QWORD *)(v9 + 8664) << v239) ^ *(_QWORD *)(v9 + 8680) ^ v290 ^ v297 ^ (v298
                                                                                  - 760843624
                                                                                  - ((2 * v298) & 0xA54CE530));
  v302 = (v300 - 1344733341 - ((2 * v300) & 0x5FB1FEC6)) ^ v158;
  *(_DWORD *)(v9 + 9512) = v302;
  v303 = (v301 - 1344733341 - ((2 * v301) & 0x5FB1FEC6)) ^ v158;
  *(_DWORD *)(v9 + 9072) = v303;
  v304 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * v283
                                      - 260
                                      * ((unsigned __int16)((520257 * v283) >> 16) >> 4)));
  HIDWORD(v305) = v304 ^ 0x98;
  LODWORD(v305) = v304 ^ *(_DWORD *)(v9 + 9696);
  v306 = (v305 >> 8) + *(_DWORD *)(v9 + 9608) + ~((2 * (v305 >> 8)) & 0xA54CE530);
  v307 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * HIBYTE(v302)
                                      - 260 * ((unsigned __int16)((520257 * HIBYTE(v302)) >> 16) >> 4)));
  HIDWORD(v305) = v307 ^ 0x7298;
  LODWORD(v305) = v307 ^ 0xD2A60000;
  v308 = v305 >> 16;
  v309 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * BYTE2(v303)
                                      - 260 * ((unsigned __int16)((520257 * BYTE2(v303)) >> 16) >> 4)));
  HIDWORD(v305) = v309 ^ 0xA67298;
  LODWORD(v305) = v309 ^ 0xD2000000;
  v310 = *(_DWORD *)(v9 + 9176);
  v311 = *(_DWORD *)(v9 + 7964) & (2 * *(_DWORD *)(v9 + 5976)) & (8 * (v310 & *(_DWORD *)(v9 + 7364))) ^ 0x46012004;
  v312 = ((v305 >> 24) - 760843624 - ((2 * (v305 >> 24)) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9120);
  v313 = v306 ^ 0xD2A67298 ^ v308 ^ (v312 - 760843624 - ((2 * v312) & 0xA54CE530)) ^ *(_DWORD *)(v284 + 4 * v287);
  v314 = *(_DWORD *)(v9 + 7272);
  v315 = (v313 - 1150398823 - ((2 * v313) & 0x76DC9D32)) ^ v314;
  v316 = (v315 + 1390929893 - ((2 * v315) & 0xA5CFCFCA)) ^ *(_DWORD *)(v9 + 7048);
  v317 = *(_DWORD *)(v9 + 7048);
  v318 = (2 * (((2 * v311) | 0x64376DEA) - v311) + 466129430) ^ 0x68352DE2;
  v319 = (v316 - 760843624 - ((2 * v316) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 6944);
  v320 = (v310 ^ -v310 ^ (v318 - (v318 ^ v310))) + v318;
  *(_DWORD *)(v9 + 9120) = v320;
  v321 = (v319 + 610189181 - ((2 * v319) & 0x48BD7EFA)) ^ v320;
  v322 = *(_QWORD *)(v9 + 9160);
  v323 = *(_QWORD *)(v9 + 9136);
  v324 = ((unint64_t)(v321 ^ 0xF18B6AA8) >> v322) | ((unint64_t)(v321 ^ 0xF18B6AA8) << v323);
  v325 = v324 + 610189181 - ((2 * v324) & 0x48BD7EFA);
  v326 = *(_DWORD *)(v9 + 9576) ^ *(_DWORD *)(v9 + 8792);
  v327 = *(_QWORD *)(v9 + 9728);
  v329 = *(_DWORD *)(v9 + 9172);
  v330 = v321 ^ 0xD5D5D5D5;
  if (v329 != -760843624)
    v330 = v325;
  *(_DWORD *)(v9 + 9432) = v330;
  v328 = ((unint64_t)(v326 ^ 0x625FC380u) >> v323) ^ ((unint64_t)(v326 ^ 0x625FC380u) << v327);
  v331 = v328 - 760843624 - ((2 * v328) & 0xA54CE530);
  v332 = *(_DWORD *)(v9 + 8744);
  v333 = v332 ^ 0xD2A67298;
  *(_QWORD *)(v9 + 9504) = v333;
  v334 = v332;
  v335 = v327;
  v337 = v326 ^ 0xB0F9B118;
  if (v329 == -760843624)
    v331 = v337;
  *(_DWORD *)(v9 + 9272) = v331;
  v336 = (v333 >> v323) | (v333 << v327);
  v338 = v336 - 760843624 - ((2 * v336) & 0xA54CE530);
  v339 = ((unint64_t)(*(_QWORD *)(v9 + 6968) & *(_DWORD *)(v9 + 6712)) >> v239) ^ ((unint64_t)(*(_QWORD *)(v9 + 7096) & *(_DWORD *)(v9 + 6712)) << *(_QWORD *)(v9 + 8160));
  v340 = v339 ^ (2 * (v339 & *(_DWORD *)(v9 + 7176)));
  v341 = *(_DWORD *)(v9 + 7104);
  v342 = ((4
         * ((v340 & *(_DWORD *)(v9 + 6936) ^ 0x1A04A210)
          - ((2 * (v340 & *(_DWORD *)(v9 + 6936) ^ 0x1A04A210)) & 0x882410E))
         - 1861975524) ^ 0xF9160A5C) & v341 ^ v340;
  v343 = *(_DWORD *)(v9 + 6756) & v341 & (16 * (v342 & *(_DWORD *)(v9 + 7144)));
  v344 = v342 ^ 0xD2A67298 ^ (v343 - 760843624 - ((2 * v343) & 0xA54CE520));
  v345 = *(_DWORD *)(v9 + 8760);
  v346 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * BYTE2(v345)
                                      - 260 * ((unsigned __int16)((520257 * BYTE2(v345)) >> 16) >> 4)));
  HIDWORD(v348) = v346 ^ 0xA67298;
  LODWORD(v348) = v346 ^ 0xD2000000;
  v347 = v348 >> 24;
  v349 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * *(_DWORD *)(v9 + 9592)
                                      - 260
                                      * ((unsigned __int16)((520257
                                                           * *(_DWORD *)(v9 + 9592)) >> 16) >> 4)));
  v350 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * *(_DWORD *)(v9 + 8688)
                                      - 260
                                      * ((unsigned __int16)((520257 * *(_DWORD *)(v9 + 8688)) >> 16) >> 4)));
  HIDWORD(v348) = v350 ^ 0x7298;
  LODWORD(v348) = v350 ^ 0xD2A60000;
  v351 = (((v349 << 24) ^ 0x98000000) - 760843624 - ((2 * ((v349 << 24) ^ 0x98000000)) & 0xA4000000)) ^ 0xD2A67298 | (v349 >> 8);
  v352 = ((v348 >> 16) ^ v347) - 760843624 - ((2 * ((v348 >> 16) ^ v347)) & 0xA54CE530);
  if (v329 == -760843624)
    v338 = v334;
  v353 = v314 ^ v338 ^ *(_DWORD *)(v284
                                 + 4
                                 * (unsigned __int16)(129 * *(_QWORD *)(v9 + 8672)
                                                    - 260
                                                    * ((unsigned __int16)((520257
                                                                         * *(_QWORD *)(v9 + 8672)) >> 16) >> 4))) ^ v351 ^ 0x691A9A73 ^ v352;
  v354 = (v353 + 1390929893 - ((2 * v353) & 0xA5CFCFCA)) ^ v317;
  v355 = (v354 - 760843624 - ((2 * v354) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 6704);
  v356 = (v355 - 1494004419 - ((2 * v355) & 0x4DE69A7A)) ^ v344;
  v357 = ((((unint64_t)(v356 ^ 0xFDA81666) >> v327)
         - 760843624
         - ((2 * ((unint64_t)(v356 ^ 0xFDA81666) >> v327)) & 0xA54CE530)) ^ 0xD2A67298)
       + ((unint64_t)(v356 ^ 0xFDA81666) << v323);
  v358 = v357 - 760843624 - ((2 * v357) & 0xA54CE530);
  v359 = v356 ^ 0x2F0E64FE;
  if (v329 != -760843624)
    v359 = v358;
  *(_DWORD *)(v9 + 9176) = v359;
  v360 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * *(_QWORD *)(v9 + 8704)
                                      - 260
                                      * ((unsigned __int16)((520257
                                                           * *(_QWORD *)(v9 + 8704)) >> 16) >> 4)));
  HIDWORD(v361) = v360 ^ 0x7298;
  LODWORD(v361) = v360 ^ 0xD2A60000;
  v362 = *(_DWORD *)(v9 + 9720) ^ 0xD2A67298;
  v363 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * *(_QWORD *)(v9 + 8712)
                                      - 260
                                      * ((unsigned __int16)((520257
                                                           * *(_QWORD *)(v9 + 8712)) >> 16) >> 4)));
  v364 = ((((v363 << 8) ^ 0xA6729800) - 760843624 - (*(_DWORD *)(v9 + 7944) & (2 * ((v363 << 8) ^ 0xA6729800)))) ^ 0xD2A67298 | HIBYTE(v363)) ^ 0xD2;
  v365 = v314 ^ __ROR4__(*(_DWORD *)(v284+ 4* (unsigned __int16)(129 * v345- 260* ((unsigned __int16)((520257 * v345) >> 16) >> 4))), 8) ^ (v361 >> 16) ^ ((*(_DWORD *)(v9 + 9408) ^ *(_DWORD *)(v9 + 9156))- 760843624- ((2 * (*(_DWORD *)(v9 + 9408) ^ *(_DWORD *)(v9 + 9156))) & 0xA54CE530)) ^ *(_DWORD *)(v284 + 4 * (unsigned __int16)(129 * BYTE1(v362) - 260 * ((unsigned __int16)((520257 * BYTE1(v362)) >> 16) >> 4))) ^ 0xF11A9A73 ^ (v364 - 760843624 - ((2 * v364) & 0xA54CE530));
  v366 = (v365 + 1390929893 - ((2 * v365) & 0xA5CFCFCA)) ^ v317;
  v367 = (v366 + 610189181 - ((2 * v366) & 0x48BD7EFA)) ^ v344;
  *(_DWORD *)(v9 + 9064) = v344;
  v368 = ((unint64_t)(v367 ^ 0x7F05E426u) >> v335) | ((unint64_t)(v367 ^ 0x7F05E426u) << v323);
  v369 = v368 - 760843624 - ((2 * v368) & 0xA54CE530);
  v370 = *(_DWORD *)(v9 + 8900);
  v372 = v367 ^ 0xADA396BE;
  if (v329 != -760843624)
    v372 = v369;
  *(_DWORD *)(v9 + 9408) = v372;
  v373 = 129 * BYTE2(v362) - 260 * ((unsigned __int16)((520257 * BYTE2(v362)) >> 16) >> 4);
  v374 = *(unsigned int *)(v284
                         + 4
                         * (unsigned __int16)(129 * BYTE2(*(_QWORD *)(v9 + 8752))
                                            - 260
                                            * ((unsigned __int16)((520257
                                                                 * BYTE2(*(_QWORD *)(v9 + 8752))) >> 16) >> 4)));
  v375 = *(_DWORD *)(v284 + 4 * v373);
  v376 = (unint64_t)(v375 ^ 0xD2A67298) >> (((BYTE3(v374) ^ 0xD2) & 0x18 ^ 0x18) + ((BYTE3(v374) ^ 0xD2) & 0x18u));
  v377 = ((v376 | (v375 << 8)) ^ 0xA6729800)
       - 760843624
       - 2 * (((v376 | (v375 << 8)) ^ 0xA6729800) & *(_DWORD *)(v9 + 9416) ^ v376 & 3);
  LODWORD(v376) = *(_DWORD *)(v284
                            + 4
                            * (unsigned __int16)(129 * *(_QWORD *)(v9 + 8752)
                                               - 260
                                               * ((unsigned __int16)((520257
                                                                    * *(_QWORD *)(v9 + 8752)) >> 16) >> 4)));
  v378 = *(_DWORD *)(v9 + 9696);
  HIDWORD(v379) = v376 ^ 0x98;
  LODWORD(v379) = v376 ^ v378;
  v380 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * BYTE1(v345)
                                      - 260 * ((unsigned __int16)((520257 * BYTE1(v345)) >> 16) >> 4))) ^ __ROR4__(*(_DWORD *)(v284 + 4 * (unsigned __int16)(129 * *(_QWORD *)(v9 + 9400) - 260 * ((unsigned __int16)((520257 * *(_QWORD *)(v9 + 9400)) >> 16) >> 4))), 16) ^ (v379 >> 8) ^ 0x7298D2A6 ^ v377;
  v381 = (v380 - 1150398823 - ((2 * v380) & 0x76DC9D32)) ^ v314;
  v382 = v381 - 760843624 - ((2 * v381) & 0xA54CE530);
  if (v329 == -760843624)
  {
    v383 = v370;
  }
  else
  {
    v371 = ((unint64_t)(v370 ^ 0xD2A67298) >> v323) | ((unint64_t)(v370 ^ 0xD2A67298) << v322);
    v383 = v371 - 760843624 - ((2 * v371) & 0xA54CE530);
  }
  v384 = (v317 ^ 0x52E7E7E5 ^ v383 ^ v382)
       + *(_DWORD *)(v9 + 6712)
       - 2 * ((v317 ^ 0x52E7E7E5 ^ v383 ^ v382) & *(_DWORD *)(v9 + 6712));
  v385 = (v384 + 610189181 - ((2 * v384) & 0x48BD7EFA)) ^ v344;
  v386 = ((unint64_t)(v385 ^ 0x7F05E426u) << v323) ^ ((unint64_t)(v385 ^ 0x7F05E426u) >> v322);
  v387 = v386 - 760843624 - ((2 * v386) & 0xA54CE530);
  v388 = v385 ^ 0xADA396BE;
  if (v329 != -760843624)
    v388 = v387;
  *(_DWORD *)(v9 + 9400) = v388;
  v389 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * HIBYTE(*(_DWORD *)(v9 + 9552))
                                      - 260
                                      * ((unsigned __int16)((520257 * HIBYTE(*(_DWORD *)(v9 + 9552))) >> 16) >> 4)));
  HIDWORD(v391) = v389 ^ 0x7298;
  LODWORD(v391) = v389 ^ 0xD2A60000;
  v390 = v391 >> 16;
  v392 = *(_DWORD *)(v9 + 9072);
  v393 = BYTE1(*(_DWORD *)(v9 + 9512));
  v394 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * v392
                                      - 260
                                      * ((unsigned __int16)((520257 * v392) >> 16) >> 4)));
  HIDWORD(v391) = v394 ^ 0x98;
  LODWORD(v391) = v394 ^ v378;
  v395 = ((*(_DWORD *)(v9 + 9560) & 0x6103A028 ^ 0x40022008) + (*(_DWORD *)(v9 + 9560) & 0x6103A028 ^ 0x21018020)) | 0x8A574015;
  v396 = (1171138608 - v395 - ((-431002832 - 2 * v395) & 0x850CE130)) ^ v329;
  *(_DWORD *)(v9 + 9172) = v396;
  v397 = *(_DWORD *)(v9 + 9192) ^ __ROR4__(*(_DWORD *)(v9 + 9128), 24) ^ v390 ^ (v391 >> 8);
  v398 = ((v397 ^ 0xA67298D2) - 760843624 - 2 * ((v397 ^ 0xA67298D2) & 0x52A67299 ^ v397 & 1)) ^ *(_DWORD *)(v284 + 4 * (unsigned __int16)(129 * v393 - 260 * ((unsigned __int16)((520257 * v393) >> 16) >> 4)));
  v399 = (v398 - 1150398823 - ((2 * v398) & 0x76DC9D32)) ^ v314;
  v400 = (v399 + 1390929893 - ((2 * v399) & 0xA5CFCFCA)) ^ v317;
  v401 = (v400 - 760843624 - ((2 * v400) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 6944);
  v402 = *(_DWORD *)(v9 + 9120);
  v403 = (v401 + 610189181 - ((2 * v401) & 0x48BD7EFA)) ^ v402;
  v404 = v396 ^ 0x5B;
  v405 = (((unint64_t)(v403 ^ 0xF18B6AA8) >> v322) ^ ((unint64_t)(v403 ^ 0xF18B6AA8) << (v396 ^ 0x5B)))
       + 610189181
       - ((2
         * (((unint64_t)(v403 ^ 0xF18B6AA8) >> v322) ^ ((unint64_t)(v403 ^ 0xF18B6AA8) << (v396 ^ 0x5B)))) & 0x48BD7EFA);
  v406 = v403 ^ 0xD5D5D5D5;
  v407 = *(_DWORD *)(v9 + 7936);
  if (v407 == -760843624)
    v408 = v406;
  else
    v408 = v405;
  *(_DWORD *)(v9 + 9192) = v408;
  v409 = (((425745222 - *(_DWORD *)(v9 + 9224)) & (*(_DWORD *)(v9 + 9224) - 425745224)) < 0) ^ __OFSUB__(v407, -760843624);
  *(_DWORD *)(v9 + 9416) = 1386640028;
  v410 = (((v374 >> 24) ^ 0xD2 | ((_DWORD)v374 << 8)) ^ 0xA6729800)
       - 760843624
       - 2 * ((((v374 >> 24) ^ 0xD2 | ((_DWORD)v374 << 8)) ^ 0xA6729800) & 0x52A6729C ^ (v374 >> 24) & 4);
  v411 = BYTE1(*(_DWORD *)(v9 + 9592));
  v412 = *(_DWORD *)(v9 + 9720) ^ 0x98;
  v413 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * v412 - 260
                                                   * ((unsigned __int16)((520257 * v412) >> 16) >> 4)));
  v414 = (v413 >> 8) ^ 0xD2A672;
  v415 = (unint64_t)(v413 ^ 0xD2A67298) << (((v413 & 0x3C ^ 0x24) + (v413 & 0x3C ^ 0x18)) & 0x58);
  v416 = (v415 - 760843624 - ((2 * v415) & 0xA54CE530)) ^ 0xD2A67298 | v414;
  v417 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * HIBYTE(v345)
                                      - 260 * ((unsigned __int16)((520257 * HIBYTE(v345)) >> 16) >> 4)));
  HIDWORD(v419) = v417 ^ 0x7298;
  LODWORD(v419) = v417 ^ 0xD2A60000;
  v418 = v419 >> 16;
  v420 = *(_DWORD *)(v9 + 8888);
  v421 = v420 ^ 0xD2A67298;
  *(_QWORD *)(v9 + 9720) = v421;
  v422 = (((v421 << v322) - 760843624 - ((2 * (v421 << v322)) & 0xA54CE530)) ^ 0xD2A67298) + (v421 >> v323);
  v423 = v422 - 760843624 - ((2 * v422) & 0xA54CE530);
  v424 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * v411 - 260
                                                   * ((unsigned __int16)((520257 * v411) >> 16) >> 4)));
  if (v409)
    v423 = v420;
  v425 = v423 ^ v314 ^ v424 ^ v418 ^ v410 ^ v416;
  v426 = ((v425 ^ 0x69C83C01) + 1390929893 - 2 * ((v425 ^ 0x69C83C01) & 0x52E7E7E7 ^ v425 & 2)) ^ v317;
  v427 = *(_DWORD *)(v9 + 6704);
  v428 = (v426 - 760843624 - ((2 * v426) & 0xA54CE530)) ^ v427;
  v429 = (v428 - 1494004419 - ((2 * v428) & 0x4DE69A7A)) ^ *(_DWORD *)(v9 + 9064);
  v430 = ((((unint64_t)(v429 ^ 0xFDA81666) >> v322)
         - 760843624
         - ((2 * ((unint64_t)(v429 ^ 0xFDA81666) >> v322)) & 0xA54CE530)) ^ 0xD2A67298)
       + ((unint64_t)(v429 ^ 0xFDA81666) << v323);
  v431 = v430 - 760843624 - ((2 * v430) & 0xA54CE530);
  v432 = v429 ^ 0x2F0E64FE;
  if (v407 == -760843624)
    v431 = v432;
  v433 = BYTE1(v392);
  v434 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * HIBYTE(v392)
                                      - 260 * ((unsigned __int16)((520257 * HIBYTE(v392)) >> 16) >> 4)));
  HIDWORD(v436) = v434 ^ 0x7298;
  LODWORD(v436) = v434 ^ 0xD2A60000;
  v435 = v436 >> 16;
  v437 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * *(_DWORD *)(v9 + 9512)
                                      - 260
                                      * ((unsigned __int16)((520257
                                                           * *(_DWORD *)(v9 + 9512)) >> 16) >> 4)));
  v438 = *(_DWORD *)(v9 + 9696);
  HIDWORD(v436) = v437 ^ 0x98;
  LODWORD(v436) = v437 ^ v438;
  v439 = v436 >> 8;
  v440 = *(_DWORD *)(v9 + 9248);
  v441 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * BYTE2(*(_DWORD *)(v9 + 9552))
                                      - 260
                                      * ((unsigned __int16)((520257
                                                           * BYTE2(*(_DWORD *)(v9 + 9552))) >> 16) >> 4)));
  HIDWORD(v436) = v441 ^ 0xA67298;
  LODWORD(v436) = v441 ^ 0xD2000000;
  v442 = *(_DWORD *)(v9 + 9560) ^ v314 ^ v435 ^ *(_DWORD *)(v284
                                                          + 4
                                                          * (unsigned __int16)(129 * BYTE1(v440)
                                                                             - 260
                                                                             * ((unsigned __int16)((520257
                                                                                                  * BYTE1(v440)) >> 16) >> 4))) ^ (v436 >> 24) ^ v439;
  v443 = ((v442 ^ 0xBB6E4E99) + 1390929893 - 2 * ((v442 ^ 0xBB6E4E99) & 0x52E7E7E7 ^ v442 & 2)) ^ v317;
  v444 = (v443 - 760843624 - ((2 * v443) & 0xA54CE530)) ^ v427;
  v445 = (v444 - 1494004419 - ((2 * v444) & 0x4DE69A7A)) ^ v402;
  v446 = v402;
  v447 = *(_QWORD *)(v9 + 9728);
  v448 = ((unint64_t)(v445 ^ 0x732698E8u) << v404) ^ ((unint64_t)(v445 ^ 0x732698E8u) >> v447);
  v449 = v448 + 610189181 - ((2 * v448) & 0x48BD7EFA);
  v450 = v445 ^ 0x57782795;
  if (*(_DWORD *)(v9 + 9704) != -760843624)
    v450 = v449;
  v451 = (((*(_DWORD *)(v9 + 9456) ^ 0xD2A67298)
         + (*(_DWORD *)(v9 + 7248) ^ 0x2D598D67)
         + 1
         + 1774730241
         - ((2 * ((*(_DWORD *)(v9 + 9456) ^ 0xD2A67298) + (*(_DWORD *)(v9 + 7248) ^ 0x2D598D67) + 1)) & 0xD3907802)) ^ 0x69C83C01)
       + (*(_DWORD *)(v9 + 7248) ^ 0x2D598D67)
       + 1;
  v452 = (v451 ^ 0x702F42DA) & 0x5F08D911 ^ 0x2A64421 ^ (((v451 ^ 0x702F42DA) & 0x5F08D910)
                                                       - ((v451 ^ 0x702F42DA) & 0x52080010)
                                                       + ((v451 ^ 0x702F42DA) & 0x52080010 ^ 0x52AE0431));
  v453 = (v452 | 0x70AAFEF6) - (v452 | 0x8F550109) == -1857176099;
  v454 = *(_QWORD *)(v9 + 8152);
  v455 = ((134 * HIWORD(*(_DWORD *)(v9 + 9512))) & 0xC4 ^ 0x44)
       + ((195 * HIWORD(*(_DWORD *)(v9 + 9512))) ^ 0xC5)
       + *(unsigned __int8 *)(v454 + ((-61 * HIWORD(*(_DWORD *)(v9 + 9512))) ^ 0xCELL));
  v456 = (((v455 & 0x80) != 0) | (2 * v455)) ^ 0x84;
  v457 = 129 * v456 - 260 * ((520257 * v456) >> 20);
  v458 = 129 * v433 - 260 * ((520257 * v433) >> 20);
  v459 = *(_DWORD *)(v9 + 9408);
  v460 = *(_DWORD *)(v9 + 9400);
  if (v453)
    v461 = *(_DWORD *)(v9 + 9400);
  else
    v461 = *(_DWORD *)(v9 + 9408);
  if (v453)
  {
    v460 = *(_DWORD *)(v9 + 9176);
  }
  else
  {
    v459 = v431;
    v431 = *(_DWORD *)(v9 + 9176);
  }
  v462 = (v451 & 2) == 0;
  if ((v451 & 2) != 0)
    v463 = v431;
  else
    v463 = v461;
  if (v462)
  {
    v461 = v431;
    v464 = v459;
  }
  else
  {
    v464 = v460;
  }
  if (v462)
    v459 = v460;
  v465 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * *(_DWORD *)(v9 + 9552)
                                      - 260
                                      * ((unsigned __int16)((520257
                                                           * *(_DWORD *)(v9 + 9552)) >> 16) >> 4)));
  v466 = *(_DWORD *)(v284
                   + 4
                   * (unsigned __int16)(129 * HIBYTE(v440)
                                      - 260 * ((unsigned __int16)((520257 * HIBYTE(v440)) >> 16) >> 4)));
  v467 = HIWORD(v466) ^ 0xD2A6;
  v468 = v467 - 33021;
  if (v467 < 0x80FD)
    v468 = HIWORD(v466) ^ 0xD2A6;
  HIDWORD(v470) = v465 ^ 0x98;
  LODWORD(v470) = v465 ^ v438;
  v469 = v470 >> 8;
  if ((v466 ^ 0xD2A60000) <= 0x80FCFFFF)
    v471 = 0;
  else
    v471 = 33021;
  if (!v468)
    v467 = v471;
  v472 = *(_DWORD *)(v284 + 4 * (unsigned __int16)v457);
  v473 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9184)
                            + ((((v472 >> 19) ^ 0x1D) & 0x7F ^ 0x25 ^ ((((v472 >> 19) ^ 0x1D) & 0x9F) - (((v472 >> 19) ^ 0x1D) & 5) + (((v472 >> 19) ^ 0x1D) & 5 ^ 0x65)) | (v472 >> 27) ^ 0x1A) ^ 0x15));
  v474 = (((((v473 >> 4) | (16 * v473)) ^ v473 & 0xB ^ 0x42) + 61) | (v472 << 8)) ^ v469 ^ (v467 | (v466 << 16));
  v475 = ((v474 ^ 0xD4EA9800) - 760843624 - 2 * ((v474 ^ 0xD4EA9800) & 0x52A67299 ^ v474 & 1)) ^ *(_DWORD *)(v284 + 4 * (unsigned __int16)v458);
  v476 = (v475 - 760843624 - ((2 * v475) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9272);
  v477 = (v476 - 1150398823 - ((2 * v476) & 0x76DC9D32)) ^ v314;
  v478 = (v477 + 1390929893 - ((2 * v477) & 0xA5CFCFCA)) ^ v317;
  v479 = *(_DWORD *)(v9 + 9608);
  v480 = (v478 + v479 + ~((2 * v478) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 6704);
  v481 = (v480 - 1494004419 - ((2 * v480) & 0x4DE69A7A)) ^ v446;
  v482 = ((unint64_t)(v481 ^ 0x732698E8u) << v404) | ((unint64_t)(v481 ^ 0x732698E8u) >> v447);
  v483 = v482 + 610189181 - ((2 * v482) & 0x48BD7EFA);
  v484 = *(_DWORD *)(v9 + 8472);
  if (*(_DWORD *)(v9 + 9172) == -2016422565)
    v483 = v481 ^ 0x57782795;
  v485 = ((2 * (((v484 | 0xFFFFFFFE) + 1873191610) ^ 0xEBAF261A)) | 0x45091114)
       - (((v484 | 0xFFFFFFFE) + 1873191610) ^ 0xEBAF261A) == -921594702;
  v486 = v484 - *(_DWORD *)(v9 + 6288);
  v487 = *(_DWORD *)(v9 + 9576);
  v488 = ((v487 ^ 0x4F064EE7) + 1650443137) ^ ((v487 ^ 0x2D598D67) + 1);
  v489 = (v488 - 760843624 - ((2 * v488) & 0xA54CE530)) ^ v487;
  if (v485)
    v490 = *(_DWORD *)(v9 + 9432);
  else
    v490 = v483;
  v491 = *(_DWORD *)(v9 + 9192);
  if (!v485)
  {
    v483 = *(_DWORD *)(v9 + 9192);
    v491 = v450;
    v450 = *(_DWORD *)(v9 + 9432);
  }
  v492 = (v486 & 2) == 0;
  v493 = v489 - ((2 * v489 - 994081024) & 0xA54CE530) + 889599512;
  if (v492)
    v494 = v491;
  else
    v494 = v490;
  v495 = v493 ^ 0xF6F8CDE5 ^ v494;
  v496 = ((v461 ^ v493) - 760843624 - ((2 * (v461 ^ v493)) & 0xA54CE530)) ^ v464;
  v497 = v496 + 610189181 - ((2 * v496) & 0x48BD7EFA);
  if (v492)
    v498 = v483;
  else
    v498 = v450;
  v499 = v498 ^ v497;
  v500 = (v463 ^ 0xD2A67298) + 1788548943 * (v495 - v499);
  if (v492)
    v483 = v450;
  else
    v490 = v491;
  v501 = v483 ^ 0xF6F8CDE5;
  v502 = v500 - 760843624 - ((2 * v500) & 0xA54CE530);
  v503 = v490 ^ 0xF6F8CDE5;
  v504 = ((v503 ^ v459) - 760843624 - ((2 * (v503 ^ v459)) & 0xA54CE530)) ^ v493;
  v505 = (v504 - 760843624 - ((2 * v504) & 0xA54CE530)) ^ v502;
  v506 = ((v501 ^ v464) - 760843624 - ((2 * (v501 ^ v464)) & 0xA54CE530)) ^ v493 ^ v505;
  v507 = ((1999555017 * (v493 ^ 0x5C28FC16)) ^ 0x8E8E8E8E ^ v505 ^ (1999555017
                                                                  * ((v506 + 610189181 - ((2 * v506) & 0x48BD7EFA)) ^ v498)))
       - 1269379467 * (v502 ^ 0x5C28FC16);
  v508 = v501 ^ v493;
  v509 = v508 ^ v499 ^ v505;
  v510 = (338462413 * v509) ^ (338462413 * v495) ^ (((v507 - 760843624 - ((2 * v507) & 0xA54CE530)) ^ 0xD2A67298)
                                                  + 1269379467 * (v503 ^ v493));
  v511 = (v509 ^ 0x8E8E8E8E) + 1888823349 * ((v510 ^ 0x8E8E8E8E) - v508);
  v512 = ((-760843624 - 735345473 * (v493 ^ 0x5C28FC16) - ((-1470690946 * (v493 ^ 0x5C28FC16)) & 0xA54CE530)) ^ 0x2D598D67)
       - 735345473 * (v503 ^ v502)
       + v506
       + 1;
  v513 = v512 + 1390929893 - ((2 * v512) & 0xA5CFCFCA);
  v514 = (v502 ^ 0xD2A67298) + 1800935069 * (v495 + (v511 ^ 0x71717171)) + 1800935069;
  v515 = *(_DWORD *)(v9 + 8912) ^ *(_DWORD *)(v9 + 8432);
  v516 = (v514 + 1390929893 - ((2 * v514) & 0xA5CFCFCA)) ^ v513;
  v517 = (v516 - 760843624 - ((2 * v516) & 0xA54CE530)) ^ v493;
  v518 = v517 + 610189181 - ((2 * v517) & 0x48BD7EFA);
  v519 = *(_DWORD *)(v9 + 8064) ^ *(_DWORD *)(v9 + 8964);
  v520 = *(_DWORD *)(v9 + 8032);
  v521 = (v515 + 255843827 - ((2 * v515) & 0x1E7FBBE6)) ^ v520;
  v522 = (v519 - 760843624 - ((2 * v519) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8080);
  v523 = *(_DWORD *)(v9 + 8416) ^ *(_DWORD *)(v9 + 8056) ^ *(_DWORD *)(v9 + 7984) ^ (v521
                                                                                   - 760843624
                                                                                   - ((2 * v521) & 0xA54CE530)) ^ (v522 + v479 + ~((2 * v522) & 0xA54CE530));
  v524 = ((v523 ^ 0xD2A67298) - 760843624 - 2 * ((v523 ^ 0xD2A67298) & *(_DWORD *)(v9 + 9416) ^ v523 & 4)) ^ *(_DWORD *)(v9 + 8116);
  v525 = (v524 - 760843624 - ((2 * v524) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8864);
  v526 = (v525 - 760843624 - ((2 * v525) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8000);
  v527 = *(_DWORD *)(v9 + 9152) ^ *(_DWORD *)(v9 + 9544);
  v528 = *(_DWORD *)(v9 + 8872) ^ (v527 - 760843624 - ((2 * v527) & 0xA54CE530));
  v529 = *(_DWORD *)(v9 + 8776) ^ *(_DWORD *)(v9 + 8008) ^ (v528 - 1494004419 - ((2 * v528) & 0x4DE69A7A)) ^ (v526 - 760843624 - ((2 * v526) & 0xA54CE530));
  v530 = ((v529 ^ 0x74553FA5) - 760843624 - 2 * ((v529 ^ 0x74553FA5) & *(_DWORD *)(v9 + 9240) ^ v529 & 2)) ^ *(_DWORD *)(v9 + 8576);
  v531 = (v530 - 760843624 - ((2 * v530) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8768);
  v532 = (v531 - 760843624 - ((2 * v531) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9264);
  v533 = (v532 - 760843624 - ((2 * v532) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9496);
  v534 = (v533 - 760843624 - ((2 * v533) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9148);
  v535 = (v534 - 760843624 - ((2 * v534) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9536);
  v536 = (v535 - 760843624 - ((2 * v535) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9304);
  v537 = (v536 - 760843624 - ((2 * v536) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9096);
  v538 = (v537 - 760843624 - ((2 * v537) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9664);
  v539 = *(_DWORD *)(v9 + 9280) ^ *(_DWORD *)(v9 + 9528);
  v540 = *(_DWORD *)(v9 + 8900);
  v541 = (v540 ^ *(_DWORD *)(v9 + 6872)) & *(_DWORD *)(v9 + 7176);
  v542 = *(_DWORD *)(v9 + 9328) ^ *(_DWORD *)(v9 + 9384) ^ (v539 - 760843624 - ((2 * v539) & 0xA54CE530)) ^ (v538 - 760843624 - ((2 * v538) & 0xA54CE530));
  v543 = (v542 - 760843624 - ((2 * v542) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9464);
  v544 = (v543 - 760843624 - ((2 * v543) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9648);
  v545 = (v544 - 760843624 - ((2 * v544) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9392);
  v546 = (v545 - 760843624 - ((2 * v545) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9680);
  v547 = (v546 - 760843624 - ((2 * v546) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9584);
  v548 = (v547 - 760843624 - ((2 * v547) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9288);
  v549 = (v548 - 760843624 - ((2 * v548) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9472);
  v550 = (v549 - 760843624 - ((2 * v549) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9632);
  v551 = (v550 - 760843624 - ((2 * v550) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9080);
  v552 = (v551 - 760843624 - ((2 * v551) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9688);
  v553 = (v552 - 760843624 - ((2 * v552) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9640);
  v554 = (v553 - 760843624 - ((2 * v553) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9616);
  v555 = (v554 - 760843624 - ((2 * v554) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9448);
  v556 = (v555 - 760843624 - ((2 * v555) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9320);
  v557 = *(_DWORD *)(v9 + 9312) ^ *(_DWORD *)(v9 + 9424);
  v558 = (v557 - 760843624 - ((2 * v557) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8880);
  v559 = *(_DWORD *)(v9 + 9256) ^ *(_DWORD *)(v9 + 9440) ^ (v558 - 760843624 - ((2 * v558) & 0xA54CE530)) ^ (v556 - 760843624 - ((2 * v556) & 0xA54CE530));
  v560 = (v559 - 760843624 - ((2 * v559) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9208);
  v561 = (v560 - 760843624 - ((2 * v560) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9116);
  v562 = (v561 - 760843624 - ((2 * v561) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 9104);
  v563 = (2 * v541 - 760843624 - ((4 * v541) & 0xA54CE530)) ^ v540;
  v564 = *(_DWORD *)(v9 + 6936);
  v565 = *(_QWORD *)(v9 + 8040);
  v566 = *(_QWORD *)(v9 + 9736);
  v567 = *(_QWORD *)(v9 + 7264);
  v568 = *(_QWORD *)(v9 + 7280);
  v569 = ((unint64_t)(v563 & v565) >> v566) | ((unint64_t)(v563 & v567) << v568);
  v570 = 2 * ((*(_QWORD *)(v9 + 9504) & v564) + 1386640025 - ((2 * (*(_QWORD *)(v9 + 9504) & v564)) & 0x254CE530)) - 2;
  v571 = ((v570 ^ 0xA54CE530) - 760843624 - 2 * ((v570 ^ 0xA54CE530) & *(_DWORD *)(v9 + 9656) ^ v570 & 6)) ^ *(_DWORD *)(v9 + 8744);
  v572 = *(_DWORD *)(v9 + 8132) ^ 0xF8391F54;
  v573 = (v571 & v567) << *(_QWORD *)(v9 + 8168);
  LODWORD(v567) = *(_QWORD *)(v9 + 9720) & *(_DWORD *)(v9 + 7364);
  v574 = *(_QWORD *)(v9 + 7208);
  v575 = *(_QWORD *)(v9 + 8160);
  v576 = (((v573 - 760843624 - ((2 * v573) & 0xA54CE530)) ^ 0xD2A67298)
        + ((unint64_t)(v571 & v574) >> v575)) ^ *(_DWORD *)(v9 + 8984) ^ (v569
                                                                                             - 760843624
                                                                                             - ((2 * v569) & 0xA54CE530));
  v577 = (v576 - 760843624 - ((2 * v576) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8748);
  v578 = *(_DWORD *)(v9 + 9296) ^ *(_DWORD *)(v9 + 9200) ^ (v577 - 760843624 - ((2 * v577) & 0xA54CE530)) ^ (v562 - 760843624 - ((2 * v562) & 0xA54CE530));
  v579 = (v578 - 760843624 - ((2 * v578) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8980);
  v580 = (2 * v567 - 760843624 - ((4 * v567) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8888);
  v581 = ((unint64_t)(v580 & v565) >> v566) ^ ((unint64_t)(((v580 & *(_QWORD *)(v9 + 8176))
                                                                                      - 760843624
                                                                                      - ((2
                                                                                        * (v580 & *(_QWORD *)(v9 + 8176))) & 0xA54CE530)) ^ 0xD2A67298) << v568);
  v582 = (v579 - 760843624 - ((2 * v579) & 0xA54CE530)) ^ (v581 - 760843624 - ((2 * v581) & 0xA54CE530));
  v583 = (2 * ((*(_QWORD *)(v9 + 9368) & v564) - ((2 * (*(_QWORD *)(v9 + 9368) & v564)) & 0x5FB1FEC6)) + 1605500614) ^ 0x5FB1FEC6;
  v584 = (v583 - 760843624 - ((2 * v583) & 0xA54CE530)) ^ *(_DWORD *)(v9 + 8904);
  v585 = ((unint64_t)(v584 & v574) >> v575)
       + ((unint64_t)(v584 & *(_QWORD *)(v9 + 7264)) << v568);
  v586 = (v582 - 760843624 - ((2 * v582) & 0xA54CE530)) ^ (v585 - 760843624 - ((2 * v585) & 0xA54CE530));
  v587 = *(_DWORD *)(v9 + 8136) ^ (v572 - 760843624 - ((2 * v572) & 0xA54CE530)) ^ v586 ^ v498 ^ v518;
  v586 ^= 0x1B8E2A9Du;
  v588 = ((-760843624 - 309535429 * *(_DWORD *)(v9 + 6292) - ((-619070858 * *(_DWORD *)(v9 + 6292)) & 0xA54CE530)) ^ 0xD2A67298)
       + ((-760843624 - 309535429 * v586 - ((-619070858 * v586) & 0xA54CE530)) ^ 0x2D598D67)
       + v510
       + 1;
  v589 = v588 - 760843624 - ((2 * v588) & 0xA54CE530);
  LODWORD(v567) = (v589 ^ 0xD2A67298) - ((2 * (v589 ^ 0xD2A67298) - 1461788300) & 0xA54CE530) - 1491737774;
  *(_DWORD *)(v9 + 9728) = v567;
  v590 = v520 ^ (v572 - 760843624 - 2 * (v572 & 0x52A67299 ^ *(_DWORD *)(v9 + 6360) & 1)) ^ v586 ^ v513;
  v591 = *(_DWORD *)(v9 + 6296) ^ 0xE05FF630 ^ v586 ^ v511;
  LODWORD(v575) = (v587 ^ 0x5FC03FEF) - ((2 * (v587 ^ 0x5FC03FEF) + 1345525486) & 0xA54CE530) - 88080881;
  *(_DWORD *)(v9 + 9704) = v575;
  v592 = (v590 ^ 0x8F7E488E) - 760843624 - 2 * ((v590 ^ 0x8F7E488E) & 0x52A67299 ^ v590 & 1);
  v593 = (v590 ^ 0xCAF8F964) - ((2 * (v590 ^ 0xCAF8F964) + 343287956) & 0x112AA610) - 489658542;
  *(_DWORD *)(v9 + 9720) = v593;
  v594 = v591 - ((2 * v591 - 858067492) & 0xA54CE530) - 1189877370;
  *(_DWORD *)(v9 + 9696) = v594;
  v595 = v591 ^ v593;
  v596 = *(_QWORD *)(v9 + 9672);
  v597 = *(unsigned __int8 *)(v596 + 1862 + (((v591 ^ v593) >> 16) ^ 0x3FLL));
  LOBYTE(v597) = *(_BYTE *)(*(_QWORD *)(v9 + 9520)
                          + (((((((v597 >> 3) | (32 * v597)) << 7)
                                               - 39) ^ 0xD9) & 0x80u | (((16 * (v597 >> 3) + 48) ^ ((v597 >> 3) | (32 * v597))) >> 1)) ^ 0xB5));
  v598 = ((v587 ^ 0x8F462A16) - 760843624 - ((2 * (v587 ^ 0x8F462A16)) & 0xA54CE530)) ^ v567;
  *(_QWORD *)(v9 + 9688) = v598 ^ 0xF03EEA28;
  *(_DWORD *)(v9 + 9680) = ((v598 ^ 0xF03EEA28) >> 24) - ((2 * ((v598 ^ 0xF03EEA28) >> 24)) & 0x184);
  v599 = *(_DWORD **)(v9 + 9216);
  v600 = *(_QWORD **)(v9 + 9088);
  v601 = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6760)) & 0x7FFFFFFF);
  v602 = -333269657 * (v601 ^ HIWORD(v601));
  v603 = *(_BYTE **)(v9 + 9360);
  v603[357] = ((v597 ^ 0xCE) - 40) ^ *(_BYTE *)(*(_QWORD *)(v9 + 7080) + (v602 >> 24)) ^ *(_BYTE *)(*(_QWORD *)(v9 + 7064)
                                                                                                  + (v602 >> 24)
                                                                                                  + 3) ^ *(_BYTE *)(*(_QWORD *)(v9 + 7056) + (v602 >> 24) + 3) ^ v602 ^ (-87 * BYTE3(v602)) ^ 0x16;
  LOBYTE(v597) = ((v587 ^ 0xEF) - ((2 * (v587 ^ 0xEF) - 18) & 0x30) + 15) ^ v592;
  *(_QWORD *)(v9 + 9664) = v575 ^ v592 ^ 0xAFED0401;
  v604 = *(unsigned __int8 *)(v596
                            + 1862
                            + ((((v587 ^ 0x16) - 104 - ((2 * (v587 ^ 0x16)) & 0x30)) ^ ((v589 ^ 0x98) - ((2 * (v589 ^ 0x98) + 116) & 0x30) + 82)) ^ 7));
  LODWORD(v566) = ((v575 ^ v592 ^ 0xAFED0401) >> 16)
                - ((2 * ((v575 ^ v592 ^ 0xAFED0401) >> 16)) & 0x1FF94);
  v605 = -61 * (((v604 >> 3) | (32 * v604)) ^ 0xFFFFFF88 ^ (16 * ((v604 >> 3) | (32 * v604)) + 48));
  v606 = v454;
  LOBYTE(v605) = *(_BYTE *)(v454 + (v605 ^ 0xCELL)) + (v605 ^ 0xA7) + 98;
  LOBYTE(v575) = v594 ^ v589;
  v607 = v594 ^ v589 ^ 0x1E7DE10C;
  v608 = BYTE2(v607) ^ 0x2FLL;
  v609 = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6768)) & 0x7FFFFFFF);
  v610 = -333269657 * (v609 ^ HIWORD(v609));
  v611 = *(_QWORD *)(v9 + 6928);
  v612 = *(_QWORD *)(v9 + 7168);
  v613 = *(_QWORD *)(v9 + 6920);
  v603[351] = *(_BYTE *)(v612 + (v610 >> 24)) ^ *(_BYTE *)((v610 >> 24) + v611 + 1) ^ *(_BYTE *)((v610 >> 24) + v613 + 2) ^ v610 ^ (55 * BYTE3(v610)) ^ (v608 & 0x70 | BYTE2(v607) & 0x70 ^ 0x50) ^ 0x84 ^ (((v605 & 0x80) != 0) | (2 * v605));
  LODWORD(v608) = (*(unsigned __int8 *)(v596 + 1862 + v608) >> 3) | (32 * *(unsigned __int8 *)(v596 + 1862 + v608));
  LODWORD(v602) = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6776)) & 0x7FFFFFFF);
  v614 = -333269657 * (v602 ^ WORD1(v602));
  v603[353] = v608 ^ *(_BYTE *)(v612 + (v614 >> 24)) ^ *(_BYTE *)((v614 >> 24) + v611 + 1) ^ (16 * v608 + 48) ^ *(_BYTE *)((v614 >> 24) + v613 + 2) ^ v614 ^ (55 * BYTE3(v614)) ^ 0x66;
  v615 = v595 ^ 0x6010503Du;
  LODWORD(v614) = *(unsigned __int8 *)(v596 + 1862 + ((v615 >> 24) ^ 0x2F));
  v616 = v596 + 1862;
  LODWORD(v614) = (v614 >> 3) | (32 * v614);
  LOBYTE(v614) = (*(_BYTE *)(v454 + ((-61 * (v614 ^ 0x88 ^ (16 * v614 + 48))) ^ 0xCELL))
                + ((-61 * (v614 ^ 0x88 ^ (16 * v614 + 48))) ^ 0xA7)
                + 98) ^ (((16 * v614 + 48) & 0x40 ^ 0x42) + ((16 * v614 + 48) & 0x40));
  v617 = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6784)) & 0x7FFFFFFF);
  v618 = -333269657 * (v617 ^ HIWORD(v617));
  v603[356] = *(_BYTE *)(v612 + (v618 >> 24)) ^ *(_BYTE *)((v618 >> 24) + v611 + 1) ^ *(_BYTE *)((v618 >> 24) + v613 + 2) ^ v618 ^ (55 * BYTE3(v618)) ^ (((v614 & 0x80) != 0) | (2 * v614)) ^ 0x22;
  LODWORD(v614) = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6788)) & 0x7FFFFFFF);
  v619 = -333269657 * (v614 ^ WORD1(v614));
  v620 = *(_QWORD *)(v9 + 7192);
  v621 = *(_QWORD *)(v9 + 7200);
  v622 = *(_QWORD *)(v9 + 7184);
  v623 = v596 + 2386;
  v603[363] = *(_BYTE *)(v596 + 2386 + (v597 ^ 0x54)) ^ *(_BYTE *)(v621 + (v619 >> 24)) ^ *(_BYTE *)((v619 >> 24) + v620 + 1) ^ *(_BYTE *)((v619 >> 24) + v622 + 2) ^ v619 ^ (-119 * BYTE3(v619)) ^ ((v597 ^ 1) + (v597 ^ 2)) ^ 0xC0;
  v624 = *(_QWORD *)(v9 + 9568);
  v625 = *(unsigned __int8 *)(v596
                            + 1862
                            + (((*(_BYTE *)(v624
                                                           + ((((BYTE1(v607) >> 3)
                                                                               - (((v607 >> 8) >> 2) & 8)
                                                                               + 36) ^ 0x24u | (32 * BYTE1(v607))) ^ 0xD0)) ^ (((BYTE1(v607) >> 3) - (((v607 >> 8) >> 2) & 8) + 36) ^ 0x24 | (32 * BYTE1(v607))) ^ 0xD6)
                                               + 61) ^ 0x71));
  v626 = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6800)) & 0x7FFFFFFF);
  v627 = -333269657 * (v626 ^ HIWORD(v626));
  v628 = v600;
  v603[354] = ((v625 >> 3) | (32 * v625)) ^ (16 * (v625 >> 3) + 48) ^ *(_BYTE *)(v621 + (v627 >> 24)) ^ *(_BYTE *)((v627 >> 24) + v620 + 1) ^ *(_BYTE *)((v627 >> 24) + v622 + 2) ^ v627 ^ (-119 * BYTE3(v627)) ^ 0x63;
  v629 = (((v566 + 74) ^ 0x4A) + ((v566 + 74) ^ 0x49)) ^ *(unsigned __int8 *)(v596
                                                                            + 2386
                                                                            + ((v566 + 74) ^ 0x1FLL));
  LOBYTE(v629) = ((32 * (v629 ^ 0x71) + ((v629 >> 1) << 7) - 39) ^ 0xD9) & 0xE0 | ((v629 ^ 0x71) >> 3);
  v630 = v599;
  v631 = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6812)) & 0x7FFFFFFF);
  v632 = -333269657 * (v631 ^ HIWORD(v631));
  v633 = *(_QWORD *)(v9 + 7080);
  v634 = *(_QWORD *)(v9 + 7064);
  v635 = *(_QWORD *)(v9 + 7056);
  v603[361] = *(_BYTE *)(v634 + (v632 >> 24) + 3) ^ *(_BYTE *)(v633 + (v632 >> 24)) ^ *(_BYTE *)(v635 + (v632 >> 24) + 3) ^ v632 ^ (-87 * BYTE3(v632)) ^ ((*(_BYTE *)(v624 + (v629 ^ 0xD0)) ^ v629 ^ 0xD6) + 61);
  LODWORD(v632) = *(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6816);
  *(_QWORD *)(v9 + 9736) = v616;
  v636 = *(unsigned __int8 *)(v616 + (v575 ^ 0x23));
  LODWORD(v575) = v636 >> ((v575 & 3 ^ 3) + (v575 & 3));
  v637 = -333269657 * ((-333269657 * (v632 & 0x7FFFFFFF)) ^ ((-333269657 * (v632 & 0x7FFFFFFF)) >> 16));
  v603[355] = *(_BYTE *)(v621 + (v637 >> 24)) ^ *(_BYTE *)((v637 >> 24) + v620 + 1) ^ *(_BYTE *)((v637 >> 24) + v622 + 2) ^ v637 ^ (-119 * BYTE3(v637)) ^ v575 ^ ((32 * v636) | 0xD) ^ (16 * v575 + 48);
  LOBYTE(v636) = ((v595 ^ 0x3D) + (v595 ^ 0x3E)) ^ *(_BYTE *)(v623 + (v595 ^ 0x68));
  LOBYTE(v636) = -61 * (((v636 & 0x1B ^ 0x1B) + (v636 & 0x1B)) ^ v636);
  LOBYTE(v636) = *(_BYTE *)(v606 + (v636 ^ 0xCELL)) + (v636 ^ 0xA7) + 98;
  LODWORD(v600) = -333269657 * ((*(_DWORD *)(*v600 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6824)) & 0x7FFFFFFF);
  v638 = -333269657 * (v600 ^ (v600 >> 16));
  v639 = v621;
  v640 = v622;
  v603[359] = *(_BYTE *)(v621 + (v638 >> 24)) ^ *(_BYTE *)((v638 >> 24) + v620 + 1) ^ *(_BYTE *)((v638 >> 24) + v622 + 2) ^ v638 ^ (-119 * BYTE3(v638)) ^ 0x84 ^ (((v636 & 0x80) != 0) | (2 * v636));
  v641 = *(unsigned __int8 *)(v616 + ((v607 >> 24) ^ 0x2F));
  LODWORD(v638) = -333269657 * ((*(_DWORD *)(*v628 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6828)) & 0x7FFFFFFF);
  v642 = -333269657 * (v638 ^ WORD1(v638));
  v643 = v634;
  v644 = v635;
  v603[352] = ((v641 >> 3) | (32 * v641)) ^ *(_BYTE *)(v633 + (v642 >> 24)) ^ *(_BYTE *)(v634 + (v642 >> 24) + 3) ^ (16 * ((v641 >> 3) | (32 * v641)) + 48) ^ *(_BYTE *)(v635 + (v642 >> 24) + 3) ^ v642 ^ (-87 * BYTE3(v642)) ^ 0x59;
  v645 = -333269657 * ((*(_DWORD *)(*v628 + (*v599 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6832)) & 0x7FFFFFFF);
  v646 = -333269657 * (v645 ^ HIWORD(v645));
  v647 = v633;
  v648 = *(_QWORD *)(v9 + 9664);
  v603[360] = *(_BYTE *)(v623 + ((v648 >> 24) ^ 0x55)) ^ *(_BYTE *)(v633 + (v646 >> 24)) ^ *(_BYTE *)(v634 + (v646 >> 24) + 3) ^ *(_BYTE *)(v635 + (v646 >> 24) + 3) ^ v646 ^ (-87 * BYTE3(v646)) ^ ((BYTE3(v648) ^ 3) + BYTE3(v648)) ^ 0x60;
  LODWORD(v621) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6840)) & 0x7FFFFFFF);
  v649 = -333269657 * (v621 ^ WORD1(v621));
  v603[362] = *(_BYTE *)(v623 + (BYTE1(v648) ^ 0x55)) ^ *(_BYTE *)(v633 + (v649 >> 24)) ^ *(_BYTE *)(v634 + (v649 >> 24) + 3) ^ *(_BYTE *)(v635 + (v649 >> 24) + 3) ^ ((BYTE1(v648) ^ 3) + BYTE1(v648)) ^ v649 ^ (-87 * BYTE3(v649)) ^ 0xE6;
  v650 = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ *(_QWORD *)(v9 + 7232)) & 0x7FFFFFFF);
  v651 = -333269657 * (v650 ^ HIWORD(v650));
  v603[348] = *(_BYTE *)(v623 + ((*(_DWORD *)(v9 + 9680) + 66) ^ 0x17)) ^ (((*(_DWORD *)(v9 + 9680)
                                                                                              + 66) ^ 0x42)
                                                                                            + ((*(_DWORD *)(v9 + 9680)
                                                                                              + 66) ^ 0x41)) ^ *(_BYTE *)(v639 + (v651 >> 24)) ^ *(_BYTE *)((v651 >> 24) + v620 + 1) ^ *(_BYTE *)((v651 >> 24) + v640 + 2) ^ v651 ^ (-119 * BYTE3(v651)) ^ 0x7B;
  LODWORD(v646) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6848)) & 0x7FFFFFFF);
  v652 = -333269657 * (v646 ^ WORD1(v646));
  v653 = *(_QWORD *)(v9 + 7168);
  v654 = *(_QWORD *)(v9 + 6928);
  v655 = *(_QWORD *)(v9 + 6920);
  v603[358] = ((BYTE1(v615) ^ 3) + BYTE1(v615)) ^ *(_BYTE *)(v653 + (v652 >> 24)) ^ *(_BYTE *)((v652 >> 24) + v654 + 1) ^ *(_BYTE *)((v652 >> 24) + v655 + 2) ^ v652 ^ *(_BYTE *)(v623 + (BYTE1(v615) ^ 0x55)) ^ (55 * BYTE3(v652)) ^ 0x97;
  v656 = *(_QWORD *)(v9 + 9688);
  LODWORD(v649) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6856)) & 0x7FFFFFFF);
  v657 = -333269657 * (v649 ^ WORD1(v649));
  v603[350] = ((BYTE1(v656) ^ 3) + BYTE1(v656)) ^ *(_BYTE *)(v653 + (v657 >> 24)) ^ *(_BYTE *)((v657 >> 24) + v654 + 1) ^ *(_BYTE *)((v657 >> 24) + v655 + 2) ^ v657 ^ *(_BYTE *)(v623 + (BYTE1(v656) ^ 0x55)) ^ (55 * BYTE3(v657)) ^ 0x17;
  LODWORD(v657) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ *(_DWORD *)(v9 + 6864)) & 0x7FFFFFFF);
  v658 = -333269657 * (v657 ^ WORD1(v657));
  LOBYTE(v652) = ((BYTE2(v656) ^ 3) + BYTE2(v656)) ^ *(_BYTE *)(v653 + (v658 >> 24)) ^ *(_BYTE *)((v658 >> 24) + v654 + 1) ^ *(_BYTE *)((v658 >> 24) + v655 + 2) ^ v658 ^ *(_BYTE *)(v623 + (BYTE2(v656) ^ 0x55)) ^ (55 * BYTE3(v658));
  LODWORD(v607) = *(_DWORD *)(v9 + 7152);
  HIDWORD(v659) = v607 ^ 0x9A4D5C;
  LODWORD(v659) = v607 ^ 0xD1000000;
  LODWORD(v658) = v659 >> 24;
  HIDWORD(v659) = v607 ^ 0x4D5C;
  LODWORD(v659) = v607 ^ 0xD19A0000;
  v603[349] = v652 ^ 7;
  LODWORD(v652) = v658 ^ (v659 >> 16);
  HIDWORD(v659) = v607 ^ 0x5C;
  LODWORD(v659) = v607 ^ 0xD19A4D00;
  LODWORD(v652) = ((v652 ^ (v659 >> 8)) - 778416804 - ((2 * (v652 ^ (v659 >> 8))) & 0xA3349AB8)) ^ v607 ^ *(_DWORD *)(v9 + 7272);
  LODWORD(v653) = v652 ^ 0x3193602B ^ *(_DWORD *)(v9 + 9704);
  LODWORD(v615) = *(_DWORD *)(v9 + 9728) ^ v652;
  LODWORD(v637) = *(_DWORD *)(v9 + 9720) ^ v652;
  LODWORD(v648) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9624)
                                     + (((v652 ^ 0x2B ^ *(_BYTE *)(v9 + 9704)) + 18) ^ 0x47));
  LODWORD(v654) = *(_DWORD *)(v9 + 9696) ^ v652;
  *(_DWORD *)(v9 + 9688) = v654;
  LODWORD(v648) = ((v648 >> 2) | ((_DWORD)v648 << 6)) ^ (4
                                                                     * ((v648 >> 2) | ((_DWORD)v648 << 6))) ^ (2 * ((v648 >> 2) | ((_DWORD)v648 << 6))) ^ 0xFFFFFFC8;
  *(_QWORD *)(v9 + 9720) = (v648 >> 4) | (16 * v648);
  BYTE1(v658) = BYTE1(v615) ^ 0xDB;
  v660 = *(_QWORD *)(v9 + 9600);
  LODWORD(v652) = *(_DWORD *)(*v628 + (*v630 & 0x3934A394));
  LODWORD(v648) = (195 * ((v615 ^ 0xFD5FDBF3) >> 24)) ^ *(unsigned __int8 *)(v660
                                                                                         + ((-61 * ((v615 ^ 0xFD5FDBF3) >> 24)) ^ 0x36)) ^ 0xFFFFFFC1;
  *(_QWORD *)(v9 + 9696) = (v648 >> 7) & 1 | (2 * (_DWORD)v648);
  v661 = *(_QWORD *)(v9 + 8248);
  v662 = -333269657
       * ((-333269657 * ((v652 ^ ((_DWORD)v661 + 1692535574)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                             * ((v652 ^ ((_DWORD)v661 + 1692535574)) & 0x7FFFFFFF)) >> 16));
  v663 = *(_QWORD *)(v9 + 6976);
  v664 = *(_QWORD *)(v9 + 6312);
  v665 = *(_QWORD *)(v9 + 6304);
  v603[376] = ((BYTE3(v653) ^ 3) + BYTE3(v653)) ^ *(_BYTE *)(v663 + (v662 >> 24)) ^ *(_BYTE *)((v662 >> 24) + v664 + 1) ^ *(_BYTE *)((v662 >> 24) + v665 + 4) ^ v662 ^ (121 * BYTE3(v662)) ^ *(_BYTE *)(v623 + (BYTE3(v653) ^ 0x55)) ^ 0x88;
  LODWORD(v662) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535573)) & 0x7FFFFFFF);
  v666 = -333269657 * (v662 ^ WORD1(v662));
  LOBYTE(v663) = *(_BYTE *)(v663 + (v666 >> 24)) ^ *(_BYTE *)((v666 >> 24) + v664 + 1) ^ *(_BYTE *)((v666 >> 24)
                                                                                                  + v665
                                                                                                  + 4) ^ v666 ^ (121 * BYTE3(v666));
  *(_QWORD *)(v9 + 9728) = v637 ^ 0x60049239;
  v667 = v654 ^ 0xC49296F0;
  LOBYTE(v664) = *(_BYTE *)(v623 + (v637 ^ 0x6CLL));
  *(_QWORD *)(v9 + 9704) = v667 >> 16;
  v603[375] = v663 ^ BYTE2(v667);
  LODWORD(v652) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535573)) & 0x7FFFFFFF);
  v668 = -333269657 * (v652 ^ WORD1(v652));
  v603[375] = ((v637 ^ 0x3A) + (v637 ^ 0x39)) ^ *(_BYTE *)(v647 + (v668 >> 24)) ^ *(_BYTE *)(v643 + (v668 >> 24) + 3) ^ *(_BYTE *)(v635 + (v668 >> 24) + 3) ^ v668 ^ (-87 * BYTE3(v668)) ^ 0x15 ^ v664;
  v669 = *(_QWORD *)(v9 + 9736);
  LODWORD(v668) = *(unsigned __int8 *)(v669 + (v615 ^ 0xDCLL));
  LODWORD(v637) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535565)) & 0x7FFFFFFF);
  v670 = -333269657 * (v637 ^ WORD1(v637));
  LODWORD(v635) = *(_DWORD *)(v9 + 9376);
  v603[367] = ((v668 >> 3) | (32 * v668)) ^ *(_BYTE *)(v647 + (v670 >> 24)) ^ *(_BYTE *)(v643 + (v670 >> 24) + 3) ^ (16 * ((v668 >> 3) | (32 * v668)) + 48) ^ *(_BYTE *)(v644 + (v670 >> 24) + 3) ^ v670 ^ (-87 * BYTE3(v670)) ^ 0xBB;
  LODWORD(v668) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535576)) & 0x7FFFFFFF);
  v671 = -333269657 * (v668 ^ WORD1(v668));
  v672 = *(_QWORD *)(v9 + 6920);
  v603[378] = ((BYTE1(v653) ^ 3) + BYTE1(v653)) ^ *(_BYTE *)(v647 + (v671 >> 24)) ^ *(_BYTE *)(v643 + (v671 >> 24) + 3) ^ *(_BYTE *)(v644 + (v671 >> 24) + 3) ^ v671 ^ (-87 * BYTE3(v671)) ^ 0x79 ^ *(_BYTE *)(v623 + (BYTE1(v653) ^ 0x55));
  LODWORD(v671) = *(unsigned __int8 *)(v669 + (BYTE2(v615) ^ 0x70));
  LODWORD(v671) = -61
                * (((v671 >> 3) | (32 * v671)) ^ 0x2C ^ (16 * ((v671 >> 3) | (32 * v671))
                                                                     + 48));
  LOBYTE(v671) = *(_BYTE *)(v660 + (v671 ^ 0x36)) ^ v671 ^ 0xC1;
  LODWORD(v615) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535563)) & 0x7FFFFFFF);
  v673 = -333269657 * (v615 ^ WORD1(v615));
  v674 = *(_QWORD *)(v9 + 6928);
  v603[365] = *(_BYTE *)(v643 + (v673 >> 24) + 3) ^ *(_BYTE *)(v647 + (v673 >> 24)) ^ *(_BYTE *)(v644 + (v673 >> 24) + 3) ^ v673 ^ (-87 * BYTE3(v673)) ^ (((v671 & 0x80) != 0) | (2 * v671));
  LODWORD(v671) = *(unsigned __int8 *)(v669 + (BYTE1(v658) ^ 0x2FLL));
  LODWORD(v658) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535564)) & 0x7FFFFFFF);
  v675 = -333269657 * (v658 ^ WORD1(v658));
  v676 = *(_QWORD *)(v9 + 7168);
  v603[366] = ((v671 >> 3) | (32 * v671)) ^ *(_BYTE *)(v647 + (v675 >> 24)) ^ *(_BYTE *)(v643 + (v675 >> 24) + 3) ^ (16 * ((v671 >> 3) | (32 * v671)) + 48) ^ *(_BYTE *)(v644 + (v675 >> 24) + 3) ^ v675 ^ (-87 * BYTE3(v675)) ^ 0xCF;
  LODWORD(v671) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535575)) & 0x7FFFFFFF);
  v677 = -333269657 * (v671 ^ WORD1(v671));
  v603[377] = ((BYTE2(v653) ^ 3) + BYTE2(v653)) ^ *(_BYTE *)(v647 + (v677 >> 24)) ^ *(_BYTE *)(v643 + (v677 >> 24) + 3) ^ *(_BYTE *)(v644 + (v677 >> 24) + 3) ^ v677 ^ *(_BYTE *)(v623 + (BYTE2(v653) ^ 0x55)) ^ (-87 * BYTE3(v677)) ^ 0xAE;
  LODWORD(v660) = v654 ^ 0xC49296F0;
  LODWORD(v677) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9624)
                                     + (((((((v654 ^ 0xC49296F0) >> 24) ^ 3)
                                                          + ((v654 ^ 0xC49296F0) >> 24)) ^ 0x56 ^ *(_BYTE *)(v623 + (((v654 ^ 0xC49296F0) >> 24) ^ 0x55)))
                                                        + 18) ^ 0x47));
  LODWORD(v677) = ((v677 >> 2) | ((_DWORD)v677 << 6)) ^ (4
                                                                     * ((v677 >> 2) | ((_DWORD)v677 << 6))) ^ (2 * ((v677 >> 2) | ((_DWORD)v677 << 6))) ^ 0xFFFFFFC8;
  LODWORD(v653) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535566)) & 0x7FFFFFFF);
  v678 = -333269657 * (v653 ^ WORD1(v653));
  LOBYTE(v678) = *(_BYTE *)(v643 + (v678 >> 24) + 3) ^ *(_BYTE *)(v647 + (v678 >> 24)) ^ *(_BYTE *)(v644
                                                                                                  + (v678 >> 24)
                                                                                                  + 3) ^ v678 ^ (-87 * BYTE3(v678));
  v679 = *(_QWORD *)(v9 + 9728);
  v603[368] = v678 ^ ((v677 >> 4) | (16 * v677));
  LOBYTE(v677) = (((BYTE2(v679) >> 3) | (32 * BYTE2(v679))) ^ 0xD6 ^ *(_BYTE *)(*(_QWORD *)(v9 + 9568)
                                                                              + (((BYTE2(v679) >> 3) | (32 * BYTE2(v679))) ^ 0xD0)))
               + 61;
  LODWORD(v567) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535571)) & 0x7FFFFFFF);
  v680 = -333269657 * (v567 ^ WORD1(v567));
  v681 = *(_QWORD *)(v9 + 7200);
  v682 = *(_QWORD *)(v9 + 7192);
  v683 = *(_QWORD *)(v9 + 7184);
  v603[373] = *(_BYTE *)(v623 + (v677 ^ 0x37)) ^ ((v677 ^ 0x61) + (v677 ^ 0x62)) ^ *(_BYTE *)(v681 + (v680 >> 24)) ^ *(_BYTE *)((v680 >> 24) + v682 + 1) ^ *(_BYTE *)((v680 >> 24) + v683 + 2) ^ v680 ^ (-119 * BYTE3(v680)) ^ 0x46;
  LODWORD(v677) = *(unsigned __int8 *)(v669 + (*(_DWORD *)(v9 + 9688) ^ 0xDFLL));
  LODWORD(v678) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535569)) & 0x7FFFFFFF);
  v684 = -333269657 * (v678 ^ WORD1(v678));
  v603[371] = ((v677 >> 3) | (32 * v677)) ^ *(_BYTE *)(v681 + (v684 >> 24)) ^ *(_BYTE *)((v684 >> 24) + v682 + 1) ^ (16 * ((v677 >> 3) | (32 * v677)) + 48) ^ *(_BYTE *)((v684 >> 24) + v683 + 2) ^ v684 ^ (-119 * BYTE3(v684)) ^ 0x22;
  LODWORD(v677) = ((-61 * (v679 >> 24)) ^ 0xFFFFFFA7)
                + *(unsigned __int8 *)(*(_QWORD *)(v9 + 8152) + ((-61 * BYTE3(v679)) ^ 0xCELL))
                + 98;
  v685 = *(_QWORD *)(v9 + 9696);
  LODWORD(v680) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535570)) & 0x7FFFFFFF);
  v686 = -333269657 * (v680 ^ WORD1(v680));
  v603[372] = *(_BYTE *)(v623 + ((((v677 & 0x80) != 0) | (2 * v677)) ^ 0xB3)) ^ (((((v677 & 0x80) != 0) | (2 * v677)) ^ 0xE6)
                                                                                                  + ((((v677 & 0x80) != 0) | (2 * v677)) ^ 0xE5)) ^ *(_BYTE *)(v681 + (v686 >> 24)) ^ *(_BYTE *)((v686 >> 24) + v682 + 1) ^ *(_BYTE *)((v686 >> 24) + v683 + 2) ^ v686 ^ (-119 * BYTE3(v686)) ^ 0x27;
  LODWORD(v686) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ *(_QWORD *)(v9 + 6072)) & 0x7FFFFFFF);
  v687 = -333269657 * (v686 ^ WORD1(v686));
  v688 = v682;
  v603[364] = ((v685 ^ 0xB7) + (v685 ^ 0xB4)) ^ *(_BYTE *)(v681 + (v687 >> 24)) ^ *(_BYTE *)((v687 >> 24) + v682 + 1) ^ *(_BYTE *)((v687 >> 24) + v683 + 2) ^ v687 ^ (-119 * BYTE3(v687)) ^ *(_BYTE *)(v623 + (v685 ^ 0xE2)) ^ 0xDA;
  LODWORD(v684) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535568)) & 0x7FFFFFFF);
  v689 = -333269657 * (v684 ^ WORD1(v684));
  v690 = v681;
  v603[370] = ((BYTE1(v660) ^ 3) + BYTE1(v660)) ^ *(_BYTE *)(v681 + (v689 >> 24)) ^ *(_BYTE *)((v689 >> 24) + v688 + 1) ^ *(_BYTE *)((v689 >> 24) + v683 + 2) ^ v689 ^ *(_BYTE *)(v623 + (BYTE1(v660) ^ 0x55)) ^ (-119 * BYTE3(v689)) ^ 0x34;
  LODWORD(v643) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535567)) & 0x7FFFFFFF);
  v691 = -333269657 * (v643 ^ WORD1(v643));
  v603[369] = ((*(_QWORD *)(v9 + 9704) ^ 3) + *(_QWORD *)(v9 + 9704)) ^ *(_BYTE *)(v681 + (v691 >> 24)) ^ *(_BYTE *)((v691 >> 24) + v688 + 1) ^ *(_BYTE *)((v691 >> 24) + v683 + 2) ^ v691 ^ *(_BYTE *)(v623 + (BYTE2(v660) ^ 0x55)) ^ (-119 * BYTE3(v691)) ^ 0x65;
  v692 = *(_QWORD *)(v9 + 9736);
  LODWORD(v677) = *(unsigned __int8 *)(v692 + (*(_QWORD *)(v9 + 9720) ^ 0x7CLL));
  LODWORD(v691) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535577)) & 0x7FFFFFFF);
  v693 = -333269657 * (v691 ^ WORD1(v691));
  v603[379] = ((v677 >> 3) | (32 * v677)) ^ *(_BYTE *)(v690 + (v693 >> 24)) ^ *(_BYTE *)((v693 >> 24) + v688 + 1) ^ (16 * ((v677 >> 3) | (32 * v677)) + 48) ^ *(_BYTE *)((v693 >> 24) + v683 + 2) ^ v693 ^ (-119 * BYTE3(v693)) ^ 7;
  LODWORD(v669) = *(unsigned __int8 *)(v692 + (BYTE1(*(_QWORD *)(v9 + 9728)) ^ 0x2FLL));
  LODWORD(v677) = -333269657 * ((*(_DWORD *)(*v628 + (*v630 & 0x3934A394)) ^ (v661 + 1692535572)) & 0x7FFFFFFF);
  v694 = -333269657 * (v677 ^ WORD1(v677));
  v603[374] = ((v669 >> 3) | (32 * v669)) ^ *(_BYTE *)(v676 + (v694 >> 24)) ^ *(_BYTE *)((v694 >> 24) + v674 + 1) ^ (16 * ((v669 >> 3) | (32 * v669)) + 48) ^ *(_BYTE *)((v694 >> 24) + v672 + 2) ^ v694 ^ (55 * BYTE3(v694)) ^ 0x43;
  v695 = *(_QWORD *)(v9 + 9744);
  v696 = *(_BYTE **)(v9 + 8048);
  LODWORD(v689) = -333269657
                * ((*(_DWORD *)(*v628 + (int)(**(_DWORD **)(v9 + 9216) & 0xC058E860)) ^ v696) & 0x7FFFFFFF);
  v697 = -333269657 * (v689 ^ WORD1(v689));
  v698 = (char *)*(&off_1004ECA20 + (int)v635 - 2037) - 4;
  *(_QWORD *)(v9 + 8280) = v698;
  LOBYTE(v698) = v698[v697 >> 24];
  v699 = (char *)*(&off_1004ECA20 + (int)(v635 ^ 0x8FD)) - 8;
  *(_QWORD *)(v9 + 8272) = v699;
  LOBYTE(v698) = v699[(v697 >> 24) + 1] ^ v698;
  v700 = (char *)*(&off_1004ECA20 + (int)(v635 ^ 0x8F7)) - 4;
  *(_QWORD *)(v9 + 8288) = v700;
  *v696 = v698 ^ v700[(v697 >> 24) + 5] ^ v697 ^ (127 * BYTE3(v697));
  return (*(uint64_t (**)(void))(v695 + 8 * (int)(v635 ^ 0x1F74)))();
}

uint64_t sub_10034F8A4(int *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  unsigned int v14;
  unint64_t v15;

  v14 = ((*(_DWORD *)(*v13 + (*a1 & (unint64_t)v10)) ^ (a3 + v7)) & 0x7FFFFFFF) * a2;
  v15 = (v14 ^ HIWORD(v14)) * a2;
  *(_BYTE *)(a7 + v7) ^= *(_BYTE *)(a3 + v7) ^ *(_BYTE *)(v9 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24)
                                                                                       + *(_QWORD *)(v8 + 9488)
                                                                                       + 1) ^ *(_BYTE *)((v15 >> 24) + *(_QWORD *)(v8 + 9480) + 2) ^ v15 ^ (-87 * BYTE3(v15));
  return (*(uint64_t (**)(void))(v11 + 8 * ((483 * (v7 == 15)) ^ v12)))();
}

uint64_t sub_10034F93C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, unsigned int a6, uint64_t a7, _BYTE *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  unint64_t v18;

  *(_QWORD *)(v8 + 9688) = v9;
  v16 = *(_QWORD *)(v8 + 8560);
  *(_OWORD *)(v16 + 3095) = 0u;
  *(_OWORD *)(v16 + 3111) = 0u;
  v17 = (*(_DWORD *)(*v15 + (**(_DWORD **)(v8 + 9216) & a6)) ^ ((_DWORD)a4 + 1692500574)) & (((v14 - 2215) | 0x100) ^ 0x7FFFFEBF);
  v18 = -333269657 * ((-333269657 * v17) ^ ((-333269657 * v17) >> 16));
  *a8 = *(_BYTE *)(v11 + (v18 >> 24)) ^ *a4 ^ *(_BYTE *)((v18 >> 24) + v12 + 1) ^ *(_BYTE *)((v18 >> 24) + v13 + 2) ^ v18 ^ (55 * BYTE3(v18));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v14 - 1939) ^ 0xC04)) - 4))();
}

void sub_10034FA24()
{
  JUMPOUT(0x10034F980);
}

uint64_t sub_10034FA30@<X0>(uint64_t a1@<X4>, int a2@<W5>, uint64_t a3@<X7>, _DWORD *a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  unint64_t v12;

  v10 = *(_QWORD *)(v6 + 7232) + v5;
  v11 = *(_BYTE *)(v10 - 0x615AA8BF64E1825ELL);
  LODWORD(v10) = ((*(_DWORD *)(*v9 + (*a4 & v7)) ^ v10) & 0x7FFFFFFF) * (v4 - 333269977);
  v12 = (v10 ^ WORD1(v10)) * a2;
  *(_BYTE *)(a3 + v5) = *(_BYTE *)(*(_QWORD *)(a1 + 8 * (v4 ^ 0xEF)) - 12 + (v12 >> 24)) ^ v11 ^ *(_BYTE *)((v12 >> 24) + *(_QWORD *)(a1 + 8 * (v4 + 618)) - 12 + 1) ^ *(_BYTE *)(*(_QWORD *)(a1 + 8 * (v4 + 799)) - 8 + (v12 >> 24)) ^ ((v10 ^ BYTE2(v10)) * a2) ^ (-13 * (((v10 ^ WORD1(v10)) * a2) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((4 * (v5 != 31)) | (16 * (v5 != 31))) ^ v4)) - 4))();
}

uint64_t sub_10034FB04@<X0>(_BYTE *a1@<X6>, int *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  unsigned int v10;
  unint64_t v11;

  v6[1212] = v4;
  v6[1213] = v3;
  v6[1215] = v2;
  v9 = 991 * (v5 ^ 0x788);
  v10 = -333269657 * ((a1 ^ *(_DWORD *)(*v8 + ((v9 ^ 0xFFFFFFFFC058FB3BLL) & *a2))) & (v9 ^ 0x7FFFECA4));
  v11 = -333269657 * (v10 ^ HIWORD(v10));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((58
                                          * (((*(_BYTE *)(v6[1035] + (v11 >> 24)) ^ *a1 ^ *(_BYTE *)((v11 >> 24) + v6[1034] + 1) ^ *(_BYTE *)(v6[1036] + (v11 >> 24) + ((v9 + 2147) ^ 0x1BBBu)) ^ v11 ^ (127 * BYTE3(v11))) >> 7) & 1)) ^ v9))
                            - 4))();
}

uint64_t sub_10034FC14(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unint64_t v26;
  char v27;

  v9 = v7 - 5251;
  v10 = *(unsigned __int8 **)(v8 + 8560);
  v11 = v10[3047];
  v10[3095] ^= v11;
  v12 = v10[3048];
  v10[3096] ^= v12;
  v13 = v10[3049];
  v10[3097] ^= v13;
  v14 = v10[3050];
  v10[3098] ^= v14;
  v15 = v10[3051];
  v10[3099] ^= v15;
  v16 = v10[3052];
  v10[3100] ^= v16;
  v17 = v10[3053];
  v10[3101] ^= v17;
  v18 = v10[3054];
  v10[3102] ^= v18;
  v19 = v10[3055];
  v10[3103] ^= v19;
  v20 = v10[3056];
  v10[3104] ^= v20;
  v21 = v10[3057];
  v10[3105] ^= v21;
  v22 = v10[3058];
  v10[3106] ^= v22;
  v23 = v10[3059];
  v10[3107] ^= v23;
  v24 = v10[3060];
  v10[3108] ^= v24;
  v25 = v10[3061];
  v10[3109] ^= v25;
  v10[3110] ^= a3;
  v10[3062] = __PAIR64__(v25, a3 << 24) >> 25;
  HIDWORD(v26) = v24;
  LODWORD(v26) = v25 << 24;
  v10[3061] = v26 >> 25;
  HIDWORD(v26) = v23;
  LODWORD(v26) = v24 << 24;
  LOBYTE(v24) = v26 >> 25;
  HIDWORD(v26) = v22;
  LODWORD(v26) = v23 << 24;
  v10[3060] = v24;
  v10[3059] = v26 >> 25;
  HIDWORD(v26) = v21;
  LODWORD(v26) = v22 << 24;
  v10[3058] = v26 >> 25;
  HIDWORD(v26) = v20;
  LODWORD(v26) = v21 << 24;
  LOBYTE(v23) = v26 >> 25;
  HIDWORD(v26) = v19;
  LODWORD(v26) = v20 << 24;
  v10[3057] = v23;
  v10[3056] = v26 >> 25;
  HIDWORD(v26) = v18;
  LODWORD(v26) = v19 << 24;
  v10[3055] = v26 >> 25;
  HIDWORD(v26) = v17;
  LODWORD(v26) = v18 << 24;
  LOBYTE(v19) = v26 >> 25;
  HIDWORD(v26) = v16;
  LODWORD(v26) = v17 << 24;
  v10[3054] = v19;
  v10[3053] = v26 >> 25;
  HIDWORD(v26) = v15;
  LODWORD(v26) = v16 << 24;
  v10[3052] = v26 >> 25;
  HIDWORD(v26) = v14;
  LODWORD(v26) = v15 << 24;
  LOBYTE(v19) = v26 >> 25;
  HIDWORD(v26) = v13;
  LODWORD(v26) = v14 << 24;
  v10[3051] = v19;
  v10[3050] = v26 >> 25;
  HIDWORD(v26) = v12;
  LODWORD(v26) = v13 << 24;
  v10[3049] = v26 >> 25;
  HIDWORD(v26) = v11;
  LODWORD(v26) = v12 << 24;
  v10[3048] = v26 >> 25;
  if ((a3 & 1) == ((v9 ^ 0x54) - 111))
    v27 = 0;
  else
    v27 = -31;
  v10[3047] = v27 ^ (v11 >> 1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v8 + 9744) + 8 * (((v6 != 3 * (v9 ^ 0xC54) + a5) * a6) ^ v9)))();
}

void sub_10034FE6C()
{
  JUMPOUT(0x10034FB60);
}

uint64_t sub_10034FE80()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  char v7;
  unint64_t v8;

  v6 = (char *)v4[1006];
  v7 = *v6;
  LODWORD(v6) = ((v6 ^ *(_DWORD *)(v1 + v2)) & 0x7FFFFFFF) * (1565 * ((v3 + 1106) ^ 0x269C) - 333274352);
  v8 = (v6 ^ (v6 >> 16)) * v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((63
                                          * ((((*(_BYTE *)(v4[1035] + (v8 >> 24)) ^ v7 ^ *(_BYTE *)((v8 >> 24) + v4[1034] + 1) ^ *(_BYTE *)((v8 >> 24) + v4[1036] + 5) ^ v8 ^ (127 * BYTE3(v8))) >> 7) & 1) == 0)) ^ (v3 + 1106)))
                            - 12))();
}

_QWORD *sub_10034FF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned __int8 v25;
  unint64_t v26;

  v9 = *(unsigned __int8 **)(v8 + 8560);
  v10 = (v6 - 855420896) & 0x32FCBFBE;
  v11 = v9[3076];
  v12 = v9[3075];
  v13 = v9[3074];
  v14 = v9[3073];
  v15 = v9[3072];
  v16 = v9[3071];
  v17 = v9[3070];
  v18 = v9[3069];
  v19 = v9[3068];
  v20 = v9[3067];
  v21 = v9[3066];
  v22 = v9[3065];
  v23 = v9[3064];
  v24 = v9[3063];
  HIDWORD(v26) = v9[3077];
  LODWORD(v26) = a6 << 24;
  v25 = v26 >> 25;
  HIDWORD(v26) = v11;
  LODWORD(v26) = v9[3077] << 24;
  v9[3077] = v26 >> 25;
  v9[3078] = v25;
  HIDWORD(v26) = v12;
  LODWORD(v26) = v11 << 24;
  v9[3076] = v26 >> 25;
  HIDWORD(v26) = v13;
  LODWORD(v26) = v12 << 24;
  v9[3075] = v26 >> 25;
  HIDWORD(v26) = v14;
  LODWORD(v26) = v13 << 24;
  v9[3074] = v26 >> 25;
  HIDWORD(v26) = v15;
  LODWORD(v26) = v14 << 24;
  v9[3073] = v26 >> 25;
  HIDWORD(v26) = v16;
  LODWORD(v26) = v15 << 24;
  v9[3072] = v26 >> 25;
  HIDWORD(v26) = v17;
  LODWORD(v26) = v16 << 24;
  v9[3071] = v26 >> 25;
  HIDWORD(v26) = v18;
  LODWORD(v26) = v17 << 24;
  v9[3070] = v26 >> 25;
  HIDWORD(v26) = v19;
  LODWORD(v26) = v18 << 24;
  v9[3069] = v26 >> 25;
  HIDWORD(v26) = v20;
  LODWORD(v26) = v19 << 24;
  v9[3068] = v26 >> 25;
  HIDWORD(v26) = v21;
  LODWORD(v26) = v20 << 24;
  v9[3067] = v26 >> 25;
  HIDWORD(v26) = v22;
  LODWORD(v26) = v21 << 24;
  v9[3066] = v26 >> 25;
  HIDWORD(v26) = v23;
  LODWORD(v26) = v22 << 24;
  v9[3065] = v26 >> 25;
  HIDWORD(v26) = v24;
  LODWORD(v26) = v23 << 24;
  v9[3064] = v26 >> 25;
  v9[3063] = (a6 << 31 >> 31) & 0xE1 ^ (v24 >> 1);
  return ((_QWORD *(*)(_UNKNOWN **__return_ptr))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                                                      + 8 * (v10 ^ (123 * (v7 != 127))))
                                                          - (((v10 - 709784375) & 0x2A4E779Fu)
                                                           - 1733)
                                                          + 8146))(&off_1004ECA20);
}

void sub_1003501D0()
{
  JUMPOUT(0x10034FE98);
}

uint64_t sub_1003501D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _DWORD *v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;

  v10 = -333269657 * ((*(_DWORD *)(*v5 + (int)(*v6 & 0xC058E860)) ^ (a5 + a3)) & 0x7FFFFFFF);
  v11 = -333269657 * (v10 ^ HIWORD(v10));
  *(_BYTE *)(a5 + a3) = *(_BYTE *)(v8[1035] + (v11 >> 24)) ^ *(_BYTE *)(v8[656] + a3) ^ *(_BYTE *)((v11 >> 24)
                                                                                                 + v8[1034]
                                                                                                 + 1) ^ *(_BYTE *)((v11 >> 24) + v8[1036] + 5) ^ v11 ^ (127 * BYTE3(v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((15852 * (a3 != 15)) ^ v7)) - 8))();
}

uint64_t sub_100350284@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(a1 + v2) ^= *(_BYTE *)(*(_QWORD *)(a2 + 8 * (v3 - 7829)) + v2 - 12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((56 * (v2 == 15)) ^ v3)) - 8))();
}

uint64_t sub_1003502C8()
{
  _QWORD *v0;
  unsigned int *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  unint64_t v9;

  v5 = (359 * (v2 ^ 0x1FDFu) - 217) | 0xC5;
  v6 = *(_QWORD *)(v3 + 5320);
  *(_OWORD *)(v6 + 1144) = 0u;
  *(_OWORD *)(v6 + 1160) = 0u;
  v7 = *(_BYTE **)(v3 + 5936);
  v8 = (((_DWORD)v7 + 1692500574) ^ *(_DWORD *)(*v0 + (*v1 & (v5 ^ 0x3934A57B)))) & 0x7FFFFFFF;
  v9 = -333269657 * ((-333269657 * v8) ^ ((-333269657 * v8) >> 16));
  **(_BYTE **)(v3 + 2456) = *(_BYTE *)(*(_QWORD *)(v3 + 9720) + (v9 >> 24)) ^ *v7 ^ *(_BYTE *)((v9 >> 24)
                                                                                             + *(_QWORD *)(v3 + 9704)
                                                                                             + 1) ^ *(_BYTE *)(*(_QWORD *)(v3 + 9696) + (v9 >> 24)) ^ v9 ^ (-13 * BYTE3(v9));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (int)(v5 ^ 0x1EC)))(1692500574, 4294967283);
}

void sub_1003503B8()
{
  JUMPOUT(0x10035033CLL);
}

uint64_t sub_1003503C0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;

  v11 = *(_QWORD *)(v7 + 7232) + v6;
  v12 = *(_BYTE *)(v11 - 0x615AA8BF64E1825ELL);
  LODWORD(v11) = ((v11 ^ *(_DWORD *)(v9 + v5)) & 0x7FFFFFFF) * a1;
  v13 = (v11 ^ WORD1(v11)) * (((v4 + 436) | 0x10) - 333271884);
  *(_BYTE *)(v2 + v6) = *(_BYTE *)(v1 + (v13 >> 24)) ^ v12 ^ *(_BYTE *)((v13 >> 24) + v3 + 1) ^ *(_BYTE *)(v8 + (v13 >> 24)) ^ v13 ^ (-13 * BYTE3(v13));
  return (*(uint64_t (**)(void))(v10 + 8 * ((5667 * (v6 == 31)) ^ v4)))();
}

uint64_t sub_100350460()
{
  int v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unint64_t v15;

  v2[1217] = v3;
  v4 = (v1 - 2178) | 0x1108;
  v5 = v2[1031];
  v2[1216] = v5 + 6755;
  v6 = v5 + 6744;
  v7 = v5 + 6745;
  v8 = v5 + 6746;
  v9 = v5 + 6747;
  v10 = v5 + 6748;
  v11 = v5 + 6749;
  v12 = v5 + 6750;
  v13 = v5 + 6751;
  v14 = (_BYTE *)v2[1006];
  LODWORD(v5) = -333269657 * ((v14 ^ *(_DWORD *)(v2[1217] + ((v4 - 1067919577) & v0))) & 0x7FFFFFFF);
  v15 = -333269657 * (v5 ^ WORD1(v5));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2[1218] + 8 * ((13685 * (((*(_BYTE *)(v2[1035] + (v15 >> 24)) ^ *v14 ^ *(_BYTE *)(v2[1034] + (v15 >> 24) + ((v4 + 1398480070) & 0xACA4DAB3 ^ 0x8B2)) ^ *(_BYTE *)((v15 >> 24) + v2[1036] + 5) ^ v15 ^ (127 * BYTE3(v15))) >> 7) & 1)) ^ v4)) - 12))(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1003505D4(_BYTE *a1, _BYTE *a2, _BYTE *a3, _BYTE *a4, _BYTE *a5, _BYTE *a6, _BYTE *a7, _BYTE *a8)
{
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _QWORD *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  int v16;
  int v17;
  char v18;
  int v19;
  _BYTE *v20;
  _BYTE *v21;
  int v22;
  int v23;
  int v24;
  unint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;

  v19 = 131 * (v17 ^ 0x1128);
  v20 = (_BYTE *)v12[665];
  v20[1144] ^= v18;
  v20[1145] ^= *v9;
  v20[1146] ^= *v10;
  v20[1147] ^= *v11;
  v20[1148] ^= *a1;
  v20[1149] ^= *a2;
  v20[1150] ^= *a3;
  v20[1151] ^= *a4;
  v20[1152] ^= *a5;
  v20[1153] ^= *a6;
  v20[1154] ^= *a7;
  v20[1155] ^= *a8;
  v20[1156] ^= *v13;
  v20[1157] ^= *v14;
  v20[1158] ^= *v15;
  v21 = (_BYTE *)v12[1216];
  v20[1159] ^= *v21;
  v22 = *v8;
  v23 = *v21;
  v24 = *v15;
  HIDWORD(v25) = v24;
  LODWORD(v25) = v23 << 24;
  *v21 = v25 >> 25;
  v26 = *v14;
  HIDWORD(v25) = v26;
  LODWORD(v25) = v24 << 24;
  *v15 = v25 >> 25;
  HIDWORD(v25) = *v13;
  LODWORD(v25) = v26 << 24;
  LOBYTE(v26) = v25 >> 25;
  LODWORD(v20) = *a8;
  HIDWORD(v25) = (_DWORD)v20;
  LODWORD(v25) = *v13 << 24;
  *v14 = v26;
  *v13 = v25 >> 25;
  v27 = *a7;
  HIDWORD(v25) = v27;
  LODWORD(v25) = (_DWORD)v20 << 24;
  *a8 = v25 >> 25;
  v28 = *a6;
  HIDWORD(v25) = v28;
  LODWORD(v25) = v27 << 24;
  *a7 = v25 >> 25;
  v29 = *a5;
  HIDWORD(v25) = v29;
  LODWORD(v25) = v28 << 24;
  *a6 = v25 >> 25;
  v30 = *a4;
  HIDWORD(v25) = v30;
  LODWORD(v25) = v29 << 24;
  *a5 = v25 >> 25;
  HIDWORD(v25) = *a3;
  LODWORD(v25) = v30 << 24;
  LOBYTE(v30) = v25 >> 25;
  LODWORD(v20) = *a2;
  HIDWORD(v25) = (_DWORD)v20;
  LODWORD(v25) = *a3 << 24;
  *a4 = v30;
  *a3 = v25 >> 25;
  v31 = *a1;
  HIDWORD(v25) = v31;
  LODWORD(v25) = (_DWORD)v20 << 24;
  *a2 = v25 >> 25;
  v32 = *v11;
  HIDWORD(v25) = v32;
  LODWORD(v25) = v31 << 24;
  *a1 = v25 >> 25;
  v33 = *v10;
  HIDWORD(v25) = v33;
  LODWORD(v25) = v32 << 24;
  *v11 = v25 >> 25;
  v34 = *v9;
  HIDWORD(v25) = v34;
  LODWORD(v25) = v33 << 24;
  *v10 = v25 >> 25;
  HIDWORD(v25) = v22;
  LODWORD(v25) = v34 << 24;
  *v9 = v25 >> 25;
  *v8 = (v23 << 31 >> 31) & 0xE1 ^ (v22 >> ((v19 - 122) ^ 0x38));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12[1218] + 8 * ((4393 * (v16 == ((v19 + 4401) ^ 0x1964))) ^ v19)) - 4))();
}

void sub_10035083C()
{
  JUMPOUT(0x10035050CLL);
}

uint64_t sub_100350844()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  unint64_t v14;

  v3 = v1[1031];
  v1[1216] = v3 + 6756;
  v4 = v3 + 6758;
  v5 = v3 + 6759;
  v6 = v3 + 6760;
  v7 = v3 + 6761;
  v8 = v3 + 6762;
  v9 = v3 + 6763;
  v10 = v3 + 6764;
  v11 = v3 + 6765;
  v12 = (char *)v1[1006];
  v13 = *v12;
  LODWORD(v12) = ((v12 ^ *(_DWORD *)(v1[1217] + v0)) & (((v2 + 329155971) & 0xEC617EFF) + 2147475864))
               * (((v2 + 1140) ^ 0x7BC) - 333276285);
  v14 = -333269657 * (v12 ^ (v12 >> 16));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1[1218] + 8 * ((63 * ((((*(_BYTE *)(v1[1035] + (v14 >> 24)) ^ v13 ^ *(_BYTE *)((v14 >> 24) + v1[1034] + 1) ^ *(_BYTE *)((v14 >> 24) + v1[1036] + 5) ^ v14 ^ (127 * BYTE3(v14))) >> 7) & 1) == 0)) ^ (v2 + 1140))) - 4))(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1003509C0(_BYTE *a1, _BYTE *a2, _BYTE *a3, _BYTE *a4, _BYTE *a5, _BYTE *a6, _BYTE *a7, _BYTE *a8)
{
  int v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  int v17;
  int v18;
  _BYTE *v19;
  int v20;
  int v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  char v34;

  v19 = *(_BYTE **)(v11 + 9728);
  v20 = *v9;
  v21 = *v16;
  HIDWORD(v22) = v21;
  LODWORD(v22) = v20 << 24;
  *v9 = v22 >> 25;
  v23 = *v15;
  HIDWORD(v22) = v23;
  LODWORD(v22) = v21 << 24;
  *v16 = v22 >> 25;
  v24 = *v14;
  HIDWORD(v22) = v24;
  LODWORD(v22) = v23 << 24;
  *v15 = v22 >> 25;
  v25 = *v13;
  HIDWORD(v22) = v25;
  LODWORD(v22) = v24 << 24;
  *v14 = v22 >> 25;
  v26 = *v12;
  HIDWORD(v22) = v26;
  LODWORD(v22) = v25 << 24;
  *v13 = v22 >> 25;
  HIDWORD(v22) = *a8;
  LODWORD(v22) = v26 << 24;
  LOBYTE(v26) = v22 >> 25;
  v27 = *a7;
  HIDWORD(v22) = v27;
  LODWORD(v22) = *a8 << 24;
  *v12 = v26;
  *a8 = v22 >> 25;
  v28 = *a6;
  HIDWORD(v22) = v28;
  LODWORD(v22) = v27 << 24;
  *a7 = v22 >> 25;
  v29 = *a5;
  HIDWORD(v22) = v29;
  LODWORD(v22) = v28 << 24;
  *a6 = v22 >> 25;
  v30 = *a4;
  HIDWORD(v22) = v30;
  LODWORD(v22) = v29 << 24;
  *a5 = v22 >> 25;
  v31 = *a3;
  HIDWORD(v22) = v31;
  LODWORD(v22) = v30 << 24;
  *a4 = v22 >> 25;
  v32 = *a2;
  HIDWORD(v22) = v32;
  LODWORD(v22) = v31 << 24;
  *a3 = v22 >> 25;
  HIDWORD(v22) = *a1;
  LODWORD(v22) = v32 << 24;
  LOBYTE(v32) = v22 >> 25;
  v33 = *v10;
  HIDWORD(v22) = v33;
  LODWORD(v22) = *a1 << 24;
  *a2 = v32;
  *a1 = v22 >> 25;
  HIDWORD(v22) = v17;
  LODWORD(v22) = v33 << 24;
  *v10 = v22 >> 25;
  if (((((_BYTE)v18 - 101) & 0xD8 ^ 0x59) & v20) == (v18 ^ 0xE4))
    v34 = 0;
  else
    v34 = -31;
  *v19 = v34 ^ ((v17 & 0xFE) >> 1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v11 + 9744) + 8 * (v18 ^ (16373 * (v8 == 127)))))();
}

uint64_t sub_100350C40()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE *v3;
  unsigned int v4;
  unint64_t v5;

  v3 = (_BYTE *)(*(_QWORD *)(v0 + 8048) + v1);
  v4 = -333269657
     * ((*(_DWORD *)(**(_QWORD **)(v0 + 9088) + (int)(**(_DWORD **)(v0 + 9216) & 0xC058E860)) ^ v3) & 0x7FFFFFFF);
  v5 = (v4 ^ HIWORD(v4)) * (((v2 + 70048289) | 0x81101016) + 1726326096);
  *v3 = *(_BYTE *)(*(_QWORD *)(v0 + 8280) + (v5 >> 24)) ^ *(_BYTE *)(*(_QWORD *)(v0 + 5256) + v1) ^ *(_BYTE *)((v5 >> 24) + *(_QWORD *)(v0 + 8272) + 1) ^ *(_BYTE *)((v5 >> 24) + *(_QWORD *)(v0 + 8288) + 5) ^ v5 ^ (127 * BYTE3(v5));
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 9744) + 8 * ((1009 * (v1 != 15)) ^ v2)))();
}

uint64_t sub_100350D1C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;

  v2 = *(_QWORD *)(v1 + 5208) + 3756;
  v3 = (v0 - 118) ^ 0xB9;
  v4 = *(_QWORD *)(v1 + 9744);
  v5 = -333269657
     * ((*(_DWORD *)(**(_QWORD **)(v1 + 9088) + (int)(**(_DWORD **)(v1 + 9216) & 0xC058E860)) ^ v2) & 0x7FFFFFFF);
  v6 = -333269657 * (v5 ^ HIWORD(v5));
  *(_BYTE *)v2 = *(_BYTE *)((v6 >> v3) + *(_QWORD *)(v1 + 8272) + 1) ^ *(_BYTE *)(*(_QWORD *)(v1 + 8280) + (v6 >> v3)) ^ *(_BYTE *)((v6 >> v3) + *(_QWORD *)(v1 + 8288) + 5) ^ v6 ^ (127 * (v6 >> v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v0 + 2059597723)) - 12))();
}

uint64_t sub_100350E1C(uint64_t a1, uint64_t a2, _QWORD *a3, int *a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;

  v14 = v7 - 9940 + ((v6 + 106780228) & 0xF9A2BEFE);
  v15 = ((*(_DWORD *)(*a3 + (*a4 & v10)) ^ (a6 + v14)) & 0x7FFFFFFF) * v12;
  v16 = (v15 ^ HIWORD(v15)) * v12;
  *(_BYTE *)(v13 + v14) ^= *(_BYTE *)(a6 + v14) ^ *(_BYTE *)(v9 + (v16 >> 24)) ^ *(_BYTE *)((v16 >> 24)
                                                                                          + *(_QWORD *)(v8 + 9488)
                                                                                          + 1) ^ *(_BYTE *)((v16 >> 24) + *(_QWORD *)(v8 + 9480) + 2) ^ v16 ^ (-87 * BYTE3(v16));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((28 * (v7 != 15)) ^ v6)) - 12))();
}

uint64_t sub_100350ED8(uint64_t a1, uint64_t a2, _QWORD *a3, _DWORD *a4, _BYTE *a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;

  v10 = *(_QWORD *)(v6 + 8248);
  *(_OWORD *)(v10 + 1408) = 0u;
  *(_OWORD *)(v10 + 1424) = 0u;
  v11 = ((((_DWORD)a5 + 1692500574) ^ *(_DWORD *)(*a3 + (*a4 & (((4 * v5) ^ 0xBD20u) + 959741156)))) & 0x7FFFFFFF) * v8;
  v12 = (v11 ^ HIWORD(v11)) * v8;
  **(_BYTE **)(v6 + 2464) = *(_BYTE *)(*(_QWORD *)(v6 + 9720) + (v12 >> 24)) ^ *a5 ^ *(_BYTE *)((v12 >> 24)
                                                                                              + *(_QWORD *)(v6 + 9704)
                                                                                              + 1) ^ *(_BYTE *)(v9 + (v12 >> 24)) ^ v12 ^ (-13 * BYTE3(v12));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * ((4 * v5) ^ 0xBD74)) - 4))(4294967283);
}

uint64_t sub_100350FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unint64_t v14;

  v13 = (((a7 + v10) ^ *(_DWORD *)(v7 + v9)) & 0x7FFFFFFF) * ((2 * v8) ^ 0xEC22F807);
  v14 = (v13 ^ HIWORD(v13)) * v12;
  *(_BYTE *)(a6 + v10) = *((_BYTE *)*(&off_1004ECA20 + (v8 ^ 0x2545)) + (v14 >> 24) - 4) ^ *(_BYTE *)(a7 + v10 - 0x615AA8BF64E1825ELL) ^ *((_BYTE *)*(&off_1004ECA20 + v8 - 9642) + (v14 >> 24) + 1) ^ *((_BYTE *)*(&off_1004ECA20 + v8 - 9592) + (v14 >> 24) - 4) ^ v14 ^ (-79 * BYTE3(v14));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((379 * (v10 == 31)) ^ v8)) - 4))();
}

uint64_t sub_100351078@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unint64_t v13;

  *(_QWORD *)(v6 + 7104) = a1;
  *(_QWORD *)(v6 + 6968) = v7;
  *(_QWORD *)(v6 + 6976) = a2;
  *(_QWORD *)(v6 + 6928) = a3;
  *(_DWORD *)(v6 + 9736) = 0;
  *(_DWORD *)(v6 + 9728) = 0;
  *(_DWORD *)(v6 + 9720) = 0;
  *(_DWORD *)(v6 + 9704) = 0;
  *(_DWORD *)(v6 + 9696) = 0;
  *(_DWORD *)(v6 + 9688) = 0;
  *(_DWORD *)(v6 + 9680) = 0;
  *(_DWORD *)(v6 + 9672) = 0;
  *(_DWORD *)(v6 + 9664) = 0;
  *(_DWORD *)(v6 + 9656) = 0;
  *(_DWORD *)(v6 + 9648) = 0;
  v11 = (2 * v4) ^ 0x16F6;
  *(_QWORD *)(v6 + 9640) = (v11 - 1067924410) & a4;
  *(_QWORD *)(v6 + 9632) = v5;
  v12 = (((v10 + 16) ^ *(_DWORD *)(v5 + *(_QWORD *)(v6 + 9640))) & 0x7FFFFFFF) * v9;
  v13 = (v12 ^ HIWORD(v12)) * (((v11 - 9170) | 0x2581) ^ 0xEC2290AE);
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v8
                                                             + 8
                                                             * ((93
                                                               * ((((*(_BYTE *)(*(_QWORD *)(v6 + 8280)
                                                                                               + (v13 >> 24)) ^ *(_BYTE *)(v10 + 16) ^ *(_BYTE *)((v13 >> 24) + *(_QWORD *)(v6 + 8272) + 1) ^ *(_BYTE *)((v13 >> 24) + *(_QWORD *)(v6 + 8288) + 5) ^ v13 ^ (127 * BYTE3(v13))) >> 7) & 1) == 0)) ^ v11))
                                                 - 8))(0, 0);
}

uint64_t sub_1003511BC()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned __int8 *v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unint64_t v21;
  char v22;

  v4 = v0 - 3155;
  v5 = *(unsigned __int8 **)(v1 + 8248);
  v6 = v5[1886];
  v7 = v5[1885];
  v8 = v5[1884];
  v9 = v5[1883];
  v10 = v5[1882];
  v11 = v5[1881];
  v12 = v5[1880];
  v13 = v5[1879];
  v14 = v5[1878];
  v15 = v5[1877];
  v16 = v5[1876];
  v17 = v5[1875];
  v18 = v5[1874];
  v19 = v5[1873];
  v20 = v5[1872];
  v5[1887] = __PAIR64__(v6, v3 << 24) >> 25;
  HIDWORD(v21) = v7;
  LODWORD(v21) = v6 << 24;
  v5[1886] = v21 >> 25;
  HIDWORD(v21) = v8;
  LODWORD(v21) = v7 << 24;
  LOBYTE(v7) = v21 >> 25;
  HIDWORD(v21) = v9;
  LODWORD(v21) = v8 << 24;
  v5[1885] = v7;
  v5[1884] = v21 >> 25;
  HIDWORD(v21) = v10;
  LODWORD(v21) = v9 << 24;
  v5[1883] = v21 >> 25;
  HIDWORD(v21) = v11;
  LODWORD(v21) = v10 << 24;
  LOBYTE(v10) = v21 >> 25;
  HIDWORD(v21) = v12;
  LODWORD(v21) = v11 << 24;
  v5[1882] = v10;
  v5[1881] = v21 >> 25;
  HIDWORD(v21) = v13;
  LODWORD(v21) = v12 << 24;
  v5[1880] = v21 >> 25;
  HIDWORD(v21) = v14;
  LODWORD(v21) = v13 << 24;
  LOBYTE(v13) = v21 >> 25;
  HIDWORD(v21) = v15;
  LODWORD(v21) = v14 << 24;
  v5[1879] = v13;
  v5[1878] = v21 >> 25;
  HIDWORD(v21) = v16;
  LODWORD(v21) = v15 << 24;
  v5[1877] = v21 >> 25;
  HIDWORD(v21) = v17;
  LODWORD(v21) = v16 << 24;
  LOBYTE(v13) = v21 >> 25;
  HIDWORD(v21) = v18;
  LODWORD(v21) = v17 << 24;
  v5[1876] = v13;
  v5[1875] = v21 >> 25;
  HIDWORD(v21) = v19;
  LODWORD(v21) = v18 << 24;
  v5[1874] = v21 >> 25;
  HIDWORD(v21) = v20;
  LODWORD(v21) = v19 << 24;
  v5[1873] = v21 >> 25;
  if ((v3 & 1) == (((v4 ^ 0x74) + 120) ^ 0x7A))
    v22 = 0;
  else
    v22 = -31;
  v5[1872] = v22 ^ (v20 >> ((13 * (v4 ^ 0x74)) ^ 0x1B));
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744) + 8 * (v4 ^ (12384 * (v2 == 127)))))();
}

void sub_100351464()
{
  JUMPOUT(0x1003510F8);
}

uint64_t sub_100351494(uint64_t a1, int a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;

  v4 = v2[1006];
  v5 = *(_BYTE *)(v4 + 16);
  LODWORD(v4) = -333269657
              * (((v4 + 16) ^ *(_DWORD *)(v2[1204] + v2[1205])) & (((2 * (a2 ^ 0x27A5)) ^ 0x5320) + 2147478881));
  v6 = -333269657 * (v4 ^ WORD1(v4));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3
                                                     + 8
                                                     * ((60
                                                       * ((((*(_BYTE *)(v2[1035] + (v6 >> 24)) ^ v5 ^ *(_BYTE *)((v6 >> 24) + v2[1034] + 1) ^ *(_BYTE *)((v6 >> 24) + v2[1036] + 5) ^ v6 ^ (127 * BYTE3(v6))) >> 7) & 1) == 0)) ^ a2 ^ 0x27A5))
                                         - 8))(*(unsigned __int8 *)(v2[1031] + 1903));
}

uint64_t sub_10035157C(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unint64_t v21;
  char v22;

  v4 = *(unsigned __int8 **)(v2 + 8248);
  v5 = v4[1902];
  v6 = (v1 + 233893084) & 0xF20F07FF;
  v7 = v4[1901];
  v8 = v4[1900];
  v9 = v4[1899];
  v10 = v4[1898];
  v11 = v4[1897];
  v12 = v4[1896];
  v13 = v4[1895];
  v14 = v4[1894];
  v15 = v4[1893];
  v16 = v4[1892];
  v17 = v4[1891];
  v18 = v4[1890];
  v19 = v4[1889];
  v20 = v4[1888];
  HIDWORD(v21) = v7;
  LODWORD(v21) = v5 << 24;
  v4[1902] = v21 >> 25;
  v4[1903] = __PAIR64__(v5, a1 << 24) >> 25;
  HIDWORD(v21) = v8;
  LODWORD(v21) = v7 << 24;
  v4[1901] = v21 >> 25;
  HIDWORD(v21) = v9;
  LODWORD(v21) = v8 << 24;
  v4[1900] = v21 >> 25;
  HIDWORD(v21) = v10;
  LODWORD(v21) = v9 << 24;
  v4[1899] = v21 >> 25;
  HIDWORD(v21) = v11;
  LODWORD(v21) = v10 << 24;
  v4[1898] = v21 >> 25;
  HIDWORD(v21) = v12;
  LODWORD(v21) = v11 << 24;
  v4[1897] = v21 >> 25;
  HIDWORD(v21) = v13;
  LODWORD(v21) = v12 << 24;
  v4[1896] = v21 >> 25;
  HIDWORD(v21) = v14;
  LODWORD(v21) = v13 << 24;
  v4[1895] = v21 >> 25;
  HIDWORD(v21) = v15;
  LODWORD(v21) = v14 << 24;
  v4[1894] = v21 >> 25;
  HIDWORD(v21) = v16;
  LODWORD(v21) = v15 << 24;
  v4[1893] = v21 >> 25;
  HIDWORD(v21) = v17;
  LODWORD(v21) = v16 << 24;
  v4[1892] = v21 >> 25;
  HIDWORD(v21) = v18;
  LODWORD(v21) = v17 << 24;
  v4[1891] = v21 >> 25;
  HIDWORD(v21) = v19;
  LODWORD(v21) = v18 << 24;
  v4[1890] = v21 >> 25;
  HIDWORD(v21) = v20;
  LODWORD(v21) = v19 << 24;
  v4[1889] = v21 >> 25;
  if ((a1 & 1) == (((v6 + 6346) ^ 0xFFFFFFDF) & 0x64))
    v22 = 0;
  else
    v22 = -31;
  v4[1888] = v22 ^ (v20 >> 1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (int)((209 * (v3 + 1 == ((v6 + 49) ^ 0x72B))) ^ v6)))();
}

void sub_100351818()
{
  JUMPOUT(0x1003514CCLL);
}

uint64_t sub_100351830()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;

  v7 = ((*(_DWORD *)(*v4 + (int)(*v5 & 0xC058E860)) ^ (v2 + v6 + 16)) & 0x7FFFFFFF)
     * (((v0 + 4280) | 0x18C) - 333276296);
  v8 = -333269657 * (v7 ^ HIWORD(v7));
  *(_BYTE *)(v2 + v6 + 16) = *(_BYTE *)(v1[1035] + (v8 >> 24)) ^ *(_BYTE *)(v1[658] + v2) ^ *(_BYTE *)((v8 >> 24) + v1[1034] + 1) ^ *(_BYTE *)((v8 >> 24) + v1[1036] + 5) ^ v8 ^ (127 * BYTE3(v8));
  return (*(uint64_t (**)(void))(v3 + 8 * ((12202 * (v2 == 15)) ^ v0)))();
}

uint64_t sub_1003518F8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _DWORD *v4;
  _OWORD *v5;
  _BYTE *v6;
  unsigned int v7;
  unint64_t v8;

  v5 = *(_OWORD **)(v1 + 8560);
  *v5 = 0u;
  v5[1] = 0u;
  v6 = *(_BYTE **)(v1 + 5936);
  v7 = -333269657 * ((*(_DWORD *)(*v3 + (*v4 & 0x3934A394)) ^ ((_DWORD)v6 + 1692500574)) & 0x7FFFFFFF);
  v8 = -333269657 * (v7 ^ HIWORD(v7));
  **(_BYTE **)(v1 + 2472) = *(_BYTE *)(*(_QWORD *)(v1 + 6976) + (v8 >> 24)) ^ *v6 ^ *(_BYTE *)((v8 >> 24)
                                                                                             + *(_QWORD *)(v1 + 6968)
                                                                                             + 1) ^ *(_BYTE *)(*(_QWORD *)(v1 + 7104) + (v8 >> 24)) ^ v8 ^ (-79 * BYTE3(v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a1 - 377806704) & 0x1684CC4E | 0x11A1u)) - 4))();
}

uint64_t sub_1003519E4@<X0>(int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X4>, unsigned int a4@<W5>, uint64_t a5@<X6>, uint64_t a6@<X7>, unsigned int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _DWORD *v11;
  unsigned int v12;
  unint64_t v13;

  v12 = ((*(_DWORD *)(*v10 + (*v11 & a4)) ^ (a3 + v7)) & 0x7FFFFFFF) * a1;
  v13 = (v12 ^ HIWORD(v12)) * a1;
  *(_BYTE *)(a2 + v7) = *(_BYTE *)(a5 + (v13 >> 24)) ^ *(_BYTE *)(a3 + v7 - 0x615AA8BF64E1825ELL) ^ *(_BYTE *)((v13 >> 24) + a6 + 1) ^ *(_BYTE *)(v8 + (v13 >> 24)) ^ v13 ^ ((((v12 ^ HIWORD(v12)) * a1) >> 24) * ((a7 - 72) ^ 0xB7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((57 * (v7 == 31)) ^ a7)) - 4))();
}

uint64_t sub_100351A80(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int *v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  unint64_t v10;

  *(_DWORD *)(v2 + 9736) = 0;
  *(_DWORD *)(v2 + 9728) = 0;
  *(_DWORD *)(v2 + 9720) = 0;
  *(_DWORD *)(v2 + 9704) = 0;
  *(_DWORD *)(v2 + 9696) = 0;
  *(_DWORD *)(v2 + 9688) = 0;
  *(_DWORD *)(v2 + 9680) = 0;
  *(_DWORD *)(v2 + 9672) = 0;
  *(_DWORD *)(v2 + 9664) = 0;
  *(_DWORD *)(v2 + 9656) = 0;
  v7 = v1 + 7621;
  v8 = *v5;
  *(_QWORD *)(v2 + 9648) = *v4;
  *(_QWORD *)(v2 + 9640) = (int)(((v1 + 7621) ^ 0xC058CEAB) & v8);
  v9 = -333269657 * (((v6 + 16) ^ *(_DWORD *)(*(_QWORD *)(v2 + 9648) + *(_QWORD *)(v2 + 9640))) & 0x7FFFFFFF);
  v10 = (v9 ^ HIWORD(v9)) * (v7 ^ 0xEC2293AC);
  LODWORD(v10) = (*(_BYTE *)(*(_QWORD *)(v2 + 8280) + (v10 >> 24)) ^ *(_BYTE *)(v6 + 16) ^ *(_BYTE *)((v10 >> 24) + *(_QWORD *)(v2 + 8272) + 1) ^ *(_BYTE *)((v10 >> 24) + *(_QWORD *)(v2 + 8288) + 5) ^ v10 ^ (127 * BYTE3(v10))) >> 7;
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v3
                                                                                            + 8
                                                                                            * (int)((4 * (v10 & 1)) & 0xEF | (16 * (v10 & 1)) | v7)))(a1, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_100351BAC@<X0>(char a1@<W1>, char a2@<W2>, char a3@<W3>, char a4@<W4>, char a5@<W5>, char a6@<W6>, int a7@<W8>)
{
  uint64_t v7;
  int v8;
  int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  _BYTE *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  unint64_t v38;
  char v39;

  v11 = v10[1368];
  v12 = *(_BYTE **)(v7 + 8560);
  *v12 = v11 ^ a6;
  v13 = 33 * (a7 ^ 0x11C0);
  v14 = v10[1369];
  v12[1] = v14 ^ a5;
  v15 = v10[1370];
  v12[2] = v15 ^ a4;
  v16 = v10[1371];
  v12[3] = v16 ^ a3;
  v17 = v10[1372];
  v12[4] = v17 ^ a2;
  v18 = v10[1373];
  v19 = v18 ^ *(_DWORD *)(v7 + 9656);
  *(_DWORD *)(v7 + 9656) = v19;
  v12[5] = v19;
  v20 = v10[1374];
  v21 = v20 ^ *(_DWORD *)(v7 + 9664);
  *(_DWORD *)(v7 + 9664) = v21;
  v12[6] = v21;
  v22 = v10[1375];
  v23 = v22 ^ *(_DWORD *)(v7 + 9672);
  *(_DWORD *)(v7 + 9672) = v23;
  v12[7] = v23;
  v24 = v10[1376];
  v25 = v24 ^ *(_DWORD *)(v7 + 9680);
  *(_DWORD *)(v7 + 9680) = v25;
  v12[8] = v25;
  v26 = v10[1377];
  v27 = v26 ^ *(_DWORD *)(v7 + 9688);
  *(_DWORD *)(v7 + 9688) = v27;
  v12[9] = v27;
  v28 = v10[1378];
  v29 = v28 ^ *(_DWORD *)(v7 + 9696);
  *(_DWORD *)(v7 + 9696) = v29;
  v12[10] = v29;
  v30 = v10[1379];
  v31 = v30 ^ *(_DWORD *)(v7 + 9704);
  *(_DWORD *)(v7 + 9704) = v31;
  v12[11] = v31;
  v32 = v10[1380];
  v33 = v32 ^ *(_DWORD *)(v7 + 9720);
  *(_DWORD *)(v7 + 9720) = v33;
  v12[12] = v33;
  v34 = v10[1381];
  v35 = v34 ^ *(_DWORD *)(v7 + 9728);
  *(_DWORD *)(v7 + 9728) = v35;
  v12[13] = v35;
  v36 = v10[1382];
  v37 = v36 ^ *(_DWORD *)(v7 + 9736);
  *(_DWORD *)(v7 + 9736) = v37;
  v12[14] = v37;
  v12[15] = a1 ^ v9;
  v10[1383] = __PAIR64__(v36, v9 << 24) >> 25;
  HIDWORD(v38) = v34;
  LODWORD(v38) = v36 << 24;
  v10[1382] = v38 >> 25;
  HIDWORD(v38) = v32;
  LODWORD(v38) = v34 << 24;
  v10[1381] = v38 >> 25;
  HIDWORD(v38) = v30;
  LODWORD(v38) = v32 << 24;
  v10[1380] = v38 >> 25;
  HIDWORD(v38) = v28;
  LODWORD(v38) = v30 << 24;
  v10[1379] = v38 >> 25;
  HIDWORD(v38) = v26;
  LODWORD(v38) = v28 << 24;
  v10[1378] = v38 >> 25;
  HIDWORD(v38) = v24;
  LODWORD(v38) = v26 << 24;
  v10[1377] = v38 >> 25;
  HIDWORD(v38) = v22;
  LODWORD(v38) = v24 << 24;
  v10[1376] = v38 >> 25;
  HIDWORD(v38) = v20;
  LODWORD(v38) = v22 << 24;
  v10[1375] = v38 >> 25;
  HIDWORD(v38) = v18;
  LODWORD(v38) = v20 << 24;
  v10[1374] = v38 >> 25;
  HIDWORD(v38) = v17;
  LODWORD(v38) = v18 << 24;
  v10[1373] = v38 >> 25;
  HIDWORD(v38) = v16;
  LODWORD(v38) = v17 << 24;
  v10[1372] = v38 >> 25;
  HIDWORD(v38) = v15;
  LODWORD(v38) = v16 << 24;
  v10[1371] = v38 >> 25;
  HIDWORD(v38) = v14;
  LODWORD(v38) = v15 << 24;
  v10[1370] = v38 >> 25;
  HIDWORD(v38) = v11;
  LODWORD(v38) = v14 << 24;
  v10[1369] = v38 >> 25;
  if (((9 * (((v13 + 4) | 0xC1) ^ 0xE5) + 99) & v9) != 0)
    v39 = -31;
  else
    v39 = 0;
  v10[1368] = v39 ^ (v11 >> 1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 9744) + 8 * (v13 ^ (6222 * (v8 == 127)))))();
}

void sub_100351E1C()
{
  JUMPOUT(0x100351AF8);
}

uint64_t sub_100351E2C@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  unint64_t v7;

  *(_DWORD *)(v2 + 9632) = a1;
  v4 = (a2 - 961137348) & 0x3949DFFD;
  v5 = *(_QWORD *)(v2 + 8048);
  v6 = *(_BYTE *)(v5 + 16);
  LODWORD(v5) = -333269657
              * (((v5 + 16) ^ *(_DWORD *)(*(_QWORD *)(v2 + 9648) + *(_QWORD *)(v2 + 9640))) & (((v4 - 3032) | 0x248) ^ 0x7FFFE9B7));
  v7 = -333269657 * (v5 ^ WORD1(v5));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((16337
                                                        * ((((*(_BYTE *)(*(_QWORD *)(v2 + 8280)
                                                                                        + (v7 >> 24)) ^ v6 ^ *(_BYTE *)((v7 >> 24) + *(_QWORD *)(v2 + 8272) + 1) ^ *(_BYTE *)((v7 >> 24) + *(_QWORD *)(v2 + 8288) + 5) ^ v7 ^ (127 * BYTE3(v7))) >> 7) & 1) == 0)) ^ v4))
                                          - 4))(3961697639);
}

uint64_t sub_100351F14()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unint64_t v20;

  v5 = v4[1398];
  v6 = v4[1397];
  v7 = v4[1396];
  v8 = v4[1395];
  v9 = v4[1394];
  v10 = v4[1393];
  v11 = v4[1392];
  v12 = v4[1391];
  v13 = v4[1390];
  v14 = v4[1389];
  v15 = v4[1388];
  v16 = v4[1387];
  v17 = v4[1386];
  v18 = v4[1385];
  v19 = v4[1384];
  HIDWORD(v20) = v6;
  LODWORD(v20) = v5 << 24;
  v4[1398] = v20 >> 25;
  v4[1399] = __PAIR64__(v5, v1 << 24) >> 25;
  HIDWORD(v20) = v7;
  LODWORD(v20) = v6 << 24;
  LOBYTE(v6) = v20 >> 25;
  HIDWORD(v20) = v8;
  LODWORD(v20) = v7 << 24;
  v4[1397] = v6;
  v4[1396] = v20 >> 25;
  HIDWORD(v20) = v9;
  LODWORD(v20) = v8 << 24;
  v4[1395] = v20 >> 25;
  HIDWORD(v20) = v10;
  LODWORD(v20) = v9 << 24;
  LOBYTE(v9) = v20 >> 25;
  HIDWORD(v20) = v11;
  LODWORD(v20) = v10 << 24;
  v4[1394] = v9;
  v4[1393] = v20 >> 25;
  HIDWORD(v20) = v12;
  LODWORD(v20) = v11 << 24;
  v4[1392] = v20 >> 25;
  HIDWORD(v20) = v13;
  LODWORD(v20) = v12 << 24;
  LOBYTE(v11) = v20 >> 25;
  HIDWORD(v20) = v14;
  LODWORD(v20) = v13 << 24;
  v4[1391] = v11;
  v4[1390] = v20 >> 25;
  HIDWORD(v20) = v15;
  LODWORD(v20) = v14 << 24;
  v4[1389] = v20 >> 25;
  HIDWORD(v20) = v16;
  LODWORD(v20) = v15 << 24;
  LOBYTE(v11) = v20 >> 25;
  HIDWORD(v20) = v17;
  LODWORD(v20) = v16 << 24;
  v4[1388] = v11;
  v4[1387] = v20 >> 25;
  HIDWORD(v20) = v18;
  LODWORD(v20) = v17 << 24;
  v4[1386] = v20 >> 25;
  HIDWORD(v20) = v19;
  LODWORD(v20) = v18 << 24;
  v4[1385] = v20 >> 25;
  v4[1384] = (v1 << 31 >> 31) & 0xE1 ^ (v19 >> 1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                                      + 8
                                                      * ((935
                                                        * (v3
                                                         + ((((v0 - 5792) | 1) - 2067) | 0x800)
                                                         + ((((v0 - 5792) | 1) + 2647) | 0xC48)
                                                         - 10493 != 128)) ^ ((v0 - 5792) | 1)))
                                          - 4))(3961697639);
}

void sub_1003521A8()
{
  JUMPOUT(0x100351E5CLL);
}

uint64_t sub_1003521B4(int a1)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;

  v8 = ((*(_DWORD *)(*v5 + (int)(*v6 & 0xC058E860)) ^ (v2 + v7 + 16)) & 0x7FFFFFFF) * a1;
  v9 = (v8 ^ HIWORD(v8)) * a1;
  v10 = v9 >> (v1 - 14);
  *(_BYTE *)(v2 + v7 + 16) = *(_BYTE *)(v3[1035] + v10) ^ *(_BYTE *)(v3[1070] + v2) ^ *(_BYTE *)(v10 + v3[1034] + 1) ^ *(_BYTE *)(v10 + v3[1036] + 5) ^ v9 ^ (127 * v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((31 * (v2 != 15)) ^ v1)) - 4))();
}

uint64_t sub_10035225C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _DWORD *v4;
  _BYTE *v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v6 = 3151 * ((v0 + 4193) ^ 0x1985);
  *(_QWORD *)(v1 + 12296) = *(_QWORD *)(v1 + 12368);
  *(_QWORD *)(v1 + 12304) = *(_QWORD *)(v1 + 12328) + 0x25ED94A3D792CC43;
  v7 = *(_QWORD *)(v1 + 8248) + 34232;
  v8 = (v6 + 1356119905) & 0xAF2B2DF9 ^ 0x5E9;
  v9 = *(_DWORD *)(*v3 + (int)(*v4 & 0xC058E860));
  v10 = -333269657 * ((-333269657 * ((v9 ^ v7) & 0x7FFFFFFF)) ^ ((-333269657 * ((v9 ^ v7) & 0x7FFFFFFFu)) >> 16));
  v11 = -333269657
      * ((-333269657 * (((v7 + (_DWORD)v8) ^ v9) & 0x7FFFFFFF)) ^ ((-333269657 * (((v7 + (_DWORD)v8) ^ v9) & 0x7FFFFFFFu)) >> 16));
  **(_BYTE **)(v1 + 6208) = v5[v8] ^ *v5 ^ *(_BYTE *)(*(_QWORD *)(v1 + 8280) + (v10 >> 24)) ^ *(_BYTE *)((v10 >> 24) + *(_QWORD *)(v1 + 8272) + 1) ^ *(_BYTE *)((v10 >> 24) + *(_QWORD *)(v1 + 8288) + 5) ^ *(_BYTE *)(*(_QWORD *)(v1 + 8280) + (v11 >> 24)) ^ *(_BYTE *)((v11 >> 24) + *(_QWORD *)(v1 + 8272) + 1) ^ *(_BYTE *)((v11 >> 24) + *(_QWORD *)(v1 + 8288) + 5) ^ v10 ^ (127 * ((-333269657 * ((-333269657 * ((v9 ^ v7) & 0x7FFFFFFF)) ^ ((-333269657 * ((v9 ^ v7) & 0x7FFFFFFFu)) >> 16))) >> 24)) ^ v11 ^ (127 * BYTE3(v11));
  return (*(uint64_t (**)(void))(v2 + 8 * (v6 ^ 0x119)))();
}

void sub_1003523CC()
{
  JUMPOUT(0x1003522DCLL);
}

uint64_t sub_1003523D4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  *(_QWORD *)(v2 + 7824) = 0;
  *(_QWORD *)(v2 + 9640) = 113;
  v5 = 113 * (v1 ^ 0x5F2);
  v6 = *(_QWORD *)(v2 + 8248);
  *(_QWORD *)(v2 + 7008) = v6 + 0x2045F544234EB8C9;
  *(_QWORD *)(v2 + 6944) = a1 - 0x194C6113CD9FFCD4;
  *(_DWORD *)(v2 + 9624) = *(_DWORD *)(v2 + 5436) ^ 0x501DB7C ^ v5;
  *(_DWORD *)(v2 + 7000) = v6 + 1836851861;
  *(_DWORD *)(v2 + 6992) = v6 + 1836851789;
  *(_DWORD *)(v2 + 6984) = v6 + 1836852025;
  *(_DWORD *)(v2 + 6936) = v4 - 1712632425;
  *(_QWORD *)(v2 + 9728) = 0xFB36B24E253F7DF6;
  *(_QWORD *)(v2 + 7152) = 0xCD405201A2153DD7;
  *(_QWORD *)(v2 + 7752) = 0x2045F544234E1E32;
  *(_QWORD *)(v2 + 7168) = 0x25ED94A3D792CC43;
  *(_DWORD *)(v2 + 8632) = 1581468871;
  *(_DWORD *)(v2 + 9360) = 1022968232;
  *(_DWORD *)(v2 + 9116) = 878965500;
  *(_DWORD *)(v2 + 9560) = 973325841;
  *(_QWORD *)(v2 + 7144) = 0x1897A8EFC36F707FLL;
  *(_QWORD *)(v2 + 7208) = 0x4C32BAAE943916B7;
  *(_DWORD *)(v2 + 8176) = 1371251080;
  *(_DWORD *)(v2 + 8628) = -45470441;
  *(_DWORD *)(v2 + 9472) = 1902352859;
  *(_DWORD *)(v2 + 8900) = -1309011474;
  *(_DWORD *)(v2 + 8612) = -1254822933;
  *(_DWORD *)(v2 + 0x2000) = -1919273178;
  *(_DWORD *)(v2 + 9552) = 597581385;
  *(_DWORD *)(v2 + 8952) = 2012648930;
  *(_DWORD *)(v2 + 9288) = 1425949042;
  *(_DWORD *)(v2 + 8464) = -283782320;
  *(_DWORD *)(v2 + 8744) = 883736160;
  *(_DWORD *)(v2 + 8616) = -428815246;
  *(_DWORD *)(v2 + 8936) = 315391890;
  *(_DWORD *)(v2 + 9464) = -1136854466;
  *(_DWORD *)(v2 + 8860) = 1364702138;
  *(_DWORD *)(v2 + 9072) = 1521933811;
  *(_DWORD *)(v2 + 9520) = -488543309;
  *(_DWORD *)(v2 + 8968) = -1079328982;
  *(_DWORD *)(v2 + 9384) = 141512565;
  *(_DWORD *)(v2 + 9240) = 1437504086;
  *(_DWORD *)(v2 + 9312) = -26041454;
  *(_DWORD *)(v2 + 8532) = 1119204759;
  *(_DWORD *)(v2 + 9544) = -917920183;
  *(_DWORD *)(v2 + 9688) = -581120787;
  *(_DWORD *)(v2 + 8760) = 1012572721;
  *(_DWORD *)(v2 + 8944) = -979357884;
  *(_DWORD *)(v2 + 8572) = -1639418189;
  *(_DWORD *)(v2 + 8520) = 630181850;
  *(_DWORD *)(v2 + 9248) = -1569750918;
  *(_DWORD *)(v2 + 9440) = -290915853;
  *(_DWORD *)(v2 + 9200) = -1644545054;
  *(_DWORD *)(v2 + 8868) = 9120233;
  *(_DWORD *)(v2 + 9456) = 1852260027;
  *(_DWORD *)(v2 + 8360) = -384831143;
  *(_DWORD *)(v2 + 9608) = 1203552569;
  *(_DWORD *)(v2 + 9012) = -1886235746;
  *(_DWORD *)(v2 + 8232) = -551408210;
  *(_DWORD *)(v2 + 8456) = -1333026095;
  *(_DWORD *)(v2 + 8152) = 495033137;
  *(_DWORD *)(v2 + 8768) = 37891279;
  *(_DWORD *)(v2 + 8188) = -1222143366;
  *(_DWORD *)(v2 + 9720) = 60376108;
  *(_DWORD *)(v2 + 9080) = -1455819828;
  *(_DWORD *)(v2 + 9632) = 1283963537;
  *(_DWORD *)(v2 + 8864) = -470238036;
  *(_DWORD *)(v2 + 9184) = -174838065;
  *(_DWORD *)(v2 + 8980) = 808062623;
  *(_DWORD *)(v2 + 9680) = 2067434949;
  *(_DWORD *)(v2 + 8704) = -1248552643;
  *(_DWORD *)(v2 + 9400) = -1496316774;
  *(_DWORD *)(v2 + 8300) = 1085470599;
  *(_DWORD *)(v2 + 8472) = 1411620667;
  *(_DWORD *)(v2 + 9536) = 70598442;
  *(_DWORD *)(v2 + 8440) = -540988015;
  *(_DWORD *)(v2 + 9616) = -1176888986;
  *(_DWORD *)(v2 + 9152) = 1531780991;
  *(_DWORD *)(v2 + 8548) = -1354943462;
  *(_DWORD *)(v2 + 8424) = 686799731;
  *(_DWORD *)(v2 + 9592) = 90194135;
  *(_DWORD *)(v2 + 9160) = -183864406;
  *(_DWORD *)(v2 + 8688) = 986485056;
  *(_DWORD *)(v2 + 8608) = 1801487960;
  *(_DWORD *)(v2 + 9148) = -828391786;
  *(_DWORD *)(v2 + 9576) = -252893015;
  *(_DWORD *)(v2 + 9172) = -524332985;
  *(_DWORD *)(v2 + 9036) = 1254802195;
  *(_DWORD *)(v2 + 8576) = 1094670661;
  *(_DWORD *)(v2 + 9004) = -2069453146;
  *(_DWORD *)(v2 + 8304) = -831013276;
  *(_DWORD *)(v2 + 9488) = 900480755;
  *(_DWORD *)(v2 + 8260) = 304158341;
  *(_DWORD *)(v2 + 8392) = 870107214;
  *(_DWORD *)(v2 + 9512) = 1132261877;
  *(_DWORD *)(v2 + 7704) = -66267652;
  *(_DWORD *)(v2 + 9416) = 686201733;
  *(_DWORD *)(v2 + 8536) = -284741332;
  *(_DWORD *)(v2 + 9424) = 2023063326;
  *(_DWORD *)(v2 + 8544) = 656994638;
  *(_DWORD *)(v2 + 9656) = -1972445704;
  *(_DWORD *)(v2 + 9224) = 362765464;
  *(_DWORD *)(v2 + 8904) = 2004632796;
  *(_DWORD *)(v2 + 8488) = -1330531781;
  *(_DWORD *)(v2 + 9016) = 1436231688;
  *(_DWORD *)(v2 + 9376) = -1527226210;
  *(_DWORD *)(v2 + 8552) = 1506545950;
  *(_DWORD *)(v2 + 8680) = -1394956465;
  *(_DWORD *)(v2 + 8888) = -1383625257;
  *(_DWORD *)(v2 + 9128) = 1912396673;
  *(_DWORD *)(v2 + 9296) = 1929521357;
  *(_DWORD *)(v2 + 8664) = 1655514258;
  *(_DWORD *)(v2 + 8808) = -1235396500;
  *(_DWORD *)(v2 + 9480) = -1354834912;
  *(_DWORD *)(v2 + 9104) = 385614022;
  *(_DWORD *)(v2 + 8240) = 410509397;
  *(_DWORD *)(v2 + 9256) = -45286087;
  *(_DWORD *)(v2 + 9096) = 1893531469;
  *(_QWORD *)(v2 + 9696) = 62;
  *(_DWORD *)(v2 + 9208) = -1921812413;
  *(_DWORD *)(v2 + 8764) = -375300119;
  *(_DWORD *)(v2 + 8712) = 1603499152;
  *(_DWORD *)(v2 + 8696) = -1380049565;
  *(_QWORD *)(v2 + 9600) = 57;
  *(_QWORD *)(v2 + 9568) = 228;
  *(_QWORD *)(v2 + 7808) = 159;
  *(_QWORD *)(v2 + 9432) = 178;
  *(_QWORD *)(v2 + 7784) = 238;
  *(_QWORD *)(v2 + 7664) = 92;
  *(_QWORD *)(v2 + 9584) = 206;
  *(_QWORD *)(v2 + 7936) = 48;
  *(_QWORD *)(v2 + 7768) = 234;
  *(_QWORD *)(v2 + 9528) = 230;
  *(_QWORD *)(v2 + 7864) = 17;
  *(_QWORD *)(v2 + 9448) = 221;
  *(_QWORD *)(v2 + 9408) = 144;
  *(_QWORD *)(v2 + 9648) = 183;
  *(_QWORD *)(v2 + 7944) = 70;
  *(_DWORD *)(v2 + 7544) = 225;
  *(_QWORD *)(v2 + 9496) = 253;
  *(_QWORD *)(v2 + 7064) = 15;
  *(_DWORD *)(v2 + 8116) = -1946931257;
  *(_DWORD *)(v2 + 8504) = -2083865366;
  *(_DWORD *)(v2 + 9064) = 1681591872;
  *(_DWORD *)(v2 + 8728) = -1182265668;
  *(_DWORD *)(v2 + 8212) = 1759046355;
  *(_DWORD *)(v2 + 7696) = 94;
  *(_DWORD *)(v2 + 9272) = 1413308940;
  *(_DWORD *)(v2 + 8816) = -198545675;
  *(_DWORD *)(v2 + 8312) = -2102500236;
  *(_DWORD *)(v2 + 8328) = -1918679004;
  *(_DWORD *)(v2 + 8964) = 1173744358;
  *(_DWORD *)(v2 + 9156) = 1024806736;
  *(_DWORD *)(v2 + 9672) = 1911135746;
  *(_DWORD *)(v2 + 9056) = -937747917;
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (v5 ^ 0xB76));
  v8 = (uint64_t)*(&off_1004ECA20 + v5 - 1086);
  *(_QWORD *)(v2 + 8080) = v8 + 3401;
  *(_QWORD *)(v2 + 9704) = v8 + 2361;
  *(_QWORD *)(v2 + 8168) = v8 + 3142;
  *(_QWORD *)(v2 + 9328) = v8;
  *(_QWORD *)(v2 + 8056) = v8 + 6813;
  return v7(4096421621, 72);
}

uint64_t sub_100352CF0(uint64_t a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  char v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;

  v14 = *(_QWORD *)(v9 + 7152) ^ 0xF7352DD8;
  v15 = 1404380669 * v14 - 937747949 - ((-1486205958 * v14) & 0x90363426);
  *(_DWORD *)(v9 + 9504) = v15;
  *(_DWORD *)(v9 + 9368) = 742658939 * v14 + 84008871 - ((v14 * (v12 - 2092230945)) & 0xA03BF4E);
  v16 = v7;
  v17 = *(_QWORD *)(v9 + 9728);
  v18 = *(_QWORD *)(v9 + 7144) ^ 0xE30DDE28;
  *(_DWORD *)(v9 + 8912) = (84008871 - 1658906263 * v18 - ((171848402 * v18) & 0xA03BF4E)) ^ (84008871
                                                                                            - 1658906263
                                                                                            * (v17 ^ 0x55DD3A1)
                                                                                            - ((171848402
                                                                                              * (v17 ^ 0x55DD3A1)) & 0xA03BF4E));
  v19 = (v8 + 588405239) & 0xDCED8FFF;
  v20 = 84008871 - 1050181591 * v18 - (((v19 ^ 0x2CF0489) * v18) & 0xA03BF4E);
  v21 = v10 - 1050181591 * (v17 ^ 0x55DD3A1) - ((47120466 * (v17 ^ 0x55DD3A1)) & 0x55C04FE);
  v22 = *(_QWORD *)(v9 + 7208) ^ 0xC11906B8;
  *(_DWORD *)(v9 + 9320) = v22 - v14;
  *(_DWORD *)(v9 + 9192) = (v17 ^ 0x55DD3A1) - v18;
  *(_DWORD *)(v9 + 9176) = -2089189415 * v14;
  *(_DWORD *)(v9 + 9136) = ((84008871 - 2089189415 * v22 - ((116588466 * v22) & 0xA03BF4E)) ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v9 + 9120) = ((84008871 - 669634157 * (v17 ^ 0x55DD3A1) - ((2908966 * (v17 ^ 0x55DD3A1)) & 0xA03BF4E)) ^ 0xFAFE2058)
                         + ((-519103228 - 669634157 * v18 - ((-1339268314 * v18) & a7)) ^ 0xE10F1D04)
                         + 1;
  v23 = 1404380669 * v22 - 937747949 - ((-1486205958 * v22) & 0x90363426);
  *(_DWORD *)(v9 + 9736) = v23;
  *(_DWORD *)(v9 + 9052) = (v15 ^ 0x37E4E5EC) + (v23 ^ 0xC81B1A13) + 1;
  v24 = 73608139 * (v17 ^ 0x55DD3A1) + 84008871 - ((147216278 * (v17 ^ 0x55DD3A1)) & 0xA03BF4E);
  *(_DWORD *)(v9 + 9664) = v24;
  *(_DWORD *)(v9 + 9040) = (v24 ^ 0xFAFE2058) + 73608139 * v18 + 1;
  *(_DWORD *)(v9 + 9024) = v14 + 84008871 - ((2 * v14) & 0xA03BF4E);
  *(_DWORD *)(v9 + 9008) = ((211012067 * (v17 ^ 0x55DD3A1) + 84008871 - ((153588678 * (v17 ^ 0x55DD3A1)) & 0xA03BF4E)) ^ 0x501DFA7)
                         + ((211012067 * v18 + 84008871 - ((153588678 * v18) & 0xA03BF4E)) ^ 0xFAFE2058)
                         + 1;
  *(_DWORD *)(v9 + 8932) = (1215688503 * v22) ^ (1215688503 * v14);
  *(_DWORD *)(v9 + 8920) = !(v17 & 1) + (v17 & 1);
  v25 = (209822846 * v14) & 0xA03BF4E;
  *(_DWORD *)(v9 + 9264) = v14;
  v26 = 1983959615 * v14 + 84008871;
  v27 = *(_DWORD *)(v9 + 9368);
  v28 = *(_QWORD *)(v9 + 6944);
  *(_DWORD *)(v9 + 9392) = v22;
  *(_DWORD *)(v9 + 8992) = (v27 ^ 0x501DFA7) - 742658939 * v22;
  *(_DWORD *)(v9 + 9304) = v17 ^ 0x55DD3A1;
  *(_DWORD *)(v9 + 9280) = v18;
  *(_DWORD *)(v9 + 8880) = ((v26 - v25) ^ 0xFAFE2058)
                         + ((1983959615 * v22 - 1087178124 - ((1820435582 * v22) & 0x7E65F4E8)) ^ 0xBF32FA74)
                         + 1;
  *(_DWORD *)(v9 + 8984) = 1571558905 * (v18 - (v17 ^ 0x55DD3A1));
  *(_DWORD *)(v9 + 8808) = v21;
  *(_DWORD *)(v9 + 8872) = v20;
  v30 = v13 ^ 0xE10F1D04;
  LOBYTE(v25) = (*(_BYTE *)(v28 + v30) >> 5) | (8 * *(_BYTE *)(v28 + v30));
  v31 = 61 * (v13 ^ 0xE10F1D04);
  LOBYTE(v26) = v16 ^ v20 ^ v21;
  LOBYTE(v25) = v26 ^ (115
                     * ((*(_BYTE *)(*(_QWORD *)(v9 + 8080) + (v25 ^ 0xFALL))
                       + (v25 ^ 0x23)
                       + (v25 ^ 0x22)
                       + 1) ^ 0xCB));
  v32 = *(_QWORD *)(v9 + 6192);
  *(_BYTE *)(v32 + v19 + v31 + 1014 - ((((v19 + v31 + 1014) * (unint64_t)v11) >> 32) >> 4) * a2) = v26 ^ 0x7F;
  *(_BYTE *)(v32 + v31 - (((v31 * (unint64_t)v11) >> 32) >> 4) * a2) = v25 ^ 0x7F;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v9 + 9744)
                              + 8
                              * (int)((7053 * (a4 > ((v30 - 519103228 - ((2 * v30 + 2) & a7) + 1) ^ 0xE10F1D04))) ^ v19)))();
}

uint64_t sub_100353188@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W6>, char a4@<W8>)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v16 = *(unsigned __int8 *)(v6 + v11);
  v17 = ((v16 + 84008871 - ((2 * v16) & 0x14E)) ^ v5) + *(_DWORD *)(v10 + 9320);
  *(_BYTE *)(a2
           + v14
           + 2059596029
           + v15
           - 2059596996
           + 2042
           - ((((v14 + 2059596029 + v15 - 2059596996 + 2042) * (unint64_t)v12) >> 32) >> 4)
           * a1) = (v17 - 89 - (a4 & (2 * v17))) ^ 0xA7 ^ v16;
  *(_BYTE *)(a2 + v11 * v9 - (((v11 * v9 * (unint64_t)v12) >> 32) >> 4) * a1) = (v17 - 89 - (a4 & (2 * v17))) ^ 0xA7;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v10 + 9744)
                              + 8 * (v15 ^ (5246 * (v7 > ((v8 - ((v13 + 4) & a3) + 2) ^ v4))))))();
}

uint64_t sub_100353248(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  uint64_t (*v22)(void);

  v19 = *(unsigned __int8 *)(v10 + v7);
  v20 = ((v19 + 84008871 - ((2 * v19) & 0x14E)) ^ v9) - *(_DWORD *)(v13 + 9280) + *(_DWORD *)(v13 + 9304);
  v21 = v20 - 89 - ((((v18 + 57) | 3) + 55) & (2 * v20));
  *(_BYTE *)(a4 + v17 + 2379 - ((((v17 + 2379) * (unint64_t)v14) >> 32) >> 4) * a2) = v21 ^ 0xA7 ^ v19;
  *(_BYTE *)(a4 + v7 * v12 - (((v7 * v12 * (unint64_t)v14) >> 32) >> 4) * a2) = v21 ^ 0xA7;
  v22 = *(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744)
                            + 8 * (v18 ^ (8338 * (((v8 + v16 - ((v15 + 6) & a7) + 3) ^ v8) < v11))));
  *(_DWORD *)(v13 + 9096) = -937747949;
  return v22();
}

uint64_t sub_100353328@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W6>, char a4@<W8>)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t (*v17)(void);

  v15 = *(unsigned __int8 *)(v6 + v9);
  v16 = ((v15 + 84008871 - ((2 * v15) & 0x14E)) ^ v5) - *(_DWORD *)(v8 + 9264) + *(_DWORD *)(v8 + 9392);
  *(_BYTE *)(a2 + v13 + 2440 - ((((v13 + 2440) * (unint64_t)v11) >> 32) >> 4) * a1) = (v16 - 89 - (((_BYTE)v16 << ((((v14 + 38) | 0x16) + 57) ^ 0x51)) & a4)) ^ 0xA7 ^ v15;
  *(_BYTE *)(a2 + 61 * v9 - (((61 * v9 * (unint64_t)v11) >> 32) >> 4) * a1) = (v16
                                                                                                  - 89
                                                                                                  - (((_BYTE)v16 << ((((v14 + 38) | 0x16) + 57) ^ 0x51)) & a4)) ^ 0xA7;
  v17 = *(uint64_t (**)(void))(*(_QWORD *)(v8 + 9744) + 8 * (v14 ^ (2863 * (v7 > ((v10 - ((v12 + 8) & a3) + 4) ^ v4)))));
  *(_DWORD *)(v8 + 9096) = -937747950;
  return v17();
}

uint64_t sub_100353414(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  _BOOL4 v23;

  *(_DWORD *)(v13 + 9128) = a8;
  v19 = -*(_BYTE *)(*(_QWORD *)(v13 + 8168)
                                   + (((*(_BYTE *)(v9 + v14) >> 2) | (*(_BYTE *)(v9 + v14) << 6)) ^ 0x16));
  v20 = (-*(unsigned __int8 *)(*(_QWORD *)(v13 + 8168)
                             + (((*(_BYTE *)(v9 + v14) >> 2) | (*(_BYTE *)(v9 + v14) << 6)) ^ 0x16)) ^ (v19 >> 6) ^ (v19 >> (((v11 - 44) | 0x8A) + 85)) ^ 0x2B)
      - 105;
  v21 = ((-*(_BYTE *)(*(_QWORD *)(v13 + 8168)
                                     + (((*(_BYTE *)(v9 + v14) >> 2) | (*(_BYTE *)(v9 + v14) << 6)) ^ 0x16)) ^ (v19 >> 6) ^ (v19 >> (((v11 - 44) | 0x8A) + 85)) ^ 0x2B)
                        - 105);
  v22 = ((v21 + 84008871 - ((2 * v20) & 0x14E)) ^ v8) + *(_DWORD *)(v13 + 9192);
  *(_BYTE *)(a4 + v18 + 2501 - ((((v18 + 2501) * (unint64_t)v15) >> 32) >> 4) * a2) = (v22 - 89 - ((2 * v22) & 0x4E)) ^ v21 ^ 0xA7;
  *(_BYTE *)(a4 + v14 * v12 - (((v14 * v12 * (unint64_t)v15) >> 32) >> 4) * a2) = (v22 - 89 - ((2 * v22) & 0x4E)) ^ 0xA7;
  v23 = v10 > ((v17 - 519103228 - ((v16 + 10) & a7) + 5) ^ 0xE10F1D04);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v13 + 9744) + 8 * (v11 ^ ((16 * v23) | (32 * v23)))) - 12))();
}

uint64_t sub_100353550@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W5>, int a5@<W8>)
{
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  char v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  char v19;

  v16 = *(unsigned __int8 *)(a2 + v12);
  v17 = ((v16 + v8 - (a4 & (2 * v16))) ^ v7) + *(_DWORD *)(v11 + 9176);
  v18 = *(_DWORD *)(v11 + 9136) + ((v17 + v8 - (((v15 - v5 - 1178) ^ 0x8F3EAF59) & (2 * v17))) ^ v8);
  v19 = v18 + v8 - (v14 & (2 * v18));
  *(_BYTE *)(a3 + v12 * v10 + 2257 - ((((v12 * v10 + 2257) * (unint64_t)v13) >> 32) >> 4) * a1) = v19 ^ 0xA7 ^ v16;
  *(_BYTE *)(a3 + v12 * v10 % 0x48) = v19 ^ 0xA7;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                        + 8 * (v15 ^ (919 * (((v6 + v12 - ((2 * v12 + 2) & a5) + 1) ^ v6) >= v9))))
                            - 4))();
}

uint64_t sub_100353648(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  char v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  char v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;

  v18 = v7 + ((v12 - 1489021574) & 0xDDFD9B97) + 967;
  v19 = *(unsigned __int8 *)(a3 + v16);
  v20 = v16 * v15;
  v21 = *(_DWORD *)(v14 + 9120) + ((v19 + v10 - (a6 & (2 * v19))) ^ v9);
  *(_BYTE *)(a4 + v20 + v18 + 1014 - ((((v20 + v18 + 1014) * (unint64_t)a2) >> 32) >> 4) * a5) = (v21 + v10 - (v17 & (2 * v21))) ^ v13 ^ v19;
  *(_BYTE *)(a4 + v20 - (((v20 * (unint64_t)a2) >> 32) >> 4) * a5) = (v21 + v10 - (v17 & (2 * v21))) ^ v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v14 + 9744)
                                        + 8 * (v12 ^ (31 * (v11 > ((v8 + v16 - ((2 * v16 + 2) & a7) + 1) ^ v8)))))
                            - 8))();
}

uint64_t sub_10035370C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(uint64_t, uint64_t);

  v20 = *(unsigned __int8 *)(a3 + v7);
  v21 = *(_DWORD *)(v13 + 9052) + ((v20 + v10 - (a6 & (2 * v20))) ^ v9);
  *(_QWORD *)(v13 + 7808) = v20;
  *(_BYTE *)(a4 + v16 + 2318 - ((((v16 + 2318) * (unint64_t)a2) >> 32) >> 4) * a5) = (v21 + v10 - ((((v19 + 56) | 4) + 55) & (2 * v21))) ^ v12 ^ v20;
  *(_BYTE *)(a4 + v7 * v15 - (((v7 * v15 * (unint64_t)a2) >> 32) >> 4) * a5) = (v21 + v10 - ((((v19 + 56) | 4) + 55) & (2 * v21))) ^ v12;
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 + 9744)
                                                   + 8 * (v19 ^ (4880 * (((v14 - ((v18 + 4) & a7) + 2) ^ v8) < v11))));
  *(_DWORD *)(v13 + 8744) = v10 - 1;
  *(_DWORD *)(v13 + 8188) = -1087178123;
  *(_DWORD *)(v13 + 9608) = *(_DWORD *)(v13 + 9736);
  *(_DWORD *)(v13 + 9096) = v17;
  return v22(a1, 72);
}

uint64_t sub_100353808@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W6>, char a5@<W8>)
{
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t (*v21)(void);

  v17 = *(unsigned __int8 *)(a2 + v9);
  v18 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 9704)
                           + (((v17 >> 2) | (((v17 >> 2) | ((_BYTE)v17 << 6)) ^ v10)) & 7 ^ (((v17 >> 2) | ((_BYTE)v17 << 6)) ^ v10)))
      - (((((v17 >> 2) | (v17 << 6)) ^ v10) + 46) ^ ((v17 >> 2) | (v17 << 6)) ^ v10);
  v19 = (v18 ^ 0x1B) - 35 * ((((v18 ^ 0x1B) & 0x17) + (v18 & (v16 - 1220719676) & 0xCDFFBF77 ^ 4)) & 0x23);
  v20 = *(_DWORD *)(v11 + 9040) + ((v7 + v19 - ((2 * v19) & 0x14E)) ^ v6);
  LOBYTE(v20) = (v20 + v7 - (a5 & (2 * v20))) ^ v10;
  *(_QWORD *)(v11 + 7664) = v19;
  *(_BYTE *)(a3 + v14 + 2379 - ((((v14 + 2379) * (unint64_t)v12) >> 32) >> 4) * a1) = v20 ^ ((v18 ^ 0x1B) - 35 * ((((v18 ^ 0x1B) & 0x17) + (v18 & (v16 - 60) & 0x77 ^ 4)) & 0x23));
  *(_BYTE *)(a3 + 61 * v9 - (((61 * v9 * (unint64_t)v12) >> 32) >> 4) * a1) = v20;
  v21 = *(uint64_t (**)(void))(*(_QWORD *)(v11 + 9744)
                            + 8 * (v16 ^ (3461 * (v8 > ((v5 + v13 - ((v15 + 6) & a4) + 3) ^ v5)))));
  *(_DWORD *)(v11 + 8860) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 9608) = *(_DWORD *)(v11 + 9736);
  *(_DWORD *)(v11 + 9096) = *(_DWORD *)(v11 + 9504);
  return v21();
}

uint64_t sub_100353940(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t (*v21)(void);

  v19 = v8 ^ *(_DWORD *)(v13 + 9024);
  v20 = v19 ^ *(_QWORD *)(v13 + 7208) ^ *(unsigned __int8 *)(v9 + v11);
  *(_BYTE *)(a4 + v16 + 2440 - ((((v16 + 2440) * (unint64_t)v14) >> 32) >> 4) * a2) = v19 ^ *(_DWORD *)(v13 + 9392);
  *(_BYTE *)(a4 + v11 * v12 - (((v11 * v12 * (unint64_t)v14) >> 32) >> 4) * a2) = v20 ^ 0xB8;
  v21 = *(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744)
                            + 8
                            * ((3887 * (v10 > ((v15 - ((v17 + 8) & a7) + ((v18 - 2059596996) ^ 0x64320D1F)) ^ v7))) ^ v18));
  *(_DWORD *)(v13 + 8188) = -1087178123;
  *(_DWORD *)(v13 + 8860) = *(_DWORD *)(v13 + 9664);
  *(_DWORD *)(v13 + 9608) = *(_DWORD *)(v13 + 9736);
  *(_DWORD *)(v13 + 9152) = 84008871;
  *(_DWORD *)(v13 + 9096) = *(_DWORD *)(v13 + 9504);
  return v21();
}

uint64_t sub_100353A28@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W6>, char a4@<W8>)
{
  char v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  char v18;
  uint64_t (*v19)(void);

  v16 = *(unsigned __int8 *)(v7 + v9);
  v17 = *(_DWORD *)(v10 + 9008) + (((v15 ^ 0x853D14CC) + 2143604624 + v16 - ((2 * v16) & 0x14E)) ^ v6);
  v18 = v17 + v4 - (a4 & (2 * v17));
  *(_BYTE *)(a2 + v13 + 2501 - ((((v13 + 2501) * (unint64_t)v11) >> 32) >> 4) * a1) = v18 ^ 0xA7 ^ v16;
  *(_BYTE *)(a2 + 61 * v9 - (((61 * v9 * (unint64_t)v11) >> 32) >> 4) * a1) = v18 ^ 0xA7;
  v19 = *(uint64_t (**)(void))(*(_QWORD *)(v10 + 9744)
                            + 8 * (v15 ^ (2695 * (((v5 + v12 - ((v14 + 10) & a3) + 5) ^ v5) < v8))));
  *(_DWORD *)(v10 + 8860) = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 9608) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9152) = *(_DWORD *)(v10 + 8744);
  *(_DWORD *)(v10 + 9096) = *(_DWORD *)(v10 + 9504);
  return v19();
}

uint64_t sub_100353B04@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W6>, char a4@<W8>)
{
  char v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  uint64_t (*v21)(void);

  v18 = *(unsigned __int8 *)(v7 + v12);
  v19 = *(_DWORD *)(v11 + 8992) + ((v13 + 2143604624 + v18 - ((2 * v18) & 0x14E)) ^ v6);
  v20 = v19 + v4 - (a4 & (2 * v19));
  *(_BYTE *)(a2 + v15 + 2562 - ((((v15 + 2562) * (unint64_t)v14) >> 32) >> 4) * a1) = v20 ^ 0xA7 ^ v18;
  *(_BYTE *)(a2 + v12 * v10 - (((v12 * v10 * (unint64_t)v14) >> 32) >> 4) * a1) = v20 ^ 0xA7;
  v21 = *(uint64_t (**)(void))(*(_QWORD *)(v11 + 9744)
                            + 8 * (v17 ^ (11801 * (((~((v16 + 12) & a3) + v9 + 7) ^ v5) < v8))));
  *(_DWORD *)(v11 + 8188) = -1087178123;
  *(_DWORD *)(v11 + 8860) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 9608) = *(_DWORD *)(v11 + 9736);
  *(_DWORD *)(v11 + 9152) = *(_DWORD *)(v11 + 8744);
  *(_DWORD *)(v11 + 9096) = *(_DWORD *)(v11 + 9504);
  return v21();
}

uint64_t sub_100353BEC@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W6>, char a4@<W8>)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  uint64_t (*v20)(void);

  v15 = -89 * *(unsigned __int8 *)(v6 + v11);
  v16 = ((v15 ^ 0x63)
       + (v15 ^ 6)
       + *(unsigned __int8 *)(*(_QWORD *)(v9 + 8056) + ((-89 * *(_BYTE *)(v6 + v11)) ^ 0x15))) ^ (v14 - 2059597046);
  v17 = (v16 >> 6) | (4 * v16);
  v18 = ((v17 + 84008871 - ((2 * v17) & 0x14E)) ^ v5) + *(_DWORD *)(v9 + 8984);
  v19 = v18 - 89 - (a4 & (2 * v18));
  *(_BYTE *)(a2 + (v12 + 2623) % (((v15 & 0x28 ^ 0x28) + (v15 & 0x28) + 32) & 0xF8u)) = v19 ^ 0xA7 ^ v17;
  *(_BYTE *)(a2 + 61 * v11 - (((61 * v11 * (unint64_t)v10) >> 32) >> 4) * a1) = v19 ^ 0xA7;
  v20 = *(uint64_t (**)(void))(*(_QWORD *)(v9 + 9744) + 8 * (v14 ^ (58 * (((v8 - ((v13 + 14) & a3)) ^ v4) < v7))));
  *(_DWORD *)(v9 + 8860) = *(_DWORD *)(v9 + 9664);
  *(_DWORD *)(v9 + 9608) = *(_DWORD *)(v9 + 9736);
  *(_DWORD *)(v9 + 9152) = *(_DWORD *)(v9 + 8744);
  *(_DWORD *)(v9 + 9096) = *(_DWORD *)(v9 + 9504);
  return v20();
}

uint64_t sub_100353D18(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  char v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;
  uint64_t (*v20)(void);

  v16 = *(_BYTE *)(v9 + v11);
  v17 = v11 * v12;
  v18 = *(_DWORD *)(v13 + 8932) ^ v8;
  v19 = v10 > ((v11 + *(_DWORD *)(v13 + 8920) + v7 - (((v11 + *(_DWORD *)(v13 + 8920)) << ((v15 ^ 0xCC) - 22)) & a7)) ^ v7);
  *(_BYTE *)(a4 + v17 + 2257 - ((((v17 + 2257) * (unint64_t)v14) >> 32) >> 4) * a2) = *(_BYTE *)(v13 + 8932) ^ v8 ^ 0xA7;
  *(_BYTE *)(a4 + v17 - (((v17 * (unint64_t)v14) >> 32) >> 4) * a2) = v16 ^ v18 ^ 0xA7;
  v20 = *(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744) + 8 * ((11652 * v19) ^ v15));
  *(_DWORD *)(v13 + 8188) = -1087178123;
  *(_DWORD *)(v13 + 8860) = *(_DWORD *)(v13 + 9664);
  *(_DWORD *)(v13 + 9608) = *(_DWORD *)(v13 + 9736);
  *(_DWORD *)(v13 + 9152) = *(_DWORD *)(v13 + 8744);
  *(_DWORD *)(v13 + 9096) = *(_DWORD *)(v13 + 9504);
  return v20();
}

uint64_t sub_100353DF4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  char v18;
  unsigned int v19;
  char v20;
  unsigned int v21;
  uint64_t (*v22)(void);

  v17 = *(_DWORD *)(v13 + 8912) ^ v8;
  *(_DWORD *)(v13 + 9096) = (v15 + 1205712285) ^ v17;
  v18 = *(_BYTE *)(v9 + v11);
  v19 = v11 * v12 + 2257 - ((((v11 * v12 + 2257) * (unint64_t)v14) >> 32) >> 4) * a2;
  *(_BYTE *)(a4 + v19) = v17 ^ 0xA7;
  v20 = v18 ^ v17;
  v21 = ((v19 & v12 ^ v12) + (v19 & v12)) * v11;
  *(_BYTE *)(a4 + v21 - (((v21 * (unint64_t)v14) >> 32) >> 4) * a2) = v20 ^ 0xA7;
  v22 = *(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744)
                            + 8 * (v16 ^ (8057 * (((v7 + v11 - ((2 * v11 + 2) & a7) + 1) ^ v7) < v10))));
  *(_DWORD *)(v13 + 8860) = *(_DWORD *)(v13 + 9664);
  *(_DWORD *)(v13 + 9608) = *(_DWORD *)(v13 + 9736);
  *(_DWORD *)(v13 + 9152) = *(_DWORD *)(v13 + 8744);
  return v22();
}

uint64_t sub_100353EBC@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W6>, char a4@<W8>)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  char v18;
  uint64_t (*v19)(void);

  v16 = *(unsigned __int8 *)(v6 + v14);
  v17 = *(_DWORD *)(v10 + 8880) + ((v16 + 84008871 - ((v16 << (v15 ^ 0xDA)) & 0x14E)) ^ v5);
  v18 = v17 - 89 - (a4 & (2 * v17));
  *(_BYTE *)(a2 + v12 + 2318 - ((((v12 + 2318) * (unint64_t)v13) >> 32) >> 4) * a1) = v18 ^ 0xA7 ^ v16;
  *(_BYTE *)(a2 + v14 * v9 - (((v14 * v9 * (unint64_t)v13) >> 32) >> 4) * a1) = v18 ^ 0xA7;
  v19 = *(uint64_t (**)(void))(*(_QWORD *)(v10 + 9744) + 8 * (v15 ^ (7743 * (v7 > ((v8 - ((v11 + 4) & a3) + 2) ^ v4)))));
  *(_DWORD *)(v10 + 8188) = -1087178123;
  *(_DWORD *)(v10 + 8860) = *(_DWORD *)(v10 + 9664);
  *(_DWORD *)(v10 + 9608) = *(_DWORD *)(v10 + 9736);
  *(_DWORD *)(v10 + 9152) = *(_DWORD *)(v10 + 8744);
  return v19();
}

void sub_100353FA8()
{
  _DWORD *v0;

  v0[2288] = v0[2186];
  v0[2402] = v0[2434];
  v0[2215] = v0[2416];
  JUMPOUT(0x10035309CLL);
}

uint64_t sub_100353FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  *(_DWORD *)(v8 + 9096) = v9 ^ 0xCD1AC5B4;
  *(_DWORD *)(v8 + 8188) = -1087178124;
  *(_DWORD *)(v8 + 9128) = *(_DWORD *)(v8 + 9128);
  *(_DWORD *)(v8 + 8260) = a8;
  *(_DWORD *)(v8 + 9280) = a5;
  v11 = *(_QWORD *)(v8 + 9328) - 12;
  *(_QWORD *)(v8 + 9664) = *(_QWORD *)(v8 + 7808);
  *(_QWORD *)(v8 + 7792) = v11;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                      + 8
                                      * ((4339
                                        * (((((((v10 + 2059597833) | 0x100) - 1917) | 0x448) + 84007356) ^ 0x501DFA7u) < (*(_DWORD *)(v8 + 9056) ^ 0xC81B1A13))) ^ ((v10 + 2059597833) | 0x100)))
                          - 8);
  *(_QWORD *)(v8 + 7912) = v11 + 803;
  *(_QWORD *)(v8 + 7848) = v11 + 1335;
  *(_QWORD *)(v8 + 8136) = v11 + 3927;
  *(_QWORD *)(v8 + 8064) = v11 + 6037;
  return v12();
}

uint64_t sub_100354144@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  char v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = 73 * (v3 ^ 0x943);
  *(_DWORD *)(v6 + 9368) = a1 ^ 0x2C;
  *(_DWORD *)(v6 + 9328) = v5 + 1;
  *(_DWORD *)(v6 + 9736) = v7;
  v8 = ~(v5 - (a2 ^ 0x501DFA7)) + 2 * (v5 - (a2 ^ 0x501DFA7));
  v9 = v8 + 921350772 - ((2 * v8) & 0x6DD564E8);
  v10 = 61 * (v9 ^ ((v7 ^ 0xCCB) + 921349257));
  v11 = *(_BYTE *)(a3 + (v10 + 2257) % 0x48);
  v12 = *(unsigned __int8 *)(a3 + v10 % 0x48);
  v13 = ((v12 >> 2) | ((_BYTE)v12 << 6)) ^ 0xA7;
  v14 = (*(unsigned __int8 *)(*(_QWORD *)(v6 + 9704)
                            + (((v12 >> 2) | ((_BYTE)v12 << 6)) ^ 0xA0))
       - ((v13 + 46) ^ v13)) ^ 0x1B;
  v15 = v14 - ((2 * v14 + 46) & 0xFFFFFFA4) - 23;
  *(_QWORD *)(v6 + 9392) = v15 ^ 0x52;
  v16 = (v14 - ((2 * v14 + 46) & 0xA4) - 23) ^ 0x52;
  *(_DWORD *)(v6 + 7696) = v15;
  *(_QWORD *)(v6 + 9504) = v12;
  *(_BYTE *)(a3 + (61 * ((v9 ^ 0x36EAB274) + (v4 ^ 0x501DFA7u) - v16) + 2257) % 0x48) = v16
                                                                                      - v12
                                                                                      + (v15 ^ (v11
                                                                                              + (~(2 * v11) | 0x5B)
                                                                                              + 83));
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8
                                        * ((4930
                                          * (v5 > (((a2 ^ 0x501DFA7)
                                                  + 84008871
                                                  - ((2 * (a2 ^ 0x501DFA7) + 2) & 0xA03BF4E)
                                                  + 1) ^ 0x501DFA7u))) ^ v7))
                            - 8))();
}

uint64_t sub_10035430C@<X0>(unsigned int a1@<W2>, int a2@<W5>, unsigned int a3@<W6>, uint64_t a4@<X8>)
{
  char v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  char v15;
  int v16;

  v12 = (((v6 ^ 0xFAFE2058) + v5 - 1608563557 - ((2 * ((v6 ^ 0xFAFE2058) + v5)) & 0x403E8936)) ^ 0xA01F449B) * a2;
  v13 = (v12 + 2257) % (((v10 + 609760463) & 0xDBA7C7FB) - 1443);
  v14 = v9 ^ v4;
  v15 = *(_BYTE *)(a4 + v12 - (((v12 * (unint64_t)a3) >> 32) >> 4) * v8);
  LOBYTE(v12) = (v14 ^ a1) - v15 + (v15 ^ *(_BYTE *)(a4 + v13));
  v16 = *(_DWORD *)(v7 + 9736);
  *(_BYTE *)(a4 + v13) = (v12 + a1 - ((2 * v12) & 0x4E)) ^ 0xA7;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * (v16 ^ (10325 * (v5 > ((a1 + v11 - ((2 * v11 + 2) & 0xA03BF4E) + 1) ^ a1)))))
                            - 8))();
}

uint64_t sub_1003543F8@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W5>, unsigned int a4@<W6>, uint64_t a5@<X8>)
{
  char v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  char v16;
  int v17;
  unsigned int v18;
  uint64_t (*v19)(void);

  v13 = a2 ^ v7;
  v14 = (v9 ^ 0xFAFE2058) + v6 + 1350170244 - ((((v9 ^ 0xFFFFFFFFFAFE2058) + v6) << ((v5 - 53) ^ 0xEAu)) & 0xA0F3ED08);
  v15 = (v14 ^ 0x5079F684) * a3;
  v16 = *(_BYTE *)(a5 + v15 + 2257 - ((((v15 + 2257) * (unint64_t)a4) >> 32) >> 4) * v11);
  v17 = *(unsigned __int8 *)(a5 + v15 - (((v15 * (unint64_t)a4) >> 32) >> 4) * v11);
  LOBYTE(v15) = v16 - v17 + 2 * (v17 & ~v16);
  v18 = v10
      + (v13 ^ a1 ^ ((v14 ^ v17 ^ 0x5079F684) + a1 - 2 * ((v14 ^ v17 ^ 0x5079F684) & (a1 + 16) ^ (v14 ^ v17) & 0x10)))
      * a3;
  *(_BYTE *)(a5 + v18 - (((v18 * (unint64_t)a4) >> 32) >> 4) * v11) = (v15 + a1 - ((2 * v15) & 0x4E)) ^ 0xA7;
  v19 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                      + 8 * (*(_DWORD *)(v8 + 9736) ^ (6395 * (v6 > v12 + 2))))
                          - 8);
  *(_DWORD *)(v8 + 8944) = 84008871;
  return v19();
}

uint64_t sub_100354508@<X0>(int a1@<W2>, char a2@<W3>, int a3@<W4>, int a4@<W5>, unsigned int a5@<W6>, uint64_t a6@<X8>)
{
  char v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t (*v18)(void);

  v13 = (v7 - v11) * a4;
  v14 = v13 + 2074 - ((((v13 + 2074) * (unint64_t)a5) >> 32) >> 4) * v10;
  v15 = *(unsigned __int8 *)(a6
                           + v13
                           - 183
                           - ((((v13 - 183) * (unint64_t)a5) >> 32) >> 4) * v10);
  v16 = (a3 ^ v8)
      + ((115
                         * (*(_BYTE *)(*(_QWORD *)(v9 + 8064)
                                     + (((*(_BYTE *)(a6 + v14) >> 5) | (8 * *(_BYTE *)(a6 + v14))) ^ 0xAFLL)) ^ ((((*(_BYTE *)(a6 + v14) >> 5) | (8 * *(_BYTE *)(a6 + v14))) ^ 0xC9) + (v12 ^ 0x22)) ^ 0x3A)) ^ v15);
  v17 = v16 + a1 - ((2 * v16) & 0xA03BF4E);
  *(_DWORD *)(v9 + 8612) = v17;
  *(_QWORD *)(v9 + 9600) = v15;
  *(_BYTE *)(a6 + v14) = ((v17 ^ a1) - v15 + v6 - (a2 & (2 * ((v17 ^ a1) - v15)))) ^ 0xC5;
  v18 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8
                                                               * (*(_DWORD *)(v9 + 9736) ^ (7079 * (v11 + 3 < v7))))
                          - 8);
  *(_DWORD *)(v9 + 8944) = a1 - 1;
  return v18();
}

uint64_t sub_100354600@<X0>(unsigned int a1@<W2>, int a2@<W3>, int a3@<W5>, unsigned int a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;

  v15 = v7 - v13 - 4;
  v16 = *(_BYTE *)(a5
                 + v15 * a3
                 + 2257
                 - ((((v15 * a3 + 2257) * (unint64_t)a4) >> 32) >> 4) * v11);
  v17 = *(unsigned __int8 *)(a5 + v15 * a3 % ((v6 ^ 0xCCBu) - 1443));
  v18 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 8136) + ((-89 * v17) ^ 0x56));
  v19 = ((v18 + (v18 ^ 0x1E) + 1) ^ 0xFFFFFFFE) + v18;
  *(_QWORD *)(v9 + 9584) = v17;
  v20 = v12 ^ (v8 + v5 - (a2 & (2 * v8))) ^ v15 ^ v17;
  *(_QWORD *)(v9 + 7864) = (v19 >> 6) | (4 * v19);
  *(_BYTE *)(a5
           + v10
           + v20 * a3
           - ((((v10 + v20 * a3) * (unint64_t)a4) >> 32) >> 4) * v11) = ((v19 >> 6) | (4 * v19)) ^ v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                        + 8
                                        * (*(_DWORD *)(v9 + 9736) ^ (8980
                                                                   * (((a1 + v13 - ((v14 + 8) & 0xA03BF4E) + 4) ^ a1) < v7))))
                            - 8))();
}

uint64_t sub_1003546F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7)
{
  int v7;
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned __int8 v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v15 = (((a5 ^ 0xFAFE2058)
        + v9
        + 1350170244
        - ((((a5 ^ 0xFFFFFFFFFAFE2058) + v9) << (((v8 - 37) & 0xEFu) + 22)) & 0xA0F3ED08)) ^ 0x5079F684)
      * a6;
  v16 = v15 + 2257 - ((((v15 + 2257) * (unint64_t)a7) >> 32) >> 4) * v12;
  v17 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 6192)
                           + v15
                           - (((v15 * (unint64_t)a7) >> 32) >> 4) * v12);
  v18 = *(_QWORD *)(v11 + 6192);
  v19 = (v17 ^ *(_BYTE *)(v18 + v16));
  *(_QWORD *)(v11 + 9568) = v17;
  LODWORD(v17) = v19 - v17 + a3 - ((2 * (v19 - v17)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8704) = v17;
  LODWORD(v17) = (v17 ^ a3) + (v13 ^ v10) + v7 - ((2 * ((v17 ^ a3) + (v13 ^ v10))) & 0xC21E3A08);
  *(_DWORD *)(v11 + 8608) = v17;
  *(_BYTE *)(v18 + v16) = v17 ^ 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                        + 8 * (*(_DWORD *)(v11 + 9736) ^ (6151 * (v14 + 5 < v9))))
                            - 8))();
}

uint64_t sub_100354800@<X0>(unsigned int a1@<W2>, int a2@<W5>, unsigned int a3@<W6>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v13 = v5 - v10 - 6;
  v14 = (v12 ^ 0x5D6) * v13;
  v15 = *(unsigned __int8 *)(a4 + v14 - (((v14 * (unint64_t)a3) >> 32) >> 4) * v9);
  v16 = v8 + (v13 ^ v4 ^ v15 ^ *(_DWORD *)(v7 + 8608) ^ v6) * a2;
  *(_BYTE *)(a4 + v16 - (((v16 * (unint64_t)a3) >> 32) >> 4) * v9) = *(_BYTE *)(a4 + v14 + 2257 - ((((v14 + 2257) * (unint64_t)a3) >> 32) >> 4) * v9) ^ v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * (*(_DWORD *)(v7 + 9736) ^ (10421
                                                                   * (v5 > ((a1 + v10 - ((v11 + 12) & 0xA03BF4E) + 6) ^ a1)))))
                            - 8))();
}

uint64_t sub_1003548B8@<X0>(int a1@<W5>, unsigned int a2@<W6>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  int v5;
  unsigned int v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  _BOOL4 v19;
  int v20;
  int v21;

  v13 = (v3 ^ v5 ^ 0xFAFE2978) + v6 + 1350170244 - ((2 * ((v3 ^ v5 ^ 0xFAFE2978) + v6)) & 0xA0F3ED08);
  v14 = (v13 ^ 0x5079F684) * a1;
  v15 = *(unsigned __int8 *)(a3 + v14 % (((v13 & 0xE ^ 4) + (v13 & 0xE ^ 0xA)) ^ 0x46));
  v16 = *(unsigned __int8 *)(a3 + v14 - (((v14 * (unint64_t)a2) >> 32) >> 4) * v11);
  v17 = (v8 ^ v7 ^ v4)
      - v15
      + (v15 ^ *(_BYTE *)(a3 + v14 + 2257 - ((((v14 + 2257) * (unint64_t)a2) >> 32) >> 4) * v11));
  *(_QWORD *)(v9 + 9528) = v16;
  *(_QWORD *)(v9 + 9496) = v15;
  v18 = v10 + (v16 - v15 + (v13 ^ 0x5079F684)) * a1;
  v19 = v12 + 1 < v6;
  if (v12 + 1 >= v6)
    v20 = -1218566;
  else
    v20 = -1218564;
  *(_DWORD *)(v9 + 9184) = (v19 ^ 0x5BBFDB7F) + v20;
  v21 = *(_DWORD *)(v9 + 9736);
  *(_BYTE *)(a3 + v18 - (((v18 * (unint64_t)a2) >> 32) >> 4) * v11) = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * (v21 ^ (11536 * v19))) - 8))();
}

uint64_t sub_1003549FC@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W5>, unsigned int a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;

  v13 = ~v9 + v6;
  v14 = v13 * a3;
  v15 = *(unsigned __int8 *)(a5
                           + (v13 * a3 + 2257)
                           % ((~(((((v5 - 2238) | 0x589) ^ 0xF2C5) - v14) | (v14 + 2257)) & 0xBA19) + 72));
  v16 = v13 - 1441058131 * (v7 ^ 0xE40EC2A3 ^ (a2 + a1 - ((2 * a2) & 0xA03BF4E)));
  v17 = *(unsigned __int8 *)(a5 + v14 - (((v14 * (unint64_t)a4) >> 32) >> 4) * v11);
  v18 = *(_DWORD *)(v8 + 9736);
  *(_QWORD *)(v8 + 9448) = v17;
  *(_QWORD *)(v8 + 7936) = v17 ^ v15;
  *(_BYTE *)(a5
           + v10
           + (v16 + 1441058131 * (_DWORD)v17) * a3
           - ((((v10 + (v16 + 1441058131 * (_DWORD)v17) * a3) * (unint64_t)a4) >> 32) >> 4) * v11) = v17 ^ v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * (v18 ^ (8074 * (v12 + 2 < v6)))) - 8))();
}

uint64_t sub_100354ADC@<X0>(int a1@<W0>, char a2@<W2>, uint64_t a3@<X4>, int a4@<W5>, unsigned int a5@<W6>, uint64_t a6@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v11 = *(_QWORD *)(v8 + 7936) ^ v6;
  v12 = ~a3 + v7;
  v13 = (((v12 | (*(_DWORD *)(v8 + 9368) + a1 + a3 - 2335)) & 0x25) + v12) * a4;
  v14 = ((a1 ^ 0xCCB) - 1454) * v12;
  LOBYTE(v12) = *(_BYTE *)(*(_QWORD *)(v8 + 7792)
                         + (((a3 - v7) ^ v12) & 0x757ED8CA8C80B606 ^ 0x757ED8CA8C80B331)
                         + ((*(_BYTE *)(a6
                                                       + v13
                                                       - (((v13 * (unint64_t)a5) >> 32) >> 4) * v9)
                                            + 55) ^ 0x34));
  v15 = *(unsigned __int8 *)(a6 + v14 - (((v14 * (unint64_t)a5) >> 32) >> 4) * v9);
  LODWORD(v12) = -*(unsigned __int8 *)(*(_QWORD *)(v8 + 8168)
                                     + (((((5 * (v12 ^ 0xB3)) ^ v15) >> 2) | (((5 * (v12 ^ 0xB3)) ^ v15) << 6)) ^ 0x16));
  LOBYTE(v12) = v11 + (v12 ^ (v12 >> 6) ^ (v12 >> 3) ^ 0x2B) - 105;
  *(_BYTE *)(a6 + v14 + 2257 - ((((v14 + 2257) * (unint64_t)a5) >> 32) >> 4) * v9) = ((v12 + a2 - ((2 * v12) & 0x4E)) ^ a2) - v15;
  v16 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744) + 8 * (a1 ^ (6565 * (v10 + 3 < v7))))
                          - 8);
  *(_QWORD *)(v8 + 9696) = v15;
  *(_QWORD *)(v8 + 7768) = v15;
  return v16();
}

uint64_t sub_100354C38@<X0>(int a1@<W4>, int a2@<W5>, unsigned int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  int v16;
  uint64_t (*v17)(void);

  v12 = (v8 ^ a4 ^ 0xFFFFFA14) + v5;
  v13 = *(unsigned __int8 *)(a5 + v12 * a2 - (((v12 * a2 * (unint64_t)a3) >> 32) >> 4) * v10);
  v14 = *(_BYTE *)(*(_QWORD *)(v7 + 8136)
                 + ((-89
                                    * (v13 ^ *(_BYTE *)(a5
                                                      + v12 * a2
                                                      + 2257
                                                      - ((((v12 * a2 + 2257) * (unint64_t)a3) >> 32) >> 4)
                                                      * v10))) ^ 0x56)) ^ 0xE1;
  v15 = 5 * (*(_BYTE *)(*(_QWORD *)(v7 + 7848) + ((((v14 >> 6) | (4 * v14)) + 55) ^ 0x34)) ^ 0xB3);
  *(_QWORD *)(v7 + 9432) = v13;
  v16 = (224171469 * v13) ^ v12 ^ (224171469 * (a1 ^ v6));
  LODWORD(v13) = *(_DWORD *)(v7 + 9736);
  *(_BYTE *)(a5
           + v9
           + v16 * a2
           - ((((v9 + v16 * a2) * (unint64_t)a3) >> 32) >> 4) * v10) = v15;
  v17 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (int)(v13 ^ (7117 * (v5 > v11 + 4)))) - 8);
  *(_QWORD *)(v7 + 7768) = *(_QWORD *)(v7 + 9696);
  return v17();
}

uint64_t sub_100354D2C@<X0>(unsigned int a1@<W2>, int a2@<W5>, unsigned int a3@<W6>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  char v12;
  char v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);

  v13 = (v5 - 125) | 0x48;
  v14 = ~v7 + v6;
  v15 = v14 * a2 + 2257 - ((((v14 * a2 + 2257) * (unint64_t)a3) >> 32) >> 4) * v9;
  v16 = ((-89 * *(_BYTE *)(a4 + v15)) ^ -(-89 * *(_BYTE *)(a4 + v15)) ^ (33 - ((-89 * *(_BYTE *)(a4 + v15)) ^ v13 ^ 0xCA)))
      + 33;
  v17 = *(unsigned __int8 *)(a4 + v14 * a2 - (((v14 * a2 * (unint64_t)a3) >> 32) >> 4) * v9);
  LOBYTE(v14) = *(_BYTE *)(*(_QWORD *)(v8 + 7792)
                         + ((((v7 - v6) & 0xF57) + (v14 & 0xF57)) ^ ((((-89 * *(_BYTE *)(a4 + v15)) ^ (89 * *(_BYTE *)(a4 + v15)) ^ (33 - ((-89 * *(_BYTE *)(a4 + v15)) ^ v13 ^ 0xCA)))
                                                                                       + 33) ^ 0x88 | v16 ^ 0x77u) ^ 0xFF)
                         + (v16 ^ 0x77)) ^ 0xE1;
  LODWORD(v16) = (v17 ^ v12 ^ ((v14 >> 6) | (4 * v14))) ^ v11;
  *(_DWORD *)(v8 + 8608) = v16 ^ v4;
  *(_BYTE *)(a4 + v15) = v16 ^ v17;
  v18 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                      + 8
                                      * (v5 ^ (7250 * (((a1 + v10 - ((2 * v10 + 10) & 0xA03BF4E) + 5) ^ a1) < v6))))
                          - 8);
  *(_QWORD *)(v8 + 7768) = *(_QWORD *)(v8 + 9696);
  *(_QWORD *)(v8 + 9640) = v17;
  *(_QWORD *)(v8 + 7936) = v17;
  return v18();
}

uint64_t sub_100354E60@<X0>(int a1@<W2>, int a2@<W5>, unsigned int a3@<W6>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  char v14;
  unsigned int v15;
  uint64_t (*v16)(void);

  v11 = (v10 ^ 0xFAFE2058) + v5;
  v12 = *(unsigned __int8 *)(a4 + v11 * a2 - (((v11 * a2 * (unint64_t)a3) >> 32) >> 4) * v8);
  v13 = *(_BYTE *)(a4
                 + v11 * a2
                 + (v4 ^ 0xCCB)
                 + 742
                 - ((((v11 * a2 + (v4 ^ 0xCCB) + 742) * (unint64_t)a3) >> 32) >> 4) * v8) ^ v12;
  v14 = a1 + v13 - ((2 * v13) & 0x4E);
  v15 = (((a1 + v6 - ((2 * v6) & 0x14E)) ^ 0xFAFE2058) + v12 + v11) * a2 + 2318;
  *(_BYTE *)(a4 + v15 - (((v15 * (unint64_t)a3) >> 32) >> 4) * v8) = v14 ^ 0xA7;
  v16 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (v4 ^ (1922 * (v9 + 1 < v5)))) - 8);
  *(_DWORD *)(v7 + 9096) = -937747949;
  *(_QWORD *)(v7 + 7784) = v12;
  *(_QWORD *)(v7 + 7768) = *(_QWORD *)(v7 + 9696);
  *(_QWORD *)(v7 + 7936) = *(_QWORD *)(v7 + 9640);
  return v16();
}

uint64_t sub_100354F48@<X0>(char a1@<W2>, char a2@<W4>, int a3@<W5>, unsigned int a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t (*v19)(void);

  v13 = (*(_DWORD *)(v9 + 9328) + (v12 ^ 0xFAFE2058)) * a3;
  v14 = v13 + 2135 - ((((v13 + 2135) * (unint64_t)a4) >> 32) >> 4) * v10;
  v15 = *(unsigned __int8 *)(a5
                           + v13
                           + ((v5 + 2106055883) & 0x82781FFF)
                           - 1637
                           - ((((v13 + ((v5 + 2106055883) & 0x82781FFF) - 1637) * (unint64_t)a4) >> 32) >> 4)
                           * v10);
  v16 = (v15 ^ *(_BYTE *)(a5 + v14));
  *(_QWORD *)(v9 + 9664) = v15;
  v17 = v16 - v15 - 519103228 - ((2 * (v16 - v15)) & 0xC21E3A08);
  *(_DWORD *)(v9 + 8312) = v17;
  v18 = *(_DWORD *)(v9 + 9736);
  *(_BYTE *)(a5 + v14) = ((v17 ^ 4) + (a2 ^ v7) + a1 - ((2 * ((v17 ^ 4) + (a2 ^ v7))) & 0x4E)) ^ 0xA7;
  v19 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744) + 8 * (v18 ^ (6952 * (v11 + 2 < v6)))) - 8);
  *(_DWORD *)(v9 + 9096) = -937747950;
  *(_QWORD *)(v9 + 7784) = v8;
  *(_QWORD *)(v9 + 7768) = *(_QWORD *)(v9 + 9696);
  *(_QWORD *)(v9 + 7936) = *(_QWORD *)(v9 + 9640);
  return v19();
}

uint64_t sub_10035506C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, unsigned int a5@<W6>, uint64_t a6@<X8>)
{
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  uint64_t (*v19)(void);

  v14 = (v13 ^ (101 * (a1 ^ 0x92F)) ^ 0xFFFFFA14) + v6;
  v15 = *(unsigned __int8 *)(a6 + v14 * a4 - (((v14 * a4 * (unint64_t)a5) >> 32) >> 4) * v11);
  v16 = v15 ^ *(unsigned __int8 *)(a6
                                 + v14 * a4
                                 + 2257
                                 - ((((v14 * a4 + 2257) * (unint64_t)a5) >> 32) >> 4) * v11);
  v17 = a2
      + (v15 ^ *(_BYTE *)(a6
                                         + v14 * a4
                                         + 2257
                                         - ((((v14 * a4 + 2257) * (unint64_t)a5) >> 32) >> 4) * v11))
      - ((2 * v16) & 0x14E);
  *(_DWORD *)(v9 + 8360) = (v17 ^ a2) - v15 + a2 - ((2 * ((v17 ^ a2) - v15)) & 0xA03BF4E);
  v18 = v10 + (v14 ^ (-1526662617 * v15) ^ (-1526662617 * (a3 ^ (v7 + a2 - ((2 * v7) & 0xBF4E))))) * a4;
  *(_BYTE *)(a6 + v18 - (((v18 * (unint64_t)a5) >> 32) >> 4) * v11) = v16;
  v19 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                      + 8 * (*(_DWORD *)(v9 + 9736) ^ (11577 * (v6 > v12 + 3))))
                          - 8);
  *(_DWORD *)(v9 + 9616) = -678042683;
  *(_QWORD *)(v9 + 7784) = v8;
  *(_QWORD *)(v9 + 7768) = *(_QWORD *)(v9 + 9696);
  *(_QWORD *)(v9 + 7936) = *(_QWORD *)(v9 + 9640);
  return v19();
}

uint64_t sub_100355190@<X0>(int a1@<W0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W5>, unsigned int a5@<W6>, uint64_t a6@<X8>)
{
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  char v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t (*v40)(void);

  v20 = ~v19 + v7;
  v21 = v20 * a4
      + ((a1 + 696554699) & 0xD67B67FF)
      + 742
      - ((((v20 * a4 + ((a1 + 696554699) & 0xD67B67FF) + 742) * (unint64_t)a5) >> 32) >> 4) * v12;
  v22 = (*(unsigned __int8 *)(*(_QWORD *)(v10 + 7848)
                            + ((*(_BYTE *)(a6
                                                          + (((v19 - v7) | v20) & a4) * v20
                                                          - ((((((v19 - v7) | v20) & a4)
                                                                           * v20
                                                                           * (unint64_t)a5) >> 32) >> 4)
                                                          * v12)
                                               + 55) ^ 0x34)) ^ 0xFFFFFFB3)
      * ((v20 & 5 ^ 5) + (v20 & 5));
  v23 = *(unsigned __int8 *)(a6 + v20 * a4 - (((v20 * a4 * (unint64_t)a5) >> 32) >> 4) * v12);
  v24 = v20 - v23 * ((v8 & 0x77B7E98C) - 560200485 + (v8 & 0x77B7E98C ^ 0x77B7E98C));
  v25 = v11 + (((v24 - 1608563557 - ((2 * v24) & 0x403E8936)) ^ 0xA01F449B) + 1448341095 * v22) * a4;
  v26 = 5
      * (*(unsigned __int8 *)(*(_QWORD *)(v10 + 7912) + ((*(_BYTE *)(a6 + v21) + 55) ^ 0x30)) ^ 0xFFFFFFDF);
  *(_BYTE *)(a6 + v25 - (((v25 * (unint64_t)a5) >> 32) >> 4) * v12) = (5
                                                                                          * (*(_BYTE *)(*(_QWORD *)(v10 + 7912) + ((*(_BYTE *)(a6 + v21) + 55) ^ 0x30)) ^ 0xDF)) ^ v17 ^ (v18 - ((2 * v18) & 0x4E) - 89);
  v27 = a3 + v15 - ((2 * v15 + 8) & 0xA03BF4E);
  v28 = (v13 << 8) - 0x1B02CC06AF86097CLL - (((_DWORD)v13 << 9) & 0x1EC00);
  v29 = *(_QWORD *)(v10 + 9640);
  v30 = (*(_QWORD *)(v10 + 9432) << 16) | (v29 << 24) | (v9 << 32);
  v31 = *(_QWORD *)(v10 + 9696);
  v32 = *(_QWORD *)(v10 + 9664) << 40;
  v33 = *(_QWORD *)(v10 + 7208) ^ 0x8B11F2DDC11906B8 ^ (*(_QWORD *)(v10 + 9448) & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)v31 << 8)) ^ v32 ^ ((v30 | (v23 << 56)) - 0x74EE0D223EE6F948 - ((2 * (v30 | (v23 << 56))) & 0x160001BB82320000));
  v34 = *(_QWORD *)(v10 + 9392);
  v35 = v27 + 4;
  v36 = ((v14 << 48) | *(_QWORD *)(v10 + 9504) & 0xFFFF00FF000000FFLL | ((unint64_t)*(_QWORD *)(v10 + 7864) << 32) & 0xFFFF00FFFFFF00FFLL | ((unint64_t)a2 << 16) & 0xFFFF00FF00FF00FFLL | (*(_QWORD *)(v10 + 9600) << 24) | ((unint64_t)*(_QWORD *)(v10 + 9568) << 40) | ((unint64_t)v13 << 8)) ^ *(_QWORD *)(v10 + 9728);
  v37 = ((a2 << 16) | (*(_QWORD *)(v10 + 9600) << 24) | (*(_QWORD *)(v10 + 9584) << 32) | (*(_QWORD *)(v10 + 9568) << 40)) & 0xFF00FFFFFFFFFFFFLL | ((unint64_t)v14 << 48);
  v38 = *(_QWORD *)(v10 + 7152) ^ 0xA631A72F7352DD8 ^ (*(_QWORD *)(v10 + 9448) | (v31 << 8));
  *(_QWORD *)(v10 + 9408) = v22;
  *(_QWORD *)(v10 + 7064) = v26 ^ v22 ^ 0x78;
  *(_QWORD *)(v10 + 7208) = v33 ^ (v16 << 48);
  *(_QWORD *)(v10 + 9728) = v36 ^ (*(_QWORD *)(v10 + 9496) << 56);
  *(_QWORD *)(v10 + 7152) = v38 ^ v32 ^ (v16 << 48) ^ ((v30 | (v22 << 56))
                                                     + 0xA631A72F7352DD8
                                                     - ((2 * (v30 | (v22 << 56))) & 0x140000E5EE6A0000));
  v39 = *(_DWORD *)(v10 + 9736);
  *(_QWORD *)(v10 + 7144) ^= v34 ^ v28 ^ 0xCD93BBA4B37428ACLL ^ ((v37 | (*(_QWORD *)(v10 + 9528) << 56))
                                                               + 0x296E885DE30DDE28
                                                               - ((2 * (v37 | (*(_QWORD *)(v10 + 9528) << 56))) & 0x52DD10BBC61BBC5CLL));
  v40 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v10 + 9744) + 8 * (v39 ^ (67 * ((v35 ^ a3) < v7)))) - 8);
  *(_DWORD *)(v10 + 9616) = v6 - 1;
  *(_QWORD *)(v10 + 7784) = v9;
  *(_QWORD *)(v10 + 7768) = v31;
  *(_QWORD *)(v10 + 7936) = v29;
  return v40();
}

void sub_100355504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[992] = v3[1205];
  v3[971] = v3[1212];
  v3[973] = v2;
  v3[1206] = a2;
  v3[993] = a2;
  JUMPOUT(0x100354184);
}

uint64_t sub_10035554C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned __int8 v21;
  unsigned int v22;
  int v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  unsigned int v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  BOOL v44;
  int v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  BOOL v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  uint64_t (*v78)(void);

  *(_QWORD *)(v10 + 7944) = v8;
  v11 = 283 * (a8 ^ 0x5ED);
  *(_DWORD *)(v10 + 8792) = a3 - 1;
  *(_DWORD *)(v10 + 9052) = a3 - 1;
  *(_DWORD *)(v10 + 9648) = a3 - 1;
  *(_DWORD *)(v10 + 9504) = a3 - 1;
  *(_DWORD *)(v10 + 9024) = -1087178123;
  *(_DWORD *)(v10 + 8672) = -1087178123;
  *(_QWORD *)(v10 + 7584) = *(_QWORD *)(v10 + 9696);
  *(_QWORD *)(v10 + 7648) = *(_QWORD *)(v10 + 9432);
  *(_QWORD *)(v10 + 7808) = *(_QWORD *)(v10 + 9664);
  *(_QWORD *)(v10 + 7640) = *(_QWORD *)(v10 + 9640);
  *(_QWORD *)(v10 + 7776) = *(_QWORD *)(v10 + 9568);
  *(_QWORD *)(v10 + 7712) = *(_QWORD *)(v10 + 9448);
  *(_QWORD *)(v10 + 7632) = *(_QWORD *)(v10 + 9408);
  *(_QWORD *)(v10 + 7576) = *(_QWORD *)(v10 + 9600);
  *(_QWORD *)(v10 + 7856) = a2;
  *(_QWORD *)(v10 + 7688) = *(_QWORD *)(v10 + 9496);
  *(_QWORD *)(v10 + 7664) = v9;
  *(_QWORD *)(v10 + 7624) = *(_QWORD *)(v10 + 9528);
  *(_QWORD *)(v10 + 7920) = *(_QWORD *)(v10 + 9584);
  v12 = *(_QWORD *)(v10 + 7208);
  v13 = *(_QWORD *)(v10 + 9728);
  *(_QWORD *)(v10 + 8872) = (v11 + 6258);
  v14 = (((v13 << 23) ^ 0x7E02AEE9D0800000)
       - 0x35306D03FAA22C5FLL
       - ((((v13 << 23) ^ 0x7E02AEE9D0800000) << (v11 + 95)) & 0x959F25F80A000000)) ^ v13;
  *(_QWORD *)(v10 + 9696) = (v11 + 2410) | 0x2A1u;
  v15 = *(_QWORD *)(v10 + 7152);
  v16 = v15 ^ 0xFFFFFFD8;
  v17 = (v14 >> (((v11 + 106) | 0xA1) ^ 0xBCu)) ^ (v15 >> 26) ^ 0x298C69CBDLL;
  v18 = v14 ^ v15 ^ (v17 + 0xA631A72F7352DD8 - ((2 * v17) & 0x34E5EE6A5BB0));
  v19 = (((v15 << 23) ^ 0x397B9A96EC000000)
       + 0xA631A72F7352DD8
       - ((2 * ((v15 << 23) ^ 0x397B9A96EC000000)) & 0x14C634E5EE000000)) ^ v15;
  v20 = v19 ^ (v19 >> 17) ^ v18 ^ (v18 >> 26);
  LODWORD(v15) = v18 + v20;
  v21 = v18 + v20 + 55;
  LODWORD(v18) = ((v18 ^ (v18 << 23)) >> 17) ^ v18 ^ ((_DWORD)v18 << 23);
  v22 = 5 * (*(unsigned __int8 *)(*(_QWORD *)(v10 + 7848) + (v21 ^ 0x34)) ^ 0xFFFFFFB3);
  v23 = v20 ^ 0x5079F684 ^ (v20 >> 26) ^ (v18 + 1350170244 - ((2 * v18) & 0xA0F3ED08));
  v24 = (((*(_QWORD *)(v10 + 7144) << 23) ^ 0x2EF186EF14000000)
       + 0x296E885DE30DDE28
       - ((2 * ((*(_QWORD *)(v10 + 7144) << 23) ^ 0x2EF186EF14000000)) & 0x52DD10BBC6000000)) ^ *(_QWORD *)(v10 + 7144);
  v25 = v15 + v16 + *(_QWORD *)(v10 + 7824) + v23 + v22;
  v26 = ((v24 ^ (v12 >> 26) ^ (v24 >> 17) ^ 0x22C47CB770)
       - 0x74EE0D223EE6F948
       - 2
       * ((v24 ^ (v12 >> 26) ^ (v24 >> 17) ^ 0x22C47CB770) & 0xB11F2DDC11906BFLL ^ (v24 ^ (v12 >> 26) ^ (v24 >> 17)) & 7)) ^ v12;
  v27 = (((v12 << 23) ^ 0x6EE08C835C000000)
       - 0x74EE0D223EE6F948
       - ((2 * ((v12 << 23) ^ 0x6EE08C835C000000)) & 0x1623E5BB82000000)) ^ v12;
  v28 = v27 ^ (v27 >> 17) ^ v26 ^ (v26 >> 26);
  v29 = (v28 + v26);
  LODWORD(v12) = v26 + (v12 ^ 0xFFFFFFB8) + (*(_DWORD *)(v10 + 7544) ^ 0xFFFFFFE1);
  *(_QWORD *)(v10 + 9432) = v29;
  v30 = (v12 + v29);
  *(_QWORD *)(v10 + 7208) = v28 ^ 0x8B11F2DDC11906B8;
  v31 = v28 ^ 0x8B11F2DDC11906B8 ^ v26 ^ (v26 << 23) ^ (((v28 >> 26) ^ ((v26 ^ (v26 << 23)) >> 17))
                                                        - 0x74EE0D223EE6F948
                                                        - ((2 * ((v28 >> 26) ^ ((v26 ^ (v26 << 23)) >> 17))) & 0xE5BB82320D70));
  v32 = ((v20 << 23) - 0x1B02CC06AF86097CLL - ((v20 << 24) & 0xC9FA67F2A0000000)) ^ v20 ^ 0xE4FD33F95079F684;
  v33 = ((v32 ^ (v32 >> 17) ^ (v31 >> 26))
       - 0x35306D03FAA22C5FLL
       - ((2 * (v32 ^ (v32 >> 17) ^ (v31 >> 26))) & 0x959F25F80ABBA742)) ^ v31 ^ 0xCACF92FC055DD3A1;
  *(_QWORD *)(v10 + 7160) = v30;
  v34 = v30 + v31 + v28;
  v35 = ((v31 << 23) - 0x35306D03FAA22C5FLL - ((v31 << 24) & 0x959F25F80A000000)) ^ v31 ^ 0xCACF92FC055DD3A1;
  v36 = 8388609 * v33 - (((_DWORD)v33 << 24) & (2 * v33));
  v37 = v35 ^ (v35 >> 17);
  v38 = v37 ^ v33 ^ (v33 >> 26);
  LODWORD(v32) = 1243665147 * v23 + 84008871 - ((71411190 * v23) & 0xA03BF4E);
  v39 = (-189554941 * v28) ^ 0x501DFA7 ^ (v38 + v33);
  v40 = (802035273 * (v30 + v31 + v28)) ^ (v33 + v31) ^ (802035273
                                                                                         * v25);
  *(_DWORD *)(v10 + 8356) = v39;
  v41 = v39 ^ (-189554941 * v20);
  *(_DWORD *)(v10 + 9584) = v32;
  LODWORD(v32) = (1243665147 * v31) ^ v32 ^ ((v36 ^ (v36 >> 17) ^ v38 ^ (v38 >> 26)) + v38);
  LODWORD(v38) = ((2 * (v32 & 7 ^ 0x3310B7)) & 0x420148) - (v32 & 7 ^ 0x3310B7) + 1075752979;
  v42 = v38 ^ 0xF1F40DF2;
  *(_DWORD *)(v10 + 8376) = v32;
  *(_DWORD *)(v10 + 9192) = v32 & 0xFFFFFFF8 ^ 0xD2943C65;
  *(_DWORD *)(v10 + 9328) = (v38 ^ 0xBFD25F5C) + 84008871 - ((2 * (v38 ^ 0xBFD25F5C) + 18) & 0xA03BF4E) + 9;
  v43 = ((v38 ^ 0x5C) - 89 - ((2 * (v38 ^ 0x5C) + 18) & 0x4E) + 9) & 7 ^ 0x3F5227;
  *(_DWORD *)(v10 + 9728) = v43 & 0x200027;
  *(_DWORD *)(v10 + 7832) = v42;
  v44 = v42 == -1311134383;
  if (v42 == -1311134383)
    v45 = 0;
  else
    v45 = -1;
  v46 = (v45 << (v43 & 7));
  *(_DWORD *)(v10 + 8828) = 16843009 * (v45 << (v43 & 7))
                          + 84008871
                          - ((33686018 * (v45 << (v43 & 7))) & 0xA03BF4E);
  *(_DWORD *)(v10 + 8496) = v40;
  *(_DWORD *)(v10 + 8920) = 16843009 * (v40 & 0x7F) + 84008871 - ((33686018 * (v40 & 0x7F)) & 0xA03BF4E);
  v47 = ((2 * (v40 & 0xFFFFFF80 ^ 0x25481844)) & 0xFA092588) - (v40 & 0xFFFFFF80 ^ 0x25481844);
  *(_DWORD *)(v10 + 8752) = v41;
  v48 = (v40 | 0xA75E6F88) ^ v41;
  v49 = v20 << ((v31 & 0x17 ^ 0x17) + (v31 & 0x17));
  v50 = (v49 - 0x1B02CC06AF86097CLL - ((2 * v49) & 0xC9FA67F2A0F3ED08)) ^ v20 ^ 0xE4FD33F95079F684;
  v51 = ((v50 ^ (v31 >> 26) ^ (v50 >> 17))
       - 0x35306D03FAA22C5FLL
       - ((2 * (v50 ^ (v31 >> 26) ^ (v50 >> 17))) & 0x959F25F80ABBA742)) ^ v31 ^ 0xCACF92FC055DD3A1;
  *(_DWORD *)(v10 + 9664) = v48 ^ 0xE40EC2A3;
  v52 = (((BYTE1(v48) ^ 0xDE ^ BYTE2(v48)) - ((2 * (BYTE1(v48) ^ 0xDE ^ BYTE2(v48))) & 8) + 4) ^ v48 ^ 0xA3) ^ HIBYTE(v48);
  *(_DWORD *)(v10 + 9568) = v52;
  *(_DWORD *)(v10 + 9736) = 16843009 * (v52 ^ 0x6F) + 84008871 - ((33686018 * (v52 ^ 0x6F)) & 0xA03BF4E);
  v53 = v37 ^ v51 ^ (v51 >> 26);
  v54 = __ROR8__(__ROR8__(v51, 30) & 0xFFFFFFFC000007FFLL ^ __ROR8__(v51, 53) ^ 0xA45896E8DD9647BFLL, 11);
  v55 = v54 ^ (v54 >> 17) ^ 0x8A2373E3AE786E31;
  *(_QWORD *)(v10 + 7656) = v55;
  v56 = ((((v53 >> 26) ^ v53) + 921350772 - ((2 * ((v53 >> 26) ^ v53)) & 0x6DD564E8)) ^ v55) + v53;
  v57 = (v56 >> 2) | ((v56 & 3) << 6);
  v58 = ((((v51 + v31) ^ 0x5C608EFC) & 0x4D59EF32) - ((2 * ((v51 + v31) ^ 0x5C608EFC)) & 0x80B2D860) - 218534796) ^ ((v51 + v31) ^ 0x5C608EFC) & 0x4D59EFCD;
  LOBYTE(v57) = *(_BYTE *)(*(_QWORD *)(v10 + 9704) + (v57 ^ 0xA0)) - (((v57 ^ 0xA7) + 46) ^ v57 ^ 0xA7);
  LODWORD(v50) = (v20 >> 6) - 937747949 - ((2 * (v20 >> 6)) & 0x90363426);
  *(_DWORD *)(v10 + 9056) = v50;
  v59 = v50 ^ v28 ^ (((v53 + v51) ^ v20)
                   - 937747949
                   - ((2 * ((v53 + v51) ^ v20)) & 0x90363426));
  LODWORD(v57) = v23 ^ 0x501DFA7 ^ ((v57 ^ 0x1B) - 105);
  *(_DWORD *)(v10 + 9320) = v58;
  *(_DWORD *)(v10 + 9408) = v34;
  v60 = (v25 ^ (v25 >> 6)) ^ v58 ^ (v34 ^ ((v30 + v31 + v28) >> 6));
  v61 = 16843009 * (v60 & 0x7F ^ 8) + 1506519520 - ((33686018 * (v60 & 0x7F ^ 8)) & 0xB39753C0);
  *(_DWORD *)(v10 + 8736) = v57;
  LODWORD(v55) = v57 ^ (v23 << 8);
  *(_DWORD *)(v10 + 9448) = v55;
  LODWORD(v51) = v55 ^ v31;
  *(_DWORD *)(v10 + 9368) = v55 ^ v31 ^ ((_DWORD)v31 << 8);
  v62 = (-2
       - ((~((((v51 ^ 0xFAFE2058) + 1) ^ 0x849FB6CF) & 0xD3A99EC4) | 0xC3CEF77B)
        + ((((v51 ^ 0xFAFE2058) + 1) ^ 0x849FB6CF) & 0xC3889640 | 0x3C310884))) ^ (((v51 ^ 0xFAFE2058) + 1) ^ 0x849FB6CF) & 0xD3A99EC3;
  *(_DWORD *)(v10 + 9392) = v55 ^ v31;
  v63 = ((v51 & 7 ^ 5) - 2 * ((v51 & 7 ^ 5) & 1) - 756907367) ^ 0xF1868A8B;
  v64 = 1091366129 - (v63 | 0x410CECF1) + (v63 | 0xBEF3130E);
  *(_QWORD *)(v10 + 7616) = v46;
  if (v44)
    v65 = 0;
  else
    v65 = ~(_BYTE)v46;
  v66 = v64 ^ 0x5953A35;
  *(_DWORD *)(v10 + 7888) = v66;
  v67 = v66 == -1744690901;
  if (v66 == -1744690901)
    v68 = 0;
  else
    v68 = -1;
  v69 = v68 << (v62 ^ 0x7C);
  v70 = 84008871 - 385875968 * v69 - ((v69 << 25) & 0xA000000);
  v71 = v59 ^ ((v28 >> 6) + 84008871 - ((2 * (v28 >> 6)) & 0xA03BF4E));
  *(_DWORD *)(v10 + 7560) = v70;
  v72 = 16843009 * v69 + 84008871 - ((33686018 * v69) & 0xA03BF4E);
  v73 = (v60 & 0x58A19077 ^ 0xF7FF6F88) - 678042683 + ((2 * (v60 & 0x58A19077 ^ 0xF7FF6F88)) & 0xA103008A ^ 0xF1D738FF);
  v74 = ~(_BYTE)v69;
  if (v67)
    v74 = 0;
  *(_DWORD *)(v10 + 9120) = v73 + 1;
  v75 = (v73 + 1) ^ v71;
  v76 = HIBYTE(v75) ^ 0xD2;
  *(_DWORD *)(v10 + 9176) = v76;
  *(_DWORD *)(v10 + 8912) = v75 ^ 0xD795E3C5;
  v77 = *(_DWORD *)(v10 + 8496);
  *(_DWORD *)(v10 + 9304) = v77 & v65 ^ *(_DWORD *)(v10 + 8828);
  *(_DWORD *)(v10 + 9640) = (v47 - 2097451728) ^ 0x4AB603F8;
  *(_QWORD *)(v10 + 7152) = (v53 >> 26) ^ 0xA631A72F7352DD8;
  *(_DWORD *)(v10 + 9528) = v60 ^ 0xF7F8B32F;
  *(_DWORD *)(v10 + 7964) = v71 ^ 0x79C2B742;
  *(_DWORD *)(v10 + 7880) = v62 ^ 0x293ACB5F;
  *(_DWORD *)(v10 + 8640) = ((((v60 & 0x80 ^ 0xDFEFF7BF) - 1219428867) & 0x8700A0A8 ^ 0x80A0A80)
                           + (((v60 & 0x80 ^ 0xDFEFF7BF) - 1219428867) ^ 0xB704A13C)
                           - ((((v60 & 0x80 ^ 0xDFEFF7BF) - 1219428867) ^ 0xB704A13C) & 0xFFC0FFC)) ^ 0x103800DC;
  *(_DWORD *)(v10 + 9496) = v72 ^ v74 & (v60 ^ 0x88);
  *(_DWORD *)(v10 + 8236) = v72 ^ 0x3F0A4ACA ^ (((v70 ^ 0x501DFA7) & (v71 ^ 0x5000000))
                                              + 84008871
                                              - ((2 * ((v70 ^ 0x501DFA7) & (v71 ^ 0x5000000))) & 0xA03BF4E));
  v78 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v10 + 9744)
                                      + 8 * ((6455 * (127 * (v76 | 0xC) != 0)) ^ v11))
                          - 4);
  *(_QWORD *)(v10 + 7744) = (char *)*(&off_1004ECA20 + (v11 ^ 0x75F)) - 8;
  *(_QWORD *)(v10 + 7096) = (char *)*(&off_1004ECA20 + (v11 ^ 0x6CB)) - 8;
  *(_QWORD *)(v10 + 7736) = *(&off_1004ECA20 + v11 - 1365);
  *(_QWORD *)(v10 + 7728) = (char *)*(&off_1004ECA20 + (v11 ^ 0x4AC)) - 8;
  *(_QWORD *)(v10 + 7680) = (char *)*(&off_1004ECA20 + v11 - 689) - 8;
  *(_QWORD *)(v10 + 7928) = (char *)*(&off_1004ECA20 + v11 - 1553) - 4;
  *(_QWORD *)(v10 + 7608) = (char *)*(&off_1004ECA20 + (v11 ^ 0x79D)) - 4;
  *(_QWORD *)(v10 + 7600) = (char *)*(&off_1004ECA20 + (v11 ^ 0x45D)) - 12;
  *(_QWORD *)(v10 + 7672) = (char *)*(&off_1004ECA20 + v11 - 1079) - 8;
  *(_QWORD *)(v10 + 7816) = (char *)*(&off_1004ECA20 + v11 - 993) - 8;
  *(_QWORD *)(v10 + 7720) = (char *)*(&off_1004ECA20 + v11 - 550) - 4;
  *(_QWORD *)(v10 + 7872) = (char *)*(&off_1004ECA20 + v11 - 763) - 4;
  *(_QWORD *)(v10 + 7088) = (char *)*(&off_1004ECA20 + v11 - 1023) - 12;
  *(_QWORD *)(v10 + 7592) = (char *)*(&off_1004ECA20 + (v11 ^ 0x5BD)) - 4;
  *(_QWORD *)(v10 + 7080) = (char *)*(&off_1004ECA20 + v11 - 964) - 12;
  *(_QWORD *)(v10 + 6952) = v53;
  *(_QWORD *)(v10 + 7144) = v53 ^ 0x296E885DE30DDE28;
  *(_DWORD *)(v10 + 8040) = 2 * v61;
  *(_DWORD *)(v10 + 7952) = v61;
  *(_DWORD *)(v10 + 8132) = v77 ^ 0x18B50371;
  return v78();
}

uint64_t sub_100356270()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned __int8 *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;

  v7 = (*(_QWORD *)(v2 + 9696) - 1066611438) & 0x3F932B64;
  v8 = v0 ^ 0x59CBA9E0;
  v9 = v0;
  v10 = *(_DWORD *)(v2 + 9736);
  *(_DWORD *)(v2 + 9600) = v3;
  *(_DWORD *)(v2 + 9616) = v7;
  v11 = v0 >> (v7 - 33);
  v12 = *(_DWORD *)(v2 + 7880) ^ 0xEAF43C23;
  v13 = 35168879 * v12 - 2022246796 - ((70337758 * v12) & 0xEEDECE8);
  *(_DWORD *)(v2 + 9728) = v6 ^ v1;
  v14 = *(_DWORD *)(v2 + 8920);
  v15 = 35168879 * (v6 ^ v1) - 2022246796 - ((70337758 * (v6 ^ v1)) & 0xEEDECE8);
  *(_DWORD *)(v2 + 9408) = v5;
  v16 = v10;
  *(_DWORD *)(v2 + 9736) = v10;
  v17 = v9 ^ v11 ^ 0x57F3037B ^ (((8 * v9) ^ (v14 >> 3) ^ 0xCEFD74F4)
                               + v4
                               - ((2 * ((8 * v9) ^ (v14 >> 3) ^ 0xCEFD74F4)) & 0xA03BF4E));
  v18 = (v17 + v4 - ((2 * v17) & 0xA03BF4E)) ^ (((8 * v14) ^ 0x280EFD38)
                                              + v4
                                              - ((2 * ((8 * v14) ^ 0x280EFD38)) & 0xA03BF40));
  v19 = *(_DWORD *)(v2 + 7832);
  v20 = *(_DWORD *)(v2 + 7888);
  *(_DWORD *)(v2 + 9680) = v20 ^ v19;
  v21 = ((((v20 ^ v19) >> 4) ^ 0x29DB8C7) - 1744690901 - ((2 * (((v20 ^ v19) >> 4) ^ 0x29DB8C7)) & 0x10044256)) ^ v20;
  *(_DWORD *)(v2 + 9584) = (v19 ^ 0x4E2652AE)
                         + (v20 ^ 0x9802212B)
                         + (v19 ^ 0x26E1C891 ^ (v21 - 1311134383 - ((2 * v21) & 0x63B35AA2)));
  v22 = (v6 ^ 0xE74AFC8E) + 1;
  v23 = (((v13 ^ v15 ^ 0x26E1C891)
        - 1656645435 * v22
        + v4
        - ((2 * ((v13 ^ v15 ^ 0x26E1C891) - 1656645435 * v22)) & 0xA03BF4E)) ^ v4)
      - 1656645435 * v12;
  *(_DWORD *)(v2 + 7704) = v10 ^ 0x6A6A6A6A;
  v24 = (2139975797 * ((v5 ^ 0xA0ED0A8) + (v10 ^ 0x6F6BB5CD) + 1)
       - ((253419754 * ((v5 ^ 0xA0ED0A8) + (v10 ^ 0x6F6BB5CD) + 1) + 214487304) & 0xA03BF4E)
       + 1399212075) ^ v10 ^ 0x6A6A6A6A;
  *(_DWORD *)(v2 + 9672) = ((32 * v5) ^ 0xBE25EAE0) + v4 - ((2 * ((32 * v5) ^ 0xBE25EAE0)) & 0xA03BF40);
  v25 = (v24 - 678042683 - ((2 * v24) & 0xAF2BC78A)) ^ (((32 * v16) ^ 0xED76B9A0)
                                                      - 678042683
                                                      - ((2 * ((32 * v16) ^ 0xED76B9A0)) & 0xAF2BC780));
  *(_DWORD *)(v2 + 9656) = v25 - 1087178124 - ((2 * v25) & 0x7E65F4E8);
  *(_DWORD *)(v2 + 9576) = ((v20 >> 8) ^ 0x980221) - 1744690901 - ((2 * ((v20 >> 8) ^ 0x980221)) & 0x44256);
  v26 = v8 + (v14 ^ 0xFAFE2058) + (v9 ^ 0x4E646884 ^ (v18 + 1506519520 - ((2 * v18) & 0xB39753C0))) + 1;
  *(_DWORD *)(v2 + 9592) = v26 - 2102525313 - ((2 * v26) & 0x55C04FE);
  v27 = ((v4 + v23 - ((2 * v23) & 0xA03BF4E)) ^ v4) + v22;
  v28 = *(_DWORD *)(v2 + 8236) ^ 0xC0F5B535;
  v29 = ((v27 + v4 - ((2 * v27) & 0xA03BF4E)) ^ v4) + v12;
  *(_DWORD *)(v2 + 9632) = v29 + v4 - ((2 * v29) & 0xA03BF4E);
  v30 = *(_DWORD *)(v2 + 8640);
  v31 = v30 ^ v9;
  v32 = *(_DWORD *)(v2 + 9368);
  *(_DWORD *)(v2 + 9608) = 168017664;
  v33 = *(_DWORD *)(v2 + 9528);
  v34 = v28 + 505148665 * ((v33 ^ v4) + (v31 ^ 0x40CD056B)) + 505148665;
  v35 = *(_DWORD *)(v2 + 9640);
  v36 = v35 ^ 0xED05768C | v14 ^ 0xA7;
  *(_DWORD *)(v2 + 9720) = v36;
  *(_DWORD *)(v2 + 9696) = (*(_DWORD *)(v2 + 9600) ^ 0xFAFE2058)
                         + 1961205447 * *(_DWORD *)(v2 + 8496)
                         + ((-2018517544 - 1961205447 * v36 - ((104120946 * v36) & 0xF5FBBB0)) ^ 0x87AFDDD8);
  LOBYTE(v24) = *(_BYTE *)(*(_QWORD *)(v2 + 8136)
                         + ((-89 * (v9 ^ 0xE0)) ^ (v14 & 0x77 ^ 0x50 | v14 & 0x77 ^ 0x27) ^ 0x21)) ^ 0xE1;
  v37 = ((v34 + v4 - ((2 * v34) & 0xA03BF4E)) ^ v4)
      + (v33 ^ 0xFAFE2058)
      + 1
      + (v30 ^ 0xBF32FA74 ^ ((v24 >> 6) | (4 * v24)));
  *(_DWORD *)(v2 + 9688) = (v14 ^ 0xED05D1 ^ (v35 >> 8))
                         - 318409076
                         - ((2 * (v14 ^ 0xED05D1 ^ (v35 >> 8))) & 0xAED18);
  v38 = ((v37 + v4 - ((2 * v37) & 0xA03BF4E)) ^ v4)
      + ((v4 + 1270090523 * (v33 ^ v4) - ((124261942 * (v33 ^ v4)) & 0xA03BF4E)) ^ v4);
  v39 = *(_DWORD *)(v2 + 9584) + 1;
  *(_DWORD *)(v2 + 9600) = ((1270090523 * (v31 ^ 0xBF32FA94)
                           - 519103228
                           - ((-1754786250 * (v31 ^ 0xBF32FA94)) & 0xC21E3A08)) ^ 0x1EF0E2FB)
                         + ((v38 + v4 - ((2 * v38) & 0xA03BF4E)) ^ v4);
  v40 = *(_DWORD *)(v2 + 9680) ^ (v19 >> 8) ^ *(_DWORD *)(v2 + 9576) ^ 0xB16874FC ^ v39;
  *(_DWORD *)(v2 + 9680) = ((8 * v32) ^ 0x280EFD38) + v4 - ((2 * ((8 * v32) ^ 0x280EFD38)) & 0xA03BF40);
  v41 = (v40 - 277958891 + ~((2 * v40 + 164839558) & 0x150A1DA2)) ^ 0xA850ED1;
  v42 = v41 - ((2 * v41 + 372031354) & 0x150A1DA2);
  v43 = (*(_DWORD *)(v2 + 9592) ^ 0x82AE027F)
      * ((*(_QWORD *)(v2 + 6952) & 0x2FCCB9AD ^ 0x2FCCB9AD) + (*(_QWORD *)(v2 + 6952) & 0x2FCCB9AD));
  v44 = (v43 - 519103228 - ((2 * v43) & 0xC21E3A08)) ^ *(_DWORD *)(v2 + 9664);
  v45 = *(_DWORD *)(v2 + 9672) ^ *(_DWORD *)(v2 + 9736) ^ 0xD558901E ^ *(_DWORD *)(v2 + 9656);
  *(_DWORD *)(v2 + 9736) = v44 + v4 - ((2 * v44) & 0xA03BF4E);
  v46 = *(unsigned __int8 **)(v2 + 8560);
  v47 = -89 * v46[3082];
  v48 = v46[3080];
  v49 = v46[3081];
  LOBYTE(v37) = v47 ^ 6;
  v50 = v46[3084];
  v51 = v46[3083];
  v52 = ((v47 ^ 0x63) + (v47 ^ 6) + *(unsigned __int8 *)(*(_QWORD *)(v2 + 8056) + (v47 ^ 0x15))) ^ 0xFFFFFFE5;
  v53 = (v52 >> 6) | (4 * v52);
  LOBYTE(v52) = v46[3089] + (v37 & 0x14 ^ 4 | (v37 ^ 0x13) & 0x14) + 35;
  *(_QWORD *)(v2 + 7160) = v53;
  LOBYTE(v33) = v46[3093] + 55;
  v54 = *(_QWORD *)(v2 + 7912);
  v55 = (v46[3091] >> 2) | (v46[3091] << 6);
  v56 = 5 * (*(unsigned __int8 *)(v54 + (v52 ^ 0x30)) ^ 0xFFFFFFDF);
  v57 = v56 - 16 * (v56 >> 3) + 120;
  v58 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 9704) + (((v46[3091] >> 2) | (v46[3091] << 6)) ^ 0xA0))
      - (((v55 ^ 0xFFFFFFA7) + 46) ^ v55 ^ 0xFFFFFFA7);
  *(_QWORD *)(v2 + 7768) = v51;
  v59 = (0x6A971757D83DA9B9 * (0xB6ADA84DF2D95317 - v53)) ^ v51;
  v60 = 5 * (*(unsigned __int8 *)(v54 + (v33 ^ 0x30)) ^ 0xFFFFFFDF);
  v61 = (5 * (*(_BYTE *)(v54 + (v33 ^ 0x30)) ^ 0xDF));
  *(_QWORD *)(v2 + 7064) = v57;
  v62 = v57 ^ 0x78u;
  *(_QWORD *)(v2 + 9664) = v61;
  *(_QWORD *)(v2 + 9656) = 0xEBE175F07F29A865 * v59;
  *(_QWORD *)(v2 + 7632) = v50;
  *(_QWORD *)(v2 + 9672) = v62;
  *(_QWORD *)(v2 + 7648) = v48;
  *(_QWORD *)(v2 + 7640) = v49;
  *(_QWORD *)(v2 + 7536) = (v58 ^ 0x1B) - 105;
  v63 = ((v58 ^ 0x1B) - 105);
  *(_QWORD *)(v2 + 9632) = v63;
  v64 = -v63
      - 0x1A610916362696F9
      * ((0x9827543B9599FAA3
        * ((0xA5BDEC863FCFB315
          * ((0x115B772089875D99 * ((0x5EC4011B4E6281C3 * (v61 ^ (0xEBE175F07F29A865 * v59))) ^ v50)) ^ v62)) ^ v48)) ^ v49);
  v65 = v46[3086];
  *(_QWORD *)(v2 + 7808) = v65;
  v66 = v65 + 0x3ECFC13B86A3AD53 * v64;
  v67 = v46[3094];
  *(_QWORD *)(v2 + 7920) = v67;
  v68 = v67 + 0x1420766D02EAA28FLL * v66;
  v69 = v46[3079];
  *(_QWORD *)(v2 + 7936) = v69;
  v70 = v69 + 0x2EDFEB71A9B335B9 * v68;
  v71 = v46[3085];
  *(_QWORD *)(v2 + 7624) = v71;
  v72 = 0x37E3D6F65B1E8395 * v70 - v71;
  v73 = v46[3088];
  *(_QWORD *)(v2 + 7664) = v73;
  v74 = v73 + 0x3BD732E6AF717095 * v72;
  v75 = v46[3092];
  *(_QWORD *)(v2 + 7568) = v75;
  v76 = v75 + 0x4CC9F82598CE60D3 * v74;
  v77 = v46[3087];
  *(_QWORD *)(v2 + 7616) = v77;
  v78 = 0x5CA90BEAF5FF36D1 * (v77 + 0x711FEDAE74BAB401 * v76);
  v79 = v46[3090];
  *(_QWORD *)(v2 + 7784) = v79;
  *(_QWORD *)(v2 + 9728) = 0x1473F4056DBC1677 * (v78 ^ v79)
                         - 0x35306D03FAA22C5FLL
                         - ((0x28E7E80ADB782CEELL * (v78 ^ v79)) & 0x959F25F80ABBA742);
  LODWORD(v79) = *(_DWORD *)(v2 + 9616) - 16;
  *(_DWORD *)(v2 + 8188) = *(_DWORD *)(v2 + 9408) ^ 0x4AC3D523;
  *(_DWORD *)(v2 + 9616) = (v42 + 630943374) >> 2;
  *(_DWORD *)(v2 + 9608) = (261714778 * v45) & 0xA03BF4E;
  *(_DWORD *)(v2 + 9600) = v4 + 801946029 * v45;
  *(_QWORD *)(v2 + 7776) = v60;
  v80 = *(_QWORD *)(v2 + 12304);
  v81 = *(_QWORD *)(v2 + 12296);
  *(_QWORD *)(v2 + 7168) = v80;
  v82 = v80 - 0x25ED94A3D792CC43;
  v83 = ((((_DWORD)v79 - 2316) | 0x131) + 84008046) ^ 0x501DFA7u;
  LODWORD(v80) = ((*(unsigned __int8 *)(v81 + v83) >> 2) | (*(unsigned __int8 *)(v81 + v83) << 6)) ^ 0xFFFFFFA7;
  v84 = *(_QWORD *)(v2 + 9728);
  *(_BYTE *)(v82 + v83) = (((*(_BYTE *)(*(_QWORD *)(v2 + 9704) + (((v80 & 7 ^ 7) + (v80 & 7)) ^ v80))
                           - ((v80 + 46) ^ v80)) ^ 0x1B)
                         - 105) ^ v84 ^ 0x61;
  LODWORD(v57) = (((_DWORD)v83 + 84008871 - ((2 * (_DWORD)v83 + 2) & 0xA03BF4E) + 1) ^ 0x501DFA7u) < *(_DWORD *)(v2 + 9624);
  *((_QWORD *)&v85 + 1) = (v83 - ((2 * (_DWORD)v83) & 0xABBA742) + 0x4ACF92FC055DD3A1) ^ v84;
  *(_QWORD *)&v85 = ~v84;
  *(_QWORD *)(v2 + 9728) = (v85 >> 63) - 0x35306D03FAA22C5FLL - ((2 * (v85 >> 63)) & 0x959F25F80ABBA742);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * (int)(((16 * v57) | (32 * v57)) ^ v79)))();
}

uint64_t sub_1003562D0(int a1, int a2, unsigned __int8 a3, uint64_t a4, int a5, int a6)
{
  unsigned __int8 v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unint64_t v53;
  int v54;
  unint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unint64_t v68;
  int v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  int v78;
  unint64_t v79;
  int v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  uint64_t v154;
  unint64_t v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unint64_t v160;
  int v161;
  uint64_t v162;
  int v163;
  unsigned int v164;
  uint64_t v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unint64_t v173;
  unint64_t v174;
  int v175;
  int v176;
  int v177;
  unint64_t v178;
  unint64_t v179;
  char v180;
  int v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unsigned int v185;
  int v186;
  unint64_t v187;
  uint64_t v188;
  int v189;
  int v190;
  int v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  unsigned int v199;
  uint64_t v200;
  unint64_t v201;
  int v202;
  unsigned int v203;
  unint64_t v204;
  int v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  unint64_t v210;
  int v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  int v215;
  unsigned int v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  int v220;
  uint64_t v221;
  int v222;
  unint64_t v223;
  unsigned int v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  int v230;
  unsigned int v231;
  unint64_t v232;
  unint64_t v233;
  unsigned int v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  int v238;
  unsigned int v239;
  uint64_t v240;
  unint64_t v241;
  int v242;
  int v243;
  int v244;
  uint64_t v245;
  unint64_t v246;
  int v247;
  unint64_t v248;
  uint64_t v249;
  int v250;
  int v251;
  uint64_t v252;
  unint64_t v253;
  unint64_t v254;
  int v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  unint64_t v259;
  int v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  int v265;
  unint64_t v266;
  int v267;
  unint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  unint64_t v277;
  unint64_t v278;
  unint64_t v279;
  uint64_t v280;
  unint64_t v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  unint64_t v289;
  unint64_t v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  unint64_t v294;
  unint64_t v295;
  unint64_t v296;
  int v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  unint64_t v301;
  unint64_t v302;
  unint64_t v303;
  unint64_t v304;
  unint64_t v305;
  int v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  unint64_t v311;
  uint64_t v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  unint64_t v318;
  int v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  int v323;
  unint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  unint64_t v328;
  int v329;
  int v330;
  uint64_t v331;
  int v332;
  int v333;
  int v334;
  unint64_t v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  char v345;
  unint64_t v346;
  int v347;
  unint64_t v348;
  uint64_t v349;
  int v350;
  unsigned int v351;
  int v352;
  uint64_t v353;
  int v354;
  unsigned int v355;
  int v356;
  int v357;
  unsigned int v358;
  char v359;
  int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  int v365;
  unsigned int v366;
  int v367;
  uint64_t v368;
  int v369;
  int v370;
  unint64_t v371;
  uint64_t v372;
  int v373;
  int v374;
  int v375;
  unint64_t v376;
  uint64_t v377;
  int v378;
  int v379;
  unsigned int v380;
  unint64_t v381;
  uint64_t v382;
  uint64_t v383;
  int v384;
  int v385;
  uint64_t v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  unint64_t v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  unint64_t v417;
  int v418;
  int v419;
  int v420;
  int v421;
  unint64_t v422;
  int v423;
  int v424;
  uint64_t v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  unsigned __int8 v460;
  unsigned int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  unsigned int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  BOOL v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  int v500;
  int v501;
  int v502;
  int v503;
  unsigned int v504;
  unint64_t v505;
  uint64_t v506;
  uint64_t v507;
  unint64_t v508;
  uint64_t v509;
  int v510;
  int v511;
  unint64_t v512;
  unint64_t v513;
  int v514;
  unint64_t v515;
  unsigned int v516;
  unint64_t v517;
  unint64_t v518;
  int v519;
  unsigned int v520;
  uint64_t v521;
  int v522;
  unsigned int v523;
  unsigned int v524;
  char v525;
  unint64_t v526;
  unsigned int v527;
  unint64_t v528;
  int v529;
  unsigned int v530;
  char v531;
  unint64_t v532;
  int v533;
  unint64_t v534;
  unint64_t v535;
  unint64_t v536;
  unsigned int v537;
  unint64_t v538;
  unint64_t v539;
  unint64_t v540;
  int v541;
  unsigned int v542;
  uint64_t v543;
  int v544;
  uint64_t v545;
  int v546;
  int v547;
  unsigned int v548;
  unint64_t v549;
  int v550;
  int v551;
  int v552;
  unint64_t v553;
  uint64_t v554;
  unint64_t v555;
  int v556;
  unint64_t v557;
  uint64_t v558;
  unint64_t v559;
  unint64_t v560;
  int v561;
  unint64_t v562;
  int v563;
  unint64_t v564;
  uint64_t v565;
  unint64_t v566;
  uint64_t v567;
  unsigned int v568;
  unint64_t v569;
  unint64_t v570;
  unint64_t v571;
  uint64_t (*v572)(void);
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;

  *(_DWORD *)(v11 + 9264) = a5;
  *(_DWORD *)(v11 + 9600) = v12;
  *(_DWORD *)(v11 + 9696) = ((v6 ^ 0xE3) - ((2 * (v6 ^ 0xE3)) & 0xEC) + 1032210294) ^ 0x38879895;
  *(_DWORD *)(v11 + 8656) = *(_DWORD *)(v11 + 9568) ^ 0xBF32FA1B;
  *(_DWORD *)(v11 + 9568) = *(_DWORD *)(v11 + 9320) ^ a6;
  v17 = a2 ^ 0x206D50EA;
  *(_DWORD *)(v11 + 9008) = v8 ^ v13;
  *(_DWORD *)(v11 + 8196) = v10 ^ 0xA4BE49BE;
  *(_DWORD *)(v11 + 8748) = (589546705 - (a3 ^ 0xC04472 | 0x2323C4D1) + (a3 ^ 0xC04472 | 0xDCDC3B2E)) ^ 0xD91DA099;
  *(_QWORD *)(v11 + 7216) = (*(_DWORD *)(v11 + 9408) + 39);
  *(_DWORD *)(v11 + 8984) = v7 ^ (v9 + 50);
  *(_DWORD *)(v11 + 8648) = v7 ^ (v13 - 34);
  *(_DWORD *)(v11 + 7904) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 8400) = *(_DWORD *)(v11 + 8952);
  *(_DWORD *)(v11 + 8952) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 9136) = *(_DWORD *)(v11 + 8440);
  *(_DWORD *)(v11 + 8432) = v15;
  *(_DWORD *)(v11 + 9320) = *(_DWORD *)(v11 + 8424);
  *(_DWORD *)(v11 + 8868) = *(_DWORD *)(v11 + 8504);
  *(_DWORD *)(v11 + 8368) = a1;
  v18 = *(_DWORD *)(v11 + 9720);
  v19 = *(_DWORD *)(v11 + 9464);
  *(_DWORD *)(v11 + 8264) = v16;
  v20 = *(_DWORD *)(v11 + 9656);
  v21 = *(_DWORD *)(v11 + 9632);
  v22 = *(_DWORD *)(v11 + 9152);
  v23 = *(_DWORD *)(v11 + 9384);
  v24 = *(_DWORD *)(v11 + 8860);
  v25 = *(_DWORD *)(v11 + 9608);
  v26 = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 9408) = v14;
  v27 = *(_DWORD *)(v11 + 8472);
  *(_DWORD *)(v11 + 9464) = v19;
  *(_DWORD *)(v11 + 8864) = v26;
  *(_DWORD *)(v11 + 9152) = v22;
  *(_DWORD *)(v11 + 9656) = v20;
  *(_DWORD *)(v11 + 8932) = v17;
  *(_DWORD *)(v11 + 8472) = v27;
  v28 = v27 ^ 0xA7u;
  v29 = v17 ^ 0x62u;
  v30 = ((unint64_t)(*(_DWORD *)(v11 + 9272) ^ v13) >> (v27 ^ 0xA7u)) | ((unint64_t)(*(_DWORD *)(v11 + 9272) ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 9720) = v30 + v13 - ((2 * v30) & 0xA03BF4E);
  v31 = ((unint64_t)(*(_DWORD *)(v11 + 8704) ^ v13) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 8704) ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 9632) = v31 + v13 - ((2 * v31) & 0xA03BF4E);
  v32 = *(_DWORD *)(v11 + 9552) ^ 0xA7u;
  v33 = ((unint64_t)(v20 ^ v13) >> v28) + ((unint64_t)(v20 ^ v13) << (*(_DWORD *)(v11 + 9552) ^ 0xA7u));
  *(_DWORD *)(v11 + 9608) = v33 + v13 - ((2 * v33) & 0xA03BF4E);
  v34 = ((unint64_t)(*(_DWORD *)(v11 + 9400) ^ v13) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 9400) ^ v13) << v32);
  v35 = ((unint64_t)(*(_DWORD *)(v11 + 8764) ^ v13) << v32)
      + ((unint64_t)(*(_DWORD *)(v11 + 8764) ^ v13) >> v28);
  *(_DWORD *)(v11 + 9384) = v35 + v13 - ((2 * v35) & 0xA03BF4E);
  v36 = ((unint64_t)(*(_DWORD *)(v11 + 9328) ^ v13) >> v28)
      + ((unint64_t)(*(_DWORD *)(v11 + 9328) ^ v13) << v32);
  *(_DWORD *)(v11 + 9040) = v36 + v13 + 1 + ~((2 * v36) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8992) = v34 + v13 - ((2 * v34) & 0xA03BF4E);
  v37 = ((unint64_t)(*(_DWORD *)(v11 + 8456) ^ 0x18B50371u) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 8456) ^ 0x18B50371u) << v32);
  *(_DWORD *)(v11 + 8880) = v37 + 414516081 - ((2 * v37) & 0x316A06E2);
  v38 = ((unint64_t)(*(_DWORD *)(v11 + 8260) ^ v13) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 8260) ^ v13) << v32);
  *(_DWORD *)(v11 + 8860) = v38 + v13 - ((2 * v38) & 0xA03BF4E);
  v39 = ((unint64_t)(v23 ^ v13) >> v28) | ((unint64_t)(v23 ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 8848) = v39 + v13 - ((2 * v39) & 0xA03BF4E);
  v40 = ((unint64_t)(*(_DWORD *)(v11 + 8904) ^ v13) << v32) ^ ((unint64_t)(*(_DWORD *)(v11 + 8904) ^ v13) >> v28);
  *(_DWORD *)(v11 + 8840) = v40 + v13 - ((2 * v40) & 0xA03BF4E);
  v41 = ((unint64_t)(v18 ^ 0xC81B1A13) >> v28) + ((unint64_t)(v18 ^ 0xC81B1A13) << v32);
  *(_DWORD *)(v11 + 8832) = v41 - 937747949 - ((2 * v41) & 0x90363426);
  v42 = ((unint64_t)(*(_DWORD *)(v11 + 9096) ^ 0xC81B1A13) << v32) ^ ((unint64_t)(*(_DWORD *)(v11 + 9096) ^ 0xC81B1A13) >> v28);
  *(_DWORD *)(v11 + 8784) = v42 - 937747949 - ((2 * v42) & 0x90363426);
  v43 = v25;
  v44 = ((unint64_t)(v25 ^ 0xC81B1A13) >> v28) + ((unint64_t)(v25 ^ 0xC81B1A13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 8720) = v44 - 937747949 - ((2 * v44) & 0x90363426);
  v45 = ((unint64_t)(*(_DWORD *)(v11 + 9568) ^ v13) >> v28) ^ ((unint64_t)(*(_DWORD *)(v11 + 9568) ^ v13) << v32);
  *(_DWORD *)(v11 + 8496) = v45 + v13 - ((2 * v45) & 0xA03BF4E);
  v46 = ((unint64_t)(v24 ^ v13) >> v28) | ((unint64_t)(v24 ^ v13) << v32);
  *(_DWORD *)(v11 + 8424) = v46 + v13 - ((2 * v46) & 0xA03BF4E);
  v47 = ((unint64_t)(*(_DWORD *)(v11 + 8312) ^ 0xE10F1D04) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 8312) ^ 0xE10F1D04) << v32);
  *(_DWORD *)(v11 + 8416) = v47 - 519103228 - ((2 * v47) & 0xC21E3A08);
  v48 = ((unint64_t)(*(_DWORD *)(v11 + 8304) ^ v13) >> v28)
      + ((unint64_t)(*(_DWORD *)(v11 + 8304) ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 8384) = v48 + v13 - ((2 * v48) & 0xA03BF4E);
  v49 = *(_DWORD *)(v11 + 9576);
  v50 = ((unint64_t)(v49 ^ v13) >> v28) | ((unint64_t)(v49 ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 8352) = v50 + v13 - ((2 * v50) & 0xA03BF4E);
  v51 = ((unint64_t)(*(_DWORD *)(v11 + 8768) ^ v13) >> v28)
      + ((unint64_t)(*(_DWORD *)(v11 + 8768) ^ v13) << v32);
  *(_DWORD *)(v11 + 8344) = v51 + v13 - ((2 * v51) & 0xA03BF4E);
  v52 = ((unint64_t)(v26 ^ v13) >> v28) ^ ((unint64_t)(v26 ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 8332) = v52 + v13 - ((2 * v52) & 0xA03BF4E);
  v53 = *(_DWORD *)(v11 + 8984) ^ 0x18B50371u;
  *(_QWORD *)(v11 + 7200) = v53;
  v54 = (v53 >> v28) | (v53 << (v17 ^ 0x62u));
  v55 = *(_DWORD *)(v11 + 8728) ^ v13;
  *(_QWORD *)(v11 + 7192) = v55;
  LODWORD(v53) = (v55 >> v28) | (v55 << v32);
  *(_DWORD *)(v11 + 9728) = v13 + 1;
  *(_DWORD *)(v11 + 8308) = v53 + v13 + 1 + ~((2 * v53) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8032) = v54 + 414516081 - ((2 * v54) & 0x316A06E2);
  v56 = ((unint64_t)(*(_DWORD *)(v11 + 8264) ^ 0x18B50371u) >> v28)
      + ((unint64_t)(*(_DWORD *)(v11 + 8264) ^ 0x18B50371u) << v32);
  *(_DWORD *)(v11 + 7568) = v56 + 414516081 - ((2 * v56) & 0x316A06E2);
  v57 = ((unint64_t)(*(_DWORD *)(v11 + 9424) ^ v13) >> v28) ^ ((unint64_t)(*(_DWORD *)(v11 + 9424) ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7552) = v57 + v13 - ((2 * v57) & 0xA03BF4E);
  v58 = *(_DWORD *)(v11 + 9320);
  v59 = ((unint64_t)(v58 ^ v13) >> v28) | ((unint64_t)(v58 ^ v13) << v32);
  *(_DWORD *)(v11 + 7544) = v59 + v13 - ((2 * v59) & 0xA03BF4E);
  v60 = ((unint64_t)(*(_DWORD *)(v11 + 8952) ^ v13) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 8952) ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7532) = v60 + v13 - ((2 * v60) & 0xA03BF4E);
  v61 = ((unint64_t)(*(_DWORD *)(v11 + 8232) ^ v13) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 8232) ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7520) = v61 + v13 - ((2 * v61) & 0xA03BF4E);
  v62 = ((unint64_t)(*(_DWORD *)(v11 + 8920) ^ v13) >> v28)
      + ((unint64_t)(*(_DWORD *)(v11 + 8920) ^ v13) << v32);
  *(_DWORD *)(v11 + 7512) = v62 + v13 - ((2 * v62) & 0xA03BF4E);
  v63 = ((unint64_t)(*(_DWORD *)(v11 + 9416) ^ v13) >> v28) | ((unint64_t)(*(_DWORD *)(v11 + 9416) ^ v13) << v32);
  *(_DWORD *)(v11 + 7484) = v63 + v13 - ((2 * v63) & 0xA03BF4E);
  v64 = *(_DWORD *)(v11 + 8888);
  v65 = ((unint64_t)(v64 ^ v13) << v32) ^ ((unint64_t)(v64 ^ v13) >> v28);
  *(_DWORD *)(v11 + 7480) = v65 + v13 - ((2 * v65) & 0xA03BF4E);
  v66 = (((unint64_t)(v19 ^ v13) >> v28) + v13 - ((2 * ((unint64_t)(v19 ^ v13) >> v28)) & 0xA03BF4E)) ^ v13 | (((unint64_t)(v19 ^ v13) << (v17 ^ 0x62u)) + v13 - ((2 * ((unint64_t)(v19 ^ v13) << (v17 ^ 0x62u))) & 0xA03BF4E)) ^ v13;
  *(_DWORD *)(v11 + 7476) = v66 + v13 - ((2 * v66) & 0xA03BF4E);
  v67 = ((unint64_t)(*(_DWORD *)(v11 + 8328) ^ v13) >> v28)
      + ((unint64_t)(*(_DWORD *)(v11 + 8328) ^ v13) << v32);
  *(_DWORD *)(v11 + 7464) = v67 + v13 - ((2 * v67) & 0xA03BF4E);
  v68 = *(_DWORD *)(v11 + 8240) ^ 0x82AE027F;
  *(_QWORD *)(v11 + 8504) = v32;
  LODWORD(v68) = (v68 >> v28) | (v68 << v32);
  *(_DWORD *)(v11 + 7424) = v68 - 2102525313 - ((2 * v68) & 0x55C04FE);
  LODWORD(v68) = ((unint64_t)(*(_DWORD *)(v11 + 8760) ^ 0x82AE027F) >> v28)
               + ((unint64_t)(*(_DWORD *)(v11 + 8760) ^ 0x82AE027F) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7456) = v68 - 2102525313 - ((2 * v68) & 0x55C04FE);
  v69 = *(_DWORD *)(v11 + 9376);
  LODWORD(v68) = ((unint64_t)(v69 ^ v13) >> v28) ^ ((unint64_t)(v69 ^ v13) << v32);
  *(_DWORD *)(v11 + 7416) = v68 + v13 - ((2 * v68) & 0xA03BF4E);
  LODWORD(v68) = ((unint64_t)(v22 ^ v13) << v32) | ((unint64_t)(v22 ^ v13) >> v28);
  *(_DWORD *)(v11 + 7408) = v68 + v13 - ((2 * v68) & 0xA03BF4E);
  LODWORD(v68) = ((unint64_t)(*(_DWORD *)(v11 + 8816) ^ 0xE10F1D04) >> v28)
               + ((unint64_t)(*(_DWORD *)(v11 + 8816) ^ 0xE10F1D04) << v32);
  *(_DWORD *)(v11 + 7404) = v68 - 519103228 - ((2 * v68) & 0xC21E3A08);
  LODWORD(v68) = ((unint64_t)(*(_DWORD *)(v11 + 9440) ^ 0x82AE027F) >> v28) ^ ((unint64_t)(*(_DWORD *)(v11 + 9440) ^ 0x82AE027F) << v32);
  *(_DWORD *)(v11 + 7392) = v68 - 2102525313 - ((2 * v68) & 0x55C04FE);
  LODWORD(v70) = __ROR4__(*(_DWORD *)(v11 + 9312) ^ 0x38170C53, 10) ^ 0x3276B314;
  HIDWORD(v70) = v70;
  LODWORD(v53) = v70 >> 22;
  *(_DWORD *)(v11 + 9312) = v53;
  LODWORD(v68) = ((unint64_t)(v53 ^ 0xE7DA833D) >> v28) | ((unint64_t)(v53 ^ 0xE7DA833D) << v32);
  *(_DWORD *)(v11 + 7384) = v68 + v13 - ((2 * v68) & 0xA03BF4E);
  v71 = *(_DWORD *)(v11 + 8628);
  LODWORD(v68) = ((unint64_t)(v71 ^ 0xC81B1A13) >> v28) + ((unint64_t)(v71 ^ 0xC81B1A13) << (v17 ^ 0x62u));
  v72 = *(_DWORD *)(v11 + 9008) ^ v13;
  *(_QWORD *)(v11 + 7184) = v72;
  LODWORD(v53) = (v72 >> v28) ^ (v72 << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7380) = v53 + v13 - ((2 * v53) & 0xA03BF4E);
  *(_DWORD *)(v11 + 7368) = v68 - 937747949 - ((2 * v68) & 0x90363426);
  LODWORD(v68) = ((unint64_t)(*(_DWORD *)(v11 + 8868) ^ v13) << (v17 ^ 0x62u)) | ((unint64_t)(*(_DWORD *)(v11 + 8868) ^ v13) >> v28);
  *(_DWORD *)(v11 + 7364) = v68 + v13 - ((2 * v68) & 0xA03BF4E);
  LODWORD(v68) = ((unint64_t)(*(_DWORD *)(v11 + 8792) ^ v13) >> v28)
               + ((unint64_t)(*(_DWORD *)(v11 + 8792) ^ v13) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7360) = v68 + v13 - ((2 * v68) & 0xA03BF4E);
  LODWORD(v68) = (*(_DWORD *)(v11 + 8236) & 0x123B199C ^ 0x311114) + (*(_DWORD *)(v11 + 8236) & 0x123B199C ^ 0x120A0888);
  LODWORD(v68) = (v68 + v13 + 1 + ~((2 * v68) & 0x8023748)) ^ *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 9520) = v68;
  LODWORD(v68) = ((unint64_t)(v68 ^ 0x123B199C) >> v28) | ((unint64_t)(v68 ^ 0x123B199C) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7352) = v68 + v13 - ((2 * v68) & 0xA03BF4E);
  v73 = *(_DWORD *)(v11 + 9208);
  LODWORD(v68) = ((unint64_t)(v73 ^ v13) << (v17 ^ 0x62u)) + ((unint64_t)(v73 ^ v13) >> v28);
  *(_DWORD *)(v11 + 7344) = v68 + v13 - ((2 * v68) & 0xA03BF4E);
  LODWORD(v32) = *(_DWORD *)(v11 + 8968);
  LODWORD(v68) = ((unint64_t)(v32 ^ 0xE10F1D04) >> v28) | ((unint64_t)(v32 ^ 0xE10F1D04) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7336) = v68 - 519103228 - ((2 * v68) & 0xC21E3A08);
  v74 = v21 ^ 0xE10F1D04;
  *(_QWORD *)(v11 + 7056) = v74;
  LODWORD(v68) = (v74 >> v28) + (v74 << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7320) = v68 - 519103228 - ((2 * v68) & 0xC21E3A08);
  v75 = *(_DWORD *)(v11 + 8648) ^ 0x501DFA7u;
  *(_QWORD *)(v11 + 7048) = v75;
  LODWORD(v68) = (v75 << (v17 ^ 0x62u)) ^ (v75 >> v28);
  *(_DWORD *)(v11 + 7312) = v68 + 84008871 - ((2 * v68) & 0xA03BF4E);
  v76 = *(_DWORD *)(v11 + 8368);
  LODWORD(v68) = ((unint64_t)(v76 ^ 0x18B50371u) >> v28) | ((unint64_t)(v76 ^ 0x18B50371u) << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7304) = v68 + 414516081 - ((2 * v68) & 0x316A06E2);
  LODWORD(v68) = ((unint64_t)(*(_DWORD *)(v11 + 9448) ^ 0x501DFA7u) << (v17 ^ 0x62u)) ^ ((unint64_t)(*(_DWORD *)(v11 + 9448) ^ 0x501DFA7u) >> v28);
  *(_DWORD *)(v11 + 7296) = v68 + 84008871 - ((2 * v68) & 0xA03BF4E);
  v77 = *(_DWORD *)(v11 + 8736);
  LODWORD(v68) = ((unint64_t)(v77 ^ 0x501DFA7u) >> v28) | ((unint64_t)(v77 ^ 0x501DFA7u) << (v17 ^ 0x62u));
  v78 = v69;
  *(_DWORD *)(v11 + 7288) = v68 + 84008871 - ((2 * v68) & 0xA03BF4E);
  v79 = *(_DWORD *)(v11 + 8808) ^ 0x82AE027F;
  *(_QWORD *)(v11 + 8776) = v28;
  *(_QWORD *)(v11 + 7176) = v79;
  LODWORD(v68) = (v79 >> v28) + (v79 << (v17 ^ 0x62u));
  *(_DWORD *)(v11 + 7264) = v68 - 2102525313 - ((2 * v68) & 0x55C04FE);
  v80 = *(_DWORD *)(v11 + 8748);
  *(_QWORD *)(v11 + 8512) = v29;
  LODWORD(v68) = ((unint64_t)(v80 ^ 0x501DFA7u) >> v28) + ((unint64_t)(v80 ^ 0x501DFA7u) << v29);
  *(_DWORD *)(v11 + 7280) = v68 + 84008871 - ((2 * v68) & 0xA03BF4E);
  v81 = *(_DWORD *)(v11 + 9688);
  LODWORD(v68) = ((unint64_t)(v81 ^ 0x501DFA7u) >> v28) + ((unint64_t)(v81 ^ 0x501DFA7u) << v29);
  *(_DWORD *)(v11 + 7272) = v68 + 84008871 - ((2 * v68) & 0xA03BF4E);
  *(_DWORD *)(v11 + 7256) = *(_DWORD *)(v11 + 9176) + (*(_DWORD *)(v11 + 9736) ^ 0x501DFA7);
  LODWORD(v79) = *(_DWORD *)(v11 + 9128);
  HIDWORD(v70) = v79 ^ 0xA7;
  LODWORD(v70) = v79 ^ 0x501DF00;
  v82 = v71;
  *(_DWORD *)(v11 + 7328) = (v70 >> 8) ^ *(_DWORD *)(v11 + 8616);
  v83 = *(_QWORD *)(v11 + 7896);
  LODWORD(v79) = *(_DWORD *)(v83 + 4 * *(_QWORD *)(v11 + 7920));
  *(_DWORD *)(v11 + 7920) = (((_DWORD)v79 << (*(_QWORD *)(v11 + 8872) + 4))
                           + 84008871
                           - (((_DWORD)v79 << 25) & 0xA000000)) ^ 0x501DFA7 | (v79 >> 8);
  v84 = v64;
  v85 = v32;
  v86 = v73;
  v87 = v43;
  v88 = v76;
  *(_QWORD *)(v11 + 7240) = (*(_QWORD *)(v11 + 7856) & 0x10 ^ 0x10) + (*(_QWORD *)(v11 + 7856) & 0x10);
  LODWORD(v79) = *(_DWORD *)(v83 + 4 * *(_QWORD *)(v11 + 7944));
  v89 = v21;
  v90 = *(_DWORD *)(v11 + 8040) & 0x2D2D2D2C ^ 0xB7939796;
  v91 = (*(_DWORD *)(v11 + 8300) ^ 0x98B114AA) & v90;
  v92 = *(_DWORD *)(v11 + 7832) ^ 0x51u;
  *(_QWORD *)(v11 + 8800) = v92;
  v93 = (v91 << v92) + 84008871 - ((2 * (v91 << v92)) & 0xA03BF4E);
  HIDWORD(v70) = *(_DWORD *)(v83 + 4 * *(_QWORD *)(v11 + 7688));
  LODWORD(v70) = HIDWORD(v70);
  LODWORD(v79) = ((v70 >> 24) + 84008871 - ((2 * (v70 >> 24)) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 8712) ^ (((v79 >> 8) + 84008871 - ((2 * (v79 >> 8)) & 0x3BF4E)) ^ 0x501DFA7 | ((_DWORD)v79 << 24));
  v94 = *(_DWORD *)(v11 + 8472);
  v95 = (v94 ^ 0xFAFE2058) + (*(_DWORD *)(v11 + 9264) ^ 0x501DFA7);
  *(_DWORD *)(v11 + 8008) = v95;
  LODWORD(v91) = *(_DWORD *)(v11 + 8980) ^ 0x501DFA7;
  LODWORD(v92) = *(_DWORD *)(v11 + 8576);
  *(_DWORD *)(v11 + 8000) = v92 ^ 0xFAFE2058;
  *(_DWORD *)(v11 + 8576) = v92;
  LODWORD(v79) = v95 + v91 + (v92 ^ 0xFAFE2058) + v79 + 2;
  *(_DWORD *)(v11 + 7248) = v79 + 84008871 - ((2 * v79) & 0xA03BF4E);
  LODWORD(v91) = *(_DWORD *)(v83 + 4 * (*(_DWORD *)(v11 + 7696) ^ 0x52u));
  LODWORD(v91) = *(_DWORD *)(v11 + 9064) ^ WORD1(v91) ^ __ROR4__(*(_DWORD *)(v83+ 4 * *(_QWORD *)(v11 + 7776)), 24) ^ (((_DWORD)v91 << 16)+ 84008871- (((_DWORD)v91 << 17) & 0xA020000));
  LODWORD(v91) = (v91 + 84008871 - ((2 * v91) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 8488);
  LODWORD(v91) = (v91 + 84008871 - ((2 * v91) & 0xA03BF4E)) ^ v92;
  v96 = *(_DWORD *)(v11 + 8936);
  *(_DWORD *)(v11 + 8936) = v96;
  LODWORD(v92) = (v96 ^ 0x501DFA7) + 1;
  *(_DWORD *)(v11 + 7976) = v92;
  v97 = *(_DWORD *)(v11 + 9552);
  v98 = v92 + (v97 ^ 0xFAFE2058) + v91 + 84008871 - ((2 * (v92 + (v97 ^ 0xFAFE2058) + v91)) & 0xA03BF4E);
  if (v94 == 84008871)
    v99 = *(_DWORD *)(v11 + 9272);
  else
    v99 = *(_DWORD *)(v11 + 9720);
  *(_DWORD *)(v11 + 7224) = v99;
  if (v94 == 84008871)
    v100 = *(_DWORD *)(v11 + 8704);
  else
    v100 = *(_DWORD *)(v11 + 9632);
  *(_DWORD *)(v11 + 8160) = v100;
  if (v94 == 84008871)
    v101 = *(_DWORD *)(v11 + 9656);
  else
    v101 = *(_DWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 7488) = v101;
  v102 = *(_DWORD *)(v11 + 9384);
  if (v97 == 84008871)
    v102 = *(_DWORD *)(v11 + 8764);
  *(_DWORD *)(v11 + 7696) = v102;
  if (v97 == 84008871)
    v103 = *(_DWORD *)(v11 + 9328);
  else
    v103 = *(_DWORD *)(v11 + 9040);
  *(_DWORD *)(v11 + 8408) = v103;
  if (v97 == 84008871)
    v104 = *(_DWORD *)(v11 + 9400);
  else
    v104 = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 7452) = v104;
  v105 = *(_DWORD *)(v11 + 8456);
  if (v97 != 84008871)
    v105 = *(_DWORD *)(v11 + 8880);
  *(_DWORD *)(v11 + 7984) = v105;
  v106 = *(_DWORD *)(v11 + 8260);
  if (v97 != 84008871)
    v106 = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 7944) = v106;
  *(_DWORD *)(v11 + 9384) = v23;
  if (v94 != 84008871)
    v23 = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 8024) = v23;
  if (v94 == 84008871)
    v107 = *(_DWORD *)(v11 + 8904);
  else
    v107 = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 8020) = v107;
  *(_DWORD *)(v11 + 9720) = v18;
  if (v94 != 84008871)
    v18 = *(_DWORD *)(v11 + 8832);
  *(_DWORD *)(v11 + 8440) = v18;
  if (v94 == 84008871)
    v108 = *(_DWORD *)(v11 + 9096);
  else
    v108 = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 8712) = v108;
  *(_DWORD *)(v11 + 9608) = v87;
  v109 = *(_DWORD *)(v11 + 8720);
  if (v94 == 84008871)
    v109 = v87;
  *(_DWORD *)(v11 + 8480) = v109;
  v110 = *(_DWORD *)(v11 + 9568);
  if (v94 != 84008871)
    v110 = *(_DWORD *)(v11 + 8496);
  *(_DWORD *)(v11 + 9128) = v110;
  *(_DWORD *)(v11 + 8860) = v24;
  v111 = *(_DWORD *)(v11 + 8424);
  if (v94 == 84008871)
    v111 = v24;
  *(_DWORD *)(v11 + 7500) = v111;
  v112 = *(_DWORD *)(v11 + 8312);
  if (v94 != 84008871)
    v112 = *(_DWORD *)(v11 + 8416);
  *(_DWORD *)(v11 + 7460) = v112;
  v113 = *(_DWORD *)(v11 + 8304);
  if (v94 != 84008871)
    v113 = *(_DWORD *)(v11 + 8384);
  *(_DWORD *)(v11 + 7536) = v113;
  v114 = *(_DWORD *)(v11 + 8352);
  if (v94 == 84008871)
    v114 = v49;
  *(_DWORD *)(v11 + 7992) = v114;
  v115 = *(_DWORD *)(v11 + 8768);
  if (v94 != 84008871)
    v115 = *(_DWORD *)(v11 + 8344);
  *(_DWORD *)(v11 + 7440) = v115;
  v116 = *(_DWORD *)(v11 + 8728);
  if (v94 != 84008871)
    v116 = *(_DWORD *)(v11 + 8308);
  *(_DWORD *)(v11 + 8840) = v116;
  v117 = *(_DWORD *)(v11 + 8332);
  if (v94 == 84008871)
    v117 = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 7448) = v117;
  v118 = *(_DWORD *)(v11 + 8984);
  if (v94 != 84008871)
    v118 = *(_DWORD *)(v11 + 8032);
  *(_DWORD *)(v11 + 8880) = v118;
  v119 = *(_DWORD *)(v11 + 8264);
  if (v94 != 84008871)
    v119 = *(_DWORD *)(v11 + 7568);
  *(_DWORD *)(v11 + 8496) = v119;
  v120 = *(_DWORD *)(v11 + 9424);
  if (v94 != 84008871)
    v120 = *(_DWORD *)(v11 + 7552);
  *(_DWORD *)(v11 + 7552) = v120;
  v121 = *(_DWORD *)(v11 + 7544);
  if (v94 == 84008871)
    v121 = v58;
  *(_DWORD *)(v11 + 8784) = v121;
  v122 = *(_DWORD *)(v11 + 8952);
  if (v94 != 84008871)
    v122 = *(_DWORD *)(v11 + 7532);
  *(_DWORD *)(v11 + 8332) = v122;
  v123 = *(_DWORD *)(v11 + 8232);
  if (v94 != 84008871)
    v123 = *(_DWORD *)(v11 + 7520);
  *(_DWORD *)(v11 + 8616) = v123;
  v124 = *(_DWORD *)(v11 + 8920);
  if (v94 != 84008871)
    v124 = *(_DWORD *)(v11 + 7512);
  *(_DWORD *)(v11 + 7436) = v124;
  v125 = *(_DWORD *)(v11 + 9416);
  if (v94 != 84008871)
    v125 = *(_DWORD *)(v11 + 7484);
  *(_DWORD *)(v11 + 8344) = v125;
  v126 = *(_DWORD *)(v11 + 7480);
  if (v94 == 84008871)
    v126 = v84;
  *(_DWORD *)(v11 + 7432) = v126;
  v127 = *(_DWORD *)(v11 + 7476);
  if (v94 == 84008871)
    v127 = *(_DWORD *)(v11 + 9464);
  *(_DWORD *)(v11 + 8308) = v127;
  v128 = *(_DWORD *)(v11 + 8328);
  if (v94 != 84008871)
    v128 = *(_DWORD *)(v11 + 7464);
  *(_DWORD *)(v11 + 7464) = v128;
  v129 = *(_DWORD *)(v11 + 8240);
  if (v94 != 84008871)
    v129 = *(_DWORD *)(v11 + 7424);
  *(_DWORD *)(v11 + 8384) = v129;
  v130 = *(_DWORD *)(v11 + 8760);
  if (v94 != 84008871)
    v130 = *(_DWORD *)(v11 + 7456);
  *(_DWORD *)(v11 + 8848) = v130;
  v131 = v94;
  if (v94 != 84008871)
    v78 = *(_DWORD *)(v11 + 7416);
  *(_DWORD *)(v11 + 9552) = v97;
  v132 = *(_DWORD *)(v11 + 7408);
  if (v97 == 84008871)
    v132 = *(_DWORD *)(v11 + 9152);
  *(_DWORD *)(v11 + 7480) = v132;
  v133 = *(_DWORD *)(v11 + 8816);
  if (v97 != 84008871)
    v133 = *(_DWORD *)(v11 + 7404);
  *(_DWORD *)(v11 + 7544) = v133;
  v134 = *(_DWORD *)(v11 + 9440);
  if (v97 != 84008871)
    v134 = *(_DWORD *)(v11 + 7392);
  *(_DWORD *)(v11 + 8832) = v134;
  v135 = *(_DWORD *)(v11 + 9312) ^ 0xE2DB5C9A;
  *(_DWORD *)(v11 + 9312) = v135;
  if (v97 == 84008871)
    v136 = v135;
  else
    v136 = *(_DWORD *)(v11 + 7384);
  v137 = *(_DWORD *)(v11 + 8932);
  v138 = *(_DWORD *)(v11 + 9008);
  if (v137 != -762037150)
    v138 = *(_DWORD *)(v11 + 7380);
  *(_DWORD *)(v11 + 8032) = v138;
  v139 = *(_DWORD *)(v11 + 7368);
  if (v137 == -762037150)
    v139 = v82;
  *(_DWORD *)(v11 + 8424) = v139;
  v140 = *(_DWORD *)(v11 + 8868);
  if (v137 != -762037150)
    v140 = *(_DWORD *)(v11 + 7364);
  *(_DWORD *)(v11 + 7512) = v140;
  v141 = *(_DWORD *)(v11 + 8792);
  if (v137 != -762037150)
    v141 = *(_DWORD *)(v11 + 7360);
  *(_DWORD *)(v11 + 8416) = v141;
  v142 = *(_DWORD *)(v11 + 9520) ^ 0x173AC63B;
  *(_DWORD *)(v11 + 9520) = v142;
  if (v137 != -762037150)
    v142 = *(_DWORD *)(v11 + 7352);
  *(_DWORD *)(v11 + 7476) = v142;
  v143 = *(_DWORD *)(v11 + 7344);
  if (v137 == -762037150)
    v143 = v86;
  *(_DWORD *)(v11 + 7484) = v143;
  v144 = *(_DWORD *)(v11 + 7336);
  if (v137 == -762037150)
    v144 = v85;
  *(_DWORD *)(v11 + 7520) = v144;
  *(_DWORD *)(v11 + 9632) = v89;
  v145 = *(_DWORD *)(v11 + 7320);
  if (v137 == -762037150)
    v145 = v89;
  *(_DWORD *)(v11 + 7456) = v145;
  v146 = *(_DWORD *)(v11 + 8648);
  if (v137 != -762037150)
    v146 = *(_DWORD *)(v11 + 7312);
  *(_DWORD *)(v11 + 7568) = v146;
  v147 = *(_DWORD *)(v11 + 7304);
  if (v137 == -762037150)
    v147 = v88;
  *(_DWORD *)(v11 + 7776) = v147;
  v148 = *(_DWORD *)(v11 + 9448);
  if (v137 != -762037150)
    v148 = *(_DWORD *)(v11 + 7296);
  *(_DWORD *)(v11 + 7532) = v148;
  v149 = *(_DWORD *)(v11 + 7288);
  if (v137 == -762037150)
    v149 = v77;
  *(_DWORD *)(v11 + 7424) = v149;
  v150 = *(_DWORD *)(v11 + 8808);
  if (v137 != -762037150)
    v150 = *(_DWORD *)(v11 + 7264);
  *(_DWORD *)(v11 + 7416) = v150;
  if (v137 == -762037150)
    v151 = v80;
  else
    v151 = *(_DWORD *)(v11 + 7280);
  if (v137 == -762037150)
    v152 = v81;
  else
    v152 = *(_DWORD *)(v11 + 7272);
  v153 = *(_DWORD *)(v11 + 8236);
  v154 = *(_DWORD *)(v11 + 7880) ^ 0x23u;
  *(_QWORD *)(v11 + 9040) = v154;
  v155 = (unint64_t)((v153 ^ 0x3F0A0A8A) & v90) >> v154;
  v156 = ((v152 ^ v155 ^ v98) + 84008871 - ((2 * (v152 ^ v155 ^ v98)) & 0xA03BF4E)) ^ v96;
  v157 = (v156 - 762037150 - ((2 * v156) & 0xA52878C4)) ^ v137;
  v158 = *(_DWORD *)(v11 + 9488);
  v159 = (v157 + 1815114494 - ((2 * v157) & 0xD860E5FC)) ^ v158;
  v160 = (v159 + 84008871 - ((2 * v159) & 0xA03BF4E)) ^ v93;
  v161 = *(_DWORD *)(v11 + 8196) ^ 0x3F092D8E;
  v162 = *(_DWORD *)(v11 + 7904) ^ 4u;
  v163 = 2 * *(_DWORD *)(v11 + 8132);
  *(_DWORD *)(v11 + 9736) = v163;
  v164 = *(_DWORD *)(v11 + 8392) ^ 0x95B53F02;
  v165 = *(_DWORD *)(v11 + 7888) ^ 0x2Bu;
  v166 = ((unint64_t)(v164 & (v163 & 0x2D2D2D2C ^ 0xB7BE92B6)) << (*(_DWORD *)(v11 + 7888) ^ 0x2Bu)) | ((unint64_t)(v161 & (v163 & 0x2D2D2D2C ^ 0xB7BE92B6)) >> v162);
  v167 = *(_DWORD *)(v11 + 8116);
  v168 = v167 ^ 0x501DFA7 ^ *(_DWORD *)(v11 + 7256) ^ __ROR4__(*(_DWORD *)(v83 + 4 * *(_QWORD *)(v11 + 9432)), 16) ^ *(_DWORD *)(v11 + 7920) ^ *(_DWORD *)(v83+ 4 * *(_QWORD *)(v11 + 7216));
  v169 = (v168 + 260362614 - ((2 * v168) & 0x1F09A2EC)) ^ *(_DWORD *)(v11 + 9560);
  v170 = *(_DWORD *)(v11 + 9528) ^ 0xFAFE2058;
  *(_DWORD *)(v11 + 7688) = v170;
  *(_DWORD *)(v11 + 7920) = v131 ^ 0x501DFA7;
  v171 = v166 ^ v151 ^ ((v131 ^ 0x501DFA7)
                      + v170
                      + v169
                      + 84008872
                      - ((2 * ((v131 ^ 0x501DFA7) + v170 + v169 + 1)) & 0xA03BF4E));
  v172 = v171 + 1815114494 - ((2 * v171) & 0xD860E5FC);
  v173 = v161 & v90;
  v174 = *(unsigned int *)(v83 + 4 * *(_QWORD *)(v11 + 7856));
  v175 = (v174 >> *(_QWORD *)(v11 + 7240)) & 0x18;
  v176 = (unsigned __int16)(v174 >> *(_QWORD *)(v11 + 7240)) | ((unsigned __int16)v174 << 16);
  *(_DWORD *)(v11 + 8720) = 84008895;
  LODWORD(v154) = ((v176 ^ -v176 ^ ((*(_DWORD *)(v11 + 7328) ^ 0x501DFA7)
                                  - ((v176 + 84008871 - 2 * (v176 & 0x501DFBF ^ v175)) ^ *(_DWORD *)(v11 + 7328))))
                 + (*(_DWORD *)(v11 + 7328) ^ 0x501DFA7)) ^ __ROR4__(*(_DWORD *)(v83+ 4 * *(_QWORD *)(v11 + 7712)), 24);
  *(_DWORD *)(v11 + 7712) = v167 ^ 0xFAFE2058;
  LODWORD(v174) = *(_DWORD *)(v11 + 9472) ^ 0x87AFDDD8;
  *(_DWORD *)(v11 + 8352) = v174;
  v177 = (v167 ^ 0xFAFE2058) + v174;
  *(_DWORD *)(v11 + 7856) = v177;
  v178 = (unint64_t)(v164 & v90) << v165;
  *(_QWORD *)(v11 + 9176) = v165;
  LODWORD(v154) = (v178 | v155) ^ v136 ^ (v177 + v154 + 84008872 - ((2 * (v177 + v154 + 1)) & 0xA03BF4E));
  v179 = v172 ^ v158;
  v180 = ((v172 ^ v158) & 5) + ((v172 ^ v158) & 5 ^ 5);
  v181 = v78 ^ (v178 | (v173 >> v162)) ^ *(_DWORD *)(v11 + 7248);
  v182 = ((_DWORD)v154 + 1815114494 - ((2 * (_DWORD)v154) & 0xD860E5FC)) ^ v158;
  LODWORD(v178) = *(_DWORD *)(v83 + 4 * BYTE1(v182));
  LODWORD(v173) = (v178 >> 8) + 84008871 - ((2 * (v178 >> 8)) & 0x3BF4E);
  *(_DWORD *)(v11 + 8116) = (v173 ^ 0x501DFA7 | ((_DWORD)v178 << 24))
                          + *(_DWORD *)(v11 + 9728)
                          + ~(2 * ((v173 ^ 0x501DFA7 | ((_DWORD)v178 << 24)) & 0x501DFB7 ^ v173 & 0x10));
  HIDWORD(v183) = *(_DWORD *)(v83 + ((v179 >> 22) & 0x3FC));
  LODWORD(v183) = HIDWORD(v183);
  v184 = (v181 + 1815114494 - ((2 * v181) & 0xD860E5FC)) ^ v158;
  v185 = *(_DWORD *)(v83 + 4 * ((v181 - 2 - ((2 * v181) & 0xFC)) ^ v158));
  *(_DWORD *)(v11 + 7408) = (v183 >> 24) + 84008871 - ((2 * (v183 >> 24)) & 0xA03BF4E);
  v186 = ((v185 << 16) + 84008871 - ((v185 << 17) & 0xA020000)) ^ 0x501DFA7 | HIWORD(v185);
  v187 = *(unsigned int *)(v83 + ((v160 >> 22) & 0x3FC));
  v188 = *(_QWORD *)(v11 + 8168);
  v189 = v186 + 84008871 - ((2 * v186) & 0xA03BF4E);
  v190 = ((-*(_BYTE *)(v188 + (((v187 >> 18) & 0xC0 | (v187 >> 26)) ^ 0x16)) ^ (-*(_BYTE *)(v188 + (((v187 >> 18) & 0xC0 | (v187 >> 26)) ^ 0x16)) >> 6) ^ (-*(_BYTE *)(v188 + (((v187 >> 18) & 0xC0 | (v187 >> 26)) ^ 0x16)) >> 3) ^ 0x2B)
                         - 105) | ((_DWORD)v187 << 8);
  v191 = __ROR4__(*(_DWORD *)(v83 + 4 * ((v154 - 2 - ((2 * v154) & 0xFC)) ^ v158)), 16) ^ 0x501DFA7 ^ *(_DWORD *)(v83 + 4 * BYTE2(v179)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v184)), 8) ^ (v190 + 84008871 - 2 * (v190 & 0x501DFB7 ^ (((-*(_BYTE *)(v188 + (((v187 >> 18) & 0xC0 | (v187 >> 26)) ^ 0x16)) ^ (-*(_BYTE *)(v188 + (((v187 >> 18) & 0xC0 | (v187 >> 26)) ^ 0x16)) >> 6) ^ (-*(_BYTE *)(v188 + (((v187 >> 18) & 0xC0 | (v187 >> 26)) ^ 0x16)) >> 3)) ^ 0x2B) - 105) & 0x10));
  HIDWORD(v183) = *(_DWORD *)(v83 + 4 * v179);
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v155) = (v183 >> 16) + 84008871 - ((2 * (v183 >> 16)) & 0xA03BF4E);
  v192 = v160;
  LODWORD(v187) = *(_DWORD *)(v83 + 4 * BYTE2(v182)) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v160)), 8);
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v83 + ((v184 >> 22) & 0x3FC)), 24);
  LODWORD(v155) = (v187 ^ v183 ^ v155) - 2102525313 - ((2 * (v187 ^ v183 ^ v155)) & 0x55C04FE);
  LODWORD(v187) = v163 & 0xB6B6B6B6 ^ 0x6B795DF9;
  v193 = v153 ^ 0x3F0A4ACAu;
  *(_QWORD *)(v11 + 9432) = v193;
  v194 = *(_QWORD *)(v11 + 9040);
  v195 = *(_DWORD *)(v11 + 8300) ^ 0xD8F114AA;
  *(_QWORD *)(v11 + 8992) = v195;
  v196 = v195 & v187;
  v197 = *(_QWORD *)(v11 + 8800);
  v198 = *(_DWORD *)(v11 + 8848) ^ ((v196 << v197) | ((unint64_t)(v187 & v193) >> v194)) ^ v155;
  LODWORD(v155) = v191 - 2102525313 - ((2 * v191) & 0x55C04FE);
  v199 = v198 + 1815114494 - ((2 * v198) & 0xD860E5FC);
  v200 = *(_DWORD *)(v11 + 8196) ^ 0x7F496DCEu;
  *(_QWORD *)(v11 + 8848) = v200;
  v201 = v200 & v187;
  LOBYTE(v160) = v194;
  LODWORD(v200) = *(_DWORD *)(v11 + 8832) ^ ((v201 >> v194) + (v196 << v165)) ^ v155;
  v202 = *(_DWORD *)(v11 + 8040);
  v203 = v202 & 0xB6B6B6B6 ^ 0xE9CD49DB;
  v204 = v193 & v203;
  v205 = *(_DWORD *)(v11 + 8392);
  v206 = v205 ^ 0x95B57F03;
  *(_QWORD *)(v11 + 8832) = v206;
  *(_QWORD *)(v11 + 9064) = v162;
  v207 = v192 >> (v180 + 11);
  LODWORD(v192) = (((unint64_t)(v206 & v203) << v197) + (v204 >> v162)) ^ 0x82AE027F ^ *(_DWORD *)(v11 + 8384) ^ *(_DWORD *)(v83 + 4 * BYTE2(v184)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * v192), 16) ^ *(_DWORD *)(v11 + 7408) ^ *(_DWORD *)(v11 + 8116);
  LODWORD(v165) = v192 + 1815114494 - ((2 * v192) & 0xD860E5FC);
  LOBYTE(v203) = v197;
  LODWORD(v194) = ((unint64_t)(v206 & v187) << v197) ^ 0x501DFA7 ^ (v201 >> v162) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v179)), 8) ^ *(_DWORD *)(v83 + 4 * v207);
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v83 + ((v182 >> 22) & 0x3FC)), 24);
  LODWORD(v194) = ((v194 ^ v183 ^ v189) - 2102525313 - ((2 * (v194 ^ v183 ^ v189)) & 0x55C04FE)) ^ *(_DWORD *)(v11 + 7416);
  LODWORD(v192) = v194 + 1815114494 - ((2 * v194) & 0xD860E5FC);
  v208 = v165 ^ v158;
  v209 = (8 * ((v165 ^ v158) & 0x1F)) | ((v165 ^ v158) >> 5);
  LOBYTE(v194) = -*(_BYTE *)(v188 + (((v208 >> 10) & 0xC0 | (v208 >> 18) & 0x3F) ^ 0x16)) ^ (-*(_BYTE *)(v188 + (((v208 >> 10) & 0xC0 | (v208 >> 18) & 0x3F) ^ 0x16)) >> 6) ^ (-*(_BYTE *)(v188 + (((v208 >> 10) & 0xC0 | (v208 >> 18) & 0x3F) ^ 0x16)) >> 3);
  LOBYTE(v187) = *(_BYTE *)(*(_QWORD *)(v11 + 8064) + (v209 ^ 0xAF)) ^ ((((8 * ((v165 ^ v158) & 0x1F)) | ((v165 ^ v158) >> 5)) ^ 0xC9)
                                                                      - 55) ^ 0x3A;
  v210 = ((_DWORD)v200 + 1815114494 - ((2 * (_DWORD)v200) & 0xD860E5FC)) ^ v158;
  v211 = (*(_DWORD *)(v83 + 4 * BYTE1(v210)) << (BYTE1(*(_DWORD *)(v83 + 4 * BYTE1(v210))) & 0x18) << (BYTE1(*(_DWORD *)(v83 + 4 * BYTE1(v210))) & 0x18 ^ 0x18))
       + (*(_DWORD *)(v83 + 4 * BYTE1(v210)) >> 8);
  v212 = v192 ^ v158;
  LOBYTE(v162) = ((v209 & 0x3A ^ 0x3A) + (v209 & 0x3A)) ^ ((((8 * (v212 & 0x1F)) | (v212 >> 5)) ^ 0xC9)
                                                         - 55) ^ *(_BYTE *)(*(_QWORD *)(v11 + 8064)
                                                                          + (((8 * (v212 & 0x1F)) | (v212 >> 5)) ^ 0xAF));
  HIDWORD(v183) = *(_DWORD *)(v83 + 4 * (115 * v187));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v209) = v183 >> 16;
  LODWORD(v206) = *(_DWORD *)(v11 + 8520) ^ *(_DWORD *)(v11 + 9512) ^ 0xD0AE1962;
  *(_DWORD *)(v11 + 8116) = v206;
  LODWORD(v182) = 859803363 * v206;
  LODWORD(v206) = *(_DWORD *)(v11 + 8680);
  *(_DWORD *)(v11 + 8384) = v206 ^ 0x533BDC8A;
  LODWORD(v182) = (859803363 * (v206 ^ 0x533BDC8A)) ^ v182 ^ __ROR4__(*(_DWORD *)(v83 + 4 * (115 * v162)), 16) ^ __ROR4__(*(_DWORD *)(v83 + ((v210 >> 22) & 0x3FC)), 24);
  v213 = v199 ^ v158;
  v214 = *(unsigned int *)(v83 + 4 * BYTE1(v213));
  LODWORD(v194) = v182 ^ (v214 >> 8) ^ *(_DWORD *)(v83 + 4 * ((v194 ^ 0x2B) - 105)) ^ (v214 << ((BYTE2(v183) & 0x18 ^ 0x18) + (BYTE2(v183) & 0x18u)));
  LODWORD(v187) = *(_DWORD *)(v11 + 9736) & 0xA0A0A0A0 ^ 0x707050F0;
  LODWORD(v196) = *(_DWORD *)(v11 + 8236);
  LODWORD(v214) = ((unint64_t)((v205 ^ 0x90B07000) & v187) << v203) ^ ((v187 & (v196 ^ 0x300040C0)) >> v160);
  LODWORD(v194) = (v194 + 1396432010 - ((2 * v194) & 0xA677B914)) ^ v206;
  LODWORD(v200) = v194 - 937747949 - ((2 * v194) & 0x90363426);
  LODWORD(v194) = (v214 + 84008871 - ((2 * v214) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7464);
  LODWORD(v214) = v194 + 84008871 - ((2 * v194) & 0xA03BF4E);
  LODWORD(v194) = *(_DWORD *)(v11 + 9056) ^ *(_DWORD *)(v11 + 9456);
  *(_DWORD *)(v11 + 7416) = v194;
  *(_DWORD *)(v11 + 7464) = 1815114495;
  LODWORD(v214) = (v194 ^ v214 ^ v200 ^ 0xF84D176)
                + 1815114494
                - 2 * ((v194 ^ v214 ^ v200 ^ 0xF84D176) & 0x6C3072FF ^ (v194 ^ v214 ^ v200) & 1);
  v215 = v202;
  v216 = v202 & 0xA0A0A0A0 ^ 0xF0D050D0;
  LODWORD(v184) = *(_DWORD *)(v11 + 8300) ^ 0xD0F010A0;
  v217 = *(_QWORD *)(v11 + 9176);
  v218 = (unint64_t)(v184 & v216) << v217;
  v219 = (v196 ^ 0x300040C0) & v216;
  v220 = *(_DWORD *)(v11 + 8196);
  v221 = *(_QWORD *)(v11 + 9064);
  v222 = ((unint64_t)((v220 ^ 0x704060C0) & v216) >> v221) | v218;
  LODWORD(v219) = (v218 + (v219 >> v160)) ^ 0x501DFA7 ^ *(_DWORD *)(v11 + 7432) ^ *(_DWORD *)(v83 + 4 * BYTE2(v210)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v208)), 8) ^ (*(_DWORD *)(v83 + ((v212 >> 22) & 0x3FC)) << 8) ^ HIBYTE(*(_DWORD *)(v83 + ((v212 >> 22) & 0x3FC)));
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v83 + 4 * v213), 16);
  LODWORD(v219) = (v219 ^ v183) + 1815114494 - ((2 * (v219 ^ v183)) & 0xD860E5FC);
  v223 = (2019565893 * (*(_DWORD *)(v11 + 8900) ^ 0xF0698104)) ^ 0x6C3072FE ^ (2019565893
                                                                             * (*(_DWORD *)(v11 + 9072) ^ *(_DWORD *)(v11 + 9672) ^ 0x6D8CEE2F)) ^ v158 ^ (v222 + 84008871 - ((2 * v222) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7424) ^ (*(_DWORD *)(v83 + 4 * BYTE1(v212)) >> 8) ^ (*(_DWORD *)(v83 + 4 * BYTE1(v212)) << 24) ^ *(_DWORD *)(v83 + 4 * BYTE2(v213)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * v210), 16) ^ __ROR4__(*(_DWORD *)(v83 + ((v208 >> 22) & 0x3FC)), 24);
  LOBYTE(v202) = v160;
  LODWORD(v208) = *(_DWORD *)(v11 + 8572) ^ *(_DWORD *)(v11 + 9288) ^ *(_DWORD *)(v11 + 9120) ^ (((v220 ^ 0x704060C0) & v187) >> v160) ^ ((unint64_t)(v184 & v187) << v217) ^ *(_DWORD *)(v11 + 8308) ^ v209 ^ *(_DWORD *)(v83 + 4 * BYTE2(v212)) ^ v211 ^ __ROR4__(*(_DWORD *)(v83 + ((v213 >> 22) & 0x3FC)), 24);
  v224 = ((v208 ^ 0xAD110F28) + 1815114494 - 2 * ((v208 ^ 0xAD110F28) & 0x6C3072FF ^ v208 & 1)) ^ v158;
  v225 = (((167 * (v224 >> 8)) ^ 6)
        + ((167 * (v224 >> 8)) ^ 0x63)
        + *(unsigned __int8 *)(*(_QWORD *)(v11 + 8056) + ((-89 * BYTE1(v224)) ^ 0x15))) ^ 0xFFFFFFE5;
  v226 = *(unsigned int *)(v83 + 4 * HIBYTE(v224));
  LODWORD(v209) = (115
                                  * (((((v226 >> 21) & 0xF8 | (v226 >> 29)) ^ 0x23)
                                    + (((v226 >> 21) & 0xF8 | (v226 >> 29)) ^ 0x22)
                                    + *(_BYTE *)(*(_QWORD *)(v11 + 8080) + (((v226 >> 21) & 0xF8 | (v226 >> 29)) ^ 0xFA))
                                    + 1) ^ 0xCB)) | ((_DWORD)v226 << 8);
  v227 = v219 ^ v158;
  HIDWORD(v183) = *(_DWORD *)(v83 + ((v227 >> 22) & 0x3FC));
  LODWORD(v183) = HIDWORD(v183);
  v228 = v214 ^ v158;
  LODWORD(v209) = *(_DWORD *)(v83 + 4 * BYTE2(v227)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v228)), 8) ^ __ROR4__(*(_DWORD *)(v83 + 4 * v223), 16) ^ v209;
  LODWORD(v213) = *(_DWORD *)(v83 + 4 * BYTE2(v223)) ^ __ROR4__(*(_DWORD *)(v83+ 4* ((v225 << (((*(_DWORD *)(v11 + 9552) & 0xC0 ^ 0x40)+ (*(_DWORD *)(v11 + 9552) & 0xC0 ^ 0x80)+ 66) & 0xFE)) | ((v225 & 0xC0) >> 6))), 8) ^ __ROR4__(*(_DWORD *)(v83 + 4 * (v219 ^ v158)), 16) ^ __ROR4__(*(_DWORD *)(v83 + ((v228 >> 22) & 0x3FC)), 24);
  LODWORD(v225) = (v183 >> 24) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v223)), 8) ^ __ROR4__(*(_DWORD *)(v83+ 4* v224), 16) ^ *(_DWORD *)(v83 + 4 * BYTE2(v228));
  LODWORD(v187) = ((*(_DWORD *)(v11 + 7952) & 0x10101010 ^ 0x101010)
                 + (*(_DWORD *)(v11 + 7952) & 0x10101010 ^ 0x10000000)) ^ (2
                                                                         * (*(_DWORD *)(v11 + 7952) & 0x10101010 ^ 0x10000000));
  LODWORD(v160) = *(_DWORD *)(v11 + 8392);
  v229 = *(_QWORD *)(v11 + 8800);
  LODWORD(v209) = ((unint64_t)((((2 * ((v160 ^ 0x10303000) & v187 ^ 0x24883B74)) | 0xFAB081C0)
                                     - ((v160 ^ 0x10303000) & v187 ^ 0x24883B74)
                                     - 2102935776) ^ 0x59D07B94) << v229) ^ ((unint64_t)((v196 ^ 0x30000000) & v187) >> v221) ^ v158 ^ *(_DWORD *)(v11 + 8344) ^ (v209 + 84008871 - ((2 * v209) & 0xA03BF4E));
  LODWORD(v201) = v215;
  v230 = v215 & 0x20202020 ^ 0x30101010;
  LOBYTE(v215) = v229;
  *(_DWORD *)(v11 + 8344) = v230;
  LODWORD(v195) = v158 ^ (((unint64_t)((v160 ^ 0x10303000) & v230) << v229)
                        + ((unint64_t)((v196 ^ 0x30000000) & v230) >> v202)) ^ *(_DWORD *)(v11 + 8332) ^ (v225 + 84008871 - ((2 * v225) & 0xA03BF4E));
  LODWORD(v225) = *(_DWORD *)(v11 + 9736);
  v231 = v225 & 0x20202020 ^ 0x30301030;
  LODWORD(v218) = *(_DWORD *)(v11 + 8300);
  *(_DWORD *)(v11 + 8332) = v218 ^ 0x10301020;
  LODWORD(v179) = v220;
  *(_DWORD *)(v11 + 8308) = v220 ^ 0x30002000;
  LODWORD(v213) = *(_DWORD *)(v11 + 7436) ^ (((unint64_t)((v220 ^ 0x30002000) & v231) >> v221) | ((unint64_t)((v218 ^ 0x10301020) & v231) << v217)) ^ v158 ^ (v213 + 84008871 - ((2 * v213) & 0xA03BF4E));
  v232 = (unint64_t)(v231 & (v196 ^ 0x30000000)) >> v221;
  LOBYTE(v229) = v221;
  LOBYTE(v196) = v217;
  LODWORD(v232) = ((unint64_t)((v160 ^ 0x10303000) & v231) << v217) | v232;
  LODWORD(v232) = (v232 + 84008871 - ((2 * v232) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 8616);
  LODWORD(v228) = (v232 + 84008871 - ((2 * v232) & 0xA03BF4E)) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v83+ 4 * v228), 16) ^ __ROR4__(*(_DWORD *)(v83+ ((v223 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v83 + 4 * BYTE2(v224));
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v227)), 8);
  v233 = v213 ^ 0x6C3072FE;
  LODWORD(v232) = *(_DWORD *)(v83 + 4 * BYTE1(v233));
  LODWORD(v227) = (v232 >> 8) + 84008871 - ((2 * (v232 >> 8)) & 0x3BF4E);
  *(_DWORD *)(v11 + 8616) = 84008879;
  LODWORD(v232) = (v227 ^ 0x501DFA7 | ((_DWORD)v232 << 24))
                + 84008871
                - 2 * ((v227 ^ 0x501DFA7 | ((_DWORD)v232 << 24)) & 0x501DFAF ^ v227 & 8);
  v234 = *(_DWORD *)(v83 + 4 * (v209 ^ 0xFEu));
  v235 = v209 ^ 0x6C3072FE;
  v236 = v195 ^ 0x6C3072FE;
  LODWORD(v219) = *(_DWORD *)(v83 + 4 * BYTE2(v236)) ^ __ROR4__(*(_DWORD *)(v83 + ((v235 >> 22) & 0x3FC)), 24);
  LODWORD(v213) = *(_DWORD *)(v83 + 4 * BYTE2(v235)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * (v213 ^ 0xFEu)), 16);
  v237 = ((v228 ^ v183)
        + 1815114494
        - ((2 * (v228 ^ v183)) & 0xD860E5FC)) ^ v158;
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v83 + 4 * v237), 16);
  LODWORD(v232) = ((v219 ^ v183) + 84008871 - ((2 * (v219 ^ v183)) & 0xA03BF4E)) ^ v232;
  v238 = *(_DWORD *)(v11 + 8384);
  LODWORD(v221) = ((((v234 << 16) + 84008871 - ((v234 << 17) & 0xA020000)) ^ 0x501DFA7 | HIWORD(v234)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v237)), 8) ^ (*(_DWORD *)(v83 + ((v236 >> 22) & 0x3FC)) << 8) ^ HIBYTE(*(_DWORD *)(v83 + ((v236 >> 22) & 0x3FC))) ^ *(_DWORD *)(v83 + 4 * BYTE2(v233)))
                + 1750502657 * ((*(_DWORD *)(v11 + 7416) ^ 0x3D61EB3D) + v238)
                + 1750502657;
  LODWORD(v221) = v221 ^ (-647028661 * (*(_DWORD *)(v11 + 8572) ^ 0xD42A8B48)) ^ (((v221 & 0xD96F204B ^ 0xD96F204B)
                                                                                 + (v221 & 0xD96F204B))
                                                                                * (*(_DWORD *)(v11 + 9288) ^ 0xABAFB802));
  LODWORD(v221) = ((v221 - 678042683 - ((2 * v221) & 0xAF2BC78A)) ^ *(_DWORD *)(v11 + 9120))
                + 164109425 * (*(_DWORD *)(v11 + 8116) - v238);
  HIDWORD(v183) = *(_DWORD *)(v83 + 4 * BYTE1(v236));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v236) = ((v183 >> 8) + v213 - 2 * ((v183 >> 8) & v213)) ^ __ROR4__(*(_DWORD *)(v83 + ((v237 >> 22) & 0x3FC)), 24);
  LODWORD(v236) = (v236 + 1528172782 - ((2 * v236) & 0xB62C21DC)) ^ *(_DWORD *)(v11 + 9072);
  v239 = v201 & 0x1C1C1C1C ^ 0x1E1A1E0E;
  v240 = (v218 ^ 0x1810140A) & v239;
  *(_DWORD *)(v11 + 8196) = v220;
  v241 = (v220 ^ 0x1E080C0E) & v239;
  LOBYTE(v218) = v202;
  LODWORD(v232) = *(_DWORD *)(v11 + 8784) ^ ((v241 >> v202) | (v240 << v215)) ^ (v232
                                                                               + 84008871
                                                                               - ((2 * v232) & 0xA03BF4E));
  LODWORD(v236) = (v236 + 916127425 - ((2 * v236) & 0x6D35FD82)) ^ *(_DWORD *)(v11 + 9672);
  v242 = v225;
  v243 = *(_DWORD *)(v11 + 8236);
  LOBYTE(v205) = v215;
  v244 = v221 + 84008871 - ((2 * v221) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8784) = v158 ^ 0x6931AD59;
  LODWORD(v221) = v158 ^ 0x6931AD59 ^ (((unint64_t)((v160 ^ 0x14141E02) & (v225 & 0x1C1C1C1C ^ 0x1E060A0E)) << v215)
                                     + ((unint64_t)((v225 & 0x1C1C1C1C ^ 0x1E060A0E) & (v243 ^ 0x1E0A0A0Au)) >> v218)) ^ *(_DWORD *)(v11 + 7532) ^ __ROR4__(*(_DWORD *)(v83 + 4 * (v195 ^ 0xFEu)), 16) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v235)), 8) ^ __ROR4__(*(_DWORD *)(v83 + ((v233 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v83 + 4 * BYTE2(v237));
  LODWORD(v225) = (v241 >> v229) ^ (v240 << v217);
  LODWORD(v235) = ((*(_DWORD *)(v11 + 8132) & 0xE0E0E0E ^ 0x8040200) << (!(*(_DWORD *)(v11 + 8132) & 1)
                                                                       + (*(_DWORD *)(v11 + 8132) & 1))) ^ 0xE0E0E0E;
  LODWORD(v241) = v160;
  LODWORD(v235) = ((unint64_t)((v160 ^ 0x14347E02) & v235) << v215) ^ ((v235 & *(_QWORD *)(v11 + 9432)) >> v218);
  LODWORD(v235) = (v235 + 84008871 - ((2 * v235) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 8900) ^ *(_DWORD *)(v11 + 7944) ^ (v236 - 261521148 - ((2 * v236) & 0xE0D30208));
  v245 = (((_DWORD)v221 << ((BYTE2(v237) & 3 ^ 3) + (BYTE2(v237) & 3))) + (v221 >> 5)) ^ ((v221 & 0xCCABDF ^ 0xCCABDF) + (v221 & 0xCCABDF)) & 0x10050C9;
  LOBYTE(v233) = *(_BYTE *)(*(_QWORD *)(v11 + 8136) + ((-89 * BYTE3(v221)) ^ 0x56)) ^ 0xE1;
  v246 = ((_DWORD)v232 + 1815114494 - ((2 * (_DWORD)v232) & 0xD860E5FC)) ^ v158;
  LODWORD(v235) = (v235 + 1815114494 - ((2 * v235) & 0xD860E5FC)) ^ v158;
  HIDWORD(v183) = *(_DWORD *)(v83 + 4 * BYTE1(v221));
  LODWORD(v183) = HIDWORD(v183);
  v247 = (v183 >> 8) ^ __ROR4__(*(_DWORD *)(v83 + ((v246 >> 22) & 0x3FC)), 24);
  v248 = ((*(_DWORD *)(v11 + 7552) ^ v225 ^ v244)
        + 1815114494
        - ((2 * (*(_DWORD *)(v11 + 7552) ^ v225 ^ v244)) & 0xD860E5FC)) ^ v158;
  LODWORD(v233) = *(_DWORD *)(v83 + 4 * BYTE2(v235)) ^ __ROR4__(*(_DWORD *)(v83+ 4* (5* (*(_BYTE *)(*(_QWORD *)(v11 + 7792) + ((((v246 >> 6) + 220) >> 2) ^ 0x30) + 803) ^ 0xDF))), 8) ^ __ROR4__(*(_DWORD *)(v83 + 4 * v248), 16) ^ __ROR4__(*(_DWORD *)(v83+ 4* ((v233 >> 6) | (4 * v233))), 24);
  HIDWORD(v183) = *(_DWORD *)(v83 + 4 * BYTE1(v248));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v232) = (v183 >> 13) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE3(v235)), 29);
  HIDWORD(v183) = *(_DWORD *)(v83 + 4 * v246);
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v221) = (v183 >> 16) ^ __ROR4__(*(_DWORD *)(v83 + 4 * BYTE1(v235)), 8) ^ *(_DWORD *)(v83 + 4 * BYTE2(v221)) ^ __ROR4__(*(_DWORD *)(v83 + ((v248 >> 22) & 0x3FC)), 24);
  LODWORD(v248) = v247 ^ *(_DWORD *)(v83 + 4 * BYTE2(v248)) ^ __ROR4__(*(_DWORD *)(v83 + 4 * v235), 16);
  HIDWORD(v183) = v232 ^ 0x6E26EFDD;
  LODWORD(v183) = v232 ^ 0x6E26EFDD;
  v249 = v83;
  LODWORD(v235) = (v183 >> 27) ^ __ROR4__(*(_DWORD *)(v83+ 4* (115* (*(_BYTE *)(*(_QWORD *)(v11 + 8064) + (v245 ^ 0x66)) ^ (v245 - 55) ^ 0x3A))), 16) ^ *(_DWORD *)(v83 + 4 * BYTE2(v246)) ^ 0xC4DDFBAD;
  LODWORD(v217) = *(_DWORD *)(v11 + 9560) ^ 0xF84D176;
  *(_DWORD *)(v11 + 8116) = v217;
  LODWORD(v221) = *(_DWORD *)(v11 + 8000)
                + v217
                + (*(_DWORD *)(v11 + 8488) ^ 0x501DFA7)
                + *(_DWORD *)(v11 + 7712)
                + v221
                + 2;
  LODWORD(v245) = *(_DWORD *)(v11 + 8936) ^ *(_DWORD *)(v11 + 9552) ^ (v221 + 84008871 - ((2 * v221) & 0xA03BF4E));
  *(_DWORD *)(v11 + 8000) = v245;
  LODWORD(v217) = *(_DWORD *)(v11 + 7976) + (*(_DWORD *)(v11 + 8932) ^ 0x2D6BC39D) + v233;
  LODWORD(v248) = *(_DWORD *)(v11 + 8008) + v248;
  LODWORD(v221) = *(_DWORD *)(v11 + 7856)
                + *(_DWORD *)(v11 + 7688)
                + (*(_DWORD *)(v11 + 8980) ^ 0xFAFE2058)
                + *(_DWORD *)(v11 + 7920)
                + (*(_DWORD *)(v11 + 8576) ^ 0x501DFA7)
                + v235
                + 3;
  LODWORD(v232) = v221 + 84008871 - ((2 * v221) & 0xA03BF4E);
  *(_DWORD *)(v11 + 7552) = v232;
  v250 = v217 + 84008871 - ((2 * v217) & 0xA03BF4E);
  *(_DWORD *)(v11 + 7712) = v250;
  v251 = v248 + 84008872 - ((2 * (v248 + 1)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 7532) = v251;
  LODWORD(v221) = v201 & 0x9C9C9C9C ^ 0xDEDA5ECE;
  LODWORD(v160) = *(_DWORD *)(v11 + 8300);
  v252 = (v160 ^ 0xD8D0148A) & v221;
  *(_QWORD *)(v11 + 7976) = v252;
  v253 = (v179 ^ 0x5E484CCE) & v221;
  *(_QWORD *)(v11 + 7944) = v253;
  LODWORD(v252) = (v253 >> v229) ^ (v252 << v196);
  LODWORD(v252) = (v252 + 414516081 - ((2 * v252) & 0x316A06E2)) ^ *(_DWORD *)(v11 + 7984);
  LODWORD(v252) = v245 ^ (v252 + 84008871 - ((2 * v252) & 0xA03BF4E));
  *(_DWORD *)(v11 + 7920) = v243 ^ 0x1E0A4ACA;
  v254 = (v243 ^ 0x1E0A4ACA) & v221;
  *(_QWORD *)(v11 + 7984) = v254;
  LODWORD(v221) = ((unint64_t)((v241 ^ 0x94945E02) & v221) << v205)
                + (v254 >> v218)
                - 2
                * (((unint64_t)((v241 ^ 0x94945E02) & v221) << v205) & (v254 >> v218));
  LODWORD(v221) = *(_DWORD *)(v11 + 7776) ^ (v221 + 414516081 - ((2 * v221) & 0x316A06E2));
  LODWORD(v221) = (v221 + 1815114494 - ((2 * v221) & 0xD860E5FC)) ^ v158;
  v255 = v242;
  LODWORD(v245) = v242 & 0x9C9C9C9C ^ 0x5E464ACE;
  v256 = (v179 ^ 0x5E484CCE) & v245;
  *(_DWORD *)(v11 + 7776) = v245;
  LODWORD(v217) = (v256 >> v229) ^ ((unint64_t)((v160 ^ 0xD8D0148A) & v245) << v196);
  LODWORD(v217) = (v217 + 414516081 - ((2 * v217) & 0x316A06E2)) ^ *(_DWORD *)(v11 + 8496);
  LODWORD(v217) = v250 ^ (v217 + 84008871 - ((2 * v217) & 0xA03BF4E));
  v257 = (v241 ^ 0x94945E02) & v245;
  *(_QWORD *)(v11 + 7688) = v257;
  LODWORD(v256) = (v257 << v196) + (v256 >> v218);
  LODWORD(v256) = (v256 + 414516081 - ((2 * v256) & 0x316A06E2)) ^ *(_DWORD *)(v11 + 8880);
  v258 = ((_DWORD)v252 + 1815114494 - ((2 * (_DWORD)v252) & 0xD860E5FC)) ^ v158;
  LODWORD(v256) = v232 ^ (v256 + 84008871 - ((2 * v256) & 0xA03BF4E));
  v259 = *(unsigned int *)(v249 + ((v258 >> 22) & 0x3FC));
  v260 = v256 + 1815114494 - ((2 * v256) & 0xD860E5FC);
  LODWORD(v256) = ((-*(_BYTE *)(*(_QWORD *)(v11 + 8168) + (((v259 >> 18) & 0xC0 | (v259 >> 26)) ^ 0x16)) ^ (-*(_BYTE *)(*(_QWORD *)(v11 + 8168) + (((v259 >> 18) & 0xC0 | (v259 >> 26)) ^ 0x16)) >> 6) ^ (-*(_BYTE *)(*(_QWORD *)(v11 + 8168) + (((v259 >> 18) & 0xC0 | (v259 >> 26)) ^ 0x16)) >> 3) ^ 0x2B)
                                  - 105) | ((_DWORD)v259 << 8);
  v261 = v251 ^ ((_DWORD)v221 + 84008871 - ((2 * (_DWORD)v221) & 0xA03BF4Eu));
  v262 = v260 ^ v158;
  v263 = ((_DWORD)v217 + 1815114494 - ((2 * (_DWORD)v217) & 0xD860E5FC)) ^ v158;
  HIDWORD(v183) = *(_DWORD *)(v249 + 4 * BYTE1(v263));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v217) = (v183 >> 8) ^ __ROR4__(*(_DWORD *)(v249 + 4 * (v260 ^ v158)), 16) ^ __ROR4__(*(_DWORD *)(v249 + ((v261 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v249 + 4 * BYTE2(v258));
  LODWORD(v221) = *(_DWORD *)(v249 + 4 * BYTE2(v262)) ^ __ROR4__(*(_DWORD *)(v249+ 4* ((unsigned __int16)(v251 ^ (v221 - 8281 - ((2 * v221) & 0xBF4E))) >> 8)), 8) ^ __ROR4__(*(_DWORD *)(v249 + ((v263 >> 22) & 0x3FC)), 24);
  v264 = *(unsigned int *)(v249 + 4 * BYTE1(v262));
  v265 = v221 ^ __ROR4__(*(_DWORD *)(v249 + 4 * v258), 16);
  v266 = v264 >> 8;
  v267 = *(_DWORD *)(v249 + 4 * BYTE2(v263)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v261), 16) ^ (v264 << ((BYTE1(v264) & 0x18 ^ 0x18) + (BYTE1(v264) & 0x18u)));
  LODWORD(v221) = v217 + 84008871 - ((2 * v217) & 0xA03BF4E);
  LODWORD(v232) = v201 & 0x79797978 ^ 0x8DADEDFC;
  *(_DWORD *)(v11 + 8880) = v160 ^ 0xD8F114A8;
  *(_DWORD *)(v11 + 8980) = v243 ^ 0x3D0848C8;
  v268 = (v243 ^ 0x3D0848C8) & v232;
  *(_QWORD *)(v11 + 7856) = v268;
  v269 = (v160 ^ 0xD8F114A8) & v232;
  v270 = v269 << v205;
  *(_QWORD *)(v11 + 8008) = v269;
  v271 = v268 >> v229;
  LODWORD(v221) = *(_DWORD *)(v11 + 8840) ^ ((v269 << v205) + v271) ^ v221;
  *(_DWORD *)(v11 + 8576) = v221 + 1815114494 - ((2 * v221) & 0xD860E5FC);
  LODWORD(v218) = *(_DWORD *)(v11 + 8196);
  *(_DWORD *)(v11 + 8840) = v218 ^ 0x7D496DCC;
  *(_DWORD *)(v11 + 7280) = -1783268096;
  LODWORD(v179) = *(_DWORD *)(v11 + 8392);
  *(_DWORD *)(v11 + 8496) = v179 ^ 0x95B57D00;
  v272 = *(_QWORD *)(v11 + 9040);
  LODWORD(v240) = ((unint64_t)((v179 ^ 0x95B57D00) & (v255 & 0x79797978 ^ 0x8DD4BCDC)) << v205) ^ ((unint64_t)((v218 ^ 0x7D496DCC) & (v255 & 0x79797978 ^ 0x8DD4BCDC)) >> v272);
  LODWORD(v240) = (v240 + 84008871 - ((2 * v240) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7440);
  LODWORD(v258) = (v240 + *(_DWORD *)(v11 + 9728) + ~((2 * v240) & 0xA03BF4E)) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v258)), 8) ^ __ROR4__(*(_DWORD *)(v249 + ((v262 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v263), 16) ^ *(_DWORD *)(v249 + 4 * BYTE2(v261));
  v273 = *(_QWORD *)(v11 + 9176);
  LODWORD(v256) = *(_DWORD *)(v11 + 7448) ^ ((v269 << v273) + v271) ^ v266 ^ (v267 + 84008871 - ((2 * v267) & 0xA03BF4E)) ^ v256;
  LODWORD(v261) = v256 + 1815114494 - ((2 * v256) & 0xD860E5FC);
  LODWORD(v256) = *(_DWORD *)(v11 + 7992) ^ (((unint64_t)((v218 ^ 0x7D496DCC) & v232) >> v229) | v270) ^ (v265 + 84008871 - ((2 * v265) & 0xA03BF4E));
  LODWORD(v262) = v255 & 0x8080808 ^ 0x40C0404;
  v274 = (v179 ^ 0x4040C00) & v262;
  *(_DWORD *)(v11 + 7992) = v243 ^ 0xC080808;
  LODWORD(v263) = (v274 << v273) ^ ((unint64_t)(v262 & (v243 ^ 0xC080808)) >> v272);
  LODWORD(v266) = *(_DWORD *)(v11 + 7696) ^ (v263 + 84008871 - ((2 * v263) & 0xA03BF4E));
  v275 = v261 ^ v158;
  LODWORD(v261) = *(_DWORD *)(v249 + ((v275 >> 22) & 0x3FC));
  LODWORD(v232) = (4 * *(_DWORD *)(v11 + 7952)) & 0x1000;
  *(_DWORD *)(v11 + 7696) = v201 & 0x8080808;
  LODWORD(v232) = ((v201 & 0x8080808) - v232 + 17161123) ^ 0x501DFA7;
  v276 = (unint64_t)((v243 ^ 0xC080808) & v232) >> v229;
  v277 = *(_DWORD *)(v11 + 8576) ^ v158;
  v278 = ((_DWORD)v256 + 1815114494 - ((2 * (_DWORD)v256) & 0xD860E5FC)) ^ v158;
  LODWORD(v221) = (((unint64_t)((v160 ^ 0x8001408) & v232) << v273) | v276) ^ __ROR4__(v261, 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * (*(_BYTE *)(v11 + 8576) ^ v158)), 16) ^ *(_DWORD *)(v249 + 4 * BYTE2(v278));
  v279 = ((_DWORD)v258 + 1815114494 - ((2 * (_DWORD)v258) & 0xD860E5FC)) ^ v158;
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v279)), 8);
  LODWORD(v221) = ((v221 ^ v183) + 84008871 - ((2 * (v221 ^ v183)) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7568);
  *(_DWORD *)(v11 + 7568) = v218 ^ 0xC080C0C;
  v280 = *(_QWORD *)(v11 + 8800);
  LOBYTE(v196) = v272;
  LODWORD(v261) = (v274 << v280) | ((unint64_t)((v218 ^ 0xC080C0C) & v262) >> v272);
  v281 = ((_DWORD)v266 + 1815114494 - ((2 * (_DWORD)v266) & 0xD860E5FC)) ^ v158 ^ __ROR4__(*(_DWORD *)(v249+ ((v277 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * ((v258 - 2 - ((2 * v258) & 0xFC)) ^ v158)), 16) ^ *(_DWORD *)(v249 + 4 * BYTE2(v275)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v278)), 8);
  LODWORD(v274) = *(_DWORD *)(v249 + ((v278 >> 22) & 0x3FC));
  *(_DWORD *)(v11 + 8576) = v158 ^ 0x6C3072FE;
  v282 = v158 ^ 0x6C3072FE ^ ((_DWORD)v261 + 84008871 - ((2 * (_DWORD)v261) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7452) ^ __ROR4__(v274, 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v277)), 8) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v275), 16) ^ *(_DWORD *)(v249 + 4 * BYTE2(v279));
  LODWORD(v262) = ((unint64_t)((v179 ^ 0x4047C00) & v232) << v280) | v276;
  LODWORD(v278) = (v262 + 84008871 - ((2 * v262) & 0xA03BF4E)) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v249 + ((v279 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249+ 4 * BYTE1(v275)), 8) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v278), 16) ^ *(_DWORD *)(v249 + 4 * BYTE2(v277));
  LODWORD(v278) = (v278 + 1815114494 - ((2 * v278) & 0xD860E5FC)) ^ v158;
  v283 = ((_DWORD)v278 + 84008871 - ((2 * (_DWORD)v278) & 0xA03BF4Eu)) ^ *(_DWORD *)(v11 + 7536);
  v284 = *(_QWORD *)(v11 + 8064);
  LOBYTE(v262) = *(_BYTE *)(v284 + (((v283 >> 5) & 0xF8 | ((unsigned __int16)v283 >> 13)) ^ 0xAFLL));
  LOBYTE(v278) = v262 ^ ((((v283 >> 5) & 0xF8 | ((unsigned __int16)v283 >> 13)) ^ 0xC9) - 55) ^ 0x3A;
  v285 = ((_DWORD)v221 + 1815114494 - ((2 * (_DWORD)v221) & 0xD860E5FC)) ^ v158;
  LOBYTE(v262) = (BYTE2(v281) >> ((v262 | 0xC1) - (v262 & 0x3E) + 68)) ^ (8 * BYTE2(v281));
  LOBYTE(v274) = *(_BYTE *)(*(_QWORD *)(v11 + 8080) + (v262 ^ 0xFALL)) + (v262 ^ 0x23) + (v262 ^ 0x22);
  LODWORD(v262) = ((*(_DWORD *)(v249 + 4 * v285) << 16)
                 + 84008871
                 - ((*(_DWORD *)(v249 + 4 * v285) << 17) & 0xA020000)) ^ 0x501DFA7 | HIWORD(*(_DWORD *)(v249 + 4 * v285));
  HIDWORD(v183) = *(_DWORD *)(v249 + ((v282 >> 22) & 0x3FC));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v266) = (v183 >> 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v281)), 8) ^ *(_DWORD *)(v249
                                                                                                + 4 * BYTE2(v283));
  LODWORD(v266) = (v266 + 84008871 - ((2 * v266) & 0xA03BF4E)) ^ (v262 + 84008871 - ((2 * v262) & 0xA03BF4E));
  HIDWORD(v183) = *(_DWORD *)(v249 + ((v281 >> 22) & 0x3FC));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v262) = (v183 >> 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v283), 16) ^ *(_DWORD *)(v249 + 4 * BYTE2(v285)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v282)), 8);
  LODWORD(v283) = *(_DWORD *)(v249 + ((v283 >> 22) & 0x3FC));
  LODWORD(v232) = ((((*(_BYTE *)(*(_QWORD *)(v11 + 8056)
                                                                 + ((-89 * BYTE3(v283)) ^ 0x15))
                                                      + ((-89 * BYTE3(v283)) ^ 6)
                                                      + ((-89 * BYTE3(v283)) ^ 0x63)) ^ 0xE5) >> 6) | (4 * ((*(_BYTE *)(*(_QWORD *)(v11 + 8056) + ((-89 * BYTE3(v283)) ^ 0x15)) + ((-89 * BYTE3(v283)) ^ 6) + ((-89 * BYTE3(v283)) ^ 0x63)) ^ 0xE5))) | ((_DWORD)v283 << 8);
  LODWORD(v283) = *(_DWORD *)(v249 + 4 * (115 * ((v274 + 1) ^ 0xCB))) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v285)), 8);
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v249 + 4 * v282), 16);
  LODWORD(v283) = (v283 ^ v183 ^ v232) - 519103228 - ((2 * (v283 ^ v183 ^ v232)) & 0xC21E3A08);
  LODWORD(v272) = *(_DWORD *)(v11 + 9736);
  LODWORD(v274) = v272 & 0x8E8E8E8E ^ 0x474D41C5;
  v286 = (v179 ^ 0x85854F03) & v274;
  LOBYTE(v241) = v273;
  *(_DWORD *)(v11 + 7536) = v218 ^ 0x4F494DCE;
  v287 = (v218 ^ 0x4F494DCE) & v274;
  v288 = *(_QWORD *)(v11 + 9064);
  LODWORD(v276) = *(_DWORD *)(v11 + 7520) ^ (v287 >> v288) ^ ((v286 << v241)
                                                            - 519103228
                                                            - ((2 * (v286 << v241)) & 0xC21E3A08));
  LODWORD(v285) = (v276 + 84008871 - ((2 * v276) & 0xA03BF4E)) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v249 + ((v285 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249+ 4* (115 * v278)), 8) ^ *(_DWORD *)(v249 + 4 * BYTE2(v282));
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v249 + 4 * v281), 16);
  LODWORD(v281) = (v285 ^ v183) + 1815114494 - ((2 * (v285 ^ v183)) & 0xD860E5FC);
  LODWORD(v285) = *(_DWORD *)(v11 + 7544) ^ ((v287 >> v196)
                                           + ((unint64_t)((v160 ^ 0xC8C1048A) & v274) << v273)) ^ (v266 - 519103228 - ((2 * v266) & 0xC21E3A08));
  LODWORD(v279) = *(_DWORD *)(v11 + 8040);
  LODWORD(v266) = v279 & 0x8E8E8E8E ^ 0xC5C145C7;
  *(_DWORD *)(v11 + 7520) = v266;
  v289 = (unint64_t)((v160 ^ 0xC8C1048A) & v266) << v280;
  LODWORD(v282) = *(_DWORD *)(v11 + 8236) ^ 0xF0A4ACA;
  v290 = v282 & v266;
  *(_QWORD *)(v11 + 7544) = v290;
  LODWORD(v289) = *(_DWORD *)(v11 + 7460) ^ (v289 + (v290 >> v196)) ^ v283;
  LODWORD(v283) = v262 - 519103228 - ((2 * v262) & 0xC21E3A08);
  LODWORD(v262) = v289 + 1815114494 - ((2 * v289) & 0xD860E5FC);
  LODWORD(v289) = ((v286 << v280) | ((unint64_t)(v274 & v282) >> v196)) ^ *(_DWORD *)(v11 + 7456) ^ v283;
  LODWORD(v160) = v158;
  v291 = v281 ^ v158;
  v292 = ((_DWORD)v289 + 1815114494 - ((2 * (_DWORD)v289) & 0xD860E5FC)) ^ v158;
  LODWORD(v283) = v262 ^ v158;
  HIDWORD(v183) = *(_DWORD *)(v249 + 4 * v292);
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v282) = (v183 >> 16) ^ __ROR4__(*(_DWORD *)(v249 + ((v291 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * ((unsigned __int16)(v262 ^ v158) >> 8)), 8);
  v293 = v284;
  v294 = ((_DWORD)v285 + 1815114494 - ((2 * (_DWORD)v285) & 0xD860E5FC)) ^ v158;
  HIDWORD(v183) = *(_DWORD *)(v249 + 4 * v291);
  LODWORD(v183) = HIDWORD(v183);
  v295 = *(unsigned int *)(v249
                         + 4
                         * (115
                                           * (*(_BYTE *)(v284
                                                       + (((v283 >> 21) & 0xF8 | (v283 >> 29)) ^ 0xAFLL)) ^ ((((v283 >> 21) & 0xF8 | (v283 >> 29)) ^ 0xC9) - 55) ^ 0x3A)));
  LODWORD(v290) = ((-*(_BYTE *)(*(_QWORD *)(v11 + 8168) + (((v295 >> 18) & 0xC0 | (v295 >> 26)) ^ 0x16)) ^ (-*(_BYTE *)(*(_QWORD *)(v11 + 8168) + (((v295 >> 18) & 0xC0 | (v295 >> 26)) ^ 0x16)) >> 3) ^ (-*(_BYTE *)(*(_QWORD *)(v11 + 8168) + (((v295 >> 18) & 0xC0 | (v295 >> 26)) ^ 0x16)) >> 6) ^ 0x2B)
                                  - 105) | ((_DWORD)v295 << 8);
  LODWORD(v295) = (v183 >> 16) ^ __ROR4__(*(_DWORD *)(v249 + ((v294 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v292)), 8);
  v296 = *(unsigned int *)(v249 + ((v292 >> 22) & 0x3FC));
  LODWORD(v285) = (115
                                  * (*(_BYTE *)(v284 + (((v296 >> 21) & 0xF8 | (v296 >> 29)) ^ 0xAF)) ^ ((((v296 >> 21) & 0xF8 | (v296 >> 29)) ^ 0xC9) - 55) ^ 0x3A)) | ((_DWORD)v296 << 8);
  LODWORD(v296) = v282 ^ *(_DWORD *)(v249 + 4 * BYTE2(v294));
  LODWORD(v292) = *(_DWORD *)(v249 + 4 * BYTE2(v292)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v291)), 8) ^ v290;
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v249 + 4 * v294), 16);
  LODWORD(v282) = v295 ^ *(_DWORD *)(v249 + 4 * BYTE2(v283));
  LODWORD(v295) = v279 & 0xA9A9A9A8 ^ 0x7555D554;
  LODWORD(v218) = *(_DWORD *)(v11 + 8880);
  LODWORD(v179) = *(_DWORD *)(v11 + 8840);
  LOBYTE(v284) = v288;
  LODWORD(v276) = (v292 ^ v183) + 84008871 - ((2 * (v292 ^ v183)) & 0xA03BF4E);
  LODWORD(v292) = v158 ^ (((unint64_t)(*(_DWORD *)(v11 + 8496) & v295) << v241)
                        + ((unint64_t)(*(_DWORD *)(v11 + 8980) & v295) >> v196)) ^ *(_DWORD *)(v11 + 7476) ^ (v282 + 84008871 - ((2 * v282) & 0xA03BF4E));
  v297 = *(_DWORD *)(v11 + 7480) ^ (((unint64_t)(v179 & v295) >> v288) | ((unint64_t)(v218 & v295) << v241)) ^ v158 ^ v276;
  LODWORD(v269) = v296 + 84008871 - ((2 * v296) & 0xA03BF4E);
  LODWORD(v288) = v272;
  LODWORD(v295) = v272 & 0xA9A9A9A8 ^ 0xF5FCD474;
  v298 = v218 & v295;
  LODWORD(v269) = v158 ^ ((unint64_t)(v179 & v295) >> v284) ^ (v298 << v280) ^ *(_DWORD *)(v11 + 7488) ^ v269;
  v299 = *(_QWORD *)(v11 + 9432);
  LODWORD(v295) = (v298 << v241)
                + ((((unint64_t)(v295 & v299) >> v284)
                  + 84008871
                  - ((2 * ((unint64_t)(v295 & v299) >> v284)) & 0xA03BF4E)) ^ 0x501DFA7);
  v300 = *(_DWORD *)(v11 + 8576) ^ ((_DWORD)v295 + 84008871 - ((2 * (_DWORD)v295) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7484) ^ *(_DWORD *)(v249 + 4 * BYTE2(v291)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v294)), 8) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v283), 16) ^ v285;
  LOBYTE(v285) = *(_BYTE *)(v293 + (((v292 >> 21) & 0xF8 | (v292 >> 29)) ^ 0xCCLL)) ^ ((((v292 >> 21) & 0xF8 | (v292 >> 29)) ^ 0xAA) - 55) ^ 0x3A;
  LODWORD(v218) = v279 & 0xA4A4A4A4 ^ 0xF2D652D2;
  LODWORD(v291) = *(_DWORD *)(v11 + 8196) ^ 0x764064C6;
  *(_DWORD *)(v11 + 7264) = v291;
  v301 = (unint64_t)(v291 & v218) >> v196;
  v302 = v269 ^ 0x6C3072FE;
  LODWORD(v301) = ((unint64_t)((*(_DWORD *)(v11 + 8392) ^ 0x94B47602) & v218) << v280) + v301;
  LODWORD(v290) = *(_DWORD *)(v249 + 4 * (v292 ^ 0xFEu));
  v303 = v297 ^ 0x6C3072FEu;
  LODWORD(v295) = *(_DWORD *)(v249 + 4 * BYTE2(v300)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v302)), 8) ^ WORD1(v290) ^ ((_DWORD)v290 << 16);
  LODWORD(v183) = __ROR4__(*(_DWORD *)(v249 + ((v303 >> 22) & 0x3FC)), 24);
  LODWORD(v290) = (v295 ^ v183) + 84008871 - ((2 * (v295 ^ v183)) & 0xA03BF4E);
  LOBYTE(v295) = *(_BYTE *)(*(_QWORD *)(v11 + 8136) + ((-89 * (BYTE1(v297) ^ 0x72)) ^ 0x56)) ^ 0xE1;
  LODWORD(v292) = v292 ^ 0x6C3072FE;
  LODWORD(v287) = *(_DWORD *)(v249 + 4 * BYTE2(v292)) ^ __ROR4__(*(_DWORD *)(v249+ 4* ((v295 >> 6) | (4 * v295))), 8) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v300), 16) ^ __ROR4__(*(_DWORD *)(v249 + ((v302 >> 22) & 0x3FC)), 24);
  v304 = *(unsigned int *)(v249 + ((v300 >> 22) & 0x3FC));
  LODWORD(v295) = (((*(_BYTE *)(*(_QWORD *)(v11 + 9704) + (((v304 >> 18) & 0xC0 | (v304 >> 26)) ^ 0xA0))
                                    - (((((v304 >> 18) & 0xC0 | (v304 >> 26)) ^ 0xA7) + 46) ^ ((v304 >> 18) & 0xC0 | (v304 >> 26)) ^ 0xA7)) ^ 0x1B)
                                  - 105) | ((_DWORD)v304 << 8);
  LODWORD(v269) = *(_DWORD *)(v249 + 4 * BYTE2(v303)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * (v269 ^ 0xFEu)), 16);
  HIDWORD(v183) = *(_DWORD *)(v249 + 4 * (115 * v285));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v285) = v183 >> 24;
  HIDWORD(v183) = *(_DWORD *)(v249 + 4 * BYTE1(v300));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v300) = v269 + 84008871 - ((2 * v269) & 0xA03BF4E);
  LODWORD(v269) = (v287 - ((2 * v287 + 226615212) & 0xA03BF4E) - 1815949443) ^ 0x501DFA7;
  LODWORD(v287) = v269 - ((2 * v269 + 41820244) & 0xA03BF4E);
  v305 = *(_DWORD *)(v11 + 8784) ^ ((_DWORD)v301 + 84008871 - ((2 * (_DWORD)v301) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7500) ^ v290;
  LODWORD(v290) = ((*(_DWORD *)(v11 + 7888) ^ 0x9802212B)
                 - 2103007803
                 + ~((2 * (*(_DWORD *)(v11 + 7888) ^ 0x9802212B) + 357108018) & 0x30044256)) ^ 0x9802212B;
  LODWORD(v301) = v301 ^ *(_DWORD *)(v11 + 9128) ^ (v287 + 1983967185);
  LODWORD(v179) = v288 & 0xA4A4A4A4 ^ 0x727256F2;
  LODWORD(v240) = *(_DWORD *)(v11 + 8300);
  LODWORD(v303) = (v240 ^ 0x70D686B2) & v179 ^ (v288 & 0xA0248000 | 0x1020101);
  v306 = *(_DWORD *)(v11 + 8236);
  v307 = (v306 ^ 0x360242C2) & v218;
  *(_DWORD *)(v11 + 7272) = v218;
  v308 = (v240 ^ 0xD0F014A2) & v218;
  *(_QWORD *)(v11 + 7256) = v307;
  *(_QWORD *)(v11 + 7248) = v308;
  *(_DWORD *)(v11 + 7888) = v290 - ((2 * v290 + 716633806) & 0x30044256) - 1386373998;
  v309 = (v290 - ((2 * v290 - 50) & 0x56) - 110) ^ 0x2Bu;
  LODWORD(v302) = (((unint64_t)((((2 * (_DWORD)v303) | 0x3A53E88A) - (_DWORD)v303 - 489288773) ^ 0x3C09E754u) << ((v290 - ((2 * v290 - 50) & 0x56) - 110) ^ 0x2B)) | ((unint64_t)(v179 & v299) >> v284)) ^ 0x501DFA7 ^ *(_DWORD *)(v11 + 7512) ^ __ROR4__(*(_DWORD *)(v249 + 4 * (v297 ^ 0xFEu)), 16) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v292)), 8) ^ *(_DWORD *)(v249 + 4 * BYTE2(v302)) ^ v295;
  LODWORD(v292) = v302 + 1815114494 - ((2 * v302) & 0xD860E5FC);
  LODWORD(v285) = *(_DWORD *)(v11 + 8416) ^ (v308 << v280) ^ (v307 >> v196) ^ ((v183 >> 8)
                                                                             + 84008871
                                                                             - ((2 * (v183 >> 8)) & 0xA03BF4E)) ^ (v285 + 84008871 - ((2 * v285) & 0xA03BF4E)) ^ v300;
  LODWORD(v302) = (v301 + 1815114494 - ((2 * v301) & 0xD860E5FC)) ^ v160;
  v310 = v292 ^ v160;
  LODWORD(v293) = v160;
  LODWORD(v292) = *(_DWORD *)(v249
                            + 4
                            * (115
                                              * (*(_BYTE *)(*(_QWORD *)(v11 + 8064)
                                                          + (((v302 >> 5) & 0xF8 | ((unsigned __int16)v302 >> 13)) ^ 0xAFLL)) ^ ((((v302 >> 5) & 0xF8 | ((unsigned __int16)v302 >> 13)) ^ 0xC9) - 55) ^ 0x3A)));
  v311 = ((_DWORD)v285 + 1815114494 - ((2 * (_DWORD)v285) & 0xD860E5FC)) ^ v160;
  v312 = *(unsigned int *)(v249 + 4 * BYTE1(v311));
  HIDWORD(v183) = *(_DWORD *)(v249 + ((v311 >> 22) & 0x3FC));
  LODWORD(v183) = HIDWORD(v183);
  LODWORD(v295) = (v312 << ((-91 * (((v302 >> 5) & 0x38 ^ 0x38) + ((v302 >> 5) & 0x38))) & 0xF8))
                + (v312 >> 8);
  LODWORD(v300) = ((*(_DWORD *)(v249 + 4 * BYTE1(v310)) << 24)
                 + 84008871
                 - ((*(_DWORD *)(v249 + 4 * BYTE1(v310)) << 25) & 0xA000000)) ^ 0x501DFA7 | (*(_DWORD *)(v249 + 4 * BYTE1(v310)) >> 8);
  LODWORD(v300) = v300 + *(_DWORD *)(v11 + 9728) + ~((2 * v300) & 0xA03BF4E);
  LODWORD(v303) = (v183 >> 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * ((v301 - 2 - ((2 * v301) & 0xFC)) ^ v160)), 16) ^ *(_DWORD *)(v249+ 4* (5* (*(_BYTE *)(*(_QWORD *)(v11 + 7848)+ ((BYTE2(v305) + 55) ^ 0x34)) ^ 0xB3)));
  v313 = *(unsigned int *)(v249
                         + 4 * ((BYTE3(v302) - ((v302 >> 23) & 0xA4) + 82) ^ 0x52));
  v314 = *(_QWORD *)(v11 + 8168);
  LODWORD(v307) = *(_DWORD *)(v249 + 4 * BYTE2(v311)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v310), 16) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v305)), 8) ^ (((-*(_BYTE *)(v314 + (((v313 >> 18) & 0xC0 | (v313 >> 26)) ^ 0x16)) ^ (-*(_BYTE *)(v314 + (((v313 >> 18) & 0xC0 | (v313 >> 26)) ^ 0x16)) >> 6) ^ (-*(_BYTE *)(v314 + (((v313 >> 18) & 0xC0 | (v313 >> 26)) ^ 0x16)) >> 3) ^ 0x2B) - 105) | ((_DWORD)v313 << 8));
  LODWORD(v313) = v307 & 0x3DA166A6 ^ 0x3DA166A6;
  LODWORD(v304) = v288 & 0xF0F0F0E;
  LODWORD(v312) = v288 & 0xF0F0F0E ^ 0x7EB82EF3 ^ (2091934969 * (v313 + (v307 & 0x3DA166A6)));
  LODWORD(v301) = *(_DWORD *)(v249
                            + 4 * ((BYTE2(v310) - ((v310 >> 15) & 0xC2) - 31) ^ 0xE1)) ^ ((5 * (*(_BYTE *)(*(_QWORD *)(v11 + 7912) + ((HIBYTE(*(_DWORD *)(v249 + ((v305 >> 22) & 0x3FC))) + 55) ^ 0x30)) ^ 0xDF)) | (*(_DWORD *)(v249 + ((v305 >> 22) & 0x3FC)) << 8));
  LODWORD(v301) = (v301 - 937747949 - ((2 * v301) & 0x90363426)) ^ *(_DWORD *)(v11 + 8712);
  v315 = *(_QWORD *)(v11 + 8832);
  v316 = (unint64_t)(v312 & v315) << v309;
  v317 = *(_QWORD *)(v11 + 8848);
  v318 = (unint64_t)(v312 & v317) >> (*(_BYTE *)(v11 + 7904) ^ 4u);
  LOBYTE(v288) = *(_BYTE *)(v11 + 7904) ^ 4;
  *(_QWORD *)(v11 + 8712) = *(_DWORD *)(v11 + 7904) ^ 0xE10F1D04;
  LODWORD(v292) = __ROR4__(*(_DWORD *)(v249 + 4 * v311), 16) ^ 0x501DFA7 ^ ((v292 >> (((v302 >> 5) & 8 ^ 8) + ((v302 >> 5) & 8))) | ((_DWORD)v292 << 24)) ^ ((v301 ^ (v318 + v316)) + 84008871 - ((2 * (v301 ^ (v318 + v316))) & 0xA03BF4E));
  LODWORD(v318) = v292 + 1815114494 - ((2 * v292) & 0xD860E5FC);
  LODWORD(v292) = (v307 - 937747949 - ((2 * v307) & 0x90363426)) ^ *(_DWORD *)(v11 + 8440);
  LODWORD(v302) = *(_DWORD *)(v11 + 8480) ^ 0xC81B1A13 ^ __ROR4__(*(_DWORD *)(v249 + ((v310 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v249 + 4 * BYTE2(v302)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v305), 16) ^ v295;
  LODWORD(v305) = (v303 - 937747949 - ((2 * v303) & 0x90363426)) ^ *(_DWORD *)(v11 + 8424);
  v319 = *(_DWORD *)(v11 + 8040);
  LODWORD(v310) = v319 & 0xF0F0F0E ^ 0x3070300 ^ ((v302 & 0x87878787 ^ 0x87878787) + (v302 & 0x87878787));
  v320 = *(_QWORD *)(v11 + 8800);
  v321 = v293 ^ ((unint64_t)(*(_QWORD *)(v11 + 8992) & (v304 ^ 0x868D8185)) << v320) ^ ((unint64_t)((v304 ^ 0x868D8185) & (v306 ^ 0xF0A0A8A)) >> v288) ^ ((_DWORD)v292 + *(_DWORD *)(v11 + 7464) + ~((2 * (_DWORD)v292) & 0xD860E5FC));
  *(_QWORD *)(v11 + 9128) = v309;
  v322 = *(_QWORD *)(v11 + 9040);
  LODWORD(v302) = (((unint64_t)(v310 & v315) << v309) | ((unint64_t)(v310 & v317) >> v322)) ^ v302;
  LODWORD(v292) = v305 + 84008871 - ((2 * v305) & 0xA03BF4E);
  LODWORD(v305) = v302 + 1815114494 - ((2 * v302) & 0xD860E5FC);
  LODWORD(v302) = ((167 * (v321 >> 8)) ^ 0x63)
                + ((167 * (v321 >> 8)) ^ 6)
                + *(unsigned __int8 *)(*(_QWORD *)(v11 + 8056) + ((-89 * BYTE1(v321)) ^ 0x15));
  LODWORD(v301) = v319 & 0xF0F0F0E ^ 0x84808487;
  v323 = *(_DWORD *)(v11 + 8300);
  v324 = (unint64_t)((v323 ^ 0x8881048A) & v301) << v309;
  *(_DWORD *)(v11 + 7040) = v306 ^ 0xF0A0A8A;
  *(_DWORD *)(v11 + 7216) = v301;
  *(_QWORD *)(v11 + 7240) = v324;
  LODWORD(v292) = v300 ^ (v324 | ((unint64_t)((v306 ^ 0xF0A0A8A) & v301) >> v322)) ^ v292;
  LODWORD(v300) = (v292 + 1815114494 - ((2 * v292) & 0xD860E5FC)) ^ v293;
  v325 = v314;
  LOBYTE(v292) = ((v302 ^ 0xE5u) >> ((((~(2 * v313) + v313) & 0x8F) + (v313 & 0x86)) ^ 0x89))
               + 4 * (v302 ^ 0xE5);
  LODWORD(v302) = -*(_BYTE *)(v314
                                             + (((v300 >> 18) & 0xC0 | (v300 >> 26)) ^ 0x16));
  *(_DWORD *)(v11 + 9176) = -*(unsigned __int8 *)(v314
                                                + (((v300 >> 18) & 0xC0 | (v300 >> 26)) ^ 0x16)) ^ (v302 >> 6) ^ (v302 >> 3);
  v326 = (v321 >> 5) | (8 * (v321 & 0x1F));
  v327 = v305 ^ v293;
  LODWORD(v301) = *(_DWORD *)(v249 + 4 * BYTE2(v300));
  LODWORD(v303) = *(_DWORD *)(v249 + 4 * (v305 ^ v293));
  *(_DWORD *)(v11 + 8480) = ((((v321 >> 5) & 6 | (8 * (v321 & 0x1F))) ^ 0x22 | (v326 ^ 0xDC) & 0xFE) ^ v326 ^ 0xDC)
                          - (v326 ^ 0xDC)
                          + *(unsigned __int8 *)(*(_QWORD *)(v11 + 8080) + (v326 ^ 0xFA));
  v328 = v318 ^ v293;
  v329 = v293;
  v330 = v301 ^ __ROR4__(v303, 16) ^ __ROR4__(*(_DWORD *)(v249 + ((v321 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v328)), 8);
  v331 = *(_DWORD *)(v11 + 9264) ^ 0xA7u;
  v332 = *(_DWORD *)(v11 + 8936);
  v333 = *(_DWORD *)(v11 + 9584);
  LODWORD(v326) = ((unint64_t)(v333 ^ 0x501DFA7u) >> (*(_DWORD *)(v11 + 9264) ^ 0xA7u))
                + ((unint64_t)(v333 ^ 0x501DFA7u) << (v332 ^ 0xA7u));
  v334 = v326 + 84008871 - ((2 * v326) & 0xA03BF4E);
  v335 = *(unsigned int *)(v249 + ((v328 >> 22) & 0x3FC));
  LODWORD(v292) = *(_DWORD *)(v249 + 4 * BYTE2(v327)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v292), 8) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v300), 16) ^ (((-*(_BYTE *)(v325 + (((v335 >> 18) & 0xC0 | (v335 >> 26)) ^ 0x16)) ^ (-*(_BYTE *)(v325 + (((v335 >> 18) & 0xC0 | (v335 >> 26)) ^ 0x16)) >> 6) ^ (-*(_BYTE *)(v325 + (((v335 >> 18) & 0xC0 | (v335 >> 26)) ^ 0x16)) >> 3) ^ 0x2B) - 105) | ((_DWORD)v335 << 8));
  v336 = *(_DWORD *)(v11 + 9528);
  v337 = *(_DWORD *)(v11 + 8212);
  LODWORD(v335) = ((unint64_t)(v337 ^ 0x501DFA7u) << (v332 ^ 0xA7u))
                + ((unint64_t)(v337 ^ 0x501DFA7u) >> (v336 ^ 0xA7u));
  v338 = *(_DWORD *)(v11 + 0x2000);
  *(_QWORD *)(v11 + 8424) = v331;
  LODWORD(v301) = ((unint64_t)(v338 ^ 0x501DFA7u) >> v331) | ((unint64_t)(v338 ^ 0x501DFA7u) << (v332 ^ 0xA7u));
  v339 = v292 + 84008871 - ((2 * v292) & 0xA03BF4E);
  v340 = v335 + 84008871 - ((2 * v335) & 0xA03BF4E);
  v341 = v301 + 84008871 - ((2 * v301) & 0xA03BF4E);
  v342 = *(_DWORD *)(v11 + 9224);
  *(_QWORD *)(v11 + 8440) = v332 ^ 0xA7u;
  *(_QWORD *)(v11 + 8416) = v336 ^ 0xA7u;
  LODWORD(v292) = ((unint64_t)(v342 ^ 0x501DFA7u) << (v332 ^ 0xA7u)) | ((unint64_t)(v342 ^ 0x501DFA7u) >> (v336 ^ 0xA7u));
  v343 = v292 + 84008871 - ((2 * v292) & 0xA03BF4E);
  v344 = *(_DWORD *)(v249 + 4 * BYTE2(v321)) ^ __ROR4__(*(_DWORD *)(v249 + ((v327 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v300)), 8) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v328), 16);
  LODWORD(v321) = *(_DWORD *)(v11 + 9736) & 0x2A2A2A2A ^ 0x353F1737;
  v345 = v320;
  v346 = (unint64_t)((*(_DWORD *)(v11 + 8392) ^ 0x15353F03) & v321) << v320;
  v347 = *(_DWORD *)(v11 + 8196) ^ 0x3F092D0E;
  v348 = v347 & v321;
  v349 = *(_QWORD *)(v11 + 8712);
  if (v332 == 84008871)
    v334 = v333;
  *(_DWORD *)(v11 + 8980) = *(_DWORD *)(v11 + 8784) ^ ((v346 ^ (v348 >> v349))
                                                     + 84008871
                                                     - ((2 * (v346 ^ (v348 >> v349))) & 0xA03BF4E)) ^ v334 ^ v339;
  v350 = v344 + 84008871 - ((2 * v344) & 0xA03BF4E);
  v351 = (v319 ^ 0xB39753C0) & 0x2A2A2A2A | 0x15151515;
  v352 = *(_DWORD *)(v11 + 8236) ^ 0x3F0A0A0A;
  *(_DWORD *)(v11 + 7320) = v352;
  *(_DWORD *)(v11 + 7312) = v323 ^ 0x1831142A;
  v353 = (v323 ^ 0x1831142A) & v351;
  if (v332 == 84008871)
    v341 = v338;
  if (v336 == 84008871)
    v340 = v337;
  v354 = (v353 << *(_QWORD *)(v11 + 9128)) + ((unint64_t)(v352 & v351) >> v349);
  v355 = (v340 ^ v354 ^ v350) + 1815114494 - ((2 * (v340 ^ v354 ^ v350)) & 0xD860E5FC);
  v356 = *(_DWORD *)(v11 + 9728);
  v357 = (v346 + (v348 >> *(_QWORD *)(v11 + 9040))) ^ v341 ^ (v330 + v356 + ~((2 * v330) & 0xA03BF4E));
  v358 = v357 + 1815114494 - ((2 * v357) & 0xD860E5FC);
  *(_DWORD *)(v11 + 7328) = v347;
  v359 = v345;
  v360 = ((unint64_t)(v347 & v351) >> v349) + (v353 << v345);
  v361 = v360 + 84008871 - ((2 * v360) & 0xA03BF4E);
  if (v336 == 84008871)
    v343 = v342;
  v362 = ((v343 ^ v361) - 2102525313 - ((2 * (v343 ^ v361)) & 0x55C04FE)) ^ 0x82AE027F ^ *(_DWORD *)(v249 + 4 * BYTE2(v328));
  v363 = *(_DWORD *)(v249 + 4 * (115 * (*(_DWORD *)(v11 + 8480) ^ 0xCB)));
  v364 = v362 ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v327)), 8) ^ HIWORD(v363) ^ (v363 << 16);
  v365 = __ROR4__(*(_DWORD *)(v249 + 4 * ((*(_DWORD *)(v11 + 9176) ^ 0x2B) - 105)), 24);
  *(_DWORD *)(v11 + 9488) = v329;
  v366 = ((v364 ^ v365) + 1815114494 - ((2 * (v364 ^ v365)) & 0xD860E5FC)) ^ v329;
  *(_DWORD *)(v11 + 8392) = v366;
  v367 = v355 ^ v329;
  *(_DWORD *)(v11 + 9736) = v367;
  *(_DWORD *)(v11 + 7488) = v358 ^ v329;
  v368 = *(_QWORD *)(v11 + 6960);
  v369 = *(_DWORD *)(v368
                   + 4
                   * (unsigned __int16)(151 * HIBYTE(v366)
                                      - 262 * ((unsigned __int16)((2417359 * HIBYTE(v366)) >> 16) >> 6)));
  v370 = *(_DWORD *)(v368
                   + 4
                   * (unsigned __int16)(151 * BYTE1(v367)
                                      - 262 * ((unsigned __int16)((2417359 * BYTE1(v367)) >> 16) >> 6)));
  v371 = *(unsigned int *)(v368
                         + 4
                         * (unsigned __int16)(151 * ((v358 ^ v329) >> 16)
                                            - 262
                                            * ((unsigned __int16)((2417359
                                                                 * ((v358 ^ v329) >> 16)) >> 16) >> 6)));
  v372 = v368;
  *(_QWORD *)(v11 + 9176) = v371;
  v373 = -*(unsigned __int8 *)(*(_QWORD *)(v11 + 8168) + (((v371 >> 18) & 0xC0 | (v371 >> 26)) ^ 0x16));
  *(_DWORD *)(v11 + 7512) = v373 ^ 0x2B;
  LODWORD(v368) = *(_DWORD *)(v11 + 8980);
  *(_DWORD *)(v11 + 7436) = 151 * BYTE3(v368)
                          % ((v373 ^ 0xD4) & (v373 ^ 0x2B) ^ 0x106u);
  v374 = v370 ^ __ROR4__(v369, 16) ^ __ROR4__(*(_DWORD *)(v372+ 4* (unsigned __int16)(151 * BYTE2(v368)- 262* ((unsigned __int16)((2417359* BYTE2(v368)) >> 16) >> 6))), 24);
  v375 = __ROR4__(*(_DWORD *)(v372+ 4* (unsigned __int16)(151 * (v358 ^ v329)- 262* ((unsigned __int16)((2417359 * (v358 ^ v329)) >> 16) >> 6))), 8);
  LODWORD(v368) = *(_DWORD *)(v11 + 8176) ^ 0x38440C00 ^ *(_DWORD *)(v11 + 8188);
  v376 = (unint64_t)((*(_QWORD *)(v11 + 8832) << v359) & v368) >> v359;
  v377 = *(_QWORD *)(v11 + 9432) >> v349;
  *(_DWORD *)(v11 + 7288) = v368;
  LODWORD(v376) = v376 + ((unint64_t)(v368 & v377) << v349);
  LODWORD(v372) = *(_DWORD *)(v11 + 7952);
  v378 = 2 * (v372 ^ 0x59CBA9E0);
  LODWORD(v376) = v378 & (4 * ((v376 ^ (2 * (v376 & (v372 ^ 0x59CBA9E0)))) & (v372 ^ 0x59CBA9E0))) ^ v376 ^ (2 * (v376 & (v372 ^ 0x59CBA9E0)));
  *(_DWORD *)(v11 + 8480) = v372 ^ 0x59CBA9E0;
  LODWORD(v368) = v378 & (4 * ((v319 ^ 0x339753C0) & (v372 ^ 0x59CBA9E0))) & (16 * (v376 & (v372 ^ 0x19CBA9E0))) ^ v376;
  *(_DWORD *)(v11 + 7408) = v368;
  v379 = *(_DWORD *)(v11 + 7964) ^ 0x7CC368E5 ^ v368 ^ *(_DWORD *)(v11 + 8032) ^ ((v374 ^ v375)
                                                                                + 84008871
                                                                                - ((2 * (v374 ^ v375)) & 0xA03BF4E));
  v380 = (v379 - 318409076 - ((2 * v379) & 0xDA0AED18)) ^ *(_DWORD *)(v11 + 9640);
  v381 = *(_DWORD *)(v11 + 8964) ^ 0x501DFA7u;
  v382 = *(_QWORD *)(v11 + 8504);
  v383 = *(_QWORD *)(v11 + 8776);
  *(_QWORD *)(v11 + 7336) = v381;
  v385 = (v380 + 84008871 - ((2 * v380) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7704);
  v386 = *(_QWORD *)(v11 + 8512);
  LODWORD(v377) = ((unint64_t)(v385 ^ 0x5B5B5B5Bu) << v383) + ((unint64_t)(v385 ^ 0x5B5B5B5Bu) >> v386);
  v387 = v377 + v356 + ~((2 * v377) & 0xA03BF4E);
  v388 = v385 ^ 0x5E5A84FC;
  if (*(_DWORD *)(v11 + 8472) != 84008871)
    v388 = v387;
  *(_DWORD *)(v11 + 7432) = v388;
  v384 = (v381 >> v383) ^ (v381 << v382);
  *(_DWORD *)(v11 + 7500) = v384 + 84008871 - ((2 * v384) & 0xA03BF4E);
  v389 = ((unint64_t)(*(_DWORD *)(v11 + 9696) ^ 0x501DFA7u) >> v383) ^ ((unint64_t)(*(_DWORD *)(v11 + 9696) ^ 0x501DFA7u) << v386);
  *(_DWORD *)(v11 + 7484) = v389 + 84008871 - ((2 * v389) & 0xA03BF4E);
  v390 = ((unint64_t)(*(_DWORD *)(v11 + 9616) ^ 0xD795E3C5) >> v383) ^ ((unint64_t)(*(_DWORD *)(v11 + 9616) ^ 0xD795E3C5) << v386);
  *(_DWORD *)(v11 + 7480) = v390 - 678042683 - ((2 * v390) & 0xAF2BC78A);
  v391 = ((unint64_t)(*(_DWORD *)(v11 + 8664) ^ 0xD795E3C5) << v386) ^ ((unint64_t)(*(_DWORD *)(v11 + 8664) ^ 0xD795E3C5) >> v383);
  *(_DWORD *)(v11 + 7464) = v391 - 678042683 - ((2 * v391) & 0xAF2BC78A);
  v392 = *(_DWORD *)(v11 + 9680);
  v393 = ((unint64_t)(v392 ^ 0x501DFA7u) >> v383) ^ ((unint64_t)(v392 ^ 0x501DFA7u) << v386);
  *(_DWORD *)(v11 + 7460) = v393 + 84008871 - ((2 * v393) & 0xA03BF4E);
  v394 = *(_DWORD *)(v11 + 9200);
  v395 = v394 ^ 0x501DFA7u;
  *(_QWORD *)(v11 + 8032) = v395;
  v396 = (v395 >> v383) | (v395 << v386);
  *(_DWORD *)(v11 + 7452) = v396 + 84008871 - ((2 * v396) & 0xA03BF4E);
  v397 = *(_DWORD *)(v11 + 9360);
  v398 = ((unint64_t)(v397 ^ 0x501DFA7u) >> v383) + ((unint64_t)(v397 ^ 0x501DFA7u) << v386);
  *(_DWORD *)(v11 + 7448) = v398 + 84008871 - ((2 * v398) & 0xA03BF4E);
  v399 = *(_DWORD *)(v11 + 8376);
  v400 = ((unint64_t)(v399 ^ 0x501DFA7u) << v382) ^ ((unint64_t)(v399 ^ 0x501DFA7u) >> v383);
  *(_DWORD *)(v11 + 7416) = v400 + 84008871 - ((2 * v400) & 0xA03BF4E);
  v401 = *(_DWORD *)(v11 + 8432);
  v402 = ((unint64_t)(v401 ^ 0xD795E3C5) >> v383) + ((unint64_t)(v401 ^ 0xD795E3C5) << v382);
  *(_DWORD *)(v11 + 7392) = v402 - 678042683 - ((2 * v402) & 0xAF2BC78A);
  v403 = *(_DWORD *)(v11 + 9192);
  v404 = ((unint64_t)(v403 ^ 0xD795E3C5) >> v383) ^ ((unint64_t)(v403 ^ 0xD795E3C5) << v382);
  *(_DWORD *)(v11 + 7384) = v404 - 678042683 - ((2 * v404) & 0xAF2BC78A);
  v405 = ((*(_DWORD *)(v11 + 9408) ^ 0x501DFA7)
        - ((2 * (*(_DWORD *)(v11 + 9408) ^ 0x501DFA7) + 231497818) & 0xA03BF4E)
        - 873984044) ^ 0x501DFA7;
  v406 = v405 - ((2 * v405 + 36937638) & 0xA03BF4E) + 1042001786;
  v407 = ((unint64_t)(v406 ^ 0x501DFA7u) >> v383) + ((unint64_t)(v406 ^ 0x501DFA7u) << v382);
  *(_DWORD *)(v11 + 7360) = v407 + 84008871 - ((2 * v407) & 0xA03BF4E);
  v408 = *(_DWORD *)(v11 + 8616);
  v409 = (*(_DWORD *)(v11 + 9256) ^ 0x501DFA7)
       - 2 * (((*(_DWORD *)(v11 + 9256) ^ 0x501DFA7) + 95232736) & v408 ^ *(_DWORD *)(v11 + 9256) & 8)
       + 1387201159;
  v410 = (v409 ^ 0x501DFA7) - 2 * (((v409 ^ 0x501DFA7) + 38984992) & v408 ^ v409 & 8) - 1219183417;
  v411 = ((unint64_t)(v410 ^ 0x501DFA7u) << v382) ^ ((unint64_t)(v410 ^ 0x501DFA7u) >> v383);
  *(_DWORD *)(v11 + 7352) = v411 + 84008871 - ((2 * v411) & 0xA03BF4E);
  v412 = *(_DWORD *)(v11 + 9496);
  v413 = ((unint64_t)(v412 ^ 0x501DFA7u) >> v383) ^ ((unint64_t)(v412 ^ 0x501DFA7u) << v382);
  *(_DWORD *)(v11 + 7344) = v413 + 84008871 - ((2 * v413) & 0xA03BF4E);
  v414 = *(_DWORD *)(v11 + 9480);
  v415 = ((unint64_t)(v414 ^ 0x501DFA7u) << v382) ^ ((unint64_t)(v414 ^ 0x501DFA7u) >> v383);
  *(_DWORD *)(v11 + 7364) = v415 + 84008871 - ((2 * v415) & 0xA03BF4E);
  v416 = *(_DWORD *)(v11 + 8944);
  v417 = v416 ^ 0x501DFA7u;
  *(_QWORD *)(v11 + 7304) = v417;
  v418 = (v417 >> v383) + (v417 << v382);
  *(_DWORD *)(v11 + 7380) = v418 + 84008871 - ((2 * v418) & 0xA03BF4E);
  v419 = *(_DWORD *)(v11 + 9116);
  v420 = ((unint64_t)(v419 ^ 0x501DFA7u) >> v383) + ((unint64_t)(v419 ^ 0x501DFA7u) << v386);
  *(_DWORD *)(v11 + 7368) = v420 + 84008871 - ((2 * v420) & 0xA03BF4E);
  v421 = *(_DWORD *)(v11 + 8912);
  v422 = v421 ^ 0x501DFA7u;
  *(_QWORD *)(v11 + 7296) = v422;
  v423 = (v422 << v386) + (v422 >> v383);
  v424 = v423 + 84008871 - ((2 * v423) & 0xA03BF4E);
  LODWORD(v422) = (((167 * HIBYTE(*(_DWORD *)(v11 + 9736))) ^ 6)
                 + ((167 * HIBYTE(*(_DWORD *)(v11 + 9736))) ^ 0x63)
                 + *(unsigned __int8 *)(*(_QWORD *)(v11 + 8056)
                                      + ((-89 * HIBYTE(*(_DWORD *)(v11 + 9736))) ^ 0x15))) ^ 0xFFFFFFE5;
  v425 = *(_QWORD *)(v11 + 6960);
  v426 = *(_DWORD *)(v11 + 8980);
  v427 = *(_DWORD *)(v11 + 8392);
  LODWORD(v422) = ((((v373 >> 6) ^ (v373 >> 3) ^ *(_DWORD *)(v11 + 7512))
                                   - 105) | (*(_QWORD *)(v11 + 9176) << 8)) ^ __ROR4__(*(_DWORD *)(v425 + 4 * (unsigned __int16)(151 * ((v422 >> 6) | (4 * v422)) - 262 * ((unsigned __int16)((2417359 * ((v422 >> 6) | (4 * v422))) >> 16) >> 6))), 16) ^ __ROR4__(*(_DWORD *)(v425 + 4 * (unsigned __int16)(151 * v426 - 262 * ((unsigned __int16)((2417359 * v426) >> 16) >> 6))), 8) ^ *(_DWORD *)(v425 + 4 * (unsigned __int16)(151 * BYTE1(v427) - 262 * ((unsigned __int16)((2417359 * BYTE1(v427)) >> 16) >> 6)));
  v428 = v422 + 84008871 - ((2 * v422) & 0xA03BF4E);
  v429 = *(_DWORD *)(v11 + 8964);
  if (*(_DWORD *)(v11 + 8472) != 84008871)
    v429 = *(_DWORD *)(v11 + 7500);
  *(_DWORD *)(v11 + 7404) = v429;
  v430 = *(_DWORD *)(v11 + 8932);
  v431 = *(_DWORD *)(v11 + 9696);
  if (v430 != -762037150)
    v431 = *(_DWORD *)(v11 + 7484);
  *(_DWORD *)(v11 + 7512) = v431;
  v432 = *(_DWORD *)(v11 + 9616);
  if (v430 != -762037150)
    v432 = *(_DWORD *)(v11 + 7480);
  *(_DWORD *)(v11 + 7476) = v432;
  v433 = *(_DWORD *)(v11 + 8664);
  if (v430 != -762037150)
    v433 = *(_DWORD *)(v11 + 7464);
  *(_DWORD *)(v11 + 7484) = v433;
  v434 = *(_DWORD *)(v11 + 7460);
  if (v430 == -762037150)
    v434 = v392;
  *(_DWORD *)(v11 + 7456) = v434;
  v435 = *(_DWORD *)(v11 + 7452);
  if (v430 == -762037150)
    v435 = v394;
  *(_DWORD *)(v11 + 7440) = v435;
  v436 = v430;
  v437 = *(_DWORD *)(v11 + 7448);
  if (v430 == -762037150)
    v437 = v397;
  *(_DWORD *)(v11 + 7424) = v437;
  v438 = *(_DWORD *)(v11 + 9552);
  v439 = *(_DWORD *)(v11 + 7416);
  if (v438 == 84008871)
    v439 = v399;
  *(_DWORD *)(v11 + 9176) = v439;
  v440 = *(_DWORD *)(v11 + 7392);
  if (v438 == 84008871)
    v440 = v401;
  *(_DWORD *)(v11 + 7500) = v440;
  v441 = *(_DWORD *)(v11 + 7384);
  if (v438 == 84008871)
    v441 = v403;
  *(_DWORD *)(v11 + 7480) = v441;
  *(_DWORD *)(v11 + 9408) = v406;
  v442 = *(_DWORD *)(v11 + 7360);
  if (v438 == 84008871)
    v442 = v406;
  *(_DWORD *)(v11 + 7460) = v442;
  *(_DWORD *)(v11 + 9256) = v410;
  v443 = *(_DWORD *)(v11 + 7352);
  if (v438 == 84008871)
    v443 = v410;
  *(_DWORD *)(v11 + 7464) = v443;
  v444 = *(_DWORD *)(v11 + 7344);
  if (v438 == 84008871)
    v444 = v412;
  *(_DWORD *)(v11 + 7452) = v444;
  v445 = *(_DWORD *)(v11 + 7364);
  if (v438 == 84008871)
    v445 = v414;
  *(_DWORD *)(v11 + 7448) = v445;
  v446 = v438;
  if (v438 == 84008871)
    v447 = v416;
  else
    v447 = *(_DWORD *)(v11 + 7380);
  v448 = *(_DWORD *)(v11 + 7368);
  if (v436 == -762037150)
    v448 = v419;
  *(_DWORD *)(v11 + 7416) = v448;
  if (v436 == -762037150)
    v449 = v421;
  else
    v449 = v424;
  v450 = *(_DWORD *)(v11 + 9640);
  v451 = ((v428 ^ v449) - 318409076 - ((2 * (v428 ^ v449)) & 0xDA0AED18)) ^ v450;
  v452 = (v451 + 2093181157 - ((2 * v451) & 0xF986D1CA)) ^ *(_DWORD *)(v11 + 7964);
  v453 = (v452 + 84008871 - ((2 * v452) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7704);
  v454 = *(_DWORD *)(v11 + 7408) ^ 0x501DFA7;
  v455 = (v453 + 84008871 - ((2 * v453) & 0xA03BF4E)) ^ v454;
  v456 = ((unint64_t)(v455 ^ 0x5B5B5B5Bu) >> v386) + ((unint64_t)(v455 ^ 0x5B5B5B5Bu) << v383);
  v457 = v456 + 84008871 - ((2 * v456) & 0xA03BF4E);
  v458 = v455 ^ 0x5E5A84FC;
  if (v436 == -762037150)
    v459 = v458;
  else
    v459 = v457;
  v460 = v427;
  v461 = *(_DWORD *)(v11 + 7488);
  v462 = *(_DWORD *)(v11 + 9736);
  v463 = *(_DWORD *)(v425
                   + 4
                   * (unsigned __int16)(151 * BYTE1(v426)
                                      - 262 * ((unsigned __int16)((2417359 * BYTE1(v426)) >> 16) >> 6))) ^ __ROR4__(*(_DWORD *)(v425 + 4 * (unsigned __int16)(151 * BYTE2(v427) - 262 * ((unsigned __int16)((2417359 * BYTE2(v427)) >> 16) >> 6))), 24);
  v464 = __ROR4__(*(_DWORD *)(v425+ 4* (unsigned __int16)(151 * v462- 262* ((unsigned __int16)((2417359 * v462) >> 16) >> 6))), 8);
  v465 = v447 ^ __ROR4__(*(_DWORD *)(v425+ 4* (unsigned __int16)(151 * HIBYTE(v461)- 262* ((unsigned __int16)((2417359 * HIBYTE(v461)) >> 16) >> 6))), 16) ^ ((v463 ^ v464) + 84008871 - ((2 * (v463 ^ v464)) & 0xA03BF4E));
  v466 = *(_DWORD *)(v11 + 8176);
  v467 = (v465 - 2022246796 - ((2 * v465) & 0xEEDECE8)) ^ v466;
  v468 = (v467 + 84008871 - ((2 * v467) & 0xA03BF4E)) ^ v454;
  v469 = (v468 - 318409076 - ((2 * v468) & 0xDA0AED18)) ^ v450;
  v470 = *(_DWORD *)(v11 + 8188);
  v471 = (v469 - 1087178124 - ((2 * v469) & 0x7E65F4E8)) ^ v470;
  v472 = ((unint64_t)(v471 ^ 0x5B5B5B5Bu) << v383) ^ ((unint64_t)(v471 ^ 0x5B5B5B5Bu) >> v382);
  v473 = v472 + 84008871 - ((2 * v472) & 0xA03BF4E);
  v474 = (*(_DWORD *)(v11 + 9640) & 0x1B ^ 0x13 | *(_DWORD *)(v11 + 9640) & 0x1B ^ 8) ^ 0xD ^ ((v461 >> 2) & 0xC0 | ((unsigned __int16)v461 >> 10));
  v475 = v471 ^ 0x5E5A84FC;
  if (v446 != 84008871)
    v475 = v473;
  v476 = -*(unsigned __int8 *)(*(_QWORD *)(v11 + 8168) + v474);
  v477 = -*(_BYTE *)(*(_QWORD *)(v11 + 8168) + v474);
  LOBYTE(v476) = v476 ^ (v477 >> 6) ^ (v477 >> 3);
  v478 = v470 ^ 0xBA3325D3 ^ *(_DWORD *)(v11 + 7404) ^ __ROR4__(*(_DWORD *)(v425 + 4 * *(unsigned int *)(v11 + 7436)), 16) ^ __ROR4__(*(_DWORD *)(v425+ 4* (unsigned __int16)(151 * v460- 262* ((unsigned __int16)((2417359 * v460) >> 16) >> 6))), 8) ^ __ROR4__(*(_DWORD *)(v425+ 4* (unsigned __int16)(151 * BYTE2(v462) - 262 * ((unsigned __int16)((2417359 * BYTE2(v462)) >> 16) >> 6))), 24) ^ *(_DWORD *)(v425+ 4* (unsigned __int16)(151 * ((v476 ^ 0x2B) - 105) - 262 * ((unsigned __int16)((2417359 * ((v476 ^ 0x2B) - 105)) >> 16) >> 6)));
  v479 = (v478 - 318409076 - ((2 * v478) & 0xDA0AED18)) ^ *(_DWORD *)(v11 + 9640);
  v480 = (v479 - 2022246796 - ((2 * v479) & 0xEEDECE8)) ^ v466;
  v481 = (v480 + 84008871 - ((2 * v480) & 0xA03BF4E)) ^ v454;
  v482 = ((unint64_t)(v481 ^ 0x5B5B5B5Bu) >> v382) + ((unint64_t)(v481 ^ 0x5B5B5B5Bu) << v383);
  v483 = v482 + 84008871 - ((2 * v482) & 0xA03BF4E);
  v484 = v481 ^ 0x5E5A84FC;
  if (*(_DWORD *)(v11 + 8472) != 84008871)
    v484 = v483;
  v485 = *(_DWORD *)(v11 + 9560);
  if ((v485 & 1) != 0)
    v486 = v459;
  else
    v486 = v475;
  if ((v485 & 1) != 0)
    v487 = v484;
  else
    v487 = v459;
  if ((v485 & 1) != 0)
    v484 = *(_DWORD *)(v11 + 7432);
  else
    v475 = *(_DWORD *)(v11 + 7432);
  v488 = 2 * *(_DWORD *)(v11 + 8488) - v485 + 1;
  *(_DWORD *)(v11 + 7408) = v488;
  v489 = (v488 & 2) == 0;
  if ((v488 & 2) != 0)
    v490 = v486;
  else
    v490 = v484;
  *(_DWORD *)(v11 + 8980) = v490;
  if (v489)
    v484 = v486;
  *(_DWORD *)(v11 + 7436) = v484;
  if (v489)
    v491 = v475;
  else
    v491 = v487;
  *(_DWORD *)(v11 + 9736) = v491;
  if (v489)
    v475 = v487;
  *(_DWORD *)(v11 + 7432) = v475;
  v492 = *(_DWORD *)(v11 + 7552);
  v493 = *(_DWORD *)(v11 + 7532);
  v494 = *(_DWORD *)(v11 + 8000);
  v495 = *(_DWORD *)(v11 + 7712);
  v496 = (v494 ^ 0xFAFE2058)
       + (v495 ^ 0xFAFE2058)
       + (v493 ^ 0xC541C376 ^ ((v492 ^ 0x988121F3) - ((2 * (v492 ^ 0x988121F3) + 114263554) & 0xA03BF4E) - 127294808));
  *(_DWORD *)(v11 + 7488) = v496 - ((2 * v496 + 79726426) & 0xA03BF4E);
  v497 = *(_QWORD *)(v11 + 9040);
  v498 = *(_QWORD *)(v11 + 8800);
  v499 = *(_QWORD *)(v11 + 7976) << v498;
  v500 = (*(_QWORD *)(v11 + 7944) >> v497) | v499;
  v501 = *(_DWORD *)(v11 + 9728);
  v502 = v495 ^ (v500 + v501 + ~((2 * v500) & 0xA03BF4E));
  v503 = (v502 + 84008871 - ((2 * v502) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7416);
  v504 = v503 + 1815114494 - ((2 * v503) & 0xD860E5FC);
  v505 = (*(_DWORD *)(v11 + 7776) & *(_DWORD *)(v11 + 7920));
  v506 = *(_QWORD *)(v11 + 9128);
  v507 = *(_QWORD *)(v11 + 7688) << v506;
  v508 = *(_DWORD *)(v11 + 8784) ^ ((_DWORD)v507
                                  + (v505 >> v497)
                                  + 84008871
                                  - ((2 * ((_DWORD)v507 + (v505 >> v497))) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 8020) ^ v494;
  LOBYTE(v503) = ((((*(_BYTE *)(v11 + 8784) ^ (v507
                                                              + (v505 >> v497)
                                                              - 89
                                                              - ((2 * (v507 + (v505 >> v497))) & 0x4E)) ^ *(_BYTE *)(v11 + 8020) ^ v494) >> 5) & 7 | (8 * ((*(_BYTE *)(v11 + 8784) ^ (v507 + (v505 >> v497) - 89 - ((2 * (v507 + (v505 >> v497))) & 0x4E)) ^ *(_BYTE *)(v11 + 8020) ^ v494) & 0x1F))) ^ 0x23)
               + ((((*(_BYTE *)(v11 + 8784) ^ (v507
                                                              + (v505 >> v497)
                                                              - 89
                                                              - ((2 * (v507 + (v505 >> v497))) & 0x4E)) ^ *(_BYTE *)(v11 + 8020) ^ v494) >> 5) & 7 | (8 * ((*(_BYTE *)(v11 + 8784) ^ (v507 + (v505 >> v497) - 89 - ((2 * (v507 + (v505 >> v497))) & 0x4E)) ^ *(_BYTE *)(v11 + 8020) ^ v494) & 0x1F))) ^ 0x22)
               + *(_BYTE *)(*(_QWORD *)(v11 + 8080)
                          + ((((*(_BYTE *)(v11 + 8784) ^ (v507
                                                                         + (v505 >> v497)
                                                                         - 89
                                                                         - ((2 * (v507 + (v505 >> v497))) & 0x4E)) ^ *(_BYTE *)(v11 + 8020) ^ v494) >> 5) & 7 | (8 * (v508 & 0x1F))) ^ 0xFALL));
  v509 = *(_QWORD *)(v11 + 8712);
  LODWORD(v499) = v499 | (*(_QWORD *)(v11 + 7984) >> v509);
  LODWORD(v499) = *(_DWORD *)(v11 + 8024) ^ (v499 + 84008871 - ((2 * v499) & 0xA03BF4E));
  LODWORD(v499) = v493 ^ (v499 + 84008871 - ((2 * v499) & 0xA03BF4E));
  v510 = (*(_DWORD *)(v11 + 8408) ^ 0x501DFA7)
       + (*(_DWORD *)(v11 + 9328) & 0x9C34062 ^ 0x1014022 | *(_DWORD *)(v11 + 9328) & 0x9C34062 ^ 0x8C20040);
  LODWORD(v505) = (v507 ^ (v505 >> v509)) + 2 * (v507 & (v505 >> v509));
  v511 = *(_DWORD *)(v11 + 9488);
  v512 = ((_DWORD)v499 + 1815114494 - ((2 * (_DWORD)v499) & 0xD860E5FC)) ^ v511;
  v513 = *(unsigned int *)(v249 + ((v512 >> 22) & 0x3FC));
  v514 = (((*(_BYTE *)(*(_QWORD *)(v11 + 9704) + (((v513 >> 18) & 0xC0 | (v513 >> 26)) ^ 0xA0))
                           - (((((v513 >> 18) & 0xC0 | (v513 >> 26)) ^ 0xA7) + 46) ^ ((v513 >> 18) & 0xC0 | (v513 >> 26)) ^ 0xA7)) ^ 0x1B)
                         - 105) | ((_DWORD)v513 << 8);
  LODWORD(v513) = (((v510 + 84008871 - ((2 * v510) & 0xA03BF4E)) ^ 0x501DFA7) - 163790946) ^ v505;
  LODWORD(v513) = v492 ^ (v513 + 84008871 - ((2 * v513) & 0xA03BF4E));
  v515 = v504 ^ v511;
  v516 = (*(_DWORD *)(v11 + 7880) ^ 0xEAF43C23)
       - ((2 * (*(_DWORD *)(v11 + 7880) ^ 0xEAF43C23) + 1021751612) & 0xD5E87846);
  v517 = ((_DWORD)v513 + 1815114494 - ((2 * (_DWORD)v513) & 0xD860E5FC)) ^ v511;
  HIDWORD(v518) = *(_DWORD *)(v249 + 4 * BYTE1(v517));
  LODWORD(v518) = HIDWORD(v518);
  LODWORD(v513) = *(_DWORD *)(v249 + 4 * BYTE2(v515)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v512), 16) ^ __ROR4__(*(_DWORD *)(v249 + ((v508 >> 22) & 0x3FC)), 24) ^ ((v518 >> 8) + v501 + ~((2 * (v518 >> 8)) & 0xA03BF4E));
  LODWORD(v513) = (v513 ^ 0x501DFA7) + 84008871 - 2 * ((v513 ^ 0x501DFA7) & *(_DWORD *)(v11 + 8720) ^ v513 & 0x18);
  v519 = *(_DWORD *)(v11 + 7424) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v249 + 4 * v517), 16);
  LODWORD(v497) = ((*(_DWORD *)(v11 + 8132) ^ 0x18B50371)
                 - ((2 * (*(_DWORD *)(v11 + 8132) ^ 0x18B50371) + 123008970) & 0x316A06E2)
                 + 1549762390) ^ 0x18B50371;
  LODWORD(v497) = v497 - ((2 * v497 + 950732854) & 0x316A06E2) - 720730228;
  *(_DWORD *)(v11 + 8132) = v497;
  *(_DWORD *)(v11 + 9728) = 2 * v497;
  v520 = (2 * v497) & 0x79797978 ^ 0x8DD4BCDC;
  v521 = *(_DWORD *)(v11 + 8496) & v520;
  v522 = v519 ^ *(_DWORD *)(v249 + 4 * BYTE2(v508)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v515)), 8);
  v523 = *(_DWORD *)(v249 + 4 * (115 * ((v503 + 1) ^ 0xCB)));
  v524 = (v516 + 157783233) ^ 0xEAF43C23;
  v525 = (v524 - ((2 * v524 + 68) & 0x46) - 123) ^ 0x23;
  v526 = *(_DWORD *)(v11 + 8840) & v520;
  LODWORD(v513) = *(_DWORD *)(v11 + 7448) ^ ((((v521 << v506) + 84008871 - ((2 * (v521 << v506)) & 0xA03BF4E)) ^ 0x501DFA7)
                                           + (v526 >> v525)) ^ v513;
  v527 = (v522 ^ v514) + 1815114494 - ((2 * (v522 ^ v514)) & 0xD860E5FC);
  v528 = (unint64_t)(v520 & *(_DWORD *)(v11 + 8880)) << v498;
  v529 = *(_DWORD *)(v11 + 8576);
  v530 = v529 ^ ((unint64_t)(v520 & *(_QWORD *)(v11 + 9432)) >> v509) ^ (v528
                                                                                            + 84008871
                                                                                            - ((2 * v528) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7452) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v508)), 8);
  v531 = v506;
  v532 = v511 ^ ((*(_QWORD *)(v11 + 8008) << v506) | (*(_QWORD *)(v11 + 7856) >> v525)) ^ v527;
  v533 = *(_DWORD *)(v11 + 7440) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v249 + ((v515 >> 22) & 0x3FC)), 24) ^ (v523 << 16) ^ HIWORD(v523) ^ __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v512)), 8) ^ *(_DWORD *)(v249 + 4 * BYTE2(v517));
  v534 = ((v521 << v498) + (v526 >> v509)) ^ v511 ^ (v533
                                                                               + 1815114494
                                                                               - ((2 * v533) & 0xD860E5FC));
  v535 = v530 ^ __ROR4__(*(_DWORD *)(v249 + ((v517 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v249 + 4 * BYTE2(v512)) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v515), 16);
  v536 = ((_DWORD)v513 + 1815114494 - ((2 * (_DWORD)v513) & 0xD860E5FC)) ^ v511;
  v537 = (v529 - ((2 * v529 + 2042176322) & 0xD860E5FC) - 1458764641) ^ 0x6C3072FE;
  LODWORD(v513) = ((v524 - ((2 * v524 + 1212172066) & 0xD5E87846) + 252993460) ^ 0xEAF43C23)
                - ((2 * ((v524 - ((2 * v524 + 1212172066) & 0xD5E87846) + 252993460) ^ 0xEAF43C23) + 2061043618) & 0xD5E87846);
  v538 = *(unsigned int *)(v249 + 4 * BYTE1(v535));
  v539 = v538 >> 8;
  v540 = *(unsigned int *)(v249 + 4 * BYTE1(v536));
  v541 = (*(_QWORD *)(v11 + 8832) - ((2 * *(_QWORD *)(v11 + 8832) + 802447128) & 0x2B6AFE06) + 228568719) ^ 0x95B57F03;
  LODWORD(v538) = ((v538 >> 8) | ((_DWORD)v538 << 24)) ^ __ROR4__(*(_DWORD *)(v249 + ((v536 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v249 + 4 * BYTE2(v534));
  LODWORD(v539) = ((v540 >> (((v539 & 0xA9 ^ 0xA9) + (v539 & 0xA9)) ^ 0xA1)) | ((_DWORD)v540 << 24)) ^ *(_DWORD *)(v249 + 4 * BYTE2(v532)) ^ __ROR4__(*(_DWORD *)(v249 + ((v535 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v534), 16);
  HIDWORD(v518) = *(_DWORD *)(v249 + 4 * BYTE1(v534));
  LODWORD(v518) = HIDWORD(v518);
  LODWORD(v540) = (v518 >> 8) ^ __ROR4__(*(_DWORD *)(v249 + ((v532 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v249 + 4 * BYTE2(v536));
  LODWORD(v518) = __ROR4__(*(_DWORD *)(v249 + 4 * v535), 16);
  v542 = *(_DWORD *)(v249 + 4 * v532);
  v543 = v249;
  LODWORD(v521) = v513 - 1470054412;
  v544 = v541 - ((2 * v541 + 271294696) & 0x2B6AFE06) + 499863415;
  LODWORD(v513) = *(_DWORD *)(v11 + 7696) | 0x4040404;
  *(_DWORD *)(v11 + 7880) = v521;
  v545 = v521 ^ 0x23u;
  LODWORD(v517) = *(_DWORD *)(v11 + 7568);
  v546 = ((unint64_t)((v544 ^ 0x4040C00) & v513) << v531) ^ ((unint64_t)(v517 & v513) >> (v521 ^ 0x23u));
  v547 = (v538 ^ (v542 << 16) ^ HIWORD(v542)) + 84008871 - ((2 * (v538 ^ (v542 << 16) ^ HIWORD(v542))) & 0xA03BF4E);
  v548 = v537 - ((2 * v537 - 2042176322) & 0xD860E5FC) + 794026333;
  v549 = *(_DWORD *)(v11 + 7456) ^ 0x6931AD59 ^ v548 ^ (v546 + 84008871 - ((2 * v546) & 0xA03BF4E)) ^ ((v540 ^ v518) + 84008871 - ((2 * (v540 ^ v518)) & 0xA03BF4E));
  v550 = *(_DWORD *)(v11 + 9728);
  v551 = ((unint64_t)((v544 ^ 0x4040C00) & (v550 & 0x8080808 ^ 0x40C0404u)) << v531)
       + ((((unint64_t)(v517 & (v550 & 0x8080808 ^ 0x40C0404)) >> v509)
         + 84008871
         - ((2 * ((unint64_t)(v517 & (v550 & 0x8080808 ^ 0x40C0404)) >> v509)) & 0xA03BF4E)) ^ 0x501DFA7);
  v552 = v539 + 84008871 - ((2 * v539) & 0xA03BF4E);
  v553 = *(_DWORD *)(v11 + 8160) ^ 0x6931AD59 ^ v548 ^ (v551 + 84008871 - ((2 * v551) & 0xA03BF4E)) ^ v547;
  v554 = (*(_DWORD *)(v11 + 8300) ^ 0x8000408) & v513;
  v555 = (unint64_t)(*(_DWORD *)(v11 + 7992) & v513) >> (v521 ^ 0x23u);
  v556 = *(_DWORD *)(v11 + 7460) ^ (v554 << v498) ^ v555 ^ v552;
  LODWORD(v555) = ((v554 << v531) + v555) ^ __ROR4__(*(_DWORD *)(v543 + ((v534 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v543 + 4 * BYTE2(v535)) ^ HIWORD(*(_DWORD *)(v249 + 4 * v536)) ^ (*(_DWORD *)(v249 + 4 * v536) << 16);
  LODWORD(v518) = __ROR4__(*(_DWORD *)(v249 + 4 * BYTE1(v532)), 8);
  LODWORD(v532) = ((v555 ^ v518) + 84008871 - ((2 * (v555 ^ v518)) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 7464);
  *(_DWORD *)(v11 + 8392) = v544;
  v557 = ((_DWORD)v532 + 1815114494 - ((2 * (_DWORD)v532) & 0xD860E5FC)) ^ v548;
  LOBYTE(v532) = *(_BYTE *)(*(_QWORD *)(v11 + 8136) + ((-89 * BYTE1(v557)) ^ 0x56)) ^ 0xE1;
  LODWORD(v555) = *(_DWORD *)(v249 + ((v549 >> 22) & 0x3FC));
  LOBYTE(v535) = (v532 >> 6) | (4 * v532);
  LODWORD(v532) = 167 * BYTE3(v555);
  v558 = ((v532 ^ 0x63)
        + (v532 ^ 6)
        + *(unsigned __int8 *)(*(_QWORD *)(v11 + 8056) + ((-89 * BYTE3(v555)) ^ 0x15))) ^ 0xFFFFFFE5;
  LOBYTE(v532) = (((v532 ^ 0x63)
                                  + (v532 ^ 6)
                                  + *(_BYTE *)(*(_QWORD *)(v11 + 8056) + ((-89 * BYTE3(v555)) ^ 0x15))) ^ 0xE5) >> 6;
  *(_QWORD *)(v11 + 8576) = v558;
  HIDWORD(v518) = *(_DWORD *)(v249 + 4 * BYTE1(v549));
  LODWORD(v518) = HIDWORD(v518);
  LODWORD(v517) = (v518 >> 8) + 84008871 - ((2 * (v518 >> 8)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9488) = ((v532 | (4 * v558)) | ((_DWORD)v555 << 8))
                          + 84008871
                          - 2
                          * (((v532 | (4 * v558)) | ((_DWORD)v555 << 8)) & *(_DWORD *)(v11 + 8616) ^ (v532 | (4 * v558)) & 8);
  LODWORD(v555) = *(_DWORD *)(v249 + ((v557 >> 22) & 0x3FC));
  *(_DWORD *)(v11 + 8496) = 168017408;
  LODWORD(v554) = *(_DWORD *)(v249 + 4 * v553);
  v559 = (v556 + 1815114494 - ((2 * v556) & 0xD860E5FC)) ^ v548;
  v560 = *(unsigned int *)(v249 + 4 * v559);
  LODWORD(v534) = (unsigned __int16)(v560 >> ((v554 & 0x10 ^ 0x10) + (v554 & 0x10))) | ((unsigned __int16)v560 << 16);
  HIDWORD(v518) = *(_DWORD *)(v249 + 4 * v535);
  LODWORD(v518) = HIDWORD(v518);
  LODWORD(v532) = (v518 >> 8) + 84008871 - ((2 * (v518 >> 8)) & 0xA03BF4E);
  LODWORD(v534) = v534
                + 84008871
                - 2 * (v534 & *(_DWORD *)(v11 + 8720) ^ (v560 >> ((v554 & 0x10 ^ 0x10) + (v554 & 0x10))) & 0x18);
  v561 = *(_DWORD *)(v543 + 4 * BYTE2(v549)) ^ __ROR4__(*(_DWORD *)(v543 + 4 * BYTE1(v553)), 8);
  v562 = __PAIR64__(v561, __ROR4__(*(_DWORD *)(v249 + ((v553 >> 22) & 0x3FC)), 24));
  LODWORD(v560) = *(_DWORD *)(v249 + 4 * BYTE2(v557)) ^ v562;
  LODWORD(v562) = v561;
  LODWORD(v549) = v560 ^ (*(_DWORD *)(v543 + 4 * BYTE1(v559)) >> 8) ^ (*(_DWORD *)(v543 + 4 * BYTE1(v559)) << 24) ^ __ROR4__(*(_DWORD *)(v543 + 4 * v549), 16);
  LODWORD(v555) = ((((_DWORD)v554 << 16) + 84008871 - (((_DWORD)v554 << 17) & 0xA020000)) ^ 0x501DFA7 | WORD1(v554)) ^ *(_DWORD *)(v249 + 4 * BYTE2(v559)) ^ ((((_DWORD)v555 << 8) + 84008871 - (((_DWORD)v555 << 9) & 0xA03BE00)) ^ 0x501DFA7 | BYTE3(v555));
  LODWORD(v562) = (v562 >> 22) ^ __ROR4__(*(_DWORD *)(v249 + 4 * v557), 6) ^ 0x98CD58E3;
  HIDWORD(v562) = v562;
  LODWORD(v554) = v562 >> 10;
  LODWORD(v562) = __ROR4__(*(_DWORD *)(v249 + ((v559 >> 22) & 0x3FC)), 24);
  v563 = *(_DWORD *)(v11 + 7500);
  LODWORD(v535) = v550;
  LODWORD(v557) = v550 & 0x8E8E8E8E ^ 0x474D41C5;
  v564 = *(_DWORD *)(v11 + 7536) & v557;
  v565 = *(_QWORD *)(v11 + 8800);
  v566 = (unint64_t)((v544 ^ 0x85854F03) & v557) << v565;
  LODWORD(v549) = (v566 + (v564 >> v545)) ^ *(_DWORD *)(v11 + 7476) ^ (v549 - 678042683 - ((2 * v549) & 0xAF2BC78A));
  v567 = *(_QWORD *)(v11 + 9064);
  LODWORD(v558) = (v566 | (v564 >> v567)) ^ *(_DWORD *)(v11 + 7480) ^ ((v554 ^ v562)
                                                                     - 678042683
                                                                     - ((2 * (v554 ^ v562)) & 0xAF2BC78A));
  LODWORD(v566) = v548 ^ 0x38E63356 ^ (v558 + 1815114494 - ((2 * v558) & 0xD860E5FC));
  LODWORD(v558) = (2
                 * ((v563 & 0x47474747 ^ 0x47054345 | v563 & 0x47474747 ^ 0x420402) & (*(_DWORD *)(v11 + 7952) ^ 0x41430140))) ^ 0x47474747;
  LODWORD(v555) = *(_DWORD *)(v11 + 7484) ^ (((unint64_t)(v558 & *(_QWORD *)(v11 + 9432)) >> v567)
                                           + ((unint64_t)(v558 & *(_QWORD *)(v11 + 8992)) << v531)) ^ (v555 - 678042683 - ((2 * v555) & 0xAF2BC78A));
  LODWORD(v555) = (v555 + 84008871 - ((2 * v555) & 0xA03BF4E)) ^ v517;
  LODWORD(v553) = *(_DWORD *)(v249 + 4 * BYTE2(v553)) ^ (((unint64_t)((v544 ^ 0x85854F03) & *(_DWORD *)(v11 + 7520)) << v531) | (*(_QWORD *)(v11 + 7544) >> v567));
  LODWORD(v553) = (v553 + 84008871 - ((2 * v553) & 0xA03BF4E)) ^ *(_DWORD *)(v11 + 9488) ^ v534 ^ v532;
  LODWORD(v553) = (v553 - 678042683 - ((2 * v553) & 0xAF2BC78A)) ^ v563;
  v568 = (v553 + 1815114494 - ((2 * v553) & 0xD860E5FC)) ^ v548;
  LOBYTE(v534) = (v549 - 2 - ((2 * v549) & 0xFC)) ^ v548;
  v569 = ((_DWORD)v555 + 1815114494 - ((2 * (_DWORD)v555) & 0xD860E5FC)) ^ v548;
  HIDWORD(v562) = *(_DWORD *)(v249 + 4 * ((BYTE1(v568) - ((v568 >> 7) & 0xC2) - 31) ^ 0xE1));
  LODWORD(v562) = HIDWORD(v562);
  LODWORD(v553) = (v562 >> 8) ^ __ROR4__(*(_DWORD *)(v543 + ((v569 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v543 + 4 * v534), 16) ^ *(_DWORD *)(v543 + 4 * BYTE2(v566));
  LODWORD(v558) = v535 & 0xA9A9A9A8 ^ 0xF5FCD474;
  v570 = *(_DWORD *)(v11 + 8840) & v558;
  v571 = (unint64_t)(v558 & *(_DWORD *)(v11 + 8880)) << v565;
  *(_QWORD *)(v11 + 8408) = v545;
  LODWORD(v571) = *(_DWORD *)(v11 + 7512) ^ (v570 >> v545) ^ v571 ^ v548 ^ (v553 + 84008871 - ((2 * v553) & 0xA03BF4E));
  LODWORD(v554) = *(_DWORD *)(v11 + 7488) - 2023611564;
  LODWORD(v553) = *(unsigned __int8 *)(*(_QWORD *)(v11 + 8136) + ((-89 * BYTE1(v569)) ^ 0x56)) ^ 0xFFFFFFE1;
  *(_DWORD *)(v11 + 7984) = 4 * v553;
  *(_DWORD *)(v11 + 7976) = v553 >> 6;
  LODWORD(v570) = (((v571 & 0x7B ^ 0x7A) + (v571 & 0x7B ^ 1)) & 0x55) == 0;
  v572 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                       + 8 * (int)(v570 | (32 * v570) | *(_QWORD *)(v11 + 8872)))
                           - 4);
  v573 = v554 ^ *(_DWORD *)(v11 + 8532);
  *(_QWORD *)(v11 + 8000) = v573;
  *(_DWORD *)(v11 + 8020) = v573 ^ 0x501DFA7;
  v574 = v554 ^ *(_DWORD *)(v11 + 8744);
  *(_QWORD *)(v11 + 7992) = v574;
  *(_DWORD *)(v11 + 8008) = v574 ^ 0x501DFA7;
  v575 = v554 ^ *(_DWORD *)(v11 + 9148);
  *(_QWORD *)(v11 + 8616) = v575;
  v576 = v554 ^ *(_DWORD *)(v11 + 9504);
  *(_QWORD *)(v11 + 8160) = v576;
  v577 = *(_DWORD *)(v11 + 8392) ^ 0x95B57F03;
  *(_DWORD *)(v11 + 9488) = v548;
  *(_DWORD *)(v11 + 8720) = v554;
  *(_QWORD *)(v11 + 9040) = v577;
  *(_DWORD *)(v11 + 8784) = v575 ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8024) = v576 ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8832) = v566 - ((2 * v566) & 0xFFFFFFA4) + 82;
  return v572();
}

uint64_t sub_10035C080(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  char v18;
  unint64_t v19;
  unsigned __int8 v20;
  int v21;
  int v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  BOOL v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unint64_t v97;
  int v98;
  unint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned __int8 v124;
  unsigned __int8 v125;
  uint64_t v126;
  int v127;
  int v128;
  unint64_t v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  int v184;
  int v185;
  int v186;
  unint64_t v187;
  unint64_t v188;
  int v189;
  unint64_t v190;
  unint64_t v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  unint64_t v246;
  uint64_t v247;
  int v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  int v255;
  int v256;
  unint64_t v257;
  __int128 v258;
  int v259;
  int v260;
  int v261;
  int v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  unsigned int v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  unsigned int v271;
  uint64_t v272;
  int v273;
  unint64_t v274;
  uint64_t v275;
  int v276;
  int v277;
  unint64_t v278;
  int v279;
  uint64_t v280;
  unint64_t v281;
  unint64_t v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  uint64_t v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  unint64_t v296;
  unint64_t v297;
  char v298;
  char v299;
  unint64_t v300;
  uint64_t v301;
  int64_t v302;
  unint64_t v303;
  uint64_t v304;
  _BYTE *v305;
  int v306;
  uint64_t v307;
  unsigned int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unsigned int v316;
  int v317;

  v13 = *(_QWORD *)(v7 + 8872) - 6475;
  v14 = *(_DWORD *)(v7 + 7224);
  v15 = *(_DWORD *)(v7 + 9728);
  v16 = *(_DWORD *)(v7 + 7984);
  v17 = *(_DWORD *)(v7 + 7976);
  v38 = *(_DWORD *)(v7 + 9528) == 84008871;
  *(_QWORD *)(v7 + 9176) = v13;
  v18 = (v17 + v16) ^ 0xA7;
  HIDWORD(v19) = *(_DWORD *)(v10
                           + 4
                           * (((*(_BYTE *)(*(_QWORD *)(v7 + 9704)
                                                          + ((v17 + v16) ^ 0xA0))
                                               - ((v18 + 46) ^ v18)) ^ 0x1B)
                                             - 105));
  LODWORD(v19) = HIDWORD(v19);
  *(_DWORD *)(v7 + 8984) = (v19 >> 16) + 84008871 - (v9 & (2 * (v19 >> 16)));
  *(_DWORD *)(v7 + 9528) = v13 ^ 0x273;
  *(_DWORD *)(v7 + 8352) = (v13 - 2129135045) | 0x4251013;
  *(_DWORD *)(v7 + 8880) = a4 >> (((v13 + 59) | 0x13) - 15);
  v20 = BYTE1(v6) ^ 0xDF;
  v21 = *(_DWORD *)(v10 + 4 * (v6 ^ 0xA7u));
  v22 = *(_DWORD *)(v10 + 4 * ((v6 ^ 0x501DFA7u) >> 16)) ^ __ROR4__(*(_DWORD *)(v10 + 4 * v4), 16);
  v23 = v14 ^ 0x501DFA7;
  v24 = *(_DWORD *)(v10 + 4 * (v23 >> ((v18 & 0x53) + (v18 & 0x53 ^ 0x53u) - 59)));
  HIDWORD(v19) = *(_DWORD *)(v10 + 4 * v12);
  LODWORD(v19) = HIDWORD(v19);
  v25 = *(_DWORD *)(v10 + 4 * (BYTE2(a4) ^ 1u)) ^ __ROR4__(*(_DWORD *)(v10+ 4* ((v14 >> ((v13 ^ 0x73) + 78)) ^ 0xDFu)), 8) ^ __ROR4__(v21, 16) ^ ((v19 >> 24)+ 84008871- (v9 & (2 * (v19 >> 24))));
  HIDWORD(v19) = *(_DWORD *)(v10 + 4 * ((unsigned __int16)(v5 ^ 0xDFA7) >> 8));
  LODWORD(v19) = HIDWORD(v19);
  v26 = v22 ^ ((v19 >> 8) + 84008871 - (v9 & (2 * (v19 >> 8)))) ^ ((5
                                                                                   * (*(_BYTE *)(*(_QWORD *)(v7 + 7848)
                                                                                               + ((HIBYTE(v24) + 55) ^ 0x34)) ^ 0xB3)) | ((v24 << 8) + 84008871 - (*(_DWORD *)(v7 + 8496) & (v24 << 9))) ^ 0x501DFA7);
  v27 = *(_QWORD *)(v7 + 8440);
  v28 = *(_QWORD *)(v7 + 8416);
  v29 = ((unint64_t)(*(_DWORD *)(v7 + 8752) ^ 0x501DFA7u) << v27) | ((unint64_t)(*(_DWORD *)(v7 + 8752) ^ 0x501DFA7u) >> v28);
  v30 = v29 + 84008871 - (v9 & (2 * v29));
  v31 = *(_QWORD *)(v7 + 8424);
  v32 = ((unint64_t)(*(_DWORD *)(v7 + 9296) ^ 0x501DFA7u) >> v31) | ((unint64_t)(*(_DWORD *)(v7 + 9296) ^ 0x501DFA7u) << v27);
  v33 = v32 + 84008871 - (v9 & (2 * v32));
  v34 = ((unint64_t)(*(_DWORD *)(v7 + 9080) ^ 0x501DFA7u) >> v28)
      + ((unint64_t)(*(_DWORD *)(v7 + 9080) ^ 0x501DFA7u) << v27);
  v35 = v34 + 84008871 - (v9 & (2 * v34));
  if (v38)
    v30 = *(_DWORD *)(v7 + 8752);
  v36 = ((unint64_t)(*(_DWORD *)(v7 + 8612) ^ 0x501DFA7u) >> v31) ^ ((unint64_t)(*(_DWORD *)(v7 + 8612) ^ 0x501DFA7u) << v27);
  if (*(_DWORD *)(v7 + 8936) == 84008871)
    v35 = *(_DWORD *)(v7 + 9080);
  v37 = *(_DWORD *)(v7 + 9264);
  v38 = v37 == 84008871;
  v39 = (v25 ^ 0x501DFA7) + 84008871 - 2 * ((v25 ^ 0x501DFA7) & 0x501DFAF ^ v25 & 8);
  if (v37 == 84008871)
    v33 = *(_DWORD *)(v7 + 9296);
  v40 = *(_DWORD *)(v7 + 9488);
  v41 = ((v39 ^ v33) + v11 - ((2 * (v39 ^ v33)) & 0xD860E5FC)) ^ v40;
  v42 = *(_DWORD *)(v7 + 8132);
  v43 = v42 ^ 0x18B50371;
  v44 = (2 * (((v41 & 0x15151515 ^ 0x15151515) + (v41 & 0x15151515)) & (v42 ^ 0x18B50371))) ^ 0x15151515;
  v45 = *(_QWORD *)(v7 + 8800);
  v46 = *(_QWORD *)(v7 + 9064);
  v47 = (((unint64_t)(v44 & v8) << v45) | ((unint64_t)(v44 & *(_QWORD *)(v7 + 9432)) >> v46)) ^ v41;
  v48 = v15 & 0x2A2A2A2A ^ 0x353F1737;
  v49 = *(_QWORD *)(v7 + 8408);
  v50 = (unint64_t)(*(_DWORD *)(v7 + 7328) & v48) >> v49;
  v51 = *(_QWORD *)(v7 + 9128);
  v52 = v40 ^ v30 ^ (((unint64_t)((*(_DWORD *)(v7 + 8392) ^ 0x15353F03) & v48) << v51) | v50) ^ ((v26 ^ 0x501DFA7) + 84008871 - 2 * ((v26 ^ 0x501DFA7) & 0x501DFAF ^ v26 & 8));
  v53 = ((unint64_t)(*(_DWORD *)(v7 + 7312) & (*(_DWORD *)(v7 + 8040) & 0x2A2A2A2A ^ 0x37171715u)) << v45) ^ ((unint64_t)(*(_DWORD *)(v7 + 7320) & (*(_DWORD *)(v7 + 8040) & 0x2A2A2A2A ^ 0x37171715u)) >> v46);
  v54 = *(_DWORD *)(v10 + 4 * BYTE2(v23)) ^ (v53 + 84008871 - (v9 & (2 * v53))) ^ __ROR4__(*(_DWORD *)(v10+ 4* (v5 ^ 0xA7u)), 16) ^ __ROR4__(*(_DWORD *)(v10 + 4 * *(_QWORD *)(v7 + 8576)), 24);
  v55 = __ROR4__(*(_DWORD *)(v10 + 4 * v20), 8);
  v56 = v40 ^ v35 ^ ((v54 ^ v55 ^ 0x501DFA7) + 84008871 - 2 * ((v54 ^ v55 ^ 0x501DFA7) & 0x501DFB7 ^ (v54 ^ v55) & 0x10));
  v57 = *(_DWORD *)(v10 + 4 * (BYTE2(v5) ^ 1u));
  if (v38)
    v58 = *(_DWORD *)(v7 + 8612);
  else
    v58 = v36 + 84008871 - (v9 & (2 * v36));
  v59 = v58 ^ __ROR4__(*(_DWORD *)(v10 + 4 * (*(_DWORD *)(v7 + 8880) ^ 0xDFu)), 8) ^ v57;
  v60 = __ROR4__(*(_DWORD *)(v10 + 4 * (*(_DWORD *)(v7 + 8832) ^ 0x52u)), 24);
  v61 = *(_QWORD *)(v7 + 8992);
  v62 = ((v59 ^ v60 ^ *(_DWORD *)(v7 + 8984)) + 1815114494 - ((2 * (v59 ^ v60 ^ *(_DWORD *)(v7 + 8984))) & 0xD860E5FC)) ^ v40;
  v63 = (v62 + 84008871 - (v9 & (2 * v62))) ^ (v50 + 84008871 - (v9 & (2 * v50)));
  v64 = (v63 + 84008871 - (v9 & (2 * v63))) ^ (((unint64_t)(v48 & v61) << v45)
                                             + 84008871
                                             - (v9 & (2 * ((unint64_t)(v48 & v61) << v45))));
  v65 = v47;
  v66 = *(_QWORD *)(v7 + 8080);
  v67 = (115
                        * (((((v47 >> 5) & 0xF8 | ((unsigned __int16)v47 >> 13)) ^ 0x23)
                          + (((v47 >> 5) & 0xF8 | ((unsigned __int16)v47 >> 13)) ^ 0x22)
                          + *(_BYTE *)(v66 + (((v47 >> 5) & 0xF8 | ((unsigned __int16)v47 >> 13)) ^ 0xFALL))
                          + 1) ^ 0xCB));
  v68 = *(_QWORD *)(v7 + 6960);
  HIDWORD(v69) = *(_DWORD *)(v68
                           + 4
                           * (unsigned __int16)(151 * (HIBYTE(v52) ^ 0x6C)
                                              - 262
                                              * ((unsigned __int16)((2417359 * (HIBYTE(v52) ^ 0x6C)) >> 16) >> 6)));
  LODWORD(v69) = HIDWORD(v69);
  v70 = *(_DWORD *)(v68
                  + 4
                  * (unsigned __int16)(151 * v67 - 262 * ((unsigned __int16)((2417359 * v67) >> 16) >> 6)));
  v71 = (v69 >> 16) + 84008871 - (v9 & (2 * (v69 >> 16)));
  v72 = v70 ^ __ROR4__(*(_DWORD *)(v68+ 4* (unsigned __int16)(151 * BYTE2(v64)- 262* ((unsigned __int16)((2417359 * BYTE2(v64)) >> 16) >> 6))), 24) ^ __ROR4__(*(_DWORD *)(v68+ 4* (unsigned __int16)(151 * (v56 ^ 0xFE)- 262* ((unsigned __int16)((2417359 * (v56 ^ 0xFEu)) >> 16) >> 6))), 8);
  v73 = ((unint64_t)((v61 << v51) & *(_DWORD *)(v7 + 7288)) >> v51) ^ ((unint64_t)((*(_QWORD *)(v7 + 8848) >> v49) & *(_DWORD *)(v7 + 7288)) << v49);
  *(_DWORD *)(v7 + 8496) = v43;
  v74 = v73 ^ (2 * (v73 & v43));
  v75 = (v15 ^ 0x316A06E2) & (4 * (v74 & v43)) ^ v74;
  v76 = (v15 ^ 0x316A06E2) & (4 * ((v15 ^ 0x316A06E0) & (v42 ^ 0x18B50370))) & (16 * (v75 & (v42 ^ 0x8B50371))) ^ v75;
  v77 = *(_QWORD *)(v7 + 8504);
  v78 = *(_QWORD *)(v7 + 8776);
  v79 = (*(_QWORD *)(v7 + 7992) << v77) + (*(_QWORD *)(v7 + 7992) >> v78);
  v80 = v79 + 84008871 - (v9 & (2 * v79));
  v81 = *(_DWORD *)(v7 + 9552);
  if (v81 == 84008871)
    v80 = *(_DWORD *)(v7 + 8008);
  v82 = (v72 + 84008871 - (v9 & (2 * v72))) ^ v80;
  v83 = *(_DWORD *)(v7 + 8188);
  v84 = (((v82 + 84008871 - (v9 & (2 * v82))) ^ v71)
       - 1087178124
       - ((2 * ((v82 + 84008871 - (v9 & (2 * v82))) ^ v71)) & 0x7E65F4E8)) ^ v83;
  v85 = *(_DWORD *)(v7 + 9640);
  v86 = (v84 - 318409076 - ((2 * v84) & 0xDA0AED18)) ^ v85;
  v87 = *(_DWORD *)(v7 + 8176);
  v88 = (v86 - 2022246796 - ((2 * v86) & 0xEEDECE8)) ^ v87;
  v89 = v76 & 0x80;
  if ((v88 & v76 & 0x80) != 0)
    v89 = -v89;
  v90 = (v89 + v88) ^ v76 & 0xFFFFFF7F;
  v91 = ((unint64_t)(v90 ^ 0xF4F4F4F4) >> v77) | ((unint64_t)(v90 ^ 0xF4F4F4F4) << v78);
  v92 = v91 + 84008871 - (v9 & (2 * v91));
  v93 = (*(_QWORD *)(v7 + 8000) << v77) + (*(_QWORD *)(v7 + 8000) >> v78);
  v94 = v90 ^ 0xF1F52B53;
  if (v81 != 84008871)
    v94 = v92;
  *(_DWORD *)(v7 + 9728) = v94;
  v95 = v93 + 84008871 - (v9 & (2 * v93));
  if (v81 == 84008871)
    v95 = *(_DWORD *)(v7 + 8020);
  v96 = v56 ^ 0x6C3072FE;
  v97 = *(unsigned int *)(v68
                        + 4
                        * (unsigned __int16)(151 * BYTE2(v96)
                                           - 262 * ((unsigned __int16)((2417359 * BYTE2(v96)) >> 16) >> 6)));
  v98 = (115
                        * (((((v97 >> 21) & 0xF8 | (v97 >> 29)) ^ 0x23)
                          + (((v97 >> 21) & 0xF8 | (v97 >> 29)) ^ 0x22)
                          + *(_BYTE *)(v66 + (((v97 >> 21) & 0xF8 | (v97 >> 29)) ^ 0xFA))
                          + 1) ^ 0xCB)) | ((_DWORD)v97 << 8);
  LODWORD(v97) = v98
               + 84008871
               - 2
               * (v98 & 0x501DFBF ^ (115
                                   * (((((v97 >> 21) & 0xF8 | (v97 >> 29)) ^ 0x23)
                                                      + (((v97 >> 21) & 0xF8 | (v97 >> 29)) ^ 0x22)
                                                      + *(_BYTE *)(v66 + (((v97 >> 21) & 0xF8 | (v97 >> 29)) ^ 0xFA))
                                                      + 1) ^ 0xCB)) & 0x18);
  HIDWORD(v99) = *(_DWORD *)(v68
                           + 4
                           * (unsigned __int16)(151 * v64
                                              - 262
                                              * ((unsigned __int16)((2417359 * v64) >> 16) >> 6)));
  LODWORD(v99) = HIDWORD(v99);
  v100 = (v99 >> 8) ^ __ROR4__(*(_DWORD *)(v68+ 4* (unsigned __int16)(151 * HIBYTE(v65)- 262* ((unsigned __int16)((2417359 * HIBYTE(v65)) >> 16) >> 6))), 16) ^ *(_DWORD *)(v68+ 4* (unsigned __int16)(151 * (((unsigned __int16)(v52 & 0xFF00) >> 8) ^ 0x72)- 262* ((unsigned __int16)((2417359* (((unsigned __int16)(v52 & 0xFF00) >> 8) ^ 0x72u)) >> 16) >> 6)));
  v101 = *(_DWORD *)(v68
                   + 4
                   * (unsigned __int16)(151 * BYTE1(v96)
                                      - 262 * ((unsigned __int16)((2417359 * BYTE1(v96)) >> 16) >> 6))) ^ __ROR4__(*(_DWORD *)(v68 + 4 * (unsigned __int16)(151 * BYTE2(v65) - 262 * ((unsigned __int16)((2417359 * BYTE2(v65)) >> 16) >> 6))), 24) ^ __ROR4__(*(_DWORD *)(v68 + 4 * (unsigned __int16)(151 * (v52 ^ 0xFE) - 262 * ((unsigned __int16)((2417359 * (v52 ^ 0xFEu)) >> 16) >> 6))), 8);
  LODWORD(v99) = __ROR4__(*(_DWORD *)(v68+ 4* (unsigned __int16)(151 * HIBYTE(v64)- 262* ((unsigned __int16)((2417359 * HIBYTE(v64)) >> 16) >> 6))), 16);
  v102 = *(_QWORD *)(v7 + 8512);
  v103 = (*(_QWORD *)(v7 + 8160) >> v78) | (*(_QWORD *)(v7 + 8160) << v102);
  v104 = v103 + 84008871 - (v9 & (2 * v103));
  v105 = (v101 ^ v99) + 84008871 - (v9 & (2 * (v101 ^ v99)));
  v106 = (v76 - 2022246796 - 2 * (v76 & 0x776F676 ^ v74 & 2)) ^ v87 ^ v95 ^ (v100 + 84008871 - (v9 & (2 * v100)));
  v107 = v97 ^ (v106 + 84008871 - (v9 & (2 * v106)));
  v108 = (v107 - 1087178124 - ((2 * v107) & 0x7E65F4E8)) ^ v83;
  v109 = (v108 - 318409076 - ((2 * v108) & 0xDA0AED18)) ^ v85;
  LODWORD(v97) = ((unint64_t)(v109 ^ 0xF4F4F4F4) << v78) | ((unint64_t)(v109 ^ 0xF4F4F4F4) >> v77);
  v110 = v97 + 84008871 - (v9 & (2 * v97));
  v111 = *(_DWORD *)(v7 + 8472);
  v112 = *(_DWORD *)(v7 + 8024);
  if (v111 != 84008871)
    v112 = v104;
  v113 = v105 ^ v112;
  v114 = v109 ^ 0xF1F52B53;
  if (v111 != 84008871)
    v114 = v110;
  v115 = (v113 - 318409076 - ((2 * v113) & 0xDA0AED18)) ^ v85;
  v116 = *(_DWORD *)(v7 + 7964);
  v117 = (v115 + 2093181157 - ((2 * v115) & 0xF986D1CA)) ^ v116;
  v118 = *(_DWORD *)(v7 + 7704);
  v119 = v118 ^ v76 ^ (v117 + 84008871 - (v9 & (2 * v117)));
  v120 = ((unint64_t)(v119 ^ 0xF4F4F4F4) >> v102) + ((unint64_t)(v119 ^ 0xF4F4F4F4) << v78);
  v121 = v120 + 84008871 - (v9 & (2 * v120));
  v123 = v119 ^ 0xF1F52B53;
  if (v111 != 84008871)
    v123 = v121;
  v124 = *(_BYTE *)(*(_QWORD *)(v7 + 8136) + ((-89 * v65) ^ 0x56)) ^ 0xE1;
  v125 = (v124 >> 6) | (4 * v124);
  v127 = *(_DWORD *)(v7 + 8784);
  if (v111 != 84008871)
  {
    v122 = (*(_QWORD *)(v7 + 8616) >> v78) | (*(_QWORD *)(v7 + 8616) << v102);
    v127 = v122 + 84008871 - (v9 & (2 * v122));
  }
  v126 = (v64 >> 5) & 0xF8 | ((unsigned __int16)v64 >> 13);
  v128 = (115 * (*(_BYTE *)(*(_QWORD *)(v7 + 8064) + (v126 ^ 0xAF)) ^ ((v126 ^ 0xC9) - 55) ^ 0x3A));
  HIDWORD(v129) = *(_DWORD *)(v68
                            + 4
                            * (unsigned __int16)(151 * v125
                                               - 262 * ((unsigned __int16)((2417359 * v125) >> 16) >> 6)));
  LODWORD(v129) = HIDWORD(v129);
  v130 = (v129 >> 8) ^ __ROR4__(*(_DWORD *)(v68+ 4* (unsigned __int16)(151 * HIBYTE(v96)- 262* ((unsigned __int16)((2417359 * HIBYTE(v96)) >> 16) >> 6))), 16) ^ *(_DWORD *)(v68+ 4* (unsigned __int16)(151 * v128- 262* ((unsigned __int16)((2417359 * v128) >> 16) >> 6)));
  LODWORD(v129) = __ROR4__(*(_DWORD *)(v68+ 4* (unsigned __int16)(151 * (BYTE2(v52) ^ 0x30)- 262* ((unsigned __int16)((2417359 * (BYTE2(v52) ^ 0x30u)) >> 16) >> 6))), 24);
  v131 = ((v130 ^ v129) + 84008871 - (v9 & (2 * (v130 ^ v129)))) ^ v127;
  v132 = (v131 + 2093181157 - ((2 * v131) & 0xF986D1CA)) ^ v116;
  v133 = (v132 + 84008871 - (v9 & (2 * v132))) ^ v118;
  v134 = v85 ^ v76 ^ (v133 - 318409076 - ((2 * v133) & 0xDA0AED18));
  v135 = v134 ^ 0xF1F52B53;
  v136 = ((unint64_t)(v134 ^ 0xF4F4F4F4) >> v102) | ((unint64_t)(v134 ^ 0xF4F4F4F4) << v78);
  v137 = v136 + 84008871 - (v9 & (2 * v136));
  if (*(_DWORD *)(v7 + 8932) == -762037150)
    v137 = v135;
  v138 = *(_DWORD *)(v7 + 9560);
  v139 = *(_DWORD *)(v7 + 9728);
  if ((v138 & 1) != 0)
    v140 = v137;
  else
    v140 = *(_DWORD *)(v7 + 9728);
  if ((v138 & 1) != 0)
    v137 = v114;
  else
    v139 = v123;
  if ((v138 & 1) != 0)
    v141 = v123;
  else
    v141 = v114;
  if ((*(_DWORD *)(v7 + 7408) & 2) != 0)
    v142 = v137;
  else
    v142 = v139;
  if ((*(_DWORD *)(v7 + 7408) & 2) != 0)
    v143 = v141;
  else
    v143 = v140;
  if ((*(_DWORD *)(v7 + 7408) & 2) == 0)
  {
    v139 = v137;
    v140 = v141;
  }
  v144 = (*(_DWORD *)(v7 + 7432) ^ 0x501DFA7) - 336466345 * (v139 ^ 0xAAAE7008);
  v145 = *(_DWORD *)(v7 + 9736);
  v146 = *(_DWORD *)(v7 + 8720);
  v147 = ((v144 + 84008871 - (v9 & (2 * v144))) ^ 0x501DFA7) + 336466345 * (v145 ^ v146);
  v148 = (*(_DWORD *)(v7 + 8980) ^ 0x501DFA7)
       + 146345935 * ((v142 ^ 0xAAAE7008) - ((v147 + 84008871 - (v9 & (2 * v147))) ^ v146));
  v149 = *(_DWORD *)(v7 + 7436) ^ v146 ^ v143 ^ v148;
  v150 = v149 ^ ((v140 ^ v145) + 84008871 - (v9 & (2 * (v140 ^ v145))));
  v151 = (v139 ^ 0x55518FF7) + 1;
  v152 = v147 ^ v146 ^ (v148 + 84008871 - (v9 & (2 * v148)));
  v153 = (v143 ^ 0xAFAFAFAF ^ (v152 + 84008871 - (v9 & (2 * v152)))) + 116101993 * (v150 + v151);
  v154 = v153 + 84008871 - (v9 & (2 * v153));
  v155 = v154 ^ ((v149 ^ v142) + 84008871 - (v9 & (2 * (v149 ^ v142))));
  v156 = v9 & (2 * v155);
  v157 = v148 + 954024463 * ((v140 ^ v146) + (v146 ^ 0x50505050 ^ (v155 + 84008872 + ~v156))) + 954024463;
  v158 = *(_QWORD *)(v7 + 7192) - ((2 * *(_QWORD *)(v7 + 7192) + 142213940) & v9) + 960422209;
  v159 = (v155 + 84008871 - v156) ^ v143 ^ v157;
  v160 = (v159 + 84008871 - (v9 & (2 * v159))) ^ v140;
  v161 = *(_QWORD *)(v7 + 7200) - ((2 * *(_QWORD *)(v7 + 7200) + 467879554) & 0x316A06E2) - 2035898702;
  v162 = v157 + 80048301 * ((v150 ^ v146 ^ (v160 + 84008871 - (v9 & (2 * v160)))) + v151);
  *(_DWORD *)(v7 + 9728) = v162 + 84008871 - (v9 & (2 * v162));
  v163 = (*(_QWORD *)(v7 + 7176) - ((2 * *(_QWORD *)(v7 + 7176) + 62747368) & 0x55C04FE) - 997409805) ^ 0x82AE027F;
  v164 = v163 - ((2 * v163 + 71470360) & 0x55C04FE) + 1087326475;
  *(_DWORD *)(v7 + 9736) = -2088997419 * (v154 ^ 0xAAAE7008);
  v165 = (v158 ^ 0x501DFA7) - ((2 * (v158 ^ 0x501DFA7) + 126221516) & v9) - 792404467;
  *(_DWORD *)(v7 + 9552) = -2088997419 * (v142 ^ v146);
  v166 = (v161 ^ 0x18B50371) - ((2 * (v161 ^ 0x18B50371) + 605862270) & 0x316A06E2) - 1430036432;
  v167 = *(_DWORD *)(v7 + 9152) ^ 0xBA3325D3 ^ *(_DWORD *)(v7 + 8656);
  v168 = (v167 + 84008871 - (v9 & (2 * v167))) ^ *(_DWORD *)(v7 + 8952);
  v169 = (v168 + 84008871 - (v9 & (2 * v168))) ^ *(_DWORD *)(v7 + 9416);
  v170 = (v169 + 84008871 - (v9 & (2 * v169))) ^ *(_DWORD *)(v7 + 9688);
  v171 = (v170 - 2102525313 - ((2 * v170) & 0x55C04FE)) ^ *(_DWORD *)(v7 + 9440);
  v172 = (v171 - 2102525313 - ((2 * v171) & 0x55C04FE)) ^ *(_DWORD *)(v7 + 8760);
  v173 = (v172 + 84008871 - (v9 & (2 * v172))) ^ *(_DWORD *)(v7 + 8736);
  v174 = v173 + 84008871 - (v9 & (2 * v173));
  v175 = *(_DWORD *)(v7 + 8480);
  v176 = *(_QWORD *)(v7 + 7336) & v175;
  v177 = (2 * (*(_QWORD *)(v7 + 7296) & v175) + 84008871 - ((v9 - 2) & (4 * (*(_QWORD *)(v7 + 7296) & v175)))) ^ *(_DWORD *)(v7 + 8912);
  v178 = *(_QWORD *)(v7 + 9040);
  v179 = *(_QWORD *)(v7 + 9128);
  v180 = (unint64_t)(v178 & v177) << v179;
  v181 = *(_QWORD *)(v7 + 9432);
  v182 = *(_DWORD *)(v7 + 8964) ^ 0x501DFA7 ^ (2 * v176);
  v183 = *(_QWORD *)(v7 + 9064);
  v184 = ((unint64_t)(v178 & v182) << v179) | ((unint64_t)(v181 & v182) >> v183);
  v185 = *(_DWORD *)(v7 + 8496);
  v186 = *(_DWORD *)(v7 + 8944) ^ 0x501DFA7 ^ (2 * (v185 & *(_QWORD *)(v7 + 7304)));
  v187 = (unint64_t)(*(_QWORD *)(v7 + 8848) & v186) >> v183;
  v188 = (unint64_t)(v186 & *(_QWORD *)(v7 + 8992)) << *(_QWORD *)(v7 + 8800);
  v189 = (2 * (v185 & *(_QWORD *)(v7 + 7184)) + 84008871 - ((v9 - 2) & (4 * (v185 & *(_QWORD *)(v7 + 7184))))) ^ *(_DWORD *)(v7 + 9008);
  v190 = v189 & v181;
  v191 = (unint64_t)(v178 & v189) << *(_QWORD *)(v7 + 9128);
  v192 = (*(_DWORD *)(v7 + 7904) & 0x4B92DB41 ^ 0x41021900) + (*(_DWORD *)(v7 + 7904) & 0x4B92DB41 ^ 0xA90C241);
  v193 = (v190 >> *(_QWORD *)(v7 + 9064)) ^ v188 ^ v187 ^ ((unint64_t)(v177 & v181) >> *(_QWORD *)(v7 + 8408)) ^ v191 ^ v180 ^ v184 ^ *(_DWORD *)(v7 + 9464) ^ v174;
  v194 = (v193 + 84008871 - (v9 & (2 * v193))) ^ *(_DWORD *)(v7 + 8768);
  v195 = (v194 + 84008871 - (v9 & (2 * v194))) ^ *(_DWORD *)(v7 + 8748);
  v196 = (v195 + 84008871 - (v9 & (2 * v195))) ^ *(_DWORD *)(v7 + 8860);
  v197 = (v196 - 937747949 - ((2 * v196) & 0x90363426)) ^ *(_DWORD *)(v7 + 9096);
  v198 = (v197 - 519103228 - ((2 * v197) & 0xC21E3A08)) ^ *(_DWORD *)(v7 + 9632);
  v199 = (v198 + 84008871 - (v9 & (2 * v198))) ^ *(_DWORD *)(v7 + 8920);
  v200 = (v199 - 1087178124 - ((2 * v199) & 0x7E65F4E8)) ^ *(_DWORD *)(v7 + 8548);
  v201 = (v200 + 84008871 - (v9 & (2 * v200))) ^ *(_DWORD *)(v7 + 9656);
  v202 = (v201 + 84008871 - (v9 & (2 * v201))) ^ *(_DWORD *)(v7 + 9448);
  v203 = (v202 + 84008871 - (v9 & (2 * v202))) ^ *(_DWORD *)(v7 + 9208);
  v204 = (v203 + 84008871 - (v9 & (2 * v203))) ^ *(_DWORD *)(v7 + 9320);
  v205 = (v204 + 84008871 - (v9 & (2 * v204))) ^ *(_DWORD *)(v7 + 8232);
  v206 = (v205 + 84008871 - (v9 & (2 * v205))) ^ *(_DWORD *)(v7 + 9376);
  v207 = (v206 + 84008871 - (v9 & (2 * v206))) ^ *(_DWORD *)(v7 + 9424);
  v208 = (v207 + 84008871 - (v9 & (2 * v207))) ^ *(_DWORD *)(v7 + 8888);
  v209 = (v208 + 84008871 - (v9 & (2 * v208))) ^ *(_DWORD *)(v7 + 8764);
  v210 = (v209 - 937747949 - ((2 * v209) & 0x90363426)) ^ *(_DWORD *)(v7 + 9720);
  v211 = (v210 + 84008871 - (v9 & (2 * v210))) ^ *(_DWORD *)(v7 + 9576);
  v212 = (v211 + 84008871 - (v9 & (2 * v211))) ^ *(_DWORD *)(v7 + 9312);
  v213 = (v212 + 84008871 - (v9 & (2 * v212))) ^ *(_DWORD *)(v7 + 0x2000);
  v214 = (v213 - 1087178124 - ((2 * v213) & 0x7E65F4E8)) ^ *(_DWORD *)(v7 + 9160);
  *(_DWORD *)(v7 + 8808) = v164;
  v215 = (v214 - 2102525313 - ((2 * v214) & 0x55C04FE)) ^ v164;
  v216 = (v215 - 519103228 - ((2 * v215) & 0xC21E3A08)) ^ *(_DWORD *)(v7 + 8312);
  v217 = (v216 + 84008871 - (v9 & (2 * v216))) ^ *(_DWORD *)(v7 + 8868);
  LODWORD(v187) = *(_DWORD *)(v7 + 8680);
  v218 = (v217 + 1396432010 - ((2 * v217) & 0xA677B914)) ^ v187;
  v219 = (v218 + 84008872 + ~(v9 & (2 * v218))) ^ *(_DWORD *)(v7 + 8212);
  v220 = (v219 + 84008871 - (v9 & (2 * v219))) ^ *(_DWORD *)(v7 + 8792);
  *(_DWORD *)(v7 + 8932) = v165;
  v221 = (v220 + 84008871 - (v9 & (2 * v220))) ^ v165;
  v222 = (v221 - 937747949 - ((2 * v221) & 0x90363426)) ^ *(_DWORD *)(v7 + 9608);
  v223 = (v222 + 84008871 - (v9 & (2 * v222))) ^ *(_DWORD *)(v7 + 8648);
  v224 = (v223 + 84008871 - (v9 & (2 * v223))) ^ *(_DWORD *)(v7 + 9400);
  v225 = (v224 + 414516081 - ((2 * v224) & 0x316A06E2)) ^ *(_DWORD *)(v7 + 8368);
  v226 = (v225 - 2102525313 - ((2 * v225) & 0x55C04FE)) ^ *(_DWORD *)(v7 + 8240);
  v227 = (v226 - 519103228 - ((2 * v226) & 0xC21E3A08)) ^ *(_DWORD *)(v7 + 8816);
  v228 = (v227 + 84008871 - (v9 & (2 * v227))) ^ *(_DWORD *)(v7 + 8304);
  v229 = (v228 + 84008871 - (v9 & (2 * v228))) ^ *(_DWORD *)(v7 + 8864);
  v230 = (v229 - 519103228 - ((2 * v229) & 0xC21E3A08)) ^ *(_DWORD *)(v7 + 8968);
  v231 = (v230 + 84008871 - (v9 & (2 * v230))) ^ *(_DWORD *)(v7 + 9568);
  v232 = (v231 + 84008871 - (v9 & (2 * v231))) ^ *(_DWORD *)(v7 + 8260);
  v233 = (v232 + 84008871 - (v9 & (2 * v232))) ^ *(_DWORD *)(v7 + 9520);
  v234 = (v233 - 1087178124 - ((2 * v233) & 0x7E65F4E8)) ^ *(_DWORD *)(v7 + 9172);
  v235 = (v234 - 937747949 - ((2 * v234) & 0x90363426)) ^ *(_DWORD *)(v7 + 8628);
  v236 = (v235 + 84008871 - (v9 & (2 * v235))) ^ *(_DWORD *)(v7 + 8328);
  *(_DWORD *)(v7 + 8984) = v166;
  v237 = (v236 + 414516081 - ((2 * v236) & 0x316A06E2)) ^ v166;
  v238 = (v237 + 414516081 - ((2 * v237) & 0x316A06E2)) ^ *(_DWORD *)(v7 + 8264);
  v239 = (v238 + 414516081 - ((2 * v238) & 0x316A06E2)) ^ *(_DWORD *)(v7 + 8456);
  v240 = (v239 + 84008871 - (v9 & (2 * v239))) ^ *(_DWORD *)(v7 + 9224);
  v241 = (v240 + 84008872 + ~(v9 & (2 * v240))) ^ *(_DWORD *)(v7 + 9584);
  v242 = *(_DWORD *)(v7 + 9512);
  v243 = v187 ^ v242 ^ 0x9E21193E;
  v244 = (1267915585 * (v241 ^ 0x1B8E2A9D)) ^ (v243 * v192 + 84008871 - (v9 & (2 * v243 * v192))) ^ *(_DWORD *)(v7 + 9728);
  v245 = ((970554739 * (v241 ^ 0x1B8E2A9D)) ^ (970554739 * v243))
       + 84008871
       - (v9 & (2 * ((970554739 * (v241 ^ 0x1B8E2A9D)) ^ (970554739 * v243))));
  *(_DWORD *)(v7 + 8936) = v187 ^ v242 ^ v241 ^ *(_DWORD *)(v7 + 9552) ^ v150 ^ *(_DWORD *)(v7 + 9736) ^ v160;
  LODWORD(v181) = (-286882913 * (v242 ^ 0xD694EF29 ^ v241)) ^ (84008871
                                                             - 286882913 * *(_DWORD *)(v7 + 8384)
                                                             - ((231540542 * *(_DWORD *)(v7 + 8384)) & v9)) ^ v159;
  *(_DWORD *)(v7 + 8980) = v181;
  v246 = v181 ^ 0x9DD65D0F;
  *(_QWORD *)(v7 + 9728) = v246;
  *(_QWORD *)(v7 + 9736) = v245 ^ 0xE43BB5FA ^ v154;
  *(_DWORD *)(v7 + 9552) = (*(unsigned __int8 *)(*(_QWORD *)(v7 + 7912)
                                               + (((BYTE3(v181) ^ 0x9D) + 55) ^ 0x30)) ^ 0xFFFFFFDF)
                         * ((v244 & 0x35 ^ 0x31) + (v244 & 0x35 ^ 4));
  v247 = (v244 >> 13) & 0xF8 | (v244 >> 21) & 7;
  v248 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 8064) + (v247 ^ 0x98));
  *(_DWORD *)(v7 + 8720) = (v246 >> 16) - ((2 * (v246 >> 16)) & 0xFFFFFFC3);
  LODWORD(v178) = 115 * (v248 ^ ((v247 ^ 0xFFFFFFFE) - 55) ^ 0x3A);
  v249 = *(_QWORD *)(v7 + 7168);
  *(_QWORD *)(v7 + 8840) = v249 - 0x25ED94A3D792CC43;
  v250 = *(_QWORD *)(v7 + 7792);
  LODWORD(v247) = (*(unsigned __int8 *)(v250
                                      + 1853
                                      + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC43) + 26) ^ 0xD0))
                 + 33) ^ HIBYTE(v244);
  v251 = *(_QWORD *)(v7 + 8168);
  LODWORD(v247) = -*(unsigned __int8 *)(v251
                                      + ((((v247 ^ 0xE7) >> 2) | ((_BYTE)v247 << 6)) ^ 0x16));
  v252 = *(_QWORD *)(v7 + 7656);
  v253 = *(_DWORD *)(v7 + 9184);
  v254 = (v253 - 1538081657);
  v255 = v253;
  *(_QWORD *)(v7 + 8576) = v250 + 4190;
  v256 = ((v247 ^ (v247 >> 6) ^ (v247 >> 3) ^ 0x2B) - 105) ^ (*(unsigned __int8 *)(v250 + 4190 + (((v252 ^ 0x74) + 26) ^ 0xE9))
                                                                                              + (((v252 ^ 0x36EAB274)
                                                                                                + 26) ^ 0xFFFFFF8D));
  *(_DWORD *)(v7 + 9264) = v256 - 1142778053 - ((2 * v256) & 0x76);
  *((_QWORD *)&v258 + 1) = (v254 + 0x7DD7830B36EAB274 - ((2 * (_DWORD)v254) & 0x6DD564E8)) ^ v252;
  *(_QWORD *)&v258 = v252;
  v257 = v258 >> 63;
  v259 = *(unsigned __int8 *)(v250 + 276 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC42) - 13) ^ 0x70));
  v260 = v259 ^ (16 * v259);
  v261 = v260 ^ 0x3B;
  v262 = *(unsigned __int8 *)(v250
                            + 276
                            + ((((((v260 ^ 0x3B) & 0xF3 ^ 0xF3) + ((v260 ^ 0x3B) & 0xF3)) & (v260 ^ 0xC4) | (v260 ^ 0x3B) & 0xF3)
                                               + v257) ^ 0x70));
  v263 = v257 ^ (v253 - 1538081656);
  *(_QWORD *)(v7 + 8880) = v261 ^ v262 ^ ((v262 ^ 0xFFFFFFBA) << ((v262 & 4 ^ 4) + (v262 & 4))) ^ v178;
  v264 = *(_QWORD *)(v7 + 8056);
  LODWORD(v178) = *(unsigned __int8 *)(v264 + ((167 * (v257 >> 63)) ^ 0x15))
                + ((167 * (v257 >> 63)) ^ 0x63)
                + ((167 * (v257 >> 63)) ^ 6);
  v265 = 2 * v263 - 0x1B02CC06AF86097CLL - ((4 * v263) & 0xC9FA67F2A0F3ED08);
  v266 = ((((v178 ^ ((v263 & 0xE5 ^ 0xE5) + (v263 & 0xE5))) >> 6) | (4 * (v178 ^ ((v263 & 0xE5 ^ 0xE5) + (v263 & 0xE5)))))
        - 0x1B02CC06AF86097CLL
        - ((8 * (v178 ^ ((v263 & 0xE5 ^ 0xE5) + (v263 & 0xE5)))) & 0x108)) ^ v265;
  v267 = *(unsigned __int8 *)(v250 + 1595 + ((v266 + 23) ^ 0xFBLL));
  *(_QWORD *)(v7 + 8872) = (*(unsigned __int8 *)(v250
                                               + 6299
                                               + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC41) + 23) ^ 0xDLL))
                          + ((*(unsigned __int8 *)(v249 - 0x25ED94A3D792CC41) + 23) ^ 0xFFFFFFC7)
                          + 1) ^ ((v267 >> 4) | (16 * v267)) ^ (v244 >> 8);
  *((_QWORD *)&v258 + 1) = v266 ^ (v253 - 1538081655);
  *(_QWORD *)&v258 = -2 - v265;
  v268 = (v258 >> 63) + 0x7DD7830B36EAB274 - ((2 * (v258 >> 63)) & 0xFBAF06166DD564E8);
  v269 = (*(_BYTE *)(v249 - 0x25ED94A3D792CC40) - 16) ^ 0xD1;
  *(_QWORD *)(v7 + 8728) = v250 + 2896;
  LODWORD(v269) = *(unsigned __int8 *)(v250 + 2896 + (((v268 ^ 0x74) - 16) ^ 0xD1)) ^ *(unsigned __int8 *)(v250 + 2896 + v269);
  v270 = -89 * (v269 ^ (16 * v269) & 0x20 ^ 0xFFFFFFCE ^ v244);
  v271 = ((v270 ^ 6) + (v270 ^ 0x63) + *(unsigned __int8 *)(v264 + (v270 ^ 0x15))) ^ 0xFFFFFFE5;
  *((_QWORD *)&v258 + 1) = (v253 - 1538081654) ^ 0x7DD7830B36EAB274 ^ v268;
  *(_QWORD *)&v258 = v268;
  v272 = v258 >> 63;
  LODWORD(v269) = *(unsigned __int8 *)(v249 - 0x25ED94A3D792CC3FLL);
  *(_QWORD *)(v7 + 8832) = (v271 >> 6) | (4 * v271);
  *(_DWORD *)(v7 + 8504) = *(unsigned __int8 *)(*(_QWORD *)(v7 + 9704)
                                              + (((v269 >> 2) | ((_BYTE)v269 << 6)) ^ 0xA0))
                         - (((((v269 >> 2) | ((_DWORD)v269 << 6)) ^ 0xFFFFFFA7) + 46) ^ ((v269 >> 2) | ((_DWORD)v269 << 6)) ^ 0xFFFFFFA7);
  v273 = (*(unsigned __int8 *)(v250
                             + 1853
                             + (((v272 + 26) ^ (((117 - v253) & 0xE3) + ((v253 - 118) & 0xE3))) ^ 0x33))
        + 33) ^ 0x2B;
  v274 = *(_QWORD *)(v7 + 9736);
  v275 = *(_QWORD *)(v7 + 8080);
  *(_DWORD *)(v7 + 8784) = *(unsigned __int8 *)(v275
                                              + (((v273 >> 5) | (8 * v273)) ^ 0xFALL))
                         + (((v273 >> 5) | (8 * v273)) ^ 0x23)
                         + (((v273 >> 5) | (8 * v273)) ^ 0x22);
  v276 = *(unsigned __int8 *)(v250 + 276 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC3ELL) - 13) ^ 0x70));
  v277 = v276 ^ (16 * v276) ^ 0x3B ^ (v274 >> 16);
  *(_DWORD *)(v7 + 8488) = v253 - 1454072782;
  *(_DWORD *)(v7 + 9184) = v253;
  *((_QWORD *)&v258 + 1) = v272 ^ (v255 - 1454072782 - ((2 * v255 + 145062166) & 0xA03BF4E)) ^ 0x501DFA7u;
  *(_QWORD *)&v258 = v272;
  v278 = (v258 >> 63) + 0x7DD7830B36EAB274 - ((2 * (v258 >> 63)) & 0xFBAF06166DD564E8);
  v279 = *(unsigned __int8 *)(v250 + 276 + (((v278 ^ 0x74) - 13) ^ 0x70));
  *(_QWORD *)(v7 + 8616) = (v277 + 2042234390 - ((2 * v277) & 0x2C)) ^ (((v279 ^ (16 * v279)) ^ 0xA0)
                                                                                       + 2042234390
                                                                                       - ((2 * (v279 ^ (16 * v279))) & 0x2Cu));
  v280 = v278 ^ ((v253 - 1538081652) - 0x2287CF4C9154D8CLL - ((2 * (v253 - 1538081652)) & 0x6DD564E8));
  v281 = 2 * v280 - 0x1B02CC06AF86097CLL - ((4 * v280) & 0xC9FA67F2A0F3ED08);
  LOBYTE(v277) = ((*(_BYTE *)(v249 - 0x25ED94A3D792CC3DLL) + 23) >> 5) | (8
                                                                                         * (*(_BYTE *)(v249 - 0x25ED94A3D792CC3DLL)
                                                                                          + 23));
  v282 = ((v281 | (v278 >> 63)) ^ 0xE4FD33F95079F684)
       + 0x7DD7830B36EAB274
       - 2 * (((v281 | (v278 >> 63)) ^ 0xE4FD33F95079F684) & 0x7DD7830B36EAB276 ^ v281 & 2);
  LOBYTE(v279) = *(_BYTE *)(v250 + 6299 + (((v282 ^ 0x74) + 23) ^ 0xDLL))
               + (((v282 ^ 0x74) + 23) ^ 0xC7);
  v283 = *(unsigned __int8 *)(v250
                            + 1595
                            + ((115
                                               * ((*(_BYTE *)(v275 + (v277 ^ 0xFALL))
                                                 + (v277 ^ 0x23)
                                                 + (v277 ^ 0x22)
                                                 + 1) ^ 0xCB)) ^ 0xFBLL));
  *(_DWORD *)(v7 + 8712) = (v283 >> 4) | (16 * v283);
  v284 = -*(unsigned __int8 *)(v251
                             + (((((v279 + 1) ^ 0xF2) >> 2) | (((v279 + 1) ^ 0xF2) << 6)) ^ 0x16));
  v285 = -*(_BYTE *)(v251
                                    + (((((v279 + 1) ^ 0xF2) >> 2) | (((v279 + 1) ^ 0xF2) << 6)) ^ 0x16));
  *(_DWORD *)(v7 + 8512) = v284 ^ (v285 >> 6) ^ (v285 >> 3);
  *((_QWORD *)&v258 + 1) = v282 ^ ((v253 - 1538081651)
                                 + 0x7DD7830B36EAB274
                                 - ((2 * (v253 - 1538081651)) & 0x6DD564E8));
  *(_QWORD *)&v258 = ~v281;
  v286 = (v258 >> 63) + 0x7DD7830B36EAB274 - ((2 * (v258 >> 63)) & 0xFBAF06166DD564E8);
  v287 = *(unsigned __int8 *)(v250 + 4448 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC3CLL) - 16) ^ 0xEFLL)) ^ *(unsigned __int8 *)(v250 + 4448 + (((v286 ^ 0x74) - 16) ^ 0xEFLL)) ^ 0xFFFFFFC5 ^ v274;
  *(_QWORD *)(v7 + 8776) = (~(2 * v287) + v287);
  *((_QWORD *)&v258 + 1) = v286 ^ ((v255 - 1538081650)
                                 + 0x7DD7830B36EAB274
                                 - ((2 * (v255 - 1538081650)) & 0x6DD564E8));
  *(_QWORD *)&v258 = v286;
  v288 = v258 >> 63;
  *(_DWORD *)(v7 + 8576) = ((v288 + 26) ^ 0xFFFFFF8D)
                         + *(unsigned __int8 *)(*(_QWORD *)(v7 + 8576) + ((v288 + 26) ^ 0xE9));
  *((_QWORD *)&v258 + 1) = v288 ^ (v253 - 1538081649);
  *(_QWORD *)&v258 = v288;
  v289 = v258 >> 63;
  v290 = -89
       * ((((*(unsigned __int8 *)(v249 - 0x25ED94A3D792CC3ALL) - 13) ^ 0xFFFFFFFB) - 59) ^ *(unsigned __int8 *)(v250 + 2639 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC3ALL) - 13) ^ 0x6DLL)));
  v291 = ((v290 ^ 6)
        + (v290 ^ 0x63)
        + *(unsigned __int8 *)(v264
                             + ((-89
                                                * ((((*(_BYTE *)(v249 - 0x25ED94A3D792CC3ALL) - 13) ^ 0xFB) - 59) ^ *(_BYTE *)(v250 + 2639 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC3ALL) - 13) ^ 0x6DLL)))) ^ 0x15))) ^ 0xFFFFFFE5;
  v292 = (((v291 >> 6) | (4 * v291))
        - ((2 * ((v291 >> 6) | (4 * v291))) & 0xFFFFFFC3)
        - 31) ^ (((v289 + 243) ^ 4) + 59) ^ *(unsigned __int8 *)(v250 + 2639 + ((v289 - 13) ^ 0x6DLL)) ^ (*(_DWORD *)(v7 + 8720) - 31);
  *((_QWORD *)&v258 + 1) = v289 ^ (v253 - 1538081648);
  *(_QWORD *)&v258 = v289;
  v293 = v258 >> 63;
  *((_QWORD *)&v258 + 1) = v293 ^ (v253 - 1538081647);
  *(_QWORD *)&v258 = v293;
  v294 = v258 >> 63;
  LODWORD(v293) = *(unsigned __int8 *)(v250 + 1595 + ((v293 + 23) ^ 0xFBLL));
  *(_QWORD *)(v7 + 8720) = (*(unsigned __int8 *)(v250
                                               + 6299
                                               + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC39) + 23) ^ 0xDLL))
                          + ((*(unsigned __int8 *)(v249 - 0x25ED94A3D792CC39) + 23) ^ 0xFFFFFFC7)
                          + 1) ^ ((v293 >> 4) | (16 * (_DWORD)v293)) ^ (*(_QWORD *)(v7 + 9728) >> 8);
  v295 = v294 ^ (v255 - 1454072775 - ((2 * v255 + 145062180) & 0xA03BF4E)) ^ 0x501DFA7u;
  v296 = 2 * v295 - 0x1B02CC06AF86097CLL - ((4 * v295) & 0xC9FA67F2A0F3ED08);
  v297 = ((v296 + (v294 >> 63)) ^ 0xE4FD33F95079F684)
       + 0x7DD7830B36EAB274
       - 2 * (((v296 + (v294 >> 63)) ^ 0xE4FD33F95079F684) & 0x7DD7830B36EAB27DLL ^ (v296 + (v294 >> 63)) & 9);
  LOBYTE(v285) = (((v297 ^ 0x74) + 26) >> 5) | (8 * ((v297 ^ 0x74) + 26));
  v298 = *(_BYTE *)(v275 + (v285 ^ 0xFALL)) + (v285 ^ 0x23) + (v285 ^ 0x22);
  *(_QWORD *)(v7 + 8472) = v254;
  LOBYTE(v166) = *(_BYTE *)(v250 + 1853 + (((*(_DWORD *)(v7 + 8504) ^ 0x1B) - 79) ^ 0xD0));
  *(_DWORD *)(v7 + 8504) = *(unsigned __int8 *)(v250
                                              + 1853
                                              + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC3BLL) + 26) ^ 0xD0));
  LOBYTE(v285) = *(_BYTE *)(v250 + 1853 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC37) + 26) ^ 0xD0));
  v299 = *(_BYTE *)(v250 + 1853 + ((115 * ((v298 + 1) ^ 0xCB)) ^ 0xD0));
  *((_QWORD *)&v258 + 1) = v297 ^ ((v253 - 1538081645)
                                 + 0x7DD7830B36EAB274
                                 - ((2 * (v253 - 1538081645)) & 0x6DD564E8));
  *(_QWORD *)&v258 = -2 - v296;
  v300 = v258 >> 63;
  LOBYTE(v180) = *(_BYTE *)(v250 + 276 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC36) - 13) ^ 0x70));
  LODWORD(v247) = *(_DWORD *)(v7 + 8488);
  v301 = v300 ^ ((_DWORD)v247 - ((2 * v253 + 145062184) & 0xA03BF4E) + 9) ^ 0x501DFA7u;
  v302 = 2 * v301 - 0x35306D03FAA22C5FLL - ((4 * v301) & 0x959F25F80ABBA740);
  LOBYTE(v275) = *(_BYTE *)(v250 + 276 + ((v300 - 13) ^ 0x70));
  v303 = v302 ^ 0xCACF92FC055DD3A1 | (v300 >> 63);
  LOBYTE(v301) = (*(_BYTE *)(v249 - 0x25ED94A3D792CC35) >> 2) | (*(_BYTE *)(v249 - 0x25ED94A3D792CC35) << 6);
  LODWORD(v274) = *(unsigned __int8 *)((v302 & 0x18020E70AB881508 ^ 0x10000C00AA800408)
                                     + (v302 & 0x18020E70AB881508 ^ 0x802027001081100)
                                     + v250
                                     + ((((*(_BYTE *)(*(_QWORD *)(v7 + 9704)
                                                                     + (v301 ^ 0xA0))
                                                          - (((v301 ^ 0xA7) + 46) ^ v301 ^ 0xA7)) ^ 0x1B)
                                                        - 82) ^ 0xFBLL)
                                     - 0x18020E70AB880ECDLL);
  LOBYTE(v269) = v303 ^ (v247 - ((2 * v253 + 42) & 0x4E) + 10) ^ 0xA7;
  LODWORD(v303) = *(unsigned __int8 *)(v250 + 1595 + ((v303 + 23) ^ 0xFBLL));
  *(_QWORD *)(v7 + 9728) = v302;
  LOBYTE(v269) = (v302 >= 0) - 124 + 2 * v269 - ((4 * v269) & 8);
  LOBYTE(v187) = (v269 ^ 0x84) + 116 - 2 * ((v269 ^ 0x84) & 0x7D ^ v269 & 9);
  LODWORD(v269) = ((v303 >> 4) | (16 * v303)) ^ ((v274 >> 4) | (16 * v274));
  v304 = *(_QWORD *)(v7 + 8728);
  LOBYTE(v303) = *(_BYTE *)(v304 + ((*(_BYTE *)(v249 - 0x25ED94A3D792CC38) - 16) ^ 0xD1));
  LOBYTE(v294) = *(_BYTE *)(v304 + ((v294 - 16) ^ 0xD1));
  v305 = *(_BYTE **)(v7 + 8840);
  LOBYTE(v301) = *(_BYTE *)(*(_QWORD *)(v7 + 8728)
                          + ((v305[v187 & 0xF ^ 4 | v187 & 0xF ^ 0xB] - 16) ^ 0xD1));
  v306 = *(_DWORD *)(v7 + 8936);
  LODWORD(v274) = v269 ^ ((v306 ^ 0x3075A089u) >> 8);
  LODWORD(v294) = *(unsigned __int8 *)(v250
                                     + 5502
                                     + ((v294 ^ v303 ^ (16 * (v294 ^ v303)) & 0x20) ^ 0x93u ^ *(_DWORD *)(v7 + 8980)));
  v307 = *(_QWORD *)(v7 + 7848);
  LOBYTE(v303) = *(_BYTE *)(v307 + (((BYTE2(v306) ^ 0x75) + 55) ^ 0x34));
  LOBYTE(v282) = *(_BYTE *)(v307
                          + (((*(_BYTE *)(v250
                                                         - (((((_BYTE)v253 + 7) & 0x63 ^ 0x63)
                                                           + (((_BYTE)v253 + 7) & 0x63)) & 0x84)
                                                         + (((v187 ^ 0x74) - 16) ^ 0xEFLL)
                                                         + 4448) ^ 0xAA)
                                             + 55) ^ 0x34));
  *(_BYTE *)(v249 - 0x25ED94A3D792CC38) = ((v294 >> 1) | ((_BYTE)v294 << 7)) ^ v294 & 0x6C ^ 0x90;
  v308 = *(unsigned __int8 *)(v250 + 5502 + (*(_QWORD *)(v7 + 8832) ^ 0x2DLL));
  LOBYTE(v294) = (16 * v301) & 0x20 ^ v301;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC40) = v308 & 0x6C ^ 0xAD ^ ((*(_BYTE *)(v250
                                                                            + 5502
                                                                            + (*(_QWORD *)(v7 + 8832) ^ 0x2DLL)) >> 1) & 0xF7 | (__rbit32(v308) >> 24) & 0x88);
  LODWORD(v301) = *(unsigned __int8 *)(v250 + 5502 + (v292 ^ 0xF3));
  *(_QWORD *)(v7 + 7776) = ((v301 >> 1) | ((_DWORD)v301 << 7)) ^ v301 & 0x6C ^ 0xFFFFFFF6;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC3ALL) = ((v301 >> 1) | ((_BYTE)v301 << 7)) ^ v301 & 0x6C ^ 0xF6;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC3ELL) = *(_BYTE *)(v250 + 4973 + (*(_QWORD *)(v7 + 8616) ^ 0xC0)) ^ *(_QWORD *)(v7 + 8616) ^ 0x3E;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC34) = *(_BYTE *)(v250
                                                     + 4973
                                                     + ((v294 ^ (5 * (v282 ^ 0xB3)) ^ v306) ^ 0x50)) ^ v294 ^ (5 * (v282 ^ 0xB3)) ^ v306 ^ 5;
  LOBYTE(v254) = v180 ^ (5 * (v303 ^ 0xB3)) ^ (16 * v180) ^ v275 ^ (16 * v275);
  LODWORD(v295) = *(unsigned __int8 *)(v250
                                     + 5502
                                     + (((v285 + 33) ^ (v299 + 33) ^ ((v306 ^ 0x3075A089u) >> 24)) ^ 0xFCu));
  *(_BYTE *)(v249 - 0x25ED94A3D792CC37) = ((v295 >> 1) | ((_BYTE)v295 << 7)) ^ v295 & 0x6C ^ 0xF9;
  v309 = *(_QWORD *)(v7 + 9736);
  LODWORD(v295) = *(unsigned __int8 *)(v250
                                     + 5502
                                     + (((v166 + 33) ^ (115 * ((*(_DWORD *)(v7 + 8784) + 1) ^ 0xCB)) ^ BYTE3(v309)) ^ 0x8Au));
  LOBYTE(v303) = ((v295 >> 1) | ((_BYTE)v295 << 7)) ^ v295 & 0x6C ^ 0xBE;
  LOBYTE(v295) = -111 * *(_DWORD *)(v7 + 9552);
  *(_BYTE *)(v249 - 0x25ED94A3D792CC3FLL) = v303;
  LOBYTE(v254) = v254 ^ 0xC9 ^ *(_BYTE *)(v250 + 4973 + (v254 ^ 0xBDLL));
  LOBYTE(v303) = (v254 >> 5) | (8 * v254);
  v310 = *(_QWORD *)(v7 + 8880);
  LOBYTE(v254) = *(_DWORD *)(v7 + 8504) + 33;
  LOBYTE(v309) = (*(_DWORD *)(v7 + 8712) ^ ((*(_DWORD *)(v7 + 8512) ^ 0x2B) - 105) ^ BYTE1(v309) ^ 0x59) + 55;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC36) = (115
                                           * (*(_BYTE *)(*(_QWORD *)(v7 + 8064) + (v303 ^ 0xAFLL)) ^ ((v303 ^ 0xC9) - 55) ^ 0x3A)) ^ 0x89;
  LODWORD(v309) = *(unsigned __int8 *)(v250
                                     + 5502
                                     + ((5
                                                        * (*(_BYTE *)(*(_QWORD *)(v7 + 7912)
                                                                    + (v309 ^ 0x30)) ^ 0xDF)) ^ 0x3CLL));
  LODWORD(v303) = (v309 >> 1) | ((_DWORD)v309 << 7);
  LODWORD(v309) = ((2 * v303) & 0xFF92 ^ 0xFFFFFF90) - ((2 * v309) & 4);
  LODWORD(v309) = ((2 * ((2 * v303) ^ (v309 + 75) ^ 3)) | 0x58) - ((2 * v303) ^ (v309 + 75) ^ 3) + 84;
  v311 = *(_QWORD *)(v7 + 8872);
  *(_QWORD *)(v7 + 7944) = ((v303 ^ 0xFFFFFFF1)
                          - ((2 * (v303 ^ 0xFFFFFFF1)) & 0xFFFFFF96)
                          + 75) ^ v309 ^ 0x3F;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC3DLL) = ((v303 ^ 0xF1) - ((2 * (v303 ^ 0xF1)) & 0x96) + 75) ^ v309 ^ 0x3F;
  LODWORD(v309) = v274 + 734326289 - ((2 * v274) & 0x22);
  *v305 = *(_BYTE *)(v7 + 9264) ^ *(_BYTE *)(v250 + 4973 + (*(_DWORD *)(v7 + 9264) ^ 0xBBE297DF)) ^ 0xF7;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC39) = *(_QWORD *)(v7 + 8720) ^ 0x93 ^ *(_BYTE *)(v250
                                                                                     + 4973
                                                                                     + (*(_QWORD *)(v7 + 8720) ^ 4));
  *(_BYTE *)(v249 - 0x25ED94A3D792CC42) = *(_BYTE *)(v250 + 4973 + (v310 ^ 0xDDLL)) ^ v310 ^ 0x9B ^ 0x81;
  LOBYTE(v295) = v254 ^ *(_DWORD *)(v7 + 8576) ^ 0x47 ^ v295;
  *(_BYTE *)(v249 - 0x25ED94A3D792CC35) = v309 ^ 0x27 ^ *(_BYTE *)(v250 + 4973 + (v309 ^ 0x2BC4EE56));
  LOBYTE(v253) = *(_BYTE *)(v250 + 4973 + (v311 ^ 0xDLL));
  *(_BYTE *)(v249 - 0x25ED94A3D792CC41) = v311 ^ 0xD9 ^ (v253 - ((2 * v253) & 0xA4) + 82);
  LOBYTE(v295) = *(_BYTE *)(*(_QWORD *)(v7 + 8136) + ((-89 * v295) ^ 0x56)) ^ 0xE1;
  LODWORD(v295) = *(unsigned __int8 *)(v250
                                     + 5502
                                     + (((v295 >> 6) | (4 * v295)) ^ 0x3CLL));
  *(_BYTE *)(v249 - 0x25ED94A3D792CC3BLL) = ((v295 >> 1) | ((_BYTE)v295 << 7)) ^ v295 & 0x6C ^ 0xA4;
  v312 = *(_QWORD *)(v7 + 7824);
  *(_BYTE *)(v249 - 0x25ED94A3D792CC3CLL) = (5
                                           * (*(_BYTE *)(v307
                                                       + (((*(_QWORD *)(v7 + 8776) ^ (69 * ((*(_QWORD *)(v7 + 8776) & 0xC9 ^ 1) + (*(_QWORD *)(v7 + 8776) & 0xC9 ^ 0xC8))) ^ *(_BYTE *)(v250 + 4973 + (*(_QWORD *)(v7 + 8776) ^ 0x55)) ^ 0xC)
                                                                          + 55) ^ 0x34)) ^ 0xB3)) ^ 0xBA;
  v313 = v312 ^ *(unsigned __int8 *)(v250 + (v312 ^ 0xD5) + 3671) ^ 0x1E;
  v314 = *(_QWORD *)(v7 + 7864);
  v315 = *(_QWORD *)(v7 + 7584);
  if (!(_BYTE)v313)
  {
    v316 = (*(_BYTE *)(v250 + (v315 ^ 0x33) + 6561) - 38);
    LOBYTE(v315) = (*(_BYTE *)(v250 + (v315 ^ 0x33) + 6561) - 38) ^ (v316 >> 2) ^ (v316 >> 1) ^ 0xE3;
  }
  *(_QWORD *)(v7 + 7824) = v313;
  v317 = *(_DWORD *)(v7 + 9184);
  if (v315 | v313)
    v314 = v314;
  else
    v314 = ((v314 ^ 0xFFFFFFC0) + (v314 ^ 0x55) + 1) ^ 0x56 ^ *(unsigned __int8 *)(v250 + (v314 ^ 0xF4) + 7093);
  *(_QWORD *)(v7 + 7864) = v314;
  *(_QWORD *)(v7 + 7568) = (v314 | (v315 | v313)) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8
                                        * (int)(*(_QWORD *)(v7 + 9176) ^ (11546
                                                                        * (v317 - 1538081641 >= (*(_DWORD *)(v7 + 7560) ^ 0x501DFA7u)))))
                            - 8))();
}

uint64_t sub_10035F5B4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  unsigned int v62;

  *(_DWORD *)(v12 + 7552) = v11;
  *(_QWORD *)(v12 + 7856) = v10;
  *(_QWORD *)(v12 + 7712) = v13;
  *(_DWORD *)(v12 + 9184) = v9;
  v21 = *(_QWORD *)(v12 + 8472) + 15;
  v22 = a6 ^ (v21 - 0x2287CF4C9154D8CLL - ((2 * (_DWORD)v21) & 0x6DD564E8));
  v23 = (a7 + 2 * v22 - ((4 * v22) & 0xC9FA67F2A0F3ED08) + (a6 >> 63)) ^ a7;
  *(_QWORD *)(v12 + 7656) = v23 + 0x7DD7830B36EAB274 - 2 * (v23 & 0x7DD7830B36EAB275 ^ (a6 >> 63));
  *(_DWORD *)(v12 + 7544) = v15 ^ 0x1E;
  *(_QWORD *)(v12 + 7168) = v18 + 16;
  *(_QWORD *)(v12 + 7688) = v8 ^ 0x2Au;
  *(_DWORD *)(v12 + 7696) = a1 ^ 0x7A;
  v24 = *(_QWORD *)(v12 + 8848);
  *(_QWORD *)(v12 + 9552) = *(_QWORD *)(v12 + 8992);
  *(_QWORD *)(v12 + 7920) = v14;
  v25 = *(_QWORD *)(v12 + 7808);
  v26 = *(_DWORD *)(v12 + 9528);
  v27 = *(_QWORD *)(v12 + 7160);
  *(_DWORD *)(v12 + 9736) = (v26 + 2803) ^ 0xF1C;
  v28 = (~((v26 + 2803) ^ 0xF1C ^ v27 ^ 0xFFFFFF8A | v27 ^ 0xFFFFFFD4) | 0x14) ^ v27 ^ 0xFFFFFFD4;
  LODWORD(v23) = *(_QWORD *)(v12 + 7616) ^ *(unsigned __int8 *)(a8 + 5765 + ~*(_BYTE *)(v12 + 7616)) ^ 0x3C;
  v29 = *(unsigned __int8 *)(a8
                           + 539
                           + ((~((v26 - 13) ^ 0x1C ^ v27 ^ 0x8A | v27 ^ 0xD4) | 0x14) ^ v27 ^ 0xD4u));
  *(_QWORD *)(v12 + 7584) = v14;
  v30 = *(unsigned __int8 *)(a8 + 539 + (v14 ^ 0x7ALL));
  v31 = v17 + ((_DWORD)v23 << 24) - (((_DWORD)v23 << 25) & 0xA000000);
  LODWORD(v23) = (v30 << (((v30 >> 5) & 3 ^ 3) + ((v30 >> 5) & 3))) ^ (v30 >> 5);
  *(_QWORD *)(v12 + 7576) = v16;
  v32 = *(unsigned __int8 *)(a8 + 539 + (v16 ^ 0xAELL));
  HIDWORD(v33) = v32 >> 5;
  LODWORD(v33) = (((v32 >> 5) | (8 * v32)) << 28) ^ (((v32 >> 5) | (8 * v32)) << 24);
  v34 = *(_QWORD *)(v12 + 8168);
  v35 = -*(_BYTE *)(v34 + ((v33 >> 26) ^ 0x17));
  LODWORD(v23) = (v17
                + (((v23 ^ (16 * v23)) ^ 0xA1) << 8)
                - (((v23 ^ (16 * (_DWORD)v23) ^ 0xA1) << 9) & 0x1BE00)) ^ v17 | ((((-*(unsigned __int8 *)(v34 + ((v33 >> 26) ^ 0x17)) ^ (v35 >> 6) ^ (v35 >> 3) ^ 0x2B)
                                                                                               - 105) ^ 0xF4) << 24);
  v36 = *(_QWORD *)(v12 + 7624) ^ 0x2F ^ *(unsigned __int8 *)(a8
                                                            + 5765
                                                            + (*(_QWORD *)(v12 + 7624) ^ 0xBELL));
  v37 = *(unsigned __int8 *)(v34 + (((v36 >> 2) | ((_BYTE)v36 << 6)) ^ 0x16));
  v38 = v23 + v17 - ((2 * v23) & 0xA03BF6E);
  v39 = *(_QWORD *)(v12 + 7640);
  LODWORD(v23) = *(unsigned __int8 *)(a8 + 5765 + (v39 ^ 0x6DLL));
  HIDWORD(v33) = v23 ^ v39;
  LODWORD(v33) = (v23 ^ ~(_DWORD)v39) << 24;
  v40 = -*(_BYTE *)(v34 + ((v33 >> 26) ^ 0x16));
  LODWORD(v23) = (v17
                + ((((-*(_BYTE *)(v34 + ((v33 >> 26) ^ 0x16)) ^ (v40 >> 6) ^ (v40 >> 3) ^ 0x2B)
                                    + (((v28 & 0xDF ^ 0xDF) + (v28 & 0xDF)) & 0xB7)) ^ 0xDC) << 8)
                - (((((-*(unsigned __int8 *)(v34 + ((v33 >> 26) ^ 0x16)) ^ (v40 >> 6) ^ (v40 >> 3) ^ 0x2B)
                    + (((v28 & 0xFFFFFFDF ^ 0xFFFFFFDF) + (v28 & 0xFFFFFFDF)) & 0xB7)) ^ 0xDC) << 9) & 0x1BE00)) ^ v17 | (((v29 >> 5) | (8 * v29)) ^ (16 * ((v29 >> 5) | (8 * v29)))) ^ 0x27;
  v41 = v23 + v17 - ((2 * v23) & 0xA03BF4E);
  LODWORD(v23) = *(unsigned __int8 *)(a8 + 539 + (v25 ^ 0x76));
  LODWORD(v23) = ((v23 >> 5) | (8 * v23)) ^ (16 * ((v23 >> 5) | (8 * v23)));
  v42 = *(unsigned __int8 *)(a8 + 539 + (*(_QWORD *)(v12 + 7824) ^ 0x4BLL));
  LODWORD(v23) = (115
                                 * ((*(_BYTE *)(*(_QWORD *)(v12 + 8080)
                                              + (((v23 >> 5) | (8 * v23)) ^ 0xDALL))
                                   + (((v23 >> 5) | (8 * v23)) ^ 3)
                                   + (((v23 >> 5) | (8 * v23)) ^ 2)
                                   + 1) ^ 0xCB)) ^ 0x31 | (v17
                                                         + ((((-(char)v37 ^ (-(char)v37 >> 6) ^ (-(char)v37 >> 3) ^ 0x2B)
                                                                             - 105) ^ 0x78) << 8)
                                                         - (((((-v37 ^ (-(char)v37 >> 6) ^ (-(char)v37 >> 3) ^ 0x2B)
                                                             - 105) ^ 0x78) << 9) & 0x1BE00)) ^ v17;
  v43 = v38 ^ v17 | (((v42 >> 5) | (8 * v42)) ^ (16 * ((v42 >> 5) | (8 * v42))));
  v44 = *(unsigned __int8 *)(a8
                           + 539
                           + ((*(_QWORD *)(v12 + 7768) ^ ((*(_QWORD *)(v12 + 7824) & 0x14 ^ 0x14)
                                                                         + (*(_QWORD *)(v12 + 7824) & 0x14))) ^ 0xF7u));
  v45 = ((v44 >> 5) | (8 * v44)) ^ (16 * ((v44 >> 5) | (8 * v44))) ^ 0x4E;
  LODWORD(v23) = (v23 + v17 - ((2 * v23) & 0xA03BF4E)) ^ v17 | (((v17 + (v45 << 24) - ((v45 << 25) & 0xA000000)) ^ v17)
                                                              + ((*(_QWORD *)(v12 + 7632) ^ 0x4B ^ *(_BYTE *)(a8 + 5765 + (*(_QWORD *)(v12 + 7632) ^ 0x2CLL))) << 16));
  v46 = v23 - 762037150 - ((2 * v23) & 0xA52878C4);
  v47 = *(unsigned __int8 *)(a8 + 539 + (*(_QWORD *)(v12 + 7648) ^ 0x52));
  v48 = *(unsigned __int8 *)(a8 + 539 + (*(_QWORD *)(v12 + 7664) ^ 0xB3));
  v49 = v41 ^ v17 | ((*(_QWORD *)(v12 + 7936) ^ 0x15 ^ *(unsigned __int8 *)(a8
                                                                                        + 5765
                                                                                        + (*(_QWORD *)(v12 + 7936) ^ 0xD8))) << 24) | (((((v47 >> 5) | (8 * v47)) ^ (16 * ((v47 >> 5) | (8 * v47)))) ^ 0xA9) << 16);
  LOBYTE(v23) = *(_BYTE *)(*(_QWORD *)(v12 + 8136) + ((-89 * (*(_QWORD *)(v12 + 7784) ^ 0x9F)) ^ 0x56)) ^ 0xE1;
  LODWORD(v23) = (*(_BYTE *)(a8 + 5765 + (((v23 >> 6) | (4 * v23)) ^ 0x8ALL)) ^ ((v23 >> 6) | (4 * v23)) ^ 0xF2 | (((((v48 >> 5) | (8 * v48)) ^ (16 * ((v48 >> 5) | (8 * v48)))) ^ 0x73) << 16))
               + (v31 ^ v17);
  LOBYTE(v41) = *(_BYTE *)(a8 + 5765 + (*(_QWORD *)(v12 + 7064) ^ 3));
  LODWORD(v23) = (v23 + v17 - ((2 * v23) & 0xA03BF4E)) ^ v17 | ((*(_QWORD *)(v12 + 7064) ^ 0xD4 ^ (v41 + (~(2 * v41) | 0xF) + 121)) << 8);
  LODWORD(v27) = v17
               + ((*(_QWORD *)(v12 + 7864) ^ 0x37 ^ *(_BYTE *)(a8
                                                                              + 5765
                                                                              + (*(_QWORD *)(v12 + 7864) ^ 0xFDLL))) << 16)
               - (((*(_QWORD *)(v12 + 7864) ^ 0x37 ^ *(unsigned __int8 *)(a8
                                                                                      + 5765
                                                                                      + (*(_QWORD *)(v12 + 7864) ^ 0xFDLL))) & 1) << 17);
  LODWORD(v39) = *(_DWORD *)(v12 + 8480);
  v50 = v49 ^ 0x6D01DFA7 ^ (v17 + 2 * ((v49 ^ 0x68000000) & v39) - ((4 * ((v49 ^ 0x68000000) & v39)) & 0xA03BF4C));
  v51 = *(_QWORD *)(v12 + 9552);
  v52 = *(_QWORD *)(v12 + 8800);
  v53 = *(_QWORD *)(v12 + 9064);
  v54 = ((unint64_t)(v50 & v51) << v52) + ((unint64_t)(v50 & v24) >> v53);
  v55 = v54 + v17 - ((2 * v54) & 0xA03BF4E);
  LODWORD(v27) = v27 ^ v17 | (v43 + v17 - ((2 * v43) & 0xA03BF4E)) ^ (v17 - 37);
  v56 = (2 * ((v46 ^ 0x52943C62) & *(_DWORD *)(v12 + 8496))
       - 762037150
       - ((4 * ((v46 ^ 0x52943C62) & *(_DWORD *)(v12 + 8496))) & 0xA52878C4)) ^ v46;
  v57 = *(_QWORD *)(v12 + 9040);
  v58 = ((unint64_t)(v56 & v57) << *(_QWORD *)(v12 + 9128)) ^ ((unint64_t)(v56 & *(_QWORD *)(v12 + 9432)) >> v53);
  LODWORD(v23) = (v17
                + 2 * (((v23 + v17 - ((2 * v23) & 0xA03BF4E)) ^ v17) & v39)
                - ((4 * (((v23 + v17 - ((2 * v23) & 0xA03BF4E)) ^ v17) & v39)) & 0xA03BF4C)) ^ (v23
                                                                                              + v17
                                                                                              - ((2 * v23) & 0xA03BF4E));
  v59 = *(_QWORD *)(v12 + 8408);
  LODWORD(v23) = ((unint64_t)(v23 & v51) << v52)
               + ((unint64_t)(v23 & v24) >> v59);
  v60 = v17 + v23 - ((2 * v23) & 0xA03BF4E);
  LODWORD(v23) = ((unint64_t)((v27 ^ (2 * (v27 & v39))) & v24) >> v59) ^ ((unint64_t)((v27 ^ (2 * (v27 & v39))) & v57) << v52);
  LODWORD(v27) = 1725131025 * ((v60 ^ 0xFAFE2058) + (*(_DWORD *)(v12 + 9568) ^ *(_DWORD *)(v12 + 8792))) + 1725131025;
  LODWORD(v27) = v27 - WORD1(v27) - ((v27 - WORD1(v27)) >> 8);
  LODWORD(v27) = -2108442235 * (v55 ^ (v27 + v17 - ((2 * v27) & 0xA03BF4E)));
  LODWORD(v27) = v27 - WORD1(v27) - ((v27 - WORD1(v27)) >> 8);
  v61 = -1348085437 * ((v58 + v17 - ((2 * v58) & 0xA03BF4E)) ^ v17 ^ v27)
      - ((-1348085437 * ((v58 + v17 - ((2 * v58) & 0xA03BF4E)) ^ v17 ^ v27)) >> 16);
  v62 = 254615973
      * (((v61 - (v61 >> 8) + v17 - ((2 * (v61 - (v61 >> 8))) & 0xA03BF4E)) ^ v17)
       + ((v23 + v17 - ((2 * v23) & 0xA03BF4E)) ^ v17));
  return ((uint64_t (*)(void))(*(_QWORD *)(v19
                                        + 8
                                        * ((6823 * (HIWORD(v62) != (unsigned __int16)(HIWORD(v62) + 13334))) ^ v26))
                            - 4))();
}

