uint64_t sub_100002710(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;

  v1 = 753993959 * ((((2 * result) | 0x25358D081CD6410CLL) - result - 0x129AC6840E6B2086) ^ 0xA7C3FF12D1B3D2A7);
  v2 = *(_QWORD *)(result + 24) ^ v1;
  v3 = *(_QWORD *)(result + 8) - v1;
  v4 = *(_DWORD *)(result + 40) ^ v1;
  v5 = *(_DWORD *)result ^ v1;
  v6 = *(_DWORD *)(result + 16) ^ v1;
  v7 = *(_DWORD *)(result + 32) - v1;
  v8 = v2 >= v3;
  v9 = (uint64_t)v2 < (uint64_t)v3;
  v10 = !v8;
  if ((v5 & 1) == 0)
    v9 = v10;
  if (v9)
    v7 = v6;
  *(_DWORD *)(result + 36) = v4 ^ v7;
  return result;
}

uint64_t sub_1000027B4(uint64_t a1)
{
  int v2;
  _BYTE *v3;
  uint64_t result;
  char v6;
  uint64_t v7;
  int v8;
  _BYTE v9[20];

  v2 = *(_DWORD *)(a1 + 4) ^ (1491908057 * ((-2 - ((a1 | 0x4A0A0FB6) + (~(_DWORD)a1 | 0xB5F5F049))) ^ 0xD931ABB3));
  v7 = 4;
  v3 = *(_BYTE **)((char *)*(&off_100236540 + (int)(v2 ^ 0xBE25C78F)) - 1279125287);
  v8 = 0;
  v9[0] = *v3 - 31;
  v9[1] = v3[1] - 31;
  v9[2] = v3[2] - 31;
  v9[3] = v3[3] - 31;
  v9[4] = v3[4] - 31;
  v9[5] = v3[5] - 31;
  v9[6] = v3[6] - 31;
  v9[7] = v3[7] - 31;
  v9[8] = v3[8] - 31;
  v9[9] = v3[9] - 31;
  v9[10] = v3[10] - 31;
  v9[11] = v3[11] - 31;
  v9[12] = v3[12] - 31;
  v9[13] = v3[13] - 31;
  v9[14] = v3[14] - 31;
  v9[15] = v3[15] - 31;
  v9[16] = v3[16] - 31;
  v9[17] = v3[17] - 31;
  v9[18] = v3[18] - 31;
  v9[19] = v3[19] - 31;
  result = ((uint64_t (*)(_BYTE *, int *, uint64_t *, _QWORD, _QWORD))((char *)*(&off_100236540
                                                                                        + (int)(v2 ^ 0xBE25C5AC))
                                                                              - 179296266))(v9, &v8, &v7, 0, 0);
  if (v8 == 1 && (_DWORD)result == 0)
    v6 = 4;
  else
    v6 = 3;
  *(_BYTE *)a1 = v6;
  return result;
}

void sub_1000029B0(id a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  void (*v4)(_QWORD);
  _BYTE v5[8];

  v1 = (uint64_t)*(&off_100236540
                + (byte_100212AB0[(byte_1001FC980[(-21
                                                                                   * ((dword_10023CCE8 - qword_10023CCF8) ^ 0x71))] ^ 0x3B)
                                                 + 256] ^ (-21 * ((dword_10023CCE8 - qword_10023CCF8) ^ 0x71)))
                - 60);
  v2 = 1509257707 * ((unint64_t)&v5[*(_QWORD *)(v1 - 965231491) - qword_10023CCF8] ^ 0xDB617684DF9DEA71);
  qword_10023CCF8 = v2;
  *(_QWORD *)(v1 - 965231491) = v2;
  v4 = (void (*)(_QWORD))((char *)*(&off_100236540
                                             + ((-21 * ((v2 - qword_10023CCF8) ^ 0x71)) ^ byte_100212AB0[(byte_1001FC980[(-21 * ((v2 - qword_10023CCF8) ^ 0x71))] ^ 6) + 256])
                                             - 29)
                                   - 461405130);
  v4(*(_QWORD *)((char *)*(&off_100236540
                         + ((-21 * ((v2 + qword_10023CCF8) ^ 0x71)) ^ byte_100212AB0[(byte_1001FC980[(-21 * ((v2 + qword_10023CCF8) ^ 0x71))] ^ 0x3B) + 256])
                         + 436)
               - 83399987));
  v3 = -21 * ((*(_DWORD *)(v1 - 965231491) + qword_10023CCF8) ^ 0x71);
  v4(*(_QWORD *)((char *)*(&off_100236540
                         + (byte_100227880[byte_100212AB0[v3] ^ 0xD9] ^ v3)
                         + 393)
               - 915694107));
}

uint64_t sub_100002B68(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;
  _BOOL4 v9;
  int v10;

  v1 = 222922757 * ((2 * (result & 0xD1708A6738C8251) - result - 0xD1708A6738C8252) ^ 0x51B308D9E5E28895);
  v2 = *(_DWORD *)(result + 40) - v1;
  v3 = *(_DWORD *)(result + 32) + v1;
  v4 = *(_DWORD *)(result + 36) ^ v1;
  v5 = *(_QWORD *)(result + 16) + v1;
  v6 = *(_QWORD *)result ^ v1;
  v7 = v6 == v5;
  v8 = v6 > v5;
  if (((*(_DWORD *)(result + 28) + (_DWORD)v1) & 1) != 0)
    v9 = v8;
  else
    v9 = v7;
  if (v9)
    v10 = v4;
  else
    v10 = v2;
  *(_DWORD *)(result + 8) = v10 ^ v3;
  return result;
}

void sub_100002C08(uint64_t a1)
{
  int v2;
  char v3;

  v2 = (*(_DWORD *)(a1 + 4) ^ (753993959 * ((((2 * a1) | 0x532D0C5C) - a1 - 697730606) ^ 0xF64E740F)))
     + 1800242513 * ((&v2 & 0xB86CA350 | ~(&v2 | 0xB86CA350)) ^ 0x1E323481)
     - 1985905158;
  sub_1001BF9A4(&v2);
  *(_BYTE *)a1 = v3;
}

uint64_t sub_100002CEC(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[8];

  v2 = (uint64_t)*(&off_100236540
                + (byte_100227880[byte_100212AB0[(-21
                                                                                  * ((dword_10023CCE8 - qword_10023CA40) ^ 0x71))] ^ 5] ^ (-21 * ((dword_10023CCE8 - qword_10023CA40) ^ 0x71)))
                - 109);
  v3 = (unint64_t)&v9[*(_QWORD *)(v2 - 965231491) ^ qword_10023CA40];
  v4 = (1509257707 * v3) ^ 0xDB617684DF9DEA71;
  v5 = 1509257707 * (v3 ^ 0xDB617684DF9DEA71);
  qword_10023CA40 = v4;
  *(_QWORD *)(v2 - 965231491) = v5;
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540
                                                  + (byte_1001FC880[byte_1001E55E0[(-21 * ((v5 - qword_10023CA40) ^ 0x71))] ^ 0x71] ^ (-21 * ((v5 - qword_10023CA40) ^ 0x71)))
                                                  - 36)
                                        - 13473143))(16);
  if (v6)
    v7 = 0;
  else
    v7 = 0xFFFFFFFFLL;
  *a1 = v6;
  return v7;
}

double sub_100002E2C(uint64_t a1, __int128 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  if (a3)
  {
    if (a3 < 8
      || (v6 = a3 - 1, v6 > 0xF)
      || (~(_DWORD)a4 & 0xFu) < (((_BYTE)a3 - 1) & 0xFu)
      || (unint64_t)a2 - a1 - (a4 & 0xF) < 0x20)
    {
      v4 = a4;
      v5 = a2;
      goto LABEL_4;
    }
    v7 = v6 + 1;
    if (a3 >= 0x20)
    {
      v8 = v7 & 0x1FFFFFFE0;
      v9 = (__int128 *)(a1 + (a4 & 0xF));
      v10 = *v9;
      v11 = v9[1];
      *a2 = *v9;
      a2[1] = v11;
      if (v7 == (v7 & 0x1FFFFFFE0))
        return *(double *)&v10;
      if ((v7 & 0x18) == 0)
      {
        a3 -= v8;
        v5 = (__int128 *)((char *)a2 + v8);
        v4 = a4 + v8;
        goto LABEL_4;
      }
    }
    else
    {
      v8 = 0;
    }
    v4 = a4 + (v7 & 0x1FFFFFFF8);
    v5 = (__int128 *)((char *)a2 + (v7 & 0x1FFFFFFF8));
    a3 -= v7 & 0xFFFFFFF8;
    v12 = (_QWORD *)((char *)a2 + v8);
    v13 = v8 + a4;
    v14 = v8 - (v7 & 0x1FFFFFFF8);
    do
    {
      *(_QWORD *)&v10 = *(_QWORD *)(a1 + (v13 & 0xF));
      *v12++ = v10;
      v13 += 8;
      v14 += 8;
    }
    while (v14);
    if (v7 == (v7 & 0x1FFFFFFF8))
      return *(double *)&v10;
    do
    {
LABEL_4:
      *(_BYTE *)v5 = *(_BYTE *)(a1 + (v4 & 0xF));
      v5 = (__int128 *)((char *)v5 + 1);
      ++v4;
      --a3;
    }
    while (a3);
  }
  return *(double *)&v10;
}

uint64_t *sub_100002F1C(uint64_t *result, _BYTE *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t *v6;
  uint64_t v7;
  BOOL v8;

  for (; a3; --a3)
  {
    v4 = result[1];
    if (v4)
      v5 = v4 == a4;
    else
      v5 = 1;
    v6 = result;
    if (!v5)
    {
      v6 = result;
      do
      {
        v6 = (uint64_t *)*v6;
        v7 = v6[1];
        if (v7)
          v8 = v7 == a4;
        else
          v8 = 1;
      }
      while (!v8);
    }
    *a2++ = *((_BYTE *)v6 + 16);
    ++a4;
  }
  return result;
}

uint64_t *sub_100002F68(uint64_t *result, char *a2, int a3, uint64_t a4)
{
  char v4;
  uint64_t *v5;
  uint64_t v6;
  BOOL v7;

  for (; a3; --a3)
  {
    v4 = *a2;
    v5 = result;
    do
    {
      v5 = (uint64_t *)*v5;
      v6 = v5[1];
      if (v6)
        v7 = v6 == a4;
      else
        v7 = 1;
    }
    while (!v7);
    if (!v6)
      v5[1] = a4;
    *((_BYTE *)v5 + 16) = v4;
    ++a2;
    ++a4;
  }
  return result;
}

uint64_t sub_100002FAC(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = (uint64_t)*(&off_100236540
                + (byte_1001FC880[byte_1001E55E0[(-21
                                                                                                * (qword_10023CAB8 ^ 0x71 ^ dword_10023CCE8))] ^ 0x57] ^ (-21 * (qword_10023CAB8 ^ 0x71 ^ dword_10023CCE8)))
                + 87);
  v3 = 1509257707 * ((*(_QWORD *)(v2 - 965231491) + qword_10023CAB8) ^ (unint64_t)&v7 ^ 0xDB617684DF9DEA71);
  qword_10023CAB8 = v3;
  *(_QWORD *)(v2 - 965231491) = v3;
  v4 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540
                                                  + ((-21
                                                                                   * ((v3 + qword_10023CAB8) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((v3 + qword_10023CAB8) ^ 0x71))] ^ 0x5F])
                                                  + 4)
                                        - 13473143))(16);
  if (v4)
    v5 = 0;
  else
    v5 = 0xFFFFFFFFLL;
  *a1 = v4;
  return v5;
}

_QWORD *sub_1000030CC(_QWORD *result, char *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (a3)
  {
    v4 = *result | 1;
    v5 = *result + v4 * a4;
    do
    {
      v6 = *a2++;
      *(_BYTE *)(*result + (v5 & 0xF)) = v6;
      v5 += v4;
      --a3;
    }
    while (a3);
  }
  return result;
}

uint64_t sub_1000030FC(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  char v14;
  _BYTE *v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  _DWORD v23[3];

  v1 = (uint64_t)*(&off_100236540
                + (byte_100227880[byte_100212AB0[(-21
                                                                                                * ((dword_10023CCE8
                                                                                                  + qword_10023CD10) ^ 0x71))] ^ 0xD9] ^ (-21 * ((dword_10023CCE8 + qword_10023CD10) ^ 0x71)))
                + 107);
  v2 = (unint64_t)&v23[1] + qword_10023CD10 + *(_QWORD *)(v1 - 965231491);
  v3 = (1509257707 * v2) ^ 0xDB617684DF9DEA71;
  v4 = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  qword_10023CD10 = v3;
  *(_QWORD *)(v1 - 965231491) = v4;
  v23[0] = (*(&off_100236540
                          + (byte_1001FC880[byte_1001E55E0[(-21 * ((v4 - qword_10023CD10) ^ 0x71))] ^ 0x57] ^ (-21 * ((v4 - qword_10023CD10) ^ 0x71)))
                          + 451)
          - 1097409695) ^ a1;
  v5 = (uint64_t (*)(uint64_t))((char *)*(&off_100236540
                                                 + ((-21
                                                                                  * ((*(_DWORD *)(v1 - 965231491)
                                                                                    + qword_10023CD10) ^ 0x71)) ^ byte_100227880[byte_100212AB0[(-21 * ((*(_DWORD *)(v1 - 965231491) + qword_10023CD10) ^ 0x71))] ^ 0xD9])
                                                 + 53)
                                       - 13473143);
  v6 = v5(256);
  v7 = (void (*)(void))((char *)*(&off_100236540
                                + ((-21
                                                                 * (qword_10023CD10 ^ 0x71 ^ *(_DWORD *)(v1 - 965231491))) ^ byte_1001FC880[byte_1001E55E0[(-21 * (qword_10023CD10 ^ 0x71 ^ *(_DWORD *)(v1 - 965231491)))] ^ 0x5F])
                                + 85)
                      - 367368842);
  if (v6)
  {
    v8 = v6;
    v9 = 0;
    *a1 = v6;
    v10 = v6 + 2;
    v11 = 1;
    while (1)
    {
      v23[0] = v10 + v9 + v23[0] * v23;
      v12 = v23[0] & 3;
      v13 = (_QWORD *)(v8 + v9);
      *(_BYTE *)(v8 + v9 + 8) = v23[0] & 3;
      v14 = v23[0];
      v15 = (_BYTE *)v5(~(-2 << v12));
      if (!v15)
        break;
      if (v12)
      {
        v16 = -1 << v12;
        if ((-1 << v12) >= 0xFFFFFFFE)
          v16 = -2;
        *v15 = ((v14 * v14) ^ 1) & 1;
        if (v12 != 1)
        {
          v17 = (((v14 * v14) ^ 1) * ((v14 * v14) ^ 1)) ^ 1;
          v15[1] = v17 & 1;
          v18 = (v17 * v17) ^ 1;
          v15[2] = v18 & 1;
          if (v16 != -4)
          {
            v19 = (v18 * v18) ^ 1;
            v15[3] = v19 & 1;
            v20 = ((v19 * v19) ^ 1) & 1;
            v15[4] = v20;
            if (v16 != -6)
            {
              v15[5] = v20 ^ 1;
              v15[6] = v20;
            }
          }
        }
      }
      *(_QWORD *)(v8 + v9) = v15;
      ++v11;
      v9 += 16;
      if (v11 == 17)
        return 0;
    }
    *v13 = 0;
    do
    {
      if (*v13)
        v7();
      --v11;
      v13 -= 2;
    }
    while (v11 > 0);
    v6 = v8;
  }
  ((void (*)(uint64_t))v7)(v6);
  *a1 = 0;
  return 0xFFFFFFFFLL;
}

uint64_t sub_100003418(uint64_t result, unsigned int a2, int a3, char a4)
{
  uint64_t v4;
  _QWORD *v5;
  char v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  BOOL v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  int v16;
  unsigned __int8 v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;

  v4 = result;
  v5 = (_QWORD *)((char *)*(&off_100236540
                          + (byte_1001FC880[byte_1001E55E0[(-21 * ((dword_10023CCE8 - qword_10023CAC8) ^ 0x71))] ^ 0xD7] ^ (-21 * ((dword_10023CCE8 - qword_10023CAC8) ^ 0x71)))
                          + 78)
                - 965231491);
  qword_10023CAC8 = 1509257707 * (qword_10023CAC8 ^ (unint64_t)&v21 ^ *v5 ^ 0xDB617684DF9DEA71);
  *v5 = qword_10023CAC8;
  if (a3)
  {
    v6 = &v20 ^ a2;
    v7 = v6 ^ a4;
    v8 = v6 + a4;
    if ((a4 & 1) != 0)
      v8 = v7;
    v9 = *(unsigned __int8 *)(result + a2);
    v10 = a4 - v8;
    v11 = v8 ^ a4;
    if (*(_BYTE *)(v4 + a2))
      v11 = 0;
    if (v9)
      v12 = 0;
    else
      v12 = v8;
    v13 = v9 == 1;
    if (v9 == 1)
      v14 = v10;
    else
      v14 = v11;
    if (v13)
      v15 = v8;
    else
      v15 = v12;
    v16 = 2 * a2;
    v17 = -21 * (qword_10023CAC8 ^ 0x71 ^ *(_DWORD *)v5);
    v18 = (a3 - 1);
    v19 = (char *)*(&off_100236540
                  + (v17 ^ byte_1001FC880[byte_1001E55E0[v17] ^ 0x57])
                  + 335)
        - 1598057563;
    ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD))v19)(v4, (2 * a2) | 1, v18, v14);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))v19)(v4, (v16 + 2), v18, v15);
  }
  else
  {
    *(_BYTE *)(result + a2) = a4;
  }
  return result;
}

uint64_t sub_1000035BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;

  v0 = (uint64_t)*(&off_100236540
                + (byte_100227880[byte_100212AB0[(-21
                                                                                                * (qword_10023CD88 ^ 0x71 ^ dword_10023CCE8))] ^ 0xD9] ^ (-21 * (qword_10023CD88 ^ 0x71 ^ dword_10023CCE8)))
                + 107);
  v1 = (*(_QWORD *)(v0 - 965231491) ^ qword_10023CD88) - (_QWORD)&v5;
  v2 = 1509257707 * v1 + 0x6B05B50A19716BBLL;
  v3 = 1509257707 * (v1 ^ 0xDB617684DF9DEA71);
  qword_10023CD88 = v2;
  *(_QWORD *)(v0 - 965231491) = v3;
  return ((uint64_t (*)(void))((char *)*(&off_100236540
                                      + ((-21 * ((v3 + qword_10023CD88) ^ 0x71)) ^ byte_100227880[byte_100212AB0[(-21 * ((v3 + qword_10023CD88) ^ 0x71))] ^ 8])
                                      - 53)
                            - 367368842))();
}

_WORD **sub_1000036B4(_WORD **result)
{
  **result = 0;
  return result;
}

uint64_t sub_1000036C0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_DWORD *)(a1 + 8) - 46342039 * (((a1 | 0xCD86CB6D) - a1 + (a1 & 0x32793492)) ^ 0x8319EE67);
  v2 = *(_QWORD *)a1;
  ((void (*)(_QWORD))((char *)*(&off_100236540 + (int)(v1 ^ 0xF65FBAB9)) - 1813418074))(*(_QWORD *)((char *)*(&off_100236540 + (int)(v1 ^ 0xF65FBAC0)) - 1303234727));
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540 + (int)(v1 ^ 0xF65FBA14)) - 708550571))(v2);
  *(_DWORD *)((char *)*(&off_100236540 + v1 + 161498489) - 91616966) = 1676580025;
  return result;
}

unint64_t sub_1000037A4(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)result
     - 295199341
     * (((result | 0x9516760128C3196ALL) - (result | 0x6AE989FED73CE695) + 0x6AE989FED73CE695) ^ 0xC1458EF9C7AB1122);
  *(_DWORD *)v1 = 136315138;
  *(_QWORD *)(v1 + 4) = v2;
  return result;
}

uint64_t sub_10000380C(uint64_t result)
{
  int v1;
  char v3;

  v1 = *(_DWORD *)result - 1444845877 * ((result - 960553809 - 2 * (result & 0xC6BF1CAF)) ^ 0xCE4F0037);
  if (v1 == 1854955168 || v1 == 1854955171)
    v3 = 98;
  else
    v3 = 97;
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t sub_100003868(uint64_t result)
{
  _DWORD *v1;
  int v2;

  v1 = *(_DWORD **)(result + 8);
  v2 = *(_DWORD *)result - 447355651 * ((result + 506396537 - 2 * (result & 0x1E2EFF79)) ^ 0xF7223C65);
  *v1 = 67109120;
  v1[1] = v2;
  return result;
}

uint64_t sub_1000038B4(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16) ^ (447355651
                                 * ((((2 * result) | 0x8A545AA9B257751ELL) - result - 0x452A2D54D92BBA8FLL) ^ 0x96FE367A30277993));
  *(_DWORD *)v1 = 134217984;
  *(_QWORD *)(v1 + 4) = v2;
  return result;
}

void sub_10000391C(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v1 = (uint64_t)*(&off_100236540
                + (byte_100227880[byte_100212AB0[(-21
                                                                                  * ((dword_10023CCE8 + qword_10023CAD0) ^ 0x71))] ^ 8] ^ (-21 * ((dword_10023CCE8 + qword_10023CAD0) ^ 0x71)))
                - 80);
  v2 = *(_QWORD *)(v1 - 965231491) - qword_10023CAD0 - (_QWORD)&v6;
  v3 = 1509257707 * v2 - 0x249E897B2062158FLL;
  v4 = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  qword_10023CAD0 = v3;
  *(_QWORD *)(v1 - 965231491) = v4;
  v5 = *(_QWORD *)((char *)*(&off_100236540
                           + (byte_1001E55E0[(byte_100227880[(-21 * ((v4 + qword_10023CAD0) ^ 0x71)) + 256] ^ 1)
                                                                          + 256] ^ (-21 * ((v4 + qword_10023CAD0) ^ 0x71)))
                           + 534)
                 - 83399987);
  v8 = 46342039 * ((((&v7 | 0xDC82BB06) ^ 0xFFFFFFFE) - (~&v7 | 0x237D44F9)) ^ 0x6DE261F3)
     - 161498477;
  v7 = v5;
  sub_1000036C0((uint64_t)&v7);
}

uint64_t sub_100003AB0(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unsigned __int8 v5;
  unsigned int *v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned __int8 v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  unsigned __int8 v14;
  uint64_t (*v15)(char *, uint64_t);
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  _BYTE *v40;
  unsigned int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  _BYTE *v106;
  unsigned int v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  int v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  unint64_t *v124;
  uint64_t v125;
  _BYTE v126[8];

  v3 = (_QWORD *)((char *)*(&off_100236540
                          + (byte_100227880[byte_100212AB0[(-21
                                                                                            * ((dword_10023CCE8
                                                                                              + qword_10023CA50) ^ 0x71))] ^ 8] ^ (-21 * ((dword_10023CCE8 + qword_10023CA50) ^ 0x71)))
                          - 80)
                - 965231491);
  v4 = (unint64_t)&v126[*v3 - qword_10023CA50];
  qword_10023CA50 = (1509257707 * v4) ^ 0xDB617684DF9DEA71;
  *v3 = 1509257707 * (v4 ^ 0xDB617684DF9DEA71);
  if (!result)
    return result;
  v123 = result;
  v124 = (unint64_t *)(result - 16);
  v5 = -21 * (qword_10023CA50 ^ 0x71 ^ *(_DWORD *)v3);
  v122 = (_QWORD *)((char *)*(&off_100236540
                            + (byte_1001E55E0[(byte_100227880[v5 + 256] ^ 1)
                                                                           + 256] ^ v5)
                            + 113)
                  - 974766970);
  v125 = *v122 ^ *(_QWORD *)(result - 16 + (*(_QWORD *)(result - 8) & 0xFFFFFFFFFFFFFFF8));
  if ((*(_BYTE *)(v125 + 0x370) & 2) != 0)
  {
    v6 = (unsigned int *)(v125 + 884);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(1u, v6));
    if (v7)
    {
      v8 = 0;
      v1 = 237;
      v2 = -1701629330;
      while (1)
      {
        if (!*v6)
        {
          do
            v9 = __ldaxr(v6);
          while (__stlxr(1u, v6));
          if (!v9)
            break;
        }
        if ((++v8 & 0x3F) == 0)
        {
          v10 = -21 * ((*(_DWORD *)v3 - qword_10023CA50) ^ 0x71);
          ((void (*)(void))((char *)*(&off_100236540
                                    + (byte_1001FC680[byte_1001E53E0[v10] ^ 0xED] ^ v10)
                                    + 376)
                          - 1701629330))();
        }
      }
    }
  }
  result = (uint64_t)v124;
  v11 = *(_QWORD *)(v123 - 8);
  v12 = v11 & 0xFFFFFFFFFFFFFFF8;
  v13 = (char *)v124 + (v11 & 0xFFFFFFFFFFFFFFF8);
  v14 = -21 * ((*(_DWORD *)v3 - qword_10023CA50) ^ 0x71);
  v15 = (uint64_t (*)(char *, uint64_t))((char *)*(&off_100236540
                                                          + (byte_100212AB0[(byte_1001FC980[v14] ^ 6) + 256] ^ v14)
                                                          + 567)
                                                - 1739771246);
  if ((v11 & 1) != 0)
  {
    v17 = v125;
    goto LABEL_19;
  }
  v16 = *v124;
  v17 = v125;
  if ((v11 & 3) == 0)
  {
    v28 = v16 + v12 + 32;
    result = v15((char *)v124 - v16, v28);
    if (!(_DWORD)result)
      *(_QWORD *)(v125 + 856) -= v28;
    goto LABEL_121;
  }
  result = (uint64_t)v124 - v16;
  v12 += v16;
  if (*(unint64_t **)(v125 + 32) != (unint64_t *)((char *)v124 - v16))
  {
    if (v16 <= 0xFF)
    {
      v18 = *(_QWORD *)(result + 16);
      v19 = *(_QWORD *)(result + 24);
      if (v19 == v18)
      {
        *(_DWORD *)v125 &= ~(1 << (v16 >> 3));
      }
      else
      {
        *(_QWORD *)(v18 + 24) = v19;
        *(_QWORD *)(v19 + 16) = v18;
      }
      goto LABEL_19;
    }
    v44 = *(_QWORD *)(result + 48);
    v45 = *(_QWORD **)(result + 24);
    if (v45 == (_QWORD *)result)
    {
      v51 = (_QWORD *)(result + 40);
      v52 = *(_QWORD **)(result + 40);
      if (v52 || (v51 = (_QWORD *)(result + 32), (v52 = *(_QWORD **)(result + 32)) != 0))
      {
        do
        {
          do
          {
            v53 = v51;
            v45 = v52;
            v51 = v52 + 5;
            v52 = (_QWORD *)v52[5];
          }
          while (v52);
          v51 = v45 + 4;
          v52 = (_QWORD *)v45[4];
        }
        while (v52);
        *v53 = 0;
        if (!v44)
          goto LABEL_19;
      }
      else
      {
        v45 = 0;
        if (!v44)
          goto LABEL_19;
      }
    }
    else
    {
      v46 = *(_QWORD *)(result + 16);
      *(_QWORD *)(v46 + 24) = v45;
      v45[2] = v46;
      if (!v44)
        goto LABEL_19;
    }
    v54 = v125 + 8 * *(unsigned int *)(result + 56);
    if (*(_QWORD *)(v54 + 600) == result)
    {
      *(_QWORD *)(v54 + 600) = v45;
      if (!v45)
      {
        *(_DWORD *)(v125 + 4) &= ~(1 << *(_DWORD *)(result + 56));
        goto LABEL_19;
      }
    }
    else
    {
      v55 = 40;
      if (*(_QWORD *)(v44 + 32) == result)
        v55 = 32;
      *(_QWORD *)(v44 + v55) = v45;
      if (!v45)
        goto LABEL_19;
    }
    v45[6] = v44;
    v61 = *(_QWORD *)(result + 32);
    if (v61)
    {
      v45[4] = v61;
      *(_QWORD *)(v61 + 48) = v45;
    }
    v62 = *(_QWORD *)(result + 40);
    if (v62)
    {
      v45[5] = v62;
      *(_QWORD *)(v62 + 48) = v45;
    }
    goto LABEL_19;
  }
  if ((~*((_DWORD *)v13 + 2) & 3) == 0)
  {
    *(_QWORD *)(v125 + 8) = v12;
    *((_QWORD *)v13 + 1) &= ~1uLL;
LABEL_62:
    *(_QWORD *)(result + 8) = v12 | 1;
    *(_QWORD *)(result + v12) = v12;
    goto LABEL_121;
  }
LABEL_19:
  v20 = *((_QWORD *)v13 + 1);
  if ((v20 & 2) != 0)
  {
    *((_QWORD *)v13 + 1) = v20 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)(result + 8) = v12 | 1;
    *(_QWORD *)(result + v12) = v12;
LABEL_26:
    if (v12 <= 0xFF)
    {
      v23 = v12 >> 3;
      v24 = v17 + ((2 * v12) & 0x7FFFFFFF0) + 72;
      v25 = 1 << v23;
      if ((*(_DWORD *)v17 & v25) != 0)
      {
        v26 = *(_QWORD *)(v24 + 16);
      }
      else
      {
        *(_DWORD *)v17 |= v25;
        v26 = v24;
      }
      *(_QWORD *)(v24 + 16) = result;
      *(_QWORD *)(v26 + 24) = result;
      *(_QWORD *)(result + 16) = v26;
      *(_QWORD *)(result + 24) = v24;
      goto LABEL_121;
    }
    if (v12 >> 24)
    {
      v27 = 31;
    }
    else
    {
      v37 = (((v12 >> 8) + 1048320) >> 16) & 8;
      v38 = (v12 >> 8) << v37;
      v39 = (v38 << (((v38 + 520192) >> 16) & 4) << ((((v38 << (((v38 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
          - ((((v38 << (((v38 + 520192) >> 16) & 4)) + 245760) >> 16) & 2 | v37 | ((v38 + 520192) >> 16) & 4);
      v27 = ((v12 >> (v39 + 21)) & 1 | (2 * v39)) + 28;
    }
    v40 = (_BYTE *)(result + 32);
    *(_DWORD *)(result + 56) = v27;
    v41 = -(result + 32) & 7;
    switch(v41)
    {
      case 1u:
        goto LABEL_55;
      case 2u:
        goto LABEL_54;
      case 3u:
        goto LABEL_53;
      case 4u:
        goto LABEL_52;
      case 5u:
        goto LABEL_51;
      case 6u:
        goto LABEL_50;
      case 7u:
        *v40 = 0;
        v40 = (_BYTE *)(result + 33);
LABEL_50:
        *v40++ = 0;
LABEL_51:
        *v40++ = 0;
LABEL_52:
        *v40++ = 0;
LABEL_53:
        *v40++ = 0;
LABEL_54:
        *v40++ = 0;
LABEL_55:
        *v40++ = 0;
        break;
      default:
        break;
    }
    v42 = (uint64_t *)(v17 + 8 * v27 + 600);
    v43 = 16 - v41;
    v71 = v43;
    v70 = v43 & 7;
    switch(v71)
    {
      case 0:
        goto LABEL_132;
      case 1:
        goto LABEL_131;
      case 2:
        goto LABEL_130;
      case 3:
        goto LABEL_129;
      case 4:
        goto LABEL_128;
      case 5:
        goto LABEL_127;
      case 6:
        goto LABEL_126;
      case 7:
        *v40++ = 0;
LABEL_126:
        *v40++ = 0;
LABEL_127:
        *v40++ = 0;
LABEL_128:
        *v40++ = 0;
LABEL_129:
        *v40++ = 0;
LABEL_130:
        *v40++ = 0;
LABEL_131:
        *v40 = 0;
LABEL_132:
        v72 = *(_DWORD *)(v17 + 4);
        if ((v72 & (1 << v27)) == 0)
        {
          *(_DWORD *)(v17 + 4) = v72 | (1 << v27);
          *v42 = result;
          *(_QWORD *)(result + 48) = v42;
          goto LABEL_141;
        }
        v73 = *v42;
        if (v27 == 31)
          LOBYTE(v74) = 0;
        else
          v74 = 57 - (v27 >> 1);
        v75 = v12 << v74;
        while (1)
        {
          v76 = v73;
          if ((*(_QWORD *)(v73 + 8) & 0xFFFFFFFFFFFFFFF8) == v12)
            break;
          v77 = v73 + ((v75 >> 60) & 8);
          v79 = *(_QWORD *)(v77 + 32);
          v78 = (uint64_t *)(v77 + 32);
          v73 = v79;
          v75 *= 2;
          if (!v79)
          {
            *v78 = result;
            *(_QWORD *)(result + 48) = v76;
LABEL_141:
            *(_QWORD *)(result + 16) = result;
            *(_QWORD *)(result + 24) = result;
            goto LABEL_143;
          }
        }
        v80 = *(_QWORD *)(v73 + 16);
        *(_QWORD *)(v80 + 24) = result;
        *(_QWORD *)(v73 + 16) = result;
        *(_QWORD *)(result + 16) = v80;
        *(_QWORD *)(result + 24) = v73;
        *(_QWORD *)(result + 48) = 0;
LABEL_143:
        v81 = *(_QWORD *)(v17 + 56) - 1;
        *(_QWORD *)(v17 + 56) = v81;
        if (v81)
          goto LABEL_121;
        v47 = 0;
        break;
      default:
        __asm { BR              X16 }
        return result;
    }
LABEL_145:
    v82 = *(_QWORD *)(v17 + 904);
    if (!v82 || (*(_DWORD *)(v82 + 24) & 9) != 1)
    {
      v83 = 0;
      goto LABEL_160;
    }
    v83 = 0;
    result = *(_QWORD *)v82;
    v84 = *(_QWORD *)(v82 + 8);
    v85 = *(_QWORD *)v82 + 16;
    if ((v85 & 0xF) != 0)
      v86 = -(int)v85 & 0xFLL;
    else
      v86 = 0;
    v87 = result + v86;
    v88 = *(_QWORD *)(result + v86 + 8);
    v89 = v88 & 0xFFFFFFFFFFFFFFF8;
    if ((v88 & 3) != 1 || result + v86 + (v88 & 0xFFFFFFFFFFFFFFF8) < result + v84 - 80)
    {
LABEL_160:
      *(_QWORD *)(v17 + 56) = 4095;
      if ((v47 & (v1 + v83 == 0)) != 0 && *(_QWORD *)v2 > *(_QWORD *)(v17 + 48))
        *(_QWORD *)(v17 + 48) = -1;
      goto LABEL_121;
    }
    v91 = *(_QWORD *)(v82 + 16);
    if (*(_QWORD *)(v17 + 32) == v87)
    {
      *(_QWORD *)(v17 + 32) = 0;
      *(_QWORD *)(v17 + 8) = 0;
      goto LABEL_180;
    }
    v92 = *(_QWORD *)(v87 + 48);
    v93 = *(_QWORD **)(v87 + 24);
    if (v93 == (_QWORD *)v87)
    {
      v95 = (_QWORD *)(v87 + 40);
      v96 = *(_QWORD **)(v87 + 40);
      if (v96 || (v95 = (_QWORD *)(v87 + 32), (v96 = *(_QWORD **)(v87 + 32)) != 0))
      {
        do
        {
          do
          {
            v97 = v95;
            v93 = v96;
            v95 = v96 + 5;
            v96 = (_QWORD *)v96[5];
          }
          while (v96);
          v95 = v93 + 4;
          v96 = (_QWORD *)v93[4];
        }
        while (v96);
        *v97 = 0;
        if (!v92)
          goto LABEL_180;
      }
      else
      {
        v93 = 0;
        if (!v92)
          goto LABEL_180;
      }
    }
    else
    {
      v94 = *(_QWORD *)(v87 + 16);
      *(_QWORD *)(v94 + 24) = v93;
      v93[2] = v94;
      if (!v92)
        goto LABEL_180;
    }
    v98 = v17 + 8 * *(unsigned int *)(v87 + 56);
    if (*(_QWORD *)(v98 + 600) == v87)
    {
      *(_QWORD *)(v98 + 600) = v93;
      if (!v93)
      {
        *(_DWORD *)(v17 + 4) &= ~(1 << *(_DWORD *)(v87 + 56));
        goto LABEL_180;
      }
    }
    else
    {
      v99 = 40;
      if (*(_QWORD *)(v92 + 32) == v87)
        v99 = 32;
      *(_QWORD *)(v92 + v99) = v93;
      if (!v93)
      {
LABEL_180:
        result = ((uint64_t (*)(void))v15)();
        if ((_DWORD)result)
        {
          if (v88 >= 0x100)
          {
            if (v88 >> 24)
            {
              v102 = 31;
            }
            else
            {
              v103 = (((v88 >> 8) + 1048320) >> 16) & 8;
              v104 = (v88 >> 8) << v103;
              v105 = (v104 << (((v104 + 520192) >> 16) & 4) << ((((v104 << (((v104 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                   - ((((v104 << (((v104 + 520192) >> 16) & 4)) + 245760) >> 16) & 2 | v103 | ((v104 + 520192) >> 16) & 4);
              v102 = ((v89 >> (v105 + 21)) & 1 | (2 * v105)) + 28;
            }
          }
          else
          {
            v102 = 0;
          }
          *(_DWORD *)(v87 + 56) = v102;
          v106 = (_BYTE *)(v87 + 32);
          v107 = -(v87 + 32) & 7;
          switch(v107)
          {
            case 1u:
              goto LABEL_194;
            case 2u:
              goto LABEL_193;
            case 3u:
              goto LABEL_192;
            case 4u:
              goto LABEL_191;
            case 5u:
              goto LABEL_190;
            case 6u:
              goto LABEL_189;
            case 7u:
              *v106 = 0;
              v106 = (_BYTE *)(v87 + 33);
LABEL_189:
              *v106++ = 0;
LABEL_190:
              *v106++ = 0;
LABEL_191:
              *v106++ = 0;
LABEL_192:
              *v106++ = 0;
LABEL_193:
              *v106++ = 0;
LABEL_194:
              *v106++ = 0;
              break;
            default:
              break;
          }
          v108 = (uint64_t *)(v17 + 8 * v102 + 600);
          v109 = 16 - v107;
          v111 = v109;
          v110 = v109 & 7;
          switch(v111)
          {
            case 0:
              goto LABEL_205;
            case 1:
              goto LABEL_204;
            case 2:
              goto LABEL_203;
            case 3:
              goto LABEL_202;
            case 4:
              goto LABEL_201;
            case 5:
              goto LABEL_200;
            case 6:
              goto LABEL_199;
            case 7:
              *v106++ = 0;
LABEL_199:
              *v106++ = 0;
LABEL_200:
              *v106++ = 0;
LABEL_201:
              *v106++ = 0;
LABEL_202:
              *v106++ = 0;
LABEL_203:
              *v106++ = 0;
LABEL_204:
              *v106 = 0;
LABEL_205:
              v112 = *(_DWORD *)(v17 + 4);
              v113 = 1 << v102;
              if ((v112 & (1 << v102)) == 0)
              {
                v83 = 0;
                *(_DWORD *)(v17 + 4) = v112 | v113;
                *v108 = v87;
                *(_QWORD *)(v87 + 48) = v108;
                goto LABEL_214;
              }
              v114 = *v108;
              if (v102 == 31)
                LOBYTE(v115) = 0;
              else
                v115 = 57 - (v102 >> 1);
              v116 = v89 << v115;
              while (1)
              {
                v117 = v114;
                if ((*(_QWORD *)(v114 + 8) & 0xFFFFFFFFFFFFFFF8) == v89)
                  break;
                v118 = v114 + ((v116 >> 60) & 8);
                v120 = *(_QWORD *)(v118 + 32);
                v119 = (uint64_t *)(v118 + 32);
                v114 = v120;
                v116 *= 2;
                if (!v120)
                {
                  v83 = 0;
                  *v119 = v87;
                  *(_QWORD *)(v87 + 48) = v117;
LABEL_214:
                  *(_QWORD *)(v87 + 16) = v87;
                  *(_QWORD *)(v87 + 24) = v87;
                  goto LABEL_160;
                }
              }
              v83 = 0;
              v121 = *(_QWORD *)(v114 + 16);
              *(_QWORD *)(v121 + 24) = v87;
              *(_QWORD *)(v117 + 16) = v87;
              *(_QWORD *)(v87 + 16) = v121;
              *(_QWORD *)(v87 + 24) = v117;
              *(_QWORD *)(v87 + 48) = 0;
              break;
            default:
              __asm { BR              X15 }
              return result;
          }
        }
        else
        {
          *(_QWORD *)(v17 + 856) -= v84;
          *(_QWORD *)(v17 + 904) = v91;
          v83 = v84;
        }
        goto LABEL_160;
      }
    }
    v93[6] = v92;
    v100 = *(_QWORD *)(v87 + 32);
    if (v100)
    {
      v93[4] = v100;
      *(_QWORD *)(v100 + 48) = v93;
    }
    v101 = *(_QWORD *)(v87 + 40);
    if (v101)
    {
      v93[5] = v101;
      *(_QWORD *)(v101 + 48) = v93;
    }
    goto LABEL_180;
  }
  if (*(char **)(v17 + 40) == v13)
  {
    v2 = v17 + 16;
    v29 = *(_QWORD *)(v17 + 16) + v12;
    *(_QWORD *)(v17 + 16) = v29;
    *(_QWORD *)(v17 + 40) = result;
    *(_QWORD *)(result + 8) = v29 | 1;
    if (result == *(_QWORD *)(v17 + 32))
    {
      *(_QWORD *)(v17 + 32) = 0;
      *(_QWORD *)(v17 + 8) = 0;
    }
    if (v29 <= *(_QWORD *)(v17 + 48))
      goto LABEL_121;
    v30 = *(_QWORD *)(v17 + 40);
    if (!v30)
      goto LABEL_121;
    if (*(_QWORD *)v2 >= 0x51uLL)
    {
      v1 = ((unint64_t)(*(_QWORD *)v2 + v122[2] - 81) / v122[2] - 1) * v122[2];
      v31 = v17 + 888;
      v32 = (unint64_t *)(v17 + 888);
      do
      {
        if (*v32 <= v30 && *v32 + v32[1] > v30)
          break;
        v32 = (unint64_t *)v32[2];
      }
      while (v32);
      if ((v32[3] & 9) == 1)
      {
        v33 = v32[1];
        v34 = v33 - v1;
        if (v33 >= v1)
        {
          v35 = *v32;
          v36 = *v32 + v33;
          while (v35 > v31 || v36 <= v31)
          {
            v31 = *(_QWORD *)(v31 + 16);
            if (!v31)
            {
              result = v15((char *)(v35 + v34), ((unint64_t)(*(_QWORD *)v2 + v122[2] - 81) / v122[2] - 1) * v122[2]);
              v47 = 1;
              if ((_DWORD)result)
              {
                v1 = 0;
              }
              else if (v1)
              {
                v32[1] -= v1;
                *(_QWORD *)(v17 + 856) -= v1;
                v65 = *(_QWORD *)(v17 + 40);
                v66 = *(_QWORD *)(v17 + 16) - v1;
                if (((v65 + 16) & 0xF) != 0)
                  v67 = -((_DWORD)v65 + 16) & 0xFLL;
                else
                  v67 = 0;
                v68 = v65 + v67;
                v69 = v66 - v67;
                *(_QWORD *)(v17 + 40) = v68;
                *(_QWORD *)(v17 + 16) = v69;
                *(_QWORD *)(v68 + 8) = v69 | 1;
                *(_QWORD *)(v65 + v66 + 8) = 80;
                *(_QWORD *)(v17 + 48) = v122[4];
                v47 = 1;
              }
              goto LABEL_145;
            }
          }
        }
      }
    }
    v1 = 0;
    v47 = 1;
    goto LABEL_145;
  }
  if (*(char **)(v17 + 32) == v13)
  {
    v12 += *(_QWORD *)(v17 + 8);
    *(_QWORD *)(v17 + 8) = v12;
    *(_QWORD *)(v17 + 32) = result;
    goto LABEL_62;
  }
  v12 += v20 & 0xFFFFFFFFFFFFFFF8;
  if (v20 <= 0xFF)
  {
    v22 = *((_QWORD *)v13 + 2);
    v21 = *((_QWORD *)v13 + 3);
    if (v21 == v22)
    {
      *(_DWORD *)v17 &= ~(1 << (v20 >> 3));
    }
    else
    {
      *(_QWORD *)(v22 + 24) = v21;
      *(_QWORD *)(v21 + 16) = v22;
    }
    goto LABEL_106;
  }
  v48 = *((_QWORD *)v13 + 6);
  v49 = (char *)*((_QWORD *)v13 + 3);
  if (v49 == v13)
  {
    v56 = v13 + 40;
    v57 = (_QWORD *)*((_QWORD *)v13 + 5);
    if (v57 || (v56 = v13 + 32, (v57 = (_QWORD *)*((_QWORD *)v13 + 4)) != 0))
    {
      do
      {
        do
        {
          v58 = v56;
          v49 = (char *)v57;
          v56 = v57 + 5;
          v57 = (_QWORD *)v57[5];
        }
        while (v57);
        v56 = v49 + 32;
        v57 = (_QWORD *)*((_QWORD *)v49 + 4);
      }
      while (v57);
      *v58 = 0;
      if (!v48)
        goto LABEL_106;
    }
    else
    {
      v49 = 0;
      if (!v48)
        goto LABEL_106;
    }
  }
  else
  {
    v50 = *((_QWORD *)v13 + 2);
    *(_QWORD *)(v50 + 24) = v49;
    *((_QWORD *)v49 + 2) = v50;
    if (!v48)
      goto LABEL_106;
  }
  v59 = v17 + 8 * *((unsigned int *)v13 + 14);
  if (*(char **)(v59 + 600) == v13)
  {
    *(_QWORD *)(v59 + 600) = v49;
    if (!v49)
    {
      *(_DWORD *)(v17 + 4) &= ~(1 << *((_DWORD *)v13 + 14));
      goto LABEL_106;
    }
    goto LABEL_100;
  }
  v60 = 40;
  if (*(char **)(v48 + 32) == v13)
    v60 = 32;
  *(_QWORD *)(v48 + v60) = v49;
  if (v49)
  {
LABEL_100:
    *((_QWORD *)v49 + 6) = v48;
    v63 = *((_QWORD *)v13 + 4);
    if (v63)
    {
      *((_QWORD *)v49 + 4) = v63;
      *(_QWORD *)(v63 + 48) = v49;
    }
    v64 = *((_QWORD *)v13 + 5);
    if (v64)
    {
      *((_QWORD *)v49 + 5) = v64;
      *(_QWORD *)(v64 + 48) = v49;
    }
  }
LABEL_106:
  *(_QWORD *)(result + 8) = v12 | 1;
  *(_QWORD *)(result + v12) = v12;
  if (result != *(_QWORD *)(v17 + 32))
    goto LABEL_26;
  *(_QWORD *)(v17 + 8) = v12;
LABEL_121:
  if ((*(_BYTE *)(v17 + 880) & 2) != 0)
    atomic_store(0, (unsigned int *)(v17 + 884));
  return result;
}

_DWORD *sub_100004864(_DWORD *result)
{
  *result = *(_DWORD *)((char *)*(&off_100236540
                                + (int)(result[1]
                                      + 1491908057
                                      * (((result | 0xBE27F3E7) - (result & 0xBE27F3E7)) ^ 0xD2E3A81D)
                                      + 366588142))
                      - 1012908886);
  return result;
}

uint64_t sub_1000048C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  void (*v5)(_QWORD);
  _BYTE v6[8];

  v2 = (uint64_t)*(&off_100236540
                + (byte_1001FC680[(byte_1001E53E0[(-21
                                                                                   * ((dword_10023CCE8 - qword_10023CD70) ^ 0x71))
                                                                 + 256] ^ 0x63)
                                                 + 256] ^ (-21 * ((dword_10023CCE8 - qword_10023CD70) ^ 0x71)))
                - 40);
  v3 = 1509257707 * ((unint64_t)&v6[*(_QWORD *)(v2 - 965231491) ^ qword_10023CD70] ^ 0xDB617684DF9DEA71);
  qword_10023CD70 = v3;
  *(_QWORD *)(v2 - 965231491) = v3;
  v5 = (void (*)(_QWORD))((char *)*(&off_100236540
                                             + (byte_1001FC880[byte_1001E55E0[(-21 * ((v3 + qword_10023CD70) ^ 0x71))] ^ 0x5F] ^ (-21 * ((v3 + qword_10023CD70) ^ 0x71)))
                                             + 149)
                                   - 461405130);
  v5(*(_QWORD *)(a1 + 32));
  return ((uint64_t (*)(_QWORD))v5)(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100004A00(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  _BYTE v6[8];
  uint64_t v7;
  unsigned int v8;

  v1 = (uint64_t)*(&off_100236540
                + (byte_100212AB0[(byte_1001FC980[(-21
                                                                                   * ((dword_10023CCE8 - qword_10023CAB0) ^ 0x71))] ^ 0x3B)
                                                 + 256] ^ (-21 * ((dword_10023CCE8 - qword_10023CAB0) ^ 0x71)))
                - 60);
  v2 = (unint64_t)&v6[qword_10023CAB0 + *(_QWORD *)(v1 - 965231491)];
  qword_10023CAB0 = 1509257707 * v2 + 0x6B05B50A19716BBLL;
  *(_QWORD *)(v1 - 965231491) = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  v3 = *(_QWORD *)(a1 + 32);
  v8 = 753993959 * (((&v7 | 0x6E95D57F) - (&v7 & 0x6E95D57F)) ^ 0xB14D275E) + 1817;
  v7 = v3;
  v4 = -21 * (qword_10023CAB0 ^ 0x71 ^ *(_DWORD *)(v1 - 965231491));
  return ((uint64_t (*)(uint64_t *))((char *)*(&off_100236540
                                                      + (byte_1001FC880[byte_1001E55E0[v4] ^ 0xC1] ^ v4)
                                                      + 400)
                                            - 1028801351))(&v7);
}

uint64_t sub_100004BA0(uint64_t result)
{
  int v1;
  _DWORD *v2;
  int v3;
  int v4;
  int v5;

  v1 = 1444845877 * ((1556413445 - (result | 0x5CC4FC05) + (result | 0xA33B03FA)) ^ 0xABCB1F62);
  v2 = *(_DWORD **)(result + 16);
  v3 = *(_DWORD *)(result + 4);
  v4 = *(_DWORD *)(result + 24) - v1;
  v5 = *(_DWORD *)(result + 28) ^ v1;
  v2[2] = *(_DWORD *)result - v1;
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v3 ^ v1;
  return result;
}

uint64_t sub_100004C08(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  int v3;

  v1 = *(_QWORD *)result;
  v2 = *(_QWORD *)(result + 8) ^ (467369143
                                * ((result - 2 * (result & 0xC409AC714F426D44) - 0x3BF6538EB0BD92BCLL) ^ 0x8CC98A20C02CA033));
  v3 = *(_DWORD *)(result + 20) ^ (467369143 * ((result - 2 * (result & 0x4F426D44) + 1329753412) ^ 0xC02CA033));
  *(_DWORD *)v1 = 134218240;
  *(_QWORD *)(v1 + 4) = v2;
  *(_WORD *)(v1 + 12) = 1024;
  *(_DWORD *)(v1 + 14) = v3;
  return result;
}

uint64_t sub_100004C74(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  BOOL v7;
  uint64_t v8;

  v1 = 295199341 * (((result | 0xDC41D293F92D2BD4) - result + (result & 0x23BE2D6C06D2D42BLL)) ^ 0x88122A6B1645239CLL);
  v2 = *(_QWORD *)(result + 16) - v1;
  v3 = *(_QWORD *)(result + 24) + v1;
  v4 = v2 > v3;
  v5 = v2 == v3;
  v6 = v4;
  if (((*(_DWORD *)(result + 8) ^ v1) & 1) != 0)
    v5 = v6;
  v7 = !v5;
  v8 = 36;
  if (!v7)
    v8 = 4;
  *(_DWORD *)(result + 32) = *(_DWORD *)result ^ v1 ^ (*(_DWORD *)(result + v8) - v1);
  return result;
}

uint64_t sub_100004D18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  _QWORD v10[5];
  char v11;

  v3 = (uint64_t)*(&off_100236540
                + (byte_1001FC880[byte_1001E55E0[(-21
                                                                                  * ((dword_10023CCE8 - qword_10023CD00) ^ 0x71))] ^ 0xC1] ^ (-21 * ((dword_10023CCE8 - qword_10023CD00) ^ 0x71)))
                - 100);
  v4 = qword_10023CD00 - (_QWORD)&v11 + *(_QWORD *)(v3 - 965231491);
  v5 = 1509257707 * v4 + 0x249E897B2062158FLL;
  v6 = 1509257707 * (v4 ^ 0xDB617684DF9DEA71);
  qword_10023CD00 = v5;
  *(_QWORD *)(v3 - 965231491) = v6;
  ((void (*)(uint64_t, _QWORD))((char *)*(&off_100236540
                                                  + ((-21 * (qword_10023CD00 ^ 0x71 ^ v6)) ^ byte_1001FC880[byte_1001E55E0[(-21 * (qword_10023CD00 ^ 0x71 ^ v6))] ^ 0x71]))
                                        - 2079634475))(a2, *(_QWORD *)(a1 + 32));
  v10[0] = (char *)*(&off_100236540
                   + (byte_1001FC680[byte_1001E53E0[(-21 * ((*(_DWORD *)(v3 - 965231491) - qword_10023CD00) ^ 0x71))] ^ 0xE3] ^ (-21 * ((*(_DWORD *)(v3 - 965231491) - qword_10023CD00) ^ 0x71)))
                   + 555)
         - 1805201099;
  v10[1] = 0x40000000;
  v10[2] = sub_100128A3C;
  v7 = -21 * ((*(_DWORD *)(v3 - 965231491) + qword_10023CD00) ^ 0x71);
  v10[3] = (char *)*(&off_100236540
                   + (byte_1001E55E0[(byte_100227880[v7 + 256] ^ 1) + 256] ^ v7)
                   - 54)
         - 695836599;
  v10[4] = a2;
  ((void (*)(uint64_t, _QWORD *))((char *)*(&off_100236540
                                                    + ((-21
                                                                                     * (qword_10023CD00 ^ 0x71 ^ *(_DWORD *)(v3 - 965231491))) ^ byte_1001FC680[byte_1001E53E0[(-21 * (qword_10023CD00 ^ 0x71 ^ *(_DWORD *)(v3 - 965231491)))] ^ 0xED])
                                                    + 11)
                                          - 796229875))(a2, v10);
  v8 = -21 * ((*(_DWORD *)(v3 - 965231491) - qword_10023CD00) ^ 0x71);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_100236540
                                                    + (byte_100227880[byte_100212AB0[v8] ^ 8] ^ v8)
                                                    + 728)
                                          - 810262347))(a2);
}

_QWORD *sub_100004FD0(_QWORD *result, char *a2, int a3, uint64_t a4)
{
  char v4;

  for (; a3; --a3)
  {
    v4 = *a2++;
    *(_BYTE *)(*result + (a4++ & 0xF)) = v4;
  }
  return result;
}

uint64_t sub_100004FF4(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  unsigned __int8 v3;
  char v4;

  v1 = (_QWORD *)((char *)*(&off_100236540
                          + ((-21 * ((dword_10023CCE8 + qword_10023CA48) ^ 0x71)) ^ byte_1001FC680[byte_1001E53E0[(-21 * ((dword_10023CCE8 + qword_10023CA48) ^ 0x71))] ^ 0xA0])
                          - 31)
                - 965231491);
  v2 = qword_10023CA48 - (_QWORD)&v4 + *v1;
  qword_10023CA48 = 1509257707 * v2 + 0x6B05B50A19716BBLL;
  *v1 = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  if (result)
  {
    v3 = -21 * ((*(_DWORD *)v1 + qword_10023CA48) ^ 0x71);
    return ((uint64_t (*)(void))((char *)*(&off_100236540
                                        + (byte_1001FC680[byte_1001E53E0[v3] ^ 0xED] ^ v3)
                                        + 16)
                              - 367368842))();
  }
  return result;
}

_QWORD *sub_100005110(_QWORD *result)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  unsigned __int8 v4;
  char v5;

  v1 = (_QWORD *)((char *)*(&off_100236540
                          + (byte_100212AB0[(byte_1001FC980[(-21
                                                                                             * (qword_10023CAC0 ^ 0x71 ^ dword_10023CCE8))] ^ 0x3B)
                                                           + 256] ^ (-21 * (qword_10023CAC0 ^ 0x71 ^ dword_10023CCE8)))
                          - 60)
                - 965231491);
  v2 = (*v1 - qword_10023CAC0) ^ (unint64_t)&v5;
  qword_10023CAC0 = 1509257707 * v2 + 0x6B05B50A19716BBLL;
  *v1 = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  if (result)
  {
    do
    {
      v3 = (_QWORD *)*result;
      v4 = -21 * ((*(_DWORD *)v1 - qword_10023CAC0) ^ 0x71);
      ((void (*)(void))((char *)*(&off_100236540 + (byte_1001FC880[byte_1001E55E0[v4] ^ 0xD0] ^ v4)
                                                 - 24)
                      - 367368842))();
      result = v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_10000528C(uint64_t result, _BYTE *a2, int a3, uint64_t a4)
{
  uint64_t v4;

  if (a3)
  {
    v4 = result + a4 * (result | 1);
    do
    {
      *a2++ = *(_BYTE *)(result + (v4 & 0xF));
      v4 += result | 1;
      --a3;
    }
    while (a3);
  }
  return result;
}

uint64_t sub_1000052B4(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  unsigned __int8 v3;
  char v4;

  v1 = (_QWORD *)((char *)*(&off_100236540
                          + (byte_1001FC880[byte_1001E55E0[(-21 * ((dword_10023CCE8 + qword_10023CD18) ^ 0x71))] ^ 0x5F] ^ (-21 * ((dword_10023CCE8 + qword_10023CD18) ^ 0x71)))
                          + 58)
                - 965231491);
  v2 = *v1 - qword_10023CD18 - (_QWORD)&v4;
  qword_10023CD18 = 1509257707 * v2 - 0x249E897B2062158FLL;
  *v1 = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  if (result)
  {
    v3 = -21 * (qword_10023CD18 ^ 0x71 ^ *(_DWORD *)v1);
    return ((uint64_t (*)(void))((char *)*(&off_100236540
                                        + (byte_100227880[byte_100212AB0[v3] ^ 5] ^ v3)
                                        - 82)
                              - 367368842))();
  }
  return result;
}

uint64_t sub_1000053D8(uint64_t result, _BYTE *a2, int a3, char a4)
{
  int v5;
  uint64_t v7;

  if (a3)
  {
    v5 = a3;
    v7 = result;
    do
    {
      result = sub_1000057E4(*(_QWORD *)(v7 + 16 * (a4 & 0xF)), 0, *(unsigned __int8 *)(v7 + 16 * (a4 & 0xF) + 8));
      *a2++ = result;
      ++a4;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_100005434(uint64_t result, unsigned __int8 *a2, int a3, char a4)
{
  _QWORD *v4;
  uint64_t v5;
  int v7;
  _QWORD *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = (_QWORD *)((char *)*(&off_100236540
                          + (byte_1001E55E0[(byte_100227880[(-21 * (qword_10023CD20 ^ 0x71 ^ dword_10023CCE8)) + 256] ^ 5)
                                                                         + 256] ^ (-21
                                                                                 * (qword_10023CD20 ^ 0x71 ^ dword_10023CCE8)))
                          + 9)
                - 965231491);
  v5 = *v4 - qword_10023CD20 - (_QWORD)&v14;
  qword_10023CD20 = 1509257707 * v5 - 0x249E897B2062158FLL;
  *v4 = 1509257707 * (v5 ^ 0xDB617684DF9DEA71);
  if (a3)
  {
    v7 = a3;
    v9 = (_QWORD *)result;
    do
    {
      v10 = *a2++;
      v11 = *v9 + 16 * (a4 & 0xF);
      v12 = *(_QWORD *)v11;
      v13 = *(unsigned __int8 *)(v11 + 8);
      LOBYTE(v11) = -21 * ((*(_DWORD *)v4 + qword_10023CD20) ^ 0x71);
      result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))((char *)*(&off_100236540
                                                                                   + (byte_100227880[byte_100212AB0[v11] ^ 0xD9] ^ v11)
                                                                                   + 355)
                                                                         - 1598057563))(v12, 0, v13, v10);
      ++a4;
      --v7;
    }
    while (v7);
  }
  return result;
}

_QWORD *sub_1000055E8(_QWORD *result)
{
  _QWORD *v1;
  _QWORD *v2;
  unsigned __int8 v3;
  uint64_t (*v4)(_QWORD *);
  char v5;

  v1 = (_QWORD *)((char *)*(&off_100236540
                          + ((-21 * ((dword_10023CCE8 - qword_10023CD90) ^ 0x71)) ^ byte_1001FC680[byte_1001E53E0[(-21 * ((dword_10023CCE8 - qword_10023CD90) ^ 0x71))] ^ 0xED])
                          - 11)
                - 965231491);
  qword_10023CD90 = 1509257707 * ((*v1 - qword_10023CD90) ^ (unint64_t)&v5 ^ 0xDB617684DF9DEA71);
  *v1 = qword_10023CD90;
  if (result)
  {
    v2 = result;
    v3 = -21 * ((*(_DWORD *)v1 + qword_10023CD90) ^ 0x71);
    v4 = (uint64_t (*)(_QWORD *))((char *)*(&off_100236540
                                                    + (byte_1001FC680[byte_1001E53E0[v3] ^ 0xA0] ^ v3)
                                                    - 4)
                                          - 367368842);
    v4((_QWORD *)*result);
    v4((_QWORD *)v2[2]);
    v4((_QWORD *)v2[4]);
    v4((_QWORD *)v2[6]);
    v4((_QWORD *)v2[8]);
    v4((_QWORD *)v2[10]);
    v4((_QWORD *)v2[12]);
    v4((_QWORD *)v2[14]);
    v4((_QWORD *)v2[16]);
    v4((_QWORD *)v2[18]);
    v4((_QWORD *)v2[20]);
    v4((_QWORD *)v2[22]);
    v4((_QWORD *)v2[24]);
    v4((_QWORD *)v2[26]);
    v4((_QWORD *)v2[28]);
    v4((_QWORD *)v2[30]);
    return (_QWORD *)v4(v2);
  }
  return result;
}

uint64_t sub_1000057E4(uint64_t a1, unsigned int a2, int a3)
{
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  unsigned __int8 v9;

  if (a3)
  {
    v5 = 2 * a2;
    v6 = (a3 - 1);
    v7 = sub_1000057E4(a1, (2 * a2) | 1, v6);
    v8 = sub_1000057E4(a1, (v5 + 2), v6);
    v9 = v8 ^ v7;
    if (*(_BYTE *)(a1 + a2))
      v9 = *(_BYTE *)(a1 + a2);
    if (*(_BYTE *)(a1 + a2) == 1)
      return (v8 + v7);
    else
      return v9;
  }
  else
  {
    return *(unsigned __int8 *)(a1 + a2);
  }
}

uint64_t sub_100005874()
{
  uint64_t v0;
  unint64_t v1;
  char v3;

  v0 = (uint64_t)*(&off_100236540
                + (byte_1001FC880[byte_1001E55E0[(-21
                                                                                                * (qword_10023CD80 ^ 0x71 ^ dword_10023CCE8))] ^ 0x71] ^ (-21 * (qword_10023CD80 ^ 0x71 ^ dword_10023CCE8)))
                + 18);
  v1 = 1509257707 * (((*(_QWORD *)(v0 - 965231491) ^ qword_10023CD80) - (_QWORD)&v3) ^ 0xDB617684DF9DEA71);
  qword_10023CD80 = v1;
  *(_QWORD *)(v0 - 965231491) = v1;
  return ((uint64_t (*)(void))((char *)*(&off_100236540
                                      + (byte_100227880[byte_100212AB0[(-21 * (qword_10023CD80 ^ 0x71 ^ v1))] ^ 0xD9] ^ (-21 * (qword_10023CD80 ^ 0x71 ^ v1)))
                                      + 53)
                            - 13473143))();
}

void sub_10000597C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 723759307 * ((a1 & 0x425A47E4 | ~(a1 | 0x425A47E4)) ^ 0x4C770968);
  __asm { BR              X8 }
}

void sub_100005A5C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 4) ^ (1491908057 * (((a1 | 0xBDF1B6EE) - a1 + (a1 & 0x420E4911)) ^ 0xD135ED14));
  v2 = *(_QWORD *)((char *)*(&off_100236540 + v1 - 1330)
                 + 8
                 * ((6033
                   * (((uint64_t (*)(uint64_t))((char *)*(&off_100236540 + v1 - 1259) - 962052998))(16) != 0)) ^ v1)
                 - 1897918883)
     - 8;
  __asm { BR              X8 }
}

uint64_t sub_100005C20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = 0;
  a1[1] = 0;
  STACK[0x928] = (unint64_t)(a1 + 0x3F9848C400A5072);
  STACK[0x918] = 73 * (v1 ^ 0x1CF) + *(_QWORD *)(v2 + 8 * v1) - 2271;
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0x635)))();
}

uint64_t sub_100005C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((7530 * (v5 == ((5 * (a5 ^ 0x5D2)) ^ 0x39C12B8B))) ^ a5)) - 8))();
}

uint64_t sub_100005CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x918] = *(_QWORD *)(v1 + 8 * a1) - 4;
  return (*(uint64_t (**)(void))(v1 + 16168))();
}

uint64_t sub_100005CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((v5 == a5 + 968958899) * ((a5 - 1506759106) & 0x59CF4EFF ^ 0x1BFE)) ^ a5))
                            - 8))();
}

uint64_t sub_100005D48()
{
  int v0;
  uint64_t v1;

  STACK[0x688] = ((2 * v0) ^ 0x1786u) + *(_QWORD *)(v1 + 8 * v0) - 4406;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xACF)))();
}

uint64_t sub_100005D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((((a5 - 907) ^ 0xFFFFFC62) + (a5 ^ 0x7DE)) * (v5 == 968960260)) ^ a5))
                            - 8))();
}

uint64_t sub_100005DCC()
{
  int v0;
  uint64_t v1;

  STACK[0x918] = *(_QWORD *)(v1 + 8 * v0) - 4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 - 245) | 0x806) ^ 0xEC8) + v0)))();
}

uint64_t sub_100005E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((((a5 - 706) ^ 0x19BD) * (v5 == 968960260)) ^ (a5 + 1817))))();
}

uint64_t sub_100005E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a5 + 3611)) - 8))();
}

uint64_t sub_100005E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  unint64_t *v6;
  uint64_t v7;

  __ldaxr(v6);
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((((((a5 - 1230) | 0x20C) ^ 0xAF0) + ((a5 - 699) | 0xC40)) * v5) ^ (a5 + 1817))))();
}

uint64_t sub_100005E9C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0xA30];
  LODWORD(STACK[0x854]) = STACK[0x9F4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * (v0 - 620 + v0 - 102 + 745)) ^ v0)) - 8))();
}

uint64_t sub_100005EDC()
{
  int v0;
  int v1;
  uint64_t v2;

  STACK[0x8F8] = 0;
  LODWORD(STACK[0x8B4]) = 0;
  STACK[0x880] = 0xB8BD1ECE73DD98CLL;
  LODWORD(STACK[0x8CC]) = 680845731;
  STACK[0xA70] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((166 * (v1 == ((v0 - 518) ^ 0x2894E4CC ^ (v0 - 1387)))) ^ v0))
                            - 8))();
}

uint64_t sub_100005F48()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 224) = (v0 - 1288) ^ (723759307
                                       * ((((v1 - 224) | 0xF7B0E6F8) - ((v1 - 224) & 0xF7B0E6F8)) ^ 0x662578B));
  sub_1001BF71C((_DWORD *)(v1 - 224));
  return (*(uint64_t (**)(void))(STACK[0x5E8]
                              + 8
                              * ((7148 * (*(_DWORD *)(v1 - 220) == ((v0 - 383506706) & 0x16DBD55D) + 968958899)) ^ v0)))();
}

uint64_t sub_100005FE4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  *(_DWORD *)(v1 - 220) = (v0 + 1985909449) ^ (753993959
                                             * ((((2 * (v1 - 224)) | 0x2F9894FE) - (v1 - 224) + 1748219265) ^ 0x4814B85E));
  sub_100002C08(v1 - 224);
  v2 = STACK[0x5E8];
  v3 = *(unsigned __int8 *)(v1 - 224);
  v4 = (uint64_t)*(&off_100236540 + (v0 ^ 0x918));
  v5 = (uint64_t)*(&off_100236540 + (v0 ^ 0x948));
  if (v3 == ((v0 ^ 0x5D) - 83))
    v6 = v4 - 351476379;
  else
    v6 = v5 - 958874507;
  STACK[0xA70] = v6;
  v7 = (_BYTE *)(v4 - 351476355);
  v8 = (_BYTE *)(v5 - 958874483);
  if (v3 != ((v0 ^ 0x5D) - 83))
    v7 = v8;
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v7 == 66) * (((v0 - 2308) | 0x550) + 4017)) ^ v0)))();
}

uint64_t sub_1000060EC()
{
  int v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;

  v7 = (unint64_t *)(v2 + 40);
  v8 = (unint64_t *)(v3 + 40);
  if (v0 == v1)
    v9 = v7;
  else
    v9 = v8;
  v10 = *v9;
  v11 = STACK[0x940];
  STACK[0x9D0] = (unint64_t)&STACK[0xD40] + STACK[0x940];
  STACK[0x940] = v11 + 48;
  STACK[0x828] = v4;
  STACK[0x760] = 0xB56F0B975C5A0B40;
  STACK[0x8A0] = 0x73C92FE99193FD00;
  STACK[0x658] = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v10 == 0xAC3481600FFE2898) * ((v5 - 926) ^ (v5 - 927))) ^ v5))
                            - 8))();
}

uint64_t sub_100006790@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a1 + a2) & 0x72D0B7AE ^ 0x1D4D) * (v2 ^ 1)) ^ (a1 + 99))) - 8))();
}

uint64_t sub_100006944()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x6D8]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - ((v1 - 918730396) & 0x36C2A7BE ^ 0x194)))();
}

uint64_t sub_100006974(_QWORD *a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;

  *a1 = 0;
  a1[1] = 0;
  *v1 = a1 + 0x3F9848C400A5072;
  return (*(uint64_t (**)(void))(v3 + 8 * (((STACK[0x7E8] != 0) * ((v2 ^ 0xA56) + ((v2 - 3423) | 0x45) - 1776)) ^ v2)))();
}

uint64_t sub_1000069CC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 3511)) - ((v0 + 1997137426) & 0x88F61FCD) + 1989))();
}

uint64_t sub_100006DA0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LODWORD(STACK[0x6D8]) = 968960260;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - 4))();
}

uint64_t sub_100006E80@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  STACK[0x670] = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v1 + 1286) ^ 0x18F4) + v4) * (v2 != v3)) ^ v1)))();
}

uint64_t sub_100007F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x5E8]
                                                                                + 8 * (int)(STACK[0x5E0] + 1579))
                                                                    - 4))(a1, a2, a3, LODWORD(STACK[0x590]));
}

uint64_t sub_100007FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x5E8] + 8 * (v3 ^ 0x95F))
                                                                    - 4))(a1, a2, a3, LODWORD(STACK[0x5A0]));
}

uint64_t sub_100008190@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _BYTE *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;

  v7 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * v2) + v4);
  v8 = *(_BYTE **)(*(_QWORD *)v3 + 24);
  v9 = (((((unint64_t)(v8 + 10) >> 7) & 0x1FFFFFFFFFFFFFELL) + 0x48FFC0226B796ACLL) & 0x72D53B62CC5FFA2)
     - (__ROR8__(v8 + 10, 8) & 0xF8FFFFFFFFFFFFFFLL)
     - 0x49DEA7DC29BECB28;
  v10 = v9 ^ 0x4117505D72786476;
  v9 ^= 0x7328A055E8A63EC4uLL;
  v11 = (__ROR8__(v10, 8) + v9) ^ 0x858543C4A1D93973;
  v12 = __ROR8__(v11, 8);
  v13 = v11 ^ __ROR8__(v9, 61);
  v14 = (((2 * (v12 + v13)) | 0xBA0648A651F9184ELL) - (v12 + v13) - 0x5D03245328FC8C27) ^ 0x4ADA83428C6D6C34;
  v15 = v14 ^ __ROR8__(v13, 61);
  v16 = (__ROR8__(v14, 8) + v15) ^ 0x19D8A247FDB338A4;
  v17 = v16 ^ __ROR8__(v15, 61);
  v18 = __ROR8__(v16, 8);
  v19 = (((v18 + v17) | 0xC646588276E034B0) - ((v18 + v17) | 0x39B9A77D891FCB4FLL) + 0x39B9A77D891FCB4FLL) ^ 0x5EFCFD5F53F5854FLL;
  v20 = v19 ^ __ROR8__(v17, 61);
  v21 = (__ROR8__(v19, 8) + v20) ^ 0xBDC40B7C2F73B18BLL;
  v22 = v21 ^ __ROR8__(v20, 61);
  v23 = (__ROR8__(v21, 8) + v22) ^ 0xDB1C4740BFE60391;
  v24 = v23 ^ __ROR8__(v22, 61);
  v25 = __ROR8__(v23, 8);
  v8[10] = (((((v25 + v24) | 0xCB3FE04D4C24D871) - ((v25 + v24) | 0x34C01FB2B3DB278ELL) + 0x34C01FB2B3DB278ELL) ^ 0xB48C5915D2BEBBD9) >> ((8 * ((_BYTE)v8 + 10)) & 0x38)) ^ HIBYTE(a2) ^ 0xB;
  v26 = (__ROR8__(v8 + 11, 8) & 0xF8FFFFFFFFFFFFFFLL) + a1;
  v27 = v26 ^ 0xBD7E06799BE56458;
  v26 ^= 0x8F41F671013B3EEALL;
  v28 = __ROR8__(v27, 8);
  v29 = (((v28 + v26) | 0xC88E391DF07B9B5ELL) - ((v28 + v26) | 0x3771C6E20F8464A1) + 0x3771C6E20F8464A1) ^ 0x4D0B7AD951A2A22DLL;
  v30 = v29 ^ __ROR8__(v26, 61);
  v31 = (__ROR8__(v29, 8) + v30) ^ v5;
  v32 = v31 ^ __ROR8__(v30, 61);
  v33 = __ROR8__(v31, 8);
  v34 = (((v33 + v32) | 0xF79516781543A24ALL) - ((v33 + v32) | 0x86AE987EABC5DB5) + 0x86AE987EABC5DB5) ^ 0xEE4DB43FE8F09AEELL;
  v35 = v34 ^ __ROR8__(v32, 61);
  v36 = __ROR8__(v34, 8);
  v37 = (((2 * (v36 + v35)) | 0x649571964A5C8970) - (v36 + v35) - 0x324AB8CB252E44B8) ^ 0xAAF01D16003BF547;
  v38 = v37 ^ __ROR8__(v35, 61);
  v39 = __ROR8__(v37, 8);
  v40 = (((2 * (v39 + v38)) & 0xFA4B4B2D3ABF2D8CLL) - (v39 + v38) - 0x7D25A5969D5F96C7) ^ 0x3F1E51154DD3D8B2;
  v41 = v40 ^ __ROR8__(v38, 61);
  v42 = __ROR8__(v40, 8);
  v43 = (v42 + v41 - ((2 * (v42 + v41)) & 0x6B8C68B9277604C0) - 0x4A39CBA36C44FDA0) ^ 0x6EDA731C2C5D01F1;
  v44 = __ROR8__(v43, 8);
  v45 = __ROR8__(v41, 61);
  v8[11] = (((((v44 + (v43 ^ v45)) | 0x3B6CE412BB6BB79)
            - ((v44 + (v43 ^ v45)) | 0xFC4931BED4494486)
            - 0x3B6CE412BB6BB7ALL) ^ 0x7C057719B52CD8D1) >> ((8 * ((_BYTE)v8 + 11)) & 0x38)) ^ BYTE6(a2) ^ 0x2D;
  v46 = __ROR8__(v8 + 12, 8);
  v47 = (((v46 & 0xF8FFFFFFFFFFFFFFLL) + a1) | 0xE8EEA5D5E2597472)
      - (((v46 & 0xF8FFFFFFFFFFFFFFLL) + a1) | 0x17115A2A1DA68B8DLL)
      + 0x17115A2A1DA68B8DLL;
  v48 = v47 ^ 0x5590A3AC79BC102ALL;
  v47 ^= 0x67AF53A4E3624A98uLL;
  v49 = (__ROR8__(v48, 8) + v47) ^ 0x858543C4A1D93973;
  v50 = v49 ^ __ROR8__(v47, 61);
  v51 = __ROR8__(v49, 8);
  v52 = (((2 * (v51 + v50)) | 0x79D4ADC517A4D584) - (v51 + v50) + 0x4315A91D742D953ELL) ^ 0xAB33F1F32F438AD1;
  v53 = v52 ^ __ROR8__(v50, 61);
  v54 = __ROR8__(v52, 8);
  v55 = (((2 * (v54 + v53)) | 0x133BA7F5B8AFF864) - (v54 + v53) + 0x76622C0523A803CELL) ^ 0x904571BD21E4C496;
  v56 = v55 ^ __ROR8__(v53, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0x98BAA5DD2515B1FFLL;
  v58 = __ROR8__(v57, 8);
  v59 = v57 ^ __ROR8__(v56, 61);
  v60 = (-2 - ((~(v58 + v59) | 0xED7B25404BF6E691) + ((v58 + v59) | 0x1284DABFB409196ELL))) ^ 0x50BF2E3C6485571ALL;
  v61 = v60 ^ __ROR8__(v59, 61);
  v62 = (__ROR8__(v60, 8) + v61) ^ 0xDB1C4740BFE60391;
  v8[12] = (((__ROR8__(v62, 8) + (v62 ^ __ROR8__(v61, 61))) ^ 0x7FB3B9589E9A63A8) >> ((8 * ((_BYTE)v8 + 12)) & 0x38)) ^ BYTE5(a2) ^ 0x66;
  v63 = (__ROR8__(v8 + 13, 8) & 0xF8FFFFFFFFFFFFFFLL) + a1;
  v64 = __ROR8__(v63 ^ 0xBD7E06799BE56458, 8);
  v63 ^= 0x8F41F671013B3EEALL;
  v65 = (v64 + v63) ^ 0x858543C4A1D93973;
  v66 = v65 ^ __ROR8__(v63, 61);
  v67 = (__ROR8__(v65, 8) + v66) ^ v5;
  v68 = v67 ^ __ROR8__(v66, 61);
  v69 = (__ROR8__(v67, 8) + v68) ^ 0x19D8A247FDB338A4;
  v70 = v69 ^ __ROR8__(v68, 61);
  v71 = (__ROR8__(v69, 8) + v70) ^ 0x98BAA5DD2515B1FFLL;
  v72 = v71 ^ __ROR8__(v70, 61);
  v73 = __ROR8__(v71, 8);
  v74 = (-2 - ((~(v73 + v72) | 0x936D455C1D6E1109) + ((v73 + v72) | 0x6C92BAA3E291EEF6))) ^ 0x2EA94E20321DA082;
  v75 = v74 ^ __ROR8__(v72, 61);
  v76 = __ROR8__(v74, 8);
  v77 = (((v76 + v75) | 0xAF06737F2B17804BLL) - ((v76 + v75) | 0x50F98C80D4E87FB4) + 0x50F98C80D4E87FB4) ^ 0x741A343F94F183DALL;
  v78 = v77 ^ __ROR8__(v75, 61);
  v79 = __ROR8__(v77, 8);
  v8[13] = (((((v79 + v78) ^ 0x64EEB006C9C4DB8DLL)
            - ((2 * ((v79 + v78) ^ 0x64EEB006C9C4DB8DLL)) & 0x128EEF064B530690)
            - 0x76B8887CDA567CB8) ^ 0x921A7EDD72F73B6DLL) >> ((8 * ((_BYTE)v8 + 13)) & 0x38)) ^ BYTE4(a2) ^ 0x27;
  v80 = __ROR8__(v8 + 14, 8);
  v81 = ((0xB9B801FEECA434A9 - (v80 & 0xF8FFFFFFFFFFFFFFLL)) & 0xF1B8E4184B5D63B2)
      + (v80 & 0xF8FFFFFFFFFFFFFFLL)
      + a1
      - (((v80 & 0xF8FFFFFFFFFFFFFFLL) + a1) & 0xF3B8E4184B5D63B2);
  v82 = v81 ^ 0x4EC6E261D0B807EALL;
  v81 ^= 0x7CF912694A665D58uLL;
  v83 = __ROR8__(v82, 8);
  v84 = (-2 - ((~(v83 + v81) | 0x8DFE169BEE1B3FCLL) + ((v83 + v81) | 0xF7201E96411E4C03))) ^ 0x8D5AA2AD1F388A8FLL;
  v85 = v84 ^ __ROR8__(v81, 61);
  v86 = (__ROR8__(v84, 8) + v85) ^ v5;
  v87 = __ROR8__(v86, 8);
  v88 = v86 ^ __ROR8__(v85, 61);
  v89 = (-2 - ((~(v87 + v88) | 0x6CBFF6F4A4920747) + ((v87 + v88) | 0x9340090B5B6DF8B8))) ^ 0x756754B359213FE3;
  v90 = __ROR8__(v89, 8);
  v91 = v89 ^ __ROR8__(v88, 61);
  v92 = (-2 - ((~(v90 + v91) | 0x1EDB9ABC2281C41) + ((v90 + v91) | 0xFE1246543DD7E3BELL))) ^ 0x99571C76E73DADBELL;
  v93 = v92 ^ __ROR8__(v91, 61);
  v94 = (__ROR8__(v92, 8) + v93) ^ 0xBDC40B7C2F73B18BLL;
  v95 = v94 ^ __ROR8__(v93, 61);
  v96 = (__ROR8__(v94, 8) + v95) ^ 0xDB1C4740BFE60391;
  v97 = v96 ^ __ROR8__(v95, 61);
  v98 = __ROR8__(v96, 8);
  v8[14] = (((-2 - ((~(v98 + v97) | 0x1D2BD8C4C378B6D7) + ((v98 + v97) | 0xE2D4273B3C874928))) ^ 0x6298619C5DE2D57FLL) >> ((8 * ((_BYTE)v8 + 14)) & 0x38)) ^ BYTE3(a2) ^ 0xE4;
  v99 = __ROR8__(v8 + 15, 8);
  v100 = (v99 & 0xF8FFFFFFFFFFFFFFLL)
       - ((2 * (v99 & 0xF8FFFFFFFFFFFFFFLL) - 0x737003FDD9486954) & 0xBAD8FC475FEC480CLL)
       - 0x5C4B83DB3CAE10A4;
  v101 = __ROR8__(v100 ^ 0xE012785A3413405ELL, 8);
  v100 ^= 0xD22D8852AECD1AECLL;
  v102 = (v101 + v100) ^ 0x858543C4A1D93973;
  v103 = v102 ^ __ROR8__(v100, 61);
  v104 = __ROR8__(v102, 8);
  v105 = (-2 - ((~(v104 + v103) | 0xC8D74D6CCE92CD77) + ((v104 + v103) | 0x3728B293316D3288))) ^ 0xDF0EEA7D6A032D64;
  v106 = v105 ^ __ROR8__(v103, 61);
  v107 = (__ROR8__(v105, 8) + v106) ^ 0x19D8A247FDB338A4;
  v108 = v107 ^ __ROR8__(v106, 61);
  v109 = (__ROR8__(v107, 8) + v108) ^ 0x98BAA5DD2515B1FFLL;
  v110 = v109 ^ __ROR8__(v108, 61);
  v111 = (__ROR8__(v109, 8) + v110) ^ 0xBDC40B7C2F73B18BLL;
  v112 = v111 ^ __ROR8__(v110, 61);
  v113 = (__ROR8__(v111, 8) + v112) ^ 0xDB1C4740BFE60391;
  v114 = v113 ^ __ROR8__(v112, 61);
  v115 = __ROR8__(v113, 8);
  v8[15] = (((((2 * (v115 + v114)) | 0xEAB31F6EB70A39B6) - (v115 + v114) - 0x75598FB75B851CDBLL) ^ 0xAEA36EFC51F7F73) >> ((8 * ((_BYTE)v8 + 15)) & 0x38)) ^ BYTE2(a2) ^ 0xB6;
  v116 = __ROR8__(v8 + 16, 8);
  v117 = (0x39B801FEECA434A9 - (v116 & 0xF8FFFFFFFFFFFFFFLL)) & 0x29E7C29851787FEFLL | ((v116 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                        + a1) & 0xD4183D67AE878010;
  v118 = v117 ^ 0x9699C4E1CA9D1BB7;
  v117 ^= 0xA4A634E950434105;
  v119 = (__ROR8__(v118, 8) + v117) ^ 0x858543C4A1D93973;
  v120 = v119 ^ __ROR8__(v117, 61);
  v121 = (__ROR8__(v119, 8) + v120) ^ v5;
  v122 = v121 ^ __ROR8__(v120, 61);
  v123 = (__ROR8__(v121, 8) + v122) ^ 0x19D8A247FDB338A4;
  v124 = v123 ^ __ROR8__(v122, 61);
  v125 = (__ROR8__(v123, 8) + v124) ^ 0x98BAA5DD2515B1FFLL;
  v126 = v125 ^ __ROR8__(v124, 61);
  v127 = __ROR8__(v125, 8);
  v128 = (((2 * (v127 + v126)) & 0x2A1BECA682E8477CLL) - (v127 + v126) - 0x150DF653417423BFLL) ^ 0x573602D091F86DCALL;
  v129 = v128 ^ __ROR8__(v126, 61);
  v130 = (__ROR8__(v128, 8) + v129) ^ 0xDB1C4740BFE60391;
  v131 = v130 ^ __ROR8__(v129, 61);
  v132 = __ROR8__(v130, 8);
  v8[16] = (((-2 - ((~(v132 + v131) | 0x2781A29A72A565EDLL) + ((v132 + v131) | 0xD87E5D658D5A9A12))) ^ 0x58321BC2EC3F0645) >> ((8 * ((_BYTE)v8 + 16)) & 0x38)) ^ BYTE1(a2) ^ 0xA;
  v133 = __ROR8__(v8 + 17, 8);
  v134 = (((v133 & 0xF8FFFFFFFFFFFFFFLL) + a1) | 0x4D9E99C6604C8C61)
       - (((v133 & 0xF8FFFFFFFFFFFFFFLL) + a1) | 0xB26166399FB3739ELL)
       - 0x4D9E99C6604C8C62;
  v135 = __ROR8__(v134 ^ 0xF0E09FBFFBA9E839, 8);
  v134 ^= 0xC2DF6FB76177B28BLL;
  v136 = ((2 * (v135 + v134)) & 0x614200688DAC4F18) - (v135 + v134) - 0x30A1003446D6278DLL;
  v137 = v136 ^ 0x4ADBBC0F18F0E100 ^ __ROR8__(v134, 61);
  *((_QWORD *)&v138 + 1) = v136;
  *(_QWORD *)&v138 = v136 ^ 0x4ADBBC0F18F0E100;
  v139 = ((v138 >> 8) + v137 - ((2 * ((v138 >> 8) + v137)) & 0x94A85D713741DF64) - 0x35ABD147645F104ELL) ^ 0xDD8D89A93F310FA1;
  v140 = v139 ^ __ROR8__(v137, 61);
  v141 = (__ROR8__(v139, 8) + v140) ^ 0x19D8A247FDB338A4;
  v142 = v141 ^ __ROR8__(v140, 61);
  v143 = (__ROR8__(v141, 8) + v142) ^ 0x98BAA5DD2515B1FFLL;
  v144 = v143 ^ __ROR8__(v142, 61);
  v145 = (__ROR8__(v143, 8) + v144) ^ 0xBDC40B7C2F73B18BLL;
  v146 = v145 ^ __ROR8__(v144, 61);
  v147 = (__ROR8__(v145, 8) + v146) ^ 0xDB1C4740BFE60391;
  v8[17] = (((__ROR8__(v147, 8) + (v147 ^ __ROR8__(v146, 61))) ^ 0x7FB3B9589E9A63A8) >> ((8 * ((_BYTE)v8 + 17)) & 0x38)) ^ a2 ^ 0x85;
  return v7();
}

uint64_t sub_10000FDFC()
{
  int v0;
  unsigned int v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * ((43 * (v2 >= (v0 ^ v1) - 1353)) ^ v0))
                            - ((v0 - 822352577) & 0x31041DAC ^ 0xD8CLL)))();
}

uint64_t sub_100010F8C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x5E8] + 8 * v1) - 8);
  *(int64x2_t *)&STACK[0x5C0] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x5B0] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x5A0] = vdupq_n_s64(0x8C8FFC0226B796ACLL);
  *(int64x2_t *)&STACK[0x580] = vdupq_n_s64(0xBAD4285B84146F92);
  *(int64x2_t *)&STACK[0x590] = vdupq_n_s64(0x23B2122ED566031FuLL);
  *(int64x2_t *)&STACK[0x570] = vdupq_n_s64(0x6014125459EF5391uLL);
  *(_OWORD *)&STACK[0x560] = xmmword_100212CC0;
  return v3(v2 + v0, 3030);
}

uint64_t sub_100011844@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  int v3;

  if (v1)
    v3 = 0;
  else
    v3 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 + 1400) * v3) ^ v2)) - 8))();
}

uint64_t sub_100011B00()
{
  return sub_100011B08();
}

uint64_t sub_100011B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;

  STACK[0x958] = 0;
  v7 = STACK[0x5E8];
  STACK[0x768] = *(_QWORD *)(STACK[0x5E8] + 8 * v5) - 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((v4 ^ 0x4EB) + v5)))(a1, a2, a3, a4, v6);
}

uint64_t sub_100011C7C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((a1 + 2360) | (2 * (*(_QWORD *)(STACK[0xAB8] + 24) == 0))))
                            - ((((a1 + 175) | 0x88Bu) - 2572) ^ 0x477)))();
}

uint64_t sub_100011CC0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * v0) - (v1 ^ 0x477)))();
}

uint64_t sub_100011CE4()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x5E8] + 8 * v0))(v1);
}

uint64_t sub_100011FEC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t))
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v28 = (v26 + a1) | 0x2Fu;
  *(_DWORD *)(v27 - 224) = v26
                         + 753993959 * ((2 * ((v27 - 224) & 0x4DFEF6C8) - (v27 - 224) + 838928692) ^ 0xEDD9FB15)
                         + 605;
  v29 = a25(v27 - 224);
  v30 = STACK[0x5E8];
  *(_DWORD *)(v25 + 107) = *(_DWORD *)(v27 - 216) ^ 0x82607D34;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30 + 8 * v26) - v28 + 683))(v29);
}

uint64_t sub_10001275C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v7 = 577448865 * *v4 + 1812281602;
  v8 = 1800242513 * ((v6 + 704991293 - 2 * ((v6 - 224) & 0x2A05511D)) ^ 0x73A43933);
  *(_QWORD *)(v6 - 216) = v2;
  *(_QWORD *)(v6 - 208) = v1;
  *(_QWORD *)(v6 - 184) = v3;
  *(_DWORD *)(v6 - 224) = v8 + (a1 ^ 0x2FFF7FEF) + ((a1 << ((v5 - 72) & 0xDB ^ 0x50)) & 0x18483544) - 30940034;
  *(_DWORD *)(v6 - 176) = v7 ^ v8;
  *(_DWORD *)(v6 - 196) = v8 + 1807040697;
  *(_DWORD *)(v6 - 192) = v8 + v5 - 2895;
  v9 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540 + (v5 ^ 0x1403)) - 286046526))(v6 - 224);
  return (*(uint64_t (**)(uint64_t))(STACK[0x5E8] + 8 * v5))(v9);
}

uint64_t sub_100012AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BOOL4 v43;

  v24 = v11
      + (v8 & 0xF800000000000000 | (v12 >> 8))
      - ((2 * (v8 & 0xF800000000000000 | (v12 >> 8)) - 0x737003FDD9486954) & 0xD4E1EDB4FEB23D2ELL)
      - 0x4F470B246D4B1B64;
  v25 = v24 ^ 0xD70EF0A3E4BC7ACFLL;
  v24 ^= 0xE53100AB7E62207DLL;
  v26 = (__ROR8__(v25, 8) + v24) ^ v19;
  v27 = v26 ^ __ROR8__(v24, 61);
  v28 = __ROR8__(v26, 8);
  v29 = (((2 * (v28 + v27)) & 0xABE0D8B2FE488556) - (v28 + v27) - 0x55F06C597F2442ACLL) ^ 0xBDD634B7244A5D47;
  v30 = v29 ^ __ROR8__(v27, 61);
  v31 = __ROR8__(v29, 8);
  v32 = __ROR8__((((2 * (v31 + v30)) & 0x204790F1AAD47F50) - (v31 + v30) + 0x6FDC37872A95C057) ^ 0x760495C0D726F8F3, 8);
  v33 = (((2 * (v31 + v30)) & 0x204790F1AAD47F50) - (v31 + v30) + 0x6FDC37872A95C057) ^ 0x760495C0D726F8F3 ^ __ROR8__(v30, 61);
  v34 = (((v32 + v33) & v16 ^ a2) + ((v32 + v33) ^ v14) - (((v32 + v33) ^ v14) & v16)) ^ a5;
  v35 = v34 ^ __ROR8__(v33, 61);
  v36 = __ROR8__(v34, 8);
  v37 = (v36 + v35 - (v22 & (2 * (v36 + v35))) + a6) ^ a7;
  v38 = v37 ^ __ROR8__(v35, 61);
  v39 = (__ROR8__(v37, 8) + v38) ^ a1;
  v40 = v39 ^ __ROR8__(v38, 61);
  v41 = __ROR8__(v39, 8);
  LODWORD(v40) = ((((v41 + v40 - (v13 & (2 * (v41 + v40))) + v17) ^ a3) >> (v9 & 0x38)) ^ *(unsigned __int8 *)v12)
               - *(unsigned __int8 *)(v21 + v10);
  v43 = (v40 ^ a4) + (v15 & (2 * (_DWORD)v40)) + v18 != 313655537 || v10 == 31;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v43 * v20) ^ a8)) - 8))();
}

uint64_t sub_100012DA0()
{
  char v0;
  uint64_t v1;
  BOOL v2;
  int v3;

  if (v0)
    v2 = 1;
  else
    v2 = LODWORD(STACK[0x718]) == 0;
  v3 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((350 * (((LODWORD(STACK[0xD0C]) ^ LODWORD(STACK[0xD08]) ^ v3) & 1) == 0)) ^ LODWORD(STACK[0xD04])))
                            - 4))();
}

uint64_t sub_1000130E8@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X5>, int a5@<W6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  int v16;

  v15 = STACK[0x5E8];
  *(_BYTE *)(a7 + v14 + v12) = *((_BYTE *)*(&off_100236540 + a1) + a2 + (v14 & 0xF)) ^ (*(_BYTE *)(v10 + v8) - 60) ^ ((v14 & 0xF) * v11) ^ *((_BYTE *)*(&off_100236540 + a3) + a4 + (v14 & 0xF) + 1) ^ *((_BYTE *)*(&off_100236540 + a5) + a6 + (v14 & 0xF));
  if (v7)
    v16 = 0;
  else
    v16 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((v16 * v13) ^ v9)) - 8))();
}

uint64_t sub_1000132F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_DWORD *)(a5 - 0x73C92FE99193FCECLL) = *(_DWORD *)(v6 + 4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v8 + 8 * ((6302 * (*(_DWORD *)(v6 + 4) == v5)) ^ v7))
                                                                                       - (v7 - 1414)
                                                                                       + 1357))(a1, a2, a3, a4, STACK[0x5E0]);
}

uint64_t sub_100013848()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x918] = (v0 + 1827) + *(_QWORD *)(v1 + 8 * v0) - 2271;
  return (*(uint64_t (**)(void))(v1 + 8 * ((int)v0 + 1585)))();
}

uint64_t sub_100013970()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_QWORD *)(v1 - 0x1FCC246200528390) == 0) * (((v0 ^ 0xF72) + 3654) ^ 0x1871)) | v0 ^ 0xF72)))();
}

uint64_t sub_1000139B8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v2 = a1 + 10;
  v3 = 16 - (v2 & 0xF);
  LODWORD(STACK[0x79C]) = v3;
  v4 = v3 + v2 + 680845731 - ((2 * (v3 + v2)) & 0x5129C346);
  LODWORD(STACK[0xA3C]) = v4;
  v5 = ((uint64_t (*)(_QWORD))STACK[0x388])(((v1 - 6232) | 0x540) ^ 0x2894E4F2 ^ v4);
  v6 = STACK[0x5E8];
  STACK[0x7C8] = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 0) * ((v1 - 1511153264) & 0x5A125FD7 ^ 0x19CD)) ^ v1)))();
}

uint64_t sub_100013A70(uint64_t a1)
{
  _QWORD *v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v3
                                                                        + 8 * (((*v1 != 0) * (v2 ^ 0x19D4)) ^ v2))
                                                            - (v2
                                                             - 5248)
                                                            + 1357))(a1, 0xF114A9EFEA257110);
}

uint64_t sub_100013FC4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((v0 + *(_DWORD *)(v1 + 16) - (v3 & (2 * *(_DWORD *)(v1 + 16))) + 1960 != ((v5 + 335) | v2) + v0)
                                          * v4) ^ (v5 + 2329)))
                            - 4))();
}

uint64_t sub_100014208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34)
{
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v36 = (v34 + 225802950) & 0xF28A7DDF;
  v37 = (v34 - 235488500) & 0xE093FE9;
  v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x5E8] + 8 * (int)(((v36 - 1338) * (a34 < 0x10)) ^ v34)) - v37 + 1945);
  *(int64x2_t *)&STACK[0x5B0] = vdupq_n_s64(0xEB282ABB2AF4727DLL);
  *(int64x2_t *)&STACK[0x530] = vdupq_n_s64(0x14D7D544D50B8D82uLL);
  *(int64x2_t *)&STACK[0x370] = vdupq_n_s64(v35);
  *(int64x2_t *)&STACK[0x500] = vdupq_n_s64(0x1917D2482575DDF5uLL);
  *(int64x2_t *)&STACK[0x580] = vdupq_n_s64(0x55B1FC7DF83B665FuLL);
  *(int64x2_t *)&STACK[0x5A0] = vdupq_n_s64(0xAA4E038207C499A0);
  *(int64x2_t *)&STACK[0x5D0] = vdupq_n_s64(0x808A1706B0598603);
  *(int64x2_t *)&STACK[0x5C0] = vdupq_n_s64(0x4560A4BD2A6FC82AuLL);
  *(int64x2_t *)&STACK[0x550] = vdupq_n_s64(0x7F75E8F94FA679FCuLL);
  *(int64x2_t *)&STACK[0x540] = vdupq_n_s64(0xB29A3475907877F2);
  return v38(a1, v36, a3, a4, v37, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_100019A24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v23 = v10 + a1 + v22;
  v24 = __ROR8__(v23 + 1234, 8);
  v25 = a3
      - ((((a8 + 4900) - (v24 & 0xF8FFFFFFFFFFFFFFLL) + 0x568946B32C06B19ELL) | a2)
       + (((v24 & 0xF8FFFFFFFFFFFFFFLL) + 0x976B94CD3F935ECLL) | 0xF3233D8AA7234359));
  v26 = __ROR8__(v25 ^ a4, 8);
  v27 = v25 ^ a5;
  v28 = (v26 + v27) ^ v8;
  v29 = v28 ^ __ROR8__(v27, 61);
  v30 = __ROR8__(v28, 8);
  v31 = ((a6 & (2 * (v30 + v29))) - (v30 + v29) + a7) ^ v16;
  v32 = v31 ^ __ROR8__(v29, 61);
  v33 = (__ROR8__(v31, 8) + v32) ^ v12;
  v34 = __ROR8__(v33, 8);
  v35 = v33 ^ __ROR8__(v32, 61);
  v36 = (v13 - ((v34 + v35) | v13) + ((v34 + v35) | v17)) ^ v18;
  v37 = v36 ^ __ROR8__(v35, 61);
  v38 = __ROR8__(v36, 8);
  v39 = __ROR8__((v9 - ((v38 + v37) | v9) + ((v38 + v37) | v19)) ^ v20, 8);
  v40 = (v9 - ((v38 + v37) | v9) + ((v38 + v37) | v19)) ^ v20 ^ __ROR8__(v37, 61);
  v41 = v39 + v40;
  v42 = STACK[0x5E8];
  *(_BYTE *)(v23 + 1234) = ((__ROR8__(v41 ^ v15, 8) + (v41 ^ v15 ^ __ROR8__(v40, 61))) ^ v14) >> ((8 * (v23 - 46)) & 0x38);
  return (*(uint64_t (**)(void))(v42 + 8 * (((a1 == 1) * v21) ^ v11)))();
}

uint64_t sub_100019B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21)
{
  int v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)STACK[0x988] = v22;
  *a21 = STACK[0xA3C];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v23 + 8 * v21))(a1, a2, a3, a4, STACK[0x5E0]);
}

uint64_t sub_100019BD0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((7677 * (((STACK[0x8A8] == 0) ^ (v0 + 0x80)) & 1)) ^ v0)))();
}

uint64_t sub_100019BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void (*a32)(uint64_t))
{
  _BYTE *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  *(_DWORD *)(v34 - 224) = v33
                         + 2664
                         + 753993959 * ((((v34 - 224) | 0x207C603F) - ((v34 - 224) & 0x207C603F)) ^ 0xFFA4921E);
  a32(v34 - 224);
  v35 = *(_QWORD *)(v34 - 216);
  *v32 = ((v33 + 59) | 0x45) ^ v35 ^ 0xDA;
  v32[1] = BYTE1(v35) ^ 0x9C;
  v32[2] = BYTE2(v35) ^ 0xF4;
  v32[3] = BYTE3(v35) ^ 0xAA;
  v32[4] = BYTE4(v35) ^ 0x44;
  v32[5] = BYTE5(v35) ^ 0xE;
  v32[6] = BYTE6(v35) ^ 0xC;
  v32[7] = HIBYTE(v35) ^ 0x29;
  *(_DWORD *)(v34 - 224) = v33
                         + 2664
                         + 753993959
                         * ((2 * (((v34 - 224) ^ 0x889BD291) & 0x1709A439) - ((v34 - 224) ^ 0x889BD291) - 386507834) ^ 0xBFB57B76);
  v36 = ((uint64_t (*)(uint64_t))a32)(v34 - 224);
  v37 = STACK[0x5E8];
  v38 = *(_QWORD *)(v34 - 216);
  v32[8] = v38 ^ 0x97;
  v32[9] = BYTE1(v38) ^ 0x9C;
  v32[10] = BYTE2(v38) ^ 0xF4;
  v32[11] = BYTE3(v38) ^ 0xAA;
  v32[12] = BYTE4(v38) ^ 0x44;
  v32[13] = BYTE5(v38) ^ 0xE;
  v32[14] = BYTE6(v38) ^ 0xC;
  v32[15] = HIBYTE(v38) ^ 0x29;
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * v33))(v36);
}

uint64_t sub_10001A128@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ (4556 * (v1 == 968960260)))))();
}

uint64_t sub_10001A150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((a5 - 319) | 0x360) + 2847) ^ (a5 - 967))) - 8))();
}

uint64_t sub_10001A2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  STACK[0x280] = v10;
  STACK[0x290] = v9;
  STACK[0x2A0] = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11 + 8 * (((*v6 == 0) * (591 * (v7 ^ 0x94A) - 2924)) ^ v7))
                                                                                               - (v7 ^ 0xC1Eu)
                                                                                               + 1357))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10001A508@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ a2) + 6197) * v2) ^ (a1 + 327))))();
}

uint64_t sub_10001A52C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  STACK[0x8F8] = STACK[0x9C8];
  LODWORD(STACK[0x8B4]) = STACK[0x604];
  return (*(uint64_t (**)(void))(v1 + 8 * a1))();
}

uint64_t sub_10001BD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int64x2_t v11;
  int64x2_t v12;
  int64x2_t v13;
  unint64_t v14;
  int64x2_t v15;
  int64x2_t v16;
  int64x2_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int64x2_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int64x2_t v25;
  int64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int64x2_t v29;
  int64x2_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int64x2_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int64x2_t v37;
  int64x2_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int8x16_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int8x16_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int8x16_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int8x16_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int8x16_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int8x16x4_t v106;

  STACK[0x500] = *(_QWORD *)(a2 + v8 - 8);
  v11.i64[0] = a2 + v8 - 3;
  v11.i64[1] = a2 + v8 + a5;
  *(int64x2_t *)&STACK[0x4F0] = v11;
  v12.i64[0] = a2 + v8 - 1;
  v12.i64[1] = a2 + v8 - 2;
  v13.i64[0] = a2 + v8 - 5;
  v13.i64[1] = a2 + v8 - 6;
  v14 = STACK[0x5E8];
  v15.i64[0] = a2 + v8 - 7;
  v15.i64[1] = a2 + v8 - 8;
  v16 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v11, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v11, 8uLL)), *(int8x16_t *)&STACK[0x510]), *(int64x2_t *)&STACK[0x550]);
  v17 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v12, 8uLL)), *(int8x16_t *)&STACK[0x510]), *(int64x2_t *)&STACK[0x550]);
  v18 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v13, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v13, 8uLL)), *(int8x16_t *)&STACK[0x510]), *(int64x2_t *)&STACK[0x550]);
  v19 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v15, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v15, 8uLL)), *(int8x16_t *)&STACK[0x510]), *(int64x2_t *)&STACK[0x550]);
  v20 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v19, 1uLL), *(int8x16_t *)&STACK[0x490]), v19);
  v21 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v18, 1uLL), *(int8x16_t *)&STACK[0x490]), v18);
  v22 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v17, 1uLL), *(int8x16_t *)&STACK[0x490]), v17);
  *(int64x2_t *)&STACK[0x4E0] = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v16, 1uLL), *(int8x16_t *)&STACK[0x490]), v16);
  v23 = (int8x16_t)vaddq_s64(v21, *(int64x2_t *)&STACK[0x4B0]);
  v24 = (int8x16_t)vaddq_s64(v20, *(int64x2_t *)&STACK[0x4B0]);
  v25 = (int64x2_t)veorq_s8(v24, *(int8x16_t *)&STACK[0x590]);
  v26 = (int64x2_t)veorq_s8(v23, *(int8x16_t *)&STACK[0x590]);
  v27 = (int64x2_t)veorq_s8(v23, *(int8x16_t *)&STACK[0x480]);
  v28 = (int64x2_t)veorq_s8(v24, *(int8x16_t *)&STACK[0x480]);
  v29 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v25, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 8uLL)), v28);
  v30 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v26, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v26, 8uLL)), v27);
  v31 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v30, 1uLL), *(int8x16_t *)&STACK[0x570]), v30), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x3F0]);
  v32 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v29, 1uLL), *(int8x16_t *)&STACK[0x570]), v29), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x3F0]);
  v33 = (int64x2_t)veorq_s8((int8x16_t)v32, vorrq_s8((int8x16_t)vshlq_n_s64(v28, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v28, 0x3DuLL)));
  v34 = (int64x2_t)veorq_s8((int8x16_t)v31, vorrq_s8((int8x16_t)vshlq_n_s64(v27, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v27, 0x3DuLL)));
  v35 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v31, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v31, 8uLL)), v34);
  v36 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v32, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v32, 8uLL)), v33);
  v37 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v35, *(int8x16_t *)&STACK[0x400]), (int64x2_t)vorrq_s8(v35, *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3D0]), *(int8x16_t *)&STACK[0x3E0]);
  v38 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v36, *(int8x16_t *)&STACK[0x400]), (int64x2_t)vorrq_s8(v36, *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3D0]), *(int8x16_t *)&STACK[0x3E0]);
  v39 = (int64x2_t)veorq_s8((int8x16_t)v38, vorrq_s8((int8x16_t)vshlq_n_s64(v33, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v33, 0x3DuLL)));
  v40 = (int64x2_t)veorq_s8((int8x16_t)v37, vorrq_s8((int8x16_t)vshlq_n_s64(v34, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v34, 0x3DuLL)));
  v41 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v37, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v37, 8uLL)), v40);
  v42 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v38, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v38, 8uLL)), v39);
  v43 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v42, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v42, 1uLL), *(int8x16_t *)&STACK[0x5A0])), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x4A0]);
  v44 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v41, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v41, 1uLL), *(int8x16_t *)&STACK[0x5A0])), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x4A0]);
  v45 = (int64x2_t)veorq_s8((int8x16_t)v44, vorrq_s8((int8x16_t)vshlq_n_s64(v40, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 0x3DuLL)));
  v46 = (int64x2_t)veorq_s8((int8x16_t)v43, vorrq_s8((int8x16_t)vshlq_n_s64(v39, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v39, 0x3DuLL)));
  v47 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v43, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 8uLL)), v46);
  v48 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v44, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 8uLL)), v45);
  v49 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v48, 1uLL), *(int8x16_t *)&STACK[0x5B0]), v48), *(int64x2_t *)&STACK[0x530]), *(int8x16_t *)&STACK[0x580]);
  v50 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v47, 1uLL), *(int8x16_t *)&STACK[0x5B0]), v47), *(int64x2_t *)&STACK[0x530]), *(int8x16_t *)&STACK[0x580]);
  v51 = (int64x2_t)veorq_s8((int8x16_t)v50, vorrq_s8((int8x16_t)vshlq_n_s64(v46, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 0x3DuLL)));
  v52 = (int64x2_t)veorq_s8((int8x16_t)v49, vorrq_s8((int8x16_t)vshlq_n_s64(v45, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 0x3DuLL)));
  v53 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v50, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v50, 8uLL)), v51), *(int8x16_t *)&STACK[0x4C0]);
  v54 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v52), *(int8x16_t *)&STACK[0x4C0]);
  v55 = (int64x2_t)veorq_s8((int8x16_t)v54, vorrq_s8((int8x16_t)vshlq_n_s64(v52, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v52, 0x3DuLL)));
  v56 = (int64x2_t)veorq_s8((int8x16_t)v53, vorrq_s8((int8x16_t)vshlq_n_s64(v51, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 0x3DuLL)));
  v57 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v53, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 8uLL)), v56);
  v58 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v54, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 8uLL)), v55);
  v59 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x520], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v57), (int64x2_t)vorrq_s8(v57, *(int8x16_t *)&STACK[0x540]))), *(int8x16_t *)&STACK[0x470]);
  v60 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x520], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v58), (int64x2_t)vorrq_s8(v58, *(int8x16_t *)&STACK[0x540]))), *(int8x16_t *)&STACK[0x470]);
  v61 = (int64x2_t)veorq_s8((int8x16_t)v60, vorrq_s8((int8x16_t)vshlq_n_s64(v55, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 0x3DuLL)));
  v62 = (int8x16_t)vdupq_n_s64(v7);
  v63 = (int8x16_t)vaddq_s64(v22, *(int64x2_t *)&STACK[0x4B0]);
  v64 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v59, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v59, vorrq_s8((int8x16_t)vshlq_n_s64(v56, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 0x3DuLL))));
  v65 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v60, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 8uLL)), v61);
  v106.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v64, 1uLL), *(int8x16_t *)&STACK[0x460]), v64), *(int64x2_t *)&STACK[0x450]), *(int8x16_t *)&STACK[0x440]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v15, 3uLL), v62)));
  v106.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v65, 1uLL), *(int8x16_t *)&STACK[0x460]), v65), *(int64x2_t *)&STACK[0x450]), *(int8x16_t *)&STACK[0x440]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v13, 3uLL), v62)));
  v66 = (int64x2_t)veorq_s8(v63, *(int8x16_t *)&STACK[0x590]);
  v67 = (int64x2_t)veorq_s8(v63, *(int8x16_t *)&STACK[0x480]);
  v68 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67);
  v69 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v68, 1uLL), *(int8x16_t *)&STACK[0x570]), v68), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x3F0]);
  v70 = (int64x2_t)veorq_s8((int8x16_t)v69, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v71 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v69, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 8uLL)), v70);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v71, *(int8x16_t *)&STACK[0x400]), (int64x2_t)vorrq_s8(v71, *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3D0]), *(int8x16_t *)&STACK[0x3E0]);
  v73 = (int64x2_t)veorq_s8((int8x16_t)v72, vorrq_s8((int8x16_t)vshlq_n_s64(v70, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 0x3DuLL)));
  v74 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v73);
  v75 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v74, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v74, 1uLL), *(int8x16_t *)&STACK[0x5A0])), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x4A0]);
  v76 = (int64x2_t)veorq_s8((int8x16_t)v75, vorrq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 0x3DuLL)));
  v77 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v76);
  v78 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v77, 1uLL), *(int8x16_t *)&STACK[0x5B0]), v77), *(int64x2_t *)&STACK[0x530]), *(int8x16_t *)&STACK[0x580]);
  v79 = (int64x2_t)veorq_s8((int8x16_t)v78, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL)));
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), v79), *(int8x16_t *)&STACK[0x4C0]);
  v81 = (int64x2_t)veorq_s8((int8x16_t)v80, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)));
  v82 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), v81);
  v83 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x520], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v82), (int64x2_t)vorrq_s8(v82, *(int8x16_t *)&STACK[0x540]))), *(int8x16_t *)&STACK[0x470]);
  v84 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v83, vorrq_s8((int8x16_t)vshlq_n_s64(v81, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 0x3DuLL))));
  v85 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x4E0], *(int64x2_t *)&STACK[0x4B0]);
  v106.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v84, 1uLL), *(int8x16_t *)&STACK[0x460]), v84), *(int64x2_t *)&STACK[0x450]), *(int8x16_t *)&STACK[0x440]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v12, 3uLL), v62)));
  v86 = (int64x2_t)veorq_s8(v85, *(int8x16_t *)&STACK[0x590]);
  v87 = (int64x2_t)veorq_s8(v85, *(int8x16_t *)&STACK[0x480]);
  v88 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), v87);
  v89 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v88, 1uLL), *(int8x16_t *)&STACK[0x570]), v88), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x3F0]);
  v90 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v87, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 0x3DuLL)));
  v91 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v90);
  v92 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v91, *(int8x16_t *)&STACK[0x400]), (int64x2_t)vorrq_s8(v91, *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3D0]), *(int8x16_t *)&STACK[0x3E0]);
  v93 = (int64x2_t)veorq_s8((int8x16_t)v92, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)));
  v94 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v92, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 8uLL)), v93);
  v95 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v94, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v94, 1uLL), *(int8x16_t *)&STACK[0x5A0])), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x4A0]);
  v96 = (int64x2_t)veorq_s8((int8x16_t)v95, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL)));
  v97 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v95, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 8uLL)), v96);
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v97, 1uLL), *(int8x16_t *)&STACK[0x5B0]), v97), *(int64x2_t *)&STACK[0x530]), *(int8x16_t *)&STACK[0x580]);
  v99 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 0x3DuLL)));
  v100 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99), *(int8x16_t *)&STACK[0x4C0]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)v100, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  v102 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v101);
  v103 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x520], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v102), (int64x2_t)vorrq_s8(v102, *(int8x16_t *)&STACK[0x540]))), *(int8x16_t *)&STACK[0x470]);
  v104 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL))));
  v106.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v104, 1uLL), *(int8x16_t *)&STACK[0x460]), v104), *(int64x2_t *)&STACK[0x450]), *(int8x16_t *)&STACK[0x440]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x4F0], 3uLL), v62)));
  *(int8x8_t *)(a3 + v8) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v106, v5[204])), (int8x8_t)STACK[0x500]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((v9 != v8) * v6) ^ v10)) - 8))();
}

uint64_t sub_10001C42C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W8>)
{
  uint64_t v5;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a4 + 8 * (a3 ^ (3168 * (v5 == STACK[0x2E0])))) - ((a3 + a5) & 0x521DED73) + 1357))(STACK[0x2F0], a1, a2, STACK[0x2D0], STACK[0x5D0], 0x1C368D080BF93C72, 0x60D2A7EC8CACD6F1, 0x815AB0F504C7A0D3);
}

uint64_t sub_10001C5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(uint64_t, unint64_t))(STACK[0x5E8] + 8 * (v4 + 2881)))(a1, STACK[0x320] + a4 + 0x7806103348021025);
}

uint64_t sub_10001C7A0@<X0>(int a1@<W4>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 + 4701)) - (a2 | v2) + 1143))();
}

uint64_t sub_10001C89C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 - 220) = (v0 + 1985905556) ^ (753993959
                                             * (((((v1 - 224) | 0x1C3CE74E) ^ 0xFFFFFFFE) - (~(v1 - 224) | 0xE3C318B1)) ^ 0x3C1BEA90));
  sub_100002C08(v1 - 224);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((*(_BYTE *)(v1 - 224) == 5) * (((v0 - 4922) | 0x83A) - 3281)) ^ v0))
                            - (v0 ^ 0x183ELL)))();
}

uint64_t sub_10001CAE4()
{
  int v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x650] = v1;
  LODWORD(STACK[0x718]) = v2;
  STACK[0x830] = 0xAC3481600FFE2898;
  LODWORD(STACK[0x99C]) = 680845731;
  LODWORD(STACK[0xA50]) = 680845731;
  STACK[0x7D0] = 0x73C92FE99193FD00;
  STACK[0x710] = 0xB56F0B975C5A0B40;
  return (*(uint64_t (**)(void))(v3 + 8 * ((26 * (((v1 == 0) ^ (v0 - 20)) & 1)) | v0)))();
}

uint64_t sub_10001D528@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned __int8 v5;
  uint64_t v6;

  v4 = a1 ^ v1;
  v5 = (a1 ^ v1) - 18;
  v6 = *(_QWORD *)(v2 - 0x73C92FE99193FD00);
  STACK[0x790] = 0;
  STACK[0x960] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2526 * (((v6 == 0x1FCC246200528390) ^ v5) & 1)) ^ v4))
                            - (((v4 - 2859) | 0x51u) ^ 0x555)))();
}

uint64_t sub_10001D624@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x790] + 24);
  STACK[0x9C0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((688 * (v2 != 0)) ^ a1)) - (a1 ^ 0x157Au) + 1357))();
}

uint64_t sub_10001E114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  int v71;
  int v72;
  int v73;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  __int128 v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;

  if (v71 == v73)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * (a5 + 1168)) - ((55 * (a5 ^ 0x57Eu)) ^ 0xA1DLL)))();
  if (v71 == 32755)
  {
    STACK[0x990] = STACK[0xA00] + a71;
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * (a5 + 567)) - 4))();
  }
  else if (v71 == 43949)
  {
    v75 = __ROR8__(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFBBLL, 8);
    v76 = (0xB9B801FEECA434A9 - (v75 & 0xF8FFFFFFFFFFFFFFLL)) & 0xB9AD7A81B5EC2FFBLL | ((v75 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                        + 0x4647FE01135BCB56) & 0x4452857E4A13D004;
    v77 = v76 ^ 0x6D37CF82E094BA3;
    v76 ^= 0x34EC8CF0B4D71111uLL;
    v78 = (__ROR8__(v77, 8) + v76) ^ 0x858543C4A1D93973;
    v79 = v78 ^ __ROR8__(v76, 61);
    v80 = (__ROR8__(v78, 8) + v79) ^ 0x17D9A711A491E013;
    v81 = v80 ^ __ROR8__(v79, 61);
    v82 = __ROR8__(v80, 8);
    v83 = (((2 * (v82 + v81)) & 0xACB885778DA1BF3CLL) - (v82 + v81) - 0x565C42BBC6D0DF9FLL) ^ 0xB07B1F03C49C18C5;
    v84 = v83 ^ __ROR8__(v81, 61);
    v85 = __ROR8__(v83, 8);
    v86 = (((2 * ((v85 + v84) ^ 0x745E17732AAE05E0)) & 0xE9F87FA560EEAEDALL)
         - ((v85 + v84) ^ 0x745E17732AAE05E0)
         - 0x74FC3FD2B077576ELL) ^ 0x67E7728340331C8DLL;
    v87 = v86 ^ __ROR8__(v84, 61);
    v88 = __ROR8__(v86, 8);
    v89 = (v88 + v87 - ((2 * (v88 + v87)) & 0x10A88EC48C887C72) + 0x854476246443E39) ^ 0xB5904C1E69378FB2;
    v90 = v89 ^ __ROR8__(v87, 61);
    v91 = __ROR8__(v89, 8);
    v92 = (((2 * (v91 + v90)) & 0x5B2138BE1383F150) - (v91 + v90) + 0x526F63A0F63E0757) ^ 0x897324E049D804C6;
    v93 = __ROR8__(v92, 8);
    v94 = __ROR8__(v90, 61);
    LOBYTE(v92) = (((((2 * (v93 + (v92 ^ v94))) | 0x3BFB92EE06AA3464) - (v93 + (v92 ^ v94)) - 0x1DFDC97703551A32) ^ 0x624E702F9DCF799ALL) >> ((8 * (((2 * a71) & 0x76) + (a71 ^ 0xBB) + LOBYTE(STACK[0xA00]) + 69)) & 0x38)) ^ *(_BYTE *)(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFBBLL);
    v95 = (__ROR8__(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFBALL, 8) & 0xF8FFFFFFFFFFFFFFLL)+ 0x4647FE01135BCB56;
    v96 = __ROR8__(v95 ^ 0xBD7E06799BE56458, 8);
    v97 = (-2
         - ((~(v96 + (v95 ^ 0x8F41F671013B3EEALL)) | 0xFCC45F51FC058F4CLL)
          + ((v96 + (v95 ^ 0x8F41F671013B3EEALL)) | 0x33BA0AE03FA70B3))) ^ 0x79411C955DDCB63FLL;
    v98 = __ROR8__(v97, 8);
    v99 = v97 ^ __ROR8__(v95 ^ 0x8F41F671013B3EEALL, 61);
    v100 = (v98 + v99) ^ 0x17D9A711A491E013;
    v101 = v100 ^ __ROR8__(v99, 61);
    v102 = (__ROR8__(v100, 8) + v101) ^ 0x19D8A247FDB338A4;
    v103 = v102 ^ __ROR8__(v101, 61);
    v104 = __ROR8__(v102, 8);
    v105 = (((2 * (v104 + v103)) & 0x5548A953C3442B3CLL) - (v104 + v103) - 0x2AA454A9E1A2159FLL) ^ 0x4DE10E8B3B485B9ELL;
    v106 = v105 ^ __ROR8__(v103, 61);
    v107 = (__ROR8__(v105, 8) + v106) ^ 0xBDC40B7C2F73B18BLL;
    v108 = v107 ^ __ROR8__(v106, 61);
    v109 = __ROR8__(v107, 8);
    v110 = (((2 * (v109 + v108)) & 0x3E013869EB7911D0) - (v109 + v108) - 0x1F009C34F5BC88E9) ^ 0x3BE3248BB5A57486;
    v111 = ((unint64_t)((((__ROR8__(v110, 8) + (v110 ^ __ROR8__(v108, 61))) ^ 0x7FB3B9589E9A63A8uLL) >> ((8 * (((2 * a71) & 0x76) + (a71 ^ 0xBB) + LOBYTE(STACK[0xA00]) + 70)) & 0x38)) ^ *(unsigned __int8 *)(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFBALL)) << 48) & 0xFFFFFFFFFFFFFFLL | ((unint64_t)v92 << 56);
    v112 = __ROR8__(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB9, 8);
    v113 = (((v112 & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56) | 0x9DD3766F1A6B977)
         - (((v112 & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56) | 0xF622C8990E594688)
         - 0x9DD3766F1A6B978;
    v114 = v113 ^ 0xB4A3311F6A43DD2FLL;
    v113 ^= 0x869CC117F09D879DLL;
    v115 = __ROR8__(v114, 8);
    v116 = (((2 * (v115 + v113)) & 0x7F180317B487F022) - (v115 + v113) - 0x3F8C018BDA43F812) ^ 0x45F6BDB084653E9DLL;
    v117 = v116 ^ __ROR8__(v113, 61);
    v118 = (__ROR8__(v116, 8) + v117) ^ 0x17D9A711A491E013;
    v119 = v118 ^ __ROR8__(v117, 61);
    v120 = __ROR8__(v118, 8);
    v121 = (((v120 + v119) | 0x416FF17F692F1DB1) - ((v120 + v119) | 0xBE900E8096D0E24ELL) - 0x416FF17F692F1DB2) ^ 0x58B75338949C2515;
    v122 = v121 ^ __ROR8__(v119, 61);
    v123 = __ROR8__(v121, 8);
    v124 = (((2 * (v123 + v122)) | 0x59FCF90B151B276) - (v123 + v122) + 0x7D301837A75726C5) ^ 0x1A7542157DBD68C4;
    v125 = v124 ^ __ROR8__(v122, 61);
    v126 = (__ROR8__(v124, 8) + v125) ^ 0xBDC40B7C2F73B18BLL;
    v127 = v126 ^ __ROR8__(v125, 61);
    v128 = (__ROR8__(v126, 8) + v127) ^ 0xDB1C4740BFE60391;
    v129 = v111 & 0xFFFF00FFFFFFFFFFLL | ((unint64_t)((((__ROR8__(v128, 8)
                                                                               + (v128 ^ __ROR8__(v127, 61))) ^ 0x7FB3B9589E9A63A8) >> ((8 * (((2 * a71) & 0x76) + (a71 ^ 0xBB) + LOBYTE(STACK[0xA00]) + 71)) & 0x38)) ^ *(_BYTE *)(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB9)) << 40);
    v130 = __ROR8__(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB8, 8);
    v131 = -2
         - (((0x39B801FEECA434A9 - (v130 & 0xF8FFFFFFFFFFFFFFLL)) | 0x849B8B2EAD9AD046)
          + (((v130 & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56) | 0x7B6474D152652FB9));
    v132 = (__ROR8__(v131 ^ 0x39E58D57367FB41ELL, 8) + (v131 ^ 0xBDA7D5FACA1EEACLL)) ^ 0x858543C4A1D93973;
    *((_QWORD *)&v134 + 1) = v131 ^ 0xBDA7D5FACA1EEACLL;
    *(_QWORD *)&v134 = v131;
    v133 = v134 >> 61;
    *(_QWORD *)&v134 = __ROR8__(v132, 8);
    v135 = v132 ^ v133;
    v136 = (v134 + v135 - ((2 * (v134 + v135)) & 0x9FDF335DE31268F8) + 0x4FEF99AEF189347CLL) ^ 0x58363EBF5518D46FLL;
    v137 = v136 ^ __ROR8__(v135, 61);
    *(_QWORD *)&v134 = __ROR8__(v136, 8);
    v138 = (((v134 + v137) | 0x8217DBF1F228A18ELL) - ((v134 + v137) | 0x7DE8240E0DD75E71) + 0x7DE8240E0DD75E71) ^ 0x9BCF79B60F9B992ALL;
    v139 = v138 ^ __ROR8__(v137, 61);
    *(_QWORD *)&v134 = __ROR8__(v138, 8);
    v140 = (-2 - ((~(v134 + v139) | 0x7DE3BA4DFDEE6057) + ((v134 + v139) | 0x821C45B202119FA8))) ^ 0xE5591F90D8FBD1A8;
    v141 = v140 ^ __ROR8__(v139, 61);
    *(_QWORD *)&v134 = __ROR8__(v140, 8);
    v142 = (v134 + v141 - ((2 * (v134 + v141)) & 0x46106E4F75E564BALL) + 0x23083727BAF2B25DLL) ^ 0x9ECC3C5B958103D6;
    v143 = v142 ^ __ROR8__(v141, 61);
    v144 = (__ROR8__(v142, 8) + v143) ^ 0xDB1C4740BFE60391;
    v145 = v144 ^ __ROR8__(v143, 61);
    *(_QWORD *)&v134 = __ROR8__(v144, 8);
    v146 = v129 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)((((((2 * ((_QWORD)v134 + v145)) & 0x10510689DF8DA622)
                                                                               - ((_QWORD)v134
                                                                                + v145)
                                                                               - 0x8288344EFC6D312) ^ 0x8864C5E38EA34F46) >> ((8 * (((2 * a71) & 0x76) + (a71 ^ 0xBB) + LOBYTE(STACK[0xA00]) + 72)) & 0x38)) ^ *(_BYTE *)(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB8)) << 32);
    *(_QWORD *)&v134 = __ROR8__(((2 * a71) & 0xDBBBFFBFFBE3FF76)+ (a71 ^ 0x6DDDFFDFFDF1FFBBLL)+ STACK[0xA00]- 0x6DDDFFDFFDF1FFB7, 8);
    v147 = ((2 * (v134 & 0xF8FFFFFFFFFFFFFFLL) + 0xC8FFC0226B796ACLL) & 0x10BB6598D38773B4)
         - (v134 & 0xF8FFFFFFFFFFFFFFLL)
         - 0x4EA5B0CD7D1F8531;
    v148 = v147 ^ 0x4ADC4B4A0DD9227DLL;
    v147 ^= 0x78E3BB42970778CFuLL;
    *(_QWORD *)&v134 = __ROR8__(v148, 8);
    v149 = (-2 - ((~(v134 + v147) | 0x1EFDBCF343D9B1D7) + ((v134 + v147) | 0xE102430CBC264E28))) ^ 0x9B78FF37E20088A4;
    v150 = v149 ^ __ROR8__(v147, 61);
    *(_QWORD *)&v134 = __ROR8__(v149, 8);
    v151 = (((2 * (v134 + v150)) | 0x6154351D40F03C44) - (v134 + v150) + 0x4F55E5715F87E1DELL) ^ 0xA773BD9F04E9FE31;
    v152 = v151 ^ __ROR8__(v150, 61);
    *(_QWORD *)&v134 = __ROR8__(v151, 8);
    v153 = (((2 * (v134 + v152)) | 0xD23A1895E14B7794) - (v134 + v152) + 0x16E2F3B50F5A4436) ^ 0xF0C5AE0D0D16836ELL;
    v154 = v153 ^ __ROR8__(v152, 61);
    *(_QWORD *)&v134 = __ROR8__(v153, 8);
    v155 = (((2 * (v134 + v154)) | 0x805F3A7EB087EF48) - (v134 + v154) - 0x402F9D3F5843F7A4) ^ 0xD89538E27D56465BLL;
    v156 = v155 ^ __ROR8__(v154, 61);
    *(_QWORD *)&v134 = __ROR8__(v155, 8);
    v157 = (((2 * ((v134 + v156) ^ 0x403C01B4661982A8)) | 0xA892B6C5AA812040)
          - ((v134 + v156) ^ 0x403C01B4661982A8)
          - 0x54495B62D5409020) ^ 0xA9B151AA9C2AA303;
    v158 = v157 ^ __ROR8__(v156, 61);
    v159 = (__ROR8__(v157, 8) + v158) ^ 0xDB1C4740BFE60391;
    v160 = v159 ^ __ROR8__(v158, 61);
    *(_QWORD *)&v134 = __ROR8__(v159, 8);
    v161 = v146 & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)((((((2 * ((_QWORD)v134 + v160)) | 0x92D08D764A73224)
                                                                               - ((_QWORD)v134
                                                                                + v160)
                                                                               - 0x496846BB2539912) ^ 0x7B253D332CC9FABALL) >> ((8 * (((2 * a71) & 0x76) + (a71 ^ 0xBB) + LOBYTE(STACK[0xA00]) + 73)) & 0x38)) ^ *(_BYTE *)(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB7)) << 24);
    v162 = ((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB6;
    v163 = ((v162 >> 8) + 0x4647FE01135BCB56 + ((v162 << 56) & 0xF800000000000000)) ^ 0x83163E5AE4A1B355;
    v164 = ((2 * v163) & 0x6BBE76DD242A4C62) - v163 + 0x4A20C4916DEAD9CELL;
    *(_QWORD *)&v134 = __ROR8__(v164 ^ 0x7448FCB212AE0EC3, 8);
    v164 ^= 0x46770CBA88705471uLL;
    v165 = __ROR8__((((v134 + v164) | 0xDC0AB0D7F6F262D3) - ((v134 + v164) | 0x23F54F28090D9D2CLL) + 0x23F54F28090D9D2CLL) ^ 0x598FF313572B5BA0, 8);
    v166 = (((v134 + v164) | 0xDC0AB0D7F6F262D3) - ((v134 + v164) | 0x23F54F28090D9D2CLL) + 0x23F54F28090D9D2CLL) ^ 0x598FF313572B5BA0 ^ __ROR8__(v164, 61);
    v167 = (((v165 + v166) | 0xC8B27D72F1D0AE1ALL) - ((v165 + v166) | 0x374D828D0E2F51E5) + 0x374D828D0E2F51E5) ^ 0xDF6BDA6355414E09;
    v168 = __ROR8__(v167, 8);
    v169 = v167 ^ __ROR8__(v166, 61);
    v170 = (((v168 + v169) | 0xBD65A11D1FCB77D9) - ((v168 + v169) | 0x429A5EE2E0348826) + 0x429A5EE2E0348826) ^ 0xA4BD035AE2784F7DLL;
    v171 = __ROR8__(v170, 8);
    v172 = v170 ^ __ROR8__(v169, 61);
    v173 = (((v171 + v172) | 0xAE34B64D297AB9BALL) - ((v171 + v172) | 0x51CB49B2D6854645) + 0x51CB49B2D6854645) ^ 0x368E13900C6F0845;
    v174 = __ROR8__(v173, 8);
    v175 = v173 ^ __ROR8__(v172, 61);
    v176 = (((2 * (v174 + v175)) | 0x1A185FD2B1611CC0) - (v174 + v175) + 0x72F3D016A74F71A0) ^ 0x30C8249577C33FEBLL;
    v177 = v176 ^ __ROR8__(v175, 61);
    v178 = (__ROR8__(v176, 8) + v177) ^ 0xDB1C4740BFE60391;
    v179 = v161 & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)((((__ROR8__(v178, 8)
                                                                               + (v178 ^ __ROR8__(v177, 61))) ^ 0x7FB3B9589E9A63A8) >> ((8 * (((2 * a71) & 0x76) + (a71 ^ 0xBB) + LOBYTE(STACK[0xA00]) + 74)) & 0x38)) ^ *(_BYTE *)v162) << 16);
    *(_QWORD *)&v134 = __ROR8__(((2 * a71) & 0xDBBBFFBFFBE3FF76)+ (a71 ^ 0x6DDDFFDFFDF1FFBBLL)+ STACK[0xA00]- 0x6DDDFFDFFDF1FFB5, 8);
    v180 = (v134 & 0xF8FFFFFFFFFFFFFFLL)
         - ((2 * (v134 & 0xF8FFFFFFFFFFFFFFLL) - 0x737003FDD9486954) & 0xCECB16B082B43A36)
         - 0x525276A6AB4A178FLL;
    v181 = v180 ^ 0xDA1B8D21DABF7943;
    v180 ^= 0xE8247D29406123F1;
    v182 = (__ROR8__(v181, 8) + v180) ^ 0x858543C4A1D93973;
    v183 = __ROR8__(v182, 8);
    v184 = v182 ^ __ROR8__(v180, 61);
    v185 = (((2 * (v183 + v184)) | 0x281C847D70DDFCD6) - (v183 + v184) - 0x140E423EB86EFE6BLL) ^ 0x3D7E52F1CFF1E78;
    v186 = v185 ^ __ROR8__(v184, 61);
    v187 = (__ROR8__(v185, 8) + v186) ^ 0x19D8A247FDB338A4;
    v188 = v187 ^ __ROR8__(v186, 61);
    v189 = (__ROR8__(v187, 8) + v188) ^ 0x98BAA5DD2515B1FFLL;
    v190 = v189 ^ __ROR8__(v188, 61);
    *(_QWORD *)&v134 = __ROR8__(v189, 8);
    v191 = (-2 - ((~(v134 + v190) | 0x548DA6766CBE516) + ((v134 + v190) | 0xFAB7259899341AE9))) ^ 0xB88CD11B49B8549DLL;
    v192 = v191 ^ __ROR8__(v190, 61);
    *(_QWORD *)&v134 = __ROR8__(v191, 8);
    v193 = (((2 * (v134 + v192)) & 0x11174FDFEEF765F2) - (v134 + v192) + 0x7774581008844D06) ^ 0xAC681F50B7624E97;
    v194 = v179 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)((((__ROR8__(v193, 8)
                                                                               + (v193 ^ __ROR8__(v192, 61))) ^ 0x7FB3B9589E9A63A8) >> ((8 * (((2 * a71) & 0x76) + (a71 ^ 0xBB) + LOBYTE(STACK[0xA00]) + 75)) & 0x38)) ^ *(_BYTE *)(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB5)) << 8);
    *(_QWORD *)&v134 = __ROR8__(((2 * a71) & 0xDBBBFFBFFBE3FF76)+ (a71 ^ 0x6DDDFFDFFDF1FFBBLL)+ STACK[0xA00]- 0x6DDDFFDFFDF1FFB4, 8);
    v195 = (0xB9B801FEECA434A9 - (v134 & 0xF8FFFFFFFFFFFFFFLL)) & 0xB909BC72A7049689 | ((v134 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                          + 0x4647FE01135BCB56) & 0x46F6438D58FB6976;
    v196 = v195 ^ 0x477BA0B3CE1F2D1;
    v195 ^= 0x36484A03A63FA863uLL;
    *(_QWORD *)&v134 = __ROR8__(v196, 8);
    v197 = (((2 * (v134 + v195)) & 0xE3F4FFB9D3832A8CLL) - (v134 + v195) + 0xE058023163E6AB9) ^ 0x8B80C3E7B7E753CALL;
    v198 = v197 ^ __ROR8__(v195, 61);
    *(_QWORD *)&v134 = __ROR8__(v197, 8);
    v199 = (-2 - ((~(v134 + v198) | 0xF1AACB9C5E886C11) + ((v134 + v198) | 0xE553463A17793EELL))) ^ 0xE6736C8DFA198C02;
    v200 = v199 ^ __ROR8__(v198, 61);
    *(_QWORD *)&v134 = __ROR8__(v199, 8);
    v201 = (((2 * (v134 + v200)) & 0xD08AA649F39C8A28) - (v134 + v200) - 0x68455324F9CE4515) ^ 0x8E620E9CFB82824FLL;
    v202 = v201 ^ __ROR8__(v200, 61);
    *(_QWORD *)&v134 = __ROR8__(v201, 8);
    v203 = (((v134 + v202) | 0x523EEAB49BF25EBLL) - ((v134 + v202) | 0xFADC1154B640DA14) - 0x523EEAB49BF25ECLL) ^ 0x9D994B766CAA9414;
    v204 = v203 ^ __ROR8__(v202, 61);
    v205 = (__ROR8__(v203, 8) + v204) ^ 0xBDC40B7C2F73B18BLL;
    v206 = v205 ^ __ROR8__(v204, 61);
    v207 = (__ROR8__(v205, 8) + v206) ^ 0xDB1C4740BFE60391;
    v208 = __ROR8__(v207, 8);
    *(_QWORD *)&v134 = __ROR8__(v206, 61);
    v209 = v194 | ((((((2 * (v208 + (v207 ^ (unint64_t)v134))) & 0x38B5C0987EF06532)
                                     - (v208
                                      + (v207 ^ (unint64_t)v134))
                                     - 0x1C5AE04C3F78329ALL) ^ 0x9C16A6EB5E1DAECELL) >> ((8
                                                                                        * (((2 * a71) & 0x76)
                                                                                         + (a71 ^ 0xBB)
                                                                                         + LOBYTE(STACK[0xA00])
                                                                                         + 76)) & 0x38)) ^ *(_BYTE *)(((2 * a71) & 0xDBBBFFBFFBE3FF76) + (a71 ^ 0x6DDDFFDFFDF1FFBBLL) + STACK[0xA00] - 0x6DDDFFDFFDF1FFB4));
    STACK[0x740] = v209 - ((2 * v209) & 0x1FA5C168DBF3E2CELL) + 0xFD2E0B46DF9F167;
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * (a5 + 567)) - 4))();
  }
  else
  {
    LODWORD(STACK[0x668]) = v72;
    STACK[0x9E0] = STACK[0x868];
    v210 = STACK[0x5E8];
    STACK[0x898] = *(_QWORD *)(STACK[0x5E8] + 8 * (a5 - 739)) - 4;
    return (*(uint64_t (**)(void))(v210 + 8 * (a5 + 2094)))();
  }
}

uint64_t sub_100020740()
{
  unsigned __int8 v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xA50]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2047
                                          * (*(unsigned __int8 *)(STACK[0x830] + 0x53CB7E9FF001D7D0) == (v0 ^ 0xA9))) ^ v1))
                            - 4))();
}

uint64_t sub_1000207D4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(a1 + 12) = STACK[0x99C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v1) - ((v1 + v2) & 0xC6F20FDB ^ 0x559)))();
}

uint64_t sub_100020B00()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v2 = ((uint64_t (*)(void))STACK[0x388])();
  v3 = STACK[0x5E8];
  STACK[0x970] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 != 0) * (v0 ^ 0x687)) ^ v1)) - 4))();
}

uint64_t sub_100020DA4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 == ((v1 + v2) & 0x18A88FF1) + 330432130) * ((v1 ^ 0x1434) - 282)) ^ v1)))();
}

uint64_t sub_100022454()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v1 + 8 * v0)
                                                                                                 - 4))((__n128)vdupq_n_s64(0x38uLL), (__n128)vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL), (__n128)vdupq_n_s64(0x4647FE01135BCB56uLL), (__n128)vdupq_n_s64(0xF2828DDCF5BC98DCLL), (__n128)vdupq_n_s64(0x86BEB9118521B392), (__n128)vdupq_n_s64(0xC43F4097E13B2836), (__n128)vdupq_n_s64(0xF600B09F7BE57284), (__n128)vdupq_n_s64(0x2C0BA528104FF3B3uLL));
}

uint64_t sub_1000240A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 | 0x1600) - 5537) * (v1 == v0)) ^ v3)))();
}

uint64_t sub_100024164()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 8);
  *(_OWORD *)&STACK[0x5C0] = xmmword_100212CC0;
  return v2();
}

uint64_t sub_100024E48(_QWORD *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v2 - 0x73C92FE99193FCF8) = a1 + 0x3F9848C400A5072;
  return (*(uint64_t (**)(void))(v3 + 8 * v1))();
}

uint64_t sub_100025328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;

  *(_BYTE *)(v5 + v2) = *(_BYTE *)(a1 + v2);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 ^ (v2 + 1 == a2)) & 1) * v4) ^ (v3 + 1817))))();
}

uint64_t sub_1000254F4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  STACK[0x9A0] = STACK[0x728];
  STACK[0xA88] = *(_QWORD *)(v3 + 8 * v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 + (a1 | v2) + 1213)) - 8))();
}

uint64_t sub_1000257FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((5684 * (v5 == a5 + 968958899)) ^ (a5 - 532))) - 4))();
}

uint64_t sub_100025C8C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0xBA0] = v1;
  v3 = STACK[0x7A8];
  STACK[0xBA8] = STACK[0x7A8];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((6548 * (v1 - v3 > (unint64_t)((a1 - 736693313) & 0x2BE90DF7) - 1352)) ^ a1)))();
}

uint64_t sub_100025CD4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 - 516) ^ 0x271)))();
}

uint64_t sub_100025E60()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x768] = *(_QWORD *)(v1 + 8 * v0) + (((_DWORD)v0 + 332) | 0x17u) - 1055;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x110)))();
}

uint64_t sub_100025EE4@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x7C0] + 24);
  STACK[0x9B0] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((45 * (v2 != 0)) ^ a1)))();
}

uint64_t sub_100026010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((3814 * (v5 == (a5 ^ 0x39C12C55))) ^ (a5 + 266))) - 8))();
}

uint64_t sub_10002605C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(STACK[0xA18] + 24);
  STACK[0x7E0] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v3 != 0) * (((v1 - 2145) | 0x418) + 3431)) ^ v1))
                            - ((v1 + a1) & 0xAA8EA771 ^ 0x555)))();
}

uint64_t sub_1000261FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((1539 * (v5 == ((a5 - 374852949) & 0x1657DBF3) + 968955156)) ^ (a5 + 3749))))();
}

uint64_t sub_10002624C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x648] + 24);
  STACK[0x8C0] = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 == 0) * ((((v0 - 1330685201) & 0x4F509F35) - 2238) ^ (v0 - 214462075) & 0xCC85FDB)) | v0)))();
}

uint64_t sub_1000262B4@<X0>(unsigned int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0xBF0] = v1;
  v3 = STACK[0x800];
  STACK[0xBF8] = STACK[0x800];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((7744 * (v1 - v3 > (unint64_t)((a1 + 446927170) & 0xE55C65F9) - 1352)) ^ a1))
                            - ((a1 - 3310) ^ 0x123)))();
}

uint64_t sub_100026E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((a5 + 1808) ^ (6875 * (v5 == 968960260))))
                            - ((a5 + 1808) ^ 0xC65)))();
}

uint64_t sub_100027048()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x768] = (v0 ^ 0xFFFFFFFFFFFFFAADLL) + *(_QWORD *)(v1 + 8 * (v0 ^ 0x7C4));
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v0 ^ 0x7C4) + 271)))();
}

uint64_t sub_100027090@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 ^ 0x11C3) * (v1 == 968960260)) ^ a1)) - 8))();
}

uint64_t sub_1000272F4()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = sub_1000035BC();
  v3 = STACK[0x5E8];
  *v1 = 0xB56F0B975C5A0B40;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * v0))(v2);
}

uint64_t sub_100027840(uint64_t a1, int a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int64x2_t v13;
  int64x2_t v14;
  int64x2_t v15;
  int64x2_t v16;
  int64x2_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int64x2_t v20;
  int8x16_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;
  int64x2_t v26;
  int8x16_t v27;
  int64x2_t v28;
  int8x16_t v29;
  int64x2_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int8x16_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int64x2_t v37;
  int64x2_t v38;
  int8x16_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int64x2_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int8x16_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int8x16_t v63;
  int64x2_t v64;
  int8x16_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int8x16_t v73;
  int8x16_t v74;
  int8x16_t v75;
  uint64x2_t v76;
  int64x2_t v77;
  int8x16_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int8x16_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int8x16_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int8x16_t v96;
  int8x16_t v97;
  int64x2_t v98;
  int8x16_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int8x16_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int8x16_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int8x16_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int8x16_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int8x16_t v130;
  int8x16_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int8x16_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int8x16_t v143;
  int64x2_t v144;
  int8x16x4_t v146;
  int8x16x4_t v147;

  v14.i64[0] = a3 - 1;
  v14.i64[1] = a3 - 2;
  v15.i64[0] = a3 - 3;
  v15.i64[1] = a3 - 4;
  v16.i64[0] = a3 - 5;
  v16.i64[1] = a3 - 6;
  v17.i64[0] = a3 - 11;
  v17.i64[1] = a3 - 12;
  *(int64x2_t *)&STACK[0x500] = v17;
  v18.i64[0] = a3 - 13;
  v18.i64[1] = a3 - 14;
  *(int64x2_t *)&STACK[0x4E0] = v18;
  v19.i64[0] = a3 - 15;
  v19.i64[1] = a3 - 16;
  *(int64x2_t *)&STACK[0x4F0] = v19;
  v20.i64[0] = a3 - 7;
  v20.i64[1] = v6 + v4 + ((v3 + 2596) ^ v8);
  *(int8x16_t *)&STACK[0x4A0] = vorrq_s8((int8x16_t)vshlq_n_s64(v19, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v19, 8uLL));
  *(int8x16_t *)&STACK[0x4C0] = vorrq_s8((int8x16_t)vshlq_n_s64(v18, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v18, 8uLL));
  *(int8x16_t *)&STACK[0x4D0] = vorrq_s8((int8x16_t)vshlq_n_s64(v17, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v17, 8uLL));
  v21 = *(int8x16_t *)&STACK[0x460];
  v22 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v16, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v16, 8uLL)), *(int8x16_t *)&STACK[0x460]);
  *(int64x2_t *)&STACK[0x480] = v14;
  v23 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v15, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v15, 8uLL)), v21);
  *(int64x2_t *)&STACK[0x490] = v20;
  v24 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v14, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v14, 8uLL)), v21);
  v25 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v20, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v20, 8uLL)), v21);
  v26 = *(int64x2_t *)&STACK[0x450];
  v27 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v22, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v22), *(int64x2_t *)&STACK[0x450]);
  v28 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v24, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v24);
  v29 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v23, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v23), *(int64x2_t *)&STACK[0x450]);
  *(int64x2_t *)&STACK[0x4B0] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v25, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v25);
  v30 = (int64x2_t)veorq_s8(v29, *(int8x16_t *)&STACK[0x5B0]);
  v31 = (int64x2_t)veorq_s8(v27, *(int8x16_t *)&STACK[0x5B0]);
  v32 = (int64x2_t)veorq_s8(v27, *(int8x16_t *)&STACK[0x5A0]);
  v33 = (int64x2_t)veorq_s8(v29, *(int8x16_t *)&STACK[0x5A0]);
  v34 = *(int8x16_t *)&STACK[0x440];
  v35 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v31, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v31, 8uLL)), v32), *(int8x16_t *)&STACK[0x440]);
  v36 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v30, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v30, 8uLL)), v33), *(int8x16_t *)&STACK[0x440]);
  v37 = (int64x2_t)veorq_s8((int8x16_t)v36, vorrq_s8((int8x16_t)vshlq_n_s64(v33, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v33, 0x3DuLL)));
  v38 = (int64x2_t)veorq_s8((int8x16_t)v35, vorrq_s8((int8x16_t)vshlq_n_s64(v32, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v32, 0x3DuLL)));
  v39 = *(int8x16_t *)&STACK[0x400];
  v40 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v36, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v36, 8uLL)), v37), *(int8x16_t *)&STACK[0x400]);
  v41 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v35, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 8uLL)), v38), *(int8x16_t *)&STACK[0x400]);
  v42 = (int64x2_t)veorq_s8((int8x16_t)v41, vorrq_s8((int8x16_t)vshlq_n_s64(v38, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v38, 0x3DuLL)));
  v43 = (int64x2_t)veorq_s8((int8x16_t)v40, vorrq_s8((int8x16_t)vshlq_n_s64(v37, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v37, 0x3DuLL)));
  v44 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v40, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 8uLL)), v43);
  v45 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v41, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v41, 8uLL)), v42);
  v46 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v44, *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v44, *(int8x16_t *)&STACK[0x510])), *(int64x2_t *)&STACK[0x510]), *(int8x16_t *)&STACK[0x580]);
  v47 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v45, *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v45, *(int8x16_t *)&STACK[0x510])), *(int64x2_t *)&STACK[0x510]), *(int8x16_t *)&STACK[0x580]);
  v48 = (int64x2_t)veorq_s8((int8x16_t)v47, vorrq_s8((int8x16_t)vshlq_n_s64(v42, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 0x3DuLL)));
  v49 = (int64x2_t)veorq_s8((int8x16_t)v46, vorrq_s8((int8x16_t)vshlq_n_s64(v43, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 0x3DuLL)));
  v50 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v46, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 8uLL)), v49);
  v51 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v47, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 8uLL)), v48);
  v52 = (int64x2_t)veorq_s8(v51, *(int8x16_t *)&STACK[0x570]);
  v53 = *(int8x16_t *)&STACK[0x3F0];
  v54 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v51, v9), *(int8x16_t *)&STACK[0x3F0]), v52), (int64x2_t)vandq_s8((int8x16_t)v52, v9));
  v55 = (int64x2_t)veorq_s8(v50, *(int8x16_t *)&STACK[0x570]);
  v56 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v50, v9), *(int8x16_t *)&STACK[0x3F0]), v55), (int64x2_t)vandq_s8((int8x16_t)v55, v9)), *(int8x16_t *)&STACK[0x560]);
  v57 = (int64x2_t)veorq_s8(v54, *(int8x16_t *)&STACK[0x560]);
  v58 = vorrq_s8((int8x16_t)vshlq_n_s64(v49, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 0x3DuLL));
  v59 = (int64x2_t)veorq_s8((int8x16_t)v57, vorrq_s8((int8x16_t)vshlq_n_s64(v48, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 0x3DuLL)));
  v60 = (int64x2_t)veorq_s8((int8x16_t)v56, v58);
  v61 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v56, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 8uLL)), v60);
  v62 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v57, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 8uLL)), v59);
  v63 = *(int8x16_t *)&STACK[0x3D0];
  v64 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v62, 1uLL), *(int8x16_t *)&STACK[0x550]), v62), *(int64x2_t *)&STACK[0x540]), *(int8x16_t *)&STACK[0x3E0]);
  v65 = vorrq_s8((int8x16_t)vshlq_n_s64(v59, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 0x3DuLL));
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v61, 1uLL), *(int8x16_t *)&STACK[0x550]), v61), *(int64x2_t *)&STACK[0x540]), *(int8x16_t *)&STACK[0x3E0]);
  v67 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v60, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 0x3DuLL)));
  v68 = (int64x2_t)veorq_s8((int8x16_t)v64, v65);
  v69 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v64, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 8uLL)), v68);
  v70 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67);
  v71 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v70, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v70, 1uLL), *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x530]);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v69, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v69, 1uLL), *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x530]);
  v73 = (int8x16_t)vaddq_s64(v28, v26);
  v74 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v71, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL))));
  v75 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v72, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL))));
  v76 = (uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, vaddq_s64((int64x2_t)vornq_s8(v10, v74), (int64x2_t)vorrq_s8(v74, *(int8x16_t *)&STACK[0x3B0]))), v12);
  v146.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, vaddq_s64((int64x2_t)vornq_s8(v10, v75), (int64x2_t)vorrq_s8(v75, *(int8x16_t *)&STACK[0x3B0]))), v12), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v16, 3uLL), v11)));
  v146.val[1] = (int8x16_t)vshlq_u64(v76, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v15, 3uLL), v11)));
  v77 = (int64x2_t)veorq_s8(v73, *(int8x16_t *)&STACK[0x5B0]);
  v78 = *(int8x16_t *)&STACK[0x5A0];
  v79 = (int64x2_t)veorq_s8(v73, *(int8x16_t *)&STACK[0x5A0]);
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v79), *(int8x16_t *)&STACK[0x440]);
  v81 = (int64x2_t)veorq_s8((int8x16_t)v80, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)));
  v82 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), v81), *(int8x16_t *)&STACK[0x400]);
  v83 = (int64x2_t)veorq_s8((int8x16_t)v82, vorrq_s8((int8x16_t)vshlq_n_s64(v81, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 0x3DuLL)));
  v84 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL)), v83);
  v85 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v84, *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v84, *(int8x16_t *)&STACK[0x510])), *(int64x2_t *)&STACK[0x510]), *(int8x16_t *)&STACK[0x580]);
  v86 = (int64x2_t)veorq_s8((int8x16_t)v85, vorrq_s8((int8x16_t)vshlq_n_s64(v83, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 0x3DuLL)));
  v87 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), v86);
  v88 = (int64x2_t)veorq_s8(v87, *(int8x16_t *)&STACK[0x570]);
  v89 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v87, v9), *(int8x16_t *)&STACK[0x3F0]), v88), (int64x2_t)vandq_s8((int8x16_t)v88, v9)), *(int8x16_t *)&STACK[0x560]);
  v90 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v86, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 0x3DuLL)));
  v91 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v90);
  v92 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v91, 1uLL), *(int8x16_t *)&STACK[0x550]), v91), *(int64x2_t *)&STACK[0x540]), *(int8x16_t *)&STACK[0x3E0]);
  v93 = (int64x2_t)veorq_s8((int8x16_t)v92, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)));
  v94 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v92, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 8uLL)), v93);
  v95 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v94, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v94, 1uLL), *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x530]);
  v96 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v95, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v95, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL))));
  v97 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x4B0], v26);
  v146.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, vaddq_s64((int64x2_t)vornq_s8(v10, v96), (int64x2_t)vorrq_s8(v96, *(int8x16_t *)&STACK[0x3B0]))), v12), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x480], 3uLL), v11)));
  v98 = (int64x2_t)veorq_s8(v97, *(int8x16_t *)&STACK[0x5B0]);
  v99 = *(int8x16_t *)&STACK[0x5B0];
  v100 = (int64x2_t)veorq_s8(v97, *(int8x16_t *)&STACK[0x5A0]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v100), *(int8x16_t *)&STACK[0x440]);
  v102 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v103 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v102), *(int8x16_t *)&STACK[0x400]);
  v104 = (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v102, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 0x3DuLL)));
  v105 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v104);
  v106 = *(int64x2_t *)&STACK[0x510];
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v105, *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v105, *(int8x16_t *)&STACK[0x510])), *(int64x2_t *)&STACK[0x510]), *(int8x16_t *)&STACK[0x580]);
  v108 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v109 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v108);
  v110 = (int64x2_t)veorq_s8(v109, *(int8x16_t *)&STACK[0x570]);
  v111 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v109, v9), *(int8x16_t *)&STACK[0x3F0]), v110), (int64x2_t)vandq_s8((int8x16_t)v110, v9)), *(int8x16_t *)&STACK[0x560]);
  v112 = (int64x2_t)veorq_s8((int8x16_t)v111, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v113 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v112);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v113, 1uLL), *(int8x16_t *)&STACK[0x550]), v113), *(int64x2_t *)&STACK[0x540]), *(int8x16_t *)&STACK[0x3E0]);
  v115 = *(int8x16_t *)&STACK[0x3E0];
  v116 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v117 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v116);
  v118 = *(int64x2_t *)&STACK[0x3C0];
  v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v117, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v117, 1uLL), *(int8x16_t *)&STACK[0x3D0])), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x530]);
  v120 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL))));
  v121 = *(int8x16_t *)&STACK[0x3B0];
  v122 = vaddq_s64((int64x2_t)vornq_s8(v10, (int8x16_t)v120), (int64x2_t)vorrq_s8((int8x16_t)v120, *(int8x16_t *)&STACK[0x3B0]));
  v120.i64[0] = a3 - 9;
  v120.i64[1] = a3 - 10;
  v123 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x4A0], v21);
  v124 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x4C0], v21);
  v146.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, v122), v12), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x490], 3uLL), v11)));
  v125 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x4D0], v21);
  v126 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), v21);
  v127 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v123, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v123);
  v128 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v124, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v124);
  v129 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v125, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v125);
  *(int64x2_t *)&STACK[0x4C0] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v126, 1uLL), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]), v126);
  v130 = (int8x16_t)vaddq_s64(v127, v26);
  v131 = (int8x16_t)vaddq_s64(v128, v26);
  v132 = v26;
  *(int8x16_t *)&STACK[0x4D0] = vqtbl4q_s8(v146, *(int8x16_t *)&STACK[0x520]);
  v146.val[1] = veorq_s8(v131, v99);
  v146.val[2] = veorq_s8(v130, v99);
  v146.val[3] = veorq_s8(v130, v78);
  v133 = (int64x2_t)veorq_s8(v131, v78);
  v146.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 8uLL)), (int64x2_t)v146.val[3]), v34);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), v133), v34);
  v134 = v34;
  v135 = (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v133, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 0x3DuLL)));
  v146.val[3] = veorq_s8(v146.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[3], 0x3DuLL)));
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), v135), v39);
  v146.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 8uLL)), (int64x2_t)v146.val[3]), v39);
  v146.val[3] = veorq_s8(v146.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[3], 0x3DuLL)));
  v136 = (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v135, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), v136);
  v146.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 8uLL)), (int64x2_t)v146.val[3]);
  v137 = v106;
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v146.val[1], *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v146.val[1], (int8x16_t)v106)), v106), *(int8x16_t *)&STACK[0x580]);
  v146.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v146.val[2], *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v146.val[2], (int8x16_t)v106)), v106), *(int8x16_t *)&STACK[0x580]);
  v146.val[3] = veorq_s8(v146.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[3], 0x3DuLL)));
  v138 = (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v136, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), v138);
  v146.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 8uLL)), (int64x2_t)v146.val[3]);
  v139 = (int64x2_t)veorq_s8(v146.val[2], *(int8x16_t *)&STACK[0x570]);
  v146.val[2] = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v146.val[2], v9), v53), v139), (int64x2_t)vandq_s8((int8x16_t)v139, v9));
  v140 = (int64x2_t)veorq_s8(v146.val[1], *(int8x16_t *)&STACK[0x570]);
  v146.val[1] = veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v146.val[1], v9), v53), v140), (int64x2_t)vandq_s8((int8x16_t)v140, v9)), *(int8x16_t *)&STACK[0x560]);
  v146.val[2] = veorq_s8(v146.val[2], *(int8x16_t *)&STACK[0x560]);
  v146.val[3] = veorq_s8(v146.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[3], 0x3DuLL)));
  v141 = (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v138, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), v141);
  v146.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 8uLL)), (int64x2_t)v146.val[3]);
  v146.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 1uLL), *(int8x16_t *)&STACK[0x550]), (int64x2_t)v146.val[2]), *(int64x2_t *)&STACK[0x540]), v115);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 1uLL), *(int8x16_t *)&STACK[0x550]), (int64x2_t)v146.val[1]), *(int64x2_t *)&STACK[0x540]), v115);
  v142 = (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v141, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 0x3DuLL)));
  v146.val[3] = veorq_s8(v146.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[3], 0x3DuLL)));
  v146.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 8uLL)), (int64x2_t)v146.val[3]);
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), v142);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v146.val[1], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 1uLL), v63)), v118), *(int8x16_t *)&STACK[0x530]);
  v146.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v146.val[2], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 1uLL), v63)), v118), *(int8x16_t *)&STACK[0x530]);
  v143 = (int8x16_t)vaddq_s64(v129, v132);
  v144 = v132;
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL))));
  v146.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 8uLL)), (int64x2_t)veorq_s8(v146.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[3], 0x3DuLL))));
  v147.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, vaddq_s64((int64x2_t)vornq_s8(v10, v146.val[2]), (int64x2_t)vorrq_s8(v146.val[2], v121))), v12), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x4F0], 3uLL), v11)));
  v147.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, vaddq_s64((int64x2_t)vornq_s8(v10, v146.val[1]), (int64x2_t)vorrq_s8(v146.val[1], v121))), v12), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x4E0], 3uLL), v11)));
  v146.val[1] = veorq_s8(v143, *(int8x16_t *)&STACK[0x5B0]);
  v146.val[2] = veorq_s8(v143, v78);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]), v134);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]), v39);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v146.val[1], *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v146.val[1], (int8x16_t)v137)), v137), *(int8x16_t *)&STACK[0x580]);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[3] = veorq_s8(v146.val[1], *(int8x16_t *)&STACK[0x570]);
  v146.val[1] = veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v146.val[1], v9), v53), (int64x2_t)v146.val[3]), (int64x2_t)vandq_s8(v146.val[3], v9)), *(int8x16_t *)&STACK[0x560]);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 1uLL), *(int8x16_t *)&STACK[0x550]), (int64x2_t)v146.val[1]), *(int64x2_t *)&STACK[0x540]), v115);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v146.val[1], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 1uLL), v63)), v118), *(int8x16_t *)&STACK[0x530]);
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL))));
  v146.val[2] = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x4C0], v144);
  v147.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, vaddq_s64((int64x2_t)vornq_s8(v10, v146.val[1]), (int64x2_t)vorrq_s8(v146.val[1], v121))), v12), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x500], 3uLL), v11)));
  v146.val[1] = veorq_s8(v146.val[2], *(int8x16_t *)&STACK[0x5B0]);
  v146.val[2] = veorq_s8(v146.val[2], v78);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]), v134);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]), v39);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v146.val[1], *(int8x16_t *)&STACK[0x590]), (int64x2_t)vorrq_s8(v146.val[1], (int8x16_t)v137)), v137), *(int8x16_t *)&STACK[0x580]);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[3] = vandq_s8(v146.val[1], v9);
  v146.val[1] = veorq_s8(v146.val[1], *(int8x16_t *)&STACK[0x570]);
  v146.val[1] = veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(v146.val[3], v53), (int64x2_t)v146.val[1]), (int64x2_t)vandq_s8(v146.val[1], v9)), *(int8x16_t *)&STACK[0x560]);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 1uLL), *(int8x16_t *)&STACK[0x550]), (int64x2_t)v146.val[1]), *(int64x2_t *)&STACK[0x540]), v115);
  v146.val[2] = veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL)));
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)v146.val[2]);
  v146.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v146.val[1], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 1uLL), v63)), v118), *(int8x16_t *)&STACK[0x530]);
  v146.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[1], 8uLL)), (int64x2_t)veorq_s8(v146.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v146.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146.val[2], 0x3DuLL))));
  v147.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v13, vaddq_s64((int64x2_t)vornq_s8(v10, v146.val[1]), (int64x2_t)vorrq_s8(v146.val[1], v121))), v12), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), v11)));
  v146.val[0] = *(int8x16_t *)&STACK[0x4D0];
  v146.val[0].i64[1] = vqtbl4q_s8(v147, *(int8x16_t *)&STACK[0x520]).u64[0];
  v146.val[1].i64[0] = 0xC4C4C4C4C4C4C4C4;
  v146.val[1].i64[1] = 0xC4C4C4C4C4C4C4C4;
  v146.val[0] = vrev64q_s8(v146.val[0]);
  *(int8x16_t *)(a3 - 16) = veorq_s8(vextq_s8(v146.val[0], v146.val[0], 8uLL), vaddq_s8(*(int8x16_t *)(v7 + v4), v146.val[1]));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v5 == v4) * a2) ^ v3)) - 4))();
}

uint64_t sub_1000286A4@<X0>(char a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(_QWORD))(STACK[0x5E8]
                                           + 8
                                           * ((224 * (((v1 ^ ((a1 & 8) == (v1 - 996) - 2692)) & 1) == 0)) ^ v1)))(v1 ^ 0x4E0u);
}

uint64_t sub_1000286E8()
{
  int v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))(STACK[0x5E8] + 8 * v0);
  *(int64x2_t *)&STACK[0x5B0] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x5A0] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x590] = vdupq_n_s64(0xC8FFC0226B796ACuLL);
  *(int64x2_t *)&STACK[0x580] = vdupq_n_s64(0x7EDD1840A36D3CE0uLL);
  *(int64x2_t *)&STACK[0x560] = vdupq_n_s64(0xFA4975DE9AED9639);
  *(int64x2_t *)&STACK[0x570] = vdupq_n_s64(0xFDEF75A635AC05D7);
  *(int64x2_t *)&STACK[0x550] = vdupq_n_s64(0xCFD085AEAF725F65);
  *(int64x2_t *)&STACK[0x540] = vdupq_n_s64(0x858543C4A1D93973);
  *(int64x2_t *)&STACK[0x530] = vdupq_n_s64(0x17D9A711A491E013uLL);
  *(int64x2_t *)&STACK[0x520] = vdupq_n_s64(0x9682F4E555EA5648);
  *(int64x2_t *)&STACK[0x510] = vdupq_n_s64(0x8F5A56A2A8596EECLL);
  *(int64x2_t *)&STACK[0x500] = vdupq_n_s64(0xB5C0058B2172928ELL);
  *(int64x2_t *)&STACK[0x4F0] = vdupq_n_s64(0x42205A7058886041uLL);
  *(int64x2_t *)&STACK[0x4E0] = vdupq_n_s64(0x6A1AFEAD5DED4136uLL);
  *(int64x2_t *)&STACK[0x4D0] = vdupq_n_s64(0x486D9DDEDAB7DE2EuLL);
  *(int64x2_t *)&STACK[0x4C0] = vdupq_n_s64(0x5BC9311092A410E8uLL);
  *(int64x2_t *)&STACK[0x4B0] = vdupq_n_s64(0xE60D3A6CBDD7A163);
  *(int64x2_t *)&STACK[0x4A0] = vdupq_n_s64(0x2FD7473A4B6E6760uLL);
  *(int64x2_t *)&STACK[0x490] = vdupq_n_s64(0x17EBA39D25B733B0uLL);
  *(int64x2_t *)&STACK[0x480] = vdupq_n_s64(0xCCF7E4DD9A513021);
  *(int64x2_t *)&STACK[0x470] = vdupq_n_s64(0x29712869FFBA7805uLL);
  *(int64x2_t *)&STACK[0x460] = vdupq_n_s64(0xD68ED796004587FALL);
  *(int64x2_t *)&STACK[0x450] = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
  *(int64x2_t *)&STACK[0x440] = vdupq_n_s64(0xA93D6ECE9EDFE452);
  *(_OWORD *)&STACK[0x400] = xmmword_100212CC0;
  return v1();
}

uint64_t sub_100029084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v3
                                                             + 8
                                                             * ((991
                                                               * (((v1 == a1) ^ ((v2 + 71) ^ (v2 + 72))) & 1)) ^ v2)))((v2 - 240020921) & 0xE4E6A89, 0x17D9A711A491E013, 0xC8FFC0226B796ACLL);
}

uint64_t sub_1000293C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  int v5;

  STACK[0x6E8] = v4;
  LODWORD(STACK[0x678]) = STACK[0x350];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x5E8]
                                                                                         + 8 * (v5 + 948)))(a1, a2, a3, a4, STACK[0x5E0]);
}

uint64_t sub_1000294D0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  v2 = v1 ^ a1;
  v3 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5E8] + 8 * v2)
                                          - ((v2 + 1558425748) & 0xA31C4CFF)
                                          + 3170))(v3);
}

uint64_t sub_1000296A4()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_100029884()
{
  int v0;
  int v1;
  uint64_t v2;

  STACK[0x768] = *(_QWORD *)(v2 + 8 * v1);
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(v1 + ((v1 + v0) & 0x9A74CE57) - 741)))();
}

uint64_t sub_100029AE4@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x8D0] + 24);
  STACK[0xA20] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * ((7294 * (v2 != 0)) ^ a1)) - ((v1 | 0x451u) ^ 0x555)))();
}

uint64_t sub_100029C00()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * (v0 + 547)) - 8))();
}

uint64_t sub_100029C20@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((6378 * (v2 == ((a2 | 0x200) ^ 0x39C12B8B))) ^ (a1 + 1817))))();
}

uint64_t sub_100029C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;

  v6 = 295199341
     * ((((v5 - 224) | 0xF6FF88DA735DBFCCLL) - (v5 - 224) + ((v5 - 224) & 0x90077258CA24030)) ^ 0xA2AC70229C35B784);
  v7 = LOBYTE(STACK[0x66F]) - v6;
  v8 = a5 + 325273733 + v6;
  *(_DWORD *)(v5 - 216) = v6;
  *(_DWORD *)(v5 - 212) = a5 - v6 - 524261801;
  *(_DWORD *)(v5 - 224) = v6 ^ (a5 + 325273733) ^ 0x35B;
  *(_DWORD *)(v5 - 220) = v8;
  *(_QWORD *)(v5 - 208) = v6;
  *(_QWORD *)(v5 - 200) = v7;
  *(_DWORD *)(v5 - 188) = v8 - 203;
  v9 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540 + a5 - 854) - 584047855))(v5 - 224);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5E8] + 8 * *(int *)(v5 - 192)) - 8))(v9);
}

uint64_t sub_100029D90()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((LODWORD(STACK[0x664]) == 0) * (v1 ^ ((v0 - 7037) | 0xC20) ^ 0x916)) ^ v0)))();
}

uint64_t sub_100029DC8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((STACK[0x888] != 0x1FCC246200528390)
                                               * ((((v0 + 1458849198) & 0xA90BB78F) + 968) ^ (v0 + 3449))) ^ v0))
                            - 8))();
}

uint64_t sub_100029E2C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x858] = 0;
  STACK[0x810] = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (a1 == v2))))();
}

uint64_t sub_100029E54()
{
  int v0;
  uint64_t v1;

  STACK[0x768] = (((v0 - 4793) | 0x406u) ^ 0xFFFFFFFFFFFFFBEFLL) + *(_QWORD *)(v1 + 8 * (v0 - 4140));
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 4140) ^ 0x13A)))();
}

uint64_t sub_100029F74@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((((a1 + a2) & 0x385653FB ^ 0x19EF) * (v2 == 968960260)) ^ (a1 + 275)))
                            - 8))();
}

uint64_t sub_10002A054()
{
  unsigned int v0;
  uint64_t v1;

  STACK[0xA10] = 0x187084142C6B826ALL;
  LODWORD(STACK[0xA54]) = 680845731;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)v0) - (v0 ^ 0x559)))();
}

uint64_t sub_10002A1FC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(STACK[0xA40] - 0x1FCC246200528390) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v2) - ((15 * v1) ^ 0x8B3)))();
}

uint64_t sub_10002A238@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((7140 * (*a1 == 0)) ^ v1)) - v2 + 3662))();
}

uint64_t sub_10002A3E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 8) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v3) - (1462 * v2) + 5840))();
}

uint64_t sub_10002A688()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 + 913)) - 8))(v2);
}

uint64_t sub_10002A8E4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * a1))();
}

uint64_t sub_10002AB24@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((a2 == 0) * v4) ^ v3)) - (v2 ^ a1)))();
}

uint64_t sub_10002ABBC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * (((*(_QWORD *)(v1 + 24) != 0) * ((43 * (v2 ^ a1)) ^ 0x1A6A)) | v2))
                            - 8))();
}

uint64_t sub_10002AD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  STACK[0x868] = 0x1FCC246200528390;
  return (*(uint64_t (**)(void))(v5 + 8 * (a5 + 1149)))();
}

uint64_t sub_10002AD84@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)STACK[0x640] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 + 3986)) - 8))();
}

uint64_t sub_10002AF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a5 + 2515)) - 4))();
}

uint64_t sub_10002B234@<X0>(int a1@<W8>)
{
  uint64_t v1;
  char v2;
  unsigned int v3;
  uint64_t v4;
  unsigned __int8 v5;
  BOOL v7;

  v5 = 3 * v2;
  v7 = (unint64_t)(v1 - 0x7A4303414F3FE0FBLL) > 0xE0329577
    && v1 - 0x7A4303414F3FE0FBLL < (unint64_t)v3 + 3761411448u;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v5 ^ v7) & 1) * (a1 - 5048)) ^ a1)))();
}

uint64_t sub_10002B28C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LODWORD(STACK[0xA7C]) = 968960260;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 - 3177)) - (((a1 - 3151) | 0x14Au) ^ 0x956)))();
}

uint64_t sub_10002B480@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned __int16 v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  unint64_t v16;

  v7 = (*v3 << 24) | (v3[1] << 16) | (v3[2] << 8);
  v8 = (v7 | v3[3]) + 680845731 - 2 * ((v7 | v3[3]) & (v5 + 680844374) ^ v3[3] & 4);
  v9 = _byteswap_ushort(*(_WORD *)(((2 * (v4 + 4)) & 0xFF7BFF5571E3EAE0)
                                 + ((v4 + 4) ^ 0x7FBDFFAAB8F1F570)
                                 + a2
                                 - 0x7FBDFFAAB8F1F570));
  v10 = v4 + 10;
  v11 = v2 + 10;
  v12 = (unsigned __int16)(v9 - ((2 * v9) & 0x5426) + 10787);
  switch(v12)
  {
    case 31448:
      STACK[0x6F0] = a2 + v10;
      STACK[0xA08] = v11;
      return (*(uint64_t (**)(void))(v6 + 8 * (((((a1 - 569) | 0x4E2) - 2023) * (v8 == 680845731)) ^ (a1 + 5455))))();
    case 44710:
      v16 = bswap64(*(_QWORD *)(((2 * v10) & 0xCFB7B7E6EF7FFF7ALL)
                              + (v10 ^ 0xE7DBDBF377BFFFBDLL)
                              + a2
                              + 0x1824240C88400043));
      STACK[0x6B0] = v16 + 0x369FADAE44F1FEADLL - ((2 * v16) & 0x6D3F5B5C89E3FD5ALL);
      return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a1 + 711)) - 4))();
    case 48500:
      v13 = (unsigned __int8 *)(((2 * v10) & 0x5F8F19FE33FDD7FCLL)
                              + (v10 ^ 0x2FC78CFF19FEEBFELL)
                              + a2
                              - 0x2FC78CFF19FEEBFELL);
      v14 = (*v13 << 24) | (v13[1] << 16) | (v13[2] << 8);
      LODWORD(STACK[0x6DC]) = (v14 | v13[3]) + 680845731 - 2 * ((v14 | v13[3]) & 0x2894E1A7 ^ v13[3] & 4);
      return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a1 + 711)) - 4))();
    default:
      LODWORD(STACK[0xA7C]) = 968917254;
      STACK[0x5F0] = STACK[0x6A0];
      STACK[0x898] = *(_QWORD *)(v6 + 8 * (a1 - 663));
      return (*(uint64_t (**)(void))(v6 + 8 * ((a1 - 663) ^ 0xFC5)))();
  }
}

uint64_t sub_10002B9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * (v5 + 3261));
  STACK[0x5D0] = a5 ^ 0x7EALL;
  LODWORD(STACK[0x5C0]) = a5 + 4879;
  LODWORD(STACK[0x5B0]) = a5 + 321992013;
  return v7(691, 4277, 5801, 4614);
}

uint64_t sub_10002BA40@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 != 0x1FCC246200528390) * (((v1 ^ 0x13F1) + 626) ^ 0x157)) ^ v1)))();
}

uint64_t sub_10002BA88()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x948] = *(_QWORD *)(v1 + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x634)) - ((((_DWORD)v0 - 735) | 0x1210u) ^ 0x1214)))();
}

void sub_10002BD64(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int8x16_t v3;

  v1 = *(_DWORD *)a1 ^ (1605173279 * ((-2 - ((a1 | 0x1549355C) + (~(_DWORD)a1 | 0xEAB6CAA3))) ^ 0xB09CCFD));
  v2 = *(_QWORD *)(a1 + 8);
  v3 = veorq_s8(*(int8x16_t *)*(_QWORD *)(a1 + 48), (int8x16_t)xmmword_100212CE0);
  __asm { BR              X11 }
}

uint64_t sub_10002BE3C@<X0>(_BYTE *a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 144) = *a1;
  *(_QWORD *)(v3 - 143) = *(_QWORD *)(v3 - 159);
  *(_DWORD *)(v3 - 135) = *(_DWORD *)(v3 - 151);
  *(_WORD *)(v3 - 131) = *(_WORD *)(v3 - 147);
  *(_BYTE *)(v3 - 129) = *(_BYTE *)(v3 - 145);
  return (*(uint64_t (**)(void))(v2 + 8 * a2))();
}

uint64_t sub_10002BE70@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W8>)
{
  uint64_t v3;
  BOOL v4;
  int v6;

  if (a2)
    v4 = *(_QWORD *)(a1 + 40) == 0;
  else
    v4 = 1;
  v6 = !v4 && *(_QWORD *)(a1 + 24) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 * (a3 ^ 0x91B)) ^ (a3 - 4169))))();
}

uint64_t sub_10002BEAC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  _BOOL4 v6;

  v4 = a1 ^ 0x1FBB;
  v6 = ((((2 * (-19 * ((_BYTE)v2 - (_BYTE)v1) + 83)) & 0x76) + ((-19 * (v2 - v1) + 83) ^ 0x3B) + 5) & 0xF) != 0
    || ((2 * (-1851262995 * (v2 - v1) + 1661302611)) & 0xFBF6FE76)
     + ((-1851262995 * (v2 - v1) + 1661302611) ^ 0x7DFB7F3B) == ((914 * (v4 ^ 0x742) + 2113625873) ^ v4 ^ 0x71);
  return (*(uint64_t (**)(void))(v3 + 8 * ((4080 * v6) ^ v4)))();
}

uint64_t sub_10002BF84()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + 1 != v0 + 16) * v1) ^ v2)))();
}

uint64_t sub_10002C0E8@<X0>(uint64_t a1@<X3>, unint64_t a2@<X4>, int a3@<W6>, uint64_t a4@<X7>, int a5@<W8>)
{
  char v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  STACK[0x258] = v7;
  *(_QWORD *)(v9 - 240) = a4;
  LODWORD(STACK[0x264]) = a3;
  STACK[0x268] = a2;
  *(_QWORD *)(v9 - 232) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a5 ^ (5018 * (((2 - (v5 + v6)) & 3) != 0)))) - 4))();
}

uint64_t sub_10002C180@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ ((v1 != 1) | (2 * (v1 != 1))))) - 4))();
}

uint64_t sub_10002C1D4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (4518 * (v1 != 2)))) - 4))();
}

uint64_t sub_10002C234@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - 4))();
}

uint64_t sub_10002C294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t (*v13)(void);

  *(_DWORD *)(v9 - 208) = v6;
  *(_QWORD *)(v9 - 248) = v10;
  *(_DWORD *)(v9 - 188) = -195270667;
  v11 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a6 + 8 * (int)(v7 & 0x8E692029)) - 2066920503);
  *(_QWORD *)(v9 - 184) = v11;
  *(_QWORD *)(v9 - 176) = (v7 + 1052);
  v12 = v11(1028);
  *(_QWORD *)(v9 - 200) = v12;
  v13 = *(uint64_t (**)(void))(v8 + 8 * ((357 * (v12 != 0)) ^ v7));
  *(_QWORD *)(v9 - 168) = v8;
  return v13();
}

uint64_t sub_10002C328()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  uint64_t (*v197)(uint64_t);
  unsigned int v199;

  v8 = (v3 + 1891) | 0x10C;
  HIDWORD(v10) = v2;
  LODWORD(v10) = 1611510641 * (v1 ^ v0);
  v9 = v10 >> 2;
  v11 = ((1572180752 * *(_DWORD *)(v7 - 208)) | ((1440438577 * *(_DWORD *)(v7 - 208) + 719831166) >> 28))
      - 1367603232;
  v12 = (1593994708 * v4) | ((-1748984971 * v4) >> 30);
  v13 = v12 - 1116044104 * v5 + v11 + (((v8 ^ 0xB7AF47D9) * v5) >> 29) - v9;
  v14 = (-1674208237 * v11) >> 29;
  v15 = (416514560 * v13) | ((1301047745 * v13) >> 23);
  v16 = (754876416 * v12) | ((363354621 * v12) >> 17);
  v17 = (-508764008 * v11) | v14;
  v18 = (-125744128 * v9 - v17 + ((-1463934893 * v9) >> 22) + v15) ^ v16;
  v19 = (-233099419 * v15) >> 7;
  v20 = (1551106048 * v18) | ((845158173 * v18) >> 14);
  HIDWORD(v10) = v14;
  LODWORD(v10) = -1689545371 * v17;
  v21 = (-905969664 * v15) | v19;
  v22 = (-579239936 * v16) | ((-600327437 * v16) >> 17);
  v23 = 2127701921 * v21;
  v24 = (v10 >> 1) + v22 - v21 + v20;
  v25 = __PAIR64__(v19, v23) >> 4;
  v26 = (853812224 * v20) | ((378321161 * v20) >> 22);
  v27 = (1888485376 * v24) | ((-1063438583 * v24) >> 12);
  v28 = (v26 ^ v25) + v27;
  v29 = v27 + (v26 ^ (((1946157056 * v22) | ((1530839773 * v22) >> 6)) + v25));
  v30 = ((v28 - 1700897211) ^ 0xFFE93026) + v29;
  v31 = v30 + 1034362127 - ((2 * v30 - 1502866586) & 0xD4E22698) - 16;
  v32 = (v31 ^ 0x6A71134C) + v26;
  v33 = v27 + (v31 ^ 0x958EECB3) + 1;
  v199 = v29 - ((2 * v29) & 0xD4E22698) + 1785795404;
  LODWORD(STACK[0x248]) = v33;
  HIDWORD(v10) = v30 + 1034362127;
  LODWORD(v10) = 775746849 * (v31 ^ 0x6A71134C);
  v34 = v10 >> 1;
  HIDWORD(v10) = v32;
  LODWORD(v10) = -2032553775 * v32;
  v35 = v10 >> 1;
  *(_DWORD *)(v7 - 224) = v31 ^ v199;
  v36 = (1505755136 * v33) | ((-1927480985 * v33) >> 10);
  v37 = (1395720192 * (v31 ^ v199)) | ((758928177 * (v31 ^ v199)) >> 16);
  v38 = v34 - v35 + v37 + v36 - 2 * v36;
  v39 = 116729387 * v36;
  v40 = (245170176 * v38) | ((820711069 * v38) >> 16);
  v41 = (721420288 * v36) | ((116729387 * v36) >> 8);
  v42 = (764682240 * v37) | ((-203330399 * v37) >> 19);
  v43 = (((-1939865600 * v35) | ((-427326365 * v35) >> 11)) + v41 - v40) ^ v42;
  v44 = (-1342177280 * v40) | ((-872266661 * v40) >> 4);
  v45 = (1772027904 * v43) | ((1762224543 * v43) >> 16);
  HIDWORD(v10) = v39 >> 8;
  LODWORD(v10) = 1381540561 * v41;
  v46 = (-1905162525 * v42) >> 17;
  v47 = (-1015971840 * v42) | v46;
  v48 = ((v10 >> 3) - v44 - v45) ^ v47;
  v49 = (-1226815488 * v48) | ((668392457 * v48) >> 21);
  HIDWORD(v10) = v46;
  LODWORD(v10) = 1712709333 * v47;
  v50 = (367827904 * v45) | ((72856175 * v45) >> 26);
  v51 = ((66279424 * v44) | ((1453358699 * v44) >> 21)) + v50;
  v52 = v51 + (v10 >> 2) + v49;
  v53 = v52 ^ (v51 - v49 - 321117399);
  v54 = v53 + 1345207143;
  v55 = v49 - (v53 + 1345207143);
  v56 = (v53 + 1345207143) ^ v52;
  v57 = -605284797 * (v50 - v53) + 718772747;
  v58 = (779091968 * v56) | ((-1686699289 * v56) >> 12);
  HIDWORD(v10) = 5 * v55;
  LODWORD(v10) = 162880533 * v55;
  v59 = v10 >> 4;
  HIDWORD(v10) = v57;
  LODWORD(v10) = v57;
  v60 = v10 >> 8;
  v61 = 50229115 * v59;
  v62 = (v60 ^ ((-1682358272 * v54) | ((892759781 * v54) >> 18))) - v59 + v58;
  v63 = (939524096 * v62) | ((1369576615 * v62) >> 5);
  HIDWORD(v10) = v61;
  LODWORD(v10) = v61;
  v64 = v10 >> 28;
  v65 = (585051712 * v58) | ((-527729479 * v58) >> 26);
  v66 = ((((-1610612736 * v60) | ((-98681971 * v60) >> 3)) - v63) ^ v64) - v65;
  v67 = (-1820430181 * v63) >> 24;
  v68 = (806260736 * v66) | ((1793261801 * v66) >> 20);
  v69 = (2121308928 * v63) | ((-1820430181 * v63) >> 24);
  v70 = (-1653080064 * v65) | ((-1504095313 * v65) >> 13);
  v71 = (v68 ^ (((918552576 * v64) | ((-257507109 * v64) >> 10)) + v69)) + v70;
  v72 = 734781993 * v70;
  HIDWORD(v10) = 3 * v67;
  LODWORD(v10) = -636516277 * v69;
  v73 = v10 >> 3;
  v74 = (-1236371456 * v71) | ((1106692559 * v71) >> 21);
  v75 = (-56086784 * v68) | ((-553867217 * v68) >> 24);
  v76 = 2038187296 * v70;
  v77 = v75 + v73;
  v78 = v74 ^ ((v73 ^ (v76 & 0xFFFFFFE0 | (v72 >> 27))) - v75);
  v79 = ((1780324221 * v77 - v74) ^ v78 ^ 0xB642EBDA) - 706821144;
  v80 = v79 + v78;
  v81 = v79 ^ v74;
  v82 = 1439797535 * v79;
  v83 = 1040187392 * v79;
  LODWORD(STACK[0x210]) = v75 - v79;
  v84 = (-443191965 * (v75 - v79)) >> 28;
  v85 = (1498863152 * (v75 - v79)) | v84;
  HIDWORD(v10) = v81;
  LODWORD(v10) = 1688766105 * v81;
  v86 = v10 >> 1;
  v87 = (-1654652928 * v80) | ((1354099947 * v80) >> 11);
  v88 = (v83 & 0xFE000000 | (v82 >> 7)) + v86 + v85 - v87;
  v89 = (-1610612736 * v88) | ((720980197 * v88) >> 3);
  v90 = (-848882720 * v86) | ((1986738335 * v86) >> 27);
  v91 = ((1003444511 * v87) >> 3) - ((1354099947 * v80) >> 11 << 29);
  v92 = (v89 ^ (__PAIR64__(v84, -1974486879 * v85) >> 3)) - (v90 + v91);
  v93 = (-418906112 * v89) | ((1045732577 * v89) >> 13);
  v94 = (1258118400 * v92) | ((1984626013 * v92) >> 24);
  v95 = (1323755695 * v91) >> 12;
  v96 = (-1963982848 * v91) | v95;
  v97 = (v94 ^ (((-846249984 * v90) | ((1655125565 * v90) >> 18)) + v93)) - v96;
  v98 = (-1440940032 * v93) | ((-1907512803 * v93) >> 16);
  v99 = (379584512 * v94) | ((-241491787 * v94) >> 11);
  v100 = (-234881024 * v97) | ((-1012800647 * v97) >> 7);
  v101 = ((575692051 * v96) >> 2) - (v95 << 30) + v98 + v99 + v100;
  v102 = ((v100 ^ (346452059 * (v98 - v99))) + 48301934) ^ v101;
  v103 = v102 - ((2 * v102 + 376142768) & 0x1BFE47E2) + 1496637897;
  v104 = (v103 ^ 0xDFF23F1) + v100;
  v105 = v99 + (v103 ^ 0xF200DC0E) + 1;
  LODWORD(STACK[0x228]) = v105;
  v106 = (-1610612736 * v105) | ((-1099127979 * v105) >> 3);
  LODWORD(STACK[0x200]) = v104;
  v107 = (316819456 * v104) | ((-744334263 * v104) >> 21);
  HIDWORD(v10) = v103 ^ (v101 - ((2 * v101) & 0x1BFE47E2) + 234824689);
  LODWORD(v10) = 1731297417 * HIDWORD(v10);
  v108 = v10 >> 2;
  v109 = ((-73082880 * (v103 ^ 0xDFF23F1)) | ((1310684315 * (v103 ^ 0xDFF23F1u)) >> 21)) - v108 + v107 - v106;
  v110 = -1821576755 * v109;
  v111 = (-1640390656 * v109) | ((-1821576755 * v109) >> 19);
  v112 = (1568669696 * v107) | ((-1947405637 * v107) >> 9);
  v113 = (285986149 * v108) >> 3;
  v114 = (-1610612736 * v108) | v113;
  v115 = (((-1457069992 * v106) | ((-1792746485 * v106) >> 29)) - v111) ^ v112;
  HIDWORD(v10) = v110 >> 19;
  LODWORD(v10) = 1638257001 * v111;
  v116 = v10 >> 2;
  v117 = (-633431040 * ((v115 ^ v114) & 0xE2287EF7 | (v115 ^ v113) & 0x1DD78108)) | ((1341558695
                                                                                    * ((v115 ^ v114) & 0xE2287EF7 | (v115 ^ v113) & 0x1DD78108)) >> 22);
  v118 = (1267773953 * v114) >> 14;
  v119 = (-939261952 * v114) | v118;
  v120 = 612945865 * v117;
  v121 = ((v116 ^ ((-1024950272 * v112) | ((1229161937 * v112) >> 17))) - v117) ^ v119;
  v122 = (435757056 * v117) | ((612945865 * v117) >> 19);
  HIDWORD(v10) = v121;
  LODWORD(v10) = -1684376257 * v121;
  v123 = v10 >> 1;
  v124 = (-1739507712 * v116) | ((603130407 * v116) >> 21);
  v125 = v123 ^ (((338970719 * v119) >> 3) - (v118 << 29) + v124 + v122);
  v126 = v125 + 145788983 * (v124 ^ v122 ^ v123 ^ 0xF2F246);
  v127 = v126 - ((2 * v126 + 263665036) & 0xE0D3A554) - 129667728;
  v128 = v127 ^ (v122 - 2 * (v122 & 0x7069D2BA ^ (v120 >> 19) & 0x10) + 1885983402);
  v129 = v127 ^ (v123 - ((2 * v123) & 0xE0D3A554) + 1885983402);
  v130 = (v127 ^ 0x7069D2AA) + v125;
  HIDWORD(v10) = 129 * (v127 ^ 0x7069D2AA);
  LODWORD(v10) = -1285198719 * (v127 ^ 0x7069D2AA);
  v131 = (1537605632 * v128) | ((-1548702253 * v128) >> 15);
  LODWORD(STACK[0x220]) = v130;
  v132 = (-369098752 * v130) | ((90086773 * v130) >> 7);
  v133 = (1350500352 * v129) | ((-1423945601 * v129) >> 16);
  v134 = (v131 ^ (v10 >> 9)) + v133 - v132;
  v135 = -1339542943 * v134;
  v136 = -1422739799 * v132;
  v137 = ((154810047 * v133) >> 6) - ((-1423945601 * v129) >> 16 << 26);
  v138 = (-2094657536 * v134) | ((-1339542943 * v134) >> 20);
  v139 = -285885411 * v138;
  v140 = ((-1382735560 * v131) | ((1974641703 * v131) >> 29)) + v138;
  v141 = (-805306368 * (v135 >> 20)) | (v139 >> 4);
  v142 = (1716966688 * v132) | ((-1422739799 * v132) >> 27);
  v143 = (-587202560 * ((v140 ^ v137) + v142)) | ((936768477 * ((v140 ^ v137) + v142)) >> 8);
  v144 = ((v136 >> 27 << 31) - (v142 << 20)) & 0xFFF00000 | ((-1002883073 * v142) >> 12);
  v145 = -2009507179 * ((((1371317248 * v137) | ((-690720983 * v137) >> 22)) + v141 - v143) ^ v144);
  v146 = (-572473344 * v141) | ((-29132925 * v141) >> 18);
  v147 = (-1957745024 * v143) | ((1226219101 * v143) >> 25);
  v148 = (v145 << ((73 * v144) & 9) << ((73 * v144) & 9 ^ 9)) | (v145 >> 23);
  v149 = (v147 ^ (((1070535240 * v144) | ((-1476795831 * v144) >> 29)) + v146)) - v148;
  v150 = v149 ^ (((v147 + v146) ^ 0x4FE73CC1) - v148);
  v151 = -580962817 * (v150 ^ 0xA842C2D8);
  v152 = v147 - v151;
  v153 = v151 ^ v149;
  v154 = v151 + v148;
  v155 = -2009467431 * v152;
  HIDWORD(v10) = v150;
  LODWORD(v10) = -940777783 * (v150 ^ 0xA842C2D8);
  v156 = (87818240 * v154) | ((-309001905 * v154) >> 14);
  v157 = (-266338304 * v153) | ((-1837797503 * v153) >> 11);
  v158 = (-1879048192 * v152) | ((-2009467431 * v152) >> 4);
  v159 = (-973078528 * (((v158 + (v10 >> 3)) ^ v156) - v157)) | ((163512291
                                                                * (((v158 + (v10 >> 3)) ^ v156) - v157)) >> 7);
  HIDWORD(v10) = v155 >> 4;
  LODWORD(v10) = 362673457 * v158;
  v160 = (-1792861056 * v156) | ((-2127935943 * v156) >> 25);
  v161 = (-2039371008 * v157) | ((-1736019541 * v157) >> 24);
  v162 = -737142531 * v159;
  v163 = 419233792 * v159;
  v164 = (v160 ^ (v10 >> 4) ^ v159) - v161;
  v165 = 921275077 * v164;
  v166 = v163 & 0xFFFF0000 | HIWORD(v162);
  v167 = (-212973824 * v161) | ((938692167 * v161) >> 24);
  v168 = (1855499344 * v164) | ((921275077 * v164) >> 28);
  v169 = 1826912595 * v168;
  v170 = v167 ^ ((1366230272 * v160) | ((1733390085 * v160) >> 24)) ^ v166 ^ v168;
  HIDWORD(v10) = 3 * (v165 >> 28);
  LODWORD(v10) = v169;
  v171 = v10 >> 3;
  v172 = (-861398912 * v166) | ((-711372751 * v166) >> 25);
  v173 = (-233786320 * v170) | ((-1625224381 * v170) >> 28);
  v174 = v173 + 1985493011 * (v172 - v171);
  v175 = (v172 ^ ((861506560 * v167) | ((-1412639133 * v167) >> 22))) - v171;
  v176 = v173 ^ v175;
  v177 = v174 ^ v175;
  v178 = v173 ^ v175 ^ v174 ^ 0x14DDE342;
  LODWORD(STACK[0x208]) = v178 + v171;
  v179 = (-1228020224 * (v178 + v171)) | ((81487603 * (v178 + v171)) >> 23);
  v180 = (-671088640 * (v177 ^ 0x14DDE342)) | ((1514139099 * (v177 ^ 0x14DDE342u)) >> 5);
  v181 = (1995549696 * (v176 - v178)) | ((-1789019029 * (v176 - v178)) >> 22);
  v182 = (-1548000256 * (((((1514553856 * v178) | ((-1465048287 * v178) >> 23)) + v179) ^ v180) + v181)) | ((1063841497 * (((((1514553856 * v178) | ((-1465048287 * v178) >> 23)) + v179) ^ v180) + v181)) >> 22);
  v183 = (-1224736768 * v180) | ((-1274791753 * v180) >> 8);
  v184 = (-1537291904 * v181) | ((-817316461 * v181) >> 25);
  v185 = ((((209715200 * v179) | ((974003737 * v179) >> 9)) + v182) ^ v183) - v184;
  v186 = (1571416064 * v182) | ((-1865697987 * v182) >> 21);
  v187 = (1979711488 * v185) | ((-791087941 * v185) >> 7);
  v188 = (450363392 * v184) | ((8692571 * v184) >> 13);
  v189 = -1983154109 * v187;
  v190 = (((-1063256064 * v183) | ((1217216005 * v183) >> 11)) + v186) ^ v188 ^ v187;
  v191 = (190189856 * v186) | ((-262492023 * v186) >> 27);
  v192 = (-1375207424 * v190) | ((848336321 * v190) >> 13);
  v193 = (1862819840 * v187) | ((-1983154109 * v187) >> 19);
  v194 = ((476774400 * v188) | ((1677204587 * v188) >> 16)) + v191 + v193 - v192;
  v195 = v194 + (((v193 ^ v191) + 559631818) ^ v192) - 687872476;
  v196 = -2000933437 * v195 - ((293100422 * v195) & 0x61A7B504) + 819190402;
  LODWORD(STACK[0x218]) = (v196 ^ 0x30D3DA82) + v192;
  *(_DWORD *)(v7 - 256) = (v196 ^ 0x30D3DA82) + v194;
  LODWORD(STACK[0x230]) = v177;
  LODWORD(STACK[0x240]) = v196 ^ (v193 - 2 * (v193 & 0x30D3DA87 ^ (v189 >> 19) & 5) + 819190402);
  v197 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * v8) - 8);
  LODWORD(STACK[0x238]) = v81;
  return v197(3445);
}

uint64_t sub_10002D618@<X0>(int a1@<W0>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  unsigned __int8 v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  char v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;

  v21 = ((v16 ^ (v6 ^ v14) ^ v11) + ((v6 ^ v14) ^ v12)) ^ *(_DWORD *)(*(_QWORD *)(a2 + 8 * v7) + 4 * ((v6 ^ v14) ^ v9) + v10);
  v22 = (v21 + a5 - (a4 & (2 * v21))) ^ v17;
  *(_DWORD *)(a3 + 4 * v6) = v18 ^ (v22 + v15 - (v20 & (2 * v22))) ^ v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * (((v8 == 0) * a1) ^ a6)) - 8))();
}

uint64_t sub_10002D694()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  LODWORD(STACK[0x250]) = v1;
  *(_QWORD *)(v3 - 176) = v0 ^ 0x1F19;
  v4 = (*(uint64_t (**)(uint64_t))(v3 - 184))(1028) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * (v0 ^ 0xF50)) ^ v0))
                            - ((v0 - 271245667) & 0x102AD7AF)
                            + 1067))();
}

uint64_t sub_10002D720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  _BOOL4 v9;

  v6 = (char)(((((*(_BYTE *)(v5 - 256) ^ 0x82) + 47) ^ 0x77) - 1) & 0xFE ^ 0x4B);
  v7 = (((v3 + 5) ^ 0xB1) * (((((*(_BYTE *)(v5 - 256) ^ 0x82) + 47) ^ 0x77) - 1) & 0xFE ^ 0x4B));
  if (v6 >= 0)
    LOBYTE(v8) = ((((*(_BYTE *)(v5 - 256) ^ 0x82) + 47) ^ 0x77) - 1) & 0xFE ^ 0x4B;
  else
    v8 = -v6;
  v9 = v7 > (((v3 + 5) ^ 0xB1) * (((((*(_BYTE *)(v5 - 256) ^ 0x82) + 47) ^ 0x77) - 1) & 0xFE ^ 0x4B)
                            - v8);
  if (v6 < 0)
    v9 = v7 < (((v3 + 5) ^ 0xB1) * (((((*(_BYTE *)(v5 - 256) ^ 0x82) + 47) ^ 0x77) - 1) & 0xFE ^ 0x4B)
                              + v8);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                         + 8
                                                                                         * ((88
                                                                                           * (v8 < 2u
                                                                                           && !v9)) ^ v3))
                                                                             - 8))(a1, a2, a3, a1, LODWORD(STACK[0x248]));
}

uint64_t sub_10002D824@<X0>(uint64_t a1@<X3>, int a2@<W4>, char a3@<W8>)
{
  char v3;
  int v4;
  int v5;
  char v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;

  v12 = a2 ^ v4 ^ v10;
  v13 = v12 ^ (*(_DWORD *)(v9 + 4 * ((((v7 + v3 + 32) * a3) ^ v6) ^ 0x33u)) + v5);
  *(_DWORD *)(a1 + 4 * ((v7 + v3 + 23 * (v8 ^ 0xD)) * a3)) = v12 ^ (*(_DWORD *)(v9
                                                                                                 + 4
                                                                                                 * ((((v7 + v3 + 23 * (v8 ^ 0xD)) * a3) ^ v6) ^ 0x33u))
                                                                                     + v5);
  *(_DWORD *)(a1 + 4 * (((v7 + v3 + 32) * a3) & 0xFE)) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((67 * (v7 != 254)) ^ v8)) - 8))();
}

uint64_t sub_10002D8B8@<X0>(uint64_t a1@<X3>, int a2@<W4>, char a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;

  *(_DWORD *)(a1 + 4 * (v8 * a3)) = a2 ^ v4 ^ v10 ^ (*(_DWORD *)(v7
                                                                                  + 4
                                                                                  * (((v8 * a3) ^ v6) ^ 0x33u))
                                                                      + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v8 + 1 == v3 + 1567) * (((v9 - 34) | 0x112) ^ 0x504)) ^ v9))
                            - 8))();
}

uint64_t sub_10002D920()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (v0 + 203492832) & 0xF3DEFFFB;
  v4 = *(_QWORD *)(v1 + 8 * ((4793 * ((*(uint64_t (**)(uint64_t))(v2 - 184))(1028) != 0)) ^ v0));
  *(_QWORD *)(v2 - 176) = v3;
  return ((uint64_t (*)(void))(v4 - (((v0 + 737) | 0x122) ^ v3 ^ 0x1BD1)))();
}

uint64_t sub_10002D9B4(uint64_t a1)
{
  uint64_t v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned __int8 v7;
  int v8;
  _BOOL4 v9;

  *(_QWORD *)(v5 - 208) = v1;
  v6 = (char)(((v2 + 88) & 0xAF ^ 0xD4) & ((((v3 ^ 0xAB) + 41) ^ 0xDC) + 37) ^ 0x81);
  v7 = -31 * (((v2 + 88) & 0xAF ^ 0xD4) & ((((v3 ^ 0xAB) + 41) ^ 0xDC) + 37) ^ 0x81);
  if (v6 >= 0)
    LOBYTE(v8) = ((v2 + 88) & 0xAF ^ 0xD4) & ((((v3 ^ 0xAB) + 41) ^ 0xDC) + 37) ^ 0x81;
  else
    v8 = -v6;
  v9 = v7 < (v7 + v8);
  if (v6 >= 0)
    v9 = v7 > (v7 - v8);
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                      + 8
                                                                      * (v2 ^ (8 * (v8 > 1u || v9))))
                                                          - 4))(LODWORD(STACK[0x228]), a1, LODWORD(STACK[0x240]));
}

uint64_t sub_10002DACC@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;

  *(_DWORD *)(a2 + 4 * (v8 * a4)) = a1 ^ v4 ^ a3 ^ *(_DWORD *)(v7
                                                                                + 4
                                                                                * (((v8 * a4) ^ v9) & (((v6 + 408) | 0x41D) - 3552) ^ 0x77));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((1517 * (v8 + 1 == v5 + 256)) ^ v6)) - 4))();
}

uint64_t sub_10002DB34@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;

  v11 = (v5 + v6) * a4;
  v12 = a1 ^ v4 ^ a3;
  v13 = v12 ^ *(_DWORD *)(v7 + 4 * ((v8 + 1469) ^ ((a4 + v11) ^ v9) ^ 0xEA8u));
  *(_DWORD *)(a2 + 4 * ((v5 + v6) * a4)) = v12 ^ *(_DWORD *)(v7
                                                                              + 4
                                                                              * ((v11 ^ v9) ^ 0x77u));
  *(_DWORD *)(a2 + 4 * ((a4 + v11) & 0xFE)) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((1509 * (v5 == 254)) ^ v8)) - 4))();
}

uint64_t sub_10002DBB4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  _BOOL4 v6;

  *(_QWORD *)(v4 - 176) = (v2 + 1052);
  v5 = *(uint64_t (**)(uint64_t))(v4 - 184);
  *(_QWORD *)(v4 - 216) = a2;
  v6 = v5(1032) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((5409 * v6) ^ v2)))();
}

uint64_t sub_10002DC14()
{
  int v0;
  char v1;
  uint64_t v2;
  int v3;
  unsigned __int8 v4;
  int v5;
  _BOOL4 v6;

  v3 = (char)(((v1 ^ 0x76) + 23) & 0xFE ^ 0xA5);
  v4 = -123 * (((v1 ^ 0x76) + 23) & 0xFE ^ 0xA5);
  if (v3 >= 0)
    LOBYTE(v5) = ((v1 ^ 0x76) + 23) & 0xFE ^ 0xA5;
  else
    v5 = -v3;
  if (v3 >= 0)
    v6 = v4 > ((v4 - (_BYTE)v5) & 0xFEu);
  else
    v6 = v4 < ((v4 + (_BYTE)v5) & 0xFEu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 + 365) | 0x23) ^ (1063 * (v5 < 2u && !v6))))
                            - 8))();
}

uint64_t sub_10002E040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  v6 = (v3 + 3548);
  v7 = *(uint64_t (**)(uint64_t))(v5 - 184);
  *(_QWORD *)(v5 - 224) = a3;
  v8 = *(_QWORD *)(v4 + 8 * (((v7(1032) != 0) * (((v3 + 1058) | 0x22C) + 5266)) ^ v3));
  *(_QWORD *)(v5 - 176) = v6;
  return ((uint64_t (*)(void))(v8 - v6 + 4851))();
}

uint64_t sub_100032C78()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 == 15) * v2) ^ v1)) - 8))();
}

uint64_t sub_100032D44(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v3 - 176) ^= *(_DWORD *)(v3 - 188);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 + v1)) - 8))();
}

uint64_t sub_100033ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 v8;
  int v9;
  _BOOL4 v10;

  v7 = (char)(((v5 ^ 0xD3) + (LOBYTE(STACK[0x250]) ^ 0xFD)) & 0xFE ^ 3);
  v8 = -25 * (((v5 ^ 0xD3) + (LOBYTE(STACK[0x250]) ^ 0xFD)) & 0xFE ^ 3);
  if (v7 >= 0)
    LOBYTE(v9) = ((v5 ^ 0xD3) + (LOBYTE(STACK[0x250]) ^ 0xFD)) & 0xFE ^ 3;
  else
    v9 = -v7;
  v10 = v8 > ((v8 - (_BYTE)v9) & 0xFEu);
  if (v7 < 0)
    v10 = v8 < ((v8 + (_BYTE)v9) & 0xFEu);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v6 - 168)
                                                                                                  + 8 * ((6562 * (v9 > 1u || v10)) ^ v5))
                                                                                      - 8))(a1, a2, a3, a4, a5, ((*(_DWORD *)(v6 - 176) ^ LODWORD(STACK[0x258])) >> 8) ^ 0xE2B6B8);
}

uint64_t sub_100033E44@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  *(_DWORD *)(a1 + 4 * (v8 * a4)) = a2 ^ v5 ^ a3 ^ *(_DWORD *)(v6
                                                                                + 4
                                                                                * (((((v8 * a4) ^ v9) & (v7 ^ 0x8B8))
                                                                                  - ((2 * ((v8 * a4) ^ v9)) & 0xD0)
                                                                                  + 104) ^ 0x7Eu));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((1173 * (v8 + 1 != v4 + 256)) ^ v7)) - 8))();
}

uint64_t sub_100034148@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,int a57,unsigned int a58,uint64_t a59,unsigned int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a64;
  unsigned int a65;
  int v65;
  uint64_t v66;
  int v67;
  unsigned __int8 v68;
  unsigned int v69;
  int v70;
  unsigned __int8 v71;
  unsigned __int8 v72;
  _BOOL4 v73;
  _BOOL4 v74;
  _BOOL4 v75;
  _BOOL4 v76;

  v67 = (char)(((a56 & 0xFE ^ 0xCF) + 116) ^ 0x7E);
  v68 = 65 * (((a56 & 0xFE ^ 0xCF) + 116) ^ 0x7E);
  v69 = v68;
  if (v67 >= 0)
    LOBYTE(v70) = ((a56 & 0xFE ^ 0xCF) + 116) ^ 0x7E;
  else
    v70 = -v67;
  v71 = v68 - v70;
  v72 = v68 + v70;
  v73 = v70 < 2u;
  v74 = v69 > v71;
  v75 = v69 < v72;
  if (v67 >= (char)((v65 ^ 0x2C) + 70))
    v76 = v74;
  else
    v76 = v75;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v66 - 168)
                                                                                      + 8
                                                                                      * ((44 * (v73 && !v76)) ^ v65))
                                                                          - 8))(a60, a58, a1, a65, a64);
}

uint64_t sub_1000370E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t result;
  char *v7;
  uint64_t v8;
  __int16 v9;
  char v10;

  v2 = (uint64_t)*(&off_100236540
                + (byte_1001FC880[byte_1001E55E0[(-21
                                                                                  * ((dword_10023CCE8 + qword_10023CAA8) ^ 0x71))] ^ 0xD0] ^ (-21 * ((dword_10023CCE8 + qword_10023CAA8) ^ 0x71)))
                - 51);
  v3 = 1509257707 * ((*(_QWORD *)(v2 - 965231491) + qword_10023CAA8) ^ (unint64_t)&v10 ^ 0xDB617684DF9DEA71);
  qword_10023CAA8 = v3;
  *(_QWORD *)(v2 - 965231491) = v3;
  v4 = ((uint64_t (*)(void))((char *)*(&off_100236540
                                    + ((-21 * (qword_10023CAA8 ^ 0x71 ^ v3)) ^ byte_1001FC880[byte_1001E55E0[(-21 * (qword_10023CAA8 ^ 0x71 ^ v3))] ^ 0x71])
                                    + 13)
                          - 1394092522))();
  v5 = -21 * ((*(_DWORD *)(v2 - 965231491) + qword_10023CAA8) ^ 0x71);
  ((void (*)(uint64_t, _QWORD, _QWORD, uint64_t *, uint64_t, _QWORD))((char *)*(&off_100236540
                                                                                      + (byte_1001FC680[byte_1001E53E0[v5] ^ 0xA0] ^ v5)
                                                                                      + 325)
                                                                            - 1354090615))(v4, 0, 0, &v8, 1, 0);
  result = ((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_100236540
                                                               + ((-21
                                                                                                * (qword_10023CAA8 ^ 0x71 ^ *(_DWORD *)(v2 - 965231491))) ^ byte_1001FC880[byte_1001E55E0[(-21 * (qword_10023CAA8 ^ 0x71 ^ *(_DWORD *)(v2 - 965231491)))] ^ 0x5F])
                                                               + 158)
                                                     - 977945463))(a1, 1);
  v7 = (char *)*(&off_100236540
               + ((-21 * (qword_10023CAA8 ^ 0x71 ^ dword_10023CCE8)) ^ byte_1001FC880[byte_1001E55E0[(-21 * (qword_10023CAA8 ^ 0x71 ^ dword_10023CCE8))] ^ 0x5F])
               - 38)
     - 1897918883;
  if (v9 == -6)
    __asm { BR              X8 }
  if (v9 == -5)
  {
    pthread_once((pthread_once_t *)&unk_10023CD48, sub_1001C4250);
    pthread_rwlock_wrlock((pthread_rwlock_t *)&unk_10023CB18);
    ((void (*)(uint64_t, void (*)()))pthread_once)(0x10023CD48, sub_1001C4250);
    __asm { BR              X8 }
  }
  return result;
}

void sub_1000386C8(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 40) == 0x58CBC43E961A35C6
    || *(_QWORD *)(a1 + 16) == 0
    || *(_QWORD *)(a1 + 32) == 0xB8BD1ECE73DD98CLL;
  v1 = *(_DWORD *)(a1 + 52) - 1716948049 * ((((2 * a1) | 0xD860BCEE) - a1 - 1815109239) ^ 0x47281DFA);
  __asm { BR              X10 }
}

uint64_t sub_100038828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;

  v22 = v17;
  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((115 * (*(_DWORD *)(a1 + 4) - v16 != a9 - 1)) ^ v14)) - ((v14 - 2876) ^ 0x409));
  v20 = *(_QWORD *)(a4 + 8 * (v14 - 3799)) - 962052998;
  STACK[0x298] = *(_QWORD *)(a4 + 8 * (v14 - 3205)) - 693976610;
  STACK[0x328] = *(_QWORD *)(a4 + 8 * (v14 ^ 0xE05)) - 129758882;
  STACK[0x290] = *(_QWORD *)(a4 + 8 * (v14 ^ 0xEBD)) - 2114597898;
  STACK[0x5A8] = v15;
  STACK[0x5A0] = v18;
  STACK[0x398] = v20;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a2, a14, v22);
}

uint64_t sub_100038908@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(uint64_t);
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x980]) = a1;
  v4 = v1(49);
  v5 = *(_QWORD *)(v3 + 8 * (((v4 != 0) * (v2 + 5070)) ^ v2));
  STACK[0x6A0] = v4;
  return ((uint64_t (*)(void))(v5 - ((v2 - 701) | 2u) + 318))();
}

uint64_t sub_100038960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v1 - 1;
  *(_BYTE *)(a1 + v5) = *((_BYTE *)*(&off_100236540 + (v3 ^ 0x109A)) + (v5 & 0xF) - 27505615) ^ *(_BYTE *)(v2 + v5) ^ -(v5 & 0xF | ((v5 & 0xF) << 6)) ^ (27 * (v5 & 0xF)) ^ *((_BYTE *)*(&off_100236540 + v3 - 4402) + (v5 & 0xF) - 1204159950) ^ *((_BYTE *)*(&off_100236540 + v3 - 4264) + (v5 & 0xF) - 534510471) ^ *(_BYTE *)(STACK[0x328] + (v5 & 0xF)) ^ *(_BYTE *)(STACK[0x298] + (v5 & 0xF) + 5) ^ *(_BYTE *)((v5 & 0xF) + STACK[0x290] + 3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((15 * (v5 != 0)) ^ v3)) - 8))();
}

uint64_t sub_100038A40()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2781 * (v0 == 47)) ^ v1)) - 8))();
}

uint64_t sub_100038B00@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  int v2;
  uint64_t v3;

  *(_BYTE *)(a1 + 48) = (a2 & 1) - 23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v2) - ((205 * (v2 ^ 0xF4Bu)) ^ 0x409)))();
}

uint64_t sub_100038B44()
{
  int v0;
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  STACK[0xA58] = v2;
  LODWORD(STACK[0x730]) = v0;
  v5 = v1(16) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((4095 * (((((v3 ^ 0x547) + 414) ^ v5) & 1) == 0)) ^ v3)) - 8))();
}

uint64_t sub_100038B9C(_QWORD *a1)
{
  int v1;
  uint64_t v2;

  *a1 = 0;
  a1[1] = 0;
  STACK[0xA20] = (unint64_t)(a1 + 0x3F9848C400A5072);
  STACK[0x7F0] = *(_QWORD *)(v2 + 8 * v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x6A5)) - (v1 + 4362) + 5098))();
}

uint64_t sub_100038C00()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3662 * (v0 == (((5 * (v1 ^ 0xF98) - 463) | 4) ^ 0x39C12842))) ^ (v1 - 2820)))
                            - 8))();
}

uint64_t sub_100038C48()
{
  int v0;
  uint64_t v1;

  STACK[0x7F0] = *(_QWORD *)(v1 + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x750)) - 4))();
}

uint64_t sub_100038CB0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1023 * (v0 == ((((v1 + 224873705) & 0xF298A557) + 465) ^ 0x39C12A13))) ^ (v1 - 2820)))
                            - 8))();
}

uint64_t sub_100038D00()
{
  int v0;
  uint64_t v1;

  STACK[0x7F0] = *(_QWORD *)(v1 + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + (v0 ^ 0x10F9) - 4804)) - 4))();
}

uint64_t sub_100038D3C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((2089 * (v0 == ((83 * (v1 ^ 0xF02)) ^ 0x39C12B41))) ^ (v1 + 1008))))();
}

uint64_t sub_100038D84()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (v0 + 3915);
  v3 = *(_QWORD *)(v1 + 8 * v0) - 8;
  v4 = *(_QWORD *)(v1 + 8 * (v0 + 2469));
  STACK[0x828] = v3;
  return ((uint64_t (*)(void))(v4 - (v2 ^ 0x1198)))();
}

uint64_t sub_100038DC0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == ((v1 - 3519) ^ 0x39C12842)) * ((v1 - 2820) ^ 0x32B)) ^ (v1 + 1008))))();
}

uint64_t sub_100038DFC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0xA20];
  STACK[0x8F8] = STACK[0xA20];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((v2 != 0x1FCC246200528390) * (((a1 - 886348459) & 0x34D497EF) + 3190)) ^ a1))
                            - 8))();
}

uint64_t sub_100038E54@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v1 = a1 + 3570;
  v2 = (a1 - 881) | 0x1224;
  v3 = (a1 - 692692074) & 0x2949AF6D;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x398])(32);
  v5 = STACK[0x5A8];
  STACK[0x668] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v2 - 933) ^ v3) * (v4 == 0)) ^ v1)) - 8))();
}

uint64_t sub_100038EC8(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 26;
  v4 = v2(26);
  v5 = STACK[0x5A8];
  *(_QWORD *)(a1 + 24) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1564 * (v4 != 0)) ^ v1))
                            - (((v1 + 735024357) & 0xD4305C67)
                             + (((v1 - 4020) | 0xC05u) ^ 0xFFFFFFFFFFFFF302))))();
}

uint64_t sub_100038F7C(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8] + 8 * (LODWORD(STACK[0x4A0]) + a1 - 3045)) - 8))();
}

uint64_t sub_100039AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v7 = (__ROR8__(a1, 8) & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56;
  v8 = __ROR8__(v7 ^ 0xBD7E06799BE56458, 8);
  v7 ^= 0x8F41F671013B3EEALL;
  v9 = (v1 - ((v8 + v7) | v1) + ((v8 + v7) | 0x44B62583A3977F74)) ^ 0xC1336647024E4607;
  v10 = v9 ^ __ROR8__(v7, 61);
  v11 = __ROR8__(v9, 8);
  v12 = (((2 * (v11 + v10)) | 0x323EAE4DC469A136) - (v11 + v10) + 0x66E0A8D91DCB2F65) ^ 0x8EC6F03746A53088;
  v13 = v12 ^ __ROR8__(v10, 61);
  v14 = (__ROR8__(v12, 8) + v13) ^ 0x19D8A247FDB338A4;
  v15 = v14 ^ __ROR8__(v13, 61);
  v16 = __ROR8__(v14, 8);
  v17 = __ROR8__((((2 * (v16 + v15)) | 0x99D4A711EF1DFEA4) - (v16 + v15) + 0x3315AC77087100AELL) ^ 0x5450F655D29B4EADLL, 8);
  v18 = (((2 * (v16 + v15)) | 0x99D4A711EF1DFEA4) - (v16 + v15) + 0x3315AC77087100AELL) ^ 0x5450F655D29B4EADLL ^ __ROR8__(v15, 61);
  v19 = (v17 + v18) ^ 0xBDC40B7C2F73B18BLL;
  v20 = v19 ^ __ROR8__(v18, 61);
  v21 = __ROR8__(v19, 8);
  v22 = (((2 * (v21 + v20)) & 0x76F4CB0A5942316ELL) - (v21 + v20) - 0x3B7A65852CA118B8) ^ 0x1F99DD3A6CB8E4D9;
  v23 = v22 ^ __ROR8__(v20, 61);
  v24 = __ROR8__(v22, 8);
  *(_BYTE *)(v5 + 4) = v6 ^ (((v2 - ((v24 + v23) | v2) + ((v24 + v23) | 0x6AEB4EDBAD4DAE82)) ^ 0x1558F78333D7CD2AuLL) >> ((8 * a1) & 0x38)) ^ 0x5E;
  v25 = __ROR8__(v5 + 5, 8);
  v26 = (0x19B801FEECA434A9 - (v25 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19900A891D59969ALL | ((v25 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                      + 0x4647FE01135BCB56) & 0xE66FF576E2A66965;
  v27 = v26 ^ 0xA4EE0CF086BCF2C2;
  v26 ^= 0x96D1FCF81C62A870;
  v28 = __ROR8__(v27, 8);
  v29 = (((2 * (v28 + v26)) & 0xACA8166A5EB3CF94) - (v28 + v26) + 0x29ABF4CAD0A61835) ^ 0xAC2EB70E717F2146;
  v30 = v29 ^ __ROR8__(v26, 61);
  v31 = __ROR8__(v29, 8);
  v32 = __ROR8__((((2 * (v31 + v30)) | 0x2293CA789F429180) - (v31 + v30) + 0x6EB61AC3B05EB740) ^ 0x8690422DEB30A8D3, 8);
  v33 = (((2 * (v31 + v30)) | 0x2293CA789F429180) - (v31 + v30) + 0x6EB61AC3B05EB740) ^ 0x8690422DEB30A8D3 ^ __ROR8__(v30, 61);
  v34 = (((2 * ((v32 + v33) ^ 0xCC086B7E11158D40)) | 0x5501BC16D4271A0ALL)
       - ((v32 + v33) ^ 0xCC086B7E11158D40)
       + 0x557F21F495EC72FBLL) ^ 0x7F50173286B538E1;
  v35 = v34 ^ __ROR8__(v33, 61);
  v36 = __ROR8__(v34, 8);
  v37 = (((2 * (v36 + v35)) & 0x5509A1D8572C699CLL) - (v36 + v35) - 0x2A84D0EC2B9634CFLL) ^ 0x4DC18ACEF17C7ACELL;
  v38 = v37 ^ __ROR8__(v35, 61);
  v39 = (__ROR8__(v37, 8) + v38) ^ 0xBDC40B7C2F73B18BLL;
  v40 = v39 ^ __ROR8__(v38, 61);
  v41 = __ROR8__(v39, 8);
  v42 = __ROR8__((v41 + v40 - ((2 * (v41 + v40)) & 0x36B59B72ABB54EAELL) + 0x1B5ACDB955DAA757) ^ 0xC0468AF9EA3CA4C6, 8)+ ((v41 + v40 - ((2 * (v41 + v40)) & 0x36B59B72ABB54EAELL) + 0x1B5ACDB955DAA757) ^ 0xC0468AF9EA3CA4C6 ^ __ROR8__(v40, 61));
  *(_BYTE *)(v5 + 5) = v4 ^ (((v42 - ((2 * v42) & 0x1E4939ED430D7488) - 0x70DB63095E7945BCLL) ^ 0xF09725AE3F1CD9ECLL) >> ((8 * (v5 + 5)) & 0x38)) ^ 0x25;
  return v3();
}

uint64_t sub_100039F8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8] + 8 * (a4 - 1284)) - 8))();
}

uint64_t sub_100039FD4(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8] + 8 * ((a1 - 887) ^ (a1 - 3056) ^ 0x29A)) - 8))();
}

uint64_t sub_10003C2E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v14;

  v7 = ((v1 + 32826707) & 0xFE0B1DEE ^ 0x1049) + v0 + v4;
  v8 = v2 + STACK[0x328] - v7;
  v9 = (v2 | v3) - v7;
  v10 = (v2 | v5) - v7;
  v14 = STACK[0x590] - v4 - 10 > 0xF
     && v8 > 0xF
     && v9 + 5 >= (unint64_t)(5 * (v1 ^ 0xFFFu)) - 3829
     && (unint64_t)(v10 + 3) > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((432 * v14) ^ v1)) - 8))();
}

uint64_t sub_10003C388()
{
  unsigned int v0;
  unsigned __int8 v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1498 * ((v1 ^ (v0 < v2 - 4144)) & 1)) ^ v2)) - 4))();
}

uint64_t sub_10003E154@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x758] = 0;
  v3 = *(_QWORD *)(v2 + 8 * (v1 ^ 0x2D0));
  STACK[0x818] = *(_QWORD *)(v2 + 8 * v1);
  return ((uint64_t (*)(void))(v3 - (a1 | 0x4A5u) + 3299))();
}

uint64_t sub_100041C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t (*v5)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t);

  v5 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))(STACK[0x5A8] + 8 * v4);
  *(int64x2_t *)&STACK[0x330] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x340] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x4C0] = vdupq_n_s64(0x4647FE01135BCB56uLL);
  *(int64x2_t *)&STACK[0x4B0] = vdupq_n_s64(0x39B801FEECA434A9uLL);
  *(int64x2_t *)&STACK[0x4A0] = vdupq_n_s64(0x781E23379EAAC9E2uLL);
  *(int64x2_t *)&STACK[0x490] = vdupq_n_s64(0x7A1E23379EAAC9E2uLL);
  *(int64x2_t *)&STACK[0x480] = vdupq_n_s64(0xC760254E054FADBALL);
  *(int64x2_t *)&STACK[0x470] = vdupq_n_s64(0xF55FD5469F91F708);
  *(int64x2_t *)&STACK[0x460] = vdupq_n_s64(0x99F62525A779C816);
  *(int64x2_t *)&STACK[0x450] = vdupq_n_s64(0x3304ED6D2C431BF4uLL);
  *(int64x2_t *)&STACK[0x410] = vdupq_n_s64(0xB681AEA98D9A2287);
  *(int64x2_t *)&STACK[0x300] = vdupq_n_s64(0x8B3A9AFE01051DDFLL);
  *(int64x2_t *)&STACK[0x3F0] = vdupq_n_s64(0x631CC2105A6B0233uLL);
  *(int64x2_t *)&STACK[0x400] = vdupq_n_s64(0x74C56501FEFAE220uLL);
  *(int64x2_t *)&STACK[0x3D0] = vdupq_n_s64(0x5D7F84C20D403FC7uLL);
  *(int64x2_t *)&STACK[0x3E0] = vdupq_n_s64(0x4500F67BE57F8070uLL);
  *(int64x2_t *)&STACK[0x3B0] = vdupq_n_s64(0xE76FFAE559B3D74FLL);
  *(int64x2_t *)&STACK[0x3C0] = vdupq_n_s64(0x44A72685F0F30763uLL);
  *(int64x2_t *)&STACK[0x3A0] = vdupq_n_s64(0x1890051AA64C28B0uLL);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0x802AA0C78359994FLL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xDB1C4740BFE60391);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0xBDC40B7C2F73B18BLL);
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0x7FB3B9589E9A63A8uLL);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0xB9B801FEECA434A9);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x647FE01135BCB56uLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0x3D30CEFD18883FD1uLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0xC0CF3102E777C02ELL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x7FB1377B7C92A476uLL);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0x858543C4A1D93973);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x4D8EC773E64CFEC4uLL);
  *(_OWORD *)&STACK[0x240] = xmmword_100212CC0;
  return v5(a3 + v3, 0x86C38ACABB47912ALL, 0x793C753544B86ED5, 0x6EE5D224E0298EC6, 0x19D8A247FDB338A4, 0xEF00333AA1E0C94ALL, 0xF780199D50F064A5, 0x6F3ABC4075E5D55ALL);
}

#error "100043E24: call analysis failed (funcsize=113)"

uint64_t sub_100045888()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5A8] + 8 * (v0 - 2677)) - 8))(1662);
}

uint64_t sub_100046EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v22 = v21;
  v23 = __ROR8__(v20 + 9, 8);
  v24 = (v23 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v23 & 0xF8FFFFFFFFFFFFFFLL) - 0x737003FDD9486954) & 0xBAD4285B84146F92)
      + 0x23B2122ED566031FLL;
  v25 = __ROR8__(v24 ^ 0x6014125459EF5391, 8);
  v26 = v24 ^ a1;
  v27 = (v25 + v26) ^ 0x858543C4A1D93973;
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = (__ROR8__(v27, 8) + v28) ^ 0x17D9A711A491E013;
  v30 = v29 ^ __ROR8__(v28, 61);
  v31 = __ROR8__(v29, 8);
  v32 = __ROR8__((v8 - ((v31 + v30) | v8) + ((v31 + v30) | a2)) ^ a3, 8);
  v33 = (v8 - ((v31 + v30) | v8) + ((v31 + v30) | a2)) ^ a3 ^ __ROR8__(v30, 61);
  v34 = ((a4 | (2 * (v32 + v33))) - (v32 + v33) + a5) ^ a6;
  v35 = v34 ^ __ROR8__(v33, 61);
  v36 = __ROR8__(v34, 8);
  v37 = (v11 - ((v36 + v35) | v11) + ((v36 + v35) | a7)) ^ a8;
  v38 = v37 ^ __ROR8__(v35, 61);
  v39 = __ROR8__(v37, 8);
  v40 = (v9 - ((v39 + v38) | v9) + ((v39 + v38) | v14)) ^ v15;
  v41 = v40 ^ __ROR8__(v38, 61);
  v42 = __ROR8__(v40, 8);
  v43 = v10 - 1;
  *(_BYTE *)(v20 + 9) = (((v18 - ((v17 | ~(v42 + v41)) + ((v42 + v41) | v16))) ^ v19) >> ((8 * (v20 + 9)) & 0x38)) ^ *(_BYTE *)(v22 + v43);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8] + 8 * (((v43 != 0) * v13) ^ v12)) - 8))();
}

uint64_t sub_100047118()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((110
                                          * (((*(_QWORD *)(STACK[0x668] + 24) == 0) ^ (41 * (((v0 - 85) | 4) ^ 0xAD))) & 1)) ^ (v0 + 943)))
                            - 8))();
}

uint64_t sub_100047164()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  *(_QWORD *)(v0 + 24) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5A8] + 8 * v1) - (((v1 - 3764) | 1u) ^ 0x409)))(v2);
}

uint64_t sub_10004718C()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5A8] + 8 * v0) - (((v0 - 1019) | 0x140u) ^ 0x14ELL)))(v1);
}

uint64_t sub_1000476BC()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8] + 8 * v1) - v0 + 1017))();
}

uint64_t sub_1000479FC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  STACK[0x688] = 0;
  LODWORD(STACK[0x86C]) = 0;
  STACK[0x9C0] = 0xB8BD1ECE73DD98CLL;
  LODWORD(STACK[0x85C]) = 680845731;
  STACK[0xAC8] = 0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1011 * (((v1 == v2 + 680841886) ^ (89 * (a1 ^ 0xFC))) & 1)) ^ a1)))();
}

uint64_t sub_100047D5C@<X0>(unsigned int a1@<W8>)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((5063
                                          * (((STACK[0x880] == 0xB56F0B975C5A0B40) ^ (11 * (a1 ^ v1))) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_100048480(_QWORD *a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;

  *a1 = 0;
  a1[1] = 0;
  *v1 = a1 + 0x3F9848C400A5072;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v2 ^ (STACK[0x700] == 0)) & 1) * ((v2 - 2565) ^ 0x1A41)) ^ v2))
                            - 8))();
}

uint64_t sub_100048508()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((123 * (v0 == (v1 ^ 0x39C12601))) ^ (v1 + 1710))) - 4))();
}

uint64_t sub_100048628()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 3332) ^ 0xC48)) - (v1 ^ 0x1358)))();
}

uint64_t sub_1000487A8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 771)))();
}

_QWORD *sub_100048830()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0xA00] = v0;
  STACK[0xA40] = *(_QWORD *)(v2 + 8 * (v1 - 3422)) - 4;
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v2
                                                                             + 8
                                                                             * ((((v1 - 1970120650) & 0x756D9EE4) + 3009) ^ (v1 - 3422)))
                                                                 - 4))(&STACK[0xA00]);
}

uint64_t sub_1000489E8()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = (v0 - 3996) | 0x804;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x398])(32);
  v3 = STACK[0x5A8];
  STACK[0x938] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((((4 * v1) ^ 0x25F0) + 769 * (v1 ^ 0xDE3) - 8547) * (v2 != 0)) ^ v1))
                            - 4))();
}

uint64_t sub_100048EC8()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*(_BYTE *)(v2 + 99) == 0) * (v1 ^ 0x200)) | v0)) - 8))();
}

uint64_t sub_100048EF4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t))
{
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;

  v17 = a1 | 0x208;
  *(_DWORD *)(v16 - 224) = v13 + ((v16 - 1483812021 - 2 * ((v16 - 224) & 0xA78ED42B)) ^ 0x7856260A) * v15 + 932;
  v18 = a13(v16 - 224);
  v19 = STACK[0x5A8];
  *(_DWORD *)(v14 + 107) = *(_DWORD *)(v16 - 216) ^ (v17 - 2107606230);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * v13) - 8))(v18);
}

uint64_t sub_100048F70()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 4196)) - (v0 + 5741) + 6259))();
}

uint64_t sub_100049088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x7F0] = (a1 | 0x64) + 4361 + *(_QWORD *)(v1 + 8 * (a1 | 0x64)) - 5106;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((a1 | 0x64) + 348)) - 4))();
}

uint64_t sub_100049418()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  STACK[0x788] = 0;
  LODWORD(STACK[0x734]) = 0;
  v2 = *(uint64_t (**)(void))(v1 + 8 * (v0 + 4250));
  STACK[0x220] = (unint64_t)&STACK[0x734];
  STACK[0x210] = (unint64_t)&STACK[0x788];
  return v2();
}

uint64_t sub_100049CB0()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x398])(128);
  v2 = STACK[0x5A8];
  *(_QWORD *)STACK[0xD80] = v1 + 0x73C92FE99193FD00;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((v1 != 0) * ((v0 + 348046534) & 0xEB412DBF ^ 0x40E)) ^ v0))
                            - 8))();
}

uint64_t sub_10004A068@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char *v6;
  BOOL v7;
  int v10;

  v5 = (v2 + v1) & 0x1643DB9C;
  if ((unint64_t)(v3 - (a1 - 0x73C92FE99193FC89) + 0x4A90F468A3A5F527) > 0xF)
  {
    v6 = (char *)*(&off_100236540 + (v2 ^ 0x8F4)) - a1 + 0x73C92FE945259567;
    v7 = v6 + 15 != (char *)15 && (unint64_t)v6 < 0xFFFFFFFFFFFFFFF1;
  }
  else
  {
    v7 = 0;
  }
  v10 = v7
     && (unint64_t)*(&off_100236540 + v2 - 1982) - a1 + 0x73C92FE94402958BLL > 0xF
     && (unint64_t)*(&off_100236540 + v2 - 2333) - a1 + 0x73C92FE974C000E5 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v10 * (v5 ^ 0x119C)) ^ v2)) - 4))();
}

uint64_t sub_10004A27C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 571)) - 4))();
}

uint64_t sub_10004A358@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xA64]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((v2 == (a1 ^ 0x39C1220B)) * ((a1 + v1) & 0xADBBDBED ^ 0x18F0)) ^ a1))
                            - 4))();
}

uint64_t sub_10004A3B0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0xA2C]) = STACK[0xD8C];
  LODWORD(STACK[0x868]) = 680845731;
  LODWORD(STACK[0x9FC]) = 680845731;
  LODWORD(STACK[0x88C]) = STACK[0xD88];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - ((v1 + a1) & 0xF6C207FF ^ 0x57BLL)))();
}

uint64_t sub_10004A688@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 + (v1 | v2) + 2585)) - 8))();
}

uint64_t sub_10004A778()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((7496 * (v1 == (v0 ^ 0x39C1288F))) ^ (v2 - 2648))) - 8))();
}

uint64_t sub_10004A7FC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *v2;
  STACK[0x6B8] = v3;
  STACK[0xA88] = v4;
  STACK[0x878] = 0;
  LODWORD(STACK[0x944]) = 0;
  LODWORD(STACK[0xA30]) = 680845731;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 != 0x1FCC246200528390) * ((v1 ^ 0xA2) - 1382)) ^ a1)))();
}

uint64_t sub_10004A858()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((11 * (*(_QWORD *)(v1 - 0x1FCC246200528390) == 0)) ^ v0))
                            - (v0 - 2329)
                            + 1670))();
}

uint64_t sub_10004AC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x5A8] + 8 * v3))(a1, a2, a3, 1837260760, 2457706495, 1804189484);
}

uint64_t sub_10004ACDC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8] + 8 * (((*v1 == 0) * v2) ^ (a1 + 696))) - 4))();
}

uint64_t sub_10004EC1C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6, uint64_t a7, char a8)
{
  _BYTE *v8;
  char v9;
  uint64_t v10;

  *a5 = a8;
  *v8 = v9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x5A8] + 8 * (a1 ^ 0x11ED))
                                                                    - 8))(v10, a2, a3, *(_QWORD *)(STACK[0x5A8] + 8 * a1));
}

uint64_t sub_10004ED00()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((224 * (v1 < (((v0 ^ 0x115F) + 2517) ^ (5 * (v0 ^ 0x115F)) ^ 0x3DBu))) ^ v0)))();
}

uint64_t sub_10004FCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  int v3;
  char v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                       + 8
                                                                       * ((1684
                                                                         * ((((v4 & 8) == 0) ^ ((3 * a3) ^ (5 * (v3 ^ 0x48)))) & 1)) ^ v3))
                                                           - 4))(a1, a2, v4 & 0xF);
}

uint64_t sub_1000515EC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64x2_t v9;
  int64x2_t v10;
  int64x2_t v11;
  int64x2_t v12;
  int64x2_t v13;
  int64x2_t v14;
  int64x2_t v15;
  int64x2_t v16;
  int64x2_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int64x2_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int64x2_t v25;
  int64x2_t v26;
  int8x16_t v27;
  int64x2_t v28;
  int64x2_t v29;
  int64x2_t v30;
  int64x2_t v31;
  int8x16_t v32;
  int64x2_t v33;
  int8x16_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int64x2_t v37;
  int64x2_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int64x2_t v42;
  int8x16_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int8x16_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int8x16_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int8x16_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int64x2_t v73;
  int8x16_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int8x16_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int8x16_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int8x16_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int8x16_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int8x16_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int8x16_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int8x16_t v132;
  int8x16_t v133;
  int64x2_t v134;
  int8x16_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int8x16_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int8x16_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int8x16_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int8x16_t v161;
  int64x2_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int8x16_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int8x16_t v175;
  int8x16x4_t v177;

  *(_OWORD *)&STACK[0x4A0] = *(_OWORD *)(v6 + v8 - 16);
  v9.i64[0] = v6 + v8 - 5;
  v9.i64[1] = v6 + v8 + a2 - 2351;
  v10 = v9;
  v11.i64[0] = v6 + v8 - 1;
  v11.i64[1] = v6 + v8 - 2;
  v12.i64[0] = v6 + v8 - 3;
  v12.i64[1] = v6 + v8 - 4;
  v9.i64[0] = v6 + v8 - 7;
  v9.i64[1] = v6 + v8 - 8;
  v13.i64[0] = v6 + v8 - 11;
  v13.i64[1] = v6 + v8 - 12;
  *(int64x2_t *)&STACK[0x490] = v13;
  v14.i64[0] = v6 + v8 - 13;
  v14.i64[1] = v6 + v8 - 14;
  v15.i64[0] = v6 + v8 - 15;
  v15.i64[1] = v6 + v8 - 16;
  *(int64x2_t *)&STACK[0x2F0] = v14;
  *(int64x2_t *)&STACK[0x300] = v15;
  *(int8x16_t *)&STACK[0x2D0] = vorrq_s8((int8x16_t)vshlq_n_s64(v15, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v15, 8uLL));
  *(int8x16_t *)&STACK[0x2E0] = vorrq_s8((int8x16_t)vshlq_n_s64(v14, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v14, 8uLL));
  *(int64x2_t *)&STACK[0x2B0] = v10;
  *(int8x16_t *)&STACK[0x2C0] = vorrq_s8((int8x16_t)vshlq_n_s64(v13, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v13, 8uLL));
  v16 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v10, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v10, 8uLL)), *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v17 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v11, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v11, 8uLL)), *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v18 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v12, 8uLL)), *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v19 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v9, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v9, 8uLL)), *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v20 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v19, 1uLL), *(int8x16_t *)&STACK[0x520]), v19);
  v21 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v18, 1uLL), *(int8x16_t *)&STACK[0x520]), v18);
  v22 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v17, 1uLL), *(int8x16_t *)&STACK[0x520]), v17);
  *(int64x2_t *)&STACK[0x2A0] = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v16, 1uLL), *(int8x16_t *)&STACK[0x520]), v16);
  v23 = (int8x16_t)vaddq_s64(v21, *(int64x2_t *)&STACK[0x480]);
  v24 = (int8x16_t)vaddq_s64(v20, *(int64x2_t *)&STACK[0x480]);
  v25 = (int64x2_t)veorq_s8(v24, *(int8x16_t *)&STACK[0x500]);
  v26 = (int64x2_t)veorq_s8(v23, *(int8x16_t *)&STACK[0x500]);
  v27 = *(int8x16_t *)&STACK[0x470];
  v28 = (int64x2_t)veorq_s8(v23, *(int8x16_t *)&STACK[0x470]);
  v29 = (int64x2_t)veorq_s8(v24, *(int8x16_t *)&STACK[0x470]);
  v30 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v25, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 8uLL)), v29);
  v31 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v26, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v26, 8uLL)), v28);
  v32 = *(int8x16_t *)&STACK[0x550];
  v33 = *(int64x2_t *)&STACK[0x460];
  v34 = *(int8x16_t *)&STACK[0x580];
  v35 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v31, 1uLL), *(int8x16_t *)&STACK[0x550]), v31), *(int64x2_t *)&STACK[0x460]), *(int8x16_t *)&STACK[0x580]);
  v36 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v30, 1uLL), *(int8x16_t *)&STACK[0x550]), v30), *(int64x2_t *)&STACK[0x460]), *(int8x16_t *)&STACK[0x580]);
  v37 = (int64x2_t)veorq_s8((int8x16_t)v36, vorrq_s8((int8x16_t)vshlq_n_s64(v29, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v29, 0x3DuLL)));
  v38 = (int64x2_t)veorq_s8((int8x16_t)v35, vorrq_s8((int8x16_t)vshlq_n_s64(v28, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v28, 0x3DuLL)));
  v39 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v35, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 8uLL)), v38);
  v40 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v36, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v36, 8uLL)), v37);
  v41 = *(int8x16_t *)&STACK[0x450];
  v42 = *(int64x2_t *)&STACK[0x330];
  v43 = *(int8x16_t *)&STACK[0x410];
  v44 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v39, *(int8x16_t *)&STACK[0x450]), (int64x2_t)vorrq_s8(v39, *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x410]);
  v45 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v40, *(int8x16_t *)&STACK[0x450]), (int64x2_t)vorrq_s8(v40, *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x410]);
  v46 = vorrq_s8((int8x16_t)vshlq_n_s64(v38, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v38, 0x3DuLL));
  v47 = (int64x2_t)veorq_s8((int8x16_t)v45, vorrq_s8((int8x16_t)vshlq_n_s64(v37, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v37, 0x3DuLL)));
  v48 = (int64x2_t)veorq_s8((int8x16_t)v44, v46);
  v49 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v44, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 8uLL)), v48);
  v50 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v45, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 8uLL)), v47);
  v51 = *(int8x16_t *)&STACK[0x3F0];
  v52 = *(int8x16_t *)&STACK[0x400];
  v53 = *(int64x2_t *)&STACK[0x340];
  v54 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v50, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v50, 1uLL), *(int8x16_t *)&STACK[0x400])), *(int64x2_t *)&STACK[0x340]), *(int8x16_t *)&STACK[0x3F0]);
  v55 = vorrq_s8((int8x16_t)vshlq_n_s64(v47, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 0x3DuLL));
  v56 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v49, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v49, 1uLL), *(int8x16_t *)&STACK[0x400])), *(int64x2_t *)&STACK[0x340]), *(int8x16_t *)&STACK[0x3F0]);
  v57 = (int64x2_t)veorq_s8((int8x16_t)v56, vorrq_s8((int8x16_t)vshlq_n_s64(v48, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 0x3DuLL)));
  v58 = (int64x2_t)veorq_s8((int8x16_t)v54, v55);
  v59 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v54, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 8uLL)), v58);
  v60 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v56, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 8uLL)), v57);
  v61 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v60, 1uLL), *(int8x16_t *)&STACK[0x560]), v60), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v62 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v59, 1uLL), *(int8x16_t *)&STACK[0x560]), v59), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v63 = (int64x2_t)veorq_s8((int8x16_t)v62, vorrq_s8((int8x16_t)vshlq_n_s64(v58, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 0x3DuLL)));
  v64 = (int64x2_t)veorq_s8((int8x16_t)v61, vorrq_s8((int8x16_t)vshlq_n_s64(v57, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 0x3DuLL)));
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v62, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 8uLL)), v63), *(int8x16_t *)&STACK[0x510]);
  v66 = vorrq_s8((int8x16_t)vshlq_n_s64(v63, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 0x3DuLL));
  v67 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v61, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 8uLL)), v64), *(int8x16_t *)&STACK[0x510]);
  v68 = (int64x2_t)veorq_s8((int8x16_t)v67, vorrq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 0x3DuLL)));
  v69 = (int64x2_t)veorq_s8((int8x16_t)v65, v66);
  v70 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v69);
  v71 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v67, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 8uLL)), v68);
  v73 = *(int64x2_t *)&STACK[0x3D0];
  v72 = *(int8x16_t *)&STACK[0x3E0];
  v74 = *(int8x16_t *)&STACK[0x3C0];
  v75 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3E0], v70), (int64x2_t)vorrq_s8(v70, *(int8x16_t *)&STACK[0x4C0]))), *(int8x16_t *)&STACK[0x3C0]);
  v76 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3E0], v71), (int64x2_t)vorrq_s8(v71, *(int8x16_t *)&STACK[0x4C0]))), *(int8x16_t *)&STACK[0x3C0]);
  v77 = *(int64x2_t *)&STACK[0x480];
  v78 = (int8x16_t)vaddq_s64(v22, *(int64x2_t *)&STACK[0x480]);
  v79 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v75, vorrq_s8((int8x16_t)vshlq_n_s64(v69, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 0x3DuLL))));
  v80 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v76, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL))));
  v81 = *(int64x2_t *)&STACK[0x3A0];
  v82 = *(int8x16_t *)&STACK[0x3B0];
  v83 = *(int8x16_t *)&STACK[0x350];
  v84 = *(int8x16_t *)&STACK[0x280];
  v177.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v79, 1uLL), *(int8x16_t *)&STACK[0x3B0]), v79), *(int64x2_t *)&STACK[0x3A0]), *(int8x16_t *)&STACK[0x350]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v9, 3uLL), *(int8x16_t *)&STACK[0x280])));
  v177.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v80, 1uLL), *(int8x16_t *)&STACK[0x3B0]), v80), *(int64x2_t *)&STACK[0x3A0]), *(int8x16_t *)&STACK[0x350]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v12, 3uLL), *(int8x16_t *)&STACK[0x280])));
  v85 = (int64x2_t)veorq_s8(v78, *(int8x16_t *)&STACK[0x500]);
  v86 = (int64x2_t)veorq_s8(v78, *(int8x16_t *)&STACK[0x470]);
  v87 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), v86);
  v88 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 1uLL), *(int8x16_t *)&STACK[0x550]), v87), *(int64x2_t *)&STACK[0x460]), *(int8x16_t *)&STACK[0x580]);
  v89 = (int64x2_t)veorq_s8((int8x16_t)v88, vorrq_s8((int8x16_t)vshlq_n_s64(v86, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 0x3DuLL)));
  v90 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v88, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 8uLL)), v89);
  v91 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v90, *(int8x16_t *)&STACK[0x450]), (int64x2_t)vorrq_s8(v90, *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x410]);
  v92 = (int64x2_t)veorq_s8((int8x16_t)v91, vorrq_s8((int8x16_t)vshlq_n_s64(v89, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 0x3DuLL)));
  v93 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v91, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 8uLL)), v92);
  v94 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v93, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v93, 1uLL), *(int8x16_t *)&STACK[0x400])), *(int64x2_t *)&STACK[0x340]), *(int8x16_t *)&STACK[0x3F0]);
  v95 = (int64x2_t)veorq_s8((int8x16_t)v94, vorrq_s8((int8x16_t)vshlq_n_s64(v92, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 0x3DuLL)));
  v96 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v95);
  v97 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v96, 1uLL), *(int8x16_t *)&STACK[0x560]), v96), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v98 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v99 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v98), *(int8x16_t *)&STACK[0x510]);
  v100 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v98, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 0x3DuLL)));
  v101 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v100);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3E0], v101), (int64x2_t)vorrq_s8(v101, *(int8x16_t *)&STACK[0x4C0]))), *(int8x16_t *)&STACK[0x3C0]);
  v103 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v102, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL))));
  v104 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x2A0], *(int64x2_t *)&STACK[0x480]);
  v177.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v103, 1uLL), *(int8x16_t *)&STACK[0x3B0]), v103), *(int64x2_t *)&STACK[0x3A0]), *(int8x16_t *)&STACK[0x350]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v11, 3uLL), *(int8x16_t *)&STACK[0x280])));
  v105 = (int64x2_t)veorq_s8(v104, *(int8x16_t *)&STACK[0x500]);
  v106 = (int64x2_t)veorq_s8(v104, *(int8x16_t *)&STACK[0x470]);
  v107 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v106);
  v108 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 1uLL), *(int8x16_t *)&STACK[0x550]), v107), *(int64x2_t *)&STACK[0x460]), *(int8x16_t *)&STACK[0x580]);
  v109 = (int64x2_t)veorq_s8((int8x16_t)v108, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL)));
  v110 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), v109);
  v111 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v110, *(int8x16_t *)&STACK[0x450]), (int64x2_t)vorrq_s8(v110, *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x410]);
  v112 = (int64x2_t)veorq_s8((int8x16_t)v111, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL)));
  v113 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v112);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v113, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v113, 1uLL), *(int8x16_t *)&STACK[0x400])), *(int64x2_t *)&STACK[0x340]), *(int8x16_t *)&STACK[0x3F0]);
  v115 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v116 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v115);
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v116, 1uLL), *(int8x16_t *)&STACK[0x560]), v116), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v118 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v118), *(int8x16_t *)&STACK[0x510]);
  v120 = (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL)));
  v121 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), v120);
  v122 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3E0], v121), (int64x2_t)vorrq_s8(v121, *(int8x16_t *)&STACK[0x4C0]))), *(int8x16_t *)&STACK[0x3C0]);
  v123 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL))));
  v124.i64[0] = v6 + v8 - 9;
  v124.i64[1] = v6 + v8 - 10;
  v177.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v123, 1uLL), *(int8x16_t *)&STACK[0x3B0]), v123), *(int64x2_t *)&STACK[0x3A0]), *(int8x16_t *)&STACK[0x350]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2B0], 3uLL), *(int8x16_t *)&STACK[0x280])));
  v125 = vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v126 = vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2C0], *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v127 = vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2E0], *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v128 = vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2D0], *(int8x16_t *)&STACK[0x540]), *(int64x2_t *)&STACK[0x530]);
  v129 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 1uLL), *(int8x16_t *)&STACK[0x520]), v128);
  v130 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 1uLL), *(int8x16_t *)&STACK[0x520]), v127);
  v131 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 1uLL), *(int8x16_t *)&STACK[0x520]), v126);
  *(int64x2_t *)&STACK[0x2D0] = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 1uLL), *(int8x16_t *)&STACK[0x520]), v125);
  v132 = (int8x16_t)vaddq_s64(v130, v77);
  v133 = (int8x16_t)vaddq_s64(v129, v77);
  *(int8x16_t *)&STACK[0x2E0] = vqtbl4q_s8(v177, *(int8x16_t *)&STACK[0x310]);
  v177.val[0] = veorq_s8(v133, *(int8x16_t *)&STACK[0x500]);
  v177.val[1] = veorq_s8(v132, *(int8x16_t *)&STACK[0x500]);
  v177.val[2] = veorq_s8(v132, v27);
  v177.val[3] = veorq_s8(v133, v27);
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)v177.val[3]);
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)v177.val[2]);
  v134 = v42;
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 1uLL), v32), (int64x2_t)v177.val[1]), v33), v34);
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 1uLL), v32), (int64x2_t)v177.val[0]), v33), v34);
  v177.val[3] = veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[3], 0x3DuLL)));
  v177.val[2] = veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[2], 0x3DuLL)));
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)v177.val[2]);
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)v177.val[3]);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v177.val[1], v41), (int64x2_t)vorrq_s8(v177.val[1], (int8x16_t)v134)), v134), v43);
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v177.val[0], v41), (int64x2_t)vorrq_s8(v177.val[0], (int8x16_t)v134)), v134), v43);
  v177.val[3] = veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[3], 0x3DuLL)));
  v177.val[2] = veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[2], 0x3DuLL)));
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)v177.val[2]);
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)v177.val[3]);
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v177.val[0], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 1uLL), v52)), v53), v51);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v177.val[1], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 1uLL), v52)), v53), v51);
  v177.val[2] = veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[2], 0x3DuLL)));
  v177.val[3] = veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[3], 0x3DuLL)));
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)v177.val[3]);
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)v177.val[2]);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 1uLL), *(int8x16_t *)&STACK[0x560]), (int64x2_t)v177.val[1]), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 1uLL), *(int8x16_t *)&STACK[0x560]), (int64x2_t)v177.val[0]), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v177.val[3] = veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[3], 0x3DuLL)));
  v177.val[2] = veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[2], 0x3DuLL)));
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)v177.val[3]), *(int8x16_t *)&STACK[0x510]);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)v177.val[2]), *(int8x16_t *)&STACK[0x510]);
  v177.val[2] = veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[2], 0x3DuLL)));
  v177.val[3] = veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[3], 0x3DuLL)));
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)v177.val[3]);
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)v177.val[2]);
  v177.val[0] = veorq_s8((int8x16_t)vsubq_s64(v73, vaddq_s64((int64x2_t)vornq_s8(v72, v177.val[0]), (int64x2_t)vorrq_s8(v177.val[0], *(int8x16_t *)&STACK[0x4C0]))), v74);
  v177.val[1] = veorq_s8((int8x16_t)vsubq_s64(v73, vaddq_s64((int64x2_t)vornq_s8(v72, v177.val[1]), (int64x2_t)vorrq_s8(v177.val[1], *(int8x16_t *)&STACK[0x4C0]))), v74);
  v135 = (int8x16_t)vaddq_s64(v131, v77);
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[3], 0x3DuLL))));
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[2], 0x3DuLL))));
  v177.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 1uLL), v82), (int64x2_t)v177.val[0]), v81), v83), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x300], 3uLL), v84)));
  v177.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 1uLL), v82), (int64x2_t)v177.val[1]), v81), v83), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2F0], 3uLL), v84)));
  v136 = (int64x2_t)veorq_s8(v135, *(int8x16_t *)&STACK[0x500]);
  v137 = (int64x2_t)veorq_s8(v135, v27);
  v138 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v136, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 8uLL)), v137);
  v139 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 1uLL), v32), v138), v33), v34);
  v140 = (int64x2_t)veorq_s8((int8x16_t)v139, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  v141 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), v140);
  v142 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v141, v41), (int64x2_t)vorrq_s8(v141, (int8x16_t)v134)), v134), v43);
  v143 = (int64x2_t)veorq_s8((int8x16_t)v142, vorrq_s8((int8x16_t)vshlq_n_s64(v140, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v144 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v142, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 8uLL)), v143);
  v145 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v144, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v144, 1uLL), v52)), v53), v51);
  v146 = (int64x2_t)veorq_s8((int8x16_t)v145, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)));
  v147 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v145, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 8uLL)), v146);
  v148 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v147, 1uLL), *(int8x16_t *)&STACK[0x560]), v147), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v149 = (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v146, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 0x3DuLL)));
  v150 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), v149), *(int8x16_t *)&STACK[0x510]);
  v151 = (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v149, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 0x3DuLL)));
  v152 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), v151);
  v153 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v73, vaddq_s64((int64x2_t)vornq_s8(v72, v152), (int64x2_t)vorrq_s8(v152, *(int8x16_t *)&STACK[0x4C0]))), v74);
  v154 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v153, vorrq_s8((int8x16_t)vshlq_n_s64(v151, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 0x3DuLL))));
  v155 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x2D0], v77);
  v177.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v154, 1uLL), v82), v154), v81), v83), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x490], 3uLL), v84)));
  v156 = (int64x2_t)veorq_s8(v155, *(int8x16_t *)&STACK[0x500]);
  v157 = (int64x2_t)veorq_s8(v155, v27);
  v158 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), v157);
  v159 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v158, 1uLL), v32), v158), v33), v34);
  v160 = (int64x2_t)veorq_s8((int8x16_t)v159, vorrq_s8((int8x16_t)vshlq_n_s64(v157, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 0x3DuLL)));
  v161 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), v160);
  v162 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v161, v41), (int64x2_t)vorrq_s8(v161, (int8x16_t)v134)), v134), v43);
  v163 = (int64x2_t)veorq_s8((int8x16_t)v162, vorrq_s8((int8x16_t)vshlq_n_s64(v160, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 0x3DuLL)));
  v164 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), v163);
  v165 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v164, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v164, 1uLL), v52)), v53), v51);
  v166 = (int64x2_t)veorq_s8((int8x16_t)v165, vorrq_s8((int8x16_t)vshlq_n_s64(v163, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 0x3DuLL)));
  v167 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v165, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 8uLL)), v166);
  v168 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v167, 1uLL), *(int8x16_t *)&STACK[0x560]), v167), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x4B0]);
  v169 = (int64x2_t)veorq_s8((int8x16_t)v168, vorrq_s8((int8x16_t)vshlq_n_s64(v166, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 0x3DuLL)));
  v170 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v168, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 8uLL)), v169), *(int8x16_t *)&STACK[0x510]);
  v171 = (int64x2_t)veorq_s8((int8x16_t)v170, vorrq_s8((int8x16_t)vshlq_n_s64(v169, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 0x3DuLL)));
  v172 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v170, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 8uLL)), v171);
  v173 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v73, vaddq_s64((int64x2_t)vornq_s8(v72, v172), (int64x2_t)vorrq_s8(v172, *(int8x16_t *)&STACK[0x4C0]))), v74);
  v174 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v173, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v173, vorrq_s8((int8x16_t)vshlq_n_s64(v171, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 0x3DuLL))));
  v177.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v174, 1uLL), v82), v174), v81), v83), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v124, 3uLL), v84)));
  v134.i64[0] = vqtbl4q_s8(v177, *(int8x16_t *)&STACK[0x310]).u64[0];
  v177.val[0] = *(int8x16_t *)&STACK[0x2E0];
  v177.val[0].i64[1] = v134.i64[0];
  v175 = vrev64q_s8(v177.val[0]);
  *(int8x16_t *)(v7 + v8) = veorq_s8(vextq_s8(v175, v175, 8uLL), *(int8x16_t *)&STACK[0x4A0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v5 == v8) * v2) ^ v3)) - 4))();
}

uint64_t sub_100053500@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  STACK[0x838] = ((v1 - 2003788934) & 0x776F5D8A ^ 0xFFFFFFFFFFFFF7DALL) + a1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2332 * (v2 == 968960260)) ^ (v1 - 2866))))();
}

uint64_t sub_100053550()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  *(_DWORD *)(v1 - 220) = (v0 + 1985909700) ^ (753993959
                                             * (((((v1 - 224) | 0x486E2F64) ^ 0xFFFFFFFE) - (~(v1 - 224) | 0xB791D09B)) ^ 0x684922BA));
  sub_100002C08(v1 - 224);
  v3 = *(unsigned __int8 *)(v1 - 224) != 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (8 * (v3 & 0xFFFFFFFD | (2 * v3))))) - 4))();
}

uint64_t sub_100053CE0@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0xA2C]) = STACK[0xD8C];
  LODWORD(STACK[0x868]) = v3;
  LODWORD(STACK[0x9FC]) = v2;
  LODWORD(STACK[0x88C]) = STACK[0xD88];
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * a1) - (a1 ^ v1) + 396))();
}

uint64_t sub_100053EBC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t (*v4)(void);

  v3 = 5 * (v1 ^ 0xCA1);
  v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * (((((v0 == 0xB56F0B975C5A0B40) ^ (v1 - 14)) & 1) * (v3 ^ 0x12C9)) ^ (v1 - 666)));
  LODWORD(STACK[0xD4C]) = v3;
  return v4();
}

uint64_t sub_100053F20@<X0>(uint64_t a1@<X8>)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;

  v3 = STACK[0xD4C];
  LODWORD(STACK[0xD50]) = STACK[0xD4C];
  v4 = (v3 + 383);
  LODWORD(STACK[0xD54]) = v4;
  *(_DWORD *)(a1 + 12) = *v1;
  v5 = STACK[0x838];
  v6 = (char *)&STACK[0xD90] + STACK[0x838];
  STACK[0x8C8] = (unint64_t)v6;
  v7 = v5 + v4 - 5011;
  STACK[0xD58] = v7;
  STACK[0x838] = v7;
  v8 = STACK[0x760];
  STACK[0xD60] = STACK[0x760];
  STACK[0x718] = v8;
  STACK[0x6A8] = 0;
  STACK[0x678] = 0;
  LODWORD(STACK[0x5DC]) = 0;
  STACK[0x840] = 0xB56F0B975C5A0B40;
  STACK[0x8B8] = 0;
  STACK[0xD08] = (unint64_t)v6;
  LOBYTE(STACK[0xD07]) = 0;
  STACK[0xCF8] = 32;
  STACK[0xCF0] = *(_QWORD *)(v2 + 8 * (v3 + 2602));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (LODWORD(STACK[0xD50]) + 2563)) - 4))();
}

uint64_t sub_1000541D8@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 5 * (v1 ^ a1);
  v5 = (v1 - 586766731) & 0x22F949FD;
  v6 = *(_QWORD *)(v2 - 0x73C92FE99193FD00);
  STACK[0x600] = 0;
  v7 = *(_QWORD *)(v3 + 8 * ((496 * (v6 != 0x1FCC246200528390)) ^ v1));
  STACK[0x808] = 0;
  return ((uint64_t (*)(void))(v7 - (v5 + (v4 ^ 0xFFFFFFFFFFFFF192))))();
}

uint64_t sub_1000544A0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 + 3130)) - (a1 + v1) + 4936))();
}

uint64_t sub_1000551C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  int v56;
  int v57;
  uint64_t v59;

  v57 = LOWORD(STACK[0xB56]);
  if (v57 == 47199)
    return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x5A8]
                                                                                            + 8
                                                                                            * ((v56 - 3797) ^ 0x570))
                                                                                - ((3 * (v56 ^ 0xDF0u)) ^ 0x8D7)))(STACK[0x570], a2, a3, a55);
  if (v57 == 32755 || v57 == 43949)
  {
    STACK[0x810] = a1;
    return (*(uint64_t (**)(void))(STACK[0x5A8] + 8 * v55))();
  }
  else
  {
    v59 = *(_QWORD *)(STACK[0x860] - 0x73C92FE99193FD00);
    STACK[0x650] = 0;
    STACK[0x950] = 0;
    return (*(uint64_t (**)(void))(STACK[0x5A8]
                                + 8 * (((v59 == 0x1FCC246200528390) * ((v56 ^ 0xE6D) - 318)) ^ (v56 + 1492))))();
  }
}

uint64_t sub_1000574DC(int a1)
{
  int v1;

  LODWORD(STACK[0x8F0]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8] + 8 * (v1 - 2040)) - 8))();
}

uint64_t sub_10005798C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = v0 ^ 0xC11;
  v3 = *(_QWORD *)(v1 + 8 * v0);
  v4 = *(_QWORD *)(v1 + 8 * ((int)v0 + 760));
  STACK[0x818] = v3;
  return ((uint64_t (*)(void))(v4 - (v2 ^ 0xCE3)))();
}

uint64_t sub_100057FF8@<X0>(int a1@<W8>)
{
  int v1;
  char v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((21 * (v2 & 1 | (v3 == 0))) ^ v1))
                            - ((a1 + 593) ^ 0x3FFLL)))();
}

uint64_t sub_100058694@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xA64]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * a1) - v1 + 421))();
}

uint64_t sub_10005871C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xA64]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * a1) - v1 + 421))();
}

uint64_t sub_100058840()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x990];
  STACK[0xAB0] = STACK[0x990];
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 != 0x73C92FE99193FD00) * ((v1 ^ 0x324) - 1225)) ^ v0)))();
}

uint64_t sub_100058B40()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v1 == (((v2 + 2331) | 0x205) ^ 0x39C116FA) + v0;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(v2 ^ (4 * (v4 & 0xFFFFFFFB | (4 * v4))))))();
}

uint64_t sub_100059E88(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 968960260) * (80 * (a4 ^ 0xF00) - 156)) ^ (a4 - 2450)))
                            - ((a4 + 687927542) & 0xD6FF0AAF)
                            + 2727))();
}

uint64_t sub_100059F44@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (v1 - 1969107027) & 0x755E17FF;
  v5 = *(_QWORD *)(a1 - 0x73C92FE99193FCF8);
  STACK[0x850] = 0;
  v6 = *(_QWORD *)(v3 + 8 * ((13 * (v5 == 0x1FCC246200528390)) ^ v1));
  STACK[0x810] = 0;
  return ((uint64_t (*)(void))(v6 - ((5 * v2) + v4) + 4180))();
}

uint64_t sub_10005A4D8()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((LODWORD(STACK[0x918]) == *(_DWORD *)(v0 + 8)) * (v1 ^ 0x5FDB)) ^ v2))
                            - 4))();
}

uint64_t sub_10005A668()
{
  unsigned int v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1 ^ v0;
  v4 = sub_1000035BC();
  v5 = STACK[0x5A8];
  *v2 = 0xB56F0B975C5A0B40;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * v1) - v3 + 3841))(v4);
}

uint64_t sub_10005A6B8@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * a1))();
}

uint64_t sub_10005A6C4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == 968960260) * (v0 ^ 0x1D6F)) ^ (v0 - 2866))))();
}

uint64_t sub_10005A730()
{
  int v0;
  int v1;
  BOOL v2;

  v2 = ((uint64_t (*)(_QWORD))STACK[0x398])(v0 ^ 0x2894E1A3u) == 0;
  return (*(uint64_t (**)(void))(STACK[0x5A8]
                              + 8 * ((((v2 ^ (v1 + 50)) & 1) * (((2 * v1) ^ 0x16D4) - 1539)) ^ v1)))();
}

uint64_t sub_10005A788(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x280]) = v2;
  STACK[0x580] = (v3 - 621);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * ((2919
                                                                 * (((v1 - ((2 * v1) & 0xE22DF282) == 0) ^ (v3 - 109)) & 1)) ^ v3))
                                                   - 8))(a1, 0x17D9A711A491E013);
}

uint64_t sub_10005A804@<X0>(unint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x5A8]
                                     + 8
                                     * (int)((52 * (((a2 < 8) ^ (((v3 + v2) & 0x66) - 1)) & 1)) ^ (v3 + v2) & 0xB72EDE66))
                         - 8);
  STACK[0x590] = a1;
  return v4();
}

uint64_t sub_10005ABB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t v13;
  int64x2_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;
  int64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int8x16_t v29;
  int64x2_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int64x2_t v36;
  int64x2_t v37;
  int8x16_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int8x16_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int64x2_t v62;
  int8x16_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int8x16_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int8x16_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int8x16_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int8x16_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int8x16_t v105;
  int8x16_t v106;
  int64x2_t v107;
  int8x16_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int8x16_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int8x16_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int8x16_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int8x16_t v137;
  int8x16_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int8x16_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int8x16_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int8x16_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int8x16_t v160;
  int8x16_t v161;
  int64x2_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int8x16_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int8x16_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int64x2_t v178;
  int64x2_t v179;
  int8x16_t v180;
  int8x16_t v181;
  int8x16x4_t v183;

  v21.i64[0] = a2 - 3;
  v21.i64[1] = a2 - 4;
  v22.i64[0] = a2 - 5;
  v22.i64[1] = a2 - 6;
  v23.i64[0] = a2 - 7;
  v23.i64[1] = a2 - 8;
  v24.i64[0] = a2 - 11;
  v24.i64[1] = a2 - 12;
  *(int64x2_t *)&STACK[0x4B0] = v24;
  v25.i64[0] = a2 - 13;
  v25.i64[1] = a2 - 14;
  *(int64x2_t *)&STACK[0x490] = v25;
  v26.i64[0] = v10 + v8 + a7 - 4004;
  v26.i64[1] = a2 - 2;
  v27 = v26;
  v28.i64[0] = a2 - 15;
  v28.i64[1] = a2 - 16;
  *(int64x2_t *)&STACK[0x4A0] = v28;
  *(int8x16_t *)&STACK[0x410] = vorrq_s8((int8x16_t)vshlq_n_s64(v28, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v28, 8uLL));
  *(int8x16_t *)&STACK[0x480] = vorrq_s8((int8x16_t)vshlq_n_s64(v25, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 8uLL));
  *(int8x16_t *)&STACK[0x470] = vorrq_s8((int8x16_t)vshlq_n_s64(v24, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v24, 8uLL));
  v29 = *(int8x16_t *)&STACK[0x3E0];
  v30 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v23, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v23, 8uLL)), *(int8x16_t *)&STACK[0x3E0]);
  v31 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v22, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v22, 8uLL)), *(int8x16_t *)&STACK[0x3E0]);
  *(int64x2_t *)&STACK[0x400] = v21;
  v32 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v21, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v21, 8uLL)), v29);
  *(int64x2_t *)&STACK[0x460] = v27;
  v33 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v27, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v27, 8uLL)), v29);
  v34 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v30, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v30), *(int64x2_t *)&STACK[0x540]);
  v35 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v31, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v31), *(int64x2_t *)&STACK[0x540]);
  v36 = *(int64x2_t *)&STACK[0x540];
  v37 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v32, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v32);
  *(int64x2_t *)&STACK[0x450] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v33, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v33);
  v38 = *(int8x16_t *)&STACK[0x3C0];
  v39 = (int64x2_t)veorq_s8(v35, *(int8x16_t *)&STACK[0x3D0]);
  v40 = (int64x2_t)veorq_s8(v34, *(int8x16_t *)&STACK[0x3D0]);
  v41 = (int64x2_t)veorq_s8(v34, *(int8x16_t *)&STACK[0x3C0]);
  v42 = (int64x2_t)veorq_s8(v35, *(int8x16_t *)&STACK[0x3C0]);
  v43 = *(int8x16_t *)&STACK[0x3B0];
  v44 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v40, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 8uLL)), v41), *(int8x16_t *)&STACK[0x3B0]);
  v45 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v39, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v39, 8uLL)), v42), *(int8x16_t *)&STACK[0x3B0]);
  v46 = (int64x2_t)veorq_s8((int8x16_t)v45, vorrq_s8((int8x16_t)vshlq_n_s64(v42, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 0x3DuLL)));
  v47 = (int64x2_t)veorq_s8((int8x16_t)v44, vorrq_s8((int8x16_t)vshlq_n_s64(v41, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v41, 0x3DuLL)));
  v48 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v45, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 8uLL)), v46), v18);
  v49 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v44, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 8uLL)), v47), v18);
  v50 = (int64x2_t)veorq_s8((int8x16_t)v49, vorrq_s8((int8x16_t)vshlq_n_s64(v47, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 0x3DuLL)));
  v51 = (int64x2_t)veorq_s8((int8x16_t)v48, vorrq_s8((int8x16_t)vshlq_n_s64(v46, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 0x3DuLL)));
  v52 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v48, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 8uLL)), v51);
  v53 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v50);
  v55 = *(int8x16_t *)&STACK[0x340];
  v54 = *(int8x16_t *)&STACK[0x350];
  v56 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v52, *(int8x16_t *)&STACK[0x350]), (int64x2_t)vorrq_s8(v52, (int8x16_t)v14)), v14), *(int8x16_t *)&STACK[0x340]);
  v57 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v53, *(int8x16_t *)&STACK[0x350]), (int64x2_t)vorrq_s8(v53, (int8x16_t)v14)), v14), *(int8x16_t *)&STACK[0x340]);
  v58 = (int64x2_t)veorq_s8((int8x16_t)v57, vorrq_s8((int8x16_t)vshlq_n_s64(v50, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v50, 0x3DuLL)));
  v59 = (int64x2_t)veorq_s8((int8x16_t)v56, vorrq_s8((int8x16_t)vshlq_n_s64(v51, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 0x3DuLL)));
  v60 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v56, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 8uLL)), v59);
  v61 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v57, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 8uLL)), v58);
  v62 = (int64x2_t)veorq_s8(v61, *(int8x16_t *)&STACK[0x530]);
  v63 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v61, v17), *(int8x16_t *)&STACK[0x520]), v62), (int64x2_t)vandq_s8((int8x16_t)v62, v17));
  v64 = (int64x2_t)veorq_s8(v60, *(int8x16_t *)&STACK[0x530]);
  v65 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v60, v17), *(int8x16_t *)&STACK[0x520]), v64), (int64x2_t)vandq_s8((int8x16_t)v64, v17)), *(int8x16_t *)&STACK[0x580]);
  v66 = vorrq_s8((int8x16_t)vshlq_n_s64(v59, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 0x3DuLL));
  v67 = (int64x2_t)veorq_s8(v63, *(int8x16_t *)&STACK[0x580]);
  v68 = (int64x2_t)veorq_s8((int8x16_t)v67, vorrq_s8((int8x16_t)vshlq_n_s64(v58, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 0x3DuLL)));
  v69 = (int64x2_t)veorq_s8((int8x16_t)v65, v66);
  v70 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v69);
  v71 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v67, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 8uLL)), v68);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v71, 1uLL), *(int8x16_t *)&STACK[0x510]), v71), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v73 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v70, 1uLL), *(int8x16_t *)&STACK[0x510]), v70), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v74 = vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL));
  v75 = (int64x2_t)veorq_s8((int8x16_t)v73, vorrq_s8((int8x16_t)vshlq_n_s64(v69, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 0x3DuLL)));
  v76 = (int64x2_t)veorq_s8((int8x16_t)v72, v74);
  v77 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v76);
  v78 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL)), v75);
  v79 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v78, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v78, 1uLL), *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x310]), v13);
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v77, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v77, 1uLL), *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x310]), v13);
  v81 = v36;
  v82 = (int8x16_t)vaddq_s64(v37, v36);
  v83 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v79, vorrq_s8((int8x16_t)vshlq_n_s64(v75, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 0x3DuLL))));
  v84 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v80, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL))));
  v85 = *(int64x2_t *)&STACK[0x2D0];
  v183.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2D0], vaddq_s64((int64x2_t)vornq_s8(v19, v84), (int64x2_t)vorrq_s8(v84, v20))), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v23, 3uLL), v15)));
  v183.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2D0], vaddq_s64((int64x2_t)vornq_s8(v19, v83), (int64x2_t)vorrq_s8(v83, v20))), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v22, 3uLL), v15)));
  v86 = (int64x2_t)veorq_s8(v82, *(int8x16_t *)&STACK[0x3D0]);
  v87 = (int64x2_t)veorq_s8(v82, *(int8x16_t *)&STACK[0x3C0]);
  v88 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), v87), *(int8x16_t *)&STACK[0x3B0]);
  v89 = (int64x2_t)veorq_s8((int8x16_t)v88, vorrq_s8((int8x16_t)vshlq_n_s64(v87, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 0x3DuLL)));
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v88, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 8uLL)), v89), v18);
  v91 = (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v89, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 0x3DuLL)));
  v92 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v91);
  v93 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v92, *(int8x16_t *)&STACK[0x350]), (int64x2_t)vorrq_s8(v92, (int8x16_t)v14)), v14), *(int8x16_t *)&STACK[0x340]);
  v94 = (int64x2_t)veorq_s8((int8x16_t)v93, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  v95 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v93, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 8uLL)), v94);
  v96 = (int64x2_t)veorq_s8(v95, *(int8x16_t *)&STACK[0x530]);
  v97 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v95, v17), *(int8x16_t *)&STACK[0x520]), v96), (int64x2_t)vandq_s8((int8x16_t)v96, v17)), *(int8x16_t *)&STACK[0x580]);
  v98 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 0x3DuLL)));
  v99 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v98);
  v100 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v99, 1uLL), *(int8x16_t *)&STACK[0x510]), v99), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)v100, vorrq_s8((int8x16_t)vshlq_n_s64(v98, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 0x3DuLL)));
  v102 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v101);
  v103 = *(int64x2_t *)&STACK[0x310];
  v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v102, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v102, 1uLL), *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x310]), v13);
  v105 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL))));
  v106 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x450], v81);
  v183.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2D0], vaddq_s64((int64x2_t)vornq_s8(v19, v105), (int64x2_t)vorrq_s8(v105, v20))), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x400], 3uLL), v15)));
  v107 = (int64x2_t)veorq_s8(v106, *(int8x16_t *)&STACK[0x3D0]);
  v108 = *(int8x16_t *)&STACK[0x3D0];
  v109 = (int64x2_t)veorq_s8(v106, *(int8x16_t *)&STACK[0x3C0]);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v109), *(int8x16_t *)&STACK[0x3B0]);
  v111 = (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL)));
  v112 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), v111), v18);
  v113 = (int64x2_t)veorq_s8((int8x16_t)v112, vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL)));
  v114 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL)), v113);
  v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v114, *(int8x16_t *)&STACK[0x350]), (int64x2_t)vorrq_s8(v114, (int8x16_t)v14)), v14), *(int8x16_t *)&STACK[0x340]);
  v116 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v113, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 0x3DuLL)));
  v117 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v116);
  v118 = (int64x2_t)veorq_s8(v117, *(int8x16_t *)&STACK[0x530]);
  v119 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v117, v17), *(int8x16_t *)&STACK[0x520]), v118), (int64x2_t)vandq_s8((int8x16_t)v118, v17)), *(int8x16_t *)&STACK[0x580]);
  v120 = (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v121 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), v120);
  v122 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v121, 1uLL), *(int8x16_t *)&STACK[0x510]), v121), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v123 = (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v124 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), v123);
  v125 = *(int8x16_t *)&STACK[0x330];
  v126 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v124, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v124, 1uLL), *(int8x16_t *)&STACK[0x330])), *(int64x2_t *)&STACK[0x310]), v13);
  v127 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v126, vorrq_s8((int8x16_t)vshlq_n_s64(v123, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 0x3DuLL))));
  v128 = vaddq_s64((int64x2_t)vornq_s8(v19, (int8x16_t)v127), (int64x2_t)vorrq_s8((int8x16_t)v127, v20));
  v127.i64[0] = a2 - 9;
  v127.i64[1] = a2 - 10;
  v129 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x410], v29);
  v130 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x480], v29);
  v131 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x470], v29);
  v183.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2D0], v128), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x460], 3uLL), v15)));
  v132 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v29);
  v133 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v129, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v129);
  v134 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v131, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v131);
  v135 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v132, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v132);
  v136 = *(int64x2_t *)&STACK[0x540];
  v137 = (int8x16_t)vaddq_s64(v133, *(int64x2_t *)&STACK[0x540]);
  v138 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vshlq_n_s64(v130, 1uLL), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), v130), *(int64x2_t *)&STACK[0x540]);
  *(int8x16_t *)&STACK[0x480] = vqtbl4q_s8(v183, *(int8x16_t *)&STACK[0x4C0]);
  v183.val[0] = veorq_s8(v138, v108);
  v183.val[1] = veorq_s8(v137, v108);
  v183.val[2] = veorq_s8(v137, v38);
  v183.val[3] = veorq_s8(v138, v38);
  v183.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[1], 8uLL)), (int64x2_t)v183.val[2]), v43);
  v183.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[0], 8uLL)), (int64x2_t)v183.val[3]), v43);
  v183.val[3] = veorq_s8(v183.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[3], 0x3DuLL)));
  v183.val[2] = veorq_s8(v183.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[2], 0x3DuLL)));
  v183.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[0], 8uLL)), (int64x2_t)v183.val[3]), v18);
  v183.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[1], 8uLL)), (int64x2_t)v183.val[2]), v18);
  v183.val[2] = veorq_s8(v183.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[2], 0x3DuLL)));
  v183.val[3] = veorq_s8(v183.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[3], 0x3DuLL)));
  v183.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[0], 8uLL)), (int64x2_t)v183.val[3]);
  v183.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[1], 8uLL)), (int64x2_t)v183.val[2]);
  v183.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v183.val[0], v54), (int64x2_t)vorrq_s8(v183.val[0], (int8x16_t)v14)), v14), v55);
  v183.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v183.val[1], v54), (int64x2_t)vorrq_s8(v183.val[1], (int8x16_t)v14)), v14), v55);
  v183.val[2] = veorq_s8(v183.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[2], 0x3DuLL)));
  v183.val[3] = veorq_s8(v183.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[3], 0x3DuLL)));
  v183.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[0], 8uLL)), (int64x2_t)v183.val[3]);
  v183.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[1], 8uLL)), (int64x2_t)v183.val[2]);
  v139 = (int64x2_t)veorq_s8(v183.val[1], *(int8x16_t *)&STACK[0x530]);
  v183.val[1] = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v183.val[1], v17), *(int8x16_t *)&STACK[0x520]), v139), (int64x2_t)vandq_s8((int8x16_t)v139, v17));
  v140 = (int64x2_t)veorq_s8(v183.val[0], *(int8x16_t *)&STACK[0x530]);
  v183.val[0] = veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v183.val[0], v17), *(int8x16_t *)&STACK[0x520]), v140), (int64x2_t)vandq_s8((int8x16_t)v140, v17)), *(int8x16_t *)&STACK[0x580]);
  v183.val[1] = veorq_s8(v183.val[1], *(int8x16_t *)&STACK[0x580]);
  v183.val[2] = veorq_s8(v183.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[2], 0x3DuLL)));
  v183.val[3] = veorq_s8(v183.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[3], 0x3DuLL)));
  v183.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[0], 8uLL)), (int64x2_t)v183.val[3]);
  v183.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[1], 8uLL)), (int64x2_t)v183.val[2]);
  v183.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 1uLL), *(int8x16_t *)&STACK[0x510]), (int64x2_t)v183.val[1]), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v183.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 1uLL), *(int8x16_t *)&STACK[0x510]), (int64x2_t)v183.val[0]), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v183.val[3] = veorq_s8(v183.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[3], 0x3DuLL)));
  v183.val[2] = veorq_s8(v183.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[2], 0x3DuLL)));
  v183.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[1], 8uLL)), (int64x2_t)v183.val[2]);
  v183.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[0], 8uLL)), (int64x2_t)v183.val[3]);
  v183.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v183.val[0], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 1uLL), v125)), v103), v13);
  v183.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v183.val[1], (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 1uLL), v125)), v103), v13);
  v141 = (int8x16_t)vaddq_s64(v134, v136);
  v183.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[0], 8uLL)), (int64x2_t)veorq_s8(v183.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[3], 0x3DuLL))));
  v183.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[1], 8uLL)), (int64x2_t)veorq_s8(v183.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v183.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183.val[2], 0x3DuLL))));
  v183.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v85, vaddq_s64((int64x2_t)vornq_s8(v19, v183.val[1]), (int64x2_t)vorrq_s8(v183.val[1], v20))), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x4A0], 3uLL), v15)));
  v183.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v85, vaddq_s64((int64x2_t)vornq_s8(v19, v183.val[0]), (int64x2_t)vorrq_s8(v183.val[0], v20))), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x490], 3uLL), v15)));
  v142 = (int64x2_t)veorq_s8(v141, v108);
  v143 = (int64x2_t)veorq_s8(v141, v38);
  v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v142, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 8uLL)), v143), v43);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)));
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145), v18);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v148 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147);
  v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v148, v54), (int64x2_t)vorrq_s8(v148, (int8x16_t)v14)), v14), v55);
  v150 = (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)));
  v151 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), v150);
  v152 = (int64x2_t)veorq_s8(v151, *(int8x16_t *)&STACK[0x530]);
  v153 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v151, v17), *(int8x16_t *)&STACK[0x520]), v152), (int64x2_t)vandq_s8((int8x16_t)v152, v17)), *(int8x16_t *)&STACK[0x580]);
  v154 = (int64x2_t)veorq_s8((int8x16_t)v153, vorrq_s8((int8x16_t)vshlq_n_s64(v150, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 0x3DuLL)));
  v155 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), v154);
  v156 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v155, 1uLL), *(int8x16_t *)&STACK[0x510]), v155), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v157 = (int64x2_t)veorq_s8((int8x16_t)v156, vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL)));
  v158 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), v157);
  v159 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v158, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v158, 1uLL), v125)), v103), v13);
  v160 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v159, vorrq_s8((int8x16_t)vshlq_n_s64(v157, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 0x3DuLL))));
  v161 = (int8x16_t)vaddq_s64(v135, v136);
  v183.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v85, vaddq_s64((int64x2_t)vornq_s8(v19, v160), (int64x2_t)vorrq_s8(v160, v20))), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x4B0], 3uLL), v15)));
  v162 = (int64x2_t)veorq_s8(v161, v108);
  v163 = (int64x2_t)veorq_s8(v161, v38);
  v164 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), v163), v43);
  v165 = (int64x2_t)veorq_s8((int8x16_t)v164, vorrq_s8((int8x16_t)vshlq_n_s64(v163, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 0x3DuLL)));
  v166 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v164, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 8uLL)), v165), v18);
  v167 = (int64x2_t)veorq_s8((int8x16_t)v166, vorrq_s8((int8x16_t)vshlq_n_s64(v165, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 0x3DuLL)));
  v168 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v166, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 8uLL)), v167);
  v169 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v168, v54), (int64x2_t)vorrq_s8(v168, (int8x16_t)v14)), v14), v55);
  v170 = (int64x2_t)veorq_s8((int8x16_t)v169, vorrq_s8((int8x16_t)vshlq_n_s64(v167, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v167, 0x3DuLL)));
  v171 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v169, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 8uLL)), v170);
  v172 = (int64x2_t)veorq_s8(v171, *(int8x16_t *)&STACK[0x530]);
  v173 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v171, v17), *(int8x16_t *)&STACK[0x520]), v172), (int64x2_t)vandq_s8((int8x16_t)v172, v17)), *(int8x16_t *)&STACK[0x580]);
  v174 = (int64x2_t)veorq_s8((int8x16_t)v173, vorrq_s8((int8x16_t)vshlq_n_s64(v170, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 0x3DuLL)));
  v175 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v173, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 8uLL)), v174);
  v176 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v175, 1uLL), *(int8x16_t *)&STACK[0x510]), v175), *(int64x2_t *)&STACK[0x570]), *(int8x16_t *)&STACK[0x500]);
  v177 = (int64x2_t)veorq_s8((int8x16_t)v176, vorrq_s8((int8x16_t)vshlq_n_s64(v174, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 0x3DuLL)));
  v178 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v176, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v176, 8uLL)), v177);
  v179 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v178, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v178, 1uLL), v125)), v103), v13);
  v180 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v179, vorrq_s8((int8x16_t)vshlq_n_s64(v177, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 0x3DuLL))));
  v183.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v85, vaddq_s64((int64x2_t)vornq_s8(v19, v180), (int64x2_t)vorrq_s8(v180, v20))), v16), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), v15)));
  v127.i64[0] = vqtbl4q_s8(v183, *(int8x16_t *)&STACK[0x4C0]).u64[0];
  v183.val[1] = *(int8x16_t *)&STACK[0x480];
  v183.val[1].i64[1] = v127.i64[0];
  v183.val[0].i64[0] = 0xC4C4C4C4C4C4C4C4;
  v183.val[0].i64[1] = 0xC4C4C4C4C4C4C4C4;
  v181 = vaddq_s8(*(int8x16_t *)(v12 + v8), v183.val[0]);
  v183.val[0] = vrev64q_s8(v183.val[1]);
  *(int8x16_t *)(a2 + a7 - 4019) = veorq_s8(vextq_s8(v183.val[0], v183.val[0], 8uLL), v181);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (v7 ^ (4 * ((v9 == v8) | (2 * (v9 == v8)))))) - 4))();
}

uint64_t sub_10005BA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t (*v5)(unint64_t, uint64_t, uint64_t);

  v4 = STACK[0x5A8];
  v5 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x5A8] + 8 * v3) - 4);
  *(int64x2_t *)&STACK[0x560] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x550] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x540] = vdupq_n_s64(0xC8FFC0226B796ACuLL);
  *(int64x2_t *)&STACK[0x530] = vdupq_n_s64(0x7EDD1840A36D3CE0uLL);
  *(int64x2_t *)&STACK[0x510] = vdupq_n_s64(0xFA4975DE9AED9639);
  *(int64x2_t *)&STACK[0x520] = vdupq_n_s64(0xFDEF75A635AC05D7);
  *(int64x2_t *)&STACK[0x500] = vdupq_n_s64(0xCFD085AEAF725F65);
  *(int64x2_t *)&STACK[0x4C0] = vdupq_n_s64(0x858543C4A1D93973);
  *(int64x2_t *)&STACK[0x4B0] = vdupq_n_s64(0x17D9A711A491E013uLL);
  *(int64x2_t *)&STACK[0x4A0] = vdupq_n_s64(0x9682F4E555EA5648);
  *(int64x2_t *)&STACK[0x490] = vdupq_n_s64(0x8F5A56A2A8596EECLL);
  *(int64x2_t *)&STACK[0x480] = vdupq_n_s64(0xB5C0058B2172928ELL);
  *(int64x2_t *)&STACK[0x470] = vdupq_n_s64(0x42205A7058886041uLL);
  *(int64x2_t *)&STACK[0x460] = vdupq_n_s64(0x6A1AFEAD5DED4136uLL);
  *(int64x2_t *)&STACK[0x450] = vdupq_n_s64(0x486D9DDEDAB7DE2EuLL);
  *(int64x2_t *)&STACK[0x410] = vdupq_n_s64(0x5BC9311092A410E8uLL);
  *(int64x2_t *)&STACK[0x3F0] = vdupq_n_s64(0x2FD7473A4B6E6760uLL);
  *(int64x2_t *)&STACK[0x400] = vdupq_n_s64(0xE60D3A6CBDD7A163);
  *(int64x2_t *)&STACK[0x3D0] = vdupq_n_s64(0xCCF7E4DD9A513021);
  *(int64x2_t *)&STACK[0x3E0] = vdupq_n_s64(0x17EBA39D25B733B0uLL);
  *(int64x2_t *)&STACK[0x3B0] = vdupq_n_s64(0xD68ED796004587FALL);
  *(int64x2_t *)&STACK[0x3C0] = vdupq_n_s64(0x29712869FFBA7805uLL);
  *(int64x2_t *)&STACK[0x3A0] = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0xA93D6ECE9EDFE452);
  *(_OWORD *)&STACK[0x340] = xmmword_100212CC0;
  return v5(v4, a1 + a2 - v2, a2 + (v3 - 837) - v2 + a1 - 1548);
}

uint64_t sub_10005CA88()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)v0) - (v0 ^ 0xE87)))();
}

uint64_t sub_10005CF58()
{
  int v0;
  uint64_t v1;

  STACK[0x520] = *(_QWORD *)(v1 + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((((v0 + 1491734160) & 0xA715FF77) - 1963) ^ v0)) - 8))();
}

uint64_t sub_10005EB50()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 < (v1 ^ 0xEu) - 5953) * (v1 ^ 0x1749)) ^ v1)))();
}

uint64_t sub_10005EEB4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0xA48] = *(_QWORD *)(v2 + 8 * v1) + (v0 ^ 0xFFFFFFFFFFFFFBE0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + 914)) - 8))();
}

uint64_t sub_10005F0E0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + 1003)) - v0 + 1044))();
}

uint64_t sub_10005F314()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 1936)) - 4))();
}

uint64_t sub_10005F374()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5A8] + 8 * v0) - 8))(v1);
}

uint64_t sub_10005F574()
{
  int v0;
  uint64_t v1;

  STACK[0x848] = 0x1FCC246200528390;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 2686)) - ((v0 + 140) ^ 0xF95)))();
}

uint64_t sub_10005F5B8()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x5A8] + 8 * ((7413 * (STACK[0x6F8] != 0)) ^ (v0 - 2277))))(v1);
}

uint64_t sub_10005F5FC@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  *a1 = 0x73C92FE99193FD00;
  return (*(uint64_t (**)(void))(v2 + 8 * v1))();
}

uint64_t sub_10005F860@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * v1))();
}

uint64_t sub_10005F8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 8) = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 + 182)))();
}

uint64_t sub_10005F8C0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((6349 * (*(_QWORD *)(a1 + 8) == 0)) ^ (v1 - 458)))
                            - ((3 * ((v1 + 1067548890) & 0xC05E7BBF ^ 0xFF6)) ^ 0xD3FLL)))();
}

uint64_t sub_10005FB9C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 0x1FCC246200528388) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v1) - (v2 ^ 0xF39)))();
}

uint64_t sub_10005FC30()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  STACK[0x658] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - (v0 - 3336) + 1327))(v2);
}

uint64_t sub_10005FC50@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  *v3 = v2;
  *(_QWORD *)(v2 + 8) = *a1;
  *a1 = v2;
  return (*(uint64_t (**)(void))(v4 + 8 * v1))();
}

uint64_t sub_10005FCBC@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - 87 * (v1 ^ a1) + 5129))();
}

uint64_t sub_10005FF7C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  v2 = a1 + 4602;
  v3 = (a1 + 443) | 0x604;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x398])(32);
  STACK[0xAA0] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v4 != 0) * (v3 - 3332)) | v2)) - 4))();
}

uint64_t sub_100060124@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = (v1 + a1) & 0x805EDF17;
  v5 = sub_1000035BC();
  *(_QWORD *)(v2 + 24) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * v1) - v4 + 3837))(v5);
}

uint64_t sub_10006016C()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x8A4]) = v1;
  STACK[0x9A0] = STACK[0x848];
  STACK[0xA48] = *(_QWORD *)(v2 + 8 * (v0 - 3544));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 ^ 0xCAE) + v0 - 3544)) - 8))();
}

uint64_t sub_100060260()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 2418)) - 4))();
}

uint64_t sub_100060278()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v1 + 302321913) & 0xEDFAE967 ^ 0x650) * (v0 == 968960260)) ^ (v1 + 1062)))
                            - 8))();
}

uint64_t sub_1000603F0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 - 173) ^ 0x12A3)) - 4))();
}

uint64_t sub_10006087C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * a1))();
}

uint64_t sub_100060C4C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8 * v1);
  LODWORD(STACK[0x91C]) = 968960260;
  return ((uint64_t (*)(void))(v3 - (a1 ^ 0x5EA)))();
}

uint64_t sub_100060E04@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a1 == 0x1FCC246200528390) * (v1 ^ (v2 | 2) ^ 0x13FB)) ^ v1))
                            - 4))();
}

void sub_100061158(uint64_t a1)
{
  int v1;
  void (*v2)(char *, void (*)());
  char *v3;

  v1 = *(_DWORD *)(a1 + 8) - 753993959 * ((a1 + 941474637 - 2 * (a1 & 0x381DC34D)) ^ 0xE7C5316C);
  v2 = (void (*)(char *, void (*)()))((char *)*(&off_100236540 + v1 - 1159) - 1376340066);
  v3 = (char *)*(&off_100236540 + (v1 ^ 0x6C8)) - 321009951;
  v2(v3, sub_1001C4250);
  ((void (*)(char *))((char *)*(&off_100236540 + v1 - 1213) - 424581718))((char *)*(&off_100236540 + v1 - 972) - 2087309963);
  v2(v3, sub_1001C4250);
  __asm { BR              X8 }
}

uint64_t sub_1000612AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(void), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  uint64_t v25;
  uint64_t v26;

  v26 = a16();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * a25) - 8))(v26);
}

uint64_t sub_1000612C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;
  _DWORD *v12;
  _BOOL4 v14;

  v12 = (_DWORD *)((char *)*(&off_100236540 + v10 - 1099) - 524974990);
  v14 = *v12 == 1787428582 && *(_QWORD *)((char *)*(&off_100236540 + v10 - 1146) - 690798115) != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * ((477 * v14) ^ (v10 + 437))) - (((v10 + 2393) - 1960) ^ v10 ^ 0xFD7u)))(a1, a2, v12, 16777619, a5, 899433627, a7, a8, a9, a10);
}

uint64_t sub_10006138C@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, _DWORD *a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  _BYTE *v28;
  int v29;
  int v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t i;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  int32x4_t v48;
  int32x4_t v49;
  int32x4_t v50;
  int8x16_t v51;
  uint64_t j;
  int8x16x4_t v54;

  v16 = *(_DWORD *)(*a8 + (int)(*a9 & 0xBAC1C520));
  *(_QWORD *)(v15 - 184) = 0;
  v17 = -1161706206 * v16;
  v18 = ((-1161706206 * v16 + 7) ^ (-1161706206 * v16)) * a1 % 7;
  v19 = (char *)((v15 - 184) | v18);
  v20 = *v19;
  *v19 = 0;
  *(_BYTE *)(v15 - 177) = v20;
  v21 = ((-1161706206 * v16 + 6) ^ (-1161706206 * v16)) * a1 % 6;
  v22 = (char *)((v15 - 184) | v21);
  v23 = *v22;
  *v22 = *(_BYTE *)(v15 - 178);
  *(_BYTE *)(v15 - 178) = v23;
  v24 = ((-1161706206 * v16 + 5) ^ (-1161706206 * v16)) * a1 % 5;
  v25 = (char *)((v15 - 184) | v24);
  v26 = *v25;
  *v25 = *(_BYTE *)(v15 - 179);
  *(_BYTE *)(v15 - 179) = v26;
  LOBYTE(v25) = *(_BYTE *)(v15 - 184);
  *(_BYTE *)(v15 - 184) = *(_BYTE *)(v15 - 180);
  *(_BYTE *)(v15 - 180) = (_BYTE)v25;
  v27 = ((-1161706206 * v16 + 3) ^ (-1161706206 * v16)) * a1 % 3;
  v28 = (_BYTE *)((v15 - 184) | v27);
  LOBYTE(v25) = *v28;
  *v28 = *(_BYTE *)(v15 - 181);
  *(_BYTE *)(v15 - 181) = (_BYTE)v25;
  LOWORD(v22) = *(_WORD *)(v15 - 183);
  *(_BYTE *)(v15 - 182) = *(_BYTE *)(v15 - 184);
  *(_WORD *)(v15 - 184) = (_WORD)v22;
  LODWORD(v22) = (v17 * v17) ^ v17;
  v29 = *(_DWORD *)(v15 - 180);
  v30 = (v17 + v17 * v17) ^ v17;
  *(_DWORD *)(v15 - 184) = (_DWORD)v22 + *(_DWORD *)(v15 - 184) * a1;
  *(_DWORD *)(v15 - 180) = v30 + v29 * a1;
  v31 = *(_QWORD *)(v15 - 184) ^ v13;
  LODWORD(v28) = (v31 - (_DWORD)v22) * a2;
  LODWORD(v31) = (HIDWORD(v31) - v30) * a2;
  *(_DWORD *)(v15 - 176) = (_DWORD)v28;
  *(_DWORD *)(v15 - 172) = v31;
  *(_BYTE *)(v15 - 175) = (_BYTE)v28;
  *(_BYTE *)(v15 - 176) = BYTE2(v28);
  *(_BYTE *)(v15 - 174) = BYTE1(v28);
  v32 = (_BYTE *)((v15 - 176) | v27);
  LOBYTE(v22) = *v32;
  *v32 = BYTE3(v28);
  *(_BYTE *)(v15 - 173) = (_BYTE)v22;
  LOBYTE(v30) = *(_BYTE *)(v15 - 176);
  *(_BYTE *)(v15 - 176) = v31;
  *(_BYTE *)(v15 - 172) = v30;
  v33 = (_BYTE *)((v15 - 176) | v24);
  LOBYTE(v32) = *v33;
  *v33 = BYTE1(v31);
  *(_BYTE *)(v15 - 171) = (_BYTE)v32;
  v34 = (_BYTE *)((v15 - 176) | v21);
  LOBYTE(v33) = *v34;
  *v34 = BYTE2(v31);
  *(_BYTE *)(v15 - 170) = (_BYTE)v33;
  v35 = (_BYTE *)((v15 - 176) | v18);
  LOBYTE(v34) = *v35;
  *v35 = BYTE3(v31);
  *(_BYTE *)(v15 - 169) = (_BYTE)v34;
  v36 = *(_QWORD *)(v15 - 176);
  v37 = (-1161706206 * v36) ^ v16;
  for (i = 1; i != 5; ++i)
  {
    v39 = 8 * i;
    v40 = 8 * (((v37 + (_DWORD)i) ^ v37) * a1 % i);
    v41 = *(_QWORD *)(v36 + v40) ^ *(_QWORD *)(v36 + 8 * i);
    *(_QWORD *)(v36 + v39) = v41;
    v42 = *(_QWORD *)(v36 + v40) ^ v41;
    *(_QWORD *)(v36 + v40) = v42;
    *(_QWORD *)(v36 + v39) = *(_QWORD *)(v36 + 8 * i) ^ v42;
  }
  v43 = 0;
  v44 = (__n128)xmmword_100212CF0;
  v45 = (__n128)xmmword_100212D00;
  v46 = (__n128)xmmword_100212D10;
  v47 = (__n128)xmmword_100212D20;
  v48.i64[0] = 0x9B0000009BLL;
  v48.i64[1] = 0x9B0000009BLL;
  v49.i64[0] = 0x1000000010;
  v49.i64[1] = 0x1000000010;
  v50 = vdupq_n_s32(v37);
  do
  {
    v51 = *(int8x16_t *)(v36 + v43);
    v54.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v47, v50), vsubq_s32((int32x4_t)v47, v50)), (int8x16_t)v50), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_100212D30), v48));
    v54.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v46, v50), vsubq_s32((int32x4_t)v46, v50)), (int8x16_t)v50), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_100212D40), v48));
    v54.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v45, v50), vsubq_s32((int32x4_t)v45, v50)), (int8x16_t)v50), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_100212D50), v48));
    v54.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v44, v50), vsubq_s32((int32x4_t)v44, v50)), (int8x16_t)v50), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_100212D60), v48));
    *(int8x16_t *)(v36 + v43) = vqtbl4q_s8(v54, (int8x16_t)xmmword_100212D70);
    v43 += 16;
    v47 = (__n128)vaddq_s32((int32x4_t)v47, v49);
    v46 = (__n128)vaddq_s32((int32x4_t)v46, v49);
    v45 = (__n128)vaddq_s32((int32x4_t)v45, v49);
    v44 = (__n128)vaddq_s32((int32x4_t)v44, v49);
  }
  while (v43 != 32);
  for (j = 32; j != 40; ++j)
    *(_BYTE *)(v36 + j) = (-101 * *(_BYTE *)(v36 + j)) ^ v37 ^ ((v37 + j) * (j - v37));
  *a13 = v36;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v14 + 8 * a3)
                                                                                                 - (((a3 + 1924) | 0x20u) ^ 0x1076)))(v44, v45, v46, v47, (__n128)xmmword_100212D30, (__n128)xmmword_100212D40, (__n128)xmmword_100212D50, (__n128)xmmword_100212D60);
}

uint64_t sub_10006171C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t, void (*)());
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a3 = v9 + 1;
  v13(v15, sub_1001C4250);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * (((*v12 != 0) * (((v10 - 1543) | 0x504) ^ 0xB76)) ^ v10)) - 8))(*v12, v16, v17, v18, v19, v20, v21, v22, a9, v11, v15);
}

uint64_t sub_10006179C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(void))
{
  int v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a19();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * v19) - ((v19 + 710582157) & 0xD5A55F6F ^ 0xF67)))(v21);
}

uint64_t sub_1000617D0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((((((v1 + 874164361) ^ (*(_QWORD *)((char *)*(&off_100236540
                                                                                           + (v1 ^ 0xD23))
                                                                                 - 937943534) == 0x631F30597EADA3F0)) & 1) == 0)
                                              * ((v1 - 1036547397) & 0x3DC86FFD ^ 0x1304)) ^ v1)))(a1);
}

uint64_t sub_100061854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (int)(a9 & 0xCBE54F87)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100061948@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;

  return (*(uint64_t (**)(void))(v19
                              + 8 * ((239 * (((a18 == 0x631F30597EADA3F0) ^ (a1 + 16)) & 1)) ^ v18)))();
}

uint64_t sub_100061998@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = *(unsigned int *)(v16 - 0x631F30597EADA34CLL);
  *(_DWORD *)(v18 - 132) = ((a1 - 839543836) ^ 0xE7) + a16;
  *(_DWORD *)(v18 - 168) = a16 ^ (a1 - 839543836) ^ 0x375;
  *(_DWORD *)(v18 - 164) = a1 - 839543836 + a16;
  *(_DWORD *)(v18 - 160) = a16;
  *(_DWORD *)(v18 - 156) = a1 - a16 - 524262257;
  *(_QWORD *)(v18 - 152) = v19 + a16;
  *(_QWORD *)(v18 - 144) = a15;
  v20 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540 + (a1 ^ 0x6E2)) - 584047855))(v18 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * *(int *)(v18 - 136)) - 8))(v20);
}

uint64_t sub_100061CC4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 8))();
}

uint64_t sub_100061D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t, void (*)()), uint64_t a13, uint64_t a14, _QWORD *a15)
{
  int v15;
  uint64_t v16;

  a12(a11, sub_1001C4250);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((27 * (*a15 == 0)) ^ v15))
                            - ((v15 - 2567) | 0xA12u)
                            - ((v15 - 1751624797) & 0x6867AFFD ^ 0xFFFFFFFFFFFFF818)))();
}

uint64_t sub_100062EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *a6 = v7 + v8 - 1113;
  return (*(uint64_t (**)(void))(v9 + 8 * v6))();
}

uint64_t sub_100062F90()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 8 * v0))(4659, 2845176902, 144, 0xBE637304A47F5170, 1, 1000);
}

uint64_t sub_100063008(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((a5 & ~((v9 + a2 + v7) ^ (v8 + a4 == v6))) * ((v9 + a2) & (v7 + 2583) ^ a6)) ^ (v9 - 192))))();
}

uint64_t sub_10006304C@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 != v2) * ((a2 - 13) ^ (a2 + v3) & v4 ^ a1)) ^ a2)))();
}

uint64_t sub_10006307C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_QWORD *)(v2 - 0x631F30597EADA398) != 0)
                                * (((v0 - 2441) | 0x1019) ^ (v0 + 1726))) ^ v0)))();
}

uint64_t sub_1000630C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (((((*(_DWORD *)(v25 - 0x631F30597EADA36CLL) - 933173586) ^ 0xF7DF6FFFFEFF7FFFLL) + ((2 * (*(_DWORD *)(v25 - 0x631F30597EADA36CLL) - 933173586)) & 0x1FDFEFFFELL) == 0xF7DF6FFFFEFF7FFFLL) * (a9 - 4081)) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_100063148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  *(_BYTE *)(v24 + v26 - 1) = (v25 ^ v28) * (v25 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (a9 ^ (8 * ((v26 == 1) | (4 * (v26 == 1)))))) - (v29 ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_100063188()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v3 = sub_1000035BC();
  *v2 = 0;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v0))(v3);
}

uint64_t sub_1000631A4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((v1 + 4302) | 0x1C4) - 4160) ^ 0x982)
                                * (*(_QWORD *)(v2 - 0x631F30597EADA360) == 0)) ^ v1)))();
}

uint64_t sub_1000631F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;

  v27 = ((*(_DWORD *)(v26 - 0x631F30597EADA368) - 933173586) ^ 0x7B93AF73FFFF5F7ELL)
      + ((2 * (*(_DWORD *)(v26 - 0x631F30597EADA368) - 933173586)) & 0x1FFFEBEFCLL)
      - 0x7B93AF73FFFF5F7ELL == (a9 - 4735) - 1904;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * (int)(a9 ^ (8 * (v27 & 0xFFFFFFFD | (2 * v27))))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_100063274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;

  *(_BYTE *)(v25 + v27 - 1) = (v26 ^ v28 ^ v30) * (v26 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * (a9 ^ (8 * ((v27 == 1) | (2 * (v27 == 1)))))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000632B4()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v3 = sub_1000035BC();
  *v2 = 0;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v0))(v3);
}

_QWORD *sub_1000632D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;

  return ((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v34 + 8 * v33)
                                                                 - ((v33 + 1483423800) & 0xA794BFBA ^ 0x9A6)))(&a33, v35 - 0x631F30597EADA3F0);
}

uint64_t sub_100063320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  int v30;

  *(_BYTE *)(a1 + v27 - 1) = (a9 ^ v28) * (a9 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * (((((v26 + 119) ^ (v27 == 1)) & 1) * v30) ^ v26)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_100063368()
{
  int v0;
  uint64_t v1;

  sub_1000035BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 8 * (v0 + 637)))(4659, 2845176902, 144, 0xBE637304A47F5170, 1, 1000);
}

void sub_1000633EC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1716948049 * ((-2 - ((~(_DWORD)a1 | 0x373412F) + (a1 | 0xFC8CBED0))) ^ 0x286B02A2));
  __asm { BR              X8 }
}

uint64_t sub_100063518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  v40 = v25;
  v29 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v27 ^ 0x3DFu)) - 962052998);
  STACK[0x3A8] = v24;
  *(_QWORD *)(v28 - 256) = v23;
  v30 = v29(16);
  v31 = *(_QWORD *)(v28 - 256);
  STACK[0x348] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * (((v30 != 0) * (v27 + 3026)) ^ v27)) - 8))(v30, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           v40,
           a23);
}

uint64_t sub_10006358C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;
  uint64_t v48;

  STACK[0x348] = 0;
  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v47 - 248) = a1 + 0x3F9848C400A5072;
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (v46 - 313 + ((v46 - 463686746) & 0x1BA35FFF) - 3885)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000635F0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3253 * (v0 == (v1 ^ 0xB64) + 968959437)) ^ (v1 - 1178))) - 8))();
}

uint64_t sub_100063630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (v46 ^ 0x830)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_100063670()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (((((v1 - 1840) | 0x214) + 3189) * (v0 == 968960260)) ^ (v1 - 1178)))
                            - ((v1 - 1236945061) & 0x49BA42D9)
                            + 640))();
}

uint64_t sub_1000636C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (v46 + 2090)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_10006370C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 - 2115) | 0x327) - 176) ^ 0xD49) * (v0 == 968960260)) ^ (v1 - 1178)))
                            - 8))();
}

uint64_t sub_10006374C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (v46 + 2091)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000637AC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((7509 * (v0 == (((v1 ^ 0xAC8) + 156) ^ 0x39C12A33))) ^ (v1 + 1741)))
                            - 4))();
}

uint64_t sub_10006403C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * v1) - 8))();
}

uint64_t sub_100064958(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 + 3737)) - 4))();
}

uint64_t sub_1000658D8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 - 256)
                              + 8
                              * ((125 * (STACK[0x370] - v0 + ((v1 + 1233817632) & 0xB6756FAF) - 3477 < 0x10)) ^ v1)))();
}

uint64_t sub_100065964()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v2 = (uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 - 256) + 8 * v0) - 4);
  *(int64x2_t *)&STACK[0x360] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0xBAD4285B84146F92);
  *(int64x2_t *)&STACK[0x300] = vdupq_n_s64(0x8C8FFC0226B796ACLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0x4729E493E7074453uLL);
  *(int64x2_t *)&STACK[0x380] = vdupq_n_s64(0x81BA79A3A0637518);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xD85D32BB536896E7);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0xE6FF23817A893B17);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0x659939C77C1B276CuLL);
  *(_OWORD *)&STACK[0x280] = xmmword_100212CB0;
  return v2(453);
}

uint64_t sub_100066964@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 - 256)
                                        + 8 * ((5724 * (((((a1 & v2) - 1400) ^ 0x85B) & v1) == 0)) ^ a1 & v2))
                            - 4))();
}

uint64_t sub_1000675B8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((7592 * (v2 == ((a1 | v1) ^ (v3 + 968958432)))) ^ (v3 + 1741)))
                            - 4))();
}

uint64_t sub_1000676FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  int v10;
  uint64_t v11;
  BOOL v12;

  v12 = *v9 == 0;
  STACK[0x348] = a1;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * ((4053 * ((v12 ^ (((v10 - 106) & 0x7F) - 54)) & 1)) ^ (v10 + 1418))) - 8))(a1, a2, a3, a4, 0, a6, a7, a8, a9);
}

uint64_t sub_100068BE8(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  unint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t (*v34)(unint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128);
  __n128 v35;

  v34 = (uint64_t (*)(unint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v33 + 8 * (v32 ^ (186 * (v31 != a31)))) - ((v32 + 2705) ^ 0x18B3));
  v35 = *(__n128 *)&STACK[0x210];
  STACK[0x230] = v31;
  return v34(0xA425C47B936021F7, a1, a2, a3, a4, a5, a6, a7, v35);
}

uint64_t sub_10006A194@<X0>(unint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  STACK[0x310] = a1;
  *(_QWORD *)(v2 - 240) = a1;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a2 + 1632)) - (a2 - 1178) + 949);
  LODWORD(STACK[0x2CC]) = STACK[0x320];
  return v4();
}

uint64_t sub_10006A7EC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * ((((a1 ^ (*(_QWORD *)(v1 + 24) == 0)) & 1) * (a1 - 6421)) ^ a1)))();
}

uint64_t sub_10006A820@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(void);

  v4 = *(unsigned int *)(v1 + 16);
  STACK[0x338] = v4;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((a1 - 2794) ^ (16
                                                     * (((v4 > 9) ^ (a1 + 26)) & 1 | (4 * (((v4 > 9) ^ (a1 + 26)) & 1))))))
                         - 8);
  STACK[0x350] = v2;
  return v5();
}

uint64_t sub_10006B6F8()
{
  unsigned __int16 v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (v0 == 47199)
  {
    v3 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + 2838)) - 8);
    LODWORD(STACK[0x35C]) = 47199;
    return v3();
  }
  else if (v0 == 32755 || v0 == 43949)
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + 2060) ^ (3017 * (v0 == 47199))))
                              - (v1 + 2060)
                              + 4183))();
  }
  else
  {
    return ((uint64_t (*)(void))STACK[0x248])();
  }
}

uint64_t sub_10006B7A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int *a23)
{
  int v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  uint64_t (*v27)(void);

  *a23 = v25 ^ 0x2894E1A3;
  v27 = (uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * a1) - ((v23 | v24) ^ 0x85BLL));
  LODWORD(STACK[0x35C]) = 47199;
  return v27();
}

uint64_t sub_10006B898()
{
  int v0;
  int v1;
  _BYTE *v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_DWORD *)(v3 - 220);
  v5 = *(_DWORD *)(v3 - 212) - ((2 * *(_DWORD *)(v3 - 212)) & 0xC8AC7810) + 1683373064;
  v6 = 1444845877 * ((v3 - 1236238027 - 2 * ((v3 - 192) & 0xB65081F5)) ^ 0xBEA09D6D);
  *(_QWORD *)(v3 - 176) = v2;
  *(_DWORD *)(v3 - 192) = (v0 ^ 0x54280A8D) + v6 + 519191021 * HIBYTE(v4);
  *(_DWORD *)(v3 - 188) = v5 ^ v6;
  *(_DWORD *)(v3 - 184) = v6 + v1 + 1946999666;
  *(_DWORD *)(v3 - 168) = v6 + BYTE2(v4) - ((v4 >> 15) & 0x48) + 1345840164;
  *(_DWORD *)(v3 - 164) = (((v4 >> 7) & 0x1DE) + (BYTE1(v4) ^ 0xFD73DFEF) + 1405072086) ^ v6;
  v7 = sub_100004BA0(v3 - 192);
  v8 = *(_QWORD *)(v3 - 256);
  *v2 = 107;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * v1) - 8))(v7);
}

uint64_t sub_10006BB6C()
{
  uint64_t v0;
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  v6 = sub_1000035BC();
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((((v0 == 0) ^ v1) & 1) * (v4 ^ v5)) ^ v2)))(v6);
}

uint64_t sub_10006BBE0@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = a1 | v1;
  v7 = sub_1000035BC();
  *(_QWORD *)(v3 + 24) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * v5) - (v6 ^ v2)))(v7);
}

uint64_t sub_10006BBFC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((v0 - 18) ^ (2 * ((STACK[0x348] == 0) | (8 * (STACK[0x348] == 0))))))
                            - 8))();
}

uint64_t sub_10006BD1C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 | 0x851) ^ (a1 - 41468897) & 0x278BFD7 ^ 0x2AA) * (v1 != 0)) ^ a1)))();
}

uint64_t sub_10006BD64()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 8) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 + 1033)))();
}

uint64_t sub_10006C05C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x1CAA)) - (((a1 ^ 0x1CAAu) - 573) ^ 0x857)))();
}

uint64_t sub_10006C0C8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) ^ (1716948049 * (((a1 | 0xFC4DD2B1) - a1 + (a1 & 0x3B22D4E)) ^ 0xD755913C));
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_100236540 + v1 - 2948)
                                        + 8
                                        * ((((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)a1 - 0x5CAD012F7F6EB6A0)
                                                                      - 0x631F30597EADA3F0)
                                                          - 385940487) > 2)
                                          * ((v1 + 9) ^ 0xBA3)) ^ v1)
                                        - 1897918883)
                            - 4))();
}

uint64_t sub_10006C190()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 4))();
}

uint64_t sub_10006C1E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 8) = v1;
  return result;
}

void start()
{
  unint64_t *v0;
  unint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  _BOOL4 v4;
  char v5;

  v0 = (unint64_t *)((char *)*(&off_100236540
                                    + (byte_1001FC880[byte_1001E55E0[(-21 * (qword_10023CA30 ^ 0x71 ^ dword_10023CCE8))] ^ 0x5F] ^ (-21 * (qword_10023CA30 ^ 0x71 ^ dword_10023CCE8)))
                                    + 58)
                          - 965231491);
  v1 = 1509257707 * ((*v0 - qword_10023CA30 - (_QWORD)&v5) ^ 0xDB617684DF9DEA71);
  qword_10023CA30 = v1;
  *v0 = v1;
  ((void (*)(char *))((char *)*(&off_100236540
                                         + ((-21 * ((v1 + qword_10023CA30) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((v1 + qword_10023CA30) ^ 0x71))] ^ 0xD0])
                                         + 341)
                               - 1272768299))((char *)*(&off_100236540+ (byte_100212AB0[(byte_1001FC980[(-21* ((v1 - qword_10023CA30) ^ 0x71))] ^ 0x3B)+ 256] ^ (-21 * ((v1 - qword_10023CA30) ^ 0x71)))+ 133)- 2020561610);
  ((void (*)(uint64_t, _QWORD))((char *)*(&off_100236540
                                                  + ((-21
                                                                                   * ((*(_DWORD *)v0 - qword_10023CA30) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((*(_DWORD *)v0 - qword_10023CA30) ^ 0x71))] ^ 0x57])
                                                  + 294)
                                        - 2108240910))(25, 0);
  v2 = -21 * ((*(_DWORD *)v0 + qword_10023CA30) ^ 0x71);
  ((void (*)(char *, void (*)()))((char *)*(&off_100236540
                                                     + (v2 ^ byte_1001FC880[byte_1001E55E0[v2] ^ 0xC1])
                                                     + 431)
                                           - 1376340066))((char *)*(&off_100236540 + (byte_100227880[byte_100212AB0[v2] ^ 8] ^ v2) + 258)- 321009951, sub_1001C4250);
  ((void (*)(void))((char *)*(&off_100236540
                            + (byte_1001E55E0[(byte_100227880[(-21 * ((*(_DWORD *)v0 - qword_10023CA30) ^ 0x71)) + 256] ^ 5)
                                                                           + 256] ^ (-21
                                                                                   * ((*(_DWORD *)v0 - qword_10023CA30) ^ 0x71)))
                            + 486)
                  - 424581718))();
  v3 = -21 * ((*(_DWORD *)v0 - qword_10023CA30) ^ 0x71);
  v4 = *(_DWORD *)((char *)*(&off_100236540
                           + (byte_1001FC680[(byte_1001E53E0[v3 + 256] ^ 0x63) + 256] ^ v3)
                           - 162)
                 - 1121519139) != 0;
  __asm { BR              X8 }
}

uint64_t sub_10006C728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  size_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t result;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  _BYTE *v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  char v104;

  qword_10023CEF0 = 0x29E2814EC35D3649;
  qword_10023CDB0 = 0x2C311CC4A64D34E2;
  qword_10023CE08 = 0;
  qword_10023CEB0 = 0;
  v66 = a15;
  v67 = a15;
  while (2)
  {
    if (!qword_10023CDB8)
    {
      do
        v68 = __ldaxr((unsigned int *)&dword_10023CF00);
      while (__stlxr(1u, (unsigned int *)&dword_10023CF00));
      if (v68)
      {
        v69 = 0;
        while (1)
        {
          if (!dword_10023CF00)
          {
            do
              v70 = __ldaxr((unsigned int *)&dword_10023CF00);
            while (__stlxr(1u, (unsigned int *)&dword_10023CF00));
            if (!v70)
              break;
          }
          if ((++v69 & 0x3F) == 0)
          {
            a1 = ((uint64_t (*)(void))((char *)*(&off_100236540
                                              + ((-21 * ((*v64 - qword_10023CA30) ^ 0x71)) ^ *(_BYTE *)(v65 + (*(unsigned __int8 *)(v63 + (-21 * ((*v64 - qword_10023CA30) ^ 0x71))) ^ 1u)))
                                              + 425)
                                    - 1701629330))();
            v62 = a62;
          }
        }
      }
      if (!qword_10023CDB8)
      {
        a1 = sysconf(29);
        qword_10023CDC0 = a1;
        xmmword_10023CDC8 = xmmword_100212D80;
        qword_10023CDD8 = 0x200000;
        dword_10023CDE0 = 7;
        v62 = a62;
        STACK[0x2B0] = (unint64_t)&STACK[0x2B0] ^ 0x55555558;
        qword_10023CDB8 = (unint64_t)&STACK[0x2B0] ^ 0x55555558;
      }
      atomic_store(0, (unsigned int *)&dword_10023CF00);
      v66 = a15;
    }
    if (qword_10023CDC0 == -1040
      || (v71 = (2 * xmmword_10023CDC8 - 1) & -(uint64_t)xmmword_10023CDC8,
          a1 = (uint64_t)mmap(0, v71, 3, 4098, -1, 0),
          v62 = a62,
          a1 == -1))
    {
      *v67 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 48568))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
               a20,
               a21,
               a22,
               a23,
               a24,
               a25,
               a26,
               a27,
               a28,
               a29,
               a30,
               a31,
               a32,
               a33,
               a34,
               a35,
               a36,
               a37,
               a38,
               a39,
               a40,
               a41,
               a42,
               a43,
               a44,
               a45,
               a46,
               a47,
               a48,
               a49,
               a50,
               a51,
               a52,
               a53);
    }
    else
    {
      if (((a1 + 16) & 0xF) != 0)
        v72 = -((_DWORD)a1 + 16) & 0xFLL;
      else
        v72 = 0;
      v73 = a1 + v72;
      v74 = a1 + v72 + 16;
      v75 = -(int)v74 & 7;
      v76 = (_BYTE *)v74;
      switch(v75)
      {
        case 1u:
          goto LABEL_26;
        case 2u:
          goto LABEL_25;
        case 3u:
          goto LABEL_24;
        case 4u:
          goto LABEL_23;
        case 5u:
          goto LABEL_22;
        case 6u:
          goto LABEL_21;
        case 7u:
          *(_BYTE *)v74 = 0;
          v76 = (_BYTE *)(v74 + 1);
LABEL_21:
          *v76++ = 0;
LABEL_22:
          *v76++ = 0;
LABEL_23:
          *v76++ = 0;
LABEL_24:
          *v76++ = 0;
LABEL_25:
          *v76++ = 0;
LABEL_26:
          *v76++ = 0;
          break;
        default:
          break;
      }
      v77 = 960 - v75;
      v80 = v77;
      v79 = v77 & 7;
      switch(v80)
      {
        case 0:
          goto LABEL_37;
        case 1:
          goto LABEL_36;
        case 2:
          goto LABEL_35;
        case 3:
          goto LABEL_34;
        case 4:
          goto LABEL_33;
        case 5:
          goto LABEL_32;
        case 6:
          goto LABEL_31;
        case 7:
          *v76++ = 0;
LABEL_31:
          *v76++ = 0;
LABEL_32:
          *v76++ = 0;
LABEL_33:
          *v76++ = 0;
LABEL_34:
          *v76++ = 0;
LABEL_35:
          *v76++ = 0;
LABEL_36:
          *v76 = 0;
LABEL_37:
          *(_DWORD *)(v73 + 900) = 0;
          *(_QWORD *)(v73 + 8) = 963;
          *(_QWORD *)(v73 + 40) = a1;
          *(_QWORD *)(v73 + 904) = a1;
          *(_QWORD *)(v73 + 880) = v71;
          *(_QWORD *)(v73 + 872) = v71;
          *(_QWORD *)(v73 + 912) = v71;
          v81 = qword_10023CDB8;
          *(_QWORD *)(v73 + 72) = 4095;
          *(_QWORD *)(v73 + 80) = v81;
          v82 = dword_10023CDE0;
          v83 = (_BYTE *)(v74 + 920);
          v84 = -(v74 + 920) & 7;
          switch(v84)
          {
            case 1u:
              goto LABEL_44;
            case 2u:
              goto LABEL_43;
            case 3u:
              goto LABEL_42;
            case 4u:
              goto LABEL_41;
            case 5u:
              goto LABEL_40;
            case 6u:
              goto LABEL_39;
            case 7u:
              *v83 = 0;
              v83 = (_BYTE *)(v74 + 921);
LABEL_39:
              *v83++ = 0;
LABEL_40:
              *v83++ = 0;
LABEL_41:
              *v83++ = 0;
LABEL_42:
              *v83++ = 0;
LABEL_43:
              *v83++ = 0;
LABEL_44:
              *v83++ = 0;
              break;
            default:
              break;
          }
          v85 = 16 - v84;
          v87 = v85;
          v86 = v82 | 4;
          v88 = v85 & 7;
          switch(v87)
          {
            case 0:
              goto LABEL_55;
            case 1:
              goto LABEL_54;
            case 2:
              goto LABEL_53;
            case 3:
              goto LABEL_52;
            case 4:
              goto LABEL_51;
            case 5:
              goto LABEL_50;
            case 6:
              goto LABEL_49;
            case 7:
              *v83++ = 0;
LABEL_49:
              *v83++ = 0;
LABEL_50:
              *v83++ = 0;
LABEL_51:
              *v83++ = 0;
LABEL_52:
              *v83++ = 0;
LABEL_53:
              *v83++ = 0;
LABEL_54:
              *v83 = 0;
LABEL_55:
              *(_DWORD *)(v74 + 880) = v86;
              *(_QWORD *)(v74 + 96) = v74 + 72;
              *(_QWORD *)(v74 + 88) = v74 + 72;
              *(_QWORD *)(v74 + 112) = v74 + 88;
              *(_QWORD *)(v74 + 104) = v74 + 88;
              *(_QWORD *)(v74 + 128) = v74 + 104;
              *(_QWORD *)(v74 + 120) = v74 + 104;
              *(_QWORD *)(v74 + 144) = v74 + 120;
              *(_QWORD *)(v74 + 136) = v74 + 120;
              *(_QWORD *)(v74 + 160) = v74 + 136;
              *(_QWORD *)(v74 + 152) = v74 + 136;
              *(_QWORD *)(v74 + 176) = v74 + 152;
              *(_QWORD *)(v74 + 168) = v74 + 152;
              *(_QWORD *)(v74 + 192) = v74 + 168;
              *(_QWORD *)(v74 + 184) = v74 + 168;
              *(_QWORD *)(v74 + 208) = v74 + 184;
              *(_QWORD *)(v74 + 200) = v74 + 184;
              *(_QWORD *)(v74 + 224) = v74 + 200;
              *(_QWORD *)(v74 + 216) = v74 + 200;
              *(_QWORD *)(v74 + 240) = v74 + 216;
              *(_QWORD *)(v74 + 232) = v74 + 216;
              *(_QWORD *)(v74 + 248) = v74 + 232;
              *(_QWORD *)(v74 + 256) = v74 + 232;
              *(_QWORD *)(v74 + 264) = v74 + 248;
              *(_QWORD *)(v74 + 272) = v74 + 248;
              *(_QWORD *)(v74 + 280) = v74 + 264;
              *(_QWORD *)(v74 + 288) = v74 + 264;
              *(_QWORD *)(v74 + 296) = v74 + 280;
              *(_QWORD *)(v74 + 304) = v74 + 280;
              *(_QWORD *)(v74 + 312) = v74 + 296;
              *(_QWORD *)(v74 + 320) = v74 + 296;
              *(_QWORD *)(v74 + 328) = v74 + 312;
              *(_QWORD *)(v74 + 336) = v74 + 312;
              *(_QWORD *)(v74 + 344) = v74 + 328;
              *(_QWORD *)(v74 + 352) = v74 + 328;
              *(_QWORD *)(v74 + 360) = v74 + 344;
              *(_QWORD *)(v74 + 368) = v74 + 344;
              *(_QWORD *)(v74 + 376) = v74 + 360;
              *(_QWORD *)(v74 + 384) = v74 + 360;
              *(_QWORD *)(v74 + 392) = v74 + 376;
              *(_QWORD *)(v74 + 400) = v74 + 376;
              *(_QWORD *)(v74 + 408) = v74 + 392;
              *(_QWORD *)(v74 + 416) = v74 + 392;
              *(_QWORD *)(v74 + 424) = v74 + 408;
              *(_QWORD *)(v74 + 432) = v74 + 408;
              *(_QWORD *)(v74 + 440) = v74 + 424;
              *(_QWORD *)(v74 + 448) = v74 + 424;
              *(_QWORD *)(v74 + 456) = v74 + 440;
              *(_QWORD *)(v74 + 464) = v74 + 440;
              *(_QWORD *)(v74 + 472) = v74 + 456;
              *(_QWORD *)(v74 + 480) = v74 + 456;
              *(_QWORD *)(v74 + 488) = v74 + 472;
              *(_QWORD *)(v74 + 504) = v74 + 488;
              *(_QWORD *)(v74 + 512) = v74 + 488;
              *(_QWORD *)(v74 + 496) = v74 + 472;
              *(_QWORD *)(v74 + 528) = v74 + 504;
              *(_QWORD *)(v74 + 520) = v74 + 504;
              *(_QWORD *)(v74 + 544) = v74 + 520;
              *(_QWORD *)(v74 + 536) = v74 + 520;
              *(_QWORD *)(v74 + 560) = v74 + 536;
              *(_QWORD *)(v74 + 552) = v74 + 536;
              *(_QWORD *)(v74 + 576) = v74 + 552;
              *(_QWORD *)(v74 + 568) = v74 + 552;
              *(_QWORD *)(v74 + 592) = v74 + 568;
              *(_QWORD *)(v74 + 584) = v74 + 568;
              v89 = v74 + (*(_QWORD *)(v74 - 8) & 0xFFFFFFFFFFFFFFF8);
              v90 = v89 - 16;
              v91 = a1 + v71 - (v89 - 16);
              if ((v89 & 0xF) != 0)
                v92 = -(int)v89 & 0xFLL;
              else
                v92 = 0;
              v93 = v90 + v92;
              v94 = v91 - v92 - 80;
              *(_QWORD *)(v74 + 40) = v93;
              *(_QWORD *)(v74 + 16) = v94;
              *(_QWORD *)(v93 + 8) = v94 | 1;
              *(_QWORD *)(a1 + v71 - 72) = 80;
              *(_QWORD *)(v74 + 48) = qword_10023CDD8;
              *(_DWORD *)(v74 + 912) = 1;
              *(_DWORD *)(v74 + 880) |= 2u;
              *v67++ = v74;
              if (v67 < v66 + 2)
                continue;
              v95 = sub_1001C9998(0x80uLL);
              *a12 = v95;
              if (v95)
              {
                v103 = 0;
                *v95 = 0x100002CECLL;
                v95[1] = 0x100002E2CLL;
                v95[2] = 0x100004FD0;
                v95[3] = 0x100004FF4;
                v95[4] = 0x1001CB898;
                v95[5] = 0x100002F1CLL;
                v104 = qword_10023CA30 ^ 0x71;
                v95[6] = (char *)*(&off_100236540
                                 + ((-21 * (qword_10023CA30 ^ 0x71 ^ *v64)) ^ *(_BYTE *)(a55 + (*(unsigned __int8 *)(a56 + (-21 * (qword_10023CA30 ^ 0x71 ^ *v64))) ^ 5u)))
                                 + 235)
                       - 665370171;
                v95[7] = 0x100005110;
                v95[8] = 0x100002FACLL;
                v95[9] = 0x10000528CLL;
                v95[10] = (char *)*(&off_100236540
                                  + ((-21 * (v104 ^ *v64)) ^ *(_BYTE *)(a57 + (*(unsigned __int8 *)(a58 + (-21 * (v104 ^ *v64))) ^ 0xC1u)))
                                  + 313)
                        - 330545430;
                v95[11] = 0x1000052B4;
                v95[12] = 0x1000030FCLL;
                v95[13] = 0x1000053D8;
                v95[14] = 0x100005434;
                v95[15] = 0x1000055E8;
              }
              else
              {
                v103 = -1;
              }
              result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a62 + 8 * (16 * (v103 != 0) + 6055)))(v95, v96, v97, v98, v99, v100, v101, v102, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                         a20,
                         a21,
                         a22,
                         a23,
                         a24,
                         a25,
                         a26,
                         a27,
                         a28,
                         a29,
                         a30,
                         a31,
                         a32,
                         a33,
                         a34,
                         a35,
                         a36,
                         a37,
                         a38,
                         a39,
                         a40,
                         a41,
                         a42,
                         a43,
                         a44,
                         a45,
                         a46,
                         a47,
                         a48,
                         a49,
                         a50,
                         a51,
                         a52,
                         a53);
              break;
            default:
              return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_10006CB10 + 4 * byte_100212E9C[v88 >> 3]))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                       a20,
                       a21,
                       a22,
                       a23,
                       a24,
                       a25,
                       a26,
                       a27,
                       a28,
                       a29,
                       a30,
                       a31,
                       a32,
                       a33,
                       a34,
                       a35,
                       a36,
                       a37,
                       a38,
                       a39,
                       a40,
                       a41,
                       a42,
                       a43,
                       a44,
                       a45,
                       a46,
                       a47,
                       a48,
                       a49,
                       a50,
                       a51,
                       a52,
                       a53);
          }
          break;
        default:
          result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_10006CA00 + 4 * byte_100212E85[(v79 >> 3) & 7]))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                     a20,
                     a21,
                     a22,
                     a23,
                     a24,
                     a25,
                     a26,
                     a27,
                     a28,
                     a29,
                     a30,
                     a31,
                     a32,
                     a33,
                     a34,
                     a35,
                     a36,
                     a37,
                     a38,
                     a39,
                     a40,
                     a41,
                     a42,
                     a43,
                     a44,
                     a45,
                     a46,
                     a47,
                     a48,
                     a49,
                     a50,
                     a51,
                     a52,
                     a53);
          break;
      }
    }
    return result;
  }
}

uint64_t sub_10006CFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  unint64_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;

  LODWORD(a14) = 293;
  v62 = vdupq_n_s32(0x7FFFFFFEu);
  v60 = vdupq_n_s32(0x38CA7B5Bu);
  LODWORD(a49) = -1452457996;
  v58 = vdupq_n_s32(0x38CA7B43u);
  v59 = vdupq_n_s32(0x1C653DA1u);
  LODWORD(a19) = 610905990;
  v57 = 222922757
      * ((2 * ((v55 - 184) & 0x3990467FACAF0878) - (v55 - 184) + 0x466FB9805350F780) ^ 0xE53446003AC102BBLL);
  v61 = vdupq_n_s32(0x38CA7B5Fu);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * v52) - ((v52 - v54 - 2706) ^ 0x2469AFE4)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v51, a12, a13, a14, a15, a16, a17, v57 ^ 0x30F1CAD6, a19,
           v57,
           v58.i64[0],
           v58.i64[1],
           v59.i64[0],
           v59.i64[1],
           v60.i64[0],
           v60.i64[1],
           v61.i64[0],
           v61.i64[1],
           v62.i64[0],
           v62.i64[1],
           1641849875 - 295199341 * ((v55 - 184) ^ 0x5453F8F8EF680848),
           295199341 * ((v55 - 184) ^ 0x5453F8F8EF680848),
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_10006D1F4()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 25832) - 8))();
}

uint64_t sub_10006D228@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;

  if (a1)
    v9 = 1641849875;
  else
    v9 = *v7 + 1;
  *v7 = v9;
  v10 = (((v4 >> 11) ^ 0x7194F) + v3 - ((2 * ((v4 >> 11) ^ 0x7194F)) & 0x14F686)) ^ v4;
  v11 = (((v10 << 7) & 0x9D2C5680 ^ v10) << 15) & 0xEFC60000 ^ (v10 << 7) & 0x9D2C5680 ^ v10;
  *(_DWORD *)(*(_QWORD *)(v8 + 8 * (v5 + v1 - 1300)) - 1816596567 + 4 * v6) = v11 ^ (v11 >> 18);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v5 + v1 + 2706) ^ (5876 * (v6 == 31)))) - 4))();
}

uint64_t sub_10006D2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  *(_QWORD *)(v65 - 192) = 0x9908B0DF00000000;
  v66 = *(unsigned int *)(*(_QWORD *)(v64 + 8 * (v63 + v62 - 925)) - 1864273962);
  *(_DWORD *)(v65 - 184) = (v62 + 439281522) ^ a32;
  *(_DWORD *)(v65 - 180) = v62 + 439280724 + a32;
  *(_DWORD *)(v65 - 148) = ((v62 + 439280724) ^ 0x39) + a32;
  *(_DWORD *)(v65 - 176) = a32;
  *(_DWORD *)(v65 - 172) = v62 - a32 - 1135166520;
  *(_QWORD *)(v65 - 168) = v66 + a32;
  *(_QWORD *)(v65 - 160) = a31;
  v67 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v64 + 8 * (v63 + v62 - 860)) - 584047855))(v65 - 184);
  return (*(uint64_t (**)(uint64_t))(a62 + 8 * *(int *)(v65 - 152)))(v67);
}

uint64_t sub_10006D3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  _DWORD *v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  int v66;

  v65(4);
  v66 = ((uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * a14) - 470940611))();
  *v63 = v66 + v62 - ((2 * v66) & 0x7194F686);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62 + 40320) - 4))(952793924);
}

uint64_t sub_10006D494@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  char v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;

  v12 = ((v4 >> ((v9 + 104) ^ v5)) + v8 - 2 * (v4 >> ((v9 + 104) ^ v5))) ^ v4;
  *(_DWORD *)(v2 + 4 * a2) = a2 + v12 * v6 - ((v3 + v12 * v7) & v11) + a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((60 * (a2 != 622)) ^ v9)) - 4))();
}

uint64_t sub_10006D500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v47 = v44();
  LODWORD(STACK[0x30C]) = v47 + v42 - (v45 & (2 * v47));
  v48 = v44();
  LODWORD(STACK[0x304]) = v48 + v42 - (((v46 + 610903020) ^ 0x55FD5966) & (2 * v48));
  v49 = v44();
  LODWORD(STACK[0x308]) = v49 + v42 - (v45 & (2 * v49));
  v50 = v44();
  LODWORD(STACK[0x300]) = v50 + v42 - ((2 * v50) & 0x7194F686);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v46) - 4))(v50, v51, v52, v53, v54, v55, v56, v57, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10006D5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;

  *((_DWORD *)&STACK[0x300] + v54) ^= a51;
  return (*(uint64_t (**)(void))(v53 + 8 * (v51 + v52 + 548)))();
}

uint64_t sub_10006D5E0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(610906076
                            - (a1 + 610903020)
                            + *(_QWORD *)(v1 + 8 * (a1 ^ (4359 * (v2 == 1))))))();
}

uint64_t sub_10006D620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  int v69;
  int v70;
  uint64_t v71;

  v67 = 4 * v64;
  v68 = *(_DWORD *)(v61 + 4 * (v64 - 1));
  v69 = ((v68 >> 30) + v60 - 2 * (v68 >> 30)) ^ v68;
  v70 = (*((_DWORD *)&STACK[0x300] + v65) ^ v60)
      + v65
      + ((v60 + 1664525 * v69 - ((3329050 * v69) & 0x7194F686)) ^ *(_DWORD *)(v61 + v67));
  *(_DWORD *)(v61 + v67) = v70 + v60 - ((2 * v70) & 0x7194F686);
  *(_DWORD *)(v66 - 168) = (v62 - 432131985) ^ a59;
  *(_QWORD *)(v66 - 160) = a53;
  *(_DWORD *)(v66 - 184) = a59;
  *(_DWORD *)(v66 - 180) = v62 - a59 - 288260136;
  *(_DWORD *)(v66 - 144) = (v62 - 432131985) ^ a59 ^ 0x37D;
  *(_DWORD *)(v66 - 152) = a59 + v62 - 432131985 + 109;
  *(_QWORD *)(v66 - 176) = v64 + 1 + a59;
  v71 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540 + (v62 ^ (v59 - 192))) - 1832489034))(v66 - 184);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v63 + 8 * *(int *)(v66 - 148)) - 4))(v71);
}

uint64_t sub_10006D730()
{
  int v0;
  int v1;
  _DWORD *v2;
  uint64_t v3;

  *v2 = v2[623];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 + v0 - 457)) - 4))();
}

uint64_t sub_10006D750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t (*a63)(uint64_t))
{
  uint64_t a64;
  int v64;
  unint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;

  *(_DWORD *)(v67 - 152) = a56 - v65;
  *(_DWORD *)(v67 - 148) = a60 ^ v65;
  *(_QWORD *)(v67 - 168) = a55;
  *(_QWORD *)(v67 - 184) = (v66 + 1) ^ v65;
  *(_DWORD *)(v67 - 144) = a58 + v65;
  *(_DWORD *)(v67 - 160) = v65 + 1280411336 + v64;
  *(_DWORD *)(v67 - 156) = 1 - v65;
  v68 = a63(v67 - 184);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a64 + 8 * *(int *)(v67 - 176)) - 8))(v68);
}

uint64_t sub_10006D7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v51;
  int v52;
  uint64_t v53;

  LODWORD(STACK[0x300]) ^= a51;
  return (*(uint64_t (**)(void))(v53 + 8 * (v51 + v52 + 548)))();
}

uint64_t sub_10006D804()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 610899212) ^ (39 * (v1 != 1)))) - 4))();
}

uint64_t sub_10006D83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t (*a61)(uint64_t))
{
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;

  v67 = 4 * v65;
  v68 = *(_DWORD *)(v62 + 4 * (v65 - 1));
  v69 = ((v68 >> 30) + v61 - 2 * (v68 >> 30)) ^ v68;
  v70 = ((v61 + 1566083941 * v69 - ((984684234 * v69) & 0x7194F686)) ^ *(_DWORD *)(v62 + v67)) - v65;
  *(_DWORD *)(v62 + v67) = v70 + v61 - ((2 * v70) & 0x7194F686);
  v71 = 222922757 * ((0xB2B3C6550F7618EFLL - ((v66 - 184) | 0xB2B3C6550F7618EFLL) + a54) ^ 0xEE17C62A9918122BLL);
  *(_DWORD *)(v66 - 152) = ((v63 - 1614857592) ^ 0x37B) - v71;
  *(_DWORD *)(v66 - 148) = (v63 - 1614857592) ^ v71;
  *(_DWORD *)(v66 - 160) = v71 + 1280411336 + v63;
  *(_DWORD *)(v66 - 156) = 1 - v71;
  *(_QWORD *)(v66 - 184) = (v65 + 1) ^ v71;
  *(_QWORD *)(v66 - 168) = 623 - v71;
  *(_DWORD *)(v66 - 144) = v71 + v63 - 1614857592 - 4;
  v72 = a61(v66 - 184);
  return (*(uint64_t (**)(uint64_t))(v64 + 8 * *(int *)(v66 - 176)))(v72);
}

uint64_t sub_10006D964()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  *v1 = v1[623];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 - 610899492)) - 4))();
}

uint64_t sub_10006D98C()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = v0 - 610902463;
  *v1 = -1194689725;
  v4 = sub_1000035BC();
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * v3))(v4);
}

uint64_t sub_10006D9D0(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,__n128 a32,__n128 a33)
{
  const float *v33;
  int v34;
  __n128 v35;
  __n128 v36;

  v35 = (__n128)vld1q_dup_f32(v33);
  v36.n128_u64[0] = 0x8000000080000000;
  v36.n128_u64[1] = 0x8000000080000000;
  return ((uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(a8 + 35280) - ((v34 + 610905769) | 0x803u) + 3099))(7449, 1337479639, v35, a2, a3, a4, a5, a33, a32, v36);
}

uint64_t sub_10006DA48@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q5>, int8x16_t a7@<Q6>, int8x16_t a8@<Q7>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int32x4_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int32x4_t v19;
  int8x16_t v20;

  v14 = 4 * a3;
  v15 = v9 + 4 * a3;
  v16 = a3 + 4;
  a5.i32[0] = *(_DWORD *)(v9 + (v14 | 4));
  a5.i32[1] = *(_DWORD *)(v9 + (v14 | 8));
  a5.i32[2] = *(_DWORD *)(v9 + (v14 | 0xC));
  v17 = vextq_s8(a4, a5, 0xCuLL);
  a5.i32[3] = *(_DWORD *)(v9 + 4 * v16);
  v18 = (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(a5, a6), vandq_s8(v17, a8)), 1uLL);
  v19 = (int32x4_t)veorq_s8(v18, v11);
  v20.i32[0] = *(_DWORD *)(v10 + 4 * (a5.i32[0] & (((v8 - 3091) | 0xC00u) - 3087) ^ 1));
  v20.i32[1] = *(_DWORD *)(v10 + 4 * ((a5.i8[4] & 1) == 0));
  v20.i32[2] = *(_DWORD *)(v10 + 4 * ((a5.i8[8] & 1) == 0));
  v20.i32[3] = *(_DWORD *)(v10 + 4 * ((a5.i8[12] & 1) == 0));
  *(int8x16_t *)v15 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + 1588), v20), (int8x16_t)vaddq_s32(vsubq_s32(v19, vshlq_n_s32((int32x4_t)veorq_s8(vandq_s8((int8x16_t)v19, a7), vandq_s8(v18, v12)), 1uLL)), v13)), (int8x16_t)v13);
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a2 + 8 * (((v16 != 224) * a1) ^ v8)) - 8))((__n128)a5);
}

uint64_t sub_10006DB34(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6, int a7)
{
  int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  int v15;
  unsigned int v16;

  v13 = (unsigned int *)(v11 + 4 * v9);
  v14 = v9 + 1;
  v15 = *(_DWORD *)(v11 + 4 * v14);
  v16 = (v15 & 0x7FFFFFFE | ((v7 + a2) & a5 ^ a6) & v8) >> 1;
  *v13 = v13[397] ^ v10 ^ *(_DWORD *)(v12 + 4 * ((v15 & 1) == 0)) ^ ((v16 ^ a4)
                                                                     + v10
                                                                     - 2 * ((v16 ^ a4) & (v10 + 28) ^ v16 & 0x1C));
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v14 != 227) * a7) ^ v7)) - 8))();
}

uint64_t sub_10006DBB8@<X0>(uint64_t a1@<X2>, int a2@<W8>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>, __n128 a6@<Q4>, __n128 a7@<Q5>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,__n128 a24)
{
  uint64_t v24;
  const float *v25;
  __n128 v26;

  v25 = (const float *)(v24 + 908);
  v26 = (__n128)vld1q_dup_f32(v25);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(a1 + 8 * a2)
                                                                                         - 8))(v26, a3, a4, a5, a6, a7, a24);
}

uint64_t sub_10006DBF8@<X0>(uint64_t a1@<X2>, int a2@<W4>, unsigned int a3@<W5>, uint64_t a4@<X6>, int a5@<W8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q1>, int8x16_t a8@<Q5>, int8x16_t a9@<Q6>, int8x16_t a10@<Q7>)
{
  unsigned __int32 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int32x4_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int32x4_t v19;
  int8x16_t v20;

  a7.i32[0] = *(_DWORD *)(v12 + 4 * (v11 + ((a5 + a2) & a3)) + a4);
  a7.i32[1] = *(v10 - 2);
  a7.i32[2] = *(v10 - 1);
  v17 = vextq_s8(a6, a7, 0xCuLL);
  a7.i32[3] = *v10;
  v18 = (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(a7, a8), vandq_s8(v17, a10)), 1uLL);
  v19 = (int32x4_t)veorq_s8(v18, v14);
  v20 = (int8x16_t)vaddq_s32(vsubq_s32(v19, vshlq_n_s32((int32x4_t)veorq_s8(vandq_s8((int8x16_t)v19, a9), vandq_s8(v18, v15)), 1uLL)), v16);
  v19.i32[0] = *(_DWORD *)(v13 + 4 * ((a7.i8[0] & 1) == 0));
  v19.i32[1] = *(_DWORD *)(v13 + 4 * (~a7.i32[1] & 1));
  v19.i32[2] = *(_DWORD *)(v13 + 4 * (~a7.i32[2] & 1));
  v19.i32[3] = *(_DWORD *)(v13 + 4 * (~*v10 & 1));
  *((int8x16_t *)v10 - 1) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 231), (int8x16_t)v19), v20), (int8x16_t)v16);
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a1 + 8 * (a5 ^ (2 * ((v11 == 392) | (8 * (v11 == 392)))))) - 8))((__n128)a7);
}

uint64_t sub_10006DCD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,_DWORD *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t (*a61)(uint64_t),uint64_t a62)
{
  int v62;
  int v63;
  int *v64;
  uint64_t v65;
  unsigned int v66;
  _DWORD *v67;
  uint64_t v68;
  int v69;
  unsigned int v70;
  uint64_t v71;

  v69 = *v64;
  v64[623] = v64[396] ^ v63 ^ *(_DWORD *)(v65 + 4 * ((v69 & 1) == 0)) ^ ((((v64[623] & 0x80000000 | v69 & 0x7FFFFFFF) >> 1) ^ a4)
                                                                         + v63
                                                                         - 2
                                                                         * ((((v64[623] & 0x80000000 | v69 & 0x7FFFFFFF) >> 1) ^ a4) & (v63 + 4) ^ ((v64[623] & 0x80000000 | v69 & 0x7FFFFFFF) >> 1) & 4));
  if (v66 <= 0x26F)
    v70 = v66;
  else
    v70 = 0;
  *a37 = v70 + 1;
  *(_QWORD *)(v68 - 168) = (*v67 - 820697405) - a20;
  *(_QWORD *)(v68 - 184) = a18;
  *(_DWORD *)(v68 - 144) = a20 + v62 - 1700758025 - 12;
  *(_DWORD *)(v68 - 160) = a20 + 1280411336 + v62;
  *(_DWORD *)(v68 - 156) = 1 - a20;
  *(_DWORD *)(v68 - 152) = ((v62 - 1700758025) ^ 0x370) - a20;
  *(_DWORD *)(v68 - 148) = (v62 - 1700758025) ^ a20;
  v71 = a61(v68 - 184);
  return (*(uint64_t (**)(uint64_t))(a62 + 8 * *(int *)(v68 - 176)))(v71);
}

uint64_t sub_10006DDBC()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 25832) - 8))();
}

uint64_t sub_10006DDF0@<X0>(_DWORD *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,_QWORD *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,_QWORD *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  int v60;
  uint64_t v61;

  if (*a29)
  {
    v57 = v56 + v55 + 101;
    v58 = a4(31, 0, 0, 0);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a55 + 8 * v57) - 4))(v58);
  }
  else
  {
    *a29 = a1;
    *a28 = 63;
    *a1 |= ~a1[*a1 & 0xELL] << 16;
    v60 = v56 + v55 + 398;
    a1[4] |= ~a1[a1[4] & 0xELL] << 16;
    a1[8] |= ~a1[a1[8] & 0xELL] << 16;
    a1[12] |= ~a1[a1[12] & 0xELL] << 16;
    v61 = a4(31, 0, 0, 0);
    return (*(uint64_t (**)(uint64_t))(a55 + 8 * ((7671 * (*a40 != 0)) ^ v60)))(v61);
  }
}

uint64_t sub_10006DF04@<X0>(uint64_t a1@<X5>, unint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,_QWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unint64_t *a41)
{
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  int32x2_t v50;
  int32x2_t v51;
  uint64_t v52;
  int32x2_t v53;
  char v54;
  char v55;
  __int16 v56;
  unint64_t v57;
  unsigned int v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int8x16_t v64;
  int32x4_t v65;
  int8x16_t v66;
  uint64_t i;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  __int16 v79;
  int8x16x4_t v81;

  v42 = 0;
  v43 = *(_DWORD *)(*a30 + (int)(*a29 & 0xBAC1C520));
  STACK[0x288] = a2;
  STACK[0x280] = 0;
  v44 = 16777619 * ((-1161706206 * v43 + 7) ^ (-1161706206 * v43)) % 7;
  v45 = 16777619 * ((-1161706206 * v43 + 6) ^ (-1161706206 * v43)) % 6;
  v46 = 16777619 * ((-1161706206 * v43 + 5) ^ (-1161706206 * v43)) % 5;
  v47 = *(_BYTE *)((unint64_t)&STACK[0x280] | v44);
  *(_BYTE *)((unint64_t)&STACK[0x280] | v44) = STACK[0x287];
  v48 = *(_BYTE *)((unint64_t)&STACK[0x280] | v45);
  *(_BYTE *)((unint64_t)&STACK[0x280] | v45) = STACK[0x286];
  v49 = *(_BYTE *)((unint64_t)&STACK[0x280] | v46);
  *(_BYTE *)((unint64_t)&STACK[0x280] | v46) = STACK[0x285];
  v50 = vdup_n_s32(-1161706206 * v43);
  v51.i32[0] = -1161706206 * v43;
  v51.i32[1] = -1161706206 * v43 + 1;
  v52 = 16777619 * ((-1161706206 * v43 + 3) ^ (-1161706206 * v43)) % 3;
  LOBYTE(STACK[0x287]) = v47;
  v53 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v50, v51), (int8x8_t)v50);
  LOBYTE(STACK[0x286]) = v48;
  LOBYTE(STACK[0x285]) = v49;
  v54 = STACK[0x280];
  LOBYTE(STACK[0x280]) = STACK[0x284];
  LOBYTE(STACK[0x284]) = v54;
  v55 = *(_BYTE *)((unint64_t)&STACK[0x280] | v52);
  *(_BYTE *)((unint64_t)&STACK[0x280] | v52) = STACK[0x283];
  LOBYTE(STACK[0x283]) = v55;
  v56 = STACK[0x281];
  LOBYTE(STACK[0x282]) = STACK[0x280];
  LOWORD(STACK[0x280]) = v56;
  v57 = STACK[0x288];
  v58 = (-1161706206 * STACK[0x288]) ^ v43;
  v59 = vdupq_n_s32(v58);
  STACK[0x280] = (unint64_t)vmla_s32(v53, (int32x2_t)STACK[0x280], vdup_n_s32(0x1000193u));
  v60 = (int32x4_t)xmmword_100212CF0;
  v61 = (int32x4_t)xmmword_100212D00;
  v62 = (int32x4_t)xmmword_100212D10;
  v63 = (int32x4_t)xmmword_100212D20;
  v64.i64[0] = 0x9393939393939393;
  v64.i64[1] = 0x9393939393939393;
  v65.i64[0] = 0x1000000010;
  v65.i64[1] = 0x1000000010;
  do
  {
    v66 = *(int8x16_t *)(v57 + v42);
    v81.val[1] = veorq_s8(veorq_s8(vqtbl1q_s8(v66, (int8x16_t)xmmword_100212D40), (int8x16_t)v59), (int8x16_t)vmulq_s32(vaddq_s32(v62, v59), vsubq_s32(v62, v59)));
    v81.val[0] = veorq_s8(veorq_s8(vqtbl1q_s8(v66, (int8x16_t)xmmword_100212D30), (int8x16_t)v59), (int8x16_t)vmulq_s32(vaddq_s32(v63, v59), vsubq_s32(v63, v59)));
    v81.val[2] = veorq_s8(veorq_s8(vqtbl1q_s8(v66, (int8x16_t)xmmword_100212D50), (int8x16_t)v59), (int8x16_t)vmulq_s32(vaddq_s32(v61, v59), vsubq_s32(v61, v59)));
    v81.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v66, (int8x16_t)xmmword_100212D60), (int8x16_t)v59), (int8x16_t)vmulq_s32(vaddq_s32(v60, v59), vsubq_s32(v60, v59)));
    *(int8x16_t *)(v57 + v42) = vmulq_s8(vqtbl4q_s8(v81, (int8x16_t)xmmword_100212D70), v64);
    v42 += 16;
    v63 = vaddq_s32(v63, v65);
    v62 = vaddq_s32(v62, v65);
    v61 = vaddq_s32(v61, v65);
    v60 = vaddq_s32(v60, v65);
  }
  while (v42 != 32);
  for (i = 32; i != 40; ++i)
    *(_BYTE *)(v57 + i) = -109 * (*(_BYTE *)(v57 + i) ^ v58 ^ ((v58 + i) * (i - v58)));
  v68 = 4;
  do
  {
    v69 = 8 * v68;
    v70 = 8 * (16777619 * ((v58 + (_DWORD)v68) ^ v58) % v68);
    v71 = *(_QWORD *)(v57 + v70) ^ *(_QWORD *)(v57 + 8 * v68);
    *(_QWORD *)(v57 + v69) = v71;
    v72 = *(_QWORD *)(v57 + v70) ^ v71;
    *(_QWORD *)(v57 + v70) = v72;
    *(_QWORD *)(v57 + v69) = *(_QWORD *)(v57 + 8 * v68) ^ v72;
    v73 = v68-- + 1;
  }
  while (v73 > 2);
  v74 = *((_BYTE *)&STACK[0x288] + v44);
  *((_BYTE *)&STACK[0x288] + v44) = STACK[0x28F];
  LOBYTE(STACK[0x28F]) = v74;
  v75 = *((_BYTE *)&STACK[0x288] + v45);
  *((_BYTE *)&STACK[0x288] + v45) = STACK[0x28E];
  LOBYTE(STACK[0x28E]) = v75;
  v76 = *((_BYTE *)&STACK[0x288] + v46);
  *((_BYTE *)&STACK[0x288] + v46) = STACK[0x28D];
  LOBYTE(STACK[0x28D]) = v76;
  v77 = STACK[0x288];
  LOBYTE(STACK[0x288]) = STACK[0x28C];
  v78 = *((_BYTE *)&STACK[0x288] + v52);
  *((_BYTE *)&STACK[0x288] + v52) = STACK[0x28B];
  LOBYTE(STACK[0x28C]) = v77;
  LOBYTE(STACK[0x28B]) = v78;
  v79 = STACK[0x289];
  LOBYTE(STACK[0x28A]) = STACK[0x288];
  LOWORD(STACK[0x288]) = v79;
  STACK[0x288] = (unint64_t)vmla_s32(v53, (int32x2_t)STACK[0x288], vdup_n_s32(0x1000193u));
  *a41 = STACK[0x288] ^ STACK[0x280];
  return (*(uint64_t (**)(void))(a1 + 8 * v41))();
}

uint64_t sub_10006E294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void (*a43)(uint64_t, void (*)()),uint64_t a44,uint64_t a45,void (*a46)(uint64_t),uint64_t a47,_QWORD *a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;

  STACK[0x208] = 0;
  a43(v62, sub_1001C4250);
  a46(a45);
  a43(v62, sub_1001C4250);
  return ((uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * ((580 * (*a48 != 0)) ^ 0x18EE)) - 8))();
}

uint64_t sub_10006E32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t (*a46)(void),uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;

  v63 = a46();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62 + 8 * v62) - ((v62 - 1262047512) & 0x4B393B6F ^ 0x34ELL)))(v63);
}

uint64_t sub_10006E364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,_QWORD *a47)
{
  unsigned int v47;
  _DWORD *v48;
  _BOOL4 v50;

  v50 = *v48 == ((v47 + 2398) ^ 0x6A89F242) && *a47 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((6930 * v50) ^ v47)) - 4))();
}

uint64_t sub_10006E3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_DWORD *a35,_QWORD *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unint64_t *a47)
{
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  __int16 v61;
  int v62;
  int v63;
  int v64;
  unint64_t v65;
  int v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  unint64_t v71;
  unsigned int v72;
  uint64_t i;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int8x16_t v86;
  uint64_t j;
  int8x16x4_t v89;

  v50 = *(_DWORD *)(*a36 + (int)(*a35 & 0xBAC1C520));
  STACK[0x2A0] = 0;
  v51 = -1161706206 * v50;
  v52 = 16777619 * ((-1161706206 * v50 + 7) ^ (-1161706206 * v50)) % 7;
  v53 = *(_BYTE *)((unint64_t)&STACK[0x2A0] | v52);
  *(_BYTE *)((unint64_t)&STACK[0x2A0] | v52) = 0;
  LOBYTE(STACK[0x2A7]) = v53;
  v54 = 16777619 * ((-1161706206 * v50 + 6) ^ (-1161706206 * v50)) % 6;
  v55 = *(_BYTE *)((unint64_t)&STACK[0x2A0] | v54);
  *(_BYTE *)((unint64_t)&STACK[0x2A0] | v54) = STACK[0x2A6];
  LOBYTE(STACK[0x2A6]) = v55;
  v56 = 16777619 * ((-1161706206 * v50 + 5) ^ (-1161706206 * v50)) % 5;
  v57 = *(_BYTE *)((unint64_t)&STACK[0x2A0] | v56);
  *(_BYTE *)((unint64_t)&STACK[0x2A0] | v56) = STACK[0x2A5];
  LOBYTE(STACK[0x2A5]) = v57;
  v58 = STACK[0x2A0];
  LOBYTE(STACK[0x2A0]) = STACK[0x2A4];
  LOBYTE(STACK[0x2A4]) = v58;
  v59 = 16777619 * ((-1161706206 * v50 + 3) ^ (-1161706206 * v50)) % 3;
  v60 = *(_BYTE *)((unint64_t)&STACK[0x2A0] | v59);
  *(_BYTE *)((unint64_t)&STACK[0x2A0] | v59) = STACK[0x2A3];
  LOBYTE(STACK[0x2A3]) = v60;
  v61 = STACK[0x2A1];
  LOBYTE(STACK[0x2A2]) = STACK[0x2A0];
  LOWORD(STACK[0x2A0]) = v61;
  v62 = (v51 * v51) ^ v51;
  v63 = STACK[0x2A4];
  v64 = (v51 + v51 * v51) ^ v51;
  LODWORD(STACK[0x2A0]) = v62 + 16777619 * LODWORD(STACK[0x2A0]);
  LODWORD(STACK[0x2A4]) = v64 + 16777619 * v63;
  v65 = STACK[0x2A0] ^ v47;
  v66 = 899433627 * (v65 - v62);
  LODWORD(v65) = 899433627 * (HIDWORD(v65) - v64);
  LODWORD(STACK[0x2A8]) = v66;
  LODWORD(STACK[0x2AC]) = v65;
  LOBYTE(STACK[0x2A9]) = v66;
  LOBYTE(STACK[0x2A8]) = BYTE2(v66);
  LOBYTE(STACK[0x2AA]) = BYTE1(v66);
  v67 = (_BYTE *)((unint64_t)&STACK[0x2A8] | v59);
  LOBYTE(v62) = *v67;
  *v67 = HIBYTE(v66);
  LOBYTE(STACK[0x2AB]) = v62;
  LOBYTE(v64) = STACK[0x2A8];
  LOBYTE(STACK[0x2A8]) = v65;
  LOBYTE(STACK[0x2AC]) = v64;
  v68 = (_BYTE *)((unint64_t)&STACK[0x2A8] | v56);
  LOBYTE(v67) = *v68;
  *v68 = BYTE1(v65);
  LOBYTE(STACK[0x2AD]) = (_BYTE)v67;
  v69 = (_BYTE *)((unint64_t)&STACK[0x2A8] | v54);
  LOBYTE(v68) = *v69;
  *v69 = BYTE2(v65);
  LOBYTE(STACK[0x2AE]) = (_BYTE)v68;
  v70 = (_BYTE *)((unint64_t)&STACK[0x2A8] | v52);
  LOBYTE(v69) = *v70;
  *v70 = BYTE3(v65);
  LOBYTE(STACK[0x2AF]) = (_BYTE)v69;
  v71 = STACK[0x2A8];
  v72 = (-1161706206 * STACK[0x2A8]) ^ v50;
  for (i = 1; i != 5; ++i)
  {
    v74 = 8 * i;
    v75 = 8 * (16777619 * ((v72 + (_DWORD)i) ^ v72) % i);
    v76 = *(_QWORD *)(v71 + v75) ^ *(_QWORD *)(v71 + 8 * i);
    *(_QWORD *)(v71 + v74) = v76;
    v77 = *(_QWORD *)(v71 + v75) ^ v76;
    *(_QWORD *)(v71 + v75) = v77;
    *(_QWORD *)(v71 + v74) = *(_QWORD *)(v71 + 8 * i) ^ v77;
  }
  v78 = 0;
  v79 = (__n128)xmmword_100212CF0;
  v80 = (__n128)xmmword_100212D00;
  v81 = (__n128)xmmword_100212D10;
  v82 = (__n128)xmmword_100212D20;
  v83 = vdupq_n_s32(v72);
  v84.i64[0] = 0x9B0000009BLL;
  v84.i64[1] = 0x9B0000009BLL;
  v85.i64[0] = 0x1000000010;
  v85.i64[1] = 0x1000000010;
  do
  {
    v86 = *(int8x16_t *)(v71 + v78);
    v89.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v82, v83), vsubq_s32((int32x4_t)v82, v83)), (int8x16_t)v83), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_100212D30), v84));
    v89.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v81, v83), vsubq_s32((int32x4_t)v81, v83)), (int8x16_t)v83), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_100212D40), v84));
    v89.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v80, v83), vsubq_s32((int32x4_t)v80, v83)), (int8x16_t)v83), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_100212D50), v84));
    v89.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v79, v83), vsubq_s32((int32x4_t)v79, v83)), (int8x16_t)v83), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_100212D60), v84));
    *(int8x16_t *)(v71 + v78) = vqtbl4q_s8(v89, (int8x16_t)xmmword_100212D70);
    v78 += 16;
    v82 = (__n128)vaddq_s32((int32x4_t)v82, v85);
    v81 = (__n128)vaddq_s32((int32x4_t)v81, v85);
    v80 = (__n128)vaddq_s32((int32x4_t)v80, v85);
    v79 = (__n128)vaddq_s32((int32x4_t)v79, v85);
  }
  while (v78 != 32);
  for (j = 32; j != 40; ++j)
    *(_BYTE *)(v71 + j) = (-101 * *(_BYTE *)(v71 + j)) ^ v72 ^ ((v72 + j) * (j - v72));
  *a47 = v71;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(a4 + 8 * v48) - (v49 ^ 0xCA0)))(v79, v80, v81, v82);
}

uint64_t sub_10006E750@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void (*a36)(uint64_t, void (*)()),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_QWORD *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  _DWORD *v56;
  uint64_t v57;

  *v56 = a1 + 1;
  a36(v57, sub_1001C4250);
  return ((uint64_t (*)(void))(*(_QWORD *)(a55 + 8 * ((7489 * (*a41 != 0)) ^ v55)) - (v55 ^ 0xF42u) + 990))();
}

uint64_t sub_10006E7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t (*a42)(void),uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;

  v63 = a42();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62 + 8 * v62) - (v62 - 2238) + 990))(v63);
}

uint64_t sub_10006E7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;
  uint64_t v53;

  *(_DWORD *)v52 = 2055022193;
  *(_DWORD *)(v52 + 4) = 1752057711;
  *(_QWORD *)(v52 + 8) = 0xAC832E058CB46320;
  *(_DWORD *)(v52 + 16) = 240193065;
  *(_QWORD *)(v52 + 24) = 0x631F30597EADA3F0;
  *(_QWORD *)(v52 + 32) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * (((*(_QWORD *)(*(_QWORD *)(v53 + 8 * (v51 ^ 0x269)) - 828014803) == 0) * ((2 * v51) ^ 0x1069)) ^ v51)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_10006E860@<X0>(unsigned __int8 a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  int v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  if ((v55 & 0x40000000) == 0)
    return ((uint64_t (*)(void))(*(_QWORD *)(v60
                                          + 8
                                          * (int)(v58 ^ (32
                                                       * ((a1 ^ (v57 + 1)) & 1 | (2
                                                                                                 * ((a1 ^ (v57 + 1)) & 1))))))
                              - 8))();
  *(_DWORD *)(v61 - 168) = v56 - 295199341 * ((v61 - 184) ^ 0xEF680848) + 2418;
  *(_QWORD *)(v61 - 184) = 0;
  *(_QWORD *)(v61 - 176) = v58;
  v62 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v59 + 8 * (v56 - 380)) - 512261018))(v61 - 184);
  return (*(uint64_t (**)(uint64_t))(a55
                                            + 8
                                            * (((*(_DWORD *)(v61 - 164) != v56 - 998) * ((v56 - 232) ^ 0x529)) ^ v56)))(v62);
}

uint64_t sub_100070C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v65 = ((uint64_t (*)(_QWORD))(*(_QWORD *)(v64 + 8 * (v63 - 64)) - 976085474))(0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * (((*(_QWORD *)(v62 + 32) != ((2027 * (v63 ^ 0x3BAu)) ^ 0xFD6)) * (((v63 + 541174280) | 0x4280220) - 610900706)) ^ v63)) - 4))(v65, v66, v67, v68, v69, v70, v71, v72, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           *(_QWORD *)(v64 + 8 * (v63 ^ 0x3FA)) - 1043375314,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_100070CC0@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  int v48;

  return (*(uint64_t (**)(uint64_t))(v47
                                            + 8
                                            * (((*(unsigned __int8 *)(a47 + a1 + 40) == (((v48 + 42) | 0xE0) ^ 0xCF))
                                              * (((v48 - 1593901531) & 0x5F00FFD6) + 3201)) ^ v48)))(2050075508);
}

uint64_t sub_100070D58(unsigned int a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((7
                                          * (*(_BYTE *)(v5 + v2 + 516 + ((2 * v1) & a1) + (v1 ^ v4) + v6 - 4014) != 0)) ^ v2))
                            - 8))();
}

uint64_t sub_100070DA8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BOOL4 v6;

  v4 = a1 + 2945972714;
  v6 = v2 + 0x4604202727F2430 < (unint64_t)(((v1 + 193718951) & 0xF47417D7) + 610901387) + 2335066634u
    || v4 < v2 + 0x4604202727F2430;
  return (*(uint64_t (**)(void))(v3 + 8 * ((6558 * v6) ^ v1)))();
}

uint64_t sub_100070E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int (*a29)(uint64_t, uint64_t),uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  _BYTE *v62;
  int v63;
  uint64_t (*v64)(void);

  *v62 = 0;
  v64 = (uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * ((197 * (a29(a53, a34) == 0)) ^ v63))
                          - (((v63 - 4433) | 0x611u) ^ 0x2469A8F1 ^ (v63 + 796519848) & 0xF4EFAFE2));
  return v64();
}

uint64_t sub_100070EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,const __CFAllocator *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(const UInt8 *, uint64_t),uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(uint64_t),uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,const UInt8 *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v67;
  uint64_t (*v68)(void);
  BOOL v69;

  v65 = *(unsigned __int16 *)(v64 + 4);
  if ((v65 & 0xF000) == 0xA000)
  {
    *(_BYTE *)(a8 + 4993024) = 47;
    v67 = a29(a53, a34);
    v68 = (uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * ((7291 * (*(_DWORD *)a37(v67) != 2)) ^ 0x730)) - 4);
    return v68();
  }
  else if ((v65 & 0xF000) == 0x4000)
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * ((994 * ((~v65 & 0x1FF) == 0)) ^ 0x19E4)) - 8))();
  }
  else
  {
    STACK[0x200] = 0;
    v69 = CFURLCreateFromFileSystemRepresentation(a25, a53, *(_QWORD *)(v63 + 32), 1u) == 0;
    return ((uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * ((7618 * ((v69 ^ 0xB9) & 1)) ^ 0x6A6)) - 8))();
  }
}

uint64_t sub_100071418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v22 = v19;
  ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t *))((char *)*(&off_100236540 + (v20 & 0x75C77A))
                                                                      - 1401768010))(a1, a19, a18, &STACK[0x200]);
  return (*(uint64_t (**)(void))(v22
                              + 8 * (((STACK[0x200] == 0) * (v21 + ((v20 + 69801990) | 0x20408C00) - 1360)) ^ v20)))();
}

uint64_t sub_100071ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,_QWORD *a48)
{
  int v48;
  uint64_t v49;

  return ((uint64_t (*)(void))(*(_QWORD *)(v49 + 8 * ((301 * (*a48 != 0)) ^ v48)) - 8))();
}

uint64_t sub_100072070@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_QWORD *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;

  return ((uint64_t (*)(void))(*(_QWORD *)(a55
                                        + 8
                                        * (int)(((((a1 | 0x81) ^ 0xFFFFF63E) + ((v55 + 2) | 4)) * (*a41 == 0)) ^ v55))
                            - 4))();
}

uint64_t sub_1000723F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  int v64;
  unsigned int v65;

  *(_QWORD *)((char *)*(&off_100236540 + v63 - 1165) - 1484950319) = 0;
  v64 = ((uint64_t (*)(void))((char *)*(&off_100236540 + v63 - 854) - 1438591426))();
  v65 = ((2 * v64) & 0x1B7FFE6) + (v62 ^ v64 ^ 0x80DBF7E7);
  *(_DWORD *)((char *)*(&off_100236540 + (v63 ^ 0x4D8)) - 1012908886) = v65 + 2146941375;
  return ((uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * ((3892 * ((int)(v65 + 2133065741) >= 0)) ^ v63)) - 8))();
}

uint64_t sub_100072A30@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(void),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a1 ^ (2 * v55);
  v57 = a26();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a55 + 8 * v55) - (v56 ^ 0xCE)))(v57);
}

uint64_t sub_100072FE4()
{
  int v0;
  uint64_t v1;
  _DWORD *v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v0 - 2175) | 0x954) ^ 0xD77) * (*v2 != 2055022193)) ^ v0))
                            - 8))();
}

uint64_t sub_100073028()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * v0))(22, 0x5CAD012F7F6EB6A0, 478939059, 3816028087, 2929934933, 3604977465);
}

uint64_t sub_1000735EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;

  v64 = sub_1000035BC();
  *(_QWORD *)(v63 + 8) = 0xAC832E058CB46320;
  return (*(uint64_t (**)(uint64_t))(a62 + 8 * v62))(v64);
}

uint64_t sub_10007362C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * (((((v1 - 4634) | 0x882) ^ 0x88A) * (*(_QWORD *)(v2 + 32) != 0)) ^ v1))
                            - 8))();
}

uint64_t sub_100073670@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*v3 == 0) * (a1 - 5700)) ^ a1))
                            - ((a1 + v1) | 0x100Au)
                            + 4642))();
}

uint64_t sub_1000736EC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v1) - (v0 ^ 0x89A)))(v3);
}

void sub_100073DCC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) ^ (222922757 * ((a1 - 824872466 - 2 * (a1 & 0xCED571EE)) ^ 0xA74484D5));
  __asm { BR              X12 }
}

uint64_t sub_100073EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;

  STACK[0x340] = 0xA8AB285F433F4E5ALL;
  STACK[0x348] = 0xC458D932F97FD0BELL;
  STACK[0x350] = 0xA8AB285F433F4E5ALL;
  STACK[0x358] = 0xC458D932F97FD0BELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a48 + 8 * (v48 & 0x6DFBEFF7))
                            - ((((v48 & 0x6DFBEFF7) - 1612) | 0x208u) ^ 0xB06)))();
}

uint64_t sub_100073F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  int v46;
  unsigned int v47;
  _BOOL4 v49;

  v47 = ((2 * (*(_DWORD *)(v45 + 12) + a5)) & 0xDCFDFBDE ^ 0x4B9FBC8) + ((*(_DWORD *)(v45 + 12) + a5) ^ 0x7DA2000B);
  v49 = v47 != 1853816303 && (((_BYTE)v47 + 1) & 0xF) == ((v46 - 3198) ^ 0xF36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a45 + 8 * ((118 * v49) ^ v46)))(a1, a2, a3, a4);
}

uint64_t sub_100073FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a48 + 8 * (v48 ^ 0xB0D)))(a1, a2, *(unsigned __int8 *)(v49 + 15));
}

void sub_100078300(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 295199341 * ((-1016333036 - (a1 | 0xC36BFD14) + (a1 | 0x3C9402EB)) ^ 0xD3FC0AA3);
  __asm { BR              X10 }
}

uint64_t sub_1000783BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  BOOL v19;
  int v20;

  v15 = v10 ^ 0xA30;
  v16 = (v10 ^ 0xA30) + 1488;
  v17 = 647 * (v10 ^ 0xD5B);
  v18 = ((uint64_t (*)(_QWORD, uint64_t *))(*(_QWORD *)(v12 + 8 * ((v10 ^ 0xA30) - 1259)) - 171079291))(*v11, &a10);
  *v14 = v18;
  if (v18)
    v19 = a10 == 1;
  else
    v19 = 0;
  v20 = v19;
  return (*(uint64_t (**)(void))(v13 + 8 * ((v20 * (v16 + v17 - 5072)) ^ v15)))();
}

uint64_t sub_100078454@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((7385
                                * (*(_BYTE *)(v3
                                            + (a2 ^ (v4 + 1795747167) & 0x94F71BCB ^ 0xFB9FBDFE3D18C57ALL)
                                            + ((2 * a2) & 0x7A31AB74)
                                            + a1
                                            + 1) == 0)) ^ v4)))();
}

uint64_t sub_1000784C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  _BOOL4 v8;

  if (*(_BYTE *)(a1 + v1 + v5) == 47)
    v7 = -541954;
  else
    v7 = -541953;
  v8 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v6 ^ 0x10A6)) - 962052998))((v7 + v1 - 1024495791) & ((((v6 - 1952076993) & 0x745A5D57u) - 3707) ^ 0xFFFFF523)) == 0;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8 * (int)(v6 | (8 * (v8 & 0xFFFFFFFB | (4 * v8))))) - 4))(*v4);
}

uint64_t sub_100078560(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (v2 ^ (16
                                     * (((a1 == 0) ^ (v2 + 2)) & 1 | (2
                                                                                     * (((a1 == 0) ^ (v2 + 2)) & 1u)))))))();
}

uint64_t sub_100078588()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  int v2;
  uint64_t v3;

  v3 = v1();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * (v2 - 3071)) - 4))(v3);
}

uint64_t sub_1000785A0(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v2 - 2088) | 0x848) ^ v2) * (a1 == 0)) ^ v2)) - 4))();
}

uint64_t sub_1000785D0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  int v2;
  uint64_t v3;

  v3 = v1();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * (v2 + 32)) - 4))(v3);
}

uint64_t sub_1000785E8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (v2 ^ (6570
                                               * (((v1 - 0x739BA5BE3D1090B7) ^ 0xE9BFDDFB6BFEDBFELL)
                                                + ((2 * (v1 - 0x739BA5BE3D1090B7)) & 0xD37FBBF6D7FDB7FCLL) == 0xE9BFDDFB6BFEDBFFLL))))
                            - ((v2 + 346522770) & 0xEB587DFF ^ 0xD6ALL)))();
}

uint64_t sub_100078684(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = *(unsigned __int8 *)(a1 + v1);
  *(_BYTE *)(v3 + v1) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((502
                                          * (((v5 == (v2 + 11)) ^ (61 * (v2 ^ 0xF3) + 1)) & 1)) ^ v2))
                            - 4))();
}

uint64_t sub_1000786CC()
{
  int v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 - 25) ^ (41 * (v1 <= (v0 + 1)))))
                            - ((382 * ((v2 - 25) ^ 0xAD5)) ^ 0x79Bu)
                            + 2801))();
}

uint64_t sub_100078744()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - (v2 ^ 0xD50)))();
}

uint64_t sub_100078760@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD);
  int v5;
  uint64_t v6;

  strcpy(a1, "/Library/");
  v6 = v4(*v3);
  *v3 = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v5) - 4))(v6);
}

void sub_1000787BC(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 16))
    v2 = *(_QWORD *)(a1 + 8) == 0;
  else
    v2 = 1;
  v3 = !v2;
  v1 = *(_DWORD *)a1 ^ (753993959 * ((-2 - ((a1 | 0xE40AA443) + (~(_DWORD)a1 | 0x1BF55BBC))) ^ 0xC42DA99D));
  __asm { BR              X11 }
}

uint64_t sub_100078884@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  va_list va;

  va_start(va, a3);
  v7 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v3 + 8 * (v5 - 1309))
                                                                                   - 263797075))(*(unsigned int *)(a2 + 4), 26, a1, v4, a1, va);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((702 * ((v7 ^ 0x39F9B93D) + ((2 * v7) & 0x73F3727A) == 972667197)) ^ v5))
                            - 8))();
}

uint64_t sub_1000788FC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 8))();
}

void sub_100078914()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = v0;
}

void sub_100078930(_QWORD *a1)
{
  BOOL v1;
  char v3;

  if (a1[2])
    v1 = a1[1] == 0;
  else
    v1 = 1;
  v3 = v1 || a1[3] == 0;
  __asm { BR              X8 }
}

uint64_t sub_100078A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  int32x4_t v61;
  int32x4_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v45 = v44 - 232;
  v46 = STACK[0x1DC0];
  v47 = STACK[0x610];
  v48 = *(_DWORD *)(STACK[0x610] + 40) + v43;
  LODWORD(STACK[0x1DC8]) = LODWORD(STACK[0x1DC0]) + 453;
  LODWORD(STACK[0x1DCC]) = (v46 - 2976) | 0x276;
  STACK[0x1400] = v42;
  LODWORD(STACK[0x1408]) = (v48 ^ 0xFDE6F5B6) + ((v48 << (((v46 + 96) | 0x76) ^ 0x76)) & 0xFBCDEB6C) + 1874692958;
  *(_QWORD *)(a2 + 12) = 1062296651;
  v49 = STACK[0xC38];
  STACK[0x1DA0] = *(_QWORD *)(STACK[0xC38] + 8 * (v46 ^ 0x4E7));
  v50 = STACK[0xC28];
  STACK[0x7E8] = (int)STACK[0xC28] ^ 0xD4CLL;
  STACK[0x7E0] = ((_DWORD)v50 - 1929743438) & 0x73057EF7;
  LODWORD(v72) = (v50 - 1956234172) & 0x7499B77D;
  STACK[0x260] = (int)v50 ^ 0xD71;
  *(int32x4_t *)&STACK[0x3A0] = vdupq_n_s32(0x884D088A);
  *(int32x4_t *)&STACK[0x600] = vdupq_n_s32(0x631A245Au);
  STACK[0x2C0] = ((_DWORD)v50 - 2051051920) & 0x7A4087BC;
  STACK[0x320] = ((_DWORD)v50 - 2091602064) & 0x7CAB41DB;
  HIDWORD(v68) = (v50 + 456712040) & 0xE4C71F6D;
  STACK[0x2A8] = ((int)v50 + 1158424640) & 0xFFFFFFFFBAF3C87DLL;
  STACK[0x2A0] = (int)v50 ^ 0xF0BLL;
  v51 = ((_DWORD)v50 - 1750661282) & 0x6858EF3E;
  v52 = 222922757 * ((2 * (v45 & 0x6FA2ABF9376441E8) - v45 - 0x6FA2ABF9376441ECLL) ^ 0x3306AB86A10A4B2FLL);
  STACK[0xC08] = 222922757
               * ((-2 - ((~(v44 - 232) | 0x54AF8A00FC308AFBLL) + ((v44 - 232) | 0xAB5075FF03CF7504))) ^ 0xF7F4758095A17FC0);
  LODWORD(STACK[0x834]) = (v50 - 1922702264) & 0x729A1C77;
  STACK[0x268] = ((_DWORD)v50 - 1442773625) & 0x55FEEB69;
  STACK[0x3B8] = 467369143
               * ((((2 * (v44 - 232)) | 0x8F9F3A321BDE5050) - (v44 - 232) + 0x383062E6F210D7D8) ^ 0x8F0FBB488281E55FLL);
  v53 = (int)v50 + 868370434;
  STACK[0x378] = v53 & 0xFFFFFFFFCC3DAAEELL;
  STACK[0x5D8] = v53 & 0xCC3DAAEE;
  LODWORD(STACK[0x29C]) = (v50 + 133398654) & 0xF80C7D5E;
  LODWORD(STACK[0x34C]) = (v50 - 375320952) & 0x165EE777;
  v54 = *(_QWORD *)(v47 + 32);
  STACK[0x1DB0] = (unint64_t)&STACK[0xCD8];
  STACK[0x1DB8] = v54;
  STACK[0x1DA8] = 32;
  LODWORD(STACK[0x1DC4]) = v46;
  STACK[0x1DD0] = (unint64_t)&STACK[0xCD8];
  v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * (v46 ^ 0x4A5)) - 8);
  STACK[0x658] = (unint64_t)&STACK[0x6BC0];
  STACK[0x290] = (unint64_t)&STACK[0x36A0];
  LODWORD(STACK[0x4D8]) = v50 ^ 0xF21;
  LODWORD(STACK[0x4D4]) = v50 & 0x313F30C2;
  LODWORD(STACK[0x4D0]) = v46 ^ 0x1BBB;
  LODWORD(STACK[0x4CC]) = v46 - 5417;
  LODWORD(STACK[0x4C8]) = v46 - 5920;
  LODWORD(STACK[0x4C4]) = v50 ^ 0xD17;
  LODWORD(STACK[0x4C0]) = v50 & 0x312BB0EE;
  LODWORD(STACK[0x4BC]) = v46 - 5751;
  LODWORD(STACK[0x4B8]) = v50 ^ 0xF3C;
  LODWORD(STACK[0x4B4]) = v46 ^ 0x190C;
  LODWORD(STACK[0x4B0]) = v46 - 5794;
  LODWORD(STACK[0x4AC]) = v50 ^ 0xFA6;
  LODWORD(STACK[0x4A8]) = v50 ^ 0xE91;
  LODWORD(STACK[0x4A4]) = v46 ^ 0x1A63;
  LODWORD(STACK[0x4A0]) = v50 ^ 0xCE7;
  LODWORD(STACK[0x49C]) = v46 - 6249;
  LODWORD(STACK[0x498]) = v46 - 5581;
  LODWORD(STACK[0x494]) = v46 - 5748;
  LODWORD(STACK[0x490]) = v46 ^ 0x1AED;
  LODWORD(STACK[0x48C]) = v46 - 5557;
  LODWORD(STACK[0x488]) = v50 ^ 0xD92;
  LODWORD(STACK[0x484]) = v50 ^ 0xE7A;
  LODWORD(STACK[0x480]) = v50 ^ 0xDA6;
  LODWORD(STACK[0x47C]) = v50 & 0x9277A391;
  LODWORD(STACK[0x478]) = v46 ^ 0x19CB;
  LODWORD(STACK[0x474]) = v50 ^ 0xE3B;
  LODWORD(STACK[0x470]) = v46 ^ 0x187C;
  LODWORD(STACK[0x46C]) = v50 & 0x2E18D0CE;
  LODWORD(STACK[0x468]) = v50 ^ 0xE8B;
  LODWORD(STACK[0x464]) = v50 ^ 0xCF1;
  LODWORD(STACK[0x460]) = v46 ^ 0x1ABA;
  LODWORD(STACK[0x45C]) = v46 ^ 0x196A;
  LODWORD(STACK[0x458]) = v50 & 0x2D6F72FE;
  LODWORD(STACK[0x454]) = v46 ^ 0x1960;
  LODWORD(STACK[0x450]) = v50 & 0xFD996210;
  LODWORD(STACK[0x44C]) = v46 - 5915;
  HIDWORD(v67) = v50 ^ 0xE1E;
  LODWORD(STACK[0x63C]) = v50 - 1406294015;
  LODWORD(STACK[0x2CC]) = v50 ^ 0xA5D;
  HIDWORD(v70) = v50 ^ 0xF66;
  LODWORD(STACK[0x754]) = v50 - 945992638;
  LODWORD(v70) = 165 * (v50 ^ 0xF72);
  LODWORD(STACK[0x750]) = v50 ^ 0xE92;
  HIDWORD(a42) = v50 + 1845155976;
  LODWORD(STACK[0x25C]) = v50 ^ 0x1FD8;
  LODWORD(v63) = v50 ^ 0x1C80;
  LODWORD(v65) = 97 * (v50 ^ 0xF74);
  HIDWORD(v71) = v65 ^ 0xDA15A523;
  LODWORD(STACK[0x258]) = v50 ^ 0x5D2;
  LODWORD(STACK[0x254]) = 23 * (v50 ^ 0xF6C);
  LODWORD(v71) = v50 - 288956280;
  LODWORD(STACK[0x7F4]) = v50 ^ 0xEC9;
  LODWORD(STACK[0xC34]) = v50 ^ 0xBA4;
  LODWORD(STACK[0xB4C]) = v50 - 474258585;
  LODWORD(STACK[0x674]) = v50 + 993761384;
  LODWORD(STACK[0x670]) = v50 + 1358211160;
  LODWORD(STACK[0x684]) = v50 + 98340903;
  LODWORD(STACK[0x680]) = v50 + 98341000;
  LODWORD(STACK[0x2BC]) = v50 + 337627005;
  LODWORD(STACK[0x2B8]) = v50 ^ 0xF86;
  *(int32x4_t *)&STACK[0x380] = vdupq_n_s32(0x55865D52u);
  *(int32x4_t *)&STACK[0x390] = vdupq_n_s32(0xBC4870F4);
  *(int32x4_t *)&STACK[0x5F0] = vdupq_n_s32(0x1FA64D02u);
  *(int32x4_t *)&STACK[0x5E0] = vdupq_n_s32(0x1FD3B09Cu);
  LODWORD(STACK[0x2B4]) = v50 ^ 0xD30;
  LODWORD(STACK[0x638]) = v50 ^ 0xED6;
  LODWORD(STACK[0x634]) = v50 ^ 0xCD9;
  STACK[0x318] = (int)v50 ^ 0xD47;
  STACK[0x7F8] = (int)v50 ^ 0xDF1;
  STACK[0x758] = 67 * (v50 ^ 0xF6E);
  v56 = 61 * (v50 ^ 0xF63);
  LODWORD(STACK[0x668]) = v56;
  LODWORD(STACK[0x66C]) = v56 + 6510;
  HIDWORD(v65) = (v50 - 88440770) & 0x5457DFF;
  HIDWORD(v72) = HIDWORD(v65) ^ 0xCFDD64C7;
  HIDWORD(v64) = (2 * v50) ^ 0xE8A;
  HIDWORD(v59) = (227 * (v50 ^ 0xF70)) ^ 0x2BD;
  LODWORD(v60) = 227 * (v50 ^ 0xF70);
  LODWORD(STACK[0x250]) = v51;
  LODWORD(STACK[0x2C8]) = v51 ^ 0xEAF;
  STACK[0x828] = (v44 - 232) | 0x9864623C40B7ADE5;
  LODWORD(STACK[0x804]) = v50 & 0x98B4412D;
  LODWORD(STACK[0xC04]) = v50 + 1294025244;
  LODWORD(STACK[0xC00]) = (v50 + 1294025244) & 0x6FA5D1DC;
  LODWORD(STACK[0xBFC]) = v50 + 1407337476;
  LODWORD(STACK[0xBF8]) = (v50 + 1407337476) & 0xD7FBDFDC;
  STACK[0xBF0] = 753993959
               * ((2 * ((v44 - 232) & 0x2062126F9C34EE90) - (v44 - 232) + 0x5F9DED9063CB116ELL) ^ 0xEAC4D406BC13E34FLL);
  STACK[0x820] = (v44 - 232) | 0x25F6ACE1038D69A9;
  v57 = 295199341 * ((((2 * v45) | 0x68B5AA3E486A461ALL) - v45 - 0x345AD51F2435230DLL) ^ 0x60092DE7CB5D2B45);
  STACK[0x248] = v57;
  STACK[0x240] = v57 - 0x8B87CDB79D95940;
  LODWORD(STACK[0x23C]) = v50 + 1827621512;
  LODWORD(STACK[0x61C]) = v50 + 509253600;
  LODWORD(STACK[0x374]) = v50 ^ 0xCDF;
  LODWORD(STACK[0x314]) = v50 + 485576840;
  HIDWORD(v63) = 807941570;
  STACK[0x408] = 295199341
               * (((~(v44 - 232) | 0x50640D597A89F6AALL) + ((v44 - 232) | 0xAF9BF2A685760955)) ^ 0xFBC80A5E6A1E011CLL);
  LODWORD(STACK[0x630]) = v50 ^ 0x712;
  LODWORD(STACK[0x238]) = v50 ^ 0xF13;
  LODWORD(STACK[0x404]) = v50 ^ 0xE01;
  LODWORD(STACK[0x2E4]) = v50 ^ 0x4D3;
  LODWORD(v69) = (152 * (v50 ^ 0xF56)) ^ 0x1380;
  HIDWORD(v69) = 152 * (v50 ^ 0xF56);
  LODWORD(STACK[0x28C]) = v50 ^ 0x22B;
  LODWORD(v67) = v50 ^ 0x1373;
  HIDWORD(v66) = v46 ^ 0x193E;
  LODWORD(v66) = v50 ^ 0xF88;
  HIDWORD(a34) = -67688579;
  HIDWORD(v60) = 2130209255;
  LODWORD(v64) = 298945401;
  STACK[0xC10] = v52;
  STACK[0xBE8] = 623 - v52;
  LODWORD(STACK[0x2E0]) = v50 ^ 0xAD3;
  HIDWORD(a15) = 376787054;
  LODWORD(v59) = -956373261;
  LODWORD(STACK[0x448]) = v50 ^ 0xFD1;
  LODWORD(STACK[0x444]) = v50 ^ 0xDD5;
  LODWORD(STACK[0x440]) = v50 ^ 0xC45;
  LODWORD(STACK[0x43C]) = v46 - 6120;
  LODWORD(STACK[0x438]) = v50 ^ 0xFBE;
  LODWORD(STACK[0x434]) = v50 ^ 0xDF4;
  STACK[0x340] = (unint64_t)&STACK[0x3690];
  LODWORD(v68) = v46;
  LODWORD(STACK[0x430]) = v46 - 5576;
  STACK[0x280] = (unint64_t)&STACK[0x4100];
  STACK[0x338] = (unint64_t)&STACK[0x2690];
  STACK[0x278] = (unint64_t)&STACK[0x26D0];
  STACK[0x270] = (unint64_t)&STACK[0x4101];
  STACK[0x650] = (unint64_t)&STACK[0x6450];
  STACK[0x648] = (unint64_t)&STACK[0x4DA0];
  v61 = vdupq_n_s32(0x884C088A);
  v62 = vdupq_n_s32(0x42604454u);
  *(_OWORD *)&STACK[0x350] = xmmword_100212DB0;
  LODWORD(STACK[0xA4C]) = 51 * (v50 ^ 0xF6A);
  *(_OWORD *)&STACK[0xB50] = xmmword_100212CC0;
  *(_OWORD *)&STACK[0xA50] = xmmword_100212CB0;
  return v55(v51, v52, 3661, v50, &STACK[0x2040], a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, 0x5B7742853B530991, 467369143 * (((v45 | 0x2086EBB58476F664) - v45 + (v45 & 0xDF79144A7B890998)) ^ 0x6846CDE40B183B13), v59, v60,
           ((int)v50 + 275633256) & 0xFFFFFFFFEF921C7FLL,
           v61.i64[0],
           v61.i64[1],
           v62.i64[0],
           v62.i64[1],
           v63,
           19 * (v50 ^ 0xF3B),
           v64,
           0x80420000D14B1F20,
           ((_DWORD)v50 - 2003321400) & 0x776833FB,
           0xCEEB7DF4DDEA8F77,
           0x9F50FF37989C0000,
           v65,
           (int)v50 ^ 0xF41,
           a34,
           v66,
           v67,
           v68,
           (int)v50,
           v69,
           0x55D2BEFBE8BC0000,
           (int)v50,
           a42,
           v70,
           ((_DWORD)v50 - 2003321400) & 0x776833FB ^ 0x133,
           (int)v50 ^ 0xFFELL,
           (int)v50 ^ 0xE3DLL,
           ((_DWORD)v50 - 1504744072) & 0x59B083B8,
           v71,
           v72);
}

uint64_t sub_100079860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  BOOL v22;
  char v23;
  unint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = (char *)v8[22];
  v9 = (char *)v8[23];
  v11 = v8[21];
  if (((v10 ^ v9) & 7) == 0)
  {
    v14 = -(int)v9 & 7;
    v12 = STACK[0xC28];
    switch((int)v14)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v15 = *v9++;
        *v10++ = v15;
LABEL_6:
        v16 = *v9++;
        *v10++ = v16;
LABEL_7:
        v17 = *v9++;
        *v10++ = v17;
LABEL_8:
        v18 = *v9++;
        *v10++ = v18;
LABEL_9:
        v19 = *v9++;
        *v10++ = v19;
LABEL_10:
        v20 = *v9++;
        *v10++ = v20;
LABEL_11:
        v21 = *v9++;
        *v10++ = v21;
        break;
      default:
        break;
    }
    v22 = v11 >= v14;
    v23 = v11 - v14;
    if (!v22)
      v23 = 0;
    v24 = v23 & 7;
    switch(v24)
    {
      case 0uLL:
        goto LABEL_24;
      case 1uLL:
        goto LABEL_23;
      case 2uLL:
        goto LABEL_22;
      case 3uLL:
        goto LABEL_21;
      case 4uLL:
        goto LABEL_20;
      case 5uLL:
        goto LABEL_19;
      case 6uLL:
        goto LABEL_18;
      case 7uLL:
        v25 = *v9++;
        *v10++ = v25;
LABEL_18:
        v26 = *v9++;
        *v10++ = v26;
LABEL_19:
        v27 = *v9++;
        *v10++ = v27;
LABEL_20:
        v28 = *v9++;
        *v10++ = v28;
LABEL_21:
        v29 = *v9++;
        *v10++ = v29;
LABEL_22:
        v30 = *v9++;
        *v10++ = v30;
LABEL_23:
        *v10 = *v9;
        goto LABEL_24;
      default:
        return ((uint64_t (*)())((char *)sub_100113A28 + 4 * byte_100212EB7[(v24 >> 3) & 7]))();
    }
  }
  v12 = STACK[0xC28];
  if ((v11 + 7) >= 8)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_1001139DC + 4 * byte_100212EA8[v8[21] & 7]))(a1, a2, a3, a4, a5, a6, a7, 4294967212);
LABEL_24:
  STACK[0x748] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3867)) - 1819775062;
  LODWORD(STACK[0x4DC]) = v12 - 3795;
  STACK[0x690] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3795)) - 1657130430;
  v31 = *(_QWORD *)(v7 + 8 * LODWORD(STACK[0x4D4]));
  STACK[0x620] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4D8])) - 1475414838;
  STACK[0x640] = v31 - 1043375314;
  STACK[0x420] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3049)) - 807083854;
  STACK[0x418] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3111)) - 112006426;
  STACK[0x718] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4CC])) - 976085474;
  STACK[0x628] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3822)) - 107509431;
  STACK[0x678] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4C8])) - 740335503;
  LODWORD(STACK[0x42C]) = v12 - 3950;
  STACK[0x720] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3950)) - 2066920503;
  STACK[0x6D8] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4C4])) - 1369983082;
  STACK[0x838] = *(_QWORD *)(v7 + 8 * LODWORD(STACK[0x4C0])) - 962052998;
  STACK[0x8A0] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4BC])) - 418224730;
  STACK[0x898] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4B8])) - 1559915647;
  STACK[0xBD0] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4B4])) - 402332267;
  STACK[0x6B8] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4B0])) - 1529449219;
  STACK[0x890] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4AC])) - 2092348447;
  STACK[0x3D8] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4A8])) - 1526270726;
  STACK[0x6F0] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x43C])) - 714907559;
  STACK[0x740] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4A4])) - 1983738194;
  STACK[0x688] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3067)) - 1921486838;
  STACK[0x840] = *(_QWORD *)(v7 + 8 * ((int)v12 - 3114)) - 2087309963;
  STACK[0x6D0] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x440])) - 537688962;
  STACK[0x6B0] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x4A0])) - 206042714;
  STACK[0x738] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x49C])) - 1901097378;
  STACK[0x3E8] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x498])) - 869335214;
  STACK[0x6A8] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x494])) - 590404843;
  STACK[0xA40] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x490])) - 937943558;
  STACK[0xA08] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x48C])) - 99292454;
  STACK[0x888] = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x488])) - 1129194627;
  v32 = v7;
  v33 = *(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x484])) - 1240983371;
  STACK[0x5D0] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x480])) - 697155103;
  STACK[0x6E8] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x47C])) - 791191391;
  v34 = *(_QWORD *)(v32 + 8 * ((int)v12 - 3534));
  STACK[0x810] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3175)) - 17970138;
  STACK[0xA28] = v34 - 1604414551;
  STACK[0xA20] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x444])) - 862978226;
  STACK[0xBB0] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3123)) - 1570769630;
  STACK[0x880] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3349)) - 768941938;
  LODWORD(STACK[0x400]) = v12 - 3799;
  STACK[0x6C8] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3799)) - 711729066;
  STACK[0xA00] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3469)) - 324188442;
  STACK[0x878] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3728)) - 1923346827;
  v35 = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x478]));
  STACK[0xA18] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3179)) - 1220052422;
  STACK[0x848] = v35 - 136115866;
  v36 = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x470]));
  STACK[0x9F8] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x474])) - 561798406;
  STACK[0x6E0] = v36 - 633585243;
  v37 = (v12 - 3831);
  STACK[0xB40] = v37;
  STACK[0x870] = *(_QWORD *)(v32 + 8 * (int)v37) - 1738452746;
  STACK[0xA10] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3699)) - 724443038;
  STACK[0x6A0] = *(_QWORD *)(v32 + 8 * LODWORD(STACK[0x46C])) - 1988776678;
  STACK[0x868] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x468])) - 1357269110;
  STACK[0x9F0] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x464])) - 1063764774;
  STACK[0x728] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x460])) - 1704807823;
  STACK[0x860] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x45C])) - 2124133375;
  v38 = *(_QWORD *)(v32 + 8 * LODWORD(STACK[0x458]));
  LODWORD(STACK[0x414]) = v12 - 3794;
  v39 = *(_QWORD *)(v32 + 8 * ((int)v12 - 3794));
  STACK[0x9E8] = v38 - 1200981462;
  STACK[0x6C0] = v39 - 282868035;
  STACK[0x698] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x454])) - 834371791;
  STACK[0x858] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3327)) - 599940322;
  STACK[0x818] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x448])) - 1056089286;
  STACK[0x730] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x450])) - 1789308634;
  STACK[0x850] = *(_QWORD *)(v32 + 8 * ((int)v12 - 3849)) - 705372078;
  STACK[0x3E0] = *(_QWORD *)(v32 + 8 * SLODWORD(STACK[0x44C])) - 311474470;
  v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x1DA0];
  LODWORD(STACK[0x7F0]) = 2 * v12;
  STACK[0xBB8] = v33;
  return v40(a1, a2, a3, a4, a5, a6, a7, 4294967212);
}

uint64_t sub_100079960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  STACK[0x308] = v40;
  STACK[0x328] = v39;
  STACK[0x330] = v38;
  STACK[0x2F0] = v37;
  *(_QWORD *)(v42 + 216) = &STACK[0x2090];
  STACK[0x1250] = (unint64_t)&STACK[0x2090];
  STACK[0x1318] = 144;
  LODWORD(STACK[0xD34]) = 1676580025;
  LODWORD(STACK[0xF94]) = 1676580025;
  STACK[0xD08] = 0;
  LODWORD(STACK[0x128C]) = 0;
  ((void (*)(void))(*(_QWORD *)(v41 + 8 * a37) - 1510378263))();
  v43 = ((uint64_t (*)(uint64_t))STACK[0x838])(24);
  *(_QWORD *)(v42 + 224) = v43;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((97 * (v43 == 0)) ^ LODWORD(STACK[0x1DC4]))) - 8))();
}

uint64_t sub_100079A0C()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = STACK[0x1DC8];
  v1 = (LODWORD(STACK[0x1DC8]) - 2645) | 0x40;
  v2 = STACK[0x1DE0];
  *(_QWORD *)v2 = 0;
  *(_DWORD *)(v2 + 8) = 1468705723;
  *(_QWORD *)(v2 + 12) = 2048424582;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x838])(4096);
  *(_QWORD *)STACK[0x1DE0] = v3;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v3 == 0) * (((v0 - 4096) | 0x511) + v1 - 8116)) ^ v0))
                         - 4);
  LODWORD(STACK[0x1DE8]) = v1;
  return v4();
}

uint64_t sub_100079A90()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  STACK[0xD08] = 0;
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38] + 8 * (v0 - 2721)))(v1);
}

uint64_t sub_100079ABC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  LODWORD(STACK[0x1DEC]) = a1;
  LODWORD(STACK[0x1DF0]) = 37 * (a1 ^ 0x103A);
  LODWORD(STACK[0x1DF4]) = 1095 * (a1 ^ 0x1053);
  *(_DWORD *)(v1 + 8) = v3 + 4096;
  STACK[0xD08] = v2[28];
  *(_QWORD *)(v4 + 1088) = &STACK[0xCD8];
  v5 = v2[26];
  v2[22] = v2[27];
  v2[23] = v5;
  v6 = STACK[0xC38];
  v2[20] = *(_QWORD *)(STACK[0xC38] + 8 * (a1 ^ 0xC11));
  v2[21] = 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a1 ^ 0xC55)) - 8))();
}

uint64_t sub_10007A030()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(unint64_t, unint64_t *, uint64_t))((char *)*(&off_100236540 + (v1 ^ 0x5CC))
                                                                              - 1695272346))(STACK[0x1E00], &STACK[0x10D0], 10);
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38]
                                            + 8
                                            * ((37 * (((v1 + 25) ^ (*(_QWORD *)(v0 + 1032) == 0)) & 1)) ^ v1)))(v2);
}

uint64_t sub_10007A0C8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  ((uint64_t (*)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(v1 + 8 * (v2 ^ 0x47D)) - 1390914031))(v0, 3, &STACK[0x12A4]);
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v2))();
}

uint64_t sub_10007A150(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v1 ^ (2 * ((a1 != 0) | (4 * (a1 != 0)))))))();
}

uint64_t sub_10007A16C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(void))STACK[0x620])();
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38] + 8 * v0))(v1);
}

uint64_t sub_10007A708()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_10007ACDC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v0))();
}

uint64_t sub_10007AF00@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  BOOL v5;

  v2 = LODWORD(STACK[0x140C]) - 273173154;
  v3 = LODWORD(STACK[0x1408]) - 1050374003;
  v4 = v2 < 0x2F0911A1;
  v5 = v2 > v3;
  if (v4 != v3 < v1 + 789119530)
    v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((2266 * (((a1 + 36) ^ v5) & 1)) ^ a1))
                            - 8))();
}

uint64_t sub_10007C0D8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v0 + 805)))();
}

uint64_t sub_10007C328@<X0>(_QWORD *a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  LODWORD(STACK[0x1E44]) = a2;
  LODWORD(STACK[0x1E48]) = a2 + 2739;
  LODWORD(STACK[0x1E4C]) = (a2 + 2739) ^ 0xDFE;
  v3 = a1[177] + 32;
  STACK[0x1E50] = v3;
  a1[118] = 0x7BBFFAAD82F505;
  a1[211] = 0;
  LODWORD(STACK[0x12BC]) = 0;
  LODWORD(STACK[0x11BC]) = 1676580025;
  v4 = *(_QWORD *)(v2 + 1088);
  STACK[0x1DB0] = v3;
  STACK[0x1DB8] = v4;
  v5 = STACK[0xC38];
  STACK[0x1DA0] = *(_QWORD *)(STACK[0xC38] + 8 * (a2 + 5990)) - 8;
  STACK[0x1DA8] = 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 ^ 0x18C0)) - 8))();
}

uint64_t sub_10007C538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  *(_QWORD *)(a8 + 944) = v8;
  v10 = STACK[0x140C];
  v11 = STACK[0x1408];
  LODWORD(STACK[0x140C]) += 8;
  v10 -= 412838379;
  v11 -= 1190039232;
  v12 = v10 < 0x26B5F254;
  v13 = v10 > v11;
  if (v12 != v11 < v9 + 649454301)
    v13 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7647 * !v13) ^ (v9 - 2739))) - 4))();
}

uint64_t sub_10007C740()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 ^ 0x10E)) - 4))();
}

uint64_t sub_10007C9EC()
{
  unint64_t *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  char v16;
  __int16 v17;
  unint64_t v18;
  unsigned int v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int8x16_t v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  __int16 v39;
  int8x16x4_t v41;

  v4 = *(_DWORD *)(*(_QWORD *)STACK[0x818] + (int)(*(_DWORD *)STACK[0x810] & 0xBAC1C520));
  STACK[0x1CB0] = 0;
  STACK[0x1CB8] = v2;
  v5 = 16777619 * ((-1161706206 * v4 + 7) ^ (-1161706206 * v4)) % 7;
  v6 = 16777619 * ((-1161706206 * v4 + 6) ^ (-1161706206 * v4)) % 6;
  v7 = 16777619 * ((-1161706206 * v4 + 5) ^ (-1161706206 * v4)) % 5;
  v8 = *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v5);
  *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v5) = STACK[0x1CB7];
  v9 = *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v6);
  *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v6) = STACK[0x1CB6];
  v10 = *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v7);
  *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v7) = STACK[0x1CB5];
  v11 = 16777619 * ((-1161706206 * v4 + 3) ^ (-1161706206 * v4)) % 3;
  v12 = vdup_n_s32(-1161706206 * v4);
  v13.i32[0] = -1161706206 * v4;
  v13.i32[1] = -1161706206 * v4 + 1;
  LOBYTE(STACK[0x1CB7]) = v8;
  v14 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v12, v13), (int8x8_t)v12);
  LOBYTE(STACK[0x1CB6]) = v9;
  LOBYTE(STACK[0x1CB5]) = v10;
  v15 = STACK[0x1CB0];
  LOBYTE(STACK[0x1CB0]) = STACK[0x1CB4];
  LOBYTE(STACK[0x1CB4]) = v15;
  v16 = *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v11);
  *(_BYTE *)((unint64_t)&STACK[0x1CB0] | v11) = STACK[0x1CB3];
  LOBYTE(STACK[0x1CB3]) = v16;
  v17 = STACK[0x1CB1];
  LOBYTE(STACK[0x1CB2]) = STACK[0x1CB0];
  LOWORD(STACK[0x1CB0]) = v17;
  STACK[0x1CB0] = (unint64_t)vmla_s32(v14, (int32x2_t)STACK[0x1CB0], vdup_n_s32(0x1000193u));
  v18 = STACK[0x1CB8];
  v19 = (-1161706206 * STACK[0x1CB8]) ^ v4;
  v20 = vdupq_n_s32(v19);
  v21 = (int32x4_t)xmmword_100212CF0;
  v22 = (int32x4_t)xmmword_100212D00;
  v23 = (int32x4_t)xmmword_100212D10;
  v24 = (int32x4_t)xmmword_100212D20;
  do
  {
    v25 = *(int32x4_t *)(v18 + v3);
    v41.val[1] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D40), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v23, v20), vsubq_s32(v23, v20)));
    v41.val[0] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D30), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v24, v20), vsubq_s32(v24, v20)));
    v41.val[2] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D50), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v22, v20), vsubq_s32(v22, v20)));
    v41.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D60), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v21, v20), vsubq_s32(v21, v20)));
    v26.i64[0] = 0x9393939393939393;
    v26.i64[1] = 0x9393939393939393;
    *(int8x16_t *)(v18 + v3) = vmulq_s8(vqtbl4q_s8(v41, (int8x16_t)xmmword_100212D70), v26);
    v3 += 16;
    v25.i64[0] = 0x1000000010;
    v25.i64[1] = 0x1000000010;
    v24 = vaddq_s32(v24, v25);
    v23 = vaddq_s32(v23, v25);
    v22 = vaddq_s32(v22, v25);
    v21 = vaddq_s32(v21, v25);
  }
  while (v3 != 32);
  for (i = 32; i != 40; ++i)
    *(_BYTE *)(v18 + i) = -109 * (*(_BYTE *)(v18 + i) ^ v19 ^ ((v19 + i) * (i - v19)));
  v28 = 4;
  do
  {
    v29 = 8 * v28;
    v30 = 8 * (16777619 * ((v19 + (_DWORD)v28) ^ v19) % v28);
    v31 = *(_QWORD *)(v18 + v30) ^ *(_QWORD *)(v18 + 8 * v28);
    *(_QWORD *)(v18 + v29) = v31;
    v32 = *(_QWORD *)(v18 + v30) ^ v31;
    *(_QWORD *)(v18 + v30) = v32;
    *(_QWORD *)(v18 + v29) = *(_QWORD *)(v18 + 8 * v28) ^ v32;
    v33 = v28-- + 1;
  }
  while (v33 > 2);
  v34 = *((_BYTE *)&STACK[0x1CB8] + v5);
  *((_BYTE *)&STACK[0x1CB8] + v5) = STACK[0x1CBF];
  LOBYTE(STACK[0x1CBF]) = v34;
  v35 = *((_BYTE *)&STACK[0x1CB8] + v6);
  *((_BYTE *)&STACK[0x1CB8] + v6) = STACK[0x1CBE];
  LOBYTE(STACK[0x1CBE]) = v35;
  v36 = *((_BYTE *)&STACK[0x1CB8] + v7);
  *((_BYTE *)&STACK[0x1CB8] + v7) = STACK[0x1CBD];
  LOBYTE(STACK[0x1CBD]) = v36;
  v37 = STACK[0x1CB8];
  LOBYTE(STACK[0x1CB8]) = STACK[0x1CBC];
  LOBYTE(STACK[0x1CBC]) = v37;
  v38 = *((_BYTE *)&STACK[0x1CB8] + v11);
  *((_BYTE *)&STACK[0x1CB8] + v11) = STACK[0x1CBB];
  LOBYTE(STACK[0x1CBB]) = v38;
  v39 = STACK[0x1CB9];
  LOBYTE(STACK[0x1CBA]) = STACK[0x1CB8];
  LOWORD(STACK[0x1CB8]) = v39;
  STACK[0x1CB8] = (unint64_t)vmla_s32(v14, (int32x2_t)STACK[0x1CB8], vdup_n_s32(0x1000193u));
  *v0 = STACK[0x1CB8] ^ STACK[0x1CB0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - ((v1 + 374982585) & 0xE9A637EE) + 5670))();
}

uint64_t sub_10007D734()
{
  unint64_t *v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  __int16 v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t i;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  int32x4_t v36;
  int32x4_t v37;
  int32x4_t v38;
  uint64_t j;
  int8x16x4_t v41;

  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x818] + (int)(*(_DWORD *)STACK[0x810] & 0xBAC1C520));
  STACK[0x1D50] = 0;
  v4 = -1161706206 * v3;
  v5 = 16777619 * ((-1161706206 * v3 + 7) ^ (-1161706206 * v3)) % 7;
  v6 = *(_BYTE *)((unint64_t)&STACK[0x1D50] | v5);
  *(_BYTE *)((unint64_t)&STACK[0x1D50] | v5) = 0;
  LOBYTE(STACK[0x1D57]) = v6;
  v7 = 16777619 * ((-1161706206 * v3 + 6) ^ (-1161706206 * v3)) % 6;
  v8 = *(_BYTE *)((unint64_t)&STACK[0x1D50] | v7);
  *(_BYTE *)((unint64_t)&STACK[0x1D50] | v7) = STACK[0x1D56];
  LOBYTE(STACK[0x1D56]) = v8;
  v9 = 16777619 * ((-1161706206 * v3 + 5) ^ (-1161706206 * v3)) % 5;
  v10 = *(_BYTE *)((unint64_t)&STACK[0x1D50] | v9);
  *(_BYTE *)((unint64_t)&STACK[0x1D50] | v9) = STACK[0x1D55];
  LOBYTE(STACK[0x1D55]) = v10;
  v11 = STACK[0x1D50];
  LOBYTE(STACK[0x1D50]) = STACK[0x1D54];
  LOBYTE(STACK[0x1D54]) = v11;
  v12 = 16777619 * ((-1161706206 * v3 + 3) ^ (-1161706206 * v3)) % 3;
  v13 = *(_BYTE *)((unint64_t)&STACK[0x1D50] | v12);
  *(_BYTE *)((unint64_t)&STACK[0x1D50] | v12) = STACK[0x1D53];
  LOBYTE(STACK[0x1D53]) = v13;
  v14 = STACK[0x1D51];
  LOBYTE(STACK[0x1D52]) = STACK[0x1D50];
  LOWORD(STACK[0x1D50]) = v14;
  v15 = (v4 * v4) ^ v4;
  v16 = STACK[0x1D54];
  v17 = (v4 + v4 * v4) ^ v4;
  LODWORD(STACK[0x1D50]) = v15 + 16777619 * LODWORD(STACK[0x1D50]);
  LODWORD(STACK[0x1D54]) = v17 + 16777619 * v16;
  v18 = STACK[0x1D50] ^ v2;
  v19 = 899433627 * (v18 - v15);
  LODWORD(v18) = 899433627 * (HIDWORD(v18) - v17);
  LODWORD(STACK[0x1D58]) = v19;
  LODWORD(STACK[0x1D5C]) = v18;
  LOBYTE(STACK[0x1D59]) = v19;
  LOBYTE(STACK[0x1D58]) = BYTE2(v19);
  LOBYTE(STACK[0x1D5A]) = BYTE1(v19);
  v20 = (_BYTE *)((unint64_t)&STACK[0x1D58] | v12);
  LOBYTE(v15) = *v20;
  *v20 = HIBYTE(v19);
  LOBYTE(STACK[0x1D5B]) = v15;
  LOBYTE(v17) = STACK[0x1D58];
  LOBYTE(STACK[0x1D58]) = v18;
  LOBYTE(STACK[0x1D5C]) = v17;
  v21 = (_BYTE *)((unint64_t)&STACK[0x1D58] | v9);
  LOBYTE(v20) = *v21;
  *v21 = BYTE1(v18);
  LOBYTE(STACK[0x1D5D]) = (_BYTE)v20;
  v22 = (_BYTE *)((unint64_t)&STACK[0x1D58] | v7);
  LOBYTE(v21) = *v22;
  *v22 = BYTE2(v18);
  LOBYTE(STACK[0x1D5E]) = (_BYTE)v21;
  v23 = (_BYTE *)((unint64_t)&STACK[0x1D58] | v5);
  LOBYTE(v22) = *v23;
  *v23 = BYTE3(v18);
  LOBYTE(STACK[0x1D5F]) = (_BYTE)v22;
  v24 = STACK[0x1D58];
  v25 = (-1161706206 * STACK[0x1D58]) ^ v3;
  for (i = 1; i != 5; ++i)
  {
    v27 = 8 * i;
    v28 = 8 * (16777619 * ((v25 + (_DWORD)i) ^ v25) % i);
    v29 = *(_QWORD *)(v24 + v28) ^ *(_QWORD *)(v24 + 8 * i);
    *(_QWORD *)(v24 + v27) = v29;
    v30 = *(_QWORD *)(v24 + v28) ^ v29;
    *(_QWORD *)(v24 + v28) = v30;
    *(_QWORD *)(v24 + v27) = *(_QWORD *)(v24 + 8 * i) ^ v30;
  }
  v31 = 0;
  v32 = (__n128)xmmword_100212CF0;
  v33 = (__n128)xmmword_100212D00;
  v34 = (__n128)xmmword_100212D10;
  v35 = (__n128)xmmword_100212D20;
  v36 = vdupq_n_s32(v25);
  do
  {
    v37 = *(int32x4_t *)(v24 + v31);
    v38.i64[0] = 0x9B0000009BLL;
    v38.i64[1] = 0x9B0000009BLL;
    v41.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v35, v36), vsubq_s32((int32x4_t)v35, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D30), v38));
    v41.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v34, v36), vsubq_s32((int32x4_t)v34, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D40), v38));
    v41.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v33, v36), vsubq_s32((int32x4_t)v33, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D50), v38));
    v41.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v32, v36), vsubq_s32((int32x4_t)v32, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D60), v38));
    *(int8x16_t *)(v24 + v31) = vqtbl4q_s8(v41, (int8x16_t)xmmword_100212D70);
    v31 += 16;
    v37.i64[0] = 0x1000000010;
    v37.i64[1] = 0x1000000010;
    v35 = (__n128)vaddq_s32((int32x4_t)v35, v37);
    v34 = (__n128)vaddq_s32((int32x4_t)v34, v37);
    v33 = (__n128)vaddq_s32((int32x4_t)v33, v37);
    v32 = (__n128)vaddq_s32((int32x4_t)v32, v37);
  }
  while (v31 != 32);
  for (j = 32; j != 40; ++j)
    *(_BYTE *)(v24 + j) = (-101 * *(_BYTE *)(v24 + j)) ^ v25 ^ ((v25 + j) * (j - v25));
  *v0 = v24;
  return (*(uint64_t (**)(void *, __n128, __n128, __n128, __n128))(STACK[0xC38] + 8 * v1))(&unk_100212000, v32, v33, v34, v35);
}

uint64_t sub_10007DADC@<X0>(int a1@<W4>, _DWORD *a2@<X8>)
{
  *a2 += (a1 + 522043008) & 0xE0E23F19 ^ 0xD10;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((a1 - 3824) ^ 0x316)))();
}

uint64_t sub_10007E060()
{
  unint64_t *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  char v16;
  __int16 v17;
  unint64_t v18;
  unsigned int v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int8x16_t v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  __int16 v39;
  int8x16x4_t v41;

  v3 = 0;
  v4 = *(_DWORD *)(*(_QWORD *)STACK[0x818] + (int)(*(_DWORD *)STACK[0x810] & 0xBAC1C520));
  STACK[0x1C70] = 0;
  STACK[0x1C78] = v2;
  v5 = 16777619 * ((-1161706206 * v4 + 7) ^ (-1161706206 * v4)) % 7;
  v6 = 16777619 * ((-1161706206 * v4 + 6) ^ (-1161706206 * v4)) % 6;
  v7 = 16777619 * ((-1161706206 * v4 + 5) ^ (-1161706206 * v4)) % 5;
  v8 = *(_BYTE *)((unint64_t)&STACK[0x1C70] | v5);
  *(_BYTE *)((unint64_t)&STACK[0x1C70] | v5) = STACK[0x1C77];
  v9 = *(_BYTE *)((unint64_t)&STACK[0x1C70] | v6);
  *(_BYTE *)((unint64_t)&STACK[0x1C70] | v6) = STACK[0x1C76];
  v10 = *(_BYTE *)((unint64_t)&STACK[0x1C70] | v7);
  *(_BYTE *)((unint64_t)&STACK[0x1C70] | v7) = STACK[0x1C75];
  v11 = 16777619 * ((-1161706206 * v4 + 3) ^ (-1161706206 * v4)) % 3;
  v12 = vdup_n_s32(-1161706206 * v4);
  v13.i32[0] = -1161706206 * v4;
  v13.i32[1] = -1161706206 * v4 + 1;
  LOBYTE(STACK[0x1C77]) = v8;
  v14 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v12, v13), (int8x8_t)v12);
  LOBYTE(STACK[0x1C76]) = v9;
  LOBYTE(STACK[0x1C75]) = v10;
  v15 = STACK[0x1C70];
  LOBYTE(STACK[0x1C70]) = STACK[0x1C74];
  LOBYTE(STACK[0x1C74]) = v15;
  v16 = *(_BYTE *)((unint64_t)&STACK[0x1C70] | v11);
  *(_BYTE *)((unint64_t)&STACK[0x1C70] | v11) = STACK[0x1C73];
  LOBYTE(STACK[0x1C73]) = v16;
  v17 = STACK[0x1C71];
  LOBYTE(STACK[0x1C72]) = STACK[0x1C70];
  LOWORD(STACK[0x1C70]) = v17;
  STACK[0x1C70] = (unint64_t)vmla_s32(v14, (int32x2_t)STACK[0x1C70], vdup_n_s32(0x1000193u));
  v18 = STACK[0x1C78];
  v19 = (-1161706206 * STACK[0x1C78]) ^ v4;
  v20 = vdupq_n_s32(v19);
  v21 = (int32x4_t)xmmword_100212CF0;
  v22 = (int32x4_t)xmmword_100212D00;
  v23 = (int32x4_t)xmmword_100212D10;
  v24 = (int32x4_t)xmmword_100212D20;
  do
  {
    v25 = *(int32x4_t *)(v18 + v3);
    v41.val[1] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D40), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v23, v20), vsubq_s32(v23, v20)));
    v41.val[0] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D30), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v24, v20), vsubq_s32(v24, v20)));
    v41.val[2] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D50), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v22, v20), vsubq_s32(v22, v20)));
    v41.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_100212D60), (int8x16_t)v20), (int8x16_t)vmulq_s32(vaddq_s32(v21, v20), vsubq_s32(v21, v20)));
    v26.i64[0] = 0x9393939393939393;
    v26.i64[1] = 0x9393939393939393;
    *(int8x16_t *)(v18 + v3) = vmulq_s8(vqtbl4q_s8(v41, (int8x16_t)xmmword_100212D70), v26);
    v3 += 16;
    v25.i64[0] = 0x1000000010;
    v25.i64[1] = 0x1000000010;
    v24 = vaddq_s32(v24, v25);
    v23 = vaddq_s32(v23, v25);
    v22 = vaddq_s32(v22, v25);
    v21 = vaddq_s32(v21, v25);
  }
  while (v3 != 32);
  for (i = 32; i != 40; ++i)
    *(_BYTE *)(v18 + i) = -109 * (*(_BYTE *)(v18 + i) ^ v19 ^ ((v19 + i) * (i - v19)));
  v28 = 4;
  do
  {
    v29 = 8 * v28;
    v30 = 8 * (16777619 * ((v19 + (_DWORD)v28) ^ v19) % v28);
    v31 = *(_QWORD *)(v18 + v30) ^ *(_QWORD *)(v18 + 8 * v28);
    *(_QWORD *)(v18 + v29) = v31;
    v32 = *(_QWORD *)(v18 + v30) ^ v31;
    *(_QWORD *)(v18 + v30) = v32;
    *(_QWORD *)(v18 + v29) = *(_QWORD *)(v18 + 8 * v28) ^ v32;
    v33 = v28-- + 1;
  }
  while (v33 > 2);
  v34 = *((_BYTE *)&STACK[0x1C78] + v5);
  *((_BYTE *)&STACK[0x1C78] + v5) = STACK[0x1C7F];
  LOBYTE(STACK[0x1C7F]) = v34;
  v35 = *((_BYTE *)&STACK[0x1C78] + v6);
  *((_BYTE *)&STACK[0x1C78] + v6) = STACK[0x1C7E];
  LOBYTE(STACK[0x1C7E]) = v35;
  v36 = *((_BYTE *)&STACK[0x1C78] + v7);
  *((_BYTE *)&STACK[0x1C78] + v7) = STACK[0x1C7D];
  LOBYTE(STACK[0x1C7D]) = v36;
  v37 = STACK[0x1C78];
  LOBYTE(STACK[0x1C78]) = STACK[0x1C7C];
  LOBYTE(STACK[0x1C7C]) = v37;
  v38 = *((_BYTE *)&STACK[0x1C78] + v11);
  *((_BYTE *)&STACK[0x1C78] + v11) = STACK[0x1C7B];
  LOBYTE(STACK[0x1C7B]) = v38;
  v39 = STACK[0x1C79];
  LOBYTE(STACK[0x1C7A]) = STACK[0x1C78];
  LOWORD(STACK[0x1C78]) = v39;
  STACK[0x1C78] = (unint64_t)vmla_s32(v14, (int32x2_t)STACK[0x1C78], vdup_n_s32(0x1000193u));
  *v0 = STACK[0x1C78] ^ STACK[0x1C70];
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v1))();
}

uint64_t sub_10007E888@<X0>(_DWORD *a1@<X8>)
{
  int v1;

  ++*a1;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v1 ^ 0x360)))();
}

uint64_t sub_10007F664@<X0>(_DWORD *a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *a1 = (v3 ^ 0xFFFFFF11) + v2;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v1))();
}

uint64_t sub_10007F684()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v0 + 675)))();
}

uint64_t sub_1000804D8()
{
  _QWORD *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v4 = (v3 ^ v1) + 720;
  v6 = v2 != 1787428583 || *v0 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((v6 * (v4 ^ 0x1236)) ^ v3)) - 8))();
}

uint64_t sub_100080524()
{
  unint64_t *v0;
  int v1;
  _DWORD *v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  int32x2_t v13;
  int32x2_t v14;
  int32x2_t v15;
  char v16;
  char v17;
  __int16 v18;
  unint64_t v19;
  unsigned int v20;
  int32x4_t v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int8x16_t v27;
  uint64_t i;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  __int16 v40;
  int8x16x4_t v42;

  v5 = *(_DWORD *)(*(_QWORD *)STACK[0x818] + (int)(*v2 & 0xBAC1C520));
  STACK[0x1C50] = 0;
  STACK[0x1C58] = v3;
  v6 = 16777619 * ((-1161706206 * v5 + 7) ^ (-1161706206 * v5)) % 7;
  v7 = 16777619 * ((-1161706206 * v5 + 6) ^ (-1161706206 * v5)) % 6;
  v8 = 16777619 * ((-1161706206 * v5 + 5) ^ (-1161706206 * v5)) % 5;
  v9 = *(_BYTE *)((unint64_t)&STACK[0x1C50] | v6);
  *(_BYTE *)((unint64_t)&STACK[0x1C50] | v6) = STACK[0x1C57];
  v10 = *(_BYTE *)((unint64_t)&STACK[0x1C50] | v7);
  *(_BYTE *)((unint64_t)&STACK[0x1C50] | v7) = STACK[0x1C56];
  v11 = *(_BYTE *)((unint64_t)&STACK[0x1C50] | v8);
  *(_BYTE *)((unint64_t)&STACK[0x1C50] | v8) = STACK[0x1C55];
  v12 = 16777619 * ((-1161706206 * v5 + 3) ^ (-1161706206 * v5)) % 3;
  v13 = vdup_n_s32(-1161706206 * v5);
  v14.i32[0] = -1161706206 * v5;
  v14.i32[1] = -1161706206 * v5 + 1;
  LOBYTE(STACK[0x1C57]) = v9;
  v15 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v13, v14), (int8x8_t)v13);
  LOBYTE(STACK[0x1C56]) = v10;
  LOBYTE(STACK[0x1C55]) = v11;
  v16 = STACK[0x1C50];
  LOBYTE(STACK[0x1C50]) = STACK[0x1C54];
  LOBYTE(STACK[0x1C54]) = v16;
  v17 = *(_BYTE *)((unint64_t)&STACK[0x1C50] | v12);
  *(_BYTE *)((unint64_t)&STACK[0x1C50] | v12) = STACK[0x1C53];
  LOBYTE(STACK[0x1C53]) = v17;
  v18 = STACK[0x1C51];
  LOBYTE(STACK[0x1C52]) = STACK[0x1C50];
  LOWORD(STACK[0x1C50]) = v18;
  STACK[0x1C50] = (unint64_t)vmla_s32(v15, (int32x2_t)STACK[0x1C50], vdup_n_s32(0x1000193u));
  v19 = STACK[0x1C58];
  v20 = (-1161706206 * STACK[0x1C58]) ^ v5;
  v21 = vdupq_n_s32(v20);
  v22 = (int32x4_t)xmmword_100212CF0;
  v23 = (int32x4_t)xmmword_100212D00;
  v24 = (int32x4_t)xmmword_100212D10;
  v25 = (int32x4_t)xmmword_100212D20;
  do
  {
    v26 = *(int32x4_t *)(v19 + v4);
    v42.val[1] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v26, (int8x16_t)xmmword_100212D40), (int8x16_t)v21), (int8x16_t)vmulq_s32(vaddq_s32(v24, v21), vsubq_s32(v24, v21)));
    v42.val[0] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v26, (int8x16_t)xmmword_100212D30), (int8x16_t)v21), (int8x16_t)vmulq_s32(vaddq_s32(v25, v21), vsubq_s32(v25, v21)));
    v42.val[2] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v26, (int8x16_t)xmmword_100212D50), (int8x16_t)v21), (int8x16_t)vmulq_s32(vaddq_s32(v23, v21), vsubq_s32(v23, v21)));
    v42.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8((int8x16_t)v26, (int8x16_t)xmmword_100212D60), (int8x16_t)v21), (int8x16_t)vmulq_s32(vaddq_s32(v22, v21), vsubq_s32(v22, v21)));
    v27.i64[0] = 0x9393939393939393;
    v27.i64[1] = 0x9393939393939393;
    *(int8x16_t *)(v19 + v4) = vmulq_s8(vqtbl4q_s8(v42, (int8x16_t)xmmword_100212D70), v27);
    v4 += 16;
    v26.i64[0] = 0x1000000010;
    v26.i64[1] = 0x1000000010;
    v25 = vaddq_s32(v25, v26);
    v24 = vaddq_s32(v24, v26);
    v23 = vaddq_s32(v23, v26);
    v22 = vaddq_s32(v22, v26);
  }
  while (v4 != 32);
  for (i = 32; i != 40; ++i)
    *(_BYTE *)(v19 + i) = -109 * (*(_BYTE *)(v19 + i) ^ v20 ^ ((v20 + i) * (i - v20)));
  v29 = 4;
  do
  {
    v30 = 8 * v29;
    v31 = 8 * (16777619 * ((v20 + (_DWORD)v29) ^ v20) % v29);
    v32 = *(_QWORD *)(v19 + v31) ^ *(_QWORD *)(v19 + 8 * v29);
    *(_QWORD *)(v19 + v30) = v32;
    v33 = *(_QWORD *)(v19 + v31) ^ v32;
    *(_QWORD *)(v19 + v31) = v33;
    *(_QWORD *)(v19 + v30) = *(_QWORD *)(v19 + 8 * v29) ^ v33;
    v34 = v29-- + 1;
  }
  while (v34 > 2);
  v35 = *((_BYTE *)&STACK[0x1C58] + v6);
  *((_BYTE *)&STACK[0x1C58] + v6) = STACK[0x1C5F];
  LOBYTE(STACK[0x1C5F]) = v35;
  v36 = *((_BYTE *)&STACK[0x1C58] + v7);
  *((_BYTE *)&STACK[0x1C58] + v7) = STACK[0x1C5E];
  LOBYTE(STACK[0x1C5E]) = v36;
  v37 = *((_BYTE *)&STACK[0x1C58] + v8);
  *((_BYTE *)&STACK[0x1C58] + v8) = STACK[0x1C5D];
  LOBYTE(STACK[0x1C5D]) = v37;
  v38 = STACK[0x1C58];
  LOBYTE(STACK[0x1C58]) = STACK[0x1C5C];
  LOBYTE(STACK[0x1C5C]) = v38;
  v39 = *((_BYTE *)&STACK[0x1C58] + v12);
  *((_BYTE *)&STACK[0x1C58] + v12) = STACK[0x1C5B];
  LOBYTE(STACK[0x1C5B]) = v39;
  v40 = STACK[0x1C59];
  LOBYTE(STACK[0x1C5A]) = STACK[0x1C58];
  LOWORD(STACK[0x1C58]) = v40;
  STACK[0x1C58] = (unint64_t)vmla_s32(v15, (int32x2_t)STACK[0x1C58], vdup_n_s32(0x1000193u));
  *v0 = STACK[0x1C58] ^ STACK[0x1C50];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - (v1 - 720) + 3944))();
}

uint64_t sub_1000808F4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((v0 ^ 0x249) + v0)))();
}

uint64_t sub_100080DD4()
{
  unint64_t *v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  __int16 v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t i;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  int32x4_t v36;
  int32x4_t v37;
  int32x4_t v38;
  uint64_t j;
  int8x16x4_t v41;

  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x818] + (int)(*(_DWORD *)STACK[0x810] & 0xBAC1C520));
  STACK[0x1CE0] = 0;
  v4 = -1161706206 * v3;
  v5 = 16777619 * ((-1161706206 * v3 + 7) ^ (-1161706206 * v3)) % 7;
  v6 = *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v5);
  *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v5) = 0;
  LOBYTE(STACK[0x1CE7]) = v6;
  v7 = 16777619 * ((-1161706206 * v3 + 6) ^ (-1161706206 * v3)) % 6;
  v8 = *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v7);
  *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v7) = STACK[0x1CE6];
  LOBYTE(STACK[0x1CE6]) = v8;
  v9 = 16777619 * ((-1161706206 * v3 + 5) ^ (-1161706206 * v3)) % 5;
  v10 = *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v9);
  *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v9) = STACK[0x1CE5];
  LOBYTE(STACK[0x1CE5]) = v10;
  v11 = STACK[0x1CE0];
  LOBYTE(STACK[0x1CE0]) = STACK[0x1CE4];
  LOBYTE(STACK[0x1CE4]) = v11;
  v12 = 16777619 * ((-1161706206 * v3 + 3) ^ (-1161706206 * v3)) % 3;
  v13 = *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v12);
  *(_BYTE *)((unint64_t)&STACK[0x1CE0] | v12) = STACK[0x1CE3];
  LOBYTE(STACK[0x1CE3]) = v13;
  v14 = STACK[0x1CE1];
  LOBYTE(STACK[0x1CE2]) = STACK[0x1CE0];
  LOWORD(STACK[0x1CE0]) = v14;
  v15 = (v4 * v4) ^ v4;
  v16 = STACK[0x1CE4];
  v17 = (v4 + v4 * v4) ^ v4;
  LODWORD(STACK[0x1CE0]) = v15 + 16777619 * LODWORD(STACK[0x1CE0]);
  LODWORD(STACK[0x1CE4]) = v17 + 16777619 * v16;
  v18 = STACK[0x1CE0] ^ v2;
  v19 = 899433627 * (v18 - v15);
  LODWORD(v18) = 899433627 * (HIDWORD(v18) - v17);
  LODWORD(STACK[0x1CE8]) = v19;
  LODWORD(STACK[0x1CEC]) = v18;
  LOBYTE(STACK[0x1CE9]) = v19;
  LOBYTE(STACK[0x1CE8]) = BYTE2(v19);
  LOBYTE(STACK[0x1CEA]) = BYTE1(v19);
  v20 = (_BYTE *)((unint64_t)&STACK[0x1CE8] | v12);
  LOBYTE(v15) = *v20;
  *v20 = HIBYTE(v19);
  LOBYTE(STACK[0x1CEB]) = v15;
  LOBYTE(v17) = STACK[0x1CE8];
  LOBYTE(STACK[0x1CE8]) = v18;
  LOBYTE(STACK[0x1CEC]) = v17;
  v21 = (_BYTE *)((unint64_t)&STACK[0x1CE8] | v9);
  LOBYTE(v20) = *v21;
  *v21 = BYTE1(v18);
  LOBYTE(STACK[0x1CED]) = (_BYTE)v20;
  v22 = (_BYTE *)((unint64_t)&STACK[0x1CE8] | v7);
  LOBYTE(v21) = *v22;
  *v22 = BYTE2(v18);
  LOBYTE(STACK[0x1CEE]) = (_BYTE)v21;
  v23 = (_BYTE *)((unint64_t)&STACK[0x1CE8] | v5);
  LOBYTE(v22) = *v23;
  *v23 = BYTE3(v18);
  LOBYTE(STACK[0x1CEF]) = (_BYTE)v22;
  v24 = STACK[0x1CE8];
  v25 = (-1161706206 * STACK[0x1CE8]) ^ v3;
  for (i = 1; i != 5; ++i)
  {
    v27 = 8 * i;
    v28 = 8 * (16777619 * ((v25 + (_DWORD)i) ^ v25) % i);
    v29 = *(_QWORD *)(v24 + v28) ^ *(_QWORD *)(v24 + 8 * i);
    *(_QWORD *)(v24 + v27) = v29;
    v30 = *(_QWORD *)(v24 + v28) ^ v29;
    *(_QWORD *)(v24 + v28) = v30;
    *(_QWORD *)(v24 + v27) = *(_QWORD *)(v24 + 8 * i) ^ v30;
  }
  v31 = 0;
  v32 = (__n128)xmmword_100212CF0;
  v33 = (__n128)xmmword_100212D00;
  v34 = (__n128)xmmword_100212D10;
  v35 = (__n128)xmmword_100212D20;
  v36 = vdupq_n_s32(v25);
  do
  {
    v37 = *(int32x4_t *)(v24 + v31);
    v38.i64[0] = 0x9B0000009BLL;
    v38.i64[1] = 0x9B0000009BLL;
    v41.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v35, v36), vsubq_s32((int32x4_t)v35, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D30), v38));
    v41.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v34, v36), vsubq_s32((int32x4_t)v34, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D40), v38));
    v41.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v33, v36), vsubq_s32((int32x4_t)v33, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D50), v38));
    v41.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v32, v36), vsubq_s32((int32x4_t)v32, v36)), (int8x16_t)v36), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v37, (int8x16_t)xmmword_100212D60), v38));
    *(int8x16_t *)(v24 + v31) = vqtbl4q_s8(v41, (int8x16_t)xmmword_100212D70);
    v31 += 16;
    v37.i64[0] = 0x1000000010;
    v37.i64[1] = 0x1000000010;
    v35 = (__n128)vaddq_s32((int32x4_t)v35, v37);
    v34 = (__n128)vaddq_s32((int32x4_t)v34, v37);
    v33 = (__n128)vaddq_s32((int32x4_t)v33, v37);
    v32 = (__n128)vaddq_s32((int32x4_t)v32, v37);
  }
  while (v31 != 32);
  for (j = 32; j != 40; ++j)
    *(_BYTE *)(v24 + j) = (-101 * *(_BYTE *)(v24 + j)) ^ v25 ^ ((v25 + j) * (j - v25));
  *v0 = v24;
  return (*(uint64_t (**)(void *, __n128, __n128, __n128, __n128))(STACK[0xC38] + 8 * v1))(&unk_100212000, v32, v33, v34, v35);
}

uint64_t sub_100081658@<X0>(_DWORD *a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *a1 = v3 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v2) - ((v2 + v1) & 0x75F301FF) + 244))();
}

uint64_t sub_100082480()
{
  _QWORD *v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v4 = (2157 * v1);
  v6 = v2 != ((v3 + 594175837) & 0xDC9594F9) + 1787423278 || *v0 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((293 * v6) ^ v3)) - v4 + 6467))();
}

uint64_t sub_100082D04@<X0>(int a1@<W4>, _DWORD *a2@<X8>)
{
  *a2 += ((a1 - 3942) | 0xD00) ^ 0xD10;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((a1 - 3731) ^ 0x375)))();
}

uint64_t sub_100083FF4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;

  *a1 = v2 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v3) - v1 + 196))();
}

uint64_t sub_1000840E8@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(uint64_t, void (*)());
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v5 = a1 | 0x1B2u;
  v6 = v1(v3, sub_1001C4250);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * (((v2 == 0) * (v4 - 1464)) ^ (v4 - 2825)))
                                          - (v5 ^ 0x3F2)))(v6);
}

uint64_t sub_100084380()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 3698)) - 8))();
}

uint64_t sub_100084594()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * ((2163
                                * (*(_DWORD *)(v0 - 0x631F30597EADA350) == (((37 * ((v1 | 0x382) ^ 0x7FD) - 3871) | 4) ^ 0x5C))) ^ (v1 | 0x382))))();
}

uint64_t sub_1000845FC@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0xEDC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (a1 ^ 0x61B)) - ((a1 + 3867) ^ 0xF73)))();
}

uint64_t sub_100084634@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a1) - 4))();
}

uint64_t sub_100084778()
{
  int v0;
  uint64_t v1;
  unsigned __int8 v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * ((145
                                          * (((*(_QWORD *)(v1 - 0x5CAD012F7F6EB6A0) == 0x631F30597EADA3F0) ^ v2) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_100084A60@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * ((((((131 * (v1 ^ 0xB34)) ^ 0x12B9 ^ (v2 == a1)) & 1) == 0) | (32 * ((((131 * (v1 ^ 0xB34)) ^ 0x12B9 ^ (v2 == a1)) & 1) == 0))) ^ v1))
                            - 8))();
}

uint64_t sub_100084B50(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  ((void (*)(uint64_t, uint64_t))STACK[0x2F0])(a1, 63);
  v3 = ((uint64_t (*)(uint64_t))STACK[0x418])(v1);
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38] + 8 * v2))(v3);
}

uint64_t sub_100084B98()
{
  int v0;
  int v1;

  LODWORD(STACK[0x115C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 ^ 0x611)) - (v0 + 3873) + 3955))();
}

uint64_t sub_100084F04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v3 = *(_DWORD *)(v1 + 12);
  *(_QWORD *)(v2 + 1304) = v1 + 12;
  v4 = v3 - 233154022;
  v5 = *(_DWORD *)(v1 + 8) + 346564833;
  v6 = v4 < 0x6C32D49C;
  v7 = v4 > v5;
  if (v6 != v5 < 0x6C32D49C)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (int)(v0 | (4 * (v7 & 0xFFFFFFFB | (4 * v7)))))
                            - ((9 * (v0 ^ 0x721) - 129719140) & 0x7BB4991)
                            + 141))();
}

uint64_t sub_100085ED0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * (v4 ^ (4
                                     * (((*(_QWORD *)(v3 + v1) == v2) ^ ((v4 ^ v0) - 57)) & 1 | (2 * (((*(_QWORD *)(v3 + v1) == v2) ^ ((v4 ^ v0) - 57)) & 1)))))))();
}

uint64_t sub_100085F00()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (int)(((((((2 * v2) ^ 0x992) + 1954998601) & 0x8B7916B6) - 4179)
                                               * (*(_QWORD *)(v1 - 0x631F30597EADA348) - 0x1C490339AC015C30 == v0)) ^ v2))
                            - 8))();
}

uint64_t sub_100086538(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;

  v10 = *(_QWORD *)(STACK[0xA40] + 8) + 16 * (a2 + v8 + 353 * (v9 ^ 0xFC4u));
  *(_QWORD *)(a8 + 720) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (v9 | (32 * (*(_QWORD *)(v10 + 0x537CD1FA734B9CE8) != 0x5CAD012F7F6EB6A0))))
                            - 4))();
}

uint64_t sub_1000865AC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * ((6657 * (*(_QWORD *)(v1 - 0x5CAD012F7F6EB6A0) != 0x631F30597EADA3F0)) ^ v0))
                            - ((v0 - 3332) ^ ((v0 - 4006) | 0x81Cu) ^ 0xAFALL)))();
}

uint64_t sub_100086CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * (((*(_QWORD *)(a1 - 0x631F30597EADA3E8) == v1) * (v2 - 3882)) ^ v3)))();
}

uint64_t sub_100086FEC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 2809)) - 4))();
}

uint64_t sub_1000870FC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (((LOBYTE(STACK[0xC97]) == 0) * (v0 ^ 0x13EB ^ (v0 - 3947) ^ 0x49)) ^ v0))
                            - 8))();
}

uint64_t sub_100087790@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (164 * a1 - 381757049) & 0x16C1257A;
  STACK[0x1318] -= 16;
  v4 = ((uint64_t (*)(_QWORD))STACK[0x838])((*(_DWORD *)(v1 - 0x631F30597EADA3D8) - 933173546));
  STACK[0x1398] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7 * (v4 == 0)) ^ v2)) - (v3 ^ 0x4E)))();
}

uint64_t sub_100087ACC(uint64_t a1)
{
  int v1;
  _DWORD *v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                               + 8
                                                               * (((*v2 == 2055022193) * ((v1 ^ 0x35B) - 4580)) ^ v1))
                                                   - 4))(a1, 0x5CAD012F7F6EB6A0);
}

uint64_t sub_100087EC4(int a1, int a2)
{
  char v2;
  int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  _BOOL4 v8;
  int v9;

  if (v2)
    v8 = 0;
  else
    v8 = 1;
  if (*(_DWORD *)(v7 + 0x537CD1FA734B9CE0) == 1676580025)
    v9 = a2;
  else
    v9 = v5;
  if (v8 == a2 + 369751150 < v4)
    v8 = a2 + 369751150 < v6;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((7103 * (!v8 || v9 != ((692 * (a1 ^ 0x85C)) ^ 0x9CD ^ v3))) ^ a1)))();
}

uint64_t sub_100087F5C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * ((115
                                          * (((9 * (a3 ^ 0x79)) ^ (v4 == v3
                                                                                        + ((a3 - 6919) | 0x1106)
                                                                                        + 180)) & 1)) | a3))
                            - 8))();
}

uint64_t sub_1000880C0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * a1))();
}

uint64_t sub_100088164@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * ((2323 * (((v1 + 112) ^ (a1 == 0xAC832E058CB46320)) & 1)) ^ v1)))();
}

uint64_t sub_1000881AC()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  *(_QWORD *)(STACK[0xA40] + 8) = 0xAC832E058CB46320;
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38] + 8 * v0))(v1);
}

uint64_t sub_100088208@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + v4) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v2) - (a1 | 0xB30u) + 3955))();
}

uint64_t sub_10008840C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = (v4 ^ 0xFFFFFFFFFFFFF32FLL) + v1;
  *(_QWORD *)(v5 + 968) = v6;
  *(_BYTE *)(a1 + v6) = (v3 ^ 0xBA) * (v3 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((5616 * (*(_QWORD *)(v5 + 968) == 0)) ^ v2)) - 4))();
}

uint64_t sub_100088460()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  *v0 = 0;
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38] + 8 * v1))(v2);
}

uint64_t sub_100088488()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * (((*(_QWORD *)(v0 - 0x631F30597EADA360) != 0)
                                * ((((v1 - 117139276) & 0x6FB77FF) - 1383) ^ 0x191)) ^ v1)))();
}

uint64_t sub_1000884E0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = (v1 - 933180438 + *(_DWORD *)(v0 - 0x631F30597EADA368) + 2261);
  v4 = (v3 ^ 0xFBF3BF16FEBFDFFFLL) + ((v3 << ((v1 - 120) ^ 0x76u)) & 0x1FD7FBFFELL) + 0x40C40E901402001;
  *(_QWORD *)(v2 + 976) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((970 * (v4 != 0)) ^ v1)) - 4))();
}

uint64_t sub_10008865C@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v2 - 4680;
  *(_QWORD *)(v4 + 984) = v5;
  *(_BYTE *)(a1 + v5) = (v1 ^ 0xBA) * (v1 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((3815 * (*(_QWORD *)(v4 + 984) == 0)) ^ v3)) - 8))();
}

uint64_t sub_100088A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  *(_QWORD *)(a8 + 1704) = *(_QWORD *)(a8 + 72) + 392;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v8 ^ v9 ^ 0x593)))();
}

uint64_t sub_100088D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v11 = *(_QWORD *)(a8 + 1072);
  v12 = LODWORD(STACK[0xDDC]);
  v13 = STACK[0xC38];
  *(_QWORD *)(v10 + 216) = v8 + *(_QWORD *)(STACK[0xC38] + 8 * (v9 - 3719)) - 3791;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 + 8 * ((v9 - 3719) ^ 0x43F))
                                                                                                - 4))(a1, v12, a3, a4, a5, a6, v11);
}

uint64_t sub_100088F58(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v7 = (unint64_t)(v3 - 1) > 0xF
    || ((((v2 ^ 0xEB) + 84) ^ a1) & 0xFu) < (((_DWORD)v3 - 1) & 0xFu);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4
                                                                                + 8
                                                                                * ((v7 * ((v2 ^ 0xDEB) * v5 - 3896)) ^ v2))
                                                                    - 4))(a1, a2, 0, a1);
}

uint64_t sub_100088FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v18;

  v11 = ((v7 ^ 0x2C8) - 3944) & a1;
  v12 = a1 + v8 + STACK[0xBC0] - v11;
  v13 = a1 + v8 + STACK[0xBC8] - v11;
  v14 = a1 + v8 - (v11 | v10);
  v18 = (unint64_t)(a1 + v8 - a7) > 0xF && v12 > 0xF && v14 > 0xF && v13 > 0xF;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                 + 8
                                                                                 * ((v18 * (((v7 + 717) | 0x452) + 1116)) ^ v7))
                                                                     - 4))(a1, a2, a3, a1);
}

uint64_t sub_100089024(unsigned int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (478 * (a1 < 0x31))))
                            - ((961 * (v1 ^ 0x14DD)) ^ 0x1330u)
                            + 6255))();
}

uint64_t sub_10008915C(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int8x16_t *v10;
  int8x16_t *v11;
  uint64_t v12;

  *v10 = veorq_s8(veorq_s8(veorq_s8(veorq_s8(a1, a3), a2), a4), *v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((v8 == 0) * (v9 - 3642)) ^ a8)) - 8))();
}

uint64_t sub_10008980C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int8x16_t v5;

  v5.i64[0] = 0x6767676767676767;
  v5.i64[1] = 0x6767676767676767;
  *(int8x16_t *)(v4 + v1) = veorq_s8(veorq_s8(*(int8x16_t *)(a1 + v1), *(int8x16_t *)(v4 + v1)), v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v1 != 0) * v3) ^ v2)) - 8))();
}

uint64_t sub_1000899C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(_QWORD, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                                         + 8
                                                                                         * (((((a4 - 154067023) & 0x92EDBDF)
                                                                                            - 4652)
                                                                                           * (v4 < 0x39)) ^ (a4 - 3965)))
                                                                             - 8))((64 - v4), STACK[0xBB0], a3, v4);
}

uint64_t sub_100089A2C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = (~v2 & 0xFu) >= (((_DWORD)a1 - 1) & 0xFu) && a1 - 1 <= (unint64_t)((v1 ^ 0xB88u) + 2830) - 4688;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((7316 * v5) ^ v1)) - 4))();
}

uint64_t sub_100089D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  char v6;
  uint64_t v7;
  int8x8_t v8;
  int8x16_t v9;
  unint64_t v10;
  uint64_t v11;
  int8x16x4_t v13;
  int8x16x4_t v14;

  v13.val[0].i64[0] = a6 & 8;
  v13.val[0].i64[1] = v13.val[0].i64[0] | 1;
  v13.val[1].i64[0] = v13.val[0].i64[0] | 2;
  v13.val[1].i64[1] = v13.val[0].i64[0] | 3;
  v13.val[2].i64[0] = v13.val[0].i64[0] | 4;
  v13.val[2].i64[1] = v13.val[0].i64[0] | 5;
  v10 = STACK[0xC38];
  v13.val[3].i64[0] = v13.val[0].i64[0] | 6;
  v13.val[3].i64[1] = v13.val[0].i64[0] | 7;
  v11 = (v6 + (_BYTE)a6) & 0xF;
  v14.val[0].i64[0] = v11;
  v14.val[0].i64[1] = (v6 + (_BYTE)a6 + 1) & 0xF;
  v14.val[1].i64[0] = (v6 + (_BYTE)a6 + 2) & 0xF;
  v14.val[1].i64[1] = (v6 + (_BYTE)a6 + 3) & 0xF;
  v14.val[2].i64[0] = (v6 + (_BYTE)a6 + 4) & 0xF;
  v14.val[2].i64[1] = (v6 + (_BYTE)a6 + 5) & 0xF;
  v14.val[3].i64[0] = (v6 + (_BYTE)a6 + 6) & 0xF;
  v14.val[3].i64[1] = (v6 + (_BYTE)a6 + (((a5 - 22) | 0xC1) ^ 0xE)) & 0xF;
  *(int8x8_t *)(STACK[0xBE0] + a6) = veor_s8(veor_s8(veor_s8(veor_s8(veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v7 + v13.val[0].i64[0]), *(int8x8_t *)(STACK[0xC20] + a6)), *(int8x8_t *)(a2 + v13.val[0].i64[0])), *(int8x8_t *)(STACK[0xBD0] + v13.val[1].i64[1])), *(int8x8_t *)(v7 + v11)), *(int8x8_t *)(a2 + v11)), *(int8x8_t *)(v11 + STACK[0xBD0] + 3)), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v13, v9), v8)), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v14, v9), v8));
  return (*(uint64_t (**)(void))(v10 + 8 * ((25 * (STACK[0xC18] != a6)) ^ a5)))();
}

uint64_t sub_100089F00()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(v0 - (v1 ^ 0x121F)))();
}

uint64_t sub_100089FA4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0xEE0]) = a1;
  STACK[0x1170] = *(_QWORD *)(v9 + 8 * v6) - 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((v7 ^ 0x856) + v6)))(v8, a2, a3, a4, a5, a6, 137);
}

uint64_t sub_10008A308@<X0>(_QWORD *a1@<X7>, unsigned int a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v9;

  v4 = v3 ^ a2;
  a1[194] = v2 + 4;
  v5 = STACK[0x1314];
  LODWORD(STACK[0xC6C]) = LODWORD(STACK[0x1314]) + 488179763;
  a1[74] = STACK[0x14A8];
  v6 = v2 + (v5 - 20);
  a1[39] = v6;
  v7 = a1[202];
  a1[145] = (char *)&STACK[0x2040] + v7 + 100;
  a1[202] = v7 + 128;
  v9 = v2 != -4 && v6 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((190 * v9) ^ v3)) - (v4 ^ 0xF73)))();
}

uint64_t sub_10008A554()
{
  int v0;
  int v1;
  unsigned int v2;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((v2 < 0x38) * ((v0 | 0x8C4) ^ 0x10C9)) ^ (v1 + 687))))();
}

uint64_t sub_10008A594(uint64_t a1)
{
  int v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((986 * ((v1 ^ 0x13ECu) - (unint64_t)v2 - 2547 > 7)) ^ v1))
                            - (v1 ^ 0x16B0u)
                            + 3955))();
}

uint64_t sub_10008A8A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a4) - 4))();
}

uint64_t sub_10008A8D0(uint64_t a1, char a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x8_t v12;
  int8x16_t v13;
  int8x16x4_t v15;

  v15.val[0].i64[0] = ((_BYTE)v8 + a2) & 0xF;
  v15.val[0].i64[1] = ((_BYTE)v8 + a2 + 1) & 0xF;
  v15.val[1].i64[0] = ((_BYTE)v8 + a2 + 2) & 0xF;
  v15.val[1].i64[1] = ((_BYTE)v8 + a2 + 3) & 0xF;
  v15.val[2].i64[0] = ((_BYTE)v8 + a2 + ~(v7 | 8)) & 0xF;
  v15.val[2].i64[1] = ((_BYTE)v8 + a2 + 5) & 0xF;
  v15.val[3].i64[0] = ((_BYTE)v8 + a2 + 6) & 0xF;
  v15.val[3].i64[1] = ((_BYTE)v8 + a2 + 7) & 0xF;
  *(int8x8_t *)(v6 + v8) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v11 + v15.val[0].i64[0]), *(int8x8_t *)(v9 + v15.val[0].i64[0])), *(int8x8_t *)(v15.val[0].i64[0] + v10 + 3)), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v15, v13), v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v8 == v4) * v5) ^ a4)) - 4))();
}

uint64_t sub_10008AB64()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((70 * ((v1 ^ v2 ^ 0xC4Cu) >= (v0 | 0x411u) - 3951)) ^ v3)))();
}

uint64_t sub_10008AC74(unsigned int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((994 * (a1 < ((v1 + 2118080542) & 0x81C09FFB) - 1515)) ^ v1)) - 4))();
}

uint64_t sub_10008B1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0xC38]
                                                                                        + 8 * (v5 - 2997)))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_10008B1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  int v10;
  unint64_t v11;

  v11 = STACK[0xC38];
  *(_QWORD *)(a8 + 1192) = 107 * (v10 ^ v9) + *(_QWORD *)(STACK[0xC38] + 8 * v8) - 3967;
  return (*(uint64_t (**)(void))(v11 + 8 * v10))();
}

uint64_t sub_10008B7F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  int v7;
  int v8;

  LODWORD(STACK[0x118C]) = a4;
  LODWORD(STACK[0x114C]) = a7;
  LODWORD(STACK[0xDA8]) = a5;
  LODWORD(STACK[0xF78]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v8) - ((v8 - 1360) | 0x626u) + 3951))();
}

uint64_t sub_10008BC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((117 * ((v5 + 1 + v6) < 0x28)) ^ a5)))();
}

uint64_t sub_10008BE5C(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  LODWORD(STACK[0x118C]) = a2;
  LODWORD(STACK[0xDA8]) = a7;
  LODWORD(STACK[0x114C]) = a3;
  LODWORD(STACK[0xF78]) = a4;
  LODWORD(STACK[0xF6C]) = v8;
  v12 = (*(_DWORD *)(v9 + 88) ^ v11) + (v8 ^ v11);
  *(_DWORD *)(v9 + 88) = v12 + (v7 ^ (v11 - 353)) - (v10 & (2 * v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v7) - 8))();
}

uint64_t sub_10008C940()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * (LODWORD(STACK[0xBA0]) | (1546 * (STACK[0xB30] != STACK[0xB88]))))
                            - (((LODWORD(STACK[0xBA0]) - 1995) | 0xF31) ^ (143 * (LODWORD(STACK[0xBA0]) ^ 0x807u)) ^ 0x335)))();
}

uint64_t sub_10008CC5C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  ++*(_DWORD *)(v0 + 64);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - (v2 ^ 0xF7F)))();
}

uint64_t sub_10008CCB0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 1894)) - 8))();
}

uint64_t sub_10008D28C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 8))();
}

uint64_t sub_10008D31C@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                      + 8
                                                      * ((453 * (*(_QWORD *)(a1 + 1024) > *(_QWORD *)(a1 + 136))) ^ v2))
                                          - ((v2 + 1035185424) & 0xC24C3FDF ^ 0x7C6)))(a2 + 1);
}

uint64_t sub_10008D3B4()
{
  char v0;
  int v1;
  char v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((8097 * ((v2 ^ (v1 + 10)) & 1)) ^ v1))
                            - 107 * (v1 ^ 0xC86u)
                            + 3951))();
}

uint64_t sub_10008D5F4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - 8))((v0 & 0xFFFFFFF8) - 8);
}

uint64_t sub_10008D62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int8x8_t v12;
  int8x16_t v13;
  int8x16x4_t v15;

  v15.val[0].i64[0] = v7 & 8;
  v15.val[0].i64[1] = v15.val[0].i64[0] | 1;
  v15.val[1].i64[0] = (v8 ^ v10) & v7 | 2;
  v15.val[1].i64[1] = v15.val[0].i64[0] | 3;
  v15.val[2].i64[0] = v15.val[0].i64[0] | 4;
  v15.val[2].i64[1] = v15.val[0].i64[0] | v9;
  v15.val[3].i64[0] = v15.val[0].i64[0] | 6;
  v15.val[3].i64[1] = v15.val[0].i64[0] | 7;
  *(int8x8_t *)(v4 + v7) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v2 + v15.val[0].i64[0]), *(int8x8_t *)(v5 + v7)), *(int8x8_t *)(a2 + v15.val[0].i64[1])), *(int8x8_t *)(v3 + v15.val[2].i64[1])), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v15, v13), v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((a1 == v7) * v11) ^ v6)) - 8))();
}

uint64_t sub_10008DCD0@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 1616) = a2;
  return ((uint64_t (*)(void))STACK[0x1440])();
}

uint64_t sub_10008DEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x1528]) = v9 - 778753019 + v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * v8) - ((v8 + a8) & 0x7852AF77 ^ 0xF73)))(a1, a2, a3, a4, a5, a6, a7, &STACK[0xCC8]);
}

uint64_t sub_10008DEFC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x140C]) += 8;
  v2 = v1 - 232;
  v3 = 447355651 * ((v1 + 1530069406 - 2 * ((v1 - 232) & 0x5B330286)) ^ 0xB23FC19A);
  *(_BYTE *)(v2 + 1) = 3 * ((v1 - 98 - 2 * ((v1 + 24) & 0x86)) ^ 0x9A) + 101;
  *(_DWORD *)(v2 + 8) = v0 - v3 - 282;
  *(_DWORD *)(v2 + 12) = v3 + 1131323242;
  *(_BYTE *)v2 = (3 * ((v1 - 98 - 2 * ((v1 + 24) & 0x86)) ^ 0x9A)) ^ 0x3C;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x6D8])(v1 - 232);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * (int)(STACK[0xC28] - 2971)) - 4))(v4);
}

uint64_t sub_10008E084()
{
  int v0;
  int v1;

  LODWORD(STACK[0x140C]) += 8;
  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * (((LODWORD(STACK[0x128C]) == 0) * (v0 + ((v1 - 3650) | 0x8C2) - 2749)) ^ (v1 + 2132))))();
}

uint64_t sub_10008E0CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v2 = v1 - 232;
  v3 = 447355651 * ((((v1 - 232) | 0xDBE660F2) - ((v1 - 232) & 0xDBE660F2)) ^ 0x32EAA3EE);
  *(_BYTE *)v2 = (3 * ((((v1 + 24) | 0xF2) - ((v1 + 24) & 0xF2)) ^ 0xEE)) ^ 0x3C;
  *(_DWORD *)(v2 + 8) = v0 - v3 + 3462;
  *(_DWORD *)(v2 + 12) = v3 + 1131323242;
  *(_BYTE *)(v2 + 1) = 3 * ((((v1 + 24) | 0xF2) - ((v1 + 24) & 0xF2)) ^ 0xEE) + 101;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x6D8])(v1 - 232);
  v5 = STACK[0xC38];
  STACK[0xFE8] = *(_QWORD *)(STACK[0xC38] + 8 * v0) - 4;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((773 * (v0 ^ 0xD5) + 685) ^ v0)))(v4);
}

uint64_t sub_10008E194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _BOOL4 v18;

  v11 = v9 + 237;
  LODWORD(STACK[0x140C]) = LODWORD(STACK[0x140C]) + ((v9 - 1873) | 0x48) - 2150;
  *(_QWORD *)(a8 + 1480) = v8;
  v12 = v9;
  v13 = STACK[0x128C];
  v14 = v10 - 232;
  v15 = 447355651 * ((-2 - ((~(v10 - 232) | 0xF8373987) + ((v10 - 232) | 0x7C8C678))) ^ 0x113BFA9B);
  *(_BYTE *)(v14 + 1) = 3 * ((-2 - ((~(v10 + 24) | 0x87) + ((v10 + 24) | 0x78))) ^ 0x9B) + 101;
  *(_BYTE *)v14 = (3 * ((-2 - ((~(v10 + 24) | 0x87) + ((v10 + 24) | 0x78))) ^ 0x9B)) ^ 0x3C;
  *(_DWORD *)(v14 + 8) = v12 - v15 - 282;
  *(_DWORD *)(v14 + 12) = v15 + 1131323242;
  v16 = ((uint64_t (*)(uint64_t))STACK[0x6D8])(v10 - 232);
  v18 = v13 == (STACK[0x320] ^ 0xC3) || *(_DWORD *)(v10 - 228) == 968960260;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * ((1205 * v18) ^ v11)) - 8))(v16);
}

uint64_t sub_10008E2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  BOOL v17;
  int v18;

  v11 = (v8 - 795) | 0x320;
  v12 = v8 - 950;
  LODWORD(STACK[0x140C]) += 8;
  *(_QWORD *)(a8 + 1080) = v9;
  v13 = STACK[0x128C];
  v14 = v10 - 232;
  v15 = 447355651 * ((~((v10 - 232) | 0x19E7E4DA) + ((v10 - 232) & 0x19E7E4DA)) ^ 0xF14D839);
  *(_BYTE *)(v14 + 1) = 3 * ((~((v10 + 24) | 0xDA) + ((v10 + 24) & 0xDA)) ^ 0x39) + 101;
  *(_BYTE *)v14 = (3 * ((~((v10 + 24) | 0xDA) + ((v10 + 24) & 0xDA)) ^ 0x39)) ^ 0x3C;
  *(_DWORD *)(v14 + 8) = v8 - v15 - 282;
  *(_DWORD *)(v14 + 12) = v15 + 1131323242;
  v16 = ((uint64_t (*)(uint64_t))STACK[0x6D8])(v10 - 232);
  if (v13)
    v17 = *(_DWORD *)(v10 - 228) == (v11 ^ 0x39C12678);
  else
    v17 = 1;
  v18 = v17;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * ((4109 * v18) ^ v12)) - 8))(v16);
}

uint64_t sub_10008E3E4@<X0>(_QWORD *a1@<X7>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = a2 | v2;
  v7 = a1[202];
  a1[116] = (char *)&STACK[0x2040] + v7;
  a1[202] = v7 + 128;
  a1[163] = 0x631F30597EADA3F0;
  a1[218] = 0;
  LODWORD(STACK[0x124C]) = 40;
  *(_QWORD *)(v5 + 288) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * (v3 ^ (221 * ((v4 ^ 0x7BBFFAAD82F500uLL) > 0xFFFFFFFFFFFFFFEFLL))))
                            - v6
                            + 3955))();
}

uint64_t sub_10008E59C()
{
  uint64_t v0;
  int v1;

  LODWORD(STACK[0xD64]) = (v0 ^ 0x7BBFFAAD82F505uLL) % ((unint64_t)(v1 - 1738) + 997779);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v1 - 2426)) - 4))();
}

uint64_t sub_10008E5E4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  *(_QWORD *)(v2 + 320) = v1;
  v3 = STACK[0x140C];
  v4 = STACK[0x1408];
  LODWORD(STACK[0x140C]) += 8;
  v3 -= 542394884;
  v5 = v4 + (STACK[0x318] ^ 0xB1589317);
  v6 = v3 < 0x1EFD123B;
  v7 = v3 > v5;
  if (v6 != v5 < 0x1EFD123B)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7397 * !v7) ^ a1)) - 8))();
}

uint64_t sub_10008E830()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v3 = *(_DWORD *)(v1 + 12);
  *(_QWORD *)(v2 + 1824) = v1 + 12;
  v4 = v3 - 1709066217;
  v5 = ((v0 - 1547) | 0xA2) + *(_DWORD *)(v1 + 8) - 1129347533;
  v6 = v4 < 0x143A3299;
  v7 = v4 > v5;
  if (v6 != v5 < 0x143A3299)
    v7 = v6;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((54 * !v7) ^ v0)))();
}

uint64_t sub_10008EBB0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v0 ^ 0xE87)))();
}

uint64_t sub_10008ED74()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 1352) = v1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                                          + 8 * (v0 + 3778))
                                                                              - 4))(1471085503, 2942171006, 4292587516, 435201327, 1357555850);
}

uint64_t sub_10008EE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * (v6 ^ 0x58B)) - 4))(a1, a2, a3, a4, 2208, a6, 1347, &STACK[0xCC8]);
}

uint64_t sub_10008EF84(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v3[126] = 0;
  v3[129] = 0;
  v3[133] = 0;
  v3[132] = 0;
  v3[130] = 0;
  v3[125] = 0;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v2) - 8);
  v3[131] = 0;
  LODWORD(STACK[0x17FC]) = -447687029;
  return v4(a1, a2, 13, 111, 101, 2323278933, 4278255361, 443810276);
}

uint64_t sub_10008F1E4()
{
  int v0;
  char v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((v2 + v0) ^ (4252 * (((v1 - 1) & 3) != 0)))))();
}

uint64_t sub_100090630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, char a6@<W5>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  unsigned __int8 v9;
  int v10;
  char v11;
  int v12;
  int v13;
  int v14;
  char v15;
  char v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v18 = ((((v9 + a6 - v11) ^ v16) - ((2 * ((v9 + a6 - v11) ^ v16)) & 0xBF) + 95) ^ v15) ^ v17;
  v19 = v18 ^ a3;
  v20 = *(_DWORD *)(*(_QWORD *)(a2 + 8 * (v8 ^ a7)) + 4 * (v18 ^ 0xE0u) + a4);
  *(_DWORD *)(a1 + 4 * v9) = v14 ^ v12 ^ a8 ^ ((v19 ^ v20) + 2 * (v19 & v20)) ^ a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v10 != 0) * v13) ^ v8)) - 4))();
}

uint64_t sub_1000906C4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  v1 = v0 + 120;
  v2 = (v0 - 3721) | 0x755;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x720])(1028);
  STACK[0x1828] = v3;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((((v3 == 0) ^ v1) & 1) * (v2 ^ 0xF19)) ^ v1)))();
}

uint64_t sub_100090728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__n128 a27,__n128 a28)
{
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  char v34;
  char v35;
  unsigned int v36;
  int v37;
  _BOOL4 v38;
  _BOOL4 v39;
  _BOOL4 v40;

  LODWORD(STACK[0xA70]) = v30;
  v31 = v29 - ((2 * v29) & 0x84F8B3A8) + 1115445716;
  v32 = STACK[0xC18];
  LODWORD(STACK[0xA78]) = v31;
  v33 = v31 ^ v32;
  LODWORD(STACK[0xA68]) = v33;
  v34 = ((v33 ^ (((2 * (v28 ^ 0x86)) ^ 0xF8) + 65) & 0xFC ^ 0xAA) + 83) & 0xFE ^ 0x93;
  v35 = -87 * v34;
  v36 = (-87 * v34);
  if (v34 >= 0)
    LOBYTE(v37) = v34;
  else
    v37 = -v34;
  v38 = v36 > ((v35 - (_BYTE)v37) & 0xFEu);
  v39 = v36 < ((v35 + (_BYTE)v37) & 0xFEu);
  if (v34 >= 0)
    v40 = v38;
  else
    v40 = v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0xC38] + 8 * ((85 * (v37 > 1u || v40)) ^ v28 ^ 0x1486)) - 8))(a1, a2, a3, a4, 3158864116, 1434869074, 164, 2286684298, a5, a6, a7, a8, a9, a10, a28, a27);
}

uint64_t sub_100090BA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * (((-1431655765
                                 * ((v6 + (v5 ^ v6) - ((((v5 ^ v6) << ((v4 + 104) ^ a4)) + 2) & v7) + 1) ^ v6) < 0x55555556)
                                * v8) ^ v4)))();
}

uint64_t sub_100090C40()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  int v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unint64_t v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  BOOL v145;
  unsigned int v146;
  char v147;
  int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  unint64_t v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  uint64_t v171;
  unint64_t v172;

  v6 = (1575430663 * v0) >> 5;
  v7 = (-102074932 * v2) | ((-1099260557 * v2) >> 30);
  v8 = (-274517098 * v1) | ((-137258549 * v1) >> 31);
  v9 = 1298363449 * v7;
  v10 = (939524096 * v0) | v6;
  v11 = v10 - v7 - v8 + 28993024 * (v3 ^ v4) + (((((v5 + 312385060) & 0xED615DF3) + 1501614914) * (v3 ^ v4)) >> 23);
  v12 = (-551934021 * v11) >> 8;
  v13 = -1196169455 * v10;
  v7 *= 1796973000;
  v14 = v13 >> 7;
  v15 = (-1157627904 * v11) | v12;
  v16 = 1272240847 * v15;
  v17 = v12 & 0x40;
  HIDWORD(v19) = 1990857023 * v8;
  LODWORD(v19) = 1990857023 * v8;
  v18 = v19 >> 31;
  v20 = v15 & 0xFFFFFFBF;
  v21 = 17 * v6;
  v22 = (v17 & v7) == 0;
  v23 = v7 & 0xFFFFFFF8 | (v9 >> 29);
  if (!v22)
    v17 = -v17;
  v24 = __PAIR64__(v21, v13) >> 7;
  v25 = 1799094272 * v15;
  v26 = (759300096 * v18) ^ v25;
  v27 = v25 & 0xFFFC0000 | (v16 >> 14);
  v28 = 913086901 * v24;
  v29 = (1446593792 * ((v20 ^ v18 ^ (v23 + v17)) - v24)) | ((1985362245 * ((v20 ^ v18 ^ (v23 + v17)) - v24)) >> 24);
  v30 = __PAIR64__(v14, v28) >> 1;
  HIDWORD(v31) = ((759300096 * v18) | ((1942296225 * v18) >> 15)) ^ v27;
  LODWORD(v31) = v26;
  LODWORD(v31) = __ROR4__((v31 >> 19) ^ 0x8A748D70, 13);
  v32 = ((-712509241 * v29) >> ((-47 * v30) & 0xC) >> ((-47 * v30) & 0xC ^ 0xC)) | (-1938817024 * v29);
  v33 = (-1257781704 * (((v31 ^ 0x6B8453A4) - v29) ^ v30)) | ((-1230964537
                                                             * (((v31 ^ 0x6B8453A4) - v29) ^ v30)) >> 29);
  v34 = (-101711872 * v27) | ((545726367 * v27) >> 12);
  v35 = v32 ^ v34;
  v36 = (v32 ^ (((-1270874112 * v30) | ((1341159121 * v30) >> 10)) + v34)) - v33;
  v37 = (1665296987 * (v35 + v33) - 2142929615) ^ v36;
  v38 = -303379081 * v37 + 2073891851 - ((-606758162 * v37) & 0xF73A2816);
  v39 = (v38 ^ 0x7B9D140B) + v32;
  LODWORD(STACK[0xBC8]) = v38;
  v40 = v38 ^ (v33 - ((2 * v33) & 0xF73A2816) + 2073891851);
  v41 = 216223541 * v40;
  LODWORD(STACK[0xBA8]) = v40;
  v42 = 1020526592 * v40;
  LODWORD(STACK[0xB18]) = v38 ^ 0x7B9D140B;
  v43 = (v38 ^ 0x7B9D140B) + v36;
  v44 = 154202545 * v43;
  LODWORD(STACK[0xB70]) = v43;
  v45 = -1006632960 * v43;
  LODWORD(STACK[0xC20]) = v39;
  v46 = (-642252800 * v39) | ((-1135150281 * v39) >> 13);
  v47 = v45 & 0xFC000000 | (v44 >> 6);
  v48 = v42 & 0xFFFC0000 | (v41 >> 14);
  v49 = -604532391 * v47;
  v50 = ((391905280 * v37) | ((182453719 * v37) >> 14))
      - v48
      + v46
      - v47
      - 2 * (v46 & ((391905280 * v37) | ((182453719 * v37) >> 14)));
  v51 = (872415232 * v50) | ((107621581 * v50) >> 6);
  v52 = (-1491910656 * v48) | ((-1784243123 * v48) >> 18);
  v53 = -1856438272 * v47;
  v54 = ((-1162577920 * v46) | ((68638351 * v46) >> 21)) + v51;
  v55 = v53 & 0xFFFF0000 | HIWORD(v49);
  v56 = -643971519 * v55;
  v57 = 1735495744 * v55;
  v58 = (102760448 * v51) | ((-1195474895 * v51) >> 11);
  v59 = (1313483456 * ((v54 + v52 - 2 * (v54 & v52)) ^ v55)) | ((825829547 * ((v54 + v52 - 2 * (v54 & v52)) ^ v55)) >> 26);
  v60 = v57 & 0xFFFFFFC0 | (v56 >> 26);
  v61 = ((-192937984 * v52) | ((901098473 * v52) >> 9)) + v60 - v58 + v59;
  v62 = (-1318256896 * v58) | ((-55481089 * v58) >> 24);
  v63 = (-1324840192 * v59) | ((1672546443 * v59) >> 24);
  v64 = v62 - v63;
  v65 = (-1806999552 * v61) | ((-1523801509 * v61) >> 19);
  v66 = (v62 ^ ((-1174632392 * v60) | ((-146829049 * v60) >> 29)))
      + 2 * (v62 & ((-1174632392 * v60) | ((-146829049 * v60) >> 29)))
      + v63
      + v65;
  v67 = (v64 - v65 - ((2 * v64) & 0xEF168182) + 1671022200) ^ v66;
  v68 = 167669455 * v67 + 927422447 - ((335338910 * v67) & 0x6E8EAFDE);
  v69 = v68 ^ (v66 - ((2 * v66) & 0x6E8EAFDE) + 927422447);
  v70 = v68 ^ 0x374757EF;
  v71 = (v68 ^ 0x374757EF) + v65;
  v72 = ((v70 + v65) ^ v69 ^ (v70 + v63)) & 8;
  LODWORD(STACK[0xB30]) = (v68 ^ 0x374757EF) + v63;
  v73 = (1879048192 * (v70 + v63)) | ((-580966249 * (v70 + v63)) >> 4);
  LODWORD(STACK[0xB28]) = v68;
  if ((v72 & ~v68) != 0)
    v72 = -v72;
  LODWORD(STACK[0xB80]) = v72;
  LODWORD(STACK[0xB10]) = v71;
  v74 = __PAIR64__(v71, 626808553 * (v70 + v65)) >> 3;
  LODWORD(STACK[0xB60]) = v69;
  v75 = __PAIR64__(v69, -1442649945 * v69) >> 1;
  v76 = (-1210056704 * (v74 + v75 - 2 * v74 + (v73 ^ ((-1539819520 * v67) | ((-1342929145 * v67) >> 21))))) | ((-510612033 * (v74 + v75 - 2 * v74 + (v73 ^ ((-1539819520 * v67) | ((-1342929145 * v67) >> 21))))) >> 11);
  v77 = (-1316552704 * v74) | ((1320464775 * v74) >> 16);
  v78 = (261456416 * v75) | ((1081912337 * v75) >> 27);
  v79 = v76
      + v77
      + (__ROR4__(((1943535616 * v73) | ((-629687828 * v73) >> 15) | ((916319867 * v73) >> 13) & 0x60000) ^ 0xC9D14E5C, 17) ^ 0xA72E64E8);
  v80 = (870315095 * v76) >> (v79 & 0xF) >> (v79 & 0xF ^ 0xF);
  v81 = v80 - 391249920 * v76;
  v82 = (1665318912 * (v79 - v78)) | ((2096205067 * (v79 - v78)) >> 18);
  v83 = 1066746341 * v82;
  v84 = (-629693440 * v78) | ((414621161 * v78) >> 22);
  v85 = ((1608195472 * v77) | ((-1241665063 * v77) >> 28)) + v81 - v82;
  v86 = ((1899429903 * v81) >> 3) - (v80 << 29);
  v87 = (-226492416 * v82) | ((1066746341 * v82) >> 9);
  v88 = (-1979711488 * (v85 ^ v84)) | ((-935175867 * (v85 ^ v84)) >> 7);
  v89 = v88 ^ ((v86 ^ v87) - 105078363);
  v90 = ((-291784704 * v84) | ((-247606409 * v84) >> 21)) + v86 + v87 - 2 * v86 + v88;
  v91 = v89 - v90 + 1323509518 - ((2 * (v89 - v90 + 1323509518)) & 0x40F2DCAC) + 544829014;
  v92 = v91 ^ (v87 - 2 * (v87 & 0x20796E57 ^ (v83 >> 9) & 1) + 544829014);
  v93 = (v91 ^ 0xDF8691A9) + 1;
  v94 = v93 + v88;
  v95 = -157691127 * v92;
  v96 = v93 + v90;
  v97 = (1976413569 * (v93 + v90)) >> 8;
  LODWORD(STACK[0xBC0]) = v91;
  v98 = -1666847883 * (v91 ^ 0x20796E56);
  LODWORD(STACK[0xC18]) = v92;
  v99 = -1740111872 * v92;
  v100 = v98 >> 18;
  v101 = v99 + (v95 >> 13);
  v102 = v98 << (((-247606409 * v84) >> 21) & 0xE) << (((-247606409 * v84) >> 21) & 0xE ^ 0xE);
  LODWORD(STACK[0xBA0]) = v94;
  LODWORD(STACK[0xB98]) = v96;
  v103 = (-2130706432 * v96) | v97;
  v104 = (-1228685312 * v94) | ((860281615 * v94) >> 18);
  v105 = v103 - v104 + v102 - v101 + (v100 ^ -v100 ^ (v102 - (v102 ^ v100)));
  v104 *= 234248523;
  v106 = (1244481536 * v105) | ((971589033 * v105) >> 21);
  HIDWORD(v107) = 3 * v101;
  LODWORD(v107) = -417506589 * v101;
  v108 = v104 >> 28;
  v109 = (v107 >> 3) - v106;
  HIDWORD(v107) = v104;
  LODWORD(v107) = v104;
  v110 = v107 >> 28;
  v111 = ((-916077329 * v103) >> 4) - (v97 << 28);
  v112 = 987189187 * v111;
  v113 = -682638592 * v111;
  v114 = (-506462208 * v106) | ((-1013141987 * v106) >> 12);
  v115 = (__ROR4__((__PAIR64__(v108, v110) >> 2) ^ __ROR4__(__ROR4__(v109, 20) ^ 0x8E6957BA, 14) ^ 0xC1D26C5F, 30) ^ 0x7CE157EA)
       - v111;
  v116 = (2044630623 * v115) >> 7;
  v117 = v116 - 1107296256 * v115;
  v118 = 1948287157 * v114;
  v119 = v116 & 0x800;
  v120 = ((544100352 * v110) | ((-161347867 * v110) >> 20)) - v114;
  v121 = 134959104 * v114;
  v122 = v113 & 0xFFFFFF00 | HIBYTE(v112);
  v123 = v117 & 0xFFFFF7FF;
  if ((v119 & v120) != 0)
    v119 = -v119;
  v124 = ((863441983 * v117) >> 6) - (v117 << 26);
  v125 = ((v119 + v120) ^ v123) + v122;
  v126 = v121 & 0xFFFFF000 | (v118 >> 20);
  v127 = (1164053411 * v125) >> 25;
  v128 = (-1325018752 * v125) | v127;
  v129 = (__PAIR64__(HIBYTE(v112), 1608909401 * v122) >> 3) - v126 + v124 - v128;
  v130 = (-1912780993 * (v128 + ((v126 - v124) ^ 0x2AB6F6B5))) ^ v129;
  v131 = v130 - 2 * ((v130 + 1761486530) & 0x64012435 ^ v130 & 1) + 1291799286;
  v132 = (v131 ^ 0x64012434) + v124;
  v133 = v131 ^ (v129 - ((2 * v129) & 0xC8024868) + 1677796404);
  LODWORD(STACK[0xB20]) = v131;
  v134 = v131 ^ (v128 - 2 * (v128 & 0x64012436 ^ v127 & 2) + 1677796404);
  LODWORD(STACK[0xB90]) = v132;
  v135 = (-1683357696 * v132) | ((1640156629 * v132) >> 15);
  LODWORD(STACK[0xB88]) = v134;
  LODWORD(STACK[0xB38]) = v133;
  v136 = (-1286434816 * v134) | ((996881705 * v134) >> 20);
  v137 = (-1536360448 * v133) | ((1946461293 * v133) >> 16);
  v138 = (((-399466496 * (v131 ^ 0x64012434)) | ((-446217851 * (v131 ^ 0x64012434u)) >> 19)) - v136 - v135) ^ v137;
  v139 = (-250768629 * v138) >> 25;
  v140 = (((-250768629 * v138) >> 24) & 0x1A) + (v139 ^ 0xAF3CD18D);
  v141 = v140 + 1944547200;
  v142 = 91570741 * v136;
  v143 = (-893386752 * v135) | ((-15022293 * v135) >> 10);
  if (v139 <= 0x4C)
    v144 = 589578509;
  else
    v144 = 589578586;
  v145 = v139 >= 0x4D;
  v146 = 1883984493 * v137;
  v147 = v140 + 51;
  if (!v145)
    v147 = v141;
  if (v147 == 13)
    v148 = v144;
  else
    v148 = v141;
  v149 = (v148 - 589578509) | (-2033613440 * v138);
  v150 = v146 >> 12;
  v151 = (651165696 * v137) | (v146 >> 12);
  HIDWORD(v153) = v142;
  LODWORD(v153) = v142;
  v152 = v153 >> 29;
  v154 = (1275562720 * (v143 + v152 + v151 - v149)) | ((-1839186857 * (v143 + v152 + v151 - v149)) >> 27);
  v155 = (1993407488 * v149) | ((-10636225 * v149) >> 22);
  HIDWORD(v153) = v150;
  LODWORD(v153) = 595114989 * v151;
  v156 = v153 >> 2;
  v157 = (((331350016 * v152) | ((-1754930097 * v152) >> 10)) - v155 - v154) ^ v156;
  v158 = (89253856 * v154) | ((137006911 * v154) >> 27);
  v159 = (1339454720 * v155) | ((-380643723 * v155) >> 24);
  v160 = (-646958080 * v157) | ((-1539941363 * v157) >> 22);
  v161 = v159 - v158;
  v162 = v159 ^ ((607125504 * v156) | ((-1407016381 * v156) >> 12));
  v163 = (v161 ^ 0xB0BA6936) + v160 - 2 * v160 - 91476125;
  v164 = v162 ^ v158 ^ v160;
  v165 = (v163 ^ 0xFF299016 ^ -(v163 ^ 0xFF299016) ^ (v164 + (v164 ^ v163 ^ 0xD66FE9) + 1)) + v164;
  v166 = v165 - ((2 * v165) & 0xD957585C) + 1823190062;
  LODWORD(STACK[0xBD8]) = v166;
  v167 = v166 ^ v164;
  v168 = v166 ^ v164 ^ 0x206DEE36;
  v169 = (v167 ^ 0x6CABAC2E) - ((2 * (v167 ^ 0x6CABAC2E) + 878305482) & 0x998C8430) + 1727214205;
  if ((v167 ^ 0x6CABAC2Eu) >= 0xE5D30F9B)
  {
    v170 = -1458221693;
  }
  else
  {
    v169 = v167 ^ 0x206DEE36;
    v170 = 1288061464;
  }
  if (v169 == 1288061464)
    v168 = v170;
  LODWORD(STACK[0xB68]) = v168;
  v171 = ((uint64_t (*)(uint64_t))STACK[0x720])(1028);
  v172 = STACK[0xC38];
  STACK[0xBE0] = 0;
  STACK[0x1780] = v171;
  return ((uint64_t (*)(void))(*(_QWORD *)(v172 + 8 * ((7214 * (v171 != 0)) ^ v5)) - 8))();
}

uint64_t sub_100092124(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7, uint64_t a8)
{
  int v8;
  unsigned __int8 v9;
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  char v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  char v20;
  char v21;
  unsigned __int8 v22;
  int v23;

  v21 = (((((v10 + (v12 & 0x7F)) ^ v8 ^ 0xFFFFFFC7) & 0x80) != 0) | (2 * ((v10 + (v12 & 0x7F)) ^ v8 ^ 0xC7))) ^ v20;
  v22 = v21 ^ 0xF3;
  v23 = *(_DWORD *)(*(_QWORD *)(a2 + 8 * (v17 ^ a7)) + 4 * (v21 ^ v15) + a8) ^ v18;
  *(_DWORD *)(a1 + 4 * v9) = v16 ^ v13 ^ v14 ^ (((v23 + (v23 ^ a3) + 1) ^ 0xFFFFFFFE) + v23) ^ v22 ^ (v22 + a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * (((v11 == 0) * a5) ^ v17)) - 8))();
}

uint64_t sub_100092A50@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, char a5@<W4>, char a6@<W5>, int a7@<W6>, char a8@<W7>, int a9@<W8>)
{
  unsigned __int8 v9;
  char v10;
  int v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  char v23;
  char v24;
  unsigned __int8 v25;
  int v26;
  unint64_t v27;
  int v28;

  v23 = (v9 + a6 - (v10 & (v17 ^ v12))) ^ a2;
  v24 = (v23 + a5 - (a8 & (2 * v23))) ^ v22;
  v25 = (v24 + v18 - (v20 & (2 * v24))) ^ v14;
  HIDWORD(v27) = *(_DWORD *)(*(_QWORD *)(v15 + 8 * (a9 - 2894))
                           + 4
                           * ((((((4 * v25) | (v25 >> 6)) ^ v21) >> 2) | ((((4 * v25) | (v25 >> 6)) ^ v21) << 6)) ^ v16)
                           - 762584954);
  LODWORD(v27) = HIDWORD(v27);
  v26 = v27 >> 8;
  v28 = v13 ^ a4 ^ ((v26 ^ (32 * v26) ^ (8 * v26)) + a7 - 2 * ((v26 ^ (32 * v26) ^ (8 * v26)) & (a7 + 2) ^ v26 & 2));
  *(_DWORD *)(a1 + 4 * v9) = ((v28 ^ -v28 ^ (a3 - (v28 ^ a3))) + a3) ^ 0xE796E65D;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((702 * (v11 == 0)) ^ a9)) - 8))();
}

uint64_t sub_100092B40()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v0 | 3u;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x720])(1028);
  STACK[0x1788] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((6096 * (v4 != 0)) ^ v1)) - v3 + 2051))();
}

uint64_t sub_100096384(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;

  LODWORD(STACK[0xAE8]) = HIBYTE(LODWORD(STACK[0xBC8])) ^ 0x12;
  LODWORD(STACK[0xAB0]) = (v16 ^ LODWORD(STACK[0xBA0]) ^ v8)
                        - ((2 * (v16 ^ LODWORD(STACK[0xBA0]) ^ v8)) & 0x2556DB14)
                        + 313224586;
  LODWORD(STACK[0xA88]) = LODWORD(STACK[0xB90]) + 1285176505;
  LODWORD(STACK[0xAD0]) = LODWORD(STACK[0xBE0]) + v14 - 2 * (STACK[0xBE0] & v14);
  v17 = LODWORD(STACK[0xB88]) >> 17;
  LODWORD(STACK[0xAE0]) = HIBYTE(LODWORD(STACK[0xBD8])) ^ 5;
  LODWORD(STACK[0xAA8]) = v10 & 0xFFFFFFFD;
  LODWORD(STACK[0xAA0]) = LODWORD(STACK[0xB70]) + LODWORD(STACK[0xBA8]);
  v18 = STACK[0xB78];
  LODWORD(STACK[0xAC8]) = STACK[0xB98] & LODWORD(STACK[0xB78]);
  LODWORD(STACK[0xAC0]) = v18 | LODWORD(STACK[0xB80]);
  v19 = LODWORD(STACK[0xBC0]) ^ 0x3FECB1D2;
  LODWORD(STACK[0xBA0]) = HIBYTE(LODWORD(STACK[0xBC0])) ^ 0x3F;
  LODWORD(STACK[0xB78]) = v19;
  v20 = STACK[0xB68] & (v9 | 0x6E0D2259);
  LODWORD(STACK[0xB80]) = v19 + v13;
  LODWORD(STACK[0xAB8]) = v20;
  v21 = (-1169889064 * (v19 + v13)) | ((2001247515 * (v19 + v13)) >> 29);
  v22 = (680031808 * (v19 + v12)) | ((1822564825 * (v19 + v12)) >> 26);
  v23 = (-1071079424 * v20) | ((-18480827 * v20) >> 19);
  v24 = ((1778585600 * v11) | ((-21585871 * v11) >> 20)) + v21 - v22 - v23;
  v25 = (-252968960 * v23) | ((909032507 * v23) >> 14);
  v26 = (-1801829176 * v22) | ((848513177 * v22) >> 29);
  v27 = __PAIR64__(3 * v24, -655979773 * v24) >> 3;
  v28 = (v27 ^ ((-109459084 * v21) | ((-1101106595 * v21) >> 30))) - v25 + v26;
  v29 = (782589605 * v27) >> 9;
  v30 = (1384120320 * v27) | v29;
  v31 = ((-1679002267 * v28) >> (v17 & 0x19) >> (v17 & 0x19 ^ 0x19)) ^ (-163925376 * v28);
  v32 = (1607467008 * v25) | ((1310680573 * v25) >> 12);
  v33 = v31 + (v30 ^ ((503562240 * v26) | ((-993232881 * v26) >> 18))) - v32;
  v34 = (491111993 * v31) >> 7;
  v35 = ((1989870415 * v30) >> 4) - (v29 << 28);
  v36 = (1912602624 * v31) | v34;
  v37 = (-641377000 * v33) | ((-1690784861 * v33) >> 29);
  v38 = (v35 ^ ((-1245708288 * v32) | ((365496023 * v32) >> 10))) - v36 - v37;
  v39 = v38 + ((v35 + v36 + 768245859) ^ v37) + 1937311988;
  LODWORD(STACK[0xA80]) = v39;
  LODWORD(STACK[0xB88]) = (v39 ^ 0xD79AE95) + v37 - ((2 * ((v39 ^ 0xD79AE95) + v37)) & 0xFE180696) + 2131493707;
  LODWORD(STACK[0xB70]) = v39 ^ 0x1EED4748 ^ (v36 - 2 * (v36 & 0x1394E9FD ^ v34 & 0x20) + 328526301);
  LODWORD(STACK[0xB68]) = (v39 ^ 0xD79AE95) + v38;
  LODWORD(STACK[0xB90]) = a3;
  LODWORD(STACK[0xAD8]) = v39 ^ 0x1EED4748;
  LODWORD(STACK[0xA90]) = ((v38 + ((v35 + v36 + 99) ^ v37) - 12) ^ 0x48 ^ (a3 - 35 - ((2 * a3) & 0xBA))) & 1;
  LODWORD(STACK[0xA98]) = v39 ^ 0x1EED4748 ^ (a3 + 328526301 - ((2 * a3) & 0x2729D3BA));
  return (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8 * v15))(2319244107, 75);
}

uint64_t sub_1000967F8(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;

  v19 = *(_DWORD *)(*(_QWORD *)(v11 + 8 * (v18 - 3249))
                  + 4 * ((v8 ^ v9) ^ ((v18 ^ v12) - 2158))
                  + v13) ^ v14;
  *(_DWORD *)(a4 + 4 * v9) = v15 ^ v17 ^ v16 ^ v19 ^ (v19 >> 5) ^ (v19 >> 2) ^ a1;
  return (*(uint64_t (**)(void))(a8 + 8 * (((v10 == 0) * a2) ^ v18)))();
}

uint64_t sub_100096EC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  STACK[0xC20] = (v0 + 3052);
  v2 = ((uint64_t (*)(uint64_t))STACK[0x720])(1028);
  STACK[0x1560] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1191 * (((v2 == 0) ^ (v0 + 25)) & 1)) ^ v0)))();
}

uint64_t sub_10009733C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0xB88] = v2;
  v3[70] = 0;
  v3[67] = 0;
  v3[73] = 0;
  v3[66] = 0;
  v3[72] = 0;
  v3[74] = 0;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * a2) - 89 * (a2 ^ 0x1957u) + 2577);
  v3[69] = 0;
  LODWORD(STACK[0x163C]) = 1299428392;
  return v4(a1, 523470967, 7549, 2580, 270529498, 1203558591, 3361901528, 4959);
}

uint64_t sub_100097524(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - 4))(a1, 523470967);
}

uint64_t sub_100097620@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34)
{
  int v34;
  unint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unint64_t v56;
  BOOL v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  char v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unint64_t v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  uint64_t v169;
  unint64_t v170;

  STACK[0xB90] = v35;
  v43 = (v41 + 1586607180) & 0xA16E3FF7;
  v44 = 1103679443 * v38;
  LODWORD(STACK[0xB20]) = v43;
  v45 = (1103679443 * v38) << ((-45 * v38) & 0x10) << ((-45 * v38) & 0x10 ^ 0x10);
  v46 = ((v37 << 30) ^ 0x40000000) & 0xC0000000 | ((1146017275 * (v34 ^ v40)) >> 2);
  v47 = (1615398272 * ((v39 + v43 - 3446) ^ v36)) | ((1220579851 * ((v39 + v43 - 3446) ^ v36)) >> 25);
  v48 = (v45 ^ HIWORD(v44)) + 2 * (v45 & HIWORD(v44));
  v49 = ((-759826981 * a1) >> (v41 - 31)) | (-1095016448 * a1);
  v50 = ((v46 + 0x40000000) ^ v48 ^ v47) + v49;
  v51 = -78429867 * v50;
  v52 = (-78429867 * v50) >> 17;
  v53 = (-697776988 * v49) | ((-1248186071 * v49) >> 30);
  v54 = v53 * a34;
  HIDWORD(v56) = 778402533 * (v46 + 0x40000000);
  LODWORD(v56) = HIDWORD(v56);
  v55 = v56 >> 30;
  v50 *= -1599438848;
  v57 = v50 == 0;
  v58 = v50 & 0xFFFF8000 | (v51 >> 17);
  v59 = 1957674688 * v53;
  v60 = (((-678834566 * v47) | ((-339417283 * v47) >> 31)) ^ v55 ^ v58) + v53;
  v61 = (2139095040 * v52) | ((2121931007 * v58) >> 9);
  v62 = (-637801396 * v60) | ((-159450349 * v60) >> 30);
  v63 = (-235085173 * v62) >> 14;
  v64 = v59 & 0xFFFFFFC0 | (v54 >> 26);
  HIDWORD(v56) = (2121931007 * v58) >> 9;
  LODWORD(v56) = -1350964199 * v61;
  v65 = v56 >> 3;
  v66 = ((-1616379904 * v55) | ((-30518283 * v55) >> 13)) - v64 - v61 - v62;
  v67 = (-2143354880 * v66) | ((-926711745 * v66) >> 16);
  v68 = (-1976827904 * v62) | v63;
  v69 = ((953155584 * v64) | ((24638349 * v64) >> 12)) + v65 - v68 + v67;
  v70 = (559382791 * (v67 + ((v68 + v65) ^ 0x356C954C))) ^ v69;
  v71 = v70 + ((-1410535375 - 2 * v70) | 0x4288BFA9) - 2000345069;
  v72 = v71 ^ (v69 - ((2 * v69) & 0xBD774056) + 1589354539);
  v73 = v71 ^ (v67 - ((2 * v67) & 0xBD774056) + 1589354539);
  v74 = v68 + (v71 ^ 0xA1445FD4) + 1;
  LODWORD(STACK[0xB80]) = v71;
  LODWORD(STACK[0xB10]) = v73;
  LODWORD(STACK[0xC18]) = v74;
  v75 = ((464244039 * v74) >> (v63 & 0x16 ^ 0x16) >> (v63 & 0x16)) | (-1355473920 * v74);
  v76 = (-104 * v73) & 8;
  v77 = (1792573592 * v73) | ((-312799213 * v73) >> 29);
  v78 = ((969916416 * (v71 ^ 0x5EBBA02B)) | ((1780541247 * (v71 ^ 0x5EBBA02Bu)) >> 18)) + v75;
  LODWORD(STACK[0xBC8]) = v72;
  v79 = (336684544 * v72) | ((-527824717 * v72) >> 23);
  v80 = -805306368 * (v79 ^ v77 ^ v78) + ((1936815277 * (v79 ^ v77 ^ v78)) >> 4);
  v81 = (-453509120 * v77) | ((193690783 * v77) >> 13);
  v82 = ((-655621296 * v75) | ((-846282699 * v75) >> 28)) ^ v81 ^ v80;
  v83 = ((-634002361 * v79) >> 2) - ((-527824717 * v72) >> 23 << 30);
  v84 = (-2065563648 * v80) | ((-583384463 * v80) >> 15);
  v85 = (-516628480 * (v82 + v83 - 2 * (v82 & v83))) | ((-1242101337 * (v82 + v83 - 2 * (v82 & v83))) >> 19);
  v86 = (-293601280 * v83) | ((1311642589 * v83) >> 9);
  v87 = (v85 ^ (((2046820352 * v81) | ((-512668483 * v81) >> 7)) + v84)) - v86;
  v88 = (-1894457344 * v87) | ((1103394983 * v87) >> 19);
  v89 = (-1130093456 * v85) | ((-1681243577 * v85) >> 28);
  v90 = (377094144 * v84) | ((-843740355 * v84) >> 15);
  v91 = v89 + (v90 ^ ((-1617281024 * v86) | ((-1636663703 * v86) >> 18))) - v88;
  v92 = (__ROR4__(__ROR4__(v88 ^ (v90 - v89 - 670541867), 22) ^ 0x921BA0C, 10) ^ 0x49917FB5) - v91;
  v93 = v92 - ((2 * v92 + 1577271968) & 0x42EE34F6) - 797393973;
  v94 = v93 ^ 0x21771A7B;
  v95 = v89 - v92 + 1358847664;
  LODWORD(STACK[0xAF8]) = v93;
  v96 = v93 ^ (v91 - ((2 * v91) & 0x42EE34F6) + 561453691);
  LODWORD(STACK[0xB60]) = v95;
  LODWORD(STACK[0xB70]) = (v93 ^ 0x21771A7B) + v88;
  HIDWORD(v56) = 223378515 * v95;
  LODWORD(v56) = 223378515 * v95;
  v97 = v56 >> 30;
  LODWORD(STACK[0xB28]) = v96;
  v98 = (1414529024 * (v94 + v88)) | ((-1566075579 * (v94 + v88)) >> 12);
  v99 = (515608980 * v96) | ((1202644069 * v96) >> 30);
  v100 = (((1306263552 * v94) | ((2011009911 * v94) >> 14)) ^ v97) - (v99 + v98);
  v101 = (840492441 * v100) >> 27;
  v102 = (1125954336 * v100) | v101;
  v103 = (987234304 * v98) | ((-1210685605 * v98) >> 13);
  v104 = ((1385125376 * v97) | ((120145835 * v97) >> 23)) - v103 + v102;
  v105 = (1233313024 * v99) | ((1967751901 * v99) >> 24);
  v106 = v104 ^ v105;
  HIDWORD(v56) = v101;
  LODWORD(v56) = 125275057 * v102;
  v107 = v56 >> 3;
  v108 = (-1648230400 * v105) | ((-584167711 * v105) >> 15);
  v109 = (v107 ^ ((-1654652928 * v103) | ((1970369771 * v103) >> 11))) - v108;
  v110 = ((-125829120 * v106) | ((947112433 * v106) >> 9))
       - 2
       * (((-125829120 * v106) | ((947112433 * v106) >> 9)) & 0x3C9866B6 ^ ((947112433 * v106) >> 9) & 2)
       + 1016620724;
  v111 = v110 ^ 0x3C9866B4;
  v112 = (v110 ^ 0x3C9866B4) + v109;
  if (!v57)
    v110 ^= (v109 - ((2 * v109) & 0x7930CD68) + 1016620724) ^ 0x4367994B;
  v113 = v111 & v109;
  v114 = (-935329792 * v111) | ((1354820385 * v111) >> 10);
  v115 = ((1019681583 * v107) >> 2) - (v107 << 30);
  v116 = v112 - 2 * v113 + 2 * ((v110 ^ 0x3C9866B4) & v109);
  v117 = -1453363867 * v116;
  v118 = v115 + v114 + 1393914471;
  v119 = (2109051904 * v116) | ((-1453363867 * v116) >> 22);
  v120 = ((259358720 * v108) | ((-354672917 * v108) >> 17)) - v115 + v114 + v119;
  v121 = v120 + (v118 ^ v119 ^ 0x7E34A55E);
  v122 = (v121 ^ 0xFC059097) + 1;
  LODWORD(STACK[0xBD8]) = v121 ^ 0xC13B726;
  v123 = (v119 - 2 * (v119 & (v42 | 1) ^ (v117 >> 22) & 1) + v42) ^ v121 ^ 0xC13B726;
  LODWORD(STACK[0xBE0]) = v123;
  v124 = (1561982720 * (v122 + v114)) | ((1683823095 * (v122 + v114)) >> 24);
  LODWORD(STACK[0xB78]) = v121;
  v125 = (-1600822784 * v123) | ((97536689 * v123) >> 23);
  LODWORD(STACK[0xBC0]) = v122 + v120;
  v126 = (1467482112 * (v122 + v120)) | ((1236298479 * (v122 + v120)) >> 13);
  v127 = (v124 + 784334848 * (v121 ^ 0x3FA6F68) + ((-373652293 * (v121 ^ 0x3FA6F68)) >> 10) + v125) ^ v126;
  v128 = (691404800 * v127) | ((1536070811 * v127) >> 15);
  v129 = (1376276472 * v126) | ((-364836353 * v126) >> 29);
  v130 = (2013265920 * ((97536689 * v123) >> 23)) | ((-111024241 * v125) >> 5);
  v131 = (((((-137616511 * v124) << (v121 & 0xF ^ 8) << (v121 & 0xF ^ 7)) | ((-137616511 * v124) >> 17)) - v128) ^ v130)
       + v129;
  v132 = (-709820416 * v128) | ((258135473 * v128) >> 16);
  v133 = ((1818684517 * v131) >> v76 >> (v76 ^ 0xB)) | (-1935671296 * v131);
  v134 = ((1724904869 * v130) >> ((-113 * v129) & 0x19) >> ((-113 * v129) & 0x19 ^ 0x19)) | (1744491136 * v130);
  v135 = (959925647 * v129) >> 25;
  v136 = (-1683568768 * v129) | v135;
  v137 = 1990041081 * v136;
  v138 = (v132 ^ v134) - v133 + v136;
  v139 = (1814366720 * v132) | ((-466218363 * v132) >> 23);
  v140 = (1929379840 * v133) | ((1418341491 * v133) >> 8);
  v141 = v140 ^ v139;
  v142 = (1708916736 * v138) | ((317397367 * v138) >> 14);
  v143 = v139 + (__PAIR64__(v135, v137) >> 2) + v140 + v142;
  v144 = (v142 ^ (v141 + 1418229535) ^ 0x80E970BB)
       + v143
       - ((2 * ((v142 ^ (v141 + 1418229535) ^ 0x80E970BB) + v143) + 656419610) & 0x2CEA839E)
       - 368748708;
  v145 = v144 ^ 0x167541CF;
  v146 = v142 + (v144 ^ 0xE98ABE30) + 1;
  LODWORD(STACK[0xB30]) = v144;
  v147 = v144 ^ (v143 - ((2 * v143) & 0x2CEA839E) + 376783311);
  LODWORD(STACK[0xB38]) = v145 + v140;
  v148 = -1879048192 * (v145 + v140) + ((-630248887 * (v145 + v140)) >> 4);
  LODWORD(STACK[0xB08]) = v147;
  v149 = (1744830464 * v147) | ((-588653907 * v147) >> 5);
  LODWORD(STACK[0xB68]) = v146;
  v150 = (1038794176 * v146) | ((1962388215 * v146) >> 26);
  v151 = (((-1567651364 * v145) | ((1755570807 * v145) >> 30)) + v150 + v148) ^ v149;
  v152 = (-636838912 * v151) | ((2008449703 * v151) >> 22);
  HIDWORD(v154) = 3 * ((1962388215 * v146) >> 26);
  LODWORD(v154) = 1238111531 * v150;
  v153 = v154 >> 3;
  v155 = (-976257792 * v149) | ((-104476803 * v149) >> 24);
  v156 = v155 - 830201856 * v148 + ((-1365347295 * v148) >> 19) - v153 - v152;
  v157 = (-188471296 * v152) | ((-698443643 * v152) >> 21);
  v158 = (-1275068416 * v156) | ((1250718573 * v156) >> 6);
  v159 = (1245872128 * v155) | ((-1732471675 * v155) >> 17);
  v160 = (v157 ^ ((-587202560 * v153) | ((1426251741 * v153) >> 8))) + v159 + v158;
  v161 = (-209715200 * v157) | ((636298727 * v157) >> 9);
  v162 = (1192638120 * v158) | ((1222821589 * v158) >> 29);
  v163 = (-1090519040 * v160) | ((671939263 * v160) >> 8);
  v164 = (v163 ^ v162 ^ v161) + 2 * (v163 & (v162 ^ v161)) - 1155935499;
  v165 = (107388751 * (((2 * v164) & 0xA10488) + (v164 ^ 0x508244))) ^ v162 ^ (((-738197504 * v159) | ((2117872757 * v159) >> 6))
                                                                             - v161) ^ v163;
  v166 = v165 - ((2 * v165 + 858856878) & 0xCB5A99E0) - 12198969;
  v167 = v165 + 1705856240 - ((2 * v165 + 404) & 0xCB5A99E0) + 202;
  LODWORD(STACK[0xC20]) = v166;
  if ((v166 ^ 0x65AD4CF0) < 0xEBA9DA0D)
    v167 = v166;
  LODWORD(STACK[0xB18]) = v167;
  if ((v166 ^ 0x65AD4CF0) >= 0xEBA9DA0D)
    v168 = -341190131;
  else
    v168 = 0;
  LODWORD(STACK[0xB98]) = v168;
  v169 = ((uint64_t (*)(uint64_t))STACK[0x720])(1028);
  v170 = STACK[0xC38];
  STACK[0x1658] = v169;
  return ((uint64_t (*)(void))(*(_QWORD *)(v170 + 8 * ((236 * (v169 != 0)) ^ v41)) - 8))();
}

uint64_t sub_100098B18()
{
  int v0;
  int v1;

  v1 = ((uint64_t (*)(unint64_t, uint64_t))STACK[0x748])(STACK[0x728], 16);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((((v0 - 2949) | 0x1E0) - 660) * v1) ^ v0)) - 8))();
}

uint64_t sub_1000995E4@<X0>(_QWORD *a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v8;

  v5 = *(_QWORD *)(STACK[0xA40] + 32);
  v6 = STACK[0x1500];
  STACK[0x14B8] = STACK[0x1500];
  LODWORD(STACK[0x1258]) = a2;
  a1[80] = (char *)&STACK[0x2040] + v3;
  a1[202] = v2 + (v4 + 1909) - 3465;
  a1[212] = v5;
  v8 = a2 != ((v4 + 2515) ^ 0xF77) && v6 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((29 * v8) ^ (v4 + 3335))) - 8))();
}

uint64_t sub_1000996BC@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  uint64_t v4;

  *(_QWORD *)(a1 + 1040) = 0;
  LODWORD(STACK[0x1334]) = 933173586;
  *(_QWORD *)(v4 + 104) = 0;
  LODWORD(STACK[0x101C]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a2) - (v2 | v3) + 2150))();
}

uint64_t sub_100099ECC@<X0>(int a1@<W0>, unsigned int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  _BOOL4 v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v9 = (v8 & (2 * ((v5 << ((a5 - 75) ^ a3)) + a4))) + (((v5 << ((a5 - 75) ^ a3)) + a4) ^ v7) + a1;
  v10 = v9 < a2;
  v11 = v9 > v6;
  if (v6 < a2 != v10)
    v12 = v10;
  else
    v12 = v11;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (int)(a5 | (4 * (v12 & 0xFFFFFFFB | (4 * v12))))))();
}

uint64_t sub_10009CFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W8>)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0xC38]
                                                                                                  + 8 * (((((v8 + v7) | 0x343) ^ 0xB4C) * (((a7 | (a7 >> 4) | ((a7 | (a7 >> 4)) >> 2)) & 3) == 0)) ^ v8)))(a1, a2, a3, a4, a5, a6, 1347);
}

uint64_t sub_10009D034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)(a8 + 1616) = v8 - 144;
  v11 = STACK[0xC38];
  *(_QWORD *)(v10 + 344) = *(_QWORD *)(STACK[0xC38] + 8 * (v9 - 3721)) - 8;
  return ((uint64_t (*)(unint64_t *))(*(_QWORD *)(v11 + 8 * ((v9 - 3721) ^ 0x4CD)) - 8))(&STACK[0x12D4]);
}

uint64_t sub_10009D0E8()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;

  return ((uint64_t (*)(__n128, __n128, __n128))(*(_QWORD *)(v3 + 8 * v1) - (v1 - 551) + 2880))((__n128)vdupq_n_s32(v0 ^ LODWORD(STACK[0xBA8]) ^ LODWORD(STACK[0xBE0])), (__n128)vdupq_n_s32(LODWORD(STACK[0xBA0]) ^ LODWORD(STACK[0xBD8]) ^ v4 ^ LODWORD(STACK[0xB98])), (__n128)vdupq_n_s32(LODWORD(STACK[0xC18]) ^ LODWORD(STACK[0xBC8]) ^ v2 ^ LODWORD(STACK[0xC20])));
}

uint64_t sub_10009D150@<X0>(uint64_t a1@<X0>, int a2@<W3>, unsigned int a3@<W6>, unsigned int a4@<W7>, int a5@<W8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q1>, int8x16_t a8@<Q2>)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int8x16_t v21;
  int32x4_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int8x16_t v28;

  v19 = (v11 * a5) & (v10 - 2629);
  v20 = v13 ^ v17 ^ v12 ^ v18;
  v21.i32[0] = *(_DWORD *)(v8 + 4 * (v20 ^ v19));
  v21.i32[1] = *(_DWORD *)(v8 + 4 * (v20 ^ (((_BYTE)v9 + 122) * (_BYTE)a5) & 0xFEu));
  v21.i32[2] = *(_DWORD *)(v8 + 4 * (v20 ^ ((v9 + 123) * a5)));
  v21.i32[3] = *(_DWORD *)(v8 + 4 * (v20 ^ (((_BYTE)v9 + 124) * (_BYTE)a5) & 0xFCu));
  v22 = (int32x4_t)veorq_s8(v21, *(int8x16_t *)&STACK[0x5F0]);
  v23 = (int8x16_t)vshrq_n_u32((uint32x4_t)v21, 0x1FuLL);
  v24.i64[0] = 0x300000003;
  v24.i64[1] = 0x300000003;
  v25 = (int32x4_t)veorq_s8(veorq_s8(vorrq_s8((int8x16_t)vshlq_n_s32(v22, 3uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v21, 0x1DuLL)), vorrq_s8((int8x16_t)vshlq_u32(vshlq_u32(vshrq_n_u32((uint32x4_t)v22, 2uLL), (uint32x4_t)v23), (uint32x4_t)veorq_s8(v23, v24)), v23)), *(int8x16_t *)&STACK[0x600]);
  v26 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32(v25, 0x1DuLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v25, 3uLL)), 2uLL), a6);
  v27 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v26, (int32x4_t)vandq_s8((int8x16_t)vshlq_n_s32(v26, 1uLL), *(int8x16_t *)&STACK[0x5E0])), vdupq_n_s32(a4)), a7);
  v28 = veorq_s8(veorq_s8(veorq_s8(a8, (int8x16_t)v22), (int8x16_t)vaddq_s32(vsubq_s32(v27, (int32x4_t)vandq_s8((int8x16_t)vshlq_n_s32(v27, 1uLL), (int8x16_t)vdupq_n_s32(0xCB5A99E0))), vdupq_n_s32(v15))), (int8x16_t)vdupq_n_s32(a3));
  *(_DWORD *)(v16 + 4 * v19) = v28.i32[0];
  *(_DWORD *)(a1 + 4 * (((v9 + 122) * a5) & 0xFE)) = v28.i32[1];
  *(_DWORD *)(a1 + 4 * ((v9 + 123) * a5)) = v28.i32[2];
  *(_DWORD *)(a1 + 4 * (((v9 + 124) * a5) & 0xFC)) = v28.i32[3];
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((v9 != 252) * a2) ^ v10)) - 4))();
}

uint64_t sub_10009D398@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, int a7@<W6>, unsigned __int8 a8@<W7>, int a9@<W8>)
{
  char v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  char v18;

  v18 = (((v10 ^ a8) << 7) | ((v10 ^ a8) >> 1)) ^ v9 ^ 0x81;
  *(_DWORD *)(a1 + 4 * v10) = a7 ^ v15 ^ v17 ^ *(_DWORD *)(*(_QWORD *)(v12 + 8 * (a9 ^ v13))
                                                           + 4
                                                           * ((a6 ^ (((v18 < 0) | (2 * v18))
                                                                                    - ((((a9 - 12) | a4) ^ a5) & (2 * ((v18 < 0) | (2 * v18))))
                                                                                    + 107)) ^ 0xFDu)
                                                           + v14) ^ a2;
  return (*(uint64_t (**)(void))(v16 + 8 * (((v11 == 0) * a3) ^ a9)))();
}

uint64_t sub_10009D47C(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a2 + 8 * v2) - 8))(a1, 4294961443, -10294650, 1636891358, 818445679, 43, 101, LODWORD(STACK[0xBE0]));
}

uint64_t sub_10009D8A8(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6, int a7, unsigned int a8)
{
  int v8;
  unsigned __int8 v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;

  v22 = (v11 + a5 - (v13 & (2 * v11))) ^ v18;
  v23 = (((v22 - ((v15 + v14) & (2 * v22)) + 43) ^ v16) & a6 | v8) ^ v22 & 0xE;
  *(_DWORD *)(a1 + 4 * v9) = v19 ^ v21 ^ v20 ^ *(_DWORD *)(*(_QWORD *)(v12 + 8 * (v15 + a2)) + 4 * (v23 ^ a8) + a3) ^ v23 ^ a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((v10 == 0) * a7) ^ v15)) - 4))();
}

uint64_t sub_10009D934()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  STACK[0xB90] = (v0 + 477);
  v2 = ((uint64_t (*)(uint64_t))STACK[0x720])(1032);
  STACK[0x1630] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * (v0 - 6357)) ^ v0))
                            - ((v0 - 75) ^ 0x18EFLL)))();
}

uint64_t sub_10009DA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, unsigned int a8@<W7>, int a9@<W8>)
{
  char v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;

  *(_DWORD *)(a1 + 4 * (v10 * v9)) = v19 ^ v20 ^ v18 ^ *(_DWORD *)(*(_QWORD *)(v11 + 8 * (v15 ^ v13))
                                                                                    + 4
                                                                                    * (((v10 * v9) ^ v14) ^ a8)
                                                                                    + a2) ^ (((2
                                                                                             * ((v10 * v9) ^ v14)) ^ v17)
                                                                                           + v12) ^ a3;
  return (*(uint64_t (**)(void))(v16 + 8 * ((((((v15 + a5) | a6) ^ a7) + v10 == a9 + 256) * a4) ^ v15)))();
}

uint64_t sub_10009DB10()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (v0 + 4291);
  v3 = ((uint64_t (*)(uint64_t))STACK[0x720])(1032);
  STACK[0x1618] = v3;
  v4 = *(_QWORD *)(v1 + 8 * (v0 ^ (2 * (v3 == 0))));
  STACK[0xB90] = v2;
  return ((uint64_t (*)(void))(v4 - (((v0 + 2214) + 2073) ^ v2)))();
}

uint64_t sub_1000A017C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  LODWORD(STACK[0x1AA4]) = 158030697;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(STACK[0xC38] + 8 * a7))(a1, a2, a3, a4, a5, a6, 1347, &STACK[0xCC8]);
}

uint64_t sub_1000A03D8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  v3 = ((uint64_t (*)(uint64_t))STACK[0x720])(1032);
  STACK[0x17E8] = v3;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((v3 == 0) * (v2 ^ v1 ^ 0x388)) ^ v0)))();
}

uint64_t sub_1000A0420(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - 8))(a1, 3996, -1733414262, 3001816804, 4294961374, 211, LODWORD(STACK[0xAF0]), LODWORD(STACK[0xAE8]));
}

uint64_t sub_1000A04E8(uint64_t a1, int a2, uint64_t a3, int a4, int a5, unsigned int a6, int a7, int a8)
{
  unsigned __int8 v8;
  int v9;
  unsigned __int8 v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v17 = *(_DWORD *)(*(_QWORD *)(v11 + 8 * (v16 ^ a2)) + 4 * (v10 ^ a6) + a3) ^ v14 ^ (v15
                                                                                        + (v10 ^ a4)
                                                                                        + (v10 ^ 7)
                                                                                        + a5);
  *(_DWORD *)(a1 + 4 * v8) = a7 ^ (v17 + a8 - 2 * (v17 & a8)) ^ v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v9 == 0) * v13) ^ v16)) - 8))();
}

uint64_t sub_1000A0C74@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1 ^ 0x93;
  v4 = a1 | 0xAu;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x720])(1032);
  *(_QWORD *)(v2 + 1056) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7179 * (((v5 == 0) ^ v3) & 1)) ^ v1)) - v4 + 2026))();
}

uint64_t sub_1000A36CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(int8x16_t *)(v1 + v4) = veorq_s8(*(int8x16_t *)(a1 + v2), *(int8x16_t *)&STACK[0x350]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v3) - ((v3 + 1677363842) & 0x9C0563F7 ^ 0x22DLL)))();
}

uint64_t sub_1000A3764()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 4))();
}

uint64_t sub_1000A3788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  BOOL v3;
  int v4;

  if (a1)
    v3 = a2 == 0;
  else
    v3 = 1;
  v4 = v3;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((v4 * (65 * (v2 ^ 0xACC) + 37 * (v2 ^ 0xA8C) - 6742)) ^ v2)))();
}

uint64_t sub_1000A3860@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((((v3 - 1262) ^ 0x80D) * (a2 + v2 > a1)) ^ v3)) - 8))();
}

uint64_t sub_1000A3994(uint64_t a1)
{
  int v1;
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0xC38]
                                                              + 8
                                                              * ((19 * (v1 - 1021881692 + (v3 ^ v2) >= v3 - 5053)) ^ v3))
                                                  - 8))(a1, (v3 - 1102));
}

uint64_t sub_1000A3A8C(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * ((14 * (((v3 < 0x20) ^ ((a3 - 123) ^ a3)) & 1)) ^ a3)))();
}

uint64_t sub_1000A3B04@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v11 = (v4 - v6 + v8);
  v12 = a4 + (v11 + v5);
  v13 = *(_OWORD *)(v12 - 31);
  v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((((a3 ^ v9) + v6 == v7) * v10) ^ a2)) - 8))();
}

uint64_t sub_1000A3C60(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  unsigned __int8 v5;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((55 * (((v4 == a3) ^ v5) & 1)) ^ v3)))();
}

uint64_t sub_1000A44E8(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (a1 - 2134)) - 8))();
}

uint64_t sub_1000A4638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unint64_t v29;

  v29 = STACK[0xC38];
  STACK[0xC20] = *(_QWORD *)(STACK[0xC38] + 8 * a29);
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * (a29 ^ 0x5E4))
                            - (((_DWORD)a29 - 1840877884) & 0x6DB99F77 ^ 0xF7FLL)))();
}

uint64_t sub_1000A7184()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x720])(1028);
  STACK[0x15C0] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((107 * (v0 ^ 0x8B5) - 3935) | 0x684) + 5258) * (v2 != 0)) ^ v0)))();
}

uint64_t sub_1000A741C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 + 817)) - 4))(61, 148, 46, 5117, -395975279, 307516292, 2197, 1918412582);
}

uint64_t sub_1000A7534@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, char a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;

  v19 = v9 + 2 * v11;
  v20 = *(_DWORD *)(*(_QWORD *)(v12 + 8 * (a9 ^ a4)) + 4 * ((v19 ^ v13) & a1 ^ ((v19 ^ v13) & 0xFE | a1) ^ a2) + a5) ^ a6;
  *(_DWORD *)(v16 + 4 * v19) = v14 ^ v15 ^ v18 ^ v20 ^ (v20 << ((a9 + 10) ^ a7)) ^ a8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((v10 != 0) * a3) ^ a9)) - 4))();
}

uint64_t sub_1000A7600()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 8 * v0) - 4))(4, 1487555971, 1512846141, 2782121535, 252, 1037, -627228255, LODWORD(STACK[0xB20]));
}

uint64_t sub_1000A789C@<X0>(int a1@<W0>, unsigned __int8 a2@<W2>, uint64_t a3@<X3>, int a4@<W4>, int a5@<W5>, char a6@<W6>, int a7@<W7>, unsigned int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  char v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  *(_DWORD *)(v15 + 4 * v9) = a7 ^ v14 ^ v16 ^ *(_DWORD *)(*(_QWORD *)(v11 + 8 * (int)(a8 - 2043))
                                                                            + 4
                                                                            * ((((v8 ^ v9 ^ a2)
                                                                                                - ((((v8 ^ v9) ^ a2) & 0x3F ^ (v8 ^ v9) & a1) << (v13 + 113))
                                                                                                - 82) ^ a6) ^ v12)
                                                                            + a3) ^ a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((v10 == 0) * a5) ^ a8)) - 8))();
}

uint64_t sub_1000A7AFC()
{
  int v0;
  uint64_t v1;
  unsigned int v2;

  STACK[0xC18] = STACK[0x15D0];
  LODWORD(STACK[0x990]) = -285021604 - LODWORD(STACK[0xA88]);
  LODWORD(STACK[0x988]) = (v2 >> ((71 * (v0 ^ 0x3A)) ^ 0x10)) | (943718400 * LODWORD(STACK[0xA90]));
  LODWORD(STACK[0x980]) = LODWORD(STACK[0x1EA4]) + 67688579;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * v0))(26, 194, 793818552, 396909276, 4294967256, 4294967227, 1721193687, 119);
}

uint64_t sub_1000AA030()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 1616) = v0 - 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((5949 * v1) ^ v2))
                            - ((v2 ^ 0xB40u)
                             + (v4 ^ 0xFFFFFFFFFFFFFC9ELL))))();
}

uint64_t sub_1000AA2B4()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (((((v1 ^ 0x1403) + 3900) ^ (71 * (v1 ^ 0x1403)) ^ 0x1F4E) * (v0 < 8)) ^ v1))
                            - 8))();
}

uint64_t sub_1000AA40C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((1225 * (((v1 == v0) ^ (v2 - 1)) & 1)) ^ v2))
                            - 4))();
}

uint64_t sub_1000AA4BC(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v1)
                                                                                       - 8))(a1, 2005, -2428, 0xA352FED080914995, 7234);
}

uint64_t sub_1000AA540()
{
  char v0;
  int v1;
  unsigned __int8 v2;
  char v3;

  if (v0)
    v3 = 1;
  else
    v3 = 0;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((((v3 ^ v2) & 1) * (v1 - 1856)) ^ v1)))();
}

uint64_t sub_1000AA8F8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 2461)) - 4))();
}

uint64_t sub_1000AA9B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  char *v5;

  v5 = (char *)&STACK[0x2040] + v4;
  STACK[0x13A0] = (unint64_t)v5;
  STACK[0x1178] = (unint64_t)(v5 + 100);
  STACK[0x12F8] = (unint64_t)(v5 + 160);
  STACK[0x1318] = v1 + 7 * (v3 ^ v2) - 1723;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v3 ^ (2660 * (a1 != 0x5CAD012F7F6EB6A0)))))();
}

uint64_t sub_1000AAA28@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * ((2164
                                * (((*(_QWORD *)(a1 - 0x5CAD012F7F6EB6A0) == 0x631F30597EADA3F0) ^ ((v1 ^ 0x2D) - 28)) & 1)) ^ v1)))();
}

uint64_t sub_1000AAA88()
{
  int v0;

  LODWORD(STACK[0x1194]) = 488179787;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 938)) - 8))();
}

uint64_t sub_1000AAC30@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  BOOL v5;

  v5 = ((unsigned int (*)(uint64_t, uint64_t, _QWORD, uint64_t))STACK[0x308])(v2, a2 + v4, (a1 + 1), 134217984) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((82 * ((v5 ^ (v3 - 67)) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_1000AB0CC()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x1260];
  STACK[0x1FE0] = STACK[0x1260];
  STACK[0x1FE8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 8))();
}

uint64_t sub_1000AB4FC()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BOOL4 v10;
  _BOOL4 v12;
  int v13;
  _BOOL4 v15;

  v5 = v3 ^ v2;
  v6 = (v5 + 3922);
  v7 = (107 * v5);
  v8 = *(_QWORD *)(v4 + 736) + v1;
  v10 = STACK[0x3D8] + v1 > v0 && v8 > STACK[0x3D8];
  v12 = STACK[0x3E8] + v1 > v0 && v8 > STACK[0x3E8];
  v13 = v10 || v12;
  v15 = STACK[0x3E0] + v1 > v0 && v8 > STACK[0x3E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7255 * ((v15 | v13) ^ 1)) ^ v3))
                            - v7
                            - (v6 ^ 0xFFFFFFFFFFFFFFFALL)))();
}

uint64_t sub_1000AB9F8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 8))();
}

uint64_t sub_1000ABB28@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(uint64_t, unint64_t *, uint64_t, uint64_t);
  uint64_t v2;
  int v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = a1 | 0x572u;
  *v4 = 488179807;
  v6 = v1(v2, &STACK[0x4C78], 8, -1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v3) - v5 + 3951))(v6);
}

uint64_t sub_1000ABF28()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v2 = STACK[0xC98];
  v3 = v1 - 232;
  *(_DWORD *)(v3 + 12) = (v0 + 387) ^ (1716948049
                                     * ((-1732150277 - ((v1 - 232) | 0x98C17BFB) + ((v1 - 232) | 0x673E8404)) ^ 0x4C26C789));
  *(_QWORD *)v3 = v2;
  v4 = sub_10006C0C8(v1 - 232);
  v5 = *(_DWORD *)(v1 - 224);
  LODWORD(STACK[0x1148]) = v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                      + 8 * ((v5 != 1047013709) | (8 * (v5 != 1047013709)) | v0))
                                          - ((v0 + 1367) ^ v0 ^ 0x7F7u ^ 0x2A4)))(v4);
}

uint64_t sub_1000AC710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0xFA8]) = v6;
  v9 = *(_QWORD *)(*(_QWORD *)STACK[0xC20] - 0x631F30597EADA3E8);
  LOBYTE(STACK[0x2028]) = HIBYTE(v9);
  LOBYTE(STACK[0x2029]) = BYTE6(v9) ^ 0x7B;
  LOBYTE(STACK[0x202A]) = BYTE5(v9) ^ (((v7 + 90) & 0xCD) - 66);
  LOBYTE(STACK[0x202B]) = BYTE4(v9) ^ 0xFA;
  LOBYTE(STACK[0x202C]) = BYTE3(v9) ^ 0xAD;
  LOBYTE(STACK[0x202D]) = BYTE2(v9) ^ 0x82;
  LOBYTE(STACK[0x202E]) = BYTE1(v9) ^ 0xF5;
  LOBYTE(STACK[0x202F]) = v9 ^ 5;
  STACK[0x1660] = *(_QWORD *)(v8 + 8 * v7) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v7 ^ 0x731))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 1347);
}

uint64_t sub_1000AC80C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - ((v0 + 38) ^ 0x523)))();
}

uint64_t sub_1000AC950(int a1)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((a1 ^ 0x1721) * (v1 == 626283436)) ^ a1))
                            - ((a1 + 283640064) & 0xEF17FC7D)
                            + 5217))();
}

uint64_t sub_1000ACA14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (v4 ^ (46 * (v2 + a1 - a2 - (unint64_t)(v3 + a1) > 0x1F))))
                            - (((v4 + 1096) | 0x123u) ^ 0xF7FLL)))();
}

uint64_t sub_1000AD220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;

  v4[85] = 0;
  v4[80] = 0;
  v4[82] = 0;
  v4[78] = 0;
  v4[83] = 0;
  v4[84] = 0;
  LODWORD(STACK[0x166C]) = -722238462;
  v4[86] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0xC38] + 8 * v3))(a1, a2, a3, 3393927830, 2421605563, 2155120008, 600000602, 781197611);
}

uint64_t sub_1000AEACC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  char v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)(v5 + 4 * v6) = a1 ^ a3 ^ a2 ^ *(_DWORD *)(*(_QWORD *)(v8 + 8 * (a4 - 1677))
                                                        + 4 * ((v4 ^ v6) ^ 0xA4u)
                                                        - 354654870) ^ (v4 ^ v6) ^ 0xAA725BC2;
  return (*(uint64_t (**)(void))(v9 + 8 * ((407 * (a4 != v7)) ^ a4)))();
}

uint64_t sub_1000AF200(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v2 + 8 * v1) - 4))(a1, LODWORD(STACK[0xAC0]));
}

uint64_t sub_1000AF340@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = v1 ^ a1;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x720])(1032);
  STACK[0x1670] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((6833 * (((v4 == 0) ^ (v3 + 29)) & 1)) ^ v3))
                            - ((v3 + 1392161045) & 0xAD054FF3)
                            + 2907))();
}

uint64_t sub_1000AF5B0@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  char v23;
  _BOOL4 v24;

  v16 = v2 + v6;
  if (v1)
    v17 = 0;
  else
    v17 = 1;
  v18 = (_BYTE *)(v16 - 0x631F30597EADA3D4);
  v19 = ((*(_DWORD *)(*v3 + (*v12 & v10)) ^ (v16 - 2125308884)) & (((v5 - 559) | 0x89) + 2147483174)) * v11;
  v20 = (v19 ^ HIWORD(v19)) * v11;
  v21 = v6 + v4;
  v22 = v6 + 1;
  v23 = *(_BYTE *)(v14 + (v20 >> 24)) ^ *v18 ^ *(_BYTE *)((v20 >> 24) + v15 + 2) ^ *(_BYTE *)((v20 >> 24) + v9 + 1) ^ v20 ^ (-9 * BYTE3(v20));
  if (v17 != v22 > 0xDD736742)
    v24 = v17;
  else
    v24 = v22 + v8 < v7;
  *(_BYTE *)(a1 + v21) = v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((3446 * v24) ^ v5)) - 4))();
}

uint64_t sub_1000AF7EC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  char v10;

  STACK[0xF08] = 0;
  LODWORD(STACK[0x147C]) = 117906429;
  v2 = *(_QWORD *)(STACK[0xC98] - 0x5CAD012F7F6EB690);
  v3 = STACK[0xDC8];
  v4 = STACK[0xEB8];
  v5 = v1[6];
  v6 = v1[42];
  STACK[0x808] = v6;
  v1[42] = v6 + 10864;
  v1[87] = 0;
  LODWORD(STACK[0x16C4]) = 269771785;
  STACK[0xAB8] = v2;
  STACK[0x8A8] = v3;
  if (v2)
    v7 = v3 == 0;
  else
    v7 = 1;
  STACK[0xB30] = v4;
  v8 = v7 || v4 == 0;
  STACK[0x7D0] = v5;
  v10 = v8 || v5 == 0;
  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * ((7 * (((a1 - 70) ^ v10) & 1)) ^ a1)))();
}

uint64_t sub_1000AF8B8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v3 = a1 - 5798;
  v4 = a1 - 6719;
  v6 = v2 != 933173586 && v1 != 752442147;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v4 ^ 0x12A) * v6) ^ v3)) - 4))();
}

uint64_t sub_1000B66E0@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int8x16_t *v4;

  *(int8x16_t *)(v2 + a1) = veorq_s8(*v4, (int8x16_t)xmmword_100212DA0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v3) - v1 + 4329))();
}

uint64_t sub_1000B6D74@<X0>(unsigned int a1@<W1>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((1958 * (a1 <= (v2 ^ 0x14C5 ^ a2 ^ 0xFFFFEB12))) ^ v2))
                            - 4))();
}

uint64_t sub_1000B6EE0@<X0>(int a1@<W8>)
{
  _BYTE *v1;

  *v1 = -46;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a1) - 8))();
}

uint64_t sub_1000B6FEC@<X0>(unsigned int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (((((683 * (v1 ^ 0xF70)) ^ 0x1756) - 1417) * (a1 < 0x21)) ^ (683 * (v1 ^ 0xF70))))
                            - 2 * ((683 * (v1 ^ 0xF70)) ^ 0x1756u)
                            + 3058))();
}

uint64_t sub_1000B71D0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (a3 ^ (575 * (v3 == v4))))
                            - (((a3 - 1171) | 0xAu) ^ 0x887)))();
}

uint64_t sub_1000B7210@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - 8))();
}

uint64_t sub_1000B73A0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (a1 - 4061)))();
}

uint64_t sub_1000BB5D8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  char v7;

  if (a2)
    v5 = v2 == 0;
  else
    v5 = 1;
  v7 = v5 || v3 == a1 + ((v4 - 2158) ^ 0x366) + 1091;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((238 * (((v4 - 110) ^ v7) & 1)) ^ v4))
                            - 8))();
}

uint64_t sub_1000BB728(int a1)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (a1 ^ (118 * (v1 == 1322897954)))))();
}

uint64_t sub_1000BB780@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;

  v8 = v4 < v5;
  *(_BYTE *)(v2 + v7 + v6) = *(_BYTE *)(a2 + v7);
  if (v8 == ((v3 + 1900175814) & 0x8EBD9FF7 ^ 0xF76) + v7 > 0x87FAF64A)
    v8 = a1 + v7 + 1 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7768 * v8) ^ v3)) - 8))();
}

uint64_t sub_1000BBAF4(uint64_t a1, int a2)
{
  int v2;
  int v3;
  unsigned int v4;

  return (*(uint64_t (**)(_QWORD))(STACK[0xC38]
                                           + 8
                                           * (int)(((((v2 == a2) ^ (37 * ((v3 | v4) ^ 0x2F))) & 1)
                                                  * ((v3 | v4) - 3436)) ^ (v3 | v4))))((v3 | v4) - 461);
}

uint64_t sub_1000BBB34(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (a1 + 220)) - 4))();
}

uint64_t sub_1000BBB88@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;

  *v1 = v2;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * a1))();
}

uint64_t sub_1000BBD28@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0xC38];
  STACK[0x1740] = *(_QWORD *)(STACK[0xC38] + 8 * v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((int)v1 + 2067)) - ((a1 | 0x81u) ^ 0x8D1)))();
}

uint64_t sub_1000BBE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;

  v10 = *(_DWORD *)(*(_QWORD *)(a8 + 1368) - 0x631F30597EADA3F0);
  LODWORD(STACK[0x125C]) += LODWORD(STACK[0x1120]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((6887 * (v10 - 385940490 < (v8 - 1014))) ^ (v9 - 3247)))
                            - 8))();
}

uint64_t sub_1000BBECC@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  int v3;

  v3 = *(_DWORD *)(a1 - 0x631F30597EADA34CLL);
  LOBYTE(STACK[0x13FB]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((59 * (((v2 ^ v1) ^ (v3 == 933173586)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_1000BC264@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((8165 * (*(_QWORD *)(a1 - 0x631F30597EADA360) != 0)) ^ v1)))();
}

_QWORD *sub_1000BC370()
{
  int v0;

  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 2981)) - 4))(&STACK[0x1190]);
}

uint64_t sub_1000BC5AC@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a1) - ((v1 | v2) ^ 0x1B0DLL)))();
}

_QWORD *sub_1000BCAEC@<X0>(int a1@<W8>)
{
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(STACK[0xC38] + 8 * ((a1 | 0x24) + 798))
                                                                 - 4))(&STACK[0x11CC]);
}

uint64_t sub_1000BCF54()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 + 827)) - 4))();
}

_QWORD *sub_1000BD51C()
{
  int v0;

  STACK[0x1838] = STACK[0x1BE8] - 0x631F30597EADA3D8;
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 + 790)) - 4))(&STACK[0x11EC]);
}

uint64_t sub_1000BE120@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - 8))();
}

uint64_t sub_1000BE12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 336) = *(_QWORD *)(v7 + 336) + ((v6 + 362) | 0xC41u) - 14823;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v6)
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 1347);
}

uint64_t sub_1000BE70C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0xC38];
  STACK[0x11B0] = *(_QWORD *)(STACK[0xC38] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 | 0x440) ^ 0x14) + (int)v1)) - 8))();
}

uint64_t sub_1000BE88C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 3323)) - 8))();
}

uint64_t sub_1000BE91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t v9;

  v9 = STACK[0xC38];
  *(_QWORD *)(a8 + 1256) = *(_QWORD *)(STACK[0xC38] + 8 * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((int)v8 + 1245)) - 8))();
}

uint64_t sub_1000BEF80@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(a1 + 64) + 16) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a2) - ((a2 + v2) & 0x18A40FF7 ^ 0xF73)))();
}

uint64_t sub_1000BF1E4@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v5 = ((2 * (v4 + 2 * v1)) & 0xFF3D777E) + ((v4 + 2 * v1) ^ (((a1 + 613470674) & 0xDB6F397F) - 6380979)) + 330175611;
  v6 = v5 < v3;
  v7 = v5 > v2;
  if (v2 < v3 != v6)
    v8 = v6;
  else
    v8 = v7;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((5799 * v8) ^ a1)))();
}

uint64_t sub_1000BF274()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0xD44]) = v0;
  v4 = ((uint64_t (*)(_QWORD))STACK[0x838])(((v2 - 2555) ^ 0x614B36u) + v1);
  *(_QWORD *)(v3 + 1504) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((876 * (v4 == 0)) ^ v2)) - ((v2 - 6476) | 0x49u) + 103))();
}

uint64_t sub_1000BF4A0(int a1)
{
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (((((v1 < 8) ^ ((a1 ^ v2) - 38)) & 1) * ((a1 ^ v2) - 6754)) ^ a1 ^ v2))
                            - 8))();
}

uint64_t sub_1000BF5B4(__int128 *a1, _OWORD *a2, uint64_t a3, int a4)
{
  int v4;
  __int128 v5;

  v5 = *a1;
  *(a2 - 1) = *(a1 - 1);
  *a2 = v5;
  return ((uint64_t (*)(__int128 *, _OWORD *, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                            + 8 * ((329 * (a3 == 0)) ^ v4))
                                                                - (3 * a4)
                                                                + 1963))(a1 + 2, a2 + 2, a3 - 32);
}

uint64_t sub_1000BFC00()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 1736) = v0;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v1 + 4726)))();
}

uint64_t sub_1000C01E0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v3 - 1;
  *(_BYTE *)(v1 + v5) = *(_BYTE *)(v2 + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7750 * (v5 != 0)) ^ (a1 - 1776))) - (v4 ^ 0x9F8)))();
}

uint64_t sub_1000C0284@<X0>(uint64_t a1@<X7>, unsigned int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(a1 + 64) + 16) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a2) - (v2 | 0x612u) + 3951))();
}

uint64_t sub_1000C05F0()
{
  int v0;

  LODWORD(STACK[0xE8C]) = 968915258;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 2515)) - 4))();
}

uint64_t sub_1000C07F8(int a1)
{
  char v1;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * ((6038 * ((((v1 & 0x18) == 0) ^ (a1 ^ (a1 + 43))) & 1)) ^ a1)))();
}

uint64_t sub_1000C0830()
{
  int v0;
  int v1;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - 4))(v0 & 0xFFFFFFF8);
}

uint64_t sub_1000C08F0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 1998)) - 8))();
}

uint64_t sub_1000C093C@<X0>(_DWORD *a1@<X8>)
{
  int v1;
  int v2;

  *a1 += v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v2) - (v2 + 1801) + 3955))();
}

uint64_t sub_1000C0964()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v1 ^ (v0 != v2)))
                            - ((53 * (v1 ^ 0x5B7) - 4491) | 0x68u)
                            + 2548))();
}

uint64_t sub_1000C0C50()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 1190)) - 8))();
}

uint64_t sub_1000C0C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_BYTE *)(v0 + v3) = *(_BYTE *)(v1 + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((4069 * (v3 + 1 != v2)) ^ (v4 - 2627))) - 8))();
}

uint64_t sub_1000C0CB0@<X0>(_DWORD *a1@<X8>)
{
  int v1;
  int v2;

  *a1 += v1 - 62865832 + ((v2 + 709531003) & 0xD5B56FFF);
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v2))();
}

uint64_t sub_1000C10AC()
{
  int v0;
  int v1;

  LODWORD(STACK[0x1074]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - 4))();
}

uint64_t sub_1000C11E8()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((3248 * (v2 == (v1 ^ 0x39C13E77))) ^ (v0 - 3499))) - 4))();
}

uint64_t sub_1000C1224@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  _DWORD *v4;
  uint64_t v5;

  v2 = 37 * (a1 ^ 0x1718);
  v3 = STACK[0x1074];
  v4 = (_DWORD *)(STACK[0xC98] - 0x5CAD012F7F6EB688);
  STACK[0xD98] = (unint64_t)v4;
  LODWORD(STACK[0x1310]) = v3 + *v4 + LODWORD(STACK[0x1310]) - 1685615669;
  v5 = ((uint64_t (*)(void))STACK[0x838])();
  STACK[0x12F0] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v5 == 0) * (v2 ^ 0xF94)) ^ v1)) - 8))();
}

uint64_t sub_1000C12F0()
{
  int v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * (((v2 != 968960260 || LODWORD(STACK[0xFAC]) != LODWORD(STACK[0x1310])) * (v1 - 3836)) ^ v0)))();
}

uint64_t sub_1000C1358(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * (int)(((((v1 + 787918909) & 0xD1094FFF) + ((v1 - 1014) | 0x433) - 2524) * (a1 != 0)) ^ v1)))();
}

uint64_t sub_1000C13AC()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  STACK[0x12F0] = 0;
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38] + 8 * (v0 - 61)))(v1);
}

uint64_t sub_1000C15DC@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * ((470 * ((v1 ^ (((a1 ^ 0x5567) & *(unsigned __int16 *)(v3 + 34)) == 0)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_1000C1ACC()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((7825 * (*(_QWORD *)(v0 - 0x5CAD012F7F6EB690) != 0)) ^ (v1 - 2200)))
                            - ((v1 - 1633) ^ 0x91ELL)))();
}

uint64_t sub_1000C1B20()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = v0 | v1;
  v5 = ((*(_DWORD *)(v2 - 0x5CAD012F7F6EB698) - 933173586)
      + 0x79C9ABFAAA557FEBLL
      - ((((v4 + 332) ^ 0x9A8u) + 0x154AAF05FLL) & (2
                                                  * (*(_DWORD *)(v2 - 0x5CAD012F7F6EB698) - 933173586)))) ^ 0x79C9ABFAAA557FEBLL;
  *(_QWORD *)(v3 + 960) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((5763 * (v5 != 0)) ^ v4)) - 4))();
}

uint64_t sub_1000C1BB8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 4))();
}

uint64_t sub_1000C2020()
{
  int v0;
  int v1;

  LODWORD(STACK[0xE88]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 ^ 0x4F5)) - ((227 * (v0 ^ 0x23u)) ^ 0x63DLL)))();
}

_QWORD *sub_1000C206C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((_QWORD *(*)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * (v7 ^ 0x3FD)) - 8))(&STACK[0x14D4], a1, a2, a3, a4, a5, a6, a7, &STACK[0xCC8]);
}

uint64_t sub_1000C20FC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  STACK[0x11C0] = 0xAC832E058CB46320;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v1 ^ 0x51A) * (v2 == 0x5CAD012F7F6EB6A0)) ^ a1))
                            - (v1 | 0xA63u)
                            + 3951))();
}

uint64_t sub_1000C2250@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  BOOL v4;
  char v6;

  if (a1)
    v4 = v1 == 0;
  else
    v4 = 1;
  v6 = v4 || v3 == 1091332909;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((((v2 ^ v6) & 1) * (v2 - 1232)) ^ v2))
                            - 8))();
}

uint64_t sub_1000C2348@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v4 ^ (106 * (a1 <= v1 + v2))))
                            - ((535 * (v4 ^ v3) + 2908) ^ (v4 + 4153))))();
}

uint64_t sub_1000C277C(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (a2 - 1254)) - 8))();
}

uint64_t sub_1000C2810@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (a1 ^ (v2 * v1))) - STACK[0x268] + 100))();
}

uint64_t sub_1000C2AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int *v10;
  int v11;

  if (v8)
    v11 = 1641849875;
  else
    v11 = *v10 + 1;
  *v10 = v11;
  *(_QWORD *)(a8 + 1616) -= 16;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v9 - 397)))();
}

uint64_t sub_1000C2EFC@<X0>(_DWORD *a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  *a1 ^= v1;
  return (*(uint64_t (**)(void))(v4 + 8 * (v2 ^ (563 * (v3 == 1)))))();
}

uint64_t sub_1000C2F3C()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;

  v9 = 4 * v5;
  v10 = *(_DWORD *)(v4 + 4 * (v5 - 1));
  v11 = ((v10 >> 30) + v1 - 2 * (v10 >> 30)) ^ v10;
  v12 = (*(_DWORD *)(v2 + 4 * v3) ^ v1) + v3 + ((v1 + 1664525 * v11 - ((3329050 * v11) & v0)) ^ *(_DWORD *)(v4 + v9));
  *(_DWORD *)(v4 + v9) = v12 + v1 - (v0 & (2 * v12));
  v13 = v8 - 232;
  *(_QWORD *)(v13 + 16) = STACK[0xBE8];
  v14 = STACK[0xC10];
  v15 = v6 + 769320789 - STACK[0xC10] - 278;
  LODWORD(v9) = ((v6 + 769320789) ^ 0xF0) + STACK[0xC10];
  *(_DWORD *)(v13 + 36) = (v6 + 769320789) ^ STACK[0xC10];
  *(_DWORD *)(v13 + 40) = v9;
  *(_QWORD *)v13 = (v5 + 1) ^ v14;
  *(_DWORD *)(v13 + 24) = v14 + 1891313457 + v6;
  *(_DWORD *)(v13 + 28) = 1 - v14;
  *(_DWORD *)(v13 + 32) = v15;
  v16 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540 + (v6 ^ 0xE85)) - 67507522))(v8 - 232);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * *(int *)(v8 - 224)) - 4))(v16);
}

uint64_t sub_1000C3128()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = 4 * v4;
  v8 = *(_DWORD *)(v3 + 4 * (v4 - 1));
  v9 = ((v8 >> 30) + v2 - 2 * (v8 >> 30)) ^ v8;
  v10 = ((v2 + 1566083941 * v9 - ((984684234 * v9) & v1)) ^ *(_DWORD *)(v3 + v7)) - v4;
  *(_DWORD *)(v3 + v7) = v10 + v2 - (v1 & (2 * v10));
  v11 = STACK[0xBF0];
  v12 = v6 - 232;
  *(_QWORD *)(v12 + 24) = STACK[0xBF0] ^ 0x26F;
  LODWORD(v7) = LODWORD(STACK[0xBFC]) ^ v11;
  *(_DWORD *)(v12 + 16) = v7;
  *(_DWORD *)(v12 + 32) = LODWORD(STACK[0xBF8]) + v11;
  *(_QWORD *)(v12 + 8) = v4 + 1 + v11;
  *(_DWORD *)v12 = v11;
  *(_DWORD *)(v12 + 4) = 322641985 - v11 + v0;
  *(_DWORD *)(v12 + 40) = v7 ^ 0x36F;
  v13 = ((uint64_t (*)(uint64_t))STACK[0xC20])(v6 - 232);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * *(int *)(v6 - 196)) - 8))(v13);
}

uint64_t sub_1000C3204@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;

  *v2 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * a1) - 8))();
}

uint64_t sub_1000C3218()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = v0 - 2512;
  *v1 = -1194689725;
  v4 = sub_1000035BC();
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * v3))(v4);
}

uint64_t sub_1000C364C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * a7) - 8))(a1, a2, a3, a4, a5, a6, 1347, &STACK[0xCC8]);
}

uint64_t sub_1000C373C@<X0>(uint64_t a1@<X7>, unsigned int a2@<W8>)
{
  unsigned int v2;

  LODWORD(STACK[0x11A0]) ^= *(_DWORD *)(*(_QWORD *)(a1 + 96) + 4 * v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a2) - 8))();
}

uint64_t sub_1000C3B48@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (((*(_QWORD *)(v2 - 0x631F30597EADA360) == 0) * (v1 - 3946)) ^ (v1 - 2803)))
                            - ((a1 | 2u) ^ 0x102ELL)))();
}

uint64_t sub_1000C3F54()
{
  int v0;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 1961)) - 4))(0);
}

uint64_t sub_1000C44C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * a7) - 4))(a1, a2, a3, a4, a5, a6, 1347, &STACK[0xCC8]);
}

uint64_t sub_1000C46E4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  LOBYTE(STACK[0x127F]) = 0;
  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * ((2093 * (*(_DWORD *)(a1 - 0x631F30597EADA34CLL) != v2 + 933173419)) ^ v1)))();
}

uint64_t sub_1000C4734()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 - 232;
  *(_DWORD *)(v2 + 12) = (v0 - 3643) ^ (1716948049
                                      * ((-1051125204 - ((v1 - 232) | 0xC1591A2C) + ((v1 - 232) | 0x3EA6E5D3)) ^ 0x15BEA65E));
  *(_QWORD *)v2 = &STACK[0x127F];
  sub_10018A80C(v1 - 232);
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v0))();
}

uint64_t sub_1000C4B28@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  LODWORD(STACK[0xE8C]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - ((v1 + a1) & 0x55B44F7F) + 3955))();
}

uint64_t sub_1000C4B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  *(_QWORD *)(a8 + 1616) = v9;
  LODWORD(STACK[0x1144]) = 968915258;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v8) - ((37 * (v8 ^ 0x4F4u)) ^ 0xF73)))();
}

uint64_t sub_1000C4F74()
{
  int v0;

  LODWORD(STACK[0x18B0]) = 158075700;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 + v0 + 5352 - 4773)) - 8))();
}

uint64_t sub_1000C5964(uint64_t a1, uint64_t a2)
{
  char v2;
  int v3;
  uint64_t v4;
  char v5;

  if (v2)
    v5 = 1;
  else
    v5 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                        + 8
                                                                        * ((((v5 ^ v3 ^ 3) & 1)
                                                                          * ((17 * (v3 ^ 0x961)) ^ 0x17B0)) ^ v3))
                                                            - 8))(a1, a2, v4);
}

uint64_t sub_1000C59BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                        + 8 * (v3 ^ ((a3 == 0) | (2 * (a3 == 0)))))
                                                            - (((v3 - 45) | 0xC3u)
                                                             + 3452)
                                                            + 5687))(a1, a2, v4);
}

uint64_t sub_1000C5A14@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  _DWORD *v3;
  unsigned int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = v2 + *v3 + ((37 * (v1 ^ a1) - 2079809404) & 0x7BF756ED) - 46172914;
  v5 = *(_DWORD *)STACK[0xC20] + 533547710;
  v6 = v4 < 0x7757F679;
  v7 = v4 > v5;
  if (v5 < 0x7757F679 != v6)
    v7 = v6;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (int)((v7 & 0xFFFFFFEF | (16 * v7)) ^ v1)))();
}

uint64_t sub_1000C5AA4@<X0>(unint64_t a1@<X1>, unint64_t a2@<X5>, int a3@<W8>)
{
  STACK[0xB20] = a2;
  STACK[0xB28] = a1;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (a3 + 1234)))();
}

uint64_t sub_1000C5ADC@<X0>(char a1@<W8>)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  v6 = (((v4 + 2 * v5) << ((a1 - 120) ^ 0xFE)) & 0xAFFF7F76) + ((v4 + 2 * v5) ^ 0x57FFBFBB);
  if (v2 < v3 != v6 - 540180588 < v3)
    v7 = v6 - 540180588 < v3;
  else
    v7 = v6 - 540180588 > v2;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((500 * v7) ^ v1)))();
}

uint64_t sub_1000C5B5C()
{
  int v0;
  int v1;
  _BOOL4 v2;

  v2 = ((uint64_t (*)(_QWORD))STACK[0x838])((v0 - 1476378555)) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((((v1 ^ 0xF91 ^ v2) & 1) == 0) * (v1 ^ 0x845)) ^ v1))
                            - 4))();
}

uint64_t sub_1000C6004()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v0))();
}

uint64_t sub_1000C602C@<X0>(unint64_t a1@<X1>, int a2@<W2>, unint64_t a3@<X5>, int a4@<W7>, int a5@<W8>)
{
  unint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  int v10;
  uint64_t (*v11)(void);

  STACK[0x1AE0] = STACK[0xBA0];
  LODWORD(STACK[0x1AEC]) = STACK[0xB90];
  STACK[0x1AF0] = STACK[0xBA8];
  STACK[0x1AF8] = STACK[0xB60];
  STACK[0x1B00] = STACK[0xB68];
  LODWORD(STACK[0x12A8]) = v10;
  STACK[0x1B08] = STACK[0xB80];
  STACK[0x19F0] = v6;
  LODWORD(STACK[0x19FC]) = a2;
  STACK[0x1A00] = v5;
  STACK[0x1A08] = STACK[0xB38];
  STACK[0x1A10] = STACK[0xB70];
  LODWORD(STACK[0xE64]) = v8;
  STACK[0x1A18] = STACK[0xB78];
  LODWORD(STACK[0x18B4]) = a4;
  STACK[0x18B8] = STACK[0xB98];
  STACK[0x18C0] = a3;
  STACK[0x18C8] = a1;
  LODWORD(STACK[0xE1C]) = v7;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * a5) - ((a5 - 1736) ^ 0xF7FLL));
  STACK[0x18D0] = v9;
  return v11();
}

uint64_t sub_1000C6778()
{
  int v0;

  LODWORD(STACK[0x1958]) = 158075700;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 ^ 0x3E6)) - 8))();
}

uint64_t sub_1000C6914()
{
  int v0;

  LODWORD(STACK[0x1984]) = 158075700;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 + 736)) - 8))();
}

uint64_t sub_1000C71BC()
{
  int v0;

  LODWORD(STACK[0x1AA4]) = 158075700;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 + 724)) - 8))();
}

uint64_t sub_1000C7C38@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x18D8]) = 158075700;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v1 ^ 0x3F7)) - ((v1 + a1) ^ 0x1588)))();
}

uint64_t sub_1000C7DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((5534 * (*(_QWORD *)(a8 + 1688) != 0)) ^ (v8 - 2739)))
                            - (v9 ^ 0x68F)))();
}

uint64_t sub_1000C7E54(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  uint64_t (*v16)(void);

  STACK[0x1AE0] = STACK[0xBA0];
  LODWORD(STACK[0x1AEC]) = STACK[0xB90];
  STACK[0x1AF0] = STACK[0xBA8];
  STACK[0x1AF8] = STACK[0xB60];
  STACK[0x1B00] = STACK[0xB68];
  LODWORD(STACK[0x12A8]) = v15;
  STACK[0x1B08] = STACK[0xB80];
  STACK[0x19F0] = STACK[0xBD8];
  LODWORD(STACK[0x19FC]) = v9;
  STACK[0x1A00] = a4;
  STACK[0x1A08] = v10;
  STACK[0x1A10] = STACK[0xB70];
  LODWORD(STACK[0xE64]) = v13;
  STACK[0x1A18] = STACK[0xB78];
  LODWORD(STACK[0x18B4]) = a8;
  STACK[0x18B8] = v11;
  STACK[0x18C0] = a6;
  STACK[0x18C8] = a2;
  LODWORD(STACK[0xE1C]) = v12;
  v16 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v8) - ((v8 - 311341040) & 0x128EA9A7 ^ 0xA9));
  STACK[0x18D0] = v14;
  return v16();
}

uint64_t sub_1000C7F14()
{
  int v0;

  LODWORD(STACK[0x1A20]) = 158075700;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 ^ 0x3D2)) - 8))();
}

uint64_t sub_1000C821C@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v3 = a1 | v1;
  v4 = sub_1000035BC();
  STACK[0x10D8] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v2) - v3 + 1667))(v4);
}

uint64_t sub_1000C8948@<X0>(unsigned int a1@<W8>)
{
  LODWORD(STACK[0x152C]) = 933173586;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (int)a1) - (a1 ^ 0x33DLL)))();
}

uint64_t sub_1000C89CC()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = STACK[0xCB0];
  v3 = STACK[0xC38];
  *(_QWORD *)(v1 + 344) = *(_QWORD *)(STACK[0xC38] + 8 * (int)v0) + (v0 ^ 0xFFFFFFFFFFFFFDCFLL);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v3 + 8 * (int)(v0 ^ 0x4D8)) - 8))(v2);
}

uint64_t sub_1000C8AF0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 4))();
}

uint64_t sub_1000C8B68@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;

  v7 = vrev64q_s8(*(int8x16_t *)(a2 + v2 - (_DWORD)v6 + (v4 ^ a1) - 15));
  v8 = vextq_s8(v7, v7, 8uLL);
  v9.i64[0] = 0x4F4F4F4F4F4F4F4FLL;
  v9.i64[1] = 0x4F4F4F4F4F4F4F4FLL;
  v10.i64[0] = 0x9E9E9E9E9E9E9E9ELL;
  v10.i64[1] = 0x9E9E9E9E9E9E9E9ELL;
  v11 = vaddq_s8(veorq_s8(v8, v9), vandq_s8(vshlq_n_s8(v8, 1uLL), v10));
  v9.i64[0] = 0xBBBBBBBBBBBBBBBBLL;
  v9.i64[1] = 0xBBBBBBBBBBBBBBBBLL;
  v12 = vrev64q_s8(vaddq_s8(v11, v9));
  *(int8x16_t *)(v3 - v6) = vextq_s8(v12, v12, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v5 | ((v6 != 0) << 6))) - 4))();
}

uint64_t sub_1000C8DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  *(_BYTE *)(v4 + a1) = *(_BYTE *)(v7 + (a1 & 0xF)) ^ *(_BYTE *)(a4 + v9) ^ -(a1 & 0xF | ((a1 & 0xF) << 6)) ^ *(_BYTE *)((a1 & 0xF) + v8 + 5) ^ *(_BYTE *)(v5 + (a1 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((a1 + 1 == (a2 ^ v10)) * a3) ^ v6)) - 8))();
}

uint64_t sub_1000C8EC4@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((2001 * (a1 != 0xB8BD1ECE73DD98CLL)) ^ v1)))();
}

uint64_t sub_1000C8F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((39 * (*(_QWORD *)(a8 + 464) != 0x44E43BF9B07869F1)) ^ (v8 - 2992)))
                            - ((v8 ^ 0xCB0u)
                             + 1303)
                            + 2266))();
}

uint64_t sub_1000C9204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  int v8;

  *(_QWORD *)(*v6 - 0x631F30597EADA360) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * v8) - v7 + 1216))(a1, a2, a3, a4, a5, a6, 1347, &STACK[0xCC8]);
}

uint64_t sub_1000C93BC@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _BOOL4 v10;

  v9 = ((v4 + v8) & (2 * (a3 + 2 * a4))) + ((a3 + 2 * a4) ^ v7);
  if (v6 != v9 + a1 < a2)
    v10 = v9 + a1 < a2;
  else
    v10 = v9 + a1 > v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((30 * !v10) ^ v4)) - 8))();
}

uint64_t sub_1000C941C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v5 = (v3 + v1) | 0x10;
  LODWORD(STACK[0xF8C]) = a1;
  v6 = ((uint64_t (*)(_QWORD))STACK[0x838])((v2 - 2006708159));
  *(_QWORD *)(v4 + 1280) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v6 != 0) * (v5 ^ 0x1E6)) ^ v3))
                            - ((v3 + 1556164378) & 0xA33ECF7F)
                            + 3951))();
}

uint64_t sub_1000C9520()
{
  int v0;

  LODWORD(STACK[0x1908]) = 158075700;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 + 737)) - 8))();
}

uint64_t sub_1000C9634()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v4 = *(_DWORD *)(v2 + 12);
  *(_QWORD *)(v3 + 1952) = v2 + 12;
  v5 = v1 | 0x9A;
  v6 = v4 + 44156903;
  v7 = *(_DWORD *)(v2 + 8) + 623875758;
  v8 = v6 < 0x7CBA4269;
  v9 = v6 > v7;
  if (v8 != v7 < 0x7CBA4269)
    v9 = v8;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((v9 * ((v5 + 1009) ^ (2 * v0) ^ 0x1FD2)) ^ v0)))();
}

uint64_t sub_1000C989C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = ((uint64_t (*)(void))((char *)*(&off_100236540 + (v0 ^ 0xC72)) - 102470947))();
  STACK[0x1318] -= 64;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * ((7151 * (v1 != 0)) ^ v0)) - (v2 ^ 0x10FE)))(v3);
}

uint64_t sub_1000C990C@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = ((uint64_t (*)(_QWORD))STACK[0x838])((v3 + a1 - 2048424578 + *(_DWORD *)(v2 + 12) - 113));
  *(_QWORD *)(v5 + 1976) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((((v1 ^ (v6 == 0)) & 1) * v4) ^ v3)) - 8))();
}

uint64_t sub_1000CB2CC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W4>, int a5@<W6>, char a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  int v12;
  int v13;
  int v14;

  *(_DWORD *)(a1 + 4 * (v9 * a6)) = v12 ^ a5 ^ v10 ^ v14 ^ *(_DWORD *)(v8
                                                                                        + 4
                                                                                        * (((v9 * a6) ^ v11) ^ a4)) ^ ((v9 * a6) ^ v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((((v13 ^ a2) + v9 == v6 + 256) * a3) ^ v7)) - 8))();
}

uint64_t sub_1000CB528()
{
  unsigned int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 8))(-274651058, 1385978214, 465, 178, 5324, 434, 4294962776, LODWORD(STACK[0xBA0]));
}

uint64_t sub_1000CB834(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * ((v1 - 93) | 0x201)) - 4))(a1, LODWORD(STACK[0xAB8]), LODWORD(STACK[0xAB0]), LODWORD(STACK[0xAA0]), LODWORD(STACK[0xAD8]), 4294962403, 210, 1971808459);
}

uint64_t sub_1000CBF4C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  STACK[0xB98] = (LODWORD(STACK[0xC44]) - 1676580025);
  v2 = ((uint64_t (*)(void))STACK[0x838])();
  *(_QWORD *)(v1 + 192) = v2 + 0xB8BD1ECE73DD98CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((5330 * (((v2 == 0) ^ (7 * (v0 ^ 0xC5))) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_1000CC16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                                          + 8
                                                                                          * (((v5
                                                                                             + 3118
                                                                                             + ((v5 - 1875) | 0x13)
                                                                                             - 621)
                                                                                            * (a4 != v4)) ^ v5))
                                                                              - 4))(a1, a2, a3, 58, 37);
}

uint64_t sub_1000CC1B0@<X0>(int a1@<W4>, unsigned int a2@<W8>)
{
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (int)(((((v3 ^ v2) * a1) ^ 0xF61) * (a2 < 8)) | v3))
                            - ((v3 ^ v2)
                             + 4923)
                            + 5026))();
}

uint64_t sub_1000CC1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unint64_t v5;
  int v6;
  int v7;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * (((v5 >= ((v6 + 645) ^ 0x160BuLL)) * ((v6 ^ v7) * a5 - 1997)) ^ v6)))();
}

uint64_t sub_1000CC398()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 8))(6267);
}

uint64_t sub_1000CEE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                                          + 8
                                                                                          * ((6097
                                                                                            * (((a3 == v3) ^ (v4 - 96)) & 1)) ^ v4))
                                                                              - (v4 ^ 0x14E8u)
                                                                              + 6319))(a1, a2, 21, 58, 37);
}

uint64_t sub_1000CEF0C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 4))();
}

uint64_t sub_1000CEFA4(uint64_t a1, __n128 a2, __n128 a3)
{
  int v3;
  __n128 v4;

  v4.n128_u64[0] = 0xC4C4C4C4C4C4C4C4;
  v4.n128_u64[1] = 0xC4C4C4C4C4C4C4C4;
  return ((uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128))(*(_QWORD *)(STACK[0xC38] + 8 * v3) - 8))(a1, 4084, a2, a3, v4);
}

uint64_t sub_1000CF050@<X0>(int a1@<W0>, char a2@<W8>)
{
  int v2;

  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8
                              * ((((a2 & 0x18) == ((v2 - 2401) ^ 1)) * (((v2 - 2401) | a1) ^ 0xD11)) ^ v2)))();
}

uint64_t sub_1000CF1F4@<X0>(int a1@<W4>, unint64_t a2@<X5>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  v6 = (v5 ^ 0x54A) * a1;
  LODWORD(STACK[0xDA0]) = a4 + v4;
  STACK[0x4E0] = (a4 - 933173586);
  v7 = (uint64_t (*)(void))STACK[0x838];
  STACK[0xAE0] = a2;
  LODWORD(STACK[0x768]) = a3;
  v8 = v7();
  STACK[0xEA0] = v8 + 0x2EB441A01D51EA72;
  STACK[0x368] = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v8 != 0) * (v6 + ((v5 + 2413) ^ 0x2B))) ^ v5)) - 8))();
}

uint64_t sub_1000D244C(unsigned int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  char v24;
  uint64_t v25;
  char v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unint64_t v32;
  int v33;

  v14 = ((a3 & 2) + 525072562 - 2 * (a3 & 2)) ^ 0x1F4BF8B2;
  v15 = (907351476 - (a3 & 4)) ^ 0x361515B4;
  v16 = ~a3 & 0x20;
  v17 = (((a3 & 0x10 | (32 * (((a3 & 0x10) >> 4) & 1))) ^ 0x10C20020) + 1814269683) ^ 0x7CE58F03;
  v18 = (((((((a6 - 460) | 0x502) - 3341) | a3) - 1029419068) ^ 0x3819827C) - 2025162794) ^ 0x82084595;
  v19 = (((2 * (a3 & 0x40 ^ 0x28510240)) | 0x9D8B863A) - (a3 & 0x40 ^ 0x28510240) + 825900259) ^ 0xE694C11D;
  v20 = ((a3 & 0x80) * LODWORD(STACK[0x7A8])) ^ ((a3 & 8) * LODWORD(STACK[0x990])) ^ (v16 * LODWORD(STACK[0x8D0])) ^ (v15 * LODWORD(STACK[0xBA8])) ^ (v14 * LODWORD(STACK[0xA80])) ^ (v17 * LODWORD(STACK[0x930])) ^ (v19 * LODWORD(STACK[0x8C0])) ^ (v18 * LODWORD(STACK[0xB78]));
  v21 = ((a3 & 0x80) * LODWORD(STACK[0x7C8])) ^ ((a3 & 8) * LODWORD(STACK[0x950])) ^ (v16 * LODWORD(STACK[0x8E8])) ^ (v15 * LODWORD(STACK[0x9B0])) ^ (v14 * LODWORD(STACK[0xAD0])) ^ (v17 * LODWORD(STACK[0x920])) ^ (v19 * LODWORD(STACK[0x7B8])) ^ (v18 * LODWORD(STACK[0xB68]));
  v22 = ((a3 & 0x80) * LODWORD(STACK[0x778])) ^ ((a3 & 8) * LODWORD(STACK[0x958])) ^ (v16 * LODWORD(STACK[0x8E0])) ^ (v15 * LODWORD(STACK[0x9C0])) ^ (v14 * LODWORD(STACK[0x9D0])) ^ (v17 * LODWORD(STACK[0x900])) ^ (v19 * LODWORD(STACK[0x808])) ^ (v18 * LODWORD(STACK[0xB70]));
  LOBYTE(v20) = *(_BYTE *)(v6 + ((v20 ^ BYTE1(v20)) ^ 0xADLL))
              + (v20 ^ BYTE1(v20) ^ 0xAD) * (v20 ^ BYTE1(v20) ^ 0xAD);
  v23 = ((a3 & 0x80) * LODWORD(STACK[0x788])) ^ ((a3 & 8) * LODWORD(STACK[0x928])) ^ (v16 * LODWORD(STACK[0x8C8])) ^ (v15 * LODWORD(STACK[0x9C8])) ^ (v14 * LODWORD(STACK[0xA68])) ^ (v17 * LODWORD(STACK[0x910])) ^ (v19 * LODWORD(STACK[0x7D0])) ^ (v18 * LODWORD(STACK[0xA38]));
  v24 = v20 ^ v9 & (8 * v20) ^ 0x81;
  v25 = a3 ^ a1;
  *(_BYTE *)(STACK[0xBD8] + v25) = v24;
  v26 = *(_BYTE *)(v6 + (a3 ^ (a1 + 72))) + (a3 ^ (a1 + 72)) * (a3 ^ (a1 + 72));
  *(_BYTE *)(v13 + ((v26 ^ v9 & (8 * v26)) ^ 0xECu)) = (v21 ^ BYTE1(v21))
                                                                      - ((2 * (v21 ^ BYTE1(v21))) & 0xDD)
                                                                      + 110;
  v27 = v14 * LODWORD(STACK[0xA78]);
  LOBYTE(v23) = (*(_BYTE *)(v10 + ((v23 ^ BYTE1(v23)) ^ 0x96)) - (v23 ^ BYTE1(v23) ^ 0x96 | 0x8C)) ^ v8;
  *(_BYTE *)(v11 + v25) = v23 - ((2 * v23) & 0xDD) + 110;
  v28 = v15 * LODWORD(STACK[0x9A0]);
  *(_BYTE *)(STACK[0xAB8] + ((*(_BYTE *)(v10 + (a3 ^ (a1 - 9))) - (a3 ^ (a1 - 9) | 0x8C)) ^ v9)) = (v22 ^ BYTE1(v22)) - ((2 * (v22 ^ BYTE1(v22))) & 0x50) + 40;
  v29 = ((a3 & 0x80) * LODWORD(STACK[0x780])) ^ ((a3 & 8) * LODWORD(STACK[0x968])) ^ (v16 * LODWORD(STACK[0x8A8])) ^ v28 ^ v27 ^ (v17 * LODWORD(STACK[0x908])) ^ (v19 * LODWORD(STACK[0x7C0]));
  LOBYTE(v29) = v29 ^ (v18 * LOBYTE(STACK[0xA30])) ^ ((unsigned __int16)(v29 ^ (v18 * LOWORD(STACK[0xA30]))) >> 8);
  v30 = ((a3 & 0x80) * LODWORD(STACK[0x798])) ^ ((a3 & 8) * LODWORD(STACK[0x940])) ^ (v16 * LODWORD(STACK[0x8B0])) ^ (v15 * LODWORD(STACK[0x998])) ^ (v14 * LODWORD(STACK[0x9D8])) ^ (v17 * LODWORD(STACK[0x8F0])) ^ (v19 * LODWORD(STACK[0x8B8])) ^ (v18 * LODWORD(STACK[0x9E0]));
  *(_BYTE *)(STACK[0xC20] + v25) = v29 ^ (*(_BYTE *)(a2 + (v29 ^ 0x94)) + (v29 ^ 0x94) * (v29 ^ 0x94)) ^ 0xDF;
  LOBYTE(v29) = (*(_BYTE *)(a2 + (a3 ^ (a1 - 100))) + (a3 ^ (a1 - 100)) * (a3 ^ (a1 - 100))) ^ a3;
  *(_BYTE *)(v12 + ((((v29 ^ 0x81) + (v29 ^ 0xEC) + 1) ^ 0xFC) + (v29 ^ 0xEC))) = v30 ^ BYTE1(v30);
  v31 = ((a3 & 0x80) * LODWORD(STACK[0x770])) ^ ((a3 & 8) * LODWORD(STACK[0x938])) ^ (v16 * LODWORD(STACK[0x7D8])) ^ (v15 * LODWORD(STACK[0x970])) ^ (v14 * LODWORD(STACK[0x9A8])) ^ (v17 * LODWORD(STACK[0x8F8])) ^ (v19 * LODWORD(STACK[0x790])) ^ (v18 * LODWORD(STACK[0xA70]));
  v32 = STACK[0xC38];
  v33 = ((a3 & 0x80) * LODWORD(STACK[0x7A0])) ^ ((a3 & 8) * LODWORD(STACK[0x948])) ^ (v16 * LODWORD(STACK[0x8D8])) ^ (v15 * LODWORD(STACK[0x960])) ^ (v14 * LODWORD(STACK[0x9B8])) ^ (v17 * LODWORD(STACK[0x918])) ^ (v19 * LODWORD(STACK[0x7B0])) ^ (v18 * LODWORD(STACK[0xBA0]));
  *(_BYTE *)(STACK[0xC18] + v25) = (4 * *(_BYTE *)(v7 + ((v31 ^ BYTE1(v31)) ^ 0x42)) + 4) & v8 ^ (*(_BYTE *)(v7 + ((v31 ^ BYTE1(v31)) ^ 0x42)) - (v31 ^ BYTE1(v31) ^ 0x42 | 0x1F)) ^ 0x4A;
  *(_BYTE *)(STACK[0xAD8]
           + (((*(_BYTE *)(v7 + (a3 ^ (a1 - 54))) - (a3 ^ (a1 - 54) | 0x1F)) ^ (4
                                                                                               * *(_BYTE *)(v7 + (a3 ^ (a1 - 54)))
                                                                                               + 4) & v8) ^ 0x71u)) = (v33 ^ BYTE1(v33)) - ((2 * (v33 ^ BYTE1(v33))) & 0x55) + 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v32
                                        + 8
                                        * ((7313
                                          * (((a1 + (_DWORD)v25 - ((2 * (_DWORD)v25 + 2) & 0x67E8AE2) + 1) ^ (a1 - 113)) > 0xFF)) ^ a6))
                            - 4))();
}

uint64_t sub_1000D2AB0@<X0>(unsigned int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((v3 + 3 * (((v4 * (unint64_t)a1) >> 32) >> 1) == v2)
                                * (((a2 + v5) & v6) + 2550)) ^ a2)))();
}

uint64_t sub_1000D2AF8()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0xBC0]) = 0;
  v4 = (v2 + 2053611012) & 0x85985FFD;
  STACK[0xB70] = v4;
  LODWORD(STACK[0x970]) = LODWORD(STACK[0x768]) + 403870671;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * v2) - (v4 ^ 0xF91));
  LODWORD(STACK[0xA68]) = v1 + v0;
  LODWORD(STACK[0xAD0]) = -821798977;
  LODWORD(STACK[0xBA8]) = -663130258;
  LODWORD(STACK[0x9A8]) = -1628587466;
  LODWORD(STACK[0x9B0]) = 1105351020;
  LODWORD(STACK[0xB78]) = -1294138157;
  LODWORD(STACK[0xBA0]) = -384389809;
  LODWORD(STACK[0x990]) = 1441817038;
  LODWORD(STACK[0x9B8]) = 2030336789;
  LODWORD(STACK[0xB68]) = 774574832;
  LODWORD(STACK[0x9A0]) = -1407278465;
  LODWORD(STACK[0x998]) = -405778561;
  return v5(681562416, 3479897850, 843774346, 4136381808, 3099384564, 1505848571, 618369824, 3572552127);
}

uint64_t sub_1000D3B4C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  unint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unint64_t v41;
  unint64_t v42;
  unsigned __int8 v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned __int8 v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  unint64_t v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;

  v4 = LODWORD(STACK[0xBC0]) - 1653;
  v5 = v2 ^ 0x429BCEA8u;
  STACK[0xA80] = v5;
  v6 = STACK[0xAE0];
  LOBYTE(v5) = *(_BYTE *)(STACK[0xAE0] + v5);
  LODWORD(STACK[0x930]) = v4;
  LOBYTE(v5) = v4 ^ v5 ^ 0x1B;
  v7 = v5;
  v8 = v2 & 0xFFFFFFFE ^ 0x429BCEA9;
  STACK[0xA68] = v8;
  v9 = v5 | 0xFFFFFF94;
  v10 = *(unsigned __int8 *)(v6 + v8) ^ 0x2FLL;
  v11 = v2 & 0xFFFFFFFD ^ 0x429BCEAA;
  STACK[0x9D8] = v11;
  v12 = STACK[0xA08];
  v13 = *(unsigned __int8 *)(STACK[0xA08] + v10);
  v14 = *(_BYTE *)(v6 + v11);
  LODWORD(STACK[0xB70]) = 1117507243;
  v15 = v2 & 0xFFFFFFFC ^ 0x429BCEAB;
  STACK[0x9C0] = v15;
  if ((v14 & 8) != 0)
    v16 = -8;
  else
    v16 = 8;
  v17 = *(unsigned __int8 *)(v6 + v15);
  v18 = STACK[0xA00];
  v19 = *(unsigned __int8 *)(STACK[0xA00] + v7);
  v20 = (v16 + v14) ^ 0xB5;
  v21 = STACK[0x9F8];
  v22 = *(_BYTE *)(STACK[0x9F8] + v20);
  v23 = v13 - (v10 | 0x1B);
  LODWORD(STACK[0xA78]) = 1117507244;
  v24 = v2 & 0xFFFFFFFB ^ 0x429BCEAC;
  STACK[0xB68] = v24;
  v25 = v20 | 0xC4;
  v26 = v13 - (v10 | v3);
  LODWORD(v20) = v19 - v9;
  v27 = v17 ^ a1;
  v28 = STACK[0x9F0];
  LOBYTE(v19) = *(_BYTE *)(STACK[0x9F0] + v27);
  v29 = *(unsigned __int8 *)(v18 + (*(unsigned __int8 *)(v6 + v24) ^ 0x60))
      - (*(unsigned __int8 *)(v6 + v24) ^ 0x60 | 0xFFFFFF94);
  v30 = v2 & 0xFFFFFFFA ^ 0x429BCEAD;
  STACK[0xA70] = v30;
  v31 = *(unsigned __int8 *)(v6 + v30) ^ 0x94;
  v32 = *(unsigned __int8 *)(v12 + v31);
  v33 = v20 + 1;
  v34 = v2 & 0xFFFFFFF9 ^ 0x429BCEAE;
  STACK[0x9E0] = v34;
  v35 = *(unsigned __int8 *)(v6 + v34);
  HIDWORD(v37) = v23;
  LODWORD(v37) = v26 << 24;
  v36 = v37 >> 29;
  LOBYTE(v20) = __PAIR64__(v32 - (v31 | 0x1B), (v32 - (v31 | v3)) << 24) >> 29;
  LODWORD(STACK[0x9B0]) = 1117507247;
  v38 = v2 & 0xFFFFFFF8 ^ 0x429BCEAF;
  STACK[0x9C8] = v38;
  v39 = v22 - v25;
  v40 = *(_BYTE *)(v21 + (v35 ^ 0x33)) - (v35 ^ 0x33 | 0xC4);
  LOBYTE(v32) = *(_BYTE *)(v28 + (*(unsigned __int8 *)(v6 + v38) ^ 0x71))
              + (*(_BYTE *)(v6 + v38) ^ 0x71) * (*(_BYTE *)(v6 + v38) ^ 0x71);
  v41 = v2 & 0xFFFFFFF6 ^ 0x429BCEA9;
  STACK[0xAD0] = v41;
  v42 = v2 & 0xFFFFFFF7 ^ 0x429BCEA8;
  STACK[0xB78] = v42;
  v43 = v33 ^ (v33 >> 4) & 5;
  v44 = *(unsigned __int8 *)(v18 + (*(unsigned __int8 *)(v6 + v42) ^ 0x38))
      - (*(unsigned __int8 *)(v6 + v42) ^ 0x38 | 0xFFFFFF94);
  v45 = *(unsigned __int8 *)(v6 + v41);
  LODWORD(v35) = *(unsigned __int8 *)(v12 + (v45 ^ 3));
  v46 = v35 - (v45 | 0x1B);
  LODWORD(v45) = v35 - (v45 | 0x3B);
  LOBYTE(v35) = ((v19 + v27 * v27) >> 4) | (16 * (v19 + v27 * v27));
  HIDWORD(v37) = v46;
  LODWORD(v37) = (_DWORD)v45 << 24;
  v47 = v2 & 0xFFFFFFF5 ^ 0x429BCEAA;
  STACK[0xA30] = v47;
  LOBYTE(v27) = *(_BYTE *)(v21 + (*(unsigned __int8 *)(v6 + v47) ^ 0xD6)) - (*(_BYTE *)(v6 + v47) ^ 0xD6 | 0xC4);
  LOBYTE(v45) = ((v35 ^ 0xB1) >> 4) & 0xF | (16 * (v35 ^ 0xB1));
  v48 = STACK[0xC18];
  LODWORD(v41) = STACK[0xBA0] ^ ((*(unsigned __int8 *)(STACK[0xC18]
                                                     + (((v29 + 1) ^ ((v29 + 1) >> 4) & 5) ^ 0x51u)) ^ 0x36) << 24);
  v49 = a2 ^ ((*(unsigned __int8 *)(STACK[0xC18] + (((v44 + 1) ^ ((v44 + 1) >> 4) & 5) ^ 0x4Du)) ^ 0x36) << 24);
  v50 = STACK[0xC20];
  v51 = STACK[0x988];
  v52 = *(unsigned __int8 *)(STACK[0x988] + (v39 ^ 0x8CLL));
  v53 = STACK[0xBD8];
  v54 = *(unsigned __int8 *)(STACK[0xBD8] + (v45 ^ 0x29));
  v55 = *(unsigned __int8 *)(STACK[0xC20] + (v36 ^ 0x33)) ^ 0x4F;
  LODWORD(v31) = *(unsigned __int8 *)(STACK[0xBD8] + (v32 ^ 0x85));
  v56 = *(unsigned __int8 *)(STACK[0x988] + (v40 ^ 0xBCLL)) ^ 0x6E;
  v57 = *(unsigned __int8 *)(STACK[0xC20] + ((v37 >> 29) ^ 0x2DLL));
  v58 = STACK[0xBA8] ^ ((*(unsigned __int8 *)(STACK[0xC18] + (v43 ^ 0x51u)) ^ 0x36) << 24);
  v59 = (((v27 ^ 0x95) >> 4) & 0xF | (16 * (v27 ^ 0x95))) ^ 0x28;
  LODWORD(v20) = *(unsigned __int8 *)(STACK[0xC20] + (v20 ^ 0xCBLL)) ^ 0x4F;
  v60 = v2 & 0xFFFFFFF4 ^ LODWORD(STACK[0xB70]);
  STACK[0x9B8] = v60;
  LOBYTE(v27) = (v59 >> 4) | (16 * v59);
  v61 = *(unsigned __int8 *)(v6 + v60);
  LODWORD(v27) = *(unsigned __int8 *)(v51 + (v27 ^ 0xBFLL));
  LODWORD(v60) = v41 ^ ((_DWORD)v20 << 16);
  v62 = v2 & 0xFFFFFFF3 ^ LODWORD(STACK[0xA78]);
  STACK[0xB70] = v62;
  v63 = *(unsigned __int8 *)(v6 + v62) ^ 0x45;
  v64 = (*(_BYTE *)(v28 + (v61 ^ 0xE1)) + (v61 ^ 0xE1) * (v61 ^ 0xE1)) ^ 0x3CLL;
  LODWORD(v20) = *(unsigned __int8 *)(v18 + v63);
  LODWORD(v18) = v60 ^ (v56 << 8);
  v65 = v2 & 0xFFFFFFF1 ^ 0x429BCEAE;
  STACK[0xA38] = v65;
  LODWORD(v64) = *(unsigned __int8 *)(v53 + v64);
  v66 = v2 & 0xFFFFFFF2 ^ 0x429BCEAD;
  STACK[0xA78] = v66;
  LODWORD(v63) = v20 - (v63 | 0xFFFFFF94) + 1;
  v67 = v58 ^ (v55 << 16) ^ ((v52 ^ 0x6E) << 8);
  v68 = *(unsigned __int8 *)(v6 + v66) ^ 0x97;
  v69 = *(unsigned __int8 *)(v6 + v65);
  LODWORD(v20) = *(unsigned __int8 *)(v12 + v68);
  HIDWORD(v37) = v20 - (v68 | 0x1B);
  LODWORD(v37) = ((_DWORD)v20 - (v68 | 0x3B)) << 24;
  LODWORD(v63) = STACK[0x9D0] ^ ((*(unsigned __int8 *)(v48
                                                     + ((v63 ^ (v63 >> 4) & 5) ^ 0x44u)) ^ 0x36) << 24);
  LODWORD(v68) = *(unsigned __int8 *)(v50 + ((v37 >> 29) ^ 0x32));
  v70 = v64 ^ v49 ^ ((v57 ^ 0x4F) << 16) ^ ((v27 ^ 0x6E) << 8) ^ 0x6A;
  v71 = v2 & 0xFFFFFFF0 ^ LODWORD(STACK[0x9B0]);
  STACK[0x9D0] = v71;
  LODWORD(v20) = (v70 + 1856076093 - ((2 * v70) & 0xDD42F27A)) ^ LODWORD(STACK[0x968]);
  v72 = LODWORD(STACK[0x948]) ^ 0x5D96D4B7 ^ ((v31 ^ v18 ^ 0x6A) + 1856076093 - ((2 * (v31 ^ v18 ^ 0x6A)) & 0xDD42F27A));
  LODWORD(v48) = LODWORD(STACK[0x920]) ^ 0xDD1A3361 ^ ((v54 ^ v67 ^ 0x6A)
                                                     + 1856076093
                                                     - ((2 * (v54 ^ v67 ^ 0x6A)) & 0xDD42F27A));
  v73 = *(unsigned __int8 *)(v53
                           + ((*(_BYTE *)(v28 + (*(unsigned __int8 *)(v6 + v71) ^ 0xFELL))
                                              + (*(_BYTE *)(v6 + v71) ^ 0xFE) * (*(_BYTE *)(v6 + v71) ^ 0xFE)) ^ 0xF6)) ^ v63 ^ ((v68 ^ 0x4F) << 16) ^ ((*(unsigned __int8 *)(v51 + ((*(_BYTE *)(v21 + (v69 ^ 0x3C)) - (v69 ^ 0x3C | 0xC4)) ^ 0x9DLL)) ^ 0x6E) << 8) ^ 0x6A;
  LODWORD(v68) = v20 ^ 0x87330F59;
  v74 = LODWORD(STACK[0x998]) ^ 0x3311817D ^ (v73 + 1856076093 - ((2 * v73) & 0xDD42F27A));
  v75 = LODWORD(STACK[0x970]) ^ 0x7F197CCA ^ *(_DWORD *)(STACK[0xAB0]
                                                       + 4
                                                       * ((((_DWORD)v48 + 1946299740 - ((2 * (_DWORD)v48) & 0xE8045AB8)) ^ LODWORD(STACK[0x958])) >> 24));
  v76 = (v75 + 1799845370 - ((2 * v75) & 0xD68EEBF4)) ^ *(_DWORD *)(STACK[0xAA8]
                                                                  + 4
                                                                  * (((v72
                                                                                      + 142684
                                                                                      - ((2 * v72) & 0x45AB8u)) ^ LODWORD(STACK[0x958])) >> 16));
  LODWORD(v27) = *(_DWORD *)(STACK[0xAB0]
                           + 4 * (((v72 + 1946299740 - ((2 * v72) & 0xE8045AB8)) ^ LODWORD(STACK[0x958])) >> 24)) ^ LODWORD(STACK[0x990]);
  LODWORD(v20) = (v76 + 1291794498 - ((2 * v76) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0]
                                                                           + 4
                                                                           * ((unsigned __int16)(((v20 ^ 0xF59) - 2 * ((v20 ^ 0xF59) & 0x2D5E ^ v20 & 2) + 11612) ^ LOWORD(STACK[0x958])) >> 8));
  LODWORD(v27) = ((v27 ^ 0x7F197CCA) + 1799845370 - 2 * ((v27 ^ 0x7F197CCA) & 0x6B4775FB ^ v27 & 1)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * ((((_DWORD)v68 + 142684 - ((2 * (_DWORD)v68) & 0x45AB8u)) ^ LODWORD(STACK[0x958])) >> 16));
  LOBYTE(v52) = (v74 - ((2 * v74) & 0xB8) + 92) ^ LODWORD(STACK[0x958]);
  LODWORD(v27) = (v27 + 1291794498 - ((2 * v27) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0]
                                                                           + 4
                                                                           * ((unsigned __int16)((v74 - ((2 * v74) & 0x5AB8) + 11612) ^ LOWORD(STACK[0x958])) >> 8));
  LODWORD(v64) = LODWORD(STACK[0x8F8]) ^ 0x58A13172 ^ *(_DWORD *)(STACK[0xAA8]
                                                                + 4
                                                                * (((v74
                                                                                    + 142684
                                                                                    - ((2 * v74) & 0x45AB8)) ^ LODWORD(STACK[0x958])) >> 16)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * ((BYTE1(v48) ^ -(v48 >> 8) ^ (LODWORD(STACK[0x9A0]) - (BYTE1(v48) ^ LODWORD(STACK[0x9A0])))) + LODWORD(STACK[0x9A0]))) ^ *(_DWORD *)(STACK[0xAB0] + 4 * ((((_DWORD)v68 + 1946299740 - ((2 * (_DWORD)v68) & 0xE8045AB8)) ^ LODWORD(STACK[0x958])) >> 24));
  v77 = *(_DWORD *)(STACK[0xAB0] + 4 * (((v74 + 1946299740 - ((2 * v74) & 0xE8045AB8)) ^ LODWORD(STACK[0x958])) >> 24)) ^ LODWORD(STACK[0x8C0]);
  v78 = *(_DWORD *)(STACK[0xA98] + 4 * ((v48 - ((2 * v48) & 0xB8) + 92) ^ LODWORD(STACK[0x958]))) ^ 0x4D987F92;
  LODWORD(v63) = *(_DWORD *)(STACK[0xAA8]
                           + 4
                           * ((((_DWORD)v48 + 142684 - ((2 * (_DWORD)v48) & 0x45AB8u)) ^ LODWORD(STACK[0x958])) >> 16));
  LODWORD(v48) = *(_DWORD *)(STACK[0xA98] + 4 * v52) ^ 0x59844D32 ^ (v20
                                                                                      + 1945955426
                                                                                      - ((2 * v20) & 0xE7F9D8C4));
  LODWORD(v69) = v78 ^ (v27 + 1945955426 - ((2 * v27) & 0xE7F9D8C4));
  LODWORD(v63) = ((v77 ^ 0x7F197CCA) + 1799845370 - 2 * ((v77 ^ 0x7F197CCA) & 0x6B4775FB ^ v77 & 1)) ^ v63;
  LODWORD(v63) = (v63 + 1291794498 - ((2 * v63) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0]
                                                                           + 4
                                                                           * ((unsigned __int16)((v72 - ((2 * v72) & 0x5AB8) + 11612) ^ LOWORD(STACK[0x958])) >> 8));
  LODWORD(v20) = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v69)) ^ *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v48)) ^ 0x7AFF700D;
  v79 = *(_DWORD *)(STACK[0xA98] + 4 * ((v68 - ((2 * v68) & 0xB8) + 92) ^ LODWORD(STACK[0x958]))) ^ 0x3F845552 ^ (v63 + 1945955426 - ((2 * v63) & 0xE7F9D8C4));
  v80 = *(_DWORD *)(STACK[0xA98] + 4 * ((v72 - ((2 * v72) & 0xB8) + 92) ^ LODWORD(STACK[0x958]))) ^ 0x28A43E81 ^ (v64 + 1945955426 - ((2 * v64) & 0xE7F9D8C4));
  LODWORD(v68) = *(_DWORD *)(STACK[0xA98] + 4 * (v78 ^ (v27 + 98 - ((2 * v27) & 0xC4))));
  v81 = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v69));
  LODWORD(v63) = ((unsigned __int16)(v78 ^ (v27 - 5022 - ((2 * v27) & 0xD8C4))) >> 8);
  LODWORD(v69) = v20 + 1856076093 - ((2 * v20) & 0xDD42F27A);
  v82 = ((LODWORD(STACK[0x8E8]) ^ 0x7F197CCA ^ v81)
       + 1799845370
       - ((2 * (LODWORD(STACK[0x8E8]) ^ 0x7F197CCA ^ v81)) & 0xD68EEBF4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v80));
  LODWORD(v20) = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v80)) ^ LODWORD(STACK[0x910]);
  LODWORD(v21) = *(_DWORD *)(STACK[0xA98] + 4 * v79);
  LODWORD(v27) = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v79)) ^ LODWORD(STACK[0x940]);
  LODWORD(v20) = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v79)) ^ ((v20 ^ 0x7F197CCA)
                                                               + 1799845371
                                                               + ~(2 * ((v20 ^ 0x7F197CCA) & 0x6B4775FB ^ v20 & 1)));
  v83 = (v82 + 1291794498 - ((2 * v82) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v79));
  v84 = *(_DWORD *)(STACK[0xA98] + 4 * v48) ^ 0x73FCEC62;
  LODWORD(v20) = (v20 + 1291794498 - ((2 * v20) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v48));
  v85 = v84 & v83;
  v86 = v84 + v83;
  v87 = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v48));
  LODWORD(v64) = ((v69 ^ LODWORD(STACK[0x960])) + 1291794498 - ((2 * (v69 ^ LODWORD(STACK[0x960]))) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v80));
  LODWORD(v69) = (v27 ^ 0x7F197CCA) + 1799845370 - 2 * ((v27 ^ 0x7F197CCA) & 0x6B4775FF ^ v27 & 5);
  LODWORD(v68) = (v20 + 1945955426 - ((2 * v20) & 0xE7F9D8C4)) ^ v68;
  LODWORD(v69) = ((v69 ^ v87) + 1291794498 - ((2 * (v69 ^ v87)) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0]
                                                                                           + 4 * v63);
  LODWORD(v63) = (v86 - 2 * v85) ^ 0xEBA6F49E;
  v88 = *(_DWORD *)(STACK[0xA98] + 4 * v80);
  LODWORD(v64) = v21 ^ 0xA6FA2895 ^ (v64 + 1945955426 - ((2 * v64) & 0xE7F9D8C4));
  v89 = v68 ^ 0x900B715A;
  v90 = v88 ^ 0xE521298E ^ (v69 + 1945955426 - ((2 * v69) & 0xE7F9D8C4));
  LODWORD(v69) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v64)) ^ LODWORD(STACK[0x7D0]);
  LODWORD(v27) = ((v68 ^ 0x900B715A) >> 24) & 0xFC | BYTE3(v68) & 3;
  LODWORD(v68) = *(_DWORD *)(STACK[0xA98] + 4 * v64);
  LODWORD(v27) = *(_DWORD *)(STACK[0xAB0] + 4 * v27) ^ LODWORD(STACK[0x908]);
  LODWORD(v20) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v63)) ^ LODWORD(STACK[0x8D0]);
  LODWORD(v21) = *(_DWORD *)(STACK[0xA98] + 4 * v90);
  LODWORD(v20) = ((v20 ^ 0x7F197CCA) + 1799845370 - 2 * ((v20 ^ 0x7F197CCA) & 0x6B4775FF ^ v20 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v89));
  LODWORD(v27) = ((v27 ^ 0x7F197CCA) + 1799845370 - 2 * ((v27 ^ 0x7F197CCA) & 0x6B4775FF ^ v27 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v90));
  LODWORD(v69) = ((v69 ^ 0x7F197CCA) + 1799845370 - 2 * ((v69 ^ 0x7F197CCA) & 0x6B4775FF ^ v69 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v63));
  v91 = v27 + 1291794498 - ((2 * v27) & 0x99FE7084);
  LODWORD(v27) = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v64));
  LODWORD(v69) = (v69 + 1291794498 - ((2 * v69) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v89));
  LODWORD(v64) = v91 ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v64));
  v92 = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v90)) ^ LODWORD(STACK[0x7B8]);
  v93 = v92 ^ 0x7F197CCA;
  v94 = (v20 + 1291794498 - ((2 * v20) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v90));
  LODWORD(v20) = (v92 ^ 0x7F197CCA) & 0x6B4775FB ^ v92 & 1;
  v95 = (v64 + 1945955426 - ((2 * v64) & 0xE7F9D8C4)) ^ *(_DWORD *)(STACK[0xA98] + 4 * v63);
  LODWORD(v20) = v93 + 1799845370 - 2 * v20;
  v96 = *(_DWORD *)(STACK[0xA98] + 4 * v89);
  LODWORD(v64) = ((v20 ^ v27) + 1291794498 - ((2 * (v20 ^ v27)) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0]
                                                                                           + 4 * BYTE1(v63));
  LODWORD(v63) = v21 ^ 0x5640102C ^ (v69 + 1945955426 - ((2 * v69) & 0xE7F9D8C4));
  v97 = v68 ^ 0xAD30856B ^ (v94 + 1945955426 - ((2 * v94) & 0xE7F9D8C4));
  LODWORD(v64) = v96 ^ 0x197A0F6E ^ (v64 + 1945955426 - ((2 * v64) & 0xE7F9D8C4));
  LODWORD(v68) = v95 ^ 0x4C1095A5;
  LODWORD(v20) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v63)) ^ LODWORD(STACK[0x928]);
  LODWORD(v20) = ((v20 ^ 0x7F197CCA) + 1799845370 - 2 * ((v20 ^ 0x7F197CCA) & 0x6B4775FF ^ v20 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v97));
  LODWORD(v69) = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v97)) ^ LODWORD(STACK[0x8F0]);
  v98 = *(_DWORD *)(STACK[0xAB0] + 4 * (HIBYTE(v95) ^ 0x4C)) ^ LODWORD(STACK[0x950]);
  LODWORD(v69) = ((v69 ^ 0x7F197CCA) + 1799845370 - 2 * ((v69 ^ 0x7F197CCA) & 0x6B4775FF ^ v69 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v68));
  LODWORD(v27) = ((v69 & 0xCF9C99AF) + 1291794498 - ((2 * v69) & 0x99383004)) ^ *(_DWORD *)(STACK[0xAA0]
                                                                                          + 4 * BYTE1(v64));
  LODWORD(v20) = (v20 + 1291794498 - ((2 * v20) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v68));
  v99 = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v64)) ^ ((v98 ^ 0x7F197CCA)
                                                      + 1799845370
                                                      - 2 * ((v98 ^ 0x7F197CCA) & 0x6B4775FE ^ v98 & 4));
  v100 = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v64)) ^ LODWORD(STACK[0x8B8]);
  v101 = (v99 + 1291794498 - ((2 * v99) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v63));
  v102 = *(_DWORD *)(STACK[0xA98] + 4 * v97);
  LODWORD(v69) = (v27 ^ v69 & 0x30636650) + 1945955426 - 2 * ((v27 ^ v69 & 0x30636650) & 0x73FCEC6E ^ v27 & 0xC);
  LODWORD(v27) = (2 * v20) & 0xE7F9D8C4;
  v103 = *(_DWORD *)(STACK[0xA98] + 4 * v68);
  LODWORD(v68) = v20 + 1945955426;
  LODWORD(v20) = *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v97));
  v104 = v68 - v27;
  LODWORD(v68) = ((v100 ^ 0x7F197CCA) + 1799845370 - 2 * ((v100 ^ 0x7F197CCA) & 0x6B4775FB ^ v100 & 1)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v63));
  LODWORD(v64) = v104 ^ *(_DWORD *)(STACK[0xA98] + 4 * v64);
  v105 = v102 ^ 0x3404382 ^ (v101 + 1945955426 - ((2 * v101) & 0xE7F9D8C4));
  LODWORD(v63) = *(_DWORD *)(STACK[0xA98] + 4 * v63) ^ 0x2B1429C6 ^ v69;
  v106 = v103 ^ 0xBD7C5BE3 ^ (((v68 + 1291794498 - ((2 * v68) & 0x99FE7084)) ^ v20)
                            + 1945955426
                            - ((2 * ((v68 + 1291794498 - ((2 * v68) & 0x99FE7084)) ^ v20)) & 0xE7F9D8C4));
  LODWORD(v69) = *(_DWORD *)(STACK[0xAB0] + 4 * ((v64 ^ 0x5F135600) >> 24)) ^ LODWORD(STACK[0x900]);
  LODWORD(v27) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v63)) ^ LODWORD(STACK[0x8B0]);
  LODWORD(v69) = ((v69 ^ 0x7F197CCA) + 1799845370 - 2 * ((v69 ^ 0x7F197CCA) & 0x6B4775FE ^ v69 & 4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v63));
  v107 = ((v27 ^ 0x7F197CCA) + 1799845370 - 2 * ((v27 ^ 0x7F197CCA) & 0x6B4775FF ^ v27 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v105));
  v108 = LODWORD(STACK[0x8A8]) ^ 0x7F197CCA ^ *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v106));
  LODWORD(v20) = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v105)) ^ LODWORD(STACK[0x778]);
  LODWORD(v69) = (v69 + 1291794498 - ((2 * v69) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v105));
  LODWORD(v27) = v106;
  LODWORD(v20) = ((v20 ^ 0x7F197CCA) + 1799845370 - 2 * ((v20 ^ 0x7F197CCA) & 0x6B4775FE ^ v20 & 4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v106));
  LODWORD(v20) = (v20 + 1291794498 - ((2 * v20) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0]
                                                                           + 4
                                                                           * ((unsigned __int16)(v64 ^ 0x5600) >> 8));
  v109 = (v107 + 1291794498 - ((2 * v107) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v106));
  v110 = *(_DWORD *)(STACK[0xA98] + 4 * v105);
  v111 = *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v63));
  LODWORD(v31) = (v108 + 1799845370 - ((2 * v108) & 0xD68EEBF4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * (BYTE2(v64) ^ 0x13u));
  LODWORD(v63) = *(_DWORD *)(STACK[0xA98] + 4 * v63) ^ 0xF432D3A ^ (v20
                                                                                     + 1945955426
                                                                                     - ((2 * v20) & 0xE7F9D8C4));
  v112 = *(_DWORD *)(STACK[0xA98] + 4 * v64) ^ 0xC7C0F071 ^ (v109
                                                                              + 1945955426
                                                                              - ((2 * v109) & 0xE7F9D8C4));
  LODWORD(v68) = *(_DWORD *)(STACK[0xA98] + 4 * v27) ^ 0xF0181A0B ^ (v69
                                                                                   + 1945955426
                                                                                   - ((2 * v69) & 0xE7F9D8C4));
  v113 = (v31 + 1291794498 - ((2 * v31) & 0x99FE7084)) ^ v111;
  v114 = v110 ^ 0x22DE5568 ^ (v113 + 1945955426 - ((2 * v113) & 0xE7F9D8C4));
  LODWORD(v64) = *(_DWORD *)(STACK[0xA98]
                           + 4
                           * (*(_BYTE *)(STACK[0xA98] + 4 * v27) ^ 0xBu ^ (v69 + 98 - ((2 * v69) & 0xC4))));
  LODWORD(v69) = LODWORD(STACK[0x8C8]) ^ 0x7F197CCA ^ *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v112));
  LODWORD(v20) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v68)) ^ LODWORD(STACK[0x798]);
  v115 = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v63)) ^ LODWORD(STACK[0x918]);
  LODWORD(v69) = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v63)) ^ (v69 + 1799845370 - ((2 * v69) & 0xD68EEBF4));
  v116 = ((v115 ^ 0x7F197CCA) + 1799845370 - 2 * ((v115 ^ 0x7F197CCA) & 0x6B4775FF ^ v115 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v114));
  LODWORD(v20) = ((v20 ^ 0x7F197CCA) + 1799845370 - 2 * ((v20 ^ 0x7F197CCA) & 0x6B4775FE ^ v20 & 4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v112));
  v117 = (v116 + 1945955426 - ((2 * v116) & 0xE7F9D8C4)) ^ *(_DWORD *)(STACK[0xA98] + 4 * v112);
  LODWORD(v69) = (v69 + 1291794498 - ((2 * v69) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v114));
  LODWORD(v27) = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v114)) ^ LODWORD(STACK[0x7B0]);
  v118 = *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v68));
  LODWORD(v20) = (v20 + 1291794498 - ((2 * v20) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v63));
  LODWORD(v68) = ((v27 ^ 0x7F197CCA) + 1799845370 - 2 * ((v27 ^ 0x7F197CCA) & 0x6B4775FF ^ v27 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v68));
  v119 = (v68 + 1291794498 - ((2 * v68) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v112));
  LODWORD(v68) = v64 ^ 0xDCE8CD8E ^ (v69 + 1945955426 - ((2 * v69) & 0xE7F9D8C4));
  LODWORD(v64) = *(_DWORD *)(STACK[0xA98] + 4 * v114) ^ 0x241225C7;
  v120 = *(_DWORD *)(STACK[0xA98] + 4 * v63) ^ 0x3E3262EA ^ (v119
                                                                              + 1945955426
                                                                              - ((2 * v119) & 0xE7F9D8C4));
  LODWORD(v64) = v64 ^ (v20 + 1945955426 - ((2 * v20) & 0xE7F9D8C4));
  LODWORD(v63) = v118 ^ 0xDDB3F109 ^ (v117 + 1291794498 - ((2 * v117) & 0x99FE7084));
  LODWORD(v69) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v64)) ^ LODWORD(STACK[0x8E0]);
  LODWORD(v20) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v68)) ^ LODWORD(STACK[0x790]);
  LODWORD(v27) = ((v69 ^ 0x7F197CCA) + 1799845370 - 2 * ((v69 ^ 0x7F197CCA) & 0x6B4775FF ^ v69 & 5)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v68));
  LODWORD(v69) = *(_DWORD *)(STACK[0xA98] + 4 * v68);
  LODWORD(v20) = ((v20 ^ 0x7F197CCA) + 1799845370 - 2 * ((v20 ^ 0x7F197CCA) & 0x6B4775FE ^ v20 & 4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v63));
  LODWORD(v20) = (v20 + 1291794498 - ((2 * v20) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v120));
  v121 = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v63)) ^ LODWORD(STACK[0x7D8]);
  v122 = *(_DWORD *)(STACK[0xA98] + 4 * v64);
  v123 = ((v121 ^ 0x7F197CCA) + 1799845370 - 2 * ((v121 ^ 0x7F197CCA) & 0x6B4775FB ^ v121 & 1)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v120));
  LODWORD(v27) = (v27 + 1291794498 - ((2 * v27) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v63));
  LODWORD(v68) = *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v68));
  v124 = (v123 + 1291794498 - ((2 * v123) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v64));
  LODWORD(v64) = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v64));
  v125 = v68 ^ v64 ^ 0xD847B247;
  LODWORD(v68) = v68 ^ 0x4CFF3842;
  LODWORD(v20) = (v20 + 1945955426 - ((2 * v20) & 0xE7F9D8C4)) ^ v122;
  v126 = (v68 + v125 + 1) ^ ((v64 ^ 0x94B88A05) + 1);
  v127 = *(_DWORD *)(STACK[0xA98] + 4 * v63);
  LODWORD(v68) = LODWORD(STACK[0x8D8]) ^ 0x7F197CCA ^ *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v120)) ^ (((v126 + 1799845370 - ((2 * v126) & 0xD68EEBF4)) ^ v64) + v68);
  LODWORD(v63) = v20 + 238362747 - ((2 * v20) & 0x1C6A40F6);
  v128 = *(_DWORD *)(STACK[0xA98] + 4 * v120) ^ 0xF4577551 ^ (v27
                                                                               + 1945955426
                                                                               - ((2 * v27) & 0xE7F9D8C4));
  LODWORD(v64) = v69 ^ 0xC875BF0D ^ (v124 + 1945955426 - ((2 * v124) & 0xE7F9D8C4));
  LODWORD(v69) = v127 ^ 0x7CB20441 ^ (v68 + 1945955426 - ((2 * v68) & 0xE7F9D8C4));
  LODWORD(v68) = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v128)) ^ LODWORD(STACK[0x938]);
  v129 = LODWORD(STACK[0x808]) ^ 0x7F197CCA ^ *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v63));
  v130 = ((v68 ^ 0x7F197CCA) + 1799845370 - 2 * ((v68 ^ 0x7F197CCA) & 0x6B4775FB ^ v68 & 1)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v63));
  LODWORD(v68) = *(_DWORD *)(STACK[0xA98] + 4 * v69);
  v131 = (v129 + 1799845370 - ((2 * v129) & 0xD68EEBF4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v64));
  LODWORD(v27) = v131 + 1291794498 - ((2 * v131) & 0x99FE7084);
  v132 = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v69));
  LODWORD(v27) = v27 ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v69));
  v133 = (v130 + 1291794498 - ((2 * v130) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v64));
  v134 = *(_DWORD *)(STACK[0xA98] + 4 * v128);
  LODWORD(v20) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v64)) ^ LODWORD(STACK[0x7C8]);
  v135 = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v128));
  v136 = ((v20 ^ 0x7F197CCA) + 1799845370 - 2 * ((v20 ^ 0x7F197CCA) & 0x6B4775FB ^ v20 & 1)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v69));
  LODWORD(v69) = v27 + 1945955426 - ((2 * v27) & 0xE7F9D8C4);
  LODWORD(v20) = *(_DWORD *)(STACK[0xA98] + 4 * v64);
  v137 = (v136 + 1291794498 - ((2 * v136) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v128));
  LODWORD(v27) = v63;
  v138 = ((v135 ^ LODWORD(STACK[0x7C0]) ^ 0x5E60CC7)
        + 297272823
        - 2 * ((v135 ^ LODWORD(STACK[0x7C0]) ^ 0x5E60CC7) & 0x11B805FF ^ (v135 ^ LODWORD(STACK[0x7C0])) & 8)) ^ v132;
  LODWORD(v63) = *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v63));
  v139 = (v138 + 1291794498 - ((2 * v138) & 0x99FE7084)) ^ v63;
  LODWORD(v64) = ((LODWORD(STACK[0x7C0]) ^ 0x7F197CCA ^ v132)
                + 1799845370
                - ((2 * (LODWORD(STACK[0x7C0]) ^ 0x7F197CCA ^ v132)) & 0xD68EEBF4)) ^ v135;
  v140 = v68 ^ 0x62CA7985;
  LODWORD(v68) = v134 ^ 0x49F34D5B ^ v69;
  v141 = (v139 + 1945955426 - ((2 * v139) & 0xE7F9D8C4)) ^ v20;
  LODWORD(v63) = (v64 + 1291794498 - ((2 * v64) & 0x99FE7084)) ^ v63;
  v142 = v140 ^ (v133 + 1945955426 - ((2 * v133) & 0xE7F9D8C4));
  LODWORD(v64) = *(_DWORD *)(STACK[0xA98] + 4 * v27) ^ 0x3310FA5E ^ (v137
                                                                                   + 1945955426
                                                                                   - ((2 * v137) & 0xE7F9D8C4));
  v143 = (v63 + 1945955426 - ((2 * v63) & 0xE7F9D8C4)) ^ v20;
  LODWORD(v63) = *(_DWORD *)(STACK[0xAB0] + 4 * HIBYTE(v142)) ^ LODWORD(STACK[0x788]);
  LODWORD(v63) = ((v63 ^ 0x7F197CCA) + 1799845370 - 2 * ((v63 ^ 0x7F197CCA) & 0x6B4775FE ^ v63 & 4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v68));
  v144 = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v68)) ^ LODWORD(STACK[0x768]);
  LODWORD(v63) = (v63 + 1291794498 - ((2 * v63) & 0x99FE7084)) ^ *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v64));
  LODWORD(v20) = ((v144 ^ 0x7F197CCA) + 1799845370 - 2 * ((v144 ^ 0x7F197CCA) & 0x6B4775FE ^ v144 & 4)) ^ *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v64));
  v145 = v20 + 1291794498 - ((2 * v20) & 0x99FE7084);
  v146 = *(_DWORD *)(STACK[0xAB0] + 4 * ((v141 ^ 0x2B1C4E00u) >> 24)) ^ LODWORD(STACK[0x710]);
  LODWORD(v63) = v63 + 1945955426 - ((2 * v63) & 0xE7F9D8C4);
  LODWORD(v20) = v145 ^ *(_DWORD *)(STACK[0xAA0] + 4 * ((unsigned __int16)(v141 ^ 0x4E00) >> 8));
  v147 = v146 ^ 0x7F197CCA;
  LODWORD(v48) = (v146 ^ 0x7F197CCA) & 0x6B4775FF ^ v146 & 5;
  v148 = *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v142));
  LODWORD(v69) = *(_DWORD *)(STACK[0xAB0] + 4 * BYTE3(v64)) ^ LODWORD(STACK[0x780]);
  LODWORD(v48) = v147 + 1799845370 - 2 * v48;
  LODWORD(v27) = v69 ^ 0x58A13172 ^ *(_DWORD *)(STACK[0xAA8] + 4 * ((v141 ^ 0x2B1C4E00u) >> 16)) ^ v148;
  v149 = v27 + 1945955426 - ((2 * v27) & 0xE7F9D8C4);
  LODWORD(v27) = *(_DWORD *)(STACK[0xAA8] + 4 * BYTE2(v142));
  v150 = *(_DWORD *)(STACK[0xAA0] + 4 * BYTE1(v68));
  LODWORD(v48) = ((v48 ^ v27) + 1291794498 - ((2 * (v48 ^ v27)) & 0x99FE7084)) ^ v150;
  LODWORD(v31) = *(_DWORD *)(STACK[0xAA8] + 4 * ((v143 ^ 0x2B1C4E00u) >> 16)) ^ ((v69 ^ 0x7F197CCA)
                                                                                                  + 1799845370
                                                                                                  - 2 * ((v69 ^ 0x7F197CCA) & 0x6B4775FE ^ v69 & 4));
  LODWORD(v69) = v145 ^ *(_DWORD *)(STACK[0xAA0] + 4 * ((unsigned __int16)(v143 ^ 0x4E00) >> 8));
  v151 = *(_DWORD *)(STACK[0xAB0] + 4 * ((v143 ^ 0x2B1C4E00u) >> 24)) ^ LODWORD(STACK[0x710]);
  v152 = *(_DWORD *)(STACK[0xA98] + 4 * v142);
  LODWORD(v21) = ((v151 ^ 0x7F197CCA) + 1291794498 - 2 * ((v151 ^ 0x7F197CCA) & 0x4CFF3857 ^ v151 & 0x15)) ^ v150;
  v153 = *(_DWORD *)(STACK[0xA98] + 4 * v64);
  LODWORD(v64) = (v31 + 1291794498 - ((2 * v31) & 0x99FE7084)) ^ v148;
  v154 = *(_DWORD *)(STACK[0xA98] + 4 * v141) ^ 0xD51BBAE ^ v63;
  v155 = v64 + 1945955426 - ((2 * v64) & 0xE7F9D8C4);
  LODWORD(v64) = v152 ^ 0x982488FC ^ (v20 + 1945955426 - ((2 * v20) & 0xE7F9D8C4));
  LODWORD(v20) = (2 * v21) & 0xD68EEBF4;
  v156 = v21 + 1799845370;
  LODWORD(v21) = (v48 + 1945955426 - ((2 * v48) & 0xE7F9D8C4)) ^ v153;
  LODWORD(v48) = (((v156 - v20) ^ v27) + 1945955426 - ((2 * ((v156 - v20) ^ v27)) & 0xE7F9D8C4)) ^ v153;
  LODWORD(v20) = *(_DWORD *)(STACK[0xA98] + 4 * v68) ^ 0xDD1EFA37;
  v157 = v20 ^ v149;
  LODWORD(v68) = *(_DWORD *)(STACK[0xAC0] + 4 * HIBYTE(v154)) ^ 0x37F0C45B ^ *(_DWORD *)(STACK[0xA90]
                                                                                         + 4 * BYTE2(v64));
  LODWORD(v68) = (v68 + 813119897 - ((2 * v68) & 0x60EE7332)) ^ *(_DWORD *)(STACK[0xAC8] + 4 * BYTE1(v157));
  LODWORD(v27) = *(_DWORD *)(STACK[0xA90] + 4 * BYTE2(v157)) ^ 0x37F0C45B ^ *(_DWORD *)(STACK[0xAC0] + 4 * BYTE3(v64));
  LOBYTE(v156) = v21 ^ 0x5C;
  LODWORD(v27) = (v27 + 813119897 - ((2 * v27) & 0x60EE7332)) ^ *(_DWORD *)(STACK[0xAC8]
                                                                          + 4
                                                                          * ((unsigned __int16)(v21 ^ 0xE15C) >> 8));
  v158 = v68 + 1359972454 - ((2 * v68) & 0xA21F10CC);
  LODWORD(v68) = (v27 + 1359972454 - ((2 * v27) & 0xA21F10CC)) ^ *(_DWORD *)(STACK[0xA88] + 4 * v154);
  LODWORD(v27) = *(_DWORD *)(STACK[0xAC0] + 4 * HIBYTE(v157)) ^ *(_DWORD *)(STACK[0xA90]
                                                                            + 4
                                                                            * ((v21 ^ 0x6AE15C) >> 16));
  LODWORD(v31) = *(_DWORD *)(STACK[0xA90] + 4 * BYTE2(v154));
  v159 = ((v27 ^ 0x37F0C45B) + 813119897 - 2 * ((v27 ^ 0x37F0C45B) & 0x307739B9 ^ v27 & 0x20)) ^ *(_DWORD *)(STACK[0xAC8] + 4 * BYTE1(v154));
  LODWORD(v27) = v31 ^ 0x37F0C45B;
  v160 = STACK[0xAD8];
  LODWORD(v27) = v27 ^ *(_DWORD *)(STACK[0xAC0] + 4 * BYTE3(v21));
  LODWORD(v69) = v152 ^ 0x1E36959F ^ (v69 + 1945955426 - ((2 * v69) & 0xE7F9D8C4));
  LODWORD(v21) = *(_DWORD *)(STACK[0xA98] + 4 * v143);
  v161 = *(_DWORD *)(STACK[0xA88] + 4 * v156);
  v162 = *(_DWORD *)(STACK[0xA88] + 4 * v157);
  v163 = v158 ^ v161;
  v164 = v64;
  v165 = (v27 + 813119897 - ((2 * v27) & 0x60EE7332)) ^ *(_DWORD *)(STACK[0xAC8] + 4 * BYTE1(v64));
  v166 = (v165 + 1359972454 - ((2 * v165) & 0xA21F10CC)) ^ v162;
  LODWORD(v63) = v63 ^ 0xD51BBAE ^ v21;
  LODWORD(v64) = v20 ^ v155;
  LODWORD(v37) = __ROR4__(v69, 19) ^ 0x43AC70C2;
  HIDWORD(v37) = v37;
  LODWORD(v69) = v37 >> 13;
  v167 = v159 + 1359972454 - ((2 * v159) & 0xA21F10CC);
  v168 = *(_DWORD *)(STACK[0xA90] + 4 * BYTE2(v69)) ^ 0x37F0C45B ^ *(_DWORD *)(STACK[0xAC0] + 4 * BYTE3(v63));
  v169 = (v168 + 813119897 - ((2 * v168) & 0x60EE7332)) ^ *(_DWORD *)(STACK[0xAC8] + 4 * BYTE1(v64));
  LODWORD(v20) = *(_DWORD *)(STACK[0xAC0] + 4 * BYTE3(v69)) ^ 0x37F0C45B ^ *(_DWORD *)(STACK[0xA90] + 4 * BYTE2(v64));
  v170 = v167 ^ *(_DWORD *)(STACK[0xA88] + 4 * v164);
  v171 = v169 + 1359972454 - ((2 * v169) & 0xA21F10CC);
  v172 = *(_DWORD *)(STACK[0xAC0] + 4 * BYTE3(v64)) ^ 0x37F0C45B ^ *(_DWORD *)(STACK[0xA90]
                                                                               + 4
                                                                               * ((v48 ^ 0x6AE15C) >> 16));
  v173 = v171 ^ *(_DWORD *)(STACK[0xA88] + 4 * (v48 ^ 0x5Cu));
  v174 = (v20 + 813119897 - ((2 * v20) & 0x60EE7332)) ^ *(_DWORD *)(STACK[0xAC8]
                                                                  + 4
                                                                  * ((unsigned __int16)(v48 ^ 0xE15C) >> 8));
  LODWORD(v20) = (v172 + 813119897 - ((2 * v172) & 0x60EE7332)) ^ *(_DWORD *)(STACK[0xAC8] + 4 * BYTE1(v63));
  v175 = v20 + 1359972454 - ((2 * v20) & 0xA21F10CC);
  LODWORD(v20) = (v174 + 1359972454 - ((2 * v174) & 0xA21F10CC)) ^ *(_DWORD *)(STACK[0xA88] + 4 * v63);
  v176 = v175 ^ *(_DWORD *)(STACK[0xA88] + 4 * (v37 >> 13));
  v177 = v163 ^ v173;
  LODWORD(v48) = *(_DWORD *)(STACK[0xA90] + 4 * BYTE2(v63)) ^ 0x37F0C45B ^ *(_DWORD *)(STACK[0xAC0] + 4 * BYTE3(v48));
  LODWORD(v63) = (v48 + 813119897 - ((2 * v48) & 0x60EE7332)) ^ *(_DWORD *)(STACK[0xAC8] + 4 * BYTE1(v69));
  LODWORD(v63) = (v63 + 1359972454 - ((2 * v63) & 0xA21F10CC)) ^ *(_DWORD *)(STACK[0xA88] + 4 * v64);
  LODWORD(v69) = (v68 ^ v20) + v177 + (v170 ^ v176);
  v178 = ((v177 - (v68 ^ v20)) ^ 0x2FAA02B9 ^ v170 ^ v176) + 1909797406 + (v166 ^ v63);
  LODWORD(v69) = v69 + (v166 ^ v63);
  v179 = LODWORD(STACK[0x770]) ^ 0xF1D41E86 ^ v173 ^ (v178 * (_DWORD)v69
                                                    + 1856076093
                                                    - ((2 * v178 * (_DWORD)v69) & 0xDD42F27A));
  v180 = STACK[0x978];
  v181 = *(unsigned __int8 *)(STACK[0x978]
                            + (LOBYTE(STACK[0x770]) ^ 0x86u ^ v173 ^ (v178 * v69 + 61 - ((2 * v178 * v69) & 0x7A)))) ^ 0xC2;
  v182 = STACK[0x868];
  LOBYTE(v181) = (*(_BYTE *)(STACK[0x868] + v181) - (v181 | 0x32)) ^ 0x31;
  v183 = STACK[0x9A8];
  *(_BYTE *)(v183 + STACK[0x9C0]) = v181 + (~(2 * v181) | 0x23) + 111;
  v184 = STACK[0xAB8];
  v185 = *(unsigned __int8 *)(STACK[0xAB8] + BYTE1(v179));
  v186 = STACK[0x880];
  *(_BYTE *)(v183 + STACK[0x9D8]) = ((v185 ^ 0x44) + *(_BYTE *)(STACK[0x880] + (v185 ^ 0xBA)) - (v185 ^ 0xBA | 0x25) + 1) ^ 0xBF;
  v187 = STACK[0x980];
  v188 = *(unsigned __int8 *)(STACK[0x980] + BYTE2(v179)) ^ 0xDBLL;
  v189 = STACK[0x8A0];
  LOBYTE(v188) = *(_BYTE *)(STACK[0x8A0] + v188) - (v188 | 0x40);
  v190 = LODWORD(STACK[0x7A8]) ^ 0x9DE0391C ^ v20 ^ ((v178 + (v68 ^ v20))
                                                                 * (_DWORD)v69
                                                                 + 1856076093
                                                                 - ((2
                                                                   * (v178 + (v68 ^ v20))
                                                                   * (_DWORD)v69) & 0xDD42F27A));
  *(_BYTE *)(v183 + STACK[0xA68]) = v188 ^ (8 * (v188 ^ 0xA) * (v188 ^ 0xA)) ^ 0x38;
  STACK[0xBA8] = v179;
  v191 = *(unsigned __int8 *)(v160 + (v179 >> 24));
  v192 = STACK[0x860];
  v193 = STACK[0xA80];
  *(_BYTE *)(v183 + v193) = v191 ^ (*(_BYTE *)(STACK[0x860] + (v191 ^ 0x5F)) - (v191 ^ 0x5F | 0x29)) ^ 0xE2;
  v194 = *(unsigned __int8 *)(v180 + v190) ^ 0xACLL;
  LOBYTE(v194) = (*(_BYTE *)(v182 + v194) - (v194 | 0x32)) ^ 0xA9;
  v195 = *(unsigned __int8 *)(v184 + BYTE1(v190));
  *(_BYTE *)(v183 + STACK[0x9C8]) = v194 - ((2 * v194) & 0xDD) + 110;
  *(_BYTE *)(v183 + STACK[0x9E0]) = ((v195 ^ 0x22) + *(_BYTE *)(v186 + (v195 ^ 0xDC)) - (v195 ^ 0xDC | 0x25) + 1) ^ 3;
  LODWORD(v51) = v178 ^ v170 ^ v176;
  LODWORD(v68) = (v178 ^ v166 ^ v63) * v69;
  v196 = LODWORD(STACK[0x7A0]) ^ 0x351D5F93 ^ v176;
  LODWORD(v51) = v51 * v69 + 1856076093 - ((2 * v51 * v69) & 0xDD42F27A);
  v197 = *(unsigned __int8 *)(v187 + BYTE2(v190)) ^ 0x46;
  LOBYTE(v197) = *(_BYTE *)(v189 + v197) - (v197 | 0x40);
  STACK[0xBA0] = v190;
  *(_BYTE *)(v183 + STACK[0xA70]) = v197 ^ (8 * (v197 ^ 0xA) * (v197 ^ 0xA)) ^ 0x54;
  *(_BYTE *)(v183 + STACK[0xB68]) = *(_BYTE *)(v160 + (v190 >> 24)) ^ (*(_BYTE *)(v192
                                                                                + (*(unsigned __int8 *)(v160 + (v190 >> 24)) ^ 0xC9))
                                                                     - (*(_BYTE *)(v160 + (v190 >> 24)) ^ 0xC9 | 0x29)) ^ 0xB3;
  LODWORD(v197) = (2 * v68) & 0xDD42F27A;
  v198 = v196 ^ v51;
  v199 = *(unsigned __int8 *)(v180 + (v196 ^ v51));
  LODWORD(v51) = v68 + 1856076093;
  LODWORD(v63) = LODWORD(STACK[0x760]) ^ 0x3143BD95 ^ v63;
  v199 ^= 0x66uLL;
  LOBYTE(v68) = *(_BYTE *)(v182 + v199);
  LOBYTE(v178) = v199 | 0x32;
  LODWORD(v199) = v51 - v197;
  LOBYTE(v51) = ((v68 - v178) ^ 0xB6) - 2 * (((v68 - v178) ^ 0xB6) & 0xEF ^ (v68 - v178) & 1) + 110;
  v200 = *(unsigned __int8 *)(v184 + BYTE1(v198));
  *(_BYTE *)(v183 + STACK[0x9B8]) = v51;
  *(_BYTE *)(v183 + STACK[0xA30]) = ((v200 ^ 0x6B) + *(_BYTE *)(v186 + (v200 ^ 0x95)) - (v200 ^ 0x95 | 0x25) + 1) ^ 0xA4;
  v201 = *(unsigned __int8 *)(v187 + BYTE2(v198));
  LODWORD(v200) = *(unsigned __int8 *)(v189 + (v201 ^ 0xE8));
  LODWORD(v51) = (v200 - (v201 ^ 0xE8 | 0x40)) ^ 0xA;
  HIDWORD(v37) = v200 - v201;
  LODWORD(v37) = (_DWORD)v51 << 24;
  LODWORD(v201) = v37 >> 25;
  HIDWORD(v37) = v201 ^ (4 * v51 * v51) ^ 0x31;
  LODWORD(v37) = (_DWORD)v201 << 24;
  v202 = *(unsigned __int8 *)(v160 + (v198 >> 24));
  *(_BYTE *)(v183 + STACK[0xAD0]) = (v37 >> 31) ^ 0x3B;
  v203 = v63 ^ v199;
  *(_BYTE *)(v183 + STACK[0xB78]) = ((v202 ^ 0x51) - ((2 * v202) & 0x10) + 8) ^ (*(_BYTE *)(v192 + (v202 ^ 0x25))
                                                                               - (v202 ^ 0x25 | 0x29)) ^ 0x51;
  LOBYTE(v201) = *(_BYTE *)(v182 + ~*(_BYTE *)(v180 + (v63 ^ v199)))
               - (~*(_BYTE *)(v180 + (v63 ^ v199)) | 0x32);
  v204 = *(unsigned __int8 *)(v184 + BYTE1(v203));
  *(_BYTE *)(v183 + STACK[0x9D0]) = (v201 ^ 0x4A) + ~(2 * ((v201 ^ 0x4A) & 0xEF ^ v201 & 1)) + 111;
  *(_BYTE *)(v183 + STACK[0xA38]) = ((v204 ^ 0x22) + *(_BYTE *)(v186 + (v204 ^ 0xDC)) - (v204 ^ 0xDC | 0x25) + 1) ^ 3;
  v205 = *(unsigned __int8 *)(v187 + BYTE2(v203)) ^ 0xCDLL;
  v206 = *(unsigned __int8 *)(v160 + (v203 >> 24));
  *(_BYTE *)(v183 + STACK[0xA78]) = (*(_BYTE *)(v189 + v205) - (v205 | 0x40)) ^ (8
                                                                               * ((*(_BYTE *)(v189 + v205)
                                                                                 - (v205 | 0x40)) ^ 0xA)
                                                                               * ((*(_BYTE *)(v189 + v205)
                                                                                 - (v205 | 0x40)) ^ 0xA)) ^ 0xF7;
  *(_BYTE *)(v183 + STACK[0xB70]) = v206 ^ (*(_BYTE *)(v192 + (v206 ^ 0xFC)) - (v206 ^ 0xFC | 0x29)) ^ 0xBC;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * ((480
                                          * ((((_DWORD)v193 + 1117507240 - ((2 * (_DWORD)v193 + 32) & 0x85379D50) + 16) ^ 0x429BCEA8) < STACK[0xB98])) ^ LODWORD(STACK[0xBC0])))
                            - 4))();
}

uint64_t sub_1000DE1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  *(_QWORD *)(a8 + 1464) = 0;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((v8 ^ 0xBE4) + v8)))();
}

uint64_t sub_1000DE4D4()
{
  int v0;
  int v1;

  LODWORD(STACK[0x123C]) = v0;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((v1 - 3498) ^ (v1 - 819938172) & 0x30DF3FFD ^ 0x3AA)))();
}

uint64_t sub_1000DE520@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * a1))();
}

uint64_t sub_1000DE554()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((3314 * (v2 == v0)) ^ (v1 - 3134))) - STACK[0x5D8] + 612))();
}

uint64_t sub_1000DE5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  int v53;

  LODWORD(STACK[0x12B4]) = v52;
  LODWORD(STACK[0x1720]) = v53;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * (a8 ^ (2023 * a7))) - a52 + 345))(a1, a2, a3, a4, a5, a6, 1347, &STACK[0xCC8]);
}

uint64_t sub_1000DE7B0()
{
  _QWORD *v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (((((*(_QWORD *)(*v0 - 0x631F30597EADA398) == 0) ^ (37 * (v1 ^ 0xE5))) & 1)
                                          * (v1 + 3190)) ^ v1))
                            - 8))();
}

uint64_t sub_1000DEC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, int a4@<W4>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int8x16_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int8x16_t v16;

  v13 = (a4 - a5 + v6);
  v14 = a1 + (v13 + a3);
  v15 = a2 + v13;
  v16 = veorq_s8(*(int8x16_t *)(v14 - 31), v12);
  *(int8x16_t *)(v15 - 15) = veorq_s8(*(int8x16_t *)(v14 - 15), v12);
  *(int8x16_t *)(v15 - 31) = v16;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((((((v9 - 2926) | v8) ^ a6) + a5 == v10) * v7) ^ v11)))();
}

uint64_t sub_1000DECA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * ((((v8 ^ 0xB0C) + 1678) * ((_DWORD)a7 != v7)) ^ v8)) - 4))(a1, a2, a3, a4, a5, a6, a7, 1);
}

uint64_t sub_1000DEDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * (((((a5 - 165596073) & 0x9DECF77) + 2699) * (a7 == v7)) ^ a5))
                            - 107 * (a5 ^ 0xB8D)
                            + 3951))();
}

uint64_t sub_1000DEFE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((109 * ((v8 & 1 | (((a3 ^ a8) & 1) == 0)) == 0)) ^ (v9 - 2368)))
                            - 8))();
}

uint64_t sub_1000DF5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0xC38] + 8 * (a6 - 3004)) - 4))(a1, a2, a3, a3 & 0x1E0, 0, (__n128)0, (__n128)0, (__n128)0, (__n128)0, (__n128)0, (__n128)0, (__n128)0, (__n128)0);
}

uint64_t sub_1000DFAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  unint64_t v51;

  v51 = STACK[0xC38];
  STACK[0xC20] = *(_QWORD *)(STACK[0xC38] + 8 * a51);
  return ((uint64_t (*)(void))(*(_QWORD *)(v51 + 8 * ((int)a51 + 902)) - (a51 ^ 0x151)))();
}

uint64_t sub_1000DFB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  int v51;
  int v52;

  LODWORD(STACK[0x12B4]) = v50;
  LODWORD(STACK[0x1734]) = v52;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * ((v51 - 3134) ^ (6293 * a8))) - (a50 ^ 0x11A)))(a1, a2, a3, a4, a5, a6, 1347, &STACK[0xCC8]);
}

uint64_t sub_1000E0158@<X0>(_QWORD *a1@<X7>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  **(_QWORD **)(v4 + 840) = a2;
  a1[202] = a1[202] + 19 * (v2 ^ 0x11D8u) - 6419;
  v5 = a1[35];
  a1[161] = v5;
  STACK[0xC50] = a1[41];
  LODWORD(STACK[0xD4C]) = STACK[0x1124];
  a1[83] = 0;
  LODWORD(STACK[0x13E4]) = 62861873;
  LODWORD(STACK[0xE5C]) = 0;
  a1[49] = 0;
  a1[99] = 0;
  LODWORD(STACK[0xE24]) = 0;
  LODWORD(STACK[0x1350]) = 0;
  a1[55] = 0;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((v5 == 0x631F30597EADA3F0) * ((37 * (v2 ^ v3)) ^ 0xF4C)) ^ v2)))();
}

uint64_t sub_1000E04FC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;

  STACK[0x1550] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v2) - (a1 ^ 0x33D)))();
}

uint64_t sub_1000E0B08@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0xC38];
  *(_QWORD *)(v2 + 344) = *(_QWORD *)(STACK[0xC38] + 8 * v1) - 4;
  return ((uint64_t (*)(unint64_t *))(*(_QWORD *)(v3 + 8 * (int)(v1 ^ (v1 + a1) ^ 0x106E)) - 8))(&STACK[0x2000]);
}

uint64_t sub_1000E0E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  LODWORD(STACK[0x12B4]) = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(STACK[0xC38] + 8 * (v8 - 1642)))(a1, a2, a3, a4, a5, a6, a7, &STACK[0xCC8]);
}

uint64_t sub_1000E0E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int *v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *v7;
  *(_QWORD *)(v10 + 1616) += (v9 + 513866942) & 0xE15F0F7F ^ 0xFFFFFFFFFFFFF087;
  v12 = v8 + 933173586 + v11;
  if (v12 < 0)
    v12 = -v12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * ((165 * (v12 < 0x5B)) ^ v9)) - 4))(a1, a2, a3, a4, a5, a6, a7, &STACK[0xCC8]);
}

uint64_t sub_1000E3180@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;

  LODWORD(STACK[0xBA8]) = LODWORD(STACK[0xA30]) ^ 0xD0;
  LODWORD(STACK[0xB78]) = LODWORD(STACK[0x9D8]) ^ 0x61;
  LODWORD(STACK[0xBC0]) = LODWORD(STACK[0x9E0]) ^ 0x61;
  LODWORD(STACK[0xBA0]) = (((v2 + a1) | 0xD10) - 3932) ^ LODWORD(STACK[0x9D0]);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v2))(208);
}

uint64_t sub_1000E4C8C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X5>, int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  BOOL v77;
  int v78;
  int v79;
  _BOOL4 v80;
  int v81;
  unsigned int v82;

  LODWORD(STACK[0x9A8]) = a6;
  LODWORD(STACK[0x9C0]) = v16;
  LODWORD(STACK[0x9C8]) = v12;
  v21 = (STACK[0xBC0] + 1862) | 0x99;
  v22 = LODWORD(STACK[0xBD8]) + *(unsigned __int8 *)(a4 + LODWORD(STACK[0xBD8]));
  v23 = STACK[0xBC0] + 2239;
  LODWORD(STACK[0xA78]) = v21;
  LODWORD(STACK[0x988]) = v23;
  v24 = (-1275965505 * v22 - ((v22 * ((v21 ^ 0x67E4995C) + v23) - 194034514) & a3) - 268684995) ^ v13;
  v25 = STACK[0xB78];
  v26 = STACK[0xAD8];
  v27 = STACK[0xAD0];
  v28 = STACK[0xA68];
  v29 = STACK[0xA38];
  v30 = STACK[0x9D0];
  v31 = a6
      - (v11
       + LODWORD(STACK[0xB78]))
      - v12
      - LODWORD(STACK[0xAD8])
      + LODWORD(STACK[0xAD0])
      + v7
      + LODWORD(STACK[0xA68])
      - v8
      + LODWORD(STACK[0xA38])
      - LODWORD(STACK[0x9D0])
      - LODWORD(STACK[0xB70])
      + v24
      + v24 % 0x101;
  v32 = v20 - 1315101811;
  v33 = STACK[0x9D8];
  v34 = ((((v20 - 1315101811) ^ a7 ^ (((v15 - v9 - v18 + a2 - v16 + a5 + (v31 ^ a1) + 2 * (v31 & a1)) ^ v10) + v14))
        - LODWORD(STACK[0x9D8])) ^ LODWORD(STACK[0xBA8]))
      - LODWORD(STACK[0xBA0]);
  v35 = v19;
  v36 = STACK[0xA30];
  v37 = v19 ^ v17 ^ LODWORD(STACK[0xA30]);
  v38 = STACK[0x9E0];
  v39 = v37 ^ LODWORD(STACK[0x9E0]) ^ v34;
  LODWORD(STACK[0x9B8]) = a5 + 142909680 - ((2 * a5) & 0x110941E0);
  LODWORD(STACK[0x9B0]) = v11 + 142909680 - ((2 * v11) & 0x110941E0);
  LODWORD(STACK[0x990]) = v25 + 142909680 - ((2 * v25) & 0x110941E0);
  LODWORD(STACK[0xB78]) = a1 + 142909680 - ((2 * a1) & 0x110941E0);
  LODWORD(STACK[0x9A0]) = a2 + 142909680 - ((2 * a2) & 0x110941E0);
  v40 = v9 + 142909680 - ((2 * v9) & 0x110941E0);
  v41 = v27 + 142909680 - ((2 * v27) & 0x110941E0);
  v42 = v7 + 142909680 - ((2 * v7) & 0x110941E0);
  LODWORD(STACK[0xAD0]) = v17 + 142909680 - ((2 * v17) & 0x110941E0);
  v43 = a7 + 142909680 - ((2 * a7) & 0x110941E0);
  v44 = v8 + 142909680 - ((2 * v8) & 0x110941E0);
  v45 = STACK[0xA70];
  v46 = v39 + LODWORD(STACK[0xA70]);
  v47 = v38 - v46;
  v48 = v10 + 142909680 - ((2 * v10) & 0x110941E0);
  v49 = v35;
  v50 = v46 - ((2 * v46 + 43698418) & 0x110941E0) - 1177418391;
  v51 = (v50 ^ 0xF77B5F0F) + 1 + v26;
  v52 = (v50 ^ 0xF77B5F0F) + 1 + v30;
  v53 = (v50 ^ 0xF77B5F0F) + 1 + LODWORD(STACK[0x9C8]);
  v54 = (v50 ^ 0xF77B5F0F) + 1 + v29;
  v55 = (v50 ^ 0xF77B5F0F) + 1 + LODWORD(STACK[0x9A8]);
  v56 = (v50 ^ 0xF77B5F0F) + 1 + v14;
  v57 = (v50 ^ 0xF77B5F0F) + 1 + v36;
  v58 = (v50 ^ 0xF77B5F0F) + 1 + v28;
  v59 = (v50 ^ 0xF77B5F0F) + 1 + v49;
  v60 = v33 + 142909680 - ((2 * v33) & 0x110941E0);
  v61 = v50 ^ LODWORD(STACK[0x990]);
  v62 = v50 ^ v41;
  v63 = v50 ^ LODWORD(STACK[0x9B0]);
  LODWORD(STACK[0xA38]) = v54;
  LODWORD(STACK[0xA68]) = v58;
  LODWORD(STACK[0xA30]) = v52;
  v64 = v58 - v54 - v52;
  v65 = (v50 ^ 0xF77B5F0F) + 1 + v15;
  LODWORD(STACK[0x9E0]) = v63;
  v66 = v64 + v63 + ((v62 - v61 + (v50 >> 31) + ((2 * v50) ^ 0x110941E0)) ^ v51);
  v67 = v50 ^ LODWORD(STACK[0x9B8]);
  v68 = (v50 ^ 0x884A0F0) + LODWORD(STACK[0xB70]);
  LODWORD(STACK[0x9B8]) = v68;
  LODWORD(STACK[0x9B0]) = v50 ^ v40;
  v69 = (v50 ^ v40) - v68 + (v66 ^ v67);
  v70 = v50 ^ LODWORD(STACK[0xB78]);
  v71 = v50 ^ LODWORD(STACK[0x9A0]);
  v72 = (v50 ^ 0x884A0F0) + LODWORD(STACK[0x9C0]);
  v73 = (v50 ^ 0x884A0F0) + LODWORD(STACK[0x998]);
  LODWORD(STACK[0x9A8]) = v50 ^ v44;
  LODWORD(STACK[0x9D0]) = v71;
  LODWORD(STACK[0x9C0]) = v65;
  LODWORD(STACK[0xB70]) = v55;
  LODWORD(STACK[0x9D8]) = v56;
  LODWORD(STACK[0x9C8]) = v50 ^ v43;
  v74 = ((v47
        + 1320328071
        - (LODWORD(STACK[0xBA8])
         + LODWORD(STACK[0xBA0]))
        - (v50 ^ LODWORD(STACK[0xAD0]))
        + (((v50 ^ 0xF77B5F0F)
          + 1
          + v32
          - (v56
           + (v50 ^ v43))
          + (v42 ^ v55 ^ v48 ^ v73 ^ ((((((v69 ^ v53) + (v50 ^ v44)) ^ v71) + v72) ^ v70) - v65))) ^ v50 ^ v60)) ^ v57)
      + v59;
  LODWORD(STACK[0xA70]) = (v50 ^ 0x884A0F0) + v45;
  v75 = (v74 ^ ((v50 ^ 0x884A0F0) + v45)) - ((2 * (v74 ^ ((v50 ^ 0x884A0F0) + v45)) + 1526432520) & 0xEB891DCC);
  v76 = LODWORD(STACK[0xBD8]) + 1230975561;
  v77 = v76 >= LODWORD(STACK[0x970]);
  v78 = (LODWORD(STACK[0x970]) < 0x495F3248) ^ (v76 < 0x495F3248);
  v79 = !v77;
  if (v78)
    v80 = LODWORD(STACK[0x970]) < 0x495F3248;
  else
    v80 = v79;
  v81 = STACK[0xBC0] ^ (8 * (!v80 & 0xFFFFFFFB | (4 * !v80)));
  v82 = v75 + 591548522;
  LODWORD(STACK[0xB78]) = (v82 ^ 0x8A3B7119) + v61 + 1;
  LODWORD(STACK[0xAD8]) = (v82 ^ 0x75C48EE6) + v51;
  LODWORD(STACK[0xAD0]) = v82 ^ (v62 + 1975815910 - ((2 * v62) & 0xEB891DCC));
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * v81))();
}

uint64_t sub_1000E599C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _DWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = (_DWORD *)STACK[0xB68];
  LODWORD(STACK[0x990]) = *(_DWORD *)(STACK[0xB68] + 9292);
  LODWORD(STACK[0x988]) = v5[2325];
  LODWORD(STACK[0x970]) = v5[2324];
  LODWORD(STACK[0x958]) = LODWORD(STACK[0xBA0]) ^ 0x4ED3AB14;
  LODWORD(STACK[0x968]) = v5[2322];
  LODWORD(STACK[0x960]) = v5[2328];
  LODWORD(STACK[0x950]) = v5[2338];
  LODWORD(STACK[0x948]) = v5[2321];
  LODWORD(STACK[0x940]) = v5[2331];
  LODWORD(STACK[0x938]) = v5[2352];
  LODWORD(STACK[0x930]) = v5[2336];
  LODWORD(STACK[0x920]) = v5[2320];
  LODWORD(STACK[0x918]) = v5[2346];
  LODWORD(STACK[0x910]) = v5[2330];
  LODWORD(STACK[0x908]) = v5[2334];
  LODWORD(STACK[0x900]) = v5[2340];
  LODWORD(STACK[0x8F8]) = v5[2326];
  LODWORD(STACK[0x8F0]) = v5[2337];
  LODWORD(STACK[0x8E8]) = v5[2329];
  LODWORD(STACK[0x8E0]) = v5[2348];
  LODWORD(STACK[0x8D8]) = v5[2351];
  LODWORD(STACK[0x8D0]) = v5[2333];
  LODWORD(STACK[0x8C8]) = v5[2345];
  LODWORD(STACK[0x8C0]) = v5[2327];
  LODWORD(STACK[0x8B8]) = LODWORD(STACK[0x770]) - 1676580025;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                                                                + 8
                                                                                                * SLODWORD(STACK[0xBD8]))
                                                                                    - 4);
  LODWORD(STACK[0x8B0]) = v5[2339];
  LODWORD(STACK[0x8A8]) = v5[2341];
  LODWORD(STACK[0x808]) = v5[2343];
  LODWORD(STACK[0x7D8]) = v5[2353];
  LODWORD(STACK[0x7D0]) = v5[2350];
  LODWORD(STACK[0x7C8]) = v5[2332];
  LODWORD(STACK[0x7C0]) = v5[2354];
  LODWORD(STACK[0x7B8]) = v5[2355];
  LODWORD(STACK[0x7B0]) = v5[2335];
  LODWORD(STACK[0x7A8]) = v5[2347];
  LODWORD(STACK[0x7A0]) = v5[2361];
  LODWORD(STACK[0x798]) = v5[2362];
  LODWORD(STACK[0x790]) = v5[2344];
  LODWORD(STACK[0x788]) = v5[2349];
  LODWORD(STACK[0x780]) = v5[2356];
  LODWORD(STACK[0x778]) = v5[2358];
  LODWORD(STACK[0x770]) = v5[2342];
  LODWORD(STACK[0x768]) = v5[2360];
  LODWORD(STACK[0x760]) = v5[2357];
  LODWORD(STACK[0x710]) = v5[2363];
  STACK[0x9A0] = (unint64_t)v5 + 6041;
  LODWORD(STACK[0x708]) = v5[2359];
  return v6(a1, a2, a3, 74, a5, 2005767980);
}

uint64_t sub_1000EC1C4(char a1, uint64_t a2, unint64_t a3, int a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  int v7;
  int v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  int v44;
  unint64_t v45;
  int v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unsigned int v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned __int8 v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  char v102;
  int v103;
  int v104;
  unsigned int v105;
  char v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  char v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  char v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  BOOL v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  char v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  unint64_t v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  char v195;
  char v196;
  unsigned int v197;
  unsigned int v198;
  char v199;
  int v200;
  unsigned int v201;
  char v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  BOOL v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  char v267;
  int v268;
  unsigned int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  int v280;
  int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  char v303;
  int v304;
  int v305;
  unsigned int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unint64_t v342;
  int v343;
  int v344;
  unint64_t v345;
  unint64_t v346;
  int v347;
  unint64_t v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  int v379;
  int v380;
  unint64_t v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  __int16 v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  unsigned int v414;
  int v415;
  int v416;
  int v417;
  unsigned int v418;
  int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  int v426;
  unint64_t v427;
  int v428;
  int v429;
  int v430;
  unsigned int v431;
  int v432;
  int v433;
  int v434;
  unint64_t v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  int v451;
  int v452;
  unsigned int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  unsigned int v458;
  int v459;
  int v460;
  unsigned int v461;
  int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  unsigned int v488;
  unsigned int v489;
  int v490;
  unint64_t v491;
  int v492;
  unint64_t v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  unsigned int v499;
  int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  unsigned int v522;
  unsigned int v523;
  int v524;
  unint64_t v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  unsigned int v553;
  unsigned int v554;
  int v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  unsigned int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unint64_t v570;
  unsigned int v571;
  unint64_t v572;
  unsigned int v573;
  unsigned __int8 v574;
  int v575;
  unsigned int v576;
  unint64_t v577;
  unint64_t v578;
  unsigned int v579;
  int v580;
  int v581;
  unint64_t v582;
  unsigned int v583;
  int v584;
  int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unint64_t v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  unsigned int v596;
  int v597;
  int v598;
  unsigned int v599;
  int v600;
  unsigned int v601;
  int v602;
  unint64_t v603;
  unsigned int v604;
  int v605;
  int v606;
  unsigned int v607;
  unsigned int v608;
  int v609;
  unsigned int v610;
  int v611;
  unsigned int v612;
  unint64_t v613;
  int v614;
  unsigned int v615;
  int v616;
  unsigned int v617;
  unsigned int v618;
  unsigned int v619;
  int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  BOOL v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  unint64_t v629;
  char v630;
  char v631;
  unint64_t v632;
  unsigned int v633;
  char v634;
  unsigned int v635;
  unsigned int v636;
  int v637;
  char v638;
  char v639;
  char v640;
  unsigned int v641;
  char v642;
  int v643;
  int v644;
  unsigned int v645;
  unint64_t v646;
  int v647;

  v13 = v8 & 0xFFFFFFF6 ^ 0x7C214C7D;
  STACK[0x928] = v13;
  v14 = STACK[0x368];
  v15 = *(unsigned __int8 *)(STACK[0x368] + v13);
  v16 = STACK[0x3C8];
  v17 = *(unsigned __int8 *)(STACK[0x3C8] + (v15 ^ 0x80));
  HIDWORD(v18) = v17 - (v15 | 5);
  LODWORD(v18) = (v17 - (v15 ^ 0x80 | 0x75)) << 24;
  LOBYTE(v15) = v18 >> 28;
  v19 = 17 * (v7 ^ 0x4EC);
  v20 = v8 & 0xFFFFFFFD ^ 0x7C214C7F;
  STACK[0x910] = v20;
  LODWORD(v20) = *(unsigned __int8 *)(v14 + v20);
  LODWORD(STACK[0x2E8]) = v19;
  LODWORD(v20) = v19 ^ v20 ^ 0xFFFFFFB9;
  v21 = *(unsigned __int8 *)(v16 + v20);
  v22 = v7;
  LODWORD(STACK[0xAD8]) = v7;
  HIDWORD(v18) = v21 - (v20 | 5);
  LODWORD(v18) = (v21 - (v20 | 0x75)) << 24;
  LOBYTE(v20) = v18 >> 28;
  v23 = v8 & 0xFFFFFFF5 ^ 0x7C214C7F;
  STACK[0x8F0] = v23;
  v24 = *(unsigned __int8 *)(v14 + v23) ^ 0x2DLL;
  v25 = *(unsigned __int8 *)(v16 + v24);
  v26 = v8;
  HIDWORD(v18) = v25 - (v24 | 5);
  LODWORD(v18) = (v25 - (v24 | 0x75)) << 24;
  LOBYTE(v25) = v18 >> 28;
  LODWORD(STACK[0x4F8]) = v22 + 2968;
  v27 = v8 & ((v22 + 2968) ^ 0xFFFFEE68) ^ 0x7C214C7F;
  STACK[0x8F8] = v27;
  v28 = *(unsigned __int8 *)(v14 + v27);
  v29 = *(unsigned __int8 *)(v16 + (v28 ^ 0x75));
  HIDWORD(v18) = v29 - (v28 | 5);
  LODWORD(v18) = (v29 - (v28 | 0x75)) << 24;
  LOBYTE(v28) = v18 >> 28;
  v30 = v26 & 0xFFFFFFFE ^ 0x7C214C7D;
  STACK[0x908] = v30;
  v31 = *(unsigned __int8 *)(v14 + v30) ^ 0xE7;
  v32 = *(unsigned __int8 *)(v16 + v31);
  HIDWORD(v18) = v32 - (v31 | 5);
  LODWORD(v18) = (v32 - (v31 | 0x75)) << 24;
  LOBYTE(v32) = v18 >> 28;
  v33 = v26 & 0xFFFFFFFB ^ 0x7C214C7D;
  STACK[0x920] = v33;
  v34 = *(unsigned __int8 *)(v14 + v33) ^ 0x17;
  v35 = *(unsigned __int8 *)(v16 + v34);
  HIDWORD(v18) = v35 - (v34 | 5);
  LODWORD(v18) = (v35 - (v34 | 0x75)) << 24;
  LOBYTE(v34) = v18 >> 28;
  v36 = v26 ^ 0x7C214C7Du;
  STACK[0x918] = v36;
  v37 = *(unsigned __int8 *)(v14 + v36) ^ 0x7CLL;
  v38 = *(unsigned __int8 *)(v16 + v37);
  HIDWORD(v18) = v38 - (v37 | 5);
  LODWORD(v18) = (v38 - (v37 | 0x75)) << 24;
  LOBYTE(v37) = v18 >> 28;
  v39 = ((v15 ^ 0xA6) << 16) | ((v25 ^ 0x4A) << 8);
  v40 = v26 & 0xFFFFFFF2 ^ 0x7C214C7D;
  STACK[0x900] = v40;
  v41 = *(unsigned __int8 *)(v14 + v40) ^ 0x5ALL;
  v42 = *(unsigned __int8 *)(v16 + v41);
  HIDWORD(v18) = v42 - (v41 | 5);
  LODWORD(v18) = (v42 - (v41 | 0x75)) << 24;
  LOBYTE(v41) = v18 >> 28;
  v43 = v26 & a4 ^ 0x7C214C7Du;
  STACK[0x8B8] = v43;
  v44 = ((v20 ^ 0xCA) << 8) | ((v32 ^ 0x1B) << 16);
  v45 = *(unsigned __int8 *)(v14 + v43) ^ v9;
  LODWORD(v43) = *(unsigned __int8 *)(v16 + v45);
  HIDWORD(v18) = v43 - (v45 | 5);
  LODWORD(v18) = ((_DWORD)v43 - (v45 | 0x75)) << 24;
  LOBYTE(v45) = v18 >> 28;
  v46 = v44 & 0xFFFFFF | ((v37 ^ 0x9D) << 24);
  v47 = (v28 ^ 4) << 8;
  LOBYTE(v28) = v34 ^ a1;
  v48 = v26 & 0xFFFFFFF3 ^ 0x7C214C7D;
  STACK[0x8C0] = v48;
  v49 = *(unsigned __int8 *)(v14 + v48) ^ 0x36;
  LODWORD(v34) = *(unsigned __int8 *)(v16 + v49);
  LODWORD(v37) = v47 & 0xFFFFFF | (v28 << 24);
  HIDWORD(v18) = v34 - (v49 | 5);
  LODWORD(v18) = ((_DWORD)v34 - (v49 | 0x75)) << 24;
  LOBYTE(v28) = v18 >> 28;
  v50 = v26 & 0xFFFFFFF8 ^ 0x7C214C7F;
  STACK[0x8A8] = v50;
  v51 = *(unsigned __int8 *)(v14 + v50) ^ a7;
  LODWORD(v34) = *(unsigned __int8 *)(v16 + v51);
  HIDWORD(v18) = v34 - (v51 | 5);
  LODWORD(v18) = ((_DWORD)v34 - (v51 | 0x75)) << 24;
  LOBYTE(v51) = v18 >> 28;
  LODWORD(v37) = v37 & 0xFF00FFFF | ((v45 ^ 0xDF) << 16);
  v52 = (v41 ^ 0x50) << 16;
  v53 = v26 & 0xFFFFFFF4 ^ 0x7C214C7F;
  STACK[0x8E8] = v53;
  LOBYTE(v41) = v28 ^ 0x63;
  v54 = *(unsigned __int8 *)(v14 + v53) ^ 0x9DLL;
  LODWORD(v28) = *(unsigned __int8 *)(v16 + v54);
  v55 = v52 & 0xFFFFFF | (v41 << 24);
  HIDWORD(v18) = v28 - (v54 | 5);
  LODWORD(v18) = ((_DWORD)v28 - (v54 | 0x75)) << 24;
  LOBYTE(v41) = v18 >> 28;
  v56 = v26 & 0xFFFFFFF7 ^ 0x7C214C7D;
  STACK[0x8C8] = v56;
  v57 = *(unsigned __int8 *)(v14 + v56) ^ a3;
  LODWORD(v28) = *(unsigned __int8 *)(v16 + v57);
  HIDWORD(v18) = v28 - (v57 | 5);
  LODWORD(v18) = ((_DWORD)v28 - (v57 | 0x75)) << 24;
  LOBYTE(v57) = v18 >> 28;
  v58 = v26 & 0xFFFFFFF0 ^ 0x7C214C7F;
  STACK[0x8E0] = v58;
  LOBYTE(v28) = v51 ^ 0x61;
  v59 = *(unsigned __int8 *)(v14 + v58) ^ a5;
  LODWORD(v58) = *(unsigned __int8 *)(v16 + v59);
  LODWORD(v37) = v37 & 0xFFFFFF00 | v28;
  LODWORD(STACK[0xAE8]) = v37;
  HIDWORD(v18) = v58 - (v59 | 5);
  LODWORD(v18) = ((_DWORD)v58 - (v59 | 0x75)) << 24;
  LOBYTE(v28) = v18 >> 28;
  LODWORD(STACK[0x8D8]) = v26;
  v60 = v26 & 0xFFFFFFFC ^ 0x7C214C7F;
  STACK[0x8B0] = v60;
  LODWORD(STACK[0x8D0]) = 2082557055;
  v61 = v39 & 0xFFFFFF00 | v41;
  v62 = *(unsigned __int8 *)(v14 + v60) ^ 0xE6;
  LODWORD(v60) = *(unsigned __int8 *)(v16 + v62);
  HIDWORD(v18) = v60 - (v62 | 5);
  LODWORD(v18) = ((_DWORD)v60 - (v62 | 0x75)) << 24;
  v63 = v61 & 0xFFFFFF | ((v57 ^ 0xEE) << 24);
  v64 = v55 & 0xFFFFFF00 | v28 ^ 0x18;
  LODWORD(v57) = (LODWORD(STACK[0xB78]) ^ 0x1BF83E0F) + (LODWORD(STACK[0xB68]) ^ 0x831B4ADC);
  v65 = v46 & 0xFFFFFF00 | (v18 >> 28) ^ 0xAA;
  v66 = v26 & 0xFFFFFFF1 ^ 0x7C214C7F;
  STACK[0x808] = v66;
  v67 = *(unsigned __int8 *)(v14 + v66) ^ 0xAELL;
  LODWORD(v28) = *(unsigned __int8 *)(v16 + v67);
  HIDWORD(v18) = v28 - (v67 | 5);
  LODWORD(v18) = ((_DWORD)v28 - (v67 | 0x75)) << 24;
  v68 = v57 + 1;
  LODWORD(v67) = (v57 + 1) ^ 0xE8E8E852 ^ v63;
  LODWORD(STACK[0xAF8]) = v63;
  LODWORD(v58) = 2110378933 * v67;
  LODWORD(v67) = (((2110378933 * v67) >> 16) & 0x8000 | ((-74209430 * v67) >> 17))
               + 2110378933 * v67;
  v69 = v67 ^ (v67 >> 8);
  LODWORD(v67) = (v37 ^ 0x17171717) + 1;
  v70 = (1772494789 * (v69 + v67)) ^ ((1772494789 * (v69 + v67)) >> 16);
  LODWORD(STACK[0xAF0]) = v65;
  LODWORD(v57) = 1772494789 * (((WORD1(v58) + v58) ^ ((WORD1(v58) + v58) >> 8)) + v67);
  v71 = (v57 ^ WORD1(v57)) + (v65 ^ 0xE8E8E8E8) - ((v57 ^ WORD1(v57)) >> 8);
  v72 = (v18 >> 28) ^ 0x43;
  LODWORD(STACK[0xB08]) = v72;
  v73 = v64 & 0xFFFF00FF | (v72 << 8);
  LODWORD(v57) = 805772855 * (v70 + (v65 ^ 0xE8E8E8E8) - (v70 >> 8));
  LODWORD(STACK[0xAE0]) = v73;
  v74 = ((v57 - WORD1(v57)) ^ ((v57 - WORD1(v57)) >> 8)) + (v73 ^ 0xE8E8E8E8);
  LODWORD(v58) = (((LODWORD(STACK[0x9D0]) ^ 0x14EE59FD) - v58) ^ v58)
               + 2 * (((LODWORD(STACK[0x9D0]) ^ 0x14EE59FD) - v58) & v58);
  v75 = v58 + 351164925 - ((2 * v58) & 0x29DCB3FA);
  v76 = 2082042467
      * (((805772855 * v71 - ((805772855 * v71) >> 16)) ^ ((805772855 * v71
                                                                        - ((805772855 * v71) >> 16)) >> 8))
       + (v73 ^ 0xE8E8E8E8));
  v77 = v76 + HIWORD(v76) + ((v76 + HIWORD(v76)) >> 8);
  v78 = (v77 | 0xF719B353) - ((v77 | 0xF719B353) ^ v77) + (LODWORD(STACK[0x9A0]) ^ 0x14EE59FD) - v77;
  v79 = STACK[0x9D8];
  v80 = (LODWORD(STACK[0x9D8]) ^ 0x40820616) + (LODWORD(STACK[0xB60]) ^ 0x2EABD881) + (v65 ^ 0x17171717) + 1;
  LODWORD(v37) = (v80
                - (((LODWORD(STACK[0x9D8]) ^ 0x40820616)
                  + (LODWORD(STACK[0xB60]) ^ 0x2EABD881)
                  + (v65 ^ 0x17171717)
                  + 812382571
                  - ((2 * v80) & 0x60D7F2D4)) ^ v12)) ^ ((v12 ^ 0xCF940695) + 1);
  v81 = -276191871 * v80;
  HIDWORD(v18) = v81 + HIWORD(v81) + (v63 ^ 0xE8E8E852) + ((v81 + HIWORD(v81)) >> 8);
  LODWORD(v18) = HIDWORD(v18) & 0xD7C8287B;
  LODWORD(v37) = (HIDWORD(v18) & 0xD7C8287B ^ 0xA0DF34DD ^ __ROR4__(__ROR4__(HIDWORD(v18), 1) ^ 0xD06F9A6E ^ (v18 >> 1), 31))- HIDWORD(v18)+ ((((v37 + 812382570 - ((2 * v37) & 0x60D7F2D4)) ^ v12) + v80) ^ v80);
  v82 = v37 + 812382570 - ((2 * v37) & 0x60D7F2D4);
  LODWORD(v67) = 335339903
               * (((-881511549 * HIDWORD(v18)) ^ ((-881511549 * HIDWORD(v18)) >> 16))
                + (((-881511549 * HIDWORD(v18)) ^ ((-881511549 * HIDWORD(v18)) >> 16)) >> 8)
                + v67);
  LODWORD(v67) = v67 - WORD1(v67);
  v83 = (v73 ^ 0x17171717) + (v67 ^ (v67 >> 8));
  v84 = v67 ^ 0x14EE59FD ^ (v67 + 351164925 - ((2 * v67) & 0x29DCB3FA)) ^ LODWORD(STACK[0xAA8]);
  v85 = 962321925 * v83 + 962321925 - ((962321925 * v83 + 962321925) >> 16);
  v86 = v85 & 0x4000000;
  if ((v78 & v85 & 0x4000000) != 0)
    v87 = -v86;
  else
    v87 = v85 & 0x4000000;
  v88 = v86 ^ 0x14EE59FD ^ (v87 + v78);
  v89 = 2082042467 * v74
      + ((2082042467 * v74) >> 16)
      + ((2082042467 * v74 + ((2082042467 * v74) >> 16)) >> 8);
  v90 = v89 - LODWORD(STACK[0xBC0]);
  LODWORD(STACK[0xB98]) = v89;
  v91 = v85 ^ (v85 >> 8);
  v92 = v90 + v91;
  v93 = v90 + v91 + v90;
  v94 = STACK[0xAA0];
  if ((v93 & 1) != 0)
    v95 = STACK[0xAA0];
  else
    v95 = v11;
  LODWORD(STACK[0x770]) = v95;
  if ((v93 & 1) != 0)
    v96 = v11;
  else
    v96 = v10;
  LODWORD(STACK[0x780]) = v96;
  if ((v93 & 1) != 0)
  {
    v97 = v82;
  }
  else
  {
    v10 = v82;
    v97 = v94;
  }
  LODWORD(STACK[0x7A0]) = v97;
  if ((v93 & 1) != 0)
    v98 = v84;
  else
    v98 = v88;
  if ((v93 & 1) != 0)
  {
    v99 = v75;
  }
  else
  {
    v88 = v75;
    v99 = STACK[0xAD0];
  }
  if ((v93 & 1) != 0)
    v84 = STACK[0xAD0];
  if ((v93 & 2) != 0)
    v100 = v84;
  else
    v100 = v88;
  if ((v93 & 2) != 0)
    v101 = v88;
  else
    v101 = v84;
  LODWORD(STACK[0xB00]) = 8 * v89;
  LODWORD(STACK[0xBA8]) = v77;
  v102 = 8 * v77;
  LODWORD(STACK[0xBC0]) = 8 * v77;
  v103 = -8 * v89;
  if ((v93 & 2) != 0)
    v104 = v10;
  else
    v104 = v95;
  if ((v93 & 2) != 0)
  {
    v97 = v96;
    v105 = v98;
  }
  else
  {
    v105 = v99;
  }
  v106 = v102 & 0x18;
  v107 = ((v100 ^ 0x14EE59FD) << (v102 & 0x18)) + ((v100 ^ 0x14EE59FDu) >> (v103 & 0x18));
  v108 = ((v101 ^ 0x14EE59FD) << (v102 & 0x18)) ^ 0x14EE59FD ^ ((v101 ^ 0x14EE59FD) >> (v103 & 0x18));
  v109 = v107 + 351164925 - ((2 * v107) & 0x29DCB3FA);
  v110 = (v77 + 943116882) * (v77 + 943116882) - (v77 - 943116882) * (v77 - 943116882);
  LODWORD(STACK[0xAA8]) = v101;
  if ((v103 & 0x18) == 0)
    v108 = v101;
  LODWORD(STACK[0x7D8]) = v108;
  LODWORD(STACK[0x9D0]) = v100;
  if ((v103 & 0x18) == 0)
    v109 = v100;
  LODWORD(STACK[0x7D0]) = v109;
  v111 = v110 & 0x1B;
  v112 = v93 + v90;
  LODWORD(STACK[0xAD0]) = v105;
  if ((v103 & 0x18) != 0)
    v113 = (((v105 ^ 0x14EE59FD) << (v110 & 0x1B)) | ((v105 ^ 0x14EE59FD) >> (v103 & 0x18)))
         + 351164925
         - ((2 * (((v105 ^ 0x14EE59FD) << (v110 & 0x1B)) | ((v105 ^ 0x14EE59FD) >> (v103 & 0x18)))) & 0x29DCB3FA);
  else
    v113 = v105;
  LODWORD(STACK[0x7C8]) = v113;
  v114 = STACK[0xA80];
  v115 = STACK[0x950];
  if ((v112 & 1) != 0)
    v116 = STACK[0xA80];
  else
    v116 = STACK[0x950];
  LODWORD(STACK[0x778]) = v116;
  if ((v112 & 1) != 0)
    v117 = STACK[0xAB0];
  else
    v117 = v114;
  v118 = STACK[0xA90];
  if ((v112 & 1) != 0)
    v119 = STACK[0xA90];
  else
    v119 = STACK[0xAB0];
  LODWORD(STACK[0xB10]) = v119;
  if ((v112 & 1) != 0)
    v120 = v115;
  else
    v120 = v118;
  if ((v112 & 2) != 0)
    v121 = v117;
  else
    v121 = v120;
  if ((v112 & 2) != 0)
    v122 = v120;
  else
    v122 = v117;
  v123 = ((v122 ^ 0x70B55CE8) >> (v103 & 0x18)) | ((v122 ^ 0x70B55CE8) << v111);
  v124 = v123 + 1890933992 - ((2 * v123) & 0xE16AB9D0);
  if ((v112 & 2) != 0)
    v119 = v116;
  v125 = ((v121 ^ 0x70B55CE8) >> (v103 & 0x18)) | ((v121 ^ 0x70B55CE8) << v106);
  v126 = ((v119 ^ 0x70B55CE8) << v111) ^ 0x70B55CE8 ^ ((v119 ^ 0x70B55CE8) >> (v103 & 0x18));
  v127 = v125 + 1890933992 - ((2 * v125) & 0xE16AB9D0);
  LODWORD(STACK[0xAB0]) = v119;
  if ((v103 & 0x18) == 0)
    v126 = v119;
  LODWORD(STACK[0x790]) = v126;
  LODWORD(STACK[0xA80]) = v122;
  if ((v103 & 0x18) == 0)
    v124 = v122;
  LODWORD(STACK[0x7A8]) = v124;
  v128 = ((v104 ^ 0x306BF96Au) >> (v103 & 0x18)) + ((v104 ^ 0x306BF96A) << v106);
  v129 = ((v97 ^ 0x306BF96A) << v111) ^ 0x306BF96A ^ ((v97 ^ 0x306BF96A) >> (v103 & 0x18));
  v130 = v128 + 812382570 - ((2 * v128) & 0x60D7F2D4);
  v131 = v81 & 0x4AA76615 & ~v81 ^ LODWORD(STACK[0x958]);
  LODWORD(STACK[0x958]) = v131;
  LODWORD(STACK[0xAA0]) = v97;
  if ((v103 & 0x18) == 0)
    v129 = v97;
  LODWORD(STACK[0x710]) = v129;
  LODWORD(STACK[0xA90]) = v121;
  if ((v103 & 0x18) != 0)
    v121 = v127;
  LODWORD(STACK[0x788]) = v121;
  LODWORD(STACK[0x510]) = v104;
  if ((v103 & 0x18) != 0)
    v104 = v130;
  LODWORD(STACK[0x700]) = v104;
  LODWORD(STACK[0xB20]) = v92;
  if ((v92 & 1) != 0)
    v132 = v131;
  else
    v132 = STACK[0xBA0];
  if ((v92 & 1) != 0)
    v133 = STACK[0xB70];
  else
    v133 = STACK[0xB28];
  if ((v92 & 2) != 0)
    v134 = v133;
  else
    v134 = v132;
  if ((v92 & 2) != 0)
    v135 = v132;
  else
    v135 = v133;
  v136 = ((v134 ^ 0xB9EEC47) >> (v103 & 0x18)) ^ 0xB9EEC47 ^ ((v134 ^ 0xB9EEC47) << v111);
  v137 = ((v135 ^ 0xB9EEC47) << v111) | ((v135 ^ 0xB9EEC47u) >> (v103 & 0x18));
  LODWORD(STACK[0x4E8]) = v134;
  if ((v103 & 0x18) != 0)
    v134 = v136;
  LODWORD(STACK[0x5C0]) = v134;
  if ((v93 & 2) != 0)
    v138 = v99;
  else
    v138 = v98;
  v139 = v137 + 194964551 - ((2 * v137) & 0x173DD88E);
  v140 = v103 & 0x18;
  LODWORD(STACK[0x4F0]) = v135;
  if ((v103 & 0x18) == 0)
    v139 = v135;
  LODWORD(STACK[0x5B0]) = v139;
  v141 = (v81 + 1070777217 - ((1595099906 * v80) & 0x7FA58702)) ^ LODWORD(STACK[0x998]);
  v142 = (LODWORD(STACK[0x9A8]) ^ 0x73A99DB7) + 1940495799 - ((2 * (LODWORD(STACK[0x9A8]) ^ 0x73A99DB7)) & 0xE7533B6E);
  v143 = v141
       - 276191871 * v80
       - 2 * (v141 & (-276191871 * v80))
       + 1070777217
       - ((2 * (v141 - 276191871 * v80 - 2 * (v141 & (-276191871 * v80)))) & 0x7FA58702);
  LODWORD(STACK[0x9A0]) = v138;
  if ((v110 & 0x1B) != 0)
    v144 = ((v138 ^ 0x14EE59FD) >> v140) ^ 0x14EE59FD ^ ((v138 ^ 0x14EE59FD) << (v110 & 0x1B));
  else
    v144 = v138;
  LODWORD(STACK[0x7C0]) = v144;
  v145 = v91;
  v146 = STACK[0xA98];
  if ((v91 & 1) != 0)
    v147 = STACK[0xA78];
  else
    v147 = STACK[0xA98];
  if ((v91 & 1) != 0)
    v148 = STACK[0xA88];
  else
    v148 = STACK[0xA78];
  if ((v91 & 1) != 0)
    v149 = v142;
  else
    v149 = STACK[0xA88];
  v150 = STACK[0x9B8];
  v151 = STACK[0x9B0];
  if ((v91 & 1) != 0)
    v152 = STACK[0x9B0];
  else
    v152 = STACK[0x9B8];
  LODWORD(STACK[0x9A8]) = v152;
  if ((v91 & 1) != 0)
    v153 = v146;
  else
    v153 = v142;
  LODWORD(STACK[0x950]) = v153;
  v154 = (v68 | 0x73192B23) - ((v68 | 0x73192B23) ^ v68) + (LODWORD(STACK[0x978]) ^ 0x50317279) - v68;
  v155 = v154 + 1345417849 - ((2 * v154) & 0xA062E4F2);
  v156 = STACK[0x9C0];
  if ((v91 & 1) != 0)
    v157 = STACK[0x9C0];
  else
    v157 = v151;
  LODWORD(STACK[0x9B0]) = v157;
  if ((v91 & 1) != 0)
    v158 = v150;
  else
    v158 = v143;
  LODWORD(STACK[0x998]) = v158;
  v159 = (v91 & 1) == 0;
  if ((v91 & 1) != 0)
    v156 = v143;
  LODWORD(STACK[0x9C0]) = v156;
  v160 = STACK[0x990];
  v161 = STACK[0x988];
  if ((v91 & 1) != 0)
    v162 = STACK[0x988];
  else
    v162 = STACK[0x990];
  LODWORD(STACK[0x978]) = v162;
  if ((v91 & 1) != 0)
    v163 = v160;
  else
    v163 = STACK[0x980];
  if ((v91 & 1) != 0)
    v164 = STACK[0x980];
  else
    v164 = v155;
  if (v159)
    v165 = v161;
  else
    v165 = v155;
  LODWORD(STACK[0x518]) = v145;
  if ((v145 & 2) != 0)
    v166 = v147;
  else
    v166 = v149;
  if ((v145 & 2) != 0)
    v167 = v149;
  else
    v167 = v147;
  v168 = ((v166 ^ 0x73A99DB7) >> v140) + ((v166 ^ 0x73A99DB7) << v106);
  v169 = v168 + 1940495799 - ((2 * v168) & 0xE7533B6E);
  if ((v145 & 2) != 0)
    v170 = v153;
  else
    v170 = v148;
  v171 = v148;
  v172 = v103 & 0x18;
  v173 = ((v170 ^ 0x73A99DB7) >> (v103 & 0x18)) + ((v170 ^ 0x73A99DB7) << (v110 & 0x1B));
  v174 = v173 + 1940495799 - ((2 * v173) & 0xE7533B6E);
  v175 = *(_DWORD *)(STACK[0x9E8] + 4 * v72) + LODWORD(STACK[0xB08]) * LODWORD(STACK[0xB08]);
  v176 = (((LODWORD(STACK[0x9C8]) ^ 0x7CE4B523) - v175) ^ v175)
       + 2 * (((LODWORD(STACK[0x9C8]) ^ 0x7CE4B523) - v175) & v175);
  v177 = v176 + 2095363363 - ((2 * v176) & 0xF9C96A46);
  HIDWORD(v178) = STACK[0xA30];
  LODWORD(v178) = LODWORD(STACK[0xA30]) ^ 0x40820616;
  HIDWORD(v178) = v178 >> 1;
  LODWORD(v178) = HIDWORD(v178);
  v179 = (v178 >> 31) + 1082263062 - ((2 * (v178 >> 31)) & 0x81040C2C);
  LODWORD(STACK[0xA88]) = v166;
  if ((v103 & 0x18) != 0)
    v166 = v169;
  LODWORD(STACK[0x7B0]) = v166;
  LODWORD(STACK[0xA78]) = v170;
  if ((v110 & 0x1B) != 0)
    v180 = v174;
  else
    v180 = v170;
  LODWORD(STACK[0x798]) = v180;
  v181 = STACK[0xB18];
  v182 = STACK[0xB68];
  if ((v112 & 1) != 0)
    v183 = STACK[0xB68];
  else
    v183 = STACK[0xB18];
  LODWORD(STACK[0x990]) = v183;
  v184 = STACK[0x970];
  if ((v112 & 1) != 0)
    v185 = v176 + 2095363363 - ((2 * v176) & 0xF9C96A46);
  else
    v185 = STACK[0x970];
  LODWORD(STACK[0x9B8]) = v185;
  if ((v93 & 1) != 0)
    v186 = STACK[0x9E0];
  else
    v186 = STACK[0xA70];
  if ((v93 & 1) != 0)
    v187 = STACK[0xA70];
  else
    v187 = v79;
  if ((v93 & 1) != 0)
    v188 = v79;
  else
    v188 = v179;
  if ((v93 & 1) == 0)
    v179 = STACK[0x9E0];
  if ((v93 & 2) != 0)
    v189 = STACK[0x770];
  else
    v189 = v10;
  v190 = STACK[0x780];
  if ((v93 & 2) != 0)
    v190 = STACK[0x7A0];
  if ((v112 & 2) == 0)
    v185 = v183;
  if ((v93 & 2) != 0)
    v191 = v188;
  else
    v191 = v186;
  if ((v93 & 2) != 0)
    v192 = v186;
  else
    v192 = v188;
  if ((v93 & 2) != 0)
    v193 = v179;
  else
    v193 = v187;
  if ((v93 & 2) != 0)
    v194 = v187;
  else
    v194 = v179;
  v195 = v110 & 0x1B;
  v159 = (v110 & 0x1B) == 0;
  v196 = v110;
  LODWORD(STACK[0xB30]) = v110;
  v197 = ((v167 ^ 0x73A99DB7) >> v172) ^ 0x73A99DB7 ^ ((v167 ^ 0x73A99DB7) << (v110 & 0x1B));
  v198 = ((v190 ^ 0x306BF96A) << v195) + ((v190 ^ 0x306BF96Au) >> v172);
  LODWORD(STACK[0xA98]) = v167;
  if (!v159)
    v167 = v197;
  LODWORD(STACK[0x7A0]) = v167;
  v199 = STACK[0xBC0] & 0x18;
  v159 = (STACK[0xBC0] & 0x18) == 0;
  v200 = v198 + 812382570 - ((2 * v198) & 0x60D7F2D4);
  LODWORD(STACK[0x500]) = v189;
  if (v159)
    v201 = v189;
  else
    v201 = ((v189 ^ 0x306BF96A) >> v172) ^ 0x306BF96A ^ ((v189 ^ 0x306BF96A) << v199);
  LODWORD(STACK[0x5C8]) = v201;
  v202 = v196 & 0x1B;
  LODWORD(STACK[0xA70]) = v191;
  if ((v196 & 0x1B) != 0)
    v191 = ((v191 ^ 0x40820616) << (v196 & 0x1B)) ^ 0x40820616 ^ ((v191 ^ 0x40820616) >> v172);
  LODWORD(STACK[0x558]) = v191;
  LODWORD(STACK[0x508]) = v190;
  if ((v196 & 0x1B) != 0)
    v203 = v200;
  else
    v203 = v190;
  LODWORD(STACK[0x660]) = v203;
  LODWORD(STACK[0x768]) = v112;
  if ((v112 & 1) != 0)
    v204 = v181;
  else
    v204 = v177;
  if ((v112 & 1) != 0)
    v205 = v184;
  else
    v205 = v182;
  if ((v112 & 2) != 0)
    v206 = v204;
  else
    v206 = v205;
  if ((v112 & 2) != 0)
    v207 = v205;
  else
    v207 = v204;
  v208 = STACK[0xB20];
  if ((STACK[0xB20] & 1) != 0)
    v209 = STACK[0xA68];
  else
    v209 = STACK[0xB60];
  if ((v208 & 1) != 0)
    v210 = STACK[0x968];
  else
    v210 = STACK[0xA68];
  if ((v208 & 1) != 0)
    v211 = STACK[0xA38];
  else
    v211 = STACK[0x968];
  if ((v208 & 1) != 0)
    v212 = STACK[0xB60];
  else
    v212 = STACK[0xA38];
  if ((v208 & 2) != 0)
    v213 = v210;
  else
    v213 = v212;
  if ((v208 & 2) != 0)
  {
    v214 = v211;
  }
  else
  {
    v212 = v210;
    v214 = v209;
  }
  v215 = (v145 & 2) == 0;
  if ((v145 & 2) != 0)
    v216 = v165;
  else
    v216 = v163;
  if ((v145 & 2) != 0)
    v217 = v163;
  else
    v217 = v165;
  if ((v145 & 2) != 0)
    v218 = STACK[0x978];
  else
    v218 = v164;
  if ((v145 & 2) != 0)
    v219 = v164;
  else
    v219 = STACK[0x978];
  if ((v145 & 2) != 0)
    v220 = STACK[0x998];
  else
    v220 = STACK[0x9B0];
  if (v215)
    v221 = STACK[0x998];
  else
    v221 = STACK[0x9B0];
  if (v215)
    v222 = STACK[0x9A8];
  else
    v222 = STACK[0x9C0];
  if (v215)
    v223 = STACK[0x9C0];
  else
    v223 = STACK[0x9A8];
  v224 = ((v220 ^ 0x3FD2C381u) >> v172) | ((v220 ^ 0x3FD2C381) << v199);
  if (v215)
    v225 = STACK[0x950];
  else
    v225 = v171;
  v226 = v224 + 1070777217 - ((2 * v224) & 0x7FA58702);
  v227 = ((v221 ^ 0x3FD2C381u) >> (v103 & 0x18)) | ((v221 ^ 0x3FD2C381) << v202);
  v228 = v227 + 1070777217 - ((2 * v227) & 0x7FA58702);
  LODWORD(STACK[0x9B0]) = v220;
  if ((v103 & 0x18) == 0)
    v226 = v220;
  LODWORD(STACK[0x5A0]) = v226;
  v229 = ((v223 ^ 0x3FD2C381u) >> (v103 & 0x18)) | ((v223 ^ 0x3FD2C381) << v202);
  v230 = v229 + 1070777217 - ((2 * v229) & 0x7FA58702);
  LODWORD(STACK[0x998]) = v221;
  if ((v103 & 0x18) == 0)
    v228 = v221;
  LODWORD(STACK[0x598]) = v228;
  v231 = (v207 ^ 0x7CE4B523) >> (v103 & 0x18);
  LODWORD(STACK[0x780]) = v231;
  v232 = v231 + ((v207 ^ 0x7CE4B523) << v202) + 2095363363 - ((2 * (v231 + ((v207 ^ 0x7CE4B523) << v202))) & 0xF9C96A46);
  LODWORD(STACK[0x9C0]) = v223;
  if ((v103 & 0x18) == 0)
    v230 = v223;
  LODWORD(STACK[0x588]) = v230;
  v233 = ((v185 ^ 0x7CE4B523) << v199) + ((v185 ^ 0x7CE4B523) >> (v103 & 0x18));
  v234 = v233 + 2095363363 - ((2 * v233) & 0xF9C96A46);
  LODWORD(STACK[0x9C8]) = v207;
  if ((v103 & 0x18) == 0)
    v232 = v207;
  LODWORD(STACK[0x578]) = v232;
  v235 = ((v192 ^ 0x40820616) >> (v103 & 0x18)) + ((v192 ^ 0x40820616) << v199);
  v236 = ((v206 ^ 0x7CE4B523) >> (v103 & 0x18)) ^ 0x7CE4B523 ^ ((v206 ^ 0x7CE4B523) << v199);
  v237 = v235 + 1082263062 - ((2 * v235) & 0x81040C2C);
  LODWORD(STACK[0xB68]) = v206;
  if ((v103 & 0x18) == 0)
    v236 = v206;
  LODWORD(STACK[0x570]) = v236;
  LODWORD(STACK[0x4E0]) = v185;
  if ((v103 & 0x18) == 0)
    v234 = v185;
  LODWORD(STACK[0x560]) = v234;
  v238 = ((v214 ^ 0x2EABD881) << v199) + ((v214 ^ 0x2EABD881u) >> (v103 & 0x18));
  v239 = ((v194 ^ 0x40820616) >> (v103 & 0x18)) ^ 0x40820616 ^ ((v194 ^ 0x40820616) << v199);
  v240 = ((v193 ^ 0x40820616) >> (v103 & 0x18)) ^ 0x40820616 ^ ((v193 ^ 0x40820616) << v202);
  v241 = v238 + 783014017 - ((2 * v238) & 0x5D57B102);
  LODWORD(STACK[0x9E0]) = v194;
  if ((v103 & 0x18) == 0)
    v239 = v194;
  LODWORD(STACK[0x550]) = v239;
  LODWORD(STACK[0x9D8]) = v193;
  if ((v103 & 0x18) == 0)
    v240 = v193;
  LODWORD(STACK[0x540]) = v240;
  LODWORD(STACK[0xA30]) = v192;
  if ((v103 & 0x18) != 0)
    v242 = v237;
  else
    v242 = v192;
  LODWORD(STACK[0x538]) = v242;
  LODWORD(STACK[0x7B8]) = v103;
  v243 = ((v213 ^ 0x2EABD881u) >> (v103 & 0x18)) | ((v213 ^ 0x2EABD881) << v202);
  v244 = v243 + 783014017 - ((2 * v243) & 0x5D57B102);
  LODWORD(STACK[0xB60]) = v214;
  if ((v103 & 0x18) != 0)
    v245 = v241;
  else
    v245 = v214;
  LODWORD(STACK[0x568]) = v245;
  v246 = ((v217 ^ 0x50317279) << v199) + ((v217 ^ 0x50317279) >> (v103 & 0x18));
  v247 = v246 + 1345417849 - ((2 * v246) & 0xA062E4F2);
  LODWORD(STACK[0xA38]) = v213;
  if ((v103 & 0x18) != 0)
    v248 = v244;
  else
    v248 = v213;
  LODWORD(STACK[0x530]) = v248;
  v249 = ((v218 ^ 0x50317279) >> (v103 & 0x18)) + ((v218 ^ 0x50317279) << v202);
  v250 = v249 + 1345417849 - ((2 * v249) & 0xA062E4F2);
  LODWORD(STACK[0x988]) = v217;
  if ((v103 & 0x18) != 0)
    v251 = v247;
  else
    v251 = v217;
  v252 = ((v216 ^ 0x50317279) >> (v103 & 0x18)) + ((v216 ^ 0x50317279) << v202);
  v253 = v252 + 1345417849 - ((2 * v252) & 0xA062E4F2);
  LODWORD(STACK[0x978]) = v218;
  if ((v103 & 0x18) != 0)
    v254 = v250;
  else
    v254 = v218;
  v255 = v103 & 0x18;
  LODWORD(STACK[0x980]) = v216;
  if ((v103 & 0x18) != 0)
    v256 = v253;
  else
    v256 = v216;
  v257 = STACK[0xB30];
  v258 = ((v212 ^ 0x2EABD881) >> v255) ^ 0x2EABD881 ^ ((v212 ^ 0x2EABD881) << (STACK[0xB30] & 0x1B));
  v259 = ((v225 ^ 0x73A99DB7) >> v255) + ((v225 ^ 0x73A99DB7) << v199);
  LODWORD(STACK[0xA68]) = v212;
  if ((v257 & 0x1B) != 0)
    v260 = v258;
  else
    v260 = v212;
  LODWORD(STACK[0x528]) = v260;
  v261 = STACK[0xBC0];
  LODWORD(STACK[0x9A8]) = v225;
  if ((v261 & 0x18) != 0)
    v262 = v259 + 1940495799 - ((2 * v259) & 0xE7533B6E);
  else
    v262 = v225;
  LODWORD(STACK[0x6F8]) = v262;
  if ((STACK[0x768] & 2) != 0)
    v263 = STACK[0x990];
  else
    v263 = STACK[0x9B8];
  if ((STACK[0x768] & 2) != 0)
    v264 = STACK[0xB10];
  else
    v264 = STACK[0x778];
  v265 = ((v264 ^ 0x70B55CE8) >> v255) | ((v264 ^ 0x70B55CE8) << (v261 & 0x18));
  v266 = v265 + 1890933992 - ((2 * v265) & 0xE16AB9D0);
  v267 = v261 & 0x18;
  v268 = v261;
  LODWORD(STACK[0x950]) = v264;
  if ((v261 & 0x18) != 0)
    v269 = v266;
  else
    v269 = v264;
  LODWORD(STACK[0x5B8]) = v269;
  v270 = STACK[0xB20];
  v271 = STACK[0xBA0];
  if ((STACK[0xB20] & 1) == 0)
    v271 = STACK[0xB70];
  v272 = STACK[0xB28];
  if ((v270 & 1) == 0)
    v272 = STACK[0x958];
  v273 = STACK[0xB20];
  if ((v270 & 2) != 0)
    v274 = v272;
  else
    v274 = v271;
  if ((v270 & 2) != 0)
    v275 = v271;
  else
    v275 = v272;
  if ((v270 & 2) != 0)
    v277 = v209;
  else
    v277 = v211;
  v276 = ((v274 ^ 0xB9EEC47) << v267) | ((v274 ^ 0xB9EEC47u) >> v255);
  v278 = v276 + 194964551 - ((2 * v276) & 0x173DD88E);
  v279 = ((v275 ^ 0xB9EEC47) << (v268 & 0x18)) | ((v275 ^ 0xB9EEC47u) >> v255);
  v280 = v279 + 194964551 - ((2 * v279) & 0x173DD88E);
  LODWORD(STACK[0xB70]) = v274;
  if ((v268 & 0x18) != 0)
    v281 = v278;
  else
    v281 = v274;
  LODWORD(STACK[0x5A8]) = v281;
  v282 = ((v222 ^ 0x3FD2C381) << (v268 & 0x18)) + ((v222 ^ 0x3FD2C381u) >> v255);
  v283 = v282 + 1070777217 - ((2 * v282) & 0x7FA58702);
  LODWORD(STACK[0x958]) = v275;
  if ((v268 & 0x18) != 0)
    v284 = v280;
  else
    v284 = v275;
  LODWORD(STACK[0x590]) = v284;
  v285 = ((v219 ^ 0x50317279) >> v255) | ((v219 ^ 0x50317279) << (v268 & 0x18));
  v286 = v285 + 1345417849 - ((2 * v285) & 0xA062E4F2);
  LODWORD(STACK[0x968]) = v277;
  if ((v268 & 0x18) != 0)
    v287 = ((v277 ^ 0x2EABD881) >> v255) ^ 0x2EABD881 ^ ((v277 ^ 0x2EABD881) << (v268 & 0x18));
  else
    v287 = v277;
  LODWORD(STACK[0x520]) = v287;
  LODWORD(STACK[0x9B8]) = v222;
  if ((v268 & 0x18) != 0)
    v288 = v283;
  else
    v288 = v222;
  LODWORD(STACK[0x580]) = v288;
  LODWORD(STACK[0xBA0]) = v268 & 0x18;
  v289 = v268;
  LODWORD(STACK[0x990]) = v219;
  if ((v268 & 0x18) != 0)
    v290 = v286;
  else
    v290 = v219;
  v291 = v257 & 0x1B;
  LODWORD(STACK[0xB28]) = v291;
  LODWORD(STACK[0x970]) = v263;
  if ((v257 & 0x1B) != 0)
    v292 = ((v263 ^ 0x7CE4B523) << (v257 & 0x1B)) ^ 0x7CE4B523 ^ ((v263 ^ 0x7CE4B523) >> v255);
  else
    v292 = v263;
  LODWORD(STACK[0x548]) = v292;
  v293 = STACK[0xAB8];
  if ((v273 & 1) != 0)
    v294 = STACK[0xB78];
  else
    v294 = STACK[0xAB8];
  if ((v273 & 1) != 0)
  {
    v295 = STACK[0xAC8];
  }
  else
  {
    v293 = STACK[0xAC8];
    v295 = STACK[0xAC0];
  }
  if ((v273 & 1) != 0)
    v296 = STACK[0xAC0];
  else
    v296 = STACK[0xB78];
  if ((v273 & 2) != 0)
    v297 = v295;
  else
    v297 = v294;
  if ((v273 & 2) != 0)
    v298 = v294;
  else
    v298 = v295;
  if ((v273 & 2) != 0)
    v299 = v296;
  else
    v299 = v293;
  if ((v273 & 2) != 0)
    v300 = v293;
  else
    v300 = v296;
  v301 = -v289;
  v302 = (v298 ^ 0x1BF83E0Fu) >> (-(char)v289 & 0x18);
  v303 = STACK[0xB00] & 0x18;
  v304 = v302 + ((v298 ^ 0x1BF83E0F) << v303) + 469253647 - ((2 * (v302 + ((v298 ^ 0x1BF83E0F) << v303))) & 0x37F07C1E);
  v305 = STACK[0xB00] & 0x18;
  v306 = ((v299 ^ 0x1BF83E0Fu) >> (v301 & 0x18)) + ((v299 ^ 0x1BF83E0F) << v303);
  LODWORD(STACK[0x770]) = 469253648;
  v307 = v306 + 469253648 + ~((2 * v306) & 0x37F07C1E);
  LODWORD(STACK[0xAC8]) = v299;
  if ((v301 & 0x18) != 0)
    v308 = v307;
  else
    v308 = v299;
  LODWORD(STACK[0x768]) = v308;
  LODWORD(STACK[0xAC0]) = v298;
  if ((v301 & 0x18) != 0)
    v309 = v304;
  else
    v309 = v298;
  LODWORD(STACK[0x778]) = v309;
  v310 = -v291;
  v311 = ((v297 ^ 0x1BF83E0Fu) >> (-(char)v291 & 0x1A)) | ((v297 ^ 0x1BF83E0F) << v305);
  v312 = v305;
  v313 = v311 + 469253647 - ((2 * v311) & 0x37F07C1E);
  LODWORD(STACK[0xB78]) = v300;
  if ((-v291 & 0x1A) != 0)
    v314 = ((v300 ^ 0x1BF83E0F) << v305) ^ 0x1BF83E0F ^ ((v300 ^ 0x1BF83E0F) >> (-(char)v291 & 0x1A));
  else
    v314 = v300;
  LODWORD(STACK[0x760]) = v314;
  LODWORD(STACK[0xAB8]) = v297;
  if ((v310 & 0x1A) != 0)
    v315 = v313;
  else
    v315 = v297;
  LODWORD(STACK[0x708]) = v315;
  v316 = LODWORD(STACK[0xAF8]) ^ 0x8C1B866B;
  v317 = STACK[0x518];
  v318 = LODWORD(STACK[0x518]) + LODWORD(STACK[0xBD8]);
  LODWORD(STACK[0xBD8]) = v318;
  v319 = LODWORD(STACK[0xAF0]) ^ 0x8C1B86D1;
  v320 = LODWORD(STACK[0xAE0]) ^ 0x8C1B86D1;
  if ((v318 & 1) != 0)
    v321 = LODWORD(STACK[0xAF0]) ^ 0x8C1B86D1;
  else
    v321 = LODWORD(STACK[0xAE8]) ^ 0x8C1B86D1;
  if ((v318 & 1) != 0)
  {
    v319 = LODWORD(STACK[0xAE0]) ^ 0x8C1B86D1;
    v320 = v316;
    v316 = LODWORD(STACK[0xAE8]) ^ 0x8C1B86D1;
  }
  if ((((_BYTE)v318 + 1) & 2) != 0)
    v322 = v320;
  else
    v322 = v321;
  if ((((_BYTE)v318 + 1) & 2) != 0)
  {
    v320 = v321;
    v323 = v316;
  }
  else
  {
    v323 = v319;
  }
  if ((((_BYTE)v318 + 1) & 2) != 0)
    v316 = v319;
  v324 = ((v323 ^ 0x64F36E39) << v312) + ((v323 ^ 0x64F36E39) >> (v301 & 0x18));
  v325 = v324 + 1693675065 - ((2 * v324) & 0xC9E6DC72);
  if ((v301 & 0x18) != 0)
    v323 = v325;
  v326 = ((v316 ^ 0x64F36E39) << v312) + ((v316 ^ 0x64F36E39) >> (v301 & 0x18));
  v327 = v326 + 1693675065 - ((2 * v326) & 0xC9E6DC72);
  LODWORD(STACK[0xB20]) = v301 & 0x18;
  if ((v301 & 0x18) != 0)
    v328 = v327;
  else
    v328 = v316;
  LODWORD(STACK[0xB10]) = v312;
  v329 = ((v320 ^ 0x64F36E39) << v312) + ((v320 ^ 0x64F36E39) >> (v310 & 0x1A));
  v330 = v329 + 1693675065 - ((2 * v329) & 0xC9E6DC72);
  if ((v310 & 0x1A) == 0)
    v330 = v320;
  v331 = ((v322 ^ 0x64F36E39) >> (v310 & 0x1A)) | ((v322 ^ 0x64F36E39) << v312);
  v332 = v331 + 1693675065 - ((2 * v331) & 0xC9E6DC72);
  v333 = v317;
  v334 = v317 + LODWORD(STACK[0xB38]);
  LODWORD(STACK[0xB38]) = v334;
  LODWORD(STACK[0xC18]) += v333;
  LODWORD(STACK[0xB18]) = v310 & 0x1A;
  if ((v310 & 0x1A) != 0)
    v335 = v332;
  else
    v335 = v322;
  v336 = (v328 ^ v290 ^ 0x34C21C40) + 1858371159 - 2 * ((v328 ^ v290 ^ 0x34C21C40) & 0x6EC47E5F ^ (v328 ^ v290) & 8);
  v337 = LODWORD(STACK[0xC20]) ^ 0xFBBF2766;
  v338 = v337 ^ ((v323 ^ v254 ^ 0x34C21C40)
               + 1858371159
               - 2 * ((v323 ^ v254 ^ 0x34C21C40) & 0x6EC47E5F ^ (v323 ^ v254) & 8));
  v339 = v337 ^ ((v335 ^ v256 ^ 0x34C21C40)
               + 1858371159
               - 2 * ((v335 ^ v256 ^ 0x34C21C40) & 0x6EC47E77 ^ (v335 ^ v256) & 0x20));
  v340 = v337 ^ v336;
  v341 = v337 ^ ((v251 ^ 0x34C21C40 ^ v330) + 1858371159 - ((2 * (v251 ^ 0x34C21C40 ^ v330)) & 0xDD88FCAE));
  v342 = STACK[0xB88];
  v343 = *(_DWORD *)(STACK[0xB88] + 4 * HIBYTE(v341)) - (HIBYTE(v341) | 0x54);
  v344 = *(_DWORD *)(STACK[0xB88] + 4 * HIBYTE(v339)) - (HIBYTE(v339) | 0x54);
  v345 = STACK[0xBE0];
  v346 = STACK[0xBC8];
  v347 = BYTE1(v341);
  v348 = STACK[0x3F8];
  v349 = *(_DWORD *)(STACK[0x3F8] + 4 * (BYTE1(v341) ^ 0xC3u)) - (BYTE1(v341) | 0xEF);
  v350 = (BYTE1(v340) + 1740562313) ^ 0x15EF9FDF ^ (BYTE2(v341) ^ BYTE1(v340)) ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v341) ^ 0x10u))
                                                                                                 + (BYTE2(v341) ^ 0x10)
                                                                                                 * (BYTE2(v341) ^ 0x10)) ^ (*(_DWORD *)(STACK[0xBE0] + 4 * v339) + v339 * v339) ^ (*(_DWORD *)(STACK[0x3F8] + 4 * (BYTE1(v340) ^ 0xC3u)) - (BYTE1(v340) | 0xEF));
  v351 = *(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v340) ^ 0x10u)) + (BYTE2(v340) ^ 0x10) * (BYTE2(v340) ^ 0x10);
  v352 = *(_DWORD *)(STACK[0x3F8] + 4 * (BYTE1(v339) ^ 0xC3u)) - (BYTE1(v339) | 0xEF);
  v353 = *(_DWORD *)(STACK[0xB88] + 4 * HIBYTE(v338));
  v354 = (((v353 - (HIBYTE(v338) | 0x54)) ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ (v353 - (HIBYTE(v338) | 0x54)) ^ 0x98E21884;
  if ((((BYTE1(v340) - 119) ^ 0xDF ^ (BYTE2(v341) ^ BYTE1(v340)) ^ (*(_BYTE *)(STACK[0xBC8] + 4 * (BYTE2(v341) ^ 0x10u)) + (BYTE2(v341) ^ 0x10) * (BYTE2(v341) ^ 0x10)) ^ (*(_BYTE *)(STACK[0xBE0] + 4 * v339) + v339 * v339) ^ (*(_BYTE *)(STACK[0x3F8] + 4 * (BYTE1(v340) ^ 0xC3u)) - (BYTE1(v340) | 0xEF))) & 8 & (v353 - (HIBYTE(v338) | 4))) != 0)
    v355 = -(((BYTE1(v340) - 119) ^ 0xDF ^ (BYTE2(v341) ^ BYTE1(v340)) ^ (*(_BYTE *)(STACK[0xBC8] + 4 * (BYTE2(v341) ^ 0x10u)) + (BYTE2(v341) ^ 0x10) * (BYTE2(v341) ^ 0x10)) ^ (*(_BYTE *)(STACK[0xBE0] + 4 * v339) + v339 * v339) ^ (*(_BYTE *)(STACK[0x3F8] + 4 * (BYTE1(v340) ^ 0xC3u)) - (BYTE1(v340) | 0xEF))) & 8);
  else
    v355 = ((BYTE1(v340) - 119) ^ 0xDF ^ (BYTE2(v341) ^ BYTE1(v340)) ^ (*(_BYTE *)(STACK[0xBC8] + 4 * (BYTE2(v341) ^ 0x10u)) + (BYTE2(v341) ^ 0x10) * (BYTE2(v341) ^ 0x10)) ^ (*(_BYTE *)(STACK[0xBE0] + 4 * v339) + v339 * v339) ^ (*(_BYTE *)(STACK[0x3F8] + 4 * (BYTE1(v340) ^ 0xC3u)) - (BYTE1(v340) | 0xEF))) & 8;
  v356 = *(_DWORD *)(v345 + 4 * v341) + v341 * v341;
  v357 = v344 ^ 0x98E21884;
  v358 = v349 ^ (v347 + 1740562313) ^ BYTE2(v338) ^ (*(_DWORD *)(STACK[0xBE0] + 4 * v340)
                                                   + v340 * v340) ^ (*(_DWORD *)(v346 + 4 * (BYTE2(v338) ^ 0x10u)) + (BYTE2(v338) ^ 0x10) * (BYTE2(v338) ^ 0x10)) ^ ((v344 ^ 0x98E21884) >> 1) & 0x2AF48A43;
  v359 = *(_DWORD *)(v345 + 4 * v338) + v338 * v338;
  v360 = (*(_DWORD *)(v342 + 4 * HIBYTE(v340)) - (HIBYTE(v340) | 0x54)) ^ 0x98E21884;
  v361 = v356 ^ 0x7ACB69A6 ^ BYTE2(v339) ^ BYTE1(v338) ^ (BYTE1(v338) + 1740562313) ^ (*(_DWORD *)(v348
                                                                                                 + 4
                                                                                                 * (BYTE1(v338) ^ 0xC3u))
                                                                                     - (BYTE1(v338) | 0xEF)) ^ v360 ^ (*(_DWORD *)(v346 + 4 * (BYTE2(v339) ^ 0x10u)) + (BYTE2(v339) ^ 0x10) * (BYTE2(v339) ^ 0x10)) ^ (v360 >> 1) & 0x2AF48A43;
  v362 = STACK[0xB00] & 0x10 ^ 0x6F24F679 ^ LODWORD(STACK[0xB28]) ^ (((v355 + v354) ^ v350 & 0xFFFFFFF7) & 0xC5FEB78C ^ STACK[0xB00] & 8 | ((v355 + v354) ^ v350 & 0xFFFFFFF7) & 0x3A014873);
  LODWORD(STACK[0xB00]) = v334 + 879061171;
  v363 = v334 + 879061171 + LODWORD(STACK[0xC18]) - LODWORD(STACK[0xB18]) - 2 * LODWORD(STACK[0xBD8]) + v361;
  v364 = v343 ^ 0xE2297122 ^ (BYTE1(v339) + 1740562313) ^ (BYTE1(v339) ^ BYTE2(v340)) ^ v359 ^ v352 ^ ((v343 ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ v351;
  v365 = LODWORD(STACK[0xBA0]) - LODWORD(STACK[0xB10]);
  LODWORD(STACK[0xB08]) = v255;
  v366 = (v365 + v255 + v363 + 783014017 - 2 * ((v365 + v255 + v363) & 0x2EABD887 ^ v363 & 6)) ^ LODWORD(STACK[0x528]);
  v367 = (v364
        - LODWORD(STACK[0xB20])
        + v255
        + 783014017
        - 2 * ((v364 - LODWORD(STACK[0xB20]) + v255) & 0x2EABD883 ^ v364 & 2)) ^ LODWORD(STACK[0x520]);
  v368 = LODWORD(STACK[0xB98]) ^ LODWORD(STACK[0xBA8]) ^ LODWORD(STACK[0x568]) ^ v347 ^ v357 ^ (v358
                                                                                              + 783014017
                                                                                              - ((2 * v358) & 0x5D57B102));
  v369 = LODWORD(STACK[0xBA8]) - LODWORD(STACK[0xB98]);
  LODWORD(STACK[0x568]) = v369;
  v370 = (v362 + v369 + 783014017 - ((2 * (v362 + v369)) & 0x5D57B102)) ^ LODWORD(STACK[0x530]);
  v371 = STACK[0xC20];
  v372 = LODWORD(STACK[0xC20]) ^ 0xEA106020;
  LODWORD(STACK[0x530]) = v372;
  v373 = v372 ^ (v368 + 1858371159 - ((2 * v368) & 0xDD88FCAE));
  v374 = (((((v368 ^ 0x15EF9FDF) + v373 + 1) ^ LODWORD(STACK[0x960]))
         + 1858371159
         - ((2 * (((v368 ^ 0x15EF9FDF) + v373 + 1) ^ LODWORD(STACK[0x960]))) & 0xDD88FCAE)) ^ v371)
       + (v368 ^ 0x15EF9FDF);
  v375 = v371 ^ 0xDE9A0243 ^ (v370 + 1858371159 - ((2 * v370) & 0xDD88FCAE));
  v376 = v371 ^ 0xDE9A0243 ^ (v366 + 1858371159 - ((2 * v366) & 0xDD88FCAE));
  v377 = v371 ^ 0xDE3D0243 ^ (v367 + 1858371159 - ((2 * v367) & 0xDD88FCAE));
  v378 = v371 ^ 0x43 ^ (v366 + 87 - ((2 * v366) & 0xAE));
  v379 = *(_DWORD *)(v345 + 4 * (v371 ^ 0x43u ^ (v366 + 87 - ((2 * v366) & 0xAE))));
  v380 = BYTE2(v375);
  v381 = STACK[0xBC8];
  LODWORD(STACK[0x528]) = *(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v375) ^ 0x10u))
                        + (BYTE2(v375) ^ 0x10) * (BYTE2(v375) ^ 0x10);
  v382 = v379 + v378 * v378;
  v383 = ((v374 ^ 0xB1BEF43A) >> 16);
  v384 = BYTE1(v376);
  v385 = *(_DWORD *)(v348 + 4 * (BYTE1(v376) ^ 0xC3u)) - (BYTE1(v376) | 0xEF);
  v386 = BYTE2(v376);
  v387 = *(_DWORD *)(v342 + 4 * HIBYTE(v375)) - (HIBYTE(v375) | 0x54);
  v388 = *(_DWORD *)(v381 + 4 * (BYTE2(v376) ^ 0x10u)) + (BYTE2(v376) ^ 0x10) * (BYTE2(v376) ^ 0x10);
  v389 = *(_DWORD *)(v381 + 4 * (BYTE2(v377) ^ 0xB7u)) + (BYTE2(v377) ^ 0xB7) * (BYTE2(v377) ^ 0xB7);
  v390 = (*(_DWORD *)(v342 + 4 * HIBYTE(v376)) - (HIBYTE(v376) | 0x54)) ^ 0x98E21884;
  v391 = (v390 >> 1) & 0x2AF48A43 ^ (*(_DWORD *)(v345 + 4 * v377)
                                   + v377 * v377) ^ v383 ^ BYTE1(v375) ^ (BYTE1(v375) + 1740562313) ^ (*(_DWORD *)(v381 + 4 * (v383 ^ 0x10u)) + (v383 ^ 0x10) * (v383 ^ 0x10)) ^ (*(_DWORD *)(v348 + 4 * (BYTE1(v375) ^ 0xC3u)) - (BYTE1(v375) | 0xEF));
  v392 = (*(_DWORD *)(v342 + 4 * HIBYTE(v377)) - (HIBYTE(v377) | 0x54)) ^ 0x98E21884;
  LODWORD(v381) = v388 ^ v386 ^ (v392 >> 1) & 0x2AF48A43 ^ ((BYTE1(v374) ^ 0xF4) + 1740562313) ^ (*(_DWORD *)(v345 + 4 * v375)
                                                                                                + v375
                                                                                                * v375) ^ (*(_DWORD *)(v348 + 4 * (BYTE1(v374) ^ 0x37u)) - (BYTE1(v374) ^ 0xF4 | 0xEF));
  v393 = v384 ^ BYTE2(v377) ^ (v384 + 1740562313) ^ v389 ^ v385 ^ (*(_DWORD *)(v345
                                                                             + 4 * (v374 ^ 0x3Au))
                                                                 + (v374 ^ 0x3A)
                                                                 * (v374 ^ 0x3A)) ^ v387 ^ 0x98E21884 ^ ((v387 ^ 0x98E21884) >> 1) & 0x2AF48A43;
  v394 = BYTE1(v377);
  v395 = v390 ^ LODWORD(STACK[0x538]) ^ (v391 + 1082263062 - ((2 * v391) & 0x81040C2C));
  LODWORD(v381) = v392 ^ LODWORD(STACK[0x540]) ^ ((unsigned __int16)(v374 ^ 0xF43A) >> 8) ^ (v381 + 1082263062 - ((2 * v381) & 0x81040C2C));
  v396 = (*(_DWORD *)(v348 + 4 * (v394 ^ 0xC3u)) - (v394 | 0xEF)) ^ (v394 + 1740562313) ^ v382 ^ v380;
  v397 = (*(_DWORD *)(v342 + 4 * ((v374 ^ 0xB1BEF43A) >> 24)) - (((v374 ^ 0xB1BEF43A) >> 24) | 0x54)) ^ 0x98E21884;
  v398 = v396 ^ v397 ^ LODWORD(STACK[0x528]) ^ (v397 >> 1) & 0x2AF48A43;
  v399 = (v393 + 1082263062 - ((2 * v393) & 0x81040C2C)) ^ LODWORD(STACK[0x558]);
  v400 = v394 ^ LODWORD(STACK[0x550]) ^ (v398 + 1082263062 - ((2 * v398) & 0x81040C2C));
  v401 = v400 + 1858371159 - ((2 * v400) & 0xDD88FCAE);
  v402 = LODWORD(STACK[0xC20]) ^ 0x11E4DE50;
  v403 = v402 ^ (v381 + 1858371159 - ((2 * v381) & 0xDD88FCAE));
  v404 = v402 ^ v401;
  v405 = (v395 + 1858371159 - ((2 * v395) & 0xDD88FCAE)) ^ LODWORD(STACK[0xC20]);
  v406 = *(_DWORD *)(v342 + 4 * (HIBYTE(v405) ^ 0x11)) - (HIBYTE(v405) ^ 0x11 | 0x54);
  LODWORD(v381) = (v399 + 1858371159 - ((2 * v399) & 0xDD88FCAE)) ^ LODWORD(STACK[0xC20]);
  v407 = v381 ^ 0xDEF7;
  v408 = ((v381 ^ 0x8BE4DEF7) >> 16);
  v409 = BYTE1(v403);
  v410 = *(_DWORD *)(v342 + 4 * HIBYTE(v403)) - (HIBYTE(v403) | 0x54);
  v411 = *(_DWORD *)(v345 + 4 * (v405 ^ 0x50u))
       + (v405 ^ 0x50) * (v405 ^ 0x50);
  v405 ^= 0x8BE4DE2E;
  v412 = BYTE2(v405);
  v413 = *(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v405) ^ 0x10u)) + (BYTE2(v405) ^ 0x10) * (BYTE2(v405) ^ 0x10);
  v414 = (*(_DWORD *)(v342 + 4 * HIBYTE(v404)) - (HIBYTE(v404) | 0x54)) ^ 0x98E21884;
  v415 = (*(_DWORD *)(v348 + 4 * (BYTE1(v403) ^ 0xC3u)) - (BYTE1(v403) | 0xEF)) ^ (BYTE1(v403) + 1740562313) ^ v408 ^ v411 ^ v414 ^ (v414 >> 1) & 0x2AF48A43 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (v408 ^ 0x10u)) + (v408 ^ 0x10) * (v408 ^ 0x10));
  v406 ^= 0x98E21884;
  v416 = BYTE2(v404) ^ (*(_DWORD *)(v345 + 4 * v403) + v403 * v403) ^ HIBYTE(v407) ^ (HIBYTE(v407) + 1740562313) ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v404) ^ 0x10u)) + (BYTE2(v404) ^ 0x10) * (BYTE2(v404) ^ 0x10)) ^ (*(_DWORD *)(v348 + 4 * (HIBYTE(v407) ^ 0xC3u)) - (HIBYTE(v407) | 0xEF)) ^ (v406 >> 1) & 0x2AF48A43;
  v417 = (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v403) ^ 0x10u)) + (BYTE2(v403) ^ 0x10) * (BYTE2(v403) ^ 0x10)) ^ BYTE2(v403) ^ (*(_DWORD *)(v345 + 4 * v404) + v404 * v404) ^ BYTE1(v405) ^ (BYTE1(v405) + 1740562313) ^ (*(_DWORD *)(v348 + 4 * (BYTE1(v405) ^ 0xC3u)) - (BYTE1(v405) | 0xEF));
  v418 = (*(_DWORD *)(v342 + 4 * (BYTE3(v381) ^ 0x11)) - (BYTE3(v381) ^ 0x11 | 0x54)) ^ 0x98E21884;
  v419 = v417 ^ v418 ^ (v418 >> 1) & 0x2AF48A43;
  v420 = v409 ^ LODWORD(STACK[0x560]) ^ (v415 + 2095363363 - ((2 * v415) & 0xF9C96A46));
  v421 = (v419 + 2095363363 - ((2 * v419) & 0xF9C96A46)) ^ LODWORD(STACK[0x578]);
  LODWORD(v381) = v406 ^ LODWORD(STACK[0x570]) ^ (v416 + 2095363363 - ((2 * v416) & 0xF9C96A46));
  v422 = LODWORD(STACK[0xC20]) ^ LODWORD(STACK[0x548]) ^ BYTE1(v404) ^ v410 ^ 0x98E21884 ^ (BYTE1(v404) + 1740562313) ^ v412 ^ (*(_DWORD *)(v348 + 4 * (BYTE1(v404) ^ 0xC3u)) - (BYTE1(v404) | 0xEF)) ^ ((v410 ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ (*(_DWORD *)(v345 + 4 * v407) + v407 * v407) ^ v413;
  v423 = LODWORD(STACK[0xC20]) ^ 0x6D3FA22C ^ (v381 + 1858371159 - ((2 * v381) & 0xDD88FCAE));
  LODWORD(v381) = LODWORD(STACK[0xC20]) ^ 0x6D98A22C;
  v424 = v381 ^ (v421 + 1858371159 - ((2 * v421) & 0xDD88FCAE));
  LODWORD(v381) = v381 ^ (v420 + 1858371159 - ((2 * v420) & 0xDD88FCAE));
  v425 = *(_DWORD *)(v342 + 4 * HIBYTE(v423)) - (HIBYTE(v423) | 0x54);
  v426 = BYTE1(v381);
  v427 = v348;
  v422 ^= 0x7FB86958u;
  v428 = *(_DWORD *)(v348 + 4 * (BYTE1(v381) ^ 0xC3u)) - (BYTE1(v381) | 0xEF);
  v429 = *(_DWORD *)(v348 + 4 * (BYTE1(v422) ^ 0xC3u)) - (BYTE1(v422) | 0xEF);
  v430 = *(_DWORD *)(v342 + 4 * HIBYTE(v424));
  v431 = v430 - 1730013052 - (HIBYTE(v424) | 0x54) - ((2 * (v430 - (HIBYTE(v424) | 0x54))) & 0x31C43108);
  v432 = *(_DWORD *)(v345 + 4 * v381) + v381 * v381;
  v433 = BYTE2(v424);
  v434 = *(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v424) ^ 0x10u)) + (BYTE2(v424) ^ 0x10) * (BYTE2(v424) ^ 0x10);
  v435 = v342;
  v436 = BYTE1(v424) ^ (*(_DWORD *)(v345 + 4 * v422) + v422 * v422) ^ (BYTE1(v424) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v424) ^ 0xC3u)) - (BYTE1(v424) | 0xEF)) ^ BYTE2(v381) ^ v425 ^ 0x98E21884 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v381) ^ 0x10u)) + (BYTE2(v381) ^ 0x10) * (BYTE2(v381) ^ 0x10)) ^ ((v425 ^ 0x98E21884) >> 1) & 0x2AF48A43;
  LODWORD(v381) = *(_DWORD *)(v342 + 4 * BYTE3(v381)) - (BYTE3(v381) | 0x54);
  v437 = (*(_DWORD *)(v342 + 4 * HIBYTE(v422)) - (HIBYTE(v422) | 0x54)) ^ 0x98E21884;
  v438 = (v437 >> 1) & 0x2AF48A43 ^ v437 ^ (*(_DWORD *)(v345 + 4 * v424)
                                          + v424 * v424) ^ BYTE2(v423) ^ v426 ^ (v426 + 1740562313) ^ v428 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v423) ^ 0xB7u)) + (BYTE2(v423) ^ 0xB7) * (BYTE2(v423) ^ 0xB7));
  v439 = v429 ^ (BYTE1(v422) + 1740562313) ^ v433 ^ (*(_DWORD *)(v345 + 4 * v423)
                                                   + v423 * v423) ^ v434 ^ v381 ^ 0x98E21884 ^ ((v381 ^ 0x98E21884) >> 1) & 0x2AF48A43;
  v440 = (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v422) ^ 0x10u)) + (BYTE2(v422) ^ 0x10) * (BYTE2(v422) ^ 0x10)) ^ BYTE2(v422) ^ BYTE1(v423) ^ (BYTE1(v423) + 1740562313) ^ v432 ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v423) ^ 0xC3u)) - (BYTE1(v423) | 0xEF)) ^ v431 ^ (v431 >> 1) & 0x2AF48A43;
  v441 = (v440 + 1070777217 - ((2 * v440) & 0x7FA58702)) ^ LODWORD(STACK[0x588]);
  LODWORD(v381) = LODWORD(STACK[0x530]) ^ (v441 + 1858371159 - ((2 * v441) & 0xDD88FCAE));
  v442 = (v436 + 1070777217 - ((2 * v436) & 0x7FA58702)) ^ LODWORD(STACK[0x580]);
  LODWORD(v381) = (LODWORD(STACK[0x960]) ^ LODWORD(STACK[0xC20]) ^ ((v441 ^ 0x15EF9FDF)
                                                                  + v381
                                                                  + 1858371160
                                                                  - ((2 * ((v441 ^ 0x15EF9FDF) + v381 + 1)) & 0xDD88FCAE)))
                + (v441 ^ 0x15EF9FDF);
  v443 = (v438 + 1070777217 - ((2 * v438) & 0x7FA58702)) ^ LODWORD(STACK[0x5A0]);
  v444 = BYTE1(v422) ^ LODWORD(STACK[0x598]) ^ (v439 + 1070777217 - ((2 * v439) & 0x7FA58702));
  v445 = v444 + 1858371159 - ((2 * v444) & 0xDD88FCAE);
  v446 = (v443 + 1858371159 - ((2 * v443) & 0xDD88FCAE)) ^ LODWORD(STACK[0xC20]);
  v447 = (v446 ^ 0x15EF9F78 ^ -(v446 ^ 0x15EF9F78) ^ ((v446 ^ 0xB7A19B33) + 1571945397)) + 1571945396;
  v448 = ((v381 ^ 0x24B1C435) >> 16);
  v449 = (v442 + 1858371159 - ((2 * v442) & 0xDD88FCAE)) ^ LODWORD(STACK[0xC20]);
  v450 = v449 ^ 0xABF9646B;
  v451 = ((unsigned __int16)(v449 ^ 0x646B) >> 8);
  v452 = ((unsigned __int16)(v381 ^ 0xC435) >> 8);
  v453 = *(_DWORD *)(v435 + 4 * ((v447 ^ 0xE3000081) >> 24)) - (((v447 ^ 0xE3000081) >> 24) | 0x54);
  v454 = *(_DWORD *)(v345 + 4 * (v381 ^ 0x35u))
       + (v381 ^ 0x35) * (v381 ^ 0x35);
  v455 = (*(_DWORD *)(v345 + 4 * (v447 ^ 0x81u))
        + (v447 ^ 0x81) * (v447 ^ 0x81)) ^ 0x45A2322D ^ v452 ^ 0x3F ^ ((v452 ^ 0x3F) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (v452 ^ 0xFCu)) - (v452 ^ 0xFC | 0xEF));
  v456 = v445 ^ LODWORD(STACK[0xC20]);
  v457 = (*(_DWORD *)(v345 + 4 * (v456 ^ 0xEAu))
        + (v456 ^ 0xEA) * (v456 ^ 0xEA)) ^ (v451 + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (v451 ^ 0xC3u))
                                                                                                  - (v451 | 0xEF)) ^ BYTE2(v447) ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v447) ^ 0x10u)) + (BYTE2(v447) ^ 0x10) * (BYTE2(v447) ^ 0x10));
  LODWORD(v381) = (*(_DWORD *)(v435 + 4 * (BYTE3(v381) ^ 0xBE)) - (BYTE3(v381) ^ 0xBE | 0x54)) ^ 0x98E21884;
  v458 = (*(_DWORD *)(v435 + 4 * ((v456 ^ 0xABF964EA) >> 24)) - (((v456 ^ 0xABF964EA) >> 24) | 0x54)) ^ 0x98E21884;
  v459 = (v458 >> 1) & 0x2AF48A43 ^ (*(_DWORD *)(v345 + 4 * (v449 ^ 0xEAu))
                                   + (v449 ^ 0xEA) * (v449 ^ 0xEA)) ^ BYTE1(v447) ^ (BYTE1(v447) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v447) ^ 0xC3u)) - (BYTE1(v447) | 0xEF)) ^ v448 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (v448 ^ 0x10u)) + (v448 ^ 0x10) * (v448 ^ 0x10));
  v460 = (((unsigned __int16)(v456 ^ 0x64EA) >> 8) ^ BYTE2(v450)) ^ (((unsigned __int16)(v456 ^ 0x64EA) >> 8)
                                                                                    + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (((unsigned __int16)(v456 ^ 0x64EA) >> 8) ^ 0xC3u)) - (((unsigned __int16)(v456 ^ 0x64EA) >> 8) | 0xEF)) ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v450) ^ 0xB7u)) + (BYTE2(v450) ^ 0xB7) * (BYTE2(v450) ^ 0xB7)) ^ (v453 >> 1) & 0x2AF48A43 ^ v454;
  v461 = (*(_DWORD *)(v435 + 4 * HIBYTE(v450)) - (HIBYTE(v450) | 0x54)) ^ 0x98E21884;
  v462 = (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v456) ^ 0x4Eu)) + (BYTE2(v456) ^ 0x4E) * (BYTE2(v456) ^ 0x4E)) ^ BYTE2(v456) ^ v461 ^ (v461 >> 1) & 0x2AF48A43 ^ __ROR4__(__ROR4__(v455 | 0xFDE0A3F1, 16) ^ 0x1726ADD3 ^ __ROR4__(v455 | 0x21F5C0E, 16), 16);
  v463 = (v462 + 194964551 - ((2 * v462) & 0x173DD88E)) ^ LODWORD(STACK[0x5B0]);
  v464 = v458 ^ LODWORD(STACK[0x590]) ^ (v459 + 194964551 - ((2 * v459) & 0x173DD88E));
  v465 = v463 + 1858371159 - ((2 * v463) & 0xDD88FCAE);
  v466 = v453 ^ LODWORD(STACK[0x5A8]) ^ (v460 + 194964551 - ((2 * v460) & 0x173DD88E));
  v467 = v451 ^ LODWORD(STACK[0x5C0]) ^ v381 ^ ((v457 ^ (v381 >> 1) & 0x2AF48A43)
                                              + 194964551
                                              - ((2 * (v457 ^ (v381 >> 1) & 0x2AF48A43)) & 0x173DD88E));
  v468 = LODWORD(STACK[0xC20]) ^ 0x6133AE20 ^ (v467 + 1858371159 - ((2 * v467) & 0xDD88FCAE));
  v469 = v465 ^ LODWORD(STACK[0xC20]);
  BYTE1(v460) = BYTE1(v469) ^ 0x74;
  v470 = LODWORD(STACK[0xC20]) ^ 0xF106BE41 ^ (v466 + 1858371159 - ((2 * v466) & 0xDD88FCAE));
  LODWORD(v381) = *(_DWORD *)(v435 + 4 * ((v469 ^ 0x761A740Bu) >> 24)) - (((v469 ^ 0x761A740Bu) >> 24) | 0x54);
  v471 = (v464 + 1858371159 - ((2 * v464) & 0xDD88FCAE)) ^ LODWORD(STACK[0xC20]);
  BYTE1(v455) = BYTE1(v471) ^ 0xAE;
  v472 = ((v471 ^ 0x6194AEA1) >> 16);
  v473 = *(_DWORD *)(v435 + 4 * ((v471 ^ 0x6194AEA1) >> 24)) - (((v471 ^ 0x6194AEA1) >> 24) | 0x54);
  v474 = *(_DWORD *)(v345 + 4 * ((v465 ^ LOBYTE(STACK[0xC20])) ^ 0x8Au))
       + ((v465 ^ LOBYTE(STACK[0xC20])) ^ 0x8A)
       * ((v465 ^ LOBYTE(STACK[0xC20])) ^ 0x8A);
  v475 = ((v469 ^ 0x761A740Bu) >> 16);
  v476 = *(_DWORD *)(v345 + 4 * v468) + v468 * v468;
  v477 = *(_DWORD *)(v435 + 4 * HIBYTE(v470)) - (HIBYTE(v470) | 0x54);
  v478 = (*(_DWORD *)(v435 + 4 * HIBYTE(v468)) - (HIBYTE(v468) | 0x54)) ^ 0x98E21884;
  v479 = LODWORD(STACK[0xB00])
       - LODWORD(STACK[0xBD8])
       + (BYTE2(v470) ^ 0x7ACB69A6 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v470) ^ 0x10u))
                                    + (BYTE2(v470) ^ 0x10) * (BYTE2(v470) ^ 0x10)) ^ (*(_DWORD *)(v345
                                                                                                + 4
                                                                                                * (v471 ^ 0x20u))
                                                                                    + (v471 ^ 0x20)
                                                                                    * (v471 ^ 0x20)) ^ v478 ^ (v478 >> 1) & 0x2AF48A43 ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v460) ^ 0xC3u)) - (BYTE1(v460) | 0xEF)) ^ (BYTE1(v460) + 1740562313 + BYTE1(v460) - 2 * ((BYTE1(v460) + 1740562313) & BYTE1(v460))));
  LODWORD(v381) = LODWORD(STACK[0x568])
                + LODWORD(STACK[0xC18])
                - LODWORD(STACK[0xBD8])
                + ((*(_DWORD *)(v345 + 4 * v470) + v470 * v470) ^ 0x7ACB69A6 ^ v472 ^ BYTE1(v468) ^ (BYTE1(v468) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v468) ^ 0xC3u)) - (BYTE1(v468) | 0xEF)) ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (v472 ^ 0x10u)) + (v472 ^ 0x10) * (v472 ^ 0x10)) ^ v381 ^ 0x98E21884 ^ ((v381 ^ 0x98E21884) >> 1) & 0x2AF48A43);
  v480 = LODWORD(STACK[0xB08]) ^ LODWORD(STACK[0xB20]) ^ (LODWORD(STACK[0xBA8])
                                                        - LODWORD(STACK[0xBA0])
                                                        - LODWORD(STACK[0xB98])
                                                        + LODWORD(STACK[0xB10])
                                                        + (BYTE1(v470) ^ 0x7ACB6901 ^ (BYTE1(v470) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v470) ^ 0xC3u)) - (BYTE1(v470) | 0xEF)) ^ BYTE2(v468) ^ v473 ^ 0x98E21884 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v468) ^ 0xB7u)) + (BYTE2(v468) ^ 0xB7) * (BYTE2(v468) ^ 0xB7)) ^ ((v473 ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ v474));
  v481 = (v480 - ((v480 + 812382570 - ((2 * v480) & 0x60D7F2D4)) ^ LODWORD(STACK[0x700]))) ^ ((LODWORD(STACK[0x700]) ^ 0xCF940695)
                                                                                            + 1);
  LODWORD(v381) = (v381 + 812382570 - ((2 * v381) & 0x60D7F2D4)) ^ LODWORD(STACK[0x710]);
  v482 = ((v481 + 812382570 - ((2 * v481) & 0x60D7F2D4)) ^ LODWORD(STACK[0x700])) + v480;
  v483 = LODWORD(STACK[0xC20]) ^ LODWORD(STACK[0xB10]) ^ LODWORD(STACK[0xB28]) ^ LODWORD(STACK[0x5C8]) ^ v477 ^ 0x98E21884 ^ ((v477 ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ BYTE1(v455) ^ (BYTE1(v455) + 1740562313) ^ v476 ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v455) ^ 0xC3u)) - (BYTE1(v455) | 0xEF)) ^ v475 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (v475 ^ 0x10u)) + (v475 ^ 0x10) * (v475 ^ 0x10));
  v484 = (v479 + 812382570 - ((2 * v479) & 0x60D7F2D4)) ^ LODWORD(STACK[0x660]);
  v485 = LODWORD(STACK[0xB08]) ^ LODWORD(STACK[0xC20]) ^ LODWORD(STACK[0xB18]) ^ (v484
                                                                                + 1858371159
                                                                                - ((2 * v484) & 0xDD88FCAE));
  v486 = LODWORD(STACK[0xC20]) ^ 0x7135ADEC ^ (v482 + 1858371159 - ((2 * v482) & 0xDD88FCAE));
  v487 = v483 ^ 0x55514377;
  v488 = *(_DWORD *)(v435 + 4 * ((v483 ^ 0x55514377) >> 24)) - (((v483 ^ 0x55514377) >> 24) | 0x54);
  v489 = (v381 + 1858371159 - ((2 * v381) & 0xDD88FCAE)) ^ LODWORD(STACK[0xC20]);
  v490 = ((v489 ^ 0xEB35AD6D) >> 16);
  v491 = STACK[0xBC8];
  LODWORD(v381) = __ROR4__(v488 ^ 0x98E21884, 4) ^ 0x335397FF ^ __ROR4__((v488 ^ 0x98E21884) & 0x55E91486, 5);
  v492 = v485 ^ 0x7135AD6D;
  v493 = STACK[0xBE0];
  v494 = *(_DWORD *)(STACK[0xBE0] + 4 * (v485 ^ 0xECu))
       + (v485 ^ 0xEC) * (v485 ^ 0xEC);
  v495 = BYTE1(v487);
  v496 = *(_DWORD *)(v435 + 4 * HIBYTE(v486)) - (HIBYTE(v486) | 0x54);
  v497 = BYTE2(v486);
  v498 = *(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v486) ^ 0x10u)) + (BYTE2(v486) ^ 0x10) * (BYTE2(v486) ^ 0x10);
  v499 = (*(_DWORD *)(v435 + 4 * ((v485 ^ 0x7135AD6D) >> 24)) - (((v485 ^ 0x7135AD6D) >> 24) | 0x54)) ^ 0x98E21884;
  v500 = (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v487) ^ 0x10u)) + (BYTE2(v487) ^ 0x10) * (BYTE2(v487) ^ 0x10)) ^ BYTE2(v487) ^ ((unsigned __int16)(v489 ^ 0xAD6D) >> 8) ^ (((unsigned __int16)(v489 ^ 0xAD6D) >> 8) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (((unsigned __int16)(v489 ^ 0xAD6D) >> 8) ^ 0xC3u)) - (((unsigned __int16)(v489 ^ 0xAD6D) >> 8) | 0xEF)) ^ (v499 >> 1) & 0x2AF48A43 ^ (*(_DWORD *)(STACK[0xBE0] + 4 * v486) + v486 * v486);
  v501 = v490 ^ __ROR4__(v381, 28) ^ v494 ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (v490 ^ 0x10u))
                                           + (v490 ^ 0x10) * (v490 ^ 0x10)) ^ BYTE1(v486) ^ (BYTE1(v486) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v486) ^ 0xC3u)) - (BYTE1(v486) | 0xEF));
  v502 = (v501 + 1890933992 - ((2 * v501) & 0xE16AB9D0)) ^ LODWORD(STACK[0x788]);
  v503 = (*(_DWORD *)(v427 + 4 * (BYTE1(v487) ^ 0xC3u)) - (BYTE1(v487) | 0xEF)) ^ (BYTE1(v487) + 1740562313) ^ (*(_DWORD *)(STACK[0xBE0] + 4 * (v489 ^ 0xECu)) + (v489 ^ 0xEC) * (v489 ^ 0xEC)) ^ BYTE2(v492) ^ (*(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v492) ^ 0x10u)) + (BYTE2(v492) ^ 0x10) * (BYTE2(v492) ^ 0x10));
  LODWORD(v381) = BYTE1(v492) ^ (*(_DWORD *)(STACK[0xBE0] + 4 * v487)
                               + v487 * v487) ^ (BYTE1(v492) + 1740562313);
  v504 = (*(_DWORD *)(v435 + 4 * (HIBYTE(v489) ^ 0x71)) - (HIBYTE(v489) ^ 0x71 | 0x54)) ^ 0x98E21884;
  LODWORD(v381) = v381 ^ v504 ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v492) ^ 0xC3u)) - (BYTE1(v492) | 0xEF)) ^ (v504 >> 1) & 0x2AF48A43 ^ v497 ^ v498;
  v505 = v499 ^ LODWORD(STACK[0x5B8]) ^ (v500 + 1890933992 - ((2 * v500) & 0xE16AB9D0));
  LODWORD(v381) = (v381 + 1890933992 - ((2 * v381) & 0xE16AB9D0)) ^ LODWORD(STACK[0x790]);
  v506 = STACK[0xC20];
  v507 = LODWORD(STACK[0xC20]) ^ 0x7C85F9FB ^ (v502 + 1858371159 - ((2 * v502) & 0xDD88FCAE));
  v508 = v495 ^ LODWORD(STACK[0x7A8]) ^ v496 ^ 0x98E21884 ^ ((v503 ^ ((v496 ^ 0x98E21884) >> 1) & 0x2AF48A43)
                                                           + 1890933992
                                                           - ((2 * (v503 ^ ((v496 ^ 0x98E21884) >> 1) & 0x2AF48A43)) & 0xE16AB9D0));
  v509 = LODWORD(STACK[0xC20]) ^ 0x49BC8608 ^ (v505 + 1858371159 - ((2 * v505) & 0xDD88FCAE));
  v510 = BYTE2(v509) ^ -BYTE2(v509) ^ ((BYTE2(v509) ^ 0xAFB2520D) + 1347268083);
  v511 = (v508 + 1858371159 - ((2 * v508) & 0xDD88FCAE)) ^ LODWORD(STACK[0xC20]);
  v512 = ((v511 ^ 0xD3BC8608) >> 16);
  v513 = *(_DWORD *)(STACK[0xBC8] + 4 * (BYTE2(v509) ^ 0x10u)) + (BYTE2(v509) ^ 0x10) * (BYTE2(v509) ^ 0x10);
  v514 = *(_DWORD *)(STACK[0xBC8] + 4 * (v512 ^ 0x10u)) + (v512 ^ 0x10) * (v512 ^ 0x10);
  v515 = BYTE1(v507);
  v516 = *(_DWORD *)(v427 + 4 * (BYTE1(v507) ^ 0xC3u)) - (BYTE1(v507) | 0xEF);
  v517 = ((unsigned __int16)(v511 ^ 0x8608) >> 8);
  LODWORD(STACK[0xB28]) = *(_DWORD *)(v427 + 4 * (v517 ^ 0xC3u)) - (v517 | 0xEF);
  v518 = BYTE1(v509);
  v519 = *(_DWORD *)(v427 + 4 * (BYTE1(v509) ^ 0xC3u)) - (BYTE1(v509) | 0xEF);
  LODWORD(STACK[0xB20]) = *(_DWORD *)(v435 + 4 * HIBYTE(v507)) - (HIBYTE(v507) | 0x54);
  v520 = *(_DWORD *)(v435 + 4 * HIBYTE(v509)) - (HIBYTE(v509) | 0x54);
  v521 = *(_DWORD *)(v493 + 4 * v509) + v509 * v509;
  v522 = (v381 + 1858371159 - ((2 * v381) & 0xDD88FCAE)) ^ v506;
  v523 = v522 ^ 0xD3BC8608;
  v524 = *(_DWORD *)(v493 + 4 * (v522 ^ 8u))
       + (v522 ^ 8) * (v522 ^ 8);
  LODWORD(v525) = __ROR4__((*(_DWORD *)(v435 + 4 * (HIBYTE(v522) ^ 0x49)) - (HIBYTE(v522) ^ 0x49 | 0x54)) ^ 0xECFF57D9, 13) ^ 0x7AEBA0EA;
  HIDWORD(v525) = v525;
  v526 = (v518 + 1740562313) ^ (*(_DWORD *)(v493 + 4 * v507)
                              + v507 * v507) ^ v519 ^ v512 ^ v514 ^ (v525 >> 19) ^ ((v525 >> 19) >> 1) & 0x2AF48A43;
  v527 = *(_DWORD *)(v493 + 4 * (v511 ^ 8u))
       + (v511 ^ 8) * (v511 ^ 8);
  v528 = *(_DWORD *)(v435 + 4 * (HIBYTE(v511) ^ 0x49)) - (HIBYTE(v511) ^ 0x49 | 0x54);
  v529 = ((v522 ^ 0xD3BC8608) >> 16);
  v530 = v528 ^ 0x32F4F3FC;
  if (!LODWORD(STACK[0x780]))
    v530 = 1441338502;
  v531 = v516 ^ (BYTE1(v507) + 1740562313) ^ v524 ^ v513 ^ (v510 + 1347268082) ^ ((v530 & (v528 ^ 0x98E21884)) >> 1);
  v532 = (*(_DWORD *)(v491 + 4 * (BYTE2(v507) ^ 0x10u)) + (BYTE2(v507) ^ 0x10) * (BYTE2(v507) ^ 0x10)) ^ BYTE2(v507) ^ v520 ^ 0x98E21884 ^ (BYTE1(v523) + 1740562313) ^ (*(_DWORD *)(v427 + 4 * (BYTE1(v523) ^ 0xC3u)) - (BYTE1(v523) | 0xEF)) ^ ((v520 ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ v527;
  v533 = v518 ^ LODWORD(STACK[0x798]) ^ (v526 + 1940495799 - ((2 * v526) & 0xE7533B6E));
  v534 = BYTE1(v523) ^ LODWORD(STACK[0x6F8]) ^ (v532 + 1940495799 - ((2 * v532) & 0xE7533B6E));
  v535 = v534 + 1858371159 - ((2 * v534) & 0xDD88FCAE);
  v536 = v506 ^ 0x4ABF850B ^ (v533 + 1858371159 - ((2 * v533) & 0xDD88FCAE));
  v537 = LODWORD(STACK[0x7B0]) ^ v506 ^ v521 ^ LODWORD(STACK[0xB20]) ^ 0x98E21884 ^ v529 ^ ((LODWORD(STACK[0xB20]) ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ (v517 + 1740562313) ^ (*(_DWORD *)(v491 + 4 * (BYTE2(v523) ^ 0x10u)) + (BYTE2(v523) ^ 0x10) * (BYTE2(v523) ^ 0x10)) ^ LODWORD(STACK[0xB28]);
  v538 = v515 ^ LODWORD(STACK[0x7A0]) ^ v528 ^ (v531 + 1940495799 - ((2 * v531) & 0xE7533B6E));
  v539 = (v538 + 1858371159 - ((2 * v538) & 0xDD88FCAE)) ^ v506;
  v540 = *(_DWORD *)(v435 + 4 * (HIBYTE(v539) ^ 0x82)) - (HIBYTE(v539) ^ 0x82 | 0x54);
  v541 = v539 ^ 0x1810307D;
  v542 = *(_DWORD *)(STACK[0xBE0] + 4 * (v539 ^ 0x7Du))
       + (v539 ^ 0x7D) * (v539 ^ 0x7D);
  v543 = BYTE1(v536);
  v544 = *(_DWORD *)(v427 + 4 * (BYTE1(v536) ^ 0xC3u)) - (BYTE1(v536) | 0xEF);
  v545 = BYTE1(v541);
  v546 = *(_DWORD *)(v427 + 4 * (BYTE1(v541) ^ 0xC3u)) - (BYTE1(v541) | 0xEF);
  v547 = v537 ^ v517;
  v548 = *(_DWORD *)(v435 + 4 * (HIBYTE(v537) ^ 0x57)) - (HIBYTE(v537) ^ 0x57 | 0x54);
  v549 = v535 ^ v506;
  v550 = *(_DWORD *)(STACK[0xBE0] + 4 * (v549 ^ 0xBu))
       + (v549 ^ 0xB) * (v549 ^ 0xB);
  v551 = BYTE2(v541);
  v552 = *(_DWORD *)(v491 + 4 * (BYTE2(v541) ^ 0x10u)) + (BYTE2(v541) ^ 0x10) * (BYTE2(v541) ^ 0x10);
  v553 = v549 ^ 0x4ABF850A;
  v554 = ((v549 ^ 0x4ABF850Au) >> 16) ^ 0x10;
  v555 = *(_DWORD *)(v491 + 4 * v554) + v554 * v554;
  v556 = *(_DWORD *)(v435 + 4 * HIBYTE(v536)) - (HIBYTE(v536) | 0x54);
  v557 = (*(_DWORD *)(v427 + 4 * (((unsigned __int16)(v547 ^ 0x666A) >> 8) ^ 0xC3u))
        - (((unsigned __int16)(v547 ^ 0x666A) >> 8) | 0xEF)) ^ (((unsigned __int16)(v547 ^ 0x666A) >> 8)
                                                                               + 1740562313) ^ (((unsigned __int16)(v547 ^ 0x666A) >> 8) ^ BYTE2(v553)) ^ v555 ^ (*(_DWORD *)(STACK[0xBE0] + 4 * v536) + v536 * v536) ^ v540 ^ 0x98E21884 ^ ((v540 ^ 0x98E21884) >> 1) & 0x2AF48A43;
  v558 = ((v548 ^ 0x98E21884) >> 1) & 0x2AF48A43 ^ v548 ^ 0x98E21884 ^ v550 ^ (v545 + 1740562313) ^ BYTE2(v536) ^ v546 ^ (*(_DWORD *)(v491 + 4 * (BYTE2(v536) ^ 0x10u)) + (BYTE2(v536) ^ 0x10) * (BYTE2(v536) ^ 0x10));
  v559 = ((v547 ^ 0xB4D2666A) >> 16);
  v560 = BYTE1(v553);
  v561 = *(_DWORD *)(v427 + 4 * (BYTE1(v553) ^ 0xC3u)) - (BYTE1(v553) | 0xEF);
  v562 = (*(_DWORD *)(v435 + 4 * HIBYTE(v553)) - (HIBYTE(v553) | 0x54)) ^ 0x98E21884;
  v563 = (*(_DWORD *)(v491 + 4 * (v559 ^ 0x10u)) + (v559 ^ 0x10) * (v559 ^ 0x10)) ^ v559 ^ v542 ^ (v543 + 1740562313) ^ (v562 >> 1) & 0x2AF48A43 ^ v544;
  v564 = v562 ^ LODWORD(STACK[0x708]) ^ v543 ^ (v563 + 469253647 - ((2 * v563) & 0x37F07C1E));
  v565 = v545 ^ LODWORD(STACK[0x768]) ^ (v558 + 469253647 - ((2 * v558) & 0x37F07C1E));
  v566 = (v557 + LODWORD(STACK[0x770]) + ~((2 * v557) & 0x37F07C1E)) ^ LODWORD(STACK[0x760]);
  v567 = v506 ^ LODWORD(STACK[0x778]) ^ (*(_DWORD *)(STACK[0xBE0] + 4 * (v547 ^ 0xEBu))
                                       + (v547 ^ 0xEB) * (v547 ^ 0xEB)) ^ (v560 + 1740562313) ^ v551 ^ v561 ^ v552 ^ v556 ^ 0x98E21884 ^ ((v556 ^ 0x98E21884) >> 1) & 0x2AF48A43;
  v568 = v564 + 1858371159 - ((2 * v564) & 0xDD88FCAE);
  v569 = (v565 + 1858371159 - ((2 * v565) & 0xDD88FCAE)) ^ v506;
  v570 = STACK[0xB90];
  v571 = v568 ^ v506;
  v572 = STACK[0x3C0];
  v573 = (v566 + 1858371159 - ((2 * v566) & 0xDD88FCAE)) ^ v506;
  v574 = BYTE1(v567) ^ 0x40;
  v575 = v567 ^ 0x753C4058 ^ v560;
  v576 = v575 ^ 0x7F97FAC6;
  v577 = STACK[0xB80];
  v578 = STACK[0x3F0];
  v579 = *(_DWORD *)(STACK[0x3F0] + 4 * BYTE2(v576)) + 1314804125 + BYTE2(v576) * BYTE2(v576);
  v580 = (v579 >> 4) & 0x1205716 ^ v579 ^ (*(_DWORD *)(STACK[0xB80] + 4 * (BYTE1(v573) ^ 0x1Eu))
                                         + (BYTE1(v573) ^ 0x1E) * (BYTE1(v573) ^ 0x1E));
  HIDWORD(v582) = *(_DWORD *)(STACK[0xB90] + 4 * (HIBYTE(v569) ^ 0x7F)) - (HIBYTE(v569) ^ 0x7F | 0x5E);
  LODWORD(v582) = HIDWORD(v582);
  v581 = v582 >> 22;
  HIDWORD(v582) = *(_DWORD *)(STACK[0x3C0] + 4 * ((v568 ^ v506) ^ 0x1Eu))
                - ((v568 ^ v506) | 0xBE);
  LODWORD(v582) = HIDWORD(v582);
  v583 = v582 >> 10;
  v584 = v580 ^ (16 * v581 * v581) ^ (v583 >> 1) & 0x759FE19C;
  v585 = v581 ^ LODWORD(STACK[0x7C0]) ^ v583 ^ (v584 + 351164925 - ((2 * v584) & 0x29DCB3FA));
  v586 = (v585 + 1858371159 - ((2 * v585) & 0xDD88FCAE)) ^ v506;
  v587 = ((v586 ^ 0xC217A463) >> (STACK[0xB30] & 0x1B)) ^ 0x1F19A80B ^ ((v586 ^ 0xC217A463) << LODWORD(STACK[0xB08]));
  v588 = v586 ^ 0xDD0E0C68;
  if ((STACK[0xB30] & 0x1B) != 0)
    v588 = v587;
  v589 = *(_DWORD *)(v578 + 4 * (BYTE2(v571) ^ 0x97u)) + 1314804125 + (BYTE2(v571) ^ 0x97) * (BYTE2(v571) ^ 0x97);
  HIDWORD(v591) = *(_DWORD *)(v572 + 4 * (v575 ^ 0x1Eu)) - (v575 | 0xBE);
  LODWORD(v591) = HIDWORD(v591);
  v590 = v591 >> 10;
  HIDWORD(v591) = *(_DWORD *)(v570 + 4 * (HIBYTE(v573) ^ 0x7F)) - (HIBYTE(v573) ^ 0x7F | 0x5E);
  LODWORD(v591) = HIDWORD(v591);
  v592 = v591 >> 22;
  v593 = (v590 >> 1) & 0x759FE19C ^ (16 * v592 * v592) ^ (*(_DWORD *)(v577 + 4 * (BYTE1(v569) ^ 0x1Eu))
                                                        + (BYTE1(v569) ^ 0x1E) * (BYTE1(v569) ^ 0x1E)) ^ ((((v589 >> 4) & 0x1205716 | v589) ^ -((v589 >> 4) & 0x1205716 | v589) ^ (((v589 >> 4) & 0x1205716 & v589) - ((v589 >> 4) & 0x1205716 ^ v589))) + ((v589 >> 4) & 0x1205716 & v589));
  v594 = v590 ^ LODWORD(STACK[0x7C8]) ^ v592 ^ (v593 + 351164925 - ((2 * v593) & 0x29DCB3FA));
  v595 = (v594 + 1858371159 - ((2 * v594) & 0xDD88FCAE)) ^ v506;
  v596 = ((v595 ^ 0xC217A463) >> (STACK[0xB30] & 0x1B)) | ((v595 ^ 0xC217A463) << LODWORD(STACK[0xB08]));
  v597 = v596 + 521775115 - ((2 * v596) & 0x3E335016);
  v598 = v569 ^ 0x2D97FA1E;
  v599 = v595 ^ 0xDD0E0C68;
  if ((STACK[0xB30] & 0x1B) != 0)
    v599 = v597;
  v600 = v573 ^ 0x2D97FA1E;
  v601 = *(_DWORD *)(v578 + 4 * BYTE2(v600)) + 1314804125 + BYTE2(v600) * BYTE2(v600);
  HIDWORD(v603) = *(_DWORD *)(v570 + 4 * HIBYTE(v576)) - (HIBYTE(v576) | 0x5E);
  LODWORD(v603) = HIDWORD(v603);
  v602 = v603 >> 22;
  HIDWORD(v603) = *(_DWORD *)(v572 + 4 * v598) - (v598 | 0xBE);
  LODWORD(v603) = HIDWORD(v603);
  v604 = v603 >> 10;
  v605 = v601 ^ (16 * v602 * v602) ^ (v601 >> 4) & 0x1205716 ^ (*(_DWORD *)(v577 + 4 * (BYTE1(v571) ^ 0x1Eu))
                                                              + (BYTE1(v571) ^ 0x1E) * (BYTE1(v571) ^ 0x1E)) ^ (v604 >> 1) & 0x759FE19C;
  v606 = v602 ^ LODWORD(STACK[0x7D0]) ^ v604 ^ (v605 + 351164925 - ((2 * v605) & 0x29DCB3FA));
  v607 = (v606 + 1858371159 - ((2 * v606) & 0xDD88FCAE)) ^ v506;
  v608 = ((v607 ^ 0xC217A463) << LODWORD(STACK[0xB08])) | ((v607 ^ 0xC217A463) >> LODWORD(STACK[0xBA0]));
  v609 = v608 + 521775115 - ((2 * v608) & 0x3E335016);
  v610 = v607 ^ 0xDD0E0C68;
  if ((STACK[0xBC0] & 0x18) != 0)
    v610 = v609;
  v611 = *(_DWORD *)(v578 + 4 * BYTE2(v598)) + 1314804125 + BYTE2(v598) * BYTE2(v598);
  HIDWORD(v613) = *(_DWORD *)(v572 + 4 * v600) - (v600 | 0xBE);
  LODWORD(v613) = HIDWORD(v613);
  v612 = v613 >> 10;
  HIDWORD(v613) = *(_DWORD *)(v570 + 4 * (HIBYTE(v571) ^ 0x7F)) - (HIBYTE(v571) ^ 0x7F | 0x5E);
  LODWORD(v613) = HIDWORD(v613);
  v614 = v613 >> 22;
  v615 = (v612 >> 1) & 0x759FE19C ^ (*(_DWORD *)(v577 + 4 * (v574 ^ 0x1Eu)) + (v574 ^ 0x1E) * (v574 ^ 0x1E)) ^ (16 * v614 * v614) ^ (((v611 ^ 0xEDFA8E96) + (v611 | 0x12057169) + 1) >> 4);
  v616 = v612 ^ LODWORD(STACK[0x7D8]) ^ v611 ^ v614 ^ (v615 + 351164925 - ((2 * v615) & 0x29DCB3FA));
  v617 = (v616 + 1858371159 - ((2 * v616) & 0xDD88FCAE)) ^ v506;
  v618 = ((v617 ^ 0xC217A463) << (STACK[0x7B8] & 0x18)) ^ 0x1F19A80B ^ ((v617 ^ 0xC217A463) >> (STACK[0xBC0] & 0x18));
  v619 = v617 ^ 0xDD0E0C68;
  if ((STACK[0x7B8] & 0x18) != 0)
    v619 = v618;
  v620 = STACK[0xB38];
  if ((STACK[0xB38] & 1) != 0)
    v621 = v599;
  else
    v621 = v610;
  if ((v620 & 1) != 0)
  {
    v599 = v619;
    v622 = v588;
  }
  else
  {
    v622 = v619;
  }
  if ((v620 & 1) != 0)
    v623 = v610;
  else
    v623 = v588;
  v624 = (((_BYTE)v620 + 2 * LOBYTE(STACK[0xBA8])) & 2) == 0;
  v625 = LODWORD(STACK[0x938]) + 521775115 - ((2 * LODWORD(STACK[0x938])) & 0x3E335016);
  if (v624)
    v626 = v622;
  else
    v626 = v621;
  v627 = v626 ^ v625;
  v628 = v626 ^ v625 ^ 0x2A2A692A;
  v629 = STACK[0x3D0];
  v630 = *(_BYTE *)(STACK[0x3D0] + (BYTE1(v628) ^ 0x5BLL)) + (BYTE1(v628) ^ 0x5B) * (BYTE1(v628) ^ 0x5B);
  v631 = ((v630 + (v630 ^ 0x9C) + 1) ^ 0xFE) + v630;
  v632 = STACK[0x2F8];
  *(_BYTE *)(STACK[0x2F8] + STACK[0x808]) = v631 - ((2 * v631) & 0xDD) + 110;
  if (!v624)
    v621 = v622;
  v633 = v621 ^ (LODWORD(STACK[0x940]) + 521775115 - ((2 * LODWORD(STACK[0x940])) & 0x3E335016));
  v634 = *(_BYTE *)(v629 + (v633 ^ 0xE9)) + (v633 ^ 0xE9) * (v633 ^ 0xE9);
  *(_BYTE *)(v632 + STACK[0x8A8]) = (v634 ^ 0x54) - 2 * ((v634 ^ 0x54) & 0xEF ^ v634 & 1) + 110;
  if (v624)
    v635 = v623;
  else
    v635 = v599;
  v636 = v635 ^ (LODWORD(STACK[0x948]) + 521775115 - ((2 * LODWORD(STACK[0x948])) & 0x3E335016));
  v637 = v636 ^ 0x2A2A102A;
  v638 = (*(_BYTE *)(v629 + (BYTE1(v637) ^ 0x5BLL)) + (BYTE1(v637) ^ 0x5B) * (BYTE1(v637) ^ 0x5B)) ^ 0xA1;
  *(_BYTE *)(v632 + STACK[0x8F0]) = v638 - ((2 * v638) & 0xDD) + 110;
  v639 = *(_BYTE *)(v629 + (BYTE2(v633) ^ 0x87)) + (BYTE2(v633) ^ 0x87) * (BYTE2(v633) ^ 0x87);
  *(_BYTE *)(v632 + STACK[0x8B8]) = (v639 ^ 0x94) - 2 * ((v639 ^ 0x94) & 0xEF ^ v639 & 1) + 110;
  v640 = (*(_BYTE *)(v629 + (BYTE1(v633) ^ 0x97)) + (BYTE1(v633) ^ 0x97) * (BYTE1(v633) ^ 0x97)) ^ 0xEF;
  *(_BYTE *)(v632 + STACK[0x8F8]) = v640 - ((2 * v640) & 0xDD) + 110;
  if (!v624)
    v599 = v623;
  v641 = v599 ^ (LODWORD(STACK[0x930]) + 521775115 - ((2 * LODWORD(STACK[0x930])) & 0x3E335016));
  v642 = *(_BYTE *)(v629 + (BYTE1(v641) ^ 0x60)) + (BYTE1(v641) ^ 0x60) * (BYTE1(v641) ^ 0x60);
  *(_BYTE *)(v632 + STACK[0x910]) = (v642 ^ 0x26) + ~(2 * ((v642 ^ 0x26) & 0xEF ^ v642 & 1)) + 111;
  v643 = *(unsigned __int8 *)(v629 + (HIBYTE(v627) ^ 0x71)) + (HIBYTE(v627) ^ 0x71) * (HIBYTE(v627) ^ 0x71);
  *(_BYTE *)(v632 + STACK[0x8C0]) = (v643 ^ 0x4E) - 2 * ((v643 ^ 0x4E) & 0xEF ^ v643 & 1) + 110;
  *(_BYTE *)(v632 + STACK[0x8B0]) = ((*(_BYTE *)(v629 + (v641 ^ 0x7DLL)) + (v641 ^ 0x7D)
                                                                                          * (v641 ^ 0x7D)) ^ 0x28)
                                  - ((2
                                    * ((*(_BYTE *)(v629 + (v641 ^ 0x7DLL))
                                      + (v641 ^ 0x7D) * (v641 ^ 0x7D)) ^ 0x28)) & 0xDD)
                                  + 110;
  LOBYTE(v643) = (*(_BYTE *)(v629 + (BYTE2(v641) ^ 0x6ALL)) + (BYTE2(v641) ^ 0x6A) * (BYTE2(v641) ^ 0x6A)) ^ 0x2A;
  *(_BYTE *)(v632 + STACK[0x908]) = v643 - ((2 * v643) & 0xDD) + 110;
  LOBYTE(v643) = (*(_BYTE *)(v629 + (BYTE2(v637) ^ 0xB1)) + (BYTE2(v637) ^ 0xB1) * (BYTE2(v637) ^ 0xB1)) ^ 0x89;
  *(_BYTE *)(v632 + STACK[0x928]) = v643 - ((2 * v643) & 0xDD) + 110;
  LOBYTE(v643) = *(_BYTE *)(v629 + (BYTE2(v628) ^ 0x89)) + (BYTE2(v628) ^ 0x89) * (BYTE2(v628) ^ 0x89);
  *(_BYTE *)(v632 + STACK[0x900]) = (v643 ^ 0xFA) - 2 * ((v643 ^ 0xFA) & 0xEF ^ v643 & 1) + 110;
  v644 = (*(unsigned __int8 *)(v629 + (HIBYTE(v636) ^ 0xD7)) + (HIBYTE(v636) ^ 0xD7) * (HIBYTE(v636) ^ 0xD7)) ^ 0x4D;
  *(_BYTE *)(v632 + STACK[0x8C8]) = v644 - ((2 * v644) & 0xDD) + 110;
  v645 = (*(unsigned __int8 *)(v629 + (HIBYTE(v641) ^ 0x18)) + (HIBYTE(v641) ^ 0x18) * (HIBYTE(v641) ^ 0x18)) ^ 0xFFFFFFF7;
  v646 = STACK[0x918];
  *(_BYTE *)(v632 + v646) = v645 - ((2 * v645) & 0xDD) + 110;
  *(_BYTE *)(v632 + STACK[0x8E8]) = ((*(_BYTE *)(v629 + (v636 ^ 0xA2)) + (v636 ^ 0xA2)
                                                                                          * (v636 ^ 0xA2)) ^ 0xE9)
                                  + (~(2
                                     * ((*(_BYTE *)(v629 + (v636 ^ 0xA2))
                                       + (v636 ^ 0xA2) * (v636 ^ 0xA2)) ^ 0xE9)) | 0x23)
                                  + 111;
  *(_BYTE *)(v632 + STACK[0x8E0]) = ((*(_BYTE *)(v629 + (v628 ^ 0x9CLL)) + (v628 ^ 0x9C)
                                                                                          * (v628 ^ 0x9C)) ^ 0x64)
                                  - ((2
                                    * ((*(_BYTE *)(v629 + (v628 ^ 0x9CLL))
                                      + (v628 ^ 0x9C) * (v628 ^ 0x9C)) ^ 0x64)) & 0xDD)
                                  + 110;
  v647 = *(unsigned __int8 *)(v629 + (HIBYTE(v633) ^ 0x1DLL)) + (HIBYTE(v633) ^ 0x1D) * (HIBYTE(v633) ^ 0x1D);
  *(_BYTE *)(v632 + STACK[0x920]) = (v647 ^ 0x12) - 2 * ((v647 ^ 0x12) & 0xEF ^ v647 & 1) + 110;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                               + 8
                                                               * ((970
                                                                 * ((((_DWORD)v646
                                                                    + 2082557053
                                                                    - 2
                                                                    * (((_DWORD)v646 + 16) & STACK[0x8D0] ^ STACK[0x8D8] & 2)
                                                                    + 16) ^ 0x7C214C7Du) >= STACK[0x300])) ^ LODWORD(STACK[0xAD8])))
                                                   - 4))(42, 113);
}

uint64_t sub_1000EFE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;

  v6 = STACK[0x4F8];
  v7 = LODWORD(STACK[0x4F8]) ^ 0x1468;
  LODWORD(STACK[0x938]) = LODWORD(STACK[0xAE0]) ^ 0x50505050;
  LODWORD(STACK[0x940]) = LODWORD(STACK[0xAE8]) ^ 0x50505050;
  LODWORD(STACK[0x948]) = (v7 + 1347439345) ^ LODWORD(STACK[0xAF8]);
  v8 = *(_QWORD *)(STACK[0xC38] + 8 * v6);
  LODWORD(STACK[0x930]) = LODWORD(STACK[0xAF0]) ^ 0x50505050;
  LODWORD(STACK[0xBA0]) = STACK[0x4E8];
  LODWORD(STACK[0xBC0]) = STACK[0xB98];
  LODWORD(STACK[0xB18]) = STACK[0x4E0];
  LODWORD(STACK[0xB28]) = STACK[0x4F0];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 - 8))(a1, a2, 178, a4, 104, a6, 170);
}

uint64_t sub_1000EFEF4()
{
  int v0;

  v0 = STACK[0x2E8];
  STACK[0x1550] -= 10880;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (v0 ^ (2
                                               * (LODWORD(STACK[0xDA0]) - LODWORD(STACK[0x1728]) - 252419707 == ((v0 - 3884) ^ (v0 - 4189) ^ 0xCB646036)))))
                            - 4))();
}

uint64_t sub_1000EFF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;

  LODWORD(STACK[0x145C]) = a5 - 933177545 + v5 + 4731 + LODWORD(STACK[0x145C]) - 1292;
  LODWORD(STACK[0x152C]) = a5;
  v7 = STACK[0xC38];
  *(_QWORD *)(v6 + 344) = *(_QWORD *)(STACK[0xC38] + 8 * v5) - 4;
  return ((uint64_t (*)(unint64_t *))(*(_QWORD *)(v7 + 8 * (v5 + 1251)) - 8))(&STACK[0x1448]);
}

uint64_t sub_1000F002C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 1616) -= 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0xC38] + 8 * v7) - ((v7 + 373) | 0x53u) + 3955))(a1, a2, a3, a4, a5, a6, a7, &STACK[0xCC8]);
}

uint64_t sub_1000F0068()
{
  int v0;
  int v1;

  LODWORD(STACK[0x13C8]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((7076 * (v1 == ((v0 - 3421) ^ 0x39C12B1E))) ^ (v0 - 3421)))
                            - 4))();
}

uint64_t sub_1000F00B4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 + 2021)) - 7 * (v0 ^ 0x2CFu) + 1483))();
}

uint64_t sub_1000F00E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;

  *(_QWORD *)(*(_QWORD *)(a8 + 760) + v8) = 0x631F30597EADA3F0;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v9 - 1342)))();
}

uint64_t sub_1000F0124()
{
  int v0;
  int v1;
  unint64_t v2;

  v2 = STACK[0xC38];
  LODWORD(STACK[0x151C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 + 1103) ^ v0)) - 8))();
}

uint64_t sub_1000F0150()
{
  int v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((((v1 - 3929) | 0xC81) + 3512) * (v2 == v0)) ^ (v1 - 1642))))();
}

uint64_t sub_1000F0184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  LODWORD(STACK[0x145C]) = LODWORD(STACK[0x145C]) - 1476107351 + LODWORD(STACK[0x1244]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0xC38]
                                                     + 8
                                                     * (((*(_QWORD *)(a8 + 352) == 0)
                                                       * (((v8 ^ 0x3E8) + 784) ^ (v8 + 605))) ^ v8)))(37, 1521439385);
}

uint64_t sub_1000F0200()
{
  int v0;

  LODWORD(STACK[0x18E0]) = 968915258;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 1502)) - 8))();
}

uint64_t sub_1000F0228@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  _DWORD *v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((*v4 == a1) * ((a2 - 1379) ^ v2)) | a2))
                            - ((a2 - 1672) | v3)
                            + 3194))();
}

uint64_t sub_1000F0260()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((*(_QWORD *)(v2 + 16) != 0) * v1) ^ v0)))();
}

uint64_t sub_1000F0294()
{
  int v0;

  LODWORD(STACK[0x18E0]) = 968960260;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v0 - 1502)) - 8))();
}

uint64_t sub_1000F02BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  _QWORD *v10;

  v10 = (_QWORD *)(*(_QWORD *)(a8 + 760) - 0x5CAD012F7F6EB6A0);
  *(_DWORD *)(*v10 - 0x631F30597EADA368) = *(_DWORD *)(v8 + 4);
  LODWORD(STACK[0x18E0]) = 968960260;
  *(_QWORD *)(*v10 - 0x631F30597EADA360) = ((uint64_t (*)(_QWORD))STACK[0x838])((v9 ^ 0x9F2u) * a1
                                                                                          - 933177545 + *(_DWORD *)(*v10 - 0x631F30597EADA368));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (((*(_QWORD *)(*v10 - 0x631F30597EADA360) != 0) * ((v9 - 2338) ^ 0x1986)) ^ v9))
                            - 8))();
}

uint64_t sub_1000F0384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  _QWORD *v7;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * (v6 ^ 0x586))
                                                                                               - 4))(*(_QWORD *)(*v7 - 0x631F30597EADA360), a2, a3, a4, 2208, a6, 1347);
}

uint64_t sub_1000F0434@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unint64_t v3;

  v3 = STACK[0xC38];
  LODWORD(STACK[0x11F8]) = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((a1 ^ 0xC45) + v2)))();
}

uint64_t sub_1000F049C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((5361 * (v3 == v1)) ^ (v2 - 3134)))
                            - ((a1 | 0xE4u) ^ 0x1FALL)))();
}

uint64_t sub_1000F1048()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - ((v0 + v1) & 0xECC25AE7) + 2787))();
}

uint64_t sub_1000F14C4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  *(_DWORD *)(a1 + 4 * v2) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v2 == 63) * (a2 ^ v4)) ^ v3)) - 8))();
}

uint64_t sub_1000F14F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X6>, unint64_t a7@<X7>, int a8@<W8>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v11 = (a8 - 423492418) & 0x193DFFBB;
  LODWORD(STACK[0xAF0]) = 8 * a2 - ((16 * a2 + 101608160) & 0xAB315E0) + 1214300256;
  v12 = STACK[0xB68];
  STACK[0x710] = STACK[0xB68] + 5775;
  STACK[0x708] = v12 + 5774;
  STACK[0x700] = v12 + 5773;
  STACK[0x6F8] = v12 + 5772;
  STACK[0xA98] = v12 + 8447;
  STACK[0xA90] = v12 + 8446;
  STACK[0xA88] = v12 + 8445;
  STACK[0xA80] = v12 + 8444;
  STACK[0xA38] = v12 + 8385;
  STACK[0xA30] = v12 + 8386;
  STACK[0x9E0] = v12 + 8387;
  STACK[0x9D8] = v12 + 8388;
  STACK[0x9D0] = v12 + 8389;
  STACK[0x9C8] = v12 + 8390;
  STACK[0x9C0] = v12 + 8391;
  STACK[0x9B8] = v12 + 8392;
  STACK[0x9B0] = v12 + 8393;
  STACK[0x9A8] = v12 + 8394;
  STACK[0x9A0] = v12 + 8395;
  STACK[0x998] = v12 + 8396;
  STACK[0x990] = v12 + 8397;
  STACK[0x988] = v12 + 8398;
  STACK[0x980] = v12 + 8399;
  STACK[0x978] = v12 + 8400;
  STACK[0x970] = v12 + 8401;
  STACK[0x968] = v12 + 8402;
  v13 = *(_QWORD *)(STACK[0xC38] + 8 * a8);
  STACK[0x960] = v12 + 8403;
  STACK[0x958] = v12 + 8404;
  STACK[0x950] = v12 + 8405;
  STACK[0x948] = v12 + 8406;
  STACK[0x940] = v12 + 8407;
  STACK[0x938] = v12 + 8408;
  STACK[0x930] = v12 + 8409;
  STACK[0x928] = v12 + 8410;
  STACK[0x920] = v12 + 8411;
  STACK[0x918] = v12 + 8412;
  STACK[0x910] = v12 + 8413;
  STACK[0x908] = v12 + 8414;
  STACK[0x900] = v12 + 8415;
  STACK[0x8F8] = v12 + 8416;
  STACK[0x8F0] = v12 + 8417;
  STACK[0x8E8] = v12 + 8418;
  STACK[0x8E0] = v12 + 8419;
  STACK[0x8D8] = v12 + 8420;
  STACK[0x8D0] = v12 + 8421;
  STACK[0x8C8] = v12 + 8422;
  STACK[0x8C0] = v12 + 8423;
  STACK[0x8B8] = v12 + 8424;
  STACK[0x8B0] = v12 + 8425;
  STACK[0x8A8] = v12 + 8426;
  STACK[0x808] = v12 + 8427;
  STACK[0x7D8] = v12 + 8428;
  STACK[0x7D0] = v12 + 8429;
  STACK[0x7C8] = v12 + 8430;
  STACK[0x7C0] = v12 + 8431;
  STACK[0x7B8] = v12 + 8432;
  STACK[0x7B0] = v12 + 8433;
  STACK[0x7A8] = v12 + 8434;
  STACK[0x7A0] = v12 + 8435;
  STACK[0x798] = v12 + 8436;
  STACK[0x790] = v12 + 8437;
  STACK[0x788] = v12 + 8438;
  STACK[0x780] = v12 + 8439;
  STACK[0x778] = v12 + 8440;
  STACK[0x770] = v12 + 8441;
  STACK[0x768] = v12 + 8442;
  STACK[0x760] = v12 + 8443;
  STACK[0x5C0] = STACK[0x290] + a3;
  STACK[0x660] = STACK[0x340] + a3;
  STACK[0xB00] = STACK[0x280] + a3;
  STACK[0xAA8] = STACK[0x338] + a3;
  STACK[0xAE0] = STACK[0x278] + a3;
  STACK[0x5C8] = a3;
  STACK[0xB10] = (unint64_t)&STACK[0x2040] + a3;
  LODWORD(STACK[0xBC0]) = -1265854126;
  LODWORD(STACK[0xBD8]) = -675411868;
  LODWORD(STACK[0xB98]) = -1766620130;
  LODWORD(STACK[0xBA8]) = 960770540;
  LODWORD(STACK[0xBA0]) = 90320104;
  LODWORD(STACK[0xBC8]) = -307334739;
  LODWORD(STACK[0xB78]) = a2;
  STACK[0xB38] = v10;
  STACK[0xAD8] = a6;
  STACK[0xAD0] = a7;
  STACK[0xAC8] = v8;
  STACK[0xB88] = v9;
  STACK[0xA68] = a4;
  STACK[0xBE0] = a5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(v13 - v11 + 6953))(a1, 7307, 2354681433);
}

uint64_t sub_1000F1A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char a3@<W7>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  int v17;
  char *v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  int v23;

  v18 = (char *)(v4 + (v11 + a1));
  v19 = *v18;
  LODWORD(v18) = ((v18 ^ *(_DWORD *)(v8 + v9)) & 0x7FFFFFFF) * (((v6 ^ a4) * v15) ^ v5);
  v20 = (v18 ^ (v18 >> 16)) * v17;
  *(_BYTE *)(v13 + a1) = v19 ^ *(_BYTE *)(v12 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v7 + 3) ^ *(_BYTE *)((v20 >> 24) + a2 + 6) ^ v20 ^ (BYTE3(v20) * a3) ^ v14;
  v21 = a1 == 63;
  v22 = a1 + 1;
  v23 = v21;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((v23 * v10) ^ v6)))(v22);
}

uint64_t sub_1000F1AB0(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  LODWORD(STACK[0xB78]) -= 64;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 - 2330)) - 8);
  LODWORD(STACK[0xC20]) += a1;
  return v3();
}

uint64_t sub_1000F1AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  char v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((7838 * (((v7 | 6) - 36) == a7)) ^ v8))
                            - 8))();
}

uint64_t sub_1000F1B2C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * (int)(((((v0 + 1526170755) & 0xA5086F77) - 3719)
                                               * (LODWORD(STACK[0xB78]) != 933173586)) ^ v0))
                            - 4))();
}

uint64_t sub_1000F1BE0@<X0>(unsigned int a1@<W0>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W7>, int a6@<W8>)
{
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  _BOOL4 v22;

  v17 = (unsigned __int8 *)(v9 + a4);
  v18 = ((v17 ^ *(_DWORD *)(v11 + v12)) & (a6 + v7 - 1448 + 1891)) * v8;
  v19 = (v18 ^ HIWORD(v18)) * v8;
  v20 = *v17 ^ *(unsigned __int8 *)(v13 + (v19 >> 24)) ^ *(unsigned __int8 *)((v19 >> 24) + v16 + 3) ^ *(unsigned __int8 *)((v19 >> 24) + v10 + 6) ^ v19 ^ ((v19 >> 24) * v15) ^ a5;
  v22 = (a3 + 2) > 0xB7FC9798 || a1 + 1208182888 >= v6;
  *(_BYTE *)(a2 + a1) = v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((v22 * v14) ^ v7)) - 8))();
}

uint64_t sub_1000F1D88(int a1)
{
  unsigned int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((((a1 - 757553949) & 0x2D2754FF) - 1221) * (v1 > 0x20)) ^ a1)))();
}

uint64_t sub_1000F1F70()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - 4))();
}

uint64_t sub_1000F20E4(double a1, __n128 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(__n128 *)(v5 + v4) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((v4 == 48) * v6) ^ v3)) - v2 + 3951))();
}

uint64_t sub_1000F2EC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(v6 + 4 * v1) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((((v0 ^ v4) + v1 != 64) * v5) ^ v2)) - 8))();
}

uint64_t sub_1000F34C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;

  v10 = (_OWORD *)(v5 + a1);
  *v10 = v9;
  v10[1] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v3 + v6 + a2 == v4) * v7) ^ a3)) - 8))();
}

uint64_t sub_1000F3680@<X0>(char a1@<W8>)
{
  int v1;
  _BYTE *v2;
  uint64_t v3;
  unsigned int v4;

  v4 = STACK[0xB70];
  v2[63] = LODWORD(STACK[0xB70]) ^ 0xD1;
  v2[62] = (BYTE1(v4) ^ 0x54) - (((a1 | 0x28) ^ 0x62) & (2 * (BYTE1(v4) ^ 0x54))) + 47;
  v2[61] = (BYTE2(v4) ^ 0x9F) - ((2 * (BYTE2(v4) ^ 0x9F)) & 0x5E) + 47;
  LODWORD(STACK[0xB70]) = HIBYTE(v4) ^ 0x7B9F5485;
  v2[60] = HIBYTE(v4) ^ 0x54;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v1) - 4))();
}

uint64_t sub_1000F3704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((4890 * (STACK[0xD38] - v6 > 0xF)) ^ v5)))(a1, a2, a3, a4, a5, 201271702, 22, 0x100212000);
}

uint64_t sub_1000F3760@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  *(_OWORD *)(v3 + v1) = *(_OWORD *)(v2 + v1);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v1 + 16 != (a1 ^ v4) - 3895) * v5) ^ a1)))();
}

uint64_t sub_1000F3790@<X0>(unint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  *(_BYTE *)(v5 + v2) = *(_BYTE *)(v4 + v2);
  v7 = v2 + 1 != ((107 * (a2 ^ v3)) ^ a1);
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(a2 ^ (8 * (v7 & 0xFFFFFFFD | (2 * v7))))))();
}

uint64_t sub_1000F5698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD *v12;

  v12 = (_OWORD *)(v10 + v6 + v7);
  *v12 = v11;
  v12[1] = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((((a1 ^ a4) + v6 == v9) * a6) ^ v8)) - 4))();
}

uint64_t sub_1000F5804@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * a1))();
}

uint64_t sub_1000F5884@<X0>(char a1@<W8>)
{
  int v1;
  char v2;
  char v3;
  char v4;
  int v5;
  uint64_t (*v6)(void);

  v5 = STACK[0xB00];
  *(_BYTE *)STACK[0x710] = LODWORD(STACK[0xB00]) ^ (a1 * v3) ^ v4;
  *(_BYTE *)STACK[0x708] = (BYTE1(v5) ^ 0xDE) - ((2 * (BYTE1(v5) ^ 0xDE)) & 0x24) + 18;
  *(_BYTE *)STACK[0x700] = v2;
  *(_BYTE *)STACK[0x6F8] = v2;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - 8);
  LODWORD(STACK[0xB80]) = 110;
  LODWORD(STACK[0xB00]) = 224910944;
  return v6();
}

uint64_t sub_1000F5944@<X0>(int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((LODWORD(STACK[0xB70]) > a1 - 2569) * (v1 ^ 0x9C9)) ^ v1)))();
}

uint64_t sub_1000F5AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  LODWORD(STACK[0xB78]) = a8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * (v8 - 939)) - (((v8 - 3303) | 0x928u) ^ 0xBBCLL)))(a1, v9, a3, STACK[0xAF0], a5, STACK[0xAA8]);
}

uint64_t sub_1000F5C8C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (_DWORD *)STACK[0xB68];
  v4[1828] = a2;
  v4[1832] = 701708481;
  v4[1834] = 140451051;
  v4[1844] = -1903207590;
  v4[1830] = 1852675965;
  v4[1833] = -1632616362;
  v4[1840] = -1308551048;
  v4[1850] = -308240438;
  v4[1829] = -370740300;
  v4[1836] = -1007226997;
  v4[1838] = 2086644781;
  v4[1835] = 1995210327;
  v4[1831] = -660474912;
  v4[1837] = 1865195792;
  v4[1841] = -283382511;
  v4[1848] = 1011305091;
  v4[1853] = 950688694;
  v4[1842] = 577117439;
  v4[1839] = 109840635;
  v4[1843] = -763191604;
  v4[1864] = -1100135974;
  v4[1845] = 445801512;
  v4[1849] = -1720940999;
  v4[1860] = -375130582;
  v4[1847] = 1272280110;
  v4[1846] = -393491551;
  v4[1852] = 1868089820;
  v4[1857] = -2139075631;
  v4[1871] = 592746138;
  v4[1861] = -5108224;
  v4[1858] = 609936863;
  v4[1856] = -1341099869;
  v4[1854] = -1304296528;
  v4[1865] = 242487871;
  v4[1855] = 534734989;
  v4[1870] = 1972502894;
  v4[1863] = -674654494;
  v4[1859] = -1593639556;
  v4[1862] = 1289024984;
  v4[1867] = -1921450126;
  v4[1851] = 582215276;
  v4[1866] = -1600611587;
  v4[1877] = -483812118;
  v4[1868] = -771805435;
  v4[1873] = 1159545160;
  v4[1869] = -272849379;
  v4[1872] = 584314023;
  v4[1881] = 105112270;
  v4[1874] = 1150999266;
  v4[1879] = -2135391783;
  v4[1890] = 1376617105;
  v4[1875] = 92398774;
  v4[1880] = -36023863;
  v4[1882] = -1440520831;
  v4[1878] = 296208523;
  v4[1876] = 1316084369;
  v4[1885] = -313219939;
  v4[1888] = 898003028;
  v4[1884] = -1491690546;
  v4[1889] = 452562990;
  v4[1883] = 1420327760;
  v5 = LODWORD(STACK[0xB90]);
  v4[1886] = 1408718068;
  v6 = LODWORD(STACK[0xBA0]);
  v4[1891] = 333831625;
  v7 = LODWORD(STACK[0xC20]);
  v4[1887] = 1694575799;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0xC38]
                                                                                                  + 8 * v2))(v7, 5781, a1, v5, 63, v6, v3);
}

uint64_t sub_1000FF468@<X0>(unsigned int a1@<W1>, unint64_t a2@<X2>, int a3@<W5>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __n128 *v9;

  *(_OWORD *)(a4 + v6) = v8;
  v9 = (__n128 *)(v5 + 4 * v6);
  v9[2] = a5;
  v9[3] = a5;
  *v9 = a5;
  v9[1] = a5;
  return (*(uint64_t (**)(void))(v7 + 8 * ((15 * (v6 + 16 == (((a3 - 1616) | a1) ^ a2))) ^ a3)))();
}

uint64_t sub_1000FF4A4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (v1 + 2466)) - 8);
  LODWORD(STACK[0xB70]) = 501784335;
  LODWORD(STACK[0xC20]) = 1553527898;
  LODWORD(STACK[0xC18]) = 1793620778;
  LODWORD(STACK[0xBC8]) = 1334605165;
  LODWORD(STACK[0xBD8]) = 1263649046;
  LODWORD(STACK[0xBE0]) = -183812542;
  LODWORD(STACK[0xBC0]) = -893111050;
  LODWORD(STACK[0xBA0]) = 1188604221;
  LODWORD(STACK[0xBA8]) = -6064723;
  return v3(a1, 1895, 167556128, 4127412095, 132, 3014, 0x100212000, 3955);
}

uint64_t sub_1000FF578@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((7 * (v3 + (v2 ^ 0x6B6 ^ (a1 | v1) ^ 0x8B60E64C) < 0xFFFFFFC0)) | (v2 - 1023)))
                            - 8))();
}

uint64_t sub_1000FF7B8()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  *(_BYTE *)(v0 + v1) = -81;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 + 1 < ((v2 + 1060179471) & 0xC0CEFFEA ^ 0x17A8))
                                          * (((v2 + 1060179471) ^ 0x3F311E4D) - 1763)) ^ v2))
                            - 8))();
}

uint64_t sub_1000FF934()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 > ((v0 + 2826) ^ 0x1AA1u)) * (v0 - 3941)) | (v0 + 2826)))
                            - 8))();
}

uint64_t sub_1000FFADC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 8))();
}

uint64_t sub_1000FFAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = ((a1 + a2 + 3456) & (v3 + 1)) == 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((v5 & 0xFFFFFFDF | (32 * v5)) ^ v2)) - 8))();
}

uint64_t sub_1000FFC98(__n128 a1, __n128 a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = v3 + 64 > STACK[0x1160] && v3 < STACK[0x1160] + 64;
  return ((uint64_t (*)(__n128, __n128, __n128))(*(_QWORD *)(v4
                                                                     + 8
                                                                     * ((v6 * ((v2 ^ 0xBE6) - 1110)) ^ (v2 - 2790)))
                                                         - ((6 * (v2 ^ 0xFB0u)) ^ 0x4AELL)))(a1, a2, (__n128)vdupq_n_s32(0xBFF299Eu));
}

uint64_t sub_100101098@<X0>(int a1@<W3>, char a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;

  v8 = (unsigned __int8 *)(v5 + 4 * a3);
  v9 = ((*v8 ^ 0x2F) << ((107 * (v3 ^ a2)) ^ v6)) | ((v8[1] ^ 0x2F) << 8) | v8[2] ^ 0x2F;
  *(_DWORD *)(v4 + 4 * a3) = (v8[3] ^ 0x2F | (v9 << 8))
                           + 201271702
                           - 2 * (((v8[3] ^ 0x2F) & 0x9E | (v9 << 8) & 0xBFF299E) ^ (v8[3] ^ 0x2F) & 8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a3 != 15) * a1) ^ v3)))();
}

uint64_t sub_1001035E4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;
  int v3;

  v2 = STACK[0xAE8];
  v3 = (LODWORD(STACK[0xAE8]) + a1) & 0x28949BBF;
  LODWORD(STACK[0xBE0]) = LODWORD(STACK[0xAE0]) ^ 0xC0;
  LODWORD(STACK[0xBD8]) = LODWORD(STACK[0xAD0]) ^ 0x9E;
  LODWORD(STACK[0xB98]) = (v3 - 7035) ^ LODWORD(STACK[0xAD8]);
  LODWORD(STACK[0xBC0]) = LODWORD(STACK[0xAC8]) ^ 0xF9;
  return (*(uint64_t (**)(void))(v1 + 8 * v2))();
}

uint64_t sub_10010934C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * ((123 * (v1 == 207)) ^ v0)) - 8))();
}

uint64_t sub_10010D45C()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  STACK[0xBE0] = v1;
  STACK[0xC20] = v2;
  v4 = STACK[0xB78];
  v5 = (*(unsigned __int8 *)(STACK[0xB78] + (v0 ^ 0xABLL)) - (v0 | 0xFFFFFFBF)) ^ v0;
  STACK[0xBD8] = 387 * (v3 ^ 0x13FAu);
  v6 = (*(unsigned __int8 *)(v4 + (v5 ^ 1)) - (v5 | 0xFFFFFFBF)) ^ v5 ^ 0x1A;
  v7 = (*(unsigned __int8 *)(v4 + (v6 ^ 0x74)) - (v6 ^ 0x74 | 0xFFFFFFBF)) ^ v6 ^ 0x21;
  v8 = ((*(_BYTE *)(v4 + (v6 ^ 0x74)) - (v6 ^ 0x74 | 0xBF)) ^ v6 ^ 0x21) ^ 0x7ALL;
  LODWORD(v8) = (*(unsigned __int8 *)(v4 + v8) - (v8 | 0xFFFFFFBF)) ^ v7 ^ 0xFFFFFFD8;
  LODWORD(v8) = (*(unsigned __int8 *)(v4 + (v8 ^ 0x64)) - (v8 ^ 0x64 | 0xFFFFFFBF)) ^ v8 ^ 0xFFFFFFC5;
  LODWORD(v8) = (*(unsigned __int8 *)(v4 + (v8 ^ 0xC7)) - (v8 ^ 0xC7 | 0xFFFFFFBF)) ^ v8 ^ 0xFFFFFFA0;
  v9 = (*(unsigned __int8 *)(v4 + (v8 ^ 0xEELL)) - (v8 ^ 0xEE | 0xFFFFFFBF)) ^ v8 ^ 0x1E;
  v10 = (*(unsigned __int8 *)(v4 + (v9 ^ 0x12)) - (v9 | 0xFFFFFFBF)) ^ v9;
  v11 = (*(unsigned __int8 *)(v4 + (v10 ^ 0xC8)) - (v10 ^ 0xC8 | 0xFFFFFFBF)) ^ v10;
  LODWORD(v8) = v11 ^ (*(unsigned __int8 *)(v4 + (v11 ^ 0x1CLL)) - (v11 | 0xFFFFFFBF)) ^ 0xFFFFFF87;
  LODWORD(v8) = (*(unsigned __int8 *)(v4 + (v8 ^ 0x44)) - (v8 ^ 0x44 | 0xFFFFFFBF)) ^ v8;
  LODWORD(v8) = (*(unsigned __int8 *)(v4 + (v8 ^ 0x12)) - (v8 | 0xFFFFFFBF)) ^ v8 ^ 0x53;
  LODWORD(v8) = (*(unsigned __int8 *)(v4 + (v8 ^ 0x40)) - (v8 ^ 0x40 | 0xFFFFFFBF)) ^ v8;
  LODWORD(v8) = (*(unsigned __int8 *)(v4 + (v8 ^ 0xAALL)) - (v8 | 0xFFFFFFBF)) ^ v8 ^ 0xFFFFFFDE;
  v12 = (*(unsigned __int8 *)(v4 + (v8 ^ 0x2ELL)) - (v8 | 0xFFFFFFBF)) ^ v8;
  STACK[0xC18] = v12 ^ (*(unsigned __int8 *)(v4 + (v12 ^ 0xB6)) - (v12 | 0xFFFFFFBF)) ^ 0x32;
  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * ((1036 * (STACK[0xBE0] >= 0x6C1F9919)) ^ LODWORD(STACK[0xB10]))))();
}

uint64_t sub_10010F3DC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unint64_t v5;
  char *v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  _BYTE *v25;
  int v26;
  unint64_t v27;

  v4 = LODWORD(STACK[0x980]) ^ v1 ^ 0xC42CFB7B;
  v5 = STACK[0xBD8];
  v6 = (char *)*(&off_100236540 + (int)(STACK[0xBD8] - 6284)) - 2017383115;
  v7 = v3 ^ LODWORD(STACK[0x978]);
  v8 = v7 ^ (STACK[0xBD8] - 2798) ^ 0x28C9588D;
  v9 = (((v6[BYTE2(v4)] + BYTE2(v4) * BYTE2(v4)) << 16) & 0xFF0000 | (((v6[(unint64_t)v4 >> 24] + HIBYTE(v4) * HIBYTE(v4)) ^ 0x57) << 24) | (v6[(LOBYTE(STACK[0x980]) ^ v1) ^ 0x7B] + (LOBYTE(STACK[0x980]) ^ v1 ^ 0x7B) * (LOBYTE(STACK[0x980]) ^ v1 ^ 0x7B)) | (((v6[BYTE1(v4)] + BYTE1(v4) * BYTE1(v4)) ^ 0x2C) << 8)) ^ LODWORD(STACK[0x988]);
  v10 = v6[HIBYTE(v7) ^ 0x78] + (HIBYTE(v7) ^ 0x78) * (HIBYTE(v7) ^ 0x78);
  v11 = v6[BYTE1(v8)] + BYTE1(v8) * BYTE1(v8);
  v12 = v6[BYTE2(v8)] + BYTE2(v8) * BYTE2(v8);
  v13 = v6[(v7 ^ (STACK[0xBD8] + 18)) ^ 0x8D] + v8 * v8;
  v14 = v2 ^ LODWORD(STACK[0x968]);
  v15 = v0 ^ LODWORD(STACK[0x960]);
  v16 = (unsigned __int16)((v6[(unsigned __int16)(v14 ^ 0xBA2) >> 8]
                                           + ((unsigned __int16)(v14 ^ 0xBA2) >> 8)
                                           * ((unsigned __int16)(v14 ^ 0xBA2) >> 8)) << 8) | (((v6[HIBYTE(v14) ^ 0x21] + (HIBYTE(v14) ^ 0x21) * (HIBYTE(v14) ^ 0x21)) ^ 0xCB) << 24) | (v6[(v2 ^ LOBYTE(STACK[0x968])) ^ 0x55] + (v2 ^ LOBYTE(STACK[0x968]) ^ 0x55) * (v2 ^ LOBYTE(STACK[0x968]) ^ 0x55));
  LOBYTE(v14) = (v6[((v14 ^ 0xCAF0BA2) >> 16)] + ((v14 ^ 0xCAF0BA2) >> 16) * ((v14 ^ 0xCAF0BA2) >> 16)) ^ 0x54;
  v17 = ((v15 ^ 0x1A4736B2) >> 16) ^ 0x7FLL;
  v18 = v6[v17];
  v19 = HIBYTE(v15) ^ 0xA2;
  v20 = ((unsigned __int16)(v15 ^ 0x36B2) >> 8) ^ 0xB9;
  v21 = v6[v20];
  v22 = v15 ^ 0xA1;
  v23 = v6[v22];
  LOBYTE(v6) = v6[v19];
  v24 = (v16 & 0xFF00FFFF | (v14 << 16)) ^ LODWORD(STACK[0x990]);
  v25 = (_BYTE *)STACK[0x1040];
  *v25 = HIBYTE(v9);
  v25[1] = (v9 ^ 0x8C0005u) >> 16;
  v25[2] = BYTE1(v9);
  v25[3] = v9 ^ 5;
  v25[9] = BYTE2(v24);
  v26 = ((unsigned __int16)(v11 << 8) | ((v10 ^ 0xAB) << 24) | v13 | ((v12 ^ 0xF3) << 16)) ^ LODWORD(STACK[0x998]);
  v25[4] = HIBYTE(v26);
  v25[8] = HIBYTE(v24);
  LOWORD(v24) = v24 ^ 0x4156;
  v25[11] = v24;
  v25[7] = v26 ^ 0xFB;
  LODWORD(v6) = ((unsigned __int16)((v21 + v20 * v20) << 8) | ((((_BYTE)v6 + v19 * v19) ^ 0x28) << 24) | (v23 + v22 * v22) | (((v18 + v17 * v17) ^ 0x42) << 16)) ^ LODWORD(STACK[0x970]);
  v25[12] = BYTE3(v6);
  v25[10] = BYTE1(v24);
  v25[13] = BYTE2(v6);
  v25[14] = (unsigned __int16)((unsigned __int16)v6 ^ 0x70EF) >> 8;
  v25[5] = BYTE2(v26);
  v25[15] = v6 ^ 0xEF;
  v25[6] = (unsigned __int16)(v26 ^ 0xB7FB) >> 8;
  v27 = STACK[0x10E8];
  STACK[0xBA8] = STACK[0xD20];
  STACK[0xC18] = STACK[0x1228];
  STACK[0xBC8] = STACK[0x1358];
  STACK[0xBC0] = STACK[0x1168];
  STACK[0xC20] = STACK[0x13D8];
  STACK[0xBE0] = STACK[0x1110];
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * (int)v5) - 8))(v27);
}

uint64_t sub_10010FA04()
{
  int v0;
  int v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * v0) - (v1 | v2) + 3951))();
}

uint64_t sub_10010FE0C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (v0 - 2547)))();
}

uint64_t sub_100110184@<X0>(int a1@<W8>)
{
  _QWORD *v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((1920 * (((*v1 == 0) ^ (a1 - 16)) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_1001101E4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = 0;
  v3 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38]
                                                      + 8
                                                      * ((((24 * (v2 ^ 0xF9A)) ^ 0x11B8) * (v1 != 0)) ^ (v2 - 894)))
                                          - 4))(v3);
}

uint64_t sub_100110274()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x838])(24);
  STACK[0x1270] = v1;
  return (*(uint64_t (**)(void))(STACK[0xC38]
                              + 8 * ((5484 * (((v1 == 0) ^ (13 * (v0 ^ 0xCE) - 96)) & 1)) ^ v0)))();
}

uint64_t sub_100110438()
{
  unint64_t v0;
  unint64_t v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;

  STACK[0x308] = v4;
  STACK[0x328] = v3;
  STACK[0x330] = v1;
  STACK[0x2F0] = v0;
  **(_BYTE **)(v5 + 480) = 19;
  v6 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 496) = v6 + 321;
  *(_QWORD *)(v5 + 504) = v6 + 322;
  *(_WORD *)(v6 + 320) = -24625;
  *(_BYTE *)(v6 + 322) = -89;
  v7 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 512) = v7 + 323;
  *(_BYTE *)(v7 + 323) = 74;
  v8 = *(_QWORD *)(v5 + 472);
  *(_WORD *)(v8 + 324) = 9578;
  *(_DWORD *)(v8 + 326) = 137400620;
  *(_QWORD *)(v5 + 520) = v8 + 327;
  *(_QWORD *)(v5 + 528) = v8 + 329;
  *(_QWORD *)(v5 + 536) = v8 + 330;
  *(_BYTE *)(v8 + 330) = -117;
  v9 = *(_QWORD *)(v5 + 472);
  *(_WORD *)(v9 + 331) = -31818;
  *(_BYTE *)(v9 + 333) = -63;
  *(_WORD *)(v9 + 334) = 31486;
  *(_QWORD *)(v5 + 544) = v9 + 335;
  *(_QWORD *)(v9 + 336) = 0xCC0D1EA1F8C71727;
  *(_QWORD *)(v5 + 552) = v9 + 339;
  *(_QWORD *)(v5 + 560) = v9 + 343;
  *(_QWORD *)(v5 + 568) = v9 + 344;
  *(_BYTE *)(v9 + 344) = -31;
  v10 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 576) = v10 + 345;
  *(_BYTE *)(v10 + 345) = 20;
  v11 = *(_QWORD *)(v5 + 472);
  *(_DWORD *)(v11 + 346) = -315656834;
  *(_QWORD *)(v5 + 584) = v11 + 347;
  *(_QWORD *)(v5 + 592) = v11 + 349;
  *(_QWORD *)(v5 + 600) = v11 + 350;
  *(_BYTE *)(v11 + 350) = v2;
  v12 = *(_QWORD *)(v5 + 472);
  *(_DWORD *)(v12 + 351) = 1112118708;
  *(_QWORD *)(v5 + 608) = v12 + 352;
  *(_QWORD *)(v5 + 616) = v12 + 354;
  *(_QWORD *)(v5 + 624) = v12 + 355;
  *(_BYTE *)(v12 + 355) = 9;
  v13 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 632) = v13 + 356;
  *(_BYTE *)(v13 + 356) = -57;
  v14 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 640) = v14 + 357;
  *(_BYTE *)(v14 + 357) = 118;
  v15 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 648) = v15 + 358;
  *(_BYTE *)(v15 + 358) = 87;
  v16 = *(_QWORD *)(v5 + 472);
  *(_WORD *)(v16 + 359) = 5083;
  *(_QWORD *)(v5 + 656) = v16 + 361;
  *(_BYTE *)(v16 + 361) = 52;
  v17 = *(_QWORD *)(v5 + 472);
  *(_WORD *)(v17 + 362) = -8253;
  *(_BYTE *)(v17 + 364) = -21;
  *(_DWORD *)(v17 + 365) = -485485150;
  *(_QWORD *)(v5 + 664) = v17 + 366;
  *(_QWORD *)(v5 + 672) = v17 + 369;
  *(_BYTE *)(v17 + 369) = 116;
  v18 = (_BYTE *)(*(_QWORD *)(v5 + 472) + 370);
  *(_QWORD *)(v5 + 680) = v18;
  *v18 = -48;
  v19 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 688) = v19 + 371;
  *(_BYTE *)(v19 + 371) = 60;
  v20 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 696) = v20 + 372;
  *(_BYTE *)(v20 + 372) = 105;
  v21 = *(_QWORD *)(v5 + 472);
  *(_QWORD *)(v5 + 704) = v21 + 373;
  *(_BYTE *)(v21 + 373) = 91;
  v22 = (_BYTE *)(*(_QWORD *)(v5 + 472) + 374);
  *(_QWORD *)(v5 + 712) = v22;
  *v22 = -48;
  v23 = *(_QWORD *)(v5 + 472);
  *(_WORD *)(v23 + 375) = -18236;
  *(_DWORD *)(v23 + 377) = 511103046;
  *(_QWORD *)(v5 + 720) = v23 + 378;
  *(_QWORD *)(v5 + 728) = v23 + 381;
  *(_BYTE *)(v23 + 381) = -90;
  *(_BYTE *)(*(_QWORD *)(v5 + 472) + 382) = 2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8
                                        * ((1697 * ((LODWORD(STACK[0x1EC8]) + 2130207484) < 0xF8)) ^ LODWORD(STACK[0x1EBC])))
                            - 8))();
}

uint64_t sub_100111B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * ((3514 * (((v5 ^ (v3 == a3)) & 1) == 0)) ^ v4)) - 8))(3957);
}

uint64_t sub_1001129E8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (((a1 > 1) * ((v1 | v2) - 3844)) ^ v3)) - 8))();
}

uint64_t sub_100112AD4@<X0>(uint64_t a1@<X7>, unsigned int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * (int)(((*(_QWORD *)(a1 + 368) == 0) * ((a2 | 0x623) - 3941)) ^ v2))
                            - (a2 ^ 0x95CLL)))();
}

uint64_t sub_100113358@<X0>(char a1@<W8>)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *v1 = a1;
  v6 = v3(v2, v5);
  v7 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                     + 8
                                     * ((63 * (*(_DWORD *)((uint64_t (*)(uint64_t))STACK[0x640])(v6) == 2)) ^ v4))
                         - 8);
  return v7();
}

uint64_t sub_1001133AC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v6;

  v4 = STACK[0xC28];
  if (v1 != 0x4000)
  {
    v4 = STACK[0xC28];
    if (v1 != 40960)
      return (*(uint64_t (**)(void))(STACK[0xC38]
                                  + 8
                                  * (int)((7 * ((((STACK[0xC28] - 1791) ^ ((~a1 & 0x1B6) == 0)) & 1) == 0)) ^ (STACK[0xC28] + 2196))))();
  }
  STACK[0x1208] = 0;
  v6 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t))((char *)*(&off_100236540 + (v4 & 0x5F09032C))
                                                                 - 450009662))(*(_QWORD *)STACK[0x5D0], v2, *(_QWORD *)(v3 + 32), 1) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38]
                                        + 8 * ((3399 * (((v4 + 48) ^ v6) & 1)) ^ ((int)v4 - 2317)))
                            - ((v4 - 536) ^ 0xD57)))();
}

uint64_t sub_1001135B4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = ((uint64_t (*)(uint64_t))STACK[0x620])(v0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - (v2 ^ 0x9AF)))(v3);
}

uint64_t sub_100113998()
{
  int v0;
  int v1;

  LODWORD(STACK[0x104C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v1 + (v1 ^ 0x63A) - 371)) - 8))();
}

uint64_t sub_1001140F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int v6;
  unint64_t v7;
  unint64_t v8;

  STACK[0x1AE0] = STACK[0xBA0];
  STACK[0x1AF0] = STACK[0xBA8];
  STACK[0x1AF8] = STACK[0xB60];
  STACK[0x1B00] = STACK[0xB68];
  STACK[0x1B08] = STACK[0xB80];
  STACK[0x19F0] = STACK[0xBC0];
  STACK[0x1A00] = v7;
  STACK[0x1A08] = STACK[0xB38];
  STACK[0x1A10] = STACK[0xB70];
  STACK[0x1A18] = STACK[0xB78];
  STACK[0x18B8] = STACK[0xB98];
  STACK[0x18C0] = a6;
  STACK[0x18C8] = a2;
  STACK[0x18D0] = v8;
  *(_QWORD *)STACK[0x2D0] = STACK[0x1BB8];
  *(_QWORD *)STACK[0x2D8] = (*(_DWORD *)(STACK[0xFB0] + 12) - 2048424582);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0xC38] + 8 * (v6 + 383)) - ((v6 - 3698) | 0x862u) + 2399))();
}

uint64_t sub_1001141B8()
{
  int v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))(STACK[0xC38] + 8 * (((*v1 == 0) * (v0 + 1552 + 37 * (v0 ^ 0x90C) - 7903)) ^ v0)))();
}

uint64_t sub_1001141F8()
{
  int v0;
  uint64_t v1;

  v1 = sub_1000035BC();
  return (*(uint64_t (**)(uint64_t))(STACK[0xC38] + 8 * (v0 - 1551)))(v1);
}

uint64_t sub_100114210()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  *v0 = 0;
  v0[1] = 0x7A187A86578AABBBLL;
  v2 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0xC38] + 8 * v1) - 8))(v2);
}

void sub_10011423C()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 48) = v0;
}

void sub_100114294(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v4;

  if (*(_QWORD *)(a1 + 24))
    v2 = *(_QWORD *)(a1 + 16) == 0;
  else
    v2 = 1;
  v4 = !v2 && *(_QWORD *)(a1 + 8) != 0;
  v1 = *(_DWORD *)a1 - 1716948049 * ((((2 * a1) | 0xFB20A476) - a1 + 40873413) ^ 0xD68811B6);
  __asm { BR              X8 }
}

uint64_t sub_10011434C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  uint64_t v9;

  v3 = (v0 - 503392038) & 0x1E0129FC;
  v4 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1508)) - 2066920503);
  v5 = v4(1032);
  v6 = v4(1032);
  if (v5)
    v7 = v6 == 0;
  else
    v7 = 1;
  v8 = !v7;
  v9 = *(_QWORD *)(*(_QWORD *)(v2 - 96) + 8 * ((8058 * v8) ^ v0));
  *(_QWORD *)(v2 - 104) = v3;
  return ((uint64_t (*)(void))(v9 - v3 + 2236))();
}

uint64_t sub_1001143C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int8 *v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned __int16 v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  int v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unint64_t v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  char v231;
  int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  BOOL v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  char v335;
  unsigned int v336;
  char v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  unint64_t v344;
  unint64_t v345;
  int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  unsigned int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  unint64_t v363;
  unsigned int v364;
  int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unint64_t v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  int v388;
  int v389;
  unint64_t v390;
  int v391;
  int v392;
  unsigned int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  int v401;
  int v402;
  int v403;
  unsigned int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  unsigned int v424;
  int v425;
  int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  int v438;
  int v439;
  unsigned int v440;
  int v441;
  unsigned int v442;
  int v443;
  unsigned int v444;
  int v445;
  int v446;
  int v447;
  unsigned int v448;
  int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  int v453;
  unsigned int v454;
  _QWORD *v455;
  unint64_t v456;
  unint64_t v457;
  unint64_t v458;
  unint64_t v459;
  unint64_t v460;
  unint64_t v461;
  unint64_t v462;
  unint64_t v463;
  unint64_t v464;
  unint64_t v465;
  unint64_t v466;
  unint64_t v467;
  unint64_t v468;
  unint64_t v469;
  unint64_t v470;
  unint64_t v471;
  unint64_t v472;
  unint64_t v473;
  unint64_t v474;
  unint64_t v475;
  unint64_t v476;
  unint64_t v477;
  unint64_t v478;
  unint64_t v479;
  unint64_t v480;
  unint64_t v481;
  unint64_t v482;
  unint64_t v483;
  unint64_t v484;
  unint64_t v485;
  unint64_t v486;
  unint64_t v487;
  unint64_t v488;
  unint64_t v489;
  unint64_t v490;
  unint64_t v491;
  unint64_t v492;
  unint64_t v493;
  unint64_t v494;
  unint64_t v495;
  unint64_t v496;
  unint64_t v497;
  unint64_t v498;
  int v499;
  int v500;
  unint64_t v501;
  int v502;
  int v503;
  unsigned int v504;
  int v505;
  int v506;
  int v507;
  unsigned int v508;
  int v509;
  int v510;
  unsigned int v511;
  int v512;
  int v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  unsigned int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  unsigned int v535;
  int v536;
  unsigned int v537;
  int v538;
  int v539;
  unsigned int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  unsigned int v546;
  int v547;
  unsigned int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  unsigned int v561;
  int v562;
  BOOL v563;
  int v564;
  int v565;
  int v566;
  unsigned int v567;
  int v568;
  int v569;
  int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  int v574;
  int v575;
  unsigned int v576;
  int v577;
  int v578;
  unsigned int v579;
  unsigned int v580;
  int v581;
  unsigned int v582;
  unint64_t v583;
  unint64_t v584;
  int v585;
  int v586;
  unint64_t v587;
  unsigned int v588;
  unint64_t v589;
  unint64_t v590;
  unsigned int v591;
  unint64_t v592;
  int v593;
  int v594;
  int v595;
  unsigned int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  char v606;
  int v608;
  int v609;
  int v610;
  int v611;
  unint64_t v612;
  unint64_t v613;
  unint64_t v614;
  unint64_t v615;
  int v616;
  int v617;
  unint64_t v618;
  int v619;
  int v620;
  unint64_t v621;
  unint64_t v622;
  unint64_t v623;
  uint64_t v624;
  unint64_t v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630[3];
  uint64_t v631;
  uint64_t v632;
  unint64_t v633;
  unint64_t v634;
  unint64_t v635;
  int v636;
  int v637;
  int v638;
  unint64_t v639;
  int v640;
  int v641;
  int v642;
  uint64_t v643;

  *(_QWORD *)(v15 - 128) = v13;
  *(_QWORD *)(v15 - 144) = a8;
  STACK[0x208] = v10;
  v16 = v8[4];
  STACK[0x3D8] = v16;
  v17 = v8[10];
  STACK[0x368] = v17;
  v18 = *(_QWORD *)(v11 + 8 * (v9 - 1429)) - 874373698;
  v19 = *(unsigned __int8 *)(v18 + (v16 ^ 0x8F));
  v20 = v8[14];
  *(_QWORD *)(v15 - 248) = v20;
  HIDWORD(v21) = v19 ^ 0xB;
  LODWORD(v21) = (v19 ^ 0x60) << 24;
  v22 = v9 + 66;
  v23 = *(_QWORD *)(v11 + 8 * (v9 - 1195)) - 1419520466;
  v24 = *(_QWORD *)(v11 + 8 * (v9 - 1321)) - 630406750;
  LODWORD(v16) = ((v17 ^ 0x29)
                                 + (v17 ^ 0x70)
                                 + 1
                                 - ((2 * ((v17 ^ 0x29) + (v17 ^ 0x70) + 1)) & 0x8A)
                                 + 69) ^ *(unsigned __int8 *)(v24 + (v17 ^ 0x4C)) ^ 0xA5;
  LOBYTE(v17) = *(_BYTE *)(v23 + (v20 ^ 0x27));
  v25 = v8[8];
  STACK[0x3B0] = v25;
  v26 = *(_BYTE *)(v23 + (v25 ^ 0x25));
  v27 = v23;
  STACK[0x398] = v23;
  v28 = v8[15];
  *(_QWORD *)(v15 - 176) = v28;
  v29 = v8[11];
  STACK[0x3B8] = v29;
  v30 = *(_BYTE *)(v18 + (v28 ^ 0x6E)) ^ 0x6B | ((((v17 - 4) ^ (2 * (v17 - 4) * (v17 - 4))) ^ 0x3D) << 8);
  LODWORD(v23) = *(unsigned __int8 *)(v24 + (v29 ^ 0x3B));
  v31 = v24;
  STACK[0x3A0] = v24;
  v32 = *v8 ^ 0xE2;
  STACK[0x2B0] = v32;
  v33 = v23 ^ ((v29 ^ 0x5E) + (v29 ^ 7) + 1 + (~(2 * ((v29 ^ 0x5E) + (v29 ^ 7) + 1)) | 0x75) + 70) ^ 0x1E | ((_DWORD)v16 << 8) & 0xFFFFFF | ((((v26 - 4) ^ (2 * (v26 - 4) * (v26 - 4))) ^ 0x34) << 24);
  v34 = v8[6];
  STACK[0x3C8] = v34;
  LOBYTE(v34) = *(_BYTE *)(*(_QWORD *)(v11 + 8 * ((v9 + 66) ^ 0x516)) - 1655270439 + (v34 ^ 0xC5));
  v35 = *(_QWORD *)(v11 + 8 * ((v9 + 66) ^ 0x516)) - 1655270439;
  v36 = v8[12];
  STACK[0x348] = v36;
  v37 = ((((((v21 >> 28) ^ 0x11) >> 4) | (16 * ((v21 >> 28) ^ 0x11))) ^ 0xFFFFFFDF) << 24) | ((v34 ^ 0xDF) << 8);
  v38 = v8[13];
  STACK[0x2D0] = v38;
  LOBYTE(v34) = *(_BYTE *)(v18 + (v36 ^ 0x3D));
  v39 = v8[5];
  LOBYTE(v36) = *(_BYTE *)(v35 + (v38 ^ 0x46));
  STACK[0x380] = v35;
  STACK[0x358] = v39;
  v40 = (v30 | ((v34 ^ 0xF5) << 24) | ((v36 ^ 0x55) << 16)) ^ 0xB3;
  v41 = v37 & 0xFF00FFFF | (((*(_BYTE *)(v31 + (v39 ^ 0x28)) ^ ((v39 ^ 0x4D)
                                                                               + (v39 ^ 0x14)
                                                                               + 1
                                                                               - ((2 * ((v39 ^ 0x4D) + (v39 ^ 0x14) + 1)) & 0x8A)
                                                                               + 69)) ^ 0xE1) << 16);
  LODWORD(v34) = ((2 * (v40 - 1039514662)) & 0x7BEB784C) + ((v40 - 1039514662) ^ 0x3DF5BC26);
  v42 = v34 - 2 * (v34 & 0x76E90DBF ^ v40 & 1);
  v43 = v8[2];
  STACK[0x350] = v43;
  LODWORD(v43) = ((*(unsigned __int8 *)(v18 + v32) ^ 0x30) << 24) | ((((*(_BYTE *)(v27 + (v43 ^ 0x84))
                                                                                       - 4) ^ (2
                                                                                             * (*(_BYTE *)(v27 + (v43 ^ 0x84))
                                                                                              - 4)
                                                                                             * (*(_BYTE *)(v27 + (v43 ^ 0x84))
                                                                                              - 4))) ^ 0x9B) << 8);
  v44 = v8[3];
  STACK[0x2F0] = v44;
  v45 = v43 | *(unsigned __int8 *)(v35 + (v44 ^ 0xB0)) ^ 0x6D;
  v46 = v8[1];
  STACK[0x2A8] = v46;
  LOBYTE(v34) = *(_BYTE *)(v18 + (v46 ^ 0xD8)) ^ 0x32;
  v47 = v8[9];
  STACK[0x2C8] = v47;
  LOBYTE(v46) = *(_BYTE *)(v18 + (v47 ^ 0x9A));
  STACK[0x388] = v18;
  LODWORD(v16) = v45 & 0xFF00FFFF | (v34 << 16);
  *(_DWORD *)(v15 - 164) = v16;
  v48 = v33 & 0xFF00FFFF | ((v46 ^ 0xE9) << 16);
  *(_DWORD *)(v15 - 232) = v48;
  v49 = *(_QWORD *)(v11 + 8 * ((v9 + 66) ^ 0x767)) - 1763880690;
  v50 = v42 + 1994984894;
  LODWORD(v46) = (BYTE1(v50) ^ 0xD7C829DC) + (BYTE1(v50) ^ 0x3E) + 1;
  LODWORD(v34) = *(_DWORD *)(v49 + 4 * (((unsigned __int16)(v42 + 3518) >> 8) ^ 0x8Eu)) ^ (v46 - ((2 * v46) & 0xC6909434) + 1665681946);
  LODWORD(v46) = (BYTE2(v50) ^ 0xD7C82938) + (BYTE2(v50) ^ 0xDA) + 1;
  v51 = *(_QWORD *)(v11 + 8 * (v9 - 698)) - 1310910215;
  v52 = v16 ^ __ROR4__(v34 ^ 0x49DFBC8F, 24);
  HIDWORD(v21) = *(_DWORD *)(v49 + 4 * (((v42 + 1994984894) >> 16) ^ 0x6Au)) ^ (v46 - ((2 * v46) & 0xC6909434) + 1665681946) ^ 0x49DFBC8F;
  LODWORD(v21) = HIDWORD(v21);
  v53 = v21 >> 16;
  v54 = (v21 >> 16) & 0x40000;
  if ((v54 & v52) != 0)
    LODWORD(v54) = -(int)v54;
  v55 = v54 + v52;
  v56 = *(_DWORD *)(v51 + 4 * (HIBYTE(v50) ^ 0xF9));
  *(_DWORD *)(v15 - 196) = v50;
  v57 = ((v42 - 66) ^ 0xD7C8296F) + ((v42 - 66) ^ 0x8D) + 1;
  v58 = *(_DWORD *)(v49 + 4 * ((v42 - 66) ^ 0x3Du)) ^ __ROR4__(v56 ^ (16 * v56) & 0x36A63620 ^ 0xF827F590, 8) ^ (v57- ((2 * v57) & 0xC6909434)+ 1665681946) ^ v53 & 0xFFFBFFFF ^ v55;
  v59 = v8[7];
  STACK[0x2B8] = v59;
  v60 = *(unsigned __int8 *)(v18 + (v59 ^ 0xDC)) ^ 6;
  *(_DWORD *)(v15 - 256) = v60;
  v61 = v41 | v60;
  *(_DWORD *)(v15 - 220) = v61;
  v62 = v61 ^ 0x8E;
  v63 = v58 ^ v61 ^ 0x8E;
  v64 = v58;
  LODWORD(STACK[0x3D4]) = v58;
  *(_DWORD *)(v15 - 200) = v63;
  LODWORD(v59) = 2 * (v63 ^ v48);
  *(_DWORD *)(v15 - 236) = v59;
  LODWORD(STACK[0x3C4]) = v63 ^ v48;
  v65 = ((v63 ^ v48) - (v59 & 0xEDD21B7C) + 1994984894) ^ v50;
  LODWORD(v59) = *(_DWORD *)(v51 + 4 * (BYTE2(v65) ^ 0x50u));
  *(_DWORD *)(v15 - 104) = v22;
  v66 = *(_QWORD *)(v11 + 8 * (v22 ^ 0x728)) - 896623147;
  v67 = *(_DWORD *)(v66 + 4 * (HIBYTE(v65) ^ 0x63));
  v68 = *(_DWORD *)(v51 + 4 * (BYTE1(v65) ^ 0x33u));
  v69 = v65 ^ 0xFEDFBC8F;
  v70 = *(_DWORD *)(v66 + 4 * (v65 ^ 0x12u)) ^ 0x633C042F;
  v71 = v70 ^ (v70 >> 5) ^ (v70 >> 2) ^ __ROR4__(v67 ^ ((v67 ^ 0x633C042Fu) >> 5) ^ ((v67 ^ 0x633C042Fu) >> 2) ^ 0x72ACAD5C, 8) ^ __ROR4__(v59 ^ (((16 * v59) & 0x36A63620 ^ 0x32840420)- ((2 * ((16 * v59) & 0x36A63620 ^ 0x32840420)) & 0x44402800)+ 1797805143) ^ 0xA18BA5E7, 16) ^ __ROR4__(v68 ^ (16 * v68) & 0x36A63620 ^ 0xF827F590, 24);
  v72 = *(_QWORD *)(v11 + 8 * (v9 - 1174)) - 477297595;
  v73 = v71 ^ v62;
  *(_DWORD *)(v15 - 252) = v73 ^ 0xE64F15FC;
  v74 = v63 ^ v48 ^ v73 ^ 0xE64F15FC;
  *(_DWORD *)(v15 - 148) = v74;
  *(_QWORD *)(v15 - 184) = v12;
  LODWORD(STACK[0x3E8]) = v69;
  LODWORD(v59) = (v69 ^ v74);
  v75 = (v59 ^ 0x83) - ((2 * (v59 ^ 0x83) + 94837916) & 0x4030866);
  v76 = *(_DWORD *)(v66 + 4 * (((v69 ^ v74) >> 24) ^ 0x9D));
  v77 = ((unsigned __int16)(v69 ^ v74) >> 8);
  *(_DWORD *)(v15 - 132) = v69 ^ v74;
  v78 = *(_DWORD *)(v49 + 4 * (v77 ^ 0x83u)) ^ ((v77 ^ 0xD7C829D1)
                                                + (v77 ^ 0x33)
                                                + 1
                                                - ((2 * ((v77 ^ 0xD7C829D1) + (v77 ^ 0x33) + 1)) & 0xC6909434)
                                                + 1665681946);
  v79 = ((v69 ^ v74) >> 16);
  v80 = *(_DWORD *)(v49 + 4 * (v79 ^ 0x83u)) ^ ((v79 ^ 0xD7C829D1)
                                                + (v79 ^ 0x33)
                                                + 1
                                                - ((2 * ((v79 ^ 0xD7C829D1) + (v79 ^ 0x33) + 1)) & 0xC6909434)
                                                + 1665681946);
  LODWORD(v59) = *(_DWORD *)(v72 + 4 * (v59 ^ 0x88)) ^ __ROR4__(v76 ^ ((v76 ^ 0x633C042Fu) >> 5) ^ ((v76 ^ 0x633C042Fu) >> 2) ^ 0x72ACAD5C, 8);
  LODWORD(STACK[0x3E4]) = v64 ^ v71;
  v81 = v59 ^ v64 ^ v71 ^ (v75 + 2027496065) ^ __ROR4__(v78 ^ 0x49DFBC8F, 24) ^ __ROR4__(v80 ^ 0x49DFBC8F, 16);
  LODWORD(STACK[0x394]) = v81 ^ v73;
  v82 = v81;
  LODWORD(STACK[0x3E0]) = v81;
  *(_QWORD *)(v15 - 160) = v14;
  v83 = v81 ^ v73 ^ 0xA45AC37F ^ v69;
  v84 = v81 ^ v73 ^ 0xA45AC37F;
  LODWORD(STACK[0x364]) = v84;
  LODWORD(v59) = *(_DWORD *)(v51 + 4 * (HIBYTE(v83) ^ 0x38));
  v85 = *(_DWORD *)(v51 + 4 * ((BYTE1(v83) - ((v83 >> 7) & 0xA0) + 80) ^ 0xDF));
  HIDWORD(v86) = v85 & 0x36A6362 ^ 0xFB79EDD;
  LODWORD(v86) = HIDWORD(v86);
  v87 = *(_DWORD *)(v51 + 4 * (v83 ^ 0x8Fu));
  v88 = (16 * v87) & 0x36A63620 ^ v87 ^ __ROR4__(v59 ^ (16 * v59) & 0x36A63620 ^ 0xF827F590, 8) ^ __ROR4__(__ROR4__((v86 >> 11) & 0xFFE1FFFF ^ __ROR4__(v85 ^ 0x35E1840, 15) ^ 0x4AA98BE4, 17) ^ 0xC5F22554, 24) ^ v82;
  LODWORD(v86) = __ROR4__(*(_DWORD *)(v72 + 4 * (BYTE2(v83) ^ 0x88u)) ^ ((BYTE2(v83) ^ 0x83)- ((2 * (BYTE2(v83) ^ 0x83) + 94837916) & 0x4030866)+ 2027496065) ^ 0x57857FF0, 16);
  LODWORD(STACK[0x3AC]) = v88 ^ v86;
  v89 = v88 ^ v86 ^ 0x8E5FB11F;
  v90 = v89 ^ v74;
  v91 = v89;
  *(_DWORD *)(v15 - 108) = v89;
  v92 = v89 ^ v74 ^ v83;
  v93 = v90;
  *(_DWORD *)(v15 - 152) = v90;
  LOWORD(v90) = v92 ^ 0x920C;
  v94 = v92 ^ 0xACB22E83;
  v95 = (v92 ^ 0x526D920Cu) >> 24;
  v96 = (v95 ^ 0x7D) - ((2 * (v95 ^ 0x7D) + 94837916) & 0x4030866);
  v97 = *(_DWORD *)(v72 + 4 * (v95 ^ 0x76));
  v98 = v94;
  *(_DWORD *)(v15 - 216) = v94;
  v99 = v97 ^ (v96 + 2027496065);
  v100 = (BYTE2(v94) ^ 0xD7C829D1) + (BYTE2(v94) ^ 0x33) + 1;
  v101 = *(_DWORD *)(v49 + 4 * (BYTE2(v94) ^ 0x83u)) ^ (v100 - ((2 * v100) & 0xC6909434) + 1665681946);
  LODWORD(v59) = *(_DWORD *)(v66 + 4 * (BYTE1(v90) ^ 0x21u));
  v102 = ((v59 ^ 0x633C042F) >> 5) ^ ((v59 ^ 0x633C042F) >> 2);
  v103 = *(_DWORD *)(v66 + 4 * (v90 ^ 0x12u)) ^ 0x633C042F;
  v104 = v103 ^ (v103 >> 5) ^ (v103 >> 2) ^ __ROR4__(v59 ^ (v102 - ((2 * v102) & 0x136E690) + 10187592) ^ 0x7237DE14, 24) ^ __ROR4__(v99 ^ 0x57857FF0, 8) ^ __ROR4__(v101 ^ 0x49DFBC8F, 16);
  v105 = v104 ^ v84 ^ v93;
  v106 = v104 ^ v84;
  LODWORD(STACK[0x374]) = v104 ^ v84;
  *(_DWORD *)(v15 - 112) = v105;
  LODWORD(v59) = v105 ^ 0x1BB22E83;
  v107 = v105 ^ 0x1BB22E83 ^ v98;
  v108 = *(_DWORD *)(v72 + 4 * (((v107 ^ 0xE790A973) >> 24) ^ 0x88)) ^ ((((v107 ^ 0xE790A973) >> 24) ^ 0x83)
                                                                        - ((2 * (((v107 ^ 0xE790A973) >> 24) ^ 0x83)
                                                                          + 94837916) & 0x4030866)
                                                                        + 2027496065);
  v109 = ((unsigned __int16)(v107 ^ 0xA973) >> 8);
  v110 = v107 ^ 0xE790A973;
  *(_DWORD *)(v15 - 116) = v107 ^ 0xE790A973;
  v111 = *(_DWORD *)(v72 + 4 * ((BYTE2(v107) ^ 0x13) - ((2 * (BYTE2(v107) ^ 0x13)) & 0x16u) + 11)) ^ ((BYTE2(v107) ^ 0x13) - ((2 * (BYTE2(v107) ^ 0x13) + 94837916) & 0x4030866) + 2027496065);
  v112 = *(_DWORD *)(v66 + 4 * (v107 ^ 0xEEu)) ^ 0x633C042F;
  v113 = v104 ^ v91;
  v114 = v112 ^ (v112 >> 5) ^ (v112 >> 2) ^ v104 ^ v91 ^ __ROR4__(v108 ^ 0x57857FF0, 8) ^ __ROR4__(v111 ^ 0x57857FF0, 16);
  LODWORD(v86) = __ROR4__(*(_DWORD *)(v49 + 4 * (v109 ^ 0x83u)) ^ ((v109 ^ 0xD7C829D1)+ (v109 ^ 0x33)+ 1- ((2 * ((v109 ^ 0xD7C829D1) + (v109 ^ 0x33) + 1)) & 0xC6909434)+ 1665681946) ^ 0x49DFBC8F, 24);
  *(_DWORD *)(v15 - 188) = v114 ^ v86;
  v115 = v114 ^ v86 ^ 0x2D2287F0;
  v116 = v115 ^ v106 ^ v59;
  *(_DWORD *)(v15 - 192) = v116;
  v117 = v115 ^ v106;
  LODWORD(STACK[0x324]) = v115 ^ v106;
  v118 = v116 ^ v110;
  v119 = v116 ^ v110 ^ 0xEC90A973;
  LODWORD(STACK[0x340]) = v119;
  v120 = ((v119 ^ 0x83) - ((2 * (v119 ^ 0x83) + 94837916) & 0x4030866) + 2027496065) ^ *(_DWORD *)(v72 + 4 * (v119 ^ 0x88u));
  LODWORD(v86) = __ROR4__(*(_DWORD *)(v72 + 4 * (BYTE1(v119) ^ 0x88u)) ^ ((BYTE1(v119) ^ 0x83)- ((2 * (BYTE1(v119) ^ 0x83) + 94837916) & 0x4030866)+ 2027496065) ^ 0x57857FF0, 24);
  v121 = (v115 ^ v86 ^ 0x3D90A973 ^ -(v115 ^ v86 ^ 0x3D90A973) ^ (v120 + (v120 ^ v115 ^ v86 ^ 0xC26F568C) + 1)) + v120;
  v122 = *(_DWORD *)(v51
                   + 4
                   * ((((BYTE2(v119) ^ 0xFFFFFF70) + (BYTE2(v119) ^ 0x50) + 1) ^ 0xFFFFFFFE) + (BYTE2(v119) ^ 0x50)));
  v123 = *(_DWORD *)(v51 + 4 * (HIBYTE(v118) ^ 0xD4));
  STACK[0x378] = v51;
  HIDWORD(v86) = v123 ^ (16 * v123) & 0x36A63620 ^ 0xF827F590;
  LODWORD(v86) = HIDWORD(v86);
  v124 = (v86 >> 8) ^ __ROR4__(v122 ^ (16 * v122) & 0x36A63620 ^ 0xF827F590, 16) ^ v121;
  v125 = v124 ^ v59;
  LODWORD(STACK[0x2FC]) = v124 ^ v59;
  v126 = v118 ^ v124 ^ v59 ^ 0x5F857FF0;
  v127 = *(_DWORD *)(v66 + 4 * (BYTE2(v126) ^ 0x9Du));
  v128 = *(_DWORD *)(v66 + 4 * ((v118 ^ v124 ^ v59) ^ 0x6Du));
  STACK[0x298] = v66;
  v129 = v128 ^ 0x633C042F ^ ((v128 ^ 0x633C042Fu) >> 5) ^ ((v128 ^ 0x633C042Fu) >> 2);
  LODWORD(v86) = __ROR4__(v127 ^ ((v127 ^ 0x633C042Fu) >> 5) ^ ((v127 ^ 0x633C042Fu) >> 2) ^ 0x72ACAD5C, 16);
  LODWORD(STACK[0x328]) = v124;
  v130 = ((v129 ^ -v129 ^ ((v129 ^ v124 ^ v86 ^ 0x7A7A800F) + (v124 ^ v86 ^ 0x85857FF0) + 1)) + (v124 ^ v86 ^ 0x85857FF0)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * (HIBYTE(v126) ^ 0x88)) ^ ((HIBYTE(v126) ^ 0x83) - ((2 * (HIBYTE(v126) ^ 0x83) + 94837916) & 0x4030866) + 2027496065) ^ 0x57857FF0, 8);
  v131 = *(_DWORD *)(v72 + 4 * (BYTE1(v126) ^ 0x88u));
  v132 = v117 ^ v124 ^ 0x8E857FF0;
  LODWORD(STACK[0x320]) = v132;
  v133 = v130 ^ __ROR4__(v131 ^ ((BYTE1(v126) ^ 0x83) - ((2 * (BYTE1(v126) ^ 0x83) + 94837916) & 0x4030866) + 2027496065) ^ 0x57857FF0, 24);
  LODWORD(STACK[0x338]) = v133;
  LODWORD(v59) = v133 ^ v132 ^ v125;
  LODWORD(STACK[0x318]) = v133 ^ v132;
  v134 = v59 ^ 0x415D683;
  v135 = v59 ^ 0x415D683 ^ v126;
  v136 = ((v135 ^ 0x9290A973) >> 16);
  v137 = *(_DWORD *)(v49 + 4 * (v136 ^ 0x83u)) ^ ((v136 ^ 0xD7C829D1)
                                                  + (v136 ^ 0x33)
                                                  + 1
                                                  - ((2 * ((v136 ^ 0xD7C829D1) + (v136 ^ 0x33) + 1)) & 0xC6909434)
                                                  + 1665681946);
  v138 = *(_DWORD *)(v72 + 4 * (((v135 ^ 0x9290A973) >> 24) ^ 0x88)) ^ ((((v135 ^ 0x9290A973) >> 24) ^ 0x83)
                                                                        - ((2 * (((v135 ^ 0x9290A973) >> 24) ^ 0x83)
                                                                          + 94837916) & 0x4030866)
                                                                        + 2027496065);
  v139 = ((unsigned __int16)(v135 ^ 0xA973) >> 8);
  v140 = (v139 ^ 0xD7C829D1) + (v139 ^ 0x33) + 1 - ((2 * ((v139 ^ 0xD7C829D1) + (v139 ^ 0x33) + 1)) & 0xC6909434);
  v141 = *(_DWORD *)(v49 + 4 * (v139 ^ 0x83u));
  STACK[0x290] = v49;
  v142 = *(_DWORD *)(v66 + 4 * (v59 ^ 0x83 ^ v126 ^ 0xEEu)) ^ 0x633C042F;
  LODWORD(STACK[0x334]) = v133 ^ 0x4390A973;
  v143 = v142 ^ (v142 >> 5) ^ (v142 >> 2) ^ v133 ^ 0x4390A973 ^ __ROR4__(v138 ^ 0x57857FF0, 8) ^ __ROR4__(v137 ^ 0x49DFBC8F, 16);
  LODWORD(v86) = __ROR4__(v141 ^ (v140 + 1665681946) ^ 0x49DFBC8F, 24);
  v144 = v143 ^ v86 ^ v133 ^ v132;
  v145 = v143 ^ v86;
  LODWORD(STACK[0x314]) = v143 ^ v86;
  v146 = v144 ^ 0x34000000 ^ v126;
  STACK[0x288] = v72;
  v147 = *(_DWORD *)(v72 + 4 * (((unsigned __int16)(v144 ^ v126) >> 8) ^ 0x88u)) ^ ((((unsigned __int16)(v144 ^ v126) >> 8) ^ 0x83) - ((2 * (((unsigned __int16)(v144 ^ v126) >> 8) ^ 0x83) + 94837916) & 0x4030866) + 2027496065);
  v148 = (BYTE2(v146) ^ 0xD7C829D1) + (BYTE2(v146) ^ 0x33) + 1;
  v149 = *(_DWORD *)(v49 + 4 * (BYTE2(v146) ^ 0x83u)) ^ (v148 - ((2 * v148) & 0xC6909434) + 1665681946);
  LODWORD(STACK[0x284]) = v146;
  v150 = *(_DWORD *)(v51 + 4 * (HIBYTE(v146) ^ 0xA1));
  v151 = *(_DWORD *)(v72 + 4 * ((v144 ^ v126) ^ 0x88u)) ^ __ROR4__(v150 ^ (16 * v150) & 0x36A63620 ^ 0xF827F590, 8) ^ v145 ^ (((v144 ^ v126) ^ 0x83)- ((2* ((v144 ^ v126) ^ 0x83)+ 94837916) & 0x4030866)+ 2027496065) ^ __ROR4__(v147 ^ 0x57857FF0, 24) ^ __ROR4__(v149 ^ 0x49DFBC8F, 16);
  v152 = *(_DWORD *)(v15 - 188) ^ 0x9B5824E4;
  LODWORD(STACK[0x2F8]) = v152;
  v153 = *(_DWORD *)(v15 - 192) ^ 0xB67AA314;
  LODWORD(STACK[0x2E0]) = v153;
  v154 = v113 ^ 0x6E677B33;
  v155 = 21042874 - (v153 + v152) - ((1109890992 - 2 * (v153 + v152)) & 0x405A95C4);
  *(_DWORD *)(v15 - 188) = v155;
  v156 = *(_DWORD *)(v15 - 112) ^ 0xD9677B33;
  *(_DWORD *)(v15 - 204) = v154 - v156 - ((2 * (v154 - v156) + 831763746) & 0x379C4FA6) + 1956119140;
  LODWORD(v59) = v59 ^ 0x8CAA42AE;
  LODWORD(STACK[0x300]) = v59;
  v157 = *(_DWORD *)(v15 - 132) ^ *(_DWORD *)(v15 - 116) ^ 0x4C98AF1B;
  v158 = *(_DWORD *)(v15 - 148);
  v159 = v158 ^ 0x69DD53D8;
  v160 = (v83 ^ 0x4D02D8FB)
       + (v158 ^ 0x69DD53D8)
       - ((2 * ((v83 ^ 0x4D02D8FB) + (v158 ^ 0x69DD53D8)) + 231662786) & 0xC3A2226)
       - 721124492;
  *(_DWORD *)(v15 - 208) = v160;
  v161 = STACK[0x3C4];
  *(_DWORD *)(v15 - 192) = (LODWORD(STACK[0x3C4]) ^ v154 ^ 0x7C819253)
                         - ((2 * (LODWORD(STACK[0x3C4]) ^ v154 ^ 0x7C819253) + 148410260) & 0x65589F04)
                         - 149383348;
  *(_DWORD *)(v15 - 152) ^= 0xCD32BCB6;
  LODWORD(STACK[0x2A4]) = v135 ^ 0x88BF942D;
  *(_DWORD *)(v15 - 212) = 116057311
                         - ((v135 ^ 0x88BF942D)
                          + v59)
                         - ((973118860 - 2 * ((v135 ^ 0x88BF942D) + v59)) & 0xD3D52C32);
  v162 = STACK[0x364];
  v163 = LODWORD(STACK[0x364]) ^ v158;
  LODWORD(STACK[0x27C]) = v163;
  v164 = v144 ^ 0x34000000 ^ v134;
  LODWORD(STACK[0x2E8]) = v164;
  LODWORD(v59) = v164 ^ 0x99000000;
  LODWORD(STACK[0x2DC]) = v164 ^ 0x99000000;
  LODWORD(STACK[0x30C]) = v151 ^ 0x1190A973;
  v165 = v151 ^ 0x1190A973 ^ v144 ^ 0x34000000;
  LODWORD(STACK[0x310]) = v165;
  v166 = v165 ^ v59 ^ 0x8104B1A;
  LODWORD(STACK[0x3EC]) = (v163 ^ v144 ^ 0xBF9C06CC)
                        - ((2 * (v163 ^ v144 ^ 0xBF9C06CC) + 406609824) & 0x7C1BF384)
                        - 903075438;
  v167 = *(_DWORD *)(v15 - 220) ^ 0x3D3EAFA4;
  v168 = LODWORD(STACK[0x324]) ^ 0x51EA0A67;
  LODWORD(v66) = LODWORD(STACK[0x394]) ^ *(_DWORD *)(v15 - 108) ^ 0xDE687FC9;
  LODWORD(STACK[0x324]) = v66;
  LODWORD(v59) = LODWORD(STACK[0x374]) ^ 0xC2D555B0;
  v169 = v157 - 1258800319;
  v170 = *(_DWORD *)(v15 - 164);
  LODWORD(STACK[0x274]) = v170 ^ 0xC2C150D5;
  LODWORD(STACK[0x31C]) = ((v157 - 1258800319) ^ v170) - ((2 * ((v157 - 1258800319) ^ v170)) & 0x405A95C4);
  v171 = v146 ^ 0x2E000000;
  v172 = (v135 ^ v146 ^ 0x2E000000 ^ 0x60214A1A)
       + ((-660548613 - 2 * (v135 ^ v146 ^ 0x2E000000 ^ 0x60214A1A)) | 0x3D54E3FD)
       + 1963271172;
  v173 = v144 ^ 0xF29EDE37;
  LODWORD(STACK[0x278]) = v144 ^ 0xF29EDE37;
  v174 = LODWORD(STACK[0x2FC]) ^ 0xE06529B6;
  LODWORD(v72) = v166 ^ v146 ^ 0x2E000000;
  LODWORD(STACK[0x374]) = v66 - v72 - 631409278;
  v175 = v167 & 0x202D4AEB ^ *(_DWORD *)(v15 - 256) & 9;
  v176 = LODWORD(STACK[0x3D4]) - ((2 * LODWORD(STACK[0x3D4])) & 0xC2AB1C02);
  *(_DWORD *)(v15 - 164) = (LODWORD(STACK[0x3AC]) ^ v151 ^ 0x517D46B3)
                         - ((2 * (LODWORD(STACK[0x3AC]) ^ v151 ^ 0x517D46B3) + 909372670) & 0x7DEF0318)
                         + 437352459;
  v177 = v161 - (*(_DWORD *)(v15 - 236) & 0xC3A2226);
  LODWORD(STACK[0x3D4]) = v72 - v166;
  v178 = (v72 - v166) ^ 0x446CA8B0;
  v179 = v155 ^ (v157 - ((2 * (v157 - 1258800319)) & 0x405A95C4) - 718961117) ^ v178;
  LODWORD(STACK[0x394]) = v179 - ((2 * v179) & 0xEDD21B7C) + 1994984894;
  *(_DWORD *)(v15 - 236) = (v160 ^ (v177 + 102568211)) - ((2 * (v160 ^ (v177 + 102568211))) & 0xC2AB1C02);
  LODWORD(STACK[0x3C4]) = v178 ^ v169 ^ (v167 - 2 * v175 + 539839202);
  v180 = v178 ^ v169 ^ *(_DWORD *)(v15 - 232);
  v181 = v172;
  v182 = v172 ^ (*(_DWORD *)(v15 - 200) - ((2 * *(_DWORD *)(v15 - 200)) & 0xC2AB1C02) + 1632996865);
  *(_DWORD *)(v15 - 200) = v182 - ((2 * v182) & 0xC3A2226);
  LODWORD(STACK[0x2FC]) = v180 - ((2 * v180) & 0x405A95C4);
  LODWORD(STACK[0x3AC]) = (v172 ^ (v176 + 1632996865)) - ((2 * (v172 ^ (v176 + 1632996865))) & 0xC3A2226);
  LODWORD(STACK[0x2EC]) = LODWORD(STACK[0x3E4]) - ((2 * LODWORD(STACK[0x3E4])) & 0x65589F04);
  *(_DWORD *)(v15 - 232) = v159 - 2 * (v159 & 0x32AC4F86 ^ *(_DWORD *)(v15 - 148) & 4);
  v183 = LODWORD(STACK[0x3E8]) - ((2 * LODWORD(STACK[0x3E8])) & 0xC2AB1C02);
  *(_DWORD *)(v15 - 132) -= (2 * *(_DWORD *)(v15 - 132)) & 0x65589F04;
  LODWORD(STACK[0x3E4]) = LODWORD(STACK[0x3E0]) - ((2 * LODWORD(STACK[0x3E0])) & 0xD3D52C32);
  LODWORD(STACK[0x280]) = *(_DWORD *)(v15 - 252) - ((2 * *(_DWORD *)(v15 - 252)) & 0x65589F04);
  LODWORD(STACK[0x2C4]) = (v172 ^ (v183 + 1632996865)) - ((2 * (v172 ^ (v183 + 1632996865))) & 0xC3A2226);
  v184 = *(_DWORD *)(v15 - 212);
  LODWORD(STACK[0x3E8]) = v184 ^ (v162 - ((2 * v162) & 0xD3D52C32) + 1776981529);
  v185 = (v173 - v174) ^ 0xD002BDDB;
  LODWORD(STACK[0x364]) = v185;
  LODWORD(STACK[0x2E4]) = ((unsigned __int16)v184 ^ (unsigned __int16)(v162 - ((2 * v162) & 0x2C32) - 27111)) & 0x200;
  v317 = ((v173 - v174) & ((unsigned __int16)v184 ^ (unsigned __int16)(v162 - ((2 * v162) & 0x2C32) - 27111)) & 0x200) == 0;
  LODWORD(STACK[0x3E0]) = ((v83 ^ 0x4D02D8FB) - ((2 * (v83 ^ 0x4D02D8FB)) & 0xD3D52C32) + 1776981529) ^ v184 ^ (v173 - v174) ^ 0xC6C533D4;
  v186 = v154 - ((2 * v154) & 0x7DEF0318);
  v187 = v156 - 2 * (v156 & 0x61558E09 ^ *(_DWORD *)(v15 - 112) & 8);
  v188 = LODWORD(STACK[0x340]) - ((2 * LODWORD(STACK[0x340])) & 0x65589F04);
  v189 = LODWORD(STACK[0x2E0]) - ((2 * LODWORD(STACK[0x2E0])) & 0xD3D52C32);
  LODWORD(STACK[0x2E0]) = LODWORD(STACK[0x27C]) ^ v184 ^ v185 ^ 0x322FC0ED;
  LODWORD(STACK[0x340]) = LODWORD(STACK[0x274]) + v59;
  v190 = v59 - ((2 * v59) & 0xC2AB1C02);
  v191 = *(_DWORD *)(v15 - 192);
  *(_DWORD *)(v15 - 112) = v191 ^ (v189 + 1776981529) ^ v184 ^ 0x27A6E75C;
  LODWORD(v66) = *(_DWORD *)(v15 - 164);
  *(_DWORD *)(v15 - 148) = (v186 + 1056407948) ^ v172 ^ v66 ^ 0x47A24BA6;
  v192 = *(_DWORD *)(v15 - 116) - ((2 * *(_DWORD *)(v15 - 116)) & 0x7DEF0318);
  v193 = v168 + v167;
  v194 = v168 - ((2 * v168) & 0x65589F04);
  LODWORD(v59) = LODWORD(STACK[0x320]) - ((2 * LODWORD(STACK[0x320])) & 0x7C1BF384);
  v195 = LODWORD(STACK[0x2F8]) - ((2 * LODWORD(STACK[0x2F8])) & 0x65589F04);
  v196 = *(_DWORD *)(v15 - 152) - LODWORD(STACK[0x2F8]);
  v197 = v196 ^ (LODWORD(STACK[0x328]) - ((2 * LODWORD(STACK[0x328])) & 0x12720F16) + 154732427) ^ 0xC5B3FD37;
  LODWORD(STACK[0x328]) = v174 - ((2 * v174) & 0x12720F16);
  *(_DWORD *)(v15 - 116) = v181 ^ 0x1800442B ^ (v187 + 1632996865);
  LODWORD(STACK[0x2F8]) = v181 ^ 0x1800442B ^ (v190 + 1632996865);
  LODWORD(STACK[0x320]) = (v126 ^ v196) - ((2 * (v126 ^ v196)) & 0x7C1BF384);
  LODWORD(STACK[0x27C]) = (v66 ^ (v192 + 1056407948)) - ((2 * (v66 ^ (v192 + 1056407948))) & 0xC2AB1C02);
  v198 = v166 - ((2 * v166) & 0x65589F04);
  v199 = LODWORD(STACK[0x2A4]) - ((2 * LODWORD(STACK[0x2A4])) & 0xA9AAF1E6);
  v200 = LODWORD(STACK[0x318]) - ((2 * LODWORD(STACK[0x318])) & 0x379C4FA6);
  v201 = v191;
  LODWORD(STACK[0x2A4]) = ((v188 + 850153346) ^ v191) - ((2 * ((v188 + 850153346) ^ v191)) & 0xD3D52C32);
  v202 = *(_DWORD *)(v15 - 204);
  LODWORD(STACK[0x318]) = ((v200 + 466495443) ^ v202) - ((2 * ((v200 + 466495443) ^ v202)) & 0xA9AAF1E6);
  v203 = LODWORD(STACK[0x2DC]) - 2 * (STACK[0x2DC] & 0x61558E1F ^ STACK[0x2E8] & 0x1E);
  v204 = STACK[0x3EC];
  v205 = (v204 ^ (v59 + 1041103298)) - ((2 * (v204 ^ (v59 + 1041103298))) & 0x12720F16);
  v206 = STACK[0x3EC];
  LODWORD(STACK[0x200]) = LODWORD(STACK[0x3EC]) ^ 0x3E0DF9C2;
  LODWORD(STACK[0x2E8]) = (v204 ^ 0x3E0DF9C2) + v197 - 2 * ((v204 ^ 0x3E0DF9C2) & v197);
  v207 = v171 - 2 * (v171 & 0x61558E03 ^ STACK[0x284] & 2);
  v208 = LODWORD(STACK[0x334]) - 2 * (STACK[0x334] & 0x54D578F7 ^ STACK[0x338] & 4);
  LODWORD(v59) = LODWORD(STACK[0x314]) ^ 0x600E7744;
  v209 = LODWORD(STACK[0x300]) - ((2 * LODWORD(STACK[0x300])) & 0xA9AAF1E6);
  v210 = v59 + LODWORD(STACK[0x300]);
  v211 = v59 - 2 * (v59 & 0x61558E03 ^ STACK[0x314] & 2);
  v212 = v181;
  LODWORD(STACK[0x334]) = (v181 ^ (v203 + 1632996865)) - ((2 * (v181 ^ (v203 + 1632996865))) & 0x7C1BF384);
  v213 = v209 + 1423276275;
  v214 = v193 ^ 0x9D6424D2 ^ v202;
  v215 = v214 ^ (v199 + 1423276275);
  LODWORD(STACK[0x314]) = (v181 ^ (v207 + 1632996865)) - ((2 * (v181 ^ (v207 + 1632996865))) & 0x7C1BF384);
  v216 = (v72 - ((2 * v72) & 0xA9AAF1E6) + 1423276275) ^ v193 ^ 0x9D6424D2;
  v217 = v216 - ((2 * v216) & 0x405A95C4);
  v218 = LODWORD(STACK[0x278]) - ((2 * LODWORD(STACK[0x278])) & 0xC2AB1C02);
  v219 = LODWORD(STACK[0x30C]) - ((2 * LODWORD(STACK[0x30C])) & 0x65589F04);
  v220 = LODWORD(STACK[0x310]) - ((2 * LODWORD(STACK[0x310])) & 0x65589F04);
  LODWORD(STACK[0x310]) = v201 ^ (v195 + 850153346) ^ v184 ^ 0x7CE03EC7;
  LODWORD(STACK[0x30C]) = (v194 + 850153346) ^ v201 ^ v184 ^ 0x7CE03EC7;
  *(_DWORD *)(v15 - 256) = v193 ^ 0x9D6424D2;
  LODWORD(STACK[0x2DC]) = ((v208 + 1423276275) ^ v193 ^ 0x9D6424D2)
                        - ((2 * ((v208 + 1423276275) ^ v193 ^ 0x9D6424D2)) & 0x379C4FA6);
  v221 = v201;
  v222 = ((v219 + 850153346) ^ v201) + (~(2 * ((v219 + 850153346) ^ v201)) | 0xBFA56A3B);
  LODWORD(STACK[0x284]) = v212 ^ 0x77D3F151 ^ (v211 + 1632996865);
  LODWORD(STACK[0x278]) = v212 ^ 0x77D3F151 ^ (v218 + 1632996865);
  v223 = (((v220 + 850153346) ^ v201) - ((2 * ((v220 + 850153346) ^ v201)) & 0xA9AAF1E6) + 1423276275) ^ v193 ^ 0x9D6424D2;
  LODWORD(STACK[0x300]) = v223 - ((2 * v223) & 0x405A95C4);
  v224 = *(_DWORD *)(v15 - 188);
  LODWORD(STACK[0x274]) = v193 ^ v224 ^ (((v198 + 850153346) ^ v201)
                                       - ((2 * ((v198 + 850153346) ^ v201)) & 0x405A95C4)
                                       + 539839202) ^ 0x844F670B;
  LODWORD(STACK[0x26C]) = v201 ^ v224 ^ (v217 + 539839202) ^ 0x7F5274A8;
  v225 = v193 ^ (((v222 + 539839203) ^ v224) - ((2 * ((v222 + 539839203) ^ v224)) & 0xA9AAF1E6) + 1423276275);
  v226 = v193;
  *(_DWORD *)(v15 - 252) = v193;
  LODWORD(STACK[0x270]) = v225 ^ 0xD31AFD91;
  v227 = *(_DWORD *)(v15 - 196) ^ LODWORD(STACK[0x394]);
  LODWORD(STACK[0x394]) = v196 ^ 0x403682C7;
  v228 = (LODWORD(STACK[0x328]) + 154732427) ^ v196 ^ 0x403682C7 ^ v206 ^ 0x71795686;
  v229 = v214 ^ v213 ^ 0xAB47062;
  v230 = v215 ^ 0xAB47062;
  v231 = ((v194 - 126) ^ v201 ^ v184 ^ 0xE6)
       + (v215 ^ 0xD3)
       + ((LOBYTE(STACK[0x328]) - 117) ^ v196 ^ 0xC7 ^ v206 ^ 0x3D);
  v232 = LODWORD(STACK[0x340]) - 16507055;
  v233 = (LODWORD(STACK[0x2EC]) + 850153346) ^ v232 ^ v221 ^ 0x89FABBBF;
  v234 = v227 ^ 0x1FA5BA81;
  v235 = v224 ^ (LODWORD(STACK[0x2FC]) + 539839202) ^ 0x1FA5BA81;
  v236 = v232 ^ (LODWORD(STACK[0x280]) + 850153346) ^ v221 ^ 0x49DFBC8F ^ -(v232 ^ (LODWORD(STACK[0x280]) + 850153346) ^ v221 ^ 0x49DFBC8F) ^ ((v232 ^ (LODWORD(STACK[0x280]) + 850153346) ^ v221 ^ 0x68FD10A8) - 555920423);
  v237 = v236 - ((2 * v236 + 230336432) & 0xCD1FB36);
  LODWORD(STACK[0x204]) = v196;
  v238 = v196 ^ (v205 + 154732427) ^ 0x3A32D2B6;
  v239 = *(_DWORD *)(v15 - 208);
  v240 = v239 ^ (LODWORD(STACK[0x2C4]) + 102568211) ^ 0xB7473CCD;
  v241 = v224;
  v242 = (LODWORD(STACK[0x31C]) + 539839202) ^ v224 ^ LODWORD(STACK[0x3D4]) ^ 0x5BC91231;
  v243 = LODWORD(STACK[0x3C4]) ^ v241 ^ 0x229B15AB;
  if (v317)
    v244 = STACK[0x2E4];
  else
    v244 = -LODWORD(STACK[0x2E4]);
  if ((v231 & 1) != 0)
    v245 = v234;
  else
    v245 = v235;
  if ((v231 & 1) != 0)
    v246 = v235;
  else
    v246 = LODWORD(STACK[0x3C4]) ^ v241 ^ 0x229B15AB;
  LODWORD(STACK[0x340]) = v246;
  if ((v231 & 1) != 0)
    v247 = v243;
  else
    v247 = v242;
  if ((v231 & 1) == 0)
    v242 = v234;
  LODWORD(STACK[0x338]) = v242;
  v248 = *(_DWORD *)(v15 - 236) + 1632996865;
  v249 = *(_DWORD *)(v15 - 200) + 102568211;
  v250 = LODWORD(STACK[0x3AC]) + 102568211;
  *(_DWORD *)(v15 - 220) = v212;
  v251 = v248 ^ v212 ^ 0x49988042;
  v252 = v239 ^ 0x49988042 ^ v250;
  v253 = v239 ^ 0x49988042 ^ v249;
  v254 = v237 - 448376461;
  v255 = *(_DWORD *)(v15 - 212);
  v256 = STACK[0x364];
  v257 = (LODWORD(STACK[0x3E4]) + 1776981529) ^ v255 ^ LODWORD(STACK[0x364]) ^ 0xE70F3CF8;
  v258 = (*(_DWORD *)(v15 - 132) + 850153346) ^ v232 ^ v221 ^ 0x6FB5AE43;
  v259 = (*(_DWORD *)(v15 - 232) + 850153346) ^ v232 ^ v221 ^ 0x668FD9B;
  if ((v231 & 1) != 0)
    v260 = v237 - 448376461;
  else
    v260 = v233;
  if ((v231 & 1) != 0)
    v254 = (*(_DWORD *)(v15 - 232) + 850153346) ^ v232 ^ v221 ^ 0x668FD9B;
  *(_DWORD *)(v15 - 132) = v254;
  if ((v231 & 1) != 0)
    v261 = v258;
  else
    v261 = v259;
  if ((v231 & 1) != 0)
    v262 = v233;
  else
    v262 = v258;
  *(_DWORD *)(v15 - 200) = v262;
  v263 = v210 ^ 0x7BB7B6E5;
  v264 = STACK[0x374];
  v265 = LODWORD(STACK[0x374]) ^ v210;
  v266 = LODWORD(STACK[0x324]) ^ v265 ^ 0x39E791A2;
  v267 = STACK[0x3E8] & 0xFFFFFDFF ^ (v244 + v256) ^ 0x5BC556F4;
  v268 = STACK[0x3E0];
  if ((v231 & 1) != 0)
    v269 = v257;
  else
    v269 = STACK[0x3E0];
  *(_DWORD *)(v15 - 236) = v269;
  v270 = STACK[0x2E0];
  if ((v231 & 1) != 0)
    v271 = v268;
  else
    v271 = STACK[0x2E0];
  LODWORD(STACK[0x328]) = v271;
  if ((v231 & 1) != 0)
    v272 = v270;
  else
    v272 = v267;
  LODWORD(STACK[0x3D4]) = v272;
  if ((v231 & 1) != 0)
    v273 = v267;
  else
    v273 = v257;
  LODWORD(STACK[0x324]) = v273;
  v274 = *(_DWORD *)(v15 - 216) ^ v264 ^ v263 ^ 0x94D0B572;
  v275 = v212 ^ (LODWORD(STACK[0x27C]) + 1632996865) ^ 0x3B23964;
  v276 = *(_DWORD *)(v15 - 108) ^ v265 ^ 0xF4D52D14;
  v277 = *(_DWORD *)(v15 - 152) ^ v264 ^ v263 ^ 0x42502747;
  if ((v231 & 1) != 0)
    v278 = *(_DWORD *)(v15 - 152) ^ v264 ^ v263 ^ 0x42502747;
  else
    v278 = v266;
  if ((v231 & 1) != 0)
    v277 = *(_DWORD *)(v15 - 216) ^ v264 ^ v263 ^ 0x94D0B572;
  LODWORD(STACK[0x3C4]) = v277;
  if ((v231 & 1) != 0)
    v279 = v276;
  else
    v279 = v274;
  if ((v231 & 1) != 0)
    v276 = v266;
  LODWORD(STACK[0x2EC]) = v276;
  v280 = (LODWORD(STACK[0x2A4]) + 1776981529) ^ v255 ^ 0x4FE0A2B9;
  v281 = LODWORD(STACK[0x2E8]) ^ 0xCD045071;
  v282 = (LODWORD(STACK[0x320]) + 1041103298) ^ v206 ^ 0xE20BD53D;
  v283 = STACK[0x30C];
  v284 = STACK[0x310];
  if ((v231 & 1) != 0)
    v285 = STACK[0x30C];
  else
    v285 = STACK[0x310];
  if ((v231 & 1) == 0)
    v284 = v280;
  LODWORD(STACK[0x310]) = v284;
  if ((v231 & 1) != 0)
    v286 = v280;
  else
    v286 = *(_DWORD *)(v15 - 112);
  if ((v231 & 1) != 0)
    v287 = *(_DWORD *)(v15 - 112);
  else
    v287 = v283;
  LODWORD(STACK[0x30C]) = v287;
  if ((v231 & 1) != 0)
    v288 = v281;
  else
    v288 = v282;
  if ((v231 & 1) != 0)
    v289 = v238;
  else
    v289 = v281;
  LODWORD(STACK[0x2E8]) = v289;
  if ((v231 & 1) != 0)
    v290 = v228;
  else
    v290 = v238;
  if ((v231 & 1) != 0)
    v291 = v282;
  else
    v291 = v228;
  LODWORD(STACK[0x2E4]) = v291;
  v292 = *(_DWORD *)(v15 - 204) ^ (LODWORD(STACK[0x2DC]) + 466495443) ^ 0xB556AEF;
  v293 = v226 ^ (LODWORD(STACK[0x318]) + 1423276275) ^ 0x4A1E74E;
  v294 = v206 ^ (LODWORD(STACK[0x314]) + 1041103298) ^ 0xA140D6A4;
  if ((v231 & 1) != 0)
    v295 = *(_DWORD *)(v15 - 204) ^ (LODWORD(STACK[0x2DC]) + 466495443) ^ 0xB556AEF;
  else
    v295 = v230;
  LODWORD(STACK[0x2E0]) = v295;
  if ((v231 & 1) != 0)
    v296 = v230;
  else
    v296 = v229;
  LODWORD(STACK[0x320]) = v296;
  if ((v231 & 1) != 0)
    v297 = v229;
  else
    v297 = v293;
  LODWORD(STACK[0x2DC]) = v297;
  if ((v231 & 1) != 0)
    v298 = v293;
  else
    v298 = v292;
  LODWORD(STACK[0x31C]) = v298;
  v299 = v206 ^ (LODWORD(STACK[0x334]) + 1041103298) ^ 0x84D07FD7;
  v300 = v241 ^ (LODWORD(STACK[0x300]) + 539839202) ^ 0x607ED943;
  v301 = STACK[0x274];
  v302 = STACK[0x26C];
  if ((v231 & 1) != 0)
    v303 = STACK[0x26C];
  else
    v303 = STACK[0x274];
  LODWORD(STACK[0x318]) = v303;
  if ((v231 & 1) == 0)
    v301 = v300;
  LODWORD(STACK[0x300]) = v301;
  if ((v231 & 1) != 0)
    v304 = v300;
  else
    v304 = STACK[0x270];
  if ((v231 & 1) != 0)
    v305 = STACK[0x270];
  else
    v305 = v302;
  LODWORD(STACK[0x2FC]) = v305;
  v306 = *(_DWORD *)(v15 - 164);
  v307 = *(_DWORD *)(v15 - 116) ^ v306;
  v308 = LODWORD(STACK[0x2F8]) ^ v306;
  v309 = LODWORD(STACK[0x284]) ^ v206;
  v310 = LODWORD(STACK[0x278]) ^ v206;
  if ((v231 & 1) != 0)
    v311 = v252;
  else
    v311 = v240;
  if ((v231 & 1) != 0)
  {
    v253 = v251;
    v312 = v275;
  }
  else
  {
    v312 = *(_DWORD *)(v15 - 116) ^ v306;
  }
  LODWORD(STACK[0x2F8]) = v312;
  if ((v231 & 1) != 0)
    v313 = v307;
  else
    v313 = v308;
  v314 = *(_DWORD *)(v15 - 148);
  if ((v231 & 1) != 0)
  {
    v315 = v309;
  }
  else
  {
    v314 = v275;
    v315 = v294;
  }
  if ((v231 & 1) != 0)
    v316 = v299;
  else
    v316 = v310;
  v317 = (v231 & 2) == 0;
  *(_DWORD *)(v15 - 232) = v231 & 2;
  if ((v231 & 2) != 0)
    v318 = v247;
  else
    v318 = v245;
  LODWORD(STACK[0x314]) = v318;
  if ((v231 & 2) != 0)
    v319 = v261;
  else
    v319 = v260;
  LODWORD(STACK[0x3E4]) = v319;
  if ((v231 & 2) != 0)
    v320 = v314;
  else
    v320 = v313;
  *(_DWORD *)(v15 - 196) = v320;
  if ((v231 & 2) != 0)
    v321 = v313;
  else
    v321 = v314;
  LODWORD(STACK[0x334]) = v321;
  if ((v231 & 2) != 0)
    v322 = v278;
  else
    v322 = v279;
  LODWORD(STACK[0x2C4]) = v322;
  if ((v231 & 2) != 0)
    v323 = v285;
  else
    v323 = v286;
  *(_DWORD *)(v15 - 216) = v323;
  if ((v231 & 2) != 0)
    v324 = v288;
  else
    v324 = v290;
  LODWORD(STACK[0x3E8]) = v324;
  if ((v231 & 2) != 0)
    v325 = v290;
  else
    v325 = v288;
  LODWORD(STACK[0x3E0]) = v325;
  if ((v231 & 2) != 0)
    v326 = v316;
  else
    v326 = v315;
  *(_DWORD *)(v15 - 152) = v326;
  if ((v231 & 2) != 0)
    v327 = v315;
  else
    v327 = v316;
  LODWORD(STACK[0x3AC]) = v327;
  v328 = (STACK[0x2A8] ^ 0x3A) + (STACK[0x2A8] ^ 0x63) + 1;
  v329 = ((*(unsigned __int8 *)(STACK[0x380] + STACK[0x2B0]) ^ 0xFFFFFFF7) << 24) | (((*(_BYTE *)(STACK[0x3A0] + (STACK[0x2A8] ^ 0x5F)) ^ (v328 - ((2 * v328) & 0x8A) + 69)) ^ 0x5A) << 16);
  v330 = (STACK[0x3D8] ^ 0x2E) + (STACK[0x3D8] ^ 0x77);
  v331 = *(unsigned __int8 *)(STACK[0x3A0] + (STACK[0x3D8] ^ 0x12)) ^ (v330 - ((2 * v330 + 2) & 0x8A) + 70);
  LOBYTE(v328) = *(_BYTE *)(STACK[0x380] + (STACK[0x2D0] ^ 0x52));
  v332 = *(unsigned __int8 *)(STACK[0x380] + (STACK[0x348] ^ 0x51));
  v333 = (STACK[0x2C8] ^ 0xFFFFFFCB) + (STACK[0x2C8] ^ 0xFFFFFF92) + 1;
  v334 = ((*(unsigned __int8 *)(STACK[0x388] + (STACK[0x368] ^ 0x2B)) ^ 7) << 8) | (((*(_BYTE *)(STACK[0x3A0] + (STACK[0x2C8] ^ 0xAE)) ^ (v333 - ((2 * v333) & 0x8A) + 69)) ^ 0x66) << 16) & 0xFFFFFF | ((*(_BYTE *)(STACK[0x380] + (STACK[0x3B0] ^ 0x58)) ^ 0xC1) << 24);
  LOBYTE(v333) = *(_BYTE *)(STACK[0x388] + (*(_QWORD *)(v15 - 248) ^ 0x9FLL));
  v335 = *(_BYTE *)(STACK[0x398] + (STACK[0x358] ^ 0x9C)) - 4;
  v336 = ((v331 ^ 0xFFFFFFE3) << 24) | (((v335 ^ (2 * v335 * v335)) ^ 0xBC) << 16);
  v337 = *(_BYTE *)(STACK[0x388] + (STACK[0x3B8] ^ 0x5C));
  v338 = *(unsigned __int8 *)(STACK[0x380] + (STACK[0x2F0] ^ 0x20)) ^ 0x18 | v329;
  LOBYTE(v329) = (v337 ^ 0x6B) + ((2 * v337) & 0xDA ^ 0x2D);
  v339 = (STACK[0x350] ^ 0xFFFFFFA6) - STACK[0x350];
  v340 = v334 & 0xFFFFFF00 | (v329 + 110);
  v341 = (STACK[0x2B8] ^ 0xFFFFFFC6) + (STACK[0x2B8] ^ 0xFFFFFF9F) + 1;
  v342 = (*(unsigned __int8 *)(STACK[0x3A0] + (STACK[0x2B8] ^ 0xA3)) ^ (v341 - ((2 * v341) & 0x8A) + 69) ^ 0xD | v336) & 0xFFFF00FF | ((*(_BYTE *)(STACK[0x380] + (STACK[0x3C8] ^ 0xA3)) ^ 0x92) << 8);
  LOBYTE(v336) = *(_BYTE *)(STACK[0x398] + (*(_QWORD *)(v15 - 176) ^ 0x76)) - 4;
  v343 = (v336 ^ (2 * v336 * v336)) ^ (((v328 ^ 0xAE) << 16) & 0xFF00FF | ((v332 ^ 0x10) << 24) | ((v333 ^ 0xE4) << 8) | 0x19);
  v344 = STACK[0x288];
  v345 = STACK[0x378];
  v346 = *(_DWORD *)(STACK[0x378] + 4 * (v328 ^ 0x21u));
  v347 = *(_DWORD *)(STACK[0x378] + 4 * (v333 ^ 0x6Bu));
  v348 = (v338 & 0xFFFF00FF | (((*(_BYTE *)(STACK[0x3A0] + (STACK[0x350] ^ 0x9A)) ^ (v339 - ((2 * v339) & 0x8A) + 69)) ^ 0xB1) << 8)) ^ __ROR4__(((v332 ^ 0x93) - ((2 * (v332 ^ 0x93) + 94837916) & 0x4030866) + 2027496065) ^ *(_DWORD *)(STACK[0x288] + 4 * (v332 ^ 0x98u)) ^ 0x57857FF0, 8) ^ *(_DWORD *)(STACK[0x288] + 4 * (v343 ^ 0x88u)) ^ __ROR4__(v346 ^ (16 * v346) & 0x36A63620 ^ 0xF827F590, 16) ^ __ROR4__(v347 ^ (16 * v347) & 0x36A63620 ^ 0xF827F590, 24) ^ ((v343 ^ 0x83) - ((2 * (v343 ^ 0x83) + 94837916) & 0x4030866) + 2027496065);
  LODWORD(STACK[0x27C]) = v348;
  LODWORD(STACK[0x3C8]) = v348 ^ v342;
  v349 = v348 ^ v342 ^ 0xB7000000;
  LODWORD(STACK[0x3B8]) = v349;
  v350 = v349 ^ v340;
  v351 = v349 ^ v340 ^ v343;
  v352 = v351 ^ 0x57857F4A;
  LODWORD(STACK[0x264]) = v351 ^ 0x57857F4A;
  v353 = *(_DWORD *)(v345 + 4 * (HIBYTE(v351) ^ 0xD8));
  v354 = *(_DWORD *)(v344 + 4 * (((v351 ^ 0x57857F4A) >> 16) ^ 0x88u)) ^ ((((v351 ^ 0x57857F4A) >> 16) ^ 0x83)
                                                                                           - ((2
                                                                                             * (((v351 ^ 0x57857F4A) >> 16) ^ 0x83)
                                                                                             + 94837916) & 0x4030866)
                                                                                           + 2027496065);
  v355 = v353 ^ (((16 * v353) & 0x36A63620 ^ 0x32840420)
               - ((2 * ((16 * v353) & 0x36A63620 ^ 0x32840420)) & 0x44402800)
               + 1797805143);
  v356 = v351 ^ 0xC2;
  v357 = v351 ^ 0xC9;
  v358 = *(_DWORD *)(v345 + 4 * (BYTE1(v351) ^ 0xF0u));
  v359 = *(_DWORD *)(v344 + 4 * v356) ^ __ROR4__(v358 ^ (16 * v358) & 0x36A63620 ^ 0xF827F590, 24) ^ __ROR4__(v355 ^ 0xA18BA5E7, 8) ^ (v357 - ((2 * v357 + 94837916) & 0x4030866) + 2027496065) ^ __ROR4__(v354 ^ 0x57857FF0, 16);
  v360 = v359 ^ v342;
  v361 = v359 ^ v342 ^ v350;
  LODWORD(STACK[0x250]) = v350;
  LOWORD(v357) = v359 ^ v342 ^ v350 ^ v352;
  v362 = ((v361 ^ v352) >> 16);
  v363 = STACK[0x290];
  v364 = v361 ^ v352 ^ 0x90000BA;
  v365 = *(_DWORD *)(v345 + 4 * (BYTE1(v357) ^ 0x8Fu));
  v366 = *(_DWORD *)(v345 + 4 * (v357 ^ 0x35u));
  v367 = v366 ^ (16 * v366) & 0x36A63620 ^ v348 ^ __ROR4__(v365 ^ (16 * v365) & 0x36A63620 ^ 0xF827F590, 24) ^ v359 ^ __ROR4__(*(_DWORD *)(v344 + 4 * (HIBYTE(v364) ^ 0x88)) ^ ((HIBYTE(v364) ^ 0x83) - ((2 * (HIBYTE(v364) ^ 0x83) + 94837916) & 0x4030866) + 2027496065) ^ 0x57857FF0, 8) ^ __ROR4__(*(_DWORD *)(STACK[0x290] + 4 * (v362 ^ 0x83u)) ^ ((v362 ^ 0xD7C829D1) + (v362 ^ 0x33) + 1 - ((2 * ((v362 ^ 0xD7C829D1) + (v362 ^ 0x33) + 1)) & 0xC6909434) + 1665681946) ^ 0x49DFBC8F, 16) ^ 0xFC27F590;
  v368 = (v361 ^ v352) & 0x80000;
  v369 = STACK[0x340];
  if (!v317)
    v369 = STACK[0x338];
  LODWORD(STACK[0x2A4]) = v369;
  if (v317)
    v370 = v311;
  else
    v370 = v253;
  LODWORD(STACK[0x3D8]) = v370;
  v371 = *(_DWORD *)(v15 - 132);
  if (!v317)
    v371 = *(_DWORD *)(v15 - 200);
  LODWORD(STACK[0x368]) = v371;
  v372 = *(_DWORD *)(v15 - 236);
  if (v317)
    v372 = STACK[0x3D4];
  *(_DWORD *)(v15 - 176) = v372;
  v373 = STACK[0x328];
  if (!v317)
    v373 = STACK[0x324];
  LODWORD(STACK[0x350]) = v373;
  v374 = STACK[0x3C4];
  if (!v317)
    v374 = STACK[0x2EC];
  LODWORD(STACK[0x2F0]) = v374;
  v375 = STACK[0x310];
  if (v317)
    v375 = STACK[0x30C];
  LODWORD(STACK[0x26C]) = v375;
  v376 = STACK[0x2E8];
  if (v317)
    v376 = STACK[0x2E4];
  LODWORD(STACK[0x2D0]) = v376;
  v377 = STACK[0x318];
  if (!v317)
    v377 = v304;
  LODWORD(STACK[0x358]) = v377;
  if (((v367 ^ v350) & v368) != 0)
    v368 = -v368;
  v378 = (v368 + (v367 ^ v350 ^ 0x57857F4A)) ^ v364 & 0xFFF7FFFF;
  v379 = (BYTE1(v378) ^ 0xD7C829D1) + (BYTE1(v378) ^ 0x33) + 1;
  v380 = *(_DWORD *)(v363
                   + 4 * (((unsigned __int16)((v368 + (v367 ^ v350 ^ 0x7F4A)) ^ v364) >> 8) ^ 0x83u)) ^ (v379 - ((2 * v379) & 0xC6909434) + 1665681946);
  v381 = STACK[0x298];
  v382 = *(_DWORD *)(STACK[0x298] + 4 * (BYTE2(v378) ^ 0x9Du)) ^ 0x633C042F;
  v383 = (v378 ^ 0xD7C829D1) + (v378 ^ 0x33) + 1;
  v384 = v367 ^ v360;
  v385 = *(_DWORD *)(v363 + 4 * (v378 ^ 0x83u)) ^ __ROR4__((v382 >> 5) ^ (v382 >> 2) ^ v382 & 0xFFFFFFFE ^ (294693235 - (v382 & 1)), 16) ^ v367 ^ (v383- ((2 * v383) & 0xC6909434)+ 1665681946) ^ __ROR4__(*(_DWORD *)(v344 + 4 * (HIBYTE(v378) ^ 0x88)) ^ ((HIBYTE(v378) ^ 0x83) - ((2 * (HIBYTE(v378) ^ 0x83) + 94837916) & 0x4030866) + 2027496065) ^ 0x57857FF0, 8) ^ __ROR4__(v380 ^ 0x49DFBC8F, 24);
  v378 ^= 0x225E55B5u;
  v386 = v361 ^ v385 ^ 0x90000BA;
  LODWORD(STACK[0x2B0]) = v386;
  v387 = (v386 - ((2 * v386) & 0x44BCAB6A) + 576607669) ^ v378;
  v388 = ((v387 ^ 0x2FDFBC8F) >> 16);
  v389 = ((unsigned __int16)(v387 ^ 0xBC8F) >> 8);
  v390 = v363;
  v391 = *(_DWORD *)(v344 + 4 * (HIBYTE(v387) ^ 0xA7)) ^ ((HIBYTE(v387) ^ 0xAC)
                                                          - ((2 * (HIBYTE(v387) ^ 0xAC) + 94837916) & 0x4030866)
                                                          + 2027496065);
  v392 = *(_DWORD *)(v345 + 4 * ((v386 - ((2 * v386) & 0x6A) - 75) ^ v378));
  v393 = ((16 * (v392 ^ 0x37338A4C)) | 0xC959C9D0) ^ v392 ^ 0x37338A4C ^ __ROR4__(v391 ^ 0x57857FF0, 8) ^ __ROR4__(*(_DWORD *)(v363 + 4 * (v388 ^ 0x83u)) ^ ((v388 ^ 0xD7C829D1) + (v388 ^ 0x33) + 1 - ((2 * ((v388 ^ 0xD7C829D1) + (v388 ^ 0x33) + 1)) & 0xC6909434) + 1665681946) ^ 0x49DFBC8F, 16);
  v394 = __ROR4__(*(_DWORD *)(v363 + 4 * (v389 ^ 0x83u)) ^ ((v389 ^ 0xD7C829D1)+ (v389 ^ 0x33)+ 1- ((2 * ((v389 ^ 0xD7C829D1) + (v389 ^ 0x33) + 1)) & 0xC6909434)+ 1665681946) ^ 0x49DFBC8F, 24);
  v395 = v393 ^ v394 ^ v385;
  LODWORD(STACK[0x2B8]) = v395;
  v396 = v384 ^ v393 ^ v394;
  LODWORD(STACK[0x348]) = v396 ^ 0x2BE8EDFC;
  v397 = 2 * (v396 ^ 0x2BE8EDFC);
  LODWORD(STACK[0x3B0]) = v397;
  v398 = ((v396 ^ 0x2BE8EDFC) - (v397 & 0x44BCAB6A) + 576607669) ^ v378;
  v399 = *(_DWORD *)(v381 + 4 * (BYTE2(v398) ^ 0x9Du));
  v400 = ((v399 ^ 0x633C042Fu) >> 5) ^ ((v399 ^ 0x633C042Fu) >> 2);
  v401 = v399 ^ (v400 - ((2 * v400) & 0x136E690) + 10187592);
  v402 = *(_DWORD *)(v345 + 4 * (HIBYTE(v398) ^ 0x8F));
  v403 = BYTE1(v398);
  v404 = v398;
  v405 = *(_DWORD *)(v344 + 4 * (BYTE1(v398) ^ 0x88u));
  LODWORD(STACK[0x268]) = v404;
  v406 = *(_DWORD *)(v344 + 4 * (v404 ^ 0x88u)) ^ __ROR4__(v402 ^ (16 * v402) & 0x36A63620 ^ 0xF827F590, 8) ^ __ROR4__(v401 ^ 0x7237DE14, 16) ^ v395 ^ ((v404 ^ 0x83) - ((2 * (v404 ^ 0x83) + 94837916) & 0x4030866) + 2027496065) ^ __ROR4__(v405 ^ ((v403 ^ 0x83) - ((2 * (v403 ^ 0x83) + 94837916) & 0x4030866) + 2027496065) ^ 0x57857FF0, 24);
  v407 = v406 ^ v386 ^ v404;
  LODWORD(STACK[0x2A8]) = v407;
  v408 = v406 ^ v386;
  LODWORD(STACK[0x284]) = v406 ^ v386;
  v409 = v407 ^ 0x5AB22E83;
  v410 = *(_DWORD *)(v345 + 4 * (((unsigned __int16)(v407 ^ 0x2E83) >> 8) ^ 0x4Cu));
  v411 = *(_DWORD *)(v345 + 4 * (HIBYTE(v407) ^ 0x81));
  LODWORD(STACK[0x288]) = v407 ^ 0xEE8EDFC;
  v412 = ((v407 ^ 0xEE8EDFC) >> 16);
  v413 = *(_DWORD *)(v363 + 4 * (v412 ^ 0x83u)) ^ ((v412 ^ 0xD7C829D1)
                                                   + (v412 ^ 0x33)
                                                   + 1
                                                   + (~(2 * ((v412 ^ 0xD7C829D1) + (v412 ^ 0x33) + 1)) | 0x396F6BCB)
                                                   + 1665681947);
  v414 = *(_DWORD *)(v345 + 4 * ((v406 ^ v386 ^ v404) ^ 0x73u)) ^ 0x37338A4C;
  LODWORD(STACK[0x270]) = v406;
  LODWORD(STACK[0x274]) = v406 ^ 0x2C000000;
  v415 = v414 ^ __ROR4__(v410 ^ (16 * v410) & 0x36A63620 ^ 0xF827F590, 24) ^ ((16 * v414) | 0xC959C9D0) ^ __ROR4__(v411 ^ (16 * v411) & 0x36A63620 ^ 0xF827F590, 8) ^ v406 ^ 0x2C000000;
  v416 = __ROR4__(v413 ^ 0x49DFBC8F, 16);
  v417 = v396 ^ v406 ^ 0xADFBC8F;
  LODWORD(STACK[0x278]) = v417;
  v418 = v415 ^ v416 ^ v417;
  v419 = v415 ^ v416;
  LODWORD(STACK[0x228]) = v415 ^ v416;
  v420 = v418 ^ v408;
  v421 = v418;
  LODWORD(STACK[0x234]) = v418;
  v422 = v420 ^ 0x545AC37F;
  LODWORD(STACK[0x254]) = v420 ^ 0x545AC37F;
  v423 = v420 ^ v409;
  LODWORD(STACK[0x280]) = v423 ^ 0xB1E8EDFC;
  v424 = (v423 ^ 0xB1E8EDFC) >> 24;
  v425 = *(_DWORD *)(v345 + 4 * (BYTE2(v423) ^ 0x67u));
  v426 = *(_DWORD *)(v381 + 4 * (BYTE1(v423) ^ 0x70u));
  v427 = *(_DWORD *)(v381 + 4 * (v423 ^ 0x61u));
  v428 = v427 ^ ((v427 ^ 0x633C042Fu) >> 5) ^ ((v427 ^ 0x633C042Fu) >> 2) ^ __ROR4__(v426 ^ ((v426 ^ 0x633C042Fu) >> 5) ^ ((v426 ^ 0x633C042Fu) >> 2) ^ 0x72ACAD5C, 24) ^ __ROR4__(v425 ^ (((16 * v425) & 0x36A63620 ^ 0x32840420)- ((2* ((16 * v425) & 0x36A63620 ^ 0x32840420)) & 0x44402800)+ 1797805143) ^ 0xA18BA5E7, 16) ^ v419 ^ __ROR4__(*(_DWORD *)(v363 + 4 * (v424 ^ 0x83)) ^ ((v424 ^ 0xD7C829D1) + (v424 ^ 0x33) + 1 - ((2 * ((v424 ^ 0xD7C829D1) + (v424 ^ 0x33) + 1)) & 0xC6909434) + 1665681946) ^ 0x49DFBC8F, 8) ^ 0xF74440A0;
  LODWORD(STACK[0x24C]) = v428 ^ v421;
  v429 = v428;
  LODWORD(STACK[0x23C]) = v428;
  v430 = v428 ^ v421 ^ 0xB1E8EDFC;
  v431 = v430 ^ v422;
  LODWORD(STACK[0x238]) = v431;
  v432 = v430;
  LODWORD(STACK[0x240]) = v430;
  v433 = v431 ^ v423;
  LODWORD(STACK[0x244]) = v433;
  v434 = (BYTE2(v433) ^ 0xD7C829D1) + (BYTE2(v433) ^ 0x33) + 1;
  v435 = *(_DWORD *)(v363 + 4 * (BYTE2(v433) ^ 0x83u)) ^ (v434 - ((2 * v434) & 0xC6909434) + 1665681946);
  v436 = *(_DWORD *)(v381 + 4 * (HIBYTE(v433) ^ 0x9D));
  v437 = ((v436 ^ 0x633C042Fu) >> 5) ^ ((v436 ^ 0x633C042Fu) >> 2);
  v438 = v436 ^ (v437 - ((2 * v437) & 0x136E690) + 10187592) ^ 0x7237DE14;
  v439 = *(_DWORD *)(v345 + 4 * (BYTE1(v433) ^ 0x8Fu)) ^ 0x37338A4C;
  v440 = ((16 * v439) | 0xC959C9D0) ^ v439;
  if ((v440 & 0x8000) != 0)
    v441 = -32768;
  else
    v441 = 0x8000;
  v442 = v441 + v440;
  v443 = *(_DWORD *)(v345 + 4 * (v433 ^ 0x8Fu)) ^ 0x37338A4C;
  v444 = ((16 * v443) | 0xC959C9D0) ^ v443 ^ __ROR4__(v438, 8) ^ __ROR4__(v442 ^ 0x346D120C, 24) ^ v429 ^ __ROR4__(v435 ^ 0x49DFBC8F, 16);
  LODWORD(STACK[0x22C]) = v444;
  v445 = v444 ^ v432;
  *(_DWORD *)(v15 - 116) = v445;
  *(_DWORD *)(v15 - 112) = v445 ^ 0x5AB22E83;
  v446 = v445 ^ 0x5AB22E83 ^ v423;
  LODWORD(STACK[0x248]) = v446 ^ 0x1C857FF0;
  v447 = ((v446 ^ 0x1C857FF0u) >> 16);
  LODWORD(STACK[0x230]) = *(_DWORD *)(v390 + 4 * (v447 ^ 0x83u));
  v448 = v446;
  LODWORD(STACK[0x224]) = v446;
  LOWORD(v446) = v446 ^ 0xEDFC;
  v449 = *(_DWORD *)(v381 + 4 * (BYTE1(v446) ^ 0xFu));
  v450 = *(_DWORD *)(v381 + 4 * (v446 ^ 0x91u));
  v451 = ((LODWORD(STACK[0x358]) ^ 0x4DFE3B2A)
        - ((2 * (LODWORD(STACK[0x358]) ^ 0x4DFE3B2A) + 433620246) & 0x84A04E8E)
        + 1329359314) ^ LODWORD(STACK[0x2C4]);
  v452 = (((v451 - ((2 * v451) & 0x9EE95E88) + 1333047108) ^ LODWORD(STACK[0x3E0])) >> 1) ^ 0x4476F63A;
  v453 = *(_DWORD *)(v345 + 4 * (HIBYTE(v448) ^ 0x93));
  v643 = (uint64_t)*(&off_100236540 + *(_DWORD *)(v15 - 104) - 785);
  v454 = v452 - ((2 * v452 - 368397344) & 0x9EE66E02) - 998731535;
  v455 = *(_QWORD **)(v15 - 160);
  v456 = 0xE1555B89EB638139 * *v455;
  v457 = 0xC2AAB713D6C70272 * *v455;
  **(_QWORD **)(v15 - 184) = *v455 ^ 0xE3E3E3E3E3E3E3E3;
  v631 = v455[1];
  v458 = 0xE1555B89EB638139 * v631;
  v459 = 0xE1555B89EB638139 * v631 - ((0xC2AAB713D6C70272 * v631) & 0xAEA6B72A4A218EFALL) + 0x57535B952510C77DLL;
  v460 = ((v456 - (v457 & 0xAEA6B72A4A218EFALL) + 0x57535B952510C77DLL) ^ 0xE096A4D60CCED52BLL)
       + (((v456 - (v457 & 0xAEA6B72A4A218EFALL) + 0x57535B952510C77DLL) ^ 0xE096A4D60CCED52BLL) >> 32);
  v632 = v460 - (v460 >> 16) + ((v460 - (v460 >> 16)) >> 8) + 0x7050919A53098024;
  v461 = v460 - (v460 >> 16) + ((v460 - (v460 >> 16)) >> 8);
  v462 = (v632 ^ v456)
       + ((v632 ^ v456) >> 32)
       - (((v632 ^ v456) + ((v632 ^ v456) >> 32)) >> 16)
       + (((v632 ^ v456) + ((v632 ^ v456) >> 32) - (((v632 ^ v456) + ((v632 ^ v456) >> 32)) >> 16)) >> 8);
  v630[0] = v462 + 1393131556;
  STACK[0x218] = v462;
  v463 = ((v462 + 0x7050919A53098024) ^ v456) + (((v462 + 0x7050919A53098024) ^ v456) >> 32);
  v464 = v463 - (v463 >> 16) + ((v463 - (v463 >> 16)) >> 8);
  STACK[0x210] = v464;
  v624 = v464 - 2 * ((v464 + 0x7050919A53098024) & 0x57535B952510C77FLL ^ v464 & 2) - 0x385C12D087E5B85FLL;
  v465 = (v624 ^ v459) + 1 + (((v624 ^ v459) + 1) >> 32);
  v466 = v465 - (v465 >> 16) + ((v465 - (v465 >> 16)) >> 8);
  v620 = v466 + 1393131556;
  v467 = ((v466 + 0x7050919A53098024) ^ v458) + 1 + ((((v466 + 0x7050919A53098024) ^ v458) + 1) >> 32);
  v468 = v467 - (v467 >> 16) + ((v467 - (v467 >> 16)) >> 8);
  v619 = v468 + 1393131556;
  v469 = ((v468 + 0x7050919A53098024) ^ v458) + 1 + ((((v468 + 0x7050919A53098024) ^ v458) + 1) >> 32);
  v639 = v469 - (v469 >> 16) + ((v469 - (v469 >> 16)) >> 8);
  v640 = v468;
  v470 = v639
       + 0x703D0F516D5A23F3
       + ((v639 + 0x703D0F516D5A23F3) >> 27)
       - ((v639 + 0x703D0F516D5A23F3 + ((v639 + 0x703D0F516D5A23F3) >> 27)) >> 8);
  v471 = v470 - (v470 >> 7);
  v472 = v471
       + 0x26E3500BE510CF2ALL
       - ((v471 + 0x26E3500BE510CF2ALL) >> 30)
       - ((v471 + 0x26E3500BE510CF2ALL - ((v471 + 0x26E3500BE510CF2ALL) >> 30)) >> 14);
  v621 = v472 + (v472 >> 6);
  v473 = v621
       + 0x561700E37DDA3932
       - ((v621 + 0x561700E37DDA3932) >> 25)
       + ((v621 + 0x561700E37DDA3932 - ((v621 + 0x561700E37DDA3932) >> 25)) >> 15);
  v634 = v473 + (v473 >> 2);
  v474 = v634
       - 0x1B84A80A190B2C7
       - ((v634 - 0x1B84A80A190B2C7) >> 27)
       - ((v634 - 0x1B84A80A190B2C7 - ((v634 - 0x1B84A80A190B2C7) >> 27)) >> 15);
  v475 = v474 + (v474 >> 7);
  LODWORD(v471) = v475 ^ v471;
  v476 = v475
       - 0x2A76F947D80616C1
       + ((v475 - 0x2A76F947D80616C1) >> 26)
       + ((v475 - 0x2A76F947D80616C1 + ((v475 - 0x2A76F947D80616C1) >> 26)) >> 15);
  v615 = v476 - (v476 >> 5);
  v477 = (v615 ^ 0x7F105AF8C49B3E75)
       + ((v615 ^ 0x7F105AF8C49B3E75) >> 31)
       - (((v615 ^ 0x7F105AF8C49B3E75) + ((v615 ^ 0x7F105AF8C49B3E75) >> 31)) >> 8);
  v623 = v477 - (v477 >> 6);
  v478 = (v623 ^ 0xBC81AFEFCCA45631)
       - ((v623 ^ 0xBC81AFEFCCA45631) >> 25)
       + (((v623 ^ 0xBC81AFEFCCA45631) - ((v623 ^ 0xBC81AFEFCCA45631) >> 25)) >> 11);
  v613 = v478 - (v478 >> 2);
  *(_QWORD *)(v15 - 160) = v461;
  v608 = 2 * v461;
  v638 = v466;
  v611 = 2 * v466;
  *(_DWORD *)(v15 - 248) = v454;
  LODWORD(v459) = v462 ^ (v461 - ((2 * v461) & 0x79E15B42) + 1022406049) ^ v464 ^ (v466
                                                                                 - ((2 * v466) & 0x79E15B42)
                                                                                 + 1022406049) ^ v468 ^ v639 ^ v454 ^ ((v471 ^ v613) - ((2 * (v471 ^ v613)) & 0x79E15B42) + 1022406049);
  *(_DWORD *)(v15 - 108) = v459;
  v479 = ((v456 - (v457 & 0xD088CEBC40D59EC6) + 0x6844675E206ACF63) ^ 0xDF81981D09B4DD35)
       + (((v456 - (v457 & 0xD088CEBC40D59EC6) + 0x6844675E206ACF63) ^ 0xDF81981D09B4DD35) >> 32);
  v480 = v479 - (v479 >> 16) + ((v479 - (v479 >> 16)) >> 8);
  v628 = v480 + 1393131556;
  v481 = ((v480 + 0x7050919A53098024) ^ v456) + (((v480 + 0x7050919A53098024) ^ v456) >> 32);
  v482 = v481 - (v481 >> 16) + ((v481 - (v481 >> 16)) >> 8);
  v626 = v482 + 1393131556;
  v483 = ((v482 + 0x7050919A53098024) ^ v456) + (((v482 + 0x7050919A53098024) ^ v456) >> 32);
  v635 = v483 - (v483 >> 16) + ((v483 - (v483 >> 16)) >> 8);
  v636 = v482;
  v484 = ((v635 - ((2 * v635 - 0x1F5EDCCB59ECFFB8) & 0xD088CEBC40D59EC6) - 0x276B07078C8BB079) ^ (0xE1555B89EB638139 * v631 - ((0xC2AAB713D6C70272 * v631) & 0xD088CEBC40D59EC6) + 0x6844675E206ACF63))
       + 1;
  v485 = v484 + HIDWORD(v484) - ((v484 + HIDWORD(v484)) >> 16);
  v486 = v485 + (v485 >> 8);
  v617 = v486 + 1393131556;
  v487 = ((v486 + 0x7050919A53098024) ^ v458) + 1 + ((((v486 + 0x7050919A53098024) ^ v458) + 1) >> 32);
  v488 = v487 - (v487 >> 16) + ((v487 - (v487 >> 16)) >> 8);
  v616 = v488 + 1393131556;
  LODWORD(v462) = v488;
  v627 = v488;
  v489 = ((v488 + 0x7050919A53098024) ^ v458) + 1 + ((((v488 + 0x7050919A53098024) ^ v458) + 1) >> 32);
  v622 = v489 - (v489 >> 16) + ((v489 - (v489 >> 16)) >> 8);
  v490 = v622
       + 0x703D0F516D5A23F3
       + ((v622 + 0x703D0F516D5A23F3) >> 27)
       - ((v622 + 0x703D0F516D5A23F3 + ((v622 + 0x703D0F516D5A23F3) >> 27)) >> 8);
  v491 = v490 - (v490 >> 7);
  v492 = v491
       + 0x26E3500BE510CF2ALL
       - ((v491 + 0x26E3500BE510CF2ALL) >> 30)
       - ((v491 + 0x26E3500BE510CF2ALL - ((v491 + 0x26E3500BE510CF2ALL) >> 30)) >> 14);
  v618 = v492 + (v492 >> 6);
  v493 = v618
       + 0x561700E37DDA3932
       - ((v618 + 0x561700E37DDA3932) >> 25)
       + ((v618 + 0x561700E37DDA3932 - ((v618 + 0x561700E37DDA3932) >> 25)) >> 15);
  v633 = v493 + (v493 >> 2);
  v494 = v633
       - 0x1B84A80A190B2C7
       - ((v633 - 0x1B84A80A190B2C7) >> 27)
       - ((v633 - 0x1B84A80A190B2C7 - ((v633 - 0x1B84A80A190B2C7) >> 27)) >> 15);
  v495 = v494 + (v494 >> 7);
  LODWORD(v491) = v495 ^ v491;
  v496 = v495
       - 0x2A76F947D80616C1
       + ((v495 - 0x2A76F947D80616C1) >> 26)
       + ((v495 - 0x2A76F947D80616C1 + ((v495 - 0x2A76F947D80616C1) >> 26)) >> 15);
  v614 = v496 - (v496 >> 5);
  v497 = (v614 ^ 0x7F105AF8C49B3E75)
       + ((v614 ^ 0x7F105AF8C49B3E75) >> 31)
       - (((v614 ^ 0x7F105AF8C49B3E75) + ((v614 ^ 0x7F105AF8C49B3E75) >> 31)) >> 8);
  v625 = v497 - (v497 >> 6);
  v498 = (v625 ^ 0xBC81AFEFCCA45631)
       - ((v625 ^ 0xBC81AFEFCCA45631) >> 25)
       + (((v625 ^ 0xBC81AFEFCCA45631) - ((v625 ^ 0xBC81AFEFCCA45631) >> 25)) >> 11);
  v612 = v498 - (v498 >> 2);
  v637 = v480;
  v609 = 2 * v480;
  v629 = v486;
  v610 = 2 * v486;
  LODWORD(v480) = v482 ^ (v480 - ((2 * v480) & 0x7256AA02) + 959141121) ^ v635 ^ (v486
                                                                                - ((2 * v486) & 0x7256AA02)
                                                                                + 959141121) ^ v462 ^ v622 ^ v454 ^ ((v491 ^ v612) - ((2 * (v491 ^ v612)) & 0x7256AA02) + 959141121);
  LODWORD(STACK[0x258]) = v480;
  LODWORD(STACK[0x298]) = v459 ^ 0x62E534A;
  v641 = (v459 ^ 0x62E534A) & 0xFE ^ 0xA8;
  LODWORD(v480) = v480 ^ 0xEDE154EA;
  LODWORD(STACK[0x290]) = v480;
  v642 = v480 & 0xFE ^ 0xA8;
  LODWORD(STACK[0x2C8]) = (LODWORD(STACK[0x3D8]) ^ 0x35191211) + 1736063529 * (v641 - v642);
  v499 = LODWORD(STACK[0x234]) ^ 0x5AB22E83;
  HIDWORD(v501) = LODWORD(STACK[0x230]) ^ ((v447 ^ 0xD7C829D1)
                                         + (v447 ^ 0x33)
                                         + 1
                                         - ((2 * ((v447 ^ 0xD7C829D1) + (v447 ^ 0x33) + 1)) & 0xC6909434)
                                         + 1665681946) ^ 0x49DFBC8F;
  LODWORD(v501) = HIDWORD(v501);
  v500 = v501 >> 16;
  v502 = LODWORD(STACK[0x22C]) ^ 0x6EDFBC8F;
  v503 = v502 & 1;
  if ((BYTE6(v501) & v502 & 1) != 0)
    v503 = -v503;
  v504 = v450 ^ 0x633C042F ^ ((v450 ^ 0x633C042Fu) >> 5) ^ ((v450 ^ 0x633C042Fu) >> 2) ^ __ROR4__(v449 ^ ((v449 ^ 0x633C042Fu) >> 5) ^ ((v449 ^ 0x633C042Fu) >> 2) ^ 0x72ACAD5C, 24) ^ __ROR4__(v453 ^ (16 * v453) & 0x36A63620 ^ 0xF827F590, 8) ^ v502 & 0xFFFFFFFE ^ (v503 + v500);
  v505 = *(_DWORD *)(v15 - 116) ^ v504 ^ 0x6EDFBC8F;
  v506 = STACK[0x238];
  v507 = LODWORD(STACK[0x238]) ^ *(_DWORD *)(v15 - 112) ^ 0x1C857FF0;
  v508 = LODWORD(STACK[0x27C]) - ((2 * LODWORD(STACK[0x27C])) & 0xC2AB1C02);
  v509 = LODWORD(STACK[0x3B8]) - 2 * (STACK[0x3B8] & 0x61558E0D ^ STACK[0x3C8] & 0xC);
  v510 = *(_DWORD *)(v15 - 220);
  LODWORD(STACK[0x3B8]) = (v510 ^ (v508 + 1632996865)) - ((2 * (v510 ^ (v508 + 1632996865))) & 0xC3A2226);
  LODWORD(STACK[0x27C]) = (v510 ^ (v509 + 1632996865)) - ((2 * (v510 ^ (v509 + 1632996865))) & 0xC3A2226);
  v511 = LODWORD(STACK[0x2B8]) - ((2 * LODWORD(STACK[0x2B8])) & 0xC2AB1C02);
  v512 = (LODWORD(STACK[0x348]) ^ LODWORD(STACK[0x2B0]))
       - ((2 * (LODWORD(STACK[0x348]) ^ LODWORD(STACK[0x2B0]))) & 0x7DEF0318);
  v513 = LODWORD(STACK[0x274]) - 2 * (STACK[0x274] & 0x69EA961F ^ STACK[0x270] & 6);
  v514 = LODWORD(STACK[0x288]) - 2 * (STACK[0x288] & 0x69EA961B ^ STACK[0x2A8] & 2);
  v515 = LODWORD(STACK[0x278]) - ((2 * LODWORD(STACK[0x278])) & 0xD3D52C32);
  v516 = *(_DWORD *)(v15 - 164);
  LODWORD(STACK[0x348]) = ((v512 + 1056407948) ^ v516) - ((2 * ((v512 + 1056407948) ^ v516)) & 0xC2AB1C02);
  v517 = LODWORD(STACK[0x228]) - ((2 * LODWORD(STACK[0x228])) & 0x12720F16);
  v518 = *(_DWORD *)(v15 - 212);
  LODWORD(STACK[0x3B0]) = ((v513 + 1776981529) ^ v518) - ((2 * ((v513 + 1776981529) ^ v518)) & 0x65589F04);
  v519 = ((v515 + 1776981529) ^ v518) - ((2 * ((v515 + 1776981529) ^ v518)) & 0x65589F04);
  v520 = LODWORD(STACK[0x24C]) ^ LODWORD(STACK[0x254]);
  v521 = LODWORD(STACK[0x254]) - ((2 * LODWORD(STACK[0x254])) & 0x12720F16);
  v522 = LODWORD(STACK[0x280]) - ((2 * LODWORD(STACK[0x280])) & 0x12720F16);
  v523 = LODWORD(STACK[0x23C]) - ((2 * LODWORD(STACK[0x23C])) & 0xA9AAF1E6);
  v524 = LODWORD(STACK[0x284]) - ((2 * LODWORD(STACK[0x284])) & 0x65589F04);
  v525 = (LODWORD(STACK[0x268]) - ((2 * LODWORD(STACK[0x268])) & 0x7DEF0318) + 1056407948) ^ v516;
  LODWORD(STACK[0x2B0]) = v525 - ((2 * v525) & 0xC2AB1C02);
  LODWORD(STACK[0x3C8]) = ((v511 + 1632996865) ^ v510) + (~(2 * ((v511 + 1632996865) ^ v510)) | 0x8210FCE7);
  v526 = *(_DWORD *)(v15 - 192);
  LODWORD(STACK[0x2B8]) = ((v524 + 850153346) ^ v526) - ((2 * ((v524 + 850153346) ^ v526)) & 0xD3D52C32);
  v527 = v499 - ((2 * v499) & 0x12720F16);
  v528 = *(_DWORD *)(v15 - 252);
  v529 = v528 & 2;
  if ((v506 & v528 & 2) != 0)
    v529 = -v529;
  v530 = LODWORD(STACK[0x244]) - ((2 * LODWORD(STACK[0x244])) & 0x379C4FA6);
  LODWORD(STACK[0x288]) = ((v514 + 1776981529) ^ v518) - ((2 * ((v514 + 1776981529) ^ v518)) & 0x65589F04);
  v531 = *(_DWORD *)(v15 - 204);
  v532 = (LODWORD(STACK[0x240]) - ((2 * LODWORD(STACK[0x240])) & 0x379C4FA6) + 466495443) ^ v531;
  LODWORD(STACK[0x2A8]) = v532 - ((2 * v532) & 0xA9AAF1E6);
  v533 = STACK[0x394];
  LODWORD(STACK[0x280]) = ((v527 + 154732427) ^ LODWORD(STACK[0x394]))
                        - ((2 * ((v527 + 154732427) ^ LODWORD(STACK[0x394]))) & 0x7C1BF384);
  LODWORD(STACK[0x284]) = ((v522 + 154732427) ^ v533) - ((2 * ((v522 + 154732427) ^ v533)) & 0x7C1BF384);
  v534 = *(_DWORD *)(v15 - 112) - 2 * (*(_DWORD *)(v15 - 112) & 0x61558E15 ^ *(_DWORD *)(v15 - 116) & 0x14);
  *(_DWORD *)(v15 - 112) = ((v529 + v520) ^ v528 & 0xFFFFFFFD ^ 0xC9B15C21)
                         - 2
                         * (((v529 + v520) ^ v528 & 0xFFFFFFFD ^ 0xC9B15C21) & 0x1BCE27DB ^ ((v529 + v520) ^ v528 & 0xFFFFFFFD) & 8);
  v535 = v502 - ((2 * v502) & 0xC2AB1C02);
  LODWORD(STACK[0x270]) = ((v517 + 154732427) ^ v533) - ((2 * ((v517 + 154732427) ^ v533)) & 0x7C1BF384);
  v536 = *(_DWORD *)(v15 - 256);
  LODWORD(STACK[0x274]) = ((v523 + 1423276275) ^ v536) - ((2 * ((v523 + 1423276275) ^ v536)) & 0x379C4FA6);
  v537 = v504 - ((2 * v504) & 0xA9AAF1E6);
  *(_DWORD *)(v15 - 116) = ((v535 + 1632996865) ^ v510) - ((2 * ((v535 + 1632996865) ^ v510)) & 0x7C1BF384);
  v538 = STACK[0x248];
  v539 = STACK[0x248] & 0x61558E0B ^ STACK[0x224] & 0xA;
  v540 = (v507 - ((2 * v507) & 0xC2AB1C02) + 1632996865) ^ v510;
  LODWORD(STACK[0x278]) = v540 - ((2 * v540) & 0x7C1BF384);
  v541 = v505 ^ v507;
  v542 = (v541 ^ v538) - ((2 * (v541 ^ v538)) & 0x405A95C4);
  v543 = ((v537 + 1423276275) ^ v536) - ((2 * ((v537 + 1423276275) ^ v536)) & 0x405A95C4);
  v544 = ((v538 - 2 * v539 + 1632996865) ^ v510) - ((2 * ((v538 - 2 * v539 + 1632996865) ^ v510)) & 0x7C1BF384);
  v545 = (v541 - ((2 * v541) & 0x65589F04) + 850153346) ^ v526;
  v546 = v545 - ((2 * v545) & 0xA9AAF1E6);
  v547 = ((v534 + 1632996865) ^ v510) - ((2 * ((v534 + 1632996865) ^ v510)) & 0x7C1BF384);
  v548 = (v505 - ((2 * v505) & 0xA9AAF1E6) + 1423276275) ^ v536;
  v549 = *(_DWORD *)(v15 - 188);
  v550 = (v548 - ((2 * v548) & 0x405A95C4) + 539839202) ^ v549;
  v551 = v550 - ((2 * v550) & 0x65589F04);
  v552 = ((v543 + 539839202) ^ v549) - ((2 * ((v543 + 539839202) ^ v549)) & 0x65589F04);
  v553 = v549;
  v554 = ((v542 + 539839202) ^ v549) - ((2 * ((v542 + 539839202) ^ v549)) & 0xA9AAF1E6);
  v555 = v536;
  v556 = ((v546 + 1423276275) ^ v555) - ((2 * ((v546 + 1423276275) ^ v555)) & 0x405A95C4);
  v557 = ((v554 + 1423276275) ^ v555) - ((2 * ((v554 + 1423276275) ^ v555)) & 0x65589F04);
  v558 = (v519 + 850153346) ^ v526;
  v559 = STACK[0x3EC];
  v560 = (((v521 + 154732427) ^ v533) - ((2 * ((v521 + 154732427) ^ v533)) & 0x7C1BF384) + 1041103298) ^ LODWORD(STACK[0x3EC]);
  v561 = (((v530 + 466495443) ^ v531) - ((2 * ((v530 + 466495443) ^ v531)) & 0xA9AAF1E6) + 1423276275) ^ v536;
  v562 = (v558 ^ 0x1215F598) - (v643 - 105649438) + (v560 ^ 0xAA67ED36) + (v561 ^ 0x1A2F3D5E) + 1;
  LODWORD(STACK[0x3D8]) = v562;
  v563 = (v562 & 1) == 0;
  LODWORD(STACK[0x268]) = v526 ^ (LODWORD(STACK[0x3B0]) + 850153346) ^ 0xC30EEC07;
  v564 = LODWORD(STACK[0x288]) + 850153346;
  LODWORD(STACK[0x2B0]) = v558 ^ 0xCE39BD74;
  LODWORD(STACK[0x264]) = v526 ^ v564 ^ 0xCE39BD74;
  LODWORD(STACK[0x288]) = v518 ^ (LODWORD(STACK[0x2B8]) + 1776981529) ^ 0xC0D15088;
  v565 = LODWORD(STACK[0x280]) + 1041103298;
  LODWORD(STACK[0x250]) = v560 ^ 0x30A9639E;
  v566 = v559;
  LODWORD(STACK[0x24C]) = v559 ^ v565 ^ 0x30A9639E;
  LODWORD(STACK[0x248]) = v559 ^ (LODWORD(STACK[0x270]) + 1041103298) ^ 0x6A1B4D1D;
  LODWORD(STACK[0x244]) = v559 ^ (LODWORD(STACK[0x284]) + 1041103298) ^ 0x81418E62;
  v567 = v528 ^ (LODWORD(STACK[0x2A8]) + 1423276275) ^ 0x84D151FD;
  v568 = v531 ^ (LODWORD(STACK[0x274]) + 466495443) ^ 0x43075BAC;
  v569 = v561 ^ 0x19B5752F;
  v570 = v531 ^ (*(_DWORD *)(v15 - 112) + 466495443) ^ 0x19B5752F;
  if (v563)
    v571 = v528 ^ (LODWORD(STACK[0x2A8]) + 1423276275) ^ 0x84D151FD;
  else
    v571 = v531 ^ (LODWORD(STACK[0x274]) + 466495443) ^ 0x43075BAC;
  LODWORD(STACK[0x240]) = v571;
  if (v563)
    v572 = v570;
  else
    v572 = v567;
  LODWORD(STACK[0x23C]) = v572;
  if (v563)
    v573 = v569;
  else
    v573 = v570;
  LODWORD(STACK[0x238]) = v573;
  if (v563)
    v574 = v568;
  else
    v574 = v569;
  LODWORD(STACK[0x234]) = v574;
  v575 = v566 ^ (*(_DWORD *)(v15 - 116) + 1041103298) ^ 0x2F1B272B;
  v576 = v566 ^ 0xB61B272B ^ (LODWORD(STACK[0x278]) + 1041103298);
  if (v563)
    v577 = v566 ^ (v547 + 1041103298) ^ 0x1B76B527;
  else
    v577 = v566 ^ (*(_DWORD *)(v15 - 116) + 1041103298) ^ 0x2F1B272B;
  LODWORD(STACK[0x274]) = v577;
  if (v563)
    v578 = v576;
  else
    v578 = v566 ^ (v547 + 1041103298) ^ 0x1B76B527;
  LODWORD(STACK[0x284]) = v578;
  if (v563)
    v579 = v566 ^ 0xB61B272B ^ (v544 + 1041103298);
  else
    v579 = v576;
  LODWORD(STACK[0x270]) = v579;
  if (v563)
    v580 = v575;
  else
    v580 = v566 ^ 0xB61B272B ^ (v544 + 1041103298);
  LODWORD(STACK[0x280]) = v580;
  LODWORD(STACK[0x230]) = v553 ^ (v556 + 539839202) ^ 0xD0F83C61;
  LODWORD(STACK[0x22C]) = v526 ^ 0xD0F83C61 ^ (v551 + 850153346);
  LODWORD(STACK[0x228]) = v526 ^ 0xD0F83C61 ^ (v557 + 850153346);
  LODWORD(STACK[0x224]) = v526 ^ (v552 + 850153346) ^ 0x49F83C61;
  v581 = 2
       * ((((LODWORD(STACK[0x2D0]) ^ 0x4F74AF44)
          - ((2 * (LODWORD(STACK[0x2D0]) ^ 0x4F74AF44) + 137065922) & 0xCD1FB36)
          + 41859196) ^ LODWORD(STACK[0x3E4]))
        + (LODWORD(STACK[0x3E8]) ^ 0x308B50BB))
       + 513891680;
  v582 = (*(_DWORD *)(v15 - 176) ^ 0x16C78E0F)
       + (((LODWORD(STACK[0x314]) ^ 0x4D3EF74E)
         - ((2 * (LODWORD(STACK[0x314]) ^ 0x4D3EF74E) - 126329240) & 0x84A04E8E)
         + 1049384571) ^ LODWORD(STACK[0x2F0]))
       + 567524993;
  *(_QWORD *)(*(_QWORD *)(v15 - 184) + 8) = v631 ^ 0xE3E3E3E3E3E3E3E3;
  v583 = (v613 ^ 0xC1C06062A92B63ADLL)
       - ((v613 ^ 0xC1C06062A92B63ADLL) >> 28)
       + (((v613 ^ 0xC1C06062A92B63ADLL) - ((v613 ^ 0xC1C06062A92B63ADLL) >> 28)) >> 11);
  v584 = v583 + (v583 >> 2);
  v585 = (STACK[0x218] + 696565778) ^ (*(_QWORD *)(v15 - 160) - ((v608 + 1393131556) & 0x9537296A) + 1948275911) ^ (STACK[0x210] + 696565778) ^ (v638 - ((v611 + 1393131556) & 0x9537296A) + 1948275911) ^ v581;
  LODWORD(STACK[0x3B8]) = v581;
  v586 = v585 ^ (v640 + 696565778) ^ (v639 + 696565778) ^ ((v615 ^ v621 ^ v584)
                                                         - ((2 * (v615 ^ v621 ^ v584)) & 0x9537296A)
                                                         + 1251710133);
  v587 = (v584 ^ 0xA022336AE14A15E7)
       - ((v584 ^ 0xA022336AE14A15E7) >> 31)
       - (((v584 ^ 0xA022336AE14A15E7) - ((v584 ^ 0xA022336AE14A15E7) >> 31)) >> 13);
  LODWORD(v587) = v623 ^ v634 ^ ((v587 >> 5) + v587);
  v588 = (((*(_DWORD *)(v15 - 108) ^ 0x32A6B54B) - LODWORD(STACK[0x298])) ^ 0xFFFFFFFE)
       + (*(_DWORD *)(v15 - 108) ^ 0x32A6B54B);
  LODWORD(STACK[0x27C]) = v588;
  LODWORD(STACK[0x278]) = v586 ^ 0xEAF5FFA2;
  LODWORD(STACK[0x2B8]) = 16843009
                        * (v588 ^ 0x81 ^ ((unsigned __int16)(v588 ^ 0xBA81) >> 8) ^ ((v588 ^ 0x52C3BA81) >> 16) ^ HIBYTE(v588) ^ 0xEF);
  v589 = (v612 ^ 0xC1C06062A92B63ADLL)
       - ((v612 ^ 0xC1C06062A92B63ADLL) >> 28)
       + (((v612 ^ 0xC1C06062A92B63ADLL) - ((v612 ^ 0xC1C06062A92B63ADLL) >> 28)) >> 11);
  v590 = v589 + (v589 >> 2);
  v591 = (v636 + 696565778) ^ (v637 - ((v609 + 1393131556) & 0xE36182CE) - 1690992263) ^ (v635 + 696565778) ^ v581 ^ (v629 - ((v610 + 1393131556) & 0xE36182CE) - 1690992263) ^ (v627 + 696565778) ^ (v622 + 696565778) ^ ((v614 ^ v618 ^ v590) - ((2 * (v614 ^ v618 ^ v590)) & 0xE36182CE) + 1907409255);
  v592 = (v590 ^ 0xA022336AE14A15E7)
       - ((v590 ^ 0xA022336AE14A15E7) >> 31)
       - (((v590 ^ 0xA022336AE14A15E7) - ((v590 ^ 0xA022336AE14A15E7) >> 31)) >> 13);
  LODWORD(v592) = v625 ^ v633 ^ ((v592 >> 5) + v592);
  LODWORD(v584) = (v582 >> 1) - 1253610581;
  LODWORD(STACK[0x3B0]) = v584;
  v593 = STACK[0x258];
  v594 = 16843009
       * (LOBYTE(STACK[0x258]) ^ 0x6B ^ ((unsigned __int16)(LOWORD(STACK[0x258]) ^ 0xEE6B) >> 8) ^ ((LODWORD(STACK[0x258]) ^ 0xBF22EE6B) >> 16) ^ HIBYTE(LODWORD(STACK[0x258])) ^ 0xDC);
  v595 = 16843009
       * (v591 ^ 0x64 ^ ((unsigned __int16)(v591 ^ 0x8864) >> 8) ^ ((v591 ^ 0xB6138864) >> 16) ^ HIBYTE(v591) ^ 0xFA);
  LODWORD(STACK[0x3C8]) = v595;
  LODWORD(STACK[0x2A8]) = v594;
  LODWORD(STACK[0x218]) = v594 ^ v595 ^ 0x2F2F2F2F;
  v596 = 16843009 * v641 - ((33686018 * v641) & 0x10991244) + 139233571;
  LODWORD(STACK[0x348]) = v596 ^ 0x84C8923;
  v597 = ((LOBYTE(v630[0]) ^ (v632 - ((2 * v632) & 0xC2) + 97) ^ v624 ^ (v620 - ((2 * v620) & 0xC2) + 97) ^ v619 ^ (v639 - ((2 * v639 + 72) & 0xFA) - 95) ^ (v587 - ((2 * v587) & 0xC2) + 97) ^ v584) ^ 0x8F) & 7 ^ 1;
  LODWORD(STACK[0x254]) = v630[0] ^ (v632 - ((2 * v632) & 0xF36CE2C2) + 2041999713) ^ v624 ^ (v620
                                                                                            - ((2 * v620) & 0xF36CE2C2)
                                                                                            + 2041999713) ^ v619 ^ (v639 - ((2 * v639 + 638779464) & 0x4A218EFA) + 2014988193) ^ (v587 - ((2 * v587) & 0xF36CE2C2) + 2041999713) ^ v584 ^ 0xE30AFE8F;
  LODWORD(STACK[0x210]) = v626 ^ (v628 - ((2 * v628) & 0xE147A30C) + 1889784198) ^ (v635
                                                                                  - ((2 * v635 - 1508704184) & 0x40D59EC6)
                                                                                  + 1937002375) ^ (v617
                                                                                                 - ((2 * v617) & 0xE147A30C)
                                                                                                 + 1889784198) ^ v616 ^ v584 ^ (v622 - ((2 * v622 + 638779464) & 0x40D59EC6) + 1937002375) ^ (v592 - ((2 * v592) & 0xE147A30C) + 1889784198);
  v598 = ((v626 ^ (v628 - ((2 * v628) & 0xC) - 122) ^ (v635 - ((2 * v635 + 72) & 0xC6) - 121) ^ (v617 - ((2 * v617) & 0xC) - 122) ^ v616 ^ v584 ^ (v622 - ((2 * v622 + 72) & 0xC6) - 121)) ^ (v592 - ((2 * v592) & 0xC) - 122)) & 7 ^ 1;
  *(_DWORD *)(v15 - 160) = v598;
  v599 = -v597 & 7;
  *(_DWORD *)(v15 - 196) = v596 >> 1;
  LODWORD(v587) = 16843009 * v642 - ((33686018 * v642) & 0x18A9D940) + 206892192;
  *(_DWORD *)(v15 - 216) = v587 >> 1;
  LODWORD(STACK[0x2A4]) = v587;
  LODWORD(STACK[0x334]) = v587 ^ 0xC54ECA0;
  if (v563)
    v600 = STACK[0x268];
  else
    v600 = STACK[0x264];
  LODWORD(STACK[0x26C]) = v600;
  v601 = LODWORD(STACK[0x3D8]) + 3;
  v602 = STACK[0x24C];
  if (!v563)
    v602 = STACK[0x248];
  LODWORD(STACK[0x268]) = v602;
  v603 = STACK[0x250];
  if (v563)
    v603 = STACK[0x244];
  LODWORD(STACK[0x264]) = v603;
  LODWORD(STACK[0x3AC]) = v601;
  *(_DWORD *)(v15 - 176) = v597;
  if (v597)
    v604 = 255;
  else
    v604 = 0;
  *(_DWORD *)(v15 - 116) = -v598 & 7;
  *(_DWORD *)(v15 - 112) = v599;
  v605 = v604 << v599;
  if (v597)
    v606 = ~(_BYTE)v605;
  else
    v606 = 0;
  *(_DWORD *)(v15 - 152) = (STACK[0x27C] & v606) ^ (16843009 * v605);
  LODWORD(STACK[0x210]) = (2 * LODWORD(STACK[0x210])) & 4;
  LODWORD(STACK[0x2C4]) = -1682238369 * (v593 ^ 0x377D4D43);
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 - 96) + 8 * *(int *)(v15 - 104)) - 4))(0, 2406891694);
}

uint64_t sub_100119038(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL4 v11;

  v9 = v5 + a1 + 2;
  v11 = v9 <= v5 || v9 >= v7;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v8 - 96) + 8 * ((v11 * v6) ^ a5)) - 4))((a1 + 1));
}

uint64_t sub_100119220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20,uint64_t a21,int a22,int a23,int a24,int a25,uint64_t a26,int a27,int a28,int a29,int a30,int a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,uint64_t a46,int a47,int a48,int a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  char a82;
  int v82;
  uint64_t v83;
  int v85;
  int v88;
  BOOL v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  BOOL v100;
  int v101;
  int v102;
  int v103;
  uint64_t (*v104)(uint64_t);
  int v105;
  int v106;

  if ((a82 & 1) != 0)
  {
    v85 = a76;
  }
  else
  {
    a81 = a80;
    v85 = *(_DWORD *)(v83 - 148);
  }
  if ((a82 & 1) != 0)
    a75 = a74;
  if ((a82 & 1) != 0)
    a77 = a79;
  LODWORD(STACK[0x210]) = a10 - LODWORD(STACK[0x210]);
  *(_DWORD *)(v83 - 148) = a13 - a14;
  LODWORD(STACK[0x2E0]) = a45 + a12 - a28;
  v88 = a31 ^ a16 ^ a18 ^ a73 ^ LODWORD(STACK[0x2C4]) ^ a47 ^ (-1682238369 * a32);
  v89 = *(_DWORD *)(v83 - 232) == 0;
  v90 = *(_DWORD *)(v83 - 236);
  if (*(_DWORD *)(v83 - 232))
    v90 = STACK[0x3D4];
  LODWORD(STACK[0x2DC]) = v90;
  v91 = STACK[0x3C4];
  if (v89)
    v91 = STACK[0x2EC];
  LODWORD(STACK[0x3D4]) = v91;
  v92 = STACK[0x2E8];
  if (!v89)
    v92 = STACK[0x2E4];
  *(_DWORD *)(v83 - 236) = v92;
  if (v89)
    v93 = a78;
  else
    v93 = a81;
  if (!v89)
    a81 = a78;
  LODWORD(STACK[0x2C4]) = a81;
  v94 = STACK[0x2F8];
  if (!v89)
    v94 = v85;
  LODWORD(STACK[0x2EC]) = v94;
  if (v89)
    v95 = a75;
  else
    v95 = a77;
  LODWORD(STACK[0x218]) = v95;
  v96 = *(_DWORD *)(v83 - 164) ^ 0x3BE3E95A ^ (a19 - a20);
  if ((STACK[0x3D8] & 1) == 0)
    v96 = a52;
  v97 = STACK[0x288];
  if ((STACK[0x3D8] & 1) != 0)
  {
    v97 = STACK[0x2B0];
    v98 = STACK[0x24C];
  }
  else
  {
    v98 = STACK[0x250];
  }
  if ((STACK[0x3D8] & 1) != 0)
    v99 = STACK[0x244];
  else
    v99 = STACK[0x248];
  v100 = (STACK[0x3AC] & 2) == 0;
  if ((STACK[0x3AC] & 2) != 0)
    v96 = a60;
  LODWORD(STACK[0x250]) = v96;
  v101 = STACK[0x23C];
  if (v100)
    v101 = STACK[0x234];
  LODWORD(STACK[0x23C]) = v101;
  v102 = STACK[0x240];
  if (!v100)
    v102 = STACK[0x238];
  LODWORD(STACK[0x244]) = v102;
  v103 = a41 ^ *(_DWORD *)(v83 - 176) ^ *(_DWORD *)(v83 - 160) ^ (a49 - 2 * a57);
  LODWORD(STACK[0x3C4]) = 848219007 * a22;
  LODWORD(STACK[0x240]) = v103 + a30;
  LODWORD(STACK[0x2B0]) = a29 + (v93 ^ 0x35191211);
  LODWORD(STACK[0x238]) = v88 ^ 0x5273B9ED;
  *(_DWORD *)(v83 - 104) = (v82 + 1531105011) & 0xA4BD3A37;
  LODWORD(STACK[0x2E8]) = a27 + a11 + a25 + 1;
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x3C8]) ^ 0x4C4C4C4C;
  v104 = (uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v83 - 96) + 8 * v82) - 8);
  v105 = STACK[0x26C];
  if (v100)
    v105 = v97;
  LODWORD(STACK[0x24C]) = v105;
  LODWORD(STACK[0x22C]) = v98;
  if (v100)
    v106 = v98;
  else
    v106 = v99;
  LODWORD(STACK[0x248]) = v106;
  return v104(8172);
}

uint64_t sub_1001197DC@<X0>(_QWORD *a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, int a19, int a20,uint64_t a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,int a31,int a32,int a33,int a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,uint64_t a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  int a67;
  int v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  BOOL v106;
  int v108;
  int v109;
  BOOL v111;
  int v113;
  int v114;
  unint64_t v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  uint64_t v119;
  int v120;
  uint64_t (*v121)(uint64_t);
  int v122;
  unint64_t v124;
  unint64_t v125;

  v73 = a34 ^ (a2 - v67);
  LODWORD(STACK[0x2D0]) = a32 ^ *(_DWORD *)(v72 - 148);
  LODWORD(STACK[0x3C4]) += a18;
  v74 = a17 + a24;
  *(_DWORD *)(v72 - 148) = LODWORD(STACK[0x258]) ^ a22;
  v75 = a26 ^ a20 ^ a16 ^ a28 ^ (2 * a28);
  v76 = v69
      + 0x703D0F516D5A23F3
      + ((unint64_t)(v69 + 0x703D0F516D5A23F3) >> 27)
      - ((v69 + 0x703D0F516D5A23F3 + ((unint64_t)(v69 + 0x703D0F516D5A23F3) >> 27)) >> 8);
  v77 = v76
      - (v76 >> 7)
      + 0x26E3500BE510CF2ALL
      - ((v76 - (v76 >> 7) + 0x26E3500BE510CF2ALL) >> 30)
      - ((v76 - (v76 >> 7) + 0x26E3500BE510CF2ALL - ((v76 - (v76 >> 7) + 0x26E3500BE510CF2ALL) >> 30)) >> 14);
  v125 = v77 + (v77 >> 6);
  v78 = (((v125 + 0x561700E37DDA3932 - ((v125 + 0x561700E37DDA3932) >> 25)) >> 15) ^ (v125
                                                                                        + 0x561700E37DDA3932
                                                                                        - ((v125 + 0x561700E37DDA3932) >> 25)))
      + 2
      * (((v125 + 0x561700E37DDA3932 - ((v125 + 0x561700E37DDA3932) >> 25)) >> 15) & (v125
                                                                                        + 0x561700E37DDA3932
                                                                                        - ((v125 + 0x561700E37DDA3932) >> 25)));
  v79 = v78
      + (v78 >> 2)
      - 0x1B84A80A190B2C7
      - ((v78 + (v78 >> 2) - 0x1B84A80A190B2C7) >> 27)
      - ((v78 + (v78 >> 2) - 0x1B84A80A190B2C7 - ((v78 + (v78 >> 2) - 0x1B84A80A190B2C7) >> 27)) >> 15);
  v80 = v79
      + (v79 >> 7)
      - 0x2A76F947D80616C1
      + ((v79 + (v79 >> 7) - 0x2A76F947D80616C1) >> 26)
      + ((v79 + (v79 >> 7) - 0x2A76F947D80616C1 + ((v79 + (v79 >> 7) - 0x2A76F947D80616C1) >> 26)) >> 15);
  v124 = v80 - (v80 >> 5);
  v81 = (v124 ^ 0x7F105AF8C49B3E75)
      + ((v124 ^ 0x7F105AF8C49B3E75) >> 31)
      - (((v124 ^ 0x7F105AF8C49B3E75) + ((v124 ^ 0x7F105AF8C49B3E75) >> 31)) >> 8);
  v82 = ((v81 - (v81 >> 6)) ^ 0xBC81AFEFCCA45631)
      - (((v81 - (v81 >> 6)) ^ 0xBC81AFEFCCA45631) >> 25)
      + ((((v81 - (v81 >> 6)) ^ 0xBC81AFEFCCA45631) - (((v81 - (v81 >> 6)) ^ 0xBC81AFEFCCA45631) >> 25)) >> 11);
  v83 = v82 - (v82 >> 2);
  LODWORD(STACK[0x230]) = v73;
  v84 = a1[1] ^ 0xE3E3E3E3E3E3E3E3;
  v85 = 0xE1555B89EB638139 * v84;
  v86 = *a1 ^ 0xE3E3E3E3E3E3E3E3;
  v87 = 0xE1555B89EB638139 * v86;
  v88 = (0xE1555B89EB638139 * v86 - ((0xC2AAB713D6C70272 * v86) & 0x8EDF1DED904511B0) + 0x476F8EF6C82288D8) ^ 0xF0AA71B5E1FC9A8ELL;
  v89 = v88 + HIDWORD(v88) - ((v88 + HIDWORD(v88)) >> 16);
  v90 = ((v89 + (v89 >> 8) + 0x7050919A53098024) ^ v87) + (((v89 + (v89 >> 8) + 0x7050919A53098024) ^ v87) >> 32);
  v91 = v90 - (v90 >> 16) + ((v90 - (v90 >> 16)) >> 8);
  v92 = ((v91 + 0x7050919A53098024) ^ v87) + (((v91 + 0x7050919A53098024) ^ v87) >> 32);
  v93 = v92 - (v92 >> 16) + ((v92 - (v92 >> 16)) >> 8);
  v94 = ((v93 + ((0x1F5EDCCB59ECFFB7 - 2 * v93) | 0x7120E2126FBAEE4FLL) - 0x483FDF6EE4D3F703) ^ (0xE1555B89EB638139 * v84 - ((0xC2AAB713D6C70272 * v84) & 0x8EDF1DED904511B0) + 0x476F8EF6C82288D8))
      + 1;
  v95 = v94 + HIDWORD(v94) - ((v94 + HIDWORD(v94)) >> 16);
  v96 = ((v95 + (v95 >> 8) + 0x7050919A53098024) ^ v85)
      + 1
      + ((((v95 + (v95 >> 8) + 0x7050919A53098024) ^ v85) + 1) >> 32);
  v97 = (((v96 - (v96 >> 16)) >> 8) ^ (v96 - (v96 >> 16))) + 2 * (((v96 - (v96 >> 16)) >> 8) & (v96 - (v96 >> 16)));
  v98 = ((v97 + 0x7050919A53098024) ^ v85) + 1 + ((((v97 + 0x7050919A53098024) ^ v85) + 1) >> 32);
  v99 = v98 - (v98 >> 16) + ((v98 - (v98 >> 16)) >> 8);
  v100 = v99
       + 0x703D0F516D5A23F3
       + ((v99 + 0x703D0F516D5A23F3) >> 27)
       - ((v99 + 0x703D0F516D5A23F3 + ((v99 + 0x703D0F516D5A23F3) >> 27)) >> 8);
  v101 = v100
       - (v100 >> 7)
       + 0x26E3500BE510CF2ALL
       - ((v100 - (v100 >> 7) + 0x26E3500BE510CF2ALL) >> 30)
       - ((v100 - (v100 >> 7) + 0x26E3500BE510CF2ALL - ((v100 - (v100 >> 7) + 0x26E3500BE510CF2ALL) >> 30)) >> 14);
  v102 = v101
       + (v101 >> 6)
       + 0x561700E37DDA3932
       - ((v101 + (v101 >> 6) + 0x561700E37DDA3932) >> 25)
       + ((v101 + (v101 >> 6) + 0x561700E37DDA3932 - ((v101 + (v101 >> 6) + 0x561700E37DDA3932) >> 25)) >> 15);
  v103 = v102
       + (v102 >> 2)
       - 0x1B84A80A190B2C7
       - ((v102 + (v102 >> 2) - 0x1B84A80A190B2C7) >> 27)
       - ((v102 + (v102 >> 2) - 0x1B84A80A190B2C7 - ((v102 + (v102 >> 2) - 0x1B84A80A190B2C7) >> 27)) >> 15);
  v104 = v103
       + (v103 >> 7)
       - 0x2A76F947D80616C1
       + ((v103 + (v103 >> 7) - 0x2A76F947D80616C1) >> 26)
       + ((v103 + (v103 >> 7) - 0x2A76F947D80616C1 + ((v103 + (v103 >> 7) - 0x2A76F947D80616C1) >> 26)) >> 15);
  v105 = ((v104 - (v104 >> 5)) ^ 0x7F105AF8C49B3E75)
       + (((v104 - (v104 >> 5)) ^ 0x7F105AF8C49B3E75) >> 31)
       - ((((v104 - (v104 >> 5)) ^ 0x7F105AF8C49B3E75) + (((v104 - (v104 >> 5)) ^ 0x7F105AF8C49B3E75) >> 31)) >> 8);
  STACK[0x258] = v105 - (v105 >> 6);
  v106 = *(_DWORD *)(v72 - 232) == 0;
  if (!*(_DWORD *)(v72 - 232))
    a66 = a65;
  *(_DWORD *)(v72 - 108) = a66;
  v108 = *(_DWORD *)(v72 - 132);
  if (v106)
    v108 = *(_DWORD *)(v72 - 200);
  LODWORD(STACK[0x298]) = v108;
  v109 = STACK[0x310];
  if (!v106)
    v109 = STACK[0x30C];
  LODWORD(STACK[0x224]) = v109;
  if (v106)
    a39 = a37;
  LODWORD(STACK[0x228]) = a39;
  v111 = (STACK[0x3AC] & 2) == 0;
  if ((STACK[0x3AC] & 2) != 0)
    a50 = a48;
  LODWORD(STACK[0x234]) = a50;
  v113 = STACK[0x22C];
  if (v111)
    v113 = a44;
  LODWORD(STACK[0x22C]) = v113;
  v114 = STACK[0x274];
  if (!v111)
    v114 = STACK[0x270];
  LODWORD(STACK[0x270]) = v114;
  LODWORD(STACK[0x310]) = *(_DWORD *)(v72 - 116) ^ *(_DWORD *)(v72 - 112) ^ a67 ^ a46 ^ a30;
  v115 = (v83 ^ 0xC1C06062A92B63ADLL)
       - ((v83 ^ 0xC1C06062A92B63ADLL) >> 28)
       + (((v83 ^ 0xC1C06062A92B63ADLL) - ((v83 ^ 0xC1C06062A92B63ADLL) >> 28)) >> 11);
  v116 = v124 ^ v125 ^ (v115 + (v115 >> 2)) ^ v68 & (4 * (v124 ^ v125 ^ (v115 + (v115 >> 2))));
  LODWORD(STACK[0x274]) = v75;
  v117 = v75 ^ a41 ^ (4 * v75) & 0xAF27A674 ^ (4 * (v75 ^ LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x3B8]))) & 0xAF27A674 ^ (v116 + 293230513 - ((2 * v116) & 0x22F4AF62));
  LODWORD(STACK[0x30C]) = v70 ^ v75 ^ LODWORD(STACK[0x278]) ^ (v117 + v71 - ((2 * v117) & 0xD3E18F42));
  LODWORD(STACK[0x2FC]) = v74 ^ LODWORD(STACK[0x254]);
  LODWORD(STACK[0x2E4]) = v74;
  v118 = v99 + 455870716 - ((2 * v99 - 1508704184) & 0x904511B0);
  LODWORD(STACK[0x2F8]) = (((v118 >> 2) & 0x9AD7E87 ^ 0x82206) - 937260840 - ((v118 >> 1) & 0x10401100)) ^ v118;
  *(_DWORD *)(v72 - 108) = a54 ^ a52;
  v119 = LODWORD(STACK[0x2A4]) ^ 0xA0u;
  v120 = *(_DWORD *)(v72 - 104);
  v121 = (uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v72 - 96) + 8 * v120) - 8);
  *(_DWORD *)(v72 - 132) = v120 ^ 0x15CE;
  v122 = STACK[0x264];
  if (!v111)
    v122 = STACK[0x268];
  LODWORD(STACK[0x254]) = v122;
  LODWORD(STACK[0x300]) = LODWORD(STACK[0x2A8]) ^ 0x63636363;
  return v121(v119);
}

uint64_t sub_10012065C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;

  v11 = *(_QWORD *)(v10 - 104);
  v12 = (void (*)(uint64_t))(*(_QWORD *)(v8 + 8 * ((int)v11 - 1859)) - 740335503);
  v12(a8);
  v13 = ((uint64_t (*)(uint64_t))v12)(v9);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 - 96) + 8 * (int)v11) - 4))(v13);
}

void sub_100120694()
{
  int v0;
  uint64_t v1;
  int v2;

  if ((v0 ^ 0x7DFFFEDF) + ((2 * v0) & 0xFBFEB0BE) == 2113928927)
    v2 = 968960260;
  else
    v2 = 968915219;
  *(_DWORD *)(v1 + 32) = v2;
}

void sub_1001206EC(uint64_t a1)
{
  int v1;

  v1 = 447355651 * ((a1 - 2 * (a1 & 0xA4566BD0) - 1537840176) ^ 0x4D5AA8CC);
  __asm { BR              X9 }
}

uint64_t sub_1001207C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v30 = *(_QWORD *)(a1 + 24);
  v31 = *(_QWORD *)(a1 + 32);
  STACK[0x2A0] = v31;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * ((13 * (v31 != v30)) ^ v28)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10012082C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t (*v4)(void);

  v3 = (_BYTE *)STACK[0x2A0];
  *(_BYTE *)(v2 - 240) = *(_BYTE *)STACK[0x2A0];
  *(_BYTE *)(v2 - 239) = v3[1];
  *(_BYTE *)(v2 - 238) = v3[2];
  *(_BYTE *)(v2 - 237) = v3[3];
  *(_BYTE *)(v2 - 236) = v3[4];
  *(_BYTE *)(v2 - 235) = v3[5];
  *(_BYTE *)(v2 - 234) = v3[6];
  *(_BYTE *)(v2 - 233) = v3[7];
  *(_BYTE *)(v2 - 232) = v3[8];
  *(_BYTE *)(v2 - 231) = v3[9];
  *(_BYTE *)(v2 - 230) = v3[10];
  *(_BYTE *)(v2 - 229) = v3[11];
  *(_BYTE *)(v2 - 228) = v3[12];
  *(_BYTE *)(v2 - 227) = v3[13];
  *(_BYTE *)(v2 - 226) = v3[14];
  *(_BYTE *)(v2 - 225) = v3[15];
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - ((v0 - 1554430445) & 0x5CA6BB67) + 4896);
  STACK[0x2A0] = v2 - 240;
  return v4();
}

uint64_t sub_1001208E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  int v37;
  uint64_t v38;
  BOOL v39;
  int v42;

  if (a36)
    v39 = STACK[0x2A0] == 0;
  else
    v39 = 1;
  v42 = v39 || *(_QWORD *)(a1 + 8) == 0 || v36 == 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * ((112 * v42) ^ v37)) - (((v37 - 3227) | 0x100u) + 3019) + 4944))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a1, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_100120948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  _BOOL4 v38;

  v34 = (v31 + (v30 ^ 0x7335ADCC)) * (*(_DWORD *)(a10 + 16) - v29) + 383237578;
  v35 = ((2 * v34) & 0x55BFBBF6) + (v34 ^ 0x2ADFDDFB);
  v36 = (((2 * (_BYTE)v34) & 0xF6) + (v34 ^ 0xFB) + (v32 ^ 0xDD) + 124) & 0xF;
  v38 = v35 != 719314427 && v36 == ((v32 - 4435) | 0x1578) - 6009;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((2262 * v38) ^ v32)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1001209E8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  unsigned __int8 *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;
  unsigned __int8 v63;
  unint64_t v64;
  unsigned __int8 v65;
  char *v66;
  int v67;
  int v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  unsigned int v73;
  unsigned __int8 v74;
  int v75;
  int v76;
  int v77;
  char *v78;
  unsigned int v79;
  int v80;
  int v81;
  unsigned int v82;
  char *v83;
  char *v84;
  char *v85;
  int v86;
  char *v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  char *v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  char *v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  char *v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  char *v127;
  char *v128;
  char *v129;
  int v130;
  unsigned int v131;
  char *v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unint64_t v194;
  char *v195;
  char *v196;
  char *v197;
  _BYTE *v198;
  char *v199;
  uint64_t v200;
  int v201;
  unsigned int v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  __int128 v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  unint64_t v216;
  unint64_t v217;
  unint64_t v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v250;
  uint64_t v251;
  int v252;
  uint64_t v253;
  int v254;
  uint64_t v255;
  int v256;
  int v257;
  uint64_t v258;
  int v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  int v264;
  uint64_t v265;
  unsigned int v266;
  int v267;
  uint64_t v268;
  unsigned int v269;
  unsigned int v270;
  uint64_t v271;
  unsigned int v272;
  unsigned int v273;
  uint64_t v274;
  unsigned int v275;
  unsigned int v276;
  uint64_t v277;
  unsigned int v278;
  unsigned int v279;
  uint64_t v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  uint64_t v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  uint64_t v288;
  unsigned __int8 v289;
  unsigned int v290;
  int v291;
  int v292;
  uint64_t v293;
  unsigned int v294;
  int v295;
  uint64_t v296;
  unsigned int v297;
  int v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  unsigned int v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int v305;
  uint64_t v306;
  unsigned __int8 v307;
  int v308;
  int v309;
  uint64_t v310;
  int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  uint64_t v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unsigned __int8 v323;
  unsigned int v324;
  uint64_t v325;
  unsigned int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  int v334;
  int v335;
  unsigned int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;

  LODWORD(STACK[0x2DC]) = v57 - 1061;
  v60 = *(unsigned __int8 *)(a1 - 0x292C7851D42B3360) ^ 0xAALL;
  LODWORD(STACK[0x2AC]) = 0;
  STACK[0x2B0] = 0;
  v61 = v57;
  v304 = v59;
  v62 = (char *)*(&off_100236540 + (v57 ^ 0x1704)) - 1566272635;
  LODWORD(v60) = v62[v60];
  HIDWORD(v64) = v60 ^ 1;
  LODWORD(v64) = ((v57 - 1061) ^ v60 ^ 0x68) << 24;
  v63 = v64 >> 27;
  LODWORD(v60) = v62[*(unsigned __int8 *)(a1 - 0x292C7851D42B335CLL) ^ 0x90];
  HIDWORD(v64) = v60 ^ 1;
  LODWORD(v64) = (v60 ^ 0x38) << 24;
  v65 = v64 >> 27;
  v66 = (char *)*(&off_100236540 + v57 - 5478) - 1961488743;
  v67 = v66[*v56 ^ 0x3ALL];
  HIDWORD(v64) = v67 ^ 0x56;
  LODWORD(v64) = v67 << 24;
  v68 = (v64 >> 31) ^ 0xCD;
  v69 = v66[*(unsigned __int8 *)(a1 - 0x292C7851D42B335BLL) ^ 7];
  HIDWORD(v64) = v69 ^ 0x56;
  LODWORD(v64) = v69 << 24;
  LOBYTE(v69) = v64 >> 31;
  v70 = *(unsigned __int8 *)(a1 - 0x292C7851D42B3366);
  v71 = v68 << 24;
  v72 = (uint64_t)*(&off_100236540 + (v61 ^ 0x1502));
  LODWORD(STACK[0x270]) = v58;
  v72 -= 772120431;
  v73 = v71 & 0xFF00FFFF | (((((v70 ^ 0x4D) + 7) ^ *(_BYTE *)(v72 + (v70 ^ 0xF6))) ^ 0xE8) << 16);
  LODWORD(v70) = v62[*(unsigned __int8 *)(a1 - 0x292C7851D42B3358) ^ 0x6ELL];
  HIDWORD(v64) = v70 ^ 1;
  LODWORD(v64) = (v70 ^ 0x38) << 24;
  LOBYTE(v70) = v64 >> 27;
  v74 = ((*(_BYTE *)(a1 - 0x292C7851D42B335ALL) ^ 0xE9) + 7) ^ *(_BYTE *)(v72
                                                                        + (*(unsigned __int8 *)(a1 - 0x292C7851D42B335ALL) ^ 0x52));
  v75 = v66[*(unsigned __int8 *)(a1 - 0x292C7851D42B3363) ^ 0x41];
  HIDWORD(v64) = v75 ^ 0x56;
  LODWORD(v64) = v75 << 24;
  v76 = v63 | (((v64 >> 31) ^ 0xC4) << 24);
  v77 = v62[*(unsigned __int8 *)(a1 - 0x292C7851D42B3364) ^ 0xFCLL];
  HIDWORD(v64) = v77 ^ 1;
  LODWORD(v64) = (v77 ^ 0x38) << 24;
  v78 = (char *)*(&off_100236540 + (v61 ^ 0x17BA)) - 2004669143;
  v79 = (v73 & 0xFFFF0000 | (v64 >> 27) | (((45
                                                                             * v78[*(unsigned __int8 *)(a1 - 0x292C7851D42B3365) ^ 0x83]) ^ 0x9A) << 8)) ^ 0x76;
  LODWORD(v66) = v66[*(unsigned __int8 *)(a1 - 0x292C7851D42B335FLL) ^ 0xF7];
  HIDWORD(v64) = v66 ^ 0x56;
  LODWORD(v64) = (_DWORD)v66 << 24;
  LOBYTE(v62) = 45 * v78[*(unsigned __int8 *)(a1 - 0x292C7851D42B3359) ^ 0x43];
  v80 = v65 ^ 0xA3 | (((*(_BYTE *)(v72 + (*(unsigned __int8 *)(a1 - 0x292C7851D42B335ELL) ^ 0xA8)) ^ ((*(_BYTE *)(a1 - 0x292C7851D42B335ELL) ^ 0x13) + 7)) ^ 0xF4) << 16) & 0xFF00FF | (((v64 >> 31) ^ 0xF1) << 24) | (((45 * v78[*(unsigned __int8 *)(a1 - 0x292C7851D42B335DLL) ^ 0x9ELL]) ^ 0x30) << 8);
  v81 = (v70 ^ 0xBA | ((v69 ^ 0x3D) << 24) | ((v74 ^ 0x1C) << 16) | ((v62 ^ 0x56) << 8)) ^ 0x62BBDFDB;
  v82 = v76 & 0xFF0000FF | (((45 * v78[*(unsigned __int8 *)(a1 - 0x292C7851D42B3361) ^ 0x2BLL]) ^ 0x3F) << 8) | (((*(_BYTE *)(v72 + (*(unsigned __int8 *)(a1 - 0x292C7851D42B3362) ^ 0x98)) ^ ((*(_BYTE *)(a1 - 0x292C7851D42B3362) ^ 0x23) + 7)) ^ 0x97) << 16);
  v83 = (char *)*(&off_100236540 + v61 - 5328) - 1980559703;
  v84 = (char *)*(&off_100236540 + v61 - 5180) - 453188155;
  LODWORD(STACK[0x280]) = v61;
  v85 = (char *)*(&off_100236540 + v61 - 6007) - 949339026;
  v86 = *(_DWORD *)&v83[4 * (v69 ^ 0x78)] ^ *(_DWORD *)&v84[4 * (v62 ^ 0xA5)] ^ 0x661E2455;
  v87 = (char *)*(&off_100236540 + v61 - 5809) - 1575808114;
  v301 = __PAIR64__(v79, v80);
  LODWORD(v66) = v79 ^ ((v70 ^ 0x4B)
                      - ((2 * (v70 ^ 0x4B) + 10866) & 0x2250)
                      - 958747039) ^ *(_DWORD *)&v85[4 * (v74 ^ 0x86)] ^ *(_DWORD *)&v87[4
                                                                                       * (v70 ^ 0x26)] ^ (v86 - ((2 * v86) & 0xFB568C4C) + 2108376614);
  LODWORD(v300) = v82 ^ 0x40;
  HIDWORD(v300) = v81;
  v88 = v66 ^ v82 ^ 0x40;
  LODWORD(STACK[0x2D0]) = v88 ^ v80;
  v89 = v88;
  LODWORD(STACK[0x2A8]) = v88;
  v90 = v88 ^ v80 ^ 0xC7CBA618;
  LODWORD(v70) = v90 ^ v81 ^ 0xB6AE203F;
  v316 = v90 ^ v81;
  LODWORD(STACK[0x290]) = BYTE3(v70);
  v91 = *(_DWORD *)&v83[4 * (BYTE3(v70) ^ 0x27)];
  LODWORD(STACK[0x29C]) = 0;
  v92 = (v90 ^ v81);
  LODWORD(STACK[0x27C]) = v92;
  v318 = v66;
  v93 = *(_DWORD *)&v87[4 * (v92 ^ 0x78)] ^ v91 ^ ((_DWORD)v66 - ((2 * (_DWORD)v66) & 0x6417DCF4) + 839642746) ^ ((v92 ^ 0x15) - ((2 * (v92 ^ 0x15) + 10866) & 0x2250) - 958747039);
  v313 = BYTE2(v70);
  v94 = (v93 - ((2 * v93) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v85[4 * (BYTE2(v70) ^ 0x21)];
  v311 = BYTE1(v70);
  LODWORD(v66) = (v94 - ((2 * v94) & 0xA82B945E) + 1410714159) ^ *(_DWORD *)&v84[4 * (BYTE1(v70) ^ 0x2C)];
  LODWORD(STACK[0x2C0]) = (_DWORD)v66;
  LODWORD(a52) = v66 ^ v89;
  v95 = v66 ^ v89 ^ 0x6B42A2C8;
  LODWORD(a48) = v95 ^ v90;
  LODWORD(a43) = v95 ^ v90 ^ v70;
  v96 = (a43 ^ 0x6BC99175) >> 24;
  LODWORD(STACK[0x28C]) = v96;
  LODWORD(v78) = *(_DWORD *)&v83[4 * (v96 ^ 0x27)];
  v97 = ((unsigned __int16)(a43 ^ 0x9175) >> 8);
  LODWORD(STACK[0x210]) = v97;
  LODWORD(v78) = v78 ^ *(_DWORD *)&v84[4 * (v97 ^ 0x2C)] ^ 0x661E2455;
  LODWORD(a41) = ((a43 ^ 0x40C92EFB) >> 16);
  v98 = *(_DWORD *)&v87[4 * (a43 ^ 0x32)] ^ *(_DWORD *)&v85[4 * (a41 ^ 0x21)] ^ ((_DWORD)v78 - ((2 * (_DWORD)v78) & 0xFB568C4C) + 2108376614) ^ v66 ^ ((a43 ^ 0x5F) - ((2 * (a43 ^ 0x5F) + 10866) & 0x2250) - 958747039);
  LODWORD(STACK[0x2C8]) = v98 ^ v90;
  v99 = v98 ^ v90 ^ 0xC34095A5;
  v100 = (v99 ^ a43 ^ 0x75);
  LODWORD(a51) = v99 ^ a43 ^ 0x6BC99175;
  LODWORD(STACK[0x250]) = v100;
  LODWORD(v70) = (v100 ^ 0x60) - ((2 * (v100 ^ 0x60) + 10866) & 0x2250);
  LODWORD(v78) = *(_DWORD *)&v87[4 * (v100 ^ 0xD)];
  v101 = v87;
  LODWORD(v70) = (((v70 - 958747039) ^ v78)
                - ((2 * ((v70 - 958747039) ^ v78)) & 0x6417DCF4)
                + 839642746) ^ *(_DWORD *)&v83[4 * (((a51 ^ 0xDD67B14A) >> 24) ^ 0x27)];
  LODWORD(v70) = (v70 - ((2 * v70) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v85[4
                                                                               * (((a51 ^ 0xDD67B14A) >> 16) ^ 0x21)];
  LODWORD(v72) = v98 ^ *(_DWORD *)&v84[4 * (((unsigned __int16)(a51 ^ 0xB14A) >> 8) ^ 0x2C)] ^ (v70 - ((2 * v70) & 0xA82B945E) + 1410714159);
  LODWORD(STACK[0x240]) = v72;
  LODWORD(STACK[0x2B8]) = v98 ^ v95;
  LODWORD(v70) = v72 ^ 0xE0409176;
  LODWORD(v72) = v98 ^ v95 ^ 0x75EEB59A;
  LODWORD(STACK[0x278]) = v72;
  v102 = v70 - ((2 * v70) & 0x6417DCF4);
  LODWORD(v70) = v70 ^ v72;
  v103 = v70 ^ v99;
  v104 = v70;
  LODWORD(STACK[0x22C]) = v70;
  LODWORD(STACK[0x244]) = v103 ^ a51 ^ 0xDD67B14A;
  v105 = v103;
  LODWORD(STACK[0x21C]) = v103;
  LODWORD(v72) = v103 ^ a51 ^ 0xDD67B14A ^ 0xBEAE9B62;
  LODWORD(v78) = v103 ^ a51 ^ 0xDD67B14A ^ 0xBAE9B62;
  LODWORD(STACK[0x230]) = v78 >> 24;
  v106 = *(_DWORD *)&v87[4 * ((v103 ^ a51 ^ 0x4A) ^ 0x25)] ^ *(_DWORD *)&v83[4
                                                                                            * ((v78 >> 24) ^ 0x27)] ^ (v102 + 839642746) ^ (((v103 ^ a51 ^ 0x4A) ^ 0x48) - ((2 * ((v103 ^ a51 ^ 0x4A) ^ 0x48) + 10866) & 0x2250) - 958747039);
  LODWORD(STACK[0x258]) = v72;
  LODWORD(STACK[0x260]) = BYTE1(v72);
  v107 = (v106 - ((2 * v106) & 0xA82B945E) + 1410714159) ^ *(_DWORD *)&v84[4 * (BYTE1(v72) ^ 0x2C)];
  LODWORD(STACK[0x220]) = BYTE2(v72);
  v340 = (v107 - ((2 * v107) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v85[4 * (BYTE2(v72) ^ 0x21)];
  v330 = v340 ^ 0x48C995A6 ^ v70;
  LODWORD(STACK[0x200]) = v330 ^ 0x395E0DB8;
  v332 = v330 ^ 0x395E0DB8 ^ v105 ^ 0x8C39BCF2;
  v336 = v332 ^ v78;
  v344 = (v332 ^ v78);
  v108 = ((v344 ^ 0x2A) - ((2 * (v344 ^ 0x2A) + 10866) & 0x2250) - 958747039) ^ *(_DWORD *)&v87[4 * (v344 ^ 0x47)];
  v342 = ((v332 ^ v78) >> 16);
  v109 = v85;
  v110 = (v108 - ((2 * v108) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v85[4 * (v342 ^ 0x21)];
  LODWORD(v72) = (v332 ^ v78 ^ 0x17000000) >> 24;
  LODWORD(STACK[0x248]) = v72;
  v111 = (v110 - ((2 * v110) & 0x6417DCF4) + 839642746) ^ *(_DWORD *)&v83[4 * (v72 ^ 0x27)];
  v338 = (BYTE1(v332) ^ BYTE1(v78));
  HIDWORD(a36) = v340 ^ 0x48C995A6 ^ *(_DWORD *)&v84[4
                                                   * (((unsigned __int16)(v332 ^ (unsigned __int16)v78) >> 8) ^ 0x2C)] ^ (v111 - ((2 * v111) & 0xA82B945E) + 1410714159);
  v112 = HIDWORD(a36) ^ 0x89670EC4 ^ v105 ^ 0x8C39BCF2;
  v323 = BYTE2(v112) ^ 0xDC;
  v324 = v112;
  v326 = v112 ^ 0x7CDCC65D ^ v332 ^ v78 ^ 0x17000000;
  LODWORD(a42) = v112 ^ 0x5D ^ (v332 ^ v78);
  LODWORD(v70) = ((a42 ^ 0xAD) - ((2 * (a42 ^ 0xAD) + 10866) & 0x2250) - 958747039) ^ *(_DWORD *)&v87[4 * (a42 ^ 0xC0)];
  LODWORD(v78) = ((v326 ^ 0x2E2C5087) >> 16);
  LODWORD(STACK[0x208]) = (_DWORD)v78;
  LODWORD(v70) = (v70 - ((2 * v70) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v85[4 * (v78 ^ 0x21)];
  LODWORD(v70) = (v70 - ((2 * v70) & 0x6417DCF4) + 839642746) ^ *(_DWORD *)&v83[4 * (((v326 ^ 0x2E2C5087) >> 24) ^ 0x27)];
  LODWORD(v85) = (v70 - ((2 * v70) & 0xA82B945E) + 1410714159) ^ *(_DWORD *)&v84[4
                                                                               * (((unsigned __int16)(v326 ^ 0x5087) >> 8) ^ 0x2C)];
  LODWORD(v87) = v340 ^ 0x48C995A6 ^ v104 ^ 0xD515EC75;
  v113 = v85 ^ v87;
  v114 = v85 ^ v87 ^ 0xFB2C5087 ^ v112;
  v115 = v114 ^ 0x5997981E ^ v326 ^ 0x2E2C5087;
  LODWORD(v78) = ((v114 ^ 0x1E ^ v326 ^ 0x87 ^ 0xBA)
                - ((2 * (v114 ^ 0x1E ^ v326 ^ 0x87 ^ 0xBA) + 10866) & 0x2250)
                - 958747039) ^ *(_DWORD *)&v101[4 * (v114 ^ 0x1E ^ v326 ^ 0x87 ^ 0xD7)];
  v116 = v115 ^ 0x87972790;
  v117 = ((unsigned __int16)(v115 ^ 0x2790) >> 8);
  v118 = ((_DWORD)v78 - ((2 * (_DWORD)v78) & 0xA82B945E) + 1410714159) ^ *(_DWORD *)&v84[4 * (v117 ^ 0x2C)];
  v119 = (v118 - ((2 * v118) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v109[4 * (BYTE2(v116) ^ 0x21)];
  v120 = v119 - ((2 * v119) & 0x6417DCF4);
  v121 = v85 ^ HIDWORD(a36) ^ 0x89670EC4;
  LODWORD(STACK[0x238]) = HIBYTE(v116);
  v122 = v83;
  LODWORD(a35) = v121 ^ *(_DWORD *)&v83[4 * (HIBYTE(v116) ^ 0x27)] ^ (v120 + 839642746);
  BYTE2(a54) = ((v85 ^ v87) >> 16) ^ 0x2C;
  v123 = a35 ^ 0xF0FDC352 ^ v85 ^ v87 ^ 0xFB2C5087;
  v302 = v123;
  LODWORD(a44) = v123 ^ v114 ^ 0x5997981E;
  LODWORD(v66) = a44 ^ 0x20FD7CDC ^ v116;
  LODWORD(a40) = a44 ^ 0xDC ^ v116;
  LODWORD(v85) = *(_DWORD *)&v101[4 * (a40 ^ 0x47)] ^ *(_DWORD *)&v84[4 * (BYTE1(v66) ^ 0x2C)] ^ ((a35 ^ 0xF0FDC352) - ((2 * (a35 ^ 0xF0FDC352)) & 0xA82B945E) + 1410714159) ^ ((a40 ^ 0x2A) - ((2 * (a40 ^ 0x2A) + 10866) & 0x2250) - 958747039);
  LODWORD(v72) = ((_DWORD)v85 - ((2 * (_DWORD)v85) & 0x6417DCF4) + 839642746) ^ *(_DWORD *)&v83[4
                                                                                              * ((v66 >> 24) ^ 0x27)];
  v334 = BYTE2(v66);
  LODWORD(v62) = (v72 - ((2 * v72) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v109[4 * (BYTE2(v66) ^ 0x21)];
  LODWORD(v83) = v62 ^ v123;
  LODWORD(v72) = v62 ^ v123 ^ 0xC7D193D5;
  LOBYTE(v85) = v72 ^ v116;
  v124 = v72;
  v307 = v62 ^ v123 ^ 0xD5;
  LODWORD(v72) = v72 ^ v116 ^ 0x9C21050F;
  v125 = *(_DWORD *)&v84[4 * (BYTE1(v72) ^ 0x2C)];
  LODWORD(STACK[0x298]) = HIDWORD(a36) ^ 0x89670EC4 ^ v87;
  LODWORD(STACK[0x274]) = v72;
  v346 = v85;
  v126 = v125 ^ *(_DWORD *)&v122[4 * (BYTE3(v72) ^ 0x27)] ^ *(_DWORD *)&v101[4 * (v85 ^ 0x48)] ^ v62 ^ ((v346 ^ 0x25) - ((2 * (v346 ^ 0x25) + 10866) & 0x2250) - 958747039);
  HIDWORD(v299) = ((v126 ^ 0x661E2455) - ((2 * (v126 ^ 0x661E2455)) & 0xFB568C4C) + 2108376614) ^ *(_DWORD *)&v109[4 * (BYTE2(v72) ^ 0x21)];
  LODWORD(STACK[0x294]) = v124 ^ a44 ^ 0x20FD7CDC;
  LODWORD(v299) = v83 ^ HIDWORD(v299) ^ 0x976AE4C2;
  LODWORD(STACK[0x26C]) = v124 ^ a44 ^ 0x20FD7CDC ^ v299 ^ 0x857B5CBA;
  v127 = (char *)*(&off_100236540 + (LODWORD(STACK[0x280]) ^ 0x174D)) - 955696014;
  v128 = (char *)*(&off_100236540 + (LODWORD(STACK[0x280]) ^ 0x15B2)) - 352794879;
  v129 = (char *)*(&off_100236540 + (LODWORD(STACK[0x280]) ^ 0x15E8)) - 603118815;
  v130 = ((BYTE1(v113) ^ 0x79) - ((2 * ((v113 >> 8) ^ 0x77DC79)) & 0x1C) + 1668681230) ^ *(_DWORD *)&v129[4 * (BYTE1(v113) ^ 6)];
  v131 = (v130 - ((2 * v130) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (v113 ^ 0xE9)];
  v132 = (char *)*(&off_100236540 + (LODWORD(STACK[0x280]) ^ 0x1751)) - 266975570;
  LODWORD(v85) = ((BYTE1(v121) ^ 0xE) - 2 * ((BYTE1(v121) ^ 0xE) & 0x1E ^ (v121 >> 8) & 0x10) + 1668681230) ^ *(_DWORD *)&v129[4 * (BYTE1(v121) ^ 0x53)];
  LODWORD(v122) = *(_DWORD *)&v127[4 * (HIBYTE(v114) ^ 0xB8)] ^ *(_DWORD *)&v132[4
                                                                               * (((v114 ^ 0x87972790) >> 16) ^ 0xCD)] ^ *(_DWORD *)&v129[4 * (BYTE1(v114) ^ 0xD1)] ^ ((BYTE1(v114) ^ 0xBF) - ((2 * ((v114 >> 8) ^ 0xDE00BF)) & 0x1C) + 1668681230);
  v133 = (v131 - ((2 * v131) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (HIBYTE(v113) ^ 0x29)];
  v134 = ((_DWORD)v85 - ((2 * (_DWORD)v85) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * (BYTE2(v121) ^ 0xF0)];
  LODWORD(v109) = *(_DWORD *)&v132[4 * BYTE2(v116)] ^ *(_DWORD *)&v128[4
                                                                     * (v114 ^ 0x1E ^ v326 ^ 0x87 ^ 2)] ^ *(_DWORD *)&v129[4 * (v117 ^ 0x28)] ^ (v117 - ((v116 >> 7) & 0x1C) + 1668681230) ^ 0x41D6A4D3;
  v328 = (_DWORD)v109 - ((2 * (_DWORD)v109) & 0x16C5D098);
  v135 = (v134 - ((2 * v134) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (v121 ^ 0xB1)];
  LODWORD(a55) = (v122 ^ 0x33594B8F) - ((2 * (v122 ^ 0x33594B8F)) & 0xF3DA0E20);
  LODWORD(a56) = v135 - ((2 * v135) & 0x16C5D098);
  LODWORD(a45) = v133 - ((2 * v133) & 0x70774786);
  v136 = *(_DWORD *)&v129[4 * (BYTE1(v98) ^ 5)] ^ ((BYTE1(v98) ^ 4)
                                                 - 2 * ((BYTE1(v98) ^ 4) & 0x1F ^ (v98 >> 8) & 0x11)
                                                 + 1668681230);
  LODWORD(v70) = *(_DWORD *)&v129[4 * (((unsigned __int16)(a51 ^ 0xB14A) >> 8) ^ 4)] ^ (((unsigned __int16)(a51 ^ 0xB14A) >> 8) - ((a51 >> 7) & 0x1C) + 1668681230);
  LODWORD(v70) = (v70 - ((2 * v70) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4
                                                                               * (((a51 ^ 0xDD67B14A) >> 24) ^ 0x22)];
  LODWORD(v122) = LODWORD(STACK[0x2C8]) ^ 0x1EA724EF;
  v137 = (v136 - ((2 * v136) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * (BYTE2(v98) ^ 0x4E)];
  LODWORD(v109) = *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x2B8])) ^ 0x74)] ^ *(_DWORD *)&v132[4
                                                                                                * (BYTE2(LODWORD(STACK[0x2B8])) ^ 0x72)];
  LODWORD(v70) = (v70 - ((2 * v70) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4
                                                                               * (((a51 ^ 0xDD67B14A) >> 16) ^ 0xEA)];
  v138 = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x2C8]) ^ 0x3D)] ^ *(_DWORD *)&v132[4 * BYTE2(v122)] ^ 0x41D6A4D3;
  LODWORD(a51) = v138 - ((2 * v138) & 0x16C5D098);
  v139 = *(_DWORD *)&v127[4 * (HIBYTE(v98) ^ 0x57)] ^ (v137 - ((2 * v137) & 0x16C5D098) + 191031372);
  LODWORD(a47) = v70 - ((2 * v70) & 0xF3DA0E20);
  HIDWORD(a46) = (v109 ^ 0x33594B8F) - ((2 * (v109 ^ 0x33594B8F)) & 0xF3DA0E20);
  LODWORD(a50) = BYTE1(v122) ^ 0xA8;
  LODWORD(a53) = BYTE1(v122) - ((v122 >> 7) & 0x1C);
  HIDWORD(v303) = *(_DWORD *)&v128[4 * (v98 ^ 0xF4)] ^ (v139 - ((2 * v139) & 0xF3DA0E20) + 2045576976);
  v140 = *(_DWORD *)&v129[4 * (BYTE1(LODWORD(STACK[0x2D0])) ^ 0xD4)] ^ ((BYTE1(LODWORD(STACK[0x2D0])) ^ 0x86)
                                                                                       - 2
                                                                                       * ((BYTE1(LODWORD(STACK[0x2D0])) ^ 0x86) & 0x1E ^ (LODWORD(STACK[0x2D0]) >> 8) & 0x10)
                                                                                       + 1668681230);
  v141 = (v140 - ((2 * v140) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4
                                                                         * (BYTE2(LODWORD(STACK[0x2D0])) ^ 0xEF)];
  v142 = LODWORD(STACK[0x2A8]) ^ 0x312AA81F;
  LODWORD(v70) = *(_DWORD *)&v129[4 * (BYTE1(v142) ^ 0x62)] ^ (BYTE1(v142) + 1668681231 + (~(v142 >> 7) | 0xFFFFFFE3));
  LODWORD(v122) = *(_DWORD *)&v129[4 * (v311 ^ 0x82)] ^ (v311 - ((v316 >> 7) & 0x1C) + 1668681230);
  LODWORD(v122) = ((_DWORD)v122 - ((2 * (_DWORD)v122) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * (v313 ^ 0x20)];
  v143 = (v70 - ((2 * v70) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * BYTE2(v142)];
  LODWORD(v70) = ((_DWORD)v122 - ((2 * (_DWORD)v122) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4
                                                                                                 * (LODWORD(STACK[0x290]) ^ 0x1A)];
  v144 = (v141 - ((2 * v141) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x2D0])) ^ 0xFB)];
  v145 = *(_DWORD *)&v129[4 * (((unsigned __int16)(v318 ^ 0x4D0) >> 8) ^ 0xD0)] ^ (((unsigned __int16)(v318 ^ 0x4D0) >> 8)
                                                                                                  - (((v318 ^ 0xACBC04D0) >> 7) & 0x1C)
                                                                                                  + 1668681230);
  v146 = (v145 - ((2 * v145) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (v318 ^ 0xEB)];
  LODWORD(v122) = (v146 - ((2 * v146) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4
                                                                                  * ((v318 ^ 0xACBC04D0) >> 16)];
  v147 = (v143 - ((2 * v143) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x2A8])) ^ 0xF7)];
  v317 = v70 - ((2 * v70) & 0xF3DA0E20);
  v314 = v144 - ((2 * v144) & 0xF3DA0E20);
  v312 = v147 - ((2 * v147) & 0xF3DA0E20);
  LODWORD(STACK[0x290]) = (_DWORD)v122 - ((2 * (_DWORD)v122) & 0x16C5D098);
  v148 = (BYTE1(v72) - ((LODWORD(STACK[0x274]) >> 7) & 0x1C) + 1668681230) ^ *(_DWORD *)&v129[4 * (BYTE1(v72) ^ 0xE5)];
  v149 = (v148 - ((2 * v148) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (BYTE3(v72) ^ 0x45)];
  v150 = (v149 - ((2 * v149) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * (BYTE2(v72) ^ 0xBE)];
  LODWORD(v70) = LODWORD(STACK[0x294]) ^ 0x865C741F;
  LODWORD(v122) = (BYTE1(v70) + 1668681231 + (~(v70 >> 7) | 0xFFFFFFE3)) ^ *(_DWORD *)&v129[4 * (BYTE1(v70) ^ 0xCC)];
  LODWORD(v70) = ((_DWORD)v122 - ((2 * (_DWORD)v122) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * BYTE2(v70)];
  v289 = BYTE2(v62) ^ 0x16;
  v151 = *(_DWORD *)&v128[4 * (v62 ^ 0x29)] ^ *(_DWORD *)&v127[4 * ((v62 >> 24) ^ 0x94)] ^ *(_DWORD *)&v129[4 * (((unsigned __int16)((unsigned __int16)v62 ^ 0x1596) >> 8) ^ 0x4E)] ^ (((unsigned __int16)((unsigned __int16)v62 ^ 0x1596) >> 8) - (((v62 ^ 0x88161596) >> 7) & 0x1C) + 1668681230) ^ 0x728FEF5C;
  v294 = v151 - ((2 * v151) & 0x70774786);
  v152 = (v70 - ((2 * v70) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x294])) ^ 0x6B)];
  v309 = v152 - ((2 * v152) & 0xF3DA0E20);
  v153 = *(_DWORD *)&v132[4 * ((v83 ^ 0x6EC7D399) >> 16)] ^ *(_DWORD *)&v127[4 * ((v83 >> 24) ^ 0x83)] ^ *(_DWORD *)&v129[4 * (((unsigned __int16)((unsigned __int16)v83 ^ 0xD399) >> 8) ^ 0xCC)] ^ (((unsigned __int16)((unsigned __int16)v83 ^ 0xD399) >> 8) - (((v83 ^ 0x6EC7D399) >> 7) & 0x1C) + 1668681230);
  v297 = v307 ^ 0xBF;
  v308 = (v153 ^ 0x33594B8F) + (~(2 * (v153 ^ 0x33594B8F)) | 0xC25F1DF);
  v305 = v150 - ((2 * v150) & 0xF3DA0E20);
  LODWORD(v70) = *(_DWORD *)&v129[4 * (((unsigned __int16)(a48 ^ 0x91E2) >> 8) ^ 0x27)] ^ (((unsigned __int16)(a48 ^ 0x91E2) >> 8) - ((a48 >> 7) & 0x1C) + 1668681230);
  LODWORD(v70) = (v70 - ((2 * v70) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (BYTE3(a48) ^ 0xF5)];
  v154 = *(_DWORD *)&v132[4 * (a41 ^ 0x50)] ^ *(_DWORD *)&v128[4 * (a43 ^ 0x93)] ^ 0x41D6A4D3;
  v292 = v154 - ((2 * v154) & 0x16C5D098);
  v155 = (v70 - ((2 * v70) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4
                                                                       * ((a48 ^ 0xE90A91E2) >> 16)];
  v282 = a48 ^ 0x11;
  v295 = v155 - ((2 * v155) & 0xF3DA0E20);
  v156 = LODWORD(STACK[0x2C0]) ^ 0x8E5FB6B3;
  v285 = HIBYTE(v121) ^ 0x63;
  v157 = (BYTE1(v156) - ((v156 >> 7) & 0x1C) + 1668681230) ^ *(_DWORD *)&v132[4 * BYTE2(v156)] ^ *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x2C0])) ^ 0x63)] ^ *(_DWORD *)&v129[4 * (BYTE1(v156) ^ 0x4E)] ^ 0x33594B8F;
  v290 = v157 - ((2 * v157) & 0xF3DA0E20);
  BYTE2(v146) = BYTE2(a52) ^ 0xCC;
  v158 = (((unsigned __int16)(a52 ^ 0x1A92) >> 8)
        - (((a52 ^ 0xB6CC1A92) >> 7) & 0x1C)
        + 1668681230) ^ *(_DWORD *)&v127[4 * (BYTE3(a52) ^ 0xF)] ^ *(_DWORD *)&v128[4 * (a52 ^ 0x61)] ^ *(_DWORD *)&v129[4 * (((unsigned __int16)(a52 ^ 0x1A92) >> 8) ^ 0x4E)] ^ 0x728FEF5C;
  LODWORD(a52) = v158 - ((2 * v158) & 0x70774786);
  v159 = *(_DWORD *)&v129[4 * (BYTE1(v324) ^ 0x2C)] ^ ((BYTE1(v324) ^ 0x96)
                                                     - ((2 * ((v324 >> 8) ^ 0xFF096)) & 0x1C)
                                                     + 1668681230);
  v160 = *(_DWORD *)&v129[4 * (((unsigned __int16)(WORD2(a36) ^ 0xBF3D) >> 8) ^ 0x6D)] ^ (((unsigned __int16)(WORD2(a36) ^ 0xBF3D) >> 8) - (((HIDWORD(a36) ^ 0x5C8BBF3Du) >> 7) & 0x1C) + 1668681230);
  v161 = (v160 - ((2 * v160) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (HIBYTE(HIDWORD(a36)) ^ 0x56)];
  v162 = (v161 - ((2 * v161) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (BYTE4(a36) ^ 0x6B)];
  v163 = *(_DWORD *)&v127[4 * (HIBYTE(v324) ^ 0xE2)] ^ (v159 - ((2 * v159) & 0x16C5D098) + 191031372);
  v164 = (v163 - ((2 * v163) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * v323];
  LODWORD(a41) = v162 - ((2 * v162) & 0x70774786);
  v278 = v164 - ((2 * v164) & 0xF3DA0E20);
  LODWORD(v70) = LODWORD(STACK[0x298]) ^ 0xC76B328;
  v165 = (BYTE1(v70) - ((v70 >> 7) & 0x1C) + 1668681230) ^ *(_DWORD *)&v132[4 * BYTE2(v70)] ^ *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x298])) ^ 0xE1)] ^ *(_DWORD *)&v129[4 * (BYTE1(v70) ^ 0x4E)];
  v166 = (((unsigned __int16)(v326 ^ 0x5087) >> 8) - ((v326 >> 7) & 0x1C) + 1668681230) ^ *(_DWORD *)&v127[4 * (((v326 ^ 0x2E2C5087) >> 24) ^ 0xC0)] ^ *(_DWORD *)&v128[4 * (a42 ^ 0x91)] ^ *(_DWORD *)&v129[4 * (((unsigned __int16)(v326 ^ 0x5087) >> 8) ^ 0xE3)] ^ 0x728FEF5C;
  LODWORD(a42) = v166 - ((2 * v166) & 0x70774786);
  v276 = (v165 ^ 0x33594B8F) - ((2 * (v165 ^ 0x33594B8F)) & 0xF3DA0E20);
  BYTE2(v113) = BYTE2(a35) ^ 0xFE;
  v167 = (((unsigned __int16)(a35 ^ 0xB14A) >> 8) - ((a35 >> 7) & 0x1C) + 1668681230) ^ *(_DWORD *)&v129[4 * (((unsigned __int16)(a35 ^ 0xB14A) >> 8) ^ 0xDD)];
  v168 = (v167 - ((2 * v167) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (a35 ^ 0x6D)];
  v169 = (v168 - ((2 * v168) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (BYTE3(a35) ^ 0x41)];
  v170 = *(_DWORD *)&v127[4 * (BYTE3(a44) ^ 0xB3)];
  HIDWORD(v64) = v170 ^ 0x22E84C;
  LODWORD(v64) = v170 ^ 0xB400000;
  v327 = v169 - ((2 * v169) & 0x70774786);
  v171 = (BYTE1(v66) - ((v66 >> 7) & 0x1C) + 1668681230) ^ *(_DWORD *)&v129[4 * (BYTE1(v66) ^ 0xE6)];
  v172 = (v171 - ((2 * v171) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * ((v66 >> 24) ^ 0xC6)];
  LODWORD(v66) = (v172 - ((2 * v172) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (a40 ^ 0xD8)];
  HIDWORD(v64) = (v64 >> 22) ^ 0xD1A9AAB9;
  LODWORD(v64) = HIDWORD(v64);
  v173 = ((v64 >> 10) - ((2 * (v64 >> 10)) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4
                                                                                        * (a44 ^ 0x9F)] ^ *(_DWORD *)&v129[4 * (((unsigned __int16)(a44 ^ 0x7CDC) >> 8) ^ 0x7F)] ^ (((unsigned __int16)(a44 ^ 0x7CDC) >> 8) - (((a44 ^ 0x20FD7CDC) >> 7) & 0x1C) + 1668681230);
  LODWORD(a48) = BYTE2(a44) ^ 0x32;
  LODWORD(v109) = *(_DWORD *)&v128[4 * (v302 ^ 0x85)] ^ *(_DWORD *)&v132[4 * (BYTE2(v302) ^ 0x70)] ^ *(_DWORD *)&v129[4 * (BYTE1(v302) ^ 0xC)] ^ ((BYTE1(v302) ^ 0x5B) - 2 * (((v302 >> 8) ^ 0xA76A5B) & 0x2E ^ (v302 >> 8) & 0x20) + 1668681230);
  LODWORD(a44) = v173 - ((2 * v173) & 0x70774786);
  v275 = LODWORD(STACK[0x210]) - ((a43 >> 7) & 0x1C);
  v273 = LODWORD(STACK[0x210]) ^ 0xBC;
  LODWORD(a35) = HIBYTE(v302) ^ 0xBC;
  v174 = (_DWORD)v66 - ((2 * (_DWORD)v66) & 0x70774786);
  v272 = (v109 ^ 0x41D6A4D3) - ((2 * (v109 ^ 0x41D6A4D3)) & 0x16C5D098);
  LODWORD(v62) = *(_DWORD *)&v129[4 * (((unsigned __int16)(v332 ^ 0x8200) >> 8) ^ 0xCC)] ^ (((unsigned __int16)(v332 ^ 0x8200) >> 8) - (((v332 ^ 0x17308200) >> 7) & 0x1C) + 1668681230);
  LODWORD(v109) = ((_DWORD)v62 - ((2 * (_DWORD)v62) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4
                                                                                                * ((v332 ^ 0x17308200) >> 16)];
  v175 = ((_DWORD)v109 - ((2 * (_DWORD)v109) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4
                                                                                          * (v332 ^ 0x2D)];
  LODWORD(v109) = *(_DWORD *)&v129[4 * (BYTE1(v340) ^ 0x28)] ^ ((BYTE1(v340) ^ 0x95)
                                                              - ((2 * ((v340 >> 8) ^ 0x37C995)) & 0x1C)
                                                              + 1668681230);
  v269 = HIBYTE(v332) ^ 0xCA;
  LODWORD(v109) = ((_DWORD)v109 - ((2 * (_DWORD)v109) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (HIBYTE(v340) ^ 0x23)];
  v270 = v175 - ((2 * v175) & 0x16C5D098);
  LODWORD(v109) = ((_DWORD)v109 - ((2 * (_DWORD)v109) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (v340 ^ 0x6C)];
  v176 = (v338 - ((v336 >> 7) & 0x1C) + 1668681230) ^ *(_DWORD *)&v128[4 * (v344 ^ 0x75)] ^ *(_DWORD *)&v132[4 * (v342 ^ 0x20)] ^ *(_DWORD *)&v129[4 * (v338 ^ 0xD2)] ^ 0x41D6A4D3;
  v267 = v176 - ((2 * v176) & 0x16C5D098);
  v177 = *(_DWORD *)&v129[4 * (((unsigned __int16)(v330 ^ 0x7C28) >> 8) ^ 0xCC)] ^ (((unsigned __int16)(v330 ^ 0x7C28) >> 8) - (((v330 ^ 0xA96A7C28) >> 7) & 0x1C) + 1668681230);
  v178 = (v177 - ((2 * v177) & 0x16C5D098) + 191031372) ^ *(_DWORD *)&v127[4 * (HIBYTE(v330) ^ 0xE4)];
  v179 = (v178 - ((2 * v178) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4
                                                                         * ((v330 ^ 0xA96A7C28) >> 16)];
  v180 = v179 - ((2 * v179) & 0xF3DA0E20);
  LODWORD(v62) = LODWORD(STACK[0x200]) ^ 0xF4;
  LODWORD(v303) = ((_DWORD)v109 - ((2 * (_DWORD)v109) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * (BYTE2(v340) ^ 0xF4)];
  LODWORD(v66) = *(_DWORD *)&v127[4 * (LODWORD(STACK[0x230]) ^ 0x77)] ^ *(_DWORD *)&v132[4
                                                                                       * (LODWORD(STACK[0x220]) ^ 0x28)] ^ 0x33594B8F;
  v181 = STACK[0x21C];
  v182 = LODWORD(STACK[0x21C]) ^ 0xE1F5E762;
  LODWORD(v72) = *(_DWORD *)&v129[4 * (BYTE1(v182) ^ 0x4E)] ^ (BYTE1(v182) - ((v182 >> 7) & 0x1C) + 1668681230);
  LODWORD(v78) = STACK[0x22C];
  LODWORD(v109) = LODWORD(STACK[0x22C]) ^ 0xD6C95B28;
  LODWORD(v122) = *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x22C])) ^ 0xAE)] ^ *(_DWORD *)&v128[4
                                                                                                * (LOBYTE(STACK[0x22C]) ^ 0x67)] ^ 0x728FEF5C;
  LODWORD(v101) = STACK[0x240];
  LODWORD(v83) = LODWORD(STACK[0x240]) ^ 0xF6670EC4;
  v183 = *(_DWORD *)&v129[4 * (BYTE1(v83) ^ 0xCC)] ^ (BYTE1(v83) - ((v83 >> 7) & 0x1C) + 1668681230);
  v184 = BYTE2(LODWORD(STACK[0x240])) ^ 0x92;
  LODWORD(STACK[0x210]) = *(_DWORD *)&v132[4 * (BYTE2(a54) ^ 0x82)];
  LODWORD(STACK[0x200]) = *(_DWORD *)&v132[4 * v289];
  LODWORD(STACK[0x230]) = *(_DWORD *)&v132[4 * BYTE2(v146)];
  LODWORD(STACK[0x220]) = *(_DWORD *)&v132[4 * (BYTE6(a36) ^ 0x8B)];
  LODWORD(STACK[0x208]) = *(_DWORD *)&v132[4 * (LODWORD(STACK[0x208]) ^ 0xCF)];
  v185 = (v183 - ((2 * v183) & 0x70774786) + 943432643) ^ *(_DWORD *)&v132[4 * v184];
  v343 = *(_DWORD *)&v132[4 * BYTE2(v113)];
  v341 = *(_DWORD *)&v132[4 * a48];
  LODWORD(a48) = *(_DWORD *)&v132[4 * (v334 ^ 0xA4)];
  v345 = *(_DWORD *)&v132[4 * (BYTE2(v78) ^ 0xA2)];
  v186 = *(_DWORD *)&v132[4 * BYTE2(v182)];
  v333 = a45 + 943432643;
  v331 = v294 + 943432643;
  LODWORD(STACK[0x22C]) = a52 + 943432643;
  v339 = a41 + 943432643;
  v335 = a42 + 943432643;
  LODWORD(a54) = v327 + 943432643;
  LODWORD(a52) = a44 + 943432643;
  LODWORD(a45) = v174 + 943432643;
  v337 = (_DWORD)v122 - ((2 * (_DWORD)v122) & 0x70774786) + 943432643;
  v187 = v186 ^ (v72 - ((2 * v72) & 0x70774786) + 943432643);
  v188 = (v187 - ((2 * v187) & 0xF3DA0E20) + 2045576976) ^ *(_DWORD *)&v128[4 * (v181 ^ 0xB8)];
  LODWORD(v70) = LODWORD(STACK[0x244]) ^ 0x85;
  LODWORD(a49) = *(_DWORD *)&v128[4 * (v114 ^ 0xB6)];
  v189 = (v185 + (~(2 * v185) | 0xE93A2F67) + 191031373) ^ *(_DWORD *)&v127[4 * ((v101 >> 24) ^ 0xE5)];
  LODWORD(a44) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x250]) ^ 0x68)];
  LODWORD(STACK[0x244]) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x2B8]) ^ 0x20)];
  LODWORD(STACK[0x250]) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x27C]) ^ 0xF3)];
  LODWORD(a41) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x2D0]) ^ 0x4A)];
  LODWORD(v322) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x2A8]) ^ 0x49)];
  LODWORD(a43) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x294]) ^ 0xEC)];
  LODWORD(a40) = *(_DWORD *)&v128[4 * v297];
  HIDWORD(v325) = *(_DWORD *)&v128[4 * (v346 ^ 0xC1)];
  LODWORD(STACK[0x240]) = *(_DWORD *)&v128[4 * v282];
  HIDWORD(a36) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x2C0]) ^ 0x40)];
  LODWORD(a42) = *(_DWORD *)&v128[4 * (v324 ^ 0x44)];
  LODWORD(STACK[0x294]) = *(_DWORD *)&v128[4 * (LODWORD(STACK[0x298]) ^ 0xDB)];
  LODWORD(v325) = *(_DWORD *)&v128[4 * v62];
  v347 = *(_DWORD *)&v128[4 * v70];
  LODWORD(STACK[0x21C]) = *(_DWORD *)&v128[4 * (v83 ^ 0xD7)];
  HIDWORD(v321) = *(_DWORD *)&v127[4 * (LODWORD(STACK[0x238]) ^ 0x1C)];
  LODWORD(v321) = a55 + 2045576976;
  v298 = *(_DWORD *)&v127[4 * v285];
  HIDWORD(v322) = *(_DWORD *)&v127[4 * (HIBYTE(LODWORD(STACK[0x2C8])) ^ 0xA)];
  v287 = a47 + 2045576976;
  LODWORD(a55) = HIDWORD(a46) + 2045576976;
  LODWORD(STACK[0x238]) = v317 + 2045576976;
  v283 = v314 + 2045576976;
  v279 = v312 + 2045576976;
  v281 = *(_DWORD *)&v127[4 * (HIBYTE(v318) ^ 0xD6)];
  LODWORD(v315) = v309 + 2045576976;
  LODWORD(v310) = v308 + 2045576976;
  HIDWORD(v310) = v305 + 2045576976;
  LODWORD(a47) = *(_DWORD *)&v127[4 * (LODWORD(STACK[0x28C]) ^ 0xB4)];
  HIDWORD(a46) = v295 + 2045576976;
  v286 = v290 + 2045576976;
  LODWORD(v320) = v278 + 2045576976;
  HIDWORD(v306) = *(_DWORD *)&v127[4 * a35];
  HIDWORD(v319) = v180 + 2045576976;
  HIDWORD(v320) = (_DWORD)v66 - ((2 * (_DWORD)v66) & 0xF3DA0E20) + 2045576976;
  LODWORD(a35) = v189 - ((2 * v189) & 0xF3DA0E20) + 2045576976;
  v291 = *(_DWORD *)&v127[4 * v269];
  HIDWORD(v315) = *(_DWORD *)&v127[4 * (HIBYTE(v181) ^ 0xFD)];
  LODWORD(v319) = *(_DWORD *)&v127[4 * (LODWORD(STACK[0x248]) ^ 0x56)];
  v264 = v328 + 191031372;
  v190 = a56 + 191031372;
  LODWORD(a56) = a51 + 191031372;
  LODWORD(STACK[0x248]) = LODWORD(STACK[0x290]) + 191031372;
  v329 = v292 + 191031372;
  v266 = v272 + 191031372;
  LODWORD(v306) = v267 + 191031372;
  v259 = v188 - ((2 * v188) & 0x16C5D098) + 191031372;
  LODWORD(a51) = *(_DWORD *)&v129[4 * a50];
  v191 = LODWORD(STACK[0x260]) ^ 0x5D;
  v192 = LODWORD(STACK[0x260]) - ((LODWORD(STACK[0x258]) >> 7) & 0x1C);
  LODWORD(v70) = BYTE1(LODWORD(STACK[0x278]));
  LODWORD(v72) = v70 - ((LODWORD(STACK[0x278]) >> 7) & 0x1C);
  LODWORD(a50) = *(_DWORD *)&v129[4 * (v70 ^ 6)];
  LODWORD(STACK[0x258]) = *(_DWORD *)&v129[4 * v273];
  v256 = *(_DWORD *)&v129[4 * v191];
  v257 = *(_DWORD *)&v129[4 * (BYTE1(v109) ^ 0x4E)];
  v254 = a53 + 1668681230;
  v252 = v72 + 1668681230;
  LODWORD(a53) = v275 + 1668681230;
  LODWORD(STACK[0x260]) = v192 + 1668681230;
  v193 = BYTE1(v109) - ((v109 >> 7) & 0x1C) + 1668681230;
  LODWORD(v129) = STACK[0x280];
  v194 = STACK[0x2A0];
  v195 = (char *)*(&off_100236540 + (LODWORD(STACK[0x280]) ^ 0x1661)) - 1156482562;
  v196 = (char *)*(&off_100236540 + (LODWORD(STACK[0x280]) ^ 0x15EC)) - 1548520179;
  v197 = (char *)*(&off_100236540 + (LODWORD(STACK[0x280]) ^ 0x16E9)) - 1601236058;
  v198 = (_BYTE *)(STACK[0x2A0] + 8);
  v199 = (char *)*(&off_100236540 + LODWORD(STACK[0x280]) - 5248) - 1561234151;
  v200 = v197[*(unsigned __int8 *)(STACK[0x2A0] + 3) ^ 0xDCLL] ^ 0x23 | (((v199[*(unsigned __int8 *)(STACK[0x2A0] + 2) ^ 0xD0] ^ (*(_BYTE *)(STACK[0x2A0] + 2) - ((2 * *(_BYTE *)(STACK[0x2A0] + 2)) & 0xD0) + 104)) ^ 0x7D) << 8) | (((v196[*(unsigned __int8 *)STACK[0x2A0] ^ 0x93] ^ (*(_BYTE *)STACK[0x2A0] - ((2 * *(_BYTE *)STACK[0x2A0]) & 0x6C) + 54)) ^ 0x6D) << 24) | ((v195[*(unsigned __int8 *)(STACK[0x2A0] + 1) ^ 0xALL] ^ 0x91) << 16);
  LODWORD(v128) = (((*(unsigned __int8 *)(STACK[0x2A0] + 4) - ((2 * *(unsigned __int8 *)(STACK[0x2A0] + 4)) & 0x6C) + 54) ^ v196[*(unsigned __int8 *)(STACK[0x2A0] + 4) ^ 0x23] ^ 0xEC) << 24) | ((v195[*(unsigned __int8 *)(STACK[0x2A0] + 5) ^ 0x7CLL] ^ 0x9A) << 16) | v197[*(unsigned __int8 *)(STACK[0x2A0] + 7) ^ 0x83] ^ 0x23;
  v201 = v197[*(unsigned __int8 *)(STACK[0x2A0] + 11) ^ 0xELL] ^ 0x23 | ((v195[*(unsigned __int8 *)(STACK[0x2A0] + 9) ^ 0x16] ^ 0x67) << 16) & 0xFFFFFF | (((v196[*v198 ^ 0xDLL] ^ (*v198 - ((2 * *v198) & 0x6C) + 54)) ^ 0x7B) << 24);
  LODWORD(STACK[0x2A8]) = v197[*(unsigned __int8 *)(STACK[0x2A0] + 15) ^ 0x12] ^ 0x58 | ((v195[*(unsigned __int8 *)(STACK[0x2A0] + 13) ^ 0x12] ^ 0xE5) << 16) & 0xFFFFFF | (((v199[*(unsigned __int8 *)(STACK[0x2A0] + 14) ^ 0xD8] ^ (*(_BYTE *)(STACK[0x2A0] + 14) - ((2 * *(_BYTE *)(STACK[0x2A0] + 14)) & 0xD0) + 104)) ^ 0xD) << 8) | (((v196[*(unsigned __int8 *)(STACK[0x2A0] + 12) ^ 0x10] ^ (*(_BYTE *)(STACK[0x2A0] + 12) + (~(2 * *(_BYTE *)(STACK[0x2A0] + 12)) | 0x93) + 55)) ^ 0x43) << 24);
  LODWORD(v128) = v128 & 0xFFFF00FF | (((v199[*(unsigned __int8 *)(v194 + 6) ^ 0x4FLL] ^ (*(_BYTE *)(v194 + 6) + (~(2 * *(_BYTE *)(v194 + 6)) | 0x2F) + 105)) ^ 0xDE) << 8);
  v202 = v201 & 0xFFFF00FF | (((v199[*(unsigned __int8 *)(v194 + 10) ^ 0x6ELL] ^ (*(_BYTE *)(v194 + 10)
                                                                                                 + (~(2 * *(_BYTE *)(v194 + 10)) | 0x2F)
                                                                                                 + 105)) ^ 0x43) << 8);
  v203 = (__ROR8__(v194, 8) & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56;
  v204 = v203 ^ 0xBD7E06799BE56458;
  v203 ^= 0x8F41F671013B3EEALL;
  v205 = (__ROR8__(v204, 8) + v203) ^ 0x858543C4A1D93973;
  v206 = v205 ^ __ROR8__(v203, 61);
  v207 = v206 + __ROR8__(v205, 8);
  v208 = v207 ^ __ROR8__(v206, 61);
  v209 = __ROR8__(v207 ^ 0x17D9A711A491E013, 8) + (v208 ^ 0x17D9A711A491E013);
  *((_QWORD *)&v210 + 1) = v208 ^ 0x17D9A711A491E013;
  *(_QWORD *)&v210 = v208;
  v211 = v209 ^ (v210 >> 61);
  *((_QWORD *)&v210 + 1) = v211 ^ 0x19D8A247FDB338A4;
  *(_QWORD *)&v210 = v211;
  v212 = (__ROR8__(v209 ^ 0x19D8A247FDB338A4, 8) + (v211 ^ 0x19D8A247FDB338A4)) ^ 0x98BAA5DD2515B1FFLL;
  v213 = v212 ^ (v210 >> 61);
  v214 = (v213 + (v212 >> 8) + (v212 << 56)) ^ 0xBDC40B7C2F73B18BLL;
  v215 = v214 ^ __ROR8__(v213, 61);
  v216 = (__ROR8__(v214, 8) + v215) ^ 0xDB1C4740BFE60391;
  v217 = (v216 ^ __ROR8__(v215, 61)) + __ROR8__(v216, 8);
  v218 = (__ROR8__(v198, 8) & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56;
  v219 = v218 ^ 0xBD7E06799BE56458;
  v218 ^= 0x8F41F671013B3EEALL;
  v220 = (__ROR8__(v219, 8) + v218) ^ 0x858543C4A1D93973;
  v221 = v220 ^ __ROR8__(v218, 61);
  v222 = (__ROR8__(v220, 8) + v221) ^ 0x17D9A711A491E013;
  v223 = v222 ^ __ROR8__(v221, 61);
  v224 = v223 + __ROR8__(v222, 8);
  *(_QWORD *)&v210 = __ROR8__(v223, 61);
  *((_QWORD *)&v210 + 1) = v224 ^ v210 ^ 0x19D8A247FDB338A4;
  *(_QWORD *)&v210 = v224 ^ v210;
  v225 = (__ROR8__(v224 ^ 0x19D8A247FDB338A4, 8) + *((_QWORD *)&v210 + 1)) ^ 0x98BAA5DD2515B1FFLL;
  v226 = v225 ^ (v210 >> 61);
  v227 = (v226 + __ROR8__(v225, 8)) ^ 0xBDC40B7C2F73B18BLL;
  v228 = v227 ^ __ROR8__(v226, 61);
  v229 = (__ROR8__(v227, 8) + v228) ^ 0xDB1C4740BFE60391;
  v230 = (v229 ^ __ROR8__(v228, 61)) + __ROR8__(v229, 8);
  v231 = (__ROR8__(v194 + 16, 8) & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56;
  *(_QWORD *)&v210 = __ROR8__(v231 ^ 0xBD7E06799BE56458, 8);
  v231 ^= 0x8F41F671013B3EEALL;
  v232 = (v210 + v231) ^ 0x858543C4A1D93973;
  v233 = v232 ^ __ROR8__(v231, 61);
  v234 = __ROR8__(v232, 8) + v233;
  v235 = v234 ^ __ROR8__(v233, 61);
  *((_QWORD *)&v210 + 1) = v235 ^ 0x17D9A711A491E013;
  *(_QWORD *)&v210 = v235;
  v236 = (__ROR8__(v234 - ((2 * v234) & 0x2FB34E234923C026) + 0x17D9A711A491E013, 8) + (v235 ^ 0x17D9A711A491E013)) ^ 0x19D8A247FDB338A4;
  v237 = v236 ^ (v210 >> 61);
  v238 = (__ROR8__(v236, 8) + v237) ^ 0x98BAA5DD2515B1FFLL;
  v239 = __ROR8__(v238, 8);
  v240 = v238 ^ __ROR8__(v237, 61);
  v241 = ((v240 ^ v239) + 2 * (v239 & v240)) ^ 0xBDC40B7C2F73B18BLL;
  v242 = v241 ^ __ROR8__(v240, 61);
  v243 = v242 + __ROR8__(v241, 8);
  v244 = v243 ^ __ROR8__(v242, 61) ^ 0xB1C4740BFE60391;
  *(_QWORD *)&v210 = __ROR8__(v243 ^ 0xDB1C4740BFE60391, 8);
  LOBYTE(v243) = (8 * v194) & 0x38;
  v245 = (v217 ^ 0x7FB3B9589E9A63A8) >> v243;
  v230 ^= 0x7FB3B9589E9A63A8uLL;
  v246 = v230 >> v243;
  LOBYTE(v243) = v243 ^ 0x3C;
  v247 = v245 + 16 * (v230 << v243);
  LODWORD(STACK[0x2A0]) = ((((_DWORD)v245 - ((2 * (_DWORD)v245) & 0x6C) + 54) ^ v196[v245 ^ 0xAFLL] ^ 0x6D) << 24) | ((v195[BYTE1(v247) ^ 0x4BLL] ^ 0xB2) << 16) | ((((BYTE2(v247) - ((v247 >> 15) & 0xD0) + 104) ^ v199[BYTE2(v247) ^ 0x5CLL]) ^ 0x51) << 8) | v197[BYTE3(v247) ^ 0xBLL] ^ 0x49;
  LODWORD(v122) = (((HIDWORD(v247) - ((2 * HIDWORD(v247)) & 0x6C) + 54) ^ v196[BYTE4(v247) ^ 5] ^ 0x54) << 24) | ((v195[BYTE5(v247) ^ 0xC9] ^ 0x5B) << 16) | ((((BYTE6(v247) - ((2 * BYTE6(v247)) & 0xD0) + 104) ^ v199[BYTE6(v247) ^ 0xE1]) ^ 0x9B) << 8);
  LODWORD(v245) = v197[HIBYTE(v247) ^ 0x54] ^ 0x6D;
  v248 = v246 + 16 * ((((_QWORD)v210 + v244) ^ 0xFB3B9589E9A63A8) << v243);
  LODWORD(v244) = (v246 - ((2 * v246) & 0x6C) + 54) ^ v196[v246 ^ 0x28] ^ 0x9E;
  LODWORD(STACK[0x27C]) = v122 | v245;
  LODWORD(STACK[0x298]) = ((_DWORD)v244 << 24) | ((v195[BYTE1(v248) ^ 0x98] ^ 0x8A) << 16) | ((((BYTE2(v248) - ((v248 >> 15) & 0xD0) + 104) ^ v199[BYTE2(v248) ^ 0x89]) ^ 0x9A) << 8) | v197[BYTE3(v248) ^ 0x90] ^ 0x97;
  STACK[0x2C8] = (unint64_t)v196;
  LODWORD(v122) = ((HIDWORD(v248) + (~(2 * HIDWORD(v248)) | 0x93) + 55) ^ v196[BYTE4(v248) ^ 0x94] ^ 0xA2) << 24;
  STACK[0x2D0] = (unint64_t)v195;
  LODWORD(v122) = v122 & 0xFF00FFFF | ((v195[BYTE5(v248) ^ 0xA3] ^ 0xA6) << 16);
  STACK[0x2B8] = (unint64_t)v199;
  LOBYTE(v245) = (BYTE6(v248) - ((2 * BYTE6(v248)) & 0xD0) + 104) ^ v199[BYTE6(v248) ^ 0x5ALL];
  STACK[0x2C0] = (unint64_t)v197;
  LODWORD(STACK[0x28C]) = v122 & 0xFFFF00FF | ((v245 ^ 0x56) << 8) | v197[HIBYTE(v248) ^ 0x5F] ^ 0x4C;
  LODWORD(v66) = STACK[0x26C];
  LODWORD(v70) = (v276 + 2045576976) ^ LODWORD(STACK[0x294]);
  LODWORD(STACK[0x278]) = v128 ^ 0x4F4F4F56;
  LODWORD(STACK[0x290]) = v202 ^ 0x4F4F4FFE;
  LODWORD(STACK[0x294]) = v200 ^ 0x4F4F4F72;
  LODWORD(v296) = v66 ^ LODWORD(STACK[0x274]);
  HIDWORD(v293) = a45 ^ a48;
  LODWORD(v293) = v190 ^ v298;
  HIDWORD(v288) = (v270 + 191031372) ^ v291;
  LODWORD(v288) = v287 ^ a44;
  HIDWORD(v284) = v286 ^ HIDWORD(a36);
  LODWORD(v284) = v283 ^ a41;
  HIDWORD(v280) = LODWORD(STACK[0x248]) ^ v281;
  LODWORD(v280) = v279 ^ v322;
  HIDWORD(v277) = LODWORD(STACK[0x270]) - 719314427;
  LODWORD(v277) = (v303 ^ HIDWORD(v303) ^ v66 ^ 0x99872D5) & 0xFFFFFFEF ^ v303 ^ HIDWORD(v303) ^ ((v303 ^ HIDWORD(v303) ^ v66 ^ 0x99872D5) & 0x10 | 0xCC7D6C83);
  HIDWORD(v274) = a40 ^ (v310 + 1);
  LODWORD(v274) = a43 ^ v315;
  HIDWORD(v271) = LODWORD(STACK[0x200]) ^ v331;
  LODWORD(v271) = HIDWORD(v325) ^ HIDWORD(v310);
  HIDWORD(v268) = v343 ^ a54;
  LODWORD(v268) = v341 ^ a52;
  HIDWORD(v265) = HIDWORD(v306) ^ v266;
  LODWORD(v265) = a49 ^ v321;
  HIDWORD(v263) = HIDWORD(v321) ^ v264;
  LODWORD(v263) = LODWORD(STACK[0x210]) ^ v333;
  HIDWORD(v296) = v70;
  HIDWORD(v262) = v70 ^ 0xDD6F0296 ^ -(v70 ^ 0xDD6F0296);
  LODWORD(v262) = a42 ^ v320;
  HIDWORD(v261) = LODWORD(STACK[0x208]) ^ v335;
  LODWORD(v261) = LODWORD(STACK[0x220]) ^ v339;
  HIDWORD(v260) = v325 ^ (v180 + 2045576976);
  LODWORD(v260) = v319 ^ v306;
  HIDWORD(v258) = HIDWORD(v315) ^ v259;
  LODWORD(v258) = v193 ^ v345 ^ v337 ^ v257;
  HIDWORD(v255) = LODWORD(STACK[0x260]) ^ HIDWORD(v320) ^ v347 ^ v256;
  LODWORD(v255) = LODWORD(STACK[0x21C]) ^ a35;
  HIDWORD(v253) = v254 ^ HIDWORD(v322) ^ a56 ^ a51;
  LODWORD(v253) = v252 ^ a55 ^ LODWORD(STACK[0x244]) ^ a50;
  HIDWORD(v251) = LODWORD(STACK[0x240]) ^ HIDWORD(a46);
  LODWORD(v251) = a53 ^ v329 ^ a47 ^ LODWORD(STACK[0x258]);
  HIDWORD(v250) = LODWORD(STACK[0x230]) ^ LODWORD(STACK[0x22C]);
  LODWORD(v250) = LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x238]);
  return (*(uint64_t (**)(char *, char *, char *, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v304 + 8 * (int)v129))(v196, v197, v195, v246, v200, 0xDB1C4740BFE60391, 155, 0x4647FE01135BCB56, a2, a3, v250, v251, v253, v255, v258, v260, v261, v262, v263,
           v265,
           v268,
           v271,
           v274,
           v277,
           v280,
           v284,
           v288,
           v293,
           v296,
           v299,
           v300,
           v301,
           v303,
           v304,
           a28,
           a29,
           v306,
           v310,
           v315,
           v319,
           v320,
           a35,
           a36,
           v321,
           v322,
           v325,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_100125AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,int a45,int a46)
{
  uint64_t v46;
  uint64_t (*v47)(void);

  LODWORD(STACK[0x298]) = 0;
  LODWORD(STACK[0x2A0]) = 0;
  LODWORD(STACK[0x27C]) = 0;
  LODWORD(STACK[0x294]) = (((4 * a46) ^ 0x4EB0) + 1330592741) ^ a40;
  LODWORD(STACK[0x278]) = a39 ^ 0x4F4F4F4F;
  v47 = *(uint64_t (**)(void))(v46 + 8 * a46);
  LODWORD(STACK[0x290]) = a41 ^ 0x4F4F4F4F;
  LODWORD(STACK[0x2AC]) = a42;
  LODWORD(STACK[0x2A8]) = a38;
  LODWORD(STACK[0x2B0]) = a43;
  LODWORD(STACK[0x2B4]) = a45;
  LODWORD(STACK[0x29C]) = a44;
  return v47();
}

void sub_100125BC0(uint64_t a1)
{
  int v1;

  v1 = 447355651 * (((a1 ^ 0x87D0F91C) - 2 * ((a1 ^ 0x87D0F91C) & 0x170B49CC) + 386615756) ^ 0x79D773CC);
  __asm { BR              X10 }
}

uint64_t sub_100125CBC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;

  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * ((7406 * (*a1 != 0)) ^ v32)))(a1, a2, a3, a4, a5, a6, a7, a8, a1, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_100125CF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  unsigned int v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 8 * (int)((5754 * (a8 == *(_QWORD *)(a9 + 32))) ^ v31 ^ 0xE37)) - (v31 ^ 0x9CELL)))(a9, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_100125D48@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  __int16 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 - 128) = *(_BYTE *)a2;
  *(_QWORD *)(v3 - 127) = *(_QWORD *)(a2 + 1);
  v4 = *(_DWORD *)(a2 + 9);
  v5 = *(_WORD *)(a2 + 13);
  v6 = *(_BYTE *)(a2 + 15);
  *(_DWORD *)(v3 - 119) = v4;
  v7 = (v2 + 461);
  *(_WORD *)(v3 - 115) = v5;
  v8 = *(_QWORD *)(a1 + 8 * v2);
  *(_BYTE *)(v3 - 113) = v6;
  return ((uint64_t (*)(void))(v8 - (v7 ^ 0x9CE)))();
}

uint64_t sub_100125D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  BOOL v41;
  int v43;

  if (a39)
    v41 = *(_QWORD *)(a1 + 48) == 0;
  else
    v41 = 1;
  v43 = !v41 && v40 != 0;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * ((v43 * ((v39 + 142) ^ 0x1BD9)) ^ v39)))((v39 + 142), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_100125DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  _BOOL4 v37;

  v35 = (((*(_DWORD *)(a9 + 28) - v32) << (v33 + 55)) & (v33 ^ 0xD95FFF74) ^ 0xD81B8430)
      + ((*(_DWORD *)(a9 + 28) - v32) ^ 0x82F23DC7);
  v37 = ((((v34 - 1857) | 0x122) - 924) & (v35 + 1)) == 0 && v35 != -324011169;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * ((4571 * v37) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_100125E5C@<X0>(uint64_t a1@<X2>, unsigned __int8 *a2@<X8>, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  char *v18;
  char v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unint64_t v24;
  char *v25;
  int v26;
  unsigned int v27;
  char *v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;

  v9 = (char *)*(&off_100236540 + v7 - 72) - 1918308343;
  v10 = (char *)*(&off_100236540 + v7 - 68) - 716226059;
  v11 = (char *)*(&off_100236540 + (v7 ^ 0x24C)) - 152008331;
  v12 = v11[*(unsigned __int8 *)(v6 - 0x292C7851D42B335BLL) ^ 0x6DLL];
  HIDWORD(v13) = v12 ^ 0x37;
  LODWORD(v13) = v12 << 24;
  LOBYTE(v12) = v13 >> 30;
  v14 = v11[*(unsigned __int8 *)(v6 - 0x292C7851D42B3363) ^ 0x5DLL];
  HIDWORD(v13) = v14 ^ 0x37;
  LODWORD(v13) = v14 << 24;
  v15 = v11[*v5 ^ 0x10];
  v16 = (v9[*(unsigned __int8 *)(v6 - 0x292C7851D42B3360) ^ 0xF3] ^ 0x37) & 0xFFFFFF | (((v13 >> 30) ^ 0x32) << 24);
  HIDWORD(v13) = v15 ^ 0x37;
  LODWORD(v13) = v15 << 24;
  v17 = (v9[*(unsigned __int8 *)(v6 - 0x292C7851D42B3364) ^ 0x41] ^ 0x4B) & 0xFFFFFF | (((v13 >> 30) ^ 0xD8) << 24);
  v18 = (char *)*(&off_100236540 + v7 - 640) - 815300831;
  v19 = v18[*(unsigned __int8 *)(v6 - 0x292C7851D42B3359) ^ 0x55];
  v20 = v9[*(unsigned __int8 *)(v6 - 0x292C7851D42B3358) ^ 0x54];
  LODWORD(v11) = v11[*(unsigned __int8 *)(v6 - 0x292C7851D42B335FLL) ^ 0xF4];
  HIDWORD(v13) = v11 ^ 0x37;
  LODWORD(v13) = (_DWORD)v11 << 24;
  v21 = ((((*(_BYTE *)(v6 - 0x292C7851D42B335ELL) ^ 0xA9)
                          + v10[v7 ^ 0x61 ^ *(_BYTE *)(v6 - 0x292C7851D42B335ELL) ^ 0x35]
                          + 1) ^ 0x3D) << 16) & 0xFFFFFF | (((v13 >> 30) ^ 8) << 24) | v9[*(unsigned __int8 *)(v6 - 0x292C7851D42B335CLL) ^ 0x34] ^ 0x2A;
  v22 = v17 & 0xFF0000FF | ((v18[*(unsigned __int8 *)(v6 - 0x292C7851D42B3365) ^ 0x7DLL] ^ 0x9D) << 8) | ((((*(_BYTE *)(v6 - 0x292C7851D42B3366) ^ 0x8C) + v10[*(unsigned __int8 *)(v6 - 0x292C7851D42B3366) ^ 0xDALL] + 1) ^ 9) << 16);
  v23 = v16 & 0xFF0000FF | ((v18[*(unsigned __int8 *)(v6 - 0x292C7851D42B3361) ^ 0xA9] ^ 0x3E) << 8) | (~((*(_BYTE *)(v6 - 0x292C7851D42B3362) ^ 0x5A) + v10[*(unsigned __int8 *)(v6 - 0x292C7851D42B3362) ^ 0xCLL] + 1) << 16);
  v24 = ((((*(_BYTE *)(v6 - 0x292C7851D42B335ALL)
                           + v10[*(unsigned __int8 *)(v6 - 0x292C7851D42B335ALL) ^ 0xD6]
                           - 127) ^ 0x9CLL) << 16) & 0xFFFFFFFF00FF00FFLL | ((unint64_t)(v12 ^ 0x79u) << 24) | ((unint64_t)(v19 ^ 0x76u) << 8) | v20) ^ 0xF9924B8E;
  v25 = (char *)*(&off_100236540 + v7 - 50) - 1749306727;
  v26 = *(_DWORD *)&v25[4 * (v20 ^ 0x87)];
  HIDWORD(v13) = v26 ^ 0x1B9;
  LODWORD(v13) = v26 ^ 0x7EF57C00;
  v27 = v21 & 0xFFFF00FF | ((v18[*(unsigned __int8 *)(v6 - 0x292C7851D42B335DLL) ^ 0xA8] ^ 0x2B) << 8);
  v28 = (char *)*(&off_100236540 + v7 - 386) - 1792487127;
  v29 = (char *)*(&off_100236540 + v7 - 506) - 1347733631;
  v30 = (char *)*(&off_100236540 + v7 - 601) - 906158626;
  v31 = (*(_DWORD *)&v29[4 * (v12 ^ 0x9C)] - 1998145274) ^ *(_DWORD *)&v28[4 * (BYTE2(v24) ^ 0x23)] ^ ((v13 >> 9) - ((2 * (v13 >> 9)) & 0x4FC10744) + 669025186);
  v32 = *(_DWORD *)&v30[4 * (v19 ^ 0x1E)] ^ v22 ^ (v31 - ((2 * v31) & 0x144ADFEC) + 170225654);
  LODWORD(v110) = v32 ^ v23;
  v33 = v32 ^ v23 ^ 0x7C53E9A0;
  v34 = v33 ^ v27 ^ v24;
  HIDWORD(v109) = v34 ^ 0x11C6FF4C;
  v35 = *(_DWORD *)&v29[4 * (HIBYTE(v34) ^ 0xD)];
  v36 = (v35 - ((2 * v35 + 298676748) & 0x4FC10744) - 1329120088) ^ *(_DWORD *)&v28[4
                                                                                  * (((v34 ^ 0x11C6FF4C) >> 16) ^ 0x23)];
  v37 = *(_DWORD *)&v25[4 * ((v33 ^ v27 ^ v24) ^ 0x45)];
  HIDWORD(v13) = v37 ^ 0x1B9;
  LODWORD(v13) = v37 ^ 0x7EF57C00;
  HIDWORD(v110) = v32;
  LODWORD(v109) = (v13 >> 9) ^ *(_DWORD *)&v30[4 * (BYTE1(v34) ^ 0xDC)] ^ v32 ^ (v36
                                                                               - ((2 * v36) & 0x144ADFEC)
                                                                               + 170225654);
  HIDWORD(v108) = v109 ^ 0x2D12528A ^ v33;
  v111 = v24;
  v38 = *(_DWORD *)&v25[4 * (BYTE4(v108) ^ 0x1C ^ v24 ^ 9)];
  HIDWORD(v13) = v38 ^ 0x1B9;
  LODWORD(v13) = v38 ^ 0x7EF57C00;
  v39 = (*(_DWORD *)&v29[4 * (((HIDWORD(v108) ^ 0x5193861C ^ v24) >> 24) ^ 0xED)] - 1998145274) ^ *(_DWORD *)&v28[4 * (((HIDWORD(v108) ^ 0x5193861C ^ v24) >> 16) ^ 0x23)] ^ ((v13 >> 9) - ((2 * (v13 >> 9)) & 0x4FC10744) + 669025186);
  v40 = v109 ^ 0x2D12528A ^ *(_DWORD *)&v30[4
                                          * (((unsigned __int16)(WORD2(v108) ^ 0x861C ^ v24) >> 8) ^ 0x23)] ^ (v39 - ((2 * v39) & 0x144ADFEC) + 170225654);
  LODWORD(v108) = HIDWORD(v108) ^ 0x5193861C ^ v24;
  v41 = v40 ^ v33 ^ v27 ^ v108;
  v42 = v41 ^ 0xA44A592B;
  v43 = *(_DWORD *)&v25[4 * ((v40 ^ v33 ^ v27 ^ BYTE4(v108) ^ 0x1C ^ v24) ^ 0xFD)];
  HIDWORD(v13) = v43 ^ 0x1B9;
  LODWORD(v13) = v43 ^ 0x7EF57C00;
  v44 = ((v13 >> 9) - ((2 * (v13 >> 9)) & 0x144ADFEC) + 170225654) ^ *(_DWORD *)&v30[4
                                                                                   * (((unsigned __int16)(v41 ^ 0x592B) >> 8) ^ 0xE9)];
  HIDWORD(v106) = v41;
  v45 = v40 ^ *(_DWORD *)&v28[4 * (((v41 ^ 0xA44A592B) >> 16) ^ 0x62)] ^ (v44
                                                                                         - ((2 * v44) & 0x4FC10744)
                                                                                         + 669025186);
  v46 = *(_DWORD *)&v29[4 * (HIBYTE(v41) ^ 0x66)] - 1998145274;
  v47 = (v45 ^ 0x73DA8718 ^ -(v45 ^ 0x73DA8718) ^ (v46 + (v46 ^ v45 ^ 0x8C2578E7) + 1)) + v46;
  LODWORD(v107) = v40 ^ v33 ^ v27;
  HIDWORD(v107) = v40;
  v48 = v40 ^ HIDWORD(v108) ^ 0x5193861C;
  LODWORD(v106) = v47 ^ v48;
  v49 = v47 ^ v48 ^ v107;
  LODWORD(v24) = v49 ^ v42;
  v50 = v49 ^ v42 ^ 0x174A28DE;
  v51 = *(_DWORD *)&v25[4 * (v50 ^ 0xCE)];
  HIDWORD(v13) = v51 ^ 0x1B9;
  LODWORD(v13) = v51 ^ 0x7EF57C00;
  HIDWORD(v105) = v49;
  v52 = (*(_DWORD *)&v29[4 * (BYTE3(v24) ^ 0xF2)] - 1998145274) ^ *(_DWORD *)&v30[4 * (BYTE1(v50) ^ 0x6E)] ^ ((v13 >> 9) - ((2 * (v13 >> 9)) & 0x144ADFEC) + 170225654);
  v53 = (v52 - ((2 * v52) & 0x4FC10744) + 669025186) ^ *(_DWORD *)&v28[4 * (BYTE2(v50) ^ 0xB8)];
  *(_QWORD *)((char *)&v106 + 4) = __PAIR64__(v47, v48);
  v54 = v53 ^ v48;
  v55 = v49 ^ v53 ^ v48;
  v56 = v50 ^ v55;
  v57 = v50 ^ v55 ^ 0x7290DE33;
  v58 = *(_DWORD *)&v25[4 * (v57 ^ 0xA9)];
  HIDWORD(v13) = v58 ^ 0x1B9;
  LODWORD(v13) = v58 ^ 0x7EF57C00;
  HIDWORD(v104) = v56;
  v59 = (v13 >> 9) ^ (*(_DWORD *)&v29[4 * (HIBYTE(v56) ^ 0x23)] - 1998145274);
  v60 = (v59 - ((2 * v59) & 0x4FC10744) + 669025186) ^ *(_DWORD *)&v28[4 * (BYTE2(v57) ^ 0x34)];
  LODWORD(v104) = v47 ^ v53;
  v61 = (v60 - ((2 * v60) & 0x144ADFEC) + 170225654) ^ *(_DWORD *)&v30[4 * (BYTE1(v57) ^ 0xC8)] ^ v47 ^ v53;
  *(_QWORD *)((char *)&v105 + 4) = __PAIR64__(v24, v54);
  LODWORD(v103) = v61 ^ v54;
  v62 = v61 ^ v54 ^ 0x6DDA8718;
  HIDWORD(v102) = v62 ^ v55;
  v63 = v57 ^ v62 ^ v55;
  v64 = *(_DWORD *)&v25[4 * (v63 ^ 0xFD)];
  HIDWORD(v13) = v64 ^ 0x1B9;
  LODWORD(v13) = v64 ^ 0x7EF57C00;
  v65 = *(_DWORD *)&v28[4 * (((v63 ^ 0xBA4F91F4) >> 16) ^ 0x67)] ^ *(_DWORD *)&v30[4 * (((unsigned __int16)(v63 ^ 0x91F4) >> 8) ^ 0x21)] ^ (*(_DWORD *)&v29[4 * (HIBYTE(v63) ^ 0x97)] - 1998145274) ^ (v13 >> 9);
  HIDWORD(v103) = v61;
  *(_DWORD *)(v8 - 168) = v4;
  v66 = v65 ^ v61;
  v67 = v65 ^ v61 ^ 0x2DC5EC54;
  LODWORD(v105) = v55;
  LODWORD(v101) = v67 ^ v55;
  LODWORD(v24) = v67 ^ v55 ^ 0xA7873593;
  LODWORD(v102) = v63;
  v68 = v67 ^ v62;
  v69 = *(_DWORD *)&v25[4 * ((v63 ^ v24) ^ 0x9A)];
  HIDWORD(v13) = v69 ^ 0x1B9;
  LODWORD(v13) = v69 ^ 0x7EF57C00;
  HIDWORD(v101) = v66;
  HIDWORD(v99) = *(_DWORD *)&v30[4 * (((unsigned __int16)(v63 ^ v24 ^ 0x93F4) >> 8) ^ 0x85)] ^ *(_DWORD *)&v28[4 * (((v63 ^ v24 ^ 0x8B0B93F4) >> 16) ^ 0xAF)] ^ (*(_DWORD *)&v29[4 * (((v63 ^ v24) >> 24) ^ 0x73)] - 1998145274) ^ (v13 >> 9) ^ v66;
  LODWORD(v99) = HIDWORD(v99) ^ 0x9B56508A ^ v68;
  HIDWORD(v98) = v99 ^ v24;
  v70 = v99 ^ v24 ^ 0x4853E9A0;
  HIDWORD(v100) = v63 ^ v24;
  v71 = v70 ^ v63 ^ v24 ^ 0xDC4F91F4;
  v72 = *(_DWORD *)&v29[4 * (((v70 ^ v63 ^ v24) >> 24) ^ 0xC0)];
  v73 = (v72 - ((2 * v72 + 298676748) & 0x4FC10744) - 1329120088) ^ *(_DWORD *)&v28[4 * (BYTE2(v71) ^ 0x23)];
  v74 = *(_DWORD *)&v25[4 * ((v70 ^ v63 ^ v24) ^ 0xFD)];
  HIDWORD(v13) = v74 ^ 0x1B9;
  LODWORD(v13) = v74 ^ 0x7EF57C00;
  LODWORD(v98) = v70 ^ v63 ^ v24;
  v75 = (v13 >> 9) ^ *(_DWORD *)&v30[4 * (((unsigned __int16)(v70 ^ v63 ^ v24) >> 8) ^ 0xB2)] ^ (v73 - ((2 * v73) & 0x144ADFEC) + 170225654);
  v76 = v75 ^ HIDWORD(v99) ^ 0x9B56508A;
  LODWORD(v100) = v68;
  v77 = v75 ^ v68;
  v78 = v75 ^ v68 ^ 0xE8147205;
  HIDWORD(v96) = v78 ^ v70;
  v97 = __PAIR64__(v76, v77);
  v79 = v78 ^ v70 ^ v71;
  v80 = *(_DWORD *)&v25[4 * ((v78 ^ v70 ^ v71) ^ 0xE1)];
  HIDWORD(v13) = v80 ^ 0x1B9;
  LODWORD(v13) = v80 ^ 0x7EF57C00;
  v81 = (v13 >> 9) ^ (*(_DWORD *)&v29[4 * (HIBYTE(v79) ^ 0xD1)] - 1998145274);
  LODWORD(v96) = v79;
  v82 = (v81 - ((2 * v81) & 0x144ADFEC) + 170225654) ^ *(_DWORD *)&v30[4 * (BYTE1(v79) ^ 0xA5)];
  v83 = v76 ^ *(_DWORD *)&v28[4 * (BYTE2(v79) ^ 0xA9)] ^ (v82 - ((2 * v82) & 0x4FC10744) + 669025186);
  LODWORD(v95) = v70 ^ v83 ^ 0xA9147205;
  v84 = (char *)*(&off_100236540 + (v7 ^ 0xBC)) - 1135551611;
  v85 = (char *)*(&off_100236540 + (v7 ^ 0x2B6)) - 727621531;
  v86 = (char *)*(&off_100236540 + v7 - 18) - 722583047;
  v87 = (char *)*(&off_100236540 + v7 - 589) - 1594879070;
  v88 = (17 * v85[a2[11] ^ 0xBFLL] - 65) | ((v87[a2[10] ^ 0x91] ^ 0xBB) << 8) | (((v86[a2[8] ^ 0x57] ^ (a2[8] - ((2 * a2[8]) & 0x5C) + 46)) ^ 0x1F) << 24) | ((v84[a2[9] ^ 0x61] ^ (a2[9] + (~(2 * a2[9]) | 0xA5) + 46) ^ 0xBE) << 16);
  v89 = a2[13];
  v90 = (2 * (_DWORD)v89) & 0x5A;
  v91 = (17 * v85[a2[15] ^ 0xEFLL] - 65) | (((v86[a2[12] ^ 0xF4] ^ (a2[12] - ((2 * a2[12]) & 0x5C) + 46)) ^ 0x1F) << 24) | (((v84[v89 ^ 5] ^ (v89 - ((2 * v89) & 0x5A) + 45)) ^ 0x5C) << 16) | ((v87[a2[14] ^ 0xDFLL] ^ 0x21) << 8);
  v92 = a2[5];
  HIDWORD(v94) = *(_DWORD *)(v8 - 168) + 324011169;
  LODWORD(v94) = v33 ^ v27 ^ HIDWORD(v108) ^ 0x5193861C;
  HIDWORD(v95) = v83;
  HIDWORD(a4) = v83 ^ v78;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a1 + 8 * v7) - 8))(v88, v91, ((v86[a2[4] ^ 0x26] ^ (a2[4] + (~(2 * a2[4]) | 0xA3) + 47) ^ 0x6A) << 24) | ((v87[a2[6] ^ 0x6ELL] ^ 0x38) << 8) | (17 * v85[a2[7] ^ 0x9ELL] - 65) | ((v84[v92 ^ 0xB4] ^ (v92 - ((2 * v92) & 0x5A) + 45) ^ 0x33) << 16), (2 * *a2) & 0x5C, (2 * (_DWORD)v92) & 0x5A, v90, 92, v87, a3, a4, v94, v87, v86, v85, v84, v95, v96, v97, v98,
           v99,
           v100,
           v101,
           v102,
           v103,
           v104,
           v105,
           *((_QWORD *)&v105 + 1),
           v106,
           *((_QWORD *)&v106 + 1),
           v107,
           v108,
           v109,
           v110,
           v111);
}

uint64_t sub_100126BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,int a44)
{
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  __int128 v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unsigned int v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  int v123;
  unsigned int v124;
  char *v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  unsigned int v150;
  uint64_t v151;
  char *v152;
  int v153;
  char *v154;
  int v155;
  int v156;
  int v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  int v163;
  int v164;
  char *v165;
  int v166;
  int v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;

  LODWORD(v176) = 0;
  HIDWORD(v176) = (v44 + 134) | 8;
  v49 = HIDWORD(v176) ^ 0x6AD0B285 ^ v45;
  *(_QWORD *)(v48 - 168) = v49;
  v50 = a38;
  v51 = (unsigned __int8 *)(a38 + v49);
  v52 = (__ROR8__(v51, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x568946B32C06CA14;
  v53 = __ROR8__(v52 ^ 0xFB01222F91B43724, 8);
  v52 ^= 0xB0B4E8490E7D9841;
  v54 = v53 + v52;
  v55 = (v53 + v52) ^ __ROR8__(v52, 61);
  *((_QWORD *)&v56 + 1) = v55 ^ 0x1CD0096D511BA5DDLL;
  *(_QWORD *)&v56 = v55;
  v57 = ((v55 ^ 0x1CD0096D511BA5DDLL) + __ROR8__(v54 ^ 0x1CD0096D511BA5DDLL, 8)) ^ 0xF114A9EFEA257110;
  v58 = ((_QWORD)v51 << (((v44 - 39) | 8) + 88)) & 0x38;
  v59 = v57 ^ (v56 >> 61);
  v60 = (__ROR8__(v57, 8) + v59) ^ 0x618971AD3EA3E1EALL;
  v61 = v60 ^ __ROR8__(v59, 61);
  v62 = (__ROR8__(v60, 8) + v61) ^ 0xC3391085E40C6503;
  v63 = v62 ^ __ROR8__(v61, 61);
  v64 = v63 + __ROR8__(v62, 8);
  v65 = v64 ^ __ROR8__(v63, 61);
  v66 = (v65 ^ 0xDC0070CF07E5077) + __ROR8__(v64 ^ 0xDC0070CF07E5077, 8);
  *((_QWORD *)&v56 + 1) = v65 ^ 0xDC0070CF07E5077;
  *(_QWORD *)&v56 = v65;
  v67 = ((v66 ^ 0x18D437F797BCEE52 ^ (v56 >> 61)) + __ROR8__(v66 ^ 0x18D437F797BCEE52, 8)) ^ 0xC5EAB3BB9A364E29;
  v68 = (__ROR8__(v51 + 8, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x568946B32C06CA14;
  *(_QWORD *)&v56 = __ROR8__(v68 ^ 0xFB01222F91B43724, 8);
  v68 ^= 0xB0B4E8490E7D9841;
  v69 = v56 + v68;
  v70 = (v56 + v68) ^ 0x1CD0096D511BA5DDLL;
  *(_QWORD *)&v56 = __ROR8__(v68, 61);
  *((_QWORD *)&v56 + 1) = v69 ^ v56 ^ 0x1CD0096D511BA5DDLL;
  *(_QWORD *)&v56 = v69 ^ v56;
  v71 = v56 >> 61;
  v72 = (*((_QWORD *)&v56 + 1) + __ROR8__(v70, 8)) ^ 0xF114A9EFEA257110;
  v73 = v67 >> v58;
  v74 = v72 ^ v71;
  v75 = (__ROR8__(v72, 8) + (v72 ^ v71)) ^ 0x618971AD3EA3E1EALL;
  v76 = v75 ^ __ROR8__(v74, 61);
  v77 = (__ROR8__(v75, 8) + v76) ^ 0xC3391085E40C6503;
  v78 = v77 ^ __ROR8__(v76, 61);
  v79 = (__ROR8__(v77, 8) + v78) ^ 0xDC0070CF07E5077;
  v80 = v79 ^ __ROR8__(v78, 61);
  v81 = (__ROR8__(v79, 8) + v80) ^ 0x18D437F797BCEE52;
  v82 = ((v81 ^ __ROR8__(v80, 61)) + (v81 << 56) + (v81 >> 8)) ^ 0xC5EAB3BB9A364E29;
  v83 = v82 >> v58;
  v84 = *v51;
  v85 = v73 + 4 * (v82 << (v58 ^ 0x3Eu));
  v86 = (__ROR8__(v51 + 16, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x568946B32C06CA14;
  *(_QWORD *)&v56 = __ROR8__(v86 ^ 0xFB01222F91B43724, 8);
  v86 ^= 0xB0B4E8490E7D9841;
  v87 = v56 + v86;
  v88 = (v56 + v86) ^ __ROR8__(v86, 61);
  *((_QWORD *)&v56 + 1) = v88 ^ 0x1CD0096D511BA5DDLL;
  *(_QWORD *)&v56 = v88;
  v89 = ((v88 ^ 0x1CD0096D511BA5DDLL) + __ROR8__(v87 ^ 0x1CD0096D511BA5DDLL, 8)) ^ 0xF114A9EFEA257110;
  v90 = v89 ^ (v56 >> 61);
  v91 = (v90 + __ROR8__(v89, 8)) ^ 0x618971AD3EA3E1EALL;
  v92 = v91 ^ __ROR8__(v90, 61);
  v93 = (v92 + __ROR8__(v91, 8)) ^ 0xC3391085E40C6503;
  v94 = v93 ^ __ROR8__(v92, 61);
  v95 = v94 + __ROR8__(v93, 8);
  v96 = v95 ^ __ROR8__(v94, 61);
  v97 = (__ROR8__(v95 ^ 0xDC0070CF07E5077, 8) + (v96 ^ 0xDC0070CF07E5077)) ^ 0x18D437F797BCEE52;
  *((_QWORD *)&v56 + 1) = v96 ^ 0xDC0070CF07E5077;
  *(_QWORD *)&v56 = v96;
  v98 = v83 + 4 * (((__ROR8__(v97, 8) + (v97 ^ (unint64_t)(v56 >> 61))) ^ 0x5EAB3BB9A364E29) << (v58 ^ 0x3Eu));
  v99 = ((*(unsigned __int8 *)(a13 + (v73 ^ 0x1CLL)) ^ ((_DWORD)v73 + (~(2 * (_DWORD)v73) | 0xA3) + 47) ^ 0xC8) << 24) | (((*(_BYTE *)(a15 + (BYTE1(v85) ^ 0x89)) ^ (BYTE1(v85) + (~(v85 >> 7) | 0xA5) + 46)) ^ 0xE0) << 16) | ((*(_BYTE *)(a12 + ~BYTE2(v85)) ^ 0x89) << 8) | (17 * *(_BYTE *)(a14 + (BYTE3(v85) ^ 0xB9)) - 65) ^ 0x25;
  v100 = ((*(unsigned __int8 *)(a13 + (BYTE4(v85) ^ 0xE8)) ^ (HIDWORD(v85) + (~(2 * HIDWORD(v85)) | 0xA3) + 47) ^ 0x37) << 24) | (((*(_BYTE *)(a15 + (BYTE5(v85) ^ 0xALL)) ^ (BYTE5(v85) + (~(2 * BYTE5(v85)) | 0xA5) + 46)) ^ 0x22) << 16) | ((*(_BYTE *)(a12 + (BYTE6(v85) ^ 0xF7)) ^ 0x80) << 8) | (17 * *(_BYTE *)(a14 + (HIBYTE(v85) ^ 0xEA)) - 65) ^ 0x67;
  v101 = ((*(unsigned __int8 *)(a13 + (v83 ^ 0x1ALL)) ^ ((_DWORD)v83 - ((2 * (_DWORD)v83) & 0x5C) + 46) ^ 0xF2) << 24) | (((*(_BYTE *)(a15 + (BYTE1(v98) ^ 0x7ALL)) ^ (BYTE1(v98) - ((v98 >> 7) & 0x5A) + 45)) ^ 0xD1) << 16) | ((*(_BYTE *)(a12 + (BYTE2(v98) ^ 0x91)) ^ 0xF1) << 8) | (17 * *(_BYTE *)(a14 + (BYTE3(v98) ^ 0x34)) - 65) ^ 0x62;
  v102 = ((*(unsigned __int8 *)(a13 + (BYTE4(v98) ^ 0x32)) ^ (HIDWORD(v98) - ((2 * HIDWORD(v98)) & 0x5C) + 46) ^ 0x35) << 24) | (((*(_BYTE *)(a15 + (BYTE5(v98) ^ 0x2ELL)) ^ (BYTE5(v98) - ((2 * BYTE5(v98)) & 0x5A) + 45)) ^ 0x81) << 16) | ((*(_BYTE *)(a12 + (BYTE6(v98) ^ 0x71)) ^ 0xA2) << 8);
  LOBYTE(v96) = (17 * *(_BYTE *)(a14 + (HIBYTE(v98) ^ 0x67)) - 65) ^ 0x20;
  v103 = v45 & 0xFFFFFFF2 ^ 0x6AD0B8DD;
  *(_QWORD *)(v48 - 184) = v103;
  v104 = v102 & 0xFFFFFF00 | v96;
  v105 = *(unsigned __int8 *)(a38 + v103);
  LODWORD(v98) = *(unsigned __int8 *)(a15 + (v105 ^ 0xC6));
  v106 = v45 & 0xFFFFFFF6 ^ 0x6AD0B8DD;
  *(_QWORD *)(v48 - 192) = v106;
  LODWORD(v72) = (v98 ^ (v105 - ((2 * v105) & 0x5A) + 45) ^ 0xDF) << 16;
  v107 = *(unsigned __int8 *)(a38 + v106);
  LODWORD(v98) = *(unsigned __int8 *)(a15 + (v107 ^ 0x2A));
  v108 = v45 & 0xFFFFFFF3 ^ 0x6AD0B8DD;
  *(_QWORD *)(v48 - 176) = v108;
  v109 = *(unsigned __int8 *)(a38 + v108);
  LODWORD(v98) = (v98 ^ (v107 - ((2 * v107) & 0x5A) + 45) ^ 0x83) << 16;
  LOBYTE(v107) = *(_BYTE *)(a13 + (v109 ^ 0x43));
  v110 = v45 & 0xFFFFFFFB ^ 0x6AD0B8DD;
  *(_QWORD *)(v48 - 200) = v110;
  LODWORD(v72) = v72 & 0xFFFFFF | (((v107 ^ (v109 + (~(2 * v109) | 0xA3) + 47)) ^ 0xA) << 24);
  v111 = *(unsigned __int8 *)(a38 + v110);
  LODWORD(v109) = *(unsigned __int8 *)(a13 + (v111 ^ 0xDB));
  v112 = v45 & 0xFFFFFFFA ^ 0x6AD0B8DD;
  *(_QWORD *)(v48 - 208) = v112;
  LODWORD(v85) = ((v109 ^ ((_DWORD)v111 - ((2 * (_DWORD)v111) & 0x5C) + 46) ^ 0xF4) << 24) | (((*(_BYTE *)(a15 + (*(unsigned __int8 *)(v50 + v112) ^ 0x2DLL)) ^ (*(_BYTE *)(v50 + v112) - ((2 * *(_BYTE *)(v50 + v112)) & 0x5A) + 45)) ^ 0x66) << 16);
  v181 = v45 & 0xFFFFFFFE ^ 0x6AD0B8DD;
  v182 = v45 & 0xFFFFFFFC ^ 0x6AD0B8DF;
  v113 = ((*(unsigned __int8 *)(a13 + (v84 ^ 0x5BLL)) ^ (v84 - ((2 * v84) & 0x5C) + 46) ^ 0xB6) << 24) | (((*(_BYTE *)(a15 + (*(unsigned __int8 *)(v50 + v181) ^ 0xE5)) ^ (*(_BYTE *)(v50 + v181) - ((2 * *(_BYTE *)(v50 + v181)) & 0x5A) + 45)) ^ 0x99) << 16) | (17 * *(_BYTE *)(a14 + (*(unsigned __int8 *)(v50 + v182) ^ 7)) - 65);
  v179 = v45 & 0xFFFFFFF7 ^ 0x6AD0B8DD;
  LOBYTE(v111) = *(_BYTE *)(a13 + (*(unsigned __int8 *)(v50 + v179) ^ 0xF7)) ^ (*(_BYTE *)(v50 + v179)
                                                                                - ((2 * *(_BYTE *)(v50 + v179)) & 0x5C)
                                                                                + 46) ^ 0xED;
  v114 = v45 & 0xFFFFFFF4 ^ 0x6AD0B8DF;
  *(_QWORD *)(v48 - 216) = v114;
  LODWORD(v98) = v98 & 0xFFFF00 | (v111 << 24) | (17
                                                                                  * *(_BYTE *)(a14
                                                                                             + (*(unsigned __int8 *)(a38 + v114) ^ 0xAALL))
                                                                                  - 65) ^ 0xDC;
  v115 = v45 & 0xFFFFFFF1 ^ 0x6AD0B8DF;
  *(_QWORD *)(v48 - 224) = v115;
  v178 = v45 & 0xFFFFFFF9 ^ 0x6AD0B8DF;
  LODWORD(v72) = v72 & 0xFFFF00FF | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a38 + v115) ^ 0x11)) ^ 0x63) << 8);
  LODWORD(v85) = v85 & 0xFFFF00FF | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a38 + v178) ^ 0xDELL)) ^ 0x34) << 8);
  v116 = v45 & 0xFFFFFFFD ^ 0x6AD0B8DF;
  *(_QWORD *)(v48 - 232) = v116;
  v117 = v113 & 0xFFFF00FF | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a38 + v116) ^ 0xB2)) ^ 0x92) << 8);
  v180 = v45 & 0xFFFFFFF5 ^ 0x6AD0B8DF;
  LODWORD(v98) = v98 & 0xFFFF00FF | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a38 + v180) ^ 0xF7)) ^ 0xCA) << 8);
  v177 = v45;
  v118 = v45 & 0xFFFFFFF8 ^ 0x6AD0B8DF;
  *(_QWORD *)(v48 - 256) = v118;
  *(_DWORD *)(v48 - 236) = 1792063711;
  LODWORD(v85) = v85 & 0xFFFFFF00 | (17 * *(_BYTE *)(a14 + (*(unsigned __int8 *)(a38 + v118) ^ 0x50))
                                                    - 65) ^ 0xF9;
  v119 = v45 & 0xFFFFFFF0 ^ 0x6AD0B8DF;
  *(_QWORD *)(v48 - 248) = v119;
  LODWORD(v72) = v72 & 0xFFFFFF00 | (17 * *(_BYTE *)(a14 + (*(unsigned __int8 *)(a38 + v119) ^ 0x52))
                                                    - 65);
  LODWORD(v85) = a44 ^ a36 ^ v100 ^ v85;
  LODWORD(v98) = a35 ^ a43 ^ v101 ^ v98 ^ 0xB24E68D4;
  LODWORD(v119) = HIDWORD(a35) ^ v46 ^ v99 ^ v117;
  LODWORD(v73) = v47 ^ a34 ^ v104 ^ v72;
  v120 = (char *)*(&off_100236540 + (int)(v44 ^ 0xAB7)) - 547224443;
  v121 = (char *)*(&off_100236540 + (int)(v44 ^ 0x8FB)) - 1159661055;
  LODWORD(v72) = *(_DWORD *)&v121[4 * ((unsigned __int16)(v73 ^ 0x920B) >> 8)];
  LODWORD(v72) = (1250149077 * v72 + 1032345537 - ((-1794669142 * v72 - 2083745020) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * BYTE2(v98)];
  v122 = (char *)*(&off_100236540 + (int)(v44 ^ 0x949)) - 1910632855;
  v123 = *(_DWORD *)&v122[4 * (v73 ^ 0xB)] ^ 0x6FCC6207 ^ *(_DWORD *)&v120[4
                                                                                          * ((v85 ^ 0xBF04400A) >> 16)];
  LODWORD(v119) = v119 ^ 0xDF0943E1;
  LODWORD(v72) = (v72 + 342780984 - ((2 * v72) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * v119];
  v124 = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v119)]
        + 1032345537
        - ((-2083745020 - 1794669142 * *(_DWORD *)&v121[4 * BYTE1(v119)]) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * ((v73 ^ 0xF375920B) >> 16)];
  v125 = (char *)*(&off_100236540 + (int)(v44 ^ 0xA6C)) - 37041094;
  v126 = (v124 + 342780984 - ((2 * v124) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * (v85 ^ 0xA)];
  LODWORD(v108) = *(_DWORD *)&v125[4 * (BYTE3(v73) ^ 0x18)] ^ 0x1E823E4 ^ *(_DWORD *)&v120[4 * BYTE2(v119)] ^ (1250149077 * *(_DWORD *)&v121[4 * ((unsigned __int16)(v85 ^ 0x400A) >> 8)] - 1041872510);
  LODWORD(v73) = *(_DWORD *)&v122[4 * v98] ^ HIDWORD(a32) ^ (v108
                                                                            + 342780984
                                                                            - ((2 * v108) & 0x28DCD870));
  LODWORD(v119) = HIDWORD(a33) ^ (v123 + 2051681755 - ((2 * v123) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * BYTE3(v119)] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v98)] - 1041872510);
  LODWORD(v108) = a33 ^ (v72 + 2051681755 - ((2 * v72) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * (BYTE3(v85) ^ 0x54)] ^ 0xB0579E67;
  LODWORD(v98) = HIDWORD(a36) ^ *(_DWORD *)&v125[4 * BYTE3(v98)] ^ (v126 + 2051681755 - ((2 * v126) & 0xF4945BB6)) ^ 0x7BDDD905;
  LODWORD(v72) = *(_DWORD *)&v125[4 * BYTE3(v108)] ^ 0x1E823E4 ^ *(_DWORD *)&v120[4 * BYTE2(v98)];
  LODWORD(v119) = v119 ^ 0xE1C4187B;
  v127 = *(_DWORD *)&v125[4 * BYTE3(v119)] ^ *(_DWORD *)&v120[4 * BYTE2(v108)];
  v128 = *(_DWORD *)&v125[4 * (BYTE3(v73) ^ 0x77)] ^ *(_DWORD *)&v120[4 * BYTE2(v119)] ^ (1250149077
                                                                                        * *(_DWORD *)&v121[4 * BYTE1(v108)]
                                                                                        - 1041872510);
  LODWORD(v108) = *(_DWORD *)&v122[4 * v108] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v119)]
                                                               - 699091526
                                                               - ((352814506 * *(_DWORD *)&v121[4 * BYTE1(v119)]
                                                                 + 63738628) & 0x28DCD870));
  LODWORD(v108) = (v108 + 2051681755 - ((2 * v108) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * BYTE3(v98)];
  BYTE2(v85) = BYTE2(v73) ^ 0xF9;
  LODWORD(v119) = HIDWORD(a31) ^ *(_DWORD *)&v122[4 * v119] ^ (v72
                                                                              + 342780984
                                                                              - ((2 * v72) & 0x28DCD870)) ^ (1250149077 * *(_DWORD *)&v121[4 * ((unsigned __int16)(v73 ^ 0x72AE) >> 8)] - 1041872510);
  LODWORD(v73) = *(_DWORD *)&v122[4 * (v73 ^ 0xAE)] ^ a32 ^ ((v127 ^ 0x1E823E4)
                                                                            + 342780984
                                                                            - 2
                                                                            * ((v127 ^ 0x1E823E4) & 0x146E6C3B ^ v127 & 3)) ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v98)] - 1041872510);
  LODWORD(v119) = v119 ^ 0xCA88A055;
  LODWORD(v108) = a11 ^ *(_DWORD *)&v120[4 * BYTE2(v85)] ^ (v108 + 2074218047 - ((2 * v108) & 0xF7441C7E)) ^ 0x8ADDD905;
  LODWORD(v72) = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v119)]
                - 699091526
                - ((352814506 * *(_DWORD *)&v121[4 * BYTE1(v119)] + 63738628) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * v108];
  LODWORD(v98) = a31 ^ *(_DWORD *)&v122[4 * v98] ^ ((v128 ^ 0x1E823E4)
                                                                   + 342780984
                                                                   - 2 * ((v128 ^ 0x1E823E4) & 0x146E6C3B ^ v128 & 3)) ^ 0x86F972AE;
  LODWORD(v72) = (v72 + 2051681755 - ((2 * v72) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * BYTE3(v98)];
  v129 = *(_DWORD *)&v120[4 * BYTE2(v119)] ^ 0x6FCC6207 ^ *(_DWORD *)&v122[4 * v98] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v108)] - 1041872510);
  v130 = *(_DWORD *)&v121[4 * ((unsigned __int16)(v73 ^ 0xA351) >> 8)];
  v131 = v72 + 2074218047 - ((2 * v72) & 0xF7441C7E);
  LODWORD(v72) = (1250149077 * v130 - 699091526 - ((352814506 * v130 + 63738628) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * v119];
  LODWORD(v119) = *(_DWORD *)&v125[4 * BYTE3(v119)] ^ 0x6E2441E3 ^ *(_DWORD *)&v122[4 * (v73 ^ 0x51)] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v98)] - 1041872510);
  LODWORD(v72) = (v72 + 2051681755 - ((2 * v72) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * BYTE3(v108)];
  LODWORD(v98) = *(_DWORD *)&v120[4 * BYTE2(v98)] ^ a30 ^ (v72 + 2074218047 - ((2 * v72) & 0xF7441C7E));
  LODWORD(v72) = *(_DWORD *)&v120[4 * BYTE2(v108)] ^ HIDWORD(a28) ^ (v119 + 2074218047 - ((2 * v119) & 0xF7441C7E));
  LODWORD(v108) = *(_DWORD *)&v125[4 * (BYTE3(v73) ^ 0x41)] ^ HIDWORD(a30) ^ (v129
                                                                            + 2051681755
                                                                            - ((2 * v129) & 0xF4945BB6));
  LODWORD(v73) = HIDWORD(a29) ^ *(_DWORD *)&v120[4 * ((v73 ^ 0xAA85A351) >> 16)] ^ v131 ^ 0xDF2E15A;
  LOBYTE(v119) = v108 ^ 0xF1;
  v132 = *(_DWORD *)&v122[4 * v73] ^ 0x6E2441E3 ^ *(_DWORD *)&v125[4
                                                                                  * ((v108 ^ 0xF08F4AF1) >> 24)];
  v133 = *(_DWORD *)&v121[4 * ((unsigned __int16)(v108 ^ 0x4AF1) >> 8)];
  v134 = (1250149077 * v133 + 1009809245 - ((-1794669142 * v133 - 2083745020) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * (BYTE3(v98) ^ 0xE1)];
  LODWORD(v85) = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v73)]
                + 1032345537
                - ((-1794669142 * *(_DWORD *)&v121[4 * BYTE1(v73)] - 2083745020) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * (BYTE2(v98) ^ 0x10)];
  v135 = v72 ^ 0x18F4AF1;
  v136 = *(_DWORD *)&v121[4 * ((unsigned __int16)(v72 ^ 0x4AF1) >> 8)];
  LODWORD(v114) = *(_DWORD *)&v120[4 * (BYTE2(v108) ^ 0xD6)] ^ (1250149077 * v136
                                                              + 1032345537
                                                              - ((-2083745020 - 1794669142 * v136) & 0xF7441C7E));
  LODWORD(v108) = (v134 + 2074218047 - ((2 * v134) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * BYTE2(v73)];
  LODWORD(v114) = (v114 + 2051681755 - ((2 * v114) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * BYTE3(v73)];
  LODWORD(v119) = *(_DWORD *)&v122[4 * v119] ^ (v85 + 342780984 - ((2 * v85) & 0x28DCD870));
  LODWORD(v72) = (v132 + 2074218047 - ((2 * v132) & 0xF7441C7E)) ^ a29 ^ *(_DWORD *)&v120[4 * (BYTE2(v72) ^ 0xD6)] ^ (1250149077 * *(_DWORD *)&v121[4 * (BYTE1(v98) ^ 0xB5)] - 1041872510);
  LODWORD(v73) = *(_DWORD *)&v125[4 * HIBYTE(v135)] ^ a28 ^ (v119 + 2051681755 - ((2 * v119) & 0xF4945BB6));
  LODWORD(v119) = HIDWORD(a27) ^ *(_DWORD *)&v122[4 * v135] ^ (v108
                                                                              + 342780984
                                                                              - ((2 * v108) & 0x28DCD870));
  LODWORD(v108) = *(_DWORD *)&v122[4 * (v98 ^ 0xBD)];
  LODWORD(v98) = v119 ^ 0x5A8B898F;
  LODWORD(v119) = a27 ^ v108 ^ (v114 + 342780984 - ((2 * v114) & 0x28DCD870)) ^ 0x992817B7;
  LODWORD(v114) = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v98)]
                 - 699091526
                 - ((352814506 * *(_DWORD *)&v121[4 * BYTE1(v98)] + 63738628) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * ((a27 ^ v108 ^ (v114 + 56 - ((2 * v114) & 0x70))) ^ 0xB7)];
  BYTE2(v132) = BYTE2(v72) ^ 0x4D;
  LODWORD(v108) = *(_DWORD *)&v125[4 * (BYTE3(v73) ^ 0xD1)] ^ 0x6E2441E3 ^ *(_DWORD *)&v122[4
                                                                                          * (v72 ^ 0xC3)] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v119)] - 1041872510);
  LODWORD(v114) = (v114 + 2051681755 - ((2 * v114) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4
                                                                                   * ((v72 ^ 0xBA4DC4C3) >> 24)];
  LODWORD(v72) = *(_DWORD *)&v121[4 * (BYTE1(v72) ^ 0x76)];
  v137 = *(_DWORD *)&v122[4 * v98] ^ 0x6E2441E3 ^ *(_DWORD *)&v125[4 * BYTE3(v119)] ^ (1250149077 * *(_DWORD *)&v121[4 * (BYTE1(v73) ^ 0x1A)] - 1041872510);
  LODWORD(v119) = (1250149077 * v72 - 699091526 - ((352814506 * v72 + 63738628) & 0x28DCD870)) ^ a26 ^ *(_DWORD *)&v122[4 * (v73 ^ 0x7B)] ^ *(_DWORD *)&v125[4 * BYTE3(v98)] ^ *(_DWORD *)&v120[4 * BYTE2(v119)];
  LODWORD(v114) = a25 ^ (v114 + 2074218047 - ((2 * v114) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * (BYTE2(v73) ^ 0x80)];
  LODWORD(v108) = HIDWORD(a26) ^ *(_DWORD *)&v120[4 * BYTE2(v98)] ^ (v108 + 2074218047 - ((2 * v108) & 0xF7441C7E));
  LODWORD(v98) = *(_DWORD *)&v121[4 * (BYTE1(v119) ^ 0x7D)];
  LODWORD(v73) = 1250149077 * v98 - 699091526 - ((352814506 * v98 + 63738628) & 0x28DCD870);
  LODWORD(v98) = HIDWORD(a25) ^ *(_DWORD *)&v120[4 * BYTE2(v132)] ^ (v137 + 2074218047 - ((2 * v137) & 0xF7441C7E)) ^ 0x487E473D;
  LODWORD(v72) = v73 ^ *(_DWORD *)&v122[4
                                      * ((BYTE4(a25) ^ v120[4 * BYTE2(v132)] ^ (v137
                                                                                               + 63
                                                                                               - ((2 * v137) & 0x7E))) ^ 0x3D)];
  LODWORD(v119) = v119 ^ 0xADEFCFF9;
  LODWORD(v73) = v114 ^ 0x270CCDE9;
  LODWORD(v114) = *(_DWORD *)&v122[4 * (v114 ^ 0xE9)] ^ 0x6FCC6207 ^ *(_DWORD *)&v120[4 * BYTE2(v119)];
  v138 = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v73)]
        + 1032345537
        - ((-2083745020 - 1794669142 * *(_DWORD *)&v121[4 * BYTE1(v73)]) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * BYTE2(v98)];
  v139 = (v138 + 2051681755 - ((2 * v138) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * BYTE3(v119)];
  LODWORD(v108) = v108 ^ 0x9C97F1DB;
  v140 = (v72 + 2074218047 - ((2 * v72) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * BYTE2(v108)];
  LODWORD(v85) = *(_DWORD *)&v125[4 * BYTE3(v98)] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v108)]
                                                   + 1009809245
                                                   - ((-2083745020 - 1794669142 * *(_DWORD *)&v121[4 * BYTE1(v108)]) & 0xF4945BB6));
  LODWORD(v85) = (v85 + 2074218047 - ((2 * v85) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * BYTE2(v73)];
  v141 = HIDWORD(a23) ^ *(_DWORD *)&v122[4 * v108] ^ (v139 + 342780984 - ((2 * v139) & 0x28DCD870));
  LODWORD(v98) = (v114 + 2051681755 - ((2 * v114) & 0xF4945BB6)) ^ a24 ^ *(_DWORD *)&v125[4 * BYTE3(v108)] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v98)] - 1041872510);
  LODWORD(v108) = *(_DWORD *)&v121[4 * (BYTE1(v98) ^ 0xA1)];
  LODWORD(v114) = HIDWORD(a24) ^ *(_DWORD *)&v125[4 * BYTE3(v73)] ^ (v140 + 2051681756 + ~((2 * v140) & 0xF4945BB6)) ^ 0xF14D76C3;
  LODWORD(v108) = (1250149077 * v108 + 1032345537 - ((-1794669142 * v108 - 2083745020) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * BYTE2(v114)];
  LODWORD(v73) = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v114)]
                - 699091526
                - ((352814506 * *(_DWORD *)&v121[4 * BYTE1(v114)] + 63738628) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * (v98 ^ 0x51)];
  v141 ^= 0xAC075E1D;
  LODWORD(v73) = (v73 + 2051681755 - ((2 * v73) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * HIBYTE(v141)];
  LODWORD(v119) = a23 ^ *(_DWORD *)&v122[4 * v119] ^ (v85 + 342780984 - ((2 * v85) & 0x28DCD870)) ^ 0xFCF2E15A;
  LODWORD(v85) = *(_DWORD *)&v120[4 * BYTE2(v141)] ^ 0x6FCC6207 ^ *(_DWORD *)&v122[4 * v114] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v119)] - 1041872510);
  LODWORD(v114) = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v141)]
                 + 1009809245
                 - ((-1794669142 * *(_DWORD *)&v121[4 * BYTE1(v141)] - 2083745020) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * BYTE3(v114)];
  LODWORD(v114) = (v114 + 342780984 - ((2 * v114) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * v119];
  LODWORD(v108) = *(_DWORD *)&v122[4 * v141] ^ (v108 + 342780984 - ((2 * v108) & 0x28DCD870));
  LODWORD(v108) = HIDWORD(a21) ^ *(_DWORD *)&v125[4 * BYTE3(v119)] ^ (v108 + 2051681755 - ((2 * v108) & 0xF4945BB6));
  LODWORD(v114) = HIDWORD(a22) ^ *(_DWORD *)&v120[4 * ((v98 ^ 0xECC11351) >> 16)] ^ (v114 + 2074218047 - ((2 * v114) & 0xF7441C7E));
  LODWORD(v119) = a22 ^ *(_DWORD *)&v120[4 * BYTE2(v119)] ^ (v73 + 2074218047 - ((2 * v73) & 0xF7441C7E)) ^ 0x2910B5BD;
  LODWORD(v73) = *(_DWORD *)&v125[4 * BYTE3(v119)];
  LODWORD(v73) = ((2 * v73) & 0xEBF32ABA ^ 0x1F6FF54D) + (v73 ^ 0x7A4A2DDB);
  LODWORD(v98) = a21 ^ *(_DWORD *)&v125[4 * (BYTE3(v98) ^ 7)] ^ (v85 + 2051681755 - ((2 * v85) & 0xF4945BB6)) ^ 0xEF0CCDE9;
  LODWORD(v73) = (v73 - ((2 * v73 + 737356476) & 0x28DCD870) + 174588310) ^ *(_DWORD *)&v122[4 * v98];
  LODWORD(v114) = v114 ^ 0xC2C921BD;
  LODWORD(v108) = v108 ^ 0x187E473D;
  v142 = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v108)]
        + 1032345537
        - ((-1794669142 * *(_DWORD *)&v121[4 * BYTE1(v108)] - 2083745020) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * BYTE2(v119)];
  v143 = (v142 + 342780984 - ((2 * v142) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * v114];
  LODWORD(v85) = *(_DWORD *)&v120[4 * BYTE2(v114)] ^ *(_DWORD *)&v122[4 * v119];
  LODWORD(v119) = *(_DWORD *)&v125[4 * BYTE3(v114)] ^ *(_DWORD *)&v120[4 * BYTE2(v98)] ^ (1250149077
                                                                                        * *(_DWORD *)&v121[4 * BYTE1(v119)]
                                                                                        - 1041872510);
  v144 = *(_DWORD *)&v125[4 * BYTE3(v98)] ^ a20 ^ (v143 + 2051681755 - ((2 * v143) & 0xF4945BB6));
  LODWORD(v114) = HIDWORD(a19) ^ *(_DWORD *)&v120[4 * BYTE2(v108)] ^ (v73 + 2074218047 - ((2 * v73) & 0xF7441C7E)) ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v114)] - 1041872510);
  LODWORD(v119) = *(_DWORD *)&v122[4 * v108] ^ HIDWORD(a20) ^ ((v119 ^ 0x1E823E4)
                                                                              + 342780984
                                                                              - 2
                                                                              * ((v119 ^ 0x1E823E4) & 0x146E6C3A ^ v119 & 2));
  LODWORD(v98) = a19 ^ *(_DWORD *)&v125[4 * BYTE3(v108)] ^ ((v85 ^ 0x6FCC6207)
                                                          + 2051681756
                                                          + ~(2 * ((v85 ^ 0x6FCC6207) & 0x7A4A2DFB ^ v85 & 0x20))) ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v98)] - 1041872510) ^ 0xABB6E35A;
  BYTE2(v73) = BYTE2(v144) ^ 0xC;
  LODWORD(v108) = (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v98)]
                 + 1009809245
                 - ((-1794669142 * *(_DWORD *)&v121[4 * BYTE1(v98)] - 2083745020) & 0xF4945BB6)) ^ *(_DWORD *)&v125[4 * ((v144 ^ 0x750C7FE9u) >> 24)];
  LODWORD(v108) = (v108 + 342780984 - ((2 * v108) & 0x28DCD870)) ^ *(_DWORD *)&v122[4 * (v119 ^ 0xC3)];
  LODWORD(v114) = v114 ^ 0x6479FED3;
  LODWORD(v85) = *(_DWORD *)&v122[4 * (v144 ^ 0xE9)];
  v145 = *(_DWORD *)&v125[4 * ((v119 ^ 0x6B1476C3) >> 24)] ^ 0x6E2441E3 ^ *(_DWORD *)&v122[4 * v98] ^ (1250149077 * *(_DWORD *)&v121[4 * BYTE1(v114)] - 1041872510);
  v146 = *(_DWORD *)&v121[4 * (BYTE1(v144) ^ 0xCD)];
  v147 = (1250149077 * v146 - 699091526 + ((720927318 * v146 + 1010003195) | 0xD723278F) + 1) ^ *(_DWORD *)&v122[4 * v114];
  LODWORD(v72) = v85 ^ 0x6E2441E3 ^ *(_DWORD *)&v125[4 * BYTE3(v114)] ^ (1250149077
                                                                       * *(_DWORD *)&v121[4
                                                                                        * ((unsigned __int16)(v119 ^ 0x76C3) >> 8)]
                                                                       - 1041872510);
  LODWORD(v85) = v72 + 2074218047 - ((2 * v72) & 0xF7441C7E);
  LODWORD(v119) = (v147 + 2074218047 - ((2 * v147) & 0xF7441C7E)) ^ *(_DWORD *)&v120[4 * (BYTE2(v119) ^ 0x4D)];
  v148 = *(_DWORD *)&v125[4 * BYTE3(v98)];
  v149 = *(_DWORD *)&v120[4 * BYTE2(v98)];
  LODWORD(v98) = HIDWORD(a18) ^ *(_DWORD *)&v120[4 * BYTE2(v73)] ^ (v145 + 2074218047 - ((2 * v145) & 0xF7441C7E)) ^ 0xE1284D2F;
  LODWORD(v72) = a18 ^ *(_DWORD *)&v120[4 * BYTE2(v114)] ^ (v108 + 2074218047 - ((2 * v108) & 0xF7441C7E)) ^ 0xFE3FA68F;
  v150 = a17 ^ v148 ^ (v119 + 2051681755 - ((2 * v119) & 0xF4945BB6)) ^ 0xB801240A;
  LODWORD(v119) = HIDWORD(a17) ^ v149 ^ v85 ^ 0xA5E370ED;
  v151 = v44;
  v152 = (char *)*(&off_100236540 + (int)(v44 ^ 0xACA)) - 531331978;
  LODWORD(v85) = *(_DWORD *)&v152[4 * v98];
  LODWORD(v114) = *(_DWORD *)&v152[4 * v150];
  LODWORD(v125) = *(_DWORD *)&v152[4 * v72];
  v153 = *(_DWORD *)&v152[4 * v119];
  v154 = (char *)*(&off_100236540 + (int)(v44 - 2129)) - 997016423;
  v155 = BYTE1(v98);
  v156 = *(_DWORD *)&v154[4 * (BYTE1(v98) ^ 0xAD)];
  v157 = *(_DWORD *)&v154[4 * (BYTE1(v119) ^ 0xAD)];
  v158 = BYTE1(v150);
  v159 = *(unsigned int *)&v154[4 * (BYTE1(v150) ^ 0xAD)];
  v160 = BYTE1(v72);
  LODWORD(v120) = *(_DWORD *)&v154[4 * (BYTE1(v72) ^ 0xAD)];
  v161 = (char *)*(&off_100236540 + (int)(v44 ^ 0x89E)) - 305117486;
  LODWORD(v121) = BYTE2(v98);
  LODWORD(v73) = *(_DWORD *)&v161[4 * (BYTE2(v98) ^ 0xC8)];
  LODWORD(v50) = BYTE2(v150);
  LODWORD(v112) = *(_DWORD *)&v161[4 * (BYTE2(v150) ^ 0xC8)];
  v162 = BYTE2(v119);
  v163 = *(_DWORD *)&v161[4 * (BYTE2(v119) ^ 0xC8)];
  v164 = BYTE2(v72) + 318045826 + *(_DWORD *)&v161[4 * (BYTE2(v72) ^ 0xC8)];
  v165 = (char *)*(&off_100236540 + (int)v151 - 2258) - 35722594;
  v166 = *(_DWORD *)&v165[4 * HIBYTE(v150)];
  LODWORD(v98) = *(_DWORD *)&v165[4 * BYTE3(v98)];
  v167 = *(_DWORD *)&v165[4 * BYTE3(v72)];
  LODWORD(v165) = *(_DWORD *)&v165[4 * BYTE3(v119)];
  LODWORD(v98) = v114 ^ HIDWORD(a16) ^ BYTE1(v119) ^ v157 ^ v164 ^ v98;
  v168 = (char *)*(&off_100236540 + (int)v151 - 2320) - 1488128810;
  *(_BYTE *)(a39 + v181) = (v168[BYTE2(v98) ^ 0x93] + 81) ^ 0xF6;
  v169 = v156 ^ a16 ^ v155 ^ v125 ^ ((_DWORD)v50 + 318045826 + (_DWORD)v112) ^ v165;
  v170 = (char *)*(&off_100236540 + (int)(v151 ^ 0x8E2)) - 643120722;
  *(_BYTE *)(a39 + v179) = v170[BYTE3(v169) ^ 0xBELL] ^ 0xC9;
  LODWORD(v114) = HIDWORD(a10) ^ v85 ^ v158 ^ (v162 + 318045826 + v163) ^ v159 ^ v167;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 208)) = (v168[BYTE2(v114) ^ 0xBLL] + 81) ^ 0x13;
  v171 = (char *)*(&off_100236540 + (int)(v151 ^ 0x9DC)) - 1381378550;
  *(_BYTE *)(a39 + v182) = v171[v98 ^ 0xDCLL] ^ 0x56;
  v172 = *(_QWORD *)(v48 - 168);
  *(_BYTE *)(a39 + v172) = v170[BYTE3(v98) ^ 0xA5] ^ 0xDD;
  v173 = (char *)*(&off_100236540 + (int)v151 - 2264) - 1838846018;
  *(_BYTE *)(a39 + v178) = (v173[BYTE1(v114) ^ 0x87] + 113) ^ 0x6C;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 192)) = (v168[BYTE2(v169) ^ 0x88] + 81) ^ 0x11;
  v174 = a16 ^ a17 ^ v166 ^ v160 ^ ((_DWORD)v121 + 318045826 + (_DWORD)v73) ^ v153 ^ v120;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 200)) = v170[BYTE3(v114) ^ 0xEALL] ^ 0x80;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 184)) = (v168[((v174 ^ 0xCD8A86E8) >> 16) ^ 0xF9]
                                            + 81) ^ 0xE4;
  *(_BYTE *)(a39 + v180) = (v173[BYTE1(v169) ^ 0x5DLL] + 113) ^ 0x5A;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 216)) = v171[v169 ^ 0x11] ^ 0x15;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 224)) = (v173[((unsigned __int16)(v174 ^ 0x86E8) >> 8) ^ 0x79]
                                            + 113) ^ 0xAB;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 232)) = (v173[BYTE1(v98) ^ 0x7ALL] + 113) ^ 0xF9;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 176)) = v170[BYTE3(v174) ^ 0xD8] ^ 0xB5;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 256)) = v171[v114 ^ 0xBFLL] ^ 0xD1;
  *(_BYTE *)(a39 + *(_QWORD *)(v48 - 248)) = v171[v174 ^ 0x3FLL] ^ 0xA6;
  LODWORD(v168) = (((_DWORD)v172 + 1792063709 - 2 * (((_DWORD)v172 + 16) & *(_DWORD *)(v48 - 236) ^ v177 & 2) + 16) ^ 0x6AD0B8DDu) < HIDWORD(a11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a37 + 8 * (int)(v151 ^ (8 * (v168 & 0xFFFFFFFD | (2 * (v168 & 1)))))))(v169, v151, a37, v159, 318045826, v174, v160, v162, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v176);
}

uint64_t sub_100128960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 + 8 * a41) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1001289BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * a41) - 4))(a9);
}

uint64_t sub_1001289FC@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_100128A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v8[32];

  v2 = (uint64_t)*(&off_100236540
                + (byte_1001FC880[byte_1001E55E0[(-21
                                                                                                * (qword_10023CD78 ^ 0x71 ^ dword_10023CCE8))] ^ 0x5F] ^ (-21 * (qword_10023CD78 ^ 0x71 ^ dword_10023CCE8)))
                + 58);
  v3 = (unint64_t)&v8[*(_QWORD *)(v2 - 965231491) ^ qword_10023CD78];
  v4 = 1509257707 * (v3 + 0x249E897B2062158FLL);
  v5 = 1509257707 * (v3 ^ 0xDB617684DF9DEA71);
  qword_10023CD78 = v4;
  *(_QWORD *)(v2 - 965231491) = v5;
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540
                                                  + ((-21
                                                                                   * ((v5 - qword_10023CD78) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((v5 - qword_10023CD78) ^ 0x71))] ^ 0x5F])
                                                  + 76)
                                        - 1998312159))(a2);
  v7 = -21 * (qword_10023CD78 ^ 0x71 ^ *(_DWORD *)(v2 - 965231491));
  __asm { BR              X8 }
}

uint64_t sub_100128C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  void *v5;
  uint64_t v6;

  __stxr(a5, a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4873 * (v5 == &_xpc_error_connection_invalid)) ^ 0x8A7u)) - 4))();
}

uint64_t sub_100128C48()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  v5 = v4(*(_QWORD *)(v0 + 32));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v3) - ((v3 - 8398948) & 0xF738CFBF ^ v1)))(v5);
}

uint64_t sub_100128C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  _BOOL4 v3;

  v3 = v2(v0) == (_QWORD)&_xpc_type_dictionary;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((16 * (v3 & 0xFFFFFFF7 | (8 * v3))) ^ 0x837)) - 4))();
}

uint64_t sub_100128CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13)
{
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  v19 = *(_QWORD *)(v14 + 32);
  a13 = (v18 + 5280) ^ (222922757 * ((&a11 & 0x8722D97D | ~(&a11 | 0x8722D97D)) ^ 0x114CD3B9));
  a11 = v19;
  a12 = v13;
  v20 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v16 + 8 * (int)(v18 - 1657)) - 1907454362))(&a11);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * v18) - (v18 ^ 0xF738C8DC ^ v15)))(v20);
}

uint64_t sub_100128D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  v5 = v4(*(_QWORD *)(v0 + 32));
  return ((uint64_t (*)(uint64_t))(v1 - (v3 - 147273892) + *(_QWORD *)(v2 + 8 * v3)))(v5);
}

void sub_100128D9C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (222922757 * ((((2 * a1) | 0x4C5B8E6E) - a1 - 640534327) ^ 0x4FBC320C));
  __asm { BR              X10 }
}

uint64_t sub_100128E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 + 8 * (((66 * (v11 ^ 0x4F8) + 3 * (v11 ^ 0x549) - 2755) * (a9 != *(_QWORD *)(a11 + 32))) ^ v11)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

void sub_10012AE84(uint64_t a1)
{
  int v1;
  void (*v2)(char *, void (*)());
  char *v3;

  v1 = *(_DWORD *)(a1 + 8) + 447355651 * ((a1 - 2 * (a1 & 0x3C9A5CAA) + 1016749226) ^ 0xD5969FB6);
  v2 = (void (*)(char *, void (*)()))((char *)*(&off_100236540 + (v1 ^ 0xCCF)) - 1376340066);
  v3 = (char *)*(&off_100236540 + (v1 ^ 0xF8C)) - 321009951;
  v2(v3, sub_1001C4250);
  ((void (*)(void))((char *)*(&off_100236540 + (v1 & 0x79F173DE)) - 424581718))();
  v2(v3, sub_1001C4250);
  __asm { BR              X8 }
}

uint64_t sub_10012B010()
{
  uint64_t (*v0)(void);
  uint64_t v1;

  v1 = v0();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5E8] + 8 * (int)STACK[0x5C0]) - 4))(v1);
}

uint64_t sub_10012B028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  _BOOL4 v8;

  v8 = *(_DWORD *)(*(_QWORD *)(v5 + 8 * (v6 - 2959)) - 524974990) != 1787428582
    || *(_QWORD *)(*(_QWORD *)(v5 + 8 * (v6 ^ 0xCC2)) - 690798115) == 0;
  return (*(uint64_t (**)(void))(a5 + 8 * ((231 * v8) ^ (v6 + 2322))))();
}

uint64_t sub_10012B0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t *a7, uint64_t a8)
{
  uint64_t v8;
  _DWORD *v9;
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  __int16 v22;
  int v23;
  int v24;
  int v25;
  unint64_t v26;
  int v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int8x16_t v47;
  uint64_t j;
  int8x16x4_t v50;

  v12 = *(_DWORD *)(*v10 + (int)(*v9 & 0xBAC1C520));
  STACK[0x978] = 0;
  v13 = 16777619 * ((-1161706206 * v12 + 7) ^ (-1161706206 * v12)) % 7;
  v14 = *(_BYTE *)((unint64_t)&STACK[0x978] | v13);
  *(_BYTE *)((unint64_t)&STACK[0x978] | v13) = 0;
  LOBYTE(STACK[0x97F]) = v14;
  v15 = 16777619 * ((-1161706206 * v12 + 6) ^ (-1161706206 * v12)) % 6;
  v16 = *(_BYTE *)((unint64_t)&STACK[0x978] | v15);
  *(_BYTE *)((unint64_t)&STACK[0x978] | v15) = STACK[0x97E];
  LOBYTE(STACK[0x97E]) = v16;
  v17 = 16777619 * ((-1161706206 * v12 + 5) ^ (-1161706206 * v12)) % 5;
  v18 = *(_BYTE *)((unint64_t)&STACK[0x978] | v17);
  *(_BYTE *)((unint64_t)&STACK[0x978] | v17) = STACK[0x97D];
  LOBYTE(STACK[0x97D]) = v18;
  v19 = STACK[0x978];
  LOBYTE(STACK[0x978]) = STACK[0x97C];
  LOBYTE(STACK[0x97C]) = v19;
  v20 = 16777619 * ((-1161706206 * v12 + 3) ^ (-1161706206 * v12)) % 3;
  v21 = *(_BYTE *)((unint64_t)&STACK[0x978] | v20);
  *(_BYTE *)((unint64_t)&STACK[0x978] | v20) = STACK[0x97B];
  LOBYTE(STACK[0x97B]) = v21;
  v22 = *(_WORD *)(a8 + 17);
  LOBYTE(STACK[0x97A]) = STACK[0x978];
  LOWORD(STACK[0x978]) = v22;
  v23 = (-1161706206 * v12 * -1161706206 * v12) ^ (-1161706206 * v12);
  v24 = (((-1161706206 * v12) | 1) * -1161706206 * v12) ^ (-1161706206 * v12);
  v25 = v24 + 16777619 * LODWORD(STACK[0x97C]);
  LODWORD(STACK[0x978]) = v23 + 16777619 * LODWORD(STACK[0x978]);
  LODWORD(STACK[0x97C]) = v25;
  v26 = STACK[0x978] ^ v8;
  v27 = 899433627 * (v26 - v23);
  LODWORD(v26) = 899433627 * (HIDWORD(v26) - v24);
  LODWORD(STACK[0x980]) = v27;
  LODWORD(STACK[0x984]) = v26;
  LOBYTE(STACK[0x981]) = v27;
  LOBYTE(STACK[0x980]) = BYTE2(v27);
  LOBYTE(STACK[0x982]) = BYTE1(v27);
  v28 = (_BYTE *)((unint64_t)&STACK[0x980] | v20);
  LOBYTE(v22) = *v28;
  *v28 = HIBYTE(v27);
  LOBYTE(STACK[0x983]) = v22;
  LOBYTE(v24) = STACK[0x980];
  LOBYTE(STACK[0x980]) = v26;
  LOBYTE(STACK[0x984]) = v24;
  v29 = (_BYTE *)((unint64_t)&STACK[0x980] | v17);
  LOBYTE(v28) = *v29;
  *v29 = BYTE1(v26);
  LOBYTE(STACK[0x985]) = (_BYTE)v28;
  v30 = (_BYTE *)((unint64_t)&STACK[0x980] | v15);
  LOBYTE(v29) = *v30;
  *v30 = BYTE2(v26);
  LOBYTE(STACK[0x986]) = (_BYTE)v29;
  v31 = (_BYTE *)((unint64_t)&STACK[0x980] | v13);
  LOBYTE(v30) = *v31;
  *v31 = BYTE3(v26);
  LOBYTE(STACK[0x987]) = (_BYTE)v30;
  v32 = STACK[0x980];
  v33 = (-1161706206 * STACK[0x980]) ^ v12;
  for (i = 1; i != 5; ++i)
  {
    v35 = 8 * i;
    v36 = 8 * (16777619 * ((v33 + (_DWORD)i) ^ v33) % i);
    v37 = *(_QWORD *)(v32 + v36) ^ *(_QWORD *)(v32 + 8 * i);
    *(_QWORD *)(v32 + v35) = v37;
    v38 = *(_QWORD *)(v32 + v36) ^ v37;
    *(_QWORD *)(v32 + v36) = v38;
    *(_QWORD *)(v32 + v35) = *(_QWORD *)(v32 + 8 * i) ^ v38;
  }
  v39 = 0;
  v40 = (__n128)xmmword_100212CF0;
  v41 = (__n128)xmmword_100212D00;
  v42 = (__n128)xmmword_100212D10;
  v43 = (__n128)xmmword_100212D20;
  v44.i64[0] = 0x9B0000009BLL;
  v44.i64[1] = 0x9B0000009BLL;
  v45.i64[0] = 0x1000000010;
  v45.i64[1] = 0x1000000010;
  v46 = vdupq_n_s32(v33);
  do
  {
    v47 = *(int8x16_t *)(v32 + v39);
    v50.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v43, v46), vsubq_s32((int32x4_t)v43, v46)), (int8x16_t)v46), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_100212D30), v44));
    v50.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v42, v46), vsubq_s32((int32x4_t)v42, v46)), (int8x16_t)v46), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_100212D40), v44));
    v50.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v41, v46), vsubq_s32((int32x4_t)v41, v46)), (int8x16_t)v46), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_100212D50), v44));
    v50.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v40, v46), vsubq_s32((int32x4_t)v40, v46)), (int8x16_t)v46), (int8x16_t)vmulq_s32((int32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_100212D60), v44));
    *(int8x16_t *)(v32 + v39) = vqtbl4q_s8(v50, (int8x16_t)xmmword_100212D70);
    v39 += 16;
    v43 = (__n128)vaddq_s32((int32x4_t)v43, v45);
    v42 = (__n128)vaddq_s32((int32x4_t)v42, v45);
    v41 = (__n128)vaddq_s32((int32x4_t)v41, v45);
    v40 = (__n128)vaddq_s32((int32x4_t)v40, v45);
  }
  while (v39 != 32);
  for (j = 32; j != 40; ++j)
    *(_BYTE *)(v32 + j) = (-101 * *(_BYTE *)(v32 + j)) ^ v33 ^ ((v33 + j) * (j - v33));
  *a7 = v32;
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(a5 + 8 * (v11 + 2347)))(v40, v41, v42, v43, (__n128)xmmword_100212D30, (__n128)xmmword_100212D40, (__n128)xmmword_100212D50, (__n128)xmmword_100212D60);
}

uint64_t sub_10012B458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6, unint64_t a7)
{
  int v7;
  unint64_t v8;
  void (*v9)(unint64_t, void (*)());
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  _QWORD *v15;

  STACK[0x588] = v14;
  STACK[0x528] = v12;
  STACK[0x530] = v11;
  STACK[0x540] = v8;
  STACK[0x538] = a7;
  STACK[0x568] = (unint64_t)a6;
  *a6 = v7 + 1;
  STACK[0x5A0] = v10;
  STACK[0x5A8] = (unint64_t)v9;
  v9(v10, sub_1001C4250);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * ((93 * (*v15 == 0)) ^ (v13 - 593))) - 8))();
}

uint64_t sub_10012B4DC()
{
  int v0;
  uint64_t (*v1)(void);
  int v2;
  uint64_t v3;

  v2 = v0 - 524;
  v3 = v1();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5E8] + 8 * v2) - 8))(v3);
}

uint64_t sub_10012BADC()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x708] = 0;
  v3 = *v0;
  v4 = ((uint64_t (*)(unint64_t, void (*)()))STACK[0x5A8])(STACK[0x5A0], sub_1001C4250);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((v3 == 0) * (v1 ^ 0x138F)) ^ v1)))(v4);
}

uint64_t sub_10012BB20()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (((*(_QWORD *)STACK[0x598] == 0) * ((v0 - 1320) ^ 0xE30)) ^ v0)))();
}

uint64_t sub_10012BB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((6015 * (v2 == *(_QWORD *)(v1 + 8))) ^ (v3 + 319)))
                            - 1631 * (((v3 - 571) | 0x9C) ^ 0xCBCu)
                            + 3254))();
}

uint64_t sub_10012BBD8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((802 * (((v3 == v1) ^ v4) & 1)) ^ a1)) - 8);
  LODWORD(STACK[0x5C8]) = 968960260;
  return v5();
}

uint64_t sub_10012BE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  STACK[0x708] = 160;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v8 + 3122)) - 4))();
}

uint64_t sub_10012BE98()
{
  int v0;
  int v1;

  v1 = (((((v0 - 59) ^ ((unsigned int (*)(unint64_t, uint64_t))STACK[0x5B8])(STACK[0x5B0], 16)) & 1) == 0)
      * ((v0 - 366) ^ 0xCC0)) | (v0 - 413);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * v1) - 8))();
}

uint64_t sub_10012BFF0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(((v3 ^ 0xE79) * (v2 == 0)) ^ a1)) - v3 + 3673))();
}

uint64_t sub_10012C340@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t (*v5)(unint64_t, unint64_t, uint64_t, char *, unint64_t *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v7 = v3 ^ a1;
  v8 = ((((v6 - 184) | 0x48318FEB) - ((v6 - 184) & 0x48318FEB)) ^ 0xA13D4CF7) * v4;
  *(_QWORD *)(v6 - 176) = &STACK[0xB90];
  *(_DWORD *)(v6 - 184) = v1 + v8;
  *(_DWORD *)(v6 - 180) = (v3 + 1243639985) ^ v8;
  sub_100003868(v6 - 184);
  v9 = v5(STACK[0x590], STACK[0x5B0], 16, (char *)*(&off_100236540 + (v3 ^ 0xFBF)) - 950657530, &STACK[0xB90], 8);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v3) - v7 + 1235))(v9);
}

uint64_t sub_10012C3EC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v4 = a1 | 0xA40;
  v5 = ((uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))((char *)*(&off_100236540 + (v1 ^ 0x759)) - 807083854))(v3, 0, 0, 1) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v5 * (v4 ^ 0x13BF)) ^ v1)) - 8))();
}

uint64_t sub_10012C81C()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v0[1] = STACK[0xBD0];
  v0[2] = STACK[0xBD8];
  v2 = *v0;
  v3 = ((uint64_t (*)(unint64_t, void (*)()))STACK[0x5A8])(STACK[0x5A0], sub_1001C4250);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x5E8]
                                                      + 8
                                                      * ((((v1 ^ 1 ^ (v2 == 0)) & 1)
                                                        * ((v1 - 1757962031) & 0x68C85EDF ^ 0xE17)) ^ v1))
                                          - 4))(v3);
}

uint64_t sub_10012C974()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  LODWORD(STACK[0x47C]) = 13908272;
  v2 = sub_1000035BC();
  STACK[0x488] = 0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 80));
  LODWORD(STACK[0x5C8]) = 968915206;
  return v3(v2);
}

uint64_t sub_10012CAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  int v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  int v12;

  STACK[0x3B0] = v10;
  STACK[0x708] = 96;
  STACK[0x5F0] = 0x3C5DEEA546D603BLL;
  LODWORD(STACK[0x5FC]) = 0;
  LODWORD(STACK[0x60C]) = 0;
  STACK[0x488] = v9;
  LODWORD(STACK[0x47C]) = v8;
  if (v9)
    v11 = v8 == 13908272;
  else
    v11 = 1;
  v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a7 + 8 * ((v12 * ((a8 - 2069512785) & 0x7B5A3EFD ^ 0xE3F)) ^ a8)) - 8))(a1, a2, a3, a4, a5, a6, STACK[0x530]);
}

uint64_t sub_10012CB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  BOOL v14;
  int v15;
  uint64_t (*v16)(void);
  unint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;

  STACK[0x770] = *(_QWORD *)(a8 + 8 * v8) - 4;
  v9 = LODWORD(STACK[0x47C]) + 1918485339;
  v10 = STACK[0x488];
  v11 = STACK[0x488] + 4;
  v12 = LODWORD(STACK[0x47C]) - 13908296;
  LODWORD(STACK[0x4A4]) = v12;
  v13 = v10 + (v12 + 4);
  STACK[0x420] = v11;
  STACK[0x318] = (v8 + 6413) ^ 0x194FLL;
  STACK[0x430] = v13;
  if (v11)
    v14 = v13 == 0;
  else
    v14 = 1;
  v15 = v14;
  v16 = *(uint64_t (**)(void))(a8 + 8 * (v8 ^ 0xFDF));
  STACK[0x310] = (unint64_t)&STACK[0x56B33F93];
  v17 = STACK[0x5C0];
  LODWORD(STACK[0x380]) = (2 * STACK[0x5C0]) ^ 0x1E5C;
  STACK[0x368] = ((int)v17 + 578231756) & 0xFFFFFFFFDD88D3DELL;
  LODWORD(STACK[0x348]) = v17 ^ 0xD06;
  STACK[0x300] = ((_DWORD)v17 - 1940190994) & 0x73A4EDBF;
  LODWORD(STACK[0x2DC]) = v17 ^ 0xE0B;
  STACK[0x2F8] = (int)v17 ^ 0xFBELL;
  STACK[0x350] = (int)v17 ^ 0xD0BLL;
  v18 = 164 * (v17 ^ 0xE58);
  LODWORD(STACK[0x30C]) = v18;
  LODWORD(STACK[0x340]) = v18 ^ 0x13FA;
  LODWORD(STACK[0x34C]) = (v17 - 440357150) & 0x1A3F47CB;
  *(_OWORD *)&STACK[0x3D0] = xmmword_100212D90;
  *(_OWORD *)&STACK[0x490] = xmmword_100212E00;
  v19 = (v17 + 1441402674) & 0xAA15EEFD;
  STACK[0x520] = (int)v17 ^ 0x19F2;
  v20 = (v17 + 899485057) & 0xCA62FC2F;
  v21 = (v17 - 289568686) & 0x11427FF7;
  LODWORD(STACK[0x42C]) = 4714 * (v15 ^ 1);
  STACK[0x418] = ((_DWORD)v17 + 1814155426) & 0x93DE291F;
  STACK[0x378] = ((_DWORD)v17 - 2014151417) & 0x780D77FB;
  STACK[0x370] = ((int)v17 + 2028988881) & 0xFFFFFFFF871007D7;
  LODWORD(STACK[0x5E0]) = v19 ^ 0xF87;
  LODWORD(STACK[0x4B4]) = v19;
  LODWORD(STACK[0x5DC]) = v19 ^ 0xD17;
  LODWORD(STACK[0x384]) = v20;
  LODWORD(STACK[0x50C]) = v20 - 6130;
  LODWORD(STACK[0x504]) = v21;
  LODWORD(STACK[0x500]) = v21 ^ 0x16A6;
  STACK[0x390] = v17 ^ 0x1409;
  LODWORD(STACK[0x39C]) = v17 + 2081394079;
  LODWORD(STACK[0x2D8]) = 1973206680;
  STACK[0x440] = (unint64_t)&STACK[0xBC8];
  STACK[0x3A8] = (unint64_t)&STACK[0xBD8];
  STACK[0x3A0] = (unint64_t)&STACK[0xBE8];
  STACK[0x360] = (unint64_t)&STACK[0xB1F];
  LODWORD(STACK[0x344]) = -933172076;
  LODWORD(STACK[0x2F4]) = v17 ^ 0xC59;
  STACK[0x2E8] = v17 ^ 0xB56;
  LODWORD(STACK[0x35C]) = -1526726656;
  LODWORD(STACK[0x358]) = -1818492928;
  LODWORD(STACK[0x3CC]) = -1406283896;
  *(_OWORD *)&STACK[0x460] = xmmword_100212CC0;
  *(_OWORD *)&STACK[0x450] = xmmword_100212CB0;
  LODWORD(STACK[0x38C]) = v9;
  LODWORD(STACK[0x508]) = v19 ^ 0xDB0;
  LODWORD(STACK[0x388]) = 1932393611;
  return v16();
}

uint64_t sub_10012CF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (v10 | (32 * (((a6 + v9 > v8) ^ ((v10 ^ 0xE) - 72)) & 1))))
                            - 4))();
}

uint64_t sub_10012D054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((2956
                                * (a6
                                 - v9
                                 - ((v12 ^ 0xC3177AED)
                                  + v11)
                                 + (unint64_t)((v12 ^ 0xC3177AED) + v11 + v10) >= (unint64_t)((v12 + v8) & 0xDE2C2FDD)
                                                                                       - 3645)) ^ v12)))();
}

uint64_t sub_10012D1E0@<X0>(int a1@<W0>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2 + 8 * a1) - (v4 | v5) + 3661))(v3 - (a3 & 0xFFFFFFF8) + 8);
}

uint64_t sub_10012D2BC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *(_BYTE *)(v3 + (v5 + v7)) = *(_BYTE *)(a1 + (v5 + v7 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v5 - 1 == v8 - 4) * (v6 - 2818)) ^ a3)) - 8))();
}

uint64_t sub_10012D3B4@<X0>(uint64_t a1@<X4>, uint64_t (*a2)(void)@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  STACK[0x408] = *(_QWORD *)(a1 + 8 * (v2 ^ 0xFDC)) - 740335503;
  STACK[0x438] = *(_QWORD *)(a1 + 8 * (v2 - 3668)) - 2066920503;
  STACK[0x3E8] = *(_QWORD *)(a1 + 8 * (v2 ^ 0xFE3)) - 662191678;
  v3 = *(_QWORD *)(a1 + 8 * (v2 ^ 0xE36)) - 533191967;
  v4 = *(_QWORD *)(a1 + 8 * (v2 - 3541));
  v5 = v4 - 1481771826;
  STACK[0x3C0] = v4 - 1481771825;
  STACK[0x400] = ~(v4 - 1481771826);
  v6 = *(_QWORD *)(a1 + 8 * (v2 - 2844));
  STACK[0x560] = v6 - 1398589519;
  v7 = *(_QWORD *)(a1 + 8 * (v2 - 2942));
  STACK[0x3F8] = 1398589519 - v6;
  STACK[0x5D0] = v7 - 784834403;
  STACK[0x3B8] = v7 - 784834398;
  STACK[0x3F0] = 784834398 - v7;
  STACK[0x4F8] = *(_QWORD *)(a1 + 8 * (v2 - 3399)) - 1757523702;
  v8 = *(_QWORD *)(a1 + 8 * (v2 ^ 0xEFA)) - 1829310539;
  STACK[0x4E8] = *(_QWORD *)(a1 + 8 * (v2 - 3272)) - 1172375027;
  STACK[0x518] = v5;
  STACK[0x410] = v3;
  STACK[0x4F0] = v8;
  return a2();
}

uint64_t sub_10012DB38@<X0>(int a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  char v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((((v3 + 54790245) ^ 0x2FBB1767FFFB9FDDLL)
                                 + (((unint64_t)(v3 + 54790245) << ((-31 * (a3 ^ v4)) ^ 0xAAu)) & 0x1FFF73FBALL) != 0x2FBB1767FFFB9FDDLL)
                                * a1) ^ a3)))();
}

uint64_t sub_10012DBC0@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X7>, int a4@<W8>)
{
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  unint64_t v10;

  v9 = v5 < v7;
  *(_BYTE *)(v8 + v4) = 0;
  v10 = v4 + 1;
  if (v9 == v10 > (unint64_t)(5 * (a4 ^ v6)) + a2)
    v9 = v10 + v7 < v5;
  return (*(uint64_t (**)(void))(a3 + 8 * ((v9 * a1) ^ a4)))();
}

uint64_t sub_10012E910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;

  v9 = 3 * LODWORD(STACK[0x348]);
  v10 = STACK[0x5C0] - 1100;
  LODWORD(STACK[0x78C]) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * ((1085 * ((v9 ^ LODWORD(STACK[0x344])) + v8 > 0xFFFFFFE6)) ^ v10))
                            - 4))();
}

uint64_t sub_10012FFC0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((11 * ((((v8 + 736) ^ 0xF4A) & a1) == 0)) ^ v8))
                            - (v8 + 507)
                            + 3669))();
}

uint64_t sub_10013003C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x8_t v10;
  int8x8_t v11;
  int8x16_t v12;
  unint64_t v13;
  int8x16x4_t v15;

  v15.val[0].i64[0] = v4 & 8;
  v15.val[0].i64[1] = v15.val[0].i64[0] | 1;
  v15.val[1].i64[0] = v15.val[0].i64[0] | 2;
  v13 = STACK[0x5E8];
  v15.val[1].i64[1] = v15.val[0].i64[0] | 3;
  v15.val[2].i64[0] = (v5 - 3169) & v4 | 4;
  v15.val[2].i64[1] = v15.val[0].i64[0] | v9;
  v15.val[3].i64[0] = v15.val[0].i64[0] | 6;
  v15.val[3].i64[1] = v15.val[0].i64[0] | 7;
  *(int8x8_t *)(STACK[0xB10] + v4) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v7 + v15.val[0].i64[0]), *(int8x8_t *)(v8 + v15.val[0].i64[0])), *(int8x8_t *)(a3 + v15.val[0].i64[0] + 4)), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v15, v12), v10)), v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (v3 ^ (32 * ((v6 != v4) | (2 * (v6 != v4)))))) - 4))();
}

uint64_t sub_100130CF0@<X0>(int a1@<W2>, unint64_t a2@<X3>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  char v7;

  *(_BYTE *)(STACK[0xB10] + (v5 - v4 * a4)) ^= *(_BYTE *)(STACK[0x9C8] + v5) ^ v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v5 == 63) * a1) ^ v6)) - ((v6 + 343) ^ a2)))();
}

uint64_t sub_10013137C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X7>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(a4 + 8 * a5))(a1, a2, 2983, a3, STACK[0x5D0]);
}

uint64_t sub_100131718(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  int8x16_t *v15;
  int8x16_t *v16;
  int8x16_t v17;

  *v15 = veorq_s8(veorq_s8(veorq_s8(veorq_s8(veorq_s8(a3, a1), a2), a4), *v16), v17);
  return ((uint64_t (*)(void))(*(_QWORD *)(a12 + 8 * (((v14 == 0) * a7) ^ v12)) - (v13 ^ a8)))();
}

uint64_t sub_100131760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((((v11 - 477) ^ 0x24C) * (v9 == STACK[0x558])) ^ v11))
                            - (v10 | v8)
                            + 1458))();
}

uint64_t sub_1001319A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(void))(a8 + 8 * (((223 * (a6 ^ 0x6D7) + 1849) * (v8 == STACK[0x558])) ^ a6)))();
}

uint64_t sub_100131D50@<X0>(uint64_t a1@<X4>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  *(_BYTE *)(v5 + a4) = *(_BYTE *)(a2 + ((v6 - 685) & a4)) ^ v4 ^ *(_BYTE *)(((v6 - 685) & a4) + v9 + 1) ^ (((v6 + 83) & a4) * v10) ^ *(_BYTE *)(((v6 - 685) & a4) + a1 + 5);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((238 * (v8 != 63)) ^ v7)) - 8))();
}

uint64_t sub_100131FD8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v8 ^ (110 * ((a3 & 8) == 0))))
                            - ((19 * (v8 ^ 0x182B) + 1365255522) & 0xAE9FDE5D)
                            + 3669))();
}

uint64_t sub_100132160(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (a1 + 33)))();
}

uint64_t sub_100132554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;

  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (int)((((2073 * (v8 ^ 0x395) + 2044335979) & 0x8625DC66 ^ 0x43C) * (v9 < 0x10)) ^ v8)))();
}

uint64_t sub_1001327F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((v9 == 0) * (v8 + v10)) ^ v8)) - 4))();
}

uint64_t sub_10013293C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 4))();
}

uint64_t sub_100132A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, int a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  v19 = (((v11 + v10) << a5) & a7) + ((v11 + v10) ^ v15) + a6;
  v20 = (v19 + 1);
  v21 = *(unsigned __int8 *)(v17 + (v19 & 0xF)) ^ *(unsigned __int8 *)(v9 + v19) ^ *(unsigned __int8 *)((v19 & 0xF) + v14 + 1) ^ *(unsigned __int8 *)((v19 & 0xF) + v18 + 5) ^ (((((((_BYTE)v11 + (_BYTE)v10) << a5) & a7) + ((v11 + v10) ^ v15) + a6) & 0xF) * v16);
  v22 = *(_BYTE *)(v9 + (v19 + 2));
  v23 = (((((_BYTE)v11 + (_BYTE)v10) << a5) & a7)
       + ((v11 + v10) ^ v15)
       + (_BYTE)a6
       + 2) & 0xF;
  v24 = (v19 + 3);
  LODWORD(v24) = ((*(unsigned __int8 *)(v17 + (v20 & 0xF)) ^ *(unsigned __int8 *)(v9 + v20) ^ *(unsigned __int8 *)((v20 & 0xF) + v14 + 1) ^ *(unsigned __int8 *)((v20 & 0xF) + v18 + 5) ^ ((v20 & 0xF) * v16)) << 8) & 0xFF00FFFF | (((v23 * v16) ^ v22 ^ *(_BYTE *)(v17 + v23) ^ *(_BYTE *)(v23 + v14 + 1) ^ *(_BYTE *)(v23 + v18 + 5)) << 16) | ((*(unsigned __int8 *)(v9 + v24) ^ ((v24 & 0xF) * v16) ^ *(unsigned __int8 *)(v17 + (v24 & 0xF)) ^ *(unsigned __int8 *)((v24 & 0xF) + v14 + 1) ^ *(unsigned __int8 *)((v24 & 0xF) + v18 + 5)) << 24) | v21;
  *(_DWORD *)(v8 + (v10 & 0xFFFFFFFC)) = v24 + v13 - 2 * (v24 & (v13 + 2) ^ v21 & 2);
  return (*(uint64_t (**)(void))(a8 + 8 * ((62 * ((v10 + 4) > 0x3F)) ^ v12)))();
}

uint64_t sub_100132B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(a8 + 8
                                                                                            * LODWORD(STACK[0x504]))
                                                                           - (LODWORD(STACK[0x504]) - 3164)
                                                                           + 2627))(a1, 536640201, LODWORD(STACK[0x65C]), LODWORD(STACK[0x66C]), LODWORD(STACK[0x6F4]));
}

uint64_t sub_100132BD8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a8 + 8 * ((4594 * ((a2 + 1 + v9) < 0x10)) ^ v8)))();
}

uint64_t sub_1001338FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (((((2 * (v9 ^ 0x1859) - 4226) | 0x176E) ^ 0x1768) * (v8 < 0x10)) ^ (2 * (v9 ^ 0x1859))))
                            - (2 * (v9 ^ 0x1859u)
                             + 67)
                            + 4285))();
}

uint64_t sub_100133948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  int v9;
  uint64_t (*v10)(void);

  STACK[0x5C8] = v8;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * v9) - 4);
  STACK[0x558] = v8 & 0xFFFFFFFFFFFFFFF8;
  return v10();
}

uint64_t sub_100133980()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int8x8_t v9;
  int8x16_t v10;
  unint64_t v11;
  int8x16x4_t v13;

  v13.val[0].i64[0] = (v1 + (_BYTE)v0) & 0xF;
  v13.val[0].i64[1] = (v1 + (_BYTE)v0 + 1) & 0xF;
  v13.val[1].i64[0] = (v1 + (_BYTE)v0 + 2) & 0xF;
  v13.val[1].i64[1] = (v1 + (_BYTE)v0 + 3) & 0xF;
  v13.val[2].i64[0] = (v1 + (_BYTE)v0 + v6 + 23) & 0xF;
  v13.val[2].i64[1] = (v1 + (_BYTE)v0 + 5) & 0xF;
  v13.val[3].i64[0] = (v1 + (_BYTE)v0 + 6) & 0xF;
  v13.val[3].i64[1] = (v1 + (_BYTE)v0 + 7) & 0xF;
  v11 = STACK[0x5E8];
  *(int8x8_t *)(v5 + v0) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v13.val[0].i64[0] + v7 + 1), *(int8x8_t *)(v4 + v13.val[0].i64[0])), *(int8x8_t *)(v13.val[0].i64[0] + v8 + 5)), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v13, v10), v9));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (v3 ^ (16 * (v2 == v0)))) - 4))();
}

uint64_t sub_1001342D0@<X0>(int a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * a1) - (a3 ^ (2 * a1)) + 1844))();
}

uint64_t sub_1001342E8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X6>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13;

  v13 = v7 & 0xF;
  *(_BYTE *)(STACK[0x5C8] + v8) = (v13 * v11) ^ *(_BYTE *)(v6 + v7) ^ *(_BYTE *)(v10 + v13) ^ *(_BYTE *)(v13 + (a4 & v9) + a2 - 3676) ^ ((v8 & 0xF) * v11) ^ *(_BYTE *)(v13 + a1 + 5) ^ *(_BYTE *)(v10 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + a2 + 1) ^ *(_BYTE *)((v8 & 0xF) + STACK[0x5D0] + 5);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v7 + 1 < v5) * v12) ^ v4)) - 4))();
}

uint64_t sub_100134398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;

  v10 = (*(_DWORD *)(a4 + 68) ^ 0x64059644)
      + v9
      + (v8 ^ 0x64059590)
      - ((2 * ((*(_DWORD *)(a4 + 68) ^ 0x64059644) + v9)) & 0xC80B2C88);
  *(_DWORD *)(a4 + 68) = v10;
  return (*(uint64_t (**)(void))(a8 + 8 * ((6043 * ((v10 ^ 0x64059644) < v9)) ^ v8)))();
}

uint64_t sub_100134B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16x4_t v25;
  int8x16x4_t v26;

  v25.val[0].i64[0] = ((_BYTE)v19 - 1) & 0xF;
  v25.val[0].i64[1] = STACK[0x5C8];
  v25.val[1].i64[0] = STACK[0x558];
  v25.val[1].i64[1] = STACK[0x4E0];
  v25.val[2] = *(int8x16_t *)&STACK[0x4D0];
  v25.val[3].i64[0] = a1;
  v25.val[3].i64[1] = a2;
  v25.val[0].i64[0] = vqtbl4q_s8(v25, v21).u64[0];
  v26.val[0].i64[0] = a3;
  v26.val[0].i64[1] = a4;
  v26.val[1].i64[0] = v14;
  v26.val[1].i64[1] = a6;
  v26.val[2].i64[0] = v13;
  v26.val[2].i64[1] = v15;
  v26.val[3].i64[0] = v16;
  v26.val[3].i64[1] = v18;
  v25.val[0].i64[1] = vqtbl4q_s8(v26, v21).u64[0];
  v23 = vrev64q_s8(vmulq_s8(v25.val[0], v22));
  *(int8x16_t *)(a9 + v19) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a7 + (((_BYTE)v19 - 1) & 0xF) - 15), *(int8x16_t *)(v9 + v19)), *(int8x16_t *)((((_BYTE)v19 - 1) & 0xF) + v17 - 14)), *(int8x16_t *)((((_BYTE)v19 - 1) & 0xF) + a5 - 10)), vextq_s8(v23, v23, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((v10 == 0) * ((v20 | v12) ^ 0x3D)) ^ v11)) - 8))();
}

uint64_t sub_100134C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a8 + 8 * ((4466 * (((STACK[0x4C8] == v8) ^ (11 * (v10 ^ 0x63))) & 1)) ^ v10))
                                                                                                - (v9 ^ 0xE59)))(a1, a2, 2983, a4, a5, STACK[0x5C0]);
}

uint64_t sub_100134D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(uint64_t);

  v11 = *(uint64_t (**)(uint64_t))(a8 + 8 * v10);
  STACK[0x5C8] = v9 & 0xFFFFFFF8;
  return v11(v8 + v9 - 8);
}

uint64_t sub_1001352BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v8 - 1185)) - 8))();
}

uint64_t sub_10013531C@<X0>(int a1@<W5>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  unint64_t v6;
  unsigned int v8;
  int v9;
  unint64_t v10;

  v3 = *(unsigned __int8 *)(a3 + 96);
  if (v3 == 1)
  {
    v9 = *(_DWORD *)(a3 + 64);
    v8 = *(_DWORD *)(a3 + 68);
    *(_BYTE *)(a3 + 56) = (8 * v8) ^ 0xDA;
    *(_BYTE *)(a3 + 57) = (v8 >> 5) ^ 0x78;
    *(_BYTE *)(a3 + 58) = (v8 >> 13) ^ 0xFB;
    *(_BYTE *)(a3 + 59) = (v8 >> 21) ^ 0x44;
    HIDWORD(v10) = v9 + 25;
    LODWORD(v10) = v8 ^ 0x60000000;
    *(_BYTE *)(a3 + 60) = (v10 >> 29) ^ 0x50;
    *(_BYTE *)(a3 + 61) = ((v9 + 4441) >> 5) ^ 0x4C;
    *(_BYTE *)(a3 + 62) = ((v9 + 905561) >> 13) ^ 0xFE;
    *(_BYTE *)(a3 + 63) = ((v9 + 91083097) >> 21) ^ 0x6A;
    return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a1 + 797)) - 4))();
  }
  else if (v3 == 2)
  {
    v4 = *(_DWORD *)(a3 + 64);
    v5 = *(_DWORD *)(a3 + 68);
    *(_BYTE *)(a3 + 56) = ((v4 + 91083097) >> 21) ^ 0xFA;
    *(_BYTE *)(a3 + 57) = ((v4 + 905561) >> 13) ^ 0xCA;
    *(_BYTE *)(a3 + 58) = ((v4 + 4441) >> 5) ^ 0xD7;
    HIDWORD(v6) = v4 + 25;
    LODWORD(v6) = v5 ^ 0x60000000;
    *(_BYTE *)(a3 + 59) = (v6 >> 29) ^ 0x64;
    *(_BYTE *)(a3 + 60) = (v5 >> 21) ^ 0x70;
    *(_BYTE *)(a3 + 61) = (v5 >> 13) ^ 0x60;
    *(_BYTE *)(a3 + 62) = (v5 >> 5) ^ 0x4C;
    *(_BYTE *)(a3 + 63) = (8 * v5) ^ 0x4A;
    return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a1 + 797)) - 4))();
  }
  else
  {
    STACK[0x648] = *(_QWORD *)(a2 + 8 * (a1 - 2981)) - 4;
    return (*(uint64_t (**)(void))(a2 + 8 * ((a1 + 1312) ^ (a1 - 2981))))();
  }
}

uint64_t sub_100135A00()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;

  LODWORD(STACK[0x4D0]) = v0;
  v4 = 1491908057 * ((((v3 - 184) | 0xCD985283) + (~(v3 - 184) | 0x3267AD7C)) ^ 0xA15C0978);
  v5 = STACK[0x5C8];
  *(_QWORD *)(v3 - 168) = STACK[0x5C8];
  *(_DWORD *)(v3 - 160) = v4 + 1819872840;
  *(_DWORD *)(v3 - 184) = v4 + v0 + 3408;
  *(_DWORD *)(v3 - 176) = ((((v0 + 3035) | 0x145) ^ ((v0 + 2523) | 0x3A7) ^ 0x4F3BDEB3) + v1) ^ v4;
  *(_QWORD *)(v3 - 152) = 0x76FF43096255026ELL;
  *(_QWORD *)(v3 - 144) = v5;
  STACK[0x4E0] = v2;
  sub_10018DF9C(v3 - 184);
  return (*(uint64_t (**)(void))(STACK[0x5E8]
                              + 8
                              * ((3344 * (*(_DWORD *)(v3 - 180) == 968960260)) ^ LODWORD(STACK[0x4D0]))))();
}

uint64_t sub_100135C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int8x16_t *v9;

  *v9 = veorq_s8(*(int8x16_t *)&STACK[0xBE8], (int8x16_t)xmmword_100212E20);
  return (*(uint64_t (**)(void))(a8 + 8 * v8))();
}

uint64_t sub_100136188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v9 ^ (895 * (v8 != 1)))) - 4))();
}

uint64_t sub_10013625C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * v8) - 8))();
}

uint64_t sub_1001377E0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;

  v2 = (LODWORD(STACK[0x220]) + 276407491 - (STACK[0x214] & 0x20F34986)) ^ LODWORD(STACK[0x218]);
  LODWORD(STACK[0x214]) = v2;
  LODWORD(STACK[0x218]) = v2 & 0xFFFFFFFE;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x5E8] + 8 * (a2 + 703)) - 8))(a1, LODWORD(STACK[0x298]), 311, 4742, -1071981751, 241172393, 1374834279, 2749668558);
}

uint64_t sub_1001379B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  _BOOL4 v9;
  _BOOL4 v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v4 = (char)(((LOBYTE(STACK[0x218]) ^ 0x95) - 52) ^ 0x38);
  v5 = (91 * (((LOBYTE(STACK[0x218]) ^ 0x95) - 52) ^ 0x38));
  if (v4 >= 0)
    LOBYTE(v6) = ((LOBYTE(STACK[0x218]) ^ 0x95) - 52) ^ 0x38;
  else
    v6 = -v4;
  v7 = 91 * (((LOBYTE(STACK[0x218]) ^ 0x95) - 52) ^ 0x38) - v6;
  v8 = 91 * (((LOBYTE(STACK[0x218]) ^ 0x95) - 52) ^ 0x38) + v6;
  v9 = v6 > (99 * (v3 ^ a3 ^ 0xD1) + 76);
  v10 = v5 > v7;
  v11 = v5 < v8;
  if (v4 >= (char)((((v3 ^ a3) + 33) & 0xBD) + 75))
    v12 = v10;
  else
    v12 = v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2
                                                                                 + 8
                                                                                 * ((1223 * (v9 || v12)) ^ v3 ^ a3))
                                                                     - 8))(a1, 1751, 4587, 99);
}

uint64_t sub_100137B4C@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, char a7@<W8>)
{
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int8 v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  v17 = v16 ^ v15 ^ v13;
  v18 = v7 ^ v12 ^ *(_DWORD *)(v10 + 4 * (v17 ^ ((v8 + 91) * a7)));
  v19 = v7 ^ v12 ^ *(_DWORD *)(v10 + 4 * (v17 ^ (((v11 ^ 0x8A) + (_BYTE)v8) * a7) & 0xFEu));
  *(_DWORD *)(a1 + 4 * ((v8 + 91) * a7)) = v14 ^ a4 ^ (v18 + a5 - (a6 & (2 * v18)));
  *(_DWORD *)(a1 + 4 * ((((v11 ^ 0x8A) + v8) * a7) & 0xFE)) = v14 ^ a4 ^ (v19 + a5 - (a6 & (2 * v19)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v8 != 254) * a2) ^ v9)) - 8))();
}

uint64_t sub_10013838C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  unsigned __int8 v6;
  int v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  unint64_t v14;

  HIDWORD(v14) = *(_DWORD *)(*(_QWORD *)(v10 + 8 * (v13 - 3960)) + 4 * (v8 ^ v12) + a2);
  LODWORD(v14) = HIDWORD(v14);
  *(_DWORD *)(a1 + 4 * v6) = a4 ^ a6 ^ (v14 >> 13) ^ ((v14 >> 13) << 7) ^ ((v14 >> 13) << (v13 - 119)) ^ a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v7 == 0) * v11) ^ v13)) - 4))();
}

uint64_t sub_100138608@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  char v2;
  int v3;
  char v4;
  char v5;
  char v6;
  char v7;
  unsigned int v8;
  int v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v4 = a2 | 0x14;
  v5 = ((((2 * v3) ^ 0xD0) - 43) ^ v2) + ((2 * v2) & 0xB8 ^ 0xA8);
  v6 = ((v5 ^ 9) + (v4 ^ 0x9C ^ (2 * v5) & 0xB8) + 51) & 0xFE ^ 0xF9;
  v7 = 39 * v6;
  v8 = (39 * v6);
  if (v6 >= 0)
    LOBYTE(v9) = v6;
  else
    v9 = -v6;
  v10 = v8 > ((v7 - (_BYTE)v9) & 0xFEu);
  v11 = v8 < ((v7 + (_BYTE)v9) & 0xFEu);
  if (v6 >= 0)
    v11 = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((7414 * (v9 < 2u && !v11)) ^ v3)) - 4))();
}

uint64_t sub_100138ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unsigned int a62,int a63)
{
  unsigned int a64;
  uint64_t v64;
  int v65;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 1968 * v65))(a62, a64, a3, 499783329, 6707, 1283872588, 2567745176, 53);
}

uint64_t sub_100138E60@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  *(_DWORD *)(a1 + 4 * (((7 * (v2 ^ 0x984)) ^ 0x629) & (v6 * a2))) = LODWORD(STACK[0x338]) ^ LODWORD(STACK[0x278]) ^ 0x761E91AF ^ *(_DWORD *)(v4 + 4 * (((7 * (v2 ^ 0x984)) ^ 0x629) & (v6 * a2) ^ v3 ^ 0x1E)) ^ ((7 * (v2 ^ 0x984)) ^ 0x629) & (v6 * a2) ^ v3;
  return (*(uint64_t (**)(void))(STACK[0x5E8] + 8 * ((170 * (v6 + 1 != v5 + 256)) ^ v2)))();
}

uint64_t sub_100139174()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  v1 = (v0 + 3244);
  v2 = ((uint64_t (*)(uint64_t))STACK[0x438])(1032);
  STACK[0x7F8] = v2;
  STACK[0x5C8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * (int)(((v2 != 0) * (v1 ^ 0x10BA)) ^ v0))
                            - (((v0 - 954) | 0x461u) ^ 0x4E5)))();
}

uint64_t sub_100139448()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v2 = (char)((58 * (v1 ^ 0x73)) ^ ((((LOBYTE(STACK[0x214]) ^ 0x33) - 125) & 0xFE ^ 0x33) + 58));
  v3 = (-123 * ((58 * (v1 ^ 0x73)) ^ ((((LOBYTE(STACK[0x214]) ^ 0x33) - 125) & 0xFE ^ 0x33) + 58)));
  if (v2 >= 0)
    LOBYTE(v4) = (58 * (v1 ^ 0x73)) ^ ((((LOBYTE(STACK[0x214]) ^ 0x33) - 125) & 0xFE ^ 0x33) + 58);
  else
    v4 = -v2;
  v5 = v3 < (-123 * ((58 * (v1 ^ 0x73)) ^ ((((LOBYTE(STACK[0x214]) ^ 0x33) - 125) & 0xFE ^ 0x33) + 58))
                            + v4);
  if (v2 >= 0)
    v5 = v3 > (-123
                              * ((58 * (v1 ^ 0x73)) ^ ((((LOBYTE(STACK[0x214]) ^ 0x33) - 125) & 0xFE ^ 0x33) + 58))
                              - v4);
  return (*(uint64_t (**)(void))(v0 + 8 * ((1090 * (v4 < 2u && !v5)) ^ v1)))();
}

uint64_t sub_100139530@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  char v2;
  int v3;
  int v4;
  char v5;
  uint64_t v6;
  unsigned int v7;
  int v8;

  v7 = LODWORD(STACK[0x250]) ^ 0xC4FBE540 ^ LODWORD(STACK[0x24C]);
  v8 = v7 ^ (*(_DWORD *)(v6 + 4 * ((((((2 * v4) ^ 0xD2 ^ (v2 + 55)) + v3) * a2) ^ v5) ^ 0x9Du))
           + 650787347);
  *(_DWORD *)(a1 + 4 * ((v3 + v2) * a2)) = v7 ^ (*(_DWORD *)(v6
                                                                              + 4
                                                                              * ((((v3 + v2) * a2) ^ v5) ^ 0x9Du))
                                                                  + 650787347);
  *(_DWORD *)(a1 + 4 * (((((2 * v4) ^ 0xD2 ^ (v2 + 55)) + v3) * a2) & 0xFE)) = v8;
  return (*(uint64_t (**)(void))(STACK[0x5E8] + 8 * ((1095 * (v3 != 254)) ^ v4)))();
}

uint64_t sub_1001396B4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v3 = (char)(((((v2 - 58) | 0x13) ^ 9 ^ (((((v2 - 58) ^ 0x13) - 9) ^ ((((LOBYTE(STACK[0x218]) ^ 0x53) + 22) ^ 0x52) + 22))
                                        + 22))
             - 26) ^ 0xEE);
  v4 = (((((v2 - 58) | 0x13) ^ 0xB872FD09 ^ (((((v2 - 58) ^ 0x13) - 1200431881) ^ ((((LODWORD(STACK[0x218]) ^ 0xB872EF53)
                                                                                   + 511006230) ^ 0xB872EF52)
                                                                                 + 511006230))
                                           + 511006230))
       + 25724390) ^ 0xBA677EEE)
     * v0;
  v5 = ((((((v2 - 58) | 0x13) ^ 9 ^ (((((v2 - 58) ^ 0x13) - 9) ^ ((((LOBYTE(STACK[0x218]) ^ 0x53) + 22) ^ 0x52)
                                                                                 + 22))
                                                    + 22))
                         - 26) ^ 0xEE)
                       * v0);
  if (v3 >= 0)
    LOBYTE(v6) = ((((v2 - 58) | 0x13) ^ 9 ^ (((((v2 - 58) ^ 0x13) - 9) ^ ((((LOBYTE(STACK[0x218]) ^ 0x53) + 22) ^ 0x52)
                                                                        + 22))
                                           + 22))
                - 26) ^ 0xEE;
  else
    v6 = -v3;
  v7 = v5 > (v4 - v6);
  v8 = v5 < (v4 + v6);
  if (v3 >= 0)
    v8 = v7;
  return (*(uint64_t (**)(void))(v1 + 8 * ((2229 * (v6 > 1u || v8)) ^ v2)))();
}

uint64_t sub_1001397A8@<X0>(uint64_t a1@<X0>, char a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;

  v62 = *(_DWORD *)(v59 + 4 * (((v61 * a2) ^ LODWORD(STACK[0x448])) ^ 0x2Eu)) ^ a58;
  *(_DWORD *)(a1 + 4 * (v61 * a2)) = (v60 + 132284464) ^ LODWORD(STACK[0x480]) ^ (v62 + 1605350664 - ((2 * v62) & 0xBF5F6A10));
  return (*(uint64_t (**)(void))(STACK[0x5E8] + 8 * ((2156 * (v61 + 1 != v58 + 256)) ^ v60)))();
}

uint64_t sub_10013EA24@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  void (*v3)(unint64_t);
  uint64_t v4;

  v2 = a1 | 0xA50;
  v3 = (void (*)(unint64_t))STACK[0x408];
  ((void (*)(unint64_t))STACK[0x408])(STACK[0x858]);
  v3(STACK[0x850]);
  v3(STACK[0x7C0]);
  v3(STACK[0x868]);
  v3(STACK[0x7B8]);
  v3(STACK[0x838]);
  v3(STACK[0x818]);
  v3(STACK[0x7F8]);
  v3(STACK[0x828]);
  v3(STACK[0x7C8]);
  v3(STACK[0x810]);
  v3(STACK[0x848]);
  v3(STACK[0x800]);
  v3(STACK[0x860]);
  v3(STACK[0x870]);
  v4 = ((uint64_t (*)(unint64_t))v3)(STACK[0x7D0]);
  return (*(uint64_t (**)(uint64_t))(STACK[0x5E8] + 8 * (((LODWORD(STACK[0x7EC]) == 0) * (v2 - 2683)) ^ v1)))(v4);
}

uint64_t sub_10013EAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unsigned __int8 *v7;
  char *v8;
  int v9;
  char *v10;
  int v11;
  char *v12;
  int v13;
  char *v14;
  int v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v7 = (unsigned __int8 *)STACK[0x4E0];
  v8 = (char *)*(&off_100236540 + v6 - 2907) - 2077774482;
  v9 = *(_DWORD *)&v8[4 * (*(unsigned __int8 *)(STACK[0x4E0] + 12) ^ 4)];
  v10 = (char *)*(&off_100236540 + ((v6 + 672) ^ 0x116C)) - 226973663;
  v11 = *(_DWORD *)&v10[4 * (*(unsigned __int8 *)(STACK[0x4E0] + 6) ^ 0x32)];
  v12 = (char *)*(&off_100236540 + ((v6 + 672) ^ 0x112F)) - 1094231202;
  v13 = *(_DWORD *)&v12[4 * (*(unsigned __int8 *)(STACK[0x4E0] + 13) ^ 0xFALL)];
  v14 = (char *)*(&off_100236540 + v6 - 2837) - 368687346;
  v15 = v14[*(unsigned __int8 *)(STACK[0x4E0] + 11) ^ 0x9BLL];
  HIDWORD(v16) = v13 ^ 0x5DB5;
  LODWORD(v16) = v13 ^ 0x69218000;
  LODWORD(STACK[0x7EC]) = -1211819843;
  v17 = ((v16 >> 15) - (((v16 >> 15) << (v6 - 92)) & 0x2405306A) + 302159925) ^ v9;
  HIDWORD(v16) = v15 ^ 0x1C;
  LODWORD(v16) = (v15 ^ 0x40) << 24;
  v18 = *(_DWORD *)&v12[4 * (v7[9] ^ 0x6ELL)];
  LOBYTE(v13) = ((v16 >> 29) >> 3) & 0xB ^ (v16 >> 29);
  HIDWORD(v16) = v18 ^ 0x5DB5;
  LODWORD(v16) = v18 ^ 0x69218000;
  v19 = v16 >> 15;
  v20 = v13 ^ v19;
  v21 = *(_DWORD *)&v12[4 * (v7[1] ^ 0x3BLL)];
  HIDWORD(v16) = v21 ^ 0x5DB5;
  LODWORD(v16) = v21 ^ 0x69218000;
  v22 = v16 >> 15;
  v23 = v7[5] ^ 0xCDLL;
  STACK[0x2D0] = (unint64_t)v12;
  LODWORD(v23) = *(_DWORD *)&v12[4 * v23];
  HIDWORD(v16) = v23 ^ 0x5DB5;
  LODWORD(v16) = v23 ^ 0x69218000;
  v24 = ((v16 >> 15) - ((2 * (v16 >> 15)) & 0x7D80F34C) + 1052801446) ^ v11;
  v25 = *(_DWORD *)&v10[4 * (v7[10] ^ 0x6BLL)] ^ 0x2F32C799;
  v26 = v25 & 0x1000000;
  v27 = v25 & 0xFEFFFFFF;
  if ((v26 & v19) != 0)
    v28 = -v26;
  else
    v28 = v26;
  v29 = (v28 + v20) ^ v27;
  v30 = v7[3];
  v31 = *(_DWORD *)&v8[4 * (*v7 ^ 0xFLL)] ^ (v22 - ((2 * v22) & 0x2405306A) + 302159925);
  v32 = v7[14] ^ 0xAALL;
  LODWORD(STACK[0x4C0]) = *(_DWORD *)&v8[4 * (v7[4] ^ 0x89)];
  LODWORD(STACK[0x5C8]) = *(_DWORD *)&v10[4 * v32];
  v33 = v14[v30 ^ 0xE1];
  LODWORD(STACK[0x480]) = v24 - ((2 * v24) & 0x2405306A) + 302159925;
  HIDWORD(v34) = v33 ^ 0x1C;
  LODWORD(v34) = (v33 ^ 0x40) << 24;
  LODWORD(STACK[0x4D8]) = v17 - ((2 * v17) & 0x7D80F34C) + 1052801446;
  v35 = ((v34 >> 29) >> 3) & 0xB ^ (v34 >> 29);
  v36 = v14[v7[7] ^ 0xE1];
  HIDWORD(v34) = v36 ^ 0x1C;
  LODWORD(v34) = (v36 ^ 0x40) << 24;
  v37 = v7[2] ^ 0xE8;
  STACK[0x320] = (unint64_t)v10;
  LODWORD(STACK[0x330]) = *(_DWORD *)&v10[4 * v37];
  v38 = v7[8];
  LODWORD(STACK[0x448]) = ((v34 >> 29) >> 3) & 0xB ^ (v34 >> 29);
  LODWORD(STACK[0x4C8]) = (v31 ^ v35) - ((2 * (v31 ^ v35)) & 0x7D80F34C) + 1052801446;
  v39 = v7[15];
  STACK[0x328] = (unint64_t)v8;
  LODWORD(STACK[0x3E0]) = *(_DWORD *)&v8[4 * (v38 ^ 0x6F)];
  STACK[0x2C8] = (unint64_t)v14;
  LODWORD(v39) = v14[v39 ^ 0x42];
  LODWORD(STACK[0x338]) = v29 - ((2 * v29) & 0x2405306A) + 302159925;
  HIDWORD(v34) = v39 ^ 0x1C;
  LODWORD(v34) = (v39 ^ 0x40) << 24;
  LODWORD(STACK[0x4D0]) = ((v34 >> 29) >> 3) & 0xB ^ (v34 >> 29);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 + 8 * (v6 + 672))
                                                                                       - 8))(618793580, STACK[0x820], a6, 2503849092, 1896116540);
}

uint64_t sub_10013EE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  char v8;
  int v9;
  int v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  _BOOL4 v18;

  v14 = v12 ^ (16 * v10) ^ 0xD0 ^ *(_BYTE *)(a2 + v13);
  if (v8)
    v15 = 0;
  else
    v15 = 1;
  *(_BYTE *)(a7 + v13) = v14 ^ 0xEE;
  v16 = v9 + 1 + v11;
  v17 = v15 ^ (v16 < v11);
  v18 = v16 < a8;
  if (!v17)
    v15 = v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (int)(v10 ^ (2 * (v15 & 0xFFFFFFFD | (2 * (v15 & 1)))))) - 8))();
}

uint64_t sub_10013F000@<X0>(uint64_t a1@<X2>, int a2@<W5>, int a3@<W8>)
{
  LODWORD(STACK[0x480]) ^= a3 ^ LODWORD(STACK[0x448]);
  LODWORD(STACK[0x4C0]) = LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x338]);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 8))();
}

uint64_t sub_10013F384@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v3;

  LODWORD(STACK[0x5C8]) = (a1 + a2) | 0x1450;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x438])(1032);
  STACK[0x7D8] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x5E8] + 8 * ((985 * (v3 != 0)) ^ a1)) - 8))();
}

uint64_t sub_1001407B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,char a49,__int16 a50,char a51)
{
  int v51;
  int v52;
  unsigned __int8 v53;
  int v54;
  _BOOL4 v55;
  _BOOL4 v56;

  v52 = (char)((a49
              + ((((((a51 + 118 - ((2 * a51) & 0xEC)) ^ LOBYTE(STACK[0x298]) ^ 0x25) + 95) ^ 0x25) + 95) ^ (33 * ((v51 + 35) ^ 0x17)) ^ ((v51 - 12) | 4) ^ 0x25)
              + 95) & 0xFE ^ 0xC3);
  v53 = -7
      * ((a49
        + ((((((a51 + 118 - ((2 * a51) & 0xEC)) ^ LOBYTE(STACK[0x298]) ^ 0x25) + 95) ^ 0x25) + 95) ^ (33 * ((v51 + 35) ^ 0x17)) ^ ((v51 - 12) | 4) ^ 0x25)
        + 95) & 0xFE ^ 0xC3);
  if (v52 >= 0)
    LOBYTE(v54) = (a49
                 + ((((((a51 + 118 - ((2 * a51) & 0xEC)) ^ LOBYTE(STACK[0x298]) ^ 0x25) + 95) ^ 0x25) + 95) ^ (33 * ((v51 + 35) ^ 0x17)) ^ ((v51 - 12) | 4) ^ 0x25)
                 + 95) & 0xFE ^ 0xC3;
  else
    v54 = -v52;
  v55 = v53 > ((v53 - (_BYTE)v54) & 0xFEu);
  v56 = v53 < ((v53 + (_BYTE)v54) & 0xFEu);
  if (v52 >= 0)
    v56 = v55;
  return (*(uint64_t (**)(uint64_t))(a2 + 8 * ((4477 * (v54 > 1u || v56)) ^ (v51 - 3293))))(1003779381);
}

uint64_t sub_100140E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v9 = v8 ^ 0x2600;
  v10 = 18 * (v8 ^ 0x23B4);
  LODWORD(STACK[0x4D0]) = v10;
  v11 = STACK[0x298];
  v12 = LODWORD(STACK[0x298]) ^ (LODWORD(STACK[0x4C8]) + 1374344566 - ((2 * LODWORD(STACK[0x4C8])) & 0xA3D5AAEC));
  v13 = (LODWORD(STACK[0x4D8]) + 1374344566 - ((LODWORD(STACK[0x4D8]) << (v10 ^ 0x71)) & 0xA3D5AAEC)) ^ LODWORD(STACK[0x298]);
  v14 = v13 + 1003783651 - ((2 * v13) & 0x77A90BC6);
  v15 = LODWORD(STACK[0x298]) ^ (LODWORD(STACK[0x480]) + 1374344566 - ((2 * LODWORD(STACK[0x480])) & 0xA3D5AAEC));
  LODWORD(STACK[0x4D8]) = v15 + 1003783651 - ((2 * v15) & 0x77A90BC6);
  v16 = v11 ^ (LODWORD(STACK[0x4C0]) + 1374344566 - ((2 * LODWORD(STACK[0x4C0])) & 0xA3D5AAEC));
  LODWORD(STACK[0x4C8]) = v16 + 1003783651 - ((2 * v16) & 0x77A90BC6);
  v17 = STACK[0x4E0];
  LODWORD(STACK[0x228]) = LODWORD(STACK[0x4E0]) ^ (v12 + 1003783651 - ((2 * v12) & 0x77A90BC6)) ^ 0x7745F978;
  LODWORD(STACK[0x220]) = v17 ^ v14 ^ 0x4ECD699C;
  LODWORD(STACK[0x230]) = v17 ^ LODWORD(STACK[0x4D8]) ^ 0xEAA47078;
  LODWORD(STACK[0x22C]) = v17 ^ LODWORD(STACK[0x4C8]) ^ 0xBA08B6B5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a8 + 8 * v9) - 8))(4278255361);
}

uint64_t sub_100143464()
{
  uint64_t v0;
  int v1;

  v1 = LODWORD(STACK[0x4D0]) - 2317;
  LODWORD(STACK[0x7EC]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * v1) - 4))();
}

uint64_t sub_100143488()
{
  int v0;
  int v1;
  void (*v2)(unint64_t);
  uint64_t v3;

  v1 = v0 - 1194;
  v2 = (void (*)(unint64_t))STACK[0x408];
  ((void (*)(unint64_t))STACK[0x408])(STACK[0x7D8]);
  v2(STACK[0x7E0]);
  v2(STACK[0x798]);
  v2(STACK[0x808]);
  v2(STACK[0x7B0]);
  v2(STACK[0x840]);
  v2(STACK[0x7A8]);
  v3 = ((uint64_t (*)(unint64_t))v2)(STACK[0x7F0]);
  return (*(uint64_t (**)(uint64_t))(STACK[0x5E8] + 8 * v1))(v3);
}

uint64_t sub_100143824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a8 + 8 * (v8 ^ 0x9D1))
                                                                                                - 4))(a1, a2, a3, a4, a5, STACK[0x948]);
}

uint64_t sub_100143F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a8 + 8 * v8))();
}

uint64_t sub_1001445A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  char v9;
  int v10;

  return (*(uint64_t (**)(void))(a8
                              + 8 * (((((v8 == 2085308538) ^ (v10 + v9)) & 1) * (v10 - 6805)) | v10)))();
}

uint64_t sub_1001445EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((416 * ((((v8 - 2085308538) < 8) ^ (v9 - 72)) & 1)) ^ (v9 - 3504))))();
}

uint64_t sub_10014462C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  _BOOL4 v14;

  v11 = v9 - 2085308539;
  v12 = __CFADD__(v8, v9 - 2085308539);
  v14 = (v11 & 0xF) > (((_BYTE)v8 + (_BYTE)v9 - 123) & 0xFu) || v11 > ((v10 - 1260273046) & 0x4B1E3EFD ^ 0xE52u);
  return (*(uint64_t (**)(void))(a8 + 8 * ((5963 * (!v12 && !v14)) ^ v10)))();
}

uint64_t sub_100144694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  unint64_t v22;
  int v24;

  v12 = (v9 - 1005) | 0x1265;
  v13 = a1 + v10;
  v14 = a6 - (a1 + v10);
  v15 = (v8 + v10);
  v16 = STACK[0x4A8] - v13;
  v17 = v11 - v13;
  v18 = STACK[0x4B8] - v13;
  v20 = (unint64_t)(v14 + v15 - 0x3C5DEEA546D603BLL) > 0xF;
  v19 = v15 & 0xF;
  v20 = v20 && (unint64_t)(v16 + v19) > 0xF;
  v21 = v20 && (unint64_t)(v17 + v19 + 1) > 0xF;
  v22 = v18 + v19;
  v24 = v21 && v22 >= ((359 * (v12 ^ 0x1B65u)) ^ 0xB28uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((254 * v24) ^ v12)) - 8))();
}

uint64_t sub_100144744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t (*v11)(void);

  v11 = (uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v8 ^ (8 * ((v10 < 0x10) | (8 * (v10 < 0x10))))))
                          - ((v8 ^ v9)
                           - 978)
                          + 2153);
  LODWORD(STACK[0x338]) = v10;
  return v11();
}

uint64_t sub_100144B90(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (a2 - 2599)) - 4))();
}

uint64_t sub_100144C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((((v9 - 2804) ^ 0xDCA) * v8) ^ (v9 - 3194))) - 8))();
}

uint64_t sub_100144ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;

  v9 = STACK[0x5C0] ^ 0x1F03;
  v10 = STACK[0x5C0] - 3187;
  LODWORD(STACK[0x888]) = v8;
  return ((uint64_t (*)(unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a8 + 8 * (v10 ^ 0x9EC)) - (v9 ^ 0x115A)))(&STACK[0x6F0], LODWORD(STACK[0x944]), a3, a4, a5, STACK[0x948]);
}

uint64_t sub_100145510@<X0>(uint64_t a1@<X7>, char a2@<W8>)
{
  int v2;
  unint64_t v3;
  uint64_t (*v4)(void);

  v4 = *(uint64_t (**)(void))(a1
                           + 8
                           * (((((*(_QWORD *)(v3 - 0x631F30597EADA398) == 0) ^ (a2 + 1)) & 1)
                             * (v2 + 1260)) ^ v2));
  STACK[0x558] = v3;
  return v4();
}

uint64_t sub_10014555C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  unint64_t v4;

  v4 = ((*(_DWORD *)(v3 - 0x631F30597EADA36CLL) - 933173586) ^ 0xFBFFAF50FFFF6FFELL)
     + ((2 * (*(_DWORD *)(v3 - 0x631F30597EADA36CLL) - 933173586)) & 0x1FFFEDFFCLL)
     + 0x40050AF00009002;
  STACK[0x8F0] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v4 == 0) * (((a2 - 4806) | v2) ^ 0xBC3)) ^ a2)) - 8))();
}

uint64_t sub_1001462A0@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char *v4;
  unint64_t v5;

  LODWORD(STACK[0xACC]) = (v3 - 1068) | 0x853;
  LODWORD(STACK[0x5FC]) = STACK[0x5C8];
  STACK[0xAD0] = STACK[0xB28] - 0x631F30597EADA38CLL;
  LODWORD(STACK[0xADC]) = *(_DWORD *)STACK[0x558];
  v4 = (char *)&STACK[0xBA0] + v2;
  STACK[0xAE0] = (unint64_t)v4;
  STACK[0x708] = a2 + 48;
  STACK[0x9A0] = (unint64_t)*(&off_100236540 + v3 - 1061) - 1384557043;
  STACK[0x998] = (unint64_t)v4;
  v5 = *(_QWORD *)(a1 + 8 * (v3 ^ 0x186C));
  STACK[0x990] = 16;
  STACK[0x988] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 + 6100)) - 4))();
}

uint64_t sub_100146888(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v10 < v11;
  *(_BYTE *)(a4 + v9) = *(_BYTE *)(a8 + v9) + v9 * a1 - 92;
  v13 = v9 + 1 + v11;
  v14 = v12 ^ (v13 < v11);
  v15 = v13 < v10;
  if (!v14)
    v12 = v15;
  return (*(uint64_t (**)(void))(a3 + 8 * ((3110 * !v12) ^ v8)))();
}

uint64_t sub_100146A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x3E0]) = (LODWORD(STACK[0x4C0]) << 16) | (LODWORD(STACK[0x4D0]) << 8) | LODWORD(STACK[0x480]) | 0x19000000;
  LODWORD(STACK[0x2C8]) = LODWORD(STACK[0x4C8]) ^ 0x2E;
  return (*(uint64_t (**)(void))(a3 + 8 * a7))();
}

uint64_t sub_100146AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  char v8;

  return (*(uint64_t (**)(void))(a3 + 8 * ((((v8 & 1) == 0) * a8) ^ a7)))();
}

uint64_t sub_100146B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;

  LODWORD(STACK[0x2E0]) = LODWORD(STACK[0x558]) | (v7 + (LODWORD(STACK[0x5C8]) << 8));
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (a7 - 1970)) - ((a7 - 1970) ^ 0x14F3u) + 1803))();
}

uint64_t sub_1001476CC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;

  v9 = v1 ^ a1;
  v10 = STACK[0x4D8];
  LODWORD(STACK[0x230]) = HIBYTE(LODWORD(STACK[0x4D8])) ^ 0x40;
  v11 = LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x448]);
  v12 = v11 ^ LODWORD(STACK[0x4C0]);
  v13 = v11 ^ LODWORD(STACK[0x330]);
  v14 = STACK[0x4D0];
  LODWORD(STACK[0x22C]) = HIBYTE(LODWORD(STACK[0x4D0])) ^ 0x27;
  v15 = v12 ^ -v12 ^ (LODWORD(STACK[0x338]) - v13);
  LODWORD(STACK[0x220]) = ((v15 + 659816917 - ((2 * v15) & 0x4EA803AA)) ^ v14) + 2 * (v15 & STACK[0x338]);
  v16 = ((LODWORD(STACK[0x320]) + v8) ^ v5 & 0xFFFDFFFF) + 2 * (v5 & v8);
  v17 = (-1494290919 * v3) >> 4;
  v18 = v17 - 1879048192 * v3;
  v19 = (646447104 * v4) | ((-1009195823 * v4) >> 13);
  v20 = (1916025600 * v16) | ((-2056113093 * v16) >> 24);
  HIDWORD(v21) = v7 >> 22;
  LODWORD(v21) = 29229371 * v8;
  v22 = v18 ^ ((v21 >> 1) - v19) ^ v20;
  v23 = v22 + (v20 ^ (((v17 ^ v19) & 0x32776FB | (v18 ^ v19) & 0xFCD88904) + 1190307343)) + 1968572789;
  v24 = (v23 ^ 0x546EBE87) + v18;
  v25 = v20 + (v23 ^ 0xAB914178) + 1;
  LODWORD(STACK[0x24C]) = v23 ^ 0x42A5E26B;
  v26 = (v22 + 382426348 - ((2 * v22) & 0x2D96B9D8)) ^ v23 ^ 0x42A5E26B;
  v27 = -821919744 * v24 + ((-1027105275 * v24) >> 17);
  HIDWORD(v21) = ~v23;
  LODWORD(v21) = 1832922469 * (v23 ^ 0x546EBE87);
  LODWORD(STACK[0x208]) = v25;
  LODWORD(STACK[0x214]) = v26;
  v28 = (994380148 * v26) | ((-825146787 * v26) >> 30);
  v29 = (-1253001088 * v25) | ((459972977 * v25) >> 25);
  v30 = (v27 ^ (v21 >> 2) ^ v29) + v28;
  v31 = (-2142843584 * v30) | ((-1711203531 * v30) >> 26);
  v32 = (-2121121792 * v29) | ((-208796087 * v29) >> 18);
  v33 = (-1742733312 * v28) | ((1197087937 * v28) >> 11);
  v34 = (v31 ^ ((352321536 * v27) | ((-1574367979 * v27) >> 8))) + v33;
  v35 = (-2028288736 * v31) | ((-1808214487 * v31) >> 27);
  v36 = (-960346259 * v33) >> 5;
  v37 = (1744830464 * v33) | v36;
  v38 = ((-768207893 * ((v34 ^ v32) + 2 * (v34 & v32))) >> 2) - (((v34 ^ v32) + 2 * (v34 & v32)) << 30);
  v39 = 1109489275 * v35;
  v40 = 1570684928 * v35;
  v41 = ((v35 ^ ((-335544320 * v32) | ((1175521019 * v32) >> 6))) - v38) ^ v37;
  v42 = v40 & 0xFFFFC000 | (v39 >> 18);
  v43 = (-933050752 * v38) | ((1703986573 * v38) >> 25);
  HIDWORD(v21) = 3 * v36;
  LODWORD(v21) = 1798937155 * v37;
  v44 = v43 + (v42 ^ (v21 >> 6));
  LODWORD(v21) = __ROR4__((((-1716518912 * v41) >> 23) & 0x1FFFFFFF | ((3 * v41) << 29) | ((1469503899 * v41) >> 3) & 0x1FFFFE00) ^ 0x8054EDB4, 9);
  v45 = v21 ^ 0xDA402A76 ^ v44;
  v46 = v45 ^ (742253239 * (v43 + v42) - (v21 ^ 0xDA402A76) - 1719438367);
  v47 = -337961567 * v46 + 1945703109 - ((-675923134 * v46) & 0xE7F2258A);
  LODWORD(STACK[0x228]) = HIBYTE(v47) ^ 0x73;
  LODWORD(STACK[0x218]) = v45;
  v48 = v47 ^ (v45 + 1945703109 - ((2 * v45) & 0xE7F2258A));
  v49 = (v21 ^ 0xDA402A76) + (v47 ^ 0x8C06ED3A) + 1;
  v50 = (v47 ^ 0x73F912C5) + v43;
  LODWORD(STACK[0x238]) = v50;
  v51 = (-37355940 * v50) | ((2138144663 * v50) >> 30);
  LODWORD(STACK[0x330]) = v48;
  HIDWORD(v21) = v48;
  LODWORD(v21) = -1340292787 * v48;
  v52 = v21 >> 1;
  v53 = (-1481637888 * v49) | ((73861755 * v49) >> 12);
  v54 = ((v51 ^ ((1526734848 * v46) | ((543873025 * v46) >> 19))) - v53) ^ v52;
  v55 = (-1559975535 * v54) >> 7;
  HIDWORD(v21) = 17 * v54;
  LODWORD(v21) = -1559975535 * v54;
  v56 = v21 >> 7;
  v57 = (478791712 * v53) | ((-1864085951 * v53) >> 27);
  v58 = (-610045056 * v52) | ((-910735641 * v52) >> 25);
  v59 = (((1447198720 * v51) | ((-1293505403 * v51) >> 17)) - v57 - v56) ^ v58;
  HIDWORD(v21) = 9 * v55;
  LODWORD(v21) = -2090031927 * v56;
  v60 = v21 >> 6;
  v61 = (1885044736 * v59) | ((-1807032137 * v59) >> 17);
  v62 = (1429209088 * v58) | ((8037715 * v58) >> 12);
  v63 = (((-889276672 * v57) | ((-1412759881 * v57) >> 24)) + v60 + v61) ^ v62;
  v64 = 1484294715 * v62;
  v62 *= -671088640;
  v65 = (1588575232 * v60) | ((64465903 * v60) >> 22);
  v66 = (-1002700800 * v63) | ((-1803489009 * v63) >> 14);
  v67 = v66 + (v64 >> 5);
  v68 = v67 & v62;
  v69 = (-1766047744 * v61) | ((173693681 * v61) >> 18);
  v70 = v69 + v65 + (v67 ^ v62);
  v71 = v70 + 2 * v68;
  v72 = v71 ^ (1001957237 * (v65 - v69 + v66) - 167973597);
  v73 = ((2 * v72) & 0x6E0E509E)
      + (v72 ^ 0xB707284F)
      + 656530861
      - ((2 * (((2 * v72) & 0x6E0E509E) + (v72 ^ 0xB707284F))) & 0x4E43BB5A);
  LODWORD(STACK[0x250]) = v66 + (v73 ^ 0xD8DE2252) + 1;
  LODWORD(STACK[0x240]) = v73;
  LODWORD(STACK[0x320]) = (v73 ^ 0x2721DDAD) + v69;
  LODWORD(STACK[0x3E0]) = v9;
  LODWORD(STACK[0x338]) = v73 ^ (v71 + 656530861 - 2 * (v71 & 0x2721DDBD ^ v70 & 0x10));
  LODWORD(STACK[0x4C8]) = v47;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(v2 + 8 * v6) - 4))(182, 13, LODWORD(STACK[0x480]), STACK[0x8D8], ((v14 ^ v10 ^ v47) >> 8) ^ 0x140BBA);
}

uint64_t sub_10014894C()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = (v0 - 2323) | 0x848u;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x438])(1028);
  v3 = STACK[0x5E8];
  STACK[0x890] = v2;
  STACK[0x5C8] = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 == 0) ^ (((v0 - 19) ^ 0xB5) + 1)) & 1) * (v1 + 3291)) ^ v0)))();
}

uint64_t sub_10014C568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t (*v9)(unint64_t, uint64_t);

  v9 = (uint64_t (*)(unint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * v8)
                                                         - ((v8 - 1090683275) & 0x410275DD ^ 0x5D8));
  STACK[0x5E0] = 0x17D7EDEFELL;
  return v9(0x8E5CF0C74BDA9A70, 4823);
}

uint64_t sub_10014C5FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (((v13 & ~(((v11 ^ v9) * v10) ^ (v12 + a1 == v8))) * (((v11 ^ v9) + 1466) ^ a2)) ^ (v11 - 2011)))
                            - 4))();
}

uint64_t sub_10014C63C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 != v4) * (((a2 - 447) | v2) - 1327)) ^ a2)) - 4))();
}

uint64_t sub_10014C668@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((45
                                * (((*(_QWORD *)(v2 - 0x631F30597EADA398) == 0) ^ (13 * ((a2 - 16) ^ 0xA1))) & 1)) ^ (a2 + 4848))))();
}

uint64_t sub_10014C6C8@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = ((*(_DWORD *)(v2 - 0x631F30597EADA36CLL) - 933173586) ^ ((a2 + 4931)
                                                                            - 0x64080A840C0994ELL))
     + ((2 * (*(_DWORD *)(v2 - 0x631F30597EADA36CLL) - 933173586)) & 0x17E7EFEFCLL)
     + 0x64080A840C08082;
  STACK[0x928] = v4;
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 == 0) * v3) ^ a2)))();
}

uint64_t sub_10014C74C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  int v7;
  unint64_t v8;

  v8 = v4 - 1;
  STACK[0x928] = v8;
  *(_BYTE *)(v2 + v8) = (v3 ^ v6 ^ v5) * (v3 + 17);
  return (*(uint64_t (**)(void))(a1 + 8 * (((STACK[0x928] == 0) * v7) ^ a2)))();
}

uint64_t sub_10014C788()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v2 = sub_1000035BC();
  v3 = STACK[0x5E8];
  *v0 = 0;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * v1))(v2);
}

uint64_t sub_10014C9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (((((v8 ^ v9) - 1100) ^ 0xD38) * (LODWORD(STACK[0x5C8]) == 968960260)) ^ v8))
                            - 8))();
}

void sub_10014CD54(uint64_t a1)
{
  int v1;
  int v2;
  int *v3;
  int v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  BOOL v12;
  int v13;
  int v14;
  int v15;

  v1 = 1800242513 * ((((2 * a1) | 0xF236CFA2) - a1 - 2031839185) ^ 0x20BA0FFF);
  v2 = *(_DWORD *)(a1 + 32);
  v3 = &v14;
  if ((-(uint64_t)&v14 & 4) != 0)
  {
    v14 = 0;
    v3 = &v15;
  }
  v4 = v2 - v1;
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_DWORD *)(a1 + 48);
  v7 = 168 - (-(uint64_t)&v14 & 4);
  while (1)
  {
    v9 = v7;
    v6 ^= v1;
    v7 &= 7u;
    switch(v9)
    {
      case 0uLL:
        goto LABEL_17;
      case 1uLL:
        goto LABEL_16;
      case 2uLL:
        goto LABEL_15;
      case 3uLL:
        goto LABEL_14;
      case 4uLL:
        goto LABEL_13;
      case 5uLL:
        goto LABEL_12;
      case 6uLL:
        goto LABEL_11;
      case 7uLL:
        *(_BYTE *)v3 = 0;
        v3 = (int *)((char *)v3 + 1);
LABEL_11:
        *(_BYTE *)v3 = 0;
        v3 = (int *)((char *)v3 + 1);
LABEL_12:
        *(_BYTE *)v3 = 0;
        v3 = (int *)((char *)v3 + 1);
LABEL_13:
        *(_BYTE *)v3 = 0;
        v3 = (int *)((char *)v3 + 1);
LABEL_14:
        *(_BYTE *)v3 = 0;
        v3 = (int *)((char *)v3 + 1);
LABEL_15:
        *(_BYTE *)v3 = 0;
        v3 = (int *)((char *)v3 + 1);
LABEL_16:
        *(_BYTE *)v3 = 0;
LABEL_17:
        v10 = 189888609 * v6 - ((379777218 * v6 - 1577589754) & 0xC27A69F0) - 1304877317;
        v11 = ((2 * v10) & 0xFFAE5FCA ^ 0xC22A49C0) + (v10 ^ 0x9EEA1B1D);
        if (v5)
          v12 = v11 == -2674683;
        else
          v12 = 1;
        v13 = v12;
        __asm { BR              X8 }
        return;
      default:
        v8 = ((v7 >> 3) + 7) >> 3;
        if (((v7 >> 3) & 7) == 4)
          goto LABEL_8;
        while (1)
        {
          *(_QWORD *)v3 = 0;
          v3 += 2;
LABEL_8:
          *(_OWORD *)v3 = 0u;
          *((_OWORD *)v3 + 1) = 0u;
          v3 += 8;
          if (!--v8)
            break;
          *(_QWORD *)v3 = 0;
          *((_QWORD *)v3 + 1) = 0;
          *((_QWORD *)v3 + 2) = 0;
          v3 += 6;
        }
        break;
    }
  }
}

uint64_t sub_10014CF44(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  unint64_t v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  uint64_t (*v91)(uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v93 = v49;
  v52 = a3[1];
  v53 = (a3[2] << ((v51 - 113) & 0x2F ^ 0x25)) | v52 | (a3[3] << 16);
  STACK[0x440] = v50;
  v54 = (*a3 | ((v53 + 1007679 - 2 * (v53 & 0xF603F ^ v52 & 5)) << 8)) - 1280;
  LOBYTE(STACK[0x500]) = (v54 ^ 0x35) - ((2 * (v54 ^ 0x35)) & 0x18) + 12;
  LOBYTE(STACK[0x501]) = ((unsigned __int16)(v54 ^ 0x7235) >> 8) - ((v54 >> 7) & 0x18) + 12;
  LOBYTE(STACK[0x502]) = ((v54 ^ 0x9C157235) >> 16) - (((v54 ^ 0x9C157235) >> 15) & 0x18) + 12;
  LOBYTE(STACK[0x503]) = ((v54 ^ 0x9C157235) >> 24) - (((v54 ^ 0x9C157235) >> 23) & 0x18) + 12;
  v55 = a3[6];
  v56 = v55 & 0x10;
  v57 = v55 & 0xFFFF00FF | (a3[7] << 8);
  v58 = (((v57 - 2 * (v57 & 0x12DC ^ v56)) << 8) - 132985856) ^ 0xF812CC00;
  v59 = (v58 - ((2 * v58) & 0xFF6C00) + 25147053) ^ 0x7FB6AD | a3[5];
  v60 = ((v59 << 8) - ((v59 << 9) & 0x772C600) + 62481162) ^ 0x3B9630A | a3[4];
  v61 = v60 - ((2 * v60) & 0xC80B6A7E) + 1678095679;
  LOBYTE(STACK[0x504]) = v61 ^ 0x67;
  LOBYTE(STACK[0x505]) = BYTE1(v61) ^ 0xAA;
  LOBYTE(STACK[0x506]) = ((v61 >> 15) & 0x9E ^ 0x1C)
                       + (BYTE2(v61) ^ 0x71)
                       - ((2 * (((v61 >> 15) & 0x9E ^ 0x1C) + (BYTE2(v61) ^ 0x71)) + 2) & 0x18)
                       + 61;
  LOBYTE(STACK[0x507]) = (HIBYTE(v61) ^ 0x4E) - ((2 * (HIBYTE(v61) ^ 0x4E)) & 0x18) + 12;
  v62 = a3[9];
  v63 = v62 & 5;
  v64 = v62 & 0xFF0000FF | (a3[11] << 16) | (a3[10] << 8);
  v65 = (((v64 + 2190913 - 2 * (v64 & 0x21719F ^ v63)) << 8) + 219392) ^ 0x21719A00;
  v66 = (v65 - ((2 * v65) & 0x49691400) + 615811768) ^ 0x24B48AB8 | a3[8];
  v67 = v66 - ((2 * v66) & 0xE7913450) + 1942526504;
  LOBYTE(STACK[0x508]) = (v67 ^ 0xFB) - ((2 * (v67 ^ 0xFB)) & 0x18) + 12;
  LOBYTE(STACK[0x50A]) = ((v67 ^ 0x706979FB) >> 16) - (((v67 ^ 0x706979FB) >> 15) & 0x18) + 12;
  LOBYTE(STACK[0x509]) = ((unsigned __int16)(v67 ^ 0x79FB) >> 8) - (((v67 ^ 0x706979FB) >> 7) & 0x18) + 12;
  LOBYTE(STACK[0x50B]) = ((v67 ^ 0x706979FB) >> 24) - ((v67 >> 23) & 0x18) + 12;
  v68 = (a3[15] << 16) | (a3[14] << 8);
  v69 = a3[12] | (((v68 - ((2 * v68) & 0x511800) + 1848151103) ^ 0x6E288C3F | a3[13]) << 8);
  v70 = v69 - ((2 * v69) & 0xBE8265BA) + 1598108381;
  LOBYTE(STACK[0x50C]) = ((v69 - ((2 * v69) & 0xBA) - 35) ^ 0xBD)
                       - ((2 * ((v69 - ((2 * v69) & 0xBA) - 35) ^ 0xBD)) & 0x18)
                       + 12;
  LOBYTE(STACK[0x50D]) = (((unsigned __int16)(v70 ^ 0xA2BD) >> 8) - (((v70 ^ 0x50BAA2BD) >> 7) & 0xF8) - 4) ^ 0xF0;
  LOBYTE(STACK[0x50E]) = (((v70 ^ 0x50BAA2BD) >> 16) - (((v70 ^ 0x50BAA2BD) >> 15) & 0x50) + 40) ^ 0x24;
  LOBYTE(STACK[0x50F]) = ((v70 ^ 0x50BAA2BD) >> 24) - ((v70 >> 23) & 0x18) + 12;
  v71 = a3[18];
  v72 = v71 & 1;
  v73 = v71 & 0xFFFF00FF | (a3[19] << 8);
  v74 = (((v73 - 2 * (v73 & 0x2A85 ^ v72)) << 8) + 740983808) ^ 0x2C2A8400;
  v75 = (v74 - ((2 * v74) & 0x82F95A00) + 1098689831) ^ 0x417CAD27 | a3[17];
  v76 = (a3[16] | ((v75 + 14149776 - ((2 * v75) & 0xAFD120)) << 8)) ^ 0xD7E89000;
  v77 = (v76 - 2 * (v76 & 0x7DB8EFFD ^ a3[16] & 1) + 2109272060) ^ 0xEECDA7C9;
  LOBYTE(STACK[0x510]) = v77 - ((2 * v77) & 0x18) + 12;
  LOBYTE(STACK[0x511]) = (BYTE1(v77) - ((v77 >> 7) & 0x3C) - 98) ^ 0x92;
  LOBYTE(STACK[0x512]) = BYTE2(v77) - ((v77 >> 15) & 0x18) + 12;
  v78 = ((v77 >> 23) & 0xCA) + (HIBYTE(v77) ^ 0x65);
  LOBYTE(STACK[0x513]) = v78 - ((2 * v78 + 22) & 0x18) - 89;
  v79 = ((a3[23] << 8) + 32324686 - ((a3[23] << 9) & 0x8E00) + 2849) ^ 0xED476F | a3[22];
  v80 = ((v79 << 8) - ((v79 << 9) & 0xE84E9000) + 1948731474) ^ 0x74274852 | a3[21];
  v81 = ((a3[20] | ((v80 + 4993142 - ((2 * v80) & 0x9860E0)) << 8)) - 1536) ^ 0x4C307000;
  v82 = v81 - 2 * (v81 & 0x43F621D5 ^ a3[20] & 1) + 1140203988;
  LOBYTE(STACK[0x514]) = v82 ^ 0x8C;
  LOBYTE(STACK[0x515]) = BYTE1(v82) ^ 0x3E;
  LOBYTE(STACK[0x516]) = BYTE2(v82) ^ 0x41;
  LOBYTE(STACK[0x517]) = HIBYTE(v82) ^ 0x65;
  v83 = ((a3[27] << 8) - ((a3[27] << 9) & 0x1D000) + 400025744) ^ 0x17D7E890 | a3[26];
  v84 = ((((2 * v83) & 0xDEFDFE) + (v83 ^ 0xEF7EFF)) << 8) + 276889856;
  v85 = a3[25] + (v84 ^ 0xBE653F) + ((2 * v84) & 0x7CCA00) + 4299457;
  v86 = ((v85 << 8) - ((v85 << 9) & 0x96398000) + 1260175367) ^ 0x4B1CC007 | a3[24];
  v87 = v86 - ((2 * v86) & 0x9BEDAD0E) + 1308022407;
  LOBYTE(STACK[0x519]) = BYTE1(v87) ^ 0x39;
  LOBYTE(STACK[0x518]) = v87 ^ 0x58;
  LOBYTE(STACK[0x51B]) = (HIBYTE(v87) ^ 0x4E) + (~(2 * (HIBYTE(v87) ^ 0x4E)) | 0xE7) + 13;
  LOBYTE(STACK[0x51A]) = BYTE2(v87) ^ 0x5B;
  v88 = (unsigned __int16)(a3[29] << 8) | (((unsigned __int16)((a3[31] << 8) - ((a3[31] << 9) & 0x2400) + 4644) ^ 0x1224 | a3[30]) << 16);
  v89 = (v88 - ((2 * v88) & 0x772C600) + 62481162) ^ 0x3B9630A | a3[28];
  v90 = v89 - ((2 * v89) & 0xEED592E4) + 2003487090;
  LOBYTE(STACK[0x51C]) = v90 ^ 0x1E;
  LOBYTE(STACK[0x51D]) = (BYTE1(v90) ^ 0x59) - ((2 * (BYTE1(v90) ^ 0x59)) & 0x18) + 12;
  LOBYTE(STACK[0x51F]) = HIBYTE(v90) ^ 0x74;
  LOBYTE(STACK[0x51E]) = BYTE2(v90) ^ 0x9D;
  *((_BYTE *)&STACK[0x500] + (((v90 & 0x1171E7 ^ 0x20E5) + (v90 & 0x1171E7 ^ 0x115102)) & 0x220221)) = 58;
  memset(&STACK[0x522], 58, 30);
  LOBYTE(STACK[0x520]) = 58;
  v91 = *(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x440] + 8 * (v51 + 989));
  HIDWORD(a40) = 1933754368;
  HIDWORD(v95) = 1314 * (v51 ^ 0x96C);
  LODWORD(v95) = HIDWORD(v95) ^ 0xA4C;
  HIDWORD(v94) = v51 + 4805;
  LODWORD(v94) = v51 + 4744;
  LODWORD(STACK[0x40C]) = -499579896;
  LODWORD(STACK[0x400]) = -967043096;
  LODWORD(STACK[0x438]) = -2074647424;
  LODWORD(STACK[0x420]) = 2121270505;
  LODWORD(STACK[0x410]) = 1654200902;
  LODWORD(STACK[0x2F8]) = 1622017966;
  LODWORD(STACK[0x428]) = 1608499457;
  LODWORD(a35) = -1635436389;
  HIDWORD(a34) = -1344957680;
  LODWORD(STACK[0x278]) = 1476878943;
  LODWORD(a48) = 12;
  LODWORD(STACK[0x41C]) = 365136150;
  LODWORD(a39) = -287207180;
  LODWORD(STACK[0x33C]) = 12;
  LODWORD(STACK[0x314]) = 12;
  LODWORD(STACK[0x330]) = 12;
  LODWORD(STACK[0x34C]) = 12;
  LODWORD(STACK[0x3FC]) = 12;
  LODWORD(STACK[0x2F0]) = 12;
  LODWORD(STACK[0x384]) = 12;
  LODWORD(STACK[0x2E8]) = 12;
  LODWORD(STACK[0x290]) = 12;
  LODWORD(STACK[0x344]) = 12;
  LODWORD(STACK[0x324]) = 12;
  LODWORD(STACK[0x280]) = 122;
  LODWORD(STACK[0x2D4]) = 12;
  LODWORD(STACK[0x2E0]) = 12;
  LODWORD(STACK[0x350]) = 12;
  LODWORD(STACK[0x334]) = 12;
  LODWORD(STACK[0x2A0]) = 12;
  LODWORD(STACK[0x2D8]) = 12;
  LODWORD(STACK[0x29C]) = 12;
  LODWORD(STACK[0x2BC]) = 12;
  LODWORD(STACK[0x32C]) = 12;
  LODWORD(STACK[0x298]) = 12;
  LODWORD(STACK[0x3D8]) = 12;
  LODWORD(STACK[0x2C0]) = 12;
  LODWORD(STACK[0x338]) = 12;
  LODWORD(STACK[0x3F8]) = 12;
  LODWORD(STACK[0x318]) = 12;
  LODWORD(STACK[0x3DC]) = 12;
  LODWORD(STACK[0x3E8]) = 12;
  LODWORD(STACK[0x328]) = 12;
  LODWORD(STACK[0x348]) = 12;
  LODWORD(STACK[0x340]) = 12;
  LODWORD(STACK[0x3E0]) = 12;
  LODWORD(STACK[0x2A8]) = 12;
  LODWORD(STACK[0x2C8]) = 12;
  LODWORD(STACK[0x288]) = 12;
  LODWORD(STACK[0x2B0]) = 12;
  LODWORD(STACK[0x3F4]) = 12;
  return v91(32324686, 12, a3, 14149776, 2026738989, 3196216762, 12, 858261306, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           v93,
           v94,
           a3,
           a34,
           a35,
           0x842F655AB0F05F85,
           0x4B1E4387B5A89138,
           0x75C3E18B94755D01,
           a39,
           a40,
           v95,
           0x82F95A4E5FA24000,
           0x2E3A20001B36A000,
           0xC0000000CLL,
           0xC0000000CLL,
           0xC0000000CLL,
           0xC0000000CLL,
           a48,
           a49);
}

uint64_t sub_10014DAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * ((28 * (v5 - 1318 + v6 + (v5 ^ v7) + a5 > 0x3F)) ^ v5)))();
}

uint64_t sub_10014DB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  HIDWORD(v53) = *(unsigned __int8 *)(v45 + (a9 + 2));
  HIDWORD(v50) = *(unsigned __int8 *)(v45 + (a9 + 3));
  LODWORD(v50) = *(unsigned __int8 *)(v45 + (a9 + 4));
  LODWORD(v54) = *(unsigned __int8 *)(v45 + (a9 + 5));
  LODWORD(v53) = *(unsigned __int8 *)(v45 + (a9 + 6));
  LODWORD(v52) = *(unsigned __int8 *)(v45 + (a9 + 7));
  LODWORD(v51) = *(unsigned __int8 *)(v45 + (a9 + 8));
  HIDWORD(v51) = *(unsigned __int8 *)(v45 + (a9 + 9));
  HIDWORD(v52) = *(unsigned __int8 *)(v45 + (a9 + 10));
  LODWORD(v55) = *(unsigned __int8 *)(v45 + (a9 + 13));
  HIDWORD(v54) = *(unsigned __int8 *)(v45 + (a9 + 14));
  HIDWORD(v55) = *(unsigned __int8 *)(v45 + (a9 + 15));
  LODWORD(STACK[0x2BC]) = *(unsigned __int8 *)(v45 + (a9 + 25));
  LODWORD(STACK[0x2A0]) = *(unsigned __int8 *)(v45 + (a9 + 26));
  LODWORD(STACK[0x298]) = *(unsigned __int8 *)(v45 + (a9 + 27));
  v47 = ((2 * (a9 + 28)) & 0xBF6FBC7E) + ((a9 + 28) ^ 0xDFB7DE3F) + 541598145;
  LODWORD(STACK[0x288]) = *(unsigned __int8 *)(v45 + v47 + 1);
  LODWORD(STACK[0x334]) = *(unsigned __int8 *)(v45 + v47 + 20);
  LODWORD(STACK[0x338]) = *(unsigned __int8 *)(v45 + v47 + 19);
  LODWORD(STACK[0x33C]) = *(unsigned __int8 *)(v45 + v47 + 18);
  LODWORD(STACK[0x340]) = *(unsigned __int8 *)(v45 + v47 + 17);
  LODWORD(STACK[0x344]) = *(unsigned __int8 *)(v45 + v47 + 16);
  LODWORD(STACK[0x348]) = *(unsigned __int8 *)(v45 + v47 + 15);
  LODWORD(STACK[0x34C]) = *(unsigned __int8 *)(v45 + v47 + 14);
  LODWORD(STACK[0x350]) = *(unsigned __int8 *)(v45 + v47 + 13);
  LODWORD(STACK[0x2F0]) = *(unsigned __int8 *)(v45 + v47 + 12);
  LODWORD(STACK[0x2E8]) = *(unsigned __int8 *)(v45 + v47 + 11);
  LODWORD(STACK[0x2E0]) = *(unsigned __int8 *)(v45 + v47 + 9);
  LODWORD(STACK[0x2D4]) = *(unsigned __int8 *)(v45 + v47 + 8);
  LODWORD(STACK[0x2D8]) = *(unsigned __int8 *)(v45 + v47 + 7);
  LODWORD(STACK[0x2C0]) = *(unsigned __int8 *)(v45 + v47 + 6);
  LODWORD(STACK[0x2A8]) = *(unsigned __int8 *)(v45 + v47 + 5);
  LODWORD(STACK[0x29C]) = *(unsigned __int8 *)(v45 + v47 + 4);
  LODWORD(STACK[0x2B0]) = *(unsigned __int8 *)(v45 + v47 + 3);
  LODWORD(STACK[0x2C8]) = *(unsigned __int8 *)(v45 + v47 + 2);
  LODWORD(STACK[0x330]) = *(unsigned __int8 *)(v45 + v47 + 21);
  LODWORD(STACK[0x32C]) = *(unsigned __int8 *)(v45 + v47 + 22);
  LODWORD(STACK[0x324]) = *(unsigned __int8 *)(v45 + v47 + 24);
  LODWORD(STACK[0x328]) = *(unsigned __int8 *)(v45 + v47 + 23);
  LODWORD(STACK[0x318]) = *(unsigned __int8 *)(v45 + v47 + 25);
  LODWORD(STACK[0x314]) = *(unsigned __int8 *)(v45 + v47 + 26);
  LODWORD(STACK[0x384]) = *(unsigned __int8 *)(v45 + v47 + 27);
  LODWORD(STACK[0x388]) = *(unsigned __int8 *)(v45 + v47 + 28);
  LODWORD(STACK[0x30C]) = *(unsigned __int8 *)(v45 + v47 + 29);
  LODWORD(STACK[0x300]) = *(unsigned __int8 *)(v45 + v47 + 30);
  LODWORD(STACK[0x308]) = *(unsigned __int8 *)(v45 + v47 + 31);
  LODWORD(STACK[0x304]) = *(unsigned __int8 *)(v45 + v47 + 32);
  LODWORD(STACK[0x2FC]) = *(unsigned __int8 *)(v45 + v47 + 33);
  LODWORD(STACK[0x310]) = *(unsigned __int8 *)(v45 + v47 + 34);
  LODWORD(STACK[0x430]) = *(unsigned __int8 *)(v45 + v47 + 35);
  LODWORD(STACK[0x290]) = *(unsigned __int8 *)(v45 + v47);
  v48 = (a5 - 64);
  HIDWORD(a40) = v47 + 36;
  LODWORD(a41) = v48;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * v44) - 8))(a1, a2, a3, a4, v48, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           v50,
           v51,
           v52,
           v53,
           v54,
           v55);
}

uint64_t sub_10014DE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * (int)(((((a5 == 2026738925) ^ v5) & 1)
                                                                              * ((v5 + 918201296) & 0xC9455DEF ^ 0xFD1)) ^ v5)))(a1, a2, a3, 0x1B54C3000);
}

uint64_t sub_10014DED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * (((a4 != v6 + v5 + 768 - 2286)
                                                                                  * ((v5 + 959) ^ 0x1E4C)) ^ v5))
                                                                    - 4))(a1, a2, a3, (a5 + 1));
}

uint64_t sub_10014DF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * (((((v5 - 768) ^ 0xCC1) + 2548)
                                                                                  * (a4 != v6 - 62)) ^ v5))
                                                                    - 8))(a1, a2, a3, (a5 + 2));
}

uint64_t sub_10014DF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                + 8
                                                                                * ((4793
                                                                                  * ((((-52
                                                                                      * ((((_BYTE)a4 + 19) & 0xDB ^ 0xDB)
                                                                                       + (((_BYTE)a4 + 19) & 0xDB))
                                                                                      - 104) & 0xFC) == 0) == (a4 == ((v5 - 1756387777) & 0x68B05D7F ^ 0x78CD9D9E)))) ^ v5))
                                                                    - 4))(a1, a2, a3, (a5 + 3));
}

uint64_t sub_10014DFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8 * (v5 ^ (2921 * (a4 != v6 - 60))))
                                                                    - (v5 + 959)
                                                                    + 2410))(a1, a2, a3, (a5 + 4));
}

uint64_t sub_10014E018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, char a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                + 8 * ((8109 * (a5 != v7 - 59)) ^ v6))
                                                                    - 4))(a1, a2, a3, (a4 ^ 1) + 2 * (a6 & 1u));
}

uint64_t sub_10014E054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8 * (v5 ^ (2704 * (a4 != v6 - 58))))
                                                                    - 4))(a1, a2, a3, ((v5 - 1588169136) & 0x5EA98CAF) + a5 + ((v5 - 1588169136) ^ 0x5EA98CADu));
}

uint64_t sub_10014E0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * (int)((((485 * (v5 ^ 0x8AC) + 467895376) & 0xE41C7F6E ^ 0x1771)
                                                                                       * (a4 != v6 - 57)) ^ v5))
                                                                    - 8))(a1, a2, a3, (a5 + 2));
}

uint64_t sub_10014E10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                + 8
                                                                                * (((((v5 ^ 0x59A) * v7 - 2077603328) & 0x7BD5BB7E ^ 0x6C5)
                                                                                  * (a4 != v6 - 56)) ^ v5))
                                                                    - 4))(a1, a2, a3, (a5 + 3));
}

uint64_t sub_10014E168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v7 + 8 * (v5 ^ (1629 * (a4 != v6 - 55)))))(a1, a2, a3, (v5 + a5 - 1003));
}

uint64_t sub_10014E198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v7
                                                                      + 8
                                                                      * (((((a4 == v6 - 54) ^ v5) & 1)
                                                                        * ((v5 + 442) ^ 0x12D3)) ^ v5)))(a1, a2, a3, (a5 + 5));
}

uint64_t sub_10014E1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * (((((v5 - 1405) | 0x942) - 2408)
                                                                                  * (a4 == v6 - 53)) ^ v5))
                                                                    - 4))(a1, a2, a3, (a5 + 6));
}

uint64_t sub_10014E210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v8
                                                                     + 8
                                                                     * ((4645
                                                                       * (((a4 == ((v5 + 6) ^ (v6 - 983))) ^ (v5 + 70)) & 1)) ^ (v5 - 442))))(a1, *(unsigned __int8 *)(v7 + a3), a2, (a5 + 7));
}

uint64_t sub_10014E24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * ((7240
                                                                                  * (((a4 == v6 - 51) ^ v5) & 1)) ^ v5))
                                                                    - 4))(a1, a2, a3, a5 + 171 * (v5 ^ 0x5A2u) - 2215);
}

uint64_t sub_10014E298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * ((618
                                                                                  * (((a4 == v6 - 50) ^ v5) & 1)) ^ v5))
                                                                    - 8))(a1, a2, a3, (a5 + 9));
}

uint64_t sub_10014E74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0x2C8]) = *(unsigned __int8 *)(v8 + a4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                + 8
                                                                                * ((7931
                                                                                  * ((v6 ^ 0x40 ^ (a5 == v7 - 33)) & 1)) ^ v6 ^ 0x640))
                                                                    - 4))(a1, a2, a3, (a6 + 26));
}

uint64_t sub_10014E790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  LODWORD(STACK[0x2B0]) = *(unsigned __int8 *)(v9 + a4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10
                                                                                + 8
                                                                                * ((((v6 ^ v7) + 2482) * (a5 != v8 - 32)) ^ v6))
                                                                    - 4))(a1, a2, a3, (v6 ^ 0x5B4u) + a6);
}

uint64_t sub_10014E990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                + 8
                                                                                * (v5 ^ (8125 * (a4 != 2026738964))))
                                                                    - 4))(a1, a2, a3, a5 + (v5 ^ 0x5E8) + 2152 + 34 * (v5 ^ 0x5E8u) - 4603);
}

uint64_t sub_10014E9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  LODWORD(STACK[0x2E8]) = *(unsigned __int8 *)(v9 + a4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10
                                                                                + 8 * (v6 ^ (7181 * (a5 != v8 - 24))))
                                                                    - 8))(a1, a2, a3, a6 + (v6 ^ v7) - 2379);
}

uint64_t sub_10014EBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, unsigned int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  LODWORD(STACK[0x340]) = *(unsigned __int8 *)(v7 + a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v8
                                                                      + 8
                                                                      * ((6694
                                                                        * (((a4 == v6 - 18) ^ (v5 - 64)) & 1)) ^ v5)))(a1, a2, a3, a5 + 1);
}

uint64_t sub_10014EBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0x33C]) = *(unsigned __int8 *)(v8 + a4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                + 8
                                                                                * (int)((7508 * (a5 != v7 + v6 - 1472)) ^ v6))
                                                                    - (v6 ^ 0x5ABLL)))(a1, a2, a3, (a6 + 2));
}

uint64_t sub_10014EF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  LODWORD(STACK[0x3F4]) = *(unsigned __int8 *)(v9 + a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v10
                                                                      + 8
                                                                      * ((2204
                                                                        * (a5 != v8 + ((v6 + v7) & 0xDE45FFF) - 2419)) ^ v6)))(a1, a2, a3, (a6 + 14));
}

uint64_t sub_10014EFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0x3E0]) = *(unsigned __int8 *)(v8 + a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9
                                                                      + 8
                                                                      * (v6 ^ 0x30 ^ (16
                                                                                    * ((a5 == v7 + v6 - 1010) | (2 * (a5 == v7 + v6 - 1010)))))))(a1, a2, a3, (a6 + 16));
}

uint64_t sub_100150024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  int v40;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (v40 + 2660)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_100150318()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, uint64_t, _QWORD, _QWORD);

  v2 = LODWORD(STACK[0x430]);
  v3 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 8 * (v1 - 769)) - 8);
  LODWORD(STACK[0x430]) = STACK[0x340];
  LODWORD(STACK[0x388]) = STACK[0x350];
  return v3(LODWORD(STACK[0x330]), v2, LODWORD(STACK[0x34C]), LODWORD(STACK[0x33C]));
}

uint64_t sub_10015E8B4(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  LODWORD(STACK[0x3FC]) = v17;
  LODWORD(STACK[0x400]) = v12;
  LODWORD(STACK[0x348]) = a2;
  LODWORD(STACK[0x340]) = v15;
  LODWORD(STACK[0x3C4]) = v10;
  LODWORD(STACK[0x3F8]) = a6;
  LODWORD(STACK[0x3C0]) = v11;
  LODWORD(STACK[0x334]) = a1;
  LODWORD(STACK[0x3B4]) = v7;
  LODWORD(STACK[0x3F4]) = v8;
  LODWORD(STACK[0x32C]) = v9;
  LODWORD(STACK[0x368]) = v16;
  LODWORD(STACK[0x29C]) = a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((45
                                          * (((v13
                                             + v14
                                             - (((v6 - 1472790492) & 0x57C8FC5F ^ 0xDDB4FE70) & (2 * (v13 + v14)
                                                                                               + 300762526))
                                             - 137292282) ^ (v6 + 1859802982)) < 0x40)) ^ v6))
                            - 8))();
}

uint64_t sub_10015EE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return (*(uint64_t (**)(uint64_t, unint64_t))(a3
                                                              + 8
                                                              * (((v4 + 9519099 < ((v3 - 1417) | 0x508u) - 1842)
                                                                * (((v3 - 425) | 0x128) + 6308)) ^ v3)))(a1, 0xC8481944E60FDBF6);
}

uint64_t sub_10015EF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((((v3 - 323) ^ 0x9C3) * ((LODWORD(STACK[0x430]) + 9519097) > 0xFFFFFFF7)) ^ v3)))();
}

uint64_t sub_1001612B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((((v3 + 2993) ^ 0x1F8A) + 486) * ((v4 + 52) < 0xFFFFFFF4)) ^ (v3 + 3410))))();
}

uint64_t sub_1001612E8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((3230
                                          * (v2 - 2070326244 + (a2 ^ 0x1851u) + 2788 < ((a2 - 3366) | 0x2A0u) - 2755)) ^ a2))
                            - 4))();
}

uint64_t sub_100161600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * ((4525 * (((a5 == 2006621500) ^ (v5 - 96)) & 1)) ^ v5))
                            - 4))();
}

uint64_t sub_1001617D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((a5 != ((v5 - 1893888351) ^ 0xF887046A))
                                          * (((v5 - 1893888351) & 0x70E26FFF) + 2574)) ^ v5))
                            - 8))();
}

uint64_t sub_100161C18@<X0>(uint64_t a1@<X2>, int a2@<W4>, char a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1009 * (((a2 == 2006621503) ^ (3 * a3) ^ 0x1D) & 1)) ^ v3))
                            - 4))();
}

uint64_t sub_100162A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned __int8 v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((((v9 ^ ((a8 + v10 + 6) < 0xFFFFFFC6)) & 1) * (v8 - 5702)) ^ v8))
                            - 4))();
}

uint64_t sub_100163194(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v20 = (unsigned __int8 *)(a7 + v8);
  v21 = &v20[v19 - (((_QWORD)v20 << (124 * (v7 ^ 0xFEu) + 25)) & v16)];
  v22 = (__ROR8__(v21, 8) & 0xF8FFFFFFFFFFFFFFLL ^ v9) + a6;
  v23 = __ROR8__(v22 ^ v14, 8);
  v24 = v22 ^ v17;
  v25 = (v23 + v24) ^ v18;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = v26 + __ROR8__(v25, 8);
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = __ROR8__(v27 ^ v12, 8) + (v28 ^ v12);
  *((_QWORD *)&v30 + 1) = v28 ^ v12;
  *(_QWORD *)&v30 = v28;
  v31 = v29 ^ (v30 >> 61);
  *((_QWORD *)&v30 + 1) = v31 ^ a4;
  *(_QWORD *)&v30 = v31;
  v32 = ((v31 ^ a4) + ((v29 ^ a4) << 56) + ((v29 ^ a4) >> 8)) ^ v15;
  v33 = v32 ^ (v30 >> 61);
  v34 = (v33 + (v32 << 56) + (v32 >> 8)) ^ v13;
  v35 = v34 ^ __ROR8__(v33, 61);
  v36 = v35 + __ROR8__(v34, 8);
  *(_QWORD *)&v30 = __ROR8__(v35, 61);
  v37 = v30 + v10 - ((2 * v30) & 0x7CB918B455D0B074);
  *((_QWORD *)&v30 + 1) = v36 ^ 0x91;
  *(_QWORD *)&v30 = v36 ^ (v11 - 145);
  v38 = (((v36 ^ 0xE540CB1A950E5BABLL ^ v37) + (unint64_t)(v30 >> 8)) ^ a1) >> (((((8 * (_BYTE)v21) ^ 0x8A) & 0xE8 ^ (((2 * (((8 * (_BYTE)v21) ^ 0x8A) & 0xD2)) | 0xF4) - (((8 * (_BYTE)v21) ^ 0x8A) & 0xD2) - 122) ^ 0x75)
                                                                                      - 1) ^ 0x14u);
  LODWORD(STACK[0x338]) = *v20 ^ (v38 - (a5 & (2 * v38)) - 24) ^ 0xFFFFFFF3;
  return (*(uint64_t (**)(void))(a3 + 8 * v7))();
}

uint64_t sub_100163944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3
                                                      + 8
                                                      * ((7002
                                                        * (LODWORD(STACK[0x428]) - 2070326244 + (v3 ^ 0x6DCu) + 3760 >= ((v3 + 156953121) & 0xF6A5166F ^ 0xFFFFEF83))) ^ v3))
                                          - 8))(0x7645C8BC2533AEF3);
}

uint64_t sub_1001639BC@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8
                                   * (((v3 + 18 < (((v2 - 1558) | 0x280) ^ 0xFFFFF930)) * ((3 * a2) ^ 0xA42)) ^ v2)))();
}

uint64_t sub_100163C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2
                                                    + 8
                                                    * (((v5 + (a4 | 0x10E) - 7698)
                                                      * ((a3 + LODWORD(STACK[0x428]) + 9) < 0xFFFFFFC9)) ^ v4)))(a1, LODWORD(STACK[0x430]));
}

uint64_t sub_100163C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((((v3 - 1313033455) & 0x4E433F7F) - 1263)
                                          * ((v4 + 8) < 0xFFFFFFC8)) ^ v3))
                            - ((v3 - 4566) | 0xC01u)
                            + 4085))();
}

uint64_t sub_100163CE4@<X0>(uint64_t a1@<X2>, int a2@<W6>, int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((8168 * (a2 + LODWORD(STACK[0x428]) + (a3 | 0x400u) - 1148 < v3 - 4146)) ^ v3))
                            - 8))();
}

uint64_t sub_100163FCC@<X0>(uint64_t a1@<X2>, int a2@<W4>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((a3 ^ 0x3E1) + 4250) * (a2 != 2006621536)) ^ a3)) - 8))();
}

uint64_t sub_1001647A4@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((a3 + 4452) * (a1 != 2006621540)) ^ a3))
                            - ((3 * v3) ^ 0x953)))();
}

uint64_t sub_1001647E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v13 = (v6 - 746) | 0x8B0u;
  v14 = STACK[0x438] + v7;
  v15 = __ROR8__(v14, 8);
  v16 = (((v13 ^ (a6 - 2422)) + (v15 & 0xF8FFFFFFFFFFFFFFLL)) & 0x4281F986641A9BA7 | (0xB9B801FEECA434A9
                                                                                      - (v15 & 0xF8FFFFFFFFFFFFFFLL)) & 0xB97E06799BE56458) ^ 0x323FF0089ADE5AB2;
  v17 = (__ROR8__(((v13 ^ (a6 - 2422)) + (v15 & 0xF8FFFFFFFFFFFFFFLL)) & 0x4281F986641A9BA7 | (0xB9B801FEECA434A9- (v15 & 0xF8FFFFFFFFFFFFFFLL)) & 0xB97E06799BE56458, 8)+ v16) ^ v12;
  v18 = __ROR8__(v17, 8);
  v19 = v17 ^ __ROR8__(v16, 61);
  v20 = v19 + v18;
  v21 = (v19 + v18) ^ __ROR8__(v19, 61);
  v22 = ((v21 ^ v9) + __ROR8__(v20 ^ v9, 8)) ^ a4;
  *((_QWORD *)&v23 + 1) = v21 ^ v9;
  *(_QWORD *)&v23 = v21;
  v24 = v22 ^ (v23 >> 61);
  v25 = (__ROR8__(v22, 8) + v24) ^ v11;
  *(_QWORD *)&v23 = __ROR8__(v24, 61);
  v26 = (__ROR8__(v25, 8) + (v25 ^ v23)) ^ v10;
  v27 = v26 ^ __ROR8__(v25 ^ v23, 61);
  v28 = (v27 + __ROR8__(v26, 8)) ^ v8;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v23 = __ROR8__(v28, 8);
  v30 = ((v29 + (_QWORD)v23 + 0xE697678CAF60832 - ((2 * (v29 + (_QWORD)v23)) & 0x1CD2ECF195EC1064)) ^ 0x71DACF20546C6B9AuLL) >> (((((8 * v14) ^ 0xAA) & 0xC8 ^ ((((8 * v14) ^ 0xAA) & 0xF0 ^ 0x15) - ((2 * (((8 * v14) ^ 0xAA) & 0xF0 ^ 0x15)) & 0xE0) + 120) ^ 0xCD) - ((2 * (((8 * v14) ^ 0xAA) & 0xC8 ^ ((((8 * v14) ^ 0xAA) & 0xF0 ^ 0x15) - ((2 * (((8 * v14) ^ 0xAA) & 0xF0 ^ 0x15)) & 0xE0) + 120) ^ 0xCD)) & 0x26) - 109) ^ 0x1B);
  LODWORD(STACK[0x2D4]) = *(unsigned __int8 *)v14 ^ (v30 - ((2 * v30) & 0x92) - 55) ^ 0xFFFFFFCB;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * v6) - 4))();
}

uint64_t sub_1001656C0@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((a3 ^ 0xD04) + 3265) ^ (a3 + 4725)) * (a1 == 2006621548)) ^ a3)))();
}

uint64_t sub_100165884@<X0>(uint64_t a1@<X2>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((23 * (a3 ^ 0x34E)) ^ 0x1C4F)
                                * ((a2 + LODWORD(STACK[0x428]) + 23) < 0xFFFFFFD7)) ^ a3)))();
}

uint64_t sub_100165DE4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v15 = v4 | 0x2A4u;
  v16 = STACK[0x438] + v5;
  v17 = (__ROR8__(v16, 8) & 0xF8FFFFFFFFFFFFFFLL) + a3;
  v18 = v17 ^ v12;
  v19 = (__ROR8__(v17 ^ (v9 + 2710) ^ v15, 8) + (v17 ^ v12)) ^ v13;
  v20 = __ROR8__(v19, 8);
  v21 = v19 ^ __ROR8__(v18, 61);
  v22 = (v20 + v21) ^ v7;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ a2;
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = (__ROR8__(v24, 8) + v25) ^ v11;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (__ROR8__(v26, 8) + v27) ^ v8;
  v29 = v28 ^ __ROR8__(v27, 61);
  v30 = (__ROR8__(v28, 8) + v29) ^ v6;
  v31 = (((v30 >> 8) + v10 - ((2 * (v30 >> 8)) & 0x3289CC1FB7ED92)) ^ v10 | (v30 << 56)) + (v30 ^ __ROR8__(v29, 61));
  LOBYTE(v30) = ((~(((8 * v16) ^ 0xA2) & 2) | 0x5C) - 93) ^ ((8 * v16) ^ 0xA2) & 0x38 ^ 0xA2;
  v32 = (v31 ^ v14) >> ((-98 - (v30 | 0x9E) + (v30 | 0x61)) ^ 0x43);
  LODWORD(STACK[0x39C]) = *(unsigned __int8 *)v16 ^ (v32 - ((2 * v32) & 0xD0) - 24) ^ 0xFFFFFFCC;
  return (*(uint64_t (**)(void))(a1 + 8 * a4))();
}

uint64_t sub_100165F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((336 * (LODWORD(STACK[0x430]) != ((v3 - 351) ^ 0x779A940A))) ^ v3))
                            - 8))();
}

uint64_t sub_100165FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, char a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v19 = (unsigned __int8 *)(v5 + v7);
  v20 = (unint64_t)&v19[v8 - (v15 & (2 * (_QWORD)v19))];
  v21 = (((v20 << (a5 ^ 0x67u)) & 0xF800000000000000 | (v20 >> 8)) ^ 0x383E5C8C5A2AE858) + a4;
  v22 = __ROR8__(v21 ^ v12, 8);
  v23 = v21 ^ v16;
  v24 = __ROR8__((v22 + v23) ^ v17, 8);
  v25 = (v22 + v23) ^ v17 ^ __ROR8__(v23, 61);
  v26 = v24 + v25;
  v27 = (v24 + v25) ^ __ROR8__(v25, 61);
  v28 = ((v27 ^ v10) + __ROR8__(v26 ^ v10, 8)) ^ a3;
  *((_QWORD *)&v29 + 1) = v27 ^ v10;
  *(_QWORD *)&v29 = v27;
  v30 = v28 ^ (v29 >> 61);
  v31 = (__ROR8__(v28, 8) + v30) ^ v14;
  v32 = v31 ^ __ROR8__(v30, 61);
  v33 = (v32 + __ROR8__(v31, 8)) ^ v11;
  v34 = __ROR8__(v33, 8);
  v35 = v33 ^ __ROR8__(v32, 61);
  v36 = (((v35 + v34) & v9 ^ v9) + ((v35 + v34) & v9)) ^ (v35 + v34);
  v37 = ((v36 >> 8) + v13 - ((2 * (v36 >> 8)) & 0x3289CC1FB7ED92)) ^ v13;
  v38 = (((((v37 | (v36 << 56)) + a1 - 2 * ((v37 | (v36 << 56)) & (a1 + 12) ^ v37 & 0xC)) ^ a1)
        + (v36 ^ __ROR8__(v35, 61))) ^ v18) >> ((8 * v20) & 0x38 ^ 0x10);
  LODWORD(STACK[0x398]) = *v19 ^ (v38 - ((2 * v38) & 0xD0) - 24) ^ 0xFFFFFFB7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * v6) - 8))();
}

uint64_t sub_1001664AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((LODWORD(STACK[0x428])
                                           - 2070326244
                                           + ((v3 - 1225961574) & 0x4912AADFu)
                                           + 4074 < 0xFFFFFFEB)
                                          * ((v3 + 2500) ^ 0xE65)) ^ v3))
                            - 4))();
}

uint64_t sub_1001665E0@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((a2 ^ 0x849979D7) + LODWORD(STACK[0x428]) < 0xFFFFFFE7) * (a2 ^ 0x1805)) ^ a2))
                            - 8))();
}

uint64_t sub_100166C98@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;

  v15 = (unsigned __int8 *)(v4 + v6);
  v16 = *v15;
  v17 = a3 + (__ROR8__(v15, 8) & 0xF8FFFFFFFFFFFFFFLL) + v5 - 2143;
  v18 = v17 ^ v10;
  v19 = v17 ^ v12;
  v20 = (__ROR8__(v18, 8) + v19) ^ v13;
  v22 = __ROR8__(v19, 61);
  v21 = v20 ^ v22;
  v23 = ((v20 ^ v22) + (v20 << 56) + (v20 >> 8)) ^ v8;
  v24 = v23 ^ __ROR8__(v21, 61);
  v25 = (__ROR8__(v23, 8) + v24) ^ a2;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = (v26 + __ROR8__(v25, 8)) ^ v11;
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = __ROR8__(v27, 8);
  v30 = (v28 + v29) ^ v9;
  *((_QWORD *)&v31 + 1) = ((_DWORD)v28 + (_DWORD)v29) ^ 0x8Bu;
  *(_QWORD *)&v31 = (v28 + v29) ^ (v9 - 139);
  v32 = v30 ^ __ROR8__(v28, 61);
  v33 = ((((v32 + (unint64_t)(v31 >> 8)) ^ v7 ^ __ROR8__(v32, 61)) + __ROR8__((v32 + (v31 >> 8)) ^ v7, 8)) ^ v14) >> ((2 - ((8 * (_BYTE)v15) & 0x38) + 2 * ((8 * (_BYTE)v15) & 0x38)) ^ 2u);
  LODWORD(STACK[0x388]) = v16 ^ (v33 - ((2 * v33) & 0x92) - 55) ^ 0xFFFFFF96;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a4) - 4))();
}

uint64_t sub_100167078@<X0>(uint64_t a1@<X2>, int a2@<W4>, int a3@<W8>)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a2 != (v4 ^ a3) + 2006617476) * (v3 ^ 0x1153)) ^ v4)) - 4))();
}

uint64_t sub_100167284@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, int a4@<W8>)
{
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;

  v14 = a4 ^ 0x447u;
  v15 = STACK[0x438] + v4;
  v16 = __ROR8__(v15, 8);
  v17 = ((v14 - 0x4281F986641AA406) & ((v16 & 0xF8FFFFFFFFFFFFFFLL) + a3) | (0xB9B801FEECA434A9
                                                                             - (v16 & 0xF8FFFFFFFFFFFFFFLL)) & 0xB97E06799BE56458) ^ ((v16 & 0xF8FFFFFFFFFFFFFFLL) + a3) ^ 0x323FF0089ADE5AB2;
  v18 = (__ROR8__(((v14 - 0x4281F986641AA406) & ((v16 & 0xF8FFFFFFFFFFFFFFLL) + a3) | (0xB9B801FEECA434A9- (v16 & 0xF8FFFFFFFFFFFFFFLL)) & 0xB97E06799BE56458) ^ ((v16 & 0xF8FFFFFFFFFFFFFFLL) + a3), 8)+ v17) ^ v12;
  v19 = v18 ^ __ROR8__(v17, 61);
  v20 = (v19 + __ROR8__(v18, 8)) ^ v7;
  v21 = v20 ^ __ROR8__(v19, 61);
  v22 = (v21 + __ROR8__(v20, 8)) ^ a2;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ v10;
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = v25 + __ROR8__(v24, 8);
  v27 = __ROR8__(v25, 61);
  v28 = v26 ^ 0x83988726059BE9B1 ^ (v27 + v5 - (v11 & (2 * v27)));
  *((_QWORD *)&v29 + 1) = v26 ^ 0x8B;
  *(_QWORD *)&v29 = v26 ^ (v8 - 139);
  v30 = v28 + (v29 >> 8);
  v31 = (8 * (((2 * (v15 & 7)) | 0xD8) - (v15 & 7)) - 96) ^ 0x60;
  v32 = (((v30 ^ v6 ^ __ROR8__(v28, 61))
        + ((v30 ^ v6) >> 8)
        + ((v9 + ((v30 ^ v6) << 56) - ((v30 << 57) & 0x9000000000000000)) ^ v9)) ^ v13) >> ((v31
                                                                                             + 50
                                                                                             - ((2 * v31) & 0x60)) ^ 0x32u);
  LODWORD(STACK[0x2D8]) = *(unsigned __int8 *)v15 ^ (v32 - ((2 * v32) & 0xD0) - 24) ^ 0xFFFFFFE9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a4) - 8))();
}

uint64_t sub_100167978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v16 = STACK[0x438] + v7;
  v17 = (__ROR8__(v16, 8) & 0xF8FFFFFFFFFFFFFFLL) + a6;
  v18 = v17 ^ v12;
  v19 = ((v6 ^ 0x9E0u) - 0x70BE098EFEC4DAB9) ^ v17;
  v20 = (v19 + __ROR8__(v18, 8)) ^ v14;
  v21 = v20 ^ __ROR8__(v19, 61);
  v22 = (__ROR8__(v20, 8) + v21) ^ v10;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = v23 + __ROR8__(v22, 8);
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = ((v25 ^ a4) + __ROR8__(v24 ^ a4, 8)) ^ v13;
  *((_QWORD *)&v27 + 1) = v25 ^ a4;
  *(_QWORD *)&v27 = v25;
  v28 = v26 ^ (v27 >> 61);
  v29 = (v28 + (v26 >> 8) + (v26 << 56)) ^ v11;
  v30 = v29 ^ __ROR8__(v28, 61);
  *(_QWORD *)&v27 = __ROR8__(v29, 8);
  v31 = ((((((((_QWORD)v27 + v30) ^ v9) >> 8) + v8 - ((2 * ((((_QWORD)v27 + v30) ^ v9) >> 8)) & 0xB918B455D0B074)) ^ v8 | (((((_QWORD)v27 + v30) ^ v9) << 56) + 0xE697678CAF60832 - ((((_QWORD)v27 + v30) << 57) & 0x1C00000000000000)) ^ 0xE697678CAF60832)
        + (((_QWORD)v27 + v30) ^ v9 ^ __ROR8__(v30, 61))) ^ v15) >> (((8 * v16) ^ 0x69) & 0xE8 ^ (((2
                                                                                                  * ((8 * v16) ^ 0x69)) & 0xA2)
                                                                                                - (((8 * v16) ^ 0x69) & 0xD1)
                                                                                                + 40) & 0xF8);
  LODWORD(STACK[0x2E8]) = *(unsigned __int8 *)v16 ^ (v31 - ((2 * v31) & 0xD0) - 24) ^ 0xFFFFFFD2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * v6) - 4))();
}

uint64_t sub_100168798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, unsigned int a5@<W8>)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v14 = STACK[0x438] + v6;
  v15 = (__ROR8__(v14, 8) & 0xF8FFFFFFFFFFFFFFLL) + a4;
  v16 = v15 ^ v10;
  v17 = v15 ^ (v12 - 1153) ^ v5;
  v18 = (v17 + __ROR8__(v16, 8)) ^ v13;
  v19 = v18 ^ __ROR8__(v17, 61);
  v20 = (__ROR8__(v18, 8) + v19) ^ v8;
  v21 = v20 ^ __ROR8__(v19, 61);
  v22 = (__ROR8__(v20, 8) + v21) ^ a3;
  v23 = *(unsigned __int8 *)v14;
  v25 = __ROR8__(v21, 61);
  v24 = v22 ^ v25;
  v26 = ((v22 ^ v25) + (v22 << 56) + (v22 >> 8)) ^ v11;
  v27 = v26 ^ __ROR8__(v24, 61);
  v28 = v27 + __ROR8__(v26, 8);
  v29 = v28 ^ __ROR8__(v27, 61);
  v30 = (__ROR8__(v28 ^ v9, 8) + (v29 ^ v9)) ^ v7;
  v31 = __ROR8__(v30, 8);
  v32 = ((v31 + a1 - ((2 * v31) & 0xEC8B91784A675DE6)) ^ a1)
      + (v30 ^ (((v29 ^ v9) >> ~((v29 ^ v9 | v29 ^ 0x40) & 0xC2)) & 7 | (8 * (v29 ^ v9))));
  v33 = ((v32 + 0xE697678CAF60832 - ((2 * v32) & 0x1CD2ECF195EC1064)) ^ 0x71DACF20546C6B9ALL) >> ((8 * v14) & 0x38);
  LODWORD(STACK[0x3A8]) = v23 ^ (v33 - ((2 * v33) & 0xD0) - 24) ^ 0xFFFFFF8B;
  return (*(uint64_t (**)(void))(a2 + 8 * a5))();
}

uint64_t sub_1001694A0@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a2 + 8 * (((a1 != ((v3 + 4972) ^ 0x779A8AB8)) * (797 * a3 + 1518)) ^ v3)))();
}

uint64_t sub_100169610(uint64_t a1, int a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((221 * (a2 == 701 * (v3 ^ 0xA6E) + 2006618023)) ^ v3)) - 8))();
}

uint64_t sub_100169B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * (((v4 + 43 < ((127 * (v3 ^ 0xE0B)) ^ 0xFFFFE5A0)) * (v3 - 3209)) ^ v3))
                            - 4))();
}

uint64_t sub_100169CBC@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 + 39 < ((a2 + 638) ^ 0xFFFFEF62)) * (a2 ^ 0xE1F)) ^ a2)))();
}

uint64_t sub_100169D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * ((1051 * (v4 + LODWORD(STACK[0x428]) + 38 < (v3 ^ 0x7D8u) - 6007)) ^ v3))
                            - 8))();
}

uint64_t sub_100169DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((866
                                          * (v4 + LODWORD(STACK[0x428]) + 36 < ((3475 * (v3 ^ 0x1495)) ^ 0xFFFFE4C2))) ^ v3))
                            - 4))();
}

uint64_t sub_10016A2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, int a6@<W8>)
{
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v17 = (__ROR8__(&v7[v6 + 0x3E5C8C5A2AE847B5 - (v13 & (2 * (_QWORD)v7))], 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x383E5C8C5A2AE858)
      + a5;
  v18 = v17 ^ v11;
  v19 = v17 ^ v14;
  v20 = (v19 + (v18 << 56) + (v18 >> 8)) ^ v15;
  v21 = v20 ^ __ROR8__(v19, 61);
  v22 = (v21 + __ROR8__(v20, 8)) ^ v9;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (v23 + __ROR8__(v22, 8)) ^ a3;
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = (v25 + __ROR8__(v24, 8)) ^ v12;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (__ROR8__(v26, 8) + v27) ^ v10;
  v29 = v28 ^ __ROR8__(v27, 61);
  v30 = __ROR8__(v28, 8);
  v31 = (((((((v29 + v30) ^ v8) >> 8) + a1 - ((2 * (((v29 + v30) ^ v8) >> 8)) & 0x8B91784A675DE6)) ^ a1 | ((((v29 + v30) ^ v8) << 56) + 0xE697678CAF60832 - (((v29 + v30) << 57) & 0x1C00000000000000)) ^ 0xE697678CAF60832)
        + ((v29 + v30) ^ v8 ^ __ROR8__(v29, 61))) ^ v16) >> ((8 * (v6 - 75 + (_BYTE)v7 - (v13 & (2 * (_BYTE)v7)))) & 0x38 ^ 0x10);
  LODWORD(STACK[0x2E0]) = *v7 ^ (v31 - (a4 & (2 * v31)) - 24) ^ 0xFFFFFFFE;
  return (*(uint64_t (**)(void))(a2 + 8 * a6))();
}

uint64_t sub_10016A41C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v19 = (unsigned __int8 *)(a7 + a2);
  v20 = &v19[v8 - (((_QWORD)v19 << ((v7 - 40) ^ 0x5Cu)) & v13)];
  v21 = (__ROR8__(v20, 8) & 0xF8FFFFFFFFFFFFFFLL ^ v15) + a6;
  v22 = v21 ^ v12;
  v23 = v21 ^ v16;
  v24 = (__ROR8__(v22, 8) + v23) ^ v17;
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = __ROR8__(v24, 8);
  v27 = v25 + v26;
  v28 = (v25 >> (21
                                * (v20 & 0xB9 ^ 0x38 | v20 & 0xB9 ^ 0x81)
                                * (((v25 + v26) & 0xA4) + ((v25 + v26) & 0xA4 ^ 0xA4) - 83)));
  v29 = (v25 + v26) ^ (8 * v25);
  v30 = v29 ^ v28 ^ v10;
  v31 = v30 + __ROR8__(v27 ^ v10, 8);
  *((_QWORD *)&v32 + 1) = v30;
  *(_QWORD *)&v32 = v29;
  v33 = (v32 >> 61) ^ v31;
  v34 = (__ROR8__(v31 ^ a4, 8) + (v33 ^ a4)) ^ v14;
  *((_QWORD *)&v32 + 1) = v33 ^ a4;
  *(_QWORD *)&v32 = v33;
  v35 = v34 ^ (v32 >> 61);
  v36 = (v35 + __ROR8__(v34, 8)) ^ v11;
  *(_QWORD *)&v32 = __ROR8__(v35, 61);
  v37 = v36 ^ v32;
  v38 = (v36 ^ v32) + (v36 << 56) + (v36 >> 8);
  *((_QWORD *)&v32 + 1) = v38 ^ 0x91;
  *(_QWORD *)&v32 = v38 ^ (v9 - 145);
  LOBYTE(v20) = ((v20 & 7 ^ 6) - ((2 * (v20 & 7 ^ 6)) & 6) + 59) ^ 0x73;
  v39 = (((unint64_t)(v32 >> 8) + (v9 ^ __ROR8__(v37, 61) ^ v38)) ^ v18) >> ((8
                                                                                   * (((2 * (_BYTE)v20) & 0xEC)
                                                                                    - (_BYTE)v20)
                                                                                   + 72) ^ 0x28u);
  LODWORD(STACK[0x2F0]) = *v19 ^ ((~(2 * v39) | 0x6D) + v39 - 54) ^ 0xFFFFFFEC;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3 + 8 * v7) - 8))(a1, a2 + 1);
}

uint64_t sub_10016A7A0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v15 = (unsigned __int8 *)(a7 + a2);
  v16 = (unint64_t)&v15[a5 - ((((v7 - 883) | 0xA02u) + 0x1CD2ECF195EBF53ELL) & (2 * (_QWORD)v15))];
  v17 = ((v16 >> 8) ^ 0xE697678CAF608) + a6 + ((v16 << 56) & 0xF800000000000000 ^ 0x3000000000000000);
  v18 = v17 ^ v13;
  v19 = (__ROR8__(v17 ^ v11, 8) + (v17 ^ v13)) ^ v14;
  v20 = __ROR8__(v19, 8);
  v21 = v19 ^ __ROR8__(v18, 61);
  v22 = (v20 + v21) ^ v9;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ a4;
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = (v25 + __ROR8__(v24, 8)) ^ v12;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (v27 + __ROR8__(v26, 8)) ^ v10;
  v30 = __ROR8__(v27, 61);
  v29 = v28 ^ v30;
  v31 = ((v28 ^ v30) + (v28 << 56) + (v28 >> 8)) ^ v8;
  v32 = (v31 ^ __ROR8__(v29, 61)) + __ROR8__(v31, 8);
  LOBYTE(v16) = ((8 * v16) ^ 0x9E) & 0x2A ^ ((((8 * v16) ^ 0x9E) & 0x16) - (((8 * v16) ^ 0x9E) & 2) + 72) ^ 0x48;
  v33 = (((v32 & 0x6EAA72B8A183896BLL) + (v32 & 0x6EAA72B8A183896BLL ^ 0x6EAA72B8A183896BLL) + 0x1109469FFD16DA3DLL) ^ (unint64_t)v32) >> ((v16 - ((2 * v16) & 0x3C) + 30) ^ 0x10);
  LODWORD(STACK[0x318]) = (((2 * v33) & 0x92) - v33 + 54) ^ *v15;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a3 + 8 * v7) - 4))(a1, a2 + 1);
}

uint64_t sub_10016A9A4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  LODWORD(STACK[0x41C]) = *(unsigned __int8 *)(a7 + a2) - ((2 * *(unsigned __int8 *)(a7 + a2)) & 0x7A) + 61;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * v7) - 8))();
}

uint64_t sub_10016AB04@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1992
                                          * (v2 - 2070320046 >= ((((a2 - 5023) | 0xE80) - 7532) ^ (41 * (a2 ^ 0x13B3u))))) ^ a2))
                            - 8))();
}

uint64_t sub_10016AB70@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((108 * (v5 + a1 + 867 * ((a3 | v3) ^ 0xD88u) + 2729 > 0xFFFFFFD6)) ^ v4))
                            - 8))();
}

uint64_t sub_10016AE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((v3 - 2121) * ((LODWORD(STACK[0x428]) - 2070320006) < 0x30)) | v3))
                            - 8))();
}

uint64_t sub_10016B4F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;

  LODWORD(STACK[0x3DC]) = a5;
  v19 = a7 + v9;
  v20 = a6 + (v19 >> 8) + ((v19 << 56) & 0xF800000000000000);
  v21 = v20 ^ v13;
  v22 = v20 ^ v16;
  v23 = (__ROR8__(v21, 8) + v22) ^ v17;
  v24 = v23 ^ __ROR8__(v22, 61);
  v25 = __ROR8__(v23, 8) + v24;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = ((v8 + 1996) ^ (unint64_t)v26 ^ 0x17D9A711A491F087)
      + ((v25 ^ v11) >> 8)
      + ((v25 ^ v11) << 56);
  *((_QWORD *)&v28 + 1) = (v8 + 1996) ^ (unint64_t)v26 ^ 0x17D9A711A491F087;
  *(_QWORD *)&v28 = v26;
  v29 = v27 ^ (v28 >> 61);
  *((_QWORD *)&v28 + 1) = v29 ^ a4;
  *(_QWORD *)&v28 = v29;
  v30 = ((v29 ^ a4) + ((v27 ^ a4) >> 8) + ((v27 ^ a4) << 56)) ^ v15;
  v31 = v30 ^ (v28 >> 61);
  v32 = v31 + __ROR8__(v30, 8);
  v33 = v32 ^ v12 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v28 = __ROR8__(v33, 61);
  v34 = (__ROR8__(v32 ^ v12, 8) + v33) ^ (v32 & v10 ^ 0x4218440090840210 | (v32 ^ v12) & v10);
  v35 = v34 ^ v14 ^ (v28 + v14 - ((2 * v28) & 0x903289CC1FB7ED92));
  *(_QWORD *)&v28 = __ROR8__(v34, 8);
  LOBYTE(v34) = ((8 * v19) ^ 0xE4) & 0xE4 ^ (-40 - (((8 * v19) ^ 0xE4) & 4 | 0xD8) + (((8 * v19) ^ 0xE4) & 0xD8 | 0x27)) ^ 0xE3;
  v36 = (((((_QWORD)v28 + a1 - (a8 & (2 * (_QWORD)v28))) ^ a1) + v35) ^ v18) >> ((-115 - (v34 | 0x8D) + (v34 | 0x72)) ^ 0x96);
  LODWORD(STACK[0x3A0]) = *(unsigned __int8 *)v19 ^ (v36 - ((2 * v36) & 0xD0) - 24) ^ 0xFFFFFF80;
  return (*(uint64_t (**)(void))(a3 + 8 * v8))();
}

uint64_t sub_10016BAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * v3) - 4))();
}

uint64_t sub_10016CA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v19 = (unsigned __int8 *)(a7 + v9);
  v20 = (__ROR8__(v19, 8) & 0xF8FFFFFFFFFFFFFFLL) + a6;
  v21 = v20 ^ v15;
  v22 = ((v20 & 0x323FF0089ADE5AB2 ^ (922 * (v8 ^ 0x6A8u) + 0x201F000001A016CLL))
       + ((v20 ^ v15) & 0x323FF0089ADE5AB2)) ^ v20 ^ v15;
  v23 = (v22 + __ROR8__(v21, 8)) ^ v17;
  v24 = v23 ^ __ROR8__(v22, 61);
  v25 = (v24 + __ROR8__(v23, 8)) ^ a8;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = (__ROR8__(v25, 8) + v26) ^ v13;
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = (__ROR8__(v27, 8) + v28) ^ v16;
  v30 = v29 ^ __ROR8__(v28, 61);
  v31 = (v30 + __ROR8__(v29, 8)) ^ v14;
  v33 = __ROR8__(v30, 61);
  v32 = v31 ^ v33;
  v34 = (v31 ^ v33) + (v31 << 56) + (v31 >> 8);
  v35 = v34 + v11 - ((2 * v34) & 0x7CB918B455D0B074);
  v36 = __ROR8__(v32, 61);
  v37 = ((((((v35 ^ 0xE540CB1A950E5BABLL) >> 8) + v18 - ((2 * ((v35 ^ 0xE540CB1A950E5BABLL) >> 8)) & 0xD2ECF195EC1064)) ^ v18 | ((v35 ^ 0xE540CB1A950E5BABLL) << 56))
        + ((v36 + v11 - ((2 * v36) & 0x7CB918B455D0B074)) ^ v12 ^ v35)) ^ a1) >> ((8 * (_BYTE)v19) & 0x38);
  LODWORD(STACK[0x3B4]) = *v19 ^ (v37 - (v10 & (2 * v37)) - 24) ^ 0xFFFFFFAF;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * v8) - 4))();
}

uint64_t sub_10016D0B8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((3284 * (v3 + 32 < (a2 | 0x113u) - 5043)) ^ v2))
                            - (v2
                             - 886)
                            + 5003))();
}

uint64_t sub_10016D924@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v18 = *(unsigned __int8 *)v6;
  v19 = ((a5 ^ 0xF8000000000004EELL) & (v6 << 56) & 0xFF00000000000000 | (v6 >> 8)) + a3;
  v20 = __ROR8__(v19 ^ v11, 8);
  v21 = v19 ^ v15;
  v22 = (v20 + v21) ^ v16;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = __ROR8__(v22, 8) + v23;
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = (__ROR8__(v24 ^ v9, 8) + (v25 ^ v9)) ^ a2;
  *((_QWORD *)&v27 + 1) = v25 ^ v9;
  *(_QWORD *)&v27 = v25;
  v28 = v26 ^ (v27 >> 61);
  v29 = (v28 + __ROR8__(v26, 8)) ^ v13;
  v30 = v29 ^ __ROR8__(v28, 61);
  v31 = (v30 + __ROR8__(v29, 8)) ^ v10;
  v32 = v31 ^ __ROR8__(v30, 61);
  *(_QWORD *)&v27 = __ROR8__(v31, 8);
  v33 = ((v27 + v7 - (v12 & (2 * v27))) ^ v7) + v32;
  v34 = (((v33 ^ v8 ^ __ROR8__(v32, 61))
        + ((v33 ^ v8) >> 8)
        + ((v14 + ((v33 ^ v8) << 56) - ((v33 << 57) & 0x1C00000000000000)) ^ v14)) ^ v17) >> ((8 * v6) & 0x38);
  LODWORD(STACK[0x3B8]) = v18 ^ (v34 - (a4 & (2 * v34)) - 24) ^ 0xFFFFFFC2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * v5) - 4))();
}

uint64_t sub_10016E23C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 8))();
}

uint64_t sub_10016E6D8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * ((((v2 ^ 0x68D) - 2029) * ((v3 + 57) > 0xFFFFFFF8)) ^ a2))
                            - 8))();
}

uint64_t sub_10016E798@<X0>(uint64_t a1@<X2>, int a2@<W4>, unsigned __int8 a3@<W8>)
{
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((a2 == v5 + 3) ^ a3) & 1) * (v3 ^ 0x4A1)) ^ v4)))();
}

uint64_t sub_10016EA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, int a5@<W8>)
{
  char v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v15 = STACK[0x438] + v6;
  v16 = v15 + 0xE697678CAF60832 - ((2 * v15) & 0x1CD2ECF195EC1064);
  v17 = (((v16 >> (v5 - 87)) | (v16 << 56) & 0xF800000000000000) ^ 0x300E697678CAF608) + a4;
  v18 = v17 ^ v12;
  v19 = (__ROR8__(v17 ^ v10, 8) + (v17 ^ v12)) ^ v13;
  v20 = v19 ^ __ROR8__(v18, 61);
  v21 = (__ROR8__(v19, 8) + v20) ^ v8;
  v22 = v21 ^ __ROR8__(v20, 61);
  v23 = v22 + __ROR8__(v21, 8);
  v24 = __ROR8__(v22, 61);
  *((_QWORD *)&v26 + 1) = v23 ^ v24 ^ a3;
  *(_QWORD *)&v26 = v23 ^ v24;
  v25 = v26 >> 61;
  *(_QWORD *)&v26 = __ROR8__(v23 ^ a3, 8);
  v27 = (v26 + *((_QWORD *)&v26 + 1)) ^ v11 ^ v25;
  v28 = (__ROR8__((v26 + *((_QWORD *)&v26 + 1)) ^ v11, 8) + v27) ^ v9;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v26 = __ROR8__(v28, 8);
  v30 = (v29 + v26 + a1 - ((2 * (v29 + v26)) & 0xEC8B91784A675DE6)) ^ 0xAD598FFC9AD5AD62;
  LOBYTE(v16) = ((8 * v16) ^ 0x61) & 0x48 ^ (((2 * (((8 * v16) ^ 0x61) & 0x70)) | 0xF6) - (((8 * v16) ^ 0x61) & 0x70) + 5) ^ 0x8B;
  v31 = (((v30 ^ __ROR8__(v29, 61)) + (v30 >> 8) + ((v7 + (v30 << 56) - ((v30 << 57) & 0x7C00000000000000)) ^ v7)) ^ v14) >> ((((2 * v16) & 0xE6) - v16 - 116) ^ 0xCC);
  LODWORD(STACK[0x2C8]) = *(unsigned __int8 *)v15 ^ (v31 - ((2 * v31) & 0x92) - 55) ^ 0xFFFFFFB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * a5) - 8))();
}

uint64_t sub_10016EEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, int a5@<W8>)
{
  uint64_t v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;

  v16 = (unsigned __int8 *)(v5 + v7);
  v17 = (__ROR8__(v16, 8) & 0xF8FFFFFFFFFFFFFFLL) + a4;
  v18 = v17 ^ v14;
  v19 = (__ROR8__(v17 ^ v12, 8) + (v17 ^ v14)) ^ v15;
  v21 = __ROR8__(v18, 61);
  v20 = v19 ^ v21;
  v22 = (v19 ^ v21) + (v19 >> 8) + (v19 << (v6 - 75));
  v23 = v22 ^ __ROR8__(v20, 61);
  v24 = ((v23 ^ v10) + __ROR8__(v22 ^ v10, 8)) ^ a3;
  *((_QWORD *)&v25 + 1) = v23 ^ v10;
  *(_QWORD *)&v25 = v23;
  v26 = v24 ^ (v25 >> 61);
  v27 = (__ROR8__(v24, 8) + v26) ^ v13;
  *(_QWORD *)&v25 = __ROR8__(v26, 61);
  v28 = v27 ^ v25;
  v29 = (v16 ^ 0xA3) & 0xDF ^ (-2
                                              - ((~((v16 ^ 0xA3) & 0xD8) | 0x1E)
                                               + ((v16 ^ 0xA3) & 0x18 | 0xE1))) ^ 0x9E;
  v30 = ((v27 ^ v25) + (v27 << 56) + (v27 >> 8)) ^ v11;
  v31 = __ROR8__(v30, 8);
  v32 = v30 ^ __ROR8__(v28, 61);
  v33 = (v32 + v31) ^ v9;
  *(_QWORD *)&v25 = __ROR8__(v33, 8);
  v34 = (8 * (((2 * v29) | 0x30) - v29) + 64) ^ 0xD8;
  v35 = ((v25 + a1 - ((2 * v25) & 0xEC8B91784A675DE6)) ^ a1) + (v33 ^ __ROR8__(v32, 61));
  v36 = ((v35 + v8 - ((2 * v35) & 0x7CB918B455D0B074)) ^ 0x41EF3502B4723B92) >> ((v34 - 55 - ((2 * v34) & 0x90)) ^ 0xC9u);
  LODWORD(STACK[0x310]) = *v16 ^ (v36 - ((2 * v36) & 0xD0) - 24) ^ 0xFFFFFFA1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * a5) - 4))();
}

uint64_t sub_10016F3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, int a5@<W8>)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v17 = STACK[0x438] + v6;
  v18 = (__ROR8__(v17 + 0xE697678CAF60832 - ((v5 + 0x1CD2ECF195EC0BE1) & (2 * v17)), 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x300E697678CAF608)
      + a4;
  v19 = __ROR8__(v18 ^ v12, 8);
  v20 = v18 ^ v15;
  v21 = __ROR8__((v19 + v20) ^ v16, 8);
  v22 = (v19 + v20) ^ v16 ^ __ROR8__(v20, 61);
  v23 = (v21 + v22) ^ v10;
  v24 = v23 ^ __ROR8__(v22, 61);
  v25 = __ROR8__(v23, 8) + v24;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = ((v26 ^ a3) + __ROR8__(v25 ^ a3, 8)) ^ v13;
  *((_QWORD *)&v28 + 1) = v26 ^ a3;
  *(_QWORD *)&v28 = v26;
  v29 = v27 ^ (v28 >> 61);
  v30 = (v29 + __ROR8__(v27, 8)) ^ v11;
  *(_QWORD *)&v28 = __ROR8__(v29, 61);
  v31 = v30 ^ v28;
  v32 = ((v30 >> (((v14 + 6) & 8 ^ 8) + ((v14 + 6) & 8u))) + (v30 << 56) + (v30 ^ v28)) ^ v9;
  *(_QWORD *)&v28 = __ROR8__(v31, 61);
  v33 = (a1 + (v32 << 56) - ((v32 << 57) & 0xEC00000000000000)) ^ a1;
  v34 = (((v33 | (v32 >> 8))
        + (v32 ^ (unint64_t)v28)
        + v8
        - (v7 & (2 * ((v33 | (v32 >> 8)) + (v32 ^ (unint64_t)v28))))) ^ 0x41EF3502B4723B92) >> ((8 * (v17 + 50 - ((v5 - 31) & (2 * v17)))) & 0x38 ^ 0x10);
  LODWORD(STACK[0x278]) = *(unsigned __int8 *)v17 ^ (v34 - ((2 * v34) & 0xD0) - 24) ^ 0xFFFFFFFB;
  return (*(uint64_t (**)(void))(a2 + 8 * a5))();
}

uint64_t sub_10017B050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  _BOOL4 v8;
  uint64_t (*v9)(void);

  v6 = STACK[0x430];
  v8 = LODWORD(STACK[0x428]) - 2070320070 >= ((18 * (v5 ^ 0x162C) - 713) | 0x184u) - 1485 && v6 != a5 + 62;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((31 * v8) ^ v5)) - 8);
  LODWORD(STACK[0x23C]) = v6;
  return v9();
}

uint64_t sub_10017B248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(unint64_t))(a3
                                                     + 8
                                                     * (v3 ^ (5697
                                                            * ((LODWORD(STACK[0x428]) - 2070320066) < 0xFFFFFFC4)))))(0x8F41F671013B3EEALL);
}

uint64_t sub_10017B39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a3
                                                               + 8
                                                               * ((7312
                                                                 * (v4 + v3 - 2394 - 1490 < ((v3 - 481076736) & 0x1CAC9FFFu)
                                                                                          - 2412)) ^ v3))
                                                   - 8))(a1, v5);
}

#error "1001826E8: call analysis failed (funcsize=237)"

uint64_t sub_100183978(int a1, int a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_BYTE *a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,unsigned int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  unint64_t v85;
  __int16 v86;
  uint64_t v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  char v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  unint64_t v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  _BOOL4 v262;
  int v264;
  int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  int v276;
  int v277;
  unint64_t v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  char v286;
  char v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;

  v82 = a2 + a1 + 297009951 - ((2 * (a2 + a1)) & 0x2368063E);
  v83 = v77 ^ 0x67F52FF1;
  HIDWORD(v85) = v82 ^ 0x31F;
  LODWORD(v85) = v82 ^ 0x11B40000;
  v84 = v85 >> 11;
  v86 = (v77 >> 22) ^ 0x19F;
  HIDWORD(v85) = v82;
  LODWORD(v85) = v82;
  v87 = v82 ^ 0x11B4031F;
  v88 = (v85 >> 25) ^ (v82 >> 6) ^ v84 ^ (v87 << (((v86 & 0x18 ^ 0x18) + (v86 & 0x18)) | 0x12u));
  v89 = (((v86 & 0x3FF | (v77 << 10)) ^ v75 ^ 0xD4BFC400)
       + 1384311057
       - 2 * (((v86 & 0x3FF | (v77 << 10)) ^ v75 ^ 0xD4BFC400) & 0x5282E915 ^ ((v86 & 0x3FF | (v77 << 10)) ^ v75) & 4)) ^ (((v77 ^ 0x67F52FF1) >> 2) + 1384311057 - (((v77 ^ 0x67F52FF1) >> 1) & 0x2505D222));
  v90 = LODWORD(STACK[0x24C]) - 200395387;
  LODWORD(STACK[0x430]) = v81;
  v91 = v90
      + v81
      + (((v87 & (a6 ^ a5 ^ 0x4809B95C)) + 317737390 - ((2 * (v87 & (a6 ^ a5 ^ 0x4809B95C))) & 0x25E0935C)) ^ a6)
      + (v88 ^ 0xDA475F84);
  v92 = v91 + a4 + 709614564 - ((2 * (v91 + a4)) & 0x5497B7C8);
  v93 = v91
      + ((v77 ^ 0x67F52FF1) & (v74 | v78) | v74 & v78)
      + ((v89 + 974706863 - ((2 * v89) & 0x7431B15E)) ^ (((v77 << 30) ^ 0x7A18D8B6) - 7));
  v94 = v93 + 839155712 - ((2 * v93) & 0x640915E6);
  v95 = v94 + 2803;
  LOBYTE(v91) = (v91 + a4 - 28 - ((2 * (v91 + a4)) & 0xC8)) & 0xF2;
  HIDWORD(v85) = -2824 - v94;
  LODWORD(v85) = (v94 + 2803) ^ 0x32048AF0;
  v96 = v85 >> 2;
  HIDWORD(v85) = v95 ^ 0xAF3;
  LODWORD(v85) = v95 ^ 0x32048000;
  v97 = v85 >> 13;
  HIDWORD(v85) = v92 ^ 0x3E4;
  LODWORD(v85) = v92 ^ 0x2A4BD800;
  v98 = v85 >> 11;
  HIDWORD(v85) = v92 ^ 0x24;
  LODWORD(v85) = v92 ^ 0x2A4BDBC0;
  LODWORD(STACK[0x428]) = (v92 >> 25) ^ 0x15;
  v99 = v98 ^ (v85 >> 6) ^ (((v92 >> 25) ^ 0x15) & 0x7F | (v92 << 7));
  v100 = v95 ^ 0x32048AF3;
  v101 = v96 ^ (v95 << 10) ^ v97 ^ ((v95 ^ 0x32048AF3u) >> (((v95 & 0xA3 ^ 0xA3) + (v95 & 0xA3))
                                                          * ((v91 ^ 0xE0) + (v91 ^ 0x12))));
  v102 = LODWORD(STACK[0x250])
       + 275423344
       + v79
       + (v99 ^ 0x25EDF200)
       + ((((v92 ^ 0x2A4BDBE4) & (a5 ^ v82 ^ 0x4B4DF3ED))
         + v80
         - ((2 * ((v92 ^ 0x2A4BDBE4) & (a5 ^ v82 ^ 0x4B4DF3ED))) & 0xB5F3E1E4)) ^ a5);
  v103 = (v100 & (v83 | v74) | v83 & v74) + v102 + (v101 ^ 0x122BCC00);
  v104 = v103 + 436051968 - ((2 * v103) & 0x33FB5476);
  v105 = v104 + 2619;
  v106 = v102 + v78 + 589230552 - ((2 * (v102 + v78)) & 0x463DE3B0);
  HIDWORD(v85) = -2648 - v104;
  LODWORD(v85) = (v104 + 2619) ^ 0x19FDAA38;
  v107 = v85 >> 2;
  HIDWORD(v85) = (v104 + 2619) ^ 0xA3B;
  LODWORD(v85) = (v104 + 2619) ^ 0x19FDA000;
  v108 = v85 >> 13;
  HIDWORD(v85) = v105 ^ 0x3DAA3B;
  LODWORD(v85) = v105 ^ 0x19C00000;
  v109 = v85 >> 22;
  v110 = v108 ^ v107;
  HIDWORD(v85) = v106 ^ 0x11EF1D8;
  LODWORD(v85) = v106 ^ 0x22222222;
  v111 = v85 >> 25;
  HIDWORD(v85) = v106 ^ 0x18;
  LODWORD(v85) = v106 ^ 0x231EF1C0;
  v112 = v85 >> 6;
  HIDWORD(v85) = v106 ^ 0x1D8;
  LODWORD(v85) = v106 ^ 0x231EF000;
  v113 = v110 ^ v109;
  v114 = v106 ^ 0x231EF1D8;
  v115 = v105 ^ 0x19FDAA3B;
  v116 = a54
       + 430227734
       + v76
       + ((v85 >> 11) ^ v112 ^ v111)
       + ((((v106 ^ 0x231EF1D8) & (v82 ^ v92 ^ 0x3BFFD8FB))
         + 297009951
         - ((2 * ((v106 ^ 0x231EF1D8) & (v82 ^ v92 ^ 0x3BFFD8FB))) & 0x2368063E)) ^ v82);
  v117 = ((v105 ^ 0x19FDAA3B) & (v100 | v83) | v100 & v83) + v116 + v113;
  v118 = v117 + 298286633 - ((2 * v117) & 0x238EFC52);
  HIDWORD(v85) = v118 ^ 1;
  LODWORD(v85) = v118 ^ 0x11C77E28;
  v119 = v85 >> 2;
  HIDWORD(v85) = v118 ^ 0x77E29;
  LODWORD(v85) = v118 ^ 0x11C00000;
  v120 = v85 >> 22;
  v121 = v116 + v74 + 1209715006 - ((2 * (v116 + v74)) & 0x9035927C);
  HIDWORD(v85) = v118 ^ 0x1E29;
  LODWORD(v85) = v118 ^ 0x11C76000;
  v122 = (v85 >> 13) ^ v119;
  HIDWORD(v85) = v121 ^ 0x3E;
  LODWORD(v85) = v121 ^ 0x481AC900;
  v123 = v85 >> 6;
  HIDWORD(v85) = v121 ^ 0x13E;
  LODWORD(v85) = v121 ^ 0x481AC800;
  v124 = v85 >> 11;
  v125 = v122 ^ v120;
  HIDWORD(v85) = v121 ^ 0x1AC93E;
  LODWORD(v85) = v121 ^ 0x48000000;
  v126 = v118 ^ 0x11C77E29;
  v127 = v121 ^ 0x481AC93E;
  LODWORD(v87) = a55
               + 506948616
               + v87
               + (v124 ^ v123 ^ (v85 >> 25))
               + ((((v121 ^ 0x481AC93E) & (v92 ^ v106 ^ 0x9552A3C))
                 + 709614564
                 - ((2 * ((v121 ^ 0x481AC93E) & (v92 ^ v106 ^ 0x9552A3C))) & 0x5497B7C8)) ^ v92);
  v128 = v87 + v83;
  LODWORD(v87) = v125 + ((v118 ^ 0x11C77E29) & (v105 ^ 0x19FDAA3B | v100) | (v105 ^ 0x19FDAA3B) & v100) + v87;
  LODWORD(v87) = v87 + 1508480649 - ((2 * v87) & 0xB3D32D12);
  HIDWORD(v85) = v87 ^ 0x1689;
  LODWORD(v85) = v87 ^ 0x59E98000;
  v129 = v85 >> 13;
  HIDWORD(v85) = v87 ^ 1;
  LODWORD(v85) = v87 ^ 0x59E99688;
  v130 = v85 >> 2;
  HIDWORD(v85) = v87 ^ 0x299689;
  LODWORD(v85) = v87 ^ 0x59C00000;
  v131 = v85 >> 22;
  v132 = v128 + 16296270 - ((2 * v128) & 0x1F1529C);
  HIDWORD(v85) = v132 ^ 0xE;
  LODWORD(v85) = v132 ^ 0xF8A940;
  v133 = v85 >> 6;
  HIDWORD(v85) = v132 ^ 0x14E;
  LODWORD(v85) = v132 ^ 0xF8A800;
  v134 = v130 ^ v129 ^ v131;
  v135 = v126 & (v105 ^ 0x19FDAA3B);
  v136 = v105 & 0x4488B472;
  v137 = v87 ^ 0x59E99689;
  v138 = (v92 ^ 0x2A4BDBE4)
       + a57
       + ((v85 >> 11) ^ v133 ^ __ROR4__(v132, 25) ^ 0x7C54A700)
       + ((((v132 ^ 0xF8A94E) & (v106 ^ v121 ^ 0x6B0438E6))
         + 589230552
         - ((2 * ((v132 ^ 0xF8A94E) & (v106 ^ v121 ^ 0x6B0438E6))) & 0x463DE3B0)) ^ v106);
  LODWORD(v87) = (v136 ^ 0x44001440)
               + (v136 ^ 0x88A032)
               + ((v87 ^ 0x59E99689) & (v126 | v115) | v135)
               + v134
               + v138
               - 490749222;
  v139 = v87 + 1480794444 - ((2 * v87) & 0xB0864298);
  v140 = v100 + 659060556 + v138 + 687786130 - ((2 * (v100 + 659060556 + v138)) & 0x51FD9124);
  HIDWORD(v85) = v139 ^ 0x3214C;
  LODWORD(v85) = v139 ^ 0x58400000;
  v141 = v85 >> 22;
  v142 = STACK[0x410];
  HIDWORD(v85) = v139 ^ 0x14C;
  LODWORD(v85) = v139 ^ LODWORD(STACK[0x410]);
  v143 = v85 >> 13;
  v144 = v139 ^ 0x5843214C;
  HIDWORD(v85) = v87;
  LODWORD(v85) = v139 ^ 0x5843214C;
  LODWORD(v87) = v143 ^ (v85 >> 2);
  HIDWORD(v85) = v140 ^ 0x12;
  LODWORD(v85) = v140 ^ 0x28FEC880;
  v145 = v85 >> 6;
  HIDWORD(v85) = v140 ^ 0x92;
  LODWORD(v85) = v140 ^ 0x28FEC800;
  LODWORD(STACK[0x41C]) = (v140 >> 25) ^ 0x14;
  v146 = v140 ^ 0x28FEC892;
  v147 = ((v85 >> 11) ^ v145 ^ (((v140 >> 25) ^ 0x14) & 0x7F | (v140 << 7)) ^ 0x7F644900)
       + v114
       + ((((v140 ^ 0x28FEC892) & (v121 ^ v132 ^ 0x48E26070))
         + 1209715006
         - ((2 * ((v140 ^ 0x28FEC892) & (v121 ^ v132 ^ 0x48E26070))) & 0x9035927C)) ^ v121);
  v148 = a70 + 883997877 + ((v147 + 1291620024 - ((2 * v147) & 0x99F91D70)) ^ 0x4CFC8EB8);
  LODWORD(v87) = (v87 ^ v141) + (v144 & (v137 | v126) | v137 & v126) + v148;
  v149 = v87 + 895815754;
  v150 = v87 + 895815754 - ((2 * v87) & 0x6ACA2094);
  v151 = v148 + v115 + 68876897 - ((2 * (v148 + v115)) & 0x835F4C2);
  v152 = (v151 >> 25) ^ 2;
  HIDWORD(v85) = v151 ^ 0x261;
  LODWORD(v85) = v151 ^ 0x41AF800;
  v153 = v85 >> 11;
  HIDWORD(v85) = v151 ^ 0xFFFFFFE1;
  LODWORD(v85) = v151 ^ 0x41AFA40;
  v154 = v153 ^ (v85 >> 6) ^ (((v151 >> 25) ^ 2) & 0x7F | (v151 << 7));
  v155 = v151 ^ 0x41AFA61;
  HIDWORD(v85) = v150 ^ 0x25104A;
  LODWORD(v85) = v150 ^ 0x35400000;
  v156 = v85 >> 22;
  HIDWORD(v85) = v149 ^ 2;
  LODWORD(v85) = v150 ^ 0x35651048;
  v157 = v156 ^ (v85 >> 2);
  HIDWORD(v85) = v150 ^ 0x104A;
  LODWORD(v85) = v150 ^ 0x35650000;
  v158 = v157 ^ (v85 >> 13);
  v159 = v150 ^ 0x3565104A;
  LODWORD(STACK[0x344]) = v132;
  v160 = a71
       + 958139571
       + v127
       + (v154 ^ 0xD7D3080)
       + ((((v151 ^ 0x41AFA61) & (v132 ^ v140 ^ 0x280661DC))
         + 16296270
         - ((2 * ((v151 ^ 0x41AFA61) & (v132 ^ v140 ^ 0x280661DC))) & 0x1F1529C)) ^ v132);
  v161 = a71
       - 77
       + v127
       + (v154 ^ 0x80)
       + ((((v151 ^ 0x61) & (v132 ^ v140 ^ 0xDC)) + 78 - ((2 * ((v151 ^ 0x61) & (v132 ^ v140 ^ 0xDC))) & 0x9C)) ^ v132)
       - 44;
  v162 = (v160 + 101649108 - ((2 * v160) & 0xC1E15A8)) ^ 0x60F0AD4;
  v163 = v162 + v126 + 348793000 - ((2 * (v162 + v126)) & 0x29945150);
  v164 = v158 + (v159 & (v144 | v137) | v144 & v137) + v162;
  v165 = v164 + 1289028947 - ((2 * v164) & 0x99AA0AA6);
  HIDWORD(v85) = v163 ^ 0xA8;
  LODWORD(v85) = v163 ^ 0x14CA2800;
  v166 = v85 >> 11;
  HIDWORD(v85) = v163 ^ 0x28;
  LODWORD(v85) = v163 ^ a58;
  LODWORD(STACK[0x3D8]) = (v163 >> 25) ^ 0xA;
  v167 = (v85 >> 6) ^ v166;
  v168 = v163 ^ 0x14CA28A8;
  v169 = a72
       + 1322822218
       + (v132 ^ 0xF8A94E)
       + (v167 ^ (((v163 >> 25) ^ 0xA) & 0x7F | (v163 << 7)) ^ 0x65145400)
       + ((((v163 ^ 0x14CA28A8) & (v140 ^ v151 ^ 0x2CE432F3))
         + 687786130
         - ((2 * ((v163 ^ 0x14CA28A8) & (v140 ^ v151 ^ 0x2CE432F3))) & 0x51FD9124)) ^ v140);
  v170 = v169 + v137 + 1480794444 - ((2 * (v169 + v137)) & 0xB0864298);
  HIDWORD(v85) = v170 ^ 0x14C;
  LODWORD(v85) = v170 ^ v142;
  v171 = (v170 >> 25) ^ 0x2C;
  v172 = v170 ^ 0x5843214C;
  LODWORD(STACK[0x334]) = v171;
  v173 = a69
       + 1537002063
       + v146
       + ((v85 >> 11) ^ __ROR4__(v170, 6) ^ (v171 & 0x7F | (v170 << 7)) ^ 0x10F1AA85)
       + (((v172 & (v151 ^ v163 ^ 0x10D0D2C9)) + 68876897 - ((2 * (v172 & (v151 ^ v163 ^ 0x10D0D2C9))) & 0x835F4C2)) ^ v151);
  v174 = v173 + v144 + 1480794444 - ((2 * (v173 + v144)) & 0xB0864298);
  HIDWORD(v85) = v174 ^ 0xC;
  LODWORD(v85) = v174 ^ LODWORD(STACK[0x40C]);
  v175 = v174 ^ 0x5843214C;
  v176 = (((v175 & (v163 ^ v170 ^ 0x4C8909E4)) + 348793000 - ((2 * (v175 & (v163 ^ v170 ^ 0x4C8909E4))) & 0x29945150)) ^ v163)
       + v155
       + ((v85 >> 6) ^ (v174 >> 25) ^ (v175 << (v161 & 6 ^ 4 | v161 & 6 ^ 2 | 1)) ^ ((((v174 >> 11) ^ 0x77C457DE)
                                                                                    + ((v174 >> 10) & 0x1EBF74 ^ 0x161040)
                                                                                    - 2010079162) | (v174 << 21) ^ 0x29800000) ^ 0x2C);
  v177 = ((v176 + 125308144 - ((2 * v176) & 0xEF019E0)) ^ 0x6F566303)
       + LODWORD(STACK[0x200])
       + ((2 * (v176 + 125308144 - ((2 * v176) & 0xEF019E0))) & 0xD05CDFE6 ^ 0x5019E0);
  v178 = (v177 + 414661257 - ((2 * v177) & 0x316E7512)) ^ 0x18B73A89;
  v179 = v178 + v159 + 317737390 - ((2 * (v178 + v159)) & 0x25E0935C);
  HIDWORD(v85) = v179 ^ 0xEEEEEEEE;
  LODWORD(v85) = v179 ^ a66;
  v180 = v85 >> 6;
  HIDWORD(v85) = v179 ^ 0x1AE;
  LODWORD(v85) = v179 ^ LODWORD(STACK[0x438]);
  v181 = v179 ^ 0x12F049AE;
  v182 = ((v85 >> 11) ^ 0x7824D700 ^ v180 ^ (((v179 >> 25) ^ 9) & 0x7F | (v179 << 7))) + v168;
  v183 = LODWORD(STACK[0x204])
       + 1955562222
       + (((v181 & (v174 ^ v170)) + 1480794444 - ((2 * (v181 & (v174 ^ v170))) & 0xB0864298)) ^ v170)
       + ((v182 + 1480794444 - ((2 * v182) & 0xB0864298)) ^ 0x5843214C);
  v184 = v183 + 708160927 - ((2 * v183) & 0x546B5B3E);
  v185 = v165 ^ 0x4CD50553;
  v186 = v184 ^ 0x2A35AD9F;
  v187 = v186 + v185 + 687116525 - ((2 * (v186 + v185)) & 0x51E921DA);
  v188 = (v187 >> 25) ^ 0x14;
  v189 = 617930901 * (v187 & 6 ^ 2 | v187 & 6 ^ 4);
  if (v189 == -587381890)
  {
    LODWORD(STACK[0x428]) = (v179 >> 25) ^ 9;
    HIDWORD(v191) = v187 ^ 0xED;
    LODWORD(v191) = v187 ^ a41;
    v190 = v191 >> 11;
    HIDWORD(v191) = v187 ^ 0x2D;
    LODWORD(v191) = v187 ^ 0x28F490C0;
    v192 = v191 >> 6;
    HIDWORD(v191) = a51 - (v165 + 31);
    LODWORD(v191) = v165 ^ 0x4CD50550;
    v193 = v191 >> 2;
    HIDWORD(v191) = v165 ^ 0x553;
    LODWORD(v191) = v165 ^ 0x4CD50000;
    v194 = v191 >> 13;
    HIDWORD(v191) = v165 ^ 0x150553;
    LODWORD(v191) = v165 ^ 0x4CC00000;
    v195 = v169 + (v185 & (v159 | v144) | v159 & v144) + ((v191 >> 22) ^ v194 ^ v193);
    v196 = v195 + 105967282;
    v197 = v195 + 105967282 - ((2 * v195) & 0xCA1DD54) - 8;
    v198 = v197 ^ 0x650EEAA;
    HIDWORD(v191) = v196 ^ 2;
    LODWORD(v191) = v197 ^ 0x650EEA8;
    v199 = (v191 >> 2) + 1480794444 - ((2 * (v191 >> 2)) & 0xB0864298);
    HIDWORD(v191) = v197 ^ 0xEAA;
    LODWORD(v191) = v197 ^ 0x650E000;
    v200 = v199 ^ ((v191 >> 13) + 1480794444 - ((2 * (v191 >> 13)) & 0xB0864298));
    HIDWORD(v191) = v197 ^ 0x10EEAA;
    LODWORD(v191) = v197 ^ 0x6400000;
    v201 = ((v197 ^ 0x650EEAA) & (v185 | v159) | v185 & v159)
         + v173
         + ((v200 + 845340876 - ((2 * v200) & 0x64C5C198)) ^ ((v191 >> 22)
                                                            + 845340876
                                                            - ((2 * (v191 >> 22)) & 0x64C5C198)));
    v202 = v201 + 1717350869 - ((2 * v201) & 0xCCB963AA);
    v203 = v202 ^ 0x665CB1D5;
    v204 = (v202 ^ 0x665CB1D5) & (v198 | v185) | v198 & v185;
    LODWORD(STACK[0x438]) = 1717350868;
    HIDWORD(v191) = (v202 + 12) ^ 1;
    LODWORD(v191) = v202 ^ 0x665CB1D4;
    v205 = ((v191 >> 2) ^ __ROR4__(v202, 13) ^ ((((v202 << 10) ^ 0x72C75400)
                                               + 518715321
                                               - ((2 * ((v202 << 10) ^ 0x72C75400)) & 0x3DD5E800)) ^ 0x1EEAF7B9 | (v202 >> 22) ^ 0x199) ^ 0x8EAB32E5)
         + ((v204 + 1904051585 - ((2 * v204) & 0xE2FB0B02)) ^ 0x717D8581);
    v206 = ((v205 + 693982755 - ((2 * v205) & 0x52BAAC46)) ^ 0x295D5623) + v178;
    v207 = v206 + 1998841625 - ((2 * v206) & 0xEE47CE32);
    v208 = v207 ^ 0x7723E719;
    HIDWORD(v191) = v207;
    LODWORD(v191) = v207;
    v209 = (((v207 ^ 0x7723E719) & (v202 ^ 0x665CB1D5))
          + 708160927
          - ((2 * ((v207 ^ 0x7723E719) & (v202 ^ 0x665CB1D5))) & 0x546B5B3E)) ^ 0x2A35AD9F;
    v210 = (v209 | (v207 ^ 0x7723E719 | v202 ^ 0x665CB1D5) & v198)
         + ((v191 >> 13) ^ __ROR4__(v207, 22) ^ __ROR4__(v207, 2) ^ 0xEA9F2505);
    v211 = v186 - 108449451 + (v184 & 0x676CEAB ^ 0x4424220 | v184 & 0x676CEAB ^ 0x2348C8B);
    v212 = ((v210 + 1384311057 - ((2 * v210) & 0xA505D222)) ^ 0x5282E911)
         + ((v211 + 1898769869 - ((2 * v211) & 0xE259DB9A)) ^ 0x712CEDCD);
    v213 = v212 + 1998841625 - ((2 * v212) & 0xEE47CE32);
    v214 = v213 ^ 0x7723E719;
    v215 = (v213 ^ 0x7723E719) & v208;
    v216 = (((v213 ^ 0x7723E719) & v203) + 1994368058 - ((2 * ((v213 ^ 0x7723E719) & v203)) & 0xEDBF4874)) ^ 0x76DFA43A | v215;
    v217 = (v216 + 961970962 - ((2 * v216) & 0x72AD0624)) ^ 0x39568312 | v209;
    v218 = (((v213 << 19) ^ 0x38C80000) + 895742500 - ((2 * ((v213 << 19) ^ 0x38C80000)) & 0x6AC00000)) ^ 0x3563F224 | (v213 >> 13) ^ 0x3B91F;
    HIDWORD(v191) = v213 + 12;
    LODWORD(v191) = v213;
    v219 = v187 ^ 0x28F490ED;
    v220 = (a52 ^ 0x4CDD13C3)
         + 2024104815
         + v172
         + (v190 ^ v192 ^ (v188 & 0x7F | (v187 << 7)) ^ 0x7A487680)
         + ((((v187 ^ 0x28F490ED) & (v174 ^ 0x4AB368E2 ^ v179))
           + 1480794444
           - ((2 * ((v187 ^ 0x28F490ED) & (v174 ^ 0x4AB368E2 ^ v179))) & 0xB0864298)) ^ v174);
    LODWORD(STACK[0x400]) = v188;
    v221 = v198 + v220 + 1864418596 - ((2 * (v198 + v220)) & 0xDE418A48);
    v222 = ((v191 >> 2) ^ ((((v213 << 10) ^ 0x8F9C6400) + 708160927 - ((2 * ((v213 << 10) ^ 0x8F9C6400)) & 0x546B5800)) ^ 0x2A35AD9F | (v213 >> 22)) ^ (v218 + 1878592059 - ((2 * v218) & 0xDFF21476)) ^ 0x3231F221)
         + v220
         + ((v217 + 974706863 - ((2 * v217) & 0x7431B15E)) ^ 0x3A18D8AF);
    v223 = v222 + 845340876 - ((2 * v222) & 0x64C5C198);
    v224 = v223 ^ 0x3262E0CC;
    HIDWORD(v191) = v222;
    LODWORD(v191) = v223 ^ 0x3262E0CC;
    v225 = v191 >> 2;
    HIDWORD(v191) = v223 ^ 0xCC;
    LODWORD(v191) = v223 ^ 0x3262E000;
    v226 = v225 ^ (v191 >> 13);
    HIDWORD(v191) = v223 ^ 0x22E0CC;
    LODWORD(v191) = v223 ^ 0x32400000;
    v227 = v226 ^ (v191 >> 22);
    HIDWORD(v191) = v221 ^ 0x120C524;
    LODWORD(v191) = v221 ^ 0x6E000000;
    v228 = v191 >> 25;
    HIDWORD(v191) = v221 ^ 0x524;
    LODWORD(v191) = v221 ^ 0x6F20C000;
    v229 = v191 >> 11;
    HIDWORD(v191) = v221 ^ 0x24;
    LODWORD(v191) = v221 ^ 0x6F20C500;
    v230 = v175
         + (a53 ^ 0x14F563A9)
         + (v229 ^ (v191 >> 6) ^ v228)
         + ((((v221 ^ 0x6F20C524) & (v179 ^ v187 ^ 0x3A04D943))
           + 317737390
           - ((2 * ((v221 ^ 0x6F20C524) & (v179 ^ v187 ^ 0x3A04D943))) & 0x25E0935C)) ^ v179);
    v231 = ((v223 ^ 0x3262E0CC) & (v214 | v208) | v215)
         + ((v230 - ((2 * v230 + 160493608) & 0x3DD5EF72) - 1548521523) ^ 0x1EEAF7B9)
         + v227;
    v232 = v231 + 1878592059 - ((2 * v231) & 0xDFF21476);
    LODWORD(STACK[0x3F8]) = v174;
    v233 = v230 - 2067236844 + v203 + 1291620024 - ((2 * (v230 - 2067236844 + v203)) & 0x99F91D70);
    HIDWORD(v191) = v232 ^ 0xA3B;
    LODWORD(v191) = v232 ^ 0x6FF90000;
    v234 = (v191 >> 13) + 1480794444 - ((2 * (v191 >> 13)) & 0xB0864298);
    HIDWORD(v191) = v233 ^ 0x38;
    LODWORD(v191) = v233 ^ 0x4CFC8E80;
    v235 = (v191 >> 6) + 125308144 - ((2 * (v191 >> 6)) & 0xEF019E0);
    HIDWORD(v191) = v232 ^ 0x390A3B;
    LODWORD(v191) = v232 ^ 0x6FC00000;
    v236 = v191 >> 22;
    HIDWORD(v191) = ~(v232 + 16);
    LODWORD(v191) = v232 ^ LODWORD(STACK[0x30C]);
    v237 = (((v191 >> 2) ^ v236) + 1480794444 - ((2 * ((v191 >> 2) ^ v236)) & 0xB0864298)) ^ v234;
    HIDWORD(v191) = v233 ^ 0x6B8;
    LODWORD(v191) = v233 ^ 0x4CFC8800;
    LODWORD(STACK[0x3DC]) = (v233 >> 25) ^ 0x26;
    v238 = (((v233 >> 25) ^ 0x26) & 0x7F | (v233 << 7)) ^ (v191 >> 11);
    v239 = v232 ^ 0x6FF90A3B;
    v240 = ((((v233 ^ 0x4CFC8EB8) & (v187 ^ v221 ^ 0x47D455C9))
           + 687116525
           - ((2 * ((v233 ^ 0x4CFC8EB8) & (v187 ^ v221 ^ 0x47D455C9))) & 0x51E921DA)) ^ v187)
         + v181
         + (((v238 ^ 0x7E475C00) + 125308144 - 2 * ((v238 ^ 0x7E475C00) & 0x7780CFE ^ v238 & 0xE)) ^ v235);
    v241 = (a73 ^ 0x6FF90A3B) - 1933114872 + ((v240 + 1480794444 - ((2 * v240) & 0xB0864298)) ^ 0x5843214C);
    v242 = ((v232 ^ 0x6FF90A3B) & (v224 | v214) | v224 & v214) + v241 + v237;
    v243 = v242 + 961970962 - ((2 * v242) & 0x72AD0624);
    v244 = v241 + v208 + 1998841625 - ((2 * (v241 + v208)) & 0xEE47CE32);
    HIDWORD(v191) = v244 ^ 0x99999999;
    LODWORD(v191) = v244 ^ LODWORD(STACK[0x39C]);
    v245 = v191 >> 6;
    HIDWORD(v191) = v244 ^ 0x719;
    LODWORD(v191) = v244 ^ 0x7723E000;
    v246 = (v245 ^ (v191 >> 11) ^ (((v244 >> 25) ^ 0x3B) & 0x7F | (v244 << 7)) ^ 0x91F38C80) + v219;
    v247 = v246 + 1372344993 - ((2 * v246 - 216898902) & 0xB0864298);
    v248 = v244 ^ 0x7723E719;
    v249 = v214
         + (LODWORD(STACK[0x270]) ^ 0x665CB1D5)
         + ((((v244 ^ 0x7723E719) & (v221 ^ v233 ^ 0x23DC4B9C))
           + 1864418596
           - ((2 * ((v244 ^ 0x7723E719) & (v221 ^ v233 ^ 0x23DC4B9C))) & 0xDE418A48)) ^ v221)
         + (v247 ^ 0x5843214C)
         - 1758081371
         + (v243 & 0x446D1618 ^ 0x44291408)
         + (v243 & 0x446D1618 ^ 0x440210)
         - 1147999768;
    v250 = v249 + 1480794444 - ((2 * v249) & 0xB0864298);
    HIDWORD(v191) = v250 ^ 0xC;
    LODWORD(v191) = v250 ^ LODWORD(STACK[0x40C]);
    v251 = v191 >> 6;
    HIDWORD(v191) = v250 ^ 0x14C;
    LODWORD(v191) = v250 ^ LODWORD(STACK[0x410]);
    v252 = ((v191 >> 11) ^ 0x2190A600 ^ v251 ^ (((v250 >> 25) ^ 0x2C) & 0x7F | (v250 << 7)))
         + (v221 ^ 0x6F20C524)
         + ((((v250 ^ 0x5843214C) & (v233 ^ v244 ^ 0x3BDF69A1))
           + 1291620024
           - ((2 * ((v250 ^ 0x5843214C) & (v233 ^ v244 ^ 0x3BDF69A1))) & 0x99F91D70)) ^ v233);
    v253 = (LODWORD(STACK[0x208]) ^ 0x5E13CFE6)
         - 1538233109
         + v252
         - (v252 & 0x676CEAB)
         + (v252 | 0xF9893154)
         + 108449452;
    v254 = v253 + v224 + 317737390 - ((2 * (v253 + v224)) & 0x25E0935C);
    HIDWORD(v191) = v254 ^ 0xEEEEEEEE;
    LODWORD(v191) = v254 ^ a66;
    v255 = (v233 ^ 0x4CFC8EB8)
         - 1090935817
         + ((v191 >> 6) ^ __ROR4__(v254, 11) ^ ((((v254 << 7) ^ 0x7824D700)
                                               + 1616191177
                                               - ((2 * ((v254 << 7) ^ 0x7824D700)) & 0xC0AA3D00)) ^ 0x60551EC9 | (v254 >> 25) ^ 9) ^ 0x35C25E09)
         + ((((v244 ^ v250 ^ 0x2F60C655) & (v254 ^ 0x12F049AE))
           + 1998841625
           - ((2 * ((v244 ^ v250 ^ 0x2F60C655) & (v254 ^ 0x12F049AE))) & 0xEE47CE32)) ^ v244);
    v256 = (v255 + (a74 ^ 0x7723E719) + 1998841625 - ((2 * (v255 + (a74 ^ 0x7723E719))) & 0xEE47CE32)) ^ 0x7723E719;
    v257 = v256 + v239 + 1480794444 - ((2 * (v256 + v239)) & 0xB0864298);
    v258 = (((v257 << 21) ^ 0x29800000) + 1480794444 - ((2 * ((v257 << 21) ^ 0x29800000)) & 0xB0800000)) ^ 0x5843214C | (v257 >> 11);
    HIDWORD(v191) = v257 ^ 0xC;
    LODWORD(v191) = v257 ^ LODWORD(STACK[0x40C]);
    v259 = (((v257 ^ 0x5843214C) >> (v250 & 0x19 ^ 0x11) >> (v250 & 0x19 ^ 8)) ^ (v257 << 7) ^ ((v191 >> 6) + 1578356710 - ((2 * (v191 >> 6)) & 0xBC279FCC)) ^ ((v258 ^ 0xB0864) + 105967274 - 2 * ((v258 ^ 0xB0864) & 0x650EEAB ^ v258 & 1)) ^ 0x79D3874C)
         + v248;
    v260 = (v259 + 1480794444 - ((2 * v259) & 0xB0864298)) ^ 0x5843214C;
    v262 = (125 * (((v257 ^ 0x5843214C) >> (v250 & 0x19 ^ 0x11) >> (v250 & 0x19 ^ 8)) & 0x25)) == 142
        && v260 - ((2 * v260 + 1930584746) & 0x546B5B3E) != 108449451;
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x440] + 8 * ((460 * v262) ^ a42)) - 8))();
  }
  v264 = STACK[0x428];
  v265 = STACK[0x35C];
  if (v189 <= 648479911)
  {
    v266 = (v179 >> 25) ^ 9;
    v267 = a65;
    v268 = STACK[0x430];
    if (v189 == -1823243692)
    {
      LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x328]) - ((2 * LODWORD(STACK[0x328])) & 0x2C) + 22;
      LODWORD(STACK[0x270]) = LODWORD(STACK[0x330]) - ((2 * LODWORD(STACK[0x330])) & 0x26) + 19;
      LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x33C]) - 2 * (STACK[0x33C] & 0x1F) + 31;
      LODWORD(STACK[0x3DC]) = LODWORD(STACK[0x3A8]) - ((2 * LODWORD(STACK[0x3A8])) & 0x72) + 57;
      LODWORD(STACK[0x400]) = LODWORD(STACK[0x3B8]) - ((2 * LODWORD(STACK[0x3B8])) & 0xA2) + 81;
      LODWORD(STACK[0x3FC]) = LODWORD(STACK[0x3B4]) - ((2 * LODWORD(STACK[0x3B4])) & 0x72) + 57;
      LODWORD(STACK[0x3F8]) = LODWORD(STACK[0x3F8]) - ((2 * LODWORD(STACK[0x3F8])) & 0x60) + 48;
      LODWORD(STACK[0x3F4]) = (v268 >> 25) - (HIBYTE(v268) & 0x5A) + 45;
      LODWORD(STACK[0x430]) = v264 - ((2 * v264) & 0x1C) + 14;
      LODWORD(STACK[0x41C]) = LODWORD(STACK[0x41C]) - 2 * (STACK[0x41C] & 0x3F) + 63;
      LODWORD(STACK[0x3E0]) = v152 - ((2 * v152) & 0xB4) + 90;
      LODWORD(STACK[0x300]) = LODWORD(STACK[0x3D8]) - ((2 * LODWORD(STACK[0x3D8])) & 0x8A) + 69;
      LODWORD(STACK[0x428]) = ((v174 >> 25) ^ 0x2C) - ((2 * ((v174 >> 25) ^ 0x2C)) & 0x72) + 57;
      return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x440] + 8 * (a65 + 3838)) - 4))();
    }
    if (!v189)
    {
      LODWORD(STACK[0x2E8]) = STACK[0x2E8];
      LODWORD(STACK[0x35C]) = v265;
      v269 = LODWORD(STACK[0x330]) - ((2 * LODWORD(STACK[0x330])) & 0x26);
      v270 = LODWORD(STACK[0x33C]) - 2 * (STACK[0x33C] & 0x1F);
      v271 = STACK[0x3B8];
      v272 = (2 * LODWORD(STACK[0x3B8])) & 0xA2;
      v273 = LODWORD(STACK[0x338]) - ((2 * LODWORD(STACK[0x338])) & 0xAE);
      v274 = STACK[0x3B4];
      v275 = LODWORD(STACK[0x3A4]) - ((2 * LODWORD(STACK[0x3A4])) & 0xFFFFFFFB);
      v276 = LODWORD(STACK[0x3A8]) - ((2 * LODWORD(STACK[0x3A8])) & 0x72);
      LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x328]) - ((2 * LODWORD(STACK[0x328])) & 0x2C) + 22;
      LODWORD(STACK[0x270]) = v269 + (a38 & 0xD854BF7F) - 75;
      LODWORD(STACK[0x228]) = a68 - ((2 * a68) & 0x96) + 75;
      LODWORD(STACK[0x3E8]) = v270 + 31;
      v277 = LODWORD(STACK[0x3F8]) - ((2 * LODWORD(STACK[0x3F8])) & 0x60);
      LODWORD(STACK[0x420]) = v275 + 125;
      LODWORD(STACK[0x3FC]) = v274 - ((2 * v274) & 0x72) + 57;
      LODWORD(STACK[0x3F8]) = v277 + 48;
      LODWORD(STACK[0x3F4]) = (v268 >> 25) - (HIBYTE(v268) & 0x5A) + 45;
      LODWORD(STACK[0x430]) = v264 - ((2 * v264) & 0x1C) + 14;
      LODWORD(STACK[0x41C]) = LODWORD(STACK[0x41C]) - 2 * (STACK[0x41C] & 0x3F) + 63;
      LODWORD(STACK[0x3E0]) = v152 - ((2 * v152) & 0xB4) + 90;
      LODWORD(STACK[0x300]) = LODWORD(STACK[0x3D8]) - ((2 * LODWORD(STACK[0x3D8])) & 0x8A) + 69;
      LODWORD(STACK[0x438]) = v266 - ((2 * v266) & 8) + 4;
      return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x440] + 8 * (a65 - 786))
                                                                     - 4))(a59, (v271 - v272 + 81), (v276 + 57), (v273 + 87));
    }
    goto LABEL_23;
  }
  v267 = a65;
  v268 = STACK[0x430];
  if (v189 == 648479912)
  {
    LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x328]) - ((2 * LODWORD(STACK[0x328])) & 0x2C) + 22;
    LODWORD(STACK[0x270]) = LODWORD(STACK[0x330]) - ((2 * LODWORD(STACK[0x330])) & 0x26) + 19;
    LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x33C]) - 2 * (STACK[0x33C] & 0x1F) + 31;
    LODWORD(STACK[0x3DC]) = LODWORD(STACK[0x3A8]) - ((2 * LODWORD(STACK[0x3A8])) & 0x72) + 57;
    LODWORD(STACK[0x400]) = LODWORD(STACK[0x3B8]) - ((2 * LODWORD(STACK[0x3B8])) & 0xA2) + 81;
    LODWORD(STACK[0x3FC]) = LODWORD(STACK[0x3B4]) - ((2 * LODWORD(STACK[0x3B4])) & 0x72) + 57;
    LODWORD(STACK[0x3F8]) = LODWORD(STACK[0x3F8]) - ((2 * LODWORD(STACK[0x3F8])) & 0x60) + 48;
    LODWORD(STACK[0x3F4]) = (v268 >> 25) - (HIBYTE(v268) & 0x5A) + 45;
    LODWORD(STACK[0x430]) = v264 - ((2 * v264) & 0x1C) + 14;
    LODWORD(STACK[0x41C]) = LODWORD(STACK[0x41C]) - 2 * (STACK[0x41C] & 0x3F) + 63;
    LODWORD(STACK[0x3E0]) = v152 - ((2 * v152) & 0xB4) + 90;
    LODWORD(STACK[0x300]) = LODWORD(STACK[0x3D8]) - ((2 * LODWORD(STACK[0x3D8])) & 0x8A) + 69;
    LODWORD(STACK[0x428]) = ((v174 >> 25) ^ 0x2C) - ((2 * ((v174 >> 25) ^ 0x2C)) & 0x72) + 57;
    return (*(uint64_t (**)(void))(STACK[0x440] + 8 * (a65 + 3202)))();
  }
  if (v189 != 1235861802)
  {
    v266 = (v179 >> 25) ^ 9;
    if (v189 == 1884341714)
    {
      v278 = STACK[0x440];
      v279 = STACK[0x224];
      v283 = STACK[0x230];
      v284 = STACK[0x22C];
      v285 = LODWORD(STACK[0x22C]) >> (a65 - 102);
      v286 = LODWORD(STACK[0x22C]) ^ 2;
      v287 = HIWORD(LODWORD(STACK[0x230])) ^ 0xB2;
      v288 = HIWORD(LODWORD(STACK[0x22C]));
      a35[2] = BYTE1(LODWORD(STACK[0x230])) ^ 0xFB;
      a35[7] = v286;
      a35[1] = v287;
      a35[3] = v283 ^ 3;
      v289 = STACK[0x23C];
      a35[11] = LODWORD(STACK[0x23C]) ^ 0x56;
      *a35 = HIBYTE(v283) ^ 0x5F;
      a35[5] = v288 ^ 0x18;
      a35[6] = v285 ^ 0x50;
      v290 = STACK[0x244];
      v291 = HIBYTE(LODWORD(STACK[0x244]));
      a35[9] = BYTE2(v289) ^ 0xAD;
      a35[14] = BYTE1(v290) ^ 0xD0;
      a35[12] = v291 ^ 0x3F;
      a35[13] = BYTE2(v290) ^ 0x6C;
      a35[4] = HIBYTE(v284) ^ 0x2F;
      a35[8] = HIBYTE(v289) ^ 0xB;
      a35[15] = v290 ^ 0xB6;
      a35[10] = BYTE1(v289) ^ 1;
      v292 = STACK[0x238];
      a35[16] = HIBYTE(LODWORD(STACK[0x238])) ^ 0x5A;
      a35[18] = BYTE1(v292) ^ 0x86;
      v293 = STACK[0x240];
      a35[21] = HIWORD(LODWORD(STACK[0x240])) ^ 0x47;
      v294 = STACK[0x254];
      a35[31] = LODWORD(STACK[0x254]) ^ 0x45;
      a35[23] = v293 ^ 0xB9;
      a35[17] = BYTE2(v292) ^ 0x42;
      a35[24] = HIBYTE(v279) ^ 2;
      a35[19] = v292 ^ 0x68;
      a35[25] = BYTE2(v279) ^ 0x5A;
      a35[29] = BYTE2(v294) ^ 0xF8;
      a35[22] = BYTE1(v293) ^ 0x6C;
      a35[30] = BYTE1(v294) ^ 1;
      a35[20] = HIBYTE(v293) ^ 0x11;
      a35[28] = HIBYTE(v294) ^ 0x79;
      a35[26] = BYTE1(v279) ^ 0x99;
      a35[27] = v279 ^ 0x5F;
      return (*(uint64_t (**)(void))(v278 + 8 * (a65 ^ (4197 * (a36 == -525744616)))))();
    }
LABEL_23:
    LODWORD(STACK[0x35C]) = v265;
    v281 = STACK[0x330];
    v282 = (2 * LODWORD(STACK[0x330])) & 0x26;
    LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x328]) - ((2 * LODWORD(STACK[0x328])) & 0x2C) + 22;
    LODWORD(STACK[0x270]) = v281 - v282 + 19;
    LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x33C]) - 2 * (STACK[0x33C] & 0x1F) + 31;
    LODWORD(STACK[0x410]) = LODWORD(STACK[0x338]) - ((2 * LODWORD(STACK[0x338])) & 0xAE) + 87;
    LODWORD(STACK[0x3DC]) = LODWORD(STACK[0x3A8]) - ((2 * LODWORD(STACK[0x3A8])) & 0x72) + 57;
    LODWORD(STACK[0x400]) = LODWORD(STACK[0x3B8]) - ((2 * LODWORD(STACK[0x3B8])) & 0xA2) + 81;
    LODWORD(STACK[0x3FC]) = LODWORD(STACK[0x3B4]) - ((2 * LODWORD(STACK[0x3B4])) & 0x72) + 57;
    LODWORD(STACK[0x3F8]) = LODWORD(STACK[0x3F8]) - ((2 * LODWORD(STACK[0x3F8])) & 0x60) + 48;
    LODWORD(STACK[0x3F4]) = (v268 >> 25) - (HIBYTE(v268) & 0x5A) + 45;
    LODWORD(STACK[0x40C]) = LODWORD(STACK[0x3E0]) - ((2 * LODWORD(STACK[0x3E0])) & 0x96) + 75;
    LODWORD(STACK[0x430]) = v264 - ((2 * v264) & 0x1C) + 14;
    LODWORD(STACK[0x41C]) = LODWORD(STACK[0x41C]) - 2 * (STACK[0x41C] & 0x3F) + 63;
    LODWORD(STACK[0x3E0]) = v152 - ((2 * v152) & 0xB4) + 90;
    LODWORD(STACK[0x300]) = LODWORD(STACK[0x3D8]) - ((2 * LODWORD(STACK[0x3D8])) & 0x8A) + 69;
    LODWORD(STACK[0x428]) = ((v174 >> 25) ^ 0x2C) - ((2 * ((v174 >> 25) ^ 0x2C)) & 0x72) + 57;
    LODWORD(STACK[0x438]) = v266 - ((2 * v266) & 8) + 4;
    return (*(uint64_t (**)(void))(STACK[0x440] + 8 * (v267 + 213)))();
  }
  if (v187 == 687116525)
    v280 = 19;
  else
    v280 = -109;
  LODWORD(STACK[0x270]) = v280;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x440] + 8 * (a65 + 498)) - 8))();
}

uint64_t sub_100186100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x440] + 8 * v3) - 4))(a1, a2, a3, LODWORD(STACK[0x228]));
}

uint64_t sub_1001886E4@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;

  v66 = LODWORD(STACK[0x3F4]) - ((2 * LODWORD(STACK[0x3F4])) & 0xA2) + (((a65 + a2) | 0x826) ^ 0x3Fu);
  LODWORD(STACK[0x3FC]) = LODWORD(STACK[0x3E8]) + (~(2 * LODWORD(STACK[0x3E8])) | 0xFFFFFF8D) + 58;
  LODWORD(STACK[0x41C]) = LODWORD(STACK[0x228]) - 2 * (STACK[0x228] & 0x3F) + 63;
  LODWORD(STACK[0x430]) = LODWORD(STACK[0x3D4]) - ((2 * LODWORD(STACK[0x3D4])) & 0x1C) + 14;
  LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x328]) - ((2 * LODWORD(STACK[0x328])) & 0x2C) + 22;
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x330]) - ((2 * LODWORD(STACK[0x330])) & 0x26) + 19;
  LODWORD(STACK[0x3F4]) = LODWORD(STACK[0x32C]) - ((2 * LODWORD(STACK[0x32C])) & 0x5A) + 45;
  LODWORD(STACK[0x40C]) = LODWORD(STACK[0x334]) - ((2 * LODWORD(STACK[0x334])) & 0x96) + 75;
  LODWORD(STACK[0x438]) = LODWORD(STACK[0x218]) - ((2 * LODWORD(STACK[0x218])) & 8) + 4;
  LODWORD(STACK[0x3E8]) = v65 - 2 * (v65 & 0x1F) + 31;
  LODWORD(STACK[0x410]) = LODWORD(STACK[0x338]) - ((2 * LODWORD(STACK[0x338])) & 0xAE) + 87;
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(STACK[0x440] + 8 * a65))(a46, v66, a1 - ((2 * a1) & 0x72u) + 57);
}

uint64_t sub_100189420@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  if (v1 == 687116525)
    v2 = 55;
  else
    v2 = -73;
  LODWORD(STACK[0x2E0]) = v2;
  return (*(uint64_t (**)(void))(STACK[0x440] + 8 * a1))();
}

uint64_t sub_1001894C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x440] + 8 * (a4 + 4420)) - 4))();
}

uint64_t sub_10018984C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(STACK[0x440] + 8 * (a4 + 227)))();
}

uint64_t sub_1001898A8@<X0>(int a1@<W3>, uint64_t a2@<X6>, unsigned __int8 a3@<W8>)
{
  int v3;

  return (*(uint64_t (**)(void))(a2
                              + 8 * ((43 * ((a3 ^ ((v3 ^ 0x3A18D8A8u) < ((a1 - 786) ^ 0x664u))) & 1)) ^ (a1 - 1320))))();
}

uint64_t sub_10018A0D8(int a1, unsigned __int8 a2, int a3, int a4, __int16 a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,unsigned int a58)
{
  int v58;
  int v59;
  int v60;
  unsigned __int8 v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  unsigned __int8 *v66;
  int v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 v78;
  unsigned __int8 *v79;
  int v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  uint64_t v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unint64_t v96;
  uint64_t (*v97)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v68 = v58 + 1218;
  LODWORD(STACK[0x438]) = v66[3] - ((2 * v66[3]) & 0x62);
  LODWORD(STACK[0x430]) = *v66 - ((((v58 + 1180) | 0x64) - 72) & (2 * *v66));
  LODWORD(STACK[0x428]) = v66[7] - ((2 * v66[7]) & 0x30);
  LODWORD(STACK[0x420]) = v66[1] - ((2 * v66[1]) & 0x74);
  LODWORD(STACK[0x41C]) = v66[11] - ((2 * v66[11]) & 0x2C);
  v69 = v66[6];
  LODWORD(STACK[0x410]) = v60 - ((2 * v60) & 0xFFFFFFF3);
  v70 = v66[5] - 2 * (v66[5] & 0x3F);
  LODWORD(STACK[0x3FC]) = (v69 << 8) - ((v69 << 9) & 0x7A00) + 15789;
  v71 = a3 - ((2 * a3) & 0xFFFFFFEF);
  v72 = v66[9] - (unsigned __int16)(a5 & (2 * v66[9]));
  v73 = v65 - ((2 * v65) & 0xFFFFFFBF);
  v74 = v62;
  v75 = v66[14] - ((2 * v66[14]) & 0x30);
  v76 = v65;
  v77 = a4 - ((2 * a4) & 0x1FFB4u);
  v78 = v61;
  v79 = v66;
  v80 = v63 - ((v74 >> 23) & 0x1A);
  v81 = v59 - ((2 * v59) & 0x1A2);
  v82 = ((v76 << 16) | (v78 << 8)) + 1998841625 - ((2 * ((v76 << 16) | (v78 << 8))) & 0x47CE00);
  v83 = v79[23] + (a1 | ~(2 * v79[23]));
  v84 = (v59 | (((v82 ^ 0x7723E719) + a2) << 8))
      + v67
      - 2 * ((v59 | (((v82 ^ 0x7723E719) + a2) << 8)) & (v67 + 26) ^ v59 & 0x1A);
  v85 = v66[22] + (~(2 * v66[22]) | 0x65);
  v86 = v66[31];
  v87 = v66[25] - ((2 * v66[25]) & 0x6Eu);
  v88 = v66[20] + (~(2 * v66[20]) | 0xFFFFFF8D);
  v89 = ((v86 << 8) + 1480794444 - ((v86 << 9) & 0x4200)) ^ 0x5843214C | v79[30];
  v90 = (((v89 - ((2 * v89) & 0xB963AA)) << 8) + 1555158272) ^ 0x5CB1D500;
  v91 = v90 + 378190579 - ((2 * v90) & 0x2D157400);
  v92 = v79[28] - ((2 * v79[28]) & 8);
  v93 = v79[2] - 2 * (v79[2] & 0x3F);
  LODWORD(STACK[0x300]) = (v82 >> 8) ^ 0xFFFFFFA2;
  v94 = v79[12];
  v95 = (v84 ^ 0x4A97DD25u) >> ((v94 & 8 ^ 8) + (v94 & 8));
  LODWORD(STACK[0x398]) = (v95 - ((2 * v95) & 0x98) + 76) ^ 0x59;
  LODWORD(STACK[0x3C8]) = v79[29] ^ 0x6A;
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x438]) + 49;
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x430]) + 19;
  LODWORD(STACK[0x368]) = LODWORD(STACK[0x428]) + 24;
  LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x41C]) + 22;
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x410]) + 121;
  LODWORD(STACK[0x41C]) = v70 + 63;
  LODWORD(STACK[0x384]) = v71 + 119;
  LODWORD(STACK[0x3F4]) = v72 + 45;
  LODWORD(STACK[0x428]) = a6 - ((2 * a6) & 0x72) + 57;
  LODWORD(STACK[0x3F8]) = a7 - ((2 * a7) & 0x60) + 48;
  LODWORD(STACK[0x2F0]) = v73 + 95;
  LODWORD(STACK[0x360]) = v75 + 24;
  v96 = STACK[0x440];
  LODWORD(STACK[0x3E8]) = v94 - 2 * (v94 & 0x1F) + 31;
  LODWORD(STACK[0x3E0]) = v77 + 90;
  LODWORD(STACK[0x394]) = v80 + 13;
  LODWORD(STACK[0x430]) = a8 - ((2 * a8) & 0x1C) + 14;
  LODWORD(STACK[0x400]) = v81 + 81;
  LODWORD(STACK[0x40C]) = v64 - ((2 * v64) & 0xFFFFFF96) + 75;
  LODWORD(STACK[0x2FC]) = v83 + 93;
  LODWORD(STACK[0x2E0]) = v87 + 55;
  LODWORD(STACK[0x3DC]) = v88 + 58;
  LODWORD(STACK[0x438]) = v92 + 4;
  LODWORD(STACK[0x2F8]) = v93 + 63;
  LODWORD(STACK[0x3FC]) = (LODWORD(STACK[0x3FC]) >> 8) ^ 4;
  LODWORD(STACK[0x410]) = ((v91 >> 8) ^ 0xFFFFFFBA) - ((2 * ((v91 >> 8) ^ 0xFFFFFFBA)) & 0xFFFFFFAE) + 87;
  LODWORD(STACK[0x420]) = HIWORD(v91) ^ 0xFFFFFFF7;
  v97 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 8 * v68);
  LODWORD(STACK[0x22C]) = a37;
  LODWORD(STACK[0x224]) = a40;
  LODWORD(STACK[0x238]) = a32;
  LODWORD(STACK[0x254]) = a35;
  LODWORD(STACK[0x230]) = a30;
  LODWORD(STACK[0x23C]) = a36;
  LODWORD(STACK[0x244]) = a31;
  LODWORD(STACK[0x240]) = a33;
  return v97(v83, v87, v71, v77, v72, a58, v96, (v85 + 78), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_10018A80C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) ^ (1716948049 * ((a1 - 1704714978 - 2 * (a1 & 0x9A641D1E)) ^ 0xB17C5E93));
  __asm { BR              X9 }
}

uint64_t sub_10018A98C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((2039
                                * (((v2 - 19) ^ 0xF7 ^ (*(_DWORD *)(v0 + 32) == ((v2 - 19) ^ 0x2C0657C7))) & 1)) ^ (v2 - 19))))();
}

void sub_10018AA20(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 753993959 * ((-2 - ((a1 | 0x46F62FA2) + (~(_DWORD)a1 | 0xB909D05D))) ^ 0x66D1227C);
  __asm { BR              X10 }
}

uint64_t sub_10018AC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  unint64_t v46;

  v43 = 712;
  v44 = &a42;
  while (1)
  {
    v46 = v43;
    v43 &= 7u;
    switch(v46)
    {
      case 0uLL:
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * a9) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12);
      case 1uLL:
        goto LABEL_13;
      case 2uLL:
        goto LABEL_12;
      case 3uLL:
        goto LABEL_11;
      case 4uLL:
        goto LABEL_10;
      case 5uLL:
        goto LABEL_9;
      case 6uLL:
        goto LABEL_8;
      case 7uLL:
        *(_BYTE *)v44 = 0;
        v44 = (uint64_t *)((char *)v44 + 1);
LABEL_8:
        *(_BYTE *)v44 = 0;
        v44 = (uint64_t *)((char *)v44 + 1);
LABEL_9:
        *(_BYTE *)v44 = 0;
        v44 = (uint64_t *)((char *)v44 + 1);
LABEL_10:
        *(_BYTE *)v44 = 0;
        v44 = (uint64_t *)((char *)v44 + 1);
LABEL_11:
        *(_BYTE *)v44 = 0;
        v44 = (uint64_t *)((char *)v44 + 1);
LABEL_12:
        *(_BYTE *)v44 = 0;
        v44 = (uint64_t *)((char *)v44 + 1);
LABEL_13:
        *(_BYTE *)v44 = 0;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * a9) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12);
      default:
        v45 = ((v43 >> 3) + 7) >> 3;
        v44 = &a42;
        if (((v43 >> 3) & 7) == 0)
          goto LABEL_3;
        while (1)
        {
          *v44++ = 0;
          if (!--v45)
            break;
LABEL_3:
          *(_OWORD *)v44 = 0u;
          *((_OWORD *)v44 + 1) = 0u;
          *((_OWORD *)v44 + 2) = 0u;
          v44[6] = 0;
          v44 += 7;
        }
        break;
    }
  }
}

uint64_t sub_10018AD78@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v34 = &a32 + v32;
  *((_OWORD *)v34 + 1) = 0u;
  *((_OWORD *)v34 + 2) = 0u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v33 + 8 * ((1862 * (v32 == 480)) ^ a1)) - (a1 ^ 0x1366)))();
}

uint64_t sub_10018ADBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (v28 - 4148)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, v29, v30, v32, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10018ADFC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  int v3;
  int v4;
  unsigned __int8 v5;
  uint64_t v6;
  __n128 *v7;

  v7 = (__n128 *)(v2 + a1);
  v7[33] = a2;
  v7[34] = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a1 == 96) ^ v5) & 1) * v4) ^ v3)))();
}

uint64_t sub_10018AE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);
  uint64_t v51;

  LOWORD(STACK[0x384]) = 0;
  *(_OWORD *)&STACK[0x388] = 0u;
  *(_OWORD *)&STACK[0x398] = 0u;
  *(_OWORD *)&STACK[0x3A8] = 0u;
  STACK[0x3B8] = 0;
  LODWORD(STACK[0x3C4]) = 1;
  STACK[0x300] = v46;
  LODWORD(STACK[0x380]) = 8;
  a45 = v45;
  STACK[0x308] = (unint64_t)&a45;
  LODWORD(STACK[0x384]) = 8;
  v50 = (uint64_t (*)(_QWORD))(*(_QWORD *)(v49 + 8 * (v47 ^ 0xCBF)) - 110687922);
  LODWORD(STACK[0x3C0]) = 2;
  v51 = v50(0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v48 + 8 * ((57 * (LODWORD(STACK[0x3C4]) != 1)) ^ v47)) - 8))(v51);
}

uint64_t sub_10018AF64(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  uint64_t v40;

  if ((v38 & 0x100000) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8 * (a2 ^ (3924 * (a38 + 1 != a32)))))(a1, a37);
  else
    return ((uint64_t (*)(void))(*(_QWORD *)(v40
                                          + 8
                                          * (((LODWORD(STACK[0x3C0]) < 0x10uLL) * (2473 * (v39 ^ 0xC26) - 4736)) ^ v39))
                              - 8))();
}

uint64_t sub_10018C3B4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v31 = (a2 - 1974497862) & 0x75B07DFD;
  v32 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * a2) - (v31 ^ 0x15F0));
  return v32(a1, v32, a3, v31, v31 ^ 0x15F0, a6, a7, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10018C404(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8 * ((((((a5 + v8) & a1) + 3612) ^ (a5 + v10) & v11) * (v9 == a8)) ^ a5))
                            - 4))();
}

uint64_t sub_10018C43C@<X0>(int a1@<W3>, unint64_t a2@<X7>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a2 > 7) * a3) ^ a1)) - 4))();
}

uint64_t sub_10018C4B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * a4) - 4))();
}

uint64_t sub_10018C7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _BYTE *a10, _BYTE *a11, uint64_t a12, _BYTE *a13, uint64_t a14, uint64_t a15, uint64_t a16, _BYTE *a17, _BYTE *a18, _BYTE *a19, uint64_t a20,_BYTE *a21,_BYTE *a22,_BYTE *a23,_BYTE *a24,uint64_t a25,_BYTE *a26,_BYTE *a27,_BYTE *a28,_BYTE *a29,uint64_t a30,int a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  unsigned int v45;
  char v46;
  int v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  int v53;
  unsigned int v54;

  a11[1] = v37 ^ 0x3E;
  a11[4] = (v37 ^ v39) >> (a8 & 0x10) >> (a8 & 0x10 ^ 0x10);
  *a23 = (BYTE1(v37) ^ 0x9F) - ((2 * (BYTE1(v37) ^ 0x9F)) & 0xEF) + ((a31 + 55) ^ 0x44);
  v42 = *(_BYTE *)(v41 + (((v37 >> 20) & 0xF0 | (v37 >> 28)) ^ 0xC1));
  v43 = (v37 >> 47) & 0xFE | (v37 >> 55) & 1;
  a10[5] = BYTE5(v37) ^ 0x2C;
  *a26 = (BYTE4(v37) ^ 0x6C) - ((2 * (BYTE4(v37) ^ 0x6C)) & 0xEF) + 119;
  *a27 = (v42 ^ (((8 * v42) ^ 0xD8) + 8) ^ 0x14) - 64;
  v44 = *(_BYTE *)(a30 + (v43 ^ 0x4B));
  a10[7] = BYTE1(v36) ^ 0xB5;
  v45 = ((v36 >> 12) & 0xF0 | (v36 >> 20) & 0xF) ^ 0xBC;
  a10[3] = v36 ^ 0xB2;
  a11[16] = ((v43 ^ 0x82) + ((91 - 2 * (v43 ^ 0x82)) | 0xBB) + 53) ^ v44 ^ 0x72;
  a10[2] = HIBYTE(v37) ^ 0x34;
  v46 = *(_BYTE *)(v41 + v45 - ((2 * v45) & 0xD8) + 108);
  a10[1] = BYTE3(v36) ^ 0xEF;
  a11[6] = BYTE5(v36) ^ 0xD;
  *a24 = (BYTE4(v36) ^ 6) - ((2 * BYTE4(v36)) & 0x42) + 33;
  a11[3] = (v46 ^ (((8 * v46) ^ 0xD8) + 8) ^ 0x14) - 64;
  v47 = *(unsigned __int8 *)(a35 + (BYTE6(v36) ^ 0x6F) - ((2 * (HIWORD(v36) ^ 0x7D6F)) & 0xC8) + 100);
  *a13 = (HIBYTE(v36) ^ 0x7D) + (~(2 * (HIBYTE(v36) ^ 0x7D)) | 0xBD) + 34;
  *a17 = v35 ^ 0x94;
  *a10 = BYTE4(v35) ^ 0x24;
  *a18 = (BYTE1(v35) ^ 0x67) - ((2 * (BYTE1(v35) ^ 0x67)) & 0xEF) + 119;
  a10[4] = BYTE2(v35) ^ 0x9A;
  a11[10] = (((v47 ^ 0x22) + 84) ^ (((v47 ^ 0x22u) + 84) >> 4) & 3 ^ 0xD) + 98;
  *a21 = (BYTE3(v35) ^ 0x24) - 2 * (BYTE3(v35) & 8 ^ BYTE3(v35) ^ 0x24) + 119;
  v48 = (*(_BYTE *)(a35 + (BYTE5(v35) ^ 0x11)) ^ 0x22) + 84;
  v49 = ((((v35 >> 52) ^ 0xBF) << 6) & 0xC0 | (((v35 >> 44) & 0xF0 | ((v35 >> 52) ^ 0xBF) & 0xF) >> 2)) ^ 0xCC;
  *a11 = (v48 ^ ((((v48 ^ 0xC0) + (v48 | 0x3F) + 1) & 0xF0) >> 4) ^ 0xD) + 98;
  v50 = (a8 ^ 0x23B20AC28E5A652FuLL) >> (v37 & 0x20 ^ 0x20) >> (v37 & 0x20);
  LOBYTE(v47) = *(_BYTE *)(v41 + (((4 * (int)v49) & 0xFCLL | (v49 >> 6)) ^ 0xFF));
  *a22 = v50 - ((2 * v50) & 0xEF) + 119;
  *a19 = (BYTE1(a8) ^ 0x65) - ((2 * (BYTE1(a8) ^ 0x65)) & 0xEF) + 119;
  a11[17] = BYTE3(a8) ^ 0x8E;
  *a28 = a8 ^ 0x58;
  a11[8] = HIBYTE(v35) ^ 0xB;
  a11[7] = BYTE2(a8) ^ 0x5A;
  a10[6] = (v47 ^ (((8 * v47) ^ 0xD8) + 8) ^ 0x14) - 64;
  a11[19] = BYTE1(v38) ^ 0xC1;
  a11[13] = HIBYTE(a8) ^ 0x23;
  *a29 = (BYTE5(a8) ^ 0xA) - ((2 * (BYTE5(a8) ^ 0xA)) & 0xEF) + 119;
  a11[12] = BYTE2(v38) ^ 0xAF;
  a11[15] = v38 ^ 0x92;
  a11[14] = BYTE6(a8) ^ 0xB2;
  v51 = v38 & 0xFFFFFFFFFFE00000 ^ 0x1E7E12CABB9CD07;
  v52 = *(_BYTE *)(v41 + (((v38 >> 20) & 0xF0 | (v38 >> 28)) ^ 0xD6));
  a11[11] = BYTE5(v51);
  a11[5] = BYTE4(v38) ^ 0x2C;
  a11[2] = ((2 * ((-8 * (v52 ^ 4)) ^ v52 ^ 4)) & 0x80) + ((-8 * (v52 ^ 4)) ^ v52 ^ 4 ^ 0xD0);
  v53 = *(unsigned __int8 *)(a35 + (BYTE6(v38) ^ 0x83));
  a11[9] = HIBYTE(v51);
  v54 = (((v53 ^ 0x22u) + 84) >> 4) & 3 ^ ((v53 ^ 0x22) + 84);
  a11[18] = ((2 * v54) & 0xC4) + (v54 ^ 0x6F);
  return ((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * a31) - 4))();
}

uint64_t sub_10018CCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _BYTE *a14)
{
  _DWORD *v14;
  int v15;
  uint64_t v16;

  *v14 = a6 + 1;
  *a14 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * v15) - ((v15 - 1059) | 0x1425u) + 5933))();
}

unint64_t sub_10018CCE8@<X0>(_BYTE *a1@<X3>, _BYTE *a2@<X6>, unsigned int a3@<W8>)
{
  int v3;
  unsigned __int8 **v4;
  unsigned __int8 **v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  unsigned __int8 *v14;
  unint64_t v15;
  unint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned __int8 v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __int128 v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  __int128 v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t result;
  unint64_t v181;
  uint64_t v182;
  _BYTE *v183;
  _BYTE *v184;
  _BYTE *v185;
  _BYTE *v186;
  _DWORD *v187;
  _BYTE *v188;
  _BYTE *v189;
  _BYTE *v190;
  _BYTE *v191;

  v13 = *a1 ^ 0x77;
  v14 = *v4;
  v15 = (8 * (*v4)[1]) & 0x7FF | ((unint64_t)(*a1 ^ 0x77u) << 11) & 0xFFFFFFFFF807FFFFLL | ((unint64_t)(*v4)[4] << 19);
  v16 = v15 - ((2 * (_DWORD)v15) & 0xFC34870);
  v17 = *v5;
  v18 = ((*v5)[7] >> 1) & 0x7F | ((*v5)[7] << 7);
  v19 = ((v16 - 0x580502BAF81E5BC5) >> 3) | 0x6000000000000000;
  v20 = *(_QWORD *)(v9 + 8 * (v3 - 5301));
  v21 = v20 - 343258863;
  v22 = *(_BYTE *)(v20 - 343259387 + ((v14[10] - 87) ^ 0xE9)) ^ 0x5F;
  v23 = (v22 >> 2) | (v22 << 6);
  v24 = ((*v6 ^ 0x77) & 0xFFFFFF00000000FFLL | ((*v12 ^ 0x77u) << 8) | ((unint64_t)v17[4] << 16) & 0xFFFFFF0000FFFFFFLL | ((*v11 ^ 0x77) << 24) | ((unint64_t)*v17 << 32)) ^ (((unint64_t)v17[6] << 48) | ((unint64_t)*v14 << 40));
  v25 = v14[8];
  v26 = v24 & 0x140803B268BCE025 ^ (v25 << 56) & 0x1400000000000000;
  v27 = __ROR8__((v25 << 34) & 0x3AC00000000 ^ __ROR8__(v24 & 0xEBF7FC4D97431FDALL, 22) ^ 0x558A8B231F4D010ALL, 42);
  LOBYTE(v24) = (((v14[18] - 87) >> 1) | ((v14[18] - 87) << 7)) ^ 0xD6;
  LOBYTE(v25) = ((v24 & 0x80) != 0) | (2 * v24);
  v28 = ((*v190 ^ 0x77) & 0xFFFFFF00000000FFLL | ((*v7 ^ 0x77u) << 8) | ((unint64_t)v14[7] << 16) & 0xFFFFFF0000FFFFFFLL | (v14[17] << 24) | ((unint64_t)(*v8 ^ 0x77u) << 32)) ^ ((unint64_t)(*v191 ^ 0x77u) << 40) ^ ((unint64_t)v14[14] << 48) ^ ((unint64_t)v14[13] << 56);
  v29 = *(_BYTE *)(v20 - 343259387 + ((v14[15] - 87) ^ 0xE9)) ^ 0x5F;
  v30 = ((v29 >> 2) | (v29 << 6)) | ((unint64_t)v14[12] << 16);
  v31 = *(unsigned __int8 *)(v20 - 343259387 + (v25 ^ 0x44));
  v32 = (v17[3] | (unint64_t)(unsigned __int16)(((*(_BYTE *)(v20 - 343258863 + (v18 ^ 0x78)) ^ 6)
                                                                       - 27) << 8) | ((unint64_t)v14[3] << 16) & 0xFFFFFF0000FFFFFFLL | (v17[1] << 24) | ((unint64_t)(*a2 ^ 0x21u) << 32)) ^ (a3 | ((unint64_t)v14[6] << 40) & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(*v10 ^ 0x21u) << 56)) ^ ((unint64_t)v23 << 48);
  v33 = (((unint64_t)v14[9] << 56) | ((unint64_t)v14[11] << 40) & 0xFF00FFFFFFFFFFFFLL | ((unint64_t)(((v31 ^ 0x5Fu) >> 2) & 0x3F | ((v31 ^ 0x5F) << 6)) << 48)) ^ (v30 & 0xFFFFFF0000FF00FFLL | (v14[2] << 24) | ((unint64_t)v14[5] << 32) | ((unint64_t)v14[19] << 8));
  v34 = v19 ^ ((*v189 << 24) | ((unint64_t)(*v188 ^ 0x77u) << 32) & 0xFF00FFFFFFFFFFLL | ((unint64_t)v17[5] << 40) & 0xFFFFFFFFFFFFFFLL | ((unint64_t)v17[2] << 56)) ^ ((unint64_t)((*(_BYTE *)(v20 - 343258863 + (((v14[16] >> 1) & 0x7Fu | (v14[16] << 7)) ^ 0x78)) ^ 6) - 27) << 48) ^ v33;
  v35 = (v27 ^ 0xC8C7D340429562A2 | v26) ^ v32;
  v36 = v33 ^ v28;
  v37 = v34 ^ (v35 ^ 0xB08CE89DC370CB20) & (v32 ^ 0x3E99FF89DC1AC3FELL);
  v38 = (v34 ^ 0x301CC4FFAF7A8A31) & (v32 ^ 0xC166007623E53C01) ^ v36 ^ 0x80B58677C57DB996;
  v39 = (v36 ^ 0x80B58677C57DB996) & (v28 ^ 0xFD0E97FEF3978D4ALL) ^ v35 ^ 0xB08CE89DC370CB20;
  v40 = (v36 ^ 0x7F4A79883A824669) & (v34 ^ 0xCFE33B00508575CELL);
  v41 = v39 ^ 0xF95C23E95E768C51;
  v42 = v32 ^ (v28 ^ 0x2F168010C6872B5) & (v35 ^ 0x4F7317623C8F34DFLL) ^ v37 ^ 0xEFAD8D32CBCA8237;
  v43 = v37 ^ v38 ^ 0x7F19A350F7CDCCA2;
  v44 = v28 ^ v40 ^ v39 ^ 0x62D459910BFC1647;
  v45 = (v43 >> 19) & 0x2B86AC41B5BLL ^ v43 & 0xCE6B02B86AC41B5BLL | (v43 >> 19) & 0x1D47953BE4A4 ^ v43 & 0x3194FD47953BE4A4;
  v46 = v42 ^ (8 * v42) ^ (v42 >> 39) ^ (v42 << 25) ^ (v42 >> 61);
  v47 = (v44 << 54) ^ __ROR8__(__ROR8__(v44, 50) & 0xFFFFFFFFFF003FFFLL ^ __ROR8__(v44, 40) ^ 0x89106C81E0A29CD7, 24) ^ 0xA29CD789106C81E0;
  v48 = v47 & 0xD717BE5BD181F1F1;
  v49 = v47 & 0x28E841A42E7E0E0ELL ^ (v44 >> 17) & 0x41A42E7E0E0ELL;
  v50 = v48 ^ (v44 >> 17) & 0x3E5BD181F1F1;
  v51 = v38 ^ 0x9BFE975EC7E11798 ^ __ROR8__(v38 ^ 0x9BFE975EC7E11798, 7) ^ ((v38 ^ 0x9BFE975EC7E11798) >> 41) ^ ((v38 ^ 0x9BFE975EC7E11798) << 23);
  v44 <<= 47;
  v52 = v50 | v49;
  v53 = v52 & 0xFC6C1F7C735B371ELL ^ v44 & 0xFC6C000000000000;
  v54 = v41 ^ __ROR8__(v41, 1) ^ (v41 >> 6) ^ (v41 << 58);
  v55 = v52 & 0x393E0838CA4C8E1 ^ v44 & 0x393800000000000;
  v56 = v54 ^ v46;
  v57 = (v45 ^ (v43 << 45) | (v43 >> 28)) ^ v51 ^ (v45 & (v43 >> 28) & 0xFFFFFFFFFLL | ((unint64_t)v43 << 36));
  v58 = v53 | v55;
  v59 = v57 ^ v54 & ~v46;
  v60 = v58 ^ v51 ^ v46 & ~v57;
  v61 = v57 & ~(v58 ^ v51);
  v62 = v59 ^ v60 ^ 0x31269F6CD3094E8DLL;
  v63 = v51 & ~v58 ^ v56;
  v64 = v46 ^ v59 ^ v58 & ~v56 ^ 0xB1ABEBD929F47317;
  v65 = v62 >> 28;
  v66 = (((v61 ^ v58 ^ v63) + (v61 ^ v58 ^ v63 ^ 0xE6B6CD618E4AA8DBLL) + 1) ^ 0xFFFFFFFFFFFFFFF8) + (v61 ^ v58 ^ v63);
  v67 = v63 ^ 0x92553BF47346A986 ^ (v63 << 63) ^ ((v63 ^ 0x92553BF47346A986) << 58) ^ ((v63 ^ 0x92553BF47346A986) >> 1) ^ ((v63 ^ 0x92553BF47346A986) >> 6);
  *((_QWORD *)&v68 + 1) = (v62 << 36) ^ (v62 << 45) ^ ((v62 ^ -(uint64_t)v62 ^ (((v62 >> 19) ^ v62)
                                                                             + (v62 >> 19)
                                                                             - 2 * ((v62 >> 19) ^ v62)))
                                                     + (v62 >> 19)) ^ (v62 >> 28);
  *(_QWORD *)&v68 = (v62 << 36) ^ (v62 << 45) ^ ((v62 ^ -(uint64_t)v62 ^ (((v62 >> 19) ^ v62)
                                                                       + (v62 >> 19)
                                                                       - 2 * ((v62 >> 19) ^ v62)))
                                               + (v62 >> 19));
  v69 = v60 ^ 0x8326B5E47DEEF8A0 ^ __ROR8__(v60 ^ 0x8326B5E47DEEF8A0, 7) ^ ((v60 ^ 0x8326B5E47DEEF8A0) >> 41) ^ ((v60 ^ 0x8326B5E47DEEF8A0) << 23);
  v70 = v66 ^ __ROR8__(v66, 10) ^ (v66 >> 17) ^ (v66 << 47);
  v71 = __ROR8__(((v64 & 0x7FFFFFFFFFLL) << 7) ^ __ROR8__((v64 >> 39) ^ (8 * v64) ^ __ROR8__(((v64 >> 61 >> (v18 & 7) >> (v18 & 7 ^ 7u)) & 0xF1FFFFFFFFFFFFFFLL | (v64 >> 61 << 57)) ^ __ROR8__(v64, 7) ^ 0x951F431A71078991, 57) ^ 0x8FA18D3883C4C8CALL, 18) ^ 0x8D21AB731E5D57C6, 46);
  v72 = v70 ^ v69;
  *(_QWORD *)&v68 = __ROR8__((v68 >> 42) ^ __ROR8__(v69, 42) ^ 0xE95CCC3AD6FFA447, 22);
  v73 = (v71 ^ 0xADCC79755F1A3486) + v67 - 2 * ((v71 ^ 0xADCC79755F1A3486) & v67);
  v74 = (v68 ^ 0xFE911FA57330EB5BLL) & ~(v70 ^ v69) ^ v70;
  v75 = v69 & ~v70 ^ v73 ^ 0xF8B1E23C9C9A8676;
  v76 = ((v74 ^ 0x83129DD33947C5CDLL) + 0x7CED622CC6B83A33) ^ -(uint64_t)v74;
  v77 = v70 & ~v73;
  v78 = v73 & (v71 ^ 0x5233868AA0E5CB79) ^ v68 ^ 0xFE911FA57330EB5BLL;
  v79 = __ROR8__(v75, 3) ^ 0xDF163C47939350CELL;
  v80 = (v68 ^ 0x16EE05A8CCF14A4) & (v71 ^ 0xADCC79755F1A3486) ^ v72;
  v81 = v74 & 0x200;
  if (((unsigned __int16)v76 & v74 & 0x200) != 0)
    v81 = -(uint64_t)v81;
  v82 = (v80 - ((2 * v80) & 0x1356ECA8BF3E66ECLL) - 0x765489ABA060CC8ALL) ^ v78;
  v83 = v71 ^ v77 ^ v78 ^ 0x91F6636AECE67701;
  v84 = __ROR8__(v79, 61);
  v85 = v84 ^ __ROR8__(__ROR8__(((v81 + v76) ^ v74 & 0xFFFFFFFFFFFFFDFFLL) + 0x7CED622CC6B83A32, 23) ^ 0x707464F9DAC4598DLL, 41) ^ 0x1E6D22F2FB808122;
  v86 = v82 ^ __ROR8__(v82, 19) ^ (v82 >> 28);
  v87 = v83 ^ __ROR8__(v83, 61) ^ (v83 >> 39) ^ (v83 << 25);
  v88 = v84 ^ 0x1520DF65FCA216F2;
  v89 = ((v84 ^ 0x1520DF65FCA216F2uLL) >> 6) & 0x7FFFFFFFFFFFFFFFLL | ((unint64_t)v84 << 63);
  v90 = v86 & 0xCC9007461FBBEF3BLL ^ (v82 << 36) & 0xCC90074000000000 | v86 & 0x336FF8B9E04410C4 ^ (v82 << 36) & 0x336FF8B000000000;
  v91 = v88 ^ (v88 << 58) ^ (v88 >> 1) ^ v89;
  v92 = ((v80 ^ 0x5C213921C6C71BF3) >> 41) ^ ((v80 ^ 0x5C213921C6C71BF3) >> 7) ^ ((v80 ^ 0x5C213921C6C71BF3) << 23) ^ (0x200000000000001 * (v80 ^ 0x5C213921C6C71BF3) - (((v80 ^ 0x5C213921C6C71BF3) << 58) & (2 * (v80 ^ 0x5C213921C6C71BF3))));
  v93 = __ROR8__((((v85 & 0x1FFFF) << 18) - ((v85 << 19) & 0xFF1000000) + 0x374BA707F88330CDLL) ^ __ROR8__(v85 ^ __ROR8__(v85, 10) ^ (v85 >> 17), 29), 35) ^ 0xFF106619A6E974E0;
  v94 = v93 ^ v92;
  v95 = (v90 ^ -(uint64_t)v90 ^ (v92 - (v90 ^ v92))) + v92;
  v96 = v93 & ~(v91 ^ v87);
  v97 = (__ROR8__(__ROR8__(v93, 59) ^ 0x2F1DB3ADFCFFBA87, 5) ^ 0xC68712629018022BLL) & (v93 ^ v92) ^ v91 ^ v87;
  v98 = v95 & ~v94 ^ v93;
  v99 = v87 & ~v95;
  v100 = v95 ^ v91 & ~v87;
  v101 = v94 ^ v99;
  v102 = v101 ^ v100;
  v103 = v101 ^ v100 ^ 0x75EC5C0E458D720BLL;
  v104 = v87 ^ v100 ^ v96 ^ 0x557FB5F6F0B0F543;
  v105 = (v103 ^ -(uint64_t)v103 ^ ((v103 >> 19) - ((v103 >> 19) ^ v103))) + (v103 >> 19);
  v106 = (v98 ^ -(uint64_t)v98 ^ ((v97 ^ v98) + v97 - 2 * (v97 ^ v98))) + v97;
  v107 = v106 ^ 0x2929D9C84707D2FCLL;
  v108 = __ROR8__(__ROR8__(v106 ^ 0x2929D9C84707D2FCLL, 57) ^ 0xE1836EAB7BF00B41, 17) ^ 0x5A0F0C1B755BDF8;
  v109 = v104 ^ __ROR8__(v104, 61) ^ (v104 >> 39) ^ (v104 << 25);
  v111 = v108 & 0x10000000 & v106;
  v110 = v111 == 0;
  v112 = (v108 & 0x10000000 ^ v107) + 2 * v111;
  *((_QWORD *)&v113 + 1) = v97;
  *(_QWORD *)&v113 = v97 ^ 0x7C3DD992BC4B6970;
  v114 = (v113 >> 1) ^ v97 ^ 0x7C3DD992BC4B6970 ^ ((v97 ^ 0x7C3DD992BC4B6970) >> 6) ^ ((v97 ^ 0x7C3DD992BC4B6970) << 58);
  v115 = v101 ^ 0xB3ECAC065F481023 ^ (v101 << 23) ^ ((v101 ^ 0xB3ECAC065F481023) >> 7) ^ (((v101 ^ 0xB3ECAC065F481023) >> 41) & 0x1FFFFFFFFFFFFFFLL | ((unint64_t)(v101 ^ 0x23u) << 57));
  v116 = ((v102 >> 28) & 0x1FFFFFFFFFFFLL | ((unint64_t)v103 << 45)) ^ (v103 << 36);
  v117 = v115 ^ 0x32FA40811800000;
  v118 = v116 ^ v115 ^ 0x32FA40811800000 ^ v105;
  v119 = v118 ^ 0x75EC5C0E4;
  v120 = v118 ^ 0xFFFFFFF8A13A3F1BLL;
  if (!v110)
    v112 = v107 - (v108 & 0x10000000);
  v121 = __ROR8__(v107, 17);
  v122 = (v112 ^ v108 & 0xFFFFFFFFEFFFFFFFLL) + v121 - 2 * ((v112 ^ v108 & 0xFFFFFFFFEFFFFFFFLL) & v121);
  v123 = v119 + (v114 & ~v109) - 2 * (v119 & v114 & ~v109);
  v124 = v115 ^ 0xFCD05BF7EE7FFFFFLL;
  v125 = v114 ^ v109;
  v126 = v122 & ~v125;
  v127 = v126 & 0x4000000;
  if ((v126 & 0x4000000 & v109) != 0)
    v127 = -(uint64_t)v127;
  v128 = v127 + v109;
  v129 = v117 & ~v122 ^ v125;
  v130 = v120 & v109 ^ v117 ^ v122;
  v131 = v123 ^ v130 ^ 0xED978BB552FE1C89;
  v132 = __ROR8__(v129, 14) ^ __ROR8__(v124 & v119 | v122 & v120, 14) ^ 0xF6D61B5741C673D1;
  v133 = v129 ^ 0xA15CEC6A69978427;
  v134 = v123 ^ v126 & 0xFFFFFFFFFBFFFFFFLL ^ v128 ^ 0x45261E06B459D5E3;
  v135 = __ROR8__(v132, 50) ^ 0x77C0C06D748579DELL;
  v136 = v130 ^ 0x6310D53036ED4464 ^ __ROR8__(v130 ^ 0x6310D53036ED4464, 7) ^ ((v130 ^ 0x6310D53036ED4464) >> 41) ^ ((v130 ^ 0x6310D53036ED4464) << 23);
  v137 = ((v135 ^ (v135 >> 10)) + (v135 << 54) - 2 * ((v135 << 54) & v135)) ^ __ROR8__(v135, 17);
  v138 = ((v131 ^ (v131 >> 19)) + (v131 << 45) - 2 * ((v131 << 45) & v131)) ^ __ROR8__(v131, 28) ^ v136;
  v139 = v137 & 0x20000000000000;
  v140 = __ROR8__(__ROR8__(v134, 1) & 0x8000003FFFFFFFFFLL ^ __ROR8__(v134 ^ (v134 >> 61) ^ (v134 >> 39) ^ (v134 << (v31 & 3 ^ 1u) << (v31 & 3 ^ 2u)), 26) ^ 0x1CEEC4D46DD76788, 38);
  v141 = v137 & 0xFFDFFFFFFFFFFFFFLL;
  v142 = v133 ^ __ROR8__(v133, 1) ^ (v133 >> 6) ^ (v133 << 58) ^ v140 ^ 0x51B75D9E2073BB13;
  v143 = (v140 ^ 0x51B75D9E2073BB13) & ~v138;
  v110 = 49 * v13 - 1 >= 0;
  v144 = v140 ^ 0xAE48A261DF8C44ECLL;
  v145 = v137 & ~v142 ^ v140 ^ 0x51B75D9E2073BB13;
  v146 = v137 ^ ~v136;
  if (!v110)
    v146 = v136;
  v147 = v142 & v144 ^ v138;
  if ((v146 & v139) != 0)
    v148 = -v139;
  else
    v148 = v137 & 0x20000000000000;
  v149 = v148 + v136;
  v150 = v149 ^ v141;
  v151 = v149 ^ v141 ^ v143;
  v154 = v145 ^ v147;
  v155 = v149 & ~v137 ^ v142;
  v156 = v155 - ((2 * v155) & 0x8F4F71DE061AD7CCLL) + 0x47A7B8EF030D6BE6;
  v152 = v151 & v147;
  v153 = v151 + v147;
  v157 = ((((v153 + 2 * v152 - 4 * v152) ^ 0x53F6FCF6621646DDLL)
         - 0x53F6FCF6621646DDLL
         - (v153
          + 2 * v152
          - 4 * v152)
         - 2
         * ((((v153 + 2 * v152 - 4 * v152) ^ 0x53F6FCF6621646DDLL) - 0x53F6FCF6621646DDLL) & (4 * v152
                                                                                            - (v153
                                                                                             + 2 * v152)))) ^ (v153 + 2 * v152 - 4 * v152))
       - 0x53F6FCF6621646DELL;
  v158 = __ROR8__(v157, 19);
  v159 = (v157 ^ v158) & (v157 >> 28);
  v160 = v157 ^ v158 | (v157 >> 28);
  v161 = v157 ^ v158 ^ (v157 >> 28);
  v162 = v157 << (v65 & 0x24) << (v65 & 0x24 ^ 0x24);
  if (v72 == -1)
    v163 = v159;
  else
    v163 = ~v161;
  v164 = (v161 - 2 * v159 + 2 * (v163 & v160)) ^ v162;
  v14[1] = v164;
  *v188 = BYTE4(v164) - ((2 * BYTE4(v164)) & 0xEF) + 119;
  v14[4] = BYTE2(v164);
  v165 = v154 ^ 0x16321E88750C36C3;
  v166 = v154 ^ 0x16321E88750C36C3 ^ (v154 >> 61) ^ ((v154 ^ 0x16321E88750C36C3) >> 39) ^ (8
                                                                                             * (v154 ^ 0x16321E88750C36C3));
  v167 = v166 ^ (v165 << 25);
  *v185 = BYTE1(v164) - ((2 * BYTE1(v164)) & 0xEF) + 119;
  v14[10] = BYTE6(v167);
  v17[1] = BYTE3(v167);
  *v189 = BYTE3(v164);
  v17[2] = HIBYTE(v164);
  *((_QWORD *)&v168 + 1) = v155;
  *(_QWORD *)&v168 = v155 - ((2 * v155) & 0x8F4F71DE061AD7CCLL) + 0x47A7B8EF030D6BE6;
  v169 = (v168 >> 1) ^ v156;
  *v186 = BYTE4(v167) - ((2 * BYTE4(v167)) & 0x42) + 33;
  v170 = v169 & 0xFFFFFFDFFFFFFFFFLL ^ (v156 >> 6);
  *v14 = BYTE5(v170);
  v17[4] = (v169 ^ (v156 >> 6)) >> 16;
  v14[16] = BYTE6(v164);
  v17[5] = BYTE5(v164);
  v17[3] = v166;
  v14[3] = BYTE2(v166);
  *v10 = HIBYTE(v167) - ((2 * HIBYTE(v167)) & 0x42) + 33;
  v171 = v20 - 343259402;
  v172 = v138 & ~v150 ^ v137;
  v17[7] = BYTE1(v166);
  v173 = v170 ^ (v169 & 0x2000000000 | ((unint64_t)(v155 - ((2 * v155) & 0xCC) - 26) << 58));
  v14[6] = BYTE5(v167);
  *v17 = BYTE4(v173);
  v17[6] = BYTE6(v170);
  v14[8] = HIBYTE(v173);
  *v183 = ((v169 ^ (v156 >> 6)) >> 24)
        - ((2 * ((v169 ^ (v156 >> 6)) >> 24)) & 0xEF)
        + 119;
  v174 = v155 ^ v172 & 0x4767009B36A519B2 ^ ((v172 ^ 0x4767009B36A519B2) + (v172 | 0xB898FF64C95AE64DLL) + 1) ^ 0xD130906F9768BE79;
  *v6 = v169 ^ (v156 >> 6) ^ 0x77;
  v175 = v174 << 47;
  v176 = v151 ^ 0xC2748ACCF92FC462;
  *(_QWORD *)&v168 = __ROR8__(v174, 10);
  v177 = v174 ^ v168 ^ (v174 >> 17) ^ -(uint64_t)(v174 ^ v168 ^ (v174 >> 17)) ^ (v175
                                                                              - (v174 ^ v168 ^ (v174 >> 17) ^ v175));
  v14[17] = BYTE3(v177);
  *v12 = ((unsigned __int16)(v169 ^ (v156 >> 6)) >> 8)
       - ((2 * ((unsigned __int16)(v169 ^ (v156 >> 6)) >> 8)) & 0xEF)
       + 119;
  v178 = (((v176 >> 7) ^ -(uint64_t)(v176 >> 7) ^ (v176 - ((v176 >> 7) ^ v176))) + v176) ^ ((v176 >> 41) & 0x1FFFFFFFFFFFFFFLL | ((unint64_t)v176 << 57));
  v179 = v177 + v175;
  *v190 = v179 - ((2 * v179) & 0xEF) + 119;
  *v7 = BYTE1(v177) - ((2 * BYTE1(v177)) & 0xEF) + 119;
  LOBYTE(v172) = ((-64 * BYTE4(v177)) | ((-29 * BYTE4(v177)) >> 2)) ^ 0xA9;
  v14[7] = BYTE2(v177);
  LODWORD(v172) = *(unsigned __int8 *)(v171
                                     + (((v172 >> 6) | (4 * v172)) ^ 0x1ELL)
                                     + 809);
  DWORD1(v168) = v172 ^ 5;
  LODWORD(v168) = (v172 ^ 0x60) << 24;
  result = HIWORD(v179);
  v14[14] = BYTE6(v179);
  v181 = v178 ^ (v176 << 23);
  v14[15] = v178;
  v14[19] = BYTE1(v178);
  v14[13] = HIBYTE(v179);
  *v191 = BYTE5(v179) - ((2 * BYTE5(v179)) & 0xEF) + 119;
  LODWORD(v177) = ((unint64_t)v168 >> 27) ^ ((((((unint64_t)v168 >> 27) ^ -(char)((unint64_t)v168 >> 27) ^ ((((unint64_t)v168 >> 27) >> 1) - ((((unint64_t)v168 >> 27) >> 1) ^ ((unint64_t)v168 >> 27))))
                                                                     + (((unint64_t)v168 >> 27) >> 1)) & 0xFE) >> 1) ^ 0xFFFFFFF3;
  *v184 = v177 + ((-45 - 2 * v177) | 0x11) - 114;
  LOBYTE(v177) = *(_BYTE *)(v171 + (BYTE2(v181) ^ 0x39) + 276);
  v14[5] = BYTE4(v181);
  v14[18] = BYTE6(v181);
  v14[2] = BYTE3(v181);
  LOBYTE(v177) = (v177 ^ 0x65) + ((2 * v177) & 0x54 ^ 0xBF) - 85;
  v14[11] = BYTE5(v181);
  v14[12] = ((v177 & 0x80) != 0) | (2 * v177);
  v14[9] = (*(_BYTE *)(v21 + (((v181 >> 49) & 0x80 | (v181 >> 57)) ^ 0x78)) ^ 6) - 27;
  *v187 = a3 + 1;
  *(_QWORD *)(v182 + 8) = v164 ^ 0x27EDDF5A31397568;
  return result;
}

void sub_10018DF9C(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v4;

  v1 = 1491908057 * ((-2 - ((~(_DWORD)a1 | 0x3A0A027A) + (a1 | 0xC5F5FD85))) ^ 0x56CE5980);
  if (*(_QWORD *)(a1 + 16))
    v2 = *(_QWORD *)(a1 + 40) == 0;
  else
    v2 = 1;
  v4 = !v2 && (*(_DWORD *)(a1 + 8) ^ v1) - 410058347 < 0xFFFFFFF0;
  __asm { BR              X15 }
}

uint64_t sub_10018E090@<X0>(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, int a5, char a6, int a7, uint64_t a8, unsigned int a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;

  v18 = *(_DWORD *)(v15 + 24);
  v19 = (((&a3 | 0x42E181A7) - &a3 + (&a3 & 0xBD1E7E58)) ^ 0x2E25DA5D) * a1;
  a8 = v11;
  a9 = 999237725 - v19;
  a6 = v19 ^ 0x4E;
  a10 = v10;
  a3 = ((v18 - v13) ^ 0x44EDEFEA) + v19;
  a4 = (v16 - 3620) ^ v19;
  a7 = (v14 - ((2 * v14 + 1327366986) & 0x5129C346) + 270787400) ^ v19;
  v20 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v12 + 8 * (v16 ^ 0x12AF)) - 837550282))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * v16) - 4))(v20);
}

void sub_10018E16C()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = v0;
}

void sub_10018E1A0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 1800242513 * (((a1 | 0x1A71847F) - (a1 | 0xE58E7B80) - 443647104) ^ 0x43D0EC51);
  __asm { BR              X9 }
}

uint64_t sub_10018EC0C()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  char *v3;

  v1 = STACK[0x1040];
  LODWORD(STACK[0x1044]) = STACK[0x1040];
  LODWORD(STACK[0x1048]) = 14 * (v1 ^ 0xE11);
  LODWORD(STACK[0x104C]) = v1 + 712;
  v2 = STACK[0xC20];
  STACK[0x1050] = STACK[0xC20];
  v3 = (char *)&STACK[0x2180] + v2;
  STACK[0x1058] = (unint64_t)&STACK[0x2180] + v2;
  STACK[0x1060] = (unint64_t)&STACK[0x2180] + v2 + 32;
  STACK[0xB60] = (unint64_t)&STACK[0x2180] + v2 + 32;
  STACK[0xBF8] = (unint64_t)&STACK[0x2180] + v2 + 48;
  v2 += 128;
  STACK[0x1068] = v2;
  STACK[0xC20] = v2;
  STACK[0x1038] = (unint64_t)v3;
  LOBYTE(STACK[0x1037]) = 0;
  STACK[0x1028] = 32;
  STACK[0x1020] = *(_QWORD *)(v0 + 8 * (v1 ^ 0x1238)) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 8 * (v1 + 3513)) - 4))(0xD2A307445A1208BLL, 0x783D34171343911BLL, 0x7144408CA91042D4, 0x4647FE01135BCB56);
}

uint64_t sub_10018ED0C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v6 = (_BYTE *)STACK[0x1038];
  v7 = STACK[0x1037];
  v8 = STACK[0x1028];
  v9 = -(int)STACK[0x1038] & 7;
  if (v9 > STACK[0x1028])
    LODWORD(v9) = STACK[0x1028];
  switch((int)v9)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *v6++ = v7;
LABEL_5:
      *v6++ = v7;
LABEL_6:
      *v6++ = v7;
LABEL_7:
      *v6++ = v7;
LABEL_8:
      *v6++ = v7;
LABEL_9:
      *v6++ = v7;
LABEL_10:
      *v6++ = v7;
      break;
    default:
      break;
  }
  *(int64x2_t *)&STACK[0x540] = vdupq_n_s64(v4);
  *(int64x2_t *)&STACK[0x530] = vdupq_n_s64(a2);
  *(int64x2_t *)&STACK[0x520] = vdupq_n_s64(a3);
  *(int64x2_t *)&STACK[0x6E0] = vdupq_n_s64(a4);
  *(int64x2_t *)&STACK[0x560] = vdupq_n_s64(v5);
  *(int64x2_t *)&STACK[0x5A0] = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
  *(int64x2_t *)&STACK[0x8A0] = vdupq_n_s64(a1);
  switch(v8 - v9)
  {
    case 0uLL:
      return ((uint64_t (*)(void))STACK[0x1020])();
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *v6++ = v7;
LABEL_15:
      *v6++ = v7;
LABEL_16:
      *v6++ = v7;
LABEL_17:
      *v6++ = v7;
LABEL_18:
      *v6++ = v7;
LABEL_19:
      *v6++ = v7;
LABEL_20:
      *v6 = v7;
      result = ((uint64_t (*)(void))STACK[0x1020])();
      break;
    default:
      result = ((uint64_t (*)())((char *)sub_1001B9DA4 + 4 * unk_10021302E))();
      break;
  }
  return result;
}

uint64_t sub_10018EDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  int v8;
  uint64_t v9;

  STACK[0x4C0] = v7;
  STACK[0xA28] = 0xAC3481600FFE2898;
  STACK[0xAC8] = 0x3240E2E6FDAFDC80;
  STACK[0xDE0] = a7;
  STACK[0xC88] = a7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((11 * (STACK[0x298] == 0)) ^ v8))
                            - (v8 - 759)
                            + 5815))();
}

uint64_t sub_10018EE0C()
{
  uint64_t (*v0)(uint64_t);
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  STACK[0x4C8] = (unint64_t)v0;
  v3 = v0(8) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v3 * ((v1 + 203667763) & 0xF3DC331F ^ 0x289)) ^ v1)) - 4))();
}

uint64_t sub_10018EE94(uint64_t a1)
{
  int v1;
  uint64_t v2;

  *(_DWORD *)a1 = 670709830;
  *(_WORD *)(a1 + 4) = 10496;
  STACK[0xAC8] = a1 + 0x3240E2E6FDAFDC80;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3725 * (((a1 == 0) ^ (v1 + 84)) & 1)) ^ v1))
                            - ((v1 + 152) ^ 0x1757)))();
}

uint64_t sub_10018EF14@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  *v1 = 670709828;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 - 4263) ^ ((a1 - 5963) | 0x306) ^ 0x5AB) * (v1 == 0)) ^ a1)))();
}

uint64_t sub_10018EF68()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + 4) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((2 * v0) ^ 0xE56) + 5250) * (v1 != 0)) ^ v0))
                            - (v0 ^ 0xB89u)
                            + 3357))();
}

uint64_t sub_10018EFB0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v0 + 5) = 42;
  STACK[0xB30] = 0;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x4C8])(120);
  STACK[0x908] = v3 - 0x53CB7E9FF001D768;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 - 102) ^ (v3 == 0)) & 1)
                                          * ((5 * (v1 ^ 0xE6E)) ^ 0x803)) ^ v1))
                            - 4))();
}

uint64_t sub_10018F084()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 2414) | 0x896) - 3834) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_10018F0B0()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x4C8])(8) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 * (((v0 - 1422548972) & 0x54CA5FFC) - 3969)) ^ v0))
                            - (((v0 - 3229) | 0x51u) ^ 0x357)))();
}

uint64_t sub_10018F2E8()
{
  int v0;
  int v1;
  unint64_t v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0xB6C]) = v0;
  STACK[0xCD8] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v3 + (v3 ^ 0x2A9) * v1 - 1959)) - 8))();
}

uint64_t sub_10018F3CC()
{
  int v0;
  uint64_t v1;

  STACK[0x590] = STACK[0xD70];
  STACK[0x580] = STACK[0x908];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1421)) - (((v0 - 6062) | 0x883u) ^ 0xA8FLL)))();
}

uint64_t sub_1001903A8@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  STACK[0xE18] = v1;
  v4 = STACK[0x908] + 0x53CB7E9FF001D7D0;
  *(_DWORD *)(v4 + 8) = 680845731;
  *(_DWORD *)(v4 + 12) = 680845731;
  *(_DWORD *)(v4 + 4) = 0;
  *(_BYTE *)v4 = 0;
  LODWORD(STACK[0xB6C]) = 968960260;
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 + a1)))();
}

uint64_t sub_10019090C()
{
  int v0;
  int v1;
  unint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;

  *(_DWORD *)(v10 - 224) = v1 + 753993959 * ((v4 - (v0 | v4) + (v0 | v6)) ^ v8) + 1538;
  v11 = ((uint64_t (*)(uint64_t))STACK[0x4C0])(v10 - 224);
  v12 = *(_QWORD *)(v10 - 216);
  v13 = (_BYTE *)(STACK[0x1058] + v2);
  *v13 = v3 ^ v12 ^ v9;
  v13[1] = BYTE1(v12) ^ 0x9C;
  v13[2] = v7 ^ BYTE2(v12);
  v13[3] = BYTE3(v12) ^ 0xAA;
  v13[4] = BYTE4(v12) ^ 0x44;
  v13[5] = BYTE5(v12) ^ 0xE;
  v13[6] = BYTE6(v12) ^ 0xC;
  v13[7] = HIBYTE(v12) ^ 0x29;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((78 * (v2 > 0x17)) ^ v1)) - 8))(v11);
}

uint64_t sub_100190A84@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  uint64_t (*v8)(void);

  *(_BYTE *)(a1 + v4) = (*(_BYTE *)(STACK[0x1058] + v4) ^ v5) + ((2 * *(_BYTE *)(STACK[0x1058] + v4)) & 0x7C) + 76;
  if (v1)
    v7 = 0;
  else
    v7 = 1;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v7 * (v3 - 1244)) ^ v3)) - 8);
  LODWORD(STACK[0x1070]) = v2;
  return v8();
}

uint64_t sub_100190D74@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 + a1) & 0x5F904742) + 1333) * (v1 ^ 1)) ^ (v2 - 2208)))
                            - ((v2 + a1) ^ (a1 + 2296) ^ 0x10BALL)))();
}

uint64_t sub_100190DB8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a1 ^ 0x4B1) + v1)) - 4))();
}

uint64_t sub_100190E3C@<X0>(_QWORD *a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v2 - 0x73C92FE99193FCF8) = (char *)a1 + v3;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((3289 * ((a2 | 0x107) ^ 0x1B4D)) ^ (v2 == 0x73C92FE99193FD00)) & 1) == 0)
                                * (((a2 | 0x107) - 5969) ^ 0x3E3)) ^ (a2 | 0x107))))();
}

uint64_t sub_100190EB0()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x4C8])(16) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((((((3289 * (v0 ^ 0x3FC)) ^ v2) & 1) == 0)
                                               * ((v0 + 1732364144) & 0x98BE3FFB ^ 0x1A59)) ^ v0))
                            - 4))();
}

uint64_t sub_100190FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  LODWORD(STACK[0xC54]) = a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * v5))(a1, 968960260, a2, a3, a4, 0x73C92FE99193FD00);
}

uint64_t sub_100191018(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((((STACK[0x31C] & 0x6B47F33E) + 6125) * (v2 == a2)) ^ (v3 - 3842))))();
}

uint64_t sub_10019104C()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x7E2)) - (v0 ^ 0x336)))();
}

uint64_t sub_1001920CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  char v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;

  if (v29)
    return (*(uint64_t (**)(void))(v34
                                + 8
                                * ((v33 - 574) ^ (4
                                                * (((((v33 - 5958) ^ ((_DWORD)a1 == v30)) & 1) == 0) | (2 * ((((v33 - 5958) ^ ((_DWORD)a1 == v30)) & 1) == 0)))))))();
  if (v31 == 31432)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v34
                                                                 + 8
                                                                 * ((6139
                                                                   * (LODWORD(STACK[0xFF8])
                                                                    - ((2 * LODWORD(STACK[0xFF8])) & 0x64493B54)
                                                                    - 1306223190 != a29)) ^ (v33 - 5958)))
                                                     - 8))(a1, -2);
  if (v31 == 44694)
    return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((4420 * (LODWORD(STACK[0xFE0]) == v32 + 8)) ^ (v33 - 3806)))
                              - a27))();
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * (v33 - 3806)) - 8))();
}

uint64_t sub_100196A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);

  v41 = *(uint64_t (**)(void))(v40
                            + 8
                            * ((63 * ((((a38 + 572) ^ 0x22F ^ (v38 < ((a38 + 20217310) & 0xFECB7FD7) - 5895)) & 1) == 0)) ^ (a38 + 572)));
  *(int64x2_t *)&STACK[0x580] = vdupq_n_s64(0x3304ED6D2C431BF4uLL);
  *(int64x2_t *)&STACK[0x4F0] = vdupq_n_s64(0x8B3A9AFE01051DDFLL);
  *(int64x2_t *)&STACK[0x510] = vdupq_n_s64(0x631CC2105A6B0233uLL);
  *(int64x2_t *)&STACK[0x520] = vdupq_n_s64(0x4500F67BE57F8070uLL);
  *(int64x2_t *)&STACK[0x570] = vdupq_n_s64(0x5D7F84C20D403FC7uLL);
  *(int64x2_t *)&STACK[0x540] = vdupq_n_s64(0x44A72685F0F30763uLL);
  *(int64x2_t *)&STACK[0x480] = vdupq_n_s64(0xE76FFAE559B3D74FLL);
  *(int64x2_t *)&STACK[0x530] = vdupq_n_s64(0x1890051AA64C28B0uLL);
  *(int64x2_t *)&STACK[0x7C0] = vdupq_n_s64(0x793C753544B86ED5uLL);
  *(int64x2_t *)&STACK[0x500] = vdupq_n_s64(0xEF00333AA1E0C94ALL);
  *(int64x2_t *)&STACK[0x720] = vdupq_n_s64(0x99F62525A779C816);
  *(int64x2_t *)&STACK[0x730] = vdupq_n_s64(0xC760254E054FADBALL);
  *(int64x2_t *)&STACK[0x7D0] = vdupq_n_s64(0xB9B801FEECA434A9);
  *(int64x2_t *)&STACK[0x850] = vdupq_n_s64(0xC0CF3102E777C02ELL);
  *(int64x2_t *)&STACK[0x830] = vdupq_n_s64(0x7FB1377B7C92A476uLL);
  *(int64x2_t *)&STACK[0x820] = vdupq_n_s64(0x4D8EC773E64CFEC4uLL);
  *(int64x2_t *)&STACK[0x6F0] = vdupq_n_s64(0x74C56501FEFAE220uLL);
  *(int64x2_t *)&STACK[0x810] = vdupq_n_s64(0xB0B523F13488DA01);
  *(int64x2_t *)&STACK[0x800] = vdupq_n_s64(0xCF069AA9AA12B9A9);
  *(int64x2_t *)&STACK[0x7F0] = vdupq_n_s64(0x6F3ABC4075E5D55AuLL);
  *(int64x2_t *)&STACK[0x7E0] = vdupq_n_s64(0x802AA0C78359994FLL);
  *(int64x2_t *)&STACK[0x4E0] = vdupq_n_s64(0x781E23379EAAC9E2uLL);
  *(int64x2_t *)&STACK[0x840] = vdupq_n_s64(0x3D30CEFD18883FD1uLL);
  *(int64x2_t *)&STACK[0x7B0] = vdupq_n_s64(0x647FE01135BCB56uLL);
  *(int64x2_t *)&STACK[0x4B0] = vdupq_n_s64(0x7A1E23379EAAC9E2uLL);
  *(int64x2_t *)&STACK[0x4A0] = vdupq_n_s64(0x39B801FEECA434A9uLL);
  *(int64x2_t *)&STACK[0x870] = vdupq_n_s64(0xDB1C4740BFE60391);
  *(int64x2_t *)&STACK[0x590] = vdupq_n_s64(0xB681AEA98D9A2287);
  *(int64x2_t *)&STACK[0x880] = vdupq_n_s64(0x30F9655655ED4656uLL);
  *(int64x2_t *)&STACK[0x7A0] = vdupq_n_s64(0xF780199D50F064A5);
  *(int64x2_t *)&STACK[0x460] = vdupq_n_s64(v39);
  return v41();
}

uint64_t sub_100196DBC(double a1, __n128 a2)
{
  int v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 + 239)) - 8);
  *(_OWORD *)&STACK[0x2F0] = v5;
  *(_OWORD *)&STACK[0x300] = v6;
  *(__n128 *)&STACK[0x330] = a2;
  *(_OWORD *)&STACK[0x450] = v4;
  return v7();
}

uint64_t sub_100199BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  int v36;
  int v37;
  uint64_t v38;

  if (v36 == 968917257)
    return ((uint64_t (*)(void))(*(_QWORD *)(v38
                                          + 8
                                          * ((167
                                            * (((a36 ^ (*(_QWORD *)(STACK[0x9A0] - 0x1FCC246200528388) == 0)) & 1) == 0)) ^ (v37 - 2428)))
                              - 8))();
  LODWORD(STACK[0x880]) = v36;
  return ((uint64_t (*)(void))(*(_QWORD *)(v38
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x9B8] + 24) != 0) * (((v37 - 4614) ^ 0x1A) - 1894)) ^ (v37 - 4604)))
                            - 4))();
}

uint64_t sub_10019A11C(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 42;
  v5 = v2(42);
  *(_QWORD *)(a1 + 24) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v5 == 0) * (((v1 - 3037) | 0x240) ^ 0x278)) ^ v1))
                            - (v1 + 2609)
                            + 5643))();
}

uint64_t sub_10019A550@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = a1 | 0x40Du;
  v5 = sub_1000035BC();
  *(_QWORD *)(v2 + 24) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * v1) - v4 + 5643))(v5);
}

uint64_t sub_10019A578()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v0))(v2);
}

uint64_t sub_10019A788@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  unint64_t v3;

  LODWORD(STACK[0x1090]) = 598 * (a2 ^ 0x1499);
  LODWORD(STACK[0x1094]) = a2 - 5196;
  STACK[0x1098] = STACK[0xC78];
  v3 = STACK[0xC20];
  STACK[0x10A0] = STACK[0xC20];
  STACK[0x8E0] = (unint64_t)&STACK[0x2180] + v3;
  STACK[0x10A8] = (unint64_t)&STACK[0x2180] + v3 + 16;
  STACK[0xD50] = (unint64_t)&STACK[0x2180] + v3 + 16;
  STACK[0x928] = (unint64_t)&STACK[0x2180] + v3 + 48;
  STACK[0xC20] = v3 + 80;
  STACK[0x1038] = (unint64_t)&STACK[0x2180] + v3;
  LOBYTE(STACK[0x1037]) = 0;
  STACK[0x1028] = 16;
  STACK[0x1020] = *(_QWORD *)(v2 + 8 * (a2 + 1982)) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (LODWORD(STACK[0x108C]) ^ 0x8B6))
                                                                                                - 4))(0xD2A307445A1208BLL, 0x783D34171343911BLL, 0x7144408CA91042D4, 0x4647FE01135BCB56, a1, 0x73C92FE99193FD00, 0x1FCC246200528390);
}

uint64_t sub_10019ABFC()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == 0) * (v0 - 3422)) ^ v0)))();
}

uint64_t sub_10019AC24@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  v4 = a1 + ((v1 + 71) | 0x6AA) - 3760;
  v5 = 16 - (v4 & 0xF);
  LODWORD(STACK[0xB94]) = v5;
  v6 = v5 + v4 + v2 - ((2 * (v5 + v4)) & 0x5129C346);
  LODWORD(STACK[0xA7C]) = v6;
  v7 = ((uint64_t (*)(_QWORD))STACK[0x4C8])(v6 ^ (11 * (v1 ^ 0x59Fu) + 680839153));
  STACK[0xA50] = v7;
  STACK[0x238] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((4232 * (v7 != 0)) ^ v1)) - 4))();
}

uint64_t sub_10019AF94(uint64_t a1, int a2)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((*v3 == 0) * a2) ^ (v2 - 5603))) - 8))();
}

uint64_t sub_10019D364()
{
  unint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x708] + 8 * (int)(v1 ^ (6674 * ((v0 >> 3) & 1)))))();
}

uint64_t sub_10019F72C(double a1, double a2, double a3, double a4, __n128 a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * (v10 - 1006)) - 4);
  *(__n128 *)&STACK[0x730] = a5;
  return v12(a7 + v9 + v8 + v7 + 0x105A740010513039, -16);
}

uint64_t sub_1001A04F4(uint64_t a1)
{
  char v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * ((3600
                                                                          * ((((v1 & 8) == 0) ^ (v2 - 1)) & 1)) ^ v2))
                                                            - 8))(a1, STACK[0x720]);
}

uint64_t sub_1001A0EE4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  STACK[0xD38] = a2;
  LODWORD(STACK[0xDE8]) = STACK[0xA7C];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((7565 * (STACK[0x8E0] != 0)) ^ v6))
                                                                                                - (v6 ^ 0xB45u)
                                                                                                + 650))(a1, 968960260, a3, a4, a5, a6, 0x1FCC246200528390);
}

uint64_t sub_1001A10D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  STACK[0x8C8] = *(_QWORD *)(v7 + 8 * v5) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (v5 + 1623))
                                                                                       - v6
                                                                                       + 4744))(a1, a2, a3, a4, a5, 0x73C92FE99193FD00);
}

uint64_t sub_1001A1138@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;

  return ((uint64_t (*)(void))(*(_QWORD *)(v66 + 8 * ((4186 * (v65 == a1 + a65 - 1993)) ^ a2)) - 4))();
}

uint64_t sub_1001A14C0()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (LODWORD(STACK[0x10B0]) ^ LODWORD(STACK[0x10B4]) ^ 0x961)) - 4))();
}

uint64_t sub_1001A1930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (v7)
    v10 = 1;
  else
    v10 = 0;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (((((v8 - 4415) | 0x1920) ^ 0x19B6) * v10) | v8)) - ((v8 + 2017) ^ 0x19BALL));
  LODWORD(STACK[0x840]) = 968960260;
  return v11(a1, 0x650A1ACFF3D440F1, 0x1AB9A3976D4E2359, 2528333815, 761700334, a6, a7, 2080289018);
}

uint64_t sub_1001A19F0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a1 + v1) ^ 0x909)) - 8);
  LODWORD(STACK[0x840]) = 968960260;
  return v3();
}

uint64_t sub_1001A1CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  char v7;
  int v8;
  uint64_t v9;
  int v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((58 * (((v10 == v8) ^ (a7 ^ v7)) & 1)) ^ (a7 - 2456))))(a1, a2, a3, a4, a5, a6, 0x1FCC246200528390);
}

uint64_t sub_1001A1E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  int v5;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;

  LODWORD(STACK[0xCD4]) = STACK[0x840];
  LOBYTE(STACK[0xAB7]) = v6;
  LODWORD(STACK[0xDF4]) = STACK[0x800];
  STACK[0xE50] = v7;
  LODWORD(STACK[0xE58]) = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (v5 - 3705))
                                                                                       - a5
                                                                                       + 972))(a1, 968960260, a2, a3, a4, 0x73C92FE99193FD00);
}

uint64_t sub_1001A1FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned int a6@<W8>)
{
  int v6;
  int v7;
  char v8;
  unint64_t v9;
  int v10;
  uint64_t v11;

  LODWORD(STACK[0xCD4]) = STACK[0x840];
  LOBYTE(STACK[0xAB7]) = v8;
  LODWORD(STACK[0xDF4]) = v7;
  STACK[0xE50] = v9;
  LODWORD(STACK[0xE58]) = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * v6)
                                                                                       - (v6 ^ a6)
                                                                                       + 6574))(a1, a2, a3, a4, a5, 0x73C92FE99193FD00);
}

uint64_t sub_1001A22F4()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((STACK[0x248] ^ 0x522) + STACK[0x248]))
                            - 8))();
}

uint64_t sub_1001A25E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  int64x2_t v11;
  int64x2_t v12;
  int64x2_t v13;
  uint64_t v14;
  int64x2_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;
  int64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int64x2_t v29;
  int64x2_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int64x2_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int64x2_t v37;
  int64x2_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int8x16_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int8x16_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int8x16_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int8x16_t v73;
  int8x16_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int8x16_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int8x16_t v94;
  int8x16_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int8x16_t v99;
  int8x16_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int8x16_t v133;
  uint64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int8x16_t v151;
  uint64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int64x2_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  uint64x2_t v169;
  int8x16_t v170;
  int8x16x4_t v172;

  v8.i64[0] = v5 + v0 - 15;
  v8.i64[1] = v5 + v0 - 16;
  v9.i64[0] = v5 + v0 - 13;
  v9.i64[1] = v5 + v0 - 14;
  v10.i64[0] = v5 + v0 - 11;
  v10.i64[1] = v5 + v0 - 12;
  v11.i64[0] = v5 + v0 - 9;
  v11.i64[1] = v5 + v0 - 10;
  v12.i64[0] = v5 + v0 - 5;
  v12.i64[1] = v5 + v0 - 6;
  v13.i64[0] = v5 + v0 - 3;
  v13.i64[1] = v5 + v0 - 4;
  *(int64x2_t *)&STACK[0x870] = v13;
  v14 = (v3 + 2464) + v5 + v6;
  v15.i64[0] = v0 + v14;
  v15.i64[1] = v5 + v0 - 2;
  *(int64x2_t *)&STACK[0x880] = v15;
  *(int8x16_t *)&STACK[0x840] = vorrq_s8((int8x16_t)vshlq_n_s64(v13, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v13, 8uLL));
  *(int64x2_t *)&STACK[0x850] = v12;
  *(int8x16_t *)&STACK[0x830] = vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v12, 8uLL));
  v16 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v8, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v8, 8uLL)), *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v17 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v9, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v9, 8uLL)), *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v18 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v10, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v10, 8uLL)), *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v19 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v11, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v11, 8uLL)), *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v20 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v17, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v17, *(int8x16_t *)&STACK[0x680])), *(int64x2_t *)&STACK[0x680]);
  v21 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v16, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v16, *(int8x16_t *)&STACK[0x680])), *(int64x2_t *)&STACK[0x680]);
  v22 = (int64x2_t)veorq_s8(v21, *(int8x16_t *)&STACK[0x670]);
  v23 = (int64x2_t)veorq_s8(v20, *(int8x16_t *)&STACK[0x670]);
  v24 = (int64x2_t)veorq_s8(v20, *(int8x16_t *)&STACK[0x660]);
  v25 = (int64x2_t)veorq_s8(v21, *(int8x16_t *)&STACK[0x660]);
  v26 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v23, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v23, 8uLL)), v24), *(int8x16_t *)&STACK[0x650]);
  v27 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v22, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v22, 8uLL)), v25), *(int8x16_t *)&STACK[0x650]);
  v28 = (int64x2_t)veorq_s8((int8x16_t)v27, vorrq_s8((int8x16_t)vshlq_n_s64(v25, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 0x3DuLL)));
  v29 = (int64x2_t)veorq_s8((int8x16_t)v26, vorrq_s8((int8x16_t)vshlq_n_s64(v24, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v24, 0x3DuLL)));
  v30 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v27, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v27, 8uLL)), v28), *(int8x16_t *)&STACK[0x6C0]);
  v31 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v26, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v26, 8uLL)), v29), *(int8x16_t *)&STACK[0x6C0]);
  v32 = (int64x2_t)veorq_s8((int8x16_t)v31, vorrq_s8((int8x16_t)vshlq_n_s64(v29, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v29, 0x3DuLL)));
  v33 = (int64x2_t)veorq_s8((int8x16_t)v30, vorrq_s8((int8x16_t)vshlq_n_s64(v28, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v28, 0x3DuLL)));
  v34 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v31, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v31, 8uLL)), v32), *(int8x16_t *)&STACK[0x6B0]);
  v35 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v30, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v30, 8uLL)), v33), *(int8x16_t *)&STACK[0x6B0]);
  v36 = (int64x2_t)veorq_s8((int8x16_t)v35, vorrq_s8((int8x16_t)vshlq_n_s64(v33, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v33, 0x3DuLL)));
  v37 = (int64x2_t)veorq_s8((int8x16_t)v34, vorrq_s8((int8x16_t)vshlq_n_s64(v32, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v32, 0x3DuLL)));
  v38 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v34, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v34, 8uLL)), v37);
  v39 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v35, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 8uLL)), v36);
  v40 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v39, 1uLL), *(int8x16_t *)&STACK[0x640]), v39), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v41 = vorrq_s8((int8x16_t)vshlq_n_s64(v36, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v36, 0x3DuLL));
  v42 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v38, 1uLL), *(int8x16_t *)&STACK[0x640]), v38), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v43 = (int64x2_t)veorq_s8((int8x16_t)v42, vorrq_s8((int8x16_t)vshlq_n_s64(v37, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v37, 0x3DuLL)));
  v44 = (int64x2_t)veorq_s8((int8x16_t)v40, v41);
  v45 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v40, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 8uLL)), v44);
  v46 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v42, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 8uLL)), v43);
  v47 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v46, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v46, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v48 = vorrq_s8((int8x16_t)vshlq_n_s64(v43, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 0x3DuLL));
  v49 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v45, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v45, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v50 = (int64x2_t)veorq_s8((int8x16_t)v49, vorrq_s8((int8x16_t)vshlq_n_s64(v44, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 0x3DuLL)));
  v51 = (int64x2_t)veorq_s8((int8x16_t)v47, v48);
  v52 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v47, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 8uLL)), v51);
  v53 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v50);
  v54 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v53, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v53, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v55 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v52, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v52, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v56 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v18, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v18, *(int8x16_t *)&STACK[0x680])), *(int64x2_t *)&STACK[0x680]);
  v172.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v54, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v54, vorrq_s8((int8x16_t)vshlq_n_s64(v50, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v50, 0x3DuLL)))), *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v8, 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v172.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v55, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v55, vorrq_s8((int8x16_t)vshlq_n_s64(v51, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 0x3DuLL)))), *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v9, 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v57 = (int64x2_t)veorq_s8(v56, *(int8x16_t *)&STACK[0x670]);
  v58 = (int64x2_t)veorq_s8(v56, *(int8x16_t *)&STACK[0x660]);
  v59 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v57, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 8uLL)), v58), *(int8x16_t *)&STACK[0x650]);
  v60 = (int64x2_t)veorq_s8((int8x16_t)v59, vorrq_s8((int8x16_t)vshlq_n_s64(v58, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 0x3DuLL)));
  v61 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v59, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 8uLL)), v60), *(int8x16_t *)&STACK[0x6C0]);
  v62 = (int64x2_t)veorq_s8((int8x16_t)v61, vorrq_s8((int8x16_t)vshlq_n_s64(v60, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 0x3DuLL)));
  v63 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v61, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 8uLL)), v62), *(int8x16_t *)&STACK[0x6B0]);
  v64 = (int64x2_t)veorq_s8((int8x16_t)v63, vorrq_s8((int8x16_t)vshlq_n_s64(v62, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 0x3DuLL)));
  v65 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v63, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 8uLL)), v64);
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v65, 1uLL), *(int8x16_t *)&STACK[0x640]), v65), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v67 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 0x3DuLL)));
  v68 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67);
  v69 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v68, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v68, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v70 = (int64x2_t)veorq_s8((int8x16_t)v69, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v71 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v69, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 8uLL)), v70);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v71, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v71, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v73 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v72, vorrq_s8((int8x16_t)vshlq_n_s64(v70, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 0x3DuLL))));
  v74 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v19, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v19, *(int8x16_t *)&STACK[0x680])), *(int64x2_t *)&STACK[0x680]);
  v172.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v73, *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v10, 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v75 = (int64x2_t)veorq_s8(v74, *(int8x16_t *)&STACK[0x670]);
  v76 = (int64x2_t)veorq_s8(v74, *(int8x16_t *)&STACK[0x660]);
  v77 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v76), *(int8x16_t *)&STACK[0x650]);
  v78 = (int64x2_t)veorq_s8((int8x16_t)v77, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL)));
  v79 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v78), *(int8x16_t *)&STACK[0x6C0]);
  v80 = (int64x2_t)veorq_s8((int8x16_t)v79, vorrq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 0x3DuLL)));
  v81 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), v80), *(int8x16_t *)&STACK[0x6B0]);
  v82 = (int64x2_t)veorq_s8((int8x16_t)v81, vorrq_s8((int8x16_t)vshlq_n_s64(v80, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 0x3DuLL)));
  v83 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v81, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 8uLL)), v82);
  v84 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v83, 1uLL), *(int8x16_t *)&STACK[0x640]), v83), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v85 = (int64x2_t)veorq_s8((int8x16_t)v84, vorrq_s8((int8x16_t)vshlq_n_s64(v82, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 0x3DuLL)));
  v86 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), v85);
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v86, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v86, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v88 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v85, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 0x3DuLL)));
  v89 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88);
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v89, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v89, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v91 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 0x3DuLL))));
  v90.i64[0] = v5 + v0 - 7;
  v90.i64[1] = v5 + v0 - 8;
  v172.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v91, *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v11, 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v92 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v93 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x830], *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v94 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x840], *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v95 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v15, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v15, 8uLL)), *(int8x16_t *)&STACK[0x860]), *(int64x2_t *)&STACK[0x890]);
  v96 = vsubq_s64((int64x2_t)vorrq_s8(v93, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v93, *(int8x16_t *)&STACK[0x680]));
  v97 = vsubq_s64((int64x2_t)vorrq_s8(v94, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v94, *(int8x16_t *)&STACK[0x680]));
  v98 = vsubq_s64((int64x2_t)vorrq_s8(v95, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v95, *(int8x16_t *)&STACK[0x680]));
  v99 = (int8x16_t)vaddq_s64(v96, *(int64x2_t *)&STACK[0x680]);
  v100 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v92, *(int8x16_t *)&STACK[0x690]), (int64x2_t)vorrq_s8(v92, *(int8x16_t *)&STACK[0x680])), *(int64x2_t *)&STACK[0x680]);
  v92.i64[0] = vqtbl4q_s8(v172, *(int8x16_t *)&STACK[0x710]).u64[0];
  v101 = (int64x2_t)veorq_s8(v100, *(int8x16_t *)&STACK[0x670]);
  v102 = (int64x2_t)veorq_s8(v99, *(int8x16_t *)&STACK[0x670]);
  v103 = (int64x2_t)veorq_s8(v99, *(int8x16_t *)&STACK[0x660]);
  v104 = (int64x2_t)veorq_s8(v100, *(int8x16_t *)&STACK[0x660]);
  v105 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), v103), *(int8x16_t *)&STACK[0x650]);
  v106 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v104), *(int8x16_t *)&STACK[0x650]);
  v107 = (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v108 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v103, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 0x3DuLL)));
  v109 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), v107), *(int8x16_t *)&STACK[0x6C0]);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v108), *(int8x16_t *)&STACK[0x6C0]);
  v111 = (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v112 = (int64x2_t)veorq_s8((int8x16_t)v109, vorrq_s8((int8x16_t)vshlq_n_s64(v107, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 0x3DuLL)));
  v113 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), v111), *(int8x16_t *)&STACK[0x6B0]);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 8uLL)), v112), *(int8x16_t *)&STACK[0x6B0]);
  v115 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v116 = (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL)));
  v117 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v116);
  v118 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v115);
  v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v118, 1uLL), *(int8x16_t *)&STACK[0x640]), v118), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v120 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v117, 1uLL), *(int8x16_t *)&STACK[0x640]), v117), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v121 = (int64x2_t)veorq_s8((int8x16_t)v120, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v122 = (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v123 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), v122);
  v124 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), v121);
  v125 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v124, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v124, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v126 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v123, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v123, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v127 = (int64x2_t)veorq_s8((int8x16_t)v126, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  v128 = (int64x2_t)veorq_s8((int8x16_t)v125, vorrq_s8((int8x16_t)vshlq_n_s64(v121, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 0x3DuLL)));
  v129 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 8uLL)), v128);
  v130 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 8uLL)), v127);
  v131 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v130, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v130, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v132 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v129, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v129, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v133 = (int8x16_t)vaddq_s64(v97, *(int64x2_t *)&STACK[0x680]);
  v172.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)))), *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v134 = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v132, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v132, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)))), *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x850], 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v135 = (int64x2_t)veorq_s8(v133, *(int8x16_t *)&STACK[0x670]);
  v136 = (int64x2_t)veorq_s8(v133, *(int8x16_t *)&STACK[0x660]);
  v137 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), v136), *(int8x16_t *)&STACK[0x650]);
  v138 = (int64x2_t)veorq_s8((int8x16_t)v137, vorrq_s8((int8x16_t)vshlq_n_s64(v136, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 0x3DuLL)));
  v139 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v137, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 8uLL)), v138), *(int8x16_t *)&STACK[0x6C0]);
  v140 = (int64x2_t)veorq_s8((int8x16_t)v139, vorrq_s8((int8x16_t)vshlq_n_s64(v138, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 0x3DuLL)));
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), v140), *(int8x16_t *)&STACK[0x6B0]);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v140, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v143 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v143, 1uLL), *(int8x16_t *)&STACK[0x640]), v143), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v146 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145);
  v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v146, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v146, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v148 = (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v149 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), v148);
  v150 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v149, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v149, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v151 = (int8x16_t)vaddq_s64(v98, *(int64x2_t *)&STACK[0x680]);
  v152 = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v148, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 0x3DuLL)))), *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x870], 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v153 = (int64x2_t)veorq_s8(v151, *(int8x16_t *)&STACK[0x670]);
  v154 = (int64x2_t)veorq_s8(v151, *(int8x16_t *)&STACK[0x660]);
  v155 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), v154), *(int8x16_t *)&STACK[0x650]);
  v156 = (int64x2_t)veorq_s8((int8x16_t)v155, vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL)));
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v155, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 8uLL)), v156), *(int8x16_t *)&STACK[0x6C0]);
  v158 = (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v156, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 0x3DuLL)));
  v159 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), v158), *(int8x16_t *)&STACK[0x6B0]);
  v160 = (int64x2_t)veorq_s8((int8x16_t)v159, vorrq_s8((int8x16_t)vshlq_n_s64(v158, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL)));
  v161 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), v160);
  v162 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v161, 1uLL), *(int8x16_t *)&STACK[0x640]), v161), *(int64x2_t *)&STACK[0x630]), *(int8x16_t *)&STACK[0x620]);
  v163 = (int64x2_t)veorq_s8((int8x16_t)v162, vorrq_s8((int8x16_t)vshlq_n_s64(v160, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 0x3DuLL)));
  v164 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), v163);
  v165 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v164, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v164, 1uLL), *(int8x16_t *)&STACK[0x610])), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v166 = (int64x2_t)veorq_s8((int8x16_t)v165, vorrq_s8((int8x16_t)vshlq_n_s64(v163, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 0x3DuLL)));
  v167 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v165, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 8uLL)), v166);
  v168 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v167, (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v167, 1uLL), *(int8x16_t *)&STACK[0x5E0])), *(int64x2_t *)&STACK[0x5D0]), *(int8x16_t *)&STACK[0x5C0]);
  v169 = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v168, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v168, vorrq_s8((int8x16_t)vshlq_n_s64(v166, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 0x3DuLL)))), *(int8x16_t *)&STACK[0x5B0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x880], 3uLL), *(int8x16_t *)&STACK[0x6A0])));
  v15.i64[0] = vqtbl4q_s8(v172, *(int8x16_t *)&STACK[0x710]).u64[0];
  v15.i64[1] = v92.i64[0];
  v166.i64[0] = 0xF6F6F6F6F6F6F6F6;
  v166.i64[1] = 0xF6F6F6F6F6F6F6F6;
  v170 = vrev64q_s8((int8x16_t)v15);
  *(int8x16_t *)(v0 + v14 - 0x155836B1AA5B99D8) = veorq_s8(vextq_s8(v170, v170, 8uLL), vaddq_s8(*(int8x16_t *)(v4 + v14 - 15), (int8x16_t)v166));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((476 * (v2 + 16 != v1)) ^ v3)) - 4))();
}

uint64_t sub_1001A336C()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x4C8])(16) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 * (v0 - 5715)) ^ v0)) - 4))();
}

uint64_t sub_1001A3BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  *(_QWORD *)STACK[0x3E0] = a2;
  *(_DWORD *)STACK[0x3F0] = STACK[0x420];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * v6))(a1, 968960260, a3, a4, a5, a6, 0x1FCC246200528390);
}

uint64_t sub_1001A3DB4(uint64_t a1, int a2)
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x708] + 8 * a2) - (a2 ^ 0xC74u) + 2824))(72);
}

uint64_t sub_1001A3EC0@<X0>(int a1@<W4>, unint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;

  STACK[0x870] = a2;
  LODWORD(STACK[0x4B0]) = a1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x708] + 8 * (v3 ^ (52 * (v2 < 8)))) - 4))(1893);
}

uint64_t sub_1001A4934@<X0>(uint64_t a1@<X2>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(a3
                                                                      + 8
                                                                      * (((((a2 - 2071389038) & 0x7B76D76E) - 1874)
                                                                        * (a1 == v4)) ^ a2))
                                                          - 23 * (a2 ^ v3)
                                                          + 6574))(1893, (a2 - 2071389038) & 0x7B76D76E, 23 * (a2 ^ v3));
}

uint64_t sub_1001A6230@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + 996)) - ((v1 + a1) & 0x89E73775) + 1553))();
}

uint64_t sub_1001A8BC4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - ((v0 - 808) ^ 0x773)))();
}

uint64_t sub_1001A9004@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v9;

  if (v2 == 32755)
  {
    v9 = STACK[0xCC8];
    STACK[0xCB0] = v3;
    LODWORD(STACK[0x8F4]) = a2;
    STACK[0xD18] = v9 + v4;
    return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v6 - 702)) - 4))();
  }
  else if (v2 == 47199 || v2 == 43949)
  {
    STACK[0xCB0] = v3;
    LODWORD(STACK[0x8F4]) = a2;
    return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v6 - 4521)) - 8))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 == a1) * (((v6 - 4528) | 0x10BC) ^ 0x1C38)) ^ (v6 - 2145)))
                              - ((v6 - 4605) ^ 0x7BDLL)))();
  }
}

uint64_t sub_1001A9414@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  if (v1 == v2)
  {
    STACK[0x948] = a1;
    return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                          + 8
                                          * ((11 * (LODWORD(STACK[0xB50]) == ((v4 - 4915) ^ 0x679))) ^ (v4 - 5520)))
                              - 4))();
  }
  else if (v1 == 47199 || v1 == 43949)
  {
    STACK[0x948] = a1;
    return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 - 5602)) - 8))();
  }
  else
  {
    LODWORD(STACK[0xC1C]) = v3;
    return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 - 5223)) - (v4 - 6112) + 458))();
  }
}

uint64_t sub_1001AB010@<X0>(unint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;

  STACK[0xB78] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * a2) - 4))();
}

uint64_t sub_1001AB058@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0xA14]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * a1) - 4))();
}

uint64_t sub_1001ABC5C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x63C ^ (4172 * (a1 != 0))))
                            - ((((v1 ^ 0x63C) - 1562) | 0x2Cu) ^ 0x224)))();
}

uint64_t sub_1001ABCA0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - (a1 ^ 0x224)))();
}

uint64_t sub_1001AC080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)(v2 + a2 - 0x73C92FE99193FCC8) = (*(_BYTE *)(v3 + a2 + 0x4A90F468A3A5F4E8) - 60) ^ *(_BYTE *)(v6 + (a2 & 0xF)) ^ *(_BYTE *)((a2 & 0xF) + v7 + 1) ^ ((a2 & 0xF) * v8) ^ *(_BYTE *)(a1 + (a2 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((35 * (a2 == v4 - 1492)) ^ v5)) - 8))();
}

uint64_t sub_1001AC388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,unsigned int a53)
{
  int v53;
  int v54;
  uint64_t v55;

  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * ((v54 - 2924) ^ (28 * v53))) - a53 + 328))();
}

uint64_t sub_1001AC670()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0xEB8] = v1;
  v3 = STACK[0xD20];
  STACK[0xEC0] = STACK[0xD20];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - v3 > (unint64_t)((v0 + 919334902) & 0xC9341BFE) - 6569)
                                * (((v0 - 3256) | 0x1A) ^ 0x1ED8)) ^ v0)))();
}

uint64_t sub_1001AC890@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xC1C]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 - 5223)) - (v1 ^ (2 * a1)) + 458))();
}

uint64_t sub_1001AC9F0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(STACK[0xDD0] + 24);
  STACK[0xD88] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v3 != 0) * ((a1 | 0x1902) ^ 0x1903)) ^ v1)) - 8))();
}

uint64_t sub_1001ADF48@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;

  *v2 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v3) - 9 * (v3 ^ v1) + 3349))();
}

uint64_t sub_1001ADFFC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0xD08] - 0x1FCC246200528390) = a1;
  return (*(uint64_t (**)(void))(v2 + 8 * v1))();
}

uint64_t sub_1001AE070@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(STACK[0xD08] - 0x1FCC246200528388) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v1) - v2 + 1387))();
}

uint64_t sub_1001AE1DC@<X0>(_QWORD *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  *v17 = v16;
  *(_QWORD *)(v16 + 8) = *a1;
  *a1 = v16;
  return (*(uint64_t (**)(void))(v18 + 8 * a16))();
}

uint64_t sub_1001AE344@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  uint64_t v4;

  STACK[0xC20] = a2 + v3 - 3175 - 479;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((6330 * (v2 == a1)) ^ v3)) - (v3 ^ 0xE22)))();
}

uint64_t sub_1001AE88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 + 8 * (v5 + 957))
                                                                             - (3 * a5)
                                                                             + 1553))(a1, a2, a3, a4, (3 * a5));
}

uint64_t sub_1001AE974()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((5954 * (((v2 + (v1 ^ 0x60Au) - 450) ^ LODWORD(STACK[0xD84])) > 0xF)) ^ v0))
                            - 4))();
}

uint64_t sub_1001AEC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (v4 ^ 0x5F5u))
                                                                             - ((173 * (v4 ^ 0x106u)) ^ 0x611)))(a1, a2, a3, a4, 173 * (v4 ^ 0x106u));
}

uint64_t sub_1001AED00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(v7 - 0x73C92FE99193FD00);
  STACK[0xD18] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v10 != a7) * ((v8 - 1621264938) & 0x60A28A7D ^ 0x120)) ^ v8))
                            - 4))();
}

uint64_t sub_1001AEF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 + 8 * (v5 ^ 0x5C8)) - 4))(a1, a2, a3, a4, (3 * a5));
}

uint64_t sub_1001B1388(unint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v10)(__n128, __n128, __n128, __n128, __n128, __n128, __n128);

  v10 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v8 + 8 * v7)
                                                                                       - (v6 ^ 0x453));
  STACK[0x330] = a1;
  return v10(a2, a3, a4, a5, a6, a2, a3);
}

uint64_t sub_1001B22F0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (v0 - 1207)))();
}

uint64_t sub_1001B22FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v24 = v9 - 1;
  v25 = v11 + v24;
  v26 = (((a1 + v24) << (((v10 + v20) & a8) + v14)) & 0xF800000000000000 | ((unint64_t)(a1 + v24) >> 8))
      + a5;
  v27 = (a4 | (2 * v26)) - v26 + a9;
  v28 = v27 ^ a7;
  v27 ^= 0xD0273C98FBB7BD84;
  v29 = __ROR8__(v28, 8);
  v30 = (((2 * (v29 + v27)) | 0x17AB6D2EA88FB1B8) - (v29 + v27) + 0x742A4968ABB82724) ^ 0xE50F553F59EE1AFLL;
  v31 = v30 ^ __ROR8__(v27, 61);
  v32 = (__ROR8__(v30, 8) + v31) ^ 0x17D9A711A491E013;
  v33 = v32 ^ __ROR8__(v31, 61);
  v34 = (__ROR8__(v32, 8) + v33) ^ v12;
  v35 = v34 ^ __ROR8__(v33, 61);
  v36 = (__ROR8__(v34, 8) + v35) ^ v23;
  v37 = __ROR8__(v11 + v24, 8);
  v38 = v36 ^ __ROR8__(v35, 61);
  v39 = ((v17 - (v37 & 0xF8FFFFFFFFFFFFFFLL)) & v15)
      + (v37 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x3D2A307445A1208CLL
      - (((v37 & 0xF8FFFFFFFFFFFFFFLL) - 0x3D2A307445A1208CLL) & v15);
  v40 = v39 ^ 0x2DB3DD7C2E6E71EBLL;
  v39 ^= 0x3B1DA121FC988A4DuLL;
  v41 = __ROR8__(v40, 8);
  v42 = (v16 - ((v41 + v39) | v16) + ((v41 + v39) | 0xF60CE8A0629A3909)) ^ 0x6365C30FE9BCD1ELL;
  v43 = (__ROR8__(v36, 8) + v38) ^ a3;
  v44 = v42 ^ __ROR8__(v39, 61);
  v45 = (__ROR8__(v42, 8) + v44) ^ 0xE6DA80768B98C298;
  v46 = v43 ^ __ROR8__(v38, 61);
  v47 = v45 ^ __ROR8__(v44, 61);
  v48 = __ROR8__(v43, 8);
  v49 = (__ROR8__(v45, 8) + v47) ^ a2;
  v50 = v49 ^ __ROR8__(v47, 61);
  v51 = __ROR8__(v49, 8);
  v52 = (a6 - ((v48 + v46) | a6) + ((v48 + v46) | 0xBECAD74CE67BE76CLL)) ^ 0x65D6900C599DE4FDLL;
  v53 = (((2 * (v51 + v50)) | 0xD7AC4575F86FB200) - (v51 + v50) - 0x6BD622BAFC37D900) ^ 0x9FD98E7D5465E162;
  v54 = v53 ^ __ROR8__(v50, 61);
  v55 = __ROR8__(v53, 8);
  v56 = __ROR8__(v52, 8) + (v52 ^ __ROR8__(v46, 61));
  v57 = (((2 * ((v55 + v54) ^ 0x682381A80DFF1654)) & 0xC18E559F74C6FF74)
       - ((v55 + v54) ^ 0x682381A80DFF1654)
       - 0x60C72ACFBA637FBBLL) ^ 0xD82662306DE22DB1;
  v58 = v57 ^ __ROR8__(v54, 61);
  v59 = __ROR8__(v57, 8);
  v60 = (v59 + v58 - ((2 * (v59 + v58)) & 0xBED2330359FF9EBELL) + 0x5F691981ACFFCF5FLL) ^ 0xC04CDA383A1ADE43;
  v61 = v60 ^ __ROR8__(v58, 61);
  v62 = __ROR8__(v60, 8);
  *(_BYTE *)(v25 + v19) = (((((2 * (v62 + v61)) | 0x3D97C9085B558D26) - (v62 + v61) + 0x61341B7BD255396DLL) ^ 0xDAE96978151DB799) >> ((8 * v25) & 0x38)) ^ (((v21 - (v56 | v21) + (v56 | 0x11DE373259D9A297)) ^ 0x6E6D8E6AC743C13FLL) >> ((8 * (a1 + v24)) & 0x38)) ^ *(_BYTE *)(a1 + v24);
  return (*(uint64_t (**)(void))(v22 + 8 * (((v24 != 0) * v18) ^ (v10 + v13))))();
}

uint64_t sub_1001B2768()
{
  int v0;
  uint64_t v1;

  STACK[0x8C0] = STACK[0xF98];
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 - 3965)))();
}

uint64_t sub_1001B2780(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4
                                                     + 8
                                                     * (((((v3 - 1959502102) & 0x74CB9E2E) - 3530) * (v2 != a2)) ^ v3))
                                         - 8))(LODWORD(STACK[0x494]));
}

uint64_t sub_1001B27F4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  STACK[0x8C0] = 0x155836B1AA5B99C9;
  LODWORD(STACK[0x8F4]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * a1) - (a1 + 1649) + 3618))();
}

uint64_t sub_1001B2B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;

  *(_QWORD *)STACK[0x1008] = a6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * v6)
                                                                                       - (v6 + 2488)
                                                                                       + 6570))(a1, a2, a3, a4, a5, 0x73C92FE99193FD00);
}

uint64_t sub_1001B2CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;
  unint64_t v66;

  v66 = *(_QWORD *)(STACK[0xD68] + 24);
  STACK[0xA48] = v66;
  return (*(uint64_t (**)(void))(v65 + 8 * ((6007 * (((v66 == 0) ^ (a65 - 114)) & 1)) ^ a65)))();
}

uint64_t sub_1001B30C4@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  STACK[0xFB8] = v2;
  v4 = STACK[0xAE0];
  STACK[0xFC0] = STACK[0xAE0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 - v4 > 9) * (286 * ((a1 | 0x12B) ^ 0x13C) - 6527)) ^ v1))
                            - 4))();
}

uint64_t sub_1001B31B4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0xCB8] + 24);
  STACK[0x9D8] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * ((143 * (v0 ^ 0x40D)) ^ 0x1A4C)) ^ v0)) - 4))();
}

uint64_t sub_1001B3764@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  _QWORD *v4;
  uint64_t v5;

  *v4 = v2;
  *(_QWORD *)(v2 + 8) = *a1;
  *a1 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * v1) - 253 * (v1 ^ v3) + 6570))();
}

uint64_t sub_1001B379C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _BOOL4 v5;
  uint64_t v6;

  STACK[0x4C0] = v1;
  v5 = STACK[0x10E8] != 0xAC3481600FFE2860 && STACK[0x1108] != 0x155836B1AA5B99C9 && STACK[0x1110] != 0;
  v6 = *(_QWORD *)(v2 + 8 * ((v5 * (LODWORD(STACK[0x10F4]) + 4154)) ^ LODWORD(STACK[0x10FC])));
  STACK[0xE10] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t))(v6 - (LODWORD(STACK[0x10F8]) ^ 0x19C5)))(a1, 968960260);
}

uint64_t sub_1001B3880()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x4C8])(32);
  STACK[0xE10] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((((v0 + 615139923) ^ (v2 == 0)) & 1) == 0) * (v0 - 3026)) ^ v0))
                            - 8))();
}

uint64_t sub_1001B3920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v6 + 8 * v4)
                                                                                       - v5
                                                                                       + 3779))(a1, a2, a3, a4, 0xFCA101FF51E67595);
}

uint64_t sub_1001B5120(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t))(v4 + 8 * (v2 + v3 - 926)))(a1, a2, 0xE903C8F453667716, 0xF481E47A29B33B8BLL);
}

uint64_t sub_1001B7168()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  if (v0)
    v4 = 0;
  else
    v4 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((221 * v4) ^ v1)) - (v2 ^ 0xEB6)))();
}

uint64_t sub_1001B7610()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((STACK[0xA08] == 0) | (4 * (STACK[0xA08] == 0))) ^ (v0 - 2225)))
                            - 4))();
}

uint64_t sub_1001B7650()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 4))(v2);
}

uint64_t sub_1001B767C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xFD4]) = v1;
  STACK[0xC20] = STACK[0xC20] + (a1 ^ 0x1868u) - 506;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 - 2956) ^ (6976 * (v1 == 968960260)))) - (v2 ^ 0x180Du) + 443))();
}

uint64_t sub_1001B88B0@<X0>(uint64_t a1@<X5>, unint64_t *a2@<X8>)
{
  int v2;
  uint64_t v3;
  unint64_t v4;

  STACK[0xA80] = (unint64_t)a2;
  v4 = *a2;
  STACK[0xBE0] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1400 * (((v4 == a1) ^ (v2 + 1)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_1001B8B7C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0xC3C]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((((v3 + 1522) | 0x10B2) - 5556) ^ (v3 - 472057619) & 0x1C231DB6)
                                          * (v2 != a2)) ^ v3))
                            - 4))();
}

uint64_t sub_1001B926C(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  v7 = v5 ^ v4;
  STACK[0xFF8] = v7;
  *(_DWORD *)(v1 + 16) = ((v2 + 3806) ^ 0x19B8) + v7;
  v8 = ((uint64_t (*)(void))STACK[0x4C8])();
  *(_QWORD *)(v1 + 24) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((7182 * (v8 != 0)) ^ v2)) - v3 + 621))();
}

uint64_t sub_1001B9354()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((636 * (*(_QWORD *)(STACK[0xCC0] + 24) != 0)) ^ v0)))();
}

uint64_t sub_1001B938C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1000035BC();
  *(_QWORD *)(v0 + 24) = 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * v1))(v3);
}

uint64_t sub_1001B9920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,int a48)
{
  uint64_t v48;

  STACK[0xA88] = *(_QWORD *)(v48 + 8 * a47) + ((a48 | 0x842u) ^ 0xFFFFFFFFFFFFF58ALL);
  return (*(uint64_t (**)(void))(v48 + 8 * a46))();
}

uint64_t sub_1001B9EBC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((52 * (STACK[0xB78] != 0)) | (v0 - 2343))) - 4))();
}

uint64_t sub_1001B9EE8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 4))(v2);
}

uint64_t sub_1001B9EF8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((7623 * (STACK[0xD48] != 0)) ^ (v0 - 4023))) - 4))();
}

uint64_t sub_1001B9F20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * v0) - 4))(v2);
}

uint64_t sub_1001B9F30()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2344 * (STACK[0xCF0] != 0)) ^ (v0 - 4979)))
                            - ((v0 - 4979) ^ 0x63BLL)))();
}

uint64_t sub_1001B9F6C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1000035BC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v1) - v0 + 6581))(v3);
}

uint64_t sub_1001B9F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  uint64_t v55;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * v54) - ((23 * (v54 ^ 0x18A7u)) ^ 0x19B6)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

void sub_1001B9FB0()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = v0;
}

void sub_1001BA00C(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)a1)
    v2 = *(_QWORD *)(a1 + 16) == 0;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(a1 + 8) + 753993959 * (((a1 | 0xE8F8630D) - a1 + (a1 & 0x17079CF2)) ^ 0x3720912C);
  __asm { BR              X14 }
}

uint64_t sub_1001BA0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(a7 + v7) = ((2 * v8) ^ 0x42 ^ *(_BYTE *)(v9 + v7) ^ 0xBC) - 11 * v7 + ((2 * *(_BYTE *)(v9 + v7)) & 0x94);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v8 - 12) ^ (4 * ((v7 != 15) | (4 * (v7 != 15)))))) - 4))();
}

uint64_t sub_1001BA2C4(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 120) = a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v5 ^ (3598 * (((2 - (a1 + a2)) & 3) != 0)))) - 4))();
}

uint64_t sub_1001BA364()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (30 * (v1 == 1)))) - 4))();
}

uint64_t sub_1001BA3C8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (440 * (v1 == 2)))))();
}

uint64_t sub_1001BA438()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 4))();
}

uint64_t sub_1001BB7E0@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned __int8 v7;
  char v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  *(_DWORD *)(a1 + 4 * v7) = v10 ^ v11 ^ v4 ^ v9 ^ *(_DWORD *)(v5 + 4 * ((v7 ^ v8) ^ 0x59u)) ^ (v7 ^ v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (a2 ^ (2 * (v6 + 1 != (a2 ^ v2 ^ (v3 - 865)))))) - 8))();
}

uint64_t sub_1001BBCC8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(*(_QWORD *)(v1
                                     + 8
                                     * ((((v0 - 1411830804) & 0x5426D7F3 ^ 0x172A)
                                       * ((*(uint64_t (**)(uint64_t))(v2 - 128))(1028) != 0)) ^ v0))
                         - 8);
  return v3();
}

uint64_t sub_1001BBD34()
{
  uint64_t v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * v1) - 8))();
}

uint64_t sub_1001BC0A4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  *(_DWORD *)(v3 - 92) = a1;
  v4 = (*(uint64_t (**)(uint64_t))(v3 - 128))(1032) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((51 * ((v4 ^ (v1 - 36)) & 1)) ^ v1)))();
}

uint64_t sub_1001BC254()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = (v0 + 405858454) & 0xE7CF1F3E;
  v4 = (*(uint64_t (**)(uint64_t))(v2 - 128))(1028) != 0;
  *(_DWORD *)(v2 - 92) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(((v3 - 151) * v4) ^ v0)) - 4))();
}

uint64_t sub_1001BF610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v16)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v14 = v11;
  v15 = *(_DWORD *)(v12 - 92);
  *(_QWORD *)(v12 - 112) = (v15 - 1121209403) & 0x42D446DE;
  v16 = (void (*)(uint64_t))((char *)*(&off_100236540 + (v15 ^ 0xDB7)) - 740335503);
  v18 = v8;
  v19 = v9;
  v20 = v10;
  v16(a2);
  v16(a5);
  v16(v20);
  v16(*(_QWORD *)(v12 - 104));
  v16(v18);
  v16(v13);
  v16(v19);
  v22 = ((uint64_t (*)(uint64_t))v16)(a8);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * v15) - (*(_QWORD *)(v12 - 112) ^ 0x6DELL)))(v22);
}

void sub_1001BF71C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (723759307 * (((a1 | 0x22C0A941) - (_DWORD)a1 + (a1 & 0xDD3F56BE)) ^ 0xD3121832));
  __asm { BR              X9 }
}

uint64_t sub_1001BF804@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * a1) - ((364 * (a1 ^ 0x1059)) ^ 0x155CLL)))();
}

uint64_t sub_1001BF828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v3 - 3283)) - 891584663))(a1, *(_QWORD *)(v1 + 8 * (v3 - 3833)) - 821657819);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v3) - ((v3 - 3078) | 0x1104u) + 5452))(v4);
}

uint64_t sub_1001BF874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, unsigned int a10)
{
  uint64_t v10;
  int v11;
  uint64_t v12;

  a10 = (v11 + 1985906298) ^ (753993959
                            * (((&a9 | 0xD5DD3C0B) - &a9 + (&a9 & 0x2A22C3F4)) ^ 0xA05CE2A));
  sub_100002C08((uint64_t)&a9);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * ((3496 * (a9 != 5)) ^ v11)) - 4))(v12);
}

uint64_t sub_1001BF910()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * v1) - 4))();
}

void sub_1001BF9A4(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 1800242513 * ((a1 & 0x9E1D9308 | ~(a1 | 0x9E1D9308)) ^ 0x384304D9);
  __asm { BR              X10 }
}

uint64_t sub_1001BFA68@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v5 = a2 + v2;
  v6 = ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v5 ^ 0x616)) - 891584663))(a1, *(_QWORD *)(v3 + 8 * (v5 ^ 0x5A2)) - 1127876123);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * v5) - ((v5 + 5171) ^ 0x19CCLL)))(v6);
}

void sub_1001BFB1C(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v4;

  v1 = 295199341 * ((a1 - 2 * (a1 & 0xA8EC5015) - 1460908011) ^ 0x4784585D);
  if (*(_QWORD *)(a1 + 16))
    v2 = *(_QWORD *)(a1 + 32) == 0;
  else
    v2 = 1;
  v4 = !v2 && (*(_DWORD *)(a1 + 24) + v1 - 89784371) < 0xFFFFFFF0;
  __asm { BR              X14 }
}

uint64_t sub_1001BFBF8@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4, int a5, char a6, int a7, uint64_t a8, unsigned int a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  uint64_t v20;

  v17 = *(_BYTE *)(v14 + 8) + v13;
  v18 = *(_DWORD *)(v14 + 4) - v13;
  v19 = 1491908057 * ((~&a3 & 0x3325EBF | &a3 & 0xFCCDA140) ^ 0x6FF60545);
  a9 = -2096715630 - v19;
  a6 = (-39 * ((~&a3 & 0xBF | &a3 & 0x40) ^ 0x45)) ^ (((2 * v17) & 0x9C ^ 4)
                                                                                      + (v17 ^ 0xFC)) ^ 0x80;
  a10 = v10;
  a7 = (v12 - ((2 * v12 + 1967914938) & 0x5129C346) + 591061376) ^ v19;
  a8 = a1;
  a3 = v19 - 2035190301 * v18 - ((224586694 * v18 + 1100901634) & 0x5129C346) + 1231296548;
  a4 = (v15 - 2999) ^ v19;
  v20 = ((uint64_t (*)(int *))(*(_QWORD *)(v11 + 8 * (v15 ^ 0x10D2)) - 837550282))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * v15) - 8))(v20);
}

void sub_1001BFD20()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = v0;
}

void sub_1001BFD54(uint64_t a1)
{
  int v1;

  v1 = 295199341 * ((-2 - ((~(_DWORD)a1 | 0x5A045A10) + (a1 | 0xA5FBA5EF))) ^ 0xB56C5258);
  __asm { BR              X10 }
}

uint64_t sub_1001BFE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((186 * (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a1 + 40))) ^ v9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1001BFE98@<X0>(_BYTE *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = *a1;
  *(_BYTE *)(v3 - 175) = a1[1];
  *(_BYTE *)(v3 - 174) = a1[2];
  *(_BYTE *)(v3 - 173) = a1[3];
  *(_BYTE *)(v3 - 172) = a1[4];
  *(_BYTE *)(v3 - 171) = a1[5];
  *(_BYTE *)(v3 - 170) = a1[6];
  *(_BYTE *)(v3 - 169) = a1[7];
  *(_BYTE *)(v3 - 168) = a1[8];
  *(_BYTE *)(v3 - 167) = a1[9];
  *(_BYTE *)(v3 - 166) = a1[10];
  *(_BYTE *)(v3 - 165) = a1[11];
  *(_BYTE *)(v3 - 164) = a1[12];
  *(_BYTE *)(v3 - 163) = a1[13];
  *(_BYTE *)(v3 - 162) = a1[14];
  *(_BYTE *)(v3 - 161) = a1[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - (v1 + 1725) + 3301))();
}

uint64_t sub_1001BFF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  BOOL v20;
  int v22;

  if (a18)
    v20 = a9 == 0;
  else
    v20 = 1;
  v22 = !v20 && *(_QWORD *)(a1 + 32) != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * ((6612 * v22) ^ v18)) - ((v18 + 2886) ^ 0x183BLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a1, a11, a12);
}

uint64_t sub_1001BFF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  _BOOL4 v18;

  v15 = v13 - 851568077 * (*a9 - v11) - ((-1703136154 * (*a9 - v11) + 372526644) & 0x84FDC1D4) - 845612265;
  v16 = ((2 * v15) & 0xD5BA9F76 ^ 0x84B88154) + (v15 ^ 0x28A3AF51);
  v18 = (((_BYTE)v16 + 5) & 0xF) == (v12 ^ 0x14DE ^ v12 ^ 0x968 ^ 0x1DB6) && v16 != 1792888763;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * (int)(v12 ^ (32 * (v18 & 0xFFFFFFF7 | (8 * v18))))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1001C0050@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  int v61;
  unint64_t v62;
  uint64_t v64;

  *(_DWORD *)(v56 - 252) = 0;
  *(_QWORD *)(v56 - 248) = 0;
  v57 = (char *)*(&off_100236540 + (v54 ^ 0x79B)) - 1876987934;
  v58 = (char *)*(&off_100236540 + (v54 ^ 0x6FB)) - 1320445694;
  v59 = (char *)*(&off_100236540 + v54 - 696) - 1899237387;
  v60 = (char *)*(&off_100236540 + v54 - 1313) - 1563094142;
  v61 = v58[*a1 ^ 0xA9];
  HIDWORD(v62) = v61 ^ 0x1D;
  LODWORD(v62) = (v61 ^ 0x20) << 24;
  *(_DWORD *)(v56 - 256) = (v60[a1[3] ^ 0x72] ^ 0x7C) & 0xFFFF00FF | ((v59[a1[1] ^ 0xALL] ^ 0xE4) << 16) & 0xFF00FF | (((v62 >> 29) ^ 0xF9) << 24) | ((v57[a1[2] ^ 0x6ELL] ^ 0xF4) << 8);
  HIDWORD(v64) = v53 - 1792888763;
  LODWORD(v64) = 1970632053;
  return ((uint64_t (*)(uint64_t, char *, char *, char *, uint64_t, _QWORD, char *, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * v54) - 4))(183, v60, v57, v58, 29, (v54 - 348) | 0x8C4u, v59, 92, a2, v64, v60, v59, v58, v57, v55, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1001C0764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  __int128 v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  char *v163;
  char *v164;
  unsigned int v165;
  char *v166;
  char *v167;
  int v168;
  int v169;
  char *v170;
  unsigned int v171;
  int v172;
  int v173;
  uint64_t v174;
  unsigned __int8 v175;
  int v176;
  int v177;
  unsigned __int8 v178;
  uint64_t v179;
  int v180;
  unsigned __int8 v181;
  int v182;
  unsigned int v183;
  char *v184;
  uint64_t v185;
  char *v186;
  int v187;
  char *v188;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unsigned int v228;
  uint64_t v229;
  int v230;
  __int16 v231;

  HIDWORD(v199) = a6;
  HIDWORD(a18) = 0;
  LODWORD(v194) = a6 - 1896;
  v229 = (a6 - 1896) ^ 0x38DB6D4 ^ v73;
  v75 = (__ROR8__(a16 + v229, 8) & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56;
  v190 = a6 ^ 0x14DEu;
  v76 = v190 ^ v75 ^ 0xBD7E06799BE57C6BLL;
  v75 ^= 0x8F41F671013B3EEALL;
  v77 = (__ROR8__(v76, 8) + v75) ^ 0x858543C4A1D93973;
  v78 = v77 ^ __ROR8__(v75, 61);
  v79 = (__ROR8__(v77, 8) + v78) ^ 0x17D9A711A491E013;
  v80 = v79 ^ __ROR8__(v78, 61);
  v81 = v80 + __ROR8__(v79, 8);
  v82 = v81 ^ __ROR8__(v80, 61);
  v83 = ((v82 ^ 0x19D8A247FDB338A4) + __ROR8__(v81 ^ 0x19D8A247FDB338A4, 8)) ^ 0x98BAA5DD2515B1FFLL;
  *((_QWORD *)&v84 + 1) = v82 ^ 0x19D8A247FDB338A4;
  *(_QWORD *)&v84 = v82;
  v85 = (8 * (a16 + ((a6 - 104) ^ 0xD4 ^ v73))) & 0x38;
  v86 = v83 ^ (v84 >> 61);
  v87 = (v86 + __ROR8__(v83, 8)) ^ 0xBDC40B7C2F73B18BLL;
  v88 = v87 ^ __ROR8__(v86, 61);
  v89 = (__ROR8__(v87, 8) + v88) ^ 0xDB1C4740BFE60391;
  v90 = (((v89 ^ __ROR8__(v88, 61)) + __ROR8__(v89, 8)) ^ 0x7FB3B9589E9A63A8) >> v85;
  v91 = (__ROR8__(a16 + v229 + 8, 8) & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56;
  *(_QWORD *)&v84 = __ROR8__(v91 ^ 0xBD7E06799BE56458, 8);
  v91 ^= 0x8F41F671013B3EEALL;
  v92 = __ROR8__((v84 + v91) ^ 0x858543C4A1D93973, 8);
  v93 = (v84 + v91) ^ 0x858543C4A1D93973 ^ __ROR8__(v91, 61);
  v94 = v92 + v93;
  v95 = (v92 + v93) ^ __ROR8__(v93, 61);
  v96 = ((v95 ^ 0x17D9A711A491E013) + __ROR8__(v94 ^ 0x17D9A711A491E013, 8)) ^ 0x19D8A247FDB338A4;
  *((_QWORD *)&v84 + 1) = v95 ^ 0x17D9A711A491E013;
  *(_QWORD *)&v84 = v95;
  v97 = v96 ^ (v84 >> 61);
  v98 = (v97 + __ROR8__(v96, 8)) ^ 0x98BAA5DD2515B1FFLL;
  v99 = v98 ^ __ROR8__(v97, 61);
  v100 = (__ROR8__(v98, 8) + v99) ^ 0xBDC40B7C2F73B18BLL;
  v101 = v100 ^ __ROR8__(v99, 61);
  v102 = (v101 + __ROR8__(v100, 8)) ^ 0xDB1C4740BFE60391;
  v103 = ((v102 ^ __ROR8__(v101, 61)) + __ROR8__(v102, 8)) ^ 0x7FB3B9589E9A63A8;
  LOBYTE(v102) = v85 ^ 0x3E;
  v104 = v103 << (v85 ^ 0x3Eu);
  v105 = v103 >> v85;
  v106 = v90 + 4 * v104;
  v107 = (__ROR8__(a16 + v229 + 16, 8) & 0xF8FFFFFFFFFFFFFFLL) + 0x4647FE01135BCB56;
  *(_QWORD *)&v84 = __ROR8__(v107 ^ 0xBD7E06799BE56458, 8);
  v107 ^= 0x8F41F671013B3EEALL;
  v108 = __ROR8__((v84 + v107) ^ 0x858543C4A1D93973, 8);
  v109 = (v84 + v107) ^ 0x858543C4A1D93973 ^ __ROR8__(v107, 61);
  v110 = v109 + v108;
  v111 = (v109 + v108) ^ __ROR8__(v109, 61);
  *((_QWORD *)&v84 + 1) = v111 ^ 0x17D9A711A491E013;
  *(_QWORD *)&v84 = v111;
  v112 = ((v111 ^ 0x17D9A711A491E013) + __ROR8__(v110 ^ 0x17D9A711A491E013, 8)) ^ 0x19D8A247FDB338A4;
  v113 = v112 ^ (v84 >> 61);
  v114 = (v113 + __ROR8__(v112, 8)) ^ 0x98BAA5DD2515B1FFLL;
  v115 = v114 ^ __ROR8__(v113, 61);
  v116 = (v115 + __ROR8__(v114, 8)) ^ 0xBDC40B7C2F73B18BLL;
  v117 = v116 ^ __ROR8__(v115, 61);
  v118 = (__ROR8__(v116, 8) + v117) ^ 0xDB1C4740BFE60391;
  v119 = v105 + 4 * ((((v118 ^ __ROR8__(v117, 61)) + (v118 >> 8) + (v118 << 56)) ^ 0x3FB3B9589E9A63A8) << v102);
  v225 = v90;
  LODWORD(v90) = *(unsigned __int8 *)(a13 + (v90 ^ 0x92));
  DWORD1(v84) = v90 ^ 0x1D;
  LODWORD(v84) = (v90 ^ 0x20) << 24;
  v224 = BYTE1(v106);
  v223 = BYTE2(v106);
  v221 = BYTE3(v106);
  v120 = ((*(unsigned __int8 *)(a12 + (BYTE1(v106) ^ 0xF9)) ^ 0x57) << 16) & 0xFF00FF | ((((unint64_t)v84 >> 29) ^ 0x60) << 24) | ((*(_BYTE *)(a14 + (BYTE2(v106) ^ 0x92)) ^ 0x15) << 8) | *(unsigned __int8 *)(a11 + (BYTE3(v106) ^ 0x7CLL)) ^ 0x34;
  LODWORD(v102) = *(unsigned __int8 *)(a13 + (BYTE4(v106) ^ 0xECLL));
  DWORD1(v84) = v102 ^ 0x1D;
  LODWORD(v84) = (v102 ^ 0x20) << 24;
  LODWORD(v90) = ((*(unsigned __int8 *)(a12 + (BYTE5(v106) ^ 0x25)) ^ 0xAD) << 16) & 0xFFFFFF | ((((unint64_t)v84 >> 29) ^ 0xF5) << 24);
  v219 = v105;
  LODWORD(v105) = *(unsigned __int8 *)(a13 + (v105 ^ 0x59));
  DWORD1(v84) = v105 ^ 0x1D;
  LODWORD(v84) = (v105 ^ 0x20) << 24;
  v203 = HIBYTE(v106);
  v121 = v90 & 0xFFFF00FF | ((*(_BYTE *)(a14 + (BYTE6(v106) ^ 0x87)) ^ 0x48) << 8) | *(unsigned __int8 *)(a11 + (HIBYTE(v106) ^ 0x7A)) ^ 0x80;
  v216 = BYTE2(v119);
  v217 = BYTE1(v119);
  v122 = ((*(unsigned __int8 *)(a12 + (BYTE1(v119) ^ 0x74)) ^ 0xA6) << 16) & 0xFF00FF | ((((unint64_t)v84 >> 29) ^ 0xF3) << 24) | ((*(_BYTE *)(a14 + (BYTE2(v119) ^ 0xA8)) ^ 0xDB) << 8) | *(unsigned __int8 *)(a11 + (BYTE3(v119) ^ 0xF1)) ^ 0xB4;
  v213 = BYTE4(v119);
  v214 = BYTE3(v119);
  LODWORD(v105) = *(unsigned __int8 *)(a13 + (BYTE4(v119) ^ 0xF4));
  DWORD1(v84) = v105 ^ 0x1D;
  LODWORD(v84) = (v105 ^ 0x20) << 24;
  LOBYTE(v105) = (unint64_t)v84 >> 29;
  LODWORD(v103) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a16 + v229) ^ 0x53));
  DWORD1(v84) = v103 ^ 0x1D;
  LODWORD(v84) = (v103 ^ 0x20) << 24;
  LOBYTE(v102) = (unint64_t)v84 >> 29;
  v209 = BYTE5(v119);
  v207 = BYTE6(v119);
  v206 = HIBYTE(v119);
  v123 = ((*(unsigned __int8 *)(a12 + (BYTE5(v119) ^ 0xABLL)) ^ 0x42) << 16) & 0xFF00FF | ((v105 ^ 0xE) << 24) | ((*(_BYTE *)(a14 + (BYTE6(v119) ^ 0x6DLL)) ^ 0x4C) << 8) | *(unsigned __int8 *)(a11 + (HIBYTE(v119) ^ 0xF9)) ^ 0x3D;
  v227 = v73 & 0xFFFFFFF3 ^ 0x38DB35D;
  LODWORD(v103) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a16 + v227) ^ 0x72));
  DWORD1(v84) = v103 ^ 0x1D;
  LODWORD(v84) = (v103 ^ 0x20) << 24;
  v226 = v73 & 0xFFFFFFF0 ^ 0x38DB35F;
  v211 = v73 & 0xFFFFFFF1 ^ 0x38DB35F;
  v222 = v73 & 0xFFFFFFF2 ^ 0x38DB35D;
  LODWORD(v103) = *(_BYTE *)(a11 + (*(unsigned __int8 *)(a16 + v226) ^ 0xDBLL)) ^ 0x11 | ((((unint64_t)v84 >> 29) ^ 0x95) << 24) | ((*(_BYTE *)(a14 + (*(unsigned __int8 *)(a16 + v211) ^ 0x5CLL)) ^ 0x88) << 8) | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a16 + v222) ^ 0x14)) ^ 0xB4) << 16);
  v220 = v73 & 0xFFFFFFFC ^ 0x38DB353;
  v212 = v73 & 0xFFFFFFFE ^ 0x38DB351;
  LODWORD(v119) = *(unsigned __int8 *)(a11 + (*(unsigned __int8 *)(a16 + v220) ^ 0xFALL)) ^ 0x11 | ((v102 ^ 0xCC) << 24) | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a16 + v212) ^ 0x40)) ^ 0x86) << 16);
  v210 = v73 & 0xFFFFFFFB ^ 0x38DB355;
  LODWORD(v102) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a16 + v210) ^ 0xBFLL));
  DWORD1(v84) = v102 ^ 0x1D;
  LODWORD(v84) = (v102 ^ 0x20) << 24;
  v215 = v73 & 0xFFFFFFF9 ^ 0x38DB357;
  v205 = v73 & 0xFFFFFFFA ^ 0x38DB355;
  HIDWORD(a41) = 59618139;
  v218 = v73 & 0xFFFFFFF5 ^ 0x38DB35B;
  v208 = v73 & 0xFFFFFFF6 ^ 0x38DB359;
  v204 = v73 & 0xFFFFFFFD ^ 0x38DB353;
  LODWORD(v106) = ((*(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a16 + v215) ^ 0xC8)) ^ 0xB7) << 8) | ((((unint64_t)v84 >> 29) ^ 0x71) << 24) | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a16 + v205) ^ 0x48)) ^ 0xE0) << 16);
  HIDWORD(a38) = v73;
  v201 = v73 & 0xFFFFFFF7 ^ 0x38DB359;
  v202 = v73 & 0xFFFFFFF4 ^ 0x38DB35B;
  LODWORD(v105) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a16 + v201) ^ 0xAELL));
  DWORD1(v84) = v105 ^ 0x1D;
  LODWORD(v84) = (v105 ^ 0x20) << 24;
  v200 = v73 & 0xFFFFFFF8 ^ 0x38DB357;
  v124 = (*(unsigned __int8 *)(a11 + (*(unsigned __int8 *)(a16 + v202) ^ 0xC0)) ^ 0x65) & 0xFFFFFF | ((*(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a16 + v218) ^ 0xB9)) ^ 0xE2) << 8) | ((*(_BYTE *)(a12 + (*(unsigned __int8 *)(a16 + v208) ^ 0xB5)) ^ 0x67) << 16) & 0xFFFFFF | ((((unint64_t)v84 >> 29) ^ 0x2B) << 24);
  HIDWORD(v193) = v120;
  HIDWORD(v192) = (v119 & 0xFFFF00FF | ((*(_BYTE *)(a14 + (*(unsigned __int8 *)(a16 + v204) ^ 0x79)) ^ 0x3F) << 8)) ^ 0xDA;
  LODWORD(v102) = v120 ^ HIDWORD(v192) ^ 0xE7F05AEF;
  v125 = (char *)*(&off_100236540 + (a6 ^ 0xE7B)) - 174257782;
  LODWORD(v119) = *(_DWORD *)&v125[4 * BYTE3(v102)];
  DWORD1(v84) = v119 ^ 0x38;
  LODWORD(v84) = v119 ^ 0x3C424980;
  LODWORD(v193) = v123;
  HIDWORD(v191) = v103 ^ 0x9F;
  LODWORD(v105) = v123 ^ v103 ^ 0x9F ^ 0x86686328;
  v126 = (char *)*(&off_100236540 + (a6 ^ 0xC5F)) - 1744809730;
  v127 = (char *)*(&off_100236540 + (a6 ^ 0xE22)) - 1298196243;
  *(_QWORD *)((char *)&v193 + 4) = __PAIR64__(v121, v122);
  LODWORD(v191) = *(unsigned __int8 *)(a11 + (*(unsigned __int8 *)(a16 + v200) ^ 0x37)) ^ 0x11 | v106;
  v128 = (char *)*(&off_100236540 + a6 - 3020) - 1673022895;
  LODWORD(v192) = v124;
  v129 = *(_DWORD *)&v125[4 * (((v124 ^ v122) >> 24) ^ 0x4F)];
  LODWORD(v90) = (-1100067831 * *(_DWORD *)&v128[4 * ((v191 ^ v121) ^ 0x93)] - 2109351074) ^ ((unint64_t)v84 >> 6);
  DWORD1(v84) = v129 ^ 0x38;
  LODWORD(v84) = v129 ^ 0x3C424980;
  LODWORD(v108) = v191 ^ v121 ^ 0xBB326F33;
  LODWORD(v118) = (((unint64_t)v84 >> 6) + 851973767 - ((2 * ((unint64_t)v84 >> 6)) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v108)];
  LODWORD(v90) = *(_DWORD *)&v126[4 * ((unsigned __int16)(v124 ^ v122 ^ 0xF1BF) >> 8)] ^ (v90 + 1826901012 - ((2 * v90) & 0xD9C89828));
  LODWORD(v118) = (v118 + 1826901012 - ((2 * v118) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v102)] ^ (-1100067831 * *(_DWORD *)&v128[4 * v105] - 2109351074);
  v130 = *(_DWORD *)&v125[4 * BYTE3(v108)];
  DWORD1(v84) = v130 ^ 0x38;
  LODWORD(v84) = v130 ^ 0x3C424980;
  LODWORD(v106) = *(_DWORD *)&v127[4 * BYTE2(v102)] ^ *(_DWORD *)&v126[4 * BYTE1(v105)] ^ ((unint64_t)v84 >> 6) ^ (-1100067831 * *(_DWORD *)&v128[4 * ((v124 ^ v122) ^ 0xBF)] - 2109351074);
  LODWORD(v102) = *(_DWORD *)&v127[4 * (((v124 ^ v122) >> 16) ^ 0xD9)] ^ *(_DWORD *)&v126[4 * BYTE1(v108)] ^ (-1100067831 * *(_DWORD *)&v128[4 * v102] - 2109351074);
  LODWORD(v90) = *(_DWORD *)&v127[4 * BYTE2(v105)] ^ (v90 + 851973767 - ((2 * v90) & 0x65902D0E)) ^ 0x81B534FB;
  LODWORD(v108) = *(_DWORD *)&v125[4 * BYTE3(v90)];
  DWORD1(v84) = v108 ^ 0x38;
  LODWORD(v84) = v108 ^ 0x3C424980;
  v131 = v118 ^ 0xF43E2B0D;
  v132 = (-1100067831 * *(_DWORD *)&v128[4 * v90]
        - 1257377307
        - ((2094831634 * *(_DWORD *)&v128[4 * v90] + 76265148) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * ((v118 ^ 0xF43E2B0D) >> 16)];
  v133 = *(_DWORD *)&v125[4 * (BYTE3(v106) ^ 0x91)];
  LODWORD(v118) = (((unint64_t)v84 >> 6) + 1826901012 - ((2 * ((unint64_t)v84 >> 6)) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * (BYTE1(v118) ^ 0xA7)];
  DWORD1(v84) = v133 ^ 0x38;
  LODWORD(v84) = v133 ^ 0x3C424980;
  LODWORD(v108) = ((unint64_t)v84 >> 6) + 851973767 - ((2 * ((unint64_t)v84 >> 6)) & 0x65902D0E);
  v134 = *(_DWORD *)&v125[4 * HIBYTE(v131)];
  DWORD1(v84) = v134 ^ 0x38;
  LODWORD(v84) = v134 ^ 0x3C424980;
  v135 = (unint64_t)v84 >> 6;
  LODWORD(v108) = v108 ^ *(_DWORD *)&v127[4 * BYTE2(v90)];
  LODWORD(v105) = *(_DWORD *)&v125[4 * BYTE3(v105)];
  v136 = v102 ^ (v105 >> 6) ^ 0xA81B8BFA;
  LODWORD(v105) = v136 ^ ((_DWORD)v105 << 26);
  LODWORD(v102) = *(_DWORD *)&v125[4 * BYTE3(v105)];
  DWORD1(v84) = v102 ^ 0x38;
  LODWORD(v84) = v102 ^ 0x3C424980;
  LODWORD(v106) = v106 ^ 0x588EA2E8;
  LODWORD(v118) = v118 ^ (-1100067831 * *(_DWORD *)&v128[4 * (v106 ^ 0x7D)] - 2109351074);
  LODWORD(v102) = ((v132 ^ ((unint64_t)v84 >> 6))
                 + 1826901012
                 - ((2 * (v132 ^ ((unint64_t)v84 >> 6))) & 0xD9C89828)) ^ *(_DWORD *)&v126[4
                                                                                                * (BYTE1(v106) ^ 0x8F)];
  LODWORD(v105) = *(_DWORD *)&v127[4 * (BYTE2(v106) ^ 0x1D)] ^ *(_DWORD *)&v126[4 * BYTE1(v90)] ^ v135 ^ (-1100067831 * *(_DWORD *)&v128[4 * v105] - 2109351074);
  LODWORD(v106) = *(_DWORD *)&v127[4 * BYTE2(v136)] ^ (v118 + 851973767 - ((2 * v118) & 0x65902D0E));
  LODWORD(v118) = v105 ^ 0x2F544DB1;
  LODWORD(v106) = v106 ^ 0x7DA9BB86;
  v137 = *(_DWORD *)&v125[4 * BYTE3(v106)];
  DWORD1(v84) = v137 ^ 0x38;
  LODWORD(v84) = v137 ^ 0x3C424980;
  LODWORD(v90) = *(_DWORD *)&v126[4 * BYTE1(v136)] ^ (v108 + 1826901012 - ((2 * v108) & 0xD9C89828)) ^ (-1100067831 * *(_DWORD *)&v128[4 * v131] - 2109351074) ^ 0x4F384D4;
  LODWORD(v105) = *(_DWORD *)&v126[4 * ((unsigned __int16)(v105 ^ 0x4DB1) >> 8)] ^ *(_DWORD *)&v127[4 * ((v102 ^ 0xA801B8CB) >> 16)] ^ ((unint64_t)v84 >> 6);
  v138 = *(_DWORD *)&v125[4 * BYTE3(v90)];
  v139 = *(_DWORD *)&v127[4 * BYTE2(v118)] ^ *(_DWORD *)&v126[4 * BYTE1(v90)] ^ (-1100067831
                                                                               * *(_DWORD *)&v128[4
                                                                                                * v106]
                                                                               - 2109351074);
  DWORD1(v84) = v138 ^ 0x38;
  LODWORD(v84) = v138 ^ 0x3C424980;
  LODWORD(v105) = v105 ^ (-1100067831
                        * *(_DWORD *)&v128[4
                                         * ((v126[4 * BYTE1(v136)] ^ (v108 + 20 - ((2 * v108) & 0x28)) ^ (9 * v128[4 * v131] + 94)) ^ 0xD4)]
                        - 2109351074);
  v140 = (-1100067831 * *(_DWORD *)&v128[4 * v118] - 2109351074) ^ *(_DWORD *)&v127[4 * BYTE2(v106)] ^ (((unint64_t)v84 >> 6) + 851973767 - ((2 * ((unint64_t)v84 >> 6)) & 0x65902D0E));
  v141 = (v140 + 1826901012 - ((2 * v140) & 0xD9C89828)) ^ *(_DWORD *)&v126[4
                                                                          * ((unsigned __int16)(v102 ^ 0xB8CB) >> 8)];
  LODWORD(v118) = *(_DWORD *)&v125[4 * BYTE3(v118)];
  DWORD1(v84) = v118 ^ 0x38;
  LODWORD(v84) = v118 ^ 0x3C424980;
  LODWORD(v106) = (((unint64_t)v84 >> 6) + 1826901012 - ((2 * ((unint64_t)v84 >> 6)) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v106)];
  LODWORD(v118) = *(_DWORD *)&v125[4 * ((v102 ^ 0xA801B8CB) >> 24)];
  DWORD1(v84) = v118 ^ 0x38;
  LODWORD(v84) = v118 ^ 0x3C424980;
  LODWORD(v118) = v139 ^ ((unint64_t)v84 >> 6);
  LODWORD(v102) = *(_DWORD *)&v127[4 * BYTE2(v90)] ^ (-1100067831 * *(_DWORD *)&v128[4 * (v102 ^ 0x6B)]
                                                    - 2109351074) ^ (v106 + 851973767 - ((2 * v106) & 0x65902D0E));
  LODWORD(v90) = v118 ^ 0xCDACBEF3;
  LODWORD(v106) = *(_DWORD *)&v125[4 * ((v118 ^ 0xCDACBEF3) >> 24)];
  DWORD1(v84) = v106 ^ 0x38;
  LODWORD(v84) = v106 ^ 0x3C424980;
  LODWORD(v102) = v102 ^ 0x3F7254DF;
  LODWORD(v118) = (-1100067831 * *(_DWORD *)&v128[4 * v102]
                 - ((2094831634 * *(_DWORD *)&v128[4 * v102] + 76265148) & 0xD9C89828)
                 - 282450062) ^ *(_DWORD *)&v126[4 * (BYTE1(v118) ^ 0x32)];
  v142 = *(_DWORD *)&v128[4 * (v141 ^ 0x7B)];
  LODWORD(v108) = (-1100067831 * v142 - 1257377307 + ((52652014 * v142 + 2071218499) | 0x9A6FD2F1) + 1) ^ *(_DWORD *)&v127[4 * BYTE2(v90)];
  LODWORD(v106) = (-1100067831 * *(_DWORD *)&v128[4 * (v105 ^ 0x1B)] - 2109351074) ^ ((unint64_t)v84 >> 6);
  LODWORD(v106) = (v106 + 851973767 - ((2 * v106) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v102)];
  v143 = v141 ^ 0x33A3F8DB;
  v144 = *(_DWORD *)&v125[4 * ((v141 ^ 0x33A3F8DB) >> 24)];
  DWORD1(v84) = v144 ^ 0x38;
  LODWORD(v84) = v144 ^ 0x3C424980;
  LODWORD(v108) = (v108 + 1826901012 - ((2 * v108) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v102)];
  LODWORD(v102) = *(_DWORD *)&v125[4 * BYTE3(v102)];
  LODWORD(v102) = (-1100067831 * *(_DWORD *)&v128[4 * v90] - 2109351074) ^ (v102 >> 6) ^ ((_DWORD)v102 << 26);
  LODWORD(v90) = (v118 ^ ((unint64_t)v84 >> 6))
               + 851973767
               - ((2 * (v118 ^ ((unint64_t)v84 >> 6))) & 0x65902D0E);
  LODWORD(v118) = v105 ^ 0xC78E54BB;
  LODWORD(v105) = ((v102 ^ 0xE0F10926) + 1826901012 - ((2 * (v102 ^ 0xE0F10926)) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * ((unsigned __int16)(v105 ^ 0x54BB) >> 8)];
  LODWORD(v102) = *(_DWORD *)&v125[4 * BYTE3(v118)];
  DWORD1(v84) = v102 ^ 0x38;
  LODWORD(v84) = v102 ^ 0x3C424980;
  LODWORD(v102) = (v105 + 851973767 - ((2 * v105) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v143)];
  LODWORD(v105) = v108 ^ ((unint64_t)v84 >> 6);
  LODWORD(v90) = *(_DWORD *)&v127[4 * BYTE2(v118)] ^ v90;
  LODWORD(v118) = *(_DWORD *)&v125[4 * (BYTE3(v102) ^ 0x46)];
  DWORD1(v84) = v118 ^ 0x38;
  LODWORD(v84) = v118 ^ 0x3C424980;
  LODWORD(v118) = (unint64_t)v84 >> 6;
  LODWORD(v90) = v90 ^ 0xE0F831DA;
  LODWORD(v108) = *(_DWORD *)&v125[4 * BYTE3(v90)];
  DWORD1(v84) = v108 ^ 0x38;
  LODWORD(v84) = v108 ^ 0x3C424980;
  LODWORD(v106) = *(_DWORD *)&v126[4 * BYTE1(v143)] ^ (v106 + 1826901012 - ((2 * v106) & 0xD9C89828)) ^ 0xE60BFB96;
  LODWORD(v108) = (((unint64_t)v84 >> 6) + 1826901012 - ((2 * ((unint64_t)v84 >> 6)) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v106)];
  LODWORD(v118) = (-1100067831 * *(_DWORD *)&v128[4 * v106] - 2109351074) ^ v118;
  LODWORD(v118) = (v118 + 851973767 - ((2 * v118) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v90)];
  v145 = *(_DWORD *)&v125[4 * ((v105 ^ 0xEF31C892) >> 24)];
  DWORD1(v84) = v145 ^ 0x38;
  LODWORD(v84) = v145 ^ 0x3C424980;
  v146 = (unint64_t)v84 >> 6;
  v147 = *(_DWORD *)&v125[4 * BYTE3(v106)];
  DWORD1(v84) = v147 ^ 0x38;
  LODWORD(v84) = v147 ^ 0x3C424980;
  LODWORD(v102) = v102 ^ 0x9C9067B8;
  v148 = *(_DWORD *)&v126[4 * BYTE1(v90)] ^ *(_DWORD *)&v127[4 * (BYTE2(v102) ^ 0xB8)] ^ (-1100067831
                                                                                        * *(_DWORD *)&v128[4 * (v105 ^ 0x32)]
                                                                                        - 2109351074) ^ ((unint64_t)v84 >> 6);
  LODWORD(v118) = *(_DWORD *)&v126[4 * ((unsigned __int16)(v105 ^ 0xC892) >> 8)] ^ (v118 + 1826901012 - ((2 * v118) & 0xD9C89828));
  LODWORD(v90) = *(_DWORD *)&v126[4 * (BYTE1(v102) ^ 0xC)] ^ *(_DWORD *)&v127[4 * BYTE2(v106)] ^ (-1100067831
                                                                                                * *(_DWORD *)&v128[4 * v90]
                                                                                                - 2109351074);
  LODWORD(v105) = *(_DWORD *)&v127[4 * (BYTE2(v105) ^ 0x31)] ^ (-1100067831
                                                              * *(_DWORD *)&v128[4 * (v102 ^ 0x35)]
                                                              - 2109351074) ^ (v108
                                                                             + 851973767
                                                                             - ((2 * v108) & 0x65902D0E)) ^ 0x45303EC1;
  LODWORD(v102) = *(_DWORD *)&v125[4 * BYTE3(v105)];
  DWORD1(v84) = v102 ^ 0x38;
  LODWORD(v84) = v102 ^ 0x3C424980;
  LODWORD(v102) = ((unint64_t)v84 >> 6) + 851973767 - ((2 * ((unint64_t)v84 >> 6)) & 0x65902D0E);
  LODWORD(v90) = v90 ^ v146 ^ 0xA9DED04;
  LODWORD(v106) = *(_DWORD *)&v125[4 * BYTE3(v90)];
  DWORD1(v84) = v106 ^ 0x38;
  LODWORD(v84) = v106 ^ 0x3C424980;
  LODWORD(v102) = v102 ^ *(_DWORD *)&v127[4 * BYTE2(v90)];
  LODWORD(v106) = (-1100067831 * *(_DWORD *)&v128[4 * v105] - 2109351074) ^ ((unint64_t)v84 >> 6);
  LODWORD(v118) = v118 ^ 0xEC299D7E;
  LODWORD(v108) = *(_DWORD *)&v125[4 * BYTE3(v118)];
  DWORD1(v84) = v108 ^ 0x38;
  LODWORD(v84) = v108 ^ 0x3C424980;
  LODWORD(v108) = (unint64_t)v84 >> 6;
  LOWORD(v146) = v148 ^ 0xDA1;
  LODWORD(v106) = (v106 + 851973767 - ((2 * v106) & 0x65902D0E)) ^ *(_DWORD *)&v127[4
                                                                                  * ((v148 ^ 0xB4F60DA1) >> 16)];
  v149 = *(_DWORD *)&v125[4 * ((v148 ^ 0xB4F60DA1) >> 24)];
  v150 = v102 + 1826901012 - ((2 * v102) & 0xD9C89828);
  DWORD1(v84) = v149 ^ 0x38;
  LODWORD(v84) = v149 ^ 0x3C424980;
  LODWORD(v102) = v106 ^ *(_DWORD *)&v126[4 * BYTE1(v118)];
  LODWORD(v106) = *(_DWORD *)&v126[4 * BYTE1(v90)] ^ *(_DWORD *)&v127[4 * BYTE2(v105)] ^ v108 ^ (-1100067831
                                                                                               * *(_DWORD *)&v128[4 * v146]
                                                                                               - 2109351074);
  LODWORD(v105) = *(_DWORD *)&v126[4 * BYTE1(v105)] ^ *(_DWORD *)&v127[4 * BYTE2(v118)] ^ (-1100067831
                                                                                         * *(_DWORD *)&v128[4 * v90]
                                                                                         - 2109351074) ^ ((unint64_t)v84 >> 6);
  LODWORD(v90) = v106 ^ 0xBDCC3E05;
  LODWORD(v106) = *(_DWORD *)&v125[4 * ((v106 ^ 0xBDCC3E05) >> 24)];
  DWORD1(v84) = v106 ^ 0x38;
  LODWORD(v84) = v106 ^ 0x3C424980;
  LODWORD(v106) = (unint64_t)v84 >> 6;
  LODWORD(v118) = *(_DWORD *)&v126[4 * BYTE1(v146)] ^ v150 ^ (-1100067831 * *(_DWORD *)&v128[4 * v118]
                                                            - 2109351074) ^ 0x5B784E7F;
  v151 = v105 ^ 0x122657F6;
  LODWORD(v105) = *(_DWORD *)&v125[4 * ((v105 ^ 0x122657F6) >> 24)];
  DWORD1(v84) = v105 ^ 0x38;
  LODWORD(v84) = v105 ^ 0x3C424980;
  LODWORD(v105) = *(_DWORD *)&v127[4 * BYTE2(v90)] ^ *(_DWORD *)&v126[4 * BYTE1(v118)] ^ ((unint64_t)v84 >> 6);
  LODWORD(v108) = *(_DWORD *)&v125[4 * (BYTE3(v102) ^ 5)];
  DWORD1(v84) = v108 ^ 0x38;
  LODWORD(v84) = v108 ^ 0x3C424980;
  LODWORD(v106) = (v106 + 851973767 - ((2 * v106) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v118)];
  LODWORD(v105) = v105 ^ (-1100067831 * *(_DWORD *)&v128[4 * (v102 ^ 0x44)] - 2109351074);
  v152 = *(_DWORD *)&v125[4 * BYTE3(v118)];
  LODWORD(v118) = (-1100067831 * *(_DWORD *)&v128[4 * v118] - 2109351074) ^ ((unint64_t)v84 >> 6);
  DWORD1(v84) = v152 ^ 0x38;
  LODWORD(v84) = v152 ^ 0x3C424980;
  BYTE2(v152) = BYTE2(v102) ^ 0xE1;
  LODWORD(v102) = *(_DWORD *)&v126[4 * ((unsigned __int16)(v102 ^ 0xE1E4) >> 8)] ^ (v106 + 1826901012 - ((2 * v106) & 0xD9C89828));
  LODWORD(v106) = v118 + 851973767 - ((2 * v118) & 0x65902D0E);
  LODWORD(v102) = v102 ^ (-1100067831 * *(_DWORD *)&v128[4 * v151] - 2109351074);
  LODWORD(v118) = *(_DWORD *)&v126[4 * BYTE1(v151)] ^ *(_DWORD *)&v127[4 * BYTE2(v152)] ^ ((unint64_t)v84 >> 6) ^ (-1100067831 * *(_DWORD *)&v128[4 * v90] - 2109351074);
  LODWORD(v108) = *(_DWORD *)&v125[4 * ((v102 ^ 0xF21B61C0) >> 24)];
  DWORD1(v84) = v108 ^ 0x38;
  LODWORD(v84) = v108 ^ 0x3C424980;
  LODWORD(v90) = *(_DWORD *)&v127[4 * BYTE2(v151)] ^ v106 ^ *(_DWORD *)&v126[4 * BYTE1(v90)] ^ 0xF27349F1;
  LODWORD(v108) = (((unint64_t)v84 >> 6) + 1826901012 - ((2 * ((unint64_t)v84 >> 6)) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v90)];
  v153 = -1100067831 * *(_DWORD *)&v128[4 * v90]
       - 1257377307
       - ((2094831634 * *(_DWORD *)&v128[4 * v90] + 76265148) & 0x65902D0E);
  v154 = *(_DWORD *)&v125[4 * BYTE3(v90)];
  DWORD1(v84) = v154 ^ 0x38;
  LODWORD(v84) = v154 ^ 0x3C424980;
  LODWORD(v118) = v118 ^ 0x26A87E95;
  v155 = ((unint64_t)v84 >> 6) ^ (-1100067831 * *(_DWORD *)&v128[4 * v118] - 2109351074);
  LODWORD(v106) = *(_DWORD *)&v128[4 * (v102 ^ 0xC0)];
  LODWORD(v90) = (-1100067831 * v106 - 1257377307 - ((2094831634 * v106 + 76265148) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v90)];
  LODWORD(v106) = v108 + 851973767 - ((2 * v108) & 0x65902D0E);
  LODWORD(v108) = v155 + 851973767 - ((2 * v155) & 0x65902D0E);
  LOWORD(v155) = v105 ^ 0xF449;
  LODWORD(v108) = v108 ^ *(_DWORD *)&v127[4 * ((v105 ^ 0xE83FF449) >> 16)];
  LODWORD(v105) = *(_DWORD *)&v125[4 * (BYTE3(v105) ^ 0xBB)];
  DWORD1(v84) = v105 ^ 0x38;
  LODWORD(v84) = v105 ^ 0x3C424980;
  LODWORD(v105) = (unint64_t)v84 >> 6;
  v156 = *(_DWORD *)&v125[4 * BYTE3(v118)];
  DWORD1(v84) = v156 ^ 0x38;
  LODWORD(v84) = v156 ^ 0x3C424980;
  LODWORD(v102) = v102 ^ 0x1C22B60D;
  LODWORD(v105) = *(_DWORD *)&v127[4 * (BYTE2(v102) ^ 0x43)] ^ v153 ^ v105 ^ 0x1B36B7D3;
  LODWORD(v105) = (v105 + 1826901012 - ((2 * v105) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v118)];
  v157 = *(_DWORD *)&v126[4 * BYTE1(v155)] ^ (v90 + 1826901012 - ((2 * v90) & 0xD9C89828)) ^ ((unint64_t)v84 >> 6);
  LODWORD(v102) = *(_DWORD *)&v126[4 * (BYTE1(v102) ^ 0x5B)] ^ (v108 + 1826901012 - ((2 * v108) & 0xD9C89828));
  LODWORD(v90) = *(_DWORD *)&v127[4 * BYTE2(v118)] ^ v106 ^ (-1100067831 * *(_DWORD *)&v128[4 * v155]
                                                           - 2109351074) ^ 0xC01C0EEF;
  LODWORD(v106) = *(_DWORD *)&v125[4 * BYTE3(v90)];
  DWORD1(v84) = v106 ^ 0x38;
  LODWORD(v84) = v106 ^ 0x3C424980;
  LODWORD(v106) = (unint64_t)v84 >> 6;
  LODWORD(v108) = *(_DWORD *)&v125[4 * ((v105 ^ 0x46C733E0) >> 24)];
  DWORD1(v84) = v108 ^ 0x38;
  LODWORD(v84) = v108 ^ 0x3C424980;
  LODWORD(v108) = (((unint64_t)v84 >> 6) + 851973767 - ((2 * ((unint64_t)v84 >> 6)) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v90)];
  LODWORD(v106) = (-1100067831 * *(_DWORD *)&v128[4 * (v105 ^ 0xE0)] - 2109351074) ^ v106;
  v158 = v102 ^ 0xB307E288;
  LODWORD(v102) = *(_DWORD *)&v125[4 * ((v102 ^ 0xB307E288) >> 24)];
  DWORD1(v84) = v102 ^ 0x38;
  LODWORD(v84) = v102 ^ 0x3C424980;
  v159 = (((unint64_t)v84 >> 6) + 1826901012 - ((2 * ((unint64_t)v84 >> 6)) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v90)];
  LODWORD(v102) = v108 + 1826901012 - ((2 * v108) & 0xD9C89828);
  LODWORD(v108) = v157 ^ 0xACEAE6CA;
  v160 = *(_DWORD *)&v125[4 * ((v157 ^ 0xACEAE6CA) >> 24)];
  LODWORD(v106) = (v106 + 1826901012 - ((2 * v106) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * BYTE1(v158)];
  LODWORD(v102) = (-1100067831 * *(_DWORD *)&v128[4 * v158] - 2109351074) ^ *(_DWORD *)&v126[4 * BYTE1(v108)] ^ v102;
  DWORD1(v84) = v160 ^ 0x38;
  LODWORD(v84) = v160 ^ 0x3C424980;
  v161 = v106 + 851973767 - ((2 * v106) & 0x65902D0E);
  LODWORD(v126) = (((unint64_t)v84 >> 6) + 1826901012 - ((2 * ((unint64_t)v84 >> 6)) & 0xD9C89828)) ^ *(_DWORD *)&v126[4 * ((unsigned __int16)(v105 ^ 0x33E0) >> 8)] ^ (-1100067831 * *(_DWORD *)&v128[4 * v90] - 2109351074);
  LODWORD(v118) = *(_DWORD *)&v127[4 * BYTE2(v108)];
  LODWORD(v106) = ((_DWORD)v126 + 851973767 - ((2 * (_DWORD)v126) & 0x65902D0E)) ^ *(_DWORD *)&v127[4 * BYTE2(v158)];
  LODWORD(v128) = *(_DWORD *)&v127[4 * (BYTE2(v105) ^ 0xBD)] ^ (v159 + 851973767 - ((2 * v159) & 0x65902D0E)) ^ (-1100067831 * *(_DWORD *)&v128[4 * v108] - 2109351074) ^ 0x1CD923F5;
  v163 = (char *)*(&off_100236540 + a6 - 2965) - 1250518850;
  LODWORD(v126) = *(_DWORD *)&v163[4 * BYTE2(v128)];
  DWORD1(v84) = v126 ^ 0x236FE35;
  LODWORD(v84) = v126 ^ 0x6C000000;
  v164 = (char *)*(&off_100236540 + (a6 ^ 0xE9F)) - 255580098;
  LODWORD(v108) = (v106 ^ 0xE54FA40D) >> 24;
  LODWORD(v126) = ((unint64_t)v84 >> 26) ^ *(_DWORD *)&v164[4 * (v108 ^ 0x12)];
  v165 = v118 ^ v161 ^ 0x8486486A;
  v166 = (char *)*(&off_100236540 + a6 - 2380) - 465902127;
  LODWORD(v105) = v102 ^ 0x67E72793;
  HIDWORD(v197) = *(_DWORD *)&v166[4 * (v102 ^ 0x93)];
  LODWORD(v199) = *(_DWORD *)&v166[4 * (v106 ^ 0xD)];
  LODWORD(v197) = *(_DWORD *)&v166[4 * v128];
  v167 = (char *)*(&off_100236540 + a6 - 2747) - 161543810;
  LODWORD(v198) = BYTE1(v165);
  HIDWORD(v198) = *(_DWORD *)&v167[4 * (BYTE1(v165) ^ 0xFD)];
  HIDWORD(v195) = ((unsigned __int16)(v106 ^ 0xA40D) >> 8);
  LODWORD(v196) = *(_DWORD *)&v167[4 * (HIDWORD(v195) ^ 0xFD)];
  v168 = BYTE1(v128);
  HIDWORD(v194) = *(_DWORD *)&v167[4 * (BYTE1(v128) ^ 0xFD)];
  LODWORD(v195) = *(_DWORD *)&v163[4 * BYTE2(v165)];
  v169 = *(_DWORD *)&v163[4 * (BYTE2(v106) ^ 0x9D)];
  HIDWORD(v196) = *(_DWORD *)&v163[4 * ((v102 ^ 0x67E72793) >> 16)];
  LODWORD(v163) = a71 ^ a68 ^ a64 ^ ((BYTE1(v102) ^ 0x2A) - 980937847) ^ *(_DWORD *)&v167[4 * (BYTE1(v102) ^ 0xD7)] ^ (*(_DWORD *)&v166[4 * v165] + (v126 ^ v108 ^ 0xF4BF60FE) - 2 * (*(_DWORD *)&v166[4 * v165] & (v126 ^ v108 ^ 0xF4BF60FE)));
  LODWORD(v102) = *(unsigned __int8 *)(a13 + (BYTE4(v106) ^ 0x7ALL));
  DWORD1(v84) = v102 ^ 0x1D;
  LODWORD(v84) = (v102 ^ 0x20) << 24;
  v231 = (unsigned __int16)v163 ^ 0xCE56;
  v228 = v163 ^ 0xD205CE56 ^ ((((unint64_t)v84 >> 29) ^ 0xE4) << 24);
  v230 = v228 ^ ((*(unsigned __int8 *)(a12 + (BYTE5(v106) ^ 0x4ALL)) ^ 0x88) << 16);
  LOBYTE(v163) = *(_BYTE *)(a11 + (v203 ^ 0x6A)) ^ v163 ^ 0x56 ^ 0x11;
  v170 = (char *)*(&off_100236540 + (HIDWORD(v199) ^ 0xEA6)) - 164722303;
  LODWORD(v128) = v128 >> 24;
  v171 = HIBYTE(v165);
  v172 = *(_DWORD *)&v164[4 * (BYTE3(v105) ^ 0x12)];
  v173 = *(_DWORD *)&v164[4 * (v128 ^ 0x12)];
  LODWORD(v106) = *(_DWORD *)&v164[4 * HIBYTE(v165)];
  v174 = *(unsigned __int8 *)(a13 + (v225 ^ 0xBF));
  LODWORD(v164) = *(unsigned __int8 *)(a12 + (v224 ^ 0x7E));
  v175 = *(_BYTE *)(a14 + (v223 ^ 0x97));
  v176 = *(unsigned __int8 *)(a11 + (v221 ^ 0xFB));
  LOWORD(v225) = *(unsigned __int8 *)(a14 + (BYTE6(v106) ^ 0xBFLL));
  LODWORD(v125) = *(unsigned __int8 *)(a13 + (v219 ^ 0x1F));
  v177 = *(unsigned __int8 *)(a12 + (v217 ^ 0x23));
  v178 = *(_BYTE *)(a14 + (v216 ^ 0xED));
  v179 = *(unsigned __int8 *)(a11 + (v214 ^ 0xD0));
  LODWORD(v166) = *(unsigned __int8 *)(a13 + (v213 ^ 0xD5));
  v180 = *(unsigned __int8 *)(a12 + (v209 ^ 0x31));
  v181 = *(_BYTE *)(a14 + (v207 ^ 0x20));
  v182 = *(unsigned __int8 *)(a11 + (v206 ^ 0x8C));
  *(_BYTE *)(a17 + v200) = v163 ^ v170[v163 ^ 0x72] ^ 0xAD;
  DWORD1(v84) = v169 ^ 0x236FE35;
  LODWORD(v84) = v169 ^ 0x6C000000;
  LODWORD(v163) = (unint64_t)v84 >> 26;
  DWORD1(v84) = v125 ^ 0x1D;
  LODWORD(v84) = (v125 ^ 0x20) << 24;
  v183 = *(_DWORD *)(v74 - 252) ^ a67 ^ a69 ^ (v168 - 980937847) ^ HIDWORD(v197) ^ v106 ^ HIDWORD(v194) ^ v163 ^ ((((unint64_t)v84 >> 29) ^ 0x61) << 24);
  v184 = (char *)*(&off_100236540 + HIDWORD(v199) - 2650) - 2077671;
  *(_BYTE *)(a17 + v201) = (-51 * v184[HIBYTE(v183) ^ 0xBCLL]) ^ 0x19;
  DWORD1(v84) = v166 ^ 0x1D;
  LODWORD(v84) = (v166 ^ 0x20) << 24;
  v185 = a73 ^ *(_DWORD *)(v74 - 248) ^ a70 ^ (HIDWORD(v195) - 980937847) ^ v172 ^ v196 ^ v197 ^ (v195 >> 26) ^ ((_DWORD)v195 << 6) ^ (((v180 ^ 0x86) << 16) & 0xFFFFFF | ((((unint64_t)v84 >> 29) ^ 0x57) << 24));
  v186 = (char *)*(&off_100236540 + HIDWORD(v199) - 2637) - 1464019370;
  *(_BYTE *)(a17 + v211) = v186[((unsigned __int16)(BYTE3(v105) ^ (v182 ^ 0x11 | ((v181 ^ 0x50) << 8)) ^ v185 ^ 0x6E5C) >> 8) ^ 0xE3] ^ 0x6F;
  v187 = ((v177 ^ 0x8A) << 16) | ((v178 ^ 0x75) << 8);
  LODWORD(v108) = v171 ^ v183 ^ (v187 | v179 ^ 0x11) ^ 0xCA99E1DB;
  *(_BYTE *)(a17 + v202) = v171 ^ v183 ^ (v187 | v179 ^ 0x11) ^ 0xDB ^ v170[(v171 ^ v183 ^ (v187 | v179 ^ 0x11)) ^ 0xB5] ^ 0xE;
  DWORD1(v84) = HIDWORD(v196) ^ 0x236FE35;
  LODWORD(v84) = HIDWORD(v196) ^ 0x6C000000;
  LODWORD(v126) = (unint64_t)v84 >> 26;
  DWORD1(v84) = v174 ^ 0x1D;
  LODWORD(v84) = (v174 ^ 0x20) << 24;
  LODWORD(v126) = *(_DWORD *)(v74 - 256) ^ *(_DWORD *)(v74 - 244) ^ a72 ^ (v198 - 980937847) ^ HIDWORD(v198) ^ v199 ^ v173 ^ v126 ^ ((((unint64_t)v84 >> 29) ^ 4) << 24);
  v188 = (char *)*(&off_100236540 + (HIDWORD(v199) ^ 0xD32)) - 408689251;
  *(_BYTE *)(a17 + v212) = v188[((v128 ^ v126 ^ (((v164 ^ 0xDD) << 16) | ((v175 ^ 0x5F) << 8) | v176 ^ 0x11) ^ 0xDE7617E3) >> 16) ^ 0xACLL] ^ 0x87;
  *(_BYTE *)(a17 + v210) = (-51 * v184[HIBYTE(v228) ^ 0x6CLL]) ^ 0x64;
  *(_BYTE *)(a17 + v229) = (-51 * v184[(v126 >> 24) ^ 0xD4]) ^ 0x42;
  *(_BYTE *)(a17 + v204) = v186[((unsigned __int16)((unsigned __int16)v128 ^ (unsigned __int16)v126 ^ (((v175 ^ 0x5F) << 8) | v176 ^ 0x11) ^ 0x17E3) >> 8) ^ 0xB5] ^ 0xAE;
  *(_BYTE *)(a17 + v205) = v188[BYTE2(v230) ^ 0x73] ^ 0x37;
  *(_BYTE *)(a17 + v208) = v188[BYTE2(v108) ^ 0x84] ^ 0xA6;
  *(_BYTE *)(a17 + v220) = v128 ^ v126 ^ v176 ^ 0x11 ^ 0xE3 ^ v170[v128 ^ v126 ^ v176 ^ 0x11u ^ 0xADLL] ^ 0xAF;
  *(_BYTE *)(a17 + v215) = v186[((unsigned __int16)(v231 ^ (((unsigned __int16)v225 ^ 0x10) << 8)) >> 8) ^ 0xD7] ^ 0xEF;
  *(_BYTE *)(a17 + v222) = v188[((BYTE3(v105) ^ ((v182 ^ 0x11) & 0xFFFF00FF | ((v181 ^ 0x50) << 8)) ^ v185 ^ 0xC1746E5C) >> 16) ^ 0xE6] ^ 0xAA;
  *(_BYTE *)(a17 + v227) = (-51 * v184[BYTE3(v185) ^ 0x4ALL]) ^ 0xCE;
  *(_BYTE *)(a17 + v226) = BYTE3(v105) ^ v182 ^ 0x11 ^ v185 ^ 0x5C ^ v170[BYTE3(v105) ^ v182 ^ 0x11u ^ v185 ^ 0x52] ^ 0x44;
  *(_BYTE *)(a17 + v218) = v186[BYTE1(v108) ^ 0x77] ^ 0xE5;
  return ((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a15 + 8 * ((485 * ((((_DWORD)v229 + 59618129 - 2 * (((_DWORD)v229 + 16) & 0x38DB35B ^ BYTE4(a38) & 0xA) + 16) ^ 0x38DB351u) < HIDWORD(a10))) ^ a6)) - 8))(v185, v188, v212, v174, 4294967245, v170, v179, 3314029449, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v190,
           v191,
           v192,
           v193,
           *((_QWORD *)&v193 + 1),
           v194,
           v195,
           v196,
           v197,
           v198,
           v199,
           v200,
           v201,
           v202,
           v203,
           BYTE4(v106),
           BYTE5(v106),
           v204,
           v205,
           a38,
           v206,
           v207,
           a41,
           v208,
           v209,
           v210,
           v211,
           v212,
           v213,
           v214,
           v215,
           v216,
           v217,
           BYTE6(v106),
           v218,
           v219,
           v220,
           v221,
           v222,
           v223,
           v224);
}

uint64_t sub_1001C2588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * (int)a24) - 4);
  *(_DWORD *)(v61 - 252) = HIDWORD(a22);
  *(_DWORD *)(v61 - 244) = HIDWORD(a23);
  *(_DWORD *)(v61 - 248) = a22;
  *(_DWORD *)(v61 - 256) = HIDWORD(a21);
  return v62(a1, a2, a3, a4, a5, (a24 + 1896), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1001C2600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  uint64_t v19;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * a19) - 8))(a9);
}

uint64_t sub_1001C2640@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 16) = a2;
  return result;
}

void sub_1001C2680(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v7;

  v1 = 1800242513 * (((a1 | 0x663776DC) - (a1 | 0x99C88923) - 1714910941) ^ 0x3F961EF2);
  if (*(_QWORD *)(a1 + 40))
    v2 = *(_QWORD *)(a1 + 56) == 0x58CBC43E961A35C6;
  else
    v2 = 1;
  v7 = !v2
    && *(_QWORD *)(a1 + 16) != 0
    && *(_QWORD *)(a1 + 8) != 0xB8BD1ECE73DD98CLL
    && *(_DWORD *)a1 - v1 == 925438034
    && (*(_DWORD *)(a1 + 48) ^ v1) - 2045575623 > 0xF;
  __asm { BR              X16 }
}

uint64_t sub_1001C27A8@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v21 = -293800045 * (*(_DWORD *)(v18 + 24) + v17)
      - ((1559883558 * (*(_DWORD *)(v18 + 24) + v17) + 1416596770) & 0x5129C346)
      - 758339532;
  v22 = 1716948049 * ((2 * (&a3 & 0x7B451D68) - &a3 - 2068127086) ^ 0xAFA2A11F);
  a4 = v22 + 1573358523;
  a5 = v16 - v22 - ((2 * v16 + 203816050) & 0x5129C346) - 1364729892;
  a8 = v14;
  a9 = v12;
  a6 = v13;
  a10 = v21 ^ v22;
  a11 = v22 + v19 - 111;
  a12 = a1;
  a3 = 7 - 81 * ((2 * (&a3 & 0x68) - &a3 - 110) ^ 0x1F);
  v23 = ((uint64_t (*)(char *))(*(_QWORD *)(v15 + 8 * (v19 - 3081)) - 1661627423))(&a3);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * v19))(v23);
}

void sub_1001C28AC()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = v0;
}

void sub_1001C28E0(id a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char v6;

  v1 = (uint64_t)*(&off_100236540
                + (byte_1001FC680[(byte_1001E53E0[(-21
                                                                                   * ((dword_10023CCE8 + qword_10023CA38) ^ 0x71))
                                                                 + 256] ^ 0x63)
                                                 + 256] ^ (-21 * ((dword_10023CCE8 + qword_10023CA38) ^ 0x71)))
                - 40);
  v2 = *(_QWORD *)(v1 - 965231491) - qword_10023CA38 - (_QWORD)&v6;
  qword_10023CA38 = 1509257707 * v2 + 0x6B05B50A19716BBLL;
  *(_QWORD *)(v1 - 965231491) = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  v5 = 0;
  v4 = 4;
  LOBYTE(v2) = *(_DWORD *)(v1 - 965231491);
  v3 = (char *)*(&off_1002281A0
               + ((2472
                 * (((unsigned int (*)(char *, int *, uint64_t *, _QWORD, _QWORD))((char *)*(&off_100236540 + (byte_1001FC880[byte_1001E55E0[(-21 * ((v2 + qword_10023CA38) ^ 0x71))] ^ 0x5F] ^ (-21 * ((v2 + qword_10023CA38) ^ 0x71))) - 43)
                                                                                           - 179296266))((char *)*(&off_100236540+ ((-21 * ((v2 - qword_10023CA38) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((v2 - qword_10023CA38) ^ 0x71))] ^ 0x57])+ 71)- 1478593331, &v5, &v4, 0, 0) == 0)) ^ 0x594u))- 8;
  __asm { BR              X10 }
}

uint64_t sub_1001C2A90@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;

  byte_10023CDF0 = a5 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 11424) - (v5 + 518638797) + 518640217))();
}

void sub_1001C2AE4(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 24))
    v2 = *(_QWORD *)(a1 + 8) == 0;
  else
    v2 = 1;
  v3 = !v2;
  v1 = *(_DWORD *)a1 + 1444845877 * ((((2 * a1) | 0xD8824178) - a1 - 1816207548) ^ 0x64B13C24);
  __asm { BR              X12 }
}

uint64_t sub_1001C2BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;

  v19 = *(_DWORD *)(v15 + 16);
  a11 = v16;
  a12 = (v19 ^ v13) - 446006073;
  v20 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t *, uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)(v14 + 8 * (v18 - 1561))
                                                                                           - 263797075))(*(unsigned int *)(v12 + 4), 26, &a11, 16, &a11, &a10);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * (v18 ^ (8 * ((a10 == 16) | (32 * (a10 == 16))))))
                                          - 8))(v20);
}

uint64_t sub_1001C2C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  uint64_t v12;
  int v13;
  int v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((2083
                                          * (a12 - v14 + ((v13 + 3079) ^ ((v13 + 480) | 0x400) ^ 0x596217E3) == 1053591179)) ^ v13))
                            - 8))();
}

uint64_t sub_1001C2C90()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((142 * (v1 - ((v1 << ((v0 - 14) & 0xD7 ^ 0xD3)) & 0xD7F21262) != 0)) ^ v0)))();
}

uint64_t sub_1001C2D1C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((((v1 + 842021385) & 0xCDCFC5FD) - 1230) * (v0 < 8)) ^ v1))
                            - (((v1 - 177) | 0x208u) ^ 0x621)))();
}

uint64_t sub_1001C2D70()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((5997
                                          * ((((unint64_t)(v0 - v2) < 0x20) ^ (v1 + 80)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_1001C2DA4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 ^ 0x1CE4) - 4426) ^ (((v1 ^ 0x1CE4) - 2722) | 0x204) ^ 0x1BBC)
                                          * (v0 > 0x1F)) ^ v1 ^ 0x1CE4))
                            - 8))();
}

uint64_t sub_1001C2DEC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (v2 + 437)))(v1 + v0 - 32, 1345);
}

uint64_t sub_1001C2E28(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _OWORD *v8;

  v7 = *(_OWORD *)(a1 + v2 + 16);
  v8 = (_OWORD *)(v5 + v2);
  *(v8 - 1) = *(_OWORD *)(a1 + v2);
  *v8 = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == v2) * a2) ^ v3)))();
}

uint64_t sub_1001C2E54()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 750679025) & 0x2CBE7EEB) - 3827) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1001C2E88()
{
  char v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((28 * ((((v0 & 0x18) == 0) ^ (v1 - 104)) & 1)) ^ v1)))();
}

uint64_t sub_1001C2EC0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_1001C2EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + ~v2 + v1 - 7) = *(_QWORD *)(v0 + ~v2 + v1 - 7);
  return (*(uint64_t (**)(void))(v7 + 8 * ((7 * (v5 + v2 == v4)) ^ v3)))();
}

uint64_t sub_1001C2F18()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (753 * (v1 == v0))))
                            - ((((v2 + 39606678) & 0xFDA3B3BF) - 3078) ^ 0x621)))();
}

uint64_t sub_1001C2F60()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - (v0 - 1) + 1568))();
}

uint64_t sub_1001C2F78()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v3 - 1;
  *(_BYTE *)(v4 + v6) = *(_BYTE *)(v0 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v2 & ~(v1 ^ (v6 == 0)) | v1)) - 8))();
}

void sub_1001C2FA0(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = a1;
}

void sub_1001C2FBC(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)a1 + 222922757 * (((a1 | 0x721681BC) - a1 + (a1 & 0x8DE97E43)) ^ 0x1B877487);
  v2 = *(_QWORD *)(a1 + 8);
  ((void (*)(void))((char *)*(&off_100236540 + (v1 ^ 0x17E1)) - 1551698670))();
  __asm { BR              X8 }
}

uint64_t sub_1001C3078(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 - 4760)) - 2068239003))(a1, v1, 4096);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v2) - 8))();
}

void sub_1001C30BC()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 4) = v1;
}

void sub_1001C30D4(id a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[64];
  _BYTE v8[4];
  unsigned int v9;

  v1 = (uint64_t)*(&off_100236540
                + (byte_1001FC880[byte_1001E55E0[(-21
                                                                                  * ((dword_10023CCE8 - qword_10023CA58) ^ 0x71))] ^ 0xC1] ^ (-21 * ((dword_10023CCE8 - qword_10023CA58) ^ 0x71)))
                - 100);
  v2 = (unint64_t)&v7[*(_QWORD *)(v1 - 965231491) - qword_10023CA58];
  v3 = (1509257707 * v2) ^ 0xDB617684DF9DEA71;
  v4 = 1509257707 * (v2 ^ 0xDB617684DF9DEA71);
  qword_10023CA58 = v3;
  *(_QWORD *)(v1 - 965231491) = v4;
  v5 = (uint64_t)*(&off_100236540
                + (byte_100227880[byte_100212AB0[(-21 * ((v4 - qword_10023CA58) ^ 0x71))] ^ 8] ^ (-21 * ((v4 - qword_10023CA58) ^ 0x71)))
                - 178);
  *(_BYTE *)(v5 - 351476379) = 106;
  *(_DWORD *)(v5 - 351476375) = -2099619980;
  *(_QWORD *)(v5 - 351476371) = 0xD629969D34590DA0;
  *(_QWORD *)(v5 - 351476363) = 0xED1F4714049750A9;
  *(_BYTE *)(v5 - 351476355) = -38;
  *(_QWORD *)(v5 - 351476351) = 0xC4209A22468D1377;
  *(_QWORD *)(v5 - 351476339) = 1132571706;
  v6 = (uint64_t)*(&off_100236540
                + ((-21 * ((*(_DWORD *)(v1 - 965231491) + qword_10023CA58) ^ 0x71)) ^ byte_100227880[byte_100212AB0[(-21 * ((*(_DWORD *)(v1 - 965231491) + qword_10023CA58) ^ 0x71))] ^ 8])
                - 130);
  *(_DWORD *)(v6 - 958874503) = -2099619980;
  *(_QWORD *)(v6 - 958874499) = 0xD629969D34590DA0;
  *(_QWORD *)(v6 - 958874491) = 0xED1F4714049750A9;
  *(_BYTE *)(v6 - 958874483) = -38;
  *(_QWORD *)(v6 - 958874479) = 0xC4209A22468D1377;
  *(_BYTE *)(v6 - 958874507) = 106;
  *(_QWORD *)(v6 - 958874467) = 1132571706;
  v9 = (753993959 * ((2 * (v8 & 0x31428628) - v8 - 826443312) ^ 0x11658BF1)) ^ 0x765E9BCE;
  sub_100002C08((uint64_t)v8);
  __asm { BR              X8 }
}

uint64_t sub_1001C33D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 31552))(a1, a2);
}

uint64_t sub_1001C33F4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * ((v3 + v2) ^ 0xEA2)))(a1, a2);
}

uint64_t sub_1001C3434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  HIDWORD(a12) = 0;
  v14 = ((uint64_t (*)(_QWORD, char *))((char *)*(&off_100236540 + (v12 ^ 0xFBE)) - 944300542))(0, (char *)&a12 + 4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13
                                                                                 + 8
                                                                                 * (((v12 + 63) ^ ((_DWORD)v14 == 0)) & 1 | (2 * (((v12 + 63) ^ ((_DWORD)v14 == 0)) & 1)) | v12))
                                                                     - ((v12 + 1494250014) & 0xA6EF85BF ^ 0x596)))(v14, v15, v16, v17);
}

uint64_t sub_1001C34DC()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = 65;
  *(_QWORD *)(v3 + 40) = 0;
  return ((uint64_t (*)(void))(1123367125 - (v0 ^ (v1 - 2939)) + *(_QWORD *)(v2 + 8 * v0)))();
}

uint64_t sub_1001C3508@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((165 * (a5 == 0)) ^ (a1 - 1123365730)))
                            - ((751 * (a1 ^ (v5 + 2))) ^ 0x5D6)))();
}

uint64_t sub_1001C3554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(void))
{
  int v11;
  uint64_t v12;
  uint64_t v13;

  v13 = a11();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * v11)
                                          - (((v11 + 7410274) | 0x4284209Du) ^ 0x42F538D5)))(v13);
}

void sub_1001C3CB4()
{
  int *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = 0;
  v6 = 0;
  v0 = &v5;
  v1 = 1;
  while (1)
  {
    *(_QWORD *)v0 = 0;
    v3 = v0 + 2;
    *v3++ = 0;
    *v3++ = 0;
    *v3 = 0;
    v4 = v3 + 1;
    if (!--v1)
      break;
    *v4 = 0;
    v2 = v4 + 1;
    *v2++ = 0;
    *v2++ = 0;
    *v2 = 0;
    v0 = (int *)(v2 + 1);
  }
  JUMPOUT(0x1001C3DD0);
}

uint64_t sub_1001C3E44(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BOOL4 v6;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  ((void (*)(uint64_t, uint64_t *))(*(_QWORD *)(v4 + 8 * (v5 ^ 0x837u)) - 1132373118))(v2, (uint64_t *)va);
  v6 = ((uint64_t (*)(uint64_t, uint64_t, char *))(*(_QWORD *)(v4 + 8 * (v5 - 2146)) - 340080907))(v2, *(_QWORD *)(v4 + 8 * (v5 ^ 0xB6Cu)) - 659013187, va1) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 * ((v5 + 5) ^ (9 * (v5 ^ 0xB44)) ^ 0x73C)) ^ v5)))();
}

uint64_t sub_1001C3EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))loc_1001C3FC4)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1001C4100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  int v16;

  return (*(uint64_t (**)(void))(v15 + 8 * (int)(((a15 != 0) * (((v16 + 1558279465) & 0xA31E8DFD) - 2327)) ^ v16)))();
}

uint64_t sub_1001C4138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 + 8 * (int)(v14 - 2560)) - 1920168334))(v10, v11, a3, a10);
  v15 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * (int)(v14 - 1870)) - 719404554))(v10);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * v14))(v15);
}

uint64_t sub_1001C418C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,char *a22,unsigned int a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  ((void (*)(uint64_t))(*(_QWORD *)(v25 + 8 * (v26 - 2998)) - 1623485507))(v23);
  a22 = &a15;
  a23 = v26
      - 723759307
      * (((&a21 | 0x985272E2) - &a21 + (&a21 & 0x67AD8D18)) ^ 0x6980C391)
      - 1975;
  sub_10000597C((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * v26) - (v26 ^ 0x1676u) + 7039))(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
}

void sub_1001C4250()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char *v4;
  _BYTE v5[8];

  v0 = (uint64_t)*(&off_100236540
                + (byte_1001FC880[byte_1001E55E0[(-21
                                                                                                * ((dword_10023CCE8
                                                                                                  - qword_10023CD98) ^ 0x71))] ^ 0xD7] ^ (-21 * ((dword_10023CCE8 - qword_10023CD98) ^ 0x71)))
                + 78);
  v1 = (unint64_t)&v5[*(_QWORD *)(v0 - 965231491) - qword_10023CD98];
  v2 = 1509257707 * (v1 + 0x249E897B2062158FLL);
  v3 = 1509257707 * (v1 ^ 0xDB617684DF9DEA71);
  qword_10023CD98 = v2;
  *(_QWORD *)(v0 - 965231491) = v3;
  v4 = (char *)*(&off_1002281A0
               + ((1714
                 * (((uint64_t (*)(uint64_t))((char *)*(&off_100236540
                                                               + ((-21
                                                                                                * ((v3 - qword_10023CD98) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((v3 - qword_10023CD98) ^ 0x71))] ^ 0xD7])
                                                               + 53)
                                                     - 962052998))(200) != 0)) ^ 0xB95u))
     - 4;
  __asm { BR              X8 }
}

void sub_1001C442C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  char *v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  unsigned int v25;
  char v26;
  _BYTE v27[7];

  v1 = 295199341 * ((-2 - ((a1 | 0xBC0D1DDD) + (~(_DWORD)a1 | 0x43F2E222))) ^ 0xAC9AEA6A);
  v2 = *(_DWORD *)(a1 + 8) + v1;
  v3 = *(_DWORD *)(a1 + 24) + v1;
  v4 = (char *)*(&off_100236540 + (int)(v2 & 0xF7FF003A)) - 1300056234;
  if (((*((_BYTE *)&off_100236540 + 8 * (int)(v2 & 0xF7FF003A)) + 86) & 7) != 0)
  {
    v5 = 0;
    do
    {
      v6 = &v27[v5 - 1];
      *v6 = v4[v5];
      v6[1] = v4[v5 + 1];
      v6[2] = v4[v5 + 2];
      v6[3] = v4[v5 + 3];
      v6[4] = v4[v5 + 4];
      v6[5] = v4[v5 + 5];
      v6[6] = v4[v5 + 6];
      v6[7] = v4[v5 + 7];
      v5 += 8;
    }
    while ((_DWORD)v5 != 16);
  }
  else
  {
    v7 = (char *)*(&off_100236540 + (int)(v2 & 0xF7FF003A)) - 1300056234;
    v8 = &v26;
    switch((1300056234 - *((_DWORD *)&off_100236540 + 2 * (int)(v2 & 0xF7FF003A))) & 7)
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_11;
      case 3:
        goto LABEL_10;
      case 4:
        goto LABEL_9;
      case 5:
        goto LABEL_8;
      case 6:
        goto LABEL_7;
      case 7:
        v8 = v27;
        v26 = -112;
        v7 = v4 + 1;
LABEL_7:
        v9 = *v7++;
        *v8++ = v9;
LABEL_8:
        v10 = *v7++;
        *v8++ = v10;
LABEL_9:
        v11 = *v7++;
        *v8++ = v11;
LABEL_10:
        v12 = *v7++;
        *v8++ = v12;
LABEL_11:
        v13 = *v7++;
        *v8++ = v13;
LABEL_12:
        v14 = *v7++;
        *v8++ = v14;
        break;
      default:
        break;
    }
    v15 = -(int)v4 & 7;
    v16 = v15 <= 0x10;
    v17 = 16 - v15;
    if (!v16)
      v17 = 0;
    v18 = v17 & 7;
    switch(v18)
    {
      case 0:
        break;
      case 1:
        goto LABEL_24;
      case 2:
        goto LABEL_23;
      case 3:
        goto LABEL_22;
      case 4:
        goto LABEL_21;
      case 5:
        goto LABEL_20;
      case 6:
        goto LABEL_19;
      case 7:
        v19 = *v7++;
        *v8++ = v19;
LABEL_19:
        v20 = *v7++;
        *v8++ = v20;
LABEL_20:
        v21 = *v7++;
        *v8++ = v21;
LABEL_21:
        v22 = *v7++;
        *v8++ = v22;
LABEL_22:
        v23 = *v7++;
        *v8++ = v23;
LABEL_23:
        v24 = *v7++;
        *v8++ = v24;
LABEL_24:
        *v8 = *v7;
        break;
      default:
        __asm { BR              X16 }
        return;
    }
  }
  v25 = 1324127283 * v3 - ((-1646712730 * v3 - 1082476708) & 0x9C716CDC) + 771101212;
  __asm { BR              X16 }
}

uint64_t sub_1001C4760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X7>, unsigned int a4@<W8>)
{
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  char *v11;
  char v12;
  unsigned int v13;

  v10 = a4 < v7;
  v11 = (char *)(*(_QWORD *)(a1 + 16) + v5);
  v12 = *v11;
  LODWORD(v11) = ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 8 * (v4 & 0x35CE88E6)) - 1056089286)
                             + (*(_DWORD *)(*(_QWORD *)(a2 + 8 * (v4 - 5295)) - 17970138) & 0xC58EA8)) ^ v11) & 0x7FFFFFFF)
               * v6;
  *(_BYTE *)(v9 + v5) = *(_BYTE *)(*(_QWORD *)(a2 + 8 * (v4 & 0x6022EA22))
                                 + ((((v11 ^ (v11 >> 16)) * v6) >> 20) & 0xFF0 | v5 & 0xF)
                                 - 674905650) ^ v12 ^ (-23 * (v11 ^ BYTE2(v11)));
  v13 = v5 + 1;
  if (v10 == v13 > 0xA5DD5C69)
    v10 = v13 + v7 < a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((!v10 * v8) ^ v4)) - 4))();
}

uint64_t sub_1001C4854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(a8 + 8 * ((v8 + 884) ^ (116 * (v10 - 256 != v9)))))();
}

uint64_t sub_1001C48AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 240) = 0x7A7FD62A8C698C90;
  *(_QWORD *)(v9 - 232) = 0x50FE5B098C8B19E9;
  *(_QWORD *)(v9 - 224) = 0x7A7FD62A8C698C90;
  *(_QWORD *)(v9 - 216) = 0x50FE5B098C8B19E9;
  return (*(uint64_t (**)(void))(a8 + 8 * v8))();
}

uint64_t sub_1001C48F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((2072 * (v9 != 0)) ^ v8)) - ((v8 - 973) | 0x1465u) + 5985))();
}

uint64_t sub_1001C4928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _BOOL4 v14;

  v14 = ((((v12 ^ 0xB9) & v10 ^ 0xDC) + ((v9 ^ v11) ^ 0x5C) + 1) & 0xF) != 0
     || ((v12 ^ 0xEE9FD0B9) & v10 ^ 0x8C1148DC) + (v9 ^ v11 ^ 0x3977555C) == v8 - 1664 + ((v8 + 90) ^ 0x774FC2A5);
  return (*(uint64_t (**)(void))(a8 + 8 * ((234 * v14) ^ v8)))();
}

uint64_t sub_1001C4998@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;

  v45 = *(_QWORD *)(a1 + 8 * (a3 - 3689)) - 1545341686;
  v46 = *(_QWORD *)(a1 + 8 * (a3 - 4193)) - 536370462;
  v47 = *(_QWORD *)(a1 + 8 * (a3 - 3468)) - 628546759;
  v48 = *(_QWORD *)(a1 + 8 * (a3 ^ 0x117B)) - 1688915358;
  v49 = *v44;
  LODWORD(a43) = ((v44[4] ^ 0x6E) + *(_BYTE *)(v48 + (v44[4] ^ 0xDFLL)) - 109) ^ 0xE1;
  LODWORD(a42) = ((v49 ^ 0xC6) + *(_BYTE *)(v48 + (v49 ^ 0x77)) - 109) ^ 0x30;
  LODWORD(a41) = *(unsigned __int8 *)(v46 + (v44[3] ^ 0x3BLL)) ^ 0xE7;
  v50 = *(unsigned __int8 *)(v45 + (v44[9] ^ 0xD4));
  HIDWORD(a40) = ((*(unsigned __int8 *)(v45 + (v44[13] ^ 0xFCLL)) ^ 0xB0) << 16) & 0xFF00FF | (((*(_BYTE *)(v48 + (v44[12] ^ 0x89)) - (v44[12] ^ 0xE7 ^ -(v44[12] ^ 0xE7) ^ ((v44[12] ^ 0x38) + 33)) + 114) ^ 0x13) << 24) | ((((v44[14] - ((2 * v44[14]) & 0xA) + 5) ^ *(_BYTE *)(v47 + (v44[14] ^ 0x75))) ^ 0xDF) << 8) | *(unsigned __int8 *)(v46 + (v44[15] ^ 0x3DLL)) ^ 0xE7;
  v51 = ((v50 ^ 0xD0) << 16) + 1935874951 - (((v50 ^ 0xD0) << 17) & 0xC60000);
  LODWORD(a39) = v51 ^ 0x73631B87;
  LODWORD(a24) = v51 ^ 0x73631B87 | (*(unsigned __int8 *)(v46 + (v44[11] ^ 0xC7)) ^ 0x5C) & 0xFFFF00FF | (((*(_BYTE *)(v47 + (v44[10] ^ 0xDBLL)) ^ (v44[10] - ((2 * v44[10]) & 0xA) + 5)) ^ 0xAC) << 8);
  LODWORD(a29) = (((v44[8] ^ 0x88888888) + *(unsigned __int8 *)(v48 + (v44[8] ^ 0x39)) - 109) ^ 0x3E) << 24;
  LODWORD(a28) = a24 | a29;
  LODWORD(a21) = (a24 | a29) ^ 0x38258861;
  HIDWORD(a19) = v43;
  HIDWORD(a35) = v51;
  LODWORD(a27) = v51 + 14;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * a3))(941983752, 0, 53184793, v49 ^ 0xC6, 396805142, v45, 1899125462, 1744367356, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           v48,
           v47,
           v46,
           v45,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1001C4D5C@<X0>(unsigned int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  _BOOL4 v56;

  v53 = ((*(unsigned __int8 *)(v50 + a1) >> 6) & 0xFFFFFC03 | (4 * *(unsigned __int8 *)(v50 + a1))) ^ 0xFFFFFFE5;
  *(_BYTE *)(v50 + a1) = (a2 - 42) ^ (61 * a1) ^ ((_BYTE)v53 << 6) ^ ((v53 & 0xFC) >> 2) ^ 0x66;
  v54 = a1 + 1 + v52;
  v55 = (v51 < v52) ^ (v54 < v52);
  v56 = v54 < v51;
  if (v55)
    v56 = v51 < v52;
  return (*(uint64_t (**)(void))(a50 + 8 * ((31 * !v56) ^ a2)))();
}

uint64_t sub_1001C4F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  int v57;

  v57 = a51 & 0xFF00FFFF | (BYTE4(a51) << 16);
  HIDWORD(a51) = (_DWORD)a48 << 24;
  LODWORD(a49) = (a46 + v57 + ((_DWORD)a47 << 24)) ^ 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a56 + 8 * v56))(4068864429, 1351584090, a3, 675792045, a5, 1710288604, a7, 71, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1001C4FA0@<X0>(unsigned __int8 a1@<W1>, unsigned __int8 a2@<W3>, char a3@<W4>, int a4@<W7>, uint64_t a5@<X8>)
{
  char v5;
  int v6;

  return (*(uint64_t (**)(void))(a5
                              + 8
                              * ((((((a1 & (2 * (a3 + v5))) + ((a3 + v5) ^ a2)) & 3) == 0)
                                * a4) ^ v6)))();
}

uint64_t sub_1001C500C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  int v46;
  uint64_t v47;
  int v48;

  HIDWORD(a23) = v46 ^ a46;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 + 8 * (v48 - 75)) - 8))((v48 + 1796), 2221, a1, 3417036850, a2, 0, a3, 3072185535, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           v47,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1001C50B0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;

  return ((uint64_t (*)(void))(*(_QWORD *)(a56 + 8 * (((a6 == 15) * a2) ^ v56)) - 8))();
}

uint64_t sub_1001C5214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a56 + 8 * ((int)a1 - 3190)))(a1, 1200, a3, 73, a5, 280, 2888, 1128299594, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1001C52AC(int a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v1 == 3 * (((v1 * (unint64_t)v2) >> 32) >> 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((a1 - 499) | (2 * (v4 & 0xFFFFFFEF | (16 * v4))))) - 8))();
}

uint64_t sub_1001C5318()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_1001C5340(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  int v55;
  unint64_t v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v124;
  uint64_t v125;

  v54 = (((((v50 - 117859537) & 0x70666ED) + 1349) ^ 0x26953A6Du) * a5 + 329273179) >> 14;
  v55 = v54 - v47;
  HIDWORD(v56) = 5 * v48;
  LODWORD(v56) = 1588665605 * v48 + 136432529;
  v57 = (v56 >> 5) - 2013265920;
  v58 = v54 + ((1078370162 * v49) | ((-1608298567 * v49) >> 31)) - v47;
  LOBYTE(v54) = 95 * v55;
  v59 = (-111940392 * (a3 ^ v51)) | ((1059749275 * (a3 ^ v51)) >> 29);
  v60 = (-209156096 * ((v58 ^ v57) - v59)) | ((-350326511 * ((v58 ^ v57) - v59)) >> 21);
  v61 = (930742272 * v57) | ((1459624893 * v57) >> 15);
  v62 = (23273280 * v59) | ((((-872051587 * v59) ^ 0x22FF16C) + ((-872051587 * v59) | 0xFDD00E93) + 1) >> 26);
  v63 = (-77594624 * v60) | ((968443867 * v60) >> 11);
  v64 = (((26722304 * v55) | ((1485833823 * v55) >> 18)) ^ v61 ^ v60) - v62;
  v65 = (1836871772 * v64) | ((-1688265705 * v64) >> 30);
  v66 = (-1275912192 * v62) | ((502112153 * v62) >> 19);
  v67 = (v63 ^ ((355827712 * v61) | ((-537777557 * v61) >> 17)))
      + v66
      + 2 * (v63 & ((355827712 * v61) | ((-537777557 * v61) >> 17)))
      - v65;
  v68 = (1182793728 * v63) | ((-373276019 * v63) >> 9);
  v69 = (1978815507 * v65) >> 24;
  v70 = (-229371136 * v65) | ((1978815507 * v65) >> 24);
  v71 = (478150656 * v67) | ((477770809 * v67) >> 9);
  v72 = ((v68 + 1899757568 * v66) ^ ((-987800497 * v66) >> 14))
      + 2 * (((-373276019 * v63) >> 9) & ((-987800497 * v66) >> 14))
      - v70
      + v71;
  v73 = (-551371853 * (v70 + v68 + v71) + 458709165) ^ v72;
  v74 = 1748702801 * v73 - ((276180130 * v73) & 0x1FF37E06) + 268025603;
  v75 = (v74 ^ 0xFF9BF03) + v71;
  LODWORD(a40) = v74 ^ 0xFF9BF03;
  v124 = v74 ^ (v70 - 2 * (v70 & 0xFF9BF1B ^ v69 & 0x18) + 268025603);
  v76 = (-541529716 * v124) | ((-135382429 * v124) >> 30);
  v77 = (1786773504 * ((v74 ^ 0xFF9BF03) + v72)) | ((-672812843 * ((v74 ^ 0xFF9BF03) + v72)) >> 9);
  LODWORD(a46) = v75;
  v78 = (-837812224 * v75) | ((-251663135 * v75) >> 12);
  v79 = 1655727673 * v78;
  v80 = v77 ^ v78 ^ ((v76 ^ ((146276352 * v73) | ((-1598611177 * v73) >> 13)))
                   + 2 * (v76 & ((146276352 * v73) | ((-1598611177 * v73) >> 13))));
  v81 = (226492416 * v76) | ((-1368420837 * v76) >> 9);
  v82 = __PAIR64__((-251663135 * v75) >> 12, v79) >> 1;
  v83 = ((-217575291 * v80) >> (v54 & 0x11) >> (v54 & 0x11 ^ 0x11)) + 138575872 * v80;
  v84 = (-166007799 * v77) >> (((-1368420837 * v76) >> 9) & 5) >> (((-1368420837 * v76) >> 9) & 5 ^ 5);
  v85 = v84 + 1207959552 * v77;
  v86 = (v81 + v82 + v83) ^ v85;
  v87 = (-110394688 * v83) | ((-1075466741 * v83) >> 26);
  HIDWORD(v56) = 5 * v82;
  LODWORD(v56) = 1620983813 * v82;
  v88 = v56 >> 7;
  HIDWORD(v56) = 5 * v86;
  LODWORD(v56) = -1913239995 * v86;
  v89 = v56 >> 4;
  v90 = ((159571767 * v85) >> 3) - (v84 << 29);
  v91 = (v88 + v87) ^ v90 ^ v89;
  v92 = (-1342177280 * v87) | ((-606159509 * v87) >> 4);
  LODWORD(a42) = 439695083 * v89;
  v93 = (-1495441408 * v89) | ((439695083 * v89) >> 19);
  v94 = ((1663846915 * v91) >> 2) - (v91 << 30);
  v95 = v94 ^ (((-714345169 * v90) >> 2) - (v90 << 30) + v92 + v93);
  v96 = ((v93 + v92) ^ 0xF88BE57) - v94 + v95 - 975303950;
  LODWORD(a28) = v93;
  LODWORD(a25) = v96 ^ v93;
  v97 = (v96 ^ 0x11805D77) + v95;
  v98 = (-1498966016 * (v96 ^ v93 ^ 0x11805D77)) | ((-2112563981 * (v96 ^ v93 ^ 0x11805D77)) >> 21);
  LODWORD(a30) = v94 + (v96 ^ 0xEE7FA288) + 1;
  v99 = (591396864 * a30) | ((955961485 * a30) >> 10);
  v100 = (((1873104896 * (v96 ^ 0x11805D77)) | ((778500693 * (v96 ^ 0x11805D77u)) >> 20)) - v98) ^ v99;
  HIDWORD(v56) = v97;
  LODWORD(v56) = 89097647 * v97;
  v101 = v56 >> 1;
  v102 = (-990719088 * (v100 + v101)) | ((1280257337 * (v100 + v101)) >> 28);
  v103 = (-1536163840 * v99) | ((1159801415 * v99) >> 12);
  v104 = (2083426496 * v101) | ((-235881917 * v101) >> 26);
  v105 = 517650969 * v104;
  v106 = 1793614848 * v104;
  v107 = ((1162304366 * v98) | ((-1566331465 * v98) >> 31)) + v104 - v103 + v102;
  v108 = (-1246121984 * v102) | ((-881108069 * v102) >> 20);
  v109 = v106 & 0xFFFFFC00 | (v105 >> 22);
  v110 = (-860571072 * v107) | ((-1825385751 * v107) >> 26);
  v111 = 1776943733 * v108;
  v112 = 1330647976 * v108;
  v113 = -1242562560 * v103 - v109 + ((1403902815 * v103) >> 12) + v108 - v110;
  v114 = v112 & 0xFFFFFFF8 | (v111 >> 29);
  v115 = (-1217790876 * v110) | ((1843035929 * v110) >> 30);
  v116 = (-471203840 * v113) | ((856027637 * v113) >> 15);
  LODWORD(a43) = ((-1280089232 * v109) | ((-1153747401 * v109) >> 28)) - v114 + v115 + v116;
  v117 = (((1429722489 * ((v114 ^ v115 ^ 0x70114676) - v116)) ^ a43)
        - ((2 * ((1429722489 * ((v114 ^ v115 ^ 0x70114676) - v116)) ^ a43) + 1372394662) & 0x57E17DE2)
        + 1423395140) ^ 0x2BF0BEF1;
  LODWORD(a47) = v117 + v115;
  v118 = 1741429967 * (v117 + v115);
  v119 = (-994133936 * v117) & 0x200;
  if ((v119 & (v118 >> 11)) != 0)
    v119 = -v119;
  LODWORD(a41) = v119;
  v125 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v53 + 8 * (v50 ^ 0x4B9)) - 2066920503))(1028);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * ((3197 * (v125 != 0)) ^ v50)) - 8))(v125, 0, v120, 0, 0, v121, v122, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1001C5B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,char a43,int a44,int a45,uint64_t a46,int a47,int a48,unsigned int a49,int a50,int a51,int a52,unsigned int a53,uint64_t a54,uint64_t a55,unsigned int a56,unsigned int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  unint64_t v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  uint64_t v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  uint64_t (*v140)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  LODWORD(a31) = v64;
  LODWORD(v143) = a48 ^ 0x19;
  LODWORD(a24) = HIWORD(a57) ^ 0xFF9;
  HIDWORD(v146) = v66 ^ 0x2BBDC0F;
  v70 = v67 >> 26;
  v71 = a56 ^ (a45 - ((2 * a45) & 0x57E17DE2) + 737197809);
  v72 = (-1713373184 * a51) | (v63 >> 11);
  v73 = (1540358144 * (v68 + (a56 ^ 0xD40F410E) + 1)) | ((-1373530691 * (v68 + (a56 ^ 0xD40F410E) + 1)) >> 12);
  HIDWORD(v74) = v69 & 0xFFFFFDFF | ((-867439739 * v65) >> 28);
  LODWORD(v74) = v69;
  LODWORD(v146) = v71;
  LODWORD(v74) = __ROR4__((v74 >> 23) ^ __ROR4__(a41 + v72, 23) ^ 0x963F03, 9);
  v75 = (-1744830464 * v71) | ((-1066494541 * v71) >> 5);
  v76 = ((v74 ^ 0x81804B1F ^ v73) + 2 * ((v74 ^ 0x81804B1F) & v73)) ^ v75;
  v77 = ((468349999 * v76) >> (a43 & 0xA) >> (a43 & 0xA ^ 0xA)) ^ (197132288 * v76);
  v78 = (2093154304 * v77) | ((1206418627 * v77) >> 16);
  v79 = (-258998272 * v75) | ((706350857 * v75) >> 12);
  v80 = (569581696 * v73) | ((-1773935039 * v73) >> 25);
  v81 = (((-789285920 * v72) | ((-1232624737 * v72) >> 27)) + v80 + v77) ^ v79;
  v82 = (-1610612736 * v81) | ((-736383259 * v81) >> 3);
  v83 = (-429428736 * v79) | ((-1883347337 * v79) >> 20);
  v84 = (v82 ^ (((-194956208 * v80) | ((-1622797499 * v80) >> 28)) - v78)) + v83;
  v85 = (-615514112 * v78) | ((-1318769227 * v78) >> 12);
  v86 = (-968338229 * v82) >> 23;
  HIDWORD(v74) = 47894001 * v83;
  LODWORD(v74) = 47894001 * v83;
  v87 = (60857856 * v84) | ((-1761488817 * v84) >> 23);
  v88 = (-1867934208 * v82) | v86;
  v89 = v87 + (v88 ^ ((v74 >> 31) + v85));
  v90 = v89 ^ (-487702257 * (v85 - v88) - v87) ^ 0x110428F8;
  v91 = v90 - ((2 * v90 + 15261808) & 0x681C336) + 2008371667;
  v92 = (v91 ^ 0x340E19B) + v87;
  LODWORD(v148) = v91;
  v93 = v91 ^ (v88 - 2 * (v88 & 0x340E19F ^ v86 & 4) + 54583707);
  v94 = (v91 ^ 0x340E19B) + v89;
  v95 = (v92 ^ v93 ^ v94) - ((2 * (v92 ^ v93 ^ v94)) & 0x681C336);
  v96 = (-1225785344 * v94) | ((1513122671 * v94) >> 12);
  HIDWORD(v142) = v92;
  HIDWORD(v143) = v93;
  HIDWORD(v74) = v93;
  LODWORD(v74) = -37101887 * v93;
  v97 = v74 >> 3;
  v98 = (2020717712 * v92) | ((-1215882423 * v92) >> 28);
  v99 = ((-570425344 * (v91 ^ 0x340E19B)) | ((916529007 * (v91 ^ 0x340E19Bu)) >> 7)) + v97 - v98 - v96;
  v100 = (1811939328 * v99) | ((-427799909 * v99) >> 6);
  HIDWORD(v74) = (1513122671 * v94) >> 12;
  LODWORD(v74) = 1593085829 * v96;
  v101 = v74 >> 1;
  v102 = (-1688481792 * v98) | ((950646205 * v98) >> 20);
  v103 = ((v100 ^ ((-1333788672 * v97) | ((-318287519 * v97) >> 9))) - v102) ^ v101;
  v104 = (-1573234384 * v103) | ((1512285587 * v103) >> 28);
  v105 = (1920946000 * v100) | ((-1222118155 * v100) >> 28);
  v106 = ((-2060573287 * v101) >> ((v70 ^ 0xE4) + (v70 | 0x1B) + 1) >> (((v70 ^ 0xE4) + (v70 | 0x1B) + 1) ^ 0x1B)) ^ (-1513835744 * v101);
  v107 = (1532487168 * v105) | ((1991093235 * v105) >> 23);
  v108 = (((1723858944 * v102) | ((-859052645 * v102) >> 10)) + v105 - v104) ^ v106;
  v109 = (1531661555 * v108) >> 8;
  HIDWORD(v74) = 668793625 * v104;
  LODWORD(v74) = 668793625 * v104;
  v110 = v74 >> 30;
  v111 = (-218103808 * v108) | v109;
  v112 = v111 + ((v107 - v110) ^ 0x33629244) + ((2 * (v107 - v110)) & 0x66C52488);
  v113 = v111 + (v110 ^ (((-400818176 * v106) | ((-2063173113 * v106) >> 14)) + v107));
  v114 = (881874625 * v112) ^ v113;
  v115 = (~(285310886 * v114) | 0xE2BA22CB) - 662650925 * v114 + 245558939;
  v116 = v115 ^ (v111 - 2 * (v111 & 0xEA2EE9E ^ v109 & 4) + 245558938);
  v117 = v115 ^ (v110 - ((2 * v110) & 0x1D45DD34) + 245558938);
  v118 = (v115 ^ (v113 - ((2 * v113) & 0x1D45DD34) + 245558938)) + 2 * ((v115 ^ 0xEA2EE9A) & v113);
  v119 = (-1893140000 * v117) | ((1148798927 * v117) >> 27);
  v120 = ((2083158123 * v118) >> 2) - (v118 << 30);
  LODWORD(a15) = v116;
  v121 = __PAIR64__(3 * v116, 1136958547 * v116) >> 4;
  v122 = ((-1879048192 * v114) | ((459512521 * v114) >> 4)) - v119 - v121 - v120;
  HIDWORD(v74) = 257 * ((1136958547 * v116) >> 4);
  LODWORD(v74) = 147351809 * v121;
  v123 = v74 >> 10;
  v124 = (2055865344 * v122) | ((-1268866431 * v122) >> 22);
  v125 = (-2046820352 * v120) | ((1902968899 * v120) >> 7);
  v126 = ((-176387200 * v119) | ((-1142228713 * v119) >> 25)) - v123 + v125 - v124;
  v127 = -58298063 * v125;
  v128 = (838860800 * v126) | ((767383961 * v126) >> 7);
  v129 = (2046820352 * v124) | ((1449787965 * v124) >> 7);
  v130 = (822083584 * v125) | ((-58298063 * v125) >> 8);
  v131 = 1268453549 * v129;
  v132 = ((-1716475904 * v123) | ((-1273809387 * v123) >> 21)) - v130 - v129 - v128;
  HIDWORD(v74) = v131;
  LODWORD(v74) = v131;
  v133 = v74 >> 31;
  v134 = (1544585216 * v128) | ((1768994849 * v128) >> 17);
  HIDWORD(v144) = (a57 >> 8) ^ 0xFF9BF;
  v135 = (-57769984 * v132) | ((2068576541 * v132) >> 17);
  v136 = ((1065174527 * v130) >> 3) - (v127 >> 8 << 29) - v133 - v134 + v135;
  v137 = ((((v134 ^ v133) + 2 * (v134 & v133)) ^ 0xEAAE1B57) - v135 - 1930861060) ^ v136;
  v138 = v137 - ((2 * v137 - 1796490218) & 0xCB9B3306) - 1337755762;
  v139 = (v138 ^ 0x9A32667C) + 1;
  HIDWORD(v148) = v139 + v136;
  HIDWORD(v147) = v139 + v135;
  LODWORD(v142) = a56 >> 8;
  HIDWORD(a16) = (a56 >> 8) ^ 0x2BF0BE;
  LODWORD(v145) = v95 + 54583707;
  HIDWORD(v145) = v134;
  LODWORD(v144) = (v115 >> 8) ^ 0xEA2EE;
  LODWORD(a19) = v138 ^ (v134 - 2 * (v134 & 0x65CD999F ^ ((1768994849 * v128) >> 17) & 0x1C) + 1707972995);
  LODWORD(v147) = v115;
  LODWORD(a18) = v115 ^ a57;
  v140 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * v62) - 4);
  return v140(v140, v115, 4294967268, a57, 536051206, 268025603, a49, a53, a9, a10, a11, a12, v142, v143, a15, a16, v144, a18, a19,
           v145,
           v146,
           v147,
           v148,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1001C647C@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, int a4@<W7>, unsigned __int8 a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;

  v69 = v65 ^ v64 ^ a5;
  v70 = v62 ^ a4 ^ a3 ^ v63 ^ v52 ^ v60 ^ *(_DWORD *)(*(_QWORD *)(v68 + 8 * v53) + 4 * (v66 ^ v69 ^ v56) + v57);
  *(_DWORD *)(a52 + 4 * a5) = v54 ^ v69 ^ (v70 + a2 - (a1 & (2 * v70))) ^ v58;
  return ((uint64_t (*)(void))(*(_QWORD *)(v67 + 8 * (((v55 == 0) * v59) ^ v61)) - 4))();
}

uint64_t sub_1001C64F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t (*a52)(uint64_t))
{
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v54 = a52(1032);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * ((58 * (((v54 == 0) ^ (v52 + 110 + v52 - 119)) & 1)) | v52)))(v54, 0, v55, 0, 0, a31, v56, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1001C6564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,unsigned int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,int a46,int a47,int a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unsigned int v59;
  unsigned int v60;
  char v61;
  char v62;
  unsigned int v63;
  int v64;
  _BOOL4 v65;

  v60 = ((a48 ^ 0x4D25D354) - ((((a48 ^ 0x4D25D354) << ((v59 + 50) ^ 0xE5)) - 965095934) & 0xCB9B3306) - 922058620) ^ 0x4D25D354;
  v61 = (((((v60 - ((2 * v60 + 2) & 6) - 124) ^ 0x54) - ((2 * ((v60 - ((2 * v60 + 2) & 6) - 124) ^ 0x54) + 2) & 6) - 124) ^ 0x83)
       + a45) & 0xFE ^ 0x93;
  v62 = 33 * v61;
  v63 = (33 * v61);
  if (v61 >= 0)
    LOBYTE(v64) = v61;
  else
    v64 = -v61;
  v65 = v63 > ((v62 - (_BYTE)v64) & 0xFEu);
  if (v61 < 0)
    v65 = v63 < ((v62 + (_BYTE)v64) & 0xFEu);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a59
                                                                                         + 8
                                                                                         * ((86
                                                                                           * (v64 < 2u
                                                                                           && !v65)) ^ v59))
                                                                             - 8))(a1, a2, a3, a1, a24);
}

uint64_t sub_1001C6B6C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X6>, int a5@<W8>)
{
  int v5;
  unsigned __int8 v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v17 = *(_DWORD *)(*(_QWORD *)(v16 + 8 * v9) + 4 * (v14 ^ v13 ^ v6 ^ v8) + v10);
  *(_DWORD *)(a4 + 4 * v6) = a1 ^ (v17 * v11) ^ (v17 * v12) ^ a2;
  return (*(uint64_t (**)(void))(v15 + 8 * (((v7 != a3) * a5) | v5)))();
}

uint64_t sub_1001C6DE0@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, char a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;

  *(_DWORD *)(a2 + 4 * (v10 * a4)) = v11 ^ a1 ^ v7 ^ a3 ^ *(_DWORD *)(v9
                                                                                       + 4
                                                                                       * (((v10 * a4) ^ v8) ^ 0xEBu));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((4581 * (v10 + 1 != ((v6 + v4) & 0x255CDFBE ^ (v5 - 856)))) ^ v6))
                            - 8))();
}

uint64_t sub_1001C7310@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,char a50)
{
  int v50;
  int v51;
  unsigned __int8 v52;
  char v53;
  char v54;
  char v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;

  v61 = *(_DWORD *)(*(_QWORD *)(v60 + 8 * v57)
                  + 4
                  * ((((v53 ^ v52 ^ v54) - 2 * ((v53 ^ v52 ^ v54) & v55 ^ (v53 ^ v52) & 0x10) + 3) ^ a50) ^ v56)
                  + a1)
      + a2;
  *(_DWORD *)(v58 + 4 * v52) = a3 ^ v61 ^ (v61 >> 4) ^ (v61 >> 1) ^ a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v59 + 8 * (((a5 + 1 != v50 + 256) * v51) ^ a6)) - 4))();
}

uint64_t sub_1001C9838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  int v57;
  int v58;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD))(a56 + 8 * (v57 - 2273)))(a1, v58 ^ 0x9C4215Bu, a3, v56 ^ 0x588A258Du);
}

_QWORD *sub_1001C9998(unint64_t a1)
{
  uint64_t *v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  uint64_t *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int *v23;
  uint64_t v24;
  _QWORD *result;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t i;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t *v87;
  unint64_t v88;
  uint64_t *v89;
  unint64_t v90;
  int64_t *v91;
  char *v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  _BOOL4 v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  BOOL v111;
  BOOL v112;
  char *v113;
  unint64_t v114;
  unint64_t *j;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  _BYTE *v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  unsigned int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  unsigned int *v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  _BYTE *v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char *v177;
  BOOL v178;
  char v179;
  unint64_t v180;
  unint64_t *v181;
  unint64_t *v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t *v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  uint64_t *v202;
  unint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  _QWORD *v214;
  _QWORD *v215;
  _QWORD *v216;
  int64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  _QWORD *v238;
  unint64_t v239;
  unint64_t v240;
  _QWORD *v241;
  unint64_t v242;
  uint64_t v243;
  int v244;
  uint64_t v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  uint64_t v249;
  unint64_t v250;
  _DWORD *v251;
  int64_t v252;
  unint64_t *v253;
  uint64_t *v254;
  _BYTE v255[8];
  unsigned int v256;
  unsigned int v257;
  uint64_t v258;
  unsigned int v259;
  unsigned int v260;
  uint64_t v261;
  int64_t v262;
  unsigned int v263;
  unsigned int v264;
  uint64_t v265;
  int64_t v266;
  _DWORD *v267;
  unint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t *v272;
  unint64_t *v273;
  uint64_t *v274;
  unint64_t v275;
  uint64_t *v276;
  unint64_t v277;
  unint64_t v278;
  unint64_t v279;

  v2 = (uint64_t *)((char *)*(&off_100236540
                           + (byte_100227880[byte_100212AB0[(-21
                                                                                             * ((dword_10023CCE8
                                                                                               + dword_10023CD68) ^ 0x71))] ^ 8] ^ (-21 * ((dword_10023CCE8 + dword_10023CD68) ^ 0x71)))
                           - 123)
                 - 2076455982);
  v3 = (unint64_t *)((char *)*(&off_100236540
                                    + (byte_1001FC880[byte_1001E55E0[(-21 * ((dword_10023CCE8 - *v2) ^ 0x71))] ^ 0xD7] ^ (-21 * ((dword_10023CCE8 - *v2) ^ 0x71)))
                                    + 78)
                          - 965231491);
  v4 = (unint64_t)&v255[*v3 ^ *v2];
  v5 = 1509257707 * v4 + 0x6B05B50A19716BBLL;
  v6 = 1509257707 * (v4 ^ 0xDB617684DF9DEA71);
  *v2 = v5;
  *v3 = v6;
  LOBYTE(v6) = -21 * ((v6 - *(_DWORD *)v2) ^ 0x71);
  v7 = (uint64_t)*(&off_100236540
                + (byte_1001E55E0[(byte_100227880[v6
                                                                                                + 256] ^ 5)
                                                               + 256] ^ v6)
                + 25);
  v8 = *(_DWORD *)(v7 - 451869651);
  *(_DWORD *)(v7 - 451869651) = v8 + 1;
  v253 = v3;
  v254 = v2;
  v9 = *(_QWORD *)((char *)*(&off_100236540
                           + ((-21 * ((*(_BYTE *)v3 + *(_BYTE *)v2) ^ 0x71)) ^ byte_1001E55E0[(byte_100227880[(-21 * ((*(_BYTE *)v3 + *(_BYTE *)v2) ^ 0x71)) + 256] ^ 5) + 256])
                           + 213)
                 + 8 * (v8 & 1)
                 - 1936060799);
  if (!v9)
    return 0;
  v252 = *(_QWORD *)((char *)*(&off_100236540
                             + ((-21 * ((*(_BYTE *)v3 + *(_BYTE *)v2) ^ 0x71)) ^ byte_1001E55E0[(byte_100227880[(-21 * ((*(_BYTE *)v3 + *(_BYTE *)v2) ^ 0x71)) + 256] ^ 5) + 256])
                             + 213)
                   + 8 * (v8 & 1)
                   - 1936060799);
  if ((*(_BYTE *)(v9 + 880) & 2) != 0)
  {
    v10 = (unsigned int *)(v9 + 884);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(1u, v10));
    if (v11)
    {
      v12 = 0;
      while (1)
      {
        if (!*v10)
        {
          do
            v13 = __ldaxr(v10);
          while (__stlxr(1u, v10));
          if (!v13)
            break;
        }
        if ((++v12 & 0x3F) == 0)
          ((void (*)(void))((char *)*(&off_100236540
                                    + ((-21 * ((*(_DWORD *)v253 + *(_DWORD *)v254) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((*(_DWORD *)v253 + *(_DWORD *)v254) ^ 0x71))] ^ 0xC1])
                                    + 287)
                          - 1701629330))();
      }
    }
  }
  v14 = (uint64_t *)((char *)*(&off_100236540
                            + ((-21 * ((*(_DWORD *)v253 - *(_DWORD *)v254) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((*(_DWORD *)v253 - *(_DWORD *)v254) ^ 0x71))] ^ 0x5F])
                            + 133)
                  - 974766970);
  v15 = (char *)*(&off_100236540
                + ((-21 * (dword_10023CD68 ^ 0x71 ^ dword_10023CCE8)) ^ byte_1001FC880[byte_1001E55E0[(-21 * (dword_10023CD68 ^ 0x71 ^ dword_10023CCE8))] ^ 0x57])
                - 9)
      - 1897918883;
  if (a1 <= 0xE0)
  {
    v16 = (a1 + 31) & 0xFFFFFFFFFFFFFFF0;
    if (a1 < 0xF)
      v16 = 32;
    v17 = v16 >> 3;
    v18 = v252;
    v19 = *(unsigned int *)v252;
    v20 = v19 >> ((v16 >> 3) & 0xFE);
    if ((v20 & 3) != 0)
    {
      v21 = ((v19 >> ((v16 >> 3) & 0xFE)) & 1 | v17) ^ 1;
      v22 = (unsigned int *)(v252 + 16 * v21);
      v23 = v22 + 18;
      v24 = *((_QWORD *)v22 + 11);
      result = (_QWORD *)(v24 + 16);
      v26 = *(_QWORD *)(v24 + 16);
      if ((unsigned int *)v26 == v23)
      {
        *(_DWORD *)v252 = v19 & ~(1 << v21);
      }
      else
      {
        *(_QWORD *)(v26 + 24) = v23;
        *((_QWORD *)v23 + 2) = v26;
      }
      *(_QWORD *)(v24 + 8) = (8 * v21) | 3;
      v42 = (unint64_t *)(v24 + 8 * v21);
LABEL_30:
      v42[1] |= 1uLL;
      *v42 = *v14 ^ v252;
      goto LABEL_100;
    }
    if (v16 > *(_QWORD *)(v252 + 8))
    {
      if ((_DWORD)v20)
      {
        v30 = ((_DWORD)v20 << v17) & ((2 << v17) | -(2 << v17));
        v31 = (v30 - 1) & ~v30;
        v32 = (v31 >> 12) & 0x10;
        v33 = v31 >> v32;
        v34 = v32 & 0xFFFFFFF0 | (v33 >> 5) & 0xF;
        v35 = v33 >> ((v33 >> 5) & 8);
        v36 = v34 & 0xFFFFFFF8 | (v35 >> 2) & 7;
        v37 = v35 >> ((v35 >> 2) & 4);
        v38 = (v36 & 0xFFFFFFFC | (v37 >> 1) & 2 | (v37 >> ((v37 >> 1) & 2) >> 1) & 1)
            + (v37 >> ((v37 >> 1) & 2) >> (((v37 >> ((v37 >> 1) & 2)) & 2) != 0));
        v39 = v252 + 72 + 16 * v38;
        v40 = *(_QWORD *)(v39 + 16);
        result = (_QWORD *)(v40 + 16);
        v41 = *(_QWORD *)(v40 + 16);
        if (v41 == v39)
        {
          *(_DWORD *)v252 = v19 & ~(1 << v38);
        }
        else
        {
          *(_QWORD *)(v41 + 24) = v39;
          *(_QWORD *)(v39 + 16) = v41;
        }
        v126 = 8 * v38;
        v127 = v126 - v16;
        if (v126 - v16 > 0x1F)
        {
          *(_QWORD *)(v40 + 8) = v16 | 3;
          v128 = (unint64_t *)(v40 + v16);
          *v128 = *v14 ^ v252;
          v128[1] = v127 | 1;
          *(_QWORD *)(v40 + v126) = v127;
          v129 = *(_QWORD *)(v252 + 8);
          if (v129)
          {
            v130 = *(_QWORD *)(v252 + 32);
            v131 = v252 + 72 + ((2 * v129) & 0x7FFFFFFF0);
            v132 = 1 << (v129 >> 3);
            if ((*(_DWORD *)v252 & v132) != 0)
            {
              v133 = *(_QWORD *)(v131 + 16);
            }
            else
            {
              *(_DWORD *)v252 |= v132;
              v133 = v252 + 72 + ((2 * v129) & 0x7FFFFFFF0);
            }
            *(_QWORD *)(v131 + 16) = v130;
            *(_QWORD *)(v133 + 24) = v130;
            *(_QWORD *)(v130 + 16) = v133;
            *(_QWORD *)(v130 + 24) = v131;
          }
          *(_QWORD *)(v252 + 8) = v127;
          *(_QWORD *)(v252 + 32) = v128;
          goto LABEL_100;
        }
        *(_QWORD *)(v40 + 8) = v126 | 3;
        v42 = (unint64_t *)(v40 + v126);
        goto LABEL_30;
      }
      v66 = *(_DWORD *)(v252 + 4);
      if (v66)
      {
        v67 = (v66 - 1) & ~v66;
        v68 = (v67 >> 12) & 0x10;
        v69 = v67 >> v68;
        v70 = v68 & 0xFFFFFFF0 | (v69 >> 5) & 0xF;
        v71 = v69 >> ((v69 >> 5) & 8);
        v72 = v70 & 0xFFFFFFF8 | (v71 >> 2) & 7;
        v73 = v71 >> ((v71 >> 2) & 4);
        v74 = *(_QWORD *)(v252
                        + 8
                        * ((v72 & 0xFFFFFFFC | (v73 >> 1) & 2 | (v73 >> ((v73 >> 1) & 2) >> 1) & 1)
                         + (v73 >> ((v73 >> 1) & 2) >> (((v73 >> ((v73 >> 1) & 2)) & 2) != 0)))
                        + 600);
        v75 = (*(_QWORD *)(v74 + 8) & 0xFFFFFFFFFFFFFFF8) - v16;
        v76 = 32;
        if (!*(_QWORD *)(v74 + 32))
          v76 = 40;
        for (i = *(_QWORD *)(v74 + v76); i; i = *(_QWORD *)(i + v78))
        {
          if ((*(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8) - v16 < v75)
          {
            v75 = (*(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8) - v16;
            v74 = i;
          }
          if (*(_QWORD *)(i + 32))
            v78 = 32;
          else
            v78 = 40;
        }
        v79 = *(_QWORD *)(v74 + 48);
        v80 = *(_QWORD **)(v74 + 24);
        if (v80 != (_QWORD *)v74)
        {
          v81 = *(_QWORD *)(v74 + 16);
          *(_QWORD *)(v81 + 24) = v80;
          v80[2] = v81;
          if (!v79)
            goto LABEL_229;
LABEL_176:
          v154 = (unsigned int *)(v252 + 8 * *(unsigned int *)(v74 + 56));
          if (v74 == *((_QWORD *)v154 + 75))
          {
            *((_QWORD *)v154 + 75) = v80;
            if (!v80)
            {
              *(_DWORD *)(v252 + 4) &= ~(1 << *(_DWORD *)(v74 + 56));
              goto LABEL_229;
            }
          }
          else
          {
            v155 = 40;
            if (*(_QWORD *)(v79 + 32) == v74)
              v155 = 32;
            *(_QWORD *)(v79 + v155) = v80;
            if (!v80)
              goto LABEL_229;
          }
          v80[6] = v79;
          v166 = *(_QWORD *)(v74 + 32);
          if (v166)
          {
            v80[4] = v166;
            *(_QWORD *)(v166 + 48) = v80;
          }
          v167 = *(_QWORD *)(v74 + 40);
          if (v167)
          {
            v80[5] = v167;
            *(_QWORD *)(v167 + 48) = v80;
          }
          goto LABEL_229;
        }
        v151 = (_QWORD *)(v74 + 40);
        v152 = *(_QWORD **)(v74 + 40);
        if (v152 || (v151 = (_QWORD *)(v74 + 32), (v152 = *(_QWORD **)(v74 + 32)) != 0))
        {
          do
          {
            do
            {
              v153 = v151;
              v80 = v152;
              v151 = v152 + 5;
              v152 = (_QWORD *)v152[5];
            }
            while (v152);
            v151 = v80 + 4;
            v152 = (_QWORD *)v80[4];
          }
          while (v152);
          *v153 = 0;
          if (v79)
            goto LABEL_176;
        }
        else
        {
          v80 = 0;
          if (v79)
            goto LABEL_176;
        }
LABEL_229:
        if (v75 > 0x1F)
        {
          *(_QWORD *)(v74 + 8) = v16 | 3;
          *(_QWORD *)(v74 + v16) = *v14 ^ v252;
          v195 = v74 + v16;
          *(_QWORD *)(v195 + 8) = v75 | 1;
          *(_QWORD *)(v195 + v75) = v75;
          v196 = *(_QWORD *)(v252 + 8);
          if (v196)
          {
            v197 = *(_QWORD *)(v252 + 32);
            v198 = v196 >> 3;
            v199 = v252 + ((2 * v196) & 0x7FFFFFFF0) + 72;
            v200 = 1 << v198;
            if ((*(_DWORD *)v252 & v200) != 0)
            {
              v201 = *(_QWORD *)(v199 + 16);
            }
            else
            {
              *(_DWORD *)v252 |= v200;
              v201 = v199;
            }
            *(_QWORD *)(v199 + 16) = v197;
            *(_QWORD *)(v201 + 24) = v197;
            *(_QWORD *)(v197 + 16) = v201;
            *(_QWORD *)(v197 + 24) = v199;
          }
          *(_QWORD *)(v252 + 8) = v75;
          *(_QWORD *)(v252 + 32) = v195;
          result = (_QWORD *)(v74 + 16);
        }
        else
        {
          v193 = v75 + v16;
          *(_QWORD *)(v74 + 8) = v193 | 3;
          v194 = (unint64_t *)(v74 + v193);
          v194[1] |= 1uLL;
          *v194 = *v14 ^ v252;
          result = (_QWORD *)(v74 + 16);
        }
        goto LABEL_100;
      }
    }
    goto LABEL_76;
  }
  v18 = v252;
  if (a1 > 0xFFFFFFFFFFFFFF7FLL)
  {
    v16 = -1;
    goto LABEL_76;
  }
  v16 = (a1 + 31) & 0xFFFFFFFFFFFFFFF0;
  v27 = *(_DWORD *)(v252 + 4);
  v267 = (_DWORD *)(v252 + 4);
  if (v27)
  {
    v28 = -(uint64_t)v16;
    if (v16 >= 0x100)
    {
      if (v16 >> 24)
      {
        v29 = 31;
      }
      else
      {
        v43 = (a1 + 31) >> 8;
        v44 = ((v43 + 1048320) >> 16) & 8;
        LODWORD(v43) = (_DWORD)v43 << v44;
        LODWORD(v43) = ((_DWORD)v43 << (((v43 + 520192) >> 16) & 4) << (((((_DWORD)v43 << (((v43 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                     - (((((_DWORD)v43 << (((v43 + 520192) >> 16) & 4)) + 245760) >> 16) & 2 | v44 | ((v43 + 520192) >> 16) & 4);
        v29 = ((v16 >> (v43 + 21)) & 1 | (2 * v43)) + 28;
      }
    }
    else
    {
      v29 = 0;
    }
    v45 = *(_QWORD *)(v252 + 8 * v29 + 600);
    if (v45)
    {
      v46 = 0;
      v47 = 0;
      v48 = 57 - (v29 >> 1);
      if (v29 == 31)
        LOBYTE(v48) = 0;
      v49 = v16 << v48;
      while (1)
      {
        v52 = (*(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF8) - v16;
        if (v52 < v28)
        {
          v28 = (*(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF8) - v16;
          v47 = v45;
          if (!v52)
            break;
        }
        v50 = *(_QWORD *)(v45 + 40);
        v45 = *(_QWORD *)(v45 + ((v49 >> 60) & 8) + 32);
        if (v50 != v45 && v50 != 0)
          v46 = v50;
        v49 *= 2;
        if (!v45)
          goto LABEL_48;
      }
      v46 = v45;
      v47 = v45;
    }
    else
    {
      v46 = 0;
      v47 = 0;
LABEL_48:
      if (!(v46 | v47))
      {
        v53 = ((2 << v29) | -(2 << v29)) & v27;
        if (!v53)
          goto LABEL_76;
        v47 = 0;
        v54 = (v53 - 1) & ~v53;
        v55 = (v54 >> 12) & 0x10;
        v56 = v54 >> v55;
        v57 = v55 & 0xFFFFFFF0 | (v56 >> 5) & 0xF;
        v58 = v56 >> ((v56 >> 5) & 8);
        v59 = v57 & 0xFFFFFFF8 | (v58 >> 2) & 7;
        v60 = v58 >> ((v58 >> 2) & 4);
        v46 = *(_QWORD *)(v252
                        + 8
                        * ((v59 & 0xFFFFFFFC | (v60 >> 1) & 2 | (v60 >> ((v60 >> 1) & 2) >> 1) & 1)
                         + (v60 >> ((v60 >> 1) & 2) >> (((v60 >> ((v60 >> 1) & 2)) & 2) != 0)))
                        + 600);
      }
      if (!v46)
      {
LABEL_58:
        v268 = v28;
        v269 = v47;
        if (!v47 || v268 >= *(_QWORD *)(v252 + 8) - v16)
          goto LABEL_76;
        v62 = v269;
        v270 = v269 + v16;
        v63 = *(_QWORD *)(v269 + 48);
        v64 = *(_QWORD **)(v269 + 24);
        if (v64 == (_QWORD *)v269)
        {
          v134 = (_QWORD *)(v269 + 40);
          v135 = *(_QWORD **)(v269 + 40);
          if (v135 || (v134 = (_QWORD *)(v269 + 32), (v135 = *(_QWORD **)(v269 + 32)) != 0))
          {
            do
            {
              do
              {
                v136 = v134;
                v64 = v135;
                v134 = v135 + 5;
                v135 = (_QWORD *)v135[5];
              }
              while (v135);
              v134 = v64 + 4;
              v135 = (_QWORD *)v64[4];
            }
            while (v135);
            *v136 = 0;
            if (!v63)
              goto LABEL_216;
          }
          else
          {
            v64 = 0;
            if (!v63)
              goto LABEL_216;
          }
        }
        else
        {
          v65 = *(_QWORD *)(v269 + 16);
          *(_QWORD *)(v65 + 24) = v64;
          v64[2] = v65;
          if (!v63)
            goto LABEL_216;
        }
        v137 = v269;
        v138 = (unsigned int *)(v252 + 8 * *(unsigned int *)(v269 + 56));
        if (v269 == *((_QWORD *)v138 + 75))
        {
          *((_QWORD *)v138 + 75) = v64;
          if (!v64)
          {
            *v267 &= ~(1 << *(_DWORD *)(v137 + 56));
LABEL_216:
            if (v268 > 0x1F)
            {
              v182 = (unint64_t *)v270;
              *(_QWORD *)(v269 + 8) = v16 | 3;
              v183 = v268;
              v184 = v268 | 1;
              *v182 = *v14 ^ v252;
              v182[1] = v184;
              *(unint64_t *)((char *)v182 + v183) = v183;
              if (v183 > 0xFF)
              {
                v256 = 31;
                if (!(v183 >> 24))
                {
                  v189 = (((v268 >> 8) + 1048320) >> 16) & 8;
                  v190 = (v268 >> 8) << v189;
                  v191 = (v190 << (((v190 + 520192) >> 16) & 4) << ((((v190 << (((v190 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                       - ((((v190 << (((v190 + 520192) >> 16) & 4)) + 245760) >> 16) & 2 | v189 | ((v190 + 520192) >> 16) & 4);
                  v256 = ((v268 >> (v191 + 21)) & 1 | (2 * v191)) + 28;
                }
                v257 = v256;
                v258 = v252 + 8 * v256 + 600;
                *(_DWORD *)(v270 + 56) = v256;
                __asm { BR              X8 }
              }
              v185 = v183 >> 3;
              v186 = v252 + ((2 * v183) & 0x7FFFFFFF0) + 72;
              v187 = 1 << v185;
              if ((v187 & *(_DWORD *)v252) != 0)
              {
                v188 = *(_QWORD *)(v186 + 16);
              }
              else
              {
                *(_DWORD *)v252 |= v187;
                v188 = v186;
              }
              v192 = v270;
              *(_QWORD *)(v186 + 16) = v270;
              *(_QWORD *)(v188 + 24) = v192;
              *(_QWORD *)(v192 + 16) = v188;
              *(_QWORD *)(v192 + 24) = v186;
            }
            else
            {
              v180 = v268 + v16;
              *(_QWORD *)(v269 + 8) = v180 | 3;
              v181 = (unint64_t *)(v62 + v180);
              v181[1] |= 1uLL;
              *v181 = *v14 ^ v252;
            }
            v89 = (uint64_t *)v269;
            goto LABEL_99;
          }
        }
        else
        {
          v139 = 40;
          if (*(_QWORD *)(v63 + 32) == v269)
            v139 = 32;
          *(_QWORD *)(v63 + v139) = v64;
          if (!v64)
            goto LABEL_216;
        }
        v64[6] = v63;
        v140 = *(_QWORD *)(v269 + 32);
        if (v140)
        {
          v64[4] = v140;
          *(_QWORD *)(v140 + 48) = v64;
        }
        v141 = *(_QWORD *)(v269 + 40);
        if (v141)
        {
          v64[5] = v141;
          *(_QWORD *)(v141 + 48) = v64;
        }
        goto LABEL_216;
      }
    }
    do
    {
      if ((*(_QWORD *)(v46 + 8) & 0xFFFFFFFFFFFFFFF8) - v16 < v28)
      {
        v28 = (*(_QWORD *)(v46 + 8) & 0xFFFFFFFFFFFFFFF8) - v16;
        v47 = v46;
      }
      if (*(_QWORD *)(v46 + 32))
        v61 = 32;
      else
        v61 = 40;
      v46 = *(_QWORD *)(v46 + v61);
    }
    while (v46);
    goto LABEL_58;
  }
LABEL_76:
  v271 = v16;
  v82 = *(_QWORD *)(v18 + 8);
  if (v82 >= v16)
  {
    v88 = v82 - v271;
    v89 = *(uint64_t **)(v18 + 32);
    if (v82 - v271 < 0x20)
    {
      *(_QWORD *)(v18 + 8) = 0;
      *(_QWORD *)(v18 + 32) = 0;
      v89[1] = v82 | 3;
      v91 = (uint64_t *)((char *)v89 + v82);
      *(uint64_t *)((char *)v89 + v82 + 8) |= 1uLL;
    }
    else
    {
      v90 = v271;
      v91 = (uint64_t *)((char *)v89 + v271);
      *(_QWORD *)(v18 + 32) = (char *)v89 + v271;
      *(_QWORD *)(v18 + 8) = v88;
      v91[1] = v88 | 1;
      *(uint64_t *)((char *)v89 + v82) = v88;
      v89[1] = v90 | 3;
    }
    *v91 = *v14 ^ v18;
    goto LABEL_99;
  }
  v83 = *(_QWORD *)(v18 + 16);
  v272 = (uint64_t *)(v18 + 16);
  if (v83 > v271)
  {
    v84 = v271;
    v85 = v83 - v271;
    *v272 = v85;
    v86 = *(_QWORD *)(v18 + 40);
    v87 = (int64_t *)(v86 + v84);
    *(_QWORD *)(v18 + 40) = v86 + v84;
LABEL_79:
    v87[1] = v85 | 1;
    *(_QWORD *)(v86 + 8) = v84 | 3;
    *v87 = *v14 ^ v18;
    result = (_QWORD *)(v86 + 16);
    goto LABEL_100;
  }
  v92 = (char *)*(&off_100236540
                + ((-21 * ((*(_DWORD *)v253 + *(_DWORD *)v254) ^ 0x71)) ^ byte_100227880[byte_100212AB0[(-21 * ((*(_DWORD *)v253 + *(_DWORD *)v254) ^ 0x71))] ^ 5])
                - 147)
      - 1647594951;
  if ((*(_BYTE *)(v18 + 880) & 1) != 0 && v14[3] <= v271)
  {
    if (v83)
    {
      v93 = (v14[1] + v271 + 62) & -v14[1];
      v94 = *(_QWORD *)(v18 + 872);
      if (!v94 || (v95 = *(_QWORD *)(v18 + 856), v95 + v93 > v95) && v95 + v93 <= v94)
      {
        if (v93 > v271)
        {
          v96 = ((uint64_t (*)(_QWORD, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))v92)(0, (v14[1] + v271 + 62) & -v14[1], 3, 4098, 0xFFFFFFFFLL, 0);
          if (v96 != -1)
          {
            v97 = -((_DWORD)v96 + 16) & 0xFLL;
            if (((v96 + 16) & 0xF) == 0)
              v97 = 0;
            v89 = (uint64_t *)(v96 + v97);
            *v89 = v97;
            v89[1] = v93 - v97 - 32;
            v98 = v96 + v93 - 32;
            *(_QWORD *)v98 = *v14 ^ v18;
            *(_OWORD *)(v98 + 8) = xmmword_100212E40;
            v99 = *(_QWORD *)(v18 + 24);
            if (!v99 || v96 < v99)
              *(_QWORD *)(v18 + 24) = v96;
            v100 = *(_QWORD *)(v18 + 856) + v93;
            *(_QWORD *)(v18 + 856) = v100;
            if (v100 > *(_QWORD *)(v18 + 864))
              *(_QWORD *)(v18 + 864) = v100;
            goto LABEL_99;
          }
        }
      }
    }
  }
  result = 0;
  v101 = (v14[2] + v271 + 95) & -v14[2];
  if (v101 > v271)
  {
    v102 = *(_QWORD *)(v18 + 872);
    if (!v102 || (result = 0, v103 = *(_QWORD *)(v18 + 856), v103 + v101 > v103) && v103 + v101 <= v102)
    {
      v104 = ((uint64_t (*)(_QWORD, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))v92)(0, (v14[2] + v271 + 95) & -v14[2], 3, 4098, 0xFFFFFFFFLL, 0);
      v105 = v104 != -1;
      if (v104 == -1)
        v106 = 0;
      else
        v106 = v101;
      if (v104 == -1)
      {
LABEL_300:
        v251 = (_DWORD *)((uint64_t (*)(void))((char *)*(&off_100236540
                                                      + ((-21
                                                                         * ((*(_DWORD *)v253 + *(_DWORD *)v254) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((*(_DWORD *)v253 + *(_DWORD *)v254) ^ 0x71))] ^ 0xC1])
                                                      - 161)
                                            - 1043375314))();
        result = 0;
        *v251 = 12;
        goto LABEL_100;
      }
      v107 = *(_QWORD *)(v18 + 856) + v106;
      *(_QWORD *)(v18 + 856) = v107;
      if (v107 > *(_QWORD *)(v18 + 864))
        *(_QWORD *)(v18 + 864) = v107;
      v108 = *(_QWORD *)(v18 + 40);
      v273 = (unint64_t *)(v18 + 40);
      v274 = (uint64_t *)(v18 + 40);
      v275 = v108;
      if (v108)
      {
        v109 = *(_QWORD *)(v18 + 888);
        v110 = *(_QWORD *)(v18 + 896);
        if (v104 != v109 + v110
          || (*(_DWORD *)(v18 + 912) & 8) != 0
          || ((*(_DWORD *)(v18 + 912) & 1) == v105 ? (v111 = v109 > v108) : (v111 = 1),
              !v111 ? (v112 = v104 > v108) : (v112 = 0),
              !v112))
        {
          v113 = (char *)(v18 + 888);
          if (v104 < *(_QWORD *)(v18 + 24))
            *(_QWORD *)(v18 + 24) = v104;
          v114 = v104 + v106;
          if (*(_QWORD *)v113 == v104 + v106
            && (*(_DWORD *)(v18 + 912) & 8) == 0
            && (*(_DWORD *)(v18 + 912) & 1) == v105)
          {
            *(_QWORD *)(v18 + 888) = v104;
            *(_QWORD *)(v18 + 896) += v106;
            if (((v104 + 16) & 0xF) != 0)
              v156 = -((_DWORD)v104 + 16) & 0xFLL;
            else
              v156 = 0;
            v157 = v104 + v156;
            if (((v114 + 16) & 0xF) != 0)
              v158 = -((_DWORD)v114 + 16) & 0xFLL;
            else
              v158 = 0;
            v159 = v114 + v158;
            v160 = v271;
            v276 = (uint64_t *)v157;
            v277 = v157 + v271;
            v161 = v159 - v157 - v271;
            *(_QWORD *)(v157 + 8) = v271 | 3;
            *(_QWORD *)(v157 + v160) = *v14 ^ v18;
            if (*v274 == v159)
            {
              v207 = *v272 + v161;
              *v272 = v207;
              v208 = v277;
              *v273 = v277;
              *(_QWORD *)(v208 + 8) = v207 | 1;
            }
            else
            {
              if (*(_QWORD *)(v18 + 32) != v159)
              {
                v162 = *(_QWORD *)(v159 + 8);
                if ((v162 & 3) != 1)
                {
LABEL_268:
                  v278 = v161;
                  *(_QWORD *)(v159 + 8) &= ~1uLL;
                  v221 = v277;
                  *(_QWORD *)(v277 + 8) = v161 | 1;
                  *(_QWORD *)(v221 + v161) = v161;
                  if (v161 > 0xFF)
                  {
                    v259 = 31;
                    if (!(v161 >> 24))
                    {
                      v226 = (((v278 >> 8) + 1048320) >> 16) & 8;
                      v227 = (v278 >> 8) << v226;
                      v228 = (v227 << (((v227 + 520192) >> 16) & 4) << ((((v227 << (((v227 + 520192) >> 16) & 4))
                                                                        + 245760) >> 16) & 2) >> 15)
                           - ((((v227 << (((v227 + 520192) >> 16) & 4)) + 245760) >> 16) & 2 | v226 | ((v227 + 520192) >> 16) & 4);
                      v259 = ((v278 >> (v228 + 21)) & 1 | (2 * v228)) + 28;
                    }
                    v260 = v259;
                    v229 = v18 + 8 * v259 + 600;
                    *(_DWORD *)(v277 + 56) = v259;
                    v261 = v229;
                    v262 = v18 + 4;
                    __asm { BR              X8 }
                  }
                  v222 = v161 >> 3;
                  v223 = v18 + ((2 * v161) & 0x7FFFFFFF0) + 72;
                  v224 = 1 << v222;
                  if ((v224 & *(_DWORD *)v18) != 0)
                  {
                    v225 = *(_QWORD *)(v223 + 16);
                  }
                  else
                  {
                    *(_DWORD *)v18 |= v224;
                    v225 = v223;
                  }
                  v230 = v277;
                  *(_QWORD *)(v223 + 16) = v277;
                  *(_QWORD *)(v225 + 24) = v230;
                  *(_QWORD *)(v230 + 16) = v225;
                  *(_QWORD *)(v230 + 24) = v223;
                  goto LABEL_278;
                }
                v163 = v162 & 0xFFFFFFFFFFFFFFF8;
                if (v162 <= 0xFF)
                {
                  v164 = *(_QWORD *)(v159 + 16);
                  v165 = *(_QWORD *)(v159 + 24);
                  if (v165 == v164)
                  {
                    *(_DWORD *)v18 &= ~(1 << (v162 >> 3));
                  }
                  else
                  {
                    *(_QWORD *)(v164 + 24) = v165;
                    *(_QWORD *)(v165 + 16) = v164;
                  }
                  goto LABEL_267;
                }
                v211 = *(_QWORD *)(v159 + 48);
                v212 = *(_QWORD **)(v159 + 24);
                if (v212 == (_QWORD *)v159)
                {
                  v214 = (_QWORD *)(v159 + 40);
                  v215 = *(_QWORD **)(v159 + 40);
                  if (v215 || (v214 = (_QWORD *)(v159 + 32), (v215 = *(_QWORD **)(v159 + 32)) != 0))
                  {
                    do
                    {
                      do
                      {
                        v216 = v214;
                        v212 = v215;
                        v214 = v215 + 5;
                        v215 = (_QWORD *)v215[5];
                      }
                      while (v215);
                      v214 = v212 + 4;
                      v215 = (_QWORD *)v212[4];
                    }
                    while (v215);
                    *v216 = 0;
                  }
                  else
                  {
                    v212 = 0;
                  }
                  v18 = v252;
                }
                else
                {
                  v213 = *(_QWORD *)(v159 + 16);
                  *(_QWORD *)(v213 + 24) = v212;
                  v212[2] = v213;
                }
                if (!v211)
                  goto LABEL_267;
                v217 = v18 + 8 * *(unsigned int *)(v159 + 56);
                if (*(_QWORD *)(v217 + 600) == v159)
                {
                  *(_QWORD *)(v217 + 600) = v212;
                  if (!v212)
                  {
                    *(_DWORD *)(v18 + 4) &= ~(1 << *(_DWORD *)(v159 + 56));
LABEL_267:
                    v159 += v163;
                    v161 += v163;
                    goto LABEL_268;
                  }
                }
                else
                {
                  v218 = 40;
                  if (*(_QWORD *)(v211 + 32) == v159)
                    v218 = 32;
                  *(_QWORD *)(v211 + v218) = v212;
                  if (!v212)
                    goto LABEL_267;
                }
                v212[6] = v211;
                v219 = *(_QWORD *)(v159 + 32);
                if (v219)
                {
                  v212[4] = v219;
                  *(_QWORD *)(v219 + 48) = v212;
                }
                v220 = *(_QWORD *)(v159 + 40);
                if (v220)
                {
                  v212[5] = v220;
                  *(_QWORD *)(v220 + 48) = v212;
                }
                goto LABEL_267;
              }
              v209 = *(_QWORD *)(v18 + 8) + v161;
              *(_QWORD *)(v18 + 8) = v209;
              v210 = v277;
              *(_QWORD *)(v18 + 32) = v277;
              *(_QWORD *)(v210 + 8) = v209 | 1;
              *(_QWORD *)(v210 + v209) = v209;
            }
LABEL_278:
            v89 = v276;
LABEL_99:
            result = v89 + 2;
            goto LABEL_100;
          }
          for (j = (unint64_t *)(v18 + 888); ; j = (unint64_t *)j[2])
          {
            if (*j <= v108)
            {
              v116 = *j + j[1];
              if (v116 > v108)
                break;
            }
          }
          if (((v116 - 79) & 0xF) != 0)
            v117 = (79 - (int)v116) & 0xFLL;
          else
            v117 = 0;
          v118 = v116 + v117 - 95;
          if (v118 < v275 + 32)
            v118 = v108;
          v119 = (_BYTE *)(v118 + 16);
          v120 = v106 - 80;
          if (((v104 + 16) & 0xF) != 0)
            v121 = -((_DWORD)v104 + 16) & 0xFLL;
          else
            v121 = 0;
          v122 = v104 + v121;
          v123 = v120 - v121;
          *v273 = v122;
          *v272 = v123;
          *(_QWORD *)(v122 + 8) = v123 | 1;
          *(_QWORD *)(v104 + v120 + 8) = 80;
          *(_QWORD *)(v18 + 48) = v14[4];
          *(_QWORD *)(v118 + 8) = 51;
          *(_QWORD *)(v118 + 48) = *v14 ^ v18;
          if (((v119 ^ v113) & 7) != 0)
          {
            v124 = 0;
            do
            {
              v125 = &v119[v124];
              *v125 = v113[v124];
              v125[1] = v113[v124 + 1];
              v125[2] = v113[v124 + 2];
              v125[3] = v113[v124 + 3];
              v125[4] = v113[v124 + 4];
              v125[5] = v113[v124 + 5];
              v125[6] = v113[v124 + 6];
              v125[7] = v113[v124 + 7];
              v124 += 8;
            }
            while ((_DWORD)v124 != 32);
          }
          else
          {
            v168 = -(int)v113 & 7;
            v169 = (_BYTE *)(v118 + 16);
            switch((int)v168)
            {
              case 1:
                goto LABEL_210;
              case 2:
                goto LABEL_209;
              case 3:
                goto LABEL_208;
              case 4:
                goto LABEL_207;
              case 5:
                goto LABEL_206;
              case 6:
                goto LABEL_205;
              case 7:
                v170 = *v113;
                v113 = (char *)(v18 + 889);
                *v119 = v170;
                v169 = (_BYTE *)(v118 + 17);
LABEL_205:
                v171 = *v113++;
                *v169++ = v171;
LABEL_206:
                v172 = *v113++;
                *v169++ = v172;
LABEL_207:
                v173 = *v113++;
                *v169++ = v173;
LABEL_208:
                v174 = *v113++;
                *v169++ = v174;
LABEL_209:
                v175 = *v113++;
                *v169++ = v175;
LABEL_210:
                v176 = *v113++;
                *v169 = v176;
                v177 = v169 + 1;
                break;
              default:
                v177 = (char *)(v118 + 16);
                break;
            }
            v178 = v168 <= 0x20;
            v179 = 32 - v168;
            if (!v178)
              v179 = 0;
            v231 = v179 & 7;
            switch(v231)
            {
              case 0:
                break;
              case 1:
                goto LABEL_286;
              case 2:
                goto LABEL_285;
              case 3:
                goto LABEL_284;
              case 4:
                goto LABEL_283;
              case 5:
                goto LABEL_282;
              case 6:
                goto LABEL_281;
              case 7:
                v232 = *v113++;
                *v177++ = v232;
LABEL_281:
                v233 = *v113++;
                *v177++ = v233;
LABEL_282:
                v234 = *v113++;
                *v177++ = v234;
LABEL_283:
                v235 = *v113++;
                *v177++ = v235;
LABEL_284:
                v236 = *v113++;
                *v177++ = v236;
LABEL_285:
                v237 = *v113++;
                *v177++ = v237;
LABEL_286:
                *v177 = *v113;
                break;
              default:
                __asm { BR              X4 }
                return result;
            }
          }
          *(_QWORD *)(v18 + 888) = v104;
          *(_QWORD *)(v18 + 896) = v106;
          *(_DWORD *)(v18 + 912) = v105;
          v238 = (_QWORD *)(v118 + 56);
          *(_QWORD *)(v18 + 904) = v119;
          do
            *v238++ = 11;
          while (v116 > (unint64_t)v238);
          if (v118 != v108)
          {
            v239 = v275;
            v240 = v118 - v275;
            v279 = v118 - v275;
            v241 = (_QWORD *)(v108 + v118 - v275);
            v241[1] &= ~1uLL;
            *(_QWORD *)(v239 + 8) = (v118 - v239) | 1;
            *v241 = v118 - v239;
            if (v118 - v239 > 0xFF)
            {
              v263 = 31;
              if (!(v240 >> 24))
              {
                v246 = (((v279 >> 8) + 1048320) >> 16) & 8;
                v247 = (v279 >> 8) << v246;
                v248 = (v247 << (((v247 + 520192) >> 16) & 4) << ((((v247 << (((v247 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                     - ((((v247 << (((v247 + 520192) >> 16) & 4)) + 245760) >> 16) & 2 | v246 | ((v247 + 520192) >> 16) & 4);
                v263 = ((v279 >> (v248 + 21)) & 1 | (2 * v248)) + 28;
              }
              v264 = v263;
              v249 = v18 + 8 * v263 + 600;
              *(_DWORD *)(v275 + 56) = v263;
              v265 = v249;
              v266 = v18 + 4;
              __asm { BR              X8 }
            }
            v242 = v240 >> 3;
            v243 = v18 + ((2 * v240) & 0x7FFFFFFF0) + 72;
            v244 = 1 << v242;
            if ((v244 & *(_DWORD *)v18) != 0)
            {
              v245 = *(_QWORD *)(v243 + 16);
            }
            else
            {
              *(_DWORD *)v18 |= v244;
              v245 = v243;
            }
            v250 = v275;
            *(_QWORD *)(v243 + 16) = v275;
            *(_QWORD *)(v245 + 24) = v250;
            *(_QWORD *)(v250 + 16) = v245;
            *(_QWORD *)(v250 + 24) = v243;
          }
          goto LABEL_298;
        }
        *(_QWORD *)(v18 + 896) = v110 + v106;
        v202 = v272;
        v203 = *v272 + v106;
        if (((v275 + 16) & 0xF) != 0)
          v204 = -((_DWORD)v275 + 16) & 0xFLL;
        else
          v204 = 0;
        v205 = v108 + v204;
        v206 = v203 - v204;
        *v273 = v205;
        *v202 = v206;
        *(_QWORD *)(v205 + 8) = v206 | 1;
        *(_QWORD *)(v108 + v203 + 8) = 80;
      }
      else
      {
        v142 = *(_QWORD *)(v18 + 24);
        if (!v142 || v104 < v142)
          *(_QWORD *)(v18 + 24) = v104;
        *(_QWORD *)(v18 + 888) = v104;
        *(_QWORD *)(v18 + 896) = v106;
        *(_DWORD *)(v18 + 912) = v105;
        v143 = *v14;
        *(_QWORD *)(v18 + 56) = 4095;
        *(_QWORD *)(v18 + 64) = v143;
        *(_QWORD *)(v18 + 88) = v18 + 72;
        *(_QWORD *)(v18 + 96) = v18 + 72;
        *(_QWORD *)(v18 + 112) = v18 + 88;
        *(_QWORD *)(v18 + 104) = v18 + 88;
        *(_QWORD *)(v18 + 128) = v18 + 104;
        *(_QWORD *)(v18 + 120) = v18 + 104;
        *(_QWORD *)(v18 + 136) = v18 + 120;
        *(_QWORD *)(v18 + 144) = v18 + 120;
        *(_QWORD *)(v18 + 160) = v18 + 136;
        *(_QWORD *)(v18 + 152) = v18 + 136;
        *(_QWORD *)(v18 + 176) = v18 + 152;
        *(_QWORD *)(v18 + 168) = v18 + 152;
        *(_QWORD *)(v18 + 184) = v18 + 168;
        *(_QWORD *)(v18 + 192) = v18 + 168;
        *(_QWORD *)(v18 + 208) = v18 + 184;
        *(_QWORD *)(v18 + 200) = v18 + 184;
        *(_QWORD *)(v18 + 224) = v18 + 200;
        *(_QWORD *)(v18 + 216) = v18 + 200;
        *(_QWORD *)(v18 + 232) = v18 + 216;
        *(_QWORD *)(v18 + 240) = v18 + 216;
        *(_QWORD *)(v18 + 248) = v18 + 232;
        *(_QWORD *)(v18 + 256) = v18 + 232;
        *(_QWORD *)(v18 + 264) = v18 + 248;
        *(_QWORD *)(v18 + 272) = v18 + 248;
        *(_QWORD *)(v18 + 280) = v18 + 264;
        *(_QWORD *)(v18 + 288) = v18 + 264;
        *(_QWORD *)(v18 + 296) = v18 + 280;
        *(_QWORD *)(v18 + 304) = v18 + 280;
        *(_QWORD *)(v18 + 312) = v18 + 296;
        *(_QWORD *)(v18 + 320) = v18 + 296;
        *(_QWORD *)(v18 + 328) = v18 + 312;
        *(_QWORD *)(v18 + 336) = v18 + 312;
        *(_QWORD *)(v18 + 344) = v18 + 328;
        *(_QWORD *)(v18 + 352) = v18 + 328;
        *(_QWORD *)(v18 + 360) = v18 + 344;
        *(_QWORD *)(v18 + 368) = v18 + 344;
        *(_QWORD *)(v18 + 376) = v18 + 360;
        *(_QWORD *)(v18 + 384) = v18 + 360;
        *(_QWORD *)(v18 + 392) = v18 + 376;
        *(_QWORD *)(v18 + 400) = v18 + 376;
        *(_QWORD *)(v18 + 408) = v18 + 392;
        *(_QWORD *)(v18 + 416) = v18 + 392;
        *(_QWORD *)(v18 + 424) = v18 + 408;
        *(_QWORD *)(v18 + 432) = v18 + 408;
        *(_QWORD *)(v18 + 440) = v18 + 424;
        *(_QWORD *)(v18 + 448) = v18 + 424;
        *(_QWORD *)(v18 + 456) = v18 + 440;
        *(_QWORD *)(v18 + 464) = v18 + 440;
        *(_QWORD *)(v18 + 472) = v18 + 456;
        *(_QWORD *)(v18 + 480) = v18 + 456;
        *(_QWORD *)(v18 + 488) = v18 + 472;
        *(_QWORD *)(v18 + 504) = v18 + 488;
        *(_QWORD *)(v18 + 512) = v18 + 488;
        *(_QWORD *)(v18 + 496) = v18 + 472;
        *(_QWORD *)(v18 + 528) = v18 + 504;
        *(_QWORD *)(v18 + 520) = v18 + 504;
        *(_QWORD *)(v18 + 544) = v18 + 520;
        *(_QWORD *)(v18 + 536) = v18 + 520;
        *(_QWORD *)(v18 + 560) = v18 + 536;
        *(_QWORD *)(v18 + 552) = v18 + 536;
        *(_QWORD *)(v18 + 576) = v18 + 552;
        *(_QWORD *)(v18 + 568) = v18 + 552;
        *(_QWORD *)(v18 + 592) = v18 + 568;
        *(_QWORD *)(v18 + 584) = v18 + 568;
        v144 = v18 + (*(_QWORD *)(v18 - 8) & 0xFFFFFFFFFFFFFFF8);
        v145 = v144 - 16;
        v146 = v104 + v106;
        v147 = v146 - (v144 - 16);
        if ((v144 & 0xF) != 0)
          v148 = -(int)v144 & 0xFLL;
        else
          v148 = 0;
        v149 = v145 + v148;
        v150 = v147 - v148 - 80;
        *v273 = v149;
        *v272 = v150;
        *(_QWORD *)(v149 + 8) = v150 | 1;
        *(_QWORD *)(v146 - 72) = 80;
      }
      *(_QWORD *)(v18 + 48) = v14[4];
LABEL_298:
      if (*v272 > v271)
      {
        v84 = v271;
        v85 = *v272 - v271;
        *v272 = v85;
        v86 = *v274;
        v87 = (int64_t *)(*v274 + v84);
        *v273 = (unint64_t)v87;
        goto LABEL_79;
      }
      goto LABEL_300;
    }
  }
LABEL_100:
  if ((*(_BYTE *)(v18 + 880) & 2) != 0)
    atomic_store(0, (unsigned int *)(v18 + 884));
  return result;
}

void sub_1001CB824(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  do
  {
    *a1 = v1;
    v3 = a1 + 1;
    *v3++ = v1;
    *v3++ = v1;
    *v3++ = v1;
    *v3++ = v1;
    *v3++ = v1;
    *v3++ = v1;
    *v3 = v1;
    a1 = v3 + 1;
    --v2;
  }
  while (v2);
  JUMPOUT(0x1001CB850);
}

uint64_t sub_1001CB898(uint64_t *a1)
{
  uint64_t *v1;
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  char v9;

  v1 = (uint64_t *)((char *)*(&off_100236540
                           + ((-21 * ((dword_10023CCE8 + dword_10023CCF0) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((dword_10023CCE8 + dword_10023CCF0) ^ 0x71))] ^ 0xD7])
                           + 660)
                 - 8434659);
  v2 = (unint64_t *)((char *)*(&off_100236540
                                    + (byte_100227880[byte_100212AB0[(-21 * ((dword_10023CCE8 + *v1) ^ 0x71))] ^ 8] ^ (-21 * ((dword_10023CCE8 + *v1) ^ 0x71)))
                                    - 80)
                          - 965231491);
  v3 = (*v2 + *v1) ^ (unint64_t)&v9;
  v4 = 1509257707 * v3 - 0x249E897B2062158FLL;
  v5 = 1509257707 * (v3 ^ 0xDB617684DF9DEA71);
  *v1 = v4;
  *v2 = v5;
  LOBYTE(v5) = -21 * ((v5 + *(_DWORD *)v1) ^ 0x71);
  v8 = ((uint64_t (*)(uint64_t))((char *)*(&off_100236540
                                                  + (byte_1001FC880[byte_1001E55E0[v5] ^ 0x5F] ^ v5)
                                                  + 4)
                                        - 13473143))(24);
  if (v8)
  {
    *a1 = v8;
    __asm { BR              X8 }
  }
  ((void (*)(uint64_t))((char *)*(&off_100236540
                                          + ((-21
                                                                           * ((*(_DWORD *)v2 - *(_DWORD *)v1) ^ 0x71)) ^ byte_1001FC880[byte_1001E55E0[(-21 * ((*(_DWORD *)v2 - *(_DWORD *)v1) ^ 0x71))] ^ 0xD0])
                                          + 390)
                                - 505904034))(*a1);
  *a1 = 0;
  return 0xFFFFFFFFLL;
}

