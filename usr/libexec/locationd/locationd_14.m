_QWORD *sub_1008A1B10(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = off_102159A98;
  a1[1] = off_102159B40;
  v2 = a1 + 1;
  v3 = a1[37];
  a1[37] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = a1[36];
  a1[36] = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  v5 = a1[35];
  a1[35] = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  sub_1008A1B98(v2);
  return a1;
}

_QWORD *sub_1008A1B98(_QWORD *a1)
{
  uint64_t v2;

  *a1 = off_102159BC0;
  sub_100F6D1AC((uint64_t)a1);
  v2 = a1[30];
  a1[30] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

_QWORD *sub_1008A1BEC(uint64_t a1)
{
  return sub_1008A1B10((_QWORD *)(a1 - 8));
}

void sub_1008A1BF4(_QWORD *a1)
{
  sub_1008A1B10(a1);
  operator delete();
}

void sub_1008A1C18(uint64_t a1)
{
  sub_1008A1B10((_QWORD *)(a1 - 8));
  operator delete();
}

void sub_1008A1C40(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  sub_1001E4804(&v6);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a2 + 160))(a2, &v6);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1008A1CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100261F44((uint64_t)&a9);
  _Unwind_Resume(a1);
}

id sub_1008A1CCC(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 256), "vendor"), "proxyForService:", CFSTR("CLClientManager")), "syncgetLocationClientKeys");
}

void sub_1008A1CF0()
{
  sub_10022AF5C();
}

void sub_1008A2304()
{
  operator delete();
}

void sub_1008A2334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLSubHarvesterTraceExternal::onStepCountNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 256), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_102159BD8);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLSubHarvesterTraceExternal::onStepCountNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_102159BD8);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLSubHarvesterTraceExternal::onStepCountNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a4 + 304) + 32))(*(_QWORD *)(a4 + 304), a1, a2, a3);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_1008A2504(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_1008A2524(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 296) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 288) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  MapsFeature_RemoveDelegateListenerForAllKeys(*(_QWORD *)(a1 + 264));
  objc_msgSend(*(id *)(a1 + 272), "deregisterForVisionNotifications:", *(_QWORD *)(a1 + 264));

  objc_msgSend(*(id *)(a1 + 320), "unregisterForUpdates:", *(_QWORD *)(a1 + 312));
  *(_QWORD *)(a1 + 320) = 0;

}

id sub_1008A25C0(uint64_t a1, unsigned int *a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 280) + 16), "register:forNotification:registrationInfo:", *(_QWORD *)(*(_QWORD *)(a1 + 280) + 8), *a2, 0);
}

id sub_1008A25D4(uint64_t a1, unsigned int *a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 280) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 280) + 8), *a2);
}

uint64_t sub_1008A25E4(uint64_t a1, int a2)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1001FBB04(0);
  if (result)
  {
    if (*(_QWORD *)(a1 + 296))
    {
      v5 = sub_1001FBB04(0);
      return sub_1000A4FD8(v5, a2, *(_QWORD *)(a1 + 296), -1.0);
    }
  }
  return result;
}

void sub_1008A2638(uint64_t a1, int a2)
{
  uint64_t v4;

  if (sub_1001FBB04(0))
  {
    if (*(_QWORD *)(a1 + 296))
    {
      v4 = sub_1001FBB04(0);
      sub_1000A4A6C(v4, a2, *(_QWORD *)(a1 + 296));
    }
  }
}

uint64_t sub_1008A2688(uint64_t result, int a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(result + 288))
  {
    v3 = result;
    v4 = sub_1000A5944();
    return sub_1000A4FD8(v4, a2, *(_QWORD *)(v3 + 288), -1.0);
  }
  return result;
}

void sub_1008A26CC(uint64_t a1, int a2)
{
  uint64_t v4;

  if (*(_QWORD *)(a1 + 288))
  {
    v4 = sub_1000A5944();
    sub_1000A4A6C(v4, a2, *(_QWORD *)(a1 + 288));
  }
}

void sub_1008A270C(uint64_t a1, double a2)
{
  sub_100F6CDE0(a1 + 8, objc_msgSend(*(id *)(a1 + 256), "silo"), a2);
}

void sub_1008A2748(uint64_t a1)
{
  sub_100F6D1AC(a1 + 8);
}

id sub_1008A2750(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 320), "registerForUpdates:", *(_QWORD *)(a1 + 312));
}

id sub_1008A275C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 320), "unregisterForUpdates:", *(_QWORD *)(a1 + 312));
}

uint64_t sub_1008A2768@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;

  v2 = sub_100FC30E4();
  v4 = *((_OWORD *)v2 + 1);
  v3 = *((_OWORD *)v2 + 2);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *((_OWORD *)v2 + 6);
  v7 = *((_OWORD *)v2 + 3);
  v6 = *((_OWORD *)v2 + 4);
  *(_OWORD *)(a1 + 80) = *((_OWORD *)v2 + 5);
  *(_OWORD *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v6;
  sub_1001FF280(a1 + 112, (uint64_t)(v2 + 28));
  sub_1001FF280(a1 + 152, (uint64_t)(v2 + 38));
  result = sub_1001FF280(a1 + 192, (uint64_t)(v2 + 48));
  *(_WORD *)(a1 + 232) = *((_WORD *)v2 + 116);
  return result;
}

void sub_1008A27E8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_100067AC4(v2);
  sub_100067AC4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1008A280C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 304) + 40))(*(_QWORD *)(a1 + 304));
}

void sub_1008A281C(id a1)
{
  qword_1022A0228 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1008A2848(id a1)
{
  qword_1022A0208 = (uint64_t)os_log_create("com.apple.locationd.Core", "Harvester");
}

_QWORD *sub_1008A2874(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *i;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v6 >= v7)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (_QWORD *)*i)
      {
        v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6)
            return i;
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7)
              v11 %= v7;
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x18uLL);
  *i = 0;
  i[1] = v6;
  i[2] = *a3;
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_10012E444(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *i = *v19;
LABEL_38:
    *v19 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v20 = *(_QWORD *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7)
        v20 %= v7;
    }
    else
    {
      v20 &= v7 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1008A2A78(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008A2A8C(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  _QWORD v12[5];
  _QWORD aBlock[5];
  _QWORD v14[3];
  char v15;

  *a1 = off_1021D5F20;
  v9 = a5;
  *a1 = off_102159C28;
  a1[1] = v9;
  a1[2] = a3;
  a1[3] = a4;
  v10 = a2;
  a1[5] = 0;
  a1[4] = v10;
  a1[6] = 0;
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v15 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1008A2BC0;
  aBlock[3] = &unk_102149BF8;
  aBlock[4] = v14;
  a1[5] = _Block_copy(aBlock);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100207A50;
  v12[3] = &unk_102149C20;
  v12[4] = v14;
  a1[6] = _Block_copy(v12);
  _Block_object_dispose(v14, 8);
  return a1;
}

void sub_1008A2B98(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100015E88(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1008A2BC0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  return result;
}

void sub_1008A2BD8(uint64_t a1)
{
  sub_1008A2BFC(a1);
  operator delete();
}

uint64_t sub_1008A2BFC(uint64_t a1)
{
  *(_QWORD *)a1 = off_102159C28;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  _Block_release(*(const void **)(a1 + 40));
  _Block_release(*(const void **)(a1 + 48));

  return sub_100015E88(a1);
}

void sub_1008A2C54(id a1)
{
  qword_10229FC78 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_1008A2C80(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  return result;
}

void sub_1008A2C98(uint64_t a1)
{
  sub_1008A2CBC(a1);
  operator delete();
}

uint64_t sub_1008A2CBC(uint64_t a1)
{
  *(_QWORD *)a1 = off_102159CC0;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  _Block_release(*(const void **)(a1 + 40));
  _Block_release(*(const void **)(a1 + 48));

  return sub_100015E88(a1);
}

uint64_t sub_1008A2D14()
{
  sub_1015A2E04(qword_102305098, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305098, (void *)&_mh_execute_header);
}

void sub_1008A3058(id a1)
{
  sub_100197040();
  if ((sub_1001B796C() & 0x100) != 0)
    byte_1023050B0 = 1;
}

void sub_1008A3124(id a1)
{
  qword_1023050C0 = (uint64_t)objc_msgSend(objc_alloc((Class)CLDispatchSilo), "initWithIdentifier:", CFSTR("CLFenceAnalyticsManagerSilo"));
}

uint64_t sub_1008A3510(uint64_t a1, unsigned int *a2, __int128 *a3, void *a4)
{
  uint64_t v5;
  char v7[1608];

  v5 = *a2;
  sub_1008A44AC(v7, a3);
  objc_msgSend(a4, "onMonitorNotification:data:", v5, v7);
  return sub_100115F78((uint64_t)v7);
}

void sub_1008A3564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008A3708(uint64_t a1)
{
  dispatch_assert_queue_V2((dispatch_queue_t)objc_msgSend(*(id *)(a1 + 32), "queue"));
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_1008A37FC(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2((dispatch_queue_t)objc_msgSend(*(id *)(a1 + 32), "queue"));
  return (*(uint64_t (**)(_QWORD, id))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), objc_msgSend(objc_msgSend(objc_msgSend(-[CLFenceAnalyticsMotionActivityHistogram initActivityHistogramWithActivities:dateInterval:]([CLFenceAnalyticsMotionActivityHistogram alloc], "initActivityHistogramWithActivities:dateInterval:", a2, *(_QWORD *)(a1 + 40)), "binsSortedByInterval"), "firstObject"), "motionActivityType"));
}

void sub_1008A3A84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1004E2BD0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008A3B9C(uint64_t a1)
{
  dispatch_assert_queue_V2((dispatch_queue_t)objc_msgSend(*(id *)(a1 + 32), "queue"));
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_1008A400C(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;

  dispatch_assert_queue_V2((dispatch_queue_t)objc_msgSend(*(id *)(a1 + 32), "queue"));
  v4 = *(_QWORD *)(a1 + 40);
  v8 = *((_QWORD *)a2 + 2);
  v7 = *a2;
  return (*(uint64_t (**)(uint64_t, __int128 *, uint64_t))(v4 + 16))(v4, &v7, v5);
}

void sub_1008A4478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_1008A44AC(char *a1, __int128 *a2)
{
  char *v4;

  v4 = sub_1004E5748(a1, a2);
  sub_1004E5748(v4 + 248, (__int128 *)((char *)a2 + 248));
  memcpy(a1 + 496, a2 + 31, 0x458uLL);
  return a1;
}

void sub_1008A44F0(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(_QWORD *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_10190DB10(v1);
  _Unwind_Resume(a1);
}

void sub_1008A45FC(id a1)
{
  qword_1022A0068 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

_QWORD *sub_1008A4628@<X0>(unsigned __int8 *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x2E8uLL);
  result = sub_1008A4680(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1008A466C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008A4680(_QWORD *a1, unsigned __int8 *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_102159E38;
  sub_101480A30(a1 + 3, *a2);
  return a1;
}

void sub_1008A46BC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1008A46D0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_102159E38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1008A46E4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_102159E38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1008A4718(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

void sub_1008A4728(uint64_t a1)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 1065353216;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  operator new();
}

void sub_1008A47EC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  void **v3;
  void **v4;
  void **v5;
  void *v7;
  void *v8;

  v7 = (void *)v1[15];
  if (v7)
  {
    v1[16] = v7;
    operator delete(v7);
  }
  sub_10190DB74(v4, v3, v2, (uint64_t)v1);
  v8 = *v5;
  if (*v5)
  {
    v1[4] = v8;
    operator delete(v8);
  }
  _Unwind_Resume(a1);
}

void sub_1008A4854(uint64_t a1)
{
  double Current;
  double v3;
  NSObject *v4;
  NSObject *v5;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  double v9;
  float v10;
  char *v11;
  NSObject *v12;
  double v13;
  const char *v14;
  uint8_t *v15;
  int v16;
  const char *v17;
  uint8_t *v18;
  double v19;
  const char *v20;
  uint8_t *v21;
  double v22;
  int v23;
  _QWORD v24[3];
  void *__p[4];
  uint8_t buf[4];
  _QWORD v27[204];

  Current = CFAbsoluteTimeGetCurrent();
  if (qword_10229FC90 != -1)
    dispatch_once(&qword_10229FC90, &stru_102159E78);
  v3 = Current + -1814400.0;
  v4 = qword_10229FC98;
  if (os_log_type_enabled((os_log_t)qword_10229FC98, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134217984;
    *(double *)v27 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Workload Calibrator, DB Delete Records Before, expirationTime, %f", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC90 != -1)
      dispatch_once(&qword_10229FC90, &stru_102159E78);
    LODWORD(__p[0]) = 134217984;
    *(void **)((char *)__p + 4) = *(void **)&v3;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC98, 2, "Workload Calibrator, DB Delete Records Before, expirationTime, %f", COERCE_DOUBLE(__p));
    v15 = (uint8_t *)v14;
    sub_100512490("Generic", 1, 0, 2, "void CLWorkloadCalibrator::bootstrapCalibrationValueFromDb()", "%s\n", v14);
    if (v15 != buf)
      free(v15);
  }
  sub_101404038(*(_QWORD *)(a1 + 56), v3);
  memset(__p, 0, 24);
  if (qword_10229FC90 != -1)
    dispatch_once(&qword_10229FC90, &stru_102159E78);
  v5 = qword_10229FC98;
  if (os_log_type_enabled((os_log_t)qword_10229FC98, OS_LOG_TYPE_DEBUG))
  {
    v6 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)buf = 67109376;
    LODWORD(v27[0]) = v6;
    WORD2(v27[0]) = 2048;
    *(_QWORD *)((char *)v27 + 6) = 0x3FE0000000000000;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Workload Calibrator, DB Get All Records By Activity Type And Maximum Standard Deviation, activityType, %u, standardDeviation, %f", buf, 0x12u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC90 != -1)
      dispatch_once(&qword_10229FC90, &stru_102159E78);
    v16 = *(_DWORD *)(a1 + 20);
    v23 = 67109376;
    LODWORD(v24[0]) = v16;
    WORD2(v24[0]) = 2048;
    *(_QWORD *)((char *)v24 + 6) = 0x3FE0000000000000;
    LODWORD(v22) = 18;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC98, 2, "Workload Calibrator, DB Get All Records By Activity Type And Maximum Standard Deviation, activityType, %u, standardDeviation, %f", &v23, v22);
    v18 = (uint8_t *)v17;
    sub_100512490("Generic", 1, 0, 2, "void CLWorkloadCalibrator::bootstrapCalibrationValueFromDb()", "%s\n", v17);
    if (v18 != buf)
      free(v18);
  }
  sub_101403C6C(*(_QWORD **)(a1 + 56), (uint64_t)__p, *(_DWORD *)(a1 + 20), 0.5);
  v8 = __p[1];
  v7 = __p[0];
  if (__p[0] != __p[1])
  {
    v9 = *(double *)(a1 + 8);
    v10 = 0.0;
    v11 = (char *)__p[0];
    do
    {
      v10 = v10 + *((float *)v11 + 2);
      if (*((double *)v11 + 3) > v9)
        v9 = *((double *)v11 + 3);
      v11 += 32;
    }
    while (v11 != __p[1]);
    *(double *)(a1 + 8) = v9;
    *(float *)(a1 + 16) = v10 / (float)(unint64_t)((v8 - v7) >> 5);
    if (qword_10229FC90 != -1)
      dispatch_once(&qword_10229FC90, &stru_102159E78);
    v12 = qword_10229FC98;
    if (os_log_type_enabled((os_log_t)qword_10229FC98, OS_LOG_TYPE_DEBUG))
    {
      v13 = *(float *)(a1 + 16);
      *(_DWORD *)buf = 134217984;
      *(double *)v27 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Workload Calibrator, Bootstraping Calibration, Value, %f", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC90 != -1)
        dispatch_once(&qword_10229FC90, &stru_102159E78);
      v19 = *(float *)(a1 + 16);
      v23 = 134217984;
      *(double *)v24 = v19;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC98, 2, "Workload Calibrator, Bootstraping Calibration, Value, %f", COERCE_DOUBLE(&v23));
      v21 = (uint8_t *)v20;
      sub_100512490("Generic", 1, 0, 2, "void CLWorkloadCalibrator::bootstrapCalibrationValueFromDb()", "%s\n", v20);
      if (v21 != buf)
        free(v21);
    }
    v7 = __p[0];
  }
  if (v7)
  {
    __p[1] = v7;
    operator delete(v7);
  }
}

void sub_1008A4D58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1008A4D8C(char *a1, uint64_t a2, _BYTE *a3, double a4, float a5, float a6)
{
  uint64_t v6;
  unint64_t v12;
  char **v13;
  float *v14;
  float *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  float *v21;
  char *v22;
  int v23;
  unint64_t v24;
  char **v25;
  float *v26;
  float *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  float *v33;
  char *v34;
  int v35;
  float v36;
  uint64_t v37;
  float v38;
  float v39;
  float v40;
  int v41;
  int v42;
  BOOL v43;
  _BOOL4 v44;
  int v46;
  NSObject *v47;
  float v48;
  float v49;
  const char *v50;
  uint8_t *v51;
  double v52;
  int v53;
  double v54;
  __int16 v55;
  double v56;
  __int16 v57;
  double v58;
  __int16 v59;
  double v60;
  __int16 v61;
  double v62;
  uint8_t buf[4];
  double v64;
  __int16 v65;
  double v66;
  __int16 v67;
  double v68;
  __int16 v69;
  double v70;
  __int16 v71;
  double v72;

  v6 = (uint64_t)a1;
  *a3 = 0;
  if (!a2)
    return;
  v12 = *((_QWORD *)a1 + 14);
  v13 = (char **)(a1 + 96);
  v14 = (float *)*((_QWORD *)a1 + 13);
  if ((unint64_t)v14 >= v12)
  {
    a1 = *v13;
    v16 = ((char *)v14 - *v13) >> 2;
    v17 = v16 + 1;
    if ((unint64_t)(v16 + 1) >> 62)
      sub_100259694();
    v18 = v12 - (_QWORD)a1;
    if (v18 >> 1 > v17)
      v17 = v18 >> 1;
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL)
      v19 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v19 = v17;
    if (v19)
    {
      v20 = (char *)sub_100260634(v6 + 112, v19);
      a1 = *(char **)(v6 + 96);
      v14 = *(float **)(v6 + 104);
    }
    else
    {
      v20 = 0;
    }
    v21 = (float *)&v20[4 * v16];
    v22 = &v20[4 * v19];
    *v21 = a5;
    v15 = v21 + 1;
    while (v14 != (float *)a1)
    {
      v23 = *((_DWORD *)v14-- - 1);
      *((_DWORD *)v21-- - 1) = v23;
    }
    *(_QWORD *)(v6 + 96) = v21;
    *(_QWORD *)(v6 + 104) = v15;
    *(_QWORD *)(v6 + 112) = v22;
    if (a1)
      operator delete(a1);
  }
  else
  {
    *v14 = a5;
    v15 = v14 + 1;
  }
  v24 = *(_QWORD *)(v6 + 136);
  *(_QWORD *)(v6 + 104) = v15;
  v25 = (char **)(v6 + 120);
  v26 = *(float **)(v6 + 128);
  if ((unint64_t)v26 >= v24)
  {
    a1 = *v25;
    v28 = ((char *)v26 - *v25) >> 2;
    v29 = v28 + 1;
    if ((unint64_t)(v28 + 1) >> 62)
      sub_100259694();
    v30 = v24 - (_QWORD)a1;
    if (v30 >> 1 > v29)
      v29 = v30 >> 1;
    if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL)
      v31 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v31 = v29;
    if (v31)
    {
      v32 = (char *)sub_100260634(v6 + 136, v31);
      a1 = *(char **)(v6 + 120);
      v26 = *(float **)(v6 + 128);
    }
    else
    {
      v32 = 0;
    }
    v33 = (float *)&v32[4 * v28];
    v34 = &v32[4 * v31];
    *v33 = a6;
    v27 = v33 + 1;
    while (v26 != (float *)a1)
    {
      v35 = *((_DWORD *)v26-- - 1);
      *((_DWORD *)v33-- - 1) = v35;
    }
    *(_QWORD *)(v6 + 120) = v33;
    *(_QWORD *)(v6 + 128) = v27;
    *(_QWORD *)(v6 + 136) = v34;
    if (a1)
      operator delete(a1);
  }
  else
  {
    *v26 = a6;
    v27 = v26 + 1;
  }
  *(_QWORD *)(v6 + 128) = v27;
  v36 = sub_1008A52BC((uint64_t)a1, (float **)(v6 + 96));
  v38 = sub_1008A52BC(v37, (float **)(v6 + 120));
  if (v38 < 4.0 || v38 >= 6.0)
  {
    if (v38 < 6.0 || v38 >= 11.0)
    {
      v40 = 1.0;
      if (v38 < 11.0 || v38 > 20.0)
        goto LABEL_45;
      v39 = 4.2658;
    }
    else
    {
      v39 = 4.4668;
    }
  }
  else
  {
    v39 = 4.7863;
  }
  v40 = v39 / v38;
LABEL_45:
  v41 = *(_DWORD *)(a2 + 552);
  v42 = *(_DWORD *)(a2 + 556);
  if (!sub_100219944(a2))
    goto LABEL_66;
  v43 = v42 == 2 || v41 == 4;
  v44 = v43;
  if (v38 < 4.0 || v38 > 20.0 || !v44 || v36 < 4.5 || v36 > 20.0)
    goto LABEL_66;
  if ((float)(v36 / v38) > (float)(10.715 / v38) || (float)(v36 / v38) < v40)
    goto LABEL_66;
  v46 = *(_DWORD *)(v6 + 48);
  if (v46 == 1)
  {
    sub_1008A54F8((_QWORD *)v6, a4, v36, v38);
    goto LABEL_65;
  }
  if (!v46)
  {
    sub_1008A536C(v6, v36, v38);
LABEL_65:
    *a3 = 1;
    *(CFAbsoluteTime *)(v6 + 8) = CFAbsoluteTimeGetCurrent();
  }
LABEL_66:
  if (qword_10229FC90 != -1)
    dispatch_once(&qword_10229FC90, &stru_102159E78);
  v47 = qword_10229FC98;
  if (os_log_type_enabled((os_log_t)qword_10229FC98, OS_LOG_TYPE_DEBUG))
  {
    v48 = *(float *)(v6 + 16);
    *(_DWORD *)buf = 134219008;
    v64 = a4;
    v65 = 2048;
    v66 = v36;
    v67 = 2048;
    v68 = v38;
    v69 = 2048;
    v70 = v48;
    v71 = 2048;
    v72 = (float)(v38 * v48);
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEBUG, "WorkloadCalibration, timestamp, %f, HRMETs, %f, WRMETs, %f, calibrationValue, %f, calibratedMets, %f", buf, 0x34u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC90 != -1)
      dispatch_once(&qword_10229FC90, &stru_102159E78);
    v49 = *(float *)(v6 + 16);
    v53 = 134219008;
    v54 = a4;
    v55 = 2048;
    v56 = v36;
    v57 = 2048;
    v58 = v38;
    v59 = 2048;
    v60 = v49;
    v61 = 2048;
    v62 = (float)(v38 * v49);
    LODWORD(v52) = 52;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC98, 2, "WorkloadCalibration, timestamp, %f, HRMETs, %f, WRMETs, %f, calibrationValue, %f, calibratedMets, %f", COERCE_DOUBLE(&v53), v52);
    v51 = (uint8_t *)v50;
    sub_100512490("Generic", 1, 0, 2, "float CLWorkloadCalibrator::computeCalibrationValue(const CLNatalieModelInput *, const CFAbsoluteTime, const float, const float, BOOL &)", "%s\n", v50);
    if (v51 != buf)
      free(v51);
  }
}

float sub_1008A52BC(uint64_t a1, float **a2)
{
  float v2;
  float *v4;
  float *v5;
  float *v6;
  float v7;
  float *v8;
  float v9;

  v2 = 0.0;
  if (a2)
  {
    v5 = *a2;
    v4 = a2[1];
    if ((unint64_t)((char *)v4 - (char *)*a2) >= 0x11 && v5 != v4 - 4)
    {
      if (v4 == v4 - 4)
      {
        v6 = *a2;
      }
      else
      {
        memmove(v5, v4 - 4, 0x10uLL);
        v6 = *a2;
      }
      v4 = v5 + 4;
      a2[1] = v5 + 4;
      v5 = v6;
    }
    if (v5 != v4)
    {
      v7 = 0.0;
      v8 = v5;
      do
      {
        v9 = *v8++;
        v7 = v7 + v9;
      }
      while (v8 != v4);
      return v7 / (float)(unint64_t)(v4 - v5);
    }
  }
  return v2;
}

void sub_1008A536C(uint64_t a1, float a2, float a3)
{
  uint64_t v6;
  unint64_t v7;
  float **v8;
  float *v9;
  float *v10;
  float *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  float *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  float v22;
  int v23;
  double v24;
  BOOL v25;
  int v26;
  float v27;
  float v28;

  v6 = a1 + 40;
  v7 = *(_QWORD *)(a1 + 40);
  v8 = (float **)(a1 + 24);
  v9 = *(float **)(a1 + 32);
  if ((unint64_t)v9 >= v7)
  {
    v11 = *v8;
    v12 = ((char *)v9 - (char *)*v8) >> 3;
    v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 61)
      sub_100259694();
    v14 = v7 - (_QWORD)v11;
    if (v14 >> 2 > v13)
      v13 = v14 >> 2;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8)
      v15 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (v15)
    {
      v16 = (char *)sub_10025E6A0(v6, v15);
      v11 = *(float **)(a1 + 24);
      v9 = *(float **)(a1 + 32);
    }
    else
    {
      v16 = 0;
    }
    v17 = (float *)&v16[8 * v12];
    v18 = &v16[8 * v15];
    *v17 = a3;
    v17[1] = a2;
    v10 = v17 + 2;
    if (v9 != v11)
    {
      do
      {
        v19 = *((_QWORD *)v9 - 1);
        v9 -= 2;
        *((_QWORD *)v17 - 1) = v19;
        v17 -= 2;
      }
      while (v9 != v11);
      v11 = *v8;
    }
    *(_QWORD *)(a1 + 24) = v17;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v18;
    if (v11)
      operator delete(v11);
  }
  else
  {
    *v9 = a3;
    v9[1] = a2;
    v10 = v9 + 2;
  }
  *(_QWORD *)(a1 + 32) = v10;
  v20 = *(char **)(a1 + 24);
  v21 = (char *)v10 - v20;
  if ((unint64_t)((char *)v10 - v20) >= 0x31)
  {
    sub_1008A56A0((uint64_t)v8, v20, (char *)v10 - 48);
    v21 = *(_QWORD *)(a1 + 32) - *(_QWORD *)(a1 + 24);
  }
  if (v21 >= 0x19)
  {
    v22 = sub_1005AA23C(v8, 30);
    *(float *)(a1 + 16) = v22;
    sub_1004182EC((double *)(a1 + 144), v22);
    v23 = *(_DWORD *)(a1 + 144);
    v24 = 0.0;
    v25 = __OFSUB__(v23, 1);
    v26 = v23 - 1;
    if (v26 < 0 != v25)
    {
      v27 = 0.0;
    }
    else
    {
      v27 = *(double *)(a1 + 160);
      if (v26)
        v24 = *(double *)(a1 + 176) / (double)v26;
    }
    v28 = sqrt(v24);
    sub_1008A56F0(a1, v27, v28);
  }
}

void sub_1008A54F8(_QWORD *a1, double a2, float a3, float a4)
{
  double *v9;
  double *v10;
  double **v11;
  double *v12;
  unint64_t v13;
  double *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  float *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  float v25;
  uint64_t v26;
  float v27;

  v9 = (double *)a1[9];
  v10 = (double *)a1[10];
  v11 = (double **)(a1 + 9);
  v12 = v9;
  if (v9 != v10)
  {
    v12 = v10;
    if (a2 - *(v10 - 2) > 120.0)
    {
      a1[10] = v9;
      v12 = v9;
    }
  }
  v13 = a1[11];
  if ((unint64_t)v12 >= v13)
  {
    v15 = ((char *)v12 - (char *)v9) >> 4;
    v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 60)
      sub_100259694();
    v17 = v13 - (_QWORD)v9;
    if (v17 >> 3 > v16)
      v16 = v17 >> 3;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0)
      v18 = 0xFFFFFFFFFFFFFFFLL;
    else
      v18 = v16;
    if (v18)
    {
      v19 = (char *)sub_10028E224((uint64_t)(a1 + 11), v18);
      v9 = (double *)a1[9];
      v12 = (double *)a1[10];
    }
    else
    {
      v19 = 0;
    }
    v20 = (float *)&v19[16 * v15];
    *(double *)v20 = a2;
    v21 = &v19[16 * v18];
    v20[2] = a3;
    v20[3] = a4;
    v14 = (double *)(v20 + 4);
    if (v12 != v9)
    {
      do
      {
        *((_OWORD *)v20 - 1) = *((_OWORD *)v12 - 1);
        v20 -= 4;
        v12 -= 2;
      }
      while (v12 != v9);
      v9 = *v11;
    }
    a1[9] = v20;
    a1[10] = v14;
    a1[11] = v21;
    if (v9)
      operator delete(v9);
  }
  else
  {
    *v12 = a2;
    v14 = v12 + 2;
    *((float *)v12 + 2) = a3;
    *((float *)v12 + 3) = a4;
  }
  a1[10] = v14;
  v22 = a1[9];
  if ((unint64_t)v14 - v22 >= 0x41 && sub_1008A5C5C((uint64_t)a1) > 30.0)
  {
    sub_1008A5D48(v23, v11, 8);
    v25 = v24;
    sub_1008A5D48(v26, v11, 12);
    a1[10] = v22;
    sub_1008A536C((uint64_t)a1, v25, v27);
  }
}

char *sub_1008A56A0(uint64_t a1, char *a2, char *a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;

  if (a2 != a3)
  {
    v3 = *(char **)(a1 + 8);
    v4 = a2;
    if (a3 != v3)
    {
      v5 = 8 * ((a3 - a2) >> 3);
      v4 = a2;
      do
      {
        v6 = *(_DWORD *)&v4[v5 + 4];
        *(_DWORD *)v4 = *(_DWORD *)&v4[v5];
        *((_DWORD *)v4 + 1) = v6;
        v4 += 8;
      }
      while (&v4[v5] != v3);
    }
    *(_QWORD *)(a1 + 8) = v4;
  }
  return a2;
}

uint64_t sub_1008A56F0(uint64_t a1, float a2, float a3)
{
  double v6;
  CFAbsoluteTime Current;
  int v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  int v13;
  uint64_t v14;
  NSObject *v15;
  const char *v16;
  uint8_t *v17;
  const char *v18;
  uint8_t *v19;
  const char *v20;
  uint8_t *v21;
  double v22;
  double v23;
  double v24;
  CFAbsoluteTime v25;
  uint64_t v26;
  int v27;
  _BYTE v28[14];
  __int16 v29;
  double v30;
  __int16 v31;
  CFAbsoluteTime v32;
  uint8_t buf[4];
  _BYTE v34[14];
  __int16 v35;
  double v36;
  __int16 v37;
  CFAbsoluteTime v38;

  v6 = *(double *)a1;
  if (*(double *)a1 == 0.0)
  {
    Current = CFAbsoluteTimeGetCurrent();
    *(CFAbsoluteTime *)a1 = Current;
    v23 = 0.0;
    v8 = *(_DWORD *)(a1 + 20);
    HIDWORD(v23) = v8;
    *(_QWORD *)&v24 = __PAIR64__(LODWORD(a3), LODWORD(a2));
    v9 = *(_QWORD *)(a1 + 8);
    v25 = Current;
    v26 = v9;
    if (qword_10229FC90 != -1)
      dispatch_once(&qword_10229FC90, &stru_102159E78);
    v10 = qword_10229FC98;
    if (os_log_type_enabled((os_log_t)qword_10229FC98, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 67109888;
      *(_DWORD *)v34 = v8;
      *(_WORD *)&v34[4] = 2048;
      *(double *)&v34[6] = a2;
      v35 = 2048;
      v36 = a3;
      v37 = 2048;
      v38 = Current;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Workload Calibrator, DB Insert, activityType, %u, valueAverage, %f, standardDeviation, %f, entry.startTime, %f", buf, 0x26u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC90 != -1)
        dispatch_once(&qword_10229FC90, &stru_102159E78);
      v27 = 67109888;
      *(_DWORD *)v28 = v8;
      *(_WORD *)&v28[4] = 2048;
      *(double *)&v28[6] = a2;
      v29 = 2048;
      v30 = a3;
      v31 = 2048;
      v32 = Current;
      LODWORD(v22) = 38;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC98, 2, "Workload Calibrator, DB Insert, activityType, %u, valueAverage, %f, standardDeviation, %f, entry.startTime, %f", &v27, v22, v23, v24);
      v17 = (uint8_t *)v16;
      sub_100512490("Generic", 1, 0, 2, "void CLWorkloadCalibrator::persistCalibration(const float, const float)", "%s\n", v16);
      if (v17 != buf)
        free(v17);
    }
    sub_101404AC4(*(_QWORD *)(a1 + 56), (uint64_t)&v23);
    if (qword_1022A02D0 != -1)
      dispatch_once(&qword_1022A02D0, &stru_102159E98);
    v11 = qword_1022A02D8;
    if (os_log_type_enabled((os_log_t)qword_1022A02D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134218240;
      *(_QWORD *)v34 = 5;
      *(_WORD *)&v34[8] = 1024;
      *(_DWORD *)&v34[10] = HIDWORD(v23);
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Workload Calibrator, DB Delete Keep Last N, kMaximumDbHistorySize, %lu, activityType, %u", buf, 0x12u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A02D0 != -1)
        dispatch_once(&qword_1022A02D0, &stru_102159E98);
      v27 = 134218240;
      *(_QWORD *)v28 = 5;
      *(_WORD *)&v28[8] = 1024;
      *(_DWORD *)&v28[10] = HIDWORD(v23);
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A02D8, 2, "Workload Calibrator, DB Delete Keep Last N, kMaximumDbHistorySize, %lu, activityType, %u", &v27, 18);
      v19 = (uint8_t *)v18;
      sub_100512490("Generic", 1, 0, 2, "void CLWorkloadCalibrator::persistCalibration(const float, const float)", "%s\n", v18);
      if (v19 != buf)
        free(v19);
    }
    return sub_101404BC0(*(_QWORD *)(a1 + 56), 5, SHIDWORD(v23));
  }
  else
  {
    v23 = 0.0;
    v13 = *(_DWORD *)(a1 + 20);
    HIDWORD(v23) = v13;
    *(_QWORD *)&v24 = __PAIR64__(LODWORD(a3), LODWORD(a2));
    v14 = *(_QWORD *)(a1 + 8);
    v25 = v6;
    v26 = v14;
    if (qword_10229FC90 != -1)
      dispatch_once(&qword_10229FC90, &stru_102159E78);
    v15 = qword_10229FC98;
    if (os_log_type_enabled((os_log_t)qword_10229FC98, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 67109888;
      *(_DWORD *)v34 = v13;
      *(_WORD *)&v34[4] = 2048;
      *(double *)&v34[6] = a2;
      v35 = 2048;
      v36 = a3;
      v37 = 2048;
      v38 = v6;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Workload Calibrator, DB Update, activityType, %u, valueAverage, %f, standardDeviation, %f, entry.startTime, %f", buf, 0x26u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC90 != -1)
        dispatch_once(&qword_10229FC90, &stru_102159E78);
      v27 = 67109888;
      *(_DWORD *)v28 = v13;
      *(_WORD *)&v28[4] = 2048;
      *(double *)&v28[6] = a2;
      v29 = 2048;
      v30 = a3;
      v31 = 2048;
      v32 = v6;
      LODWORD(v22) = 38;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC98, 2, "Workload Calibrator, DB Update, activityType, %u, valueAverage, %f, standardDeviation, %f, entry.startTime, %f", &v27, v22, v23, v24);
      v21 = (uint8_t *)v20;
      sub_100512490("Generic", 1, 0, 2, "void CLWorkloadCalibrator::persistCalibration(const float, const float)", "%s\n", v20);
      if (v21 != buf)
        free(v21);
    }
    return sub_101404CA8(*(_QWORD *)(a1 + 56), (uint64_t)&v23);
  }
}

double sub_1008A5C5C(uint64_t a1)
{
  double *v1;
  double *v2;
  double *v3;
  double *v5;
  double v7;
  double *v8;
  double *v9;
  double *v10;
  double v11;
  double v12;
  double *v13;

  v2 = *(double **)(a1 + 72);
  v1 = *(double **)(a1 + 80);
  v3 = v2 + 2;
  if (v2 == v1 || v3 == v1)
  {
    v5 = *(double **)(a1 + 72);
    v3 = v5;
  }
  else
  {
    v7 = v2[2];
    if (v7 >= *v2)
      v5 = *(double **)(a1 + 72);
    else
      v5 = v2 + 2;
    if (v7 < *v2)
      v3 = *(double **)(a1 + 72);
    v8 = v2 + 4;
    if (v2 + 4 != v1)
    {
      if (v7 >= *v2)
        v7 = *v2;
      while (1)
      {
        v9 = v8;
        v10 = v8 + 2;
        if (v10 == v1)
          break;
        v11 = v9[2];
        v12 = *v9;
        if (v11 >= *v9)
        {
          v13 = v2 + 6;
          if (v12 < v7)
          {
            v7 = *v9;
            v5 = v9;
          }
          if (v11 >= *v3)
            v3 = v13;
        }
        else
        {
          v7 = *v5;
          if (v11 < *v5)
          {
            v7 = v9[2];
            v5 = v10;
          }
          if (v12 >= *v3)
            v3 = v9;
        }
        v8 = v9 + 4;
        v2 = v9;
        if (v9 + 4 == v1)
          return *v3 - *v5;
      }
      if (*v9 >= *v5)
      {
        if (*v9 >= *v3)
          v3 = v9;
      }
      else
      {
        v5 = v9;
      }
    }
  }
  return *v3 - *v5;
}

void sub_1008A5D48(uint64_t a1, double **a2, uint64_t a3)
{
  float v3;
  double *v4;
  double *v5;
  double *v6;
  double *v7;

  v3 = 0.0;
  if (a2)
  {
    if (a3 != -1)
    {
      v5 = *a2;
      v4 = a2[1];
      if (*a2 != v4)
      {
        v6 = a2[1];
        do
        {
          v7 = v5;
          if (v6 != v4)
            v3 = v3 + (float)((float)(*(float *)((char *)v6 + a3) + *(float *)((char *)v5 + a3)) * 0.5) * (*v5 - *v6);
          v5 += 2;
          v6 = v7;
        }
        while (v7 + 2 != v4);
      }
    }
  }
}

void sub_1008A5DB8(id a1)
{
  qword_10229FC98 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void sub_1008A5DE4(id a1)
{
  qword_1022A02D8 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1008A5E10(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1008A5E68(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008A5E88(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_1008A5EA0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void sub_1008A5EE0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE *v8;

  sub_100270E34((uint64_t)v7, a3);
  sub_100E7442C(a1, a2, (uint64_t)v7);
  v5 = v8;
  if (v8 == v7)
  {
    v6 = 4;
    v5 = v7;
  }
  else
  {
    if (!v8)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  *a1 = off_102159F40;
  sub_1008AF0E4((uint64_t)(a1 + 6));
}

void sub_1008A76AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  v21 = *(_QWORD **)(a20 + 3240);
  if (v21 == (_QWORD *)a12)
  {
    v21 = (_QWORD *)a12;
    v22 = 4;
  }
  else
  {
    if (!v21)
      goto LABEL_6;
    v22 = 5;
  }
  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_6:
  v23 = *(void **)(a20 + 3152);
  if (v23)
  {
    *(_QWORD *)(a20 + 3160) = v23;
    operator delete(v23);
  }
  sub_1008AFC04(a17, 0);
  sub_1008AFBC8(a15, 0);
  nullsub_34(a13);
  sub_100D823D4(a14);
  v24 = *(_QWORD *)(a20 + 2768);
  *(_QWORD *)(a20 + 2768) = 0;
  if (v24)
    (*(void (**)(void))(a20 + 2776))();
  v25 = *(_QWORD *)(a20 + 2712);
  *(_QWORD *)(a20 + 2712) = 0;
  if (v25)
    (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
  sub_1008AF970(a19);
  *(_QWORD *)a20 = off_10218D420;
  v26 = *(_QWORD **)(a20 + 40);
  if (v26 == (_QWORD *)(a20 + 16))
  {
    v27 = 4;
    v26 = (_QWORD *)(a20 + 16);
  }
  else
  {
    if (!v26)
      goto LABEL_17;
    v27 = 5;
  }
  (*(void (**)(void))(*v26 + 8 * v27))();
LABEL_17:
  _Unwind_Resume(a1);
}

void sub_1008A793C(uint64_t a1)
{
  sub_1008A7944(*(_QWORD *)(a1 + 32));
}

void sub_1008A7944(uint64_t a1)
{
  NSObject *v2;
  _QWORD *v3;
  id v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  const char *v8;
  uint8_t *v9;
  const char *v10;
  uint8_t *v11;
  const char *v12;
  uint8_t *v13;
  uint64_t v14;
  _WORD v15[8];
  uint8_t buf[1640];

  if (qword_1022A00D0 != -1)
    dispatch_once(&qword_1022A00D0, &stru_10215A230);
  v2 = qword_1022A00D8;
  if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLMM,onMapMatcherStopped,timer triggered", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    v15[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 0, "CLMM,onMapMatcherStopped,timer triggered", v15, 2);
    v9 = (uint8_t *)v8;
    sub_100512490("Generic", 1, 0, 2, "void CLLocationControllerFusion::onMapMatcherStopped()", "%s\n", v8);
    if (v9 != buf)
      free(v9);
  }
  v3 = *(_QWORD **)(a1 + 2712);
  if (v3)
  {
    sub_1008AF038(v3, 1);
    v4 = sub_1008AF038(*(_QWORD **)(a1 + 2712), 0);
    GEOResetGeoCodecsAllocator(v4);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    v5 = qword_1022A00D8;
    if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CLMM,onMapMatcherStopped,road and building tiles cleared from process memory", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_10215A230);
      v15[0] = 0;
      LODWORD(v14) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 0, "CLMM,onMapMatcherStopped,road and building tiles cleared from process memory", v15, v14);
      v11 = (uint8_t *)v10;
      sub_100512490("Generic", 1, 0, 2, "void CLLocationControllerFusion::onMapMatcherStopped()", "%s\n", v10);
      if (v11 != buf)
        free(v11);
    }
  }
  v6 = *(void **)(a1 + 3200);
  if (v6)
    objc_msgSend(v6, "setNextFireDelay:", 1.79769313e308);
  if (*(_QWORD *)(a1 + 3208))
  {
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    v7 = qword_1022A00D8;
    if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CLMM,Releasing mapmatcher collection OS transaction", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_10215A230);
      v15[0] = 0;
      LODWORD(v14) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 0, "CLMM,Releasing mapmatcher collection OS transaction", v15, v14);
      v13 = (uint8_t *)v12;
      sub_100512490("Generic", 1, 0, 2, "void CLLocationControllerFusion::onMapMatcherStopped()", "%s\n", v12);
      if (v13 != buf)
        free(v13);
    }

    *(_QWORD *)(a1 + 3208) = 0;
  }
}

void sub_1008A7D6C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  int v11;
  int v12;
  const char *v13;
  uint8_t *v14;
  int v15;
  __int16 v16;
  int v17;
  __int16 v18;
  int v19;
  uint8_t buf[8];
  __int16 v21;
  int v22;
  __int16 v23;
  int v24;

  v6 = a1 + 48;
  v7 = sub_100B303DC();
  *(_DWORD *)buf = 1;
  *(_QWORD *)buf = sub_100B30608(v7, buf);
  sub_100E24ADC(v6, (uint64_t *)buf, a2);
  *(_BYTE *)(a1 + 3192) = a2 & a3;
  v8 = *(_QWORD *)(a1 + 2712);
  if (v8)
    sub_1001D3D70(v8, a2);
  sub_1001D4210(a1 + 3104, a2);
  v9 = *(_QWORD **)(a1 + 2712);
  if (v9)
    sub_1001D4260(v9, *(_BYTE *)(a1 + 3119) == 0);
  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_10215A1F0);
  v10 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    v11 = *(unsigned __int8 *)(a1 + 3119);
    *(_DWORD *)buf = 67109632;
    *(_DWORD *)&buf[4] = a2;
    v21 = 1024;
    v22 = a3;
    v23 = 1024;
    v24 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "CLMM,Change in locationApp foreground status,isForeGround,%d,isAppleMaps,%d,networkusage,%d", buf, 0x14u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_10215A1F0);
    v12 = *(unsigned __int8 *)(a1 + 3119);
    v16 = 1024;
    v17 = a3;
    v18 = 1024;
    v19 = v12;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "CLMM,Change in locationApp foreground status,isForeGround,%d,isAppleMaps,%d,networkusage,%d", &v15, 20, 67109632);
    v14 = (uint8_t *)v13;
    sub_100512490("Generic", 1, 0, 2, "void CLLocationControllerFusion::setLocationApplicationIsForeground(BOOL, BOOL)", "%s\n", v13);
    if (v14 != buf)
      free(v14);
  }
}

uint64_t sub_1008A7FBC()
{
  uint64_t v0;
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  NSObject *v5;
  const char *v7;
  uint8_t *v8;
  _DWORD v9[4];
  uint8_t buf[8];
  std::__shared_weak_count *v11;

  sub_1001E4804(buf);
  v0 = *(_QWORD *)buf;
  LODWORD(v1) = sub_10075FEA8();
  LOBYTE(v9[0]) = 0;
  if (sub_1001E4874(v0, "EnableTrackRun", (BOOL *)v9))
    v1 = LOBYTE(v9[0]) != 0;
  else
    v1 = v1;
  v2 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  if (qword_10229FC50 != -1)
    dispatch_once(&qword_10229FC50, &stru_10215A210);
  v5 = qword_10229FC58;
  if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&buf[4] = v1;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#cltr,EnableTrackRun,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v9[0] = 67240192;
    v9[1] = v1;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,EnableTrackRun,%{public}d", v9, 8);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "static BOOL CLLocationControllerFusion::isTrackRunEnabled()", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
  return v1;
}

void sub_1008A81E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008A8200(uint64_t a1)
{
  __int16 v2;
  NSObject *v3;
  int v4;
  int v6;
  const char *v7;
  uint8_t *v8;
  _DWORD v9[4];
  uint8_t buf[4];
  int v11;

  if (*(_BYTE *)(a1 + 2723))
    *(_BYTE *)(a1 + 2723) = 0;
  if (!*(_QWORD *)(a1 + 2752))
    *(_QWORD *)(a1 + 2752) = objc_alloc_init(CLNanoRegistry);
  sub_100197040();
  if (sub_1000C4240())
    v2 = (unsigned __int16)objc_msgSend(*(id *)(a1 + 2752), "isAFire6OrOlderWatchPaired") ^ 1;
  else
    v2 = 0;
  *(_WORD *)(a1 + 2722) = v2 | 0x100;
  if (qword_10229FC50 != -1)
    dispatch_once(&qword_10229FC50, &stru_10215A210);
  v3 = qword_10229FC58;
  if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
  {
    if (*(_BYTE *)(a1 + 2723))
      v4 = *(unsigned __int8 *)(a1 + 2722);
    else
      v4 = 1;
    *(_DWORD *)buf = 67240192;
    v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#cltr,fIsPhoneThatDoesNotNeedTrackRunProcessing,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    if (*(_BYTE *)(a1 + 2723))
      v6 = *(unsigned __int8 *)(a1 + 2722);
    else
      v6 = 1;
    v9[0] = 67240192;
    v9[1] = v6;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,fIsPhoneThatDoesNotNeedTrackRunProcessing,%{public}d", v9, 8);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedPairingStateChanged(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
}

id sub_1008A842C(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  BOOL v10;
  __objc2_class *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  __objc2_class *v20;
  void *i;
  void *v22;
  NSObject *v23;
  id v24;
  uint64_t v25;
  id v26;
  const char *v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  const char *v31;
  uint8_t *v32;
  id v33;
  NSObject *v34;
  BOOL v35;
  NSObject *v36;
  id result;
  const char *v38;
  uint8_t *v39;
  const char *v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  id obj;
  uint64_t v45;
  id v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  int v56;
  id v57;
  uint8_t buf[4];
  id v59;
  _BYTE v60[128];

  v2 = +[RDEstimate currentEstimates](RDEstimate, "currentEstimates");
  v3 = v2;
  if (!v2)
    goto LABEL_45;
  v4 = *(_QWORD *)(a1 + 2760);
  v5 = objc_msgSend(v2, "count");
  v6 = v5;
  obj = v3;
  if (v4)
  {
    v7 = objc_msgSend(*(id *)(a1 + 2760), "count");
    v8 = v3;
    v9 = v7;
    v10 = v6 == v7;
    if (objc_msgSend(v8, "count"))
    {
      v3 = obj;
      goto LABEL_7;
    }
    v35 = v6 == v9;
    v3 = obj;
    if (v35)
      goto LABEL_54;
LABEL_45:
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v34 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "#cltr,country code list has changed. Clearing the supported region flag.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      LOWORD(v56) = 0;
      LODWORD(v42) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,country code list has changed. Clearing the supported region flag.", &v56, v42);
      v39 = (uint8_t *)v38;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedRegulatoryDomainUpdateNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v38);
      if (v39 != buf)
        free(v39);
    }
    if (*(_BYTE *)(a1 + 2721))
      *(_BYTE *)(a1 + 2721) = 0;
    goto LABEL_59;
  }
  if (!v5)
    goto LABEL_45;
  v10 = 0;
LABEL_7:
  v43 = a1;
  v53 = 0u;
  v54 = 0u;
  v51 = 0u;
  v52 = 0u;
  v46 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v51, v60, 16);
  if (v46)
  {
    v11 = DefaultObserver;
    v45 = *(_QWORD *)v52;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v52 != v45)
          objc_enumerationMutation(obj);
        v13 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * (_QWORD)v12);
        if (v11[78].info != (__objc2_class_ro *)-1)
          dispatch_once(&qword_10229FC50, &stru_10215A210);
        v14 = qword_10229FC58;
        if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
        {
          v15 = objc_msgSend(v13, "countryCode");
          *(_DWORD *)buf = 138477827;
          v59 = v15;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#cltr,currentCountryCode,%{private}@", buf, 0xCu);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (v11[78].info != (__objc2_class_ro *)-1)
            dispatch_once(&qword_10229FC50, &stru_10215A210);
          v25 = qword_10229FC58;
          v26 = objc_msgSend(v13, "countryCode");
          v56 = 138477827;
          v57 = v26;
          LODWORD(v42) = 12;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v25, 0, "#cltr,currentCountryCode,%{private}@", &v56, v42);
          v28 = (uint8_t *)v27;
          sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedRegulatoryDomainUpdateNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v27);
          if (v28 != buf)
            free(v28);
        }
        if (v10)
        {
          v49 = 0u;
          v50 = 0u;
          v47 = 0u;
          v48 = 0u;
          v16 = *(void **)(v43 + 2760);
          v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v47, v55, 16);
          if (v17)
          {
            v18 = v17;
            v19 = *(_QWORD *)v48;
            while (2)
            {
              v20 = v11;
              for (i = 0; i != v18; i = (char *)i + 1)
              {
                if (*(_QWORD *)v48 != v19)
                  objc_enumerationMutation(v16);
                v22 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * (_QWORD)i);
                if (objc_msgSend(objc_msgSend(v13, "countryCode"), "isEqualToString:", objc_msgSend(v22, "countryCode")))
                {
                  v11 = v20;
                  if (v20[78].info != (__objc2_class_ro *)-1)
                    dispatch_once(&qword_10229FC50, &stru_10215A210);
                  v23 = qword_10229FC58;
                  if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
                  {
                    v24 = objc_msgSend(v22, "countryCode");
                    *(_DWORD *)buf = 138477827;
                    v59 = v24;
                    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#cltr,matching country found,%{private}@", buf, 0xCu);
                  }
                  if (sub_1001BFF7C(115, 2))
                  {
                    bzero(buf, 0x65CuLL);
                    if (v20[78].info != (__objc2_class_ro *)-1)
                      dispatch_once(&qword_10229FC50, &stru_10215A210);
                    v29 = qword_10229FC58;
                    v30 = objc_msgSend(v22, "countryCode");
                    v56 = 138477827;
                    v57 = v30;
                    LODWORD(v42) = 12;
                    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v29, 0, "#cltr,matching country found,%{private}@", &v56, v42);
                    v32 = (uint8_t *)v31;
                    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedRegulatoryDomainUpdateNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v31);
                    if (v32 != buf)
                      free(v32);
                  }
                  v10 = 1;
                  goto LABEL_33;
                }
              }
              v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v47, v55, 16);
              v10 = 0;
              v11 = v20;
              if (v18)
                continue;
              break;
            }
          }
        }
LABEL_33:
        v12 = (char *)v12 + 1;
      }
      while (v12 != v46);
      v3 = obj;
      v33 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v60, 16);
      v46 = v33;
    }
    while (v33);
  }
  a1 = v43;
  if (!v10)
    goto LABEL_45;
LABEL_54:
  if (qword_10229FC50 != -1)
    dispatch_once(&qword_10229FC50, &stru_10215A210);
  v36 = qword_10229FC58;
  if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "#cltr,country code list is the same. Not clearing the supported region flag.", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    LOWORD(v56) = 0;
    LODWORD(v42) = 2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,country code list is the same. Not clearing the supported region flag.", &v56, v42);
    v41 = (uint8_t *)v40;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedRegulatoryDomainUpdateNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v40);
    if (v41 != buf)
      free(v41);
  }
LABEL_59:

  result = v3;
  *(_QWORD *)(a1 + 2760) = result;
  return result;
}

uint64_t sub_1008A8BA4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  *(_QWORD *)a1 = off_102159F40;
  v2 = *(_QWORD *)(a1 + 3088);
  if (v2)
    sub_1017C9950(v2);
  v3 = *(void **)(a1 + 3200);
  if (v3)
  {
    objc_msgSend(v3, "invalidate");

    *(_QWORD *)(a1 + 3200) = 0;
  }
  v4 = *(_QWORD *)(a1 + 2768);
  *(_QWORD *)(a1 + 2768) = 0;
  if (v4)
    (*(void (**)(void))(a1 + 2776))();
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 408))(a1);
  sub_10077E598(*(void **)(a1 + 2736));

  sub_100D823A8((id *)(a1 + 2800));
  v5 = *(_QWORD **)(a1 + 3240);
  if (v5 == (_QWORD *)(a1 + 3216))
  {
    v6 = 4;
    v5 = (_QWORD *)(a1 + 3216);
  }
  else
  {
    if (!v5)
      goto LABEL_12;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_12:
  v7 = *(void **)(a1 + 3152);
  if (v7)
  {
    *(_QWORD *)(a1 + 3160) = v7;
    operator delete(v7);
  }
  sub_1008AFC04((uint64_t *)(a1 + 3136), 0);
  sub_1008AFBC8((uint64_t *)(a1 + 3088), 0);
  nullsub_34(a1 + 2840);
  sub_100D823D4(a1 + 2800);
  v8 = *(_QWORD *)(a1 + 2768);
  *(_QWORD *)(a1 + 2768) = 0;
  if (v8)
    (*(void (**)(void))(a1 + 2776))();
  v9 = *(_QWORD *)(a1 + 2712);
  *(_QWORD *)(a1 + 2712) = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  sub_1008AF970(a1 + 48);
  *(_QWORD *)a1 = off_10218D420;
  v10 = *(_QWORD **)(a1 + 40);
  if (v10 == (_QWORD *)(a1 + 16))
  {
    v11 = 4;
    v10 = (_QWORD *)(a1 + 16);
    goto LABEL_22;
  }
  if (v10)
  {
    v11 = 5;
LABEL_22:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
  return a1;
}

void sub_1008A8D2C(uint64_t a1)
{
  sub_1008A8BA4(a1);
  operator delete();
}

void sub_1008A8D50(uint64_t a1)
{
  uint64_t v7;

  *(_DWORD *)(a1 + 2392) = 0xFFFF;
  *(_QWORD *)(a1 + 2404) = 0;
  *(_QWORD *)(a1 + 2396) = 0;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 2412) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 2428) = _Q1;
  *(_OWORD *)(a1 + 2444) = _Q1;
  *(_OWORD *)(a1 + 2460) = _Q1;
  *(_DWORD *)(a1 + 2476) = 0;
  *(_QWORD *)(a1 + 2480) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 2496) = 0;
  *(_QWORD *)(a1 + 2488) = 0;
  *(_DWORD *)(a1 + 2504) = 0;
  *(_QWORD *)(a1 + 2508) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 2516) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 2520) = 0;
  *(_QWORD *)(a1 + 2536) = 0;
  *(_QWORD *)(a1 + 2528) = 0;
  *(_BYTE *)(a1 + 2544) = 0;
  sub_100E0D094(a1 + 48);
  v7 = *(_QWORD *)(a1 + 3088);
  if (v7)
    sub_1017C9950(v7);
}

uint64_t sub_1008A8DE8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 204) = a2;
  return result;
}

BOOL sub_1008A8DF0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BOOL8 result;
  NSObject *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint8_t *v38;
  uint8_t *v39;
  NSObject *v40;
  _BOOL4 v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint8_t *v48;
  double v49;
  uint8_t *v50;
  uint64_t v51;
  int v52;
  int v53;
  __int16 v54;
  int v55;
  __int16 v56;
  uint64_t v57;
  __int16 v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;
  uint8_t buf[4];
  int v63;
  __int16 v64;
  int v65;
  __int16 v66;
  uint64_t v67;
  __int16 v68;
  uint64_t v69;
  __int16 v70;
  uint64_t v71;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 2392) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 2408) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 2456) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 2472) = v7;
  *(_OWORD *)(a1 + 2424) = v5;
  *(_OWORD *)(a1 + 2440) = v6;
  v8 = *(_OWORD *)(a2 + 96);
  v9 = *(_OWORD *)(a2 + 112);
  v10 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 2532) = *(_OWORD *)(a2 + 140);
  *(_OWORD *)(a1 + 2504) = v9;
  *(_OWORD *)(a1 + 2520) = v10;
  *(_OWORD *)(a1 + 2488) = v8;
  HIBYTE(v51) = 0;
  v11 = a1 + 48;
  if (!sub_100E13DAC(a1 + 48, a2, (_BYTE *)&v51 + 7) && !HIBYTE(v51))
  {
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v12 = qword_1022A01B8;
    if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEFAULT))
    {
      v13 = *(_DWORD *)(a1 + 2200);
      v14 = *(_DWORD *)(a2 + 96);
      v15 = *(_QWORD *)(a2 + 4);
      v16 = *(_QWORD *)(a2 + 12);
      v17 = *(_QWORD *)(a2 + 20);
      *(_DWORD *)buf = 67241217;
      v63 = v13;
      v64 = 1026;
      v65 = v14;
      v66 = 2049;
      v67 = v15;
      v68 = 2049;
      v69 = v16;
      v70 = 2050;
      v71 = v17;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#fusion,failed on locationUpdate,LCFusionExeState,%{public}d,type,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f", buf, 0x2Cu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v42 = *(_DWORD *)(a1 + 2200);
      v43 = *(_DWORD *)(a2 + 96);
      v44 = *(_QWORD *)(a2 + 4);
      v45 = *(_QWORD *)(a2 + 12);
      v46 = *(_QWORD *)(a2 + 20);
      v52 = 67241217;
      v53 = v42;
      v54 = 1026;
      v55 = v43;
      v56 = 2049;
      v57 = v44;
      v58 = 2049;
      v59 = v45;
      v60 = 2050;
      v61 = v46;
      LODWORD(v51) = 44;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 0, "#fusion,failed on locationUpdate,LCFusionExeState,%{public}d,type,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f", &v52, v51);
      v48 = (uint8_t *)v47;
      sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::provideLocation(const CLLocationProvider_Type::NotificationData &)", "%s\n", v47);
      if (v48 != buf)
        free(v48);
    }
    v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 2548) = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 2564) = v18;
    v19 = *(_OWORD *)(a2 + 32);
    v20 = *(_OWORD *)(a2 + 48);
    v21 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 2612) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 2628) = v21;
    *(_OWORD *)(a1 + 2580) = v19;
    *(_OWORD *)(a1 + 2596) = v20;
    v22 = *(_OWORD *)(a2 + 96);
    v23 = *(_OWORD *)(a2 + 112);
    v24 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 2688) = *(_OWORD *)(a2 + 140);
    *(_OWORD *)(a1 + 2660) = v23;
    *(_OWORD *)(a1 + 2676) = v24;
    *(_OWORD *)(a1 + 2644) = v22;
    return 1;
  }
  if (HIBYTE(v51))
  {
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v26 = qword_1022A01B8;
    if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEFAULT))
    {
      v27 = *(_DWORD *)(a1 + 1152);
      v28 = *(_DWORD *)(a2 + 96);
      v29 = *(_QWORD *)(a2 + 4);
      v30 = *(_QWORD *)(a2 + 12);
      v31 = *(_QWORD *)(a2 + 20);
      *(_DWORD *)buf = 67241217;
      v63 = v27;
      v64 = 1026;
      v65 = v28;
      v66 = 2049;
      v67 = v29;
      v68 = 2049;
      v69 = v30;
      v70 = 2050;
      v71 = v31;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#fusion,rejected location,reason,%{public}d,type,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f", buf, 0x2Cu);
    }
    result = sub_1001BFF7C(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v32 = *(_DWORD *)(a1 + 1152);
      v33 = *(_DWORD *)(a2 + 96);
      v34 = *(_QWORD *)(a2 + 4);
      v35 = *(_QWORD *)(a2 + 12);
      v36 = *(_QWORD *)(a2 + 20);
      v52 = 67241217;
      v53 = v32;
      v54 = 1026;
      v55 = v33;
      v56 = 2049;
      v57 = v34;
      v58 = 2049;
      v59 = v35;
      v60 = 2050;
      v61 = v36;
      LODWORD(v51) = 44;
      v37 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 0, "#fusion,rejected location,reason,%{public}d,type,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f", &v52, v51);
      v39 = v38;
      sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::provideLocation(const CLLocationProvider_Type::NotificationData &)", "%s\n", v37);
LABEL_34:
      if (v39 != buf)
        free(v39);
      return 0;
    }
  }
  else
  {
    if (sub_100E1F8C8(v11, a1 + 2548))
    {
      *(_QWORD *)(a1 + 2624) = *(_QWORD *)(a2 + 76);
      *(_QWORD *)(a1 + 2704) = *(_QWORD *)(a2 + 504);
      return 1;
    }
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v40 = qword_1022A01B8;
    if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_ERROR, "#Error,LC fusion fused the location but failed to get/yield the location", buf, 2u);
    }
    v41 = sub_1001BFF7C(115, 0);
    result = 0;
    if (v41)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      LOWORD(v52) = 0;
      LODWORD(v51) = 2;
      v49 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 16, "#Error,LC fusion fused the location but failed to get/yield the location", &v52, v51);
      v39 = v50;
      sub_100512490("Generic", 1, 0, 0, "virtual BOOL CLLocationControllerFusion::provideLocation(const CLLocationProvider_Type::NotificationData &)", "%s\n", v49);
      goto LABEL_34;
    }
  }
  return result;
}

BOOL sub_1008A93C4(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a1 + 2564);
  *a2 = *(_OWORD *)(a1 + 2548);
  a2[1] = v2;
  v3 = *(_OWORD *)(a1 + 2580);
  v4 = *(_OWORD *)(a1 + 2596);
  v5 = *(_OWORD *)(a1 + 2628);
  a2[4] = *(_OWORD *)(a1 + 2612);
  a2[5] = v5;
  a2[2] = v3;
  a2[3] = v4;
  v6 = *(_OWORD *)(a1 + 2644);
  v7 = *(_OWORD *)(a1 + 2660);
  v8 = *(_OWORD *)(a1 + 2676);
  *(_OWORD *)((char *)a2 + 140) = *(_OWORD *)(a1 + 2688);
  a2[7] = v7;
  a2[8] = v8;
  a2[6] = v6;
  return *(double *)(a1 + 2568) > 0.0;
}

BOOL sub_1008A9408(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  NSObject *v4;
  const char *v5;
  uint8_t *v6;
  _WORD v7[8];
  uint8_t buf[1640];

  if ((sub_100E1FE8C(a1 + 48, a2) & 1) != 0)
    return *(double *)(a2 + 20) > 0.0;
  if (qword_1022A01B0 != -1)
    dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
  v4 = qword_1022A01B8;
  if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#fusion, failed to get the latest predicted fused solution.", buf, 2u);
  }
  result = sub_1001BFF7C(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v7[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 2, "#fusion, failed to get the latest predicted fused solution.", v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::getLatestFusedLocation(CLDaemonLocation &)", "%s\n", v5);
    if (v6 != buf)
      free(v6);
    return 0;
  }
  return result;
}

uint64_t sub_1008A95B0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 2712);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

uint64_t sub_1008A95C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  NSObject *v18;
  const char *v20;
  uint8_t *v21;
  _WORD v22[8];
  uint8_t buf[1640];

  if (*(_BYTE *)(a1 + 3080))
    return 0;
  if (!*(_QWORD *)(a1 + 2712) || *(_BYTE *)(a3 + 425) != 0)
    return 0;
  v8 = *(_DWORD *)(a2 + 96);
  if ((v8 & 0xFFFFFFF7) != 1 && (v8 | 8) != 11 && (v8 != 2 || *(_BYTE *)(a1 + 2832) == 0))
    return 0;
  sub_1008A9840(a1);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 2888) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 2904) = v10;
  v11 = *(_OWORD *)(a2 + 32);
  v12 = *(_OWORD *)(a2 + 48);
  v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 2952) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 2968) = v13;
  *(_OWORD *)(a1 + 2920) = v11;
  *(_OWORD *)(a1 + 2936) = v12;
  v14 = *(_OWORD *)(a2 + 96);
  v15 = *(_OWORD *)(a2 + 112);
  v16 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 3028) = *(_OWORD *)(a2 + 140);
  *(_OWORD *)(a1 + 3000) = v15;
  *(_OWORD *)(a1 + 3016) = v16;
  *(_OWORD *)(a1 + 2984) = v14;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2712) + 40))(*(_QWORD *)(a1 + 2712), a2, a3);
  v17 = *(void **)(a1 + 3200);
  if (v17 && (_DWORD)result)
  {
    if (!*(_QWORD *)(a1 + 3208))
    {
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_10215A230);
      v18 = qword_1022A00D8;
      if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "CLMM,Creating mapmatcher OS transaction", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00D0 != -1)
          dispatch_once(&qword_1022A00D0, &stru_10215A230);
        v22[0] = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 0, "CLMM,Creating mapmatcher OS transaction", v22, 2);
        v21 = (uint8_t *)v20;
        sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::mapMatch(CLDaemonLocation &, CLDaemonLocationPrivate &)", "%s\n", v20);
        if (v21 != buf)
          free(v21);
      }
      *(_QWORD *)(a1 + 3208) = os_transaction_create("CLMapMatcher");
      v17 = *(void **)(a1 + 3200);
    }
    objc_msgSend(v17, "setNextFireDelay:", 300.0);
    return 1;
  }
  return result;
}

uint64_t sub_1008A9840(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  double v4;
  BOOL v5;
  _BOOL4 v6;
  int v7;

  result = *(_QWORD *)(a1 + 2712);
  if (result)
  {
    if (*(_BYTE *)(a1 + 3192)
      && (v3 = sub_100B303DC(),
          v7 = 1,
          v4 = sub_100B30608(v3, &v7),
          v5 = sub_1008ABF50((_DWORD *)(a1 + 3144), v4),
          result = *(_QWORD *)(a1 + 2712),
          !v5))
    {
      v6 = sub_10113494C(result);
      result = *(_QWORD *)(a1 + 2712);
    }
    else
    {
      v6 = 0;
    }
    return sub_101134694(result, v6);
  }
  return result;
}

double sub_1008A98B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = a1 + 2908;
  v3 = *(_QWORD *)(a1 + 2712);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *(_DWORD *)(a1 + 2888) = 0xFFFF;
  *(_QWORD *)(a1 + 2900) = 0;
  *(_QWORD *)(a1 + 2892) = 0;
  result = -1.0;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)v2 = xmmword_101BAFC90;
  *(_OWORD *)(v2 + 16) = _Q1;
  *(_OWORD *)(v2 + 32) = _Q1;
  *(_OWORD *)(v2 + 48) = _Q1;
  *(_DWORD *)(a1 + 2972) = 0;
  *(_QWORD *)(a1 + 2976) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 2992) = 0;
  *(_QWORD *)(a1 + 2984) = 0;
  *(_DWORD *)(a1 + 3000) = 0;
  *(_QWORD *)(v2 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 3012) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 3016) = 0;
  *(_QWORD *)(a1 + 3032) = 0;
  *(_QWORD *)(a1 + 3024) = 0;
  *(_BYTE *)(a1 + 3040) = 0;
  return result;
}

uint64_t sub_1008A9948(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 2712);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_1008A9960(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 2712);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
  return result;
}

uint64_t sub_1008A9978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  NSObject *v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  double v17;
  uint64_t v18;
  const char *v19;
  uint8_t *v20;
  _DWORD v21[2];
  __int16 v22;
  unint64_t v23;
  __int16 v24;
  double v25;
  __int16 v26;
  double v27;
  uint8_t buf[8];
  __int16 v29;
  unint64_t v30;
  __int16 v31;
  double v32;
  __int16 v33;
  double v34;

  v4 = a1 + 48;
  v5 = sub_100B303DC();
  *(_DWORD *)buf = 1;
  *(_QWORD *)buf = sub_100B30608(v5, buf);
  result = sub_100E23EB0(v4, (double *)buf, a2);
  if (*(_QWORD *)(a1 + 2712))
  {
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    v7 = qword_1022A00D8;
    if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEBUG))
    {
      v8 = *(_DWORD *)a2;
      v9 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3);
      v10 = sub_100B303DC();
      *(_DWORD *)buf = 1;
      v11 = sub_100B30608(v10, buf);
      v12 = sub_100B303DC();
      v13 = sub_100B309E0(v12);
      *(_DWORD *)buf = 67240960;
      *(_DWORD *)&buf[4] = v8;
      v29 = 2050;
      v30 = v9;
      v31 = 2050;
      v32 = v11;
      v33 = 2050;
      v34 = v13;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLMM,RouteHints,CLLocationFilterController,setMapMatchingRouteHint,type,%{public}d,sz,%{public}zu,mct,%{public}.3f,propagation_us,%{public}.3f", buf, 0x26u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_10215A230);
      v14 = qword_1022A00D8;
      v15 = *(_DWORD *)a2;
      v16 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3);
      v17 = sub_1005EEB24();
      v18 = sub_100B303DC();
      v21[0] = 67240960;
      v21[1] = v15;
      v22 = 2050;
      v23 = v16;
      v24 = 2050;
      v25 = v17;
      v26 = 2050;
      v27 = sub_100B309E0(v18);
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v14, 2, "CLMM,RouteHints,CLLocationFilterController,setMapMatchingRouteHint,type,%{public}d,sz,%{public}zu,mct,%{public}.3f,propagation_us,%{public}.3f", v21, 38);
      v20 = (uint8_t *)v19;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMapMatchingRouteHint(const CLMapsRouteHintData &)", "%s\n", v19);
      if (v20 != buf)
        free(v20);
    }
    result = sub_1011344E8(*(_QWORD *)(a1 + 2712), (double *)a2);
  }
  *(_QWORD *)(a1 + 3144) = *(_QWORD *)a2;
  if (a1 + 3144 != a2)
    result = (uint64_t)sub_1008AFA64((char *)(a1 + 3152), *(char **)(a2 + 8), *(_QWORD *)(a2 + 16), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3));
  *(_OWORD *)(a1 + 3176) = *(_OWORD *)(a2 + 32);
  return result;
}

uint64_t sub_1008A9C58(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 2712);
  if (result)
    return sub_101134610(result, a2);
  return result;
}

double sub_1008A9C68()
{
  return 166.0;
}

BOOL sub_1008A9C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v4;

  v4 = *(double *)(a4 + 544);
  if (v4 > 0.0)
  {
    *(_QWORD *)(a2 + 28) = *(_QWORD *)(a4 + 28);
    *(_DWORD *)(a3 + 316) = *(_DWORD *)(a4 + 476);
    *(_DWORD *)(a3 + 312) = *(_DWORD *)(a4 + 472);
    *(double *)(a3 + 384) = v4;
    *(_QWORD *)(a3 + 360) = *(_QWORD *)(a4 + 520);
    *(_OWORD *)(a3 + 368) = *(_OWORD *)(a4 + 528);
    *(_QWORD *)(a3 + 624) = *(_QWORD *)(a4 + 784);
    *(_OWORD *)(a3 + 496) = *(_OWORD *)(a4 + 656);
  }
  return v4 > 0.0;
}

void sub_1008A9CC8(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  __int128 v9;
  NSObject *v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  double v20;
  uint64_t v21;
  const char *v22;
  uint8_t *v23;
  _DWORD v24[2];
  __int16 v25;
  unint64_t v26;
  __int16 v27;
  double v28;
  __int16 v29;
  double v30;
  uint8_t buf[8];
  __int16 v32;
  unint64_t v33;
  __int16 v34;
  double v35;
  __int16 v36;
  double v37;
  _OWORD v38[2];
  int v39;

  if (!*a2)
  {
    v5 = a1 + 48;
    v6 = sub_100B303DC();
    *(_DWORD *)buf = 1;
    *(_QWORD *)buf = sub_100B30608(v6, buf);
    sub_100E23C40(v5, (uint64_t **)buf, a3);
    v7 = *(_QWORD *)(a1 + 2712);
    if (v7)
    {
      v8 = (*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      if (*(_DWORD *)(a3 + 8) != 71
        && (*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000
        && *(double *)a3 > 0.0)
      {
        v9 = *(_OWORD *)(a3 + 16);
        v38[0] = *(_OWORD *)a3;
        v38[1] = v9;
        v39 = *(_DWORD *)(a3 + 32);
        sub_10112DC40(v7, (uint64_t)v38);
      }
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v10 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v11 = *(_DWORD *)(a3 + 8);
        if (v8)
          v12 = *(_QWORD *)a3;
        else
          v12 = 0xBFF0000000000000;
        v13 = sub_100B303DC();
        *(_DWORD *)buf = 1;
        v14 = sub_100B30608(v13, buf);
        v15 = sub_100B303DC();
        v16 = sub_100B309E0(v15);
        *(_DWORD *)buf = 67240960;
        *(_DWORD *)&buf[4] = v11;
        v32 = 2050;
        v33 = v12;
        v34 = 2050;
        v35 = v14;
        v36 = 2050;
        v37 = v16;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "CLMM,CLLocationFilterController,Received NotificationWorkoutSessionOverride,fitnessSession,%{public}d,startTime,%{public}.1lf,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x26u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v17 = qword_1022A0028;
        v18 = *(_DWORD *)(a3 + 8);
        if (v8)
          v19 = *(_QWORD *)a3;
        else
          v19 = 0xBFF0000000000000;
        v20 = sub_1005EEB24();
        v21 = sub_100B303DC();
        v24[0] = 67240960;
        v24[1] = v18;
        v25 = 2050;
        v26 = v19;
        v27 = 2050;
        v28 = v20;
        v29 = 2050;
        v30 = sub_100B309E0(v21);
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v17, 2, "CLMM,CLLocationFilterController,Received NotificationWorkoutSessionOverride,fitnessSession,%{public}d,startTime,%{public}.1lf,now,%{public}.3f,propagation_us,%{public}.3f", v24, 38);
        v23 = (uint8_t *)v22;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionStateObserverNotification(const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)", "%s\n", v22);
        if (v23 != buf)
          free(v23);
      }
    }
  }
}

void sub_1008A9F9C(uint64_t a1, int *a2, uint64_t a3)
{
  NSObject *v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  NSObject *v23;
  int v24;
  int v25;
  const char *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  double v34;
  uint64_t v35;
  const char *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  const char *v43;
  uint8_t *v44;
  double v45;
  __int16 v46;
  int v47;
  __int16 v48;
  _BYTE v49[24];
  uint8_t buf[8];
  uint64_t v51;
  _BYTE v52[24];

  if (*a2 == 2)
  {
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v14 = qword_1022A01B8;
    if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEBUG))
    {
      v15 = *(_QWORD *)(a3 + 112);
      v16 = *(_QWORD *)(a3 + 16);
      v17 = sub_100B303DC();
      *(_DWORD *)buf = 1;
      v18 = sub_100B30608(v17, buf);
      v19 = sub_100B303DC();
      v20 = sub_100B309E0(v19);
      *(_DWORD *)buf = 67240960;
      *(_DWORD *)&buf[4] = v15;
      LOWORD(v51) = 1026;
      *(_DWORD *)((char *)&v51 + 2) = v16;
      HIWORD(v51) = 2050;
      *(double *)v52 = v18;
      *(_WORD *)&v52[8] = 2050;
      *(double *)&v52[10] = v20;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Received motion state mediator workout notification,workout_type,%{public}d,event_type,%{public}d,now_mct,%{public}.3f,propagation_us,%{public}.3f", buf, 0x22u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v38 = qword_1022A01B8;
      v39 = *(_QWORD *)(a3 + 112);
      v40 = *(_QWORD *)(a3 + 16);
      v41 = sub_1005EEB24();
      v42 = sub_100B303DC();
      LODWORD(v45) = 67240960;
      HIDWORD(v45) = v39;
      v46 = 1026;
      v47 = v40;
      v48 = 2050;
      *(double *)v49 = v41;
      *(_WORD *)&v49[8] = 2050;
      *(_QWORD *)&v49[10] = sub_100B309E0(v42);
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v38, 2, "Received motion state mediator workout notification,workout_type,%{public}d,event_type,%{public}d,now_mct,%{public}.3f,propagation_us,%{public}.3f", &v45, 34);
      v44 = (uint8_t *)v43;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionStateMediatorNotification(const CLMotionStateMediator_Type::Notification &, const CLMotionStateMediator_Type::NotificationData &)", "%s\n", v43);
      if (v44 != buf)
        free(v44);
    }
    *(_QWORD *)buf = *(_QWORD *)a3;
    v21 = *(_QWORD *)(a3 + 16);
    if (v21 != 13)
    {
      if (v21 != 15)
        return;
      v51 = 0;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(a3 + 112);
    if (v28 > 14)
    {
      if (v28 == 17)
      {
LABEL_33:
        v51 = 0x800000008;
LABEL_34:
        if ((unint64_t)(v28 - 3) <= 1)
          v51 = 0x600000006;
LABEL_36:
        v29 = sub_100B303DC();
        LODWORD(v45) = 1;
        v45 = sub_100B30608(v29, &v45);
        sub_100E23C40(a1 + 48, (uint64_t **)&v45, (uint64_t)buf);
        return;
      }
      if (v28 != 15)
        goto LABEL_34;
    }
    else if (v28 != 1)
    {
      goto LABEL_32;
    }
    v51 = 0x400000004;
LABEL_32:
    if (v28 != 2)
      goto LABEL_34;
    goto LABEL_33;
  }
  if (*a2)
  {
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v23 = qword_1022A01B8;
    if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_FAULT))
    {
      v24 = *a2;
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&buf[4] = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_FAULT, "#Warning, Fusion Controller, received unhandled motion state mediator notification %{public}d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v25 = *a2;
      LODWORD(v45) = 67240192;
      HIDWORD(v45) = v25;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 17, "#Warning, Fusion Controller, received unhandled motion state mediator notification %{public}d", &v45, 8);
      v27 = (uint8_t *)v26;
      sub_100512490("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::feedMotionStateMediatorNotification(const CLMotionStateMediator_Type::Notification &, const CLMotionStateMediator_Type::NotificationData &)", "%s\n", v26);
      if (v27 != buf)
        free(v27);
    }
  }
  else
  {
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v5 = qword_1022A01B8;
    if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEBUG))
    {
      v6 = *(_DWORD *)(a3 + 8);
      v7 = *(_DWORD *)(a3 + 12);
      v8 = *(unsigned __int8 *)(a3 + 209);
      v9 = sub_100B303DC();
      *(_DWORD *)buf = 1;
      v10 = sub_100B30608(v9, buf);
      v11 = sub_100B303DC();
      v12 = sub_100B309E0(v11);
      *(_DWORD *)buf = 67241216;
      *(_DWORD *)&buf[4] = v6;
      LOWORD(v51) = 1026;
      *(_DWORD *)((char *)&v51 + 2) = v7;
      HIWORD(v51) = 1024;
      *(_DWORD *)v52 = v8;
      *(_WORD *)&v52[4] = 2050;
      *(double *)&v52[6] = v10;
      *(_WORD *)&v52[14] = 2050;
      *(double *)&v52[16] = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Received motion state mediator activity notification,activity_type,%{public}d,confidence,%{public}d,is_historical,%d,now_mct,%{public}.3f,propagation_us,%{public}.3f", buf, 0x28u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v30 = qword_1022A01B8;
      v31 = *(_DWORD *)(a3 + 8);
      v32 = *(_DWORD *)(a3 + 12);
      v33 = *(unsigned __int8 *)(a3 + 209);
      v34 = sub_1005EEB24();
      v35 = sub_100B303DC();
      LODWORD(v45) = 67241216;
      HIDWORD(v45) = v31;
      v46 = 1026;
      v47 = v32;
      v48 = 1024;
      *(_DWORD *)v49 = v33;
      *(_WORD *)&v49[4] = 2050;
      *(double *)&v49[6] = v34;
      *(_WORD *)&v49[14] = 2050;
      *(_QWORD *)&v49[16] = sub_100B309E0(v35);
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v30, 2, "Received motion state mediator activity notification,activity_type,%{public}d,confidence,%{public}d,is_historical,%d,now_mct,%{public}.3f,propagation_us,%{public}.3f", &v45, 40);
      v37 = (uint8_t *)v36;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionStateMediatorNotification(const CLMotionStateMediator_Type::Notification &, const CLMotionStateMediator_Type::NotificationData &)", "%s\n", v36);
      if (v37 != buf)
        free(v37);
    }
    v13 = sub_100B303DC();
    *(_DWORD *)buf = 1;
    *(_QWORD *)buf = sub_100B30608(v13, buf);
    sub_100E233A0(a1 + 48, (double *)buf, (unsigned int *)(a3 + 8));
  }
}

void sub_1008AA600(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  int v6;

  v3 = a1 + 48;
  v4 = sub_100B303DC();
  v6 = 1;
  v5 = sub_100B30608(v4, &v6);
  sub_100E242D0(v3, (uint64_t *)&v5, a2);
}

void sub_1008AA650(uint64_t a1, int *a2, __int128 *a3)
{
  uint64_t v5;
  double v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double v12;
  double *v13;
  double v14;
  BOOL v15;
  _BOOL4 v16;
  int v17;
  NSObject *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  const char *v23;
  uint8_t *v24;
  NSObject *v25;
  uint8_t *v26;
  double v27;
  double v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  double v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  double v45;
  uint64_t v46;
  double v47;
  NSObject *v49;
  int v50;
  int v51;
  double v52;
  uint8_t *v53;
  uint8_t *v54;
  NSObject *v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double v62;
  int v63;
  int v64;
  __int16 v65;
  _BYTE v66[10];
  double v67;
  double v68;
  __int16 v69;
  double v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint8_t buf[8];
  __int16 v81;
  _BYTE v82[10];
  double v83;
  double v84;
  __int16 v85;
  double v86;

  if ((*a2 - 1) >= 2)
  {
    if (*a2)
    {
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v49 = qword_1022A01B8;
      if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_FAULT))
      {
        v50 = *a2;
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&buf[4] = v50;
        _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_FAULT, "#Warning, Fusion Controller, received unhandled motion notification %{public}d", buf, 8u);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A01B0 != -1)
          dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
        v51 = *a2;
        LODWORD(v71) = 67240192;
        DWORD1(v71) = v51;
        v52 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 17, "#Warning, Fusion Controller, received unhandled motion notification %{public}d", &v71, 8);
        v54 = v53;
        sub_100512490("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v52);
        goto LABEL_78;
      }
    }
    else
    {
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v25 = qword_1022A01B8;
      if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning, Fusion Controller, unexpected kNotificationMovementCoarse", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A01B0 != -1)
          dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
        LOWORD(v71) = 0;
        v27 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 0, "#Warning, Fusion Controller, unexpected kNotificationMovementCoarse", &v71, 2);
        goto LABEL_77;
      }
    }
    return;
  }
  v5 = sub_100B303DC();
  *(_DWORD *)buf = 0;
  v6 = sub_100B30608(v5, buf);
  v62 = v6;
  v7 = a3[6];
  v8 = a3[7];
  v9 = a3[4];
  v76 = a3[5];
  v77 = v7;
  v78 = v8;
  v79 = *((_QWORD *)a3 + 16);
  v10 = a3[3];
  v73 = a3[2];
  v74 = v10;
  v75 = v9;
  v11 = a3[1];
  v71 = *a3;
  v72 = v11;
  v12 = vabdd_f64(v6, *(double *)(a1 + 3056));
  if (v12 >= 1.5)
  {
    v17 = v71;
    goto LABEL_34;
  }
  v16 = *(double *)(a1 + 3048) == 0.0
     && ((v13 = (double *)(a1 + 2932), v14 = vabdd_f64(v6, *(double *)(a1 + 2964)), v12 < 0.5)
       ? (v15 = v14 < 1.5)
       : (v15 = 0),
         v15 && *v13 >= 0.0)
     && *v13 + *(double *)(a1 + 2940) * -2.0 < 0.0;
  v17 = v71;
  if ((int)v71 <= 40)
  {
    switch((int)v71)
    {
      case 1:
        v17 = 10;
        goto LABEL_72;
      case 2:
        v17 = 11;
LABEL_72:
        LODWORD(v71) = v17;
        if (!v16)
          goto LABEL_15;
        goto LABEL_14;
      case 3:
      case 4:
      case 7:
      case 8:
      case 9:
        goto LABEL_13;
      case 5:
        goto LABEL_14;
      case 10:
      case 11:
        if (v16)
          goto LABEL_14;
        goto LABEL_15;
      default:
        goto LABEL_15;
    }
  }
  if ((_DWORD)v71 == 41)
  {
LABEL_13:
    v17 = 5;
    LODWORD(v71) = 5;
  }
  else if ((_DWORD)v71 != 52 && (_DWORD)v71 != 56)
  {
    goto LABEL_15;
  }
LABEL_14:
  DWORD1(v71) = 2;
LABEL_15:
  if (qword_1022A01B0 != -1)
    dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
  v18 = qword_1022A01B8;
  if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEBUG))
  {
    v19 = *(_DWORD *)a3;
    v20 = *((_DWORD *)a3 + 1);
    *(_DWORD *)buf = 67241216;
    *(_DWORD *)&buf[4] = v19;
    v81 = 1026;
    *(_DWORD *)v82 = v20;
    *(_WORD *)&v82[4] = 1026;
    *(_DWORD *)&v82[6] = v17;
    LOWORD(v83) = 1026;
    *(_DWORD *)((char *)&v83 + 2) = DWORD1(v71);
    HIWORD(v83) = 1026;
    LODWORD(v84) = v16;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "In vehicle detected Adjusting motion state,type,%{public}d,confidence,%{public}d,to type,%{public}d,confidence,%{public}d,isSpeedZero,%{public}d", buf, 0x20u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v21 = *(_DWORD *)a3;
    v22 = *((_DWORD *)a3 + 1);
    v63 = 67241216;
    v64 = v21;
    v65 = 1026;
    *(_DWORD *)v66 = v22;
    *(_WORD *)&v66[4] = 1026;
    *(_DWORD *)&v66[6] = v17;
    LOWORD(v67) = 1026;
    *(_DWORD *)((char *)&v67 + 2) = DWORD1(v71);
    HIWORD(v67) = 1026;
    LODWORD(v68) = v16;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A01B8, 2, "In vehicle detected Adjusting motion state,type,%{public}d,confidence,%{public}d,to type,%{public}d,confidence,%{public}d,isSpeedZero,%{public}d", &v63, 32);
    v24 = (uint8_t *)v23;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v23);
    if (v24 != buf)
      free(v24);
  }
LABEL_34:
  if (*(_BYTE *)(a1 + 3072)
    && v17
    && ((v28 = v6 - *(double *)(a1 + 3064), v28 >= 0.0) ? (v29 = v28 < 10.0) : (v29 = 0), v29))
  {
    if (qword_1022A01B0 != -1)
      dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
    v55 = qword_1022A01B8;
    if (os_log_type_enabled((os_log_t)qword_1022A01B8, OS_LOG_TYPE_DEBUG))
    {
      v56 = sub_100B303DC();
      v57 = sub_100B309E0(v56);
      *(_DWORD *)buf = 67240704;
      *(_DWORD *)&buf[4] = v17;
      v81 = 2050;
      *(double *)v82 = v6;
      *(_WORD *)&v82[8] = 2050;
      v83 = v57;
      _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEBUG, "Going to sleep. Not providing motion state, %{public}d, to the location KF,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x1Cu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01B0 != -1)
        dispatch_once(&qword_1022A01B0, &stru_10215A1D0);
      v58 = qword_1022A01B8;
      v59 = sub_100B303DC();
      v60 = sub_100B309E0(v59);
      v63 = 67240704;
      v64 = v17;
      v65 = 2050;
      *(double *)v66 = v6;
      *(_WORD *)&v66[8] = 2050;
      v67 = v60;
      LODWORD(v61) = 28;
      v27 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v58, 2, "Going to sleep. Not providing motion state, %{public}d, to the location KF,now,%{public}.3f,propagation_us,%{public}.3f", &v63, v61);
      goto LABEL_77;
    }
  }
  else
  {
    v30 = sub_100B303DC();
    *(_DWORD *)buf = 1;
    *(_QWORD *)buf = sub_100B30608(v30, buf);
    sub_100E233A0(a1 + 48, (double *)buf, (unsigned int *)&v71);
    v31 = *(_QWORD *)(a1 + 2712);
    if (v31)
    {
      (*(void (**)(uint64_t, double *, __int128 *))(*(_QWORD *)v31 + 64))(v31, &v62, &v71);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v32 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v33 = v71;
        v34 = DWORD1(v71);
        v35 = HIDWORD(v71);
        v36 = v72;
        v37 = v62;
        v38 = sub_100B303DC();
        v39 = sub_100B309E0(v38);
        *(_DWORD *)buf = 67241472;
        *(_DWORD *)&buf[4] = v33;
        v81 = 1026;
        *(_DWORD *)v82 = v34;
        *(_WORD *)&v82[4] = 1026;
        *(_DWORD *)&v82[6] = v35;
        LOWORD(v83) = 1026;
        *(_DWORD *)((char *)&v83 + 2) = v36;
        HIWORD(v83) = 2050;
        v84 = v37;
        v85 = 2050;
        v86 = v39;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "CLMM, MotionState,type,%{public}d,confidence,%{public}d,mountedState,%{public}d,mountedConfidence,%{public}d,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x2Eu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v40 = qword_1022A0028;
        v41 = v71;
        v42 = DWORD1(v71);
        v43 = HIDWORD(v71);
        v44 = v72;
        v45 = v62;
        v46 = sub_100B303DC();
        v47 = sub_100B309E0(v46);
        v63 = 67241472;
        v64 = v41;
        v65 = 1026;
        *(_DWORD *)v66 = v42;
        *(_WORD *)&v66[4] = 1026;
        *(_DWORD *)&v66[6] = v43;
        LOWORD(v67) = 1026;
        *(_DWORD *)((char *)&v67 + 2) = v44;
        HIWORD(v67) = 2050;
        v68 = v45;
        v69 = 2050;
        v70 = v47;
        LODWORD(v61) = 46;
        v27 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v40, 2, "CLMM, MotionState,type,%{public}d,confidence,%{public}d,mountedState,%{public}d,mountedConfidence,%{public}d,now,%{public}.3f,propagation_us,%{public}.3f", &v63, v61);
LABEL_77:
        v54 = v26;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v27);
LABEL_78:
        if (v54 != buf)
          free(v54);
      }
    }
  }
}

void sub_1008AAF6C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  NSObject *v23;
  int v24;
  NSObject *v25;
  double v26;
  int v27;
  int v28;
  int v29;
  double v30;
  _QWORD *v31;
  _QWORD *v32;
  NSObject *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  const char *v37;
  char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  const char *v42;
  char *v43;
  double v44;
  int v45;
  int v46;
  int v47;
  const char *v48;
  char *v49;
  int v50;
  const char *v51;
  char *v52;
  const char *v53;
  char *v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  double v58;
  const char *v59;
  char *v60;
  uint64_t v61;
  int v62;
  double v63;
  __int16 v64;
  _BYTE v65[10];
  __int16 v66;
  int v67;
  _BYTE buf[12];
  __int16 v69;
  _BYTE v70[10];
  __int16 v71;
  int v72;

  v5 = *(_QWORD *)(a1 + 2712);
  switch(*a2)
  {
    case 2:
      v6 = sub_100B303DC();
      *(_DWORD *)buf = 0;
      *(double *)(a1 + 3064) = sub_100B30608(v6, buf);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v7 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v8 = sub_100B303DC();
        *(_DWORD *)buf = 0;
        v9 = sub_100B30608(v8, buf);
        v10 = sub_100B303DC();
        v11 = sub_100B309E0(v10);
        *(_DWORD *)buf = 134349312;
        *(double *)&buf[4] = v9;
        v69 = 2050;
        *(double *)v70 = v11;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "device entering sleep,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x16u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v34 = qword_1022A0028;
        v35 = sub_1005FECEC();
        v36 = sub_100B303DC();
        v62 = 134349312;
        v63 = v35;
        v64 = 2050;
        *(_QWORD *)v65 = sub_100B309E0(v36);
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v34, 2, "device entering sleep,now,%{public}.3f,propagation_us,%{public}.3f", &v62, 22);
        v38 = (char *)v37;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v37);
        if (v38 != buf)
          free(v38);
      }
      v12 = sub_100B303DC();
      *(_DWORD *)buf = 1;
      *(_QWORD *)buf = sub_100B30608(v12, buf);
      sub_100E11334(a1 + 48, (double *)buf);
      *(_BYTE *)(a1 + 3072) = 1;
      break;
    case 3:
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v13 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v14 = sub_100B303DC();
        *(_DWORD *)buf = 0;
        v15 = sub_100B30608(v14, buf);
        v16 = sub_100B303DC();
        v17 = sub_100B309E0(v16);
        *(_DWORD *)buf = 134349312;
        *(double *)&buf[4] = v15;
        v69 = 2050;
        *(double *)v70 = v17;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "device wake - checking for corresponding sleep,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x16u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v39 = qword_1022A0028;
        v40 = sub_1005FECEC();
        v41 = sub_100B303DC();
        v62 = 134349312;
        v63 = v40;
        v64 = 2050;
        *(_QWORD *)v65 = sub_100B309E0(v41);
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v39, 2, "device wake - checking for corresponding sleep,now,%{public}.3f,propagation_us,%{public}.3f", &v62, 22);
        v43 = (char *)v42;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v42);
        if (v43 != buf)
          free(v43);
      }
      if (!*(_BYTE *)(a1 + 3072))
      {
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v18 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEFAULT))
        {
          v19 = *(_QWORD *)(a1 + 2704);
          v20 = sub_100B303DC();
          v21 = sub_100B309E0(v20);
          *(_DWORD *)buf = 134349312;
          *(_QWORD *)&buf[4] = v19;
          v69 = 2050;
          *(double *)v70 = v21;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#Warning wake detected with no prior sleep known, toggling LC Fusion at MCT time, %{public}.3lf,propagation_us,%{public}.3f", buf, 0x16u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_10215A1F0);
          v55 = qword_1022A0028;
          v56 = *(double *)(a1 + 2704);
          v57 = sub_100B303DC();
          v58 = sub_100B309E0(v57);
          v62 = 134349312;
          v63 = v56;
          v64 = 2050;
          *(double *)v65 = v58;
          LODWORD(v61) = 22;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v55, 0, "#Warning wake detected with no prior sleep known, toggling LC Fusion at MCT time, %{public}.3lf,propagation_us,%{public}.3f", &v62, v61);
          v60 = (char *)v59;
          sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v59);
          if (v60 != buf)
            free(v60);
        }
        if ((*(_DWORD *)(a1 + 2200) & 0xFFFFFFFE) != 2)
          sub_100E11334(a1 + 48, (double *)(a1 + 2704));
      }
      v22 = sub_100B303DC();
      *(_DWORD *)buf = 1;
      *(_QWORD *)buf = sub_100B30608(v22, buf);
      sub_100E1174C(a1 + 48, (double *)buf);
      *(_BYTE *)(a1 + 3072) = 0;
      break;
    case 6:
      if ((*(_DWORD *)(a3 + 4) - 1) > 1)
      {
        if (qword_10229FC50 != -1)
          dispatch_once(&qword_10229FC50, &stru_10215A210);
        v33 = qword_10229FC58;
        if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "#cltr,device does not have reachability", buf, 2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FC50 != -1)
            dispatch_once(&qword_10229FC50, &stru_10215A210);
          LOWORD(v62) = 0;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 2, "#cltr,device does not have reachability", &v62, 2);
          v54 = (char *)v53;
          sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v53);
          if (v54 != buf)
            free(v54);
        }
      }
      else
      {
        if (qword_10229FC50 != -1)
          dispatch_once(&qword_10229FC50, &stru_10215A210);
        v23 = qword_10229FC58;
        if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEBUG))
        {
          v24 = *(_DWORD *)(a3 + 4);
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "#cltr,device has reachability,type,%d,clearing backoff timer if one exists", buf, 8u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FC50 != -1)
            dispatch_once(&qword_10229FC50, &stru_10215A210);
          v50 = *(_DWORD *)(a3 + 4);
          v62 = 67109120;
          LODWORD(v63) = v50;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 2, "#cltr,device has reachability,type,%d,clearing backoff timer if one exists", &v62);
          v52 = (char *)v51;
          sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v51);
          if (v52 != buf)
            free(v52);
        }
        (*(void (**)(uint64_t))(*(_QWORD *)a1 + 408))(a1);
      }
      break;
    case 7:
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v25 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v26 = *(double *)a3;
        v27 = *(unsigned __int8 *)(a3 + 8);
        v28 = *(unsigned __int8 *)(a3 + 9);
        v29 = *(unsigned __int8 *)(a3 + 16);
        *(_DWORD *)buf = 134349824;
        *(double *)&buf[4] = v26;
        v69 = 1026;
        *(_DWORD *)v70 = v27;
        *(_WORD *)&v70[4] = 1026;
        *(_DWORD *)&v70[6] = v28;
        v71 = 1026;
        v72 = v29;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "CLMM,Battery notification,level,%{public}.2lf,charged,%{public}d,connected,%{public}d,wasConnected,%{public}d", buf, 0x1Eu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v44 = *(double *)a3;
        v45 = *(unsigned __int8 *)(a3 + 8);
        v46 = *(unsigned __int8 *)(a3 + 9);
        v47 = *(unsigned __int8 *)(a3 + 16);
        v62 = 134349824;
        v63 = v44;
        v64 = 1026;
        *(_DWORD *)v65 = v45;
        *(_WORD *)&v65[4] = 1026;
        *(_DWORD *)&v65[6] = v46;
        v66 = 1026;
        v67 = v47;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "CLMM,Battery notification,level,%{public}.2lf,charged,%{public}d,connected,%{public}d,wasConnected,%{public}d", &v62, 30);
        v49 = (char *)v48;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v48);
        if (v49 != buf)
          free(v49);
      }
      if (v5)
      {
        v30 = *(double *)a3;
        if (*(double *)a3 >= 0.0 && v30 <= 100.0)
        {
          sub_100EAE084(a1 + 3104, v30);
          v31 = *(_QWORD **)(a1 + 2712);
          if (v31)
            sub_1001D4260(v31, *(_BYTE *)(a1 + 3119) == 0);
        }
      }
      break;
    case 0xD:
      if (v5)
      {
        sub_100EADFBC(a1 + 3104, *(_DWORD *)a3);
        goto LABEL_43;
      }
      break;
    case 0xF:
      if (v5)
      {
        sub_100EAE034(a1 + 3104, *(_BYTE *)a3);
LABEL_43:
        v32 = *(_QWORD **)(a1 + 2712);
        if (v32)
          sub_1001D4260(v32, *(_BYTE *)(a1 + 3119) == 0);
      }
      break;
    default:
      return;
  }
}

uint64_t sub_1008ABA68(uint64_t result, uint64_t a2, int *a3)
{
  uint64_t v4;
  NSObject *v5;
  int v6;
  int v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  const char *v14;
  uint8_t *v15;
  _DWORD v16[2];
  __int16 v17;
  int v18;
  __int16 v19;
  int v20;
  uint8_t buf[8];
  __int16 v22;
  int v23;
  __int16 v24;
  int v25;

  if (!*(_BYTE *)(result + 3073))
  {
    v4 = result;
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_10215A1F0);
    v5 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      v6 = *(_DWORD *)(v4 + 3128);
      v7 = *a3;
      v8 = a3[1];
      *(_DWORD *)buf = 67240704;
      *(_DWORD *)&buf[4] = v6;
      v22 = 1026;
      v23 = v7;
      v24 = 1026;
      v25 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "priorSignalEnvironment,%{public}d,newSignalEnvironment,%{public}d,fidelity,%{public}d", buf, 0x14u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v11 = *(_DWORD *)(v4 + 3128);
      v12 = *a3;
      v13 = a3[1];
      v16[0] = 67240704;
      v16[1] = v11;
      v17 = 1026;
      v18 = v12;
      v19 = 1026;
      v20 = v13;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "priorSignalEnvironment,%{public}d,newSignalEnvironment,%{public}d,fidelity,%{public}d", v16, 20);
      v15 = (uint8_t *)v14;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedSignalEnvironmentNotification(const CLSignalEnvironmentProvider_Type::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)", "%s\n", v14);
      if (v15 != buf)
        free(v15);
    }
    sub_100EAE05C((int *)(v4 + 3104), *a3);
    v9 = *(_QWORD **)(v4 + 2712);
    if (v9)
      sub_1001D4260(v9, *(_BYTE *)(v4 + 3119) == 0);
    *(_DWORD *)(v4 + 3076) = *a3;
    v10 = sub_100B303DC();
    *(_DWORD *)buf = 1;
    *(_QWORD *)buf = sub_100B30608(v10, buf);
    sub_100E2480C(v4 + 48, (uint64_t *)buf, *(_QWORD *)a3);
    result = *(_QWORD *)(v4 + 2712);
    if (result)
      return sub_10112D964(result, *(_QWORD *)a3);
  }
  return result;
}

void sub_1008ABCBC(uint64_t a1, int *a2)
{
  const void *v3;
  NSObject *v4;
  const char *v5;
  const void *v6;
  NSObject *v7;
  uint8_t *v8;
  _QWORD v9[2];
  uint8_t buf[1640];

  v3 = (const void *)sub_1001DEC98(a2);
  if (CFEqual(v3, kCTRegistrationStatusChangedNotification))
  {
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_10215A1F0);
    v4 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "device lost registration - no longer has active cell", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      LOWORD(v9[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "device lost registration - no longer has active cell", v9, 2, v9[0]);
LABEL_20:
      v8 = (uint8_t *)v5;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedTelephonyNotification(const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v5);
      if (v8 != buf)
        free(v8);
    }
  }
  else
  {
    v6 = (const void *)sub_1001DEC98(a2);
    if (CFEqual(v6, kCTCallStatusChangeNotification))
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v7 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "device on active call - no longer has active cell", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        LOWORD(v9[0]) = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "device on active call - no longer has active cell", v9, 2, v9[0]);
        goto LABEL_20;
      }
    }
  }
}

BOOL sub_1008ABF50(_DWORD *a1, double a2)
{
  if (!sub_1002199F0((uint64_t)a1, a2, 6.0) && *a1 == 1 || !sub_1002199F0((uint64_t)a1, a2, 6.0) && !*a1)
    return 1;
  if (sub_1002199F0((uint64_t)a1, a2, 6.0))
    return 0;
  return *a1 == 3;
}

uint64_t sub_1008ABFDC(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  void *i;
  size_t v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  uint64_t v14;
  int v15;
  int v16;
  void *v18;
  int v19;
  void *__p;
  size_t __n;
  unsigned __int8 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];

  v2 = *(_QWORD *)(a1 + 3240);
  if (v2
    && (v4 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 48))(v2)) != 0
    && (v5 = v4,
        v26 = 0u,
        v27 = 0u,
        v24 = 0u,
        v25 = 0u,
        (v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v28, 16)) != 0))
  {
    v7 = 0;
    v8 = *(_QWORD *)v25;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v25 != v8)
          objc_enumerationMutation(v5);
        sub_1015A2E04(&__p, (char *)objc_msgSend(*(id *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i), "UTF8String"));
        if ((v23 & 0x80u) == 0)
          v10 = v23;
        else
          v10 = __n;
        v11 = (unsigned __int8 *)*((unsigned __int8 *)a2 + 23);
        v12 = (char)v11;
        if ((char)v11 < 0)
          v11 = a2[1];
        if ((unsigned __int8 *)v10 == v11)
        {
          if (v12 >= 0)
            v13 = (unsigned __int8 *)a2;
          else
            v13 = *a2;
          if ((v23 & 0x80) != 0)
          {
            v18 = __p;
            v19 = memcmp(__p, v13, __n);
            operator delete(v18);
            if (!v19)
            {
LABEL_35:
              v7 = 1;
              return v7 & 1;
            }
          }
          else
          {
            if (!v23)
              goto LABEL_35;
            v14 = 0;
            do
            {
              v15 = *((unsigned __int8 *)&__p + v14);
              v16 = v13[v14];
            }
            while (v15 == v16 && v23 - 1 != v14++);
            v7 |= v15 == v16;
            if (v15 == v16)
              return v7 & 1;
          }
        }
        else if ((v23 & 0x80) != 0)
        {
          operator delete(__p);
        }
      }
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      if (v6)
        continue;
      break;
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

void sub_1008AC1B4(uint64_t a1, int *a2, uint64_t a3)
{
  int v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;
  int v12;
  NSObject *v13;
  uint64_t v14;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint8_t *v21;
  uint64_t v22;
  const char *v23;
  uint8_t *v24;
  uint64_t v25;
  const char *v26;
  int v27;
  uint64_t v28;
  uint8_t buf[4];
  uint64_t v30;

  if (*(_QWORD *)(a1 + 2712))
  {
    v5 = *a2;
    if ((*a2 - 1) < 3)
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v6 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v7 = a3 + 8;
        if (*(char *)(a3 + 31) < 0)
          v7 = *(_QWORD *)(a3 + 8);
        *(_DWORD *)buf = 136315138;
        v30 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CLMM,locationApp backgrounded or terminated,%s", buf, 0xCu);
      }
      if (!sub_1001BFF7C(115, 2))
        goto LABEL_10;
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v19 = *(_QWORD *)(a3 + 8);
      v18 = a3 + 8;
      v17 = v19;
      if (*(char *)(v18 + 23) >= 0)
        v17 = v18;
      v27 = 136315138;
      v28 = v17;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "CLMM,locationApp backgrounded or terminated,%s", (const char *)&v27);
      v21 = (uint8_t *)v20;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedAppNotification(const CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)", "%s\n", v20);
      if (v21 == buf)
        goto LABEL_10;
      goto LABEL_53;
    }
    if (v5 == 9 || v5 == 4)
    {
      v9 = (_QWORD *)(a3 + 8);
      if (!sub_1008ABFDC(a1, (unsigned __int8 **)(a3 + 8)))
      {
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v13 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
        {
          if (*(char *)(a3 + 31) >= 0)
            v14 = a3 + 8;
          else
            v14 = *(_QWORD *)(a3 + 8);
          *(_DWORD *)buf = 136315138;
          v30 = v14;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "CLMM,locationApp is not foreground,%s", buf, 0xCu);
        }
        if (!sub_1001BFF7C(115, 2))
          goto LABEL_10;
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        v25 = *(char *)(a3 + 31) >= 0 ? a3 + 8 : *(_QWORD *)(a3 + 8);
        v27 = 136315138;
        v28 = v25;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "CLMM,locationApp is not foreground,%s", (const char *)&v27);
        v21 = (uint8_t *)v26;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedAppNotification(const CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)", "%s\n", v26);
        if (v21 == buf)
          goto LABEL_10;
LABEL_53:
        free(v21);
LABEL_10:
        sub_1008A7D6C(a1, 0, 0);
        return;
      }
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v10 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        if (*(char *)(a3 + 31) >= 0)
          v11 = a3 + 8;
        else
          v11 = *(_QWORD *)(a3 + 8);
        *(_DWORD *)buf = 136315138;
        v30 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "CLMM,locationApp in foreground,%s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_10215A1F0);
        if (*(char *)(a3 + 31) >= 0)
          v22 = a3 + 8;
        else
          v22 = *(_QWORD *)(a3 + 8);
        v27 = 136315138;
        v28 = v22;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "CLMM,locationApp in foreground,%s", (const char *)&v27);
        v24 = (uint8_t *)v23;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedAppNotification(const CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)", "%s\n", v23);
        if (v24 != buf)
          free(v24);
      }
      v12 = *(char *)(a3 + 31);
      if (v12 < 0)
      {
        if (*(_QWORD *)(a3 + 16) != 14)
        {
LABEL_45:
          v16 = 0;
LABEL_46:
          sub_1008A7D6C(a1, 1, v16);
          return;
        }
        v9 = (_QWORD *)*v9;
      }
      else if (v12 != 14)
      {
        goto LABEL_45;
      }
      v16 = *v9 == 0x6C7070612E6D6F63 && *(_QWORD *)((char *)v9 + 6) == 0x7370614D2E656C70;
      goto LABEL_46;
    }
  }
}

uint64_t sub_1008AC720(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  int v5;

  v5 = a2;
  v2 = *(_QWORD *)(result + 2712);
  if (v2)
  {
    v3 = sub_100B303DC();
    LODWORD(v4) = 0;
    v4 = sub_100B30608(v3, &v4);
    return (*(uint64_t (**)(uint64_t, int *, double *))(*(_QWORD *)v2 + 72))(v2, &v5, &v4);
  }
  return result;
}

double sub_1008AC778(uint64_t a1, uint64_t a2, _BYTE *a3, double *a4)
{
  return sub_1001602FC(a1 + 2840, a2, a3, a4);
}

void sub_1008AC780(uint64_t a1, _QWORD *a2, double *a3, _BYTE *a4, _QWORD *a5)
{
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  const char *v21;
  uint8_t *v22;
  double v23;
  int v24;
  uint64_t v25;
  __int16 v26;
  double v27;
  __int16 v28;
  double v29;
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  double v33;
  __int16 v34;
  double v35;

  if (*a3 >= 0.0 && *a3 < 16.6666)
  {
    v10 = sub_100B303DC();
    *(_DWORD *)buf = 0;
    *(double *)(a1 + 3056) = sub_100B30608(v10, buf);
    *(double *)(a1 + 3048) = *a3;
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_10215A1F0);
    v11 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      v12 = *(_QWORD *)a3;
      v13 = sub_100B303DC();
      *(_DWORD *)buf = 0;
      v14 = sub_100B30608(v13, buf);
      v15 = sub_100B303DC();
      v16 = sub_100B309E0(v15);
      *(_DWORD *)buf = 134218496;
      v31 = v12;
      v32 = 2048;
      v33 = v14;
      v34 = 2048;
      v35 = v16;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "LocationController,updateVehicleSpeedFilter,vehicleSpeed,%.3f,now,%.3f,propagation_us,%.3f", buf, 0x20u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_10215A1F0);
      v17 = qword_1022A0028;
      v18 = *(_QWORD *)a3;
      v19 = sub_1005FECEC();
      v20 = sub_100B303DC();
      v24 = 134218496;
      v25 = v18;
      v26 = 2048;
      v27 = v19;
      v28 = 2048;
      v29 = sub_100B309E0(v20);
      LODWORD(v23) = 32;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v17, 2, "LocationController,updateVehicleSpeedFilter,vehicleSpeed,%.3f,now,%.3f,propagation_us,%.3f", COERCE_DOUBLE(&v24), v23);
      v22 = (uint8_t *)v21;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::updateVehicleSpeedFilter(const CFAbsoluteTime &, const double &, BOOL &, double &)", "%s\n", v21);
      if (v22 != buf)
        free(v22);
    }
  }
  sub_10117EF4C(a1 + 2840, a2, a3, a4, a5);
}

uint64_t sub_1008ACA00(uint64_t a1, _DWORD *a2, char a3)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 2712);
  if (result)
    return sub_1000C2688(result, a2, a3);
  return result;
}

void sub_1008ACA10(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  const char *v7;
  uint8_t *v8;
  _DWORD v9[4];
  uint8_t buf[8];

  v4 = a1 + 48;
  v5 = sub_100B303DC();
  *(_DWORD *)buf = 1;
  *(_QWORD *)buf = sub_100B30608(v5, buf);
  sub_100E24CD8(v4, (double *)buf, a2);
  *(_BYTE *)(a1 + 3080) = a2;
  if (qword_1022A0070 != -1)
    dispatch_once(&qword_1022A0070, &stru_10215A250);
  v6 = qword_1022A0078;
  if (os_log_type_enabled((os_log_t)qword_1022A0078, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CLMM,isAirborne,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0070 != -1)
      dispatch_once(&qword_1022A0070, &stru_10215A250);
    v9[0] = 67240192;
    v9[1] = a2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0078, 2, "CLMM,isAirborne,%{public}d", v9, 8);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::updateAirborneClientStatus(const BOOL)", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
}

void sub_1008ACBEC(uint64_t a1, int a2)
{
  sub_100E24F80(a1 + 48, a2);
}

uint64_t sub_1008ACBF4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 3076) - 1;
  if (v1 > 5)
    return 0;
  else
    return dword_101BE57C0[v1];
}

BOOL sub_1008ACC1C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 3136);
  return v1 && *(_BYTE *)(v1 + 128) != 0;
}

void sub_1008ACC3C(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 3136);
  if (v3)
    sub_100161CAC(v3, a2, a3);
}

void sub_1008ACC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 3136);
  if (v3)
    sub_100161BE4(v3, a2, a3);
}

uint64_t sub_1008ACC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 3136);
  if (result)
    return sub_100162168(result, a2, a3);
  return result;
}

void sub_1008ACC6C(uint64_t a1)
{
  NSObject *v1;
  const char *v2;
  uint8_t *v3;
  _WORD v4[8];
  uint8_t buf[1640];

  *(_BYTE *)(a1 + 2785) = 0;
  if (qword_10229FC50 != -1)
    dispatch_once(&qword_10229FC50, &stru_10215A210);
  v1 = qword_10229FC58;
  if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "#cltr,backoff timer fired,allow region support queries.", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v4[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,backoff timer fired,allow region support queries.", v4, 2);
    v3 = (uint8_t *)v2;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::onGeoMapQueryBackoffTimer()", "%s\n", v2);
    if (v3 != buf)
      free(v3);
  }
}

id sub_1008ACDF4(uint64_t a1, double a2)
{
  id v4;
  NSObject *v6;
  char v7;
  NSObject *v8;
  id result;
  const char *v10;
  uint8_t *v11;
  const char *v12;
  uint8_t *v13;
  _QWORD v14[5];
  int v15;
  double v16;
  uint8_t buf[4];
  double v18;

  if (!*(_QWORD *)(a1 + 2792))
  {
    v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 8), "silo"), "newTimer");
    *(_QWORD *)(a1 + 2792) = v4;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1008AD158;
    v14[3] = &unk_10212ECA0;
    v14[4] = a1;
    objc_msgSend(v4, "setHandler:", v14);
  }
  if (a2 > 0.0 && a2 < 1.79769313e308)
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v8 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134217984;
      v18 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#cltr,backoff timer set for %lf seconds", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      v15 = 134217984;
      v16 = a2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 2, "#cltr,backoff timer set for %lf seconds", COERCE_DOUBLE(&v15));
      v13 = (uint8_t *)v12;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setGeoMapQueryBackoffTimer(double)", "%s\n", v12);
      if (v13 != buf)
        free(v13);
    }
    v7 = 1;
  }
  else
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v6 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#cltr,backoff timer disabled", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      LOWORD(v15) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 2, "#cltr,backoff timer disabled", &v15, 2);
      v11 = (uint8_t *)v10;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setGeoMapQueryBackoffTimer(double)", "%s\n", v10);
      if (v11 != buf)
        free(v11);
    }
    v7 = 0;
    a2 = 1.79769313e308;
  }
  result = objc_msgSend(*(id *)(a1 + 2792), "setNextFireDelay:", a2);
  *(_BYTE *)(a1 + 2785) = v7;
  return result;
}

uint64_t sub_1008AD158(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 384))(*(_QWORD *)(a1 + 32));
}

void sub_1008AD168(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(a1 + 2792))
  {
    (*(void (**)(uint64_t, double))(*(_QWORD *)a1 + 416))(a1, 1.79769313e308);
    v2 = *(void **)(a1 + 2792);
    *(_QWORD *)(a1 + 2728) = 0x4082C00000000000;
    *(_BYTE *)(a1 + 2785) = 0;
    if (v2)
    {

      *(_QWORD *)(a1 + 2792) = 0;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 2728) = 0x4082C00000000000;
    *(_BYTE *)(a1 + 2785) = 0;
  }
}

uint64_t sub_1008AD1D8(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  NSObject *v5;
  _BOOL4 v6;
  uint64_t v7;
  double v8;
  BOOL v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t result;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  char *v23;
  _BOOL4 v24;
  const char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  char *v31;
  uint64_t v32;
  _QWORD v33[6];
  _QWORD v34[5];
  int v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  _BYTE buf[24];
  uint64_t v42;

  if (!*(_BYTE *)(a1 + 2723))
  {
    if (!*(_QWORD *)(a1 + 2752))
      *(_QWORD *)(a1 + 2752) = objc_alloc_init(CLNanoRegistry);
    sub_100197040();
    if (sub_1000C4240())
      v4 = (unsigned __int16)objc_msgSend(*(id *)(a1 + 2752), "isAFire6OrOlderWatchPaired") ^ 1;
    else
      v4 = 0;
    *(_WORD *)(a1 + 2722) = v4 | 0x100;
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 432))(a1);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v5 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
    {
      if (*(_BYTE *)(a1 + 2723))
        v6 = *(_BYTE *)(a1 + 2722) != 0;
      else
        v6 = 1;
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#cltr,fIsPhoneThatDoesNotNeedTrackRunProcessing,%{public}d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      if (*(_BYTE *)(a1 + 2723))
        v24 = *(_BYTE *)(a1 + 2722) != 0;
      else
        v24 = 1;
      v35 = 67240192;
      LODWORD(v36) = v24;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,fIsPhoneThatDoesNotNeedTrackRunProcessing,%{public}d", &v35, 8);
      v26 = (char *)v25;
      sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)", "%s\n", v25);
      if (v26 != buf)
        free(v26);
    }
  }
  if (*(_BYTE *)(a1 + 2785))
  {
LABEL_26:
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v10 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEBUG))
    {
      v11 = *(_QWORD *)(a1 + 2728);
      *(_DWORD *)buf = 134349056;
      *(_QWORD *)&buf[4] = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#cltr,Not querying for region support due to backoff timer in effect,current,%{public}.0f", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      v21 = *(_QWORD *)(a1 + 2728);
      v35 = 134349056;
      v36 = v21;
      LODWORD(v32) = 12;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 2, "#cltr,Not querying for region support due to backoff timer in effect,current,%{public}.0f", &v35, v32);
      v23 = (char *)v22;
      sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)", "%s\n", v22);
      if (v23 != buf)
        free(v23);
    }
    goto LABEL_31;
  }
  if (*(_BYTE *)(a1 + 2721)
    && (v7 = sub_100B303DC(), *(_DWORD *)buf = 1, sub_100B30608(v7, buf) - *(double *)(a1 + 2744) <= 86400.0)
    || (*(_DWORD *)(a2 + 96) - 6) < 3
    || ((v8 = *(double *)(a2 + 20), v8 > 0.0) ? (v9 = v8 < 100.0) : (v9 = 0), !v9 || *(_BYTE *)(a1 + 2784)))
  {
    if (!*(_BYTE *)(a1 + 2785))
      goto LABEL_31;
    goto LABEL_26;
  }
  if (qword_10229FC50 != -1)
    dispatch_once(&qword_10229FC50, &stru_10215A210);
  v13 = qword_10229FC58;
  if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
  {
    v14 = *(_QWORD *)(a2 + 4);
    v15 = *(_QWORD *)(a2 + 12);
    v16 = *(_QWORD *)(a2 + 20);
    *(_DWORD *)buf = 134284033;
    *(_QWORD *)&buf[4] = v14;
    *(_WORD *)&buf[12] = 2049;
    *(_QWORD *)&buf[14] = v15;
    *(_WORD *)&buf[22] = 2048;
    v42 = v16;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#cltr,Querying for region support,ll,%{private}.7lf,%{private}.7lf,hunc,%.1lf", buf, 0x20u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v27 = *(_QWORD *)(a2 + 4);
    v28 = *(_QWORD *)(a2 + 12);
    v29 = *(_QWORD *)(a2 + 20);
    v35 = 134284033;
    v36 = v27;
    v37 = 2049;
    v38 = v28;
    v39 = 2048;
    v40 = v29;
    LODWORD(v32) = 32;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,Querying for region support,ll,%{private}.7lf,%{private}.7lf,hunc,%.1lf", &v35, v32);
    v31 = (char *)v30;
    sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)", "%s\n", v30);
    if (v31 != buf)
      free(v31);
  }
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x2020000000;
  v42 = 0;
  v33[5] = a1;
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472;
  v34[2] = sub_1008AD8A4;
  v34[3] = &unk_10215A148;
  v34[4] = buf;
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_1008ADA64;
  v33[3] = &unk_10215A198;
  v33[4] = buf;
  if (!*(_QWORD *)(a1 + 2736))
  {
    v17 = objc_alloc_init((Class)GEOMapFeatureAccess);
    *(_QWORD *)(a1 + 2736) = v17;
    if (v17)
    {
      objc_msgSend(v17, "setAllowNetworkTileLoad:", 1);
      objc_msgSend(*(id *)(a1 + 2736), "setAllowStaleData:", 1);
      objc_msgSend(*(id *)(a1 + 2736), "setAllowOfflineData:", 1);
    }
  }
  v18 = *(double *)(a2 + 4);
  v19 = *(double *)(a2 + 12);
  *(_BYTE *)(a1 + 2784) = 1;
  v20 = sub_100B303DC();
  v35 = 1;
  *(double *)(a1 + 2744) = sub_100B30608(v20, &v35);
  sub_100D823D8(a1 + 2800);
  objc_msgSend(*(id *)(a1 + 2736), "findRunningTrackFlagsNear:radius:handler:completionHandler:", v34, v33, v18, v19, *(double *)(a2 + 20) * 5.0);
  _Block_object_dispose(buf, 8);
LABEL_31:
  result = *(_QWORD *)(a1 + 2768);
  if (result)
  {
    result = sub_100148518(result);
    if ((_DWORD)result)
      return sub_1013A68A4();
  }
  return result;
}

void sub_1008AD880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1008AD8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  int v8;
  uint64_t v9;
  uint8_t buf[4];
  uint64_t v11;

  if (qword_10229FC50 != -1)
    dispatch_once(&qword_10229FC50, &stru_10215A210);
  v5 = qword_10229FC58;
  if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134349056;
    v11 = a3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#cltr,Entered handler,flags,%{public}lu", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v8 = 134349056;
    v9 = a3;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,Entered handler,flags,%{public}lu", &v8, 12);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)_block_invoke", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) |= a3;
}

void sub_1008ADA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  _QWORD block[7];

  v4 = *(_QWORD *)(a1 + 40);
  v5 = objc_msgSend(objc_msgSend(*(id *)(v4 + 8), "silo"), "queue");
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008ADAE4;
  block[3] = &unk_10215A170;
  v6 = *(_QWORD *)(a1 + 32);
  block[4] = a2;
  block[5] = v6;
  block[6] = v4;
  dispatch_async(v5, block);
}

void sub_1008ADAE4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  double v8;
  NSObject *v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  const char *v17;
  uint8_t *v18;
  void *v19;
  const char *v20;
  uint8_t *v21;
  int v22;
  id v23;
  __int16 v24;
  id v25;
  __int16 v26;
  id v27;
  __int16 v28;
  uint64_t v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  id v33;
  __int16 v34;
  id v35;
  __int16 v36;
  uint64_t v37;

  v2 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(v2 + 2784) = 0;
  if (*(_QWORD *)(a1 + 32))
  {
    (*(void (**)(uint64_t, double))(*(_QWORD *)v2 + 416))(v2, *(double *)(v2 + 2728));
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v3 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_ERROR))
    {
      v4 = objc_msgSend(*(id *)(a1 + 32), "code");
      v5 = objc_msgSend(*(id *)(a1 + 32), "domain");
      v6 = objc_msgSend(*(id *)(a1 + 32), "localizedDescription");
      v7 = *(_QWORD *)(v2 + 2728);
      *(_DWORD *)buf = 134349827;
      v31 = v4;
      v32 = 2114;
      v33 = v5;
      v34 = 2113;
      v35 = v6;
      v36 = 2048;
      v37 = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#cltr,RunningTrackFlags query,error:%{public}lld (%{public}@) \"%{private}@\",setting backoff to,%.0lf", buf, 0x2Au);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      v12 = qword_10229FC58;
      v13 = objc_msgSend(*(id *)(a1 + 32), "code");
      v14 = objc_msgSend(*(id *)(a1 + 32), "domain");
      v15 = objc_msgSend(*(id *)(a1 + 32), "localizedDescription");
      v16 = *(_QWORD *)(v2 + 2728);
      v22 = 134349827;
      v23 = v13;
      v24 = 2114;
      v25 = v14;
      v26 = 2113;
      v27 = v15;
      v28 = 2048;
      v29 = v16;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v12, 16, "#cltr,RunningTrackFlags query,error:%{public}lld (%{public}@) \"%{private}@\",setting backoff to,%.0lf", &v22, 42);
      v18 = (uint8_t *)v17;
      sub_100512490("Generic", 1, 0, 0, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)_block_invoke", "%s\n", v17);
      if (v18 != buf)
        free(v18);
    }
    *(_BYTE *)(v2 + 2785) = 1;
    v8 = *(double *)(v2 + 2728) + *(double *)(v2 + 2728);
    if (v8 > 86400.0)
      v8 = 86400.0;
    *(double *)(v2 + 2728) = v8;
  }
  else
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 408))(v2);
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v9 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
    {
      v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      *(_DWORD *)buf = 134349056;
      v31 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#cltr,Entered completionHandler,combinedAvailabilityFlags,%{public}lu", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      v19 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v22 = 134349056;
      v23 = v19;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,Entered completionHandler,combinedAvailabilityFlags,%{public}lu", &v22, 12);
      v21 = (uint8_t *)v20;
      sub_100512490("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)_block_invoke", "%s\n", v20);
      if (v21 != buf)
        free(v21);
    }
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) == 1)
      v11 = 256;
    else
      v11 = 257;
    *(_WORD *)(v2 + 2720) = v11;
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 432))(v2);
  }
  sub_10077E598(*(void **)(v2 + 2736));
  sub_100D823A8((id *)(v2 + 2800));
}

uint64_t sub_1008ADF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 2768);
  if (result)
    return sub_1013A797C(result, a2, a3);
  return result;
}

void sub_1008ADF30(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  v1 = *(_QWORD *)(a1 + 2768);
  if (v1)
  {
    sub_1013A76F8(v1);
  }
  else
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v2 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "#cltr,cannot send GNSS turned off notification to TrackRunController,TrackRunController not instantiated", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      v5[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 16, "#cltr,cannot send GNSS turned off notification to TrackRunController,TrackRunController not instantiated", v5, 2);
      v4 = (uint8_t *)v3;
      sub_100512490("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::notifyGnssTurnedOff()", "%s\n", v3);
      if (v4 != buf)
        free(v4);
    }
  }
}

void sub_1008AE0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[1640];

  v2 = *(_QWORD *)(a1 + 2768);
  if (v2)
  {
    sub_1013A8E00(v2, a2);
  }
  else
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v3 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#cltr,cannot send unfiltered location to TrackRunController,TrackRunController not instantiated", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      v6[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 16, "#cltr,cannot send unfiltered location to TrackRunController,TrackRunController not instantiated", v6, 2);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::sendUnfilteredLocationToTrackRunController(const CLLocationProvider_Type::NotificationData &)", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
  }
}

void sub_1008AE2A0(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;
  int v6;
  int v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  int v11;
  const char *v12;
  uint8_t *v13;
  const char *v14;
  uint8_t *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  int v19;
  __int16 v20;
  int v21;
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  int v25;
  __int16 v26;
  int v27;

  if (*(_QWORD *)(a1 + 2768))
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v4 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)a2;
      v6 = *(_DWORD *)(a2 + 8);
      v7 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)buf = 134349569;
      v23 = v5;
      v24 = 1025;
      v25 = v6;
      v26 = 1025;
      v27 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#cltr,TrackRunHint,CLLocationFilterController,setTrackRunHint,mctime,%{public}.1lf,lane,%{private}d,notification,%{private}d", buf, 0x18u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      v9 = *(_QWORD *)a2;
      v10 = *(_DWORD *)(a2 + 8);
      v11 = *(_DWORD *)(a2 + 12);
      v16 = 134349569;
      v17 = v9;
      v18 = 1025;
      v19 = v10;
      v20 = 1025;
      v21 = v11;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,TrackRunHint,CLLocationFilterController,setTrackRunHint,mctime,%{public}.1lf,lane,%{private}d,notification,%{private}d", &v16, 24);
      v13 = (uint8_t *)v12;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setTrackRunHint(const CLTrackRunHint &)", "%s\n", v12);
      if (v13 != buf)
        free(v13);
    }
    sub_1013A81E0(*(_QWORD *)(a1 + 2768), (uint64_t *)a2);
  }
  else
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v8 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#cltr,Warning,TrackRunHint,CLLocationFilterController not instantiated", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      LOWORD(v16) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,Warning,TrackRunHint,CLLocationFilterController not instantiated", &v16, 2);
      v15 = (uint8_t *)v14;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setTrackRunHint(const CLTrackRunHint &)", "%s\n", v14);
      if (v15 != buf)
        free(v15);
    }
  }
}

void sub_1008AE5C4(_BYTE *a1)
{
  _BOOL4 v1;
  _BOOL4 v2;
  NSObject *v3;
  const char *v4;
  NSObject *v5;
  uint64_t v6;
  uint8_t *v7;
  int v8;
  uint8_t buf[4];
  _BOOL4 v10;
  __int16 v11;
  _BOOL4 v12;

  if (a1[2721])
    v1 = a1[2720] == 0;
  else
    v1 = 0;
  if (a1[2723])
    v2 = a1[2722] != 0;
  else
    v2 = 0;
  if (v1 || v2)
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v3 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109376;
      v10 = v1;
      v11 = 1024;
      v12 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#cltr,disabling trackrun,is_unsupported_region,%d,is_unsupported_phone,%d", buf, 0xEu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,disabling trackrun,is_unsupported_region,%d,is_unsupported_phone,%d", &v8);
LABEL_25:
      v7 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::updateTrackRunEnablementState() const", "%s\n", v4);
      if (v7 != buf)
        free(v7);
    }
  }
  else
  {
    if (qword_10229FC50 != -1)
      dispatch_once(&qword_10229FC50, &stru_10215A210);
    v5 = qword_10229FC58;
    if (os_log_type_enabled((os_log_t)qword_10229FC58, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109376;
      v10 = 0;
      v11 = 1024;
      v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#cltr,enabling trackrun,is_unsupported_region,%d,is_unsupported_phone,%d", buf, 0xEu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC50 != -1)
        dispatch_once(&qword_10229FC50, &stru_10215A210);
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC58, 0, "#cltr,enabling trackrun,is_unsupported_region,%d,is_unsupported_phone,%d", &v8);
      goto LABEL_25;
    }
  }
  v6 = sub_100CF08FC();
  sub_100CF12BC(v6, !v1 && !v2);
}

BOOL sub_1008AE8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE **v3;

  return *(_BYTE *)(a1 + 3096) && (v3 = *(_BYTE ***)(a1 + 3088)) != 0 && sub_10015AC14(v3, a2, a3);
}

BOOL sub_1008AE8F4(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;

  return *(_BYTE *)(a1 + 3096) && (v2 = *(_QWORD *)(a1 + 3088)) != 0 && sub_10015CB58(v2, a2, 0);
}

BOOL sub_1008AE914(uint64_t a1, int32x2_t *a2)
{
  uint64_t v2;

  return *(_BYTE *)(a1 + 3096) && (v2 = *(_QWORD *)(a1 + 3088)) != 0 && sub_10014DFD8(v2, a2);
}

void sub_1008AE930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a1 + 3096))
  {
    v2 = *(_QWORD *)(a1 + 3088);
    if (v2)
      sub_1000B6AC0(v2, a2);
  }
}

void sub_1008AE948(uint64_t a1, double a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a1 + 3096))
  {
    v2 = *(_QWORD *)(a1 + 3088);
    if (v2)
      sub_1017DBC78(v2, a2);
  }
}

_BYTE *sub_1008AE960(_BYTE *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];
  _BYTE *v5;

  if (result[3096])
  {
    v2 = *((_QWORD *)result + 386);
    if (v2)
    {
      sub_100270E34((uint64_t)v4, a2);
      sub_1017D1514(v2, (uint64_t)v4);
      result = v5;
      if (v5 == v4)
      {
        v3 = 4;
        result = v4;
      }
      else
      {
        if (!v5)
          return result;
        v3 = 5;
      }
      return (_BYTE *)(*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v3))();
    }
  }
  return result;
}

void sub_1008AEA00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

void sub_1008AEA40(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v3;
  int v4;

  if (*(_BYTE *)(a1 + 3096))
  {
    v2 = *(_QWORD *)(a1 + 3088);
    if (v2)
    {
      v3 = *a2;
      v4 = *((_DWORD *)a2 + 4);
      sub_1017D0F98(v2, &v3);
    }
  }
}

void sub_1008AEA80(uint64_t a1, int *a2, uint64_t a3)
{
  NSObject *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  const char *v10;
  uint8_t *v11;
  NSObject *v12;
  int v13;
  int v14;
  const char *v15;
  uint8_t *v16;
  int v17;
  const char *v18;
  const char *v19;
  uint8_t *v20;
  uint64_t v21;
  _WORD v22[8];
  _QWORD v23[2];
  uint8_t buf[4];
  int v25;

  if (qword_1022A00D0 != -1)
    dispatch_once(&qword_1022A00D0, &stru_10215A230);
  v6 = qword_1022A00D8;
  if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_INFO))
  {
    v7 = *a2;
    *(_DWORD *)buf = 67240192;
    v25 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "CLMM,MA-OTA,notification,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    v14 = *a2;
    LODWORD(v23[0]) = 67240192;
    HIDWORD(v23[0]) = v14;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 1, "CLMM,MA-OTA,notification,%{public}d", v23, 8);
    v16 = (uint8_t *)v15;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v15);
    if (v16 != buf)
      free(v16);
  }
  if (!*(_QWORD *)(a1 + 2712))
  {
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    v9 = qword_1022A00D8;
    if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLMM,MA-OTA,platform does not support MM", buf, 2u);
    }
    if (!sub_1001BFF7C(115, 2))
      return;
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    LOWORD(v23[0]) = 0;
    LODWORD(v21) = 2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 2, "CLMM,MA-OTA,platform does not support MM", v23, v21);
    v11 = (uint8_t *)v10;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v10);
LABEL_36:
    if (v11 != buf)
      free(v11);
    return;
  }
  if (*a2 == 2)
  {
    sub_100119F3C(v23);
    if (!sub_100006BB4(a3, "MapMatcherConfig", v23))
    {
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_10215A230);
      v8 = qword_1022A00D8;
      if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "CLMM,MA-OTA,map matcher config not available", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00D0 != -1)
          dispatch_once(&qword_1022A00D0, &stru_10215A230);
        v22[0] = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 1, "CLMM,MA-OTA,map matcher config not available", v22, v21);
        v20 = (uint8_t *)v19;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v19);
        if (v20 != buf)
          free(v20);
      }
    }
    sub_101130FEC(*(_QWORD *)(a1 + 2712), (uint64_t)v23);
    sub_10011A5A8(v23);
    return;
  }
  if (qword_1022A00D0 != -1)
    dispatch_once(&qword_1022A00D0, &stru_10215A230);
  v12 = qword_1022A00D8;
  if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_ERROR))
  {
    v13 = *a2;
    *(_DWORD *)buf = 67240192;
    v25 = v13;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "CLMM,MA-OTA,invalid notification,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A230);
    v17 = *a2;
    LODWORD(v23[0]) = 67240192;
    HIDWORD(v23[0]) = v17;
    LODWORD(v21) = 8;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 16, "CLMM,MA-OTA,invalid notification,%{public}d", v23, v21);
    v11 = (uint8_t *)v18;
    sub_100512490("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v18);
    goto LABEL_36;
  }
}

void sub_1008AF018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_10011A5A8(va);
  _Unwind_Resume(a1);
}

id sub_1008AF038(_QWORD *a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  id result;

  v4 = a1[30];
  if (v4)
    sub_1010CDEF0(v4, a2);
  v5 = a1[74];
  if (v5)
    sub_1010CDEF0(v5, a2);
  result = (id)a1[77];
  if (result)
    return sub_1010CDEF0((uint64_t)result, a2);
  return result;
}

uint64_t sub_1008AF090(uint64_t a1, char **a2)
{
  return sub_100E0D374(a1 + 48, a2);
}

void sub_1008AF098(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v4;

  if (*(_BYTE *)(a2 + 96))
    v2 = *(_DWORD *)(a2 + 48) <= 0;
  else
    v2 = 1;
  v4 = !v2 && *(_BYTE *)(a2 + 73) == 0;
  sub_100E25184(a1 + 48, v4);
}

BOOL sub_1008AF0BC(uint64_t a1, uint64_t a2)
{
  return sub_100E0FA08(a1 + 48, a2);
}

BOOL sub_1008AF0C4(uint64_t a1, uint64_t a2)
{
  return sub_100E1067C(a1 + 48, a2);
}

void sub_1008AF0CC(uint64_t a1, int a2)
{
  sub_100E25618(a1 + 48, a2);
}

void sub_1008AF0D4(uint64_t a1)
{
  sub_100E25850(a1 + 48);
}

void sub_1008AF0DC(uint64_t a1)
{
  sub_100E25A9C(a1 + 48);
}

void sub_1008AF0E4(uint64_t a1)
{
  uint64_t v7;
  __int128 v8;

  *(_DWORD *)a1 = 0xFFFF;
  *(_OWORD *)(a1 + 4) = 0u;
  *(_OWORD *)(a1 + 20) = xmmword_101BAFC90;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 36) = _Q1;
  *(_OWORD *)(a1 + 52) = _Q1;
  *(_OWORD *)(a1 + 68) = _Q1;
  v8 = _Q1;
  *(_DWORD *)(a1 + 84) = 0;
  *(_QWORD *)(a1 + 88) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_DWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 124) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_BYTE *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 163) = 0;
  *(_QWORD *)(a1 + 156) = 0;
  *(_OWORD *)(a1 + 200) = 0u;
  v7 = a1 + 200;
  *(_OWORD *)(a1 + 168) = _Q1;
  *(_QWORD *)(a1 + 184) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 192) = a1 + 200;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_QWORD *)(a1 + 216) = a1 + 224;
  *(_QWORD *)(a1 + 240) = 0;
  sub_1008AF42C(a1 + 248);
  *(_QWORD *)(v7 + 768) = off_1021B4BA0;
  *(_OWORD *)(v7 + 776) = v8;
  *(_OWORD *)(v7 + 808) = xmmword_101BAFC90;
  *(_OWORD *)(v7 + 824) = xmmword_101BAFC90;
  *(_QWORD *)(v7 + 848) = 0xBFF0000000000000;
  *(_OWORD *)(v7 + 856) = v8;
  *(_OWORD *)(v7 + 872) = v8;
  *(_DWORD *)(v7 + 888) = 0;
  *(_BYTE *)(v7 + 892) = 0;
  *(_DWORD *)(v7 + 896) = 0;
  *(_DWORD *)(v7 + 904) = 0;
  sub_1008AF48C(v7 + 912);
  *(_OWORD *)(v7 + 1496) = 0u;
  *(_QWORD *)(v7 + 1512) = 0xBFF0000000000000;
  *(_OWORD *)(v7 + 1520) = 0u;
  *(_OWORD *)(v7 + 1536) = 0u;
  *(_DWORD *)(v7 + 1552) = 0;
  *(_OWORD *)(v7 + 1560) = v8;
  *(_QWORD *)(v7 + 1576) = 0;
  *(_OWORD *)(v7 + 1584) = 0u;
  sub_1002433B8(v7 + 1600);
  sub_1006B36A4(a1 + 1840);
  *(_QWORD *)(a1 + 1968) = 0x600000006;
  *(_QWORD *)(a1 + 1976) = 0;
  *(_OWORD *)(a1 + 1984) = 0u;
  *(_OWORD *)(a1 + 2000) = v8;
  *(_OWORD *)(a1 + 2016) = 0u;
  *(_OWORD *)(a1 + 2032) = 0u;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2061) = 0u;
  *(_QWORD *)(a1 + 2080) = 0xBFF0000000000000;
  *(_BYTE *)(a1 + 2088) = 0;
  *(_QWORD *)(a1 + 2096) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 2104) = 0u;
  *(_QWORD *)(a1 + 2120) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 2128) = 0;
  *(_BYTE *)(a1 + 2136) = 0;
  *(_QWORD *)(a1 + 2144) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 2152) = 0;
  *(_BYTE *)(a1 + 2156) = 0;
  *(_QWORD *)(a1 + 2160) = 0x402C000000000000;
  *(_QWORD *)(a1 + 2184) = 0;
  *(_QWORD *)(a1 + 2176) = 0;
  *(_QWORD *)(a1 + 2168) = a1 + 2176;
  *(_BYTE *)(a1 + 2192) = 0;
  *(_QWORD *)(a1 + 2216) = 0;
  *(_QWORD *)(a1 + 2208) = 0;
  *(_QWORD *)(a1 + 2200) = a1 + 2208;
  *(_QWORD *)(a1 + 2232) = 0;
  *(_QWORD *)(a1 + 2240) = 0;
  *(_QWORD *)(a1 + 2224) = a1 + 2232;
  sub_100949EB8(a1 + 2248);
  operator new();
}

void sub_1008AF334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14, _Unwind_Exception *exception_object)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD **v17;
  _QWORD **v18;
  _QWORD **v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD **v22;
  _QWORD **v23;
  void *v24;

  sub_100008848(v15 + 2296, *(_QWORD **)(v15 + 2304));
  sub_100008848(v15 + 2224, *v22);
  sub_100008848(v15 + 2200, *v18);
  sub_100592F30(v15 + 2168, *v23);
  sub_100554930(v21);
  v24 = *(void **)(v15 + 1976);
  if (v24)
  {
    *(_QWORD *)(v15 + 1984) = v24;
    operator delete(v24);
  }
  sub_1008AF400(v20);
  sub_1008AF614(v19, 0);
  sub_100261F44(v15 + 1648);
  sub_100261F44(v15 + 832);
  sub_1008AF650(a11);
  sub_1008AF7A8(v17);
  sub_1008AF800(a12, *(_QWORD **)(v15 + 224));
  sub_1008AF854(v16 - 8, *(_QWORD **)(v15 + 200));
  _Unwind_Resume(a1);
}

uint64_t sub_1008AF400(uint64_t a1)
{
  sub_100008848(a1 + 48, *(_QWORD **)(a1 + 56));
  return sub_100686470((_QWORD *)a1);
}

uint64_t sub_1008AF42C(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  sub_1008AF48C(a1 + 48);
  *(_QWORD *)(a1 + 632) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 640) = 0;
  *(_DWORD *)(a1 + 648) = -1;
  *(_QWORD *)(a1 + 652) = 0;
  *(_QWORD *)(a1 + 657) = 0;
  sub_1002433B8(a1 + 672);
  *(_DWORD *)(a1 + 712) = 0;
  return a1;
}

uint64_t sub_1008AF48C(uint64_t a1)
{
  *(_BYTE *)a1 = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 304) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 320) = xmmword_101BAFC90;
  *(_BYTE *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 344) = 0x200000004;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 352) = _Q1;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = _Q1;
  *(_BYTE *)(a1 + 416) = 0;
  *(_BYTE *)(a1 + 424) = 0;
  *(_BYTE *)(a1 + 432) = 0;
  *(_BYTE *)(a1 + 440) = 0;
  *(_BYTE *)(a1 + 448) = 0;
  *(_BYTE *)(a1 + 456) = 0;
  *(_BYTE *)(a1 + 464) = 0;
  *(_BYTE *)(a1 + 472) = 0;
  sub_1002433B8(a1 + 480);
  *(_QWORD *)(a1 + 520) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 544) = 0;
  *(_QWORD *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 552) = 0xBFF0000000000000;
  *(_BYTE *)(a1 + 560) = 0;
  *(_DWORD *)(a1 + 564) = 0;
  *(_BYTE *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 576) = 0xBFF0000000000000;
  return a1;
}

double sub_1008AF57C(uint64_t a1, uint64_t a2)
{
  double result;

  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 320) = _Q0;
  *(_OWORD *)(a1 + 336) = _Q0;
  *(_OWORD *)(a1 + 352) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 368) = xmmword_101BAFC90;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 48) = 1;
  *(_QWORD *)(a1 + 56) = 0xBFF0000000000000;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 144) = 1;
  *(_QWORD *)(a1 + 152) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 224) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_QWORD *)(a1 + 240) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 384) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 400) = a2;
  *(_BYTE *)(a1 + 408) = 0;
  *(_BYTE *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 432) = 0;
  *(_BYTE *)(a1 + 232) = 1;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  return result;
}

_QWORD *sub_1008AF614(_QWORD **a1, _QWORD *a2)
{
  _QWORD *result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10055489C(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1008AF650(_QWORD *a1)
{
  void **v2;
  void **v3;
  _QWORD *v4;
  unint64_t v5;
  void **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;

  v2 = (void **)a1[1];
  v3 = (void **)a1[2];
  if (v3 == v2)
  {
    v4 = a1 + 5;
    v3 = (void **)a1[1];
  }
  else
  {
    v4 = a1 + 5;
    v5 = a1[4];
    v6 = &v2[v5 / 0x17];
    v7 = (unint64_t)*v6;
    v8 = (unint64_t)*v6 + 176 * (v5 % 0x17);
    v9 = (unint64_t)v2[(a1[5] + v5) / 0x17] + 176 * ((a1[5] + v5) % 0x17);
    if (v8 != v9)
    {
      do
      {
        v10 = *(std::__shared_weak_count **)(v8 + 24);
        if (v10)
        {
          std::__shared_weak_count::__release_weak(v10);
          v7 = (unint64_t)*v6;
        }
        v8 += 176;
        if (v8 - v7 == 4048)
        {
          v11 = (unint64_t)v6[1];
          ++v6;
          v7 = v11;
          v8 = v11;
        }
      }
      while (v8 != v9);
      v2 = (void **)a1[1];
      v3 = (void **)a1[2];
    }
  }
  *v4 = 0;
  v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = (void **)a1[2];
      v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      v12 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v13 = v12 >> 3;
  if (v13 == 1)
  {
    v14 = 11;
  }
  else
  {
    if (v13 != 2)
      goto LABEL_18;
    v14 = 23;
  }
  a1[4] = v14;
LABEL_18:
  while (v2 != v3)
  {
    v15 = *v2++;
    operator delete(v15);
  }
  return sub_10002E778((uint64_t)a1);
}

void sub_1008AF7A8(_QWORD **a1)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = *a1;
  if (*a1)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      sub_100261F44((uint64_t)(v2 + 74));
      sub_1008AF650(v2 + 1);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  *a1 = 0;
}

void sub_1008AF800(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1008AF800(a1, *a2);
    sub_1008AF800(a1, a2[1]);
    sub_100261F44((uint64_t)(a2 + 78));
    sub_1008AF650(a2 + 5);
    operator delete(a2);
  }
}

void sub_1008AF854(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1008AF854(a1, *a2);
    sub_1008AF854(a1, a2[1]);
    sub_1008AF89C((_QWORD **)a2 + 5);
    operator delete(a2);
  }
}

void sub_1008AF89C(_QWORD **a1)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = *a1;
  if (*a1)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      sub_100261F44((uint64_t)(v2 + 1));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  *a1 = 0;
}

void sub_1008AF8EC(id a1)
{
  qword_1022A01B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

void sub_1008AF918(id a1)
{
  qword_1022A0028 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_1008AF944(id a1)
{
  qword_10229FC58 = (uint64_t)os_log_create("com.apple.locationd.Position", "TrackRun");
}

uint64_t sub_1008AF970(uint64_t a1)
{
  void *v2;

  sub_100008848(a1 + 2296, *(_QWORD **)(a1 + 2304));
  sub_100008848(a1 + 2224, *(_QWORD **)(a1 + 2232));
  sub_100008848(a1 + 2200, *(_QWORD **)(a1 + 2208));
  sub_100592F30(a1 + 2168, *(_QWORD **)(a1 + 2176));
  sub_100554930((_QWORD *)(a1 + 2016));
  v2 = *(void **)(a1 + 1976);
  if (v2)
  {
    *(_QWORD *)(a1 + 1984) = v2;
    operator delete(v2);
  }
  sub_100008848(a1 + 1888, *(_QWORD **)(a1 + 1896));
  sub_100686470((_QWORD *)(a1 + 1840));
  sub_1008AF614((_QWORD **)(a1 + 1696), 0);
  sub_100261F44(a1 + 1648);
  sub_100261F44(a1 + 832);
  sub_1008AF650((_QWORD *)(a1 + 248));
  sub_1008AF7A8((_QWORD **)(a1 + 240));
  sub_1008AF800(a1 + 216, *(_QWORD **)(a1 + 224));
  sub_1008AF854(a1 + 192, *(_QWORD **)(a1 + 200));
  return a1;
}

void sub_1008AFA38(id a1)
{
  qword_1022A00D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

char *sub_1008AFA64(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void **v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (0xCCCCCCCCCCCCCCCDLL * ((v8 - *(_QWORD *)result) >> 3) < a4)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x666666666666666)
      sub_100259694();
    v10 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 3);
    v11 = 2 * v10;
    if (2 * v10 <= a4)
      v11 = a4;
    if (v10 >= 0x333333333333333)
      v12 = 0x666666666666666;
    else
      v12 = v11;
    result = sub_100593090(v7, v12);
    v14 = (char *)v7[1];
    v13 = (void **)(v7 + 1);
    v9 = v14;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v13 = (void **)(result + 8);
  v15 = (_BYTE *)*((_QWORD *)result + 1);
  if (0xCCCCCCCCCCCCCCCDLL * ((v15 - v9) >> 3) >= a4)
    goto LABEL_16;
  v16 = &__src[8 * ((v15 - v9) >> 3)];
  if (v15 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v15 - v9);
    v9 = (char *)*v13;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v13 = &v9[v17];
  return result;
}

void sub_1008AFB9C(id a1)
{
  qword_1022A0078 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_1008AFBC8(uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1017CD7C8();
    operator delete();
  }
  return result;
}

uint64_t sub_1008AFC04(uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100959788();
    operator delete();
  }
  return result;
}

void sub_1008AFC40()
{
  unsigned __int8 v0;
  _OWORD v1[5];
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_1022A19C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1022A19C8))
    {
      v2 = 0x7FFFFFFF00000000;
      v1[2] = xmmword_101BE5768;
      v1[3] = unk_101BE5778;
      v1[4] = xmmword_101BE5788;
      v1[0] = xmmword_101BE5748;
      v1[1] = unk_101BE5758;
      sub_100428DFC((uint64_t)&unk_1022A19B0, (int *)v1, 11);
      __cxa_atexit((void (*)(void *))sub_100427E4C, &unk_1022A19B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1022A19C8);
    }
  }
}

void sub_1008AFD14(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A19C8);
  _Unwind_Resume(a1);
}

uint64_t sub_1008AFD2C()
{
  sub_1015A2E04(qword_1023050D0, "RoadAndBuildingPrecachingEnabled");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023050D0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023050E8, "RoadTilesRadiusInMetersHome");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023050E8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305100, "BuildingTilesRadiusInMetersHome");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305100, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305118, "RunningTrackTilesRadiusInMetersHome");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305118, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305130, "RoadTilesRadiusInMetersWork");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305130, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305148, "BuildingTilesRadiusInMetersWork");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305148, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305160, "RunningTrackTilesRadiusInMetersWork");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305160, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305178, "RoadTilesRadiusInMetersSchool");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305178, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305190, "BuildingTilesRadiusInMetersSchool");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305190, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023051A8, "RunningTrackTilesRadiusInMetersSchool");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023051A8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023051C0, "PrecachingTileRefreshPeriodV2");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023051C0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023051D8, "PrecachingTileRefreshPeriodNPLOIAndTouristV2");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023051D8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023051F0, "PrecachingMinimumBatteryLevel");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023051F0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305208, "PrecachingMinimumBatteryLevelAggressiveMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305208, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305220, "PrecachingXPCDownloadInterval");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305220, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305238, "PrecachingDownloadSizePerSection");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305238, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305250, "PrecachingUploadSizePerSection");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305250, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305268, "PrecachingDownloadTimePerSection");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305268, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305280, "UseInsideOutTileDownload");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305280, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305298, "IsDiskIntensiveActivity");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305298, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023052B0, "PrecachingAllowSignalEnvironmentMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023052B0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023052C8, "RoadTileDownloadRadiusSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023052C8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023052E0, "BuildingTileDownloadRadiusSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023052E0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023052F8, "RunningTrackTileDownloadRadiusSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023052F8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305310, "PrecachingAllowAggressiveSettingInTouristMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305310, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305328, "RoadTileDownloadRadiusTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305328, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305340, "BuildingTileDownloadRadiusTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305340, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305358, "RunningTrackTileDownloadRadiusTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305358, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305370, "MaxSectionDownloadAllowedForTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305370, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305388, "TimeWindowToCheckForMaxSectionDownloadForTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305388, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023053A0, "PrecachingAllowTouristMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023053A0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023053B8, "RoadTilesRadiusInMetersTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023053B8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023053D0, "BuildingTilesRadiusInMetersTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023053D0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023053E8, "RunningTrackTilesRadiusInMetersTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023053E8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305400, "MaxLocationAgeForTouristMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305400, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305418, "SectionsToDownloadPerXPCCall");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305418, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305430, "SectionsToDownloadPerXPCCallForTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305430, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305448, "SectionsToDownloadPerXPCCallForNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305448, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305460, "SectionsToDownloadPerXPCCallForSignalEnvironment");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305460, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305478, "PrecachngAllowNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305478, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305490, "RoadTileDownloadRadiusNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305490, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023054A8, "BuildingTileDownloadRadiusNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023054A8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023054C0, "RunningTrackTileDownloadRadiusNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023054C0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023054D8, "DistanceFromHomeForTouristModeMeters");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023054D8, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_1023054F0, "NumDaysLookbackForWorkouts");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023054F0, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305508, "[");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305508, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305520, "]");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305520, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305538, " ");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305538, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305550, ";");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305550, (void *)&_mh_execute_header);
  sub_1015A2E04(qword_102305568, ", ");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305568, (void *)&_mh_execute_header);
}

void sub_1008B0528(uint64_t a1, void *a2)
{
  sub_1004F96E4(a1, a2);
}

void sub_1008B07F0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v1 + 1920);
  *(_QWORD *)(v1 + 1920) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  sub_100BCD638(v2);
  v6 = *(_QWORD *)(v1 + 1720);
  *(_QWORD *)(v1 + 1720) = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  v7 = *v3;
  *v3 = 0;
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  if (*(char *)(v1 + 1639) < 0)
    operator delete(*(void **)(v1 + 1616));
  sub_1004FA1D0(v1);
  _Unwind_Resume(a1);
}

void sub_1008B08A4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLOdometerNotifierCompanion::onLocationNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 32), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215A3C8);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLOdometerNotifierCompanion::onLocationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215A3C8);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLOdometerNotifierCompanion::onLocationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_1008B19B8(a4, v7, a2, a3);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_1008B0A5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_1008B0A7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD v11[6];
  std::__shared_weak_count *v12;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 40);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3321888768;
  v11[2] = sub_1008B0B50;
  v11[3] = &unk_102153660;
  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  v11[4] = v2;
  v11[5] = v5;
  v12 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  objc_msgSend(v3, "async:", v11);
  v8 = v12;
  if (v12)
  {
    v9 = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_1008B0B3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100261F44(v1);
  _Unwind_Resume(a1);
}

void sub_1008B0B50(uint64_t a1)
{
  uint64_t v2;
  uint64_t **v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t **v8[2];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(uint64_t ***)(a1 + 48);
  v8[0] = *(uint64_t ***)(a1 + 40);
  v8[1] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 1);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  sub_1008B0BF4(v2, v8);
  if (v3)
  {
    v6 = (unint64_t *)(v3 + 1);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(uint64_t **))(*v3)[2])(v3);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v3);
    }
  }
}

void sub_1008B0BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100261F44((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1008B0BF4(uint64_t a1, uint64_t ***a2)
{
  uint64_t *i;
  NSObject *v5;
  uint64_t v6;
  int v7;
  void *v8;
  ALActivityLog *v9;
  uint64_t v10;
  int v11;
  const char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  int v20;
  __int16 v21;
  int v22;
  _BYTE buf[32];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  *(_DWORD *)buf = 5;
  if (sub_1001B7864(a1, (int *)buf, 1))
  {
    for (i = **a2; i != (*a2)[1]; i += 2)
    {
      if (qword_10229FD70 != -1)
        dispatch_once(&qword_10229FD70, &stru_10215A428);
      v5 = qword_10229FD78;
      if (os_log_type_enabled((os_log_t)qword_10229FD78, OS_LOG_TYPE_DEFAULT))
      {
        v6 = *i;
        v7 = *((_DWORD *)i + 2);
        *(_DWORD *)buf = 134349569;
        *(_QWORD *)&buf[4] = v6;
        *(_WORD *)&buf[12] = 1025;
        *(_DWORD *)&buf[14] = v7;
        *(_WORD *)&buf[18] = 1025;
        *(_DWORD *)&buf[20] = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "onCoarseElevation,startTime,%{public}f,ascended,%{private}d,source,%{private}d", buf, 0x18u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FD70 != -1)
          dispatch_once(&qword_10229FD70, &stru_10215A428);
        v10 = *i;
        v11 = *((_DWORD *)i + 2);
        v17 = 134349569;
        v18 = v10;
        v19 = 1025;
        v20 = v11;
        v21 = 1025;
        v22 = 0;
        LODWORD(v16) = 24;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FD78, 0, "onCoarseElevation,startTime,%{public}f,ascended,%{private}d,source,%{private}d", &v17, v16);
        v13 = (char *)v12;
        sub_100512490("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::notifyCoarseElevation(std::shared_ptr<CLCoarseElevationVector>)", "%s\n", v12);
        if (v13 != buf)
          free(v13);
      }
      v32 = 0u;
      v33 = 0u;
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      *(_OWORD *)&buf[16] = 0u;
      *(_OWORD *)buf = *(_OWORD *)i;
      v17 = 5;
      (*(void (**)(uint64_t, int *, _BYTE *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, &v17, buf, 0, 0xFFFFFFFFLL, 0);
      v8 = objc_autoreleasePoolPush();
      v9 = objc_alloc_init(ALActivityLog);
      -[ALActivityLog setTimestamp:](v9, "setTimestamp:", *(double *)i);
      -[ALActivityLog setCoarseElevation:](v9, "setCoarseElevation:", objc_alloc_init(ALCMCoarseElevation));
      -[ALCMCoarseElevation setElevationAscended:](-[ALActivityLog coarseElevation](v9, "coarseElevation"), "setElevationAscended:", *((unsigned int *)i + 2));
      objc_msgSend(-[CLServiceVendor proxyForService:](+[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"), "proxyForService:", CFSTR("CLActivityLogger")), "logData:", v9);
      objc_autoreleasePoolPop(v8);
    }
  }
  else
  {
    v14 = sub_1001FBB04(0);
    if (v14 && (*(unsigned int (**)(uint64_t))(*(_QWORD *)(v14 + 72) + 16))(v14 + 72))
    {
      v15 = sub_1001FBB04(0);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v15 + 72) + 40))(v15 + 72, 0);
    }
  }
}

void sub_1008B0F3C(uint64_t a1, int a2)
{
  NSObject *v4;
  int v5;
  uint64_t v6;
  int v7;
  const char *v8;
  uint8_t *v9;
  _DWORD v10[2];
  __int16 v11;
  int v12;
  uint8_t buf[8];
  __int16 v14;
  int v15;

  if (qword_10229FDF0 != -1)
    dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
  v4 = qword_10229FDF8;
  if (os_log_type_enabled((os_log_t)qword_10229FDF8, OS_LOG_TYPE_DEBUG))
  {
    v5 = *(unsigned __int8 *)(a1 + 920);
    *(_DWORD *)buf = 67240448;
    *(_DWORD *)&buf[4] = v5;
    v14 = 1026;
    v15 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Update location authorization, current, %{public}d, new, %{public}d", buf, 0xEu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FDF0 != -1)
      dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
    v7 = *(unsigned __int8 *)(a1 + 920);
    v10[0] = 67240448;
    v10[1] = v7;
    v11 = 1026;
    v12 = a2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FDF8, 2, "Update location authorization, current, %{public}d, new, %{public}d", v10, 14);
    v9 = (uint8_t *)v8;
    sub_100512490("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::updateStateOnAuthorization(BOOL)", "%s\n", v8);
    if (v9 != buf)
      free(v9);
  }
  if (*(unsigned __int8 *)(a1 + 920) != a2)
  {
    v6 = *(_QWORD *)(a1 + 1712);
    *(_QWORD *)(a1 + 1712) = 0;
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    sub_1006AA544();
  }
}

uint64_t sub_1008B1264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_10215A280;
  v2 = *(_QWORD *)(a1 + 1712);
  *(_QWORD *)(a1 + 1712) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(_QWORD *)(a1 + 1720);
  *(_QWORD *)(a1 + 1720) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *(_QWORD *)(a1 + 1920);
  *(_QWORD *)(a1 + 1920) = 0;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *(_QWORD *)(a1 + 1920);
    *(_QWORD *)(a1 + 1920) = 0;
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  sub_100BCD638(a1 + 1728);
  v6 = *(_QWORD *)(a1 + 1720);
  *(_QWORD *)(a1 + 1720) = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  v7 = *(_QWORD *)(a1 + 1712);
  *(_QWORD *)(a1 + 1712) = 0;
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  if (*(char *)(a1 + 1639) < 0)
    operator delete(*(void **)(a1 + 1616));
  return sub_1004FA1D0(a1);
}

void sub_1008B133C(uint64_t a1)
{
  sub_1008B1264(a1);
  operator delete();
}

_BYTE *sub_1008B1360(_BYTE *result)
{
  _BYTE *v1;
  NSObject *v2;
  NSObject *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  _WORD v7[8];
  uint8_t buf[1640];

  if (!result[921])
  {
    v1 = result;
    if (qword_10229FDF0 != -1)
      dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
    v2 = qword_10229FDF8;
    if (os_log_type_enabled((os_log_t)qword_10229FDF8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Enable GPS; Start GPS subscription", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FDF0 != -1)
        dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
      v7[0] = 0;
      v4 = (char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FDF8, 2, "Enable GPS; Start GPS subscription",
                     v7,
                     2);
      sub_100512490("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::enableGPS()", "%s\n", v4);
      if (v4 != (char *)buf)
        free(v4);
    }
    if (qword_1022A0070 != -1)
      dispatch_once(&qword_1022A0070, &stru_10215A408);
    v3 = qword_1022A0078;
    if (os_log_type_enabled((os_log_t)qword_1022A0078, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wigo,on,OdometerNotifierCompanion", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0070 != -1)
        dispatch_once(&qword_1022A0070, &stru_10215A408);
      v7[0] = 0;
      LODWORD(v6) = 2;
      v5 = (char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0078, 0, "#wigo,on,OdometerNotifierCompanion", v7, v6);
      sub_100512490("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::enableGPS()", "%s\n", v5);
      if (v5 != (char *)buf)
        free(v5);
    }
    AnalyticsSendEventLazy(CFSTR("com.apple.locationd.position.GNSS.WIGO"), &stru_10215A370);
    objc_msgSend(*(id *)(*((_QWORD *)v1 + 215) + 16), "register:forNotification:registrationInfo:", *(_QWORD *)(*((_QWORD *)v1 + 215) + 8), 0, 0);
    result = objc_msgSend(*(id *)(*((_QWORD *)v1 + 240) + 16), "register:forNotification:registrationInfo:", *(_QWORD *)(*((_QWORD *)v1 + 240) + 8), 0, 0);
    v1[921] = 1;
  }
  return result;
}

NSDictionary *__cdecl sub_1008B166C(id a1)
{
  return (NSDictionary *)&off_10221FCF0;
}

NSDictionary *__cdecl sub_1008B1678(id a1)
{
  return (NSDictionary *)&off_10221FD18;
}

uint64_t sub_1008B1684(uint64_t result, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  const char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[112];
  int v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  _BYTE buf[32];
  _BYTE v35[32];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v3 = *(double *)a3;
  if (*(double *)a3 >= 0.0)
  {
    v4 = *(double *)(a3 + 8);
    if (v4 >= 0.0)
    {
      v5 = *(double *)(a3 + 16);
      if (v5 >= 0.0)
      {
        v6 = result;
        memset(&v23[72], 0, 40);
        *(_OWORD *)&v23[56] = 0u;
        *(_OWORD *)&v23[40] = 0u;
        *(_OWORD *)&v23[24] = 0u;
        *(_OWORD *)&v23[8] = 0u;
        *(_QWORD *)&v18 = *(_QWORD *)(a2 + 76);
        *((double *)&v18 + 1) = v4;
        v7 = *(_QWORD *)(a2 + 28);
        *(double *)&v19 = v5;
        *((_QWORD *)&v19 + 1) = v7;
        *(_QWORD *)&v20 = *(_QWORD *)(a2 + 44);
        *((_QWORD *)&v20 + 1) = v20;
        v8 = *(_QWORD *)(a2 + 52);
        *(double *)&v21 = v3;
        *((_QWORD *)&v21 + 1) = v8;
        v9 = *(_QWORD *)(a3 + 344);
        *(_QWORD *)&v22 = *(_QWORD *)(a3 + 24);
        *((_QWORD *)&v22 + 1) = v9;
        v10 = *(_DWORD *)(a3 + 352);
        *(_DWORD *)v23 = 0;
        *(_DWORD *)&v23[4] = v10;
        *(_DWORD *)&v23[8] = *(_DWORD *)(a2 + 96);
        v11 = *(_OWORD *)(a3 + 496);
        v12 = *(_OWORD *)(a3 + 360);
        *(_OWORD *)&v23[16] = *(_OWORD *)(a3 + 376);
        *(_OWORD *)&v23[32] = v11;
        v13 = *(_QWORD *)(a2 + 68);
        *(double *)&v23[48] = *(double *)(a2 + 60) * 0.0174532924;
        *(_QWORD *)&v23[56] = v13;
        *(_OWORD *)&v23[64] = v12;
        *(_QWORD *)&v23[80] = 0;
        sub_1004FADC8(result, (uint64_t)&v18);
        *(_QWORD *)&v20 = v14;
        if (qword_10229FDF0 != -1)
          dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
        v15 = qword_10229FDF8;
        if (os_log_type_enabled((os_log_t)qword_10229FDF8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134350081;
          *(_QWORD *)&buf[4] = v18;
          *(_WORD *)&buf[12] = 2049;
          *(_QWORD *)&buf[14] = *((_QWORD *)&v18 + 1);
          *(_WORD *)&buf[22] = 2050;
          *(_QWORD *)&buf[24] = v19;
          *(_WORD *)v35 = 2049;
          *(_QWORD *)&v35[2] = *((_QWORD *)&v19 + 1);
          *(_WORD *)&v35[10] = 2049;
          *(_QWORD *)&v35[12] = v20;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Odometer(GPS),%{public}f,%{private}f,%{public}f,%{private}f,%{private}f", buf, 0x34u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FDF0 != -1)
            dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
          v24 = 134350081;
          v25 = v18;
          v26 = 2049;
          v27 = *((_QWORD *)&v18 + 1);
          v28 = 2050;
          v29 = v19;
          v30 = 2049;
          v31 = *((_QWORD *)&v19 + 1);
          v32 = 2049;
          v33 = v20;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FDF8, 2, "Odometer(GPS),%{public}f,%{private}f,%{public}f,%{private}f,%{private}f", &v24, 52);
          v17 = (char *)v16;
          sub_100512490("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::notifyLocation(const CLDaemonLocation &, const CLDaemonLocationPrivate &)", "%s\n", v16);
          if (v17 != buf)
            free(v17);
        }
        v40 = *(_OWORD *)&v23[48];
        v41 = *(_OWORD *)&v23[64];
        v42 = *(_OWORD *)&v23[80];
        v43 = *(_OWORD *)&v23[96];
        v36 = v22;
        v37 = *(_OWORD *)v23;
        v38 = *(_OWORD *)&v23[16];
        v39 = *(_OWORD *)&v23[32];
        *(_OWORD *)buf = v18;
        *(_OWORD *)&buf[16] = v19;
        *(_OWORD *)v35 = v20;
        *(_OWORD *)&v35[16] = v21;
        v24 = 4;
        return (*(uint64_t (**)(uint64_t, int *, _BYTE *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)v6 + 152))(v6, &v24, buf, 0, 0xFFFFFFFFLL, 0);
      }
    }
  }
  return result;
}

void sub_1008B19B8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v5;
  int *v7;
  NSObject *v8;
  uint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  int v14;
  NSObject *v16;
  int v17;
  int v18;
  const char *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint8_t *v24;
  int v25;
  uint64_t v26;
  uint8_t buf[4];
  uint64_t v28;
  std::__shared_weak_count *v29;

  v5 = *a3;
  if (*a3 == 23)
  {
    v7 = *(int **)(a4 + 800);
    if (v7 && (unint64_t)sub_10104BD1C(v7) >= 2)
    {
      if (qword_10229FDF0 != -1)
        dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
      v8 = qword_10229FDF8;
      if (os_log_type_enabled((os_log_t)qword_10229FDF8, OS_LOG_TYPE_DEBUG))
      {
        v9 = sub_10104BD1C(*(int **)(a4 + 800));
        *(_DWORD *)buf = 134349056;
        v28 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Location batch notification size %{public}ld", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FDF0 != -1)
          dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
        v21 = qword_10229FDF8;
        v22 = sub_10104BD1C(*(int **)(a4 + 800));
        v25 = 134349056;
        v26 = v22;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v21, 2, "Location batch notification size %{public}ld", &v25, 12);
        v24 = (uint8_t *)v23;
        sub_100512490("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v23);
        if (v24 != buf)
          free(v24);
      }
      if (sub_10104BD1C(*(int **)(a4 + 800)))
      {
        v10 = 0;
        do
        {
          sub_10104B598(*(_QWORD *)(a4 + 800), v10, (uint64_t)&v25);
          sub_10104BAA8(*(_QWORD *)(a4 + 800), v10, (uint64_t)buf);
          sub_1008B1684(a1, (uint64_t)&v25, (uint64_t)buf);
          v11 = v29;
          if (v29)
          {
            p_shared_owners = (unint64_t *)&v29->__shared_owners_;
            do
              v13 = __ldaxr(p_shared_owners);
            while (__stlxr(v13 - 1, p_shared_owners));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          ++v10;
        }
        while (v10 < sub_10104BD1C(*(int **)(a4 + 800)));
      }
    }
    else
    {
      sub_1008B1684(a1, a4, a4 + 160);
    }
  }
  else if (v5 == 14)
  {
    v14 = sub_1004FABF8(a1);
    sub_1008B0F3C(a1, v14);
  }
  else if (v5)
  {
    if (qword_10229FDF0 != -1)
      dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
    v16 = qword_10229FDF8;
    if (os_log_type_enabled((os_log_t)qword_10229FDF8, OS_LOG_TYPE_ERROR))
    {
      v17 = *a3;
      *(_DWORD *)buf = 67240192;
      LODWORD(v28) = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "#Warning Received unhandled location notification, %{public}d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FDF0 != -1)
        dispatch_once(&qword_10229FDF0, &stru_10215A3E8);
      v18 = *a3;
      v25 = 67240192;
      LODWORD(v26) = v18;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FDF8, 16, "#Warning Received unhandled location notification, %{public}d", &v25, 8);
      v20 = (uint8_t *)v19;
      sub_100512490("Generic", 1, 0, 0, "void CLOdometerNotifierCompanion::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v19);
      if (v20 != buf)
        free(v20);
    }
  }
  else
  {
    sub_100BCF0A0(a1 + 1728);
  }
}

void sub_1008B1E3C(_Unwind_Exception *a1)
{
  sub_100261F44((uint64_t)&STACK[0x2B8]);
  _Unwind_Resume(a1);
}

void sub_1008B1E5C(id a1)
{
  qword_1022A0228 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1008B1E88(id a1)
{
  qword_10229FDF8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Odometer");
}

void sub_1008B1EB4(id a1)
{
  qword_1022A0078 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_1008B1EE0(id a1)
{
  qword_10229FD78 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

void sub_1008B1F0C(id a1)
{
  qword_10229FC78 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

__n128 sub_1008B1F38(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v4 = a1[2];
  v5 = a1[1];
  v6 = 8 * (v4 - v5) - 1;
  if (v4 == v5)
    v6 = 0;
  v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1008B1FCC(a1);
    v5 = a1[1];
    v7 = a1[5] + a1[4];
  }
  v8 = *(_QWORD *)(v5 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) + ((v7 & 0x3F) << 6);
  result = *(__n128 *)a2;
  v10 = *(_OWORD *)(a2 + 16);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v8 + 48) = v11;
  *(__n128 *)v8 = result;
  *(_OWORD *)(v8 + 16) = v10;
  ++a1[5];
  return result;
}

void sub_1008B1FCC(_QWORD *a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;

  v2 = a1[4];
  v3 = v2 >= 0x40;
  v4 = v2 - 64;
  if (v3)
  {
    v5 = (uint64_t)(a1 + 3);
    v6 = (char *)a1[3];
    a1[4] = v4;
    v7 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v11 = *v7;
    v9 = (char *)(v7 + 1);
    v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(_QWORD *)v8 = v10;
      a1[2] += 8;
      return;
    }
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v33 = 1;
      else
        v33 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_10025E6A0(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      v8 = v35;
      v39 = a1[2] - (_QWORD)v38;
      if (v39)
      {
        v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          v42 = *v38++;
          *(_QWORD *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    v13 = v12 >> 3;
    v14 = v12 >> 3 < -1;
    v15 = (v12 >> 3) + 2;
    if (v14)
      v16 = v15;
    else
      v16 = v13 + 1;
    v17 = -(v16 >> 1);
    v18 = v16 >> 1;
    v19 = &v9[-8 * v18];
    v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      v9 = (char *)a1[1];
    }
    v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  v21 = a1[2];
  v22 = (v21 - a1[1]) >> 3;
  v23 = a1[3];
  v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(_QWORD *)&v54 = operator new(0x1000uLL);
      sub_100212218(a1, &v54);
      return;
    }
    *(_QWORD *)&v54 = operator new(0x1000uLL);
    sub_100343094((uint64_t)a1, &v54);
    v44 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v45 = *v44;
    v9 = (char *)(v44 + 1);
    v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3])
      goto LABEL_33;
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v46 = 1;
      else
        v46 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_10025E6A0((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      v8 = v35;
      v49 = a1[2] - (_QWORD)v48;
      if (v49)
      {
        v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          v52 = *v48++;
          *(_QWORD *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1)
    v25 = 1;
  else
    v25 = v24 >> 2;
  v56 = a1 + 3;
  *(_QWORD *)&v54 = sub_10025E6A0((uint64_t)(a1 + 3), v25);
  *((_QWORD *)&v54 + 1) = v54 + 8 * v22;
  *(_QWORD *)&v55 = *((_QWORD *)&v54 + 1);
  *((_QWORD *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_10003732C(&v54, &v53);
  v27 = (_QWORD *)a1[2];
  v28 = -7 - (_QWORD)v27;
  while (v27 != (_QWORD *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1003431B0((uint64_t)&v54, v27);
  }
  v29 = (char *)*a1;
  v30 = v54;
  v31 = v55;
  *(_QWORD *)&v54 = *a1;
  *((_QWORD *)&v54 + 1) = v27;
  v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  v55 = v32;
  if (v27 != (_QWORD *)v32)
    *(_QWORD *)&v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  if (v29)
    operator delete(v29);
}

void sub_1008B2294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  void *v13;

  operator delete(v13);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1008B22E0()
{
  unsigned __int8 v0;
  _OWORD v1[5];
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_1022A19C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1022A19C8))
    {
      v2 = 0x7FFFFFFF00000000;
      v1[2] = xmmword_101BE57F8;
      v1[3] = unk_101BE5808;
      v1[4] = xmmword_101BE5818;
      v1[0] = xmmword_101BE57D8;
      v1[1] = unk_101BE57E8;
      sub_100428DFC((uint64_t)&unk_1022A19B0, (int *)v1, 11);
      __cxa_atexit((void (*)(void *))sub_100427E4C, &unk_1022A19B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1022A19C8);
    }
  }
}

void sub_1008B23B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A19C8);
  _Unwind_Resume(a1);
}

uint64_t sub_1008B23CC()
{
  sub_1015A2E04(qword_102305580, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305580, (void *)&_mh_execute_header);
}

void sub_1008B2450(id a1)
{
  sub_100197040();
  if (sub_100195F08())
  {
    sub_100197040();
    if ((sub_1001B7910() & 0x2000000000000) != 0)
      byte_1023055D8 = 1;
  }
}

void sub_1008B2BA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1008B31CC(id a1)
{
  qword_10229FFB8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "BatchedSensor");
}

uint64_t sub_1008B31F8()
{
  sub_1015A2E04(&qword_102305598, "Acc800Fp");
  dword_1023055B0 = 800;
  __cxa_atexit((void (*)(void *))sub_1005CB0EC, &qword_102305598, (void *)&_mh_execute_header);
  sub_1015A2E04(&qword_1023055B8, "DmFp");
  dword_1023055D0 = 200;
  return __cxa_atexit((void (*)(void *))sub_1005CB0EC, &qword_1023055B8, (void *)&_mh_execute_header);
}

void sub_1008B34D4(id a1)
{
  qword_1023055F0 = (uint64_t)objc_msgSend(objc_alloc((Class)CLDispatchSilo), "initWithIdentifier:", CFSTR("CLATVAirplayMonitorSilo"));
}

id sub_1008B364C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "sendBufferedScanNotifications");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scanDeliveryDelayTimer"), "setNextFireTime:", (*(double *)&qword_1023055E8 + j__CFAbsoluteTimeGetCurrent() * 1000.0) / 1000.0);
}

id sub_1008B3DA4(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "clATVAirplayMonitorService:didFindDevices:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_1008B48E8(id a1)
{
  qword_1022A02A8 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

double sub_1008B4914()
{
  double v0;
  double result;

  v0 = (double)(int)objc_msgSend(&off_10221B738, "intValue") * 0.625;
  result = v0 + (double)(int)objc_msgSend(&off_10221B750, "intValue") * 0.625;
  *(double *)&qword_1023055E8 = result;
  return result;
}

_QWORD *sub_1008B4964(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v4;
  __int128 v5;

  *a1 = a2;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  v4 = a1 + 4;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100115CE4(v4, *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v5 = *a3;
    v4[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_1008B49C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

id sub_1008B49E8(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  NSObject *v5;
  _QWORD *v6;
  _QWORD *v8;
  const char *v9;
  uint8_t *v10;
  int v11;
  _QWORD *v12;
  __int16 v13;
  double v14;
  uint8_t buf[4];
  _QWORD *v16;
  __int16 v17;
  double v18;

  v2 = sub_100515CB4();
  v3 = 0.0;
  if (v2 < sub_1008B4C50(a1))
  {
    v4 = sub_1008B4C50(a1);
    v3 = v4 - sub_100515CB4();
  }
  if (qword_10229FE60 != -1)
    dispatch_once(&qword_10229FE60, &stru_10215A510);
  v5 = qword_10229FE68;
  if (os_log_type_enabled((os_log_t)qword_10229FE68, OS_LOG_TYPE_DEBUG))
  {
    v6 = (_QWORD *)(a1 + 32);
    if (*(char *)(a1 + 55) < 0)
      v6 = (_QWORD *)*v6;
    *(_DWORD *)buf = 136446466;
    v16 = v6;
    v17 = 2050;
    v18 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "VO2MaxPowerBudgetEstimator, updating budgetRefreshTimer, cacheKey, %{public}s, delay, %{public}.2f", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FE60 != -1)
      dispatch_once(&qword_10229FE60, &stru_10215A510);
    v8 = (_QWORD *)(a1 + 32);
    if (*(char *)(a1 + 55) < 0)
      v8 = (_QWORD *)*v8;
    v11 = 136446466;
    v12 = v8;
    v13 = 2050;
    v14 = v3;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE68, 2, "VO2MaxPowerBudgetEstimator, updating budgetRefreshTimer, cacheKey, %{public}s, delay, %{public}.2f", &v11, 22);
    v10 = (uint8_t *)v9;
    sub_100512490("Generic", 1, 0, 2, "void CLBudgetTracker::updateTimer()", "%s\n", v9);
    if (v10 != buf)
      free(v10);
  }
  return objc_msgSend(*(id *)a1, "setNextFireDelay:interval:", v3, 7200.0);
}

BOOL sub_1008B4C14(uint64_t a1)
{
  double v2;

  v2 = sub_100515CB4();
  return v2 >= sub_1008B4C50(a1);
}

double sub_1008B4C50(uint64_t a1)
{
  uint64_t v2;
  const char *v3;
  double v5;

  v5 = 0.0;
  v2 = sub_1001FD94C();
  v3 = (const char *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0)
    v3 = *(const char **)v3;
  if (sub_1001FD98C(v2, v3, &v5))
    return v5;
  else
    return sub_100515CB4();
}

id sub_1008B4CA8(uint64_t a1, double a2)
{
  NSObject *v4;
  _QWORD *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  _QWORD *v10;
  const char *v11;
  uint8_t *v12;
  double v13;
  int v14;
  _QWORD *v15;
  __int16 v16;
  double v17;
  uint8_t buf[4];
  _QWORD *v19;
  __int16 v20;
  double v21;

  v13 = a2;
  if (qword_10229FE60 != -1)
    dispatch_once(&qword_10229FE60, &stru_10215A510);
  v4 = qword_10229FE68;
  if (os_log_type_enabled((os_log_t)qword_10229FE68, OS_LOG_TYPE_DEBUG))
  {
    v5 = (_QWORD *)(a1 + 32);
    if (*(char *)(a1 + 55) < 0)
      v5 = (_QWORD *)*v5;
    *(_DWORD *)buf = 136446466;
    v19 = v5;
    v20 = 2050;
    v21 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "VO2MaxPowerBudgetEstimator, scheduling next budget refresh, cacheKey, %{public}s, time, %{public}.2f", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FE60 != -1)
      dispatch_once(&qword_10229FE60, &stru_10215A510);
    v10 = (_QWORD *)(a1 + 32);
    if (*(char *)(a1 + 55) < 0)
      v10 = (_QWORD *)*v10;
    v14 = 136446466;
    v15 = v10;
    v16 = 2050;
    v17 = a2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE68, 2, "VO2MaxPowerBudgetEstimator, scheduling next budget refresh, cacheKey, %{public}s, time, %{public}.2f", &v14, 22);
    v12 = (uint8_t *)v11;
    sub_100512490("Generic", 1, 0, 2, "void CLBudgetTracker::scheduleBudgetRefresh(CFTimeInterval)", "%s\n", v11);
    if (v12 != buf)
      free(v12);
  }
  v6 = sub_1001FD94C();
  v7 = (const char *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0)
    v7 = *(const char **)v7;
  sub_10018A4CC(v6, v7, &v13);
  v8 = sub_1001FD94C();
  (*(void (**)(uint64_t))(*(_QWORD *)v8 + 944))(v8);
  return sub_1008B49E8(a1);
}

void sub_1008B4ECC(id a1)
{
  qword_10229FE68 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

uint64_t sub_1008B4EF8(_DWORD *a1)
{
  if (*a1 == 1)
    return 1;
  else
    return 2;
}

uint64_t sub_1008B4F0C(uint64_t a1, __int128 *a2)
{
  __int128 v4;

  *(_QWORD *)a1 = 0x500000000;
  sub_10106763C(a1 + 48);
  *(_DWORD *)(a1 + 568) = 0;
  *(_OWORD *)(a1 + 576) = xmmword_101BE5860;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_QWORD *)(a1 + 640) = 0x7FEFFFFFFFFFFFFFLL;
  *(_BYTE *)(a1 + 648) = 1;
  *(_QWORD *)(a1 + 656) = 0;
  *(_BYTE *)(a1 + 664) = 0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_100115CE4((_BYTE *)(a1 + 672), *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    *(_QWORD *)(a1 + 688) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 672) = v4;
  }
  sub_1008B4FC8(a1);
  return a1;
}

void sub_1008B4FAC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 695) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_1008B4FC8(uint64_t a1)
{
  NSObject *v2;
  _QWORD *v3;
  _QWORD *v4;
  const char *v5;
  uint8_t *v6;
  int v7;
  const char *v8;
  __int16 v9;
  _QWORD *v10;
  uint8_t buf[4];
  const char *v12;
  __int16 v13;
  _QWORD *v14;

  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_QWORD *)(a1 + 640) = 0x7FEFFFFFFFFFFFFFLL;
  sub_1008B51D8(a1);
  if (qword_10229FD70 != -1)
    dispatch_once(&qword_10229FD70, &stru_10215A530);
  v2 = qword_10229FD78;
  if (os_log_type_enabled((os_log_t)qword_10229FD78, OS_LOG_TYPE_INFO))
  {
    v3 = (_QWORD *)(a1 + 672);
    if (*(char *)(a1 + 695) < 0)
      v3 = (_QWORD *)*v3;
    *(_DWORD *)buf = 136315394;
    v12 = "ElevationLabel";
    v13 = 2080;
    v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "init %s, %s", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FD70 != -1)
      dispatch_once(&qword_10229FD70, &stru_10215A530);
    v4 = (_QWORD *)(a1 + 672);
    if (*(char *)(a1 + 695) < 0)
      v4 = (_QWORD *)*v4;
    v7 = 136315394;
    v8 = "ElevationLabel";
    v9 = 2080;
    v10 = v4;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FD78, 1, "init %s, %s", (const char *)&v7, 22);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::init()", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
}

void sub_1008B51D8(uint64_t a1)
{
  NSObject *v2;
  _QWORD *v3;
  _QWORD *v4;
  char *v5;
  int v6;
  const char *v7;
  __int16 v8;
  _QWORD *v9;
  uint8_t buf[4];
  const char *v11;
  __int16 v12;
  _QWORD *v13;

  *(_DWORD *)a1 = 0;
  sub_10106766C(a1 + 48);
  *(_DWORD *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 608) = 0;
  *(_DWORD *)(a1 + 616) = 0;
  *(_QWORD *)(a1 + 592) = 0;
  *(_QWORD *)(a1 + 584) = 0;
  *(_DWORD *)(a1 + 600) = 0;
  *(_BYTE *)(a1 + 648) = 1;
  if (qword_10229FD70 != -1)
    dispatch_once(&qword_10229FD70, &stru_10215A530);
  v2 = qword_10229FD78;
  if (os_log_type_enabled((os_log_t)qword_10229FD78, OS_LOG_TYPE_INFO))
  {
    v3 = (_QWORD *)(a1 + 672);
    if (*(char *)(a1 + 695) < 0)
      v3 = (_QWORD *)*v3;
    *(_DWORD *)buf = 136315394;
    v11 = "ElevationLabel";
    v12 = 2080;
    v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Resetting significant elevation %s, %s", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FD70 != -1)
      dispatch_once(&qword_10229FD70, &stru_10215A530);
    v4 = (_QWORD *)(a1 + 672);
    if (*(char *)(a1 + 695) < 0)
      v4 = (_QWORD *)*v4;
    v6 = 136315394;
    v7 = "ElevationLabel";
    v8 = 2080;
    v9 = v4;
    v5 = (char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FD78, 1, "Resetting significant elevation %s, %s", (const char *)&v6, 22);
    sub_100512490("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::reset()", "%s\n", v5);
    if (v5 != (char *)buf)
      free(v5);
  }
}

double sub_1008B53F0(uint64_t a1, double a2, double a3, double a4)
{
  double v4;
  double result;

  v4 = *(double *)(a1 + 640);
  result = 1.79769313e308;
  if (v4 != 1.79769313e308)
  {
    LODWORD(result) = *(_DWORD *)(a1 + 544);
    LODWORD(a4) = *(_DWORD *)(a1 + 548);
    return v4 + ((double)*(unint64_t *)&result - (double)*(unint64_t *)&a4) / 100.0;
  }
  return result;
}

void sub_1008B5430(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v6;
  unsigned int v7;
  unint64_t v8;
  double v9;
  double v10;
  NSObject *v11;
  unint64_t v12;
  unint64_t v13;
  double v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  const char *v21;
  uint8_t *v22;
  double v23;
  int v24;
  const char *v25;
  __int16 v26;
  double v27;
  __int16 v28;
  const char *v29;
  __int16 v30;
  double v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  double v35;
  __int16 v36;
  const char *v37;
  __int16 v38;
  CFAbsoluteTime v39;
  uint8_t buf[4];
  const char *v41;
  __int16 v42;
  double v43;
  __int16 v44;
  const char *v45;
  __int16 v46;
  double v47;
  __int16 v48;
  const char *v49;
  __int16 v50;
  double v51;
  __int16 v52;
  const char *v53;
  __int16 v54;
  CFAbsoluteTime Current;

  v6 = *(double *)(a1 + 640);
  v7 = *(_DWORD *)(a1 + 544);
  HIDWORD(v8) = 2146435071;
  if (v6 == 1.79769313e308)
  {
    LODWORD(v8) = *(_DWORD *)(a1 + 548);
    v9 = ((double)v7 - (double)v8) / 100.0;
    v10 = 1.79769313e308;
  }
  else
  {
    LODWORD(a5) = *(_DWORD *)(a1 + 548);
    v9 = ((double)v7 - (double)*(unint64_t *)&a5) / 100.0;
    v10 = v6 + v9;
  }
  *(double *)(a1 + 640) = a2 - v9;
  if (qword_10229FD70 != -1)
    dispatch_once(&qword_10229FD70, &stru_10215A530);
  v11 = qword_10229FD78;
  if (os_log_type_enabled((os_log_t)qword_10229FD78, OS_LOG_TYPE_DEFAULT))
  {
    v14 = *(double *)(a1 + 640);
    v15 = 1.79769313e308;
    if (v14 != 1.79769313e308)
    {
      LODWORD(v12) = *(_DWORD *)(a1 + 544);
      LODWORD(v13) = *(_DWORD *)(a1 + 548);
      v15 = ((double)v12 - (double)v13) / 100.0 + v14;
    }
    *(_DWORD *)buf = 136316930;
    v41 = "biasOfSigElevation";
    v42 = 2048;
    v43 = v14;
    v44 = 2080;
    v45 = "preAbsSigElevation";
    v46 = 2048;
    v47 = v10;
    v48 = 2080;
    v49 = "curAbsSigElevation";
    v50 = 2048;
    v51 = v15;
    v52 = 2080;
    v53 = "rebaseTime";
    v54 = 2048;
    Current = CFAbsoluteTimeGetCurrent();
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s,%f,%s,%f,%s,%f,%s,%f", buf, 0x52u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FD70 != -1)
      dispatch_once(&qword_10229FD70, &stru_10215A530);
    v18 = qword_10229FD78;
    v19 = *(double *)(a1 + 640);
    v20 = 1.79769313e308;
    if (v19 != 1.79769313e308)
    {
      LODWORD(v16) = *(_DWORD *)(a1 + 544);
      LODWORD(v17) = *(_DWORD *)(a1 + 548);
      v20 = ((double)v16 - (double)v17) / 100.0 + v19;
    }
    v24 = 136316930;
    v25 = "biasOfSigElevation";
    v26 = 2048;
    v27 = v19;
    v28 = 2080;
    v29 = "preAbsSigElevation";
    v30 = 2048;
    v31 = v10;
    v32 = 2080;
    v33 = "curAbsSigElevation";
    v34 = 2048;
    v35 = v20;
    v36 = 2080;
    v37 = "rebaseTime";
    v38 = 2048;
    v39 = CFAbsoluteTimeGetCurrent();
    LODWORD(v23) = 82;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v18, 0, "%s,%f,%s,%f,%s,%f,%s,%f", (const char *)&v24, v23);
    v22 = (uint8_t *)v21;
    sub_100512490("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::rebaseAbsSignificantElevation(double)", "%s\n", v21);
    if (v22 != buf)
      free(v22);
  }
}

double sub_1008B5798(uint64_t a1)
{
  double result;

  result = *(double *)(a1 + 632);
  *(double *)(a1 + 656) = result;
  return result;
}

void sub_1008B57A4(uint64_t a1, double a2, double a3)
{
  double v6;
  double v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  _QWORD *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  _QWORD *v23;
  char *v24;
  double v25;
  int v26;
  const char *v27;
  __int16 v28;
  double v29;
  __int16 v30;
  const char *v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  const char *v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  const char *v39;
  __int16 v40;
  uint64_t v41;
  __int16 v42;
  const char *v43;
  __int16 v44;
  double v45;
  __int16 v46;
  const char *v47;
  __int16 v48;
  double v49;
  __int16 v50;
  const char *v51;
  __int16 v52;
  double v53;
  __int16 v54;
  const char *v55;
  __int16 v56;
  _QWORD *v57;
  __int16 v58;
  const char *v59;
  __int16 v60;
  double v61;
  uint8_t buf[4];
  const char *v63;
  __int16 v64;
  double v65;
  __int16 v66;
  const char *v67;
  __int16 v68;
  uint64_t v69;
  __int16 v70;
  const char *v71;
  __int16 v72;
  uint64_t v73;
  __int16 v74;
  const char *v75;
  __int16 v76;
  uint64_t v77;
  __int16 v78;
  const char *v79;
  __int16 v80;
  double v81;
  __int16 v82;
  const char *v83;
  __int16 v84;
  double v85;
  __int16 v86;
  const char *v87;
  __int16 v88;
  double v89;
  __int16 v90;
  const char *v91;
  __int16 v92;
  _QWORD *v93;
  __int16 v94;
  const char *v95;
  __int16 v96;
  double v97;

  v6 = a3 - *(double *)(a1 + 584);
  v7 = *(double *)(a1 + 592) + v6;
  *(double *)(a1 + 592) = v7;
  *(double *)(a1 + 608) = a2;
  if (fabs(v7) > 2.0)
  {
    if (qword_10229FD70 != -1)
      dispatch_once(&qword_10229FD70, &stru_10215A530);
    v8 = qword_10229FD78;
    if (os_log_type_enabled((os_log_t)qword_10229FD78, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 584);
      v10 = *(_QWORD *)(a1 + 528);
      v11 = *(_QWORD *)(a1 + 536);
      v12 = (float)*(unsigned int *)(a1 + 544);
      v13 = (float)*(unsigned int *)(a1 + 548);
      v14 = (float)*(int *)(a1 + 616);
      v15 = (_QWORD *)(a1 + 672);
      if (*(char *)(a1 + 695) < 0)
        v15 = (_QWORD *)*v15;
      *(_DWORD *)buf = 136319490;
      v63 = "Altitude";
      v64 = 2048;
      v65 = a3;
      v66 = 2080;
      v67 = "ReferenceAltitude";
      v68 = 2048;
      v69 = v9;
      v70 = 2080;
      v71 = "ElevationStartTime";
      v72 = 2048;
      v73 = v10;
      v74 = 2080;
      v75 = "ElevationEndTime";
      v76 = 2048;
      v77 = v11;
      v78 = 2080;
      v79 = "AscendedElevation";
      v80 = 2048;
      v81 = v12;
      v82 = 2080;
      v83 = "DescendedElevation";
      v84 = 2048;
      v85 = v13;
      v86 = 2080;
      v87 = "AscendingState";
      v88 = 2048;
      v89 = v14;
      v90 = 2080;
      v91 = "ElevationLabel";
      v92 = 2080;
      v93 = v15;
      v94 = 2080;
      v95 = "Time";
      v96 = 2048;
      v97 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%s,%s,%f", buf, 0xB6u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FD70 != -1)
        dispatch_once(&qword_10229FD70, &stru_10215A530);
      v17 = *(_QWORD *)(a1 + 584);
      v18 = *(_QWORD *)(a1 + 528);
      v19 = *(_QWORD *)(a1 + 536);
      v20 = (float)*(unsigned int *)(a1 + 544);
      v21 = (float)*(unsigned int *)(a1 + 548);
      v22 = (float)*(int *)(a1 + 616);
      v23 = (_QWORD *)(a1 + 672);
      if (*(char *)(a1 + 695) < 0)
        v23 = (_QWORD *)*v23;
      v26 = 136319490;
      v27 = "Altitude";
      v28 = 2048;
      v29 = a3;
      v30 = 2080;
      v31 = "ReferenceAltitude";
      v32 = 2048;
      v33 = v17;
      v34 = 2080;
      v35 = "ElevationStartTime";
      v36 = 2048;
      v37 = v18;
      v38 = 2080;
      v39 = "ElevationEndTime";
      v40 = 2048;
      v41 = v19;
      v42 = 2080;
      v43 = "AscendedElevation";
      v44 = 2048;
      v45 = v20;
      v46 = 2080;
      v47 = "DescendedElevation";
      v48 = 2048;
      v49 = v21;
      v50 = 2080;
      v51 = "AscendingState";
      v52 = 2048;
      v53 = v22;
      v54 = 2080;
      v55 = "ElevationLabel";
      v56 = 2080;
      v57 = v23;
      v58 = 2080;
      v59 = "Time";
      v60 = 2048;
      v61 = a2;
      LODWORD(v25) = 182;
      v24 = (char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FD78, 1, "%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%s,%s,%f", (const char *)&v26, v25);
      sub_100512490("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::bufferCurrentElevation(CFAbsoluteTime, double)", "%s\n", v24);
      if (v24 != (char *)buf)
        free(v24);
    }
    v16 = *(double *)(a1 + 592);
    if (v16 != 0.0)
      sub_1008B5C00(a1, *(double *)(a1 + 608), v16);
    *(_QWORD *)(a1 + 592) = 0;
    *(_DWORD *)(a1 + 600) = 0;
    v6 = a3 - *(double *)(a1 + 584);
  }
  *(double *)(a1 + 624) = *(double *)(a1 + 624) - v6;
  *(double *)(a1 + 584) = a3;
  *(_DWORD *)(a1 + 568) = 3;
}

uint64_t sub_1008B5C00(uint64_t result, double a2, double a3)
{
  int v3;
  double v4;
  double v5;

  if (a3 <= 0.0)
  {
    *(_DWORD *)(result + 548) += (a3 * -100.0);
    v3 = -1;
  }
  else
  {
    *(_DWORD *)(result + 544) += (a3 * 100.0);
    v3 = 1;
  }
  *(_DWORD *)(result + 616) = v3;
  v4 = a2 + -2.56;
  v5 = *(double *)(result + 536);
  if (v5 < a2 + -2.56)
    v5 = a2 + -2.56;
  if (v5 <= a2)
    v4 = v5;
  *(double *)(result + 528) = v4;
  *(double *)(result + 536) = a2;
  return result;
}

double sub_1008B5C7C(uint64_t a1, double a2)
{
  double result;

  result = -a2;
  *(double *)(a1 + 656) = result;
  return result;
}

uint64_t sub_1008B5C88(uint64_t result, double a2)
{
  *(double *)(result + 640) = a2;
  return result;
}

void sub_1008B5C90(id a1)
{
  qword_10229FD78 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

void sub_1008B5CBC(id a1)
{
  qword_10229FE88 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

void sub_1008B63D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_1008B63F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "quitForcedLocationState");
}

void sub_1008B8B6C(id a1)
{
  qword_10229FCD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

_QWORD *sub_1008B8B9C@<X0>(unsigned __int8 *a1@<X1>, unsigned __int8 *a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *result;

  v6 = operator new(0x60uLL);
  result = sub_1008B8BFC(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1008B8BE8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008B8BFC(_QWORD *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  a1[2] = 0;
  *a1 = off_10215A5C0;
  a1[1] = 0;
  sub_10040A824(a1 + 3, *a2, *a3);
  return a1;
}

void sub_1008B8C3C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1008B8C50(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10215A5C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1008B8C64(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10215A5C0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_1008B8C98(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

void sub_1008B8CA8()
{
  unsigned __int8 v0;
  _OWORD v1[5];
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_1022A19C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1022A19C8))
    {
      v2 = 0x7FFFFFFF00000000;
      v1[2] = xmmword_101BE58B8;
      v1[3] = unk_101BE58C8;
      v1[4] = xmmword_101BE58D8;
      v1[0] = xmmword_101BE5898;
      v1[1] = unk_101BE58A8;
      sub_100428DFC((uint64_t)&unk_1022A19B0, (int *)v1, 11);
      __cxa_atexit((void (*)(void *))sub_100427E4C, &unk_1022A19B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1022A19C8);
    }
  }
}

void sub_1008B8D7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A19C8);
  _Unwind_Resume(a1);
}

uint64_t sub_1008B8D94()
{
  sub_1015A2E04(qword_102305600, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305600, (void *)&_mh_execute_header);
}

void sub_1008B8DD8(uint64_t **a1, uint64_t a2)
{
  unsigned int *v4;
  NSObject *v5;
  void **v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  _BYTE buf[12];
  char v12;
  int v13;
  _BYTE *v14;
  void *__p[2];
  char v16;

  v4 = (unsigned int *)(a2 + 32);
  if (sub_1001C8DA8((unsigned int *)(a2 + 32)))
  {
    sub_1008B9050((uint64_t)a1, v4);
    sub_10008A9F0(a1, (uint64_t *)a2);
    sub_1008B9B1C((uint64_t)v4);
    operator delete((void *)a2);
  }
  else
  {
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215A600);
    v5 = qword_1022A0048;
    if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_FAULT))
    {
      sub_100BCC240(v4, __p);
      v6 = v16 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(_QWORD *)&buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v16 < 0)
        operator delete(__p[0]);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1022A0040 != -1)
        dispatch_once(&qword_1022A0040, &stru_10215A600);
      v7 = qword_1022A0048;
      sub_100BCC240(v4, buf);
      if (v12 >= 0)
        v8 = buf;
      else
        v8 = *(_BYTE **)buf;
      v13 = 136380675;
      v14 = v8;
      _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, v7, 17, "Invalid tile ID: %{private}s, #CloneMe", &v13, 12);
      v10 = v9;
      if (v12 < 0)
        operator delete(*(void **)buf);
      sub_100512490("Generic", 1, 0, 0, "void CLTilesMap::erase(CLTilesMap::ConstIterator)", "%s\n", v10);
      if (v10 != (char *)__p)
        free(v10);
    }
  }
}

void sub_1008B9050(uint64_t a1, unsigned int *a2)
{
  _QWORD *v4;
  NSObject *v5;
  void **v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  _BYTE buf[12];
  char v12;
  int v13;
  _BYTE *v14;
  void *__p[2];
  char v16;

  if (sub_1001C8DA8(a2))
  {
    if ((_QWORD *)(a1 + 8) == sub_1001C8840(a1, (uint64_t)a2))
      sub_10190DD90();
    v4 = sub_1001C8840(a1 + 24, (uint64_t)a2);
    if ((_QWORD *)(a1 + 32) != v4)
      sub_1008B9BC0((uint64_t **)(a1 + 24), (uint64_t)v4);
  }
  else
  {
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215A600);
    v5 = qword_1022A0048;
    if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_FAULT))
    {
      sub_100BCC240(a2, __p);
      v6 = v16 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(_QWORD *)&buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v16 < 0)
        operator delete(__p[0]);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1022A0040 != -1)
        dispatch_once(&qword_1022A0040, &stru_10215A600);
      v7 = qword_1022A0048;
      sub_100BCC240(a2, buf);
      if (v12 >= 0)
        v8 = buf;
      else
        v8 = *(_BYTE **)buf;
      v13 = 136380675;
      v14 = v8;
      _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, v7, 17, "Invalid tile ID: %{private}s, #CloneMe", &v13, 12);
      v10 = v9;
      if (v12 < 0)
        operator delete(*(void **)buf);
      sub_100512490("Generic", 1, 0, 0, "void CLTilesMap::unprotectedErase(const TileId &)", "%s\n", v10);
      if (v10 != (char *)__p)
        free(v10);
    }
  }
}

void sub_1008B92E4(uint64_t **a1, unsigned int *a2)
{
  NSObject *v4;
  void **v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  char *v9;
  _BYTE buf[12];
  char v11;
  int v12;
  _BYTE *v13;
  void *__p[2];
  char v15;

  if (sub_1001C8DA8(a2))
  {
    sub_1008B9050((uint64_t)a1, a2);
    sub_1008B9B68(a1, (uint64_t)a2);
  }
  else
  {
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215A600);
    v4 = qword_1022A0048;
    if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_FAULT))
    {
      sub_100BCC240(a2, __p);
      v5 = v15 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(_QWORD *)&buf[4] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v15 < 0)
        operator delete(__p[0]);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1022A0040 != -1)
        dispatch_once(&qword_1022A0040, &stru_10215A600);
      v6 = qword_1022A0048;
      sub_100BCC240(a2, buf);
      if (v11 >= 0)
        v7 = buf;
      else
        v7 = *(_BYTE **)buf;
      v12 = 136380675;
      v13 = v7;
      _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, v6, 17, "Invalid tile ID: %{private}s, #CloneMe", &v12, 12);
      v9 = v8;
      if (v11 < 0)
        operator delete(*(void **)buf);
      sub_100512490("Generic", 1, 0, 0, "void CLTilesMap::erase(const TileId &)", "%s\n", v9);
      if (v9 != (char *)__p)
        free(v9);
    }
  }
}

void sub_1008B9548(uint64_t a1, unsigned int *a2)
{
  NSObject *v4;
  void **v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  char *v9;
  _BYTE buf[12];
  char v11;
  int v12;
  _BYTE *v13;
  void *__p[2];
  char v15;

  if (sub_1001C8DA8(a2))
  {
    if ((_QWORD *)(a1 + 8) == sub_1001C8840(a1, (uint64_t)a2))
      sub_10190DF04();
    sub_1000C1728((uint64_t **)(a1 + 24), (uint64_t)a2, (uint64_t)a2);
  }
  else
  {
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215A600);
    v4 = qword_1022A0048;
    if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_FAULT))
    {
      sub_100BCC240(a2, __p);
      v5 = v15 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(_QWORD *)&buf[4] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v15 < 0)
        operator delete(__p[0]);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1022A0040 != -1)
        dispatch_once(&qword_1022A0040, &stru_10215A600);
      v6 = qword_1022A0048;
      sub_100BCC240(a2, buf);
      if (v11 >= 0)
        v7 = buf;
      else
        v7 = *(_BYTE **)buf;
      v12 = 136380675;
      v13 = v7;
      _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, v6, 17, "Invalid tile ID: %{private}s, #CloneMe", &v12, 12);
      v9 = v8;
      if (v11 < 0)
        operator delete(*(void **)buf);
      sub_100512490("Generic", 1, 0, 0, "void CLTilesMap::unprotectedAdd(const TileId &)", "%s\n", v9);
      if (v9 != (char *)__p)
        free(v9);
    }
  }
}

uint64_t *sub_1008B97C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008B9C4C(a2, a1 + 24);
}

uint64_t sub_1008B97D0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40);
}

void sub_1008B97D8(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)(a1 + 32);
  sub_100067A00(a1 + 24, *(char **)(a1 + 32));
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 40) = 0;
  *v2 = 0;
  sub_1008B9D24(a1, *(_QWORD **)(a1 + 8));
  *(_QWORD *)a1 = a1 + 8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 8) = 0;
}

void sub_1008B982C(uint64_t a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)(a1 + 32);
  sub_100067A00(a1 + 24, *(char **)(a1 + 32));
  *(v1 - 1) = v1;
  *v1 = 0;
  v1[1] = 0;
}

uint64_t *sub_1008B985C(uint64_t **a1, unsigned int *a2)
{
  NSObject *v4;
  void **v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  _BYTE buf[12];
  char v12;
  int v13;
  _BYTE *v14;
  void *__p[2];
  char v16;

  if (!*a2)
  {
    if (sub_1001C8DA8(a2))
    {
      sub_1000C1728(a1 + 3, (uint64_t)a2, (uint64_t)a2);
    }
    else
    {
      if (qword_1022A0040 != -1)
        dispatch_once(&qword_1022A0040, &stru_10215A600);
      v4 = qword_1022A0048;
      if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_FAULT))
      {
        sub_100BCC240(a2, __p);
        v5 = v16 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)buf = 136380675;
        *(_QWORD *)&buf[4] = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
        if (v16 < 0)
          operator delete(__p[0]);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_1022A0040 != -1)
          dispatch_once(&qword_1022A0040, &stru_10215A600);
        v7 = qword_1022A0048;
        sub_100BCC240(a2, buf);
        if (v12 >= 0)
          v8 = buf;
        else
          v8 = *(_BYTE **)buf;
        v13 = 136380675;
        v14 = v8;
        _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, v7, 17, "Invalid tile ID: %{private}s, #CloneMe", &v13, 12);
        v10 = v9;
        if (v12 < 0)
          operator delete(*(void **)buf);
        sub_100512490("Generic", 1, 0, 0, "std::unique_ptr<CLTileFile> &CLTilesMap::operator[](const TileId &)", "%s\n", v10);
        if (v10 != (char *)__p)
          free(v10);
      }
    }
  }
  __p[0] = a2;
  return sub_1008B9D6C(a1, (uint64_t)a2, (uint64_t)&unk_101B9EB60, (_OWORD **)__p) + 10;
}

void sub_1008B9AC4(id a1)
{
  qword_1022A0048 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1008B9AF0(id a1)
{
  qword_1022A0058 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_1008B9B1C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
}

uint64_t sub_1008B9B68(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;

  v3 = sub_1001C8840((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3)
    return 0;
  v4 = v3;
  sub_10008A9F0(a1, v3);
  sub_1008B9B1C((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

uint64_t *sub_1008B9BC0(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;

  v3 = sub_10008A9F0(a1, (uint64_t *)a2);
  if (*(char *)(a2 + 79) < 0)
    operator delete(*(void **)(a2 + 56));
  operator delete((void *)a2);
  return v3;
}

void sub_1008B9C00(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 79) < 0)
      operator delete(__p[7]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

uint64_t *sub_1008B9C4C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1008B9CA0(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_1008B9C88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100067A00(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1008B9CA0(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = sub_1000C084C(v5, v6, (uint64_t)(v4 + 4), (uint64_t)(v4 + 4));
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void sub_1008B9D24(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1008B9D24(a1, *a2);
    sub_1008B9D24(a1, a2[1]);
    sub_1008B9B1C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t *sub_1008B9D6C(uint64_t **a1, uint64_t a2, uint64_t a3, _OWORD **a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)sub_1000C17A4((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    sub_1008B9E14((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000145B0(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_1008B9EB4((uint64_t)v10, 0);
  }
  return v7;
}

_BYTE *sub_1008B9E14@<X0>(uint64_t a1@<X0>, _OWORD **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  _OWORD *v7;
  uint64_t v8;
  _BYTE *result;
  __int128 v10;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x58uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = *a2;
  v8 = *((_QWORD *)*a2 + 2);
  *((_OWORD *)v6 + 2) = **a2;
  *((_QWORD *)v6 + 6) = v8;
  result = v6 + 56;
  if (*((char *)v7 + 47) < 0)
  {
    result = sub_100115CE4(result, *((void **)v7 + 3), *((_QWORD *)v7 + 4));
  }
  else
  {
    v10 = *(_OWORD *)((char *)v7 + 24);
    *((_QWORD *)v6 + 9) = *((_QWORD *)v7 + 5);
    *(_OWORD *)result = v10;
  }
  *((_QWORD *)v6 + 10) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1008B9E9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1008B9EB4(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1008B9EB4(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_1008B9B1C((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

BOOL sub_1008B9EF8()
{
  return os_log_type_enabled((os_log_t)qword_1022A0058, OS_LOG_TYPE_FAULT);
}

BOOL sub_1008B9F0C()
{
  uint64_t v0;

  return os_log_type_enabled(*(os_log_t *)(v0 + 88), OS_LOG_TYPE_INFO);
}

BOOL sub_1008B9F1C()
{
  uint64_t v0;

  return os_signpost_enabled(*(os_log_t *)(v0 + 88));
}

void sub_1008B9F28(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_10215A640);
  v2 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "DEM,clear AVL status cache", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_10215A640);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "DEM,clear AVL status cache", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLDemTileAvailability::clearAvlCache()", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  *(_BYTE *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  *(_BYTE *)(a1 + 32) = 0;
}

_QWORD *sub_1008BA0E4(uint64_t a1)
{
  _QWORD *result;

  result = sub_1000F34E0((_QWORD *)a1);
  *(_BYTE *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

void sub_1008BA110(id a1)
{
  qword_1022A0028 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_1008BA13C(id a1)
{
  qword_1022A0078 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_1008BA168(uint64_t a1, _QWORD *a2, uint64_t a3, int a4, uint64_t a5, const std::string *a6, uint64_t a7, double a8, double a9)
{
  std::string *v18;
  void *__p[2];
  char v21;

  sub_1015A2E04(__p, "ff:ff:ff:ff:ff:ff");
  *(_QWORD *)a1 = sub_1000CC740((uint64_t)__p);
  if (v21 < 0)
    operator delete(__p[0]);
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101BE5A00;
  *(_QWORD *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(_QWORD *)(a1 + 56) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 64) = -1;
  *(_QWORD *)(a1 + 72) = 0xBFF0000000000000;
  v18 = (std::string *)sub_1015A2E04((_QWORD *)(a1 + 80), "");
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a3 + 4);
  *(int8x16_t *)(a1 + 24) = vextq_s8(*(int8x16_t *)(a3 + 20), *(int8x16_t *)(a3 + 20), 8uLL);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a3 + 36);
  *(_DWORD *)(a1 + 48) = a4;
  *(double *)(a1 + 56) = a8;
  *(_QWORD *)(a1 + 64) = a5;
  *(double *)(a1 + 72) = a9;
  std::string::operator=(v18, a6);
  *(_QWORD *)(a1 + 104) = a7;
  return a1;
}

void sub_1008BA28C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  void **v16;

  if (*(char *)(v15 + 103) < 0)
    operator delete(*v16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008BA2C0(uint64_t a1, void *a2)
{
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *__p[2];
  uint64_t v16;

  sub_1015A2E04(__p, "ff:ff:ff:ff:ff:ff");
  *(_QWORD *)a1 = sub_1000CC740((uint64_t)__p);
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101BE5A00;
  *(_QWORD *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(_QWORD *)(a1 + 56) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 64) = -1;
  *(_QWORD *)(a1 + 72) = 0xBFF0000000000000;
  v4 = (void **)(a1 + 80);
  sub_1015A2E04((_QWORD *)(a1 + 80), "");
  *(_QWORD *)(a1 + 104) = 0;
  if (a2)
  {
    sub_1015A2E04(__p, (char *)objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("mac")), "UTF8String"));
    *(_QWORD *)a1 = sub_1000CC740((uint64_t)__p);
    if (SHIBYTE(v16) < 0)
      operator delete(__p[0]);
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("latitude")), "doubleValue");
    *(_QWORD *)(a1 + 8) = v5;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("longitude")), "doubleValue");
    *(_QWORD *)(a1 + 16) = v6;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("altitude")), "doubleValue");
    *(_QWORD *)(a1 + 24) = v7;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("horizontalAccuracy")), "doubleValue");
    *(_QWORD *)(a1 + 32) = v8;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("verticalAccuracy")), "doubleValue");
    *(_QWORD *)(a1 + 40) = v9;
    *(_DWORD *)(a1 + 48) = objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("reach")), "intValue");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("stationaryTimeInSeconds")), "doubleValue");
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = (int)objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("loiType")), "intValue");
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", CFSTR("lastUpdated")), "doubleValue");
    *(_QWORD *)(a1 + 72) = v11;
    sub_1015A2E04(__p, (char *)objc_msgSend(objc_msgSend(objc_msgSend(a2, "recordID"), "recordName"), "UTF8String"));
    if (*(char *)(a1 + 103) < 0)
      operator delete(*v4);
    *(_OWORD *)v4 = *(_OWORD *)__p;
    *(_QWORD *)(a1 + 96) = v16;
    v12 = objc_msgSend(a2, "recordChangeTag");
    if (v12)
    {
      v13 = objc_msgSend(objc_alloc((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
      objc_msgSend(a2, "encodeSystemFieldsWithCoder:", v13);
      objc_msgSend(v13, "finishEncoding");
      v12 = objc_msgSend(v13, "encodedData");
    }
    *(_QWORD *)(a1 + 104) = v12;
  }
  return a1;
}

void sub_1008BA538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  void **v16;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v15 + 103) < 0)
    operator delete(*v16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008BA58C(uint64_t a1, void *a2)
{
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  const char *v16;
  std::string *v17;
  int v18;
  id v19;
  std::string __p[68];

  sub_1015A2E04(__p, "ff:ff:ff:ff:ff:ff");
  *(_QWORD *)a1 = sub_1000CC740((uint64_t)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101BE5A00;
  *(_QWORD *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(_QWORD *)(a1 + 56) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 64) = -1;
  *(_QWORD *)(a1 + 72) = 0xBFF0000000000000;
  v4 = (void **)(a1 + 80);
  sub_1015A2E04((_QWORD *)(a1 + 80), "");
  *(_QWORD *)(a1 + 104) = 0;
  if (a2)
  {
    sub_1015A2E04(__p, (char *)objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("mac")), "UTF8String"));
    *(_QWORD *)a1 = sub_1000CC740((uint64_t)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("latitude")), "doubleValue");
    *(_QWORD *)(a1 + 8) = v5;
    objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("longitude")), "doubleValue");
    *(_QWORD *)(a1 + 16) = v6;
    objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("altitude")), "doubleValue");
    *(_QWORD *)(a1 + 24) = v7;
    objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("horizontalAccuracy")), "doubleValue");
    *(_QWORD *)(a1 + 32) = v8;
    objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("verticalAccuracy")), "doubleValue");
    *(_QWORD *)(a1 + 40) = v9;
    *(_DWORD *)(a1 + 48) = objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("reach")), "intValue");
    objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("stationaryTimeInSeconds")), "doubleValue");
    *(_QWORD *)(a1 + 56) = v10;
    v11 = objc_msgSend(a2, "objectForKey:", CFSTR("loiType"));
    if ((objc_msgSend(v11, "isEqualToString:", CFSTR("Home")) & 1) != 0)
    {
      v12 = 0;
    }
    else if ((objc_msgSend(v11, "isEqualToString:", CFSTR("Work")) & 1) != 0)
    {
      v12 = 1;
    }
    else if ((objc_msgSend(v11, "isEqualToString:", CFSTR("School")) & 1) != 0)
    {
      v12 = 2;
    }
    else if ((objc_msgSend(v11, "isEqualToString:", CFSTR("Gym")) & 1) != 0)
    {
      v12 = 3;
    }
    else
    {
      if ((objc_msgSend(v11, "isEqualToString:", CFSTR("Unknown")) & 1) == 0)
      {
        if (qword_1022A0040 != -1)
          dispatch_once(&qword_1022A0040, &stru_10215A680);
        v13 = qword_1022A0048;
        if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_ERROR))
        {
          LODWORD(__p[0].__r_.__value_.__l.__data_) = 138543362;
          *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "warning, unknown LOI type: %{public}@", (uint8_t *)__p, 0xCu);
        }
        if (sub_1001BFF7C(115, 0))
        {
          bzero(__p, 0x65CuLL);
          if (qword_1022A0040 != -1)
            dispatch_once(&qword_1022A0040, &stru_10215A680);
          v18 = 138543362;
          v19 = v11;
          _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, qword_1022A0048, 16, "warning, unknown LOI type: %{public}@", &v18, 12);
          v17 = (std::string *)v16;
          sub_100512490("Generic", 1, 0, 0, "RTLocationOfInterestType getLocationOfInterestType(NSString *)", "%s\n", v16);
          if (v17 != __p)
            free(v17);
        }
      }
      v12 = -1;
    }
    *(_QWORD *)(a1 + 64) = v12;
    objc_msgSend(objc_msgSend(a2, "objectForKey:", CFSTR("lastUpdated")), "doubleValue");
    *(_QWORD *)(a1 + 72) = v14;
    sub_1008BA9E0(__p);
    if (*(char *)(a1 + 103) < 0)
      operator delete(*v4);
    *(_OWORD *)v4 = *(_OWORD *)&__p[0].__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 96) = *((_QWORD *)&__p[0].__r_.__value_.__l + 2);
    *(_QWORD *)(a1 + 104) = 0;
  }
  return a1;
}

void sub_1008BA988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v18;
  void **v19;

  if (*(char *)(v18 + 103) < 0)
    operator delete(*v19);
  _Unwind_Resume(exception_object);
}

void sub_1008BA9E0(std::string *a1@<X8>)
{
  std::string v2;
  std::string __str;
  char v4;

  sub_1015A2E04(&__str, (char *)-[NSString UTF8String](-[NSUUID UUIDString](+[NSUUID UUID](NSUUID, "UUID"), "UUIDString"), "UTF8String"));
  std::string::basic_string(&v2, &__str, 0, 0x12uLL, (std::allocator<char> *)&v4);
  if (SHIBYTE(v2.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_100115CE4(a1, v2.__r_.__value_.__l.__data_, v2.__r_.__value_.__l.__size_);
    if (SHIBYTE(v2.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v2.__r_.__value_.__l.__data_);
  }
  else
  {
    *a1 = v2;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
}

void sub_1008BAA84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

id sub_1008BAABC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  const char *v8;
  uint8_t *v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint8_t buf[4];
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = (_QWORD *)(a1 + 80);
  if (*(char *)(a1 + 103) < 0)
    v3 = (_QWORD *)*v3;
  v4 = objc_msgSend(objc_alloc((Class)CKRecordID), "initWithRecordName:zoneID:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3), objc_msgSend(objc_alloc((Class)CKRecordZoneID), "initWithZoneName:ownerName:", CFSTR("com.apple.clx.cloudkit.zone"), CKCurrentUserDefaultName));
  if (v2)
  {
    v11 = 0;
    v5 = objc_msgSend(objc_alloc((Class)NSKeyedUnarchiver), "initForReadingFromData:error:", v2, &v11);
    objc_msgSend(v5, "setRequiresSecureCoding:", 1);
    v6 = objc_msgSend(objc_alloc((Class)CKRecord), "initWithCoder:", v5);
    objc_msgSend(v5, "finishDecoding");
    if (!v6)
    {
      if (qword_1022A0040 != -1)
        dispatch_once(&qword_1022A0040, &stru_10215A680);
      v7 = qword_1022A0048;
      if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        v15 = v11;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to decode record from system fields data: %{public}@", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0040 != -1)
          dispatch_once(&qword_1022A0040, &stru_10215A680);
        v12 = 138543362;
        v13 = v11;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0048, 16, "Failed to decode record from system fields data: %{public}@", &v12, 12);
        v9 = (uint8_t *)v8;
        sub_100512490("Generic", 1, 0, 0, "CKRecord *CLWifiAssociatedApCentroidDatabaseEntry::toCKRecord() const", "%s\n", v8);
        if (v9 != buf)
          free(v9);
      }
    }
  }
  else
  {
    v6 = objc_msgSend(objc_alloc((Class)CKRecord), "initWithRecordType:recordID:", CFSTR("WifiAssociatedApCentroid"), v4);
  }
  sub_1008BAD68(a1, v6);
  return v6;
}

id sub_1008BAD68(uint64_t a1, void *a2)
{
  id v4;
  std::string *p_p;
  std::string __p;

  v4 = objc_msgSend(a2, "encryptedValues");
  sub_1000C2254((_QWORD *)a1, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  objc_msgSend(v4, "setObject:forKey:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", p_p), CFSTR("mac"));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 8)), CFSTR("latitude"));
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 16)), CFSTR("longitude"));
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 24)), CFSTR("altitude"));
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 32)), CFSTR("horizontalAccuracy"));
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 40)), CFSTR("verticalAccuracy"));
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 48)), CFSTR("reach"));
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 56)), CFSTR("stationaryTimeInSeconds"));
  objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *(unsigned int *)(a1 + 64)), CFSTR("loiType"));
  return objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 72)), CFSTR("lastUpdated"));
}

void sub_1008BAF90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

id sub_1008BAFAC(uint64_t a1)
{
  id v2;
  std::string *p_p;
  std::string *v4;
  NSString *v5;
  std::string __p;

  v2 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
  sub_1000C2254((_QWORD *)a1, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  objc_msgSend(v2, "setObject:forKey:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", p_p), CFSTR("mac"));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 8)), CFSTR("latitude"));
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 16)), CFSTR("longitude"));
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 24)), CFSTR("altitude"));
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 32)), CFSTR("horizontalAccuracy"));
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 40)), CFSTR("verticalAccuracy"));
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 48)), CFSTR("reach"));
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 56)), CFSTR("stationaryTimeInSeconds"));
  sub_1008BB694(*(_QWORD *)(a1 + 64), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v4 = &__p;
  else
    v4 = (std::string *)__p.__r_.__value_.__r.__words[0];
  v5 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  objc_msgSend(v2, "setObject:forKey:", v5, CFSTR("loiType"));
  objc_msgSend(v2, "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 72)), CFSTR("lastUpdated"));
  return v2;
}

void sub_1008BB19C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008BB1BC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 104) = a2;
  return result;
}

double sub_1008BB1C4(uint64_t a1, double *a2)
{
  return vabdd_f64(*a2, *(double *)(a1 + 72));
}

double sub_1008BB1D4(uint64_t a1, double *a2)
{
  return vabdd_f64(*a2, *(double *)(a1 + 72)) / 3600.0;
}

uint64_t sub_1008BB1F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::string *p_p;
  std::string::size_type size;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  std::string *v21;
  std::string::size_type v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  double Current;
  _QWORD *v28;
  _QWORD *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  std::string __p;
  _QWORD v37[2];
  uint64_t v38;
  _QWORD v39[10];
  char v40;
  uint64_t v41;

  sub_100263E50((uint64_t)v37);
  sub_1000C2254((_QWORD *)a1, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_100263F7C(&v38, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v6 = sub_100263F7C(&v38, (uint64_t)", ", 2);
  v7 = *v6;
  *(uint64_t *)((char *)v6 + *(_QWORD *)(*v6 - 24) + 16) = 8;
  *(_DWORD *)((char *)v6 + *(_QWORD *)(v7 - 24) + 8) = *(_DWORD *)((_BYTE *)v6 + *(_QWORD *)(v7 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v6, *(double *)(a1 + 8));
  v8 = sub_100263F7C(&v38, (uint64_t)", ", 2);
  v9 = *v8;
  *(uint64_t *)((char *)v8 + *(_QWORD *)(*v8 - 24) + 16) = 8;
  *(_DWORD *)((char *)v8 + *(_QWORD *)(v9 - 24) + 8) = *(_DWORD *)((_BYTE *)v8 + *(_QWORD *)(v9 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v8, *(double *)(a1 + 16));
  v10 = sub_100263F7C(&v38, (uint64_t)", alt, ", 7);
  v11 = *v10;
  *(uint64_t *)((char *)v10 + *(_QWORD *)(*v10 - 24) + 16) = 1;
  *(_DWORD *)((char *)v10 + *(_QWORD *)(v11 - 24) + 8) = *(_DWORD *)((_BYTE *)v10 + *(_QWORD *)(v11 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v10, *(double *)(a1 + 24));
  v12 = sub_100263F7C(&v38, (uint64_t)", hacc, ", 8);
  v13 = *v12;
  *(uint64_t *)((char *)v12 + *(_QWORD *)(*v12 - 24) + 16) = 1;
  *(_DWORD *)((char *)v12 + *(_QWORD *)(v13 - 24) + 8) = *(_DWORD *)((_BYTE *)v12 + *(_QWORD *)(v13 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v12, *(double *)(a1 + 32));
  v14 = sub_100263F7C(&v38, (uint64_t)", vacc, ", 8);
  v15 = *v14;
  *(uint64_t *)((char *)v14 + *(_QWORD *)(*v14 - 24) + 16) = 1;
  *(_DWORD *)((char *)v14 + *(_QWORD *)(v15 - 24) + 8) = *(_DWORD *)((_BYTE *)v14 + *(_QWORD *)(v15 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v14, *(double *)(a1 + 40));
  v16 = sub_100263F7C(&v38, (uint64_t)", reach, ", 9);
  v17 = *v16;
  *(uint64_t *)((char *)v16 + *(_QWORD *)(*v16 - 24) + 16) = 0;
  *(_DWORD *)((char *)v16 + *(_QWORD *)(v17 - 24) + 8) = *(_DWORD *)((_BYTE *)v16 + *(_QWORD *)(v17 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v16, *(unsigned int *)(a1 + 48));
  v18 = sub_100263F7C(&v38, (uint64_t)", stationaryTime, ", 18);
  v19 = *v18;
  *(uint64_t *)((char *)v18 + *(_QWORD *)(*v18 - 24) + 16) = 1;
  *(_DWORD *)((char *)v18 + *(_QWORD *)(v19 - 24) + 8) = *(_DWORD *)((_BYTE *)v18 + *(_QWORD *)(v19 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v18, *(double *)(a1 + 56));
  v20 = sub_100263F7C(&v38, (uint64_t)", loiType, ", 11);
  sub_1008BB694(*(_QWORD *)(a1 + 64), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &__p;
  else
    v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v22 = __p.__r_.__value_.__l.__size_;
  sub_100263F7C(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v23 = sub_100263F7C(&v38, (uint64_t)", lastUpdated, ", 15);
  v24 = *v23;
  *(uint64_t *)((char *)v23 + *(_QWORD *)(*v23 - 24) + 16) = 1;
  *(_DWORD *)((char *)v23 + *(_QWORD *)(v24 - 24) + 8) = *(_DWORD *)((_BYTE *)v23 + *(_QWORD *)(v24 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(v23, *(double *)(a1 + 72));
  v25 = sub_100263F7C(&v38, (uint64_t)", age, ", 7);
  v26 = *v25;
  *(uint64_t *)((char *)v25 + *(_QWORD *)(*v25 - 24) + 16) = 1;
  *(_DWORD *)((char *)v25 + *(_QWORD *)(v26 - 24) + 8) = *(_DWORD *)((_BYTE *)v25 + *(_QWORD *)(v26 - 24) + 8) & 0xFFFFFEFB | 4;
  Current = CFAbsoluteTimeGetCurrent();
  v28 = (_QWORD *)std::ostream::operator<<(v25, vabdd_f64(Current, *(double *)(a1 + 72)));
  sub_100263F7C(v28, (uint64_t)"s", 1);
  v29 = sub_100263F7C(&v38, (uint64_t)", recordName, ", 14);
  v30 = *(char *)(a1 + 103);
  if (v30 >= 0)
    v31 = a1 + 80;
  else
    v31 = *(_QWORD *)(a1 + 80);
  if (v30 >= 0)
    v32 = *(unsigned __int8 *)(a1 + 103);
  else
    v32 = *(_QWORD *)(a1 + 88);
  sub_100263F7C(v29, v31, v32);
  v33 = sub_100263F7C(&v38, (uint64_t)", systemFields, ", 16);
  std::ostream::operator<<(v33, *(_QWORD *)(a1 + 104));
  std::stringbuf::str(a2, v39);
  *(_QWORD *)((char *)v37
  v38 = v34;
  if (v40 < 0)
    operator delete((void *)v39[8]);
  std::streambuf::~streambuf(v39);
  return std::ios::~ios(&v41);
}

void sub_1008BB638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_1018B38B4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008BB694@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1015A2E04(a2, (&off_10215A6A0)[a1 + 1]);
}

void sub_1008BB6AC(id a1)
{
  qword_1022A0048 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1008BB6D8(id a1)
{
  operator new();
}

void sub_1008BB718()
{
  operator delete();
}

uint64_t sub_1008BB73C(uint64_t a1)
{
  int v2;
  int v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  NSObject *v7;
  int v8;
  int v10;
  const char *v11;
  uint8_t *v12;
  uint64_t v13;
  _DWORD v14[4];
  uint8_t buf[8];
  std::__shared_weak_count *v16;

  *(_QWORD *)a1 = off_10215A6F8;
  *(_QWORD *)(a1 + 8) = 850045863;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_BYTE *)(a1 + 96) = 0;
  HIBYTE(v13) = 0;
  sub_1001E4804(buf);
  v2 = sub_1001E4874(*(uint64_t *)buf, "DisableMapMatchingRouteHints", (BOOL *)&v13 + 7);
  v3 = v2;
  v4 = v16;
  if (!v16)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v16->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
  {
LABEL_5:
    if (!v2)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  if (v3)
LABEL_6:
    *(_BYTE *)(a1 + 96) = HIBYTE(v13);
LABEL_7:
  if (qword_1022A00D0 != -1)
    dispatch_once(&qword_1022A00D0, &stru_10215A748);
  v7 = qword_1022A00D8;
  if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEBUG))
  {
    v8 = *(unsigned __int8 *)(a1 + 96);
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&buf[4] = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLMM, DisableMapMatchingRouteHints, %{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A748);
    v10 = *(unsigned __int8 *)(a1 + 96);
    v14[0] = 67240192;
    v14[1] = v10;
    LODWORD(v13) = 8;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 2, "CLMM, DisableMapMatchingRouteHints, %{public}d", v14, v13);
    v12 = (uint8_t *)v11;
    sub_100512490("Generic", 1, 0, 2, "CLMapRouteHintController::CLMapRouteHintController()", "%s\n", v11);
    if (v12 != buf)
      free(v12);
  }
  return a1;
}

void sub_1008BB998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  uint64_t v13;
  std::mutex *v14;

  a13 = (void **)(v13 + 72);
  sub_1008BC214(&a13);
  std::mutex::~mutex(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_1008BB9D4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)(a1 + 32);
  v3 = *(_QWORD **)(a1 + 56);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_1008BBA34(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  std::mutex *v8;
  NSObject *v9;
  int v10;
  __int128 *v16;
  __int128 *v17;
  __int128 v18;
  NSObject *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int v25;
  const char *v26;
  uint8_t *v27;
  _QWORD block[4];
  __int128 v29;
  uint64_t v30;
  NSObject *v31;
  _BYTE v32[24];
  _BYTE *v33;
  unint64_t v34;
  void *__p;
  void *v36;
  uint64_t v37;
  __int128 v38;
  unint64_t v39;
  void *v40;
  _BYTE *v41;
  uint64_t v42;
  __int128 v43;
  uint8_t buf[16];
  uint64_t v45;
  NSObject *v46;
  _QWORD v47[3];
  _QWORD *v48;

  v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (!*(_BYTE *)(a1 + 96))
  {
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215A748);
    v9 = qword_1022A00D8;
    if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEBUG))
    {
      v10 = -858993459 * ((*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 3);
      *(_DWORD *)buf = 67240704;
      *(_DWORD *)&buf[4] = v10;
      *(_WORD *)&buf[8] = 1026;
      *(_DWORD *)&buf[10] = a2;
      *(_WORD *)&buf[14] = 1026;
      LODWORD(v45) = a3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLMM,RouteHints,updateMapRouteHint,%{public}d,routingType,%{public}d,stepType,%{public}d", buf, 0x14u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_10215A748);
      v25 = -858993459 * ((*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 3);
      LODWORD(v39) = 67240704;
      HIDWORD(v39) = v25;
      LOWORD(v40) = 1026;
      *(_DWORD *)((char *)&v40 + 2) = a2;
      HIWORD(v40) = 1026;
      LODWORD(v41) = a3;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 2, "CLMM,RouteHints,updateMapRouteHint,%{public}d,routingType,%{public}d,stepType,%{public}d", &v39, 20);
      v27 = (uint8_t *)v26;
      sub_100512490("Generic", 1, 0, 2, "void CLMapRouteHintController::updateMapRouteHint(CLClientLocationRouteHintType, CLClientLocationRouteHintType, std::vector<CLMapsRouteHint> &)", "%s\n", v26);
      if (v27 != buf)
        free(v27);
    }
    v40 = 0;
    v41 = 0;
    v42 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    v43 = _Q0;
    v39 = __PAIR64__(a3, a2);
    *(_QWORD *)&v43 = CFAbsoluteTimeGetCurrent();
    *((_QWORD *)&v43 + 1) = sub_1001FCBB4();
    if (&v40 != (void **)a4)
      sub_1008AFA64((char *)&v40, *(char **)a4, *(_QWORD *)(a4 + 8), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 3));
    v16 = *(__int128 **)(a1 + 72);
    v17 = *(__int128 **)(a1 + 80);
    if (v16 != v17)
    {
      while (1)
      {
        if (*((char *)v16 + 23) < 0)
        {
          sub_100115CE4(buf, *(void **)v16, *((_QWORD *)v16 + 1));
        }
        else
        {
          v18 = *v16;
          v45 = *((_QWORD *)v16 + 2);
          *(_OWORD *)buf = v18;
        }
        v46 = *((_QWORD *)v16 + 3);
        sub_100270E34((uint64_t)v47, (uint64_t)(v16 + 2));
        v19 = v46;
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_1008BBF44;
        block[3] = &unk_10215A708;
        if (SHIBYTE(v45) < 0)
        {
          sub_100115CE4(&v29, *(void **)buf, *(unint64_t *)&buf[8]);
        }
        else
        {
          v29 = *(_OWORD *)buf;
          v30 = v45;
        }
        v31 = v46;
        v20 = (uint64_t)v48;
        if (!v48)
          goto LABEL_19;
        if (v48 != v47)
          break;
        v33 = v32;
        (*(void (**)(_QWORD *, _BYTE *))(v47[0] + 24))(v47, v32);
LABEL_21:
        v34 = v39;
        v36 = 0;
        v37 = 0;
        __p = 0;
        sub_1008BC19C(&__p, v40, (uint64_t)v41, 0xCCCCCCCCCCCCCCCDLL * ((v41 - (_BYTE *)v40) >> 3));
        v38 = v43;
        dispatch_async(v19, block);
        if (__p)
        {
          v36 = __p;
          operator delete(__p);
        }
        v21 = v33;
        if (v33 == v32)
        {
          v21 = v32;
          v22 = 4;
        }
        else
        {
          if (!v33)
            goto LABEL_28;
          v22 = 5;
        }
        (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_28:
        if (SHIBYTE(v30) < 0)
          operator delete((void *)v29);
        v23 = v48;
        if (v48 == v47)
        {
          v23 = v47;
          v24 = 4;
          goto LABEL_34;
        }
        if (v48)
        {
          v24 = 5;
LABEL_34:
          (*(void (**)(void))(*v23 + 8 * v24))();
        }
        if (SHIBYTE(v45) < 0)
          operator delete(*(void **)buf);
        v16 += 4;
        if (v16 == v17)
          goto LABEL_38;
      }
      v20 = (*(uint64_t (**)(void))(*v48 + 16))();
LABEL_19:
      v33 = (_BYTE *)v20;
      goto LABEL_21;
    }
LABEL_38:
    if (v40)
    {
      v41 = v40;
      operator delete(v40);
    }
  }
  std::mutex::unlock(v8);
}

void sub_1008BBEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::mutex *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  std::mutex::unlock(a12);
  _Unwind_Resume(a1);
}

void sub_1008BBF2C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0)
    operator delete(__p);
  JUMPOUT(0x1008BBF0CLL);
}

uint64_t sub_1008BBF44(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 88);
  if (!v2)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 48))(v2, a1 + 96);
}

__n128 sub_1008BBF70(__n128 *a1, uint64_t a2)
{
  __n128 v4;
  unint64_t v5;
  __n128 result;

  if (*(char *)(a2 + 55) < 0)
  {
    sub_100115CE4(&a1[2], *(void **)(a2 + 32), *(_QWORD *)(a2 + 40));
  }
  else
  {
    v4 = *(__n128 *)(a2 + 32);
    a1[3].n128_u64[0] = *(_QWORD *)(a2 + 48);
    a1[2] = v4;
  }
  a1[3].n128_u64[1] = *(_QWORD *)(a2 + 56);
  sub_100270E34((uint64_t)&a1[4], a2 + 64);
  v5 = *(_QWORD *)(a2 + 96);
  a1[6].n128_u64[1] = 0;
  a1[6].n128_u64[0] = v5;
  a1[7].n128_u64[0] = 0;
  a1[7].n128_u64[1] = 0;
  sub_1008BC19C(&a1[6].n128_u64[1], *(const void **)(a2 + 104), *(_QWORD *)(a2 + 112), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 3));
  result = *(__n128 *)(a2 + 128);
  a1[8] = result;
  return result;
}

void sub_1008BC014(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1008BB9D4(v1);
  _Unwind_Resume(a1);
}

void sub_1008BC040(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 104);
  if (v2)
  {
    *(_QWORD *)(a1 + 112) = v2;
    operator delete(v2);
  }
  v3 = *(_QWORD **)(a1 + 88);
  if (v3 == (_QWORD *)(a1 + 64))
  {
    v4 = 4;
    v3 = (_QWORD *)(a1 + 64);
  }
  else
  {
    if (!v3)
      goto LABEL_8;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_8:
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
}

uint64_t sub_1008BC0B4(uint64_t a1)
{
  std::mutex *v2;
  void **v4;

  *(_QWORD *)a1 = off_10215A6F8;
  v2 = (std::mutex *)(a1 + 8);
  v4 = (void **)(a1 + 72);
  sub_1008BC214(&v4);
  std::mutex::~mutex(v2);
  return a1;
}

void sub_1008BC108(uint64_t a1)
{
  std::mutex *v1;
  void **v2;

  *(_QWORD *)a1 = off_10215A6F8;
  v1 = (std::mutex *)(a1 + 8);
  v2 = (void **)(a1 + 72);
  sub_1008BC214(&v2);
  std::mutex::~mutex(v1);
  operator delete();
}

void sub_1008BC170(id a1)
{
  qword_1022A00D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

_QWORD *sub_1008BC19C(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_100593090(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1008BC1F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008BC214(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 64;
        sub_1008BC298((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1008BC298(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)(a2 + 56);
  if (v3 == (_QWORD *)(a2 + 32))
  {
    v4 = 4;
    v3 = (_QWORD *)(a2 + 32);
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
}

uint64_t sub_1008BC2FC(uint64_t *a1, __int128 *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  void *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  uint64_t *v15;

  v3 = (a1[1] - *a1) >> 6;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 58)
    sub_100259694();
  v6 = a1[2] - *a1;
  if (v6 >> 5 > v4)
    v4 = v6 >> 5;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFC0)
    v7 = 0x3FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  v15 = a1 + 2;
  if (v7)
    v8 = (char *)sub_1002697F0((uint64_t)(a1 + 2), v7);
  else
    v8 = 0;
  v11 = v8;
  v12 = &v8[64 * v3];
  v14 = &v8[64 * v7];
  sub_1008BC3E8((_DWORD)a1 + 16, v12, a2);
  v13 = v12 + 64;
  sub_1008BC460(a1, &v11);
  v9 = a1[1];
  sub_1008BC684(&v11);
  return v9;
}

void sub_1008BC3D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1008BC684((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008BC3E8(int a1, _QWORD *__dst, __int128 *a3)
{
  __int128 v5;

  if (*((char *)a3 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v5 = *a3;
    __dst[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)__dst = v5;
  }
  __dst[3] = *((_QWORD *)a3 + 3);
  return sub_100270E34((uint64_t)(__dst + 4), (uint64_t)(a3 + 2));
}

void sub_1008BC444(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008BC460(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1008BC4D4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1008BC4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v14[3];
  char v15;
  __int128 v16;
  __int128 v17;

  v7 = a7;
  *(_QWORD *)&v17 = a6;
  *((_QWORD *)&v17 + 1) = a7;
  v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  v15 = 0;
  if (a3 == a5)
  {
    v12 = a6;
  }
  else
  {
    v9 = a3 - 32;
    do
    {
      v10 = v9 - 32;
      v11 = *(_OWORD *)(v9 - 32);
      *(_QWORD *)(v7 - 48) = *(_QWORD *)(v9 - 16);
      *(_OWORD *)(v7 - 64) = v11;
      *(_QWORD *)(v9 - 24) = 0;
      *(_QWORD *)(v9 - 16) = 0;
      *(_QWORD *)(v9 - 32) = 0;
      *(_QWORD *)(v7 - 40) = *(_QWORD *)(v9 - 8);
      sub_1008BC59C(v7 - 32, v9);
      v7 = *((_QWORD *)&v17 + 1) - 64;
      *((_QWORD *)&v17 + 1) -= 64;
      v9 -= 64;
    }
    while (v10 != a5);
    v12 = v17;
  }
  v15 = 1;
  sub_1008BC600((uint64_t)v14);
  return v12;
}

uint64_t sub_1008BC59C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

uint64_t sub_1008BC600(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1008BC634((uint64_t *)a1);
  return a1;
}

void sub_1008BC634(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_1008BC298(v3, v1);
      v1 += 64;
    }
    while (v1 != v2);
  }
}

void **sub_1008BC684(void **a1)
{
  sub_1008BC6B4(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_1008BC6B4(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 64;
    sub_1008BC298(v4, i - 64);
  }
}

uint64_t sub_1008BC6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  __int128 v7;
  uint64_t v8;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0)
        operator delete(*(void **)a4);
      v7 = *(_OWORD *)v5;
      *(_QWORD *)(a4 + 16) = *(_QWORD *)(v5 + 16);
      *(_OWORD *)a4 = v7;
      *(_BYTE *)(v5 + 23) = 0;
      *(_BYTE *)v5 = 0;
      *(_QWORD *)(a4 + 24) = *(_QWORD *)(v5 + 24);
      v8 = v5 + 32;
      sub_10027839C((_QWORD *)(a4 + 32), v8);
      a4 += 64;
      v5 = v8 + 32;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void sub_1008BC830(id a1)
{
  qword_102305620 = (uint64_t)objc_msgSend(objc_alloc((Class)CLDispatchSilo), "initWithIdentifier:", CFSTR("CLFitnessTrackingNotifierSilo"));
}

uint64_t sub_1008BC8E4(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008BCA70;
  block[3] = &unk_10212BB58;
  block[4] = a1;
  if (qword_102305630 != -1)
    dispatch_once(&qword_102305630, block);
  return qword_102310D38;
}

uint64_t sub_1008BCA70()
{
  uint64_t result;

  sub_100197040();
  if (sub_100195F08())
    operator new();
  sub_100197040();
  if ((sub_1000C4240() & 1) != 0 || (sub_100197040(), result = sub_100081BD0(), (_DWORD)result))
    operator new();
  return result;
}

void sub_1008BCB04()
{
  operator delete();
}

uint64_t sub_1008BCB44(uint64_t result)
{
  *(_BYTE *)(result + 108) = 1;
  return result;
}

const void *sub_1008BCB50(const void *a1, void *a2)
{
  uint64_t v3;
  BOOL *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  __CFNotificationCenter *DarwinNotifyCenter;
  const __CFString *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v3 = sub_1008BCCCC((uint64_t)a1, "CLFitnessTrackingNotifier", a2);
  *(_QWORD *)v3 = off_10215A798;
  *(_BYTE *)(v3 + 109) = 0;
  v4 = (BOOL *)(v3 + 109);
  *(_QWORD *)(v3 + 112) = 0;
  *(_BYTE *)(v3 + 120) = 1;
  v5 = sub_100127B9C();
  sub_100081C10(v5, &v12);
  sub_1001E4874(v12, "AllowUnactivatedFitnessTracking", v4);
  v6 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (qword_102305638 != -1)
    dispatch_once(&qword_102305638, &stru_10215A938);
  if (qword_102305640 && off_1022A5388())
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    v10 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", off_1022A5388());
    CFNotificationCenterAddObserver(DarwinNotifyCenter, a1, (CFNotificationCallback)sub_1008BCD68, v10, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  }
  (*(void (**)(const void *))(*(_QWORD *)a1 + 240))(a1);
  return a1;
}

void sub_1008BCCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_100261F44((uint64_t)&a9);
  sub_1008BCF88(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_1008BCCCC(uint64_t a1, char *a2, void *a3)
{
  *(_QWORD *)a1 = off_10215A9A8;
  sub_1015A2E04((_QWORD *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 32) = a3;
  *(_QWORD *)(a1 + 40) = objc_msgSend(a3, "silo");
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 56) = a1 + 64;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_1008BCD4C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_1008BCD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  NSObject *v11;
  id v12;
  _QWORD v13[9];
  os_activity_scope_state_s state;
  char v15;
  uint8_t buf[4];
  int v17;
  __int16 v18;
  const char *v19;
  __int16 v20;
  const char *v21;
  __int16 v22;
  uint64_t v23;

  CLProfilingIdentify("CLFitnessTrackingNotifier::activityMoveModeChanged");
  objc_msgSend(objc_msgSend(*(id *)(a2 + 32), "silo"), "assertOutside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215A918);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v15 = 1;
    v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFitnessTrackingNotifier::activityMoveModeChanged", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215A918);
    v11 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v17 = 0;
      v18 = 2082;
      v19 = "";
      v20 = 2082;
      v21 = "activity";
      v22 = 2050;
      v23 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFitnessTrackingNotifier::activityMoveModeChanged\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v15 = 0;
  }
  v12 = objc_msgSend(*(id *)(a2 + 32), "silo");
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1008BDACC;
  v13[3] = &unk_1021382B0;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  objc_msgSend(v12, "sync:", v13);
  if (v15)
    os_activity_scope_leave(&state);
}

void sub_1008BCF68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008BCF88(uint64_t a1)
{
  *(_QWORD *)a1 = off_10215A9A8;
  objc_msgSend(*(id *)(a1 + 48), "invalidate");

  sub_10007CDDC(a1 + 80, *(_QWORD **)(a1 + 88));
  sub_1004A48E8(a1 + 56, *(_QWORD **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_1008BCFFC(void *a1)
{
  __CFNotificationCenter *DarwinNotifyCenter;
  const __CFString *v3;

  *(_QWORD *)a1 = off_10215A798;
  if (qword_102305638 != -1)
    dispatch_once(&qword_102305638, &stru_10215A938);
  if (qword_102305640 && off_1022A5388())
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    v3 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", off_1022A5388());
    CFNotificationCenterRemoveObserver(DarwinNotifyCenter, a1, v3, 0);
  }
  (*(void (**)(void *))(*(_QWORD *)a1 + 16))(a1);
  return sub_1008BCF88((uint64_t)a1);
}

_QWORD *sub_1008BD0C8@<X0>(_DWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  char __str[32];

  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_1015A2E04(a2, __str);
}

BOOL sub_1008BD140(uint64_t a1, int *a2)
{
  int v2;

  v2 = *a2;
  if (*a2 <= 7)
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 224))(a1);
  return v2 < 8;
}

BOOL sub_1008BD178(uint64_t a1, int *a2)
{
  int v2;
  NSObject *v4;
  int v5;
  int v7;
  const char *v8;
  uint8_t *v9;
  _DWORD v10[4];
  uint8_t buf[4];
  int v12;

  v2 = *a2;
  if (*a2 >= 8)
  {
    if (qword_10229FF10 != -1)
      dispatch_once(&qword_10229FF10, &stru_10215A958);
    v4 = qword_10229FF18;
    if (os_log_type_enabled((os_log_t)qword_10229FF18, OS_LOG_TYPE_FAULT))
    {
      v5 = *a2;
      *(_DWORD *)buf = 67240192;
      v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Unknown notification during unregistration: %{public}d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FF10 != -1)
        dispatch_once(&qword_10229FF10, &stru_10215A958);
      v7 = *a2;
      v10[0] = 67240192;
      v10[1] = v7;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF18, 17, "Unknown notification during unregistration: %{public}d", v10, 8);
      v9 = (uint8_t *)v8;
      sub_100512490("Generic", 1, 0, 0, "virtual BOOL CLFitnessTrackingNotifier::unregisterForNotificationInternal(const CLFitnessTrackingNotifier_Type::Notification &)", "%s\n", v8);
      if (v9 != buf)
        free(v9);
    }
  }
  return v2 < 8;
}

uint64_t sub_1008BD33C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 120) = a2;
  return result;
}

uint64_t sub_1008BD344(uint64_t result, int a2)
{
  uint64_t v3;
  NSObject *v4;
  _BOOL4 v5;
  uint8_t buf[4];
  int v7;
  __int16 v8;
  const char *v9;
  __int16 v10;
  _BOOL4 v11;

  if (*(_DWORD *)(result + 112) != a2)
  {
    v3 = result;
    *(_DWORD *)(result + 112) = a2;
    v5 = a2 == 2;
    if (qword_10229FC70 != -1)
      dispatch_once(&qword_10229FC70, &stru_10215A978);
    v4 = qword_10229FC78;
    if (os_log_type_enabled((os_log_t)qword_10229FC78, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289282;
      v7 = 0;
      v8 = 2082;
      v9 = "";
      v10 = 1026;
      v11 = a2 == 2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Motion Sensor Logging\", \"Always On\":%{public}hhd}", buf, 0x18u);
    }
    *(_DWORD *)buf = 3;
    return (*(uint64_t (**)(uint64_t, uint8_t *, _BOOL4 *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 152))(v3, buf, &v5, 1, 0xFFFFFFFFLL, 0);
  }
  return result;
}

uint64_t sub_1008BD488(_BYTE *a1)
{
  a1[120] = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 216))(a1);
  return (*(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 224))(a1);
}

uint64_t sub_1008BD4C0()
{
  const char *v0;
  _BYTE v2[140];
  int v3;

  if (qword_102305638 != -1)
    dispatch_once(&qword_102305638, &stru_10215A938);
  if (!qword_102305640 || !off_1022A5388())
    return 1;
  v3 = 0;
  sub_1005695B4((uint64_t)v2, CFSTR("com.apple.nanolifestyle"), 1, (uint64_t)CFSTR("mobile"));
  v0 = (const char *)objc_msgSend((id)off_1022A5390(), "UTF8String");
  sub_1001E4B84((uint64_t)v2, v0, &v3);
  sub_100569628(v2);
  if (v3 == 2)
    return 2;
  else
    return 1;
}

void sub_1008BD58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100569628(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1008BD5A0(_DWORD *a1)
{
  uint64_t result;
  NSObject *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  uint8_t *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  uint8_t buf[4];
  const char *v12;

  result = sub_1008BD4C0();
  if (a1[29] != (_DWORD)result)
  {
    a1[29] = result;
    HIDWORD(v8) = result;
    if (qword_10229FC70 != -1)
      dispatch_once(&qword_10229FC70, &stru_10215A978);
    v3 = qword_10229FC78;
    if (os_log_type_enabled((os_log_t)qword_10229FC78, OS_LOG_TYPE_DEFAULT))
    {
      if (a1[29] == 1)
        v4 = "ActiveEnergy";
      else
        v4 = "MoveMinute";
      *(_DWORD *)buf = 136446210;
      v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CM Activity Move Mode,%{public}s", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FC70 != -1)
        dispatch_once(&qword_10229FC70, &stru_10215A978);
      if (a1[29] == 1)
        v5 = "ActiveEnergy";
      else
        v5 = "MoveMinute";
      v9 = 136446210;
      v10 = v5;
      LODWORD(v8) = 12;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC78, 0, "CM Activity Move Mode,%{public}s", &v9, v8);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLFitnessTrackingNotifier::updateActivityMoveMode()", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    *(_DWORD *)buf = 4;
    return (*(uint64_t (**)(_DWORD *, uint8_t *, char *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, buf, (char *)&v8 + 4, 1, 0xFFFFFFFFLL, 0);
  }
  return result;
}

uint64_t sub_1008BD7C4(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v12;
  id v13;
  id v14;

  *(_QWORD *)a1 = off_10215AA88;
  *(_QWORD *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]([CLNotifierClientAdapter alloc], "initWithClient:", a1);
  *(_QWORD *)(a1 + 24) = a5;
  *(_QWORD *)(a1 + 32) = a6;
  if (*((char *)a3 + 23) >= 0)
    v12 = a3;
  else
    v12 = (uint64_t *)*a3;
  v13 = objc_msgSend(objc_msgSend(a4, "vendor"), "proxyForService:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(_QWORD *)(a1 + 16) = v13;
  v14 = v13;
  if (a2)
    objc_msgSend(*(id *)(a1 + 16), "setDelegateEntityName:", a2);
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(_QWORD *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_1008BD898()
{
  operator new();
}

void sub_1008BD944(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  operator delete();
}

void sub_1008BD984(uint64_t a1)
{
  sub_1008BDBB8(a1);
  operator delete();
}

id sub_1008BD9A8(uint64_t a1, uint64_t a2, void *a3)
{
  int v3;
  id result;
  int v6;

  v3 = a2;
  result = sub_1008271E8(a3, a2);
  if (result)
  {
    v6 = v3;
    return (id)(*(uint64_t (**)(_QWORD, int *, id, _QWORD))(a1 + 24))(0, &v6, result, *(_QWORD *)(a1 + 32));
  }
  return result;
}

void sub_1008BD9F4(id a1)
{
  qword_1022A0228 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1008BDA20(id a1)
{
  qword_102305640 = (uint64_t)dlopen("/System/Library/Frameworks/HealthKit.framework/HealthKit", 2);
}

uint64_t sub_1008BDA48()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_102305638 != -1)
    dispatch_once(&qword_102305638, &stru_10215A938);
  v0 = (uint64_t *)dlsym((void *)qword_102305640, "HKActivityMoveModeDidUpdateNotification");
  if (v0)
  {
    result = *v0;
    qword_102305648 = result;
  }
  else
  {
    result = qword_102305648;
  }
  off_1022A5388 = sub_1008BDAC0;
  return result;
}

uint64_t sub_1008BDAC0()
{
  return qword_102305648;
}

uint64_t sub_1008BDACC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 240))(*(_QWORD *)(a1 + 32));
}

void sub_1008BDADC(id a1)
{
  qword_10229FF18 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fitness");
}

void sub_1008BDB08(id a1)
{
  qword_10229FC78 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_1008BDB34()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_102305638 != -1)
    dispatch_once(&qword_102305638, &stru_10215A938);
  v0 = (uint64_t *)dlsym((void *)qword_102305640, "HKActivityMoveModeDefaultsKey");
  if (v0)
  {
    result = *v0;
    qword_102305650 = result;
  }
  else
  {
    result = qword_102305650;
  }
  off_1022A5390 = sub_1008BDBAC;
  return result;
}

uint64_t sub_1008BDBAC()
{
  return qword_102305650;
}

uint64_t sub_1008BDBB8(uint64_t a1)
{
  id *v2;

  *(_QWORD *)a1 = off_10215AA88;
  v2 = (id *)(a1 + 8);
  objc_msgSend(*(id *)(a1 + 16), "forget:", *(_QWORD *)(a1 + 8));

  objc_msgSend(*v2, "invalidate");
  *v2 = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return a1;
}

void sub_1008BDE10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1008BDE28(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result;
  id v8;
  void *v9;
  double v10;

  result = objc_msgSend(objc_msgSend(objc_msgSend(a2, "startDate"), "laterDate:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)), "isEqualToDate:", objc_msgSend(a2, "startDate"));
  if ((result & 1) == 0)
  {
    if (objc_msgSend(objc_msgSend(objc_msgSend(a2, "startDate"), "earlierDate:", objc_msgSend(*(id *)(a1 + 32), "startDate")), "isEqualToDate:", objc_msgSend(a2, "startDate")))
    {
      v8 = objc_msgSend(*(id *)(a1 + 32), "startDate");
      *a4 = 1;
    }
    else
    {
      v8 = objc_msgSend(a2, "startDate");
    }
    v9 = *(void **)(a1 + 40);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "timeIntervalSinceDate:", v8);
    objc_msgSend(v9, "addInterval:type:confidence:", +[CLFenceAnalyticsCommon motionTypeFromMotionActivity:](CLFenceAnalyticsCommon, "motionTypeFromMotionActivity:", a2), objc_msgSend(a2, "confidence"), v10);

    result = objc_msgSend(objc_msgSend(a2, "startDate"), "copy");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  }
  return result;
}

int64_t sub_1008BDFC4(id a1, CLFenceAnalyticsMotionActivityHistogramBin *a2, CLFenceAnalyticsMotionActivityHistogramBin *a3)
{
  double v4;
  double v5;
  double v6;

  -[CLFenceAnalyticsMotionActivityHistogramBin interval](a2, "interval");
  v5 = v4;
  -[CLFenceAnalyticsMotionActivityHistogramBin interval](a3, "interval");
  if (v5 <= v6)
    return 1;
  else
    return -1;
}

void sub_1008BE2FC(id a1)
{
  qword_102305670 = (uint64_t)objc_msgSend(objc_alloc((Class)CLDispatchSilo), "initWithIdentifier:", CFSTR("CLUsageSyncManagerSilo"));
}

void sub_1008BE36C(id a1)
{
  uint64_t v1;

  if (objc_opt_class(IDSService, v1))
  {
    sub_100197040();
    if (sub_10019DF90() || (sub_100197040(), sub_100195F08()))
      byte_102305680 = 1;
  }
}

void sub_1008BE5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v4;
  NSObject *v5;
  NSObject *v7;
  int v8;
  int v9;
  __int16 v10;
  const char *v11;
  __int16 v12;
  uint64_t v13;

  if (a3)
  {
    if (qword_1022A01D0 != -1)
      dispatch_once(&qword_1022A01D0, &stru_10215AC50);
    v4 = qword_1022A01D8;
    if (os_log_type_enabled((os_log_t)qword_1022A01D8, OS_LOG_TYPE_ERROR))
    {
      v8 = 68289282;
      v9 = 0;
      v10 = 2082;
      v11 = "";
      v12 = 2114;
      v13 = a3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#usesync IDS service failed to initialize\", \"Error\":%{public, location:escape_only}@}", (uint8_t *)&v8, 0x1Cu);
      if (qword_1022A01D0 != -1)
        dispatch_once(&qword_1022A01D0, &stru_10215AC50);
    }
    v5 = qword_1022A01D8;
    if (os_signpost_enabled((os_log_t)qword_1022A01D8))
    {
      v8 = 68289282;
      v9 = 0;
      v10 = 2082;
      v11 = "";
      v12 = 2114;
      v13 = a3;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "#usesync IDS service failed to initialize", "{\"msg%{public}.0s\":\"#usesync IDS service failed to initialize\", \"Error\":%{public, location:escape_only}@}", (uint8_t *)&v8, 0x1Cu);
    }
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setService:", a2);
    if (qword_1022A01D0 != -1)
      dispatch_once(&qword_1022A01D0, &stru_10215AC50);
    v7 = qword_1022A01D8;
    if (os_log_type_enabled((os_log_t)qword_1022A01D8, OS_LOG_TYPE_DEFAULT))
    {
      v8 = 68289026;
      v9 = 0;
      v10 = 2082;
      v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#usesync IDS became available so resuming silo\"}", (uint8_t *)&v8, 0x12u);
    }
    objc_msgSend(*(id *)(a1 + 40), "resume");
  }
}

void sub_1008BEDF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27)
{
  if (a20 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  _Unwind_Resume(exception_object);
}

id sub_1008BEE64(uint64_t a1, unsigned int *a2, uint64_t a3, void *a4)
{
  return objc_msgSend(a4, "onClientManagerNotification:data:", *a2, a3);
}

id sub_1008BEE74(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "drainErrorQueue");
}

id sub_1008BF074(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleUnpair");
}

id sub_1008BF0E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handlePair");
}

void sub_1008BF390(id a1, void *a2)
{
  sub_1007EFDD8((uint64_t)a2);
}

id sub_1008BF5D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handlePair");
}

id sub_1008BF644(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleUnpair");
}

void sub_1008C06C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1008C06E4(uint64_t a1)
{
  id v2;

  sub_100197040();
  if (sub_10019DF90())
  {
    if (qword_1023056F0 != -1)
      dispatch_once(&qword_1023056F0, &stru_10215AC90);
    v2 = objc_msgSend((id)qword_1023056E8, "objectForKeyedSubscript:", a1);
    if (v2)
      return v2;
  }
  return (id)a1;
}

id sub_1008C0750(uint64_t a1, uint64_t a2)
{
  void *__p[2];
  char v6;

  sub_1015A2E04(__p, (char *)objc_msgSend(*(id *)(a1 + 32), "UTF8String"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = sub_1007DF190(a2, (uint64_t *)__p);
  if (v6 < 0)
    operator delete(__p[0]);
  return *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
}

void sub_1008C07C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

id sub_1008C07E0(uint64_t a1)
{
  id result;

  result = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
    return objc_msgSend(*(id *)(a1 + 32), "client:didChangeUsageData:", *(_QWORD *)(a1 + 40));
  return result;
}

id sub_1008C14CC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "onStatusBarIconChangeInternal:", dword_102305690);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 20) = 0;
  return result;
}

void sub_1008C193C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_1008C1954(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = sub_1007DEE7C(a2);
  return *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
}

void sub_1008C1990(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  NSObject *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD v15[4];
  _QWORD v16[4];
  _BYTE v17[128];
  uint64_t buf;
  __int16 v19;
  const char *v20;

  v2 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if ((objc_msgSend(*(id *)(a1 + 32), "isPaired") & 1) == 0)
  {
    if (qword_1022A01D0 != -1)
      dispatch_once(&qword_1022A01D0, &stru_10215AC50);
    v3 = qword_1022A01D8;
    if (os_log_type_enabled((os_log_t)qword_1022A01D8, OS_LOG_TYPE_INFO))
    {
      buf = 68289026;
      v19 = 2082;
      v20 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"#usesync Dropping full sync due to being unpaired\"}", (uint8_t *)&buf, 0x12u);
    }
  }
  v4 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v5 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v12 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(v4, "setObject:forKeyedSubscript:", objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "objectForKeyedSubscript:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i)), *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i));
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v17, 16);
    }
    while (v7);
  }
  v15[0] = IDSSendMessageOptionTimeoutKey;
  v15[1] = IDSSendMessageOptionEncryptPayloadKey;
  v16[0] = &off_10221B780;
  v16[1] = &__kCFBooleanTrue;
  v15[2] = IDSSendMessageOptionForceLocalDeliveryKey;
  v15[3] = IDSSendMessageOptionQueueOneIdentifierKey;
  v16[2] = &__kCFBooleanTrue;
  v16[3] = CFSTR("kCLUsageSyncResyncResponseQueueIdentifierKey");
  objc_msgSend(*(id *)(a1 + 32), "sendMessageWithMessageType:dataPayload:priority:idsOptions:", CFSTR("kCLUsageSyncMessageResyncResponseKey"), v4, 300, +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v16, v15, 4));
  if (qword_1022A01D0 != -1)
    dispatch_once(&qword_1022A01D0, &stru_10215AC50);
  v10 = qword_1022A01D8;
  if (os_log_type_enabled((os_log_t)qword_1022A01D8, OS_LOG_TYPE_DEFAULT))
  {
    buf = 68289026;
    v19 = 2082;
    v20 = "";
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#usesync Enqueued all usage data\"}", (uint8_t *)&buf, 0x12u);
  }
}

void sub_1008C27B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1008C27D4(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  void *__p[2];
  char v6;

  sub_1015A2E04(__p, (char *)objc_msgSend(*(id *)(a1 + 32), "UTF8String"));
  sub_1007DF3F4(a2, (uint64_t *)__p, *(void **)(a1 + 40));
  if (v6 < 0)
    operator delete(__p[0]);
  result = sub_1007DF9F0(a2, *(void **)(a1 + 40));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = result;
  return result;
}

void sub_1008C2848(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008C2864(uint64_t result)
{
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24))
    *(_BYTE *)(*(_QWORD *)(result + 32) + 21) = 1;
  return result;
}

void sub_1008C2BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

id sub_1008C2BE0(uint64_t a1, uint64_t a2)
{
  void *v4;
  id result;
  id v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  sub_1007DF8E4(a2, *(_QWORD *)(a1 + 32));
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v4 = *(void **)(a1 + 32);
  result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)v10;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v10 != v7)
          objc_enumerationMutation(v4);
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = sub_1007DF9F0(a2, objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", *(_QWORD *)(*((_QWORD *)&v9 + 1)+ 8 * (_QWORD)v8)));
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      v6 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_1008C2CF8(uint64_t result)
{
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24))
    *(_BYTE *)(*(_QWORD *)(result + 32) + 21) = 1;
  return result;
}

void sub_1008C366C(id a1, void *a2)
{
  NSObject *v3;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;

  if (qword_1022A01D0 != -1)
    dispatch_once(&qword_1022A01D0, &stru_10215AC50);
  v3 = qword_1022A01D8;
  if (os_log_type_enabled((os_log_t)qword_1022A01D8, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    v5 = 2082;
    v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#usesync paired device is no longer nearby.  Removing usage\"}", (uint8_t *)v4, 0x12u);
  }
  sub_1007EFDD8((uint64_t)a2);
}

uint64_t sub_1008C374C(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 21) = 0;
  *(_BYTE *)(*(_QWORD *)(result + 32) + 22) = 1;
  return result;
}

id sub_1008C3774(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "requestFullResync");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 22) = 0;
  return result;
}

void sub_1008C3908(id a1)
{
  qword_1022A01D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

Class sub_1008C3934()
{
  Class result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  result = objc_getClass("NRPairedDeviceRegistry");
  qword_102305698 = (uint64_t)result;
  off_1022A5458 = sub_1008C3990;
  return result;
}

uint64_t sub_1008C3990()
{
  return qword_102305698;
}

void sub_1008C399C(id a1)
{
  qword_1023056A8 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry", 2);
}

uint64_t sub_1008C39C4()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  v0 = (uint64_t *)dlsym((void *)qword_1023056A8, "NRPairedDeviceRegistryDeviceDidUnpairNotification");
  if (v0)
  {
    result = *v0;
    qword_1023056B0 = result;
  }
  else
  {
    result = qword_1023056B0;
  }
  off_1022A5460 = sub_1008C3A3C;
  return result;
}

uint64_t sub_1008C3A3C()
{
  return qword_1023056B0;
}

uint64_t sub_1008C3A48()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  v0 = (uint64_t *)dlsym((void *)qword_1023056A8, "NRPairedDeviceRegistryDeviceDidPairNotification");
  if (v0)
  {
    result = *v0;
    qword_1023056B8 = result;
  }
  else
  {
    result = qword_1023056B8;
  }
  off_1022A5468 = sub_1008C3AC0;
  return result;
}

uint64_t sub_1008C3AC0()
{
  return qword_1023056B8;
}

uint64_t sub_1008C3ACC()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  v0 = (uint64_t *)dlsym((void *)qword_1023056A8, "NRPairedDeviceRegistryDeviceDidBecomeActive");
  if (v0)
  {
    result = *v0;
    qword_1023056C0 = result;
  }
  else
  {
    result = qword_1023056C0;
  }
  off_1022A5470 = sub_1008C3B44;
  return result;
}

uint64_t sub_1008C3B44()
{
  return qword_1023056C0;
}

uint64_t sub_1008C3B50()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  v0 = (uint64_t *)dlsym((void *)qword_1023056A8, "NRPairedDeviceRegistryDeviceDidBecomeInactive");
  if (v0)
  {
    result = *v0;
    qword_1023056C8 = result;
  }
  else
  {
    result = qword_1023056C8;
  }
  off_1022A5478 = sub_1008C3BC8;
  return result;
}

uint64_t sub_1008C3BC8()
{
  return qword_1023056C8;
}

uint64_t sub_1008C3BD4()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  v0 = (uint64_t *)dlsym((void *)qword_1023056A8, "NRDevicePropertyPairingID");
  if (v0)
  {
    result = *v0;
    qword_1023056D0 = result;
  }
  else
  {
    result = qword_1023056D0;
  }
  off_1022A5480 = sub_1008C3C4C;
  return result;
}

uint64_t sub_1008C3C4C()
{
  return qword_1023056D0;
}

uint64_t sub_1008C3C58()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  v0 = (uint64_t *)dlsym((void *)qword_1023056A8, "NRDevicePropertySerialNumber");
  if (v0)
  {
    result = *v0;
    qword_1023056D8 = result;
  }
  else
  {
    result = qword_1023056D8;
  }
  off_1022A5488 = sub_1008C3CD0;
  return result;
}

uint64_t sub_1008C3CD0()
{
  return qword_1023056D8;
}

uint64_t sub_1008C3CDC()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1023056A0 != -1)
    dispatch_once(&qword_1023056A0, &stru_10215AC70);
  v0 = (uint64_t *)dlsym((void *)qword_1023056A8, "_NRDevicePropertyBluetoothIdentifier");
  if (v0)
  {
    result = *v0;
    qword_1023056E0 = result;
  }
  else
  {
    result = qword_1023056E0;
  }
  off_1022A5490 = sub_1008C3D54;
  return result;
}

uint64_t sub_1008C3D54()
{
  return qword_1023056E0;
}

void sub_1008C3D60(id a1)
{
  qword_1023056E8 = (uint64_t)objc_alloc_init((Class)NSMutableDictionary);
  objc_msgSend((id)sub_1007DA964(), "enumerateKeysAndObjectsUsingBlock:", &stru_10215ACB0);
}

void sub_1008C3D90(id a1, id a2, id a3, BOOL *a4)
{
  objc_msgSend((id)qword_1023056E8, "setObject:forKeyedSubscript:", a2, a3);
}

uint64_t sub_1008C3DA4()
{
  sub_1015A2E04(qword_102305658, "UsageSyncManager");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305658, (void *)&_mh_execute_header);
}

uint64_t sub_1008C3DE8(uint64_t a1)
{
  uint64_t v2;
  id v3;
  double v4;
  int v5;
  double v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char v10;
  int v11;
  char v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;
  int v17;
  char v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  double v22;
  int v23;
  double v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  int v28;
  int v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  NSObject *v34;
  int v35;
  int v37;
  const char *v38;
  uint8_t *v39;
  uint8_t buf[8];
  std::__shared_weak_count *v41;
  double v42;

  *(_QWORD *)a1 = 0;
  v2 = a1 + 32;
  sub_1015A2E04((_QWORD *)(a1 + 8), "CLRavenGeoMapBuildingDataManager, query for buildings");
  sub_1002433B8(v2);
  *(_BYTE *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = 1;
  *(_QWORD *)(a1 + 128) = 0x403E000000000000;
  *(_QWORD *)(a1 + 272) = 0x5FFFFFFFFLL;
  *(_DWORD *)(a1 + 280) = 3;
  *(_DWORD *)(a1 + 284) = 16777217;
  *(_QWORD *)(a1 + 288) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 296) = 0;
  *(_WORD *)(a1 + 304) = 1;
  *(_BYTE *)(a1 + 306) = 0;
  *(_QWORD *)(a1 + 328) = 0;
  *(_QWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 312) = 0x4069000000000000;
  *(_QWORD *)(a1 + 320) = a1 + 328;
  v3 = objc_alloc_init((Class)GEOMapFeatureAccess);
  *(_QWORD *)(a1 + 88) = v3;
  if (v3)
  {
    objc_msgSend(v3, "setAllowNetworkTileLoad:", 1);
    objc_msgSend(*(id *)(a1 + 88), "setAllowStaleData:", 1);
  }
  sub_1001E4804(buf);
  v4 = *(double *)(a1 + 128);
  v42 = 0.0;
  v5 = sub_1001FD98C(*(uint64_t *)buf, "MinimumDistanceForNewBuildingQueryInRaven", &v42);
  v6 = v42;
  if (!v5)
    v6 = v4;
  *(double *)(a1 + 128) = v6;
  v7 = v41;
  if (v41)
  {
    p_shared_owners = (unint64_t *)&v41->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  CLMotionActivity::init((CLMotionActivity *)(a1 + 136));
  sub_1001E4804(buf);
  v10 = *(_BYTE *)(a1 + 305);
  LOBYTE(v42) = 0;
  v11 = sub_1001E4874(*(uint64_t *)buf, "EnableRavenBuildingDataQueryInNonDUSignalEnvironment", (BOOL *)&v42);
  v12 = LOBYTE(v42);
  if (!v11)
    v12 = v10;
  *(_BYTE *)(a1 + 305) = v12;
  v13 = v41;
  if (v41)
  {
    v14 = (unint64_t *)&v41->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  sub_1001E4804(buf);
  v16 = *(_BYTE *)(a1 + 304);
  LOBYTE(v42) = 0;
  v17 = sub_1001E4874(*(uint64_t *)buf, "EnableRavenBuildingDataAndRayTracingTileQueryForOnlyPedestrianActivity", (BOOL *)&v42);
  v18 = LOBYTE(v42);
  if (!v17)
    v18 = v16;
  *(_BYTE *)(a1 + 304) = v18;
  v19 = v41;
  if (v41)
  {
    v20 = (unint64_t *)&v41->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  sub_1001E4804(buf);
  v22 = *(double *)(a1 + 312);
  v42 = 0.0;
  v23 = sub_1001FD98C(*(uint64_t *)buf, "BuildingQueryRadiusInRaven", &v42);
  v24 = v42;
  if (!v23)
    v24 = v22;
  *(double *)(a1 + 312) = v24;
  v25 = v41;
  if (v41)
  {
    v26 = (unint64_t *)&v41->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  sub_100197040();
  if ((sub_100195F08() & 1) != 0)
    goto LABEL_40;
  sub_1001E4804(buf);
  LOBYTE(v42) = 0;
  v28 = sub_1001E4874(*(uint64_t *)buf, "UseMapsBuildingTileStyleBasic", (BOOL *)&v42);
  if (LOBYTE(v42))
    v29 = v28;
  else
    v29 = 0;
  v30 = v41;
  if (!v41)
    goto LABEL_39;
  v31 = (unint64_t *)&v41->__shared_owners_;
  do
    v32 = __ldaxr(v31);
  while (__stlxr(v32 - 1, v31));
  if (!v32)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
    if (v29)
      goto LABEL_40;
  }
  else
  {
LABEL_39:
    if (v29)
    {
LABEL_40:
      v33 = 0;
      goto LABEL_43;
    }
  }
  v33 = 1;
LABEL_43:
  *(_DWORD *)(a1 + 120) = v33;
  if (qword_1022A00A0 != -1)
    dispatch_once(&qword_1022A00A0, &stru_10215AD30);
  v34 = qword_1022A00A8;
  if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_DEBUG))
  {
    v35 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&buf[4] = v35;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEBUG, "clrgmd,mapsBuildingTileStyleToUse,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    v37 = *(_DWORD *)(a1 + 120);
    LODWORD(v42) = 67240192;
    HIDWORD(v42) = v37;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 2, "clrgmd,mapsBuildingTileStyleToUse,%{public}d", &v42, 8);
    v39 = (uint8_t *)v38;
    sub_100512490("Generic", 1, 0, 2, "CLRavenGeoMapBuildingDataManager::CLRavenGeoMapBuildingDataManager()", "%s\n", v38);
    if (v39 != buf)
      free(v39);
  }
  sub_1001D4210(a1 + 272, 1);
  return a1;
}

void sub_1008C42B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD **v2;

  sub_100008848(v1 + 320, *v2);
  sub_10077EB50(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1008C4318(uint64_t a1)
{
  NSObject *v2;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[1640];

  if (*(_QWORD *)(a1 + 88))
  {
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_10215AD50);
    v2 = qword_1022A00D8;
    if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLGCZ,destroy geocodec malloc zone,~CLRavenGeoMapBuildingDataManager()", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_10215AD50);
      v6[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 0, "CLGCZ,destroy geocodec malloc zone,~CLRavenGeoMapBuildingDataManager()", v6, 2);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 2, "CLRavenGeoMapBuildingDataManager::~CLRavenGeoMapBuildingDataManager()", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
    GEOResetGeoCodecsAllocator(objc_msgSend(*(id *)(a1 + 88), "clearBuildingTiles"));

    *(_QWORD *)(a1 + 88) = 0;
  }
  sub_100008848(a1 + 320, *(_QWORD **)(a1 + 328));
  sub_10077EB50(a1);
  return a1;
}

void sub_1008C44E0(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_10024F88C(a1);
}

BOOL sub_1008C44F0(CLMotionActivity *this, double *a2)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  BOOL v6;
  CLMotionActivity *v8;
  uint64_t v9;
  long double v10;
  int type;
  __int16 v13[8];
  uint8_t buf[1640];

  if (BYTE2(this[3].vehicleType))
  {
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    v2 = qword_1022A00A8;
    if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "clrgmd,Query in progress, can't start new query", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00A0 != -1)
        dispatch_once(&qword_1022A00A0, &stru_10215AD30);
      v13[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 2, "clrgmd,Query in progress, can't start new query", v13, 2);
      v4 = (uint8_t *)v3;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLRavenGeoMapBuildingDataManager::IsQueryNeeded(const CLClientLocationCoordinate &) const", "%s\n", v3);
      if (v4 != buf)
        free(v4);
    }
    return 0;
  }
  if (BYTE1(this[3].vehicleType))
    v6 = 0;
  else
    v6 = (LODWORD(this[3].estExitTime) - 3) > 1;
  if (v6)
    return 0;
  v8 = (CLMotionActivity *)((char *)this + 136);
  if (LODWORD(this[1].estExitTime))
  {
    if ((CLMotionActivity::isWalking((CLMotionActivity *)((char *)this + 136)) & 1) == 0
      && (CLMotionActivity::isRunning((CLMotionActivity *)((char *)this + 136)) & 1) == 0)
    {
      type = v8->type;
      if (v8->type != 3 && type != 11805 && type != 90603 && LOBYTE(this[3].vehicleType))
        return 0;
    }
  }
  v9 = 1;
  if (this[1].isStanding)
  {
    v10 = sub_10011E634((double *)&this->isStanding, *a2, a2[1], *(double *)&this[1].mountedConfidence, this[1].conservativeMountedProbability, 0.0);
    *(long double *)&this->fsmTransitionData.fConsecStatic = v10;
    LOBYTE(this[1].type) = 1;
    return v10 >= *(double *)&this[1].isVehicleConnected;
  }
  return v9;
}

void sub_1008C4730(uint64_t a1, double *a2, uint64_t *a3)
{
  NSObject *v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_weak_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  NSObject *v20;
  NSObject *v21;
  _BOOL4 v22;
  const char *v23;
  uint8_t *v24;
  const char *v25;
  uint8_t *v26;
  const char *v27;
  uint8_t *v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  void (*v32)(uint64_t, void *);
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  __int128 v38;
  double v39;
  _QWORD v40[5];
  __int128 v41;
  int v42;
  double v43;
  __int16 v44;
  double v45;
  uint8_t buf[4];
  double v47;
  __int16 v48;
  double v49;

  if (!sub_1008C44F0((CLMotionActivity *)a1, a2))
    return;
  if (qword_1022A00A0 != -1)
    dispatch_once(&qword_1022A00A0, &stru_10215AD30);
  v6 = qword_1022A00A8;
  if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "clrgmd,Query required", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    LOWORD(v42) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 2, "clrgmd,Query required", &v42, 2);
    v24 = (uint8_t *)v23;
    sub_100512490("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)", "%s\n", v23);
    if (v24 != buf)
      free(v24);
  }
  v7 = objc_autoreleasePoolPush();
  v8 = *a2;
  v9 = a2[1];
  v41 = *(_OWORD *)a2;
  v10 = +[NSMutableArray array](NSMutableArray, "array");
  v11 = *(void **)(a1 + 88);
  if (v11)
    objc_msgSend(v11, "setAllowNetworkTileLoad:", *(unsigned __int8 *)(a1 + 287));
  v12 = sub_1001FCBB4();
  v13 = *a3;
  v14 = (std::__shared_weak_count *)a3[1];
  if (v14)
  {
    p_shared_weak_owners = (unint64_t *)&v14->__shared_weak_owners_;
    do
      v16 = __ldxr(p_shared_weak_owners);
    while (__stxr(v16 + 1, p_shared_weak_owners));
  }
  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472;
  v40[2] = sub_1008C4CFC;
  v40[3] = &unk_10215ACD8;
  v40[4] = v10;
  v30 = _NSConcreteStackBlock;
  v31 = 3321888768;
  v32 = sub_1008C4FAC;
  v33 = &unk_10215AD00;
  v35 = a1;
  v36 = v13;
  v37 = v14;
  if (v14)
  {
    v17 = (unint64_t *)&v14->__shared_weak_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  v34 = v10;
  v38 = v41;
  v39 = v12;
  v19 = v14;
  if (*(_QWORD *)(a1 + 88))
  {
    if (sub_10011CE88(v8, v9))
    {
      *(_BYTE *)(a1 + 306) = 1;
      sub_1008C5664((CLOSTransaction *)a1);
      if (qword_1022A00A0 != -1)
        dispatch_once(&qword_1022A00A0, &stru_10215AD30);
      v20 = qword_1022A00A8;
      if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 134283777;
        v47 = v8;
        v48 = 2049;
        v49 = v9;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "clrgmd,starting building data query at lat,%{private}.7lf,lon,%{private}.7lf", buf, 0x16u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00A0 != -1)
          dispatch_once(&qword_1022A00A0, &stru_10215AD30);
        v42 = 134283777;
        v43 = v8;
        v44 = 2049;
        v45 = v9;
        LODWORD(v29) = 22;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 2, "clrgmd,starting building data query at lat,%{private}.7lf,lon,%{private}.7lf", &v42, v29, v30, v31, v32, v33, v34, v35, v36);
        v26 = (uint8_t *)v25;
        sub_100512490("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)", "%s\n", v25);
        if (v26 != buf)
          free(v26);
      }
      objc_msgSend(*(id *)(a1 + 88), "findBuildingsNear:radius:tileSetStyle:handler:completionHandler:", *(unsigned int *)(a1 + 120), v40, &v30, v8, v9, *(double *)(a1 + 312));
      v19 = v37;
      if (!v37)
        goto LABEL_31;
      goto LABEL_30;
    }
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    v21 = qword_1022A00A8;
    if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "clrgmd,Invalid query center coordinate", buf, 2u);
    }
    v22 = sub_1001BFF7C(115, 0);
    v19 = v14;
    if (v22)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00A0 != -1)
        dispatch_once(&qword_1022A00A0, &stru_10215AD30);
      LOWORD(v42) = 0;
      LODWORD(v29) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 16, "clrgmd,Invalid query center coordinate", &v42, v29, v30, v31, v32, v33, v34, v35, v36);
      v28 = (uint8_t *)v27;
      sub_100512490("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)", "%s\n", v27);
      if (v28 != buf)
        free(v28);
      v19 = v14;
      if (!v14)
        goto LABEL_31;
      goto LABEL_30;
    }
  }
  if (v19)
LABEL_30:
    std::__shared_weak_count::__release_weak(v19);
LABEL_31:
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  objc_autoreleasePoolPop(v7);
}

void sub_1008C4CC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  std::__shared_weak_count *v18;

  if (v18)
  {
    std::__shared_weak_count::__release_weak(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008C4CFC(uint64_t a1, void *a2)
{
  NSObject *v4;
  const char *v5;
  NSObject *v6;
  uint8_t *v7;
  _QWORD v8[2];
  uint8_t buf[1640];

  if (!a2)
  {
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    v4 = qword_1022A00A8;
    if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "clrgmd,Returned building data has invalid memory location", buf, 2u);
    }
    if (!sub_1001BFF7C(115, 0))
      return;
    bzero(buf, 0x65CuLL);
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    LOWORD(v8[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 16, "clrgmd,Returned building data has invalid memory location", v8, 2, v8[0]);
LABEL_21:
    v7 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v5);
    if (v7 != buf)
      free(v7);
    return;
  }
  if (objc_msgSend(objc_msgSend(a2, "sections"), "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
    return;
  }
  if (qword_1022A00A0 != -1)
    dispatch_once(&qword_1022A00A0, &stru_10215AD30);
  v6 = qword_1022A00A8;
  if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "clrgmd,No sections found in the building data", buf, 2u);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    LOWORD(v8[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 16, "clrgmd,No sections found in the building data", v8, 2, v8[0]);
    goto LABEL_21;
  }
}

void sub_1008C4FAC(uint64_t a1, void *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  const char *v10;
  uint8_t *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  const char *v17;
  uint8_t *v18;
  const char *v19;
  uint8_t *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  int v25;
  id v26;
  __int16 v27;
  id v28;
  __int16 v29;
  id v30;
  uint8_t buf[4];
  id v32;
  __int16 v33;
  id v34;
  __int16 v35;
  id v36;

  v3 = *(_QWORD *)(a1 + 40);
  v23 = 0;
  v24 = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 56);
  if (v4)
  {
    v6 = std::__shared_weak_count::lock(v4);
    v24 = v6;
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 48);
      v23 = v7;
      if (v7)
      {
        if (a2)
        {
          if (qword_1022A00A0 != -1)
            dispatch_once(&qword_1022A00A0, &stru_10215AD30);
          v8 = qword_1022A00A8;
          if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 134349571;
            v32 = objc_msgSend(a2, "code");
            v33 = 2114;
            v34 = objc_msgSend(a2, "domain");
            v35 = 2113;
            v36 = objc_msgSend(a2, "localizedDescription");
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "clrgmd,Building data query, error:%{public}lld (%{public}@) \"%{private}@\"", buf, 0x20u);
          }
          if (!sub_1001BFF7C(115, 0))
            goto LABEL_29;
          bzero(buf, 0x65CuLL);
          if (qword_1022A00A0 != -1)
            dispatch_once(&qword_1022A00A0, &stru_10215AD30);
          v9 = qword_1022A00A8;
          v25 = 134349571;
          v26 = objc_msgSend(a2, "code");
          v27 = 2114;
          v28 = objc_msgSend(a2, "domain");
          v29 = 2113;
          v30 = objc_msgSend(a2, "localizedDescription");
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v9, 16, "clrgmd,Building data query, error:%{public}lld (%{public}@) \"%{private}@\"", &v25, 32, v7, v6);
          v11 = (uint8_t *)v10;
          sub_100512490("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v10);
          if (v11 == buf)
            goto LABEL_29;
        }
        else
        {
          if (objc_msgSend(*(id *)(a1 + 32), "count"))
          {
            sub_100C861A4(v7, *(void **)(a1 + 32), (double *)(a1 + 64), (double *)(a1 + 80));
            goto LABEL_29;
          }
          if (qword_1022A00A0 != -1)
            dispatch_once(&qword_1022A00A0, &stru_10215AD30);
          v13 = qword_1022A00A8;
          if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "clrgmd,No building data obtained from the query", buf, 2u);
          }
          if (!sub_1001BFF7C(115, 2))
            goto LABEL_29;
          bzero(buf, 0x65CuLL);
          if (qword_1022A00A0 != -1)
            dispatch_once(&qword_1022A00A0, &stru_10215AD30);
          LOWORD(v25) = 0;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 2, "clrgmd,No building data obtained from the query", &v25, 2, v7, v6);
          v11 = (uint8_t *)v21;
          sub_100512490("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v21);
          if (v11 == buf)
            goto LABEL_29;
        }
        free(v11);
LABEL_29:
        objc_msgSend(*(id *)(v3 + 88), "clearBuildingTiles");
        if (*(_QWORD *)v3)
        {

          *(_QWORD *)v3 = 0;
        }
        if (qword_1022A00A0 != -1)
          dispatch_once(&qword_1022A00A0, &stru_10215AD30);
        v14 = qword_1022A00A8;
        if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "clrgmd,Completed Handling of building data in GEOMapFeatureAccessCompletionHandler", buf, 2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A00A0 != -1)
            dispatch_once(&qword_1022A00A0, &stru_10215AD30);
          LOWORD(v25) = 0;
          LODWORD(v22) = 2;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 2, "clrgmd,Completed Handling of building data in GEOMapFeatureAccessCompletionHandler", &v25, v22);
          v20 = (uint8_t *)v19;
          sub_100512490("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v19);
          if (v20 != buf)
            free(v20);
        }
        *(_BYTE *)(v3 + 306) = 0;
LABEL_37:
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
        return;
      }
    }
  }
  else
  {
    v6 = 0;
  }
  if (qword_1022A00A0 != -1)
    dispatch_once(&qword_1022A00A0, &stru_10215AD30);
  v12 = qword_1022A00A8;
  if (os_log_type_enabled((os_log_t)qword_1022A00A8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "clrgmd,Building data query's CompletionHandler called after Raven controller deletion", buf, 2u);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00A0 != -1)
      dispatch_once(&qword_1022A00A0, &stru_10215AD30);
    LOWORD(v25) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00A8, 16, "clrgmd,Building data query's CompletionHandler called after Raven controller deletion", &v25, 2, v23, v24);
    v18 = (uint8_t *)v17;
    sub_100512490("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v17);
    if (v18 != buf)
      free(v18);
  }
  if (v6)
    goto LABEL_37;
}

void sub_1008C5600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008C5630(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(result + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(result + 56) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 16);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_1008C5654(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 56);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

CLOSTransaction *sub_1008C5664(CLOSTransaction *result)
{
  _QWORD *p_isa;
  NSString **p_description;

  if (!result->super.isa)
  {
    p_isa = &result->super.isa;
    p_description = &result->_description;
    if (SHIBYTE(result[1].super.isa) < 0)
      p_description = (NSString **)*p_description;
    result = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", p_description);
    *p_isa = result;
  }
  return result;
}

id sub_1008C56B0(uint64_t a1)
{
  id result;

  if (*(_BYTE *)(a1 + 80))
    *(_BYTE *)(a1 + 80) = 0;
  result = *(id *)(a1 + 88);
  if (result)
  {
    objc_msgSend(result, "setAllowNetworkTileLoad:", 1);
    result = objc_msgSend(*(id *)(a1 + 88), "setAllowStaleData:", 1);
  }
  if (*(_BYTE *)(a1 + 112))
    *(_BYTE *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 306) = 0;
  return result;
}

__n128 sub_1008C5704(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)(a1 + 136) = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 184) = v4;
  *(_OWORD *)(a1 + 168) = v3;
  *(_OWORD *)(a1 + 152) = v2;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 248) = v7;
  *(_OWORD *)(a1 + 232) = v6;
  *(__n128 *)(a1 + 216) = result;
  return result;
}

void sub_1008C5744(uint64_t a1, int a2)
{
  sub_100EAE05C((int *)(a1 + 272), a2);
}

void sub_1008C574C(uint64_t a1, int *a2, char *a3)
{
  int v3;
  double v4;

  v3 = *a2;
  if (*a2 == 15)
  {
    sub_100EAE034(a1 + 272, *a3);
  }
  else if (v3 == 13)
  {
    sub_100EADFBC(a1 + 272, *(_DWORD *)a3);
  }
  else if (v3 == 7)
  {
    v4 = *(double *)a3;
    if (*(double *)a3 >= 0.0 && v4 <= 100.0)
      sub_100EAE084(a1 + 272, v4);
  }
}

void sub_1008C57AC(id a1)
{
  qword_1022A00A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Raven");
}

void sub_1008C57D8(id a1)
{
  qword_1022A00D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_1008C5804()
{
  sub_1015A2E04(qword_1023056F8, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1023056F8, (void *)&_mh_execute_header);
}

void sub_1008C5848(_QWORD *a1, uint64_t a2)
{
  NSObject *v2;
  uint64_t v3;
  __int16 v4;
  const char *v5;

  a1[2] = 0;
  *a1 = 0;
  a1[1] = a2;
  a1[3] = 0;
  a1[4] = 0;
  if (qword_1022A0080 != -1)
    dispatch_once(&qword_1022A0080, &stru_10215AD70);
  v2 = qword_1022A0088;
  if (os_log_type_enabled((os_log_t)qword_1022A0088, OS_LOG_TYPE_DEFAULT))
  {
    v3 = 68289026;
    v4 = 2082;
    v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#emgalert,init\"}", (uint8_t *)&v3, 0x12u);
  }
  sub_100647FA8();
}

void sub_1008C5A50(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v1[4];
  v1[4] = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  v5 = *v2;
  *v2 = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  sub_1008C637C(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1008C5ACC(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  _BOOL8 v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLEmergencyAlertInterface::onDaemonStatusNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 8), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215AD90);
  v6 = os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLEmergencyAlertInterface::onDaemonStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215AD90);
    v9 = qword_1022A0228;
    v6 = os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG);
    if (v6)
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLEmergencyAlertInterface::onDaemonStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_1008C5EE8(v6, v7, a2);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_1008C5C78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_1008C5C98(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _BOOL8 v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLEmergencyAlertInterface::onClientManagerNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 8), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215AD90);
  v6 = os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLEmergencyAlertInterface::onClientManagerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215AD90);
    v9 = qword_1022A0228;
    v6 = os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG);
    if (v6)
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLEmergencyAlertInterface::onClientManagerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_1008C5FDC(v6, v7, a2);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_1008C5E44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008C5E68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
    objc_msgSend(*(id *)(v2 + 16), "unregister:forNotification:", *(_QWORD *)(v2 + 8), 4);

  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_1008C637C((uint64_t *)a1, 0);
  return a1;
}

void sub_1008C5EE8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  NSObject *v3;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;

  if (*a3 == 6)
  {
    if (qword_1022A0080 != -1)
      dispatch_once(&qword_1022A0080, &stru_10215AD70);
    v3 = qword_1022A0088;
    if (os_log_type_enabled((os_log_t)qword_1022A0088, OS_LOG_TYPE_DEFAULT))
    {
      v4[0] = 68289026;
      v4[1] = 0;
      v5 = 2082;
      v6 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#emgalert,kNotificationReachability\"}", (uint8_t *)v4, 0x12u);
    }
    objc_msgSend(+[SafetyAlerts sharedInterface](SafetyAlerts, "sharedInterface"), "onNetworkConnectivityChanged:", 0);
  }
}

void sub_1008C5FDC(uint64_t a1, uint64_t a2, int *a3)
{
  NSObject *v4;
  int v5;
  NSObject *v6;
  int v7;
  int v8;
  const char *v9;
  uint8_t *v10;
  int v11;
  const char *v12;
  uint8_t *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint8_t buf[4];
  int v18;

  if (qword_1022A0070 != -1)
    dispatch_once(&qword_1022A0070, &stru_10215ADB0);
  v4 = qword_1022A0078;
  if (os_log_type_enabled((os_log_t)qword_1022A0078, OS_LOG_TYPE_DEBUG))
  {
    v5 = *a3;
    *(_DWORD *)buf = 67240192;
    v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#emgalert,LS Notification,type,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0070 != -1)
      dispatch_once(&qword_1022A0070, &stru_10215ADB0);
    v8 = *a3;
    v15 = 67240192;
    v16 = v8;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0078, 2, "#emgalert,LS Notification,type,%{public}d", &v15, 8);
    v10 = (uint8_t *)v9;
    sub_100512490("Generic", 1, 0, 2, "void CLEmergencyAlertInterface::onClientManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v9);
    if (v10 != buf)
      free(v10);
  }
  if (*a3 == 4)
  {
    objc_msgSend(+[SafetyAlerts sharedInterface](SafetyAlerts, "sharedInterface"), "onSignificantEventDetected:", 0);
  }
  else
  {
    if (qword_1022A0070 != -1)
      dispatch_once(&qword_1022A0070, &stru_10215ADB0);
    v6 = qword_1022A0078;
    if (os_log_type_enabled((os_log_t)qword_1022A0078, OS_LOG_TYPE_DEBUG))
    {
      v7 = *a3;
      *(_DWORD *)buf = 67240192;
      v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#emgalert,#Warning,unhandled LS notification,%{public}d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0070 != -1)
        dispatch_once(&qword_1022A0070, &stru_10215ADB0);
      v11 = *a3;
      v15 = 67240192;
      v16 = v11;
      LODWORD(v14) = 8;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0078, 2, "#emgalert,#Warning,unhandled LS notification,%{public}d", &v15, v14);
      v13 = (uint8_t *)v12;
      sub_100512490("Generic", 1, 0, 2, "void CLEmergencyAlertInterface::onClientManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v12);
      if (v13 != buf)
        free(v13);
    }
  }
}

void sub_1008C62F8(id a1)
{
  qword_1022A0088 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

void sub_1008C6324(id a1)
{
  qword_1022A0228 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1008C6350(id a1)
{
  qword_1022A0078 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_1008C637C(uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100EEFB30();
    operator delete();
  }
  return result;
}

uint64_t sub_1008C693C(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  int v11;
  char v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;
  TRANSITPbTransitMac *v37;
  uint64_t v38;
  _QWORD v39[2];

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    while (1)
    {
      v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
      v8 = v7 + 1;
      if (v7 == -1 || v8 > *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        break;
      v9 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0)
        goto LABEL_11;
      v4 += 7;
      v10 = v5++ >= 9;
      if (v10)
      {
        v6 = 0;
        v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      v6 = 0;
LABEL_13:
    if (v11 || (v6 & 7) == 4)
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    switch((v6 >> 3))
    {
      case 1u:
        v13 = 0;
        v14 = 0;
        v15 = 0;
        *(_BYTE *)(a1 + 44) |= 0x10u;
        while (1)
        {
          v16 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v17 = v16 + 1;
          if (v16 == -1 || v17 > *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            break;
          v18 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17;
          v15 |= (unint64_t)(v18 & 0x7F) << v13;
          if ((v18 & 0x80) == 0)
            goto LABEL_55;
          v13 += 7;
          v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_57;
          }
        }
        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_55:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          LODWORD(v15) = 0;
LABEL_57:
        v38 = 40;
        goto LABEL_70;
      case 2u:
        v19 = 0;
        v20 = 0;
        v15 = 0;
        *(_BYTE *)(a1 + 44) |= 4u;
        while (2)
        {
          v21 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v22 = v21 + 1;
          if (v21 == -1 || v22 > *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
            v15 |= (unint64_t)(v23 & 0x7F) << v19;
            if (v23 < 0)
            {
              v19 += 7;
              v10 = v20++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          LODWORD(v15) = 0;
LABEL_61:
        v38 = 32;
        goto LABEL_70;
      case 3u:
        v24 = 0;
        v25 = 0;
        v15 = 0;
        *(_BYTE *)(a1 + 44) |= 8u;
        while (2)
        {
          v26 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27;
            v15 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v10 = v25++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          LODWORD(v15) = 0;
LABEL_65:
        v38 = 36;
        goto LABEL_70;
      case 4u:
        *(_BYTE *)(a1 + 44) |= 1u;
        v29 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          v30 = *(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
          *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          v30 = 0;
        }
        *(_QWORD *)(a1 + 8) = v30;
        goto LABEL_71;
      case 5u:
        v31 = 0;
        v32 = 0;
        v15 = 0;
        *(_BYTE *)(a1 + 44) |= 2u;
        while (2)
        {
          v33 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v34 = v33 + 1;
          if (v33 == -1 || v34 > *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
            v15 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              v10 = v32++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          LODWORD(v15) = 0;
LABEL_69:
        v38 = 16;
LABEL_70:
        *(_DWORD *)(a1 + v38) = v15;
        goto LABEL_71;
      case 7u:
        v37 = objc_alloc_init(TRANSITPbTransitMac);
        objc_msgSend((id)a1, "addMacs:", v37);

        v39[0] = 0;
        v39[1] = 0;
        if (PBReaderPlaceMark(a2, v39) && (sub_100D7C740((uint64_t)v37, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v39);
LABEL_71:
          if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result)
          return result;
        goto LABEL_71;
    }
  }
}

uint64_t sub_1008C77A8()
{
  uint64_t result;

  if (qword_102310D40)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D40 + 8))(qword_102310D40);
  if (qword_102310D48)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D48 + 8))(qword_102310D48);
  if (qword_102310D50)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D50 + 8))(qword_102310D50);
  if (qword_102310D58)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D58 + 8))(qword_102310D58);
  if (qword_102310D60)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D60 + 8))(qword_102310D60);
  if (qword_102310D68)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D68 + 8))(qword_102310D68);
  if (qword_102310D70)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D70 + 8))(qword_102310D70);
  if (qword_102310D78)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D78 + 8))(qword_102310D78);
  if (qword_102310D80)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D80 + 8))(qword_102310D80);
  if (qword_102310D88)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D88 + 8))(qword_102310D88);
  if (qword_102310D90)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D90 + 8))(qword_102310D90);
  if (qword_102310D98)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310D98 + 8))(qword_102310D98);
  if (qword_102310DA0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DA0 + 8))(qword_102310DA0);
  if (qword_102310DA8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DA8 + 8))(qword_102310DA8);
  if (qword_102310DB0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DB0 + 8))(qword_102310DB0);
  if (qword_102310DB8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DB8 + 8))(qword_102310DB8);
  if (qword_102310DC0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DC0 + 8))(qword_102310DC0);
  if (qword_102310DC8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DC8 + 8))(qword_102310DC8);
  if (qword_102310DD0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DD0 + 8))(qword_102310DD0);
  if (qword_102310DD8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DD8 + 8))(qword_102310DD8);
  if (qword_102310DE0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DE0 + 8))(qword_102310DE0);
  if (qword_102310DE8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DE8 + 8))(qword_102310DE8);
  if (qword_102310DF0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DF0 + 8))(qword_102310DF0);
  if (qword_102310DF8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310DF8 + 8))(qword_102310DF8);
  if (qword_102310E00)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E00 + 8))(qword_102310E00);
  if (qword_102310E08)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E08 + 8))(qword_102310E08);
  if (qword_102310E10)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E10 + 8))(qword_102310E10);
  if (qword_102310E18)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E18 + 8))(qword_102310E18);
  if (qword_102310E20)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E20 + 8))(qword_102310E20);
  if (qword_102310E28)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E28 + 8))(qword_102310E28);
  if (qword_102310E30)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E30 + 8))(qword_102310E30);
  if (qword_102310E38)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E38 + 8))(qword_102310E38);
  if (qword_102310E40)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E40 + 8))(qword_102310E40);
  if (qword_102310E48)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E48 + 8))(qword_102310E48);
  if (qword_102310E50)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E50 + 8))(qword_102310E50);
  if (qword_102310E58)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E58 + 8))(qword_102310E58);
  if (qword_102310E60)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E60 + 8))(qword_102310E60);
  if (qword_102310E68)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E68 + 8))(qword_102310E68);
  if (qword_102310E70)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E70 + 8))(qword_102310E70);
  if (qword_102310E78)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E78 + 8))(qword_102310E78);
  if (qword_102310E80)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E80 + 8))(qword_102310E80);
  if (qword_102310E88)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E88 + 8))(qword_102310E88);
  if (qword_102310E90)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E90 + 8))(qword_102310E90);
  if (qword_102310E98)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310E98 + 8))(qword_102310E98);
  if (qword_102310EA0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EA0 + 8))(qword_102310EA0);
  if (qword_102310EA8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EA8 + 8))(qword_102310EA8);
  if (qword_102310EB0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EB0 + 8))(qword_102310EB0);
  if (qword_102310EB8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EB8 + 8))(qword_102310EB8);
  if (qword_102310EC0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EC0 + 8))(qword_102310EC0);
  if (qword_102310EC8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EC8 + 8))(qword_102310EC8);
  if (qword_102310ED0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310ED0 + 8))(qword_102310ED0);
  if (qword_102310ED8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310ED8 + 8))(qword_102310ED8);
  if (qword_102310EE0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EE0 + 8))(qword_102310EE0);
  if (qword_102310EE8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EE8 + 8))(qword_102310EE8);
  if (qword_102310EF0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EF0 + 8))(qword_102310EF0);
  if (qword_102310EF8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310EF8 + 8))(qword_102310EF8);
  if (qword_102310F00)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F00 + 8))(qword_102310F00);
  if (qword_102310F08)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F08 + 8))(qword_102310F08);
  if (qword_102310F10)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F10 + 8))(qword_102310F10);
  if (qword_102310F18)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F18 + 8))(qword_102310F18);
  if (qword_102310F20)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F20 + 8))(qword_102310F20);
  if (qword_102310F28)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F28 + 8))(qword_102310F28);
  if (qword_102310F30)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F30 + 8))(qword_102310F30);
  if (qword_102310F38)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F38 + 8))(qword_102310F38);
  if (qword_102310F40)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F40 + 8))(qword_102310F40);
  if (qword_102310F48)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F48 + 8))(qword_102310F48);
  if (qword_102310F50)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F50 + 8))(qword_102310F50);
  if (qword_102310F58)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F58 + 8))(qword_102310F58);
  if (qword_102310F60)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F60 + 8))(qword_102310F60);
  if (qword_102310F68)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F68 + 8))(qword_102310F68);
  if (qword_102310F70)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F70 + 8))(qword_102310F70);
  if (qword_102310F78)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F78 + 8))(qword_102310F78);
  if (qword_102310F80)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F80 + 8))(qword_102310F80);
  if (qword_102310F88)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F88 + 8))(qword_102310F88);
  if (qword_102310F90)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F90 + 8))(qword_102310F90);
  if (qword_102310F98)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310F98 + 8))(qword_102310F98);
  if (qword_102310FA0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FA0 + 8))(qword_102310FA0);
  if (qword_102310FA8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FA8 + 8))(qword_102310FA8);
  if (qword_102310FB0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FB0 + 8))(qword_102310FB0);
  if (qword_102310FB8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FB8 + 8))(qword_102310FB8);
  if (qword_102310FC0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FC0 + 8))(qword_102310FC0);
  if (qword_102310FC8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FC8 + 8))(qword_102310FC8);
  if (qword_102310FD0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FD0 + 8))(qword_102310FD0);
  if (qword_102310FD8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FD8 + 8))(qword_102310FD8);
  if (qword_102310FE0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FE0 + 8))(qword_102310FE0);
  if (qword_102310FE8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FE8 + 8))(qword_102310FE8);
  if (qword_102310FF0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FF0 + 8))(qword_102310FF0);
  if (qword_102310FF8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102310FF8 + 8))(qword_102310FF8);
  if (qword_102311000)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102311000 + 8))(qword_102311000);
  if (qword_102311008)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102311008 + 8))(qword_102311008);
  if (qword_102311010)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102311010 + 8))(qword_102311010);
  if (qword_102311018)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102311018 + 8))(qword_102311018);
  if (qword_102311020)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102311020 + 8))(qword_102311020);
  if (qword_102311028)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_102311028 + 8))(qword_102311028);
  result = qword_102311030;
  if (qword_102311030)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_102311030 + 8))(qword_102311030);
  return result;
}

void sub_1008C80A4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;

  if ((byte_102305710 & 1) == 0)
  {
    byte_102305710 = 1;
    v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", a4);
    sub_1007667C8(v4, v5, v6, v7);
    operator new();
  }
}

uint64_t sub_1008C9DA8(uint64_t result)
{
  *(_WORD *)(result + 16) = 0;
  *(_QWORD *)result = off_10215ADE0;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_1008C9DC0(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215AE58;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 116) = 0;
  *(_QWORD *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 124) = 0;
  return result;
}

_QWORD *sub_1008C9DFC(_QWORD *result)
{
  *result = off_10215AED0;
  result[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1008C9E18(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215AF48;
  *(_BYTE *)(a1 + 8) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 12) = 0u;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

uint64_t sub_1008C9E3C(uint64_t result)
{
  *(_QWORD *)result = off_10215AFC0;
  *(_BYTE *)(result + 8) = 0;
  *(_QWORD *)(result + 12) = 0;
  *(_QWORD *)(result + 28) = 0;
  *(_QWORD *)(result + 20) = 0;
  return result;
}

double sub_1008C9E5C(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215B038;
  *(_BYTE *)(a1 + 8) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 12) = 0u;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_1008C9E80(uint64_t result)
{
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = off_10215B0B0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(_QWORD *)(result + 80) = 0;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

uint64_t sub_1008C9EB0(uint64_t result)
{
  *(_QWORD *)result = off_10215B128;
  *(_DWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 12) = 0;
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008C9ECC(uint64_t result)
{
  *(_QWORD *)result = off_10215B1A0;
  *(_QWORD *)(result + 8) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008C9EF4(uint64_t result)
{
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = off_10215B218;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1008C9F14(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215B470;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

_QWORD *sub_1008C9F34(_QWORD *result)
{
  *result = off_10215B4E8;
  result[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[3] = 0;
  result[4] = 0;
  result[5] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[6] = 0;
  return result;
}

double sub_1008C9F58(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215B560;
  *(_DWORD *)(a1 + 100) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 83) = 0u;
  return result;
}

double sub_1008C9F88(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215B7B8;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  return result;
}

double sub_1008C9FB0(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215C5C8;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 52) = 0u;
  return result;
}

double sub_1008C9FD4(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215C910;
  *(_QWORD *)(a1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 37) = 0;
  return result;
}

double sub_1008C9FF8(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215CD48;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = 0;
  return result;
}

_QWORD *sub_1008CA018(_QWORD *result)
{
  result[1] = 0;
  result[2] = 0;
  *result = off_10215CEB0;
  return result;
}

uint64_t sub_1008CA02C(uint64_t result)
{
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = off_10215CF28;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

_QWORD *sub_1008CA044(_QWORD *result)
{
  *result = &off_10215CFA0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

_QWORD *sub_1008CA058(_QWORD *result)
{
  *result = off_10215D018;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1008CA06C(uint64_t result)
{
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_10215D090;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008CA084(uint64_t result)
{
  *(_QWORD *)result = off_10215D108;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1008CA09C(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215D180;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

double sub_1008CA0C4(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215D1F8;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

double sub_1008CA0E8(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215D270;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_DWORD *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_1008CA124(uint64_t result)
{
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = off_10215D2E8;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008CA144(uint64_t result)
{
  *(_QWORD *)result = off_10215D360;
  *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

_QWORD *sub_1008CA15C(_QWORD *result)
{
  *result = off_10215D3D8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1008CA170(uint64_t result)
{
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)result = off_10215D450;
  *(_QWORD *)(result + 8) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

double sub_1008CA194(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215D4C8;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 52) = 0u;
  return result;
}

double sub_1008CA1B8(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215D540;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1008CA1E0(uint64_t result)
{
  *(_QWORD *)result = off_10215D5B8;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

_QWORD *sub_1008CA1F4(_QWORD *result)
{
  *result = &off_10215D630;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1008CA208(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = off_10215D978;
  *(_QWORD *)(a1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 37) = 0;
  return result;
}

uint64_t sub_1008CA22C(uint64_t result)
{
  *(_QWORD *)result = off_10215D9F0;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008CA240(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)result;
  v2 = qword_102310D90;
  if (!qword_102310D90)
  {
    result = sub_1008C80A4();
    v2 = qword_102310D90;
  }
  v1[1] = v2;
  v3 = qword_102310D98;
  if (!qword_102310D98)
  {
    result = sub_1008C80A4();
    v3 = qword_102310D98;
  }
  v1[2] = v3;
  v4 = qword_102310DA0;
  if (!qword_102310DA0)
  {
    result = sub_1008C80A4();
    v4 = qword_102310DA0;
  }
  v1[3] = v4;
  v5 = qword_102310DA8;
  if (!qword_102310DA8)
  {
    result = sub_1008C80A4();
    v5 = qword_102310DA8;
  }
  v1[4] = v5;
  return result;
}

uint64_t sub_1008CA2BC(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (_QWORD *)result;
  v2 = qword_102310E68;
  if (!qword_102310E68)
  {
    result = sub_1008C80A4();
    v2 = qword_102310E68;
  }
  v1[1] = v2;
  v3 = qword_102310E70;
  if (!qword_102310E70)
  {
    result = sub_1008C80A4();
    v3 = qword_102310E70;
  }
  v1[2] = v3;
  v4 = qword_102310E78;
  if (!qword_102310E78)
  {
    result = sub_1008C80A4();
    v4 = qword_102310E78;
  }
  v1[3] = v4;
  v5 = qword_102310E80;
  if (!qword_102310E80)
  {
    result = sub_1008C80A4();
    v5 = qword_102310E80;
  }
  v1[4] = v5;
  v6 = qword_102310E60;
  if (!qword_102310E60)
  {
    result = sub_1008C80A4();
    v6 = qword_102310E60;
  }
  v1[5] = v6;
  v7 = qword_102310E88;
  if (!qword_102310E88)
  {
    result = sub_1008C80A4();
    v7 = qword_102310E88;
  }
  v1[6] = v7;
  v8 = qword_102310E90;
  if (!qword_102310E90)
  {
    result = sub_1008C80A4();
    v8 = qword_102310E90;
  }
  v1[7] = v8;
  return result;
}

uint64_t sub_1008CA380(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)result;
  v2 = qword_102310EA8;
  if (!qword_102310EA8)
  {
    result = sub_1008C80A4();
    v2 = qword_102310EA8;
  }
  v1[1] = v2;
  v3 = qword_102310EB0;
  if (!qword_102310EB0)
  {
    result = sub_1008C80A4();
    v3 = qword_102310EB0;
  }
  v1[2] = v3;
  v4 = qword_102310EB8;
  if (!qword_102310EB8)
  {
    result = sub_1008C80A4();
    v4 = qword_102310EB8;
  }
  v1[3] = v4;
  v5 = qword_102310EC0;
  if (!qword_102310EC0)
  {
    result = sub_1008C80A4();
    v5 = qword_102310EC0;
  }
  v1[4] = v5;
  return result;
}

uint64_t sub_1008CA3FC(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)result;
  v2 = qword_102310DE0;
  if (!qword_102310DE0)
  {
    result = sub_1008C80A4();
    v2 = qword_102310DE0;
  }
  v1[2] = v2;
  v3 = qword_102310E20;
  if (!qword_102310E20)
  {
    result = sub_1008C80A4();
    v3 = qword_102310E20;
  }
  v1[3] = v3;
  v4 = qword_102310E58;
  if (!qword_102310E58)
  {
    result = sub_1008C80A4();
    v4 = qword_102310E58;
  }
  v1[4] = v4;
  v5 = qword_102310EA0;
  if (!qword_102310EA0)
  {
    result = sub_1008C80A4();
    v5 = qword_102310EA0;
  }
  v1[5] = v5;
  v6 = qword_102310ED0;
  if (!qword_102310ED0)
  {
    result = sub_1008C80A4();
    v6 = qword_102310ED0;
  }
  v1[6] = v6;
  return result;
}

BOOL sub_1008CA490(unsigned int a1)
{
  return a1 < 7;
}

void sub_1008CA49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 1153);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v7 = *(_BYTE *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_BYTE *)(a1 + 16) = v7;
      v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_BYTE *)(a2 + 17);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(_BYTE *)(a1 + 17) = v8;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_QWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(_QWORD *)(a1 + 8) = v6;
  }
}

void sub_1008CA56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CA584(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215ADE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CA594(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215ADE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008CA5C4()
{
  operator new();
}

uint64_t sub_1008CA600(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008CA618(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  char *v13;
  uint64_t result;
  unsigned int v15;
  _BYTE *v16;
  unsigned int v17[2];

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_18;
          v17[0] = 0;
          v10 = (char *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
            if (!(_DWORD)result)
              return result;
            v11 = v17[0];
            v12 = (_BYTE *)*((_QWORD *)this + 1);
            v9 = *((_QWORD *)this + 2);
          }
          else
          {
            v11 = *v10;
            v12 = v10 + 1;
            *((_QWORD *)this + 1) = v12;
          }
          *(_BYTE *)(a1 + 16) = v11 != 0;
          *(_DWORD *)(a1 + 24) |= 1u;
          if ((unint64_t)v12 < v9 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)this + 1) = v13;
            goto LABEL_26;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
LABEL_26:
        v17[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
          if (!(_DWORD)result)
            return result;
          v15 = v17[0];
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          v15 = *v13;
          v16 = v13 + 1;
          *((_QWORD *)this + 1) = v16;
        }
        *(_BYTE *)(a1 + 17) = v15 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        if ((unint64_t)v16 < v9 && *v16 == 25)
        {
          *((_QWORD *)this + 1) = v16 + 1;
          goto LABEL_34;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 1)
        goto LABEL_18;
LABEL_34:
      *(_QWORD *)v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)v17;
      *(_DWORD *)(a1 + 24) |= 4u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1008CA82C(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 8), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 17), a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 8), a3);
  return result;
}

uint64_t sub_1008CA8A4(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 24);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 |= 9u;
  if (*(_DWORD *)(a1 + 24))
    v3 = v2;
  else
    v3 = 0;
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008CA8DC(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CA49C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CA928()
{
  return 1;
}

_QWORD *sub_1008CA930@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Configuration");
}

void sub_1008CA940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  char v23;
  uint64_t v24;
  char v25;
  _BYTE v26[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v26, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 1887);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  v5 = *(_DWORD *)(a2 + 124);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 124) |= 1u;
      *(_QWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 124);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 124) |= 2u;
    *(_QWORD *)(a1 + 16) = v7;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v8 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 124) |= 4u;
    *(_QWORD *)(a1 + 24) = v8;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    v9 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 124) |= 8u;
    *(_QWORD *)(a1 + 32) = v9;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    v10 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 124) |= 0x10u;
    *(_QWORD *)(a1 + 40) = v10;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_19;
    }
LABEL_18:
    v11 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 124) |= 0x20u;
    *(_QWORD *)(a1 + 48) = v11;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_22;
      goto LABEL_20;
    }
LABEL_19:
    v12 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 124) |= 0x40u;
    *(_DWORD *)(a1 + 56) = v12;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x80) == 0)
      goto LABEL_22;
LABEL_20:
    v13 = *(_DWORD *)(a2 + 60);
    if (v13 >= 0x12)
      sub_10190E2A0();
    *(_DWORD *)(a1 + 124) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v13;
    v5 = *(_DWORD *)(a2 + 124);
  }
LABEL_22:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_36;
  if ((v5 & 0x100) != 0)
  {
    v14 = *(_DWORD *)(a2 + 64);
    if (v14 >= 4)
      sub_10190E278();
    *(_DWORD *)(a1 + 124) |= 0x100u;
    *(_DWORD *)(a1 + 64) = v14;
    v5 = *(_DWORD *)(a2 + 124);
  }
  if ((v5 & 0x200) != 0)
  {
    v15 = *(_DWORD *)(a2 + 68);
    if (v15 >= 7)
      sub_10190E250();
    *(_DWORD *)(a1 + 124) |= 0x200u;
    *(_DWORD *)(a1 + 68) = v15;
    v5 = *(_DWORD *)(a2 + 124);
  }
  if ((v5 & 0x400) != 0)
  {
    v18 = *(_QWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 124) |= 0x400u;
    *(_QWORD *)(a1 + 72) = v18;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x800) == 0)
    {
LABEL_31:
      if ((v5 & 0x1000) == 0)
        goto LABEL_32;
      goto LABEL_44;
    }
  }
  else if ((v5 & 0x800) == 0)
  {
    goto LABEL_31;
  }
  v19 = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 124) |= 0x800u;
  *(_QWORD *)(a1 + 80) = v19;
  v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x1000) == 0)
  {
LABEL_32:
    if ((v5 & 0x2000) == 0)
      goto LABEL_33;
    goto LABEL_45;
  }
LABEL_44:
  v20 = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 124) |= 0x1000u;
  *(_QWORD *)(a1 + 88) = v20;
  v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x2000) == 0)
  {
LABEL_33:
    if ((v5 & 0x4000) == 0)
      goto LABEL_34;
    goto LABEL_47;
  }
LABEL_45:
  v21 = *(_DWORD *)(a2 + 96);
  if (v21 >= 8)
    sub_10190E228();
  *(_DWORD *)(a1 + 124) |= 0x2000u;
  *(_DWORD *)(a1 + 96) = v21;
  v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x4000) == 0)
  {
LABEL_34:
    if ((v5 & 0x8000) == 0)
      goto LABEL_36;
    goto LABEL_35;
  }
LABEL_47:
  v22 = *(_DWORD *)(a2 + 100);
  if (v22 >= 0x11)
    sub_10190E200();
  *(_DWORD *)(a1 + 124) |= 0x4000u;
  *(_DWORD *)(a1 + 100) = v22;
  v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x8000) != 0)
  {
LABEL_35:
    v16 = *(_BYTE *)(a2 + 104);
    *(_DWORD *)(a1 + 124) |= 0x8000u;
    *(_BYTE *)(a1 + 104) = v16;
    v5 = *(_DWORD *)(a2 + 124);
  }
LABEL_36:
  if ((v5 & 0xFF0000) == 0)
    return;
  if ((v5 & 0x10000) != 0)
  {
    v23 = *(_BYTE *)(a2 + 105);
    *(_DWORD *)(a1 + 124) |= 0x10000u;
    *(_BYTE *)(a1 + 105) = v23;
    v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x20000) == 0)
    {
LABEL_39:
      if ((v5 & 0x40000) == 0)
        return;
      goto LABEL_40;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_39;
  }
  v24 = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 124) |= 0x20000u;
  *(_QWORD *)(a1 + 112) = v24;
  if ((*(_DWORD *)(a2 + 124) & 0x40000) != 0)
  {
LABEL_40:
    v17 = *(_DWORD *)(a2 + 108);
    *(_DWORD *)(a1 + 124) |= 0x40000u;
    *(_DWORD *)(a1 + 108) = v17;
  }
}

void sub_1008CAC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CAC70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AE58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CAC80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AE58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008CACB0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310D48;
  if (!qword_102310D48)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310D48;
  }
  return result;
}

void sub_1008CACDC()
{
  operator new();
}

uint64_t sub_1008CAD3C(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 124);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 89) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_BYTE *)(result + 105) = 0;
    *(_QWORD *)(result + 112) = 0;
    *(_DWORD *)(result + 108) = 0;
  }
  *(_DWORD *)(result + 124) = 0;
  return result;
}

uint64_t sub_1008CAD8C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unint64_t *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  unint64_t v15;
  _BYTE *v16;
  char *v17;
  unsigned int v18;
  _BYTE *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  char *v33;
  uint64_t result;
  unsigned int v35;
  _BYTE *v36;
  unsigned int v37;
  _BYTE *v38;
  unsigned int v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  unsigned __int8 *v47;
  unsigned int v48;
  unsigned __int8 *v49;
  unsigned int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  unsigned int v54[2];

  v5 = (unint64_t *)(a1 + 112);
  v6 = (unsigned int *)(a1 + 108);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_67;
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_67;
LABEL_15:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 25)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 33)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 8u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 != 41)
          continue;
        *((_QWORD *)this + 1) = v13 + 1;
LABEL_30:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 0x10u;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 49)
          continue;
        *((_QWORD *)this + 1) = v14 + 1;
LABEL_35:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 0x20u;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 56)
          continue;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_41:
        v54[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!(_DWORD)result)
            return result;
          v18 = v54[0];
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v18 = *v17;
          v19 = v17 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 56) = v18;
        *(_DWORD *)(a1 + 124) |= 0x40u;
        if ((unint64_t)v19 >= v15 || *v19 != 64)
          continue;
        v20 = v19 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_76:
        v54[0] = 0;
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!(_DWORD)result)
            return result;
          v35 = v54[0];
        }
        else
        {
          v35 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
        }
        if (v35 <= 0x11)
        {
          *(_DWORD *)(a1 + 124) |= 0x80u;
          *(_DWORD *)(a1 + 60) = v35;
        }
        v36 = (_BYTE *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((unint64_t)v36 >= v21 || *v36 != 72)
          continue;
        v22 = v36 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_86:
        v54[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!(_DWORD)result)
            return result;
          v37 = v54[0];
        }
        else
        {
          v37 = *v22;
          *((_QWORD *)this + 1) = v22 + 1;
        }
        if (v37 <= 3)
        {
          *(_DWORD *)(a1 + 124) |= 0x100u;
          *(_DWORD *)(a1 + 64) = v37;
        }
        v38 = (_BYTE *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        if ((unint64_t)v38 >= v23 || *v38 != 80)
          continue;
        v24 = v38 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_96:
        v54[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!(_DWORD)result)
            return result;
          v39 = v54[0];
        }
        else
        {
          v39 = *v24;
          *((_QWORD *)this + 1) = v24 + 1;
        }
        if (v39 <= 6)
        {
          *(_DWORD *)(a1 + 124) |= 0x200u;
          *(_DWORD *)(a1 + 68) = v39;
        }
        v40 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v40 >= *((_QWORD *)this + 2) || *v40 != 89)
          continue;
        *((_QWORD *)this + 1) = v40 + 1;
LABEL_106:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 72) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 0x400u;
        v41 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 != 97)
          continue;
        *((_QWORD *)this + 1) = v41 + 1;
LABEL_110:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)v54;
        *(_DWORD *)(a1 + 124) |= 0x800u;
        v42 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v42 >= *((_QWORD *)this + 2) || *v42 != 105)
          continue;
        *((_QWORD *)this + 1) = v42 + 1;
LABEL_114:
        *(_QWORD *)v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) != 0)
        {
          *(_QWORD *)(a1 + 88) = *(_QWORD *)v54;
          *(_DWORD *)(a1 + 124) |= 0x1000u;
          v43 = (_BYTE *)*((_QWORD *)this + 1);
          v25 = *((_QWORD *)this + 2);
          if ((unint64_t)v43 < v25 && *v43 == 112)
          {
            v26 = v43 + 1;
            *((_QWORD *)this + 1) = v26;
LABEL_118:
            v54[0] = 0;
            if ((unint64_t)v26 >= v25 || *v26 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
              if (!(_DWORD)result)
                return result;
              v44 = v54[0];
            }
            else
            {
              v44 = *v26;
              *((_QWORD *)this + 1) = v26 + 1;
            }
            if (v44 <= 7)
            {
              *(_DWORD *)(a1 + 124) |= 0x2000u;
              *(_DWORD *)(a1 + 96) = v44;
            }
            v45 = (_BYTE *)*((_QWORD *)this + 1);
            v27 = *((_QWORD *)this + 2);
            if ((unint64_t)v45 < v27 && *v45 == 120)
            {
              v28 = v45 + 1;
              *((_QWORD *)this + 1) = v28;
LABEL_128:
              v54[0] = 0;
              if ((unint64_t)v28 >= v27 || *v28 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
                if (!(_DWORD)result)
                  return result;
                v46 = v54[0];
              }
              else
              {
                v46 = *v28;
                *((_QWORD *)this + 1) = v28 + 1;
              }
              if (v46 <= 0x10)
              {
                *(_DWORD *)(a1 + 124) |= 0x4000u;
                *(_DWORD *)(a1 + 100) = v46;
              }
              v47 = (unsigned __int8 *)*((_QWORD *)this + 1);
              v29 = *((_QWORD *)this + 2);
              if ((int)v29 - (int)v47 >= 2 && *v47 == 128 && v47[1] == 1)
              {
                v30 = v47 + 2;
                *((_QWORD *)this + 1) = v30;
LABEL_139:
                v54[0] = 0;
                if ((unint64_t)v30 >= v29 || (char)*v30 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
                  if (!(_DWORD)result)
                    return result;
                  v48 = v54[0];
                  v49 = (unsigned __int8 *)*((_QWORD *)this + 1);
                  v29 = *((_QWORD *)this + 2);
                }
                else
                {
                  v48 = *v30;
                  v49 = v30 + 1;
                  *((_QWORD *)this + 1) = v49;
                }
                *(_BYTE *)(a1 + 104) = v48 != 0;
                *(_DWORD *)(a1 + 124) |= 0x8000u;
                if ((int)v29 - (int)v49 >= 2 && *v49 == 136 && v49[1] == 1)
                {
                  v31 = v49 + 2;
                  *((_QWORD *)this + 1) = v31;
LABEL_148:
                  v54[0] = 0;
                  if ((unint64_t)v31 >= v29 || (char)*v31 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
                    if (!(_DWORD)result)
                      return result;
                    v50 = v54[0];
                    v51 = (unsigned __int8 *)*((_QWORD *)this + 1);
                    v29 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    v50 = *v31;
                    v51 = v31 + 1;
                    *((_QWORD *)this + 1) = v51;
                  }
                  *(_BYTE *)(a1 + 105) = v50 != 0;
                  *(_DWORD *)(a1 + 124) |= 0x10000u;
                  if ((int)v29 - (int)v51 >= 2 && *v51 == 144 && v51[1] == 1)
                  {
                    v32 = v51 + 2;
                    *((_QWORD *)this + 1) = v32;
LABEL_157:
                    if ((unint64_t)v32 >= v29 || (char)*v32 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
                      if (!(_DWORD)result)
                        return result;
                      v52 = (unsigned __int8 *)*((_QWORD *)this + 1);
                      v29 = *((_QWORD *)this + 2);
                    }
                    else
                    {
                      *v5 = *v32;
                      v52 = v32 + 1;
                      *((_QWORD *)this + 1) = v52;
                    }
                    *(_DWORD *)(a1 + 124) |= 0x20000u;
                    if ((int)v29 - (int)v52 >= 2 && *v52 == 152 && v52[1] == 1)
                    {
                      v33 = (char *)(v52 + 2);
                      *((_QWORD *)this + 1) = v33;
LABEL_166:
                      if ((unint64_t)v33 >= v29 || *v33 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                        if (!(_DWORD)result)
                          return result;
                        v53 = (unsigned __int8 *)*((_QWORD *)this + 1);
                        v29 = *((_QWORD *)this + 2);
                      }
                      else
                      {
                        *v6 = *v33;
                        v53 = (unsigned __int8 *)(v33 + 1);
                        *((_QWORD *)this + 1) = v53;
                      }
                      *(_DWORD *)(a1 + 124) |= 0x40000u;
                      if (v53 == (unsigned __int8 *)v29
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        result = 1;
                        *((_BYTE *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_20;
        goto LABEL_67;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_25;
        goto LABEL_67;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_30;
        goto LABEL_67;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_35;
        goto LABEL_67;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_41;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_76;
      case 9u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v22 = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_86;
      case 0xAu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v24 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_96;
      case 0xBu:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_106;
        goto LABEL_67;
      case 0xCu:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_110;
        goto LABEL_67;
      case 0xDu:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_114;
        goto LABEL_67;
      case 0xEu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v26 = (char *)*((_QWORD *)this + 1);
        v25 = *((_QWORD *)this + 2);
        goto LABEL_118;
      case 0xFu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v28 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_128;
      case 0x10u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v30 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v29 = *((_QWORD *)this + 2);
        goto LABEL_139;
      case 0x11u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v31 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v29 = *((_QWORD *)this + 2);
        goto LABEL_148;
      case 0x12u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v32 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v29 = *((_QWORD *)this + 2);
        goto LABEL_157;
      case 0x13u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v33 = (char *)*((_QWORD *)this + 1);
        v29 = *((_QWORD *)this + 2);
        goto LABEL_166;
      default:
        v9 = TagFallback & 7;
LABEL_67:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008CB6A0(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 124);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_24;
  }
LABEL_23:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_25;
  }
LABEL_24:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_26;
  }
LABEL_25:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_26:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_28;
  }
LABEL_27:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_29;
  }
LABEL_28:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_30;
  }
LABEL_29:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 64), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_31;
  }
LABEL_30:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 68), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_32;
  }
LABEL_31:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_33;
  }
LABEL_32:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_34;
  }
LABEL_33:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
LABEL_34:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 96), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_36;
  }
LABEL_35:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 100), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_37;
  }
LABEL_36:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 104), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_38;
  }
LABEL_37:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 105), a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 108), a2, a4);
  }
LABEL_38:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_QWORD *)(v5 + 112), a2, a4);
  if ((*(_DWORD *)(v5 + 124) & 0x40000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 108), a2, a4);
  return result;
}

uint64_t sub_1008CB8D8(uint64_t a1, unint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;

  v3 = *(_DWORD *)(a1 + 124);
  if ((_BYTE)v3)
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v4 += 9;
    if ((v3 & 0x20) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    if ((v3 & 0x40) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v6 & 0x80000000) != 0)
      {
        v7 = 10;
      }
      else if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
        v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        v7 = 1;
      }
      v5 = (v5 + v7 + 1);
    }
    if ((v3 & 0x80) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if ((v8 & 0x80000000) != 0)
      {
        v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        v9 = 2;
      }
      v5 = (v9 + v5);
    }
  }
  else
  {
    v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if ((v10 & 0x80000000) != 0)
      {
        v11 = 11;
      }
      else if (v10 >= 0x80)
      {
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        v11 = 2;
      }
      LODWORD(v5) = v11 + v5;
    }
    if ((v3 & 0x200) != 0)
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
      if ((v12 & 0x80000000) != 0)
      {
        v13 = 11;
      }
      else if (v12 >= 0x80)
      {
        v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
        v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        v13 = 2;
      }
      LODWORD(v5) = v13 + v5;
    }
    v14 = v5 + 9;
    if ((v3 & 0x400) == 0)
      v14 = v5;
    if ((v3 & 0x800) != 0)
      v14 += 9;
    if ((v3 & 0x1000) != 0)
      LODWORD(v5) = v14 + 9;
    else
      LODWORD(v5) = v14;
    if ((v3 & 0x2000) != 0)
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
      if ((v15 & 0x80000000) != 0)
      {
        v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
        v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        v16 = 2;
      }
      LODWORD(v5) = v16 + v5;
    }
    if ((v3 & 0x4000) != 0)
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
      if ((v17 & 0x80000000) != 0)
      {
        v18 = 11;
      }
      else if (v17 >= 0x80)
      {
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
        v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        v18 = 2;
      }
      LODWORD(v5) = v18 + v5;
    }
    if ((v3 & 0x8000) != 0)
      v5 = (v5 + 3);
    else
      v5 = v5;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
      v5 = (v5 + 3);
    else
      v5 = v5;
    if ((v3 & 0x20000) != 0)
    {
      v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 112), a2)+ 2;
      v3 = *(_DWORD *)(a1 + 124);
    }
    if ((v3 & 0x40000) != 0)
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
      if (v19 >= 0x80)
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 2;
      else
        v20 = 3;
      v5 = (v20 + v5);
    }
  }
  *(_DWORD *)(a1 + 120) = v5;
  return v5;
}

void sub_1008CBB18(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CA940(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CBB64()
{
  return 1;
}

_QWORD *sub_1008CBB6C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.SummaryReport");
}

void sub_1008CBB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  const std::string *v8;
  std::string *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 2283);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 16) = v7;
      v5 = *(_DWORD *)(a2 + 28);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*(_BYTE *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 28) |= 2u;
    v9 = *(std::string **)(a1 + 8);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v9, v8);
    v5 = *(_DWORD *)(a2 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v10 = *(_BYTE *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_BYTE *)(a1 + 20) = v10;
    v5 = *(_DWORD *)(a2 + 28);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    v11 = *(_BYTE *)(a2 + 21);
    *(_DWORD *)(a1 + 28) |= 8u;
    *(_BYTE *)(a1 + 21) = v11;
    v5 = *(_DWORD *)(a2 + 28);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return;
      goto LABEL_10;
    }
LABEL_18:
    v12 = *(_BYTE *)(a2 + 22);
    *(_DWORD *)(a1 + 28) |= 0x10u;
    *(_BYTE *)(a1 + 22) = v12;
    if ((*(_DWORD *)(a2 + 28) & 0x20) == 0)
      return;
LABEL_10:
    v6 = *(_BYTE *)(a2 + 23);
    *(_DWORD *)(a1 + 28) |= 0x20u;
    *(_BYTE *)(a1 + 23) = v6;
  }
}

void sub_1008CBCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CBD08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AED0;
  sub_100109DDC((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CBD38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AED0;
  sub_100109DDC((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008CBD7C()
{
  operator new();
}

uint64_t sub_1008CBDBC(uint64_t result)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(result + 28);
  if (v1)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(result + 8);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 20) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008CBE0C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  void *v18;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  unsigned __int8 *v27;
  uint64_t result;
  unsigned int v29;

  v5 = (unsigned int *)(a1 + 16);
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v5 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)this + 1) = v11;
LABEL_28:
          v12 = *(_DWORD *)(a1 + 28) | 1;
          *(_DWORD *)(a1 + 28) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((_QWORD *)this + 1) = v11 + 1;
            goto LABEL_31;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_22;
        v12 = *(_DWORD *)(a1 + 28);
LABEL_31:
        *(_DWORD *)(a1 + 28) = v12 | 2;
        v18 = *(void **)(a1 + 8);
        if (v18 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v18);
        if (!(_DWORD)result)
          return result;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v19 >= v13 || *v19 != 24)
          continue;
        v14 = v19 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_37:
        v29 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v20 = v29;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          v20 = *v14;
          v21 = v14 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        *(_BYTE *)(a1 + 20) = v20 != 0;
        *(_DWORD *)(a1 + 28) |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32)
          continue;
        v15 = v21 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_45:
        v29 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v22 = v29;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          v22 = *v15;
          v23 = v15 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        *(_BYTE *)(a1 + 21) = v22 != 0;
        *(_DWORD *)(a1 + 28) |= 8u;
        if ((unint64_t)v23 >= v13 || *v23 != 40)
          continue;
        v16 = v23 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_53:
        v29 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v24 = v29;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          v24 = *v16;
          v25 = v16 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        *(_BYTE *)(a1 + 22) = v24 != 0;
        *(_DWORD *)(a1 + 28) |= 0x10u;
        if ((unint64_t)v25 >= v13 || *v25 != 48)
          continue;
        v17 = v25 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_61:
        v29 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v26 = v29;
          v27 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          v26 = *v17;
          v27 = (unsigned __int8 *)(v17 + 1);
          *((_QWORD *)this + 1) = v27;
        }
        *(_BYTE *)(a1 + 23) = v26 != 0;
        *(_DWORD *)(a1 + 28) |= 0x20u;
        if (v27 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_37;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_61;
      default:
        v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008CC1E0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(v5 + 8), a2);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 21), a2, a4);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 23), a2, a4);
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 22), a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 23), a2, a4);
  return result;
}

uint64_t sub_1008CC2AC(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unsigned int v13;

  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    result = 0;
    goto LABEL_28;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_19;
LABEL_10:
    v7 = *(_QWORD *)(a1 + 8);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = v8;
    v10 = *(_QWORD *)(v7 + 8);
    if ((v8 & 0x80u) == 0)
      v11 = *(unsigned __int8 *)(v7 + 23);
    else
      v11 = v10;
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
      v8 = *(unsigned __int8 *)(v7 + 23);
      v10 = *(_QWORD *)(v7 + 8);
      v3 = *(_DWORD *)(a1 + 28);
      v9 = *(_BYTE *)(v7 + 23);
    }
    else
    {
      v12 = 1;
    }
    if (v9 < 0)
      v8 = v10;
    v4 += v12 + v8 + 1;
    goto LABEL_19;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v6 < 0x80)
  {
    v4 = 2;
    if ((v3 & 2) == 0)
      goto LABEL_19;
    goto LABEL_10;
  }
  v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  v3 = *(_DWORD *)(a1 + 28);
  if ((v3 & 2) != 0)
    goto LABEL_10;
LABEL_19:
  v13 = v4 + 2;
  if ((v3 & 4) == 0)
    v13 = v4;
  if ((v3 & 8) != 0)
    v13 += 2;
  if ((v3 & 0x10) != 0)
    v13 += 2;
  if ((v3 & 0x20) != 0)
    result = v13 + 2;
  else
    result = v13;
LABEL_28:
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_1008CC3A0(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CBB7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CC3EC()
{
  return 1;
}

_QWORD *sub_1008CC3F4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.SuplConfig");
}

void sub_1008CC404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  _BYTE v17[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v17, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 2751);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v5 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v9 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_BYTE *)(a1 + 8) = v9;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(_DWORD *)(a1 + 12) = v10;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v11 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(_DWORD *)(a1 + 16) = v11;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v12 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 52) |= 8u;
  *(_DWORD *)(a1 + 20) = v12;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_24:
    v14 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v14;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  v13 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v13;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x20) != 0)
    goto LABEL_24;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_25:
  v15 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 0x40u;
  *(_DWORD *)(a1 + 32) = v15;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v6;
    v5 = *(_DWORD *)(a2 + 52);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      v7 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 0x100u;
      *(_DWORD *)(a1 + 40) = v7;
      v5 = *(_DWORD *)(a2 + 52);
    }
    if ((v5 & 0x200) != 0)
    {
      v8 = *(_DWORD *)(a2 + 44);
      *(_DWORD *)(a1 + 52) |= 0x200u;
      *(_DWORD *)(a1 + 44) = v8;
    }
  }
}

void sub_1008CC5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CC5D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AF48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CC5E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AF48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008CC610()
{
  operator new();
}

uint64_t sub_1008CC658(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)(result + 12) = 0;
    *(_QWORD *)(result + 28) = 0;
    *(_QWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 36) = 0;
  }
  if ((v1 & 0xFF00) != 0)
    *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1008CC68C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  unsigned int v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned __int8 *v37;
  uint64_t result;
  unsigned int *v39;
  unsigned int v40;
  unsigned int v41;

  v39 = (unsigned int *)(a1 + 12);
  v5 = (unsigned int *)(a1 + 16);
  v6 = (unsigned int *)(a1 + 20);
  v7 = (unsigned int *)(a1 + 24);
  v8 = (unsigned int *)(a1 + 28);
  v9 = (unsigned int *)(a1 + 32);
  v10 = (unsigned int *)(a1 + 36);
  v11 = (unsigned int *)(a1 + 44);
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v40 = 0;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          v17 = *v16;
          v18 = v16 + 1;
          *((_QWORD *)this + 1) = v18;
LABEL_36:
          *(_BYTE *)(a1 + 8) = v17 != 0;
          *(_DWORD *)(a1 + 52) |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            v19 = v18 + 1;
            *((_QWORD *)this + 1) = v19;
            goto LABEL_39;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
        if ((_DWORD)result)
        {
          v17 = v40;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_36;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_39:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v39 = *v19;
          v28 = v19 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_47:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v20;
          v29 = v20 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32)
          continue;
        v21 = v29 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_55:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v21;
          v30 = v21 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40)
          continue;
        v22 = v30 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_63:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v22;
          v31 = v22 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if ((unint64_t)v31 >= v15 || *v31 != 48)
          continue;
        v23 = v31 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_71:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v23;
          v32 = v23 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 52) |= 0x20u;
        if ((unint64_t)v32 >= v15 || *v32 != 56)
          continue;
        v24 = v32 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_79:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v24;
          v33 = v24 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 52) |= 0x40u;
        if ((unint64_t)v33 >= v15 || *v33 != 64)
          continue;
        v25 = v33 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_87:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v25;
          v34 = v25 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 52) |= 0x80u;
        if ((unint64_t)v34 >= v15 || *v34 != 72)
          continue;
        v26 = v34 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_95:
        v41 = 0;
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result)
            return result;
          v35 = v41;
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v35 = *v26;
          v36 = v26 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 40) = v35;
        *(_DWORD *)(a1 + 52) |= 0x100u;
        if ((unint64_t)v36 >= v15 || *v36 != 80)
          continue;
        v27 = v36 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_103:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v37 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v27;
          v37 = (unsigned __int8 *)(v27 + 1);
          *((_QWORD *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 52) |= 0x200u;
        if (v37 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_55;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v22 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_63;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v23 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v24 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_79;
      case 8u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v25 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v26 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 0xAu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v27 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_103;
      default:
        v14 = TagFallback & 7;
LABEL_30:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008CCC18(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = v5[13];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[13];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[13];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[13];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[13];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[13];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[13];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[13];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  if ((v5[13] & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  return result;
}

uint64_t sub_1008CCD54(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;

  v3 = a1[13];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_39;
  }
  v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      v3 = a1[13];
    }
    else
    {
      v6 = 1;
    }
    v4 = (v4 | 1) + v6;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0)
        goto LABEL_5;
      goto LABEL_19;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    v3 = a1[13];
  }
  else
  {
    v8 = 1;
  }
  v4 = (v4 + v8 + 1);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_19:
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    v3 = a1[13];
  }
  else
  {
    v10 = 2;
  }
  v4 = (v10 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_27;
  }
LABEL_23:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    v3 = a1[13];
  }
  else
  {
    v12 = 2;
  }
  v4 = (v12 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_31;
  }
LABEL_27:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = a1[13];
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0)
      goto LABEL_39;
    goto LABEL_35;
  }
LABEL_31:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = a1[13];
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_35:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
      v3 = a1[13];
    }
    else
    {
      v18 = 2;
    }
    v4 = (v18 + v4);
  }
LABEL_39:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
      if ((v19 & 0x80000000) != 0)
      {
        v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
        v3 = a1[13];
      }
      else
      {
        v20 = 2;
      }
      v4 = (v20 + v4);
    }
    if ((v3 & 0x200) != 0)
    {
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
      if (v21 >= 0x80)
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      else
        v22 = 2;
      v4 = (v22 + v4);
    }
  }
  a1[12] = v4;
  return v4;
}

void sub_1008CCF24(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CC404(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CCF70()
{
  return 1;
}

_QWORD *sub_1008CCF78@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.LteCellInfo");
}

void sub_1008CCF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 3078);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v7 = *(_BYTE *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_BYTE *)(a1 + 8) = v7;
      v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v10;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0)
      return;
LABEL_9:
    v6 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v6;
  }
}

void sub_1008CD098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CD0B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AFC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CD0C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215AFC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008CD0F0()
{
  operator new();
}

uint64_t sub_1008CD134(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)(result + 20) = 0;
    *(_QWORD *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008CD150(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned __int8 *v23;
  uint64_t result;
  unsigned int v25;

  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v25 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          v14 = *v13;
          v15 = v13 + 1;
          *((_QWORD *)this + 1) = v15;
LABEL_26:
          *(_BYTE *)(a1 + 8) = v14 != 0;
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            v16 = v15 + 1;
            *((_QWORD *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if ((_DWORD)result)
        {
          v14 = v25;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v16;
          v20 = v16 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v20 >= v12 || *v20 != 24)
          continue;
        v17 = v20 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v17;
          v21 = v17 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 32)
          continue;
        v18 = v21 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v18;
          v22 = v18 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v22 >= v12 || *v22 != 40)
          continue;
        v19 = v22 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v19;
          v23 = (unsigned __int8 *)(v19 + 1);
          *((_QWORD *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_37;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v19 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_53;
      default:
        v11 = TagFallback & 7;
LABEL_20:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008CD484(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[8];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  if ((v5[8] & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  return result;
}

uint64_t sub_1008CD534(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  v3 = a1[8];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_24;
  }
  v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = a1[8];
    }
    else
    {
      v6 = 2;
    }
    v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0)
        goto LABEL_5;
      goto LABEL_16;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    v3 = a1[8];
  }
  else
  {
    v8 = 2;
  }
  v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_24;
    goto LABEL_20;
  }
LABEL_16:
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    v3 = a1[8];
  }
  else
  {
    v10 = 2;
  }
  v4 = (v10 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_20:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    else
      v12 = 2;
    v4 = (v12 + v4);
  }
LABEL_24:
  a1[7] = v4;
  return v4;
}

void sub_1008CD61C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CCF88(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CD668()
{
  return 1;
}

_QWORD *sub_1008CD670@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GsmCellInfo");
}

void sub_1008CD680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  char v14;
  _BYTE v15[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v15, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 3479);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    v7 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_BYTE *)(a1 + 8) = v7;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_16;
    }
  }
  else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 12) = v8;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 4u;
  *(_DWORD *)(a1 + 16) = v9;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  v10 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 44) |= 8u;
  *(_DWORD *)(a1 + 20) = v10;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_19:
    v12 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v12;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        return;
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_18:
  v11 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v11;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 0x20) != 0)
    goto LABEL_19;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_20:
  v13 = *(_DWORD *)(a2 + 32);
  if (v13 >= 4)
    sub_10190E2C8();
  *(_DWORD *)(a1 + 44) |= 0x40u;
  *(_DWORD *)(a1 + 32) = v13;
  if ((*(_DWORD *)(a2 + 44) & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v6;
  }
}

void sub_1008CD7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CD814(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B038;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CD824(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B038;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008CD854()
{
  operator new();
}

uint64_t sub_1008CD89C(uint64_t result)
{
  if (*(_BYTE *)(result + 44))
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)(result + 12) = 0;
    *(_QWORD *)(result + 28) = 0;
    *(_QWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 36) = 0;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008CD8C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  unsigned int v16;
  _BYTE *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  char *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  unsigned __int8 *v33;
  uint64_t result;
  unsigned int v35;
  unsigned int v36;

  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 24);
  v9 = (unsigned int *)(a1 + 28);
  v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v35 = 0;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          v16 = *v15;
          v17 = v15 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_32:
          *(_BYTE *)(a1 + 8) = v16 != 0;
          *(_DWORD *)(a1 + 44) |= 1u;
          if ((unint64_t)v17 < v14 && *v17 == 16)
          {
            v18 = v17 + 1;
            *((_QWORD *)this + 1) = v18;
            goto LABEL_35;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
        if ((_DWORD)result)
        {
          v16 = v35;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v18;
          v26 = v18 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v26 >= v14 || *v26 != 24)
          continue;
        v19 = v26 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_43:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v19;
          v27 = v19 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v27 >= v14 || *v27 != 32)
          continue;
        v20 = v27 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v20;
          v28 = v20 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v28 >= v14 || *v28 != 40)
          continue;
        v21 = v28 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v21;
          v29 = v21 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v29 >= v14 || *v29 != 48)
          continue;
        v22 = v29 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v22;
          v30 = v22 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v30 >= v14 || *v30 != 56)
          continue;
        v23 = v30 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_75:
        v36 = 0;
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
          if (!(_DWORD)result)
            return result;
          v31 = v36;
        }
        else
        {
          v31 = *v23;
          *((_QWORD *)this + 1) = v23 + 1;
        }
        if (v31 <= 3)
        {
          *(_DWORD *)(a1 + 44) |= 0x40u;
          *(_DWORD *)(a1 + 32) = v31;
        }
        v32 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        if ((unint64_t)v32 >= v24 || *v32 != 64)
          continue;
        v25 = v32 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_85:
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v33 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v24 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v25;
          v33 = (unsigned __int8 *)(v25 + 1);
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        if (v33 != (unsigned __int8 *)v24 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v19 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_43;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_51;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v21 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_59;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v22 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_67;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v23 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_75;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v25 = (char *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_85;
      default:
        v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008CDD64(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[11];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  if ((v5[11] & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  return result;
}

uint64_t sub_1008CDE68(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;

  v3 = a1[11];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_41;
  }
  v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = a1[11];
    }
    else
    {
      v6 = 2;
    }
    v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0)
        goto LABEL_5;
      goto LABEL_19;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    v3 = a1[11];
  }
  else
  {
    v8 = 2;
  }
  v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_19:
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    v3 = a1[11];
  }
  else
  {
    v10 = 2;
  }
  v4 = (v10 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_27;
  }
LABEL_23:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    v3 = a1[11];
  }
  else
  {
    v12 = 2;
  }
  v4 = (v12 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_31;
  }
LABEL_27:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = a1[11];
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0)
      goto LABEL_41;
    goto LABEL_37;
  }
LABEL_31:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if ((v15 & 0x80000000) != 0)
  {
    v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = a1[11];
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_37:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v17 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    else
      v18 = 2;
    v4 = (v18 + v4);
  }
LABEL_41:
  a1[10] = v4;
  return v4;
}

void sub_1008CDFE0(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CD680(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CE02C()
{
  return 1;
}

_QWORD *sub_1008CE034@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.WcdmaCellInfo");
}

void sub_1008CE044(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  _BYTE v22[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v22, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 3770);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v5);
      v7 = a1[5];
      v8 = (int)a1[4];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v7 + 1);
          v7 = a1[5];
        }
        a1[5] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 1);
      a1[4] = v8 + 1;
      sub_1008CC404(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 16));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 40) + a1[10]);
  if (*(int *)(a2 + 40) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8 * v10);
      v12 = a1[11];
      v13 = (int)a1[10];
      if ((int)v13 >= v12)
      {
        if (v12 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v12 + 1);
          v12 = a1[11];
        }
        a1[11] = v12 + 1;
        operator new();
      }
      v14 = *((_QWORD *)a1 + 4);
      a1[10] = v13 + 1;
      sub_1008CCF88(*(_QWORD *)(v14 + 8 * v13), v11);
      ++v10;
    }
    while (v10 < *(int *)(a2 + 40));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 14), *(_DWORD *)(a2 + 64) + a1[16]);
  if (*(int *)(a2 + 64) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v15);
      v17 = a1[17];
      v18 = (int)a1[16];
      if ((int)v18 >= v17)
      {
        if (v17 == a1[18])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 14), v17 + 1);
          v17 = a1[17];
        }
        a1[17] = v17 + 1;
        operator new();
      }
      v19 = *((_QWORD *)a1 + 7);
      a1[16] = v18 + 1;
      sub_1008CD680(*(_QWORD *)(v19 + 8 * v18), v16);
      ++v15;
    }
    while (v15 < *(int *)(a2 + 64));
  }
  if ((*(_BYTE *)(a2 + 88) & 1) != 0)
  {
    v20 = *(_DWORD *)(a2 + 80);
    if (v20 >= 7)
      sub_10190E2F0();
    a1[22] |= 1u;
    a1[20] = v20;
  }
}

void sub_1008CE378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CE390(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215B0B0;
  sub_10010C59C(a1 + 7);
  sub_10010C59C(a1 + 4);
  sub_10010C59C(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008CE3E0(uint64_t *a1)
{
  sub_1008CE390(a1);
  operator delete();
}

uint64_t sub_1008CE404(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310D70;
  if (!qword_102310D70)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310D70;
  }
  return result;
}

void sub_1008CE430()
{
  operator new();
}

uint64_t sub_1008CE484(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = result;
  if (*(_BYTE *)(result + 88))
    *(_DWORD *)(result + 80) = 0;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v4);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  if (*(int *)(v1 + 64) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t sub_1008CE558(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  char *v11;
  unsigned int v12;
  uint64_t result;
  _BYTE *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  BOOL v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  _BYTE *v51;
  unsigned int v52;

  v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 14);
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 < *((_QWORD *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v52 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
          if (!(_DWORD)result)
            return result;
          v12 = v52;
        }
        else
        {
          v12 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (v12 <= 6)
        {
          a1[22] |= 1u;
          a1[20] = v12;
        }
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 != 18)
          continue;
        goto LABEL_27;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_18;
        while (2)
        {
          v15 = a1[5];
          v16 = a1[4];
          if ((int)v16 >= v15)
          {
            if (v15 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v15 + 1);
              v15 = a1[5];
            }
            a1[5] = v15 + 1;
            operator new();
          }
          v17 = *((_QWORD *)a1 + 1);
          a1[4] = v16 + 1;
          v18 = *(_QWORD *)(v17 + 8 * v16);
          v52 = 0;
          v19 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
          }
          else
          {
            v52 = *v19;
            *((_QWORD *)this + 1) = v19 + 1;
          }
          v20 = *((_DWORD *)this + 14);
          v21 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v20 + 1;
          if (v20 >= v21)
            return 0;
          v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
          if (!sub_1008CC68C(v18, this, v23) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
          v24 = *((_DWORD *)this + 14);
          v25 = __OFSUB__(v24, 1);
          v26 = v24 - 1;
          if (v26 < 0 == v25)
            *((_DWORD *)this + 14) = v26;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v14 < *((_QWORD *)this + 2))
          {
            v27 = *v14;
            if (v27 == 18)
            {
LABEL_27:
              *((_QWORD *)this + 1) = v14 + 1;
              continue;
            }
            if (v27 == 26)
            {
              do
              {
                *((_QWORD *)this + 1) = v14 + 1;
LABEL_46:
                v28 = a1[11];
                v29 = a1[10];
                if ((int)v29 >= v28)
                {
                  if (v28 == a1[12])
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v28 + 1);
                    v28 = a1[11];
                  }
                  a1[11] = v28 + 1;
                  operator new();
                }
                v30 = *((_QWORD *)a1 + 4);
                a1[10] = v29 + 1;
                v31 = *(_QWORD *)(v30 + 8 * v29);
                v52 = 0;
                v32 = (char *)*((_QWORD *)this + 1);
                if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
                }
                else
                {
                  v52 = *v32;
                  *((_QWORD *)this + 1) = v32 + 1;
                }
                v33 = *((_DWORD *)this + 14);
                v34 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v33 + 1;
                if (v33 >= v34)
                  return 0;
                v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
                if (!sub_1008CD150(v31, this, v36) || !*((_BYTE *)this + 36))
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
                v37 = *((_DWORD *)this + 14);
                v25 = __OFSUB__(v37, 1);
                v38 = v37 - 1;
                if (v38 < 0 == v25)
                  *((_DWORD *)this + 14) = v38;
                v14 = (_BYTE *)*((_QWORD *)this + 1);
                if ((unint64_t)v14 >= *((_QWORD *)this + 2))
                  goto LABEL_2;
                v39 = *v14;
              }
              while (v39 == 26);
              if (v39 == 34)
              {
                do
                {
                  *((_QWORD *)this + 1) = v14 + 1;
LABEL_64:
                  v40 = a1[17];
                  v41 = a1[16];
                  if ((int)v41 >= v40)
                  {
                    if (v40 == a1[18])
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v40 + 1);
                      v40 = a1[17];
                    }
                    a1[17] = v40 + 1;
                    operator new();
                  }
                  v42 = *((_QWORD *)a1 + 7);
                  a1[16] = v41 + 1;
                  v43 = *(_QWORD *)(v42 + 8 * v41);
                  v52 = 0;
                  v44 = (char *)*((_QWORD *)this + 1);
                  if ((unint64_t)v44 >= *((_QWORD *)this + 2) || *v44 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
                  }
                  else
                  {
                    v52 = *v44;
                    *((_QWORD *)this + 1) = v44 + 1;
                  }
                  v45 = *((_DWORD *)this + 14);
                  v46 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v45 + 1;
                  if (v45 >= v46)
                    return 0;
                  v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
                  if (!sub_1008CD8C0(v43, this, v48) || !*((_BYTE *)this + 36))
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
                  v49 = *((_DWORD *)this + 14);
                  v25 = __OFSUB__(v49, 1);
                  v50 = v49 - 1;
                  if (v50 < 0 == v25)
                    *((_DWORD *)this + 14) = v50;
                  v14 = (_BYTE *)*((_QWORD *)this + 1);
                  v51 = (_BYTE *)*((_QWORD *)this + 2);
                }
                while (v14 < v51 && *v14 == 34);
                if (v14 == v51 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  result = 1;
                  *((_BYTE *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          break;
        }
        break;
      case 3u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_46;
        goto LABEL_18;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_18;
        goto LABEL_64;
      default:
        v10 = TagFallback & 7;
LABEL_18:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008CEB00(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  if ((*(_BYTE *)(result + 88) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 80), (int)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    v8 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  return result;
}

uint64_t sub_1008CEBDC(uint64_t a1, unsigned int a2)
{
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;

  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      v3 = 2;
    }
  }
  else
  {
    v3 = 0;
  }
  v5 = *(_DWORD *)(a1 + 16);
  v6 = v5 + v3;
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CCD54(*(unsigned int **)(*(_QWORD *)(a1 + 8)+ 8 * v7), a2);
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      else
        v10 = 1;
      v6 += v9 + v10;
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  v11 = *(_DWORD *)(a1 + 40);
  v12 = v11 + v6;
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CD534(*(unsigned int **)(*(_QWORD *)(a1 + 32)+ 8 * v13), a2);
      v15 = (int)v14;
      if (v14 >= 0x80)
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      else
        v16 = 1;
      v12 += v15 + v16;
      ++v13;
    }
    while (v13 < *(int *)(a1 + 40));
  }
  v17 = *(_DWORD *)(a1 + 64);
  v18 = (v17 + v12);
  if (v17 >= 1)
  {
    v19 = 0;
    do
    {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CDE68(*(unsigned int **)(*(_QWORD *)(a1 + 56)+ 8 * v19), a2);
      v21 = (int)v20;
      if (v20 >= 0x80)
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      else
        v22 = 1;
      v18 = (v21 + v18 + v22);
      ++v19;
    }
    while (v19 < *(int *)(a1 + 64));
  }
  *(_DWORD *)(a1 + 84) = v18;
  return v18;
}

void sub_1008CED3C(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CE044(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CED88()
{
  return 1;
}

_QWORD *sub_1008CED90@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.LocationId");
}

void sub_1008CEDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 3972);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_BYTE *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 2u;
      *(_BYTE *)(a1 + 12) = v7;
    }
  }
}

void sub_1008CEE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CEE60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B128;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CEE70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B128;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008CEEA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310D78;
  if (!qword_102310D78)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310D78;
  }
  return result;
}

void sub_1008CEECC()
{
  operator new();
}

uint64_t sub_1008CEF0C(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
  {
    *(_DWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008CEF24(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned int v13;
  unsigned __int8 *v14;
  uint64_t result;
  unsigned int v16;

  v5 = (unsigned int *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)this + 1);
      v9 = *((_QWORD *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)this + 1) = v10;
LABEL_24:
        v16 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!(_DWORD)result)
            return result;
          v13 = v16;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v10;
          v14 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        *(_BYTE *)(a1 + 12) = v13 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008CF0D4(uint64_t result, char a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008CF12C(uint64_t a1, unsigned int a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;

  LOBYTE(v3) = *(_BYTE *)(a1 + 20);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v6 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        v3 = *(_DWORD *)(a1 + 20);
      }
      else
      {
        v4 = 2;
      }
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      result = v4 + 2;
    else
      result = v4;
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1008CF194(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CEDA0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CF1E0()
{
  return 1;
}

_QWORD *sub_1008CF1E8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.WlanMeasurementRequest");
}

void sub_1008CF1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  char v9;
  char v10;
  int v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 4269);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v7 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      v8 = *(std::string **)(a1 + 8);
      if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v8, v7);
      v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *(_BYTE *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_BYTE *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v10 = *(_BYTE *)(a2 + 17);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_BYTE *)(a1 + 17) = v10;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_16:
    v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0)
      return;
LABEL_9:
    v6 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v6;
  }
}

void sub_1008CF34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CF364(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B1A0;
  sub_100109DDC((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CF394(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B1A0;
  sub_100109DDC((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008CF3D8()
{
  operator new();
}

uint64_t sub_1008CF424(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 32))
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)v1 = 0;
          *(_QWORD *)(v1 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008CF474(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  void *v9;
  uint64_t result;
  unint64_t v11;
  _BYTE *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  unsigned int v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned int v22;
  unsigned __int8 *v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;

  v5 = (unsigned int *)(a1 + 20);
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_26;
        *(_DWORD *)(a1 + 32) |= 1u;
        v9 = *(void **)(a1 + 8);
        if (v9 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v9);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
          if ((unint64_t)v12 < v11 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)this + 1) = v13;
            goto LABEL_18;
          }
          continue;
        }
        return result;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v13 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_18:
        v25 = 0;
        if ((unint64_t)v13 < v11 && (*v13 & 0x80000000) == 0)
        {
          v14 = *v13;
          v15 = v13 + 1;
          *((_QWORD *)this + 1) = v15;
LABEL_32:
          *(_BYTE *)(a1 + 16) = v14 != 0;
          *(_DWORD *)(a1 + 32) |= 2u;
          if ((unint64_t)v15 < v11 && *v15 == 24)
          {
            v16 = v15 + 1;
            *((_QWORD *)this + 1) = v16;
            goto LABEL_35;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if ((_DWORD)result)
        {
          v14 = v25;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
          goto LABEL_32;
        }
        break;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v16 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_35:
        v24 = 0;
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result)
            return result;
          v19 = v24;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          v19 = *v16;
          v20 = v16 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        *(_BYTE *)(a1 + 17) = v19 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v20 >= v11 || *v20 != 32)
          continue;
        v17 = v20 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v17;
          v21 = v17 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v21 >= v11 || *v21 != 40)
          continue;
        v18 = v21 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_51:
        v26 = 0;
        if ((unint64_t)v18 >= v11 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result)
            return result;
          v22 = v26;
          v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          v22 = *v18;
          v23 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 24) = v22;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v11 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v17 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_43;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v18 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_51;
      default:
        v8 = TagFallback & 7;
LABEL_26:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008CF7C0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v4;
  uint64_t v5;
  int v6;

  v4 = a2;
  v5 = result;
  v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(1, *(_QWORD *)(result + 8), a2);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), v4, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 17), v4, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 24), v4, a4);
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), v4, a4);
  if ((*(_DWORD *)(v5 + 32) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 24), v4, a4);
  return result;
}

uint64_t sub_1008CF870(uint64_t a1, unsigned int a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;

  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      v6 = *(_QWORD *)(a1 + 8);
      v7 = *(unsigned __int8 *)(v6 + 23);
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 8);
      if ((v7 & 0x80u) == 0)
        v10 = *(unsigned __int8 *)(v6 + 23);
      else
        v10 = v9;
      if (v10 >= 0x80)
      {
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        v7 = *(unsigned __int8 *)(v6 + 23);
        v9 = *(_QWORD *)(v6 + 8);
        v11 = v12 + 1;
        v3 = *(_DWORD *)(a1 + 32);
        v8 = *(_BYTE *)(v6 + 23);
      }
      else
      {
        v11 = 2;
      }
      if (v8 < 0)
        v7 = v9;
      v4 = v11 + v7;
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v4 += 2;
    if ((v3 & 4) != 0)
      v5 = v4 + 2;
    else
      v5 = v4;
    if ((v3 & 8) != 0)
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
        v3 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        v14 = 2;
      }
      v5 = (v14 + v5);
    }
    if ((v3 & 0x10) != 0)
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v15 & 0x80000000) != 0)
      {
        v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      }
      else
      {
        v16 = 2;
      }
      v5 = (v16 + v5);
    }
  }
  else
  {
    v5 = 0;
  }
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

void sub_1008CF970(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CF1F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CF9BC()
{
  return 1;
}

_QWORD *sub_1008CF9C4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.WlanMeasurementElement");
}

void sub_1008CF9D4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 4486);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v5);
      v7 = a1[5];
      v8 = (int)a1[4];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v7 + 1);
          v7 = a1[5];
        }
        a1[5] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 1);
      a1[4] = v8 + 1;
      sub_1008CF1F8(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 16));
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    v10 = *(_DWORD *)(a2 + 32);
    if (v10 >= 6)
      sub_10190E318();
    a1[10] |= 1u;
    a1[8] = v10;
  }
}

void sub_1008CFB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CFB78(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215B218;
  sub_10010C59C(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008CFBB0(uint64_t *a1)
{
  sub_1008CFB78(a1);
  operator delete();
}

uint64_t sub_1008CFBD4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310D88;
  if (!qword_102310D88)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310D88;
  }
  return result;
}

void sub_1008CFC00()
{
  operator new();
}

uint64_t sub_1008CFC44(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 40))
    *(_DWORD *)(result + 32) = 0;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_1008CFCA8(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  char *v9;
  unsigned int v10;
  uint64_t result;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  unsigned int v26;
  unsigned int v27;

  v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v26 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result)
            return result;
          v10 = v26;
        }
        else
        {
          v10 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        if (v10 <= 5)
        {
          a1[10] |= 1u;
          a1[8] = v10;
        }
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 < *((_QWORD *)this + 2) && *v12 == 18)
          goto LABEL_25;
      }
      if (TagFallback >> 3 != 2)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_16;
      while (1)
      {
        v13 = a1[5];
        v14 = a1[4];
        if ((int)v14 >= v13)
        {
          if (v13 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v13 + 1);
            v13 = a1[5];
          }
          a1[5] = v13 + 1;
          operator new();
        }
        v15 = *((_QWORD *)a1 + 1);
        a1[4] = v14 + 1;
        v16 = *(_QWORD *)(v15 + 8 * v14);
        v27 = 0;
        v17 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0;
        }
        else
        {
          v27 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008CF474(v16, this, v21) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        v22 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)this + 14) = v24;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v25 = (_BYTE *)*((_QWORD *)this + 2);
        if (v12 >= v25 || *v12 != 18)
          break;
LABEL_25:
        *((_QWORD *)this + 1) = v12 + 1;
      }
      if (v12 == v25 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008CFF6C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = result;
  if ((*(_BYTE *)(result + 40) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), (int)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1008CFFE0(uint64_t a1, unsigned int a2)
{
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      v3 = 2;
    }
  }
  else
  {
    v3 = 0;
  }
  v5 = *(_DWORD *)(a1 + 16);
  v6 = (v5 + v3);
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CF870(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v7), a2);
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      else
        v10 = 1;
      v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_1008D0098(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008CF9D4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D00E4()
{
  return 1;
}

_QWORD *sub_1008D00EC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.WlanMeasurementList");
}

void sub_1008D00FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 4777);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v7 = *(_BYTE *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_BYTE *)(a1 + 8) = v7;
      v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v10;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0)
      return;
LABEL_9:
    v6 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v6;
  }
}

void sub_1008D020C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D0224(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B290;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D0234(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B290;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D0264()
{
  operator new();
}

uint64_t sub_1008D02A8(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)(result + 20) = 0;
    *(_QWORD *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008D02C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned __int8 *v23;
  uint64_t result;
  unsigned int v25;

  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v25 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          v14 = *v13;
          v15 = v13 + 1;
          *((_QWORD *)this + 1) = v15;
LABEL_26:
          *(_BYTE *)(a1 + 8) = v14 != 0;
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            v16 = v15 + 1;
            *((_QWORD *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if ((_DWORD)result)
        {
          v14 = v25;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v16;
          v20 = v16 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v20 >= v12 || *v20 != 24)
          continue;
        v17 = v20 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v17;
          v21 = v17 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 32)
          continue;
        v18 = v21 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v18;
          v22 = v18 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v22 >= v12 || *v22 != 40)
          continue;
        v19 = v22 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v19;
          v23 = (unsigned __int8 *)(v19 + 1);
          *((_QWORD *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_37;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v19 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_53;
      default:
        v11 = TagFallback & 7;
LABEL_20:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008D05F8(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[8];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  if ((v5[8] & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  return result;
}

uint64_t sub_1008D06A8(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  v3 = a1[8];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_24;
  }
  v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = a1[8];
    }
    else
    {
      v6 = 2;
    }
    v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0)
        goto LABEL_5;
      goto LABEL_16;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    v3 = a1[8];
  }
  else
  {
    v8 = 2;
  }
  v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0)
      goto LABEL_24;
    goto LABEL_20;
  }
LABEL_16:
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    v3 = a1[8];
  }
  else
  {
    v10 = 2;
  }
  v4 = (v10 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_20:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    else
      v12 = 2;
    v4 = (v12 + v4);
  }
LABEL_24:
  a1[7] = v4;
  return v4;
}

void sub_1008D0790(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D00FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D07DC()
{
  return 1;
}

_QWORD *sub_1008D07E4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.QoP");
}

void sub_1008D07F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  unsigned int v8;
  const std::string *v9;
  std::string *v10;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 5069);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    sub_1002A19E0(a1 + 24, *(_DWORD *)(a1 + 32) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  LOBYTE(v6) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      v7 = *(_BYTE *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_BYTE *)(a1 + 8) = v7;
      v6 = *(_DWORD *)(a2 + 44);
    }
    if ((v6 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 12);
      if (v8 >= 5)
        sub_10190E340();
      *(_DWORD *)(a1 + 44) |= 2u;
      *(_DWORD *)(a1 + 12) = v8;
      v6 = *(_DWORD *)(a2 + 44);
    }
    if ((v6 & 4) != 0)
    {
      v9 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 44) |= 4u;
      v10 = *(std::string **)(a1 + 16);
      if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(v10, v9);
    }
  }
}

void sub_1008D0944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D095C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B308;
  sub_1000257AC((uint64_t)a1);
  if (*((_QWORD *)a1 + 3))
    operator delete[]();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D09AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D095C(a1);
  operator delete();
}

void sub_1008D09D0()
{
  operator new();
}

uint64_t sub_1008D0A1C(uint64_t result)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(result + 44);
  if (v1)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008D0A70(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t result;
  unsigned int v17;
  _BYTE *v18;
  void *v19;
  char *v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  _BYTE *v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  unsigned int v34[12];

  v5 = a1 + 24;
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v34[0] = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34);
          if (!(_DWORD)result)
            return result;
          v11 = v34[0];
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          v11 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        *(_BYTE *)(a1 + 8) = v11 != 0;
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v12 < v9 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)this + 1) = v13;
          goto LABEL_30;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
LABEL_30:
        v34[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34);
          if (!(_DWORD)result)
            return result;
          v17 = v34[0];
        }
        else
        {
          v17 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        if (v17 <= 4)
        {
          *(_DWORD *)(a1 + 44) |= 2u;
          *(_DWORD *)(a1 + 12) = v17;
        }
        v18 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 != 26)
          continue;
        *((_QWORD *)this + 1) = v18 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 44) |= 4u;
        v19 = *(void **)(a1 + 16);
        if (v19 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v19);
        if (!(_DWORD)result)
          return result;
        v20 = (char *)*((_QWORD *)this + 1);
        v14 = (char *)*((_QWORD *)this + 2);
        if (v20 < v14 && *v20 == 32)
          goto LABEL_45;
        continue;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_40;
        goto LABEL_20;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 2)
        {
          result = sub_1008D0E98(this, v5);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v20 = (char *)*((_QWORD *)this + 1);
            v14 = (char *)*((_QWORD *)this + 2);
            if (v20 >= v14 || *v20 != 32)
              break;
LABEL_45:
            v15 = v20 + 1;
            *((_QWORD *)this + 1) = v15;
LABEL_46:
            v32 = 0;
            if (v15 >= v14 || *v15 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0;
            }
            else
            {
              v32 = *v15;
              *((_QWORD *)this + 1) = v15 + 1;
            }
            v21 = *(_DWORD *)(a1 + 32);
            if (v21 == *(_DWORD *)(a1 + 36))
            {
              sub_1002A19E0(v5, v21 + 1);
              v21 = *(_DWORD *)(a1 + 32);
            }
            v22 = v32;
            v23 = *(_QWORD *)(a1 + 24);
            *(_DWORD *)(a1 + 32) = v21 + 1;
            *(_DWORD *)(v23 + 4 * v21) = v22;
            v24 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
            if (v24 >= 1)
            {
              v25 = v24 + 1;
              do
              {
                v26 = (_BYTE *)*((_QWORD *)this + 1);
                v27 = *((_QWORD *)this + 2);
                if ((unint64_t)v26 >= v27 || *v26 != 32)
                  break;
                *((_QWORD *)this + 1) = v26 + 1;
                if ((unint64_t)(v26 + 1) >= v27 || (char)v26[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0;
                }
                else
                {
                  v32 = v26[1];
                  *((_QWORD *)this + 1) = v26 + 2;
                }
                v28 = *(_DWORD *)(a1 + 32);
                if (v28 >= *(_DWORD *)(a1 + 36))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v34, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                  v29 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v34, "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v33, v29);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v34);
                  v28 = *(_DWORD *)(a1 + 32);
                }
                v30 = v32;
                v31 = *(_QWORD *)(a1 + 24);
                *(_DWORD *)(a1 + 32) = v28 + 1;
                *(_DWORD *)(v31 + 4 * v28) = v30;
                --v25;
              }
              while (v25 > 1);
            }
          }
          if (v20 == v14 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v15 = (char *)*((_QWORD *)this + 1);
          v14 = (char *)*((_QWORD *)this + 2);
          goto LABEL_46;
        }
LABEL_20:
        if (v8 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
            return 0;
          continue;
        }
        return 1;
      default:
        v8 = TagFallback & 7;
        goto LABEL_20;
    }
  }
}

void sub_1008D0E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008D0E98(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  char *v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;

  v13 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!(_DWORD)result)
      return result;
    v5 = v13;
  }
  else
  {
    v5 = *v4;
    v13 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v12 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v12 = *v8;
        *((_QWORD *)this + 1) = v8 + 1;
      }
      v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_1002A19E0(a2, v9 + 1);
        v9 = *(_DWORD *)(a2 + 8);
      }
      v10 = v12;
      v11 = *(_QWORD *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9) = v10;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_1008D0FB0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 4) != 0)
LABEL_4:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(3, *(_QWORD *)(v5 + 16), a2);
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(_QWORD *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1008D1060(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  uint64_t result;

  v3 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v3)
  {
    v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
      if ((v5 & 0x80000000) != 0)
      {
        v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
        v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        v6 = 2;
      }
      v4 += v6;
    }
    if ((v3 & 4) != 0)
    {
      v7 = *(_QWORD *)(a1 + 16);
      v8 = *(unsigned __int8 *)(v7 + 23);
      v9 = v8;
      v10 = *(_QWORD *)(v7 + 8);
      if ((v8 & 0x80u) == 0)
        v11 = *(unsigned __int8 *)(v7 + 23);
      else
        v11 = v10;
      if (v11 >= 0x80)
      {
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        v8 = *(unsigned __int8 *)(v7 + 23);
        v10 = *(_QWORD *)(v7 + 8);
        v9 = *(_BYTE *)(v7 + 23);
      }
      else
      {
        v12 = 1;
      }
      if (v9 < 0)
        v8 = v10;
      v4 += v12 + v8 + 1;
    }
  }
  else
  {
    v4 = 0;
  }
  v13 = *(_DWORD *)(a1 + 32);
  if (v13 < 1)
  {
    v15 = 0;
  }
  else
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 24)
                                                                                             + 4 * v14);
      if (v16 >= 0x80)
      {
        v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
        v13 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        v17 = 1;
      }
      v15 += v17;
      ++v14;
    }
    while (v14 < v13);
  }
  result = (v15 + v4 + v13);
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void sub_1008D117C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D07F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D11C8()
{
  return 1;
}

_QWORD *sub_1008D11D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.SLPAddress");
}

void sub_1008D11E0(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 5273);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + 8) = v6;
      v5 = *((_DWORD *)a2 + 4);
    }
    if ((v5 & 2) != 0)
    {
      v7 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_BYTE *)(a1 + 9) = v7;
    }
  }
}

void sub_1008D1288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D12A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B380;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D12B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B380;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D12E0()
{
  operator new();
}

uint64_t sub_1008D131C(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_WORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008D1330(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned int v13;
  unsigned __int8 *v14;
  uint64_t result;
  unsigned int v16;
  unsigned int v17;

  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v17 = 0;
      v10 = (char *)*((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!(_DWORD)result)
          return result;
        v11 = v17;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      *(_BYTE *)(a1 + 8) = v11 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)this + 1) = v9;
LABEL_23:
        v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!(_DWORD)result)
            return result;
          v13 = v16;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v9;
          v14 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        *(_BYTE *)(a1 + 9) = v13 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008D14E4(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  return result;
}

uint64_t sub_1008D153C(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0)
    v1 += 2;
  if (*(_DWORD *)(a1 + 16))
    v2 = v1;
  else
    v2 = 0;
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_1008D1564(uint64_t a1, _BYTE *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D11E0(a1, lpsrc);
}

uint64_t sub_1008D15B0()
{
  return 1;
}

_QWORD *sub_1008D15B8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Notification");
}

void sub_1008D15C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 5486);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      v6 = *(_QWORD *)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310DA8 + 8);
      sub_1008D07F4(v6, v7);
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 16);
      if (v8 >= 4)
        sub_10190E368();
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
    }
  }
}

void sub_1008D16D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D16EC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215B3F8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310DA8 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D1740(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D16EC(a1);
  operator delete();
}

void sub_1008D1764()
{
  operator new();
}

uint64_t sub_1008D17A0(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  if (*(_BYTE *)(result + 24))
  {
    if ((*(_BYTE *)(result + 24) & 1) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_1008D0A1C(result);
    }
    *(_DWORD *)(v1 + 16) = 0;
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008D17DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  unsigned int v20;
  uint64_t result;
  unsigned int v22;
  unsigned int v23;

  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v7 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          v9 = (char *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
          goto LABEL_29;
        }
      }
      else
      {
        v7 = TagFallback & 7;
      }
LABEL_17:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
    v7 = TagFallback & 7;
    if (v7 != 2)
      goto LABEL_17;
    *(_DWORD *)(a1 + 24) |= 1u;
    v10 = *(_QWORD *)(a1 + 8);
    if (!v10)
      operator new();
    v23 = 0;
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))
        return 0;
    }
    else
    {
      v23 = *v11;
      *((_QWORD *)this + 1) = v11 + 1;
    }
    v12 = *((_DWORD *)this + 14);
    v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13)
      return 0;
    v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1008D0A70(v10, this, v15) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    v16 = *((_DWORD *)this + 14);
    v17 = __OFSUB__(v16, 1);
    v18 = v16 - 1;
    if (v18 < 0 == v17)
      *((_DWORD *)this + 14) = v18;
    v19 = (_BYTE *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
    if ((unint64_t)v19 < v8 && *v19 == 16)
    {
      v9 = v19 + 1;
      *((_QWORD *)this + 1) = v9;
LABEL_29:
      v22 = 0;
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (!(_DWORD)result)
          return result;
        v20 = v22;
      }
      else
      {
        v20 = *v9;
        *((_QWORD *)this + 1) = v9 + 1;
      }
      if (v20 <= 3)
      {
        *(_DWORD *)(a1 + 24) |= 2u;
        *(_DWORD *)(a1 + 16) = v20;
      }
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_1008D1A3C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310DA8 + 8);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  return result;
}

uint64_t sub_1008D1AA8(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = 0;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    v4 = *(_QWORD *)(qword_102310DA8 + 8);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D1060(v4, a2);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else
    {
      v9 = 2;
    }
    v3 = (v9 + v3);
  }
LABEL_18:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008D1B5C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D15C8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D1BA8()
{
  return 1;
}

_QWORD *sub_1008D1BB0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.SuplInitVer2Extension");
}

uint64_t sub_1008D1BC0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = off_10215B470;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  sub_1008D1C14(a1, a2);
  return a1;
}

void sub_1008D1C00(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_1008D1C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 5816);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 48);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 48) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 40);
    if (v6 >= 0x12)
      sub_10190E390();
    *(_DWORD *)(a1 + 48) |= 1u;
    *(_DWORD *)(a1 + 40) = v6;
    v5 = *(_DWORD *)(a2 + 48);
  }
  if ((v5 & 2) == 0)
  {
    if ((v5 & 4) == 0)
      goto LABEL_9;
LABEL_17:
    *(_DWORD *)(a1 + 48) |= 4u;
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      operator new();
    v10 = *(_QWORD *)(a2 + 16);
    if (!v10)
      v10 = *(_QWORD *)(qword_102310DB0 + 16);
    sub_1008D07F4(v9, v10);
    v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0)
        return;
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  *(_DWORD *)(a1 + 48) |= 2u;
  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    operator new();
  v8 = *(_QWORD *)(a2 + 8);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310DB0 + 8);
  sub_1008D00FC(v7, v8);
  v5 = *(_DWORD *)(a2 + 48);
  if ((v5 & 4) != 0)
    goto LABEL_17;
LABEL_9:
  if ((v5 & 8) == 0)
    goto LABEL_10;
LABEL_22:
  *(_DWORD *)(a1 + 48) |= 8u;
  v11 = *(_QWORD *)(a1 + 24);
  if (!v11)
    operator new();
  v12 = *(_BYTE **)(a2 + 24);
  if (!v12)
    v12 = *(_BYTE **)(qword_102310DB0 + 24);
  sub_1008D11E0(v11, v12);
  if ((*(_DWORD *)(a2 + 48) & 0x10) != 0)
  {
LABEL_27:
    *(_DWORD *)(a1 + 48) |= 0x10u;
    v13 = *(_QWORD *)(a1 + 32);
    if (!v13)
      operator new();
    v14 = *(_QWORD *)(a2 + 32);
    if (!v14)
      v14 = *(_QWORD *)(qword_102310DB0 + 32);
    sub_1008D15C8(v13, v14);
  }
}

void sub_1008D1E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008D1E80(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((_QWORD *)qword_102310DB0 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[2];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[3];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    result = (_QWORD *)v1[4];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008D1F04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B470;
  sub_1008D1E80(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D1F34(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B470;
  sub_1008D1E80(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008D1F78(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310DB0;
  if (!qword_102310DB0)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310DB0;
  }
  return result;
}

void sub_1008D1FA4()
{
  operator new();
}

uint64_t sub_1008D1FE8(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 48);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 40) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 32))
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 20) = 0;
          *(_QWORD *)(v3 + 12) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        v2 = *(_DWORD *)(result + 48);
      }
    }
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
      {
        result = sub_1008D0A1C(result);
        v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 8) != 0)
    {
      v4 = *(_QWORD *)(v1 + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 16))
          *(_WORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 16) = 0;
        v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      result = *(_QWORD *)(v1 + 32);
      if (result)
        result = sub_1008D17A0(result);
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_1008D2080(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;

  while (1)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 < *((_QWORD *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v48 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!(_DWORD)result)
            return result;
          v9 = v48;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 0x11)
        {
          *(_DWORD *)(a1 + 48) |= 1u;
          *(_DWORD *)(a1 + 40) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_29;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_19;
LABEL_29:
        *(_DWORD *)(a1 + 48) |= 2u;
        v12 = *(_QWORD *)(a1 + 8);
        if (!v12)
          operator new();
        v48 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0;
        }
        else
        {
          v48 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008D02C4(v12, this, v17) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        v18 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v18, 1);
        v20 = v18 - 1;
        if (v20 < 0 == v19)
          *((_DWORD *)this + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 != 26)
          continue;
        *((_QWORD *)this + 1) = v21 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 48) |= 4u;
        v22 = *(_QWORD *)(a1 + 16);
        if (!v22)
          operator new();
        v48 = 0;
        v23 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0;
        }
        else
        {
          v48 = *v23;
          *((_QWORD *)this + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)this + 14);
        v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008D0A70(v22, this, v27) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        v28 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v29 < 0 == v19)
          *((_DWORD *)this + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 != 34)
          continue;
        *((_QWORD *)this + 1) = v30 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 48) |= 8u;
        v31 = *(_QWORD *)(a1 + 24);
        if (!v31)
          operator new();
        v48 = 0;
        v32 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0;
        }
        else
        {
          v48 = *v32;
          *((_QWORD *)this + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)this + 14);
        v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34)
          return 0;
        v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008D1330(v31, this, v36) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        v37 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v19)
          *((_DWORD *)this + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 != 42)
          continue;
        *((_QWORD *)this + 1) = v39 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 48) |= 0x10u;
        v40 = *(_QWORD *)(a1 + 32);
        if (!v40)
          operator new();
        v48 = 0;
        v41 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0;
        }
        else
        {
          v48 = *v41;
          *((_QWORD *)this + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)this + 14);
        v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008D17DC(v40, this, v45) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        v46 = *((_DWORD *)this + 14);
        v19 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v19)
          *((_DWORD *)this + 14) = v47;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_43;
        goto LABEL_19;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_57;
        goto LABEL_19;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_19;
        goto LABEL_71;
      default:
        v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008D2630(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 40), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310DB0 + 8);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_11:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310DB0 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    goto LABEL_17;
  }
LABEL_14:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
    v9 = *(_QWORD *)(qword_102310DB0 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
  {
LABEL_17:
    v10 = *(_QWORD *)(v5 + 32);
    if (!v10)
      v10 = *(_QWORD *)(qword_102310DB0 + 32);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return result;
}

uint64_t sub_1008D2720(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  unsigned int *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  unsigned int v19;
  int v20;
  int v21;

  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_43;
  }
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
    else if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 48) & 2) == 0)
      goto LABEL_19;
  }
  v6 = *(unsigned int **)(a1 + 8);
  if (!v6)
    v6 = *(unsigned int **)(qword_102310DB0 + 8);
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D06A8(v6, a2);
  v8 = (int)v7;
  if (v7 >= 0x80)
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  else
    v9 = 1;
  v4 = (v4 + v8 + v9 + 1);
  v3 = *(_DWORD *)(a1 + 48);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (!v10)
      v10 = *(_QWORD *)(qword_102310DB0 + 16);
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D1060(v10, a2);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    else
      v13 = 1;
    v4 = (v4 + v12 + v13 + 1);
    v3 = *(_DWORD *)(a1 + 48);
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0)
        goto LABEL_43;
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }
  v14 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v14 = *(_QWORD *)(qword_102310DB0 + 24);
  v15 = 2 * (*(_DWORD *)(v14 + 16) & 1);
  if ((*(_DWORD *)(v14 + 16) & 2) != 0)
    v15 += 2;
  if (*(_DWORD *)(v14 + 16))
    v16 = v15;
  else
    v16 = 0;
  *(_DWORD *)(v14 + 12) = v16;
  v4 = (v4 + v16 + 2);
  if ((*(_DWORD *)(a1 + 48) & 0x10) != 0)
  {
LABEL_37:
    v17 = *(_QWORD *)(a1 + 32);
    if (!v17)
      v17 = *(_QWORD *)(qword_102310DB0 + 32);
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D1AA8(v17, a2);
    v20 = (int)v18;
    if (v18 >= 0x80)
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
    else
      v21 = 1;
    v4 = (v4 + v20 + v21 + 1);
  }
LABEL_43:
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1008D28C4(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D1C14(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D2910()
{
  return 1;
}

_QWORD *sub_1008D2918@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Init");
}

void sub_1008D2928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  char v8;
  const std::string *v9;
  std::string *v10;
  char v11;
  const std::string *v12;
  std::string *v13;
  uint64_t v14;
  uint64_t v15;
  const std::string *v16;
  std::string *v17;
  char v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 6269);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v5 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v5)
    goto LABEL_14;
  if ((v5 & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 32) = v6;
    v5 = *(_DWORD *)(a2 + 52);
  }
  if ((v5 & 2) != 0)
  {
    v9 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 2u;
    v10 = *(std::string **)(a1 + 8);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v10, v9);
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 4) == 0)
    {
LABEL_8:
      if ((v5 & 8) == 0)
        goto LABEL_9;
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_8;
  }
  v11 = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 36) = v11;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_21:
  v12 = *(const std::string **)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 8u;
  v13 = *(std::string **)(a1 + 16);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v13, v12);
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_10:
    if ((v5 & 0x20) == 0)
      goto LABEL_11;
LABEL_29:
    v16 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    v17 = *(std::string **)(a1 + 40);
    if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v17, v16);
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x40) == 0)
    {
LABEL_12:
      if ((v5 & 0x80) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_24:
  *(_DWORD *)(a1 + 52) |= 0x10u;
  v14 = *(_QWORD *)(a1 + 24);
  if (!v14)
    operator new();
  v15 = *(_QWORD *)(a2 + 24);
  if (!v15)
    v15 = *(_QWORD *)(qword_102310DB8 + 24);
  sub_1008CA49C(v14, v15);
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x20) != 0)
    goto LABEL_29;
LABEL_11:
  if ((v5 & 0x40) == 0)
    goto LABEL_12;
LABEL_32:
  v18 = *(_BYTE *)(a2 + 37);
  *(_DWORD *)(a1 + 52) |= 0x40u;
  *(_BYTE *)(a1 + 37) = v18;
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x80) != 0)
  {
LABEL_13:
    v7 = *(_BYTE *)(a2 + 38);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(_BYTE *)(a1 + 38) = v7;
    v5 = *(_DWORD *)(a2 + 52);
  }
LABEL_14:
  if ((v5 & 0x100) != 0)
  {
    v8 = *(_BYTE *)(a2 + 39);
    *(_DWORD *)(a1 + 52) |= 0x100u;
    *(_BYTE *)(a1 + 39) = v8;
  }
}

void sub_1008D2BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008D2BC0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;

  v1 = result[1];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    operator delete();
  }
  v3 = result[2];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    operator delete();
  }
  v5 = result[5];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    operator delete();
  }
  if ((_QWORD *)qword_102310DB8 != result)
  {
    result = (_QWORD *)result[3];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008D2CC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B4E8;
  sub_1008D2BC0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D2CF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B4E8;
  sub_1008D2BC0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008D2D38(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310DB8;
  if (!qword_102310DB8)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310DB8;
  }
  return result;
}

void sub_1008D2D64()
{
  operator new();
}

uint64_t sub_1008D2DAC(uint64_t result)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 32) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(result + 8);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(result + 36) = 0;
    if ((*(_BYTE *)(result + 52) & 8) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    v4 = *(_DWORD *)(result + 52);
    if ((v4 & 0x10) != 0)
    {
      v5 = *(_QWORD *)(result + 24);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 24))
        {
          *(_WORD *)(v5 + 16) = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        v4 = *(_DWORD *)(result + 52);
      }
    }
    if ((v4 & 0x20) != 0)
    {
      v6 = *(_QWORD *)(result + 40);
      if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    *(_WORD *)(result + 37) = 0;
    v1 = *(_DWORD *)(result + 52);
  }
  if ((v1 & 0xFF00) != 0)
    *(_BYTE *)(result + 39) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1008D2EA0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  unint64_t v13;
  char *v14;
  int v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t result;
  void *v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  void *v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  BOOL v34;
  int v35;
  _BYTE *v36;
  void *v37;
  _BYTE *v38;
  unsigned int v39;
  _BYTE *v40;
  unsigned int v41;
  _BYTE *v42;
  unsigned int v43;
  unsigned __int8 *v44;
  unsigned int v45;

  v5 = (unsigned int *)(a1 + 32);
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)this + 1) = v11;
        }
        v12 = *(_DWORD *)(a1 + 52) | 1;
        *(_DWORD *)(a1 + 52) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_37;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_28;
        v12 = *(_DWORD *)(a1 + 52);
LABEL_37:
        *(_DWORD *)(a1 + 52) = v12 | 2;
        v21 = *(void **)(a1 + 8);
        if (v21 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v21);
        if (!(_DWORD)result)
          return result;
        v22 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v22 >= v13 || *v22 != 24)
          continue;
        v14 = v22 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_43:
        v45 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
          if (!(_DWORD)result)
            return result;
          v23 = v45;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          v23 = *v14;
          v24 = v14 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        *(_BYTE *)(a1 + 36) = v23 != 0;
        v15 = *(_DWORD *)(a1 + 52) | 4;
        *(_DWORD *)(a1 + 52) = v15;
        if ((unint64_t)v24 >= v13 || *v24 != 34)
          continue;
        *((_QWORD *)this + 1) = v24 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 52) = v15 | 8;
        v25 = *(void **)(a1 + 16);
        if (v25 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v25);
        if (!(_DWORD)result)
          return result;
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 != 42)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        v27 = *(_QWORD *)(a1 + 24);
        if (!v27)
          operator new();
        v45 = 0;
        v28 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0;
        }
        else
        {
          v45 = *v28;
          *((_QWORD *)this + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
          if (sub_1008CA618(v27, this, v32))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              v33 = *((_DWORD *)this + 14);
              v34 = __OFSUB__(v33, 1);
              v35 = v33 - 1;
              if (v35 < 0 == v34)
                *((_DWORD *)this + 14) = v35;
              v36 = (_BYTE *)*((_QWORD *)this + 1);
              if ((unint64_t)v36 < *((_QWORD *)this + 2) && *v36 == 50)
              {
                *((_QWORD *)this + 1) = v36 + 1;
LABEL_71:
                *(_DWORD *)(a1 + 52) |= 0x20u;
                v37 = *(void **)(a1 + 40);
                if (v37 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
                  operator new();
                result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v37);
                if (!(_DWORD)result)
                  return result;
                v38 = (_BYTE *)*((_QWORD *)this + 1);
                v16 = *((_QWORD *)this + 2);
                if ((unint64_t)v38 < v16 && *v38 == 56)
                {
                  v17 = v38 + 1;
                  *((_QWORD *)this + 1) = v17;
LABEL_77:
                  v45 = 0;
                  if ((unint64_t)v17 >= v16 || *v17 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
                    if (!(_DWORD)result)
                      return result;
                    v39 = v45;
                    v40 = (_BYTE *)*((_QWORD *)this + 1);
                    v16 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    v39 = *v17;
                    v40 = v17 + 1;
                    *((_QWORD *)this + 1) = v40;
                  }
                  *(_BYTE *)(a1 + 37) = v39 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if ((unint64_t)v40 < v16 && *v40 == 64)
                  {
                    v18 = v40 + 1;
                    *((_QWORD *)this + 1) = v18;
LABEL_85:
                    v45 = 0;
                    if ((unint64_t)v18 >= v16 || *v18 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
                      if (!(_DWORD)result)
                        return result;
                      v41 = v45;
                      v42 = (_BYTE *)*((_QWORD *)this + 1);
                      v16 = *((_QWORD *)this + 2);
                    }
                    else
                    {
                      v41 = *v18;
                      v42 = v18 + 1;
                      *((_QWORD *)this + 1) = v42;
                    }
                    *(_BYTE *)(a1 + 38) = v41 != 0;
                    *(_DWORD *)(a1 + 52) |= 0x80u;
                    if ((unint64_t)v42 < v16 && *v42 == 72)
                    {
                      v19 = v42 + 1;
                      *((_QWORD *)this + 1) = v19;
LABEL_93:
                      v45 = 0;
                      if ((unint64_t)v19 >= v16 || *v19 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
                        if (!(_DWORD)result)
                          return result;
                        v43 = v45;
                        v44 = (unsigned __int8 *)*((_QWORD *)this + 1);
                        v16 = *((_QWORD *)this + 2);
                      }
                      else
                      {
                        v43 = *v19;
                        v44 = (unsigned __int8 *)(v19 + 1);
                        *((_QWORD *)this + 1) = v44;
                      }
                      *(_BYTE *)(a1 + 39) = v43 != 0;
                      *(_DWORD *)(a1 + 52) |= 0x100u;
                      if (v44 == (unsigned __int8 *)v16
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        result = 1;
                        *((_BYTE *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_43;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_28;
        v15 = *(_DWORD *)(a1 + 52);
        goto LABEL_51;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_57;
        goto LABEL_28;
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_71;
        goto LABEL_28;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_77;
      case 8u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v18 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 9u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_93;
      default:
        v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008D3480(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(v5 + 8), a2);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(4, *(_QWORD *)(v5 + 16), a2);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_15:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310DB8 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(6, *(_QWORD *)(v5 + 40), a2);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 37), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 39), (BOOL)a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 38), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 39), (BOOL)a2, a4);
  return result;
}

uint64_t sub_1008D35B0(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  unsigned int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t result;

  v3 = *(_DWORD *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_57;
  }
  if ((v3 & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v6 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_19;
  }
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned __int8 *)(v7 + 23);
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 8);
  if ((v8 & 0x80u) == 0)
    v11 = *(unsigned __int8 *)(v7 + 23);
  else
    v11 = v10;
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v10 = *(_QWORD *)(v7 + 8);
    v3 = *(_DWORD *)(a1 + 52);
    v9 = *(_BYTE *)(v7 + 23);
  }
  else
  {
    v12 = 1;
  }
  if (v9 < 0)
    v8 = v10;
  v4 += v12 + v8 + 1;
LABEL_19:
  if ((v3 & 4) != 0)
    v4 += 2;
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0)
      goto LABEL_23;
LABEL_34:
    v19 = *(_QWORD *)(a1 + 24);
    if (!v19)
      v19 = *(_QWORD *)(qword_102310DB8 + 24);
    v20 = *(_DWORD *)(v19 + 24);
    v21 = 2 * (v20 & 1);
    if ((v20 & 2) != 0)
      v21 += 2;
    if ((v20 & 4) != 0)
      v21 |= 9u;
    if (*(_DWORD *)(v19 + 24))
      v22 = v21;
    else
      v22 = 0;
    *(_DWORD *)(v19 + 20) = v22;
    v4 += v22 + 2;
    v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 0x20) == 0)
      goto LABEL_53;
    goto LABEL_44;
  }
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(unsigned __int8 *)(v13 + 23);
  v15 = v14;
  v16 = *(_QWORD *)(v13 + 8);
  if ((v14 & 0x80u) == 0)
    v17 = *(unsigned __int8 *)(v13 + 23);
  else
    v17 = v16;
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17, a2);
    v14 = *(unsigned __int8 *)(v13 + 23);
    v16 = *(_QWORD *)(v13 + 8);
    v3 = *(_DWORD *)(a1 + 52);
    v15 = *(_BYTE *)(v13 + 23);
  }
  else
  {
    v18 = 1;
  }
  if (v15 < 0)
    v14 = v16;
  v4 += v18 + v14 + 1;
  if ((v3 & 0x10) != 0)
    goto LABEL_34;
LABEL_23:
  if ((v3 & 0x20) != 0)
  {
LABEL_44:
    v23 = *(_QWORD *)(a1 + 40);
    v24 = *(unsigned __int8 *)(v23 + 23);
    v25 = v24;
    v26 = *(_QWORD *)(v23 + 8);
    if ((v24 & 0x80u) == 0)
      v27 = *(unsigned __int8 *)(v23 + 23);
    else
      v27 = v26;
    if (v27 >= 0x80)
    {
      v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27, a2);
      v24 = *(unsigned __int8 *)(v23 + 23);
      v26 = *(_QWORD *)(v23 + 8);
      v3 = *(_DWORD *)(a1 + 52);
      v25 = *(_BYTE *)(v23 + 23);
    }
    else
    {
      v28 = 1;
    }
    if (v25 < 0)
      v24 = v26;
    v4 += v28 + v24 + 1;
  }
LABEL_53:
  v5 = v4 + 2;
  if ((v3 & 0x40) == 0)
    v5 = v4;
  if ((v3 & 0x80) != 0)
    v5 += 2;
LABEL_57:
  if ((v3 & 0x100) != 0)
    result = v5 + 2;
  else
    result = v5;
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_1008D37B8(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D2928(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D3804()
{
  return 1;
}

_QWORD *sub_1008D380C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.SuplContext");
}

void sub_1008D381C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _BYTE v25[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v25, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 6944);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v24, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  v5 = *(_DWORD *)(a2 + 104);
  if (!(_BYTE)v5)
    goto LABEL_20;
  if ((v5 & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 104) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    v5 = *(_DWORD *)(a2 + 104);
  }
  if ((v5 & 2) != 0)
  {
    v7 = *(_DWORD *)(a2 + 12);
    if (v7 >= 0x12)
      sub_10190E408();
    *(_DWORD *)(a1 + 104) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    v5 = *(_DWORD *)(a2 + 104);
  }
  if ((v5 & 4) != 0)
  {
    v8 = *(_DWORD *)(a2 + 16);
    if (v8 >= 0x21)
      sub_10190E3E0();
    *(_DWORD *)(a1 + 104) |= 4u;
    *(_DWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 104);
  }
  if ((v5 & 8) != 0)
  {
    v9 = *(_DWORD *)(a2 + 20);
    if (v9 >= 0x18)
      sub_10190E3B8();
    *(_DWORD *)(a1 + 104) |= 8u;
    *(_DWORD *)(a1 + 20) = v9;
    v5 = *(_DWORD *)(a2 + 104);
  }
  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 0x20) == 0)
      goto LABEL_17;
LABEL_48:
    v22 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 104) |= 0x20u;
    *(_QWORD *)(a1 + 32) = v22;
    v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x40) == 0)
    {
LABEL_18:
      if ((v5 & 0x80) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
    goto LABEL_49;
  }
  v21 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 104) |= 0x10u;
  *(_QWORD *)(a1 + 24) = v21;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x20) != 0)
    goto LABEL_48;
LABEL_17:
  if ((v5 & 0x40) == 0)
    goto LABEL_18;
LABEL_49:
  v23 = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 104) |= 0x40u;
  *(_QWORD *)(a1 + 40) = v23;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x80) != 0)
  {
LABEL_19:
    v10 = *(_QWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 104) |= 0x80u;
    *(_QWORD *)(a1 + 48) = v10;
    v5 = *(_DWORD *)(a2 + 104);
  }
LABEL_20:
  if ((v5 & 0xFF00) == 0)
    return;
  if ((v5 & 0x100) != 0)
  {
    v11 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 104) |= 0x100u;
    *(_QWORD *)(a1 + 56) = v11;
    v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x200) == 0)
    {
LABEL_23:
      if ((v5 & 0x400) == 0)
        goto LABEL_24;
      goto LABEL_32;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 104) |= 0x200u;
  *(_QWORD *)(a1 + 64) = v12;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x400) == 0)
  {
LABEL_24:
    if ((v5 & 0x800) == 0)
      goto LABEL_25;
    goto LABEL_33;
  }
LABEL_32:
  v13 = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 104) |= 0x400u;
  *(_QWORD *)(a1 + 72) = v13;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x800) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000) == 0)
      goto LABEL_26;
    goto LABEL_34;
  }
LABEL_33:
  v14 = *(_BYTE *)(a2 + 96);
  *(_DWORD *)(a1 + 104) |= 0x800u;
  *(_BYTE *)(a1 + 96) = v14;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x1000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000) == 0)
      goto LABEL_27;
    goto LABEL_35;
  }
LABEL_34:
  v15 = *(_BYTE *)(a2 + 97);
  *(_DWORD *)(a1 + 104) |= 0x1000u;
  *(_BYTE *)(a1 + 97) = v15;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x2000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000) == 0)
      goto LABEL_28;
    goto LABEL_36;
  }
LABEL_35:
  v16 = *(_BYTE *)(a2 + 98);
  *(_DWORD *)(a1 + 104) |= 0x2000u;
  *(_BYTE *)(a1 + 98) = v16;
  v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x4000) == 0)
  {
LABEL_28:
    if ((v5 & 0x8000) == 0)
      return;
    goto LABEL_41;
  }
LABEL_36:
  *(_DWORD *)(a1 + 104) |= 0x4000u;
  v17 = *(_QWORD *)(a1 + 80);
  if (!v17)
    operator new();
  v18 = *(_QWORD *)(a2 + 80);
  if (!v18)
    v18 = *(_QWORD *)(qword_102310DC0 + 80);
  sub_1008D4AC8(v17, v18);
  if ((*(_DWORD *)(a2 + 104) & 0x8000) != 0)
  {
LABEL_41:
    *(_DWORD *)(a1 + 104) |= 0x8000u;
    v19 = *(_QWORD *)(a1 + 88);
    if (!v19)
      operator new();
    v20 = *(_QWORD *)(a2 + 88);
    if (!v20)
      v20 = *(_QWORD *)(qword_102310DC0 + 88);
    sub_1008D4C30(v19, v20);
  }
}

void sub_1008D3B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008D3B5C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_102310DC0 != result)
  {
    v1 = result;
    v2 = result[10];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[11];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008D3BB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B560;
  sub_1008D3B5C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D3BE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B560;
  sub_1008D3B5C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008D3C2C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310DC0;
  if (!qword_102310DC0)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310DC0;
  }
  return result;
}

void sub_1008D3C58()
{
  operator new();
}

uint64_t sub_1008D3CAC(uint64_t result)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_DWORD *)(result + 104);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(result + 96) = 0;
    *(_BYTE *)(result + 98) = 0;
    *(_QWORD *)(result + 64) = 0;
    *(_QWORD *)(result + 72) = 0;
    *(_QWORD *)(result + 56) = 0;
    if ((v1 & 0x4000) != 0)
    {
      v2 = *(_QWORD *)(result + 80);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 60))
        {
          *(_OWORD *)(v2 + 40) = 0u;
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 8) = 0u;
        }
        *(_DWORD *)(v2 + 60) = 0;
        v1 = *(_DWORD *)(result + 104);
      }
    }
    if ((v1 & 0x8000) != 0)
    {
      v3 = *(_QWORD *)(result + 88);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(result + 104) = 0;
  return result;
}

uint64_t sub_1008D3D30(uint64_t result)
{
  if (*(_BYTE *)(result + 60))
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1008D3D50(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008D3D64(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  int v21;
  uint64_t result;
  unsigned int v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  BOOL v49;
  int v50;
  unsigned __int8 *v51;
  uint64_t v52;
  char *v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60[2];

  v5 = (unsigned int *)(a1 + 8);
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 104) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v12 = v11 + 1;
          *((_QWORD *)this + 1) = v12;
          goto LABEL_50;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v12 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
LABEL_50:
        v60[0] = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v23 = v60[0];
        }
        else
        {
          v23 = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        if (v23 <= 0x11)
        {
          *(_DWORD *)(a1 + 104) |= 2u;
          *(_DWORD *)(a1 + 12) = v23;
        }
        v24 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v24 >= v13 || *v24 != 24)
          continue;
        v14 = v24 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_60:
        v60[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v25 = v60[0];
        }
        else
        {
          v25 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        if (v25 <= 0x20)
        {
          *(_DWORD *)(a1 + 104) |= 4u;
          *(_DWORD *)(a1 + 16) = v25;
        }
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v26 >= v15 || *v26 != 32)
          continue;
        v16 = v26 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_70:
        v60[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v27 = v60[0];
        }
        else
        {
          v27 = *v16;
          *((_QWORD *)this + 1) = v16 + 1;
        }
        if (v27 <= 0x17)
        {
          *(_DWORD *)(a1 + 104) |= 8u;
          *(_DWORD *)(a1 + 20) = v27;
        }
        v28 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 != 41)
          continue;
        *((_QWORD *)this + 1) = v28 + 1;
LABEL_80:
        *(_QWORD *)v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v60;
        *(_DWORD *)(a1 + 104) |= 0x10u;
        v29 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v29 >= *((_QWORD *)this + 2) || *v29 != 49)
          continue;
        *((_QWORD *)this + 1) = v29 + 1;
LABEL_84:
        *(_QWORD *)v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v60;
        *(_DWORD *)(a1 + 104) |= 0x20u;
        v30 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 != 57)
          continue;
        *((_QWORD *)this + 1) = v30 + 1;
LABEL_88:
        *(_QWORD *)v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v60;
        *(_DWORD *)(a1 + 104) |= 0x40u;
        v31 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 != 65)
          continue;
        *((_QWORD *)this + 1) = v31 + 1;
LABEL_92:
        *(_QWORD *)v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)v60;
        *(_DWORD *)(a1 + 104) |= 0x80u;
        v32 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 != 73)
          continue;
        *((_QWORD *)this + 1) = v32 + 1;
LABEL_96:
        *(_QWORD *)v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 56) = *(_QWORD *)v60;
        *(_DWORD *)(a1 + 104) |= 0x100u;
        v33 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v33 >= *((_QWORD *)this + 2) || *v33 != 81)
          continue;
        *((_QWORD *)this + 1) = v33 + 1;
LABEL_100:
        *(_QWORD *)v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 64) = *(_QWORD *)v60;
        *(_DWORD *)(a1 + 104) |= 0x200u;
        v34 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 != 89)
          continue;
        *((_QWORD *)this + 1) = v34 + 1;
LABEL_104:
        *(_QWORD *)v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 72) = *(_QWORD *)v60;
        *(_DWORD *)(a1 + 104) |= 0x400u;
        v35 = (_BYTE *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        if ((unint64_t)v35 >= v17 || *v35 != 96)
          continue;
        v18 = v35 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_108:
        v60[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v36 = v60[0];
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v17 = *((_QWORD *)this + 2);
        }
        else
        {
          v36 = *v18;
          v37 = v18 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        *(_BYTE *)(a1 + 96) = v36 != 0;
        *(_DWORD *)(a1 + 104) |= 0x800u;
        if ((unint64_t)v37 >= v17 || *v37 != 104)
          continue;
        v19 = v37 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_116:
        v60[0] = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v38 = v60[0];
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v17 = *((_QWORD *)this + 2);
        }
        else
        {
          v38 = *v19;
          v39 = v19 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        *(_BYTE *)(a1 + 97) = v38 != 0;
        *(_DWORD *)(a1 + 104) |= 0x1000u;
        if ((unint64_t)v39 >= v17 || *v39 != 112)
          continue;
        v20 = v39 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_124:
        v60[0] = 0;
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v40 = v60[0];
          v41 = (_BYTE *)*((_QWORD *)this + 1);
          v17 = *((_QWORD *)this + 2);
        }
        else
        {
          v40 = *v20;
          v41 = v20 + 1;
          *((_QWORD *)this + 1) = v41;
        }
        *(_BYTE *)(a1 + 98) = v40 != 0;
        v21 = *(_DWORD *)(a1 + 104) | 0x2000;
        *(_DWORD *)(a1 + 104) = v21;
        if ((unint64_t)v41 >= v17 || *v41 != 122)
          continue;
        *((_QWORD *)this + 1) = v41 + 1;
LABEL_132:
        *(_DWORD *)(a1 + 104) = v21 | 0x4000;
        v42 = *(_QWORD *)(a1 + 80);
        if (!v42)
          operator new();
        v60[0] = 0;
        v43 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v43 >= *((_QWORD *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60))return 0;
        }
        else
        {
          v60[0] = *v43;
          *((_QWORD *)this + 1) = v43 + 1;
        }
        v44 = *((_DWORD *)this + 14);
        v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45)
          return 0;
        v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60[0]);
        if (!sub_1008FC4FC(v42, this, v47) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        v48 = *((_DWORD *)this + 14);
        v49 = __OFSUB__(v48, 1);
        v50 = v48 - 1;
        if (v50 < 0 == v49)
          *((_DWORD *)this + 14) = v50;
        v51 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v51 <= 1 || *v51 != 130 || v51[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v51 + 2;
LABEL_147:
        *(_DWORD *)(a1 + 104) |= 0x8000u;
        v52 = *(_QWORD *)(a1 + 88);
        if (!v52)
          operator new();
        v60[0] = 0;
        v53 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v53 >= *((_QWORD *)this + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60))return 0;
        }
        else
        {
          v60[0] = *v53;
          *((_QWORD *)this + 1) = v53 + 1;
        }
        v54 = *((_DWORD *)this + 14);
        v55 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v54 + 1;
        if (v54 < v55)
        {
          v56 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60[0]);
          if (sub_1008FCAF8(v52, this, v57))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v56);
              v58 = *((_DWORD *)this + 14);
              v49 = __OFSUB__(v58, 1);
              v59 = v58 - 1;
              if (v59 < 0 == v49)
                *((_DWORD *)this + 14) = v59;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_60;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_70;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_80;
        goto LABEL_42;
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_84;
        goto LABEL_42;
      case 7u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_88;
        goto LABEL_42;
      case 8u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_92;
        goto LABEL_42;
      case 9u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_96;
        goto LABEL_42;
      case 0xAu:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_100;
        goto LABEL_42;
      case 0xBu:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_104;
        goto LABEL_42;
      case 0xCu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v18 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_108;
      case 0xDu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v19 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_116;
      case 0xEu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v20 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_124;
      case 0xFu:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_42;
        v21 = *(_DWORD *)(a1 + 104);
        goto LABEL_132;
      case 0x10u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_42;
        goto LABEL_147;
      default:
        v8 = TagFallback & 7;
LABEL_42:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008D4654(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 104);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 104);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_27:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_29;
  }
LABEL_28:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_30;
  }
LABEL_29:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 96), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_31;
  }
LABEL_30:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 97), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_32;
  }
LABEL_31:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 98), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      return result;
    goto LABEL_35;
  }
LABEL_32:
  v7 = *(_QWORD *)(v5 + 80);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310DC0 + 80);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 104) & 0x8000) != 0)
  {
LABEL_35:
    v8 = *(_QWORD *)(v5 + 88);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310DC0 + 88);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008D4858(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  unsigned int v21;
  int v22;
  int v23;

  v3 = *(_DWORD *)(a1 + 104);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_40;
  }
  if ((v3 & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v6 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      v3 = *(_DWORD *)(a1 + 104);
      if ((v3 & 2) == 0)
        goto LABEL_16;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_16;
    }
  }
  else
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_16;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    v3 = *(_DWORD *)(a1 + 104);
  }
  else
  {
    v8 = 2;
  }
  v4 += v8;
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 104);
    }
    else
    {
      v10 = 2;
    }
    v4 += v10;
    if ((v3 & 8) == 0)
      goto LABEL_31;
    goto LABEL_25;
  }
  if ((v3 & 8) != 0)
  {
LABEL_25:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      v3 = *(_DWORD *)(a1 + 104);
    }
    else
    {
      v12 = 2;
    }
    v4 += v12;
  }
LABEL_31:
  v13 = v4 + 9;
  if ((v3 & 0x10) == 0)
    v13 = v4;
  if ((v3 & 0x20) != 0)
    v13 += 9;
  if ((v3 & 0x40) != 0)
    v13 += 9;
  if ((v3 & 0x80) != 0)
    v5 = v13 + 9;
  else
    v5 = v13;
LABEL_40:
  if ((v3 & 0xFF00) != 0)
  {
    v14 = v5 + 9;
    if ((v3 & 0x100) == 0)
      v14 = v5;
    if ((v3 & 0x200) != 0)
      v14 += 9;
    if ((v3 & 0x400) != 0)
      v14 += 9;
    if ((v3 & 0x800) != 0)
      v14 += 2;
    if ((v3 & 0x1000) != 0)
      v14 += 2;
    if ((v3 & 0x2000) != 0)
      v5 = v14 + 2;
    else
      v5 = v14;
    if ((v3 & 0x4000) != 0)
    {
      v15 = *(_QWORD *)(a1 + 80);
      if (!v15)
        v15 = *(_QWORD *)(qword_102310DC0 + 80);
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FC960(v15, a2);
      v17 = (int)v16;
      if (v16 >= 0x80)
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      else
        v18 = 1;
      v5 = (v5 + v17 + v18 + 1);
      v3 = *(_DWORD *)(a1 + 104);
    }
    if ((v3 & 0x8000) != 0)
    {
      v19 = *(_QWORD *)(a1 + 88);
      if (!v19)
        v19 = *(_QWORD *)(qword_102310DC0 + 88);
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FCD74(v19, a2);
      v22 = (int)v20;
      if (v20 >= 0x80)
        v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, v21);
      else
        v23 = 1;
      v5 = (v5 + v22 + v23 + 2);
    }
  }
  *(_DWORD *)(a1 + 100) = v5;
  return v5;
}

void sub_1008D4A7C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D381C(a1, (uint64_t)lpsrc);
}

void sub_1008D4AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 29919);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 60);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 60) & 1) != 0)
    {
      v7 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 60) |= 1u;
      *(_QWORD *)(a1 + 8) = v7;
      v5 = *(_DWORD *)(a2 + 60);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*(_BYTE *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(_QWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v9 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 4u;
    *(_QWORD *)(a1 + 24) = v9;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    v10 = *(_QWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(_QWORD *)(a1 + 32) = v10;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    v11 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(_QWORD *)(a1 + 40) = v11;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        return;
      goto LABEL_11;
    }
LABEL_18:
    v12 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_DWORD *)(a1 + 48) = v12;
    if ((*(_DWORD *)(a2 + 60) & 0x40) == 0)
      return;
LABEL_11:
    v6 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 60) |= 0x40u;
    *(_DWORD *)(a1 + 52) = v6;
  }
}

void sub_1008D4C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D4C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 30170);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v7;
      v5 = *(_DWORD *)(a2 + 28);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_QWORD *)(a1 + 16) = v6;
  }
}

void sub_1008D4D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008D4D18()
{
  return 1;
}

_QWORD *sub_1008D4D20@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.SessionStatus");
}

void sub_1008D4D30(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 7204);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008D4DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D4DF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B5D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D4E00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B5D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D4E30()
{
  operator new();
}

uint64_t sub_1008D4E68(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008D4E7C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008D5018(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008D5070(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008D50FC(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D4D30(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D5148()
{
  return 1;
}

_QWORD *sub_1008D5150@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.ClsGpsCellTime");
}

void sub_1008D5160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 7510);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      v6 = *(_DWORD **)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310DD0 + 8);
      sub_1008D4D30(v6, v7);
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return;
LABEL_18:
      v11 = *(_DWORD *)(a2 + 28);
      if (v11 >= 5)
        sub_10190E430();
      *(_DWORD *)(a1 + 36) |= 0x10u;
      *(_DWORD *)(a1 + 28) = v11;
      return;
    }
LABEL_17:
    v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    if ((*(_DWORD *)(a2 + 36) & 0x10) == 0)
      return;
    goto LABEL_18;
  }
}

void sub_1008D52C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D52D8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215B650;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310DD0 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D532C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D52D8(a1);
  operator delete();
}

void sub_1008D5350()
{
  operator new();
}

uint64_t sub_1008D5390(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 36))
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008D53C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  unsigned int *v11;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t result;
  _BYTE *v28;
  _BYTE *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;

  v5 = (unsigned int *)(a1 + 16);
  v6 = (unsigned int *)(a1 + 20);
  v7 = (unsigned int *)(a1 + 24);
  while (2)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_22;
        *(_DWORD *)(a1 + 36) |= 1u;
        v11 = *(unsigned int **)(a1 + 8);
        if (!v11)
          operator new();
        v32 = 0;
        v12 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0;
        }
        else
        {
          v32 = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1008D4E7C(v11, this, v21) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        v22 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)this + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v25 >= v13 || *v25 != 16)
          continue;
        v14 = v25 + 1;
        *((_QWORD *)this + 1) = v14;
        goto LABEL_35;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v26 = v14 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v26 >= v13 || *v26 != 24)
          continue;
        v15 = v26 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_43:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v15;
          v28 = v15 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v28 >= v13 || *v28 != 32)
          continue;
        v16 = v28 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_51:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v16;
          v29 = v16 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v29 >= v13 || *v29 != 40)
          continue;
        v17 = v29 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_59:
        v31 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!(_DWORD)result)
            return result;
          v30 = v31;
        }
        else
        {
          v30 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        if (v30 <= 4)
        {
          *(_DWORD *)(a1 + 36) |= 0x10u;
          *(_DWORD *)(a1 + 28) = v30;
        }
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_43;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_51;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_59;
      default:
        v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008D5790(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;
  uint64_t v7;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310DD0 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (int)a2, a4);
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  if ((v5[9] & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (int)a2, a4);
  return result;
}

uint64_t sub_1008D5850(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_34;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    v5 = *(_QWORD *)(qword_102310DD0 + 8);
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D5070(v5, a2);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  else
    v8 = 1;
  v4 = (v7 + v8 + 1);
  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v10 = 2;
    }
    v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v12 = 2;
    }
    v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0)
        goto LABEL_34;
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    }
    else
    {
      v16 = 2;
    }
    v4 = (v16 + v4);
  }
LABEL_34:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008D5988(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D5160(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D59D4()
{
  return 1;
}

_QWORD *sub_1008D59DC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.ClsUtranCellTime");
}

void sub_1008D59EC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 7755);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v8;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v6;
  }
}

void sub_1008D5ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D5AD4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B6C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D5AE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B6C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D5B14()
{
  operator new();
}

uint64_t sub_1008D5B50(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008D5B68(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  _BYTE *v17;
  unsigned __int8 *v18;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2)
        break;
      v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v16 = (char *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
      }
      else
      {
        *v6 = *v16;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v13;
          v18 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

int *sub_1008D5D88(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_1008D5E00(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D5EB4(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D59EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D5F00()
{
  return 1;
}

_QWORD *sub_1008D5F08@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Plmn");
}

void sub_1008D5F18(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 7998);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      if (v6 >= 6)
        sub_10190E480();
      a1[6] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 7)
        sub_10190E458();
      a1[6] |= 2u;
      a1[3] = v7;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 4) != 0)
    {
      v8 = *(_DWORD *)(a2 + 16);
      a1[6] |= 4u;
      a1[4] = v8;
    }
  }
}

void sub_1008D5FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D600C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B740;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D601C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B740;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D604C()
{
  operator new();
}

uint64_t sub_1008D6088(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008D60A0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v8;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;
  unsigned int v22;

  v5 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v22 = 0;
        v12 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result)
            return result;
          v13 = v22;
        }
        else
        {
          v13 = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        if (v13 <= 5)
        {
          a1[6] |= 1u;
          a1[2] = v13;
        }
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          v15 = v16 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_29;
        }
      }
      if (v8 != 2)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v15 = (char *)*((_QWORD *)this + 1);
      v14 = *((_QWORD *)this + 2);
LABEL_29:
      v21 = 0;
      if ((unint64_t)v15 >= v14 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!(_DWORD)result)
          return result;
        v17 = v21;
      }
      else
      {
        v17 = *v15;
        *((_QWORD *)this + 1) = v15 + 1;
      }
      if (v17 <= 6)
      {
        a1[6] |= 2u;
        a1[3] = v17;
      }
      v18 = (_BYTE *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v18 < v10 && *v18 == 24)
      {
        v11 = v18 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_39:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v19 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v11;
          v19 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v19;
        }
        a1[6] |= 4u;
        if (v19 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_39;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

int *sub_1008D62D8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_1008D6350(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
    else if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_19;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v4 = (v9 + v4);
  }
LABEL_24:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D6420(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D5F18(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D646C()
{
  return 1;
}

_QWORD *sub_1008D6474@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.SessionInfo");
}

void sub_1008D6484(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  char v23;
  _BYTE v24[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v24, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 8683);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v23, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v5 = a2[20];
  if (!(_BYTE)v5)
    goto LABEL_16;
  if ((v5 & 1) != 0)
  {
    v6 = a2[2];
    a1[20] |= 1u;
    a1[2] = v6;
    v5 = a2[20];
  }
  if ((v5 & 2) != 0)
  {
    v7 = a2[3];
    if (v7 >= 5)
      sub_10190E4D0();
    a1[20] |= 2u;
    a1[3] = v7;
    v5 = a2[20];
  }
  if ((v5 & 4) != 0)
  {
    v18 = a2[4];
    a1[20] |= 4u;
    a1[4] = v18;
    v5 = a2[20];
    if ((v5 & 8) == 0)
    {
LABEL_11:
      if ((v5 & 0x10) == 0)
        goto LABEL_12;
      goto LABEL_40;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_11;
  }
  v19 = a2[5];
  a1[20] |= 8u;
  a1[5] = v19;
  v5 = a2[20];
  if ((v5 & 0x10) == 0)
  {
LABEL_12:
    if ((v5 & 0x20) == 0)
      goto LABEL_13;
LABEL_41:
    v21 = a2[7];
    a1[20] |= 0x20u;
    a1[7] = v21;
    v5 = a2[20];
    if ((v5 & 0x40) == 0)
    {
LABEL_14:
      if ((v5 & 0x80) == 0)
        goto LABEL_16;
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_40:
  v20 = a2[6];
  a1[20] |= 0x10u;
  a1[6] = v20;
  v5 = a2[20];
  if ((v5 & 0x20) != 0)
    goto LABEL_41;
LABEL_13:
  if ((v5 & 0x40) == 0)
    goto LABEL_14;
LABEL_42:
  v22 = a2[8];
  a1[20] |= 0x40u;
  a1[8] = v22;
  v5 = a2[20];
  if ((v5 & 0x80) != 0)
  {
LABEL_15:
    v8 = a2[9];
    a1[20] |= 0x80u;
    a1[9] = v8;
    v5 = a2[20];
  }
LABEL_16:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_26;
  if ((v5 & 0x100) != 0)
  {
    v11 = a2[10];
    a1[20] |= 0x100u;
    a1[10] = v11;
    v5 = a2[20];
    if ((v5 & 0x200) == 0)
    {
LABEL_19:
      if ((v5 & 0x400) == 0)
        goto LABEL_20;
      goto LABEL_31;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_19;
  }
  v12 = a2[11];
  a1[20] |= 0x200u;
  a1[11] = v12;
  v5 = a2[20];
  if ((v5 & 0x400) == 0)
  {
LABEL_20:
    if ((v5 & 0x800) == 0)
      goto LABEL_21;
    goto LABEL_32;
  }
LABEL_31:
  v13 = a2[12];
  a1[20] |= 0x400u;
  a1[12] = v13;
  v5 = a2[20];
  if ((v5 & 0x800) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000) == 0)
      goto LABEL_22;
    goto LABEL_33;
  }
LABEL_32:
  v14 = a2[13];
  a1[20] |= 0x800u;
  a1[13] = v14;
  v5 = a2[20];
  if ((v5 & 0x1000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000) == 0)
      goto LABEL_23;
    goto LABEL_34;
  }
LABEL_33:
  v15 = a2[14];
  a1[20] |= 0x1000u;
  a1[14] = v15;
  v5 = a2[20];
  if ((v5 & 0x2000) == 0)
  {
LABEL_23:
    if ((v5 & 0x4000) == 0)
      goto LABEL_24;
    goto LABEL_35;
  }
LABEL_34:
  v16 = a2[15];
  a1[20] |= 0x2000u;
  a1[15] = v16;
  v5 = a2[20];
  if ((v5 & 0x4000) == 0)
  {
LABEL_24:
    if ((v5 & 0x8000) == 0)
      goto LABEL_26;
    goto LABEL_25;
  }
LABEL_35:
  v17 = a2[16];
  if (v17 >= 7)
    sub_10190E4A8();
  a1[20] |= 0x4000u;
  a1[16] = v17;
  v5 = a2[20];
  if ((v5 & 0x8000) != 0)
  {
LABEL_25:
    v9 = a2[17];
    a1[20] |= 0x8000u;
    a1[17] = v9;
    v5 = a2[20];
  }
LABEL_26:
  if ((v5 & 0x10000) != 0)
  {
    v10 = a2[18];
    a1[20] |= 0x10000u;
    a1[18] = v10;
  }
}

void sub_1008D672C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D6744(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B7B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D6754(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B7B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008D6784(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310DE8;
  if (!qword_102310DE8)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310DE8;
  }
  return result;
}

void sub_1008D67B0()
{
  operator new();
}

uint64_t sub_1008D67FC(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 80);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
    *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_1008D683C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  unint64_t v33;
  unsigned __int8 *v34;
  char *v35;
  unsigned int v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  unsigned int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  uint64_t result;
  unsigned int *v55;
  unsigned int *v56;
  unsigned int *v57;
  unsigned int *v58;
  unsigned int *v59;
  unsigned int *v60;
  unsigned int *v61;
  unsigned int *v62;
  unsigned int v63;
  unsigned int v64;

  v55 = a1 + 2;
  v58 = a1 + 4;
  v59 = a1 + 5;
  v60 = a1 + 6;
  v61 = a1 + 7;
  v62 = a1 + 8;
  v5 = a1 + 9;
  v6 = a1 + 10;
  v7 = a1 + 11;
  v8 = a1 + 12;
  v9 = a1 + 13;
  v10 = a1 + 14;
  v11 = a1 + 15;
  v56 = a1 + 18;
  v57 = a1 + 17;
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *v55 = *v16;
          v17 = v16 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_50:
          a1[20] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            v18 = v17 + 1;
            *((_QWORD *)this + 1) = v18;
            goto LABEL_53;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v55);
        if ((_DWORD)result)
        {
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_50;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_53:
        v64 = 0;
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v64);
          if (!(_DWORD)result)
            return result;
          v36 = v64;
        }
        else
        {
          v36 = *v18;
          *((_QWORD *)this + 1) = v18 + 1;
        }
        if (v36 <= 4)
        {
          a1[20] |= 2u;
          a1[3] = v36;
        }
        v37 = (_BYTE *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        if ((unint64_t)v37 >= v19 || *v37 != 24)
          continue;
        v20 = v37 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v58);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v58 = *v20;
          v38 = v20 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        a1[20] |= 4u;
        if ((unint64_t)v38 >= v19 || *v38 != 32)
          continue;
        v21 = v38 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_71:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v59);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v59 = *v21;
          v39 = v21 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        a1[20] |= 8u;
        if ((unint64_t)v39 >= v19 || *v39 != 40)
          continue;
        v22 = v39 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_79:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v60 = *v22;
          v40 = v22 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        a1[20] |= 0x10u;
        if ((unint64_t)v40 >= v19 || *v40 != 48)
          continue;
        v23 = v40 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_87:
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v61 = *v23;
          v41 = v23 + 1;
          *((_QWORD *)this + 1) = v41;
        }
        a1[20] |= 0x20u;
        if ((unint64_t)v41 >= v19 || *v41 != 56)
          continue;
        v24 = v41 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_95:
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v62);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v62 = *v24;
          v42 = v24 + 1;
          *((_QWORD *)this + 1) = v42;
        }
        a1[20] |= 0x40u;
        if ((unint64_t)v42 >= v19 || *v42 != 64)
          continue;
        v25 = v42 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_103:
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v43 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v25;
          v43 = v25 + 1;
          *((_QWORD *)this + 1) = v43;
        }
        a1[20] |= 0x80u;
        if ((unint64_t)v43 >= v19 || *v43 != 72)
          continue;
        v26 = v43 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_111:
        if ((unint64_t)v26 >= v19 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v44 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v26;
          v44 = v26 + 1;
          *((_QWORD *)this + 1) = v44;
        }
        a1[20] |= 0x100u;
        if ((unint64_t)v44 >= v19 || *v44 != 80)
          continue;
        v27 = v44 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_119:
        if ((unint64_t)v27 >= v19 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v45 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v27;
          v45 = v27 + 1;
          *((_QWORD *)this + 1) = v45;
        }
        a1[20] |= 0x200u;
        if ((unint64_t)v45 >= v19 || *v45 != 88)
          continue;
        v28 = v45 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_127:
        if ((unint64_t)v28 >= v19 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v46 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v28;
          v46 = v28 + 1;
          *((_QWORD *)this + 1) = v46;
        }
        a1[20] |= 0x400u;
        if ((unint64_t)v46 >= v19 || *v46 != 96)
          continue;
        v29 = v46 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_135:
        if ((unint64_t)v29 >= v19 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v47 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v29;
          v47 = v29 + 1;
          *((_QWORD *)this + 1) = v47;
        }
        a1[20] |= 0x800u;
        if ((unint64_t)v47 >= v19 || *v47 != 104)
          continue;
        v30 = v47 + 1;
        *((_QWORD *)this + 1) = v30;
LABEL_143:
        if ((unint64_t)v30 >= v19 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v48 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v30;
          v48 = v30 + 1;
          *((_QWORD *)this + 1) = v48;
        }
        a1[20] |= 0x1000u;
        if ((unint64_t)v48 >= v19 || *v48 != 112)
          continue;
        v31 = v48 + 1;
        *((_QWORD *)this + 1) = v31;
LABEL_151:
        if ((unint64_t)v31 >= v19 || *v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v49 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v31;
          v49 = v31 + 1;
          *((_QWORD *)this + 1) = v49;
        }
        a1[20] |= 0x2000u;
        if ((unint64_t)v49 >= v19 || *v49 != 120)
          continue;
        v32 = v49 + 1;
        *((_QWORD *)this + 1) = v32;
LABEL_159:
        v63 = 0;
        if ((unint64_t)v32 >= v19 || *v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!(_DWORD)result)
            return result;
          v50 = v63;
        }
        else
        {
          v50 = *v32;
          *((_QWORD *)this + 1) = v32 + 1;
        }
        if (v50 <= 6)
        {
          a1[20] |= 0x4000u;
          a1[16] = v50;
        }
        v51 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v33 = *((_QWORD *)this + 2);
        if ((int)v33 - (int)v51 < 2 || *v51 != 128 || v51[1] != 1)
          continue;
        v34 = v51 + 2;
        *((_QWORD *)this + 1) = v34;
LABEL_170:
        if ((unint64_t)v34 >= v33 || (char)*v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v57);
          if (!(_DWORD)result)
            return result;
          v52 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v33 = *((_QWORD *)this + 2);
        }
        else
        {
          *v57 = *v34;
          v52 = v34 + 1;
          *((_QWORD *)this + 1) = v52;
        }
        a1[20] |= 0x8000u;
        if ((int)v33 - (int)v52 < 2 || *v52 != 136 || v52[1] != 1)
          continue;
        v35 = (char *)(v52 + 2);
        *((_QWORD *)this + 1) = v35;
LABEL_179:
        if ((unint64_t)v35 >= v33 || *v35 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v56);
          if (!(_DWORD)result)
            return result;
          v53 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v33 = *((_QWORD *)this + 2);
        }
        else
        {
          *v56 = *v35;
          v53 = (unsigned __int8 *)(v35 + 1);
          *((_QWORD *)this + 1) = v53;
        }
        a1[20] |= 0x10000u;
        if (v53 != (unsigned __int8 *)v33 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v20 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_63;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v21 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v22 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_79;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v23 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v24 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 8u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v25 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v26 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 0xAu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v27 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_119;
      case 0xBu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v28 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_127;
      case 0xCu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v29 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_135;
      case 0xDu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v30 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_143;
      case 0xEu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v31 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_151;
      case 0xFu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v32 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_159;
      case 0x10u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v34 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v33 = *((_QWORD *)this + 2);
        goto LABEL_170;
      case 0x11u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_44;
        v35 = (char *)*((_QWORD *)this + 1);
        v33 = *((_QWORD *)this + 2);
        goto LABEL_179;
      default:
        v14 = TagFallback & 7;
LABEL_44:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008D7148(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[20];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[20];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[20];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[20];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_22:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_28;
  }
LABEL_27:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_29;
  }
LABEL_28:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_30;
  }
LABEL_29:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_31;
  }
LABEL_30:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_32;
  }
LABEL_31:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_33;
  }
LABEL_32:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_34;
  }
LABEL_33:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  v6 = v5[20];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[18], a2, a4);
  }
LABEL_34:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
  if ((v5[20] & 0x10000) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[18], a2, a4);
  return result;
}

uint64_t sub_1008D7348(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;

  v3 = a1[20];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = a1[20];
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = a1[20];
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = a1[20];
    }
    else
    {
      v10 = 1;
    }
    v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_31;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = a1[20];
  }
  else
  {
    v12 = 1;
  }
  v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_35;
  }
LABEL_31:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    v3 = a1[20];
  }
  else
  {
    v14 = 1;
  }
  v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_39;
  }
LABEL_35:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    v3 = a1[20];
  }
  else
  {
    v16 = 1;
  }
  v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_21:
    if ((v3 & 0x80) == 0)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_39:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    v3 = a1[20];
  }
  else
  {
    v18 = 1;
  }
  v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v19 >= 0x80)
    {
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      v3 = a1[20];
    }
    else
    {
      v20 = 1;
    }
    v4 = (v4 + v20 + 1);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_56;
  if ((v3 & 0x100) != 0)
  {
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      v3 = a1[20];
    }
    else
    {
      v22 = 1;
    }
    v4 = (v4 + v22 + 1);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0)
        goto LABEL_51;
      goto LABEL_66;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    v3 = a1[20];
  }
  else
  {
    v24 = 2;
  }
  v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_51:
    if ((v3 & 0x800) == 0)
      goto LABEL_52;
    goto LABEL_70;
  }
LABEL_66:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    v3 = a1[20];
  }
  else
  {
    v26 = 2;
  }
  v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_52:
    if ((v3 & 0x1000) == 0)
      goto LABEL_53;
    goto LABEL_74;
  }
LABEL_70:
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if (v27 >= 0x80)
  {
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    v3 = a1[20];
  }
  else
  {
    v28 = 2;
  }
  v4 = (v28 + v4);
  if ((v3 & 0x1000) == 0)
  {
LABEL_53:
    if ((v3 & 0x2000) == 0)
      goto LABEL_54;
    goto LABEL_78;
  }
LABEL_74:
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
  if (v29 >= 0x80)
  {
    v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    v3 = a1[20];
  }
  else
  {
    v30 = 2;
  }
  v4 = (v30 + v4);
  if ((v3 & 0x2000) == 0)
  {
LABEL_54:
    if ((v3 & 0x4000) == 0)
      goto LABEL_55;
    goto LABEL_82;
  }
LABEL_78:
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
  if (v31 >= 0x80)
  {
    v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    v3 = a1[20];
  }
  else
  {
    v32 = 2;
  }
  v4 = (v32 + v4);
  if ((v3 & 0x4000) == 0)
  {
LABEL_55:
    if ((v3 & 0x8000) == 0)
      goto LABEL_56;
    goto LABEL_88;
  }
LABEL_82:
  v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[16];
  if ((v33 & 0x80000000) != 0)
  {
    v34 = 11;
  }
  else if (v33 >= 0x80)
  {
    v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2) + 1;
    v3 = a1[20];
  }
  else
  {
    v34 = 2;
  }
  v4 = (v34 + v4);
  if ((v3 & 0x8000) == 0)
  {
LABEL_56:
    if ((v3 & 0x10000) == 0)
      goto LABEL_96;
    goto LABEL_92;
  }
LABEL_88:
  v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[17];
  if (v35 >= 0x80)
  {
    v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2) + 2;
    v3 = a1[20];
  }
  else
  {
    v36 = 3;
  }
  v4 = (v36 + v4);
  if ((v3 & 0x10000) != 0)
  {
LABEL_92:
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[18];
    if (v37 >= 0x80)
      v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2) + 2;
    else
      v38 = 3;
    v4 = (v38 + v4);
  }
LABEL_96:
  a1[19] = v4;
  return v4;
}

void sub_1008D7688(_DWORD *a1, _DWORD *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D6484(a1, lpsrc);
}

uint64_t sub_1008D76D4()
{
  return 1;
}

_QWORD *sub_1008D76DC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.PositionRequest");
}

void sub_1008D76EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 8965);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      v6 = *(_QWORD *)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310DF0 + 8);
      sub_1008D5160(v6, v7);
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      v8 = *(_DWORD **)(a1 + 16);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 16);
      if (!v9)
        v9 = *(_QWORD *)(qword_102310DF0 + 16);
      sub_1008D4D30(v8, v9);
    }
  }
}

void sub_1008D7824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008D783C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_102310DF0 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[2];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008D7898(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B830;
  sub_1008D783C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D78C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B830;
  sub_1008D783C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D790C()
{
  operator new();
}

uint64_t sub_1008D7944(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 28);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
      {
        result = sub_1008D5390(result);
        v2 = *(_DWORD *)(v1 + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008D799C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  unsigned int *v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t result;
  unsigned int v27;
  unsigned int v28;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_17;
        *(_DWORD *)(a1 + 28) |= 1u;
        v8 = *(_QWORD *)(a1 + 8);
        if (!v8)
          operator new();
        v27 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0;
        }
        else
        {
          v27 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)this + 14);
        v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008D53C0(v8, this, v13) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        v14 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)this + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 < *((_QWORD *)this + 2) && *v17 == 18)
        {
          *((_QWORD *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_17;
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      v18 = *(unsigned int **)(a1 + 16);
      if (!v18)
        operator new();
      v28 = 0;
      v19 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0;
      }
      else
      {
        v28 = *v19;
        *((_QWORD *)this + 1) = v19 + 1;
      }
      v20 = *((_DWORD *)this + 14);
      v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21)
        return 0;
      v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_1008D4E7C(v18, this, v23) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      v24 = *((_DWORD *)this + 14);
      v15 = __OFSUB__(v24, 1);
      v25 = v24 - 1;
      if (v25 < 0 == v15)
        *((_DWORD *)this + 14) = v25;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008D7C78(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310DF0 + 8);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310DF0 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008D7CF4(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  unsigned int v10;
  int v11;
  int v12;

  if (!*(_BYTE *)(a1 + 28))
  {
    v3 = 0;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    v4 = *(_QWORD *)(qword_102310DF0 + 8);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D5850(v4, a2);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_12:
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310DF0 + 16);
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D5070(v8, a2);
    v11 = (int)v9;
    if (v9 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_18:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_1008D7DC4(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D76EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D7E10()
{
  return 1;
}

_QWORD *sub_1008D7E18@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.UtranGpsTimeMeasured");
}

void sub_1008D7E28(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 9167);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008D7ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D7EE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B8A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D7EF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B8A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D7F28()
{
  operator new();
}

uint64_t sub_1008D7F60(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008D7F74(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008D8110(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008D8168(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008D81F4(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D7E28(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D8240()
{
  return 1;
}

_QWORD *sub_1008D8248@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GeranGpsTimeMeasuredBased");
}

void sub_1008D8258(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 9369);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008D8300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D8318(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B920;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D8328(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B920;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D8358()
{
  operator new();
}

uint64_t sub_1008D8390(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008D83A4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008D8540(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008D8598(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008D8624(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D8258(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D8670()
{
  return 1;
}

_QWORD *sub_1008D8678@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GeranGpsTimeMeasuredAssisted");
}

void sub_1008D8688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 9626);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      v6 = *(_QWORD *)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310E08 + 8);
      sub_1008D76EC(v6, v7);
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_18;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 36) |= 2u;
    v8 = *(_DWORD **)(a1 + 16);
    if (!v8)
      operator new();
    v9 = *(_QWORD *)(a2 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E08 + 16);
    sub_1008D7E28(v8, v9);
    if ((*(_DWORD *)(a2 + 36) & 4) != 0)
    {
LABEL_18:
      *(_DWORD *)(a1 + 36) |= 4u;
      v10 = *(_DWORD **)(a1 + 24);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 24);
      if (!v11)
        v11 = *(_QWORD *)(qword_102310E08 + 24);
      sub_1008D8258(v10, v11);
    }
  }
}

void sub_1008D8824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008D883C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)qword_102310E08 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[2];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    result = (_QWORD *)v1[3];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008D88AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B998;
  sub_1008D883C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D88DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215B998;
  sub_1008D883C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D8920()
{
  operator new();
}

uint64_t sub_1008D8960(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 36);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
      {
        result = sub_1008D7944(result);
        v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      v4 = *(_QWORD *)(v1 + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20))
          *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_1008D89D8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v7;
  int v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int *v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  _BYTE *v27;
  unsigned int *v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t result;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if (v8 != 2)
            goto LABEL_20;
          *(_DWORD *)(a1 + 36) |= 1u;
          v9 = *(_QWORD *)(a1 + 8);
          if (!v9)
            operator new();
          v37 = 0;
          v10 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
          }
          else
          {
            v37 = *v10;
            *((_QWORD *)this + 1) = v10 + 1;
          }
          v11 = *((_DWORD *)this + 14);
          v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12)
            return 0;
          v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_1008D799C(v9, this, v14) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          v15 = *((_DWORD *)this + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)this + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v18 < *((_QWORD *)this + 2) && *v18 == 18)
          {
            *((_QWORD *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
LABEL_32:
        *(_DWORD *)(a1 + 36) |= 2u;
        v19 = *(unsigned int **)(a1 + 16);
        if (!v19)
          operator new();
        v38 = 0;
        v20 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0;
        }
        else
        {
          v38 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)this + 14);
        v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1008D7F74(v19, this, v24) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        v25 = *((_DWORD *)this + 14);
        v16 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v16)
          *((_DWORD *)this + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v27 < *((_QWORD *)this + 2) && *v27 == 26)
        {
          *((_QWORD *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_20;
LABEL_46:
      *(_DWORD *)(a1 + 36) |= 4u;
      v28 = *(unsigned int **)(a1 + 24);
      if (!v28)
        operator new();
      v39 = 0;
      v29 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v29 >= *((_QWORD *)this + 2) || *v29 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0;
      }
      else
      {
        v39 = *v29;
        *((_QWORD *)this + 1) = v29 + 1;
      }
      v30 = *((_DWORD *)this + 14);
      v31 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v30 + 1;
      if (v30 >= v31)
        return 0;
      v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
      if (!sub_1008D83A4(v28, this, v33) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
      v34 = *((_DWORD *)this + 14);
      v16 = __OFSUB__(v34, 1);
      v35 = v34 - 1;
      if (v35 < 0 == v16)
        *((_DWORD *)this + 14) = v35;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008D8DC4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310E08 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310E08 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    v9 = *(_QWORD *)(v5 + 24);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E08 + 24);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1008D8E6C(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  unsigned int v15;
  int v16;
  int v17;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_25;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
      v5 = *(_QWORD *)(qword_102310E08 + 8);
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D7CF4(v5, a2);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    else
      v8 = 1;
    v4 = (v7 + v8 + 1);
    v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = 0;
  if ((*(_BYTE *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E08 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D8168(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
    v3 = *(_DWORD *)(a1 + 36);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v13 = *(_QWORD *)(a1 + 24);
    if (!v13)
      v13 = *(_QWORD *)(qword_102310E08 + 24);
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D8598(v13, a2);
    v16 = (int)v14;
    if (v14 >= 0x80)
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    else
      v17 = 1;
    v4 = (v4 + v16 + v17 + 1);
  }
LABEL_25:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008D8F84(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D8688(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D8FD0()
{
  return 1;
}

_QWORD *sub_1008D8FD8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsTimeMeasured");
}

void sub_1008D8FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 9843);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 6)
        sub_10190E4F8();
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      v7 = *(_QWORD *)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310E10 + 8);
      sub_1008D8688(v7, v8);
    }
  }
}

void sub_1008D90E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D9100(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BA10;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E10 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D9154(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D9100(a1);
  operator delete();
}

void sub_1008D9178()
{
  operator new();
}

uint64_t sub_1008D91B4(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_1008D8960(result);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008D91F0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  unsigned int v21;
  unsigned int v22;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v9 = v21;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v7 = TagFallback & 7;
        goto LABEL_15;
      }
      v7 = TagFallback & 7;
      if (v7 == 2)
        break;
LABEL_15:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    v12 = *(_QWORD *)(a1 + 8);
    if (!v12)
      operator new();
    v22 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))
        return 0;
    }
    else
    {
      v22 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)this + 14);
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008D89D8(v12, this, v17) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    v18 = *((_DWORD *)this + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)this + 14) = v20;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008D9444(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return result;
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E10 + 8);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008D94B0(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  unsigned int v8;
  int v9;
  int v10;

  v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_19;
    }
    v6 = *(_QWORD *)(a1 + 8);
    if (!v6)
      v6 = *(_QWORD *)(qword_102310E10 + 8);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D8E6C(v6, a2);
    v9 = (int)v7;
    if (v7 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    else
      v10 = 1;
    v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D9574(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D8FE8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D95C0()
{
  return 1;
}

_QWORD *sub_1008D95C8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsTimeMeasuredParams");
}

void sub_1008D95D8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 10076);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v8;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v6;
  }
}

void sub_1008D96A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D96C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BA88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D96D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BA88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008D9700()
{
  operator new();
}

uint64_t sub_1008D973C(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008D9754(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  _BYTE *v17;
  unsigned __int8 *v18;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2)
        break;
      v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v16 = (char *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
      }
      else
      {
        *v6 = *v16;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v13;
          v18 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

int *sub_1008D9974(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_1008D99EC(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D9AA0(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D95D8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D9AEC()
{
  return 1;
}

_QWORD *sub_1008D9AF4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsTOD");
}

void sub_1008D9B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 10417);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      v9 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(_DWORD *)(a1 + 8) = v9;
      v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_19;
      }
    }
    else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v10 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 12) = v10;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 16) = v11;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_10;
      goto LABEL_9;
    }
LABEL_20:
    v12 = *(_DWORD *)(a2 + 20);
    if (v12 >= 4)
      sub_10190E520();
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 20) = v12;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 0x10) == 0)
      goto LABEL_10;
LABEL_9:
    v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v6;
    v5 = *(_DWORD *)(a2 + 40);
LABEL_10:
    if ((v5 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x20u;
      v7 = *(_DWORD **)(a1 + 24);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 24);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310E20 + 24);
      sub_1008D95D8(v7, v8);
    }
  }
}

void sub_1008D9C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D9C9C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BB00;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E20 != this)
  {
    v2 = *((_QWORD *)this + 3);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D9CF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D9C9C(a1);
  operator delete();
}

void sub_1008D9D14()
{
  operator new();
}

uint64_t sub_1008D9D58(uint64_t result)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(result + 40);
  if (v1)
  {
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v1 & 0x20) != 0)
    {
      v2 = *(_QWORD *)(result + 24);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1008D9D90(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  unint64_t v18;
  char *v19;
  int v20;
  uint64_t result;
  _BYTE *v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  _BYTE *v26;
  unsigned int *v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  BOOL v34;
  int v35;
  unsigned int v36;
  unsigned int v37;

  v5 = (unsigned int *)(a1 + 8);
  v6 = (unsigned int *)(a1 + 12);
  v7 = (unsigned int *)(a1 + 16);
  v8 = (unsigned int *)(a1 + 32);
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_31;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_31:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v15;
          v22 = v15 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v22 >= v12 || *v22 != 24)
          continue;
        v16 = v22 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_39:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v16;
          v23 = v16 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v23 >= v12 || *v23 != 32)
          continue;
        v17 = v23 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_47:
        v36 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
          if (!(_DWORD)result)
            return result;
          v24 = v36;
        }
        else
        {
          v24 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        if (v24 <= 3)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 20) = v24;
        }
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        if ((unint64_t)v25 >= v18 || *v25 != 40)
          continue;
        v19 = v25 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_57:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v18 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v19;
          v26 = v19 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        v20 = *(_DWORD *)(a1 + 40) | 0x10;
        *(_DWORD *)(a1 + 40) = v20;
        if ((unint64_t)v26 >= v18 || *v26 != 50)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_65:
        *(_DWORD *)(a1 + 40) = v20 | 0x20;
        v27 = *(unsigned int **)(a1 + 24);
        if (!v27)
          operator new();
        v37 = 0;
        v28 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
        }
        else
        {
          v37 = *v28;
          *((_QWORD *)this + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (sub_1008D9754(v27, this, v32))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              v33 = *((_DWORD *)this + 14);
              v34 = __OFSUB__(v33, 1);
              v35 = v33 - 1;
              if (v35 < 0 == v34)
                *((_DWORD *)this + 14) = v35;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_39;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v19 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_23;
        v20 = *(_DWORD *)(a1 + 40);
        goto LABEL_65;
      default:
        v11 = TagFallback & 7;
LABEL_23:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008DA1D8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
LABEL_12:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x20) == 0)
      return result;
    goto LABEL_13;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) != 0)
    goto LABEL_12;
LABEL_6:
  if ((v6 & 0x20) == 0)
    return result;
LABEL_13:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E20 + 24);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1008DA2B4(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  unsigned int v16;
  int v17;
  int v18;

  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_39;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      v9 = 2;
    }
    v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_17;
LABEL_29:
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v12 >= 0x80)
      {
        v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
        v3 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        v13 = 2;
      }
      v4 = (v13 + v4);
      if ((v3 & 0x20) == 0)
        goto LABEL_39;
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v11 = 2;
  }
  v4 = (v11 + v4);
  if ((v3 & 0x10) != 0)
    goto LABEL_29;
LABEL_17:
  if ((v3 & 0x20) == 0)
    goto LABEL_39;
LABEL_33:
  v14 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v14 = *(_QWORD *)(qword_102310E20 + 24);
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D99EC(v14, a2);
  v17 = (int)v15;
  if (v15 >= 0x80)
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
  else
    v18 = 1;
  v4 = (v4 + v17 + v18 + 1);
LABEL_39:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008DA424(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D9B04(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DA470()
{
  return 1;
}

_QWORD *sub_1008DA478@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.LocationInfo");
}

void sub_1008DA488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  _DWORD *v9;
  uint64_t v10;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 10705);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_11;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return;
      goto LABEL_12;
    }
LABEL_11:
    v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0)
      return;
LABEL_12:
    *(_DWORD *)(a1 + 32) |= 8u;
    v9 = *(_DWORD **)(a1 + 16);
    if (!v9)
      operator new();
    v10 = *(_QWORD *)(a2 + 16);
    if (!v10)
      v10 = *(_QWORD *)(qword_102310E28 + 16);
    sub_1008D59EC(v9, v10);
  }
}

void sub_1008DA5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DA5D8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BB78;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E28 != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DA62C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DA5D8(a1);
  operator delete();
}

void sub_1008DA650()
{
  operator new();
}

uint64_t sub_1008DA68C(uint64_t result)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(result + 32);
  if (v1)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 24) = 0;
    if ((v1 & 8) != 0)
    {
      v2 = *(_QWORD *)(result + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008DA6C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t result;
  _BYTE *v18;
  _BYTE *v19;
  unsigned int *v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  int v28;
  unsigned int v29;

  v5 = (unsigned int *)(a1 + 8);
  v6 = (unsigned int *)(a1 + 12);
  v7 = (unsigned int *)(a1 + 24);
  while (2)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
          goto LABEL_27;
        }
        continue;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v14;
          v18 = v14 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v18 >= v11 || *v18 != 24)
          continue;
        v15 = v18 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v15;
          v19 = v15 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        v16 = *(_DWORD *)(a1 + 32) | 4;
        *(_DWORD *)(a1 + 32) = v16;
        if ((unint64_t)v19 >= v11 || *v19 != 34)
          continue;
        *((_QWORD *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 32) = v16 | 8;
        v20 = *(unsigned int **)(a1 + 16);
        if (!v20)
          operator new();
        v29 = 0;
        v21 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0;
        }
        else
        {
          v29 = *v21;
          *((_QWORD *)this + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)this + 14);
        v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 < v23)
        {
          v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
          if (sub_1008D5B68(v20, this, v25))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
              v26 = *((_DWORD *)this + 14);
              v27 = __OFSUB__(v26, 1);
              v28 = v26 - 1;
              if (v28 < 0 == v27)
                *((_DWORD *)this + 14) = v28;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v15 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_35;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_19;
        v16 = *(_DWORD *)(a1 + 32);
        goto LABEL_43;
      default:
        v10 = TagFallback & 7;
LABEL_19:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008DAA18(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
LABEL_8:
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0)
        return result;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0)
    goto LABEL_8;
LABEL_4:
  if ((v6 & 8) == 0)
    return result;
LABEL_9:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E28 + 16);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1008DAABC(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  unsigned int v12;
  int v13;
  int v14;

  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_27;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 32);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      v9 = 2;
    }
    v4 = (v9 + v4);
    if ((v3 & 8) == 0)
      goto LABEL_27;
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_27;
  }
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310E28 + 16);
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D5E00(v10, a2);
  v13 = (int)v11;
  if (v11 >= 0x80)
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
  else
    v14 = 1;
  v4 = (v4 + v13 + v14 + 1);
LABEL_27:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1008DABC8(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DA488(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DAC14()
{
  return 1;
}

_QWORD *sub_1008DAC1C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CellInfo");
}

void sub_1008DAC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v12[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 10985);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_11;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v7;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return;
      goto LABEL_12;
    }
LABEL_11:
    v8 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v8;
    if ((*(_DWORD *)(a2 + 36) & 8) == 0)
      return;
LABEL_12:
    *(_DWORD *)(a1 + 36) |= 8u;
    v9 = *(_QWORD *)(a1 + 24);
    if (!v9)
      operator new();
    v10 = *(_QWORD *)(a2 + 24);
    if (!v10)
      v10 = *(_QWORD *)(qword_102310E30 + 24);
    sub_1008DA488(v9, v10);
  }
}

void sub_1008DAD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DAD7C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BBF0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E30 != this)
  {
    v2 = *((_QWORD *)this + 3);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DADD0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DAD7C(a1);
  operator delete();
}

void sub_1008DADF4()
{
  operator new();
}

uint64_t sub_1008DAE34(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 36);
  if (v2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v2 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
        result = sub_1008DA68C(result);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_1008DAE70(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unint64_t *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t result;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  int v28;
  unsigned int v29;

  v5 = (unint64_t *)(a1 + 8);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  while (2)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v12;
          v13 = v12 + 1;
          *((_QWORD *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
          goto LABEL_27;
        }
        continue;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v14;
          v18 = v14 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v18 >= v11 || *v18 != 24)
          continue;
        v15 = v18 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v15;
          v19 = v15 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        v16 = *(_DWORD *)(a1 + 36) | 4;
        *(_DWORD *)(a1 + 36) = v16;
        if ((unint64_t)v19 >= v11 || *v19 != 34)
          continue;
        *((_QWORD *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 36) = v16 | 8;
        v20 = *(_QWORD *)(a1 + 24);
        if (!v20)
          operator new();
        v29 = 0;
        v21 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0;
        }
        else
        {
          v29 = *v21;
          *((_QWORD *)this + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)this + 14);
        v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 < v23)
        {
          v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
          if (sub_1008DA6C4(v20, this, v25))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
              v26 = *((_DWORD *)this + 14);
              v27 = __OFSUB__(v26, 1);
              v28 = v26 - 1;
              if (v28 < 0 == v27)
                *((_DWORD *)this + 14) = v28;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v15 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_35;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_19;
        v16 = *(_DWORD *)(a1 + 36);
        goto LABEL_43;
      default:
        v10 = TagFallback & 7;
LABEL_19:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008DB1C4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), (unint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
LABEL_8:
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0)
        return result;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0)
    goto LABEL_8;
LABEL_4:
  if ((v6 & 8) == 0)
    return result;
LABEL_9:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E30 + 24);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1008DB268(uint64_t a1, unint64_t a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  unsigned int v11;
  int v12;
  int v13;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_11;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v6 = 2;
  }
  v4 = (v6 + v4);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v8 = 2;
    }
    v4 = (v8 + v4);
    if ((v3 & 8) == 0)
      goto LABEL_24;
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_24;
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (!v9)
    v9 = *(_QWORD *)(qword_102310E30 + 24);
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DAABC(v9, a2);
  v12 = (int)v10;
  if (v10 >= 0x80)
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, v11);
  else
    v13 = 1;
  v4 = (v4 + v12 + v13 + 1);
LABEL_24:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DB360(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DAC2C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DB3AC()
{
  return 1;
}

_QWORD *sub_1008DB3B4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.UtranGanssTimeMeasured");
}

void sub_1008DB3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 11234);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 28);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_10;
      }
    }
    else if ((*(_BYTE *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0)
      return;
LABEL_10:
    *(_DWORD *)(a1 + 28) |= 4u;
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
      operator new();
    v9 = *(_QWORD *)(a2 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E38 + 16);
    sub_1008DA488(v8, v9);
  }
}

void sub_1008DB4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DB4F4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BC68;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E38 != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DB548(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DB4F4(a1);
  operator delete();
}

void sub_1008DB56C()
{
  operator new();
}

uint64_t sub_1008DB5A4(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 28);
  if (v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
        result = sub_1008DA68C(result);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008DB5E0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  BOOL v25;
  int v26;
  unsigned int v27;

  v5 = (unsigned int *)(a1 + 8);
  v6 = (unsigned int *)(a1 + 12);
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v7 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v7 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v13 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result)
              return result;
            v14 = (_BYTE *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
          }
          else
          {
            *v5 = *v13;
            v14 = v13 + 1;
            *((_QWORD *)this + 1) = v14;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
            goto LABEL_27;
          }
        }
        if (v9 == 2)
          break;
        if (v9 == 3)
        {
          v10 = TagFallback & 7;
          if (v10 == 2)
          {
            v11 = *(_DWORD *)(a1 + 28);
            goto LABEL_35;
          }
        }
        else
        {
          v10 = TagFallback & 7;
        }
LABEL_19:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
      }
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v15 = (char *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v12 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
      }
      else
      {
        *v6 = *v15;
        v17 = v15 + 1;
        *((_QWORD *)this + 1) = v17;
      }
      v11 = *(_DWORD *)(a1 + 28) | 2;
      *(_DWORD *)(a1 + 28) = v11;
    }
    while ((unint64_t)v17 >= v12 || *v17 != 26);
    *((_QWORD *)this + 1) = v17 + 1;
LABEL_35:
    *(_DWORD *)(a1 + 28) = v11 | 4;
    v18 = *(_QWORD *)(a1 + 16);
    if (!v18)
      operator new();
    v27 = 0;
    v19 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))
        return 0;
    }
    else
    {
      v27 = *v19;
      *((_QWORD *)this + 1) = v19 + 1;
    }
    v20 = *((_DWORD *)this + 14);
    v21 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v20 + 1;
    if (v20 >= v21)
      return 0;
    v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_1008DA6C4(v18, this, v23) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
    v24 = *((_DWORD *)this + 14);
    v25 = __OFSUB__(v24, 1);
    v26 = v24 - 1;
    if (v26 < 0 == v25)
      *((_DWORD *)this + 14) = v26;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008DB8A8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0)
      return result;
    goto LABEL_7;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 4) == 0)
    return result;
LABEL_7:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E38 + 16);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008DB930(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  unsigned int v10;
  int v11;
  int v12;

  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_21;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310E38 + 16);
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DAABC(v8, a2);
    v11 = (int)v9;
    if (v9 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008DBA0C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DB3C4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DBA58()
{
  return 1;
}

_QWORD *sub_1008DBA60@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GeranGanssTimeMeasured");
}

void sub_1008DBA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  char v18;
  _BYTE v19[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v19, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 11731);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v5 = *(_DWORD *)(a2 + 60);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v8 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(_DWORD *)(a1 + 8) = v8;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_DWORD *)(a1 + 12) = v9;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v10 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 16) = v10;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v11 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_DWORD *)(a1 + 20) = v11;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    v14 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v14;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_23:
  *(_DWORD *)(a1 + 60) |= 0x10u;
  v12 = *(_DWORD **)(a1 + 24);
  if (!v12)
    operator new();
  v13 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v13 = *(_QWORD *)(qword_102310E40 + 24);
  sub_1008D59EC(v12, v13);
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  v15 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 60) |= 0x40u;
  *(_DWORD *)(a1 + 36) = v15;
  v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(_DWORD *)(a1 + 40) = v6;
    v5 = *(_DWORD *)(a2 + 60);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return;
  if ((v5 & 0x100) != 0)
  {
    v16 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 60) |= 0x100u;
    *(_DWORD *)(a1 + 44) = v16;
    v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        return;
      goto LABEL_17;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v17 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 60) |= 0x200u;
  *(_DWORD *)(a1 + 48) = v17;
  if ((*(_DWORD *)(a2 + 60) & 0x400) == 0)
    return;
LABEL_17:
  v7 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 60) |= 0x400u;
  *(_DWORD *)(a1 + 52) = v7;
}

void sub_1008DBC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DBCAC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BCE0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E40 != this)
  {
    v2 = *((_QWORD *)this + 3);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DBD00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DBCAC(a1);
  operator delete();
}

void sub_1008DBD24()
{
  operator new();
}

uint64_t sub_1008DBD6C(uint64_t result)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(result + 60);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v1 & 0x10) != 0)
    {
      v2 = *(_QWORD *)(result + 24);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        v1 = *(_DWORD *)(result + 60);
      }
    }
    *(_QWORD *)(result + 32) = 0;
    *(_DWORD *)(result + 40) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_DWORD *)(result + 44) = 0;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1008DBDC0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;
  char *v13;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v15;
  unint64_t v16;
  char *v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  char *v21;
  unsigned int *v22;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  int v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t result;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned int *v38;
  unsigned int *v39;
  unsigned int *v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  BOOL v47;
  int v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  unsigned int v53;
  _BYTE *v54;
  _BYTE *v55;
  unsigned __int8 *v56;
  unsigned int *v57;
  unsigned int *v58;
  unsigned int *v59;
  unsigned int v60;
  unsigned int v61;

  v57 = (unsigned int *)(a1 + 8);
  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 32);
  v9 = (unsigned int *)(a1 + 36);
  v10 = (unsigned int *)(a1 + 40);
  v11 = (unsigned int *)(a1 + 48);
  v12 = (unsigned int *)(a1 + 52);
  while (2)
  {
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v13;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v13 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v57);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v57 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        if ((unint64_t)v18 < v16 && *v18 == 16)
        {
          v19 = v18 + 1;
          *((_QWORD *)this + 1) = v19;
          goto LABEL_41;
        }
        continue;
      case 2u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
LABEL_41:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v19;
          v35 = v19 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 60) |= 2u;
        if ((unint64_t)v35 >= v16 || *v35 != 24)
          continue;
        v20 = v35 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_49:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v20;
          v36 = v20 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 60) |= 4u;
        if ((unint64_t)v36 >= v16 || *v36 != 32)
          continue;
        v21 = v36 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_57:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v16 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v21;
          v37 = v21 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        v26 = *(_DWORD *)(a1 + 60) | 8;
        *(_DWORD *)(a1 + 60) = v26;
        if ((unint64_t)v37 >= v16 || *v37 != 42)
          continue;
        v58 = v12;
        v59 = v11;
        v22 = v10;
        v23 = v8;
        v24 = v7;
        v25 = v5;
        *((_QWORD *)this + 1) = v37 + 1;
LABEL_65:
        v38 = v9;
        *(_DWORD *)(a1 + 60) = v26 | 0x10;
        v39 = *(unsigned int **)(a1 + 24);
        if (!v39)
          operator new();
        v40 = v6;
        v61 = 0;
        v41 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v61))return 0;
        }
        else
        {
          v61 = *v41;
          *((_QWORD *)this + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)this + 14);
        v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 < v43)
        {
          v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61);
          if (sub_1008D5B68(v39, this, v45))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
              v46 = *((_DWORD *)this + 14);
              v47 = __OFSUB__(v46, 1);
              v48 = v46 - 1;
              if (v48 < 0 == v47)
                *((_DWORD *)this + 14) = v48;
              v49 = (_BYTE *)*((_QWORD *)this + 1);
              v27 = *((_QWORD *)this + 2);
              v5 = v25;
              v6 = v40;
              v7 = v24;
              v9 = v38;
              v8 = v23;
              v10 = v22;
              v12 = v58;
              v11 = v59;
              if ((unint64_t)v49 < v27 && *v49 == 48)
              {
                v28 = v49 + 1;
                *((_QWORD *)this + 1) = v28;
LABEL_79:
                if ((unint64_t)v28 >= v27 || *v28 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                  if (!(_DWORD)result)
                    return result;
                  v50 = (_BYTE *)*((_QWORD *)this + 1);
                  v27 = *((_QWORD *)this + 2);
                }
                else
                {
                  *v8 = *v28;
                  v50 = v28 + 1;
                  *((_QWORD *)this + 1) = v50;
                }
                *(_DWORD *)(a1 + 60) |= 0x20u;
                if ((unint64_t)v50 < v27 && *v50 == 56)
                {
                  v29 = v50 + 1;
                  *((_QWORD *)this + 1) = v29;
LABEL_87:
                  if ((unint64_t)v29 >= v27 || *v29 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                    if (!(_DWORD)result)
                      return result;
                    v51 = (_BYTE *)*((_QWORD *)this + 1);
                    v27 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    *v9 = *v29;
                    v51 = v29 + 1;
                    *((_QWORD *)this + 1) = v51;
                  }
                  *(_DWORD *)(a1 + 60) |= 0x40u;
                  if ((unint64_t)v51 < v27 && *v51 == 64)
                  {
                    v30 = v51 + 1;
                    *((_QWORD *)this + 1) = v30;
LABEL_95:
                    if ((unint64_t)v30 >= v27 || *v30 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                      if (!(_DWORD)result)
                        return result;
                      v52 = (_BYTE *)*((_QWORD *)this + 1);
                      v27 = *((_QWORD *)this + 2);
                    }
                    else
                    {
                      *v10 = *v30;
                      v52 = v30 + 1;
                      *((_QWORD *)this + 1) = v52;
                    }
                    *(_DWORD *)(a1 + 60) |= 0x80u;
                    if ((unint64_t)v52 < v27 && *v52 == 72)
                    {
                      v31 = v52 + 1;
                      *((_QWORD *)this + 1) = v31;
LABEL_103:
                      v60 = 0;
                      if ((unint64_t)v31 >= v27 || *v31 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
                        if (!(_DWORD)result)
                          return result;
                        v53 = v60;
                        v54 = (_BYTE *)*((_QWORD *)this + 1);
                        v27 = *((_QWORD *)this + 2);
                      }
                      else
                      {
                        v53 = *v31;
                        v54 = v31 + 1;
                        *((_QWORD *)this + 1) = v54;
                      }
                      *(_DWORD *)(a1 + 44) = v53;
                      *(_DWORD *)(a1 + 60) |= 0x100u;
                      if ((unint64_t)v54 < v27 && *v54 == 80)
                      {
                        v32 = v54 + 1;
                        *((_QWORD *)this + 1) = v32;
LABEL_111:
                        if ((unint64_t)v32 >= v27 || *v32 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
                          if (!(_DWORD)result)
                            return result;
                          v55 = (_BYTE *)*((_QWORD *)this + 1);
                          v27 = *((_QWORD *)this + 2);
                        }
                        else
                        {
                          *v11 = *v32;
                          v55 = v32 + 1;
                          *((_QWORD *)this + 1) = v55;
                        }
                        *(_DWORD *)(a1 + 60) |= 0x200u;
                        if ((unint64_t)v55 < v27 && *v55 == 88)
                        {
                          v33 = v55 + 1;
                          *((_QWORD *)this + 1) = v33;
LABEL_119:
                          if ((unint64_t)v33 >= v27 || *v33 < 0)
                          {
                            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
                            if (!(_DWORD)result)
                              return result;
                            v56 = (unsigned __int8 *)*((_QWORD *)this + 1);
                            v27 = *((_QWORD *)this + 2);
                          }
                          else
                          {
                            *v12 = *v33;
                            v56 = (unsigned __int8 *)(v33 + 1);
                            *((_QWORD *)this + 1) = v56;
                          }
                          *(_DWORD *)(a1 + 60) |= 0x400u;
                          if (v56 == (unsigned __int8 *)v27
                            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                          {
                            *((_DWORD *)this + 8) = 0;
                            result = 1;
                            *((_BYTE *)this + 36) = 1;
                            return result;
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_49;
      case 4u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 5u:
        v15 = TagFallback & 7;
        if (v15 != 2)
          goto LABEL_32;
        v58 = v12;
        v59 = v11;
        v22 = v10;
        v23 = v8;
        v24 = v7;
        v25 = v5;
        v26 = *(_DWORD *)(a1 + 60);
        goto LABEL_65;
      case 6u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v28 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_79;
      case 7u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v29 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 8u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v30 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 9u:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v31 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 0xAu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v32 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 0xBu:
        v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v33 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_119;
      default:
        v15 = TagFallback & 7;
LABEL_32:
        if (v15 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008DC498(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_17:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E40 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 36), a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 40), a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 44), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 52), a2, a4);
  }
LABEL_24:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 48), a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 52), a2, a4);
  return result;
}

uint64_t sub_1008DC600(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;

  v3 = *(_DWORD *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      v10 = 1;
    }
    v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    v12 = 1;
  }
  v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_35;
  }
LABEL_29:
  v13 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v13 = *(_QWORD *)(qword_102310E40 + 24);
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D5E00(v13, a2);
  v15 = (int)v14;
  if (v14 >= 0x80)
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  else
    v16 = 1;
  v4 = (v4 + v15 + v16 + 1);
  v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_35:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    v18 = 2;
  }
  v4 = (v18 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_39:
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v19 >= 0x80)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    v20 = 2;
  }
  v4 = (v20 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      v22 = 2;
    }
    v4 = (v22 + v4);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_66;
  if ((v3 & 0x100) != 0)
  {
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if ((v23 & 0x80000000) != 0)
    {
      v24 = 11;
    }
    else if (v23 >= 0x80)
    {
      v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
      v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      v24 = 2;
    }
    v4 = (v24 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0)
        goto LABEL_66;
      goto LABEL_62;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    v26 = 2;
  }
  v4 = (v26 + v4);
  if ((v3 & 0x400) != 0)
  {
LABEL_62:
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v27 >= 0x80)
      v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    else
      v28 = 2;
    v4 = (v28 + v4);
  }
LABEL_66:
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_1008DC854(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DBA70(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DC8A0()
{
  return 1;
}

_QWORD *sub_1008DC8A8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.ClsEutranCell");
}

void sub_1008DC8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 12026);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      v6 = *(_QWORD *)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310E48 + 8);
      sub_1008DAC2C(v6, v7);
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_18;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 36) |= 2u;
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
      operator new();
    v9 = *(_QWORD *)(a2 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E48 + 16);
    sub_1008DB3C4(v8, v9);
    if ((*(_DWORD *)(a2 + 36) & 4) != 0)
    {
LABEL_18:
      *(_DWORD *)(a1 + 36) |= 4u;
      v10 = *(_QWORD *)(a1 + 24);
      if (!v10)
        operator new();
      v11 = *(_QWORD *)(a2 + 24);
      if (!v11)
        v11 = *(_QWORD *)(qword_102310E48 + 24);
      sub_1008DBA70(v10, v11);
    }
  }
}

void sub_1008DCA6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008DCA84(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)qword_102310E48 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[2];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    result = (_QWORD *)v1[3];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008DCAF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BD58;
  sub_1008DCA84(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008DCB24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BD58;
  sub_1008DCA84(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008DCB68()
{
  operator new();
}

uint64_t sub_1008DCBA8(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 36);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
      {
        result = sub_1008DAE34(result);
        v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(v1 + 16);
      if (result)
      {
        result = sub_1008DB5A4(result);
        v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(v1 + 24);
      if (result)
        result = sub_1008DBD6C(result);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_1008DCC08(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v7;
  int v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t result;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if (v8 != 2)
            goto LABEL_20;
          *(_DWORD *)(a1 + 36) |= 1u;
          v9 = *(_QWORD *)(a1 + 8);
          if (!v9)
            operator new();
          v37 = 0;
          v10 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
          }
          else
          {
            v37 = *v10;
            *((_QWORD *)this + 1) = v10 + 1;
          }
          v11 = *((_DWORD *)this + 14);
          v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12)
            return 0;
          v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_1008DAE70(v9, this, v14) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          v15 = *((_DWORD *)this + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)this + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v18 < *((_QWORD *)this + 2) && *v18 == 18)
          {
            *((_QWORD *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
LABEL_32:
        *(_DWORD *)(a1 + 36) |= 2u;
        v19 = *(_QWORD *)(a1 + 16);
        if (!v19)
          operator new();
        v38 = 0;
        v20 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0;
        }
        else
        {
          v38 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)this + 14);
        v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1008DB5E0(v19, this, v24) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        v25 = *((_DWORD *)this + 14);
        v16 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v16)
          *((_DWORD *)this + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v27 < *((_QWORD *)this + 2) && *v27 == 26)
        {
          *((_QWORD *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_20;
LABEL_46:
      *(_DWORD *)(a1 + 36) |= 4u;
      v28 = *(_QWORD *)(a1 + 24);
      if (!v28)
        operator new();
      v39 = 0;
      v29 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v29 >= *((_QWORD *)this + 2) || *v29 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0;
      }
      else
      {
        v39 = *v29;
        *((_QWORD *)this + 1) = v29 + 1;
      }
      v30 = *((_DWORD *)this + 14);
      v31 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v30 + 1;
      if (v30 >= v31)
        return 0;
      v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
      if (!sub_1008DBDC0(v28, this, v33) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
      v34 = *((_DWORD *)this + 14);
      v16 = __OFSUB__(v34, 1);
      v35 = v34 - 1;
      if (v35 < 0 == v16)
        *((_DWORD *)this + 14) = v35;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008DD00C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310E48 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310E48 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    v9 = *(_QWORD *)(v5 + 24);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E48 + 24);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1008DD0B4(uint64_t a1, unint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  unsigned int v15;
  int v16;
  int v17;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_25;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
      v5 = *(_QWORD *)(qword_102310E48 + 8);
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DB268(v5, a2);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    else
      v8 = 1;
    v4 = (v7 + v8 + 1);
    v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = 0;
  if ((*(_BYTE *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E48 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DB930(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
    v3 = *(_DWORD *)(a1 + 36);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v13 = *(_QWORD *)(a1 + 24);
    if (!v13)
      v13 = *(_QWORD *)(qword_102310E48 + 24);
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DC600(v13, a2);
    v16 = (int)v14;
    if (v14 >= 0x80)
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    else
      v17 = 1;
    v4 = (v4 + v16 + v17 + 1);
  }
LABEL_25:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DD1CC(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DC8B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DD218()
{
  return 1;
}

_QWORD *sub_1008DD220@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssTimeMeasured");
}

void sub_1008DD230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 12243);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 6)
        sub_10190E548();
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      v7 = *(_QWORD *)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310E50 + 8);
      sub_1008DC8B8(v7, v8);
    }
  }
}

void sub_1008DD330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DD348(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BDD0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E50 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DD39C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DD348(a1);
  operator delete();
}

void sub_1008DD3C0()
{
  operator new();
}

uint64_t sub_1008DD3FC(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_1008DCBA8(result);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008DD438(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  unsigned int v21;
  unsigned int v22;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v9 = v21;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v7 = TagFallback & 7;
        goto LABEL_15;
      }
      v7 = TagFallback & 7;
      if (v7 == 2)
        break;
LABEL_15:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    v12 = *(_QWORD *)(a1 + 8);
    if (!v12)
      operator new();
    v22 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))
        return 0;
    }
    else
    {
      v22 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)this + 14);
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008DCC08(v12, this, v17) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    v18 = *((_DWORD *)this + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)this + 14) = v20;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008DD68C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return result;
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E50 + 8);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008DD6F8(uint64_t a1, unint64_t a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  unsigned int v8;
  int v9;
  int v10;

  v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_19;
    }
    v6 = *(_QWORD *)(a1 + 8);
    if (!v6)
      v6 = *(_QWORD *)(qword_102310E50 + 8);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD0B4(v6, a2);
    v9 = (int)v7;
    if (v7 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    else
      v10 = 1;
    v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008DD7BC(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DD230(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DD808()
{
  return 1;
}

_QWORD *sub_1008DD810@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssTimeMeasuredParams");
}

void sub_1008DD820(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  char v12;
  _BYTE v13[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 12575);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 36) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 8);
    if (v6 >= 6)
      sub_10190E598();
    a1[9] |= 1u;
    a1[2] = v6;
    v5 = *(_DWORD *)(a2 + 36);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *(_DWORD *)(a2 + 12);
    a1[9] |= 2u;
    a1[3] = v8;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
LABEL_16:
      v10 = *(_DWORD *)(a2 + 20);
      a1[9] |= 8u;
      a1[5] = v10;
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 0x10) == 0)
      {
LABEL_11:
        if ((v5 & 0x20) == 0)
          return;
        goto LABEL_12;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  v9 = *(_DWORD *)(a2 + 16);
  a1[9] |= 4u;
  a1[4] = v9;
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 8) != 0)
    goto LABEL_16;
LABEL_10:
  if ((v5 & 0x10) == 0)
    goto LABEL_11;
LABEL_17:
  v11 = *(_DWORD *)(a2 + 24);
  if (v11 >= 4)
    sub_10190E570();
  a1[9] |= 0x10u;
  a1[6] = v11;
  if ((*(_DWORD *)(a2 + 36) & 0x20) != 0)
  {
LABEL_12:
    v7 = *(_DWORD *)(a2 + 28);
    a1[9] |= 0x20u;
    a1[7] = v7;
  }
}

void sub_1008DD964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DD97C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BE48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008DD98C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BE48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008DD9BC()
{
  operator new();
}

uint64_t sub_1008DD9FC(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008DDA14(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  char *v12;
  unsigned int v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned __int8 *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v5 = a1 + 3;
  v6 = a1 + 4;
  v7 = a1 + 5;
  v8 = a1 + 7;
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v30 = 0;
        v12 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 < *((_QWORD *)this + 2) && (*v12 & 0x80000000) == 0)
        {
          v13 = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
          goto LABEL_28;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
        if ((_DWORD)result)
        {
          v13 = v30;
LABEL_28:
          if (v13 <= 5)
          {
            a1[9] |= 1u;
            a1[2] = v13;
          }
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          if ((unint64_t)v21 < v14 && *v21 == 16)
          {
            v15 = v21 + 1;
            *((_QWORD *)this + 1) = v15;
            goto LABEL_33;
          }
          continue;
        }
        break;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_33:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v15;
          v22 = v15 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        a1[9] |= 2u;
        if ((unint64_t)v22 >= v14 || *v22 != 24)
          continue;
        v16 = v22 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_41:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v23 = v16 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        a1[9] |= 4u;
        if ((unint64_t)v23 >= v14 || *v23 != 32)
          continue;
        v17 = v23 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_49:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        a1[9] |= 8u;
        if ((unint64_t)v24 >= v14 || *v24 != 40)
          continue;
        v18 = v24 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_57:
        v29 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!(_DWORD)result)
            return result;
          v25 = v29;
        }
        else
        {
          v25 = *v18;
          *((_QWORD *)this + 1) = v18 + 1;
        }
        if (v25 <= 3)
        {
          a1[9] |= 0x10u;
          a1[6] = v25;
        }
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        if ((unint64_t)v26 >= v19 || *v26 != 48)
          continue;
        v20 = v26 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_67:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v27 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v20;
          v27 = (unsigned __int8 *)(v20 + 1);
          *((_QWORD *)this + 1) = v27;
        }
        a1[9] |= 0x20u;
        if (v27 != (unsigned __int8 *)v19 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v16 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_41;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_49;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v20 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_67;
      default:
        v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008DDDC8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[9];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[9];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  }
LABEL_12:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  if ((v5[9] & 0x20) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  return result;
}

uint64_t sub_1008DDE94(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_40;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_17;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v9 = 2;
    }
    v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_20;
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v11 = 2;
  }
  v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0)
      goto LABEL_40;
    goto LABEL_36;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v13 = 2;
  }
  v4 = (v13 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_36:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v14 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    else
      v15 = 2;
    v4 = (v15 + v4);
  }
LABEL_40:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DDFEC(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DD820(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DE038()
{
  return 1;
}

_QWORD *sub_1008DE040@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssLocationInfo");
}

void sub_1008DE050(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 12793);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008DE0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DE110(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BEC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008DE120(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215BEC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008DE150()
{
  operator new();
}

uint64_t sub_1008DE188(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008DE19C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned int v13;
  unsigned __int8 *v14;
  uint64_t result;
  unsigned int v16;
  unsigned int v17;

  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v17 = 0;
      v10 = (char *)*((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!(_DWORD)result)
          return result;
        v11 = v17;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      a1[2] = v11;
      a1[5] |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)this + 1) = v9;
LABEL_23:
        v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!(_DWORD)result)
            return result;
          v13 = v16;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v9;
          v14 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[3] = v13;
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008DE340(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008DE398(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_19;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      v7 = 2;
    }
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008DE440(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DE050(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DE48C()
{
  return 1;
}

_QWORD *sub_1008DE494@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.EllipsoidPoint");
}

void sub_1008DE4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 13003);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      v6 = *(_DWORD **)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310E68 + 8);
      sub_1008DE050(v6, v7);
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
    }
  }
}

void sub_1008DE590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DE5A8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BF38;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E68 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DE5FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DE5A8(a1);
  operator delete();
}

void sub_1008DE620()
{
  operator new();
}

uint64_t sub_1008DE65C(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    if ((*(_BYTE *)(result + 24) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008DE68C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _DWORD *v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  unsigned __int8 *v21;
  uint64_t result;
  unsigned int v23;

  v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          v10 = (char *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
    v8 = TagFallback & 7;
    if (v8 != 2)
      goto LABEL_18;
    *(_DWORD *)(a1 + 24) |= 1u;
    v11 = *(_DWORD **)(a1 + 8);
    if (!v11)
      operator new();
    v23 = 0;
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))
        return 0;
    }
    else
    {
      v23 = *v12;
      *((_QWORD *)this + 1) = v12 + 1;
    }
    v13 = *((_DWORD *)this + 14);
    v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14)
      return 0;
    v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1008DE19C(v11, this, v16) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    v17 = *((_DWORD *)this + 14);
    v18 = __OFSUB__(v17, 1);
    v19 = v17 - 1;
    if (v19 < 0 == v18)
      *((_DWORD *)this + 14) = v19;
    v20 = (_BYTE *)*((_QWORD *)this + 1);
    v9 = *((_QWORD *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      v10 = v20 + 1;
      *((_QWORD *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v21 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v10;
        v21 = (unsigned __int8 *)(v10 + 1);
        *((_QWORD *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_1008DE8CC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E68 + 8);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  return result;
}

uint64_t sub_1008DE938(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    v4 = *(_QWORD *)(qword_102310E68 + 8);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE398(v4, a2);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008DE9E0(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DE4A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DEA2C()
{
  return 1;
}

_QWORD *sub_1008DEA34@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.PointUncertainCircle");
}

void sub_1008DEA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 13306);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      v7 = *(_DWORD **)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310E70 + 8);
      sub_1008DE050(v7, v8);
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_17;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_18;
    }
LABEL_17:
    v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v10;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_18:
    v11 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 8u;
    *(_DWORD *)(a1 + 24) = v11;
    if ((*(_DWORD *)(a2 + 36) & 0x10) == 0)
      return;
LABEL_9:
    v6 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 36) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v6;
  }
}

void sub_1008DEB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DEBB0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215BFB0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E70 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DEC04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DEBB0(a1);
  operator delete();
}

void sub_1008DEC28()
{
  operator new();
}

uint64_t sub_1008DEC68(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 36))
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008DEC98(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  _DWORD *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t result;
  _BYTE *v29;
  _BYTE *v30;
  unsigned __int8 *v31;
  unsigned int v32;

  v5 = (unsigned int *)(a1 + 16);
  v6 = (unsigned int *)(a1 + 20);
  v7 = (unsigned int *)(a1 + 24);
  v8 = (unsigned int *)(a1 + 28);
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_22;
        *(_DWORD *)(a1 + 36) |= 1u;
        v12 = *(_DWORD **)(a1 + 8);
        if (!v12)
          operator new();
        v32 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0;
        }
        else
        {
          v32 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v19 = *((_DWORD *)this + 14);
        v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1008DE19C(v12, this, v22) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        v23 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)this + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v26 >= v14 || *v26 != 16)
          continue;
        v15 = v26 + 1;
        *((_QWORD *)this + 1) = v15;
        goto LABEL_35;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v15;
          v27 = v15 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v27 >= v14 || *v27 != 24)
          continue;
        v16 = v27 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v29 = v16 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v29 >= v14 || *v29 != 32)
          continue;
        v17 = v29 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v30 = v17 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v30 >= v14 || *v30 != 40)
          continue;
        v18 = v30 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v31 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v31 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 36) |= 0x10u;
        if (v31 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v16 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_43;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_51;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_59;
      default:
        v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008DF05C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;
  uint64_t v7;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310E70 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  if ((v5[9] & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
  return result;
}

uint64_t sub_1008DF11C(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_32;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    v5 = *(_QWORD *)(qword_102310E70 + 8);
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE398(v5, a2);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  else
    v8 = 1;
  v4 = (v7 + v8 + 1);
  v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v10 = 2;
    }
    v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v12 = 2;
    }
    v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0)
        goto LABEL_32;
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v15 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    else
      v16 = 2;
    v4 = (v16 + v4);
  }
LABEL_32:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DF248(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DEA44(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DF294()
{
  return 1;
}

_QWORD *sub_1008DF29C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.PointUncertainEllipse");
}

void sub_1008DF2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  char v14;
  _BYTE v15[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v15, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 13683);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      v7 = *(_DWORD **)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310E78 + 8);
      sub_1008DE050(v7, v8);
      v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_19;
      }
    }
    else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(_DWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_20;
    }
LABEL_19:
    v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 20) = v10;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_21;
    }
LABEL_20:
    v11 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 24) = v11;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_22;
    }
LABEL_21:
    v12 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v12;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        return;
      goto LABEL_11;
    }
LABEL_22:
    v13 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v13;
    if ((*(_DWORD *)(a2 + 44) & 0x40) == 0)
      return;
LABEL_11:
    v6 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v6;
  }
}

void sub_1008DF440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DF458(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215C028;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E78 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DF4AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DF458(a1);
  operator delete();
}

void sub_1008DF4D0()
{
  operator new();
}

uint64_t sub_1008DF514(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 44))
  {
    if ((*(_BYTE *)(result + 44) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008DF548(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int *v19;
  _DWORD *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  BOOL v34;
  int v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t result;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  unsigned __int8 *v43;
  unsigned int v44;

  v5 = (unsigned int *)(a1 + 16);
  v6 = (unsigned int *)(a1 + 20);
  v7 = (unsigned int *)(a1 + 24);
  v8 = (unsigned int *)(a1 + 28);
  v9 = (unsigned int *)(a1 + 32);
  v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if (v13 != 2)
          goto LABEL_26;
        v14 = v10;
        v15 = v9;
        v16 = v8;
        v17 = v7;
        v18 = v6;
        v19 = v5;
        *(_DWORD *)(a1 + 44) |= 1u;
        v20 = *(_DWORD **)(a1 + 8);
        if (!v20)
          operator new();
        v44 = 0;
        v21 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0;
        }
        else
        {
          v44 = *v21;
          *((_QWORD *)this + 1) = v21 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1008DE19C(v20, this, v32) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        v33 = *((_DWORD *)this + 14);
        v34 = __OFSUB__(v33, 1);
        v35 = v33 - 1;
        if (v35 < 0 == v34)
          *((_DWORD *)this + 14) = v35;
        v36 = (_BYTE *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        v5 = v19;
        v6 = v18;
        v7 = v17;
        v8 = v16;
        v9 = v15;
        v10 = v14;
        if ((unint64_t)v36 >= v22 || *v36 != 16)
          continue;
        v23 = v36 + 1;
        *((_QWORD *)this + 1) = v23;
        goto LABEL_39;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v23 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
LABEL_39:
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v23;
          v37 = v23 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v37 >= v22 || *v37 != 24)
          continue;
        v24 = v37 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_47:
        if ((unint64_t)v24 >= v22 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v24;
          v39 = v24 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v39 >= v22 || *v39 != 32)
          continue;
        v25 = v39 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_55:
        if ((unint64_t)v25 >= v22 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v25;
          v40 = v25 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v40 >= v22 || *v40 != 40)
          continue;
        v26 = v40 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_63:
        if ((unint64_t)v26 >= v22 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v26;
          v41 = v26 + 1;
          *((_QWORD *)this + 1) = v41;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v41 >= v22 || *v41 != 48)
          continue;
        v27 = v41 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_71:
        if ((unint64_t)v27 >= v22 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v27;
          v42 = v27 + 1;
          *((_QWORD *)this + 1) = v42;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v42 >= v22 || *v42 != 56)
          continue;
        v28 = v42 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_79:
        if ((unint64_t)v28 >= v22 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v43 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v28;
          v43 = (unsigned __int8 *)(v28 + 1);
          *((_QWORD *)this + 1) = v43;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        if (v43 != (unsigned __int8 *)v22 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v24 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v25 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_55;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v26 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_63;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v27 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v28 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_79;
      default:
        v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008DFA2C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;
  uint64_t v7;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310E78 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
  v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], a2, a4);
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], a2, a4);
  if ((v5[11] & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], a2, a4);
  return result;
}

uint64_t sub_1008DFB24(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;

  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_42;
  }
  if ((*(_BYTE *)(a1 + 44) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    v5 = *(_QWORD *)(qword_102310E78 + 8);
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE398(v5, a2);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  else
    v8 = 1;
  v4 = (v7 + v8 + 1);
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      v10 = 2;
    }
    v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      v12 = 2;
    }
    v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_34;
  }
LABEL_30:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    v18 = 2;
  }
  v4 = (v18 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_38:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v19 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    else
      v20 = 2;
    v4 = (v20 + v4);
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_1008DFCA8(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DF2AC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DFCF4()
{
  return 1;
}

_QWORD *sub_1008DFCFC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.PointAltitudeUncertainEllipsoid");
}

void sub_1008DFD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 14037);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      v7 = *(_DWORD **)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310E80 + 8);
      sub_1008DE050(v7, v8);
      v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_18;
      }
    }
    else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 16) = v9;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 20) = v10;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 24) = v11;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return;
      goto LABEL_10;
    }
LABEL_20:
    v12 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v12;
    if ((*(_DWORD *)(a2 + 40) & 0x20) == 0)
      return;
LABEL_10:
    v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v6;
  }
}

void sub_1008DFE80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DFE98(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215C0A0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E80 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DFEEC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DFE98(a1);
  operator delete();
}

void sub_1008DFF10()
{
  operator new();
}

uint64_t sub_1008DFF54(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 40))
  {
    if ((*(_BYTE *)(result + 40) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1008DFF88(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  _DWORD *v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  BOOL v26;
  int v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t result;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v5 = (unsigned int *)(a1 + 16);
  v6 = (unsigned int *)(a1 + 20);
  v7 = (unsigned int *)(a1 + 24);
  v8 = (unsigned int *)(a1 + 28);
  v9 = (unsigned int *)(a1 + 32);
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_24;
        *(_DWORD *)(a1 + 40) |= 1u;
        v13 = *(_DWORD **)(a1 + 8);
        if (!v13)
          operator new();
        v35 = 0;
        v14 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0;
        }
        else
        {
          v35 = *v14;
          *((_QWORD *)this + 1) = v14 + 1;
        }
        v21 = *((_DWORD *)this + 14);
        v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        if (!sub_1008DE19C(v13, this, v24) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        v25 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v25, 1);
        v27 = v25 - 1;
        if (v27 < 0 == v26)
          *((_DWORD *)this + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v28 >= v15 || *v28 != 16)
          continue;
        v16 = v28 + 1;
        *((_QWORD *)this + 1) = v16;
        goto LABEL_37;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_37:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v16;
          v29 = v16 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v29 >= v15 || *v29 != 24)
          continue;
        v17 = v29 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v17;
          v31 = v17 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v31 >= v15 || *v31 != 32)
          continue;
        v18 = v31 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v18;
          v32 = v18 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        if ((unint64_t)v32 >= v15 || *v32 != 40)
          continue;
        v19 = v32 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_61:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v19;
          v33 = v19 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        if ((unint64_t)v33 >= v15 || *v33 != 48)
          continue;
        v20 = v33 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_69:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v34 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v20;
          v34 = (unsigned __int8 *)(v20 + 1);
          *((_QWORD *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        if (v34 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_61;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_69;
      default:
        v12 = TagFallback & 7;
LABEL_24:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008E03C0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;
  uint64_t v7;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310E80 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  v6 = v5[10];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], a2, a4);
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
  if ((v5[10] & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], a2, a4);
  return result;
}

uint64_t sub_1008E049C(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;

  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_37;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    v5 = *(_QWORD *)(qword_102310E80 + 8);
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE398(v5, a2);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  else
    v8 = 1;
  v4 = (v7 + v8 + 1);
  v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      v10 = 2;
    }
    v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      v12 = 2;
    }
    v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0)
      goto LABEL_37;
    goto LABEL_33;
  }
LABEL_29:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_33:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v17 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    else
      v18 = 2;
    v4 = (v18 + v4);
  }
LABEL_37:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008E05F4(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008DFD0C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E0640()
{
  return 1;
}

_QWORD *sub_1008E0648@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.EllipsoidArc");
}

void sub_1008E0658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 14263);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      v6 = *(_DWORD **)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310E88 + 8);
      sub_1008DE050(v6, v7);
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
    }
  }
}

void sub_1008E0744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E075C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215C118;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310E88 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008E07B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008E075C(a1);
  operator delete();
}

void sub_1008E07D4()
{
  operator new();
}

uint64_t sub_1008E0810(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    if ((*(_BYTE *)(result + 24) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008E0840(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _DWORD *v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  unsigned __int8 *v21;
  uint64_t result;
  unsigned int v23;

  v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          v10 = (char *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
    v8 = TagFallback & 7;
    if (v8 != 2)
      goto LABEL_18;
    *(_DWORD *)(a1 + 24) |= 1u;
    v11 = *(_DWORD **)(a1 + 8);
    if (!v11)
      operator new();
    v23 = 0;
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))
        return 0;
    }
    else
    {
      v23 = *v12;
      *((_QWORD *)this + 1) = v12 + 1;
    }
    v13 = *((_DWORD *)this + 14);
    v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14)
      return 0;
    v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1008DE19C(v11, this, v16) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    v17 = *((_DWORD *)this + 14);
    v18 = __OFSUB__(v17, 1);
    v19 = v17 - 1;
    if (v19 < 0 == v18)
      *((_DWORD *)this + 14) = v19;
    v20 = (_BYTE *)*((_QWORD *)this + 1);
    v9 = *((_QWORD *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      v10 = v20 + 1;
      *((_QWORD *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v21 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v10;
        v21 = (unsigned __int8 *)(v10 + 1);
        *((_QWORD *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_1008E0A80(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310E88 + 8);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  return result;
}

uint64_t sub_1008E0AEC(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = 0;
    goto LABEL_16;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    v4 = *(_QWORD *)(qword_102310E88 + 8);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE398(v4, a2);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008E0B94(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E0658(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E0BE0()
{
  return 1;
}

_QWORD *sub_1008E0BE8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.PointAltitude");
}

void sub_1008E0BF8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 14465);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v5);
      v7 = a1[5];
      v8 = (int)a1[4];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v7 + 1);
          v7 = a1[5];
        }
        a1[5] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 1);
      a1[4] = v8 + 1;
      sub_1008DE050(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 16));
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    v10 = *(_DWORD *)(a2 + 32);
    a1[10] |= 1u;
    a1[8] = v10;
  }
}

void sub_1008E0D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E0D74(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215C190;
  sub_10010C59C(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008E0DAC(uint64_t *a1)
{
  sub_1008E0D74(a1);
  operator delete();
}

void sub_1008E0DD0()
{
  operator new();
}

uint64_t sub_1008E0E14(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 40))
    *(_DWORD *)(result + 32) = 0;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_1008E0E78(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t result;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  unsigned int v27;

  v5 = a1 + 8;
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v10 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        a1[10] |= 1u;
        if ((unint64_t)v12 < v11 && *v12 == 18)
          goto LABEL_23;
      }
      if (TagFallback >> 3 != 2)
        break;
      v9 = TagFallback & 7;
      if (v9 != 2)
        goto LABEL_16;
      while (1)
      {
        v14 = a1[5];
        v15 = (int)a1[4];
        if ((int)v15 >= v14)
        {
          if (v14 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
            v14 = a1[5];
          }
          a1[5] = v14 + 1;
          operator new();
        }
        v16 = *((_QWORD *)a1 + 1);
        a1[4] = v15 + 1;
        v17 = *(_DWORD **)(v16 + 8 * v15);
        v27 = 0;
        v18 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0;
        }
        else
        {
          v27 = *v18;
          *((_QWORD *)this + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)this + 14);
        v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008DE19C(v17, this, v22) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        v23 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)this + 14) = v25;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v26 = (_BYTE *)*((_QWORD *)this + 2);
        if (v12 >= v26 || *v12 != 18)
          break;
LABEL_23:
        *((_QWORD *)this + 1) = v12 + 1;
      }
      if (v12 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008E111C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = result;
  if ((*(_BYTE *)(result + 40) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1008E1190(uint64_t a1, unsigned int a2)
{
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80)
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    else
      v3 = 2;
  }
  else
  {
    v3 = 0;
  }
  v5 = *(_DWORD *)(a1 + 16);
  v6 = (v5 + v3);
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE398(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v7), a2);
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      else
        v10 = 1;
      v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_1008E123C(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E0BF8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E1288()
{
  return 1;
}

_QWORD *sub_1008E1290@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Polygon");
}

void sub_1008E12A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  char v21;
  _BYTE v22[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v22, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 14907);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 72);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 72) & 1) != 0)
  {
    *(_DWORD *)(a1 + 72) |= 1u;
    v7 = *(_QWORD *)(a1 + 8);
    if (!v7)
      operator new();
    v8 = *(_QWORD *)(a2 + 8);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310E98 + 8);
    sub_1008DE4A4(v7, v8);
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  else if ((*(_BYTE *)(a2 + 72) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 72) |= 2u;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    operator new();
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310E98 + 16);
  sub_1008DEA44(v9, v10);
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_24:
  *(_DWORD *)(a1 + 72) |= 4u;
  v11 = *(_QWORD *)(a1 + 24);
  if (!v11)
    operator new();
  v12 = *(_QWORD *)(a2 + 24);
  if (!v12)
    v12 = *(_QWORD *)(qword_102310E98 + 24);
  sub_1008DF2AC(v11, v12);
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_34;
  }
LABEL_29:
  *(_DWORD *)(a1 + 72) |= 8u;
  v13 = *(_QWORD *)(a1 + 32);
  if (!v13)
    operator new();
  v14 = *(_QWORD *)(a2 + 32);
  if (!v14)
    v14 = *(_QWORD *)(qword_102310E98 + 32);
  sub_1008DFD0C(v13, v14);
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_39:
    *(_DWORD *)(a1 + 72) |= 0x20u;
    v17 = *(_QWORD *)(a1 + 48);
    if (!v17)
      operator new();
    v18 = *(_QWORD *)(a2 + 48);
    if (!v18)
      v18 = *(_QWORD *)(qword_102310E98 + 48);
    sub_1008E0658(v17, v18);
    v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        return;
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_34:
  *(_DWORD *)(a1 + 72) |= 0x10u;
  v15 = *(_DWORD **)(a1 + 40);
  if (!v15)
    operator new();
  v16 = *(_QWORD *)(a2 + 40);
  if (!v16)
    v16 = *(_QWORD *)(qword_102310E98 + 40);
  sub_1008DE050(v15, v16);
  v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x20) != 0)
    goto LABEL_39;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_44:
  *(_DWORD *)(a1 + 72) |= 0x40u;
  v19 = *(_DWORD **)(a1 + 56);
  if (!v19)
    operator new();
  v20 = *(_QWORD *)(a2 + 56);
  if (!v20)
    v20 = *(_QWORD *)(qword_102310E98 + 56);
  sub_1008E0BF8(v19, v20);
  if ((*(_DWORD *)(a2 + 72) & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 64) = v6;
  }
}

void sub_1008E1620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008E1638(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((_QWORD *)qword_102310E98 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[2];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[3];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[4];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = v1[5];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = v1[6];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    result = (_QWORD *)v1[7];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008E16F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C208;
  sub_1008E1638(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E1728(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C208;
  sub_1008E1638(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E176C()
{
  operator new();
}

uint64_t sub_1008E17B8(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 72);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 72) & 1) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
      {
        result = sub_1008DE65C(result);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(v1 + 16);
      if (result)
      {
        result = sub_1008DEC68(result);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(v1 + 24);
      if (result)
      {
        result = sub_1008DF514(result);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 8) != 0)
    {
      result = *(_QWORD *)(v1 + 32);
      if (result)
      {
        result = sub_1008DFF54(result);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      v3 = *(_QWORD *)(v1 + 40);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      result = *(_QWORD *)(v1 + 48);
      if (result)
      {
        result = sub_1008E0810(result);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      result = *(_QWORD *)(v1 + 56);
      if (result)
        result = sub_1008E0E14(result);
    }
    *(_DWORD *)(v1 + 64) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t sub_1008E1878(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  _BYTE *v47;
  _DWORD *v48;
  char *v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  _BYTE *v65;
  _DWORD *v66;
  char *v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  _BYTE *v74;
  unsigned __int8 *v75;
  uint64_t result;
  unsigned int v77;

  v5 = (unsigned int *)(a1 + 64);
  while (1)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 < *((_QWORD *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_28;
        *(_DWORD *)(a1 + 72) |= 1u;
        v9 = *(_QWORD *)(a1 + 8);
        if (!v9)
          operator new();
        v77 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0;
        }
        else
        {
          v77 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
        }
        v13 = *((_DWORD *)this + 14);
        v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14)
          return 0;
        v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DE68C(v9, this, v16) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        v17 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)this + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 != 18)
          continue;
        *((_QWORD *)this + 1) = v20 + 1;
        goto LABEL_41;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_28;
LABEL_41:
        *(_DWORD *)(a1 + 72) |= 2u;
        v21 = *(_QWORD *)(a1 + 16);
        if (!v21)
          operator new();
        v77 = 0;
        v22 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0;
        }
        else
        {
          v77 = *v22;
          *((_QWORD *)this + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)this + 14);
        v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DEC98(v21, this, v26) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        v27 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v27, 1);
        v28 = v27 - 1;
        if (v28 < 0 == v18)
          *((_DWORD *)this + 14) = v28;
        v29 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v29 >= *((_QWORD *)this + 2) || *v29 != 26)
          continue;
        *((_QWORD *)this + 1) = v29 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 72) |= 4u;
        v30 = *(_QWORD *)(a1 + 24);
        if (!v30)
          operator new();
        v77 = 0;
        v31 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0;
        }
        else
        {
          v77 = *v31;
          *((_QWORD *)this + 1) = v31 + 1;
        }
        v32 = *((_DWORD *)this + 14);
        v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33)
          return 0;
        v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DF548(v30, this, v35) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        v36 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v36, 1);
        v37 = v36 - 1;
        if (v37 < 0 == v18)
          *((_DWORD *)this + 14) = v37;
        v38 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v38 >= *((_QWORD *)this + 2) || *v38 != 34)
          continue;
        *((_QWORD *)this + 1) = v38 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 72) |= 8u;
        v39 = *(_QWORD *)(a1 + 32);
        if (!v39)
          operator new();
        v77 = 0;
        v40 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v40 >= *((_QWORD *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0;
        }
        else
        {
          v77 = *v40;
          *((_QWORD *)this + 1) = v40 + 1;
        }
        v41 = *((_DWORD *)this + 14);
        v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42)
          return 0;
        v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DFF88(v39, this, v44) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        v45 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v45, 1);
        v46 = v45 - 1;
        if (v46 < 0 == v18)
          *((_DWORD *)this + 14) = v46;
        v47 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v47 >= *((_QWORD *)this + 2) || *v47 != 42)
          continue;
        *((_QWORD *)this + 1) = v47 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 72) |= 0x10u;
        v48 = *(_DWORD **)(a1 + 40);
        if (!v48)
          operator new();
        v77 = 0;
        v49 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v49 >= *((_QWORD *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0;
        }
        else
        {
          v77 = *v49;
          *((_QWORD *)this + 1) = v49 + 1;
        }
        v50 = *((_DWORD *)this + 14);
        v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51)
          return 0;
        v52 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DE19C(v48, this, v53) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v52);
        v54 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v54, 1);
        v55 = v54 - 1;
        if (v55 < 0 == v18)
          *((_DWORD *)this + 14) = v55;
        v56 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v56 >= *((_QWORD *)this + 2) || *v56 != 50)
          continue;
        *((_QWORD *)this + 1) = v56 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 72) |= 0x20u;
        v57 = *(_QWORD *)(a1 + 48);
        if (!v57)
          operator new();
        v77 = 0;
        v58 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v58 >= *((_QWORD *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0;
        }
        else
        {
          v77 = *v58;
          *((_QWORD *)this + 1) = v58 + 1;
        }
        v59 = *((_DWORD *)this + 14);
        v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60)
          return 0;
        v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008E0840(v57, this, v62) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        v63 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v63, 1);
        v64 = v63 - 1;
        if (v64 < 0 == v18)
          *((_DWORD *)this + 14) = v64;
        v65 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v65 >= *((_QWORD *)this + 2) || *v65 != 58)
          continue;
        *((_QWORD *)this + 1) = v65 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 72) |= 0x40u;
        v66 = *(_DWORD **)(a1 + 56);
        if (!v66)
          operator new();
        v77 = 0;
        v67 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v67 >= *((_QWORD *)this + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0;
        }
        else
        {
          v77 = *v67;
          *((_QWORD *)this + 1) = v67 + 1;
        }
        v68 = *((_DWORD *)this + 14);
        v69 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v68 + 1;
        if (v68 >= v69)
          return 0;
        v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008E0E78(v66, this, v71) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v70);
        v72 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v72, 1);
        v73 = v72 - 1;
        if (v73 < 0 == v18)
          *((_DWORD *)this + 14) = v73;
        v74 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v74 < v11 && *v74 == 64)
        {
          v12 = v74 + 1;
          *((_QWORD *)this + 1) = v12;
LABEL_125:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result)
              return result;
            v75 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v11 = *((_QWORD *)this + 2);
          }
          else
          {
            *v5 = *v12;
            v75 = (unsigned __int8 *)(v12 + 1);
            *((_QWORD *)this + 1) = v75;
          }
          *(_DWORD *)(a1 + 72) |= 0x80u;
          if (v75 == (unsigned __int8 *)v11
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_55;
        goto LABEL_28;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_69;
        goto LABEL_28;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_83;
        goto LABEL_28;
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_97;
        goto LABEL_28;
      case 7u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_111;
        goto LABEL_28;
      case 8u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_125;
      default:
        v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008E2144(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  v6 = *(_DWORD *)(result + 72);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310E98 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310E98 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_16:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
    v9 = *(_QWORD *)(qword_102310E98 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_19:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310E98 + 32);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_22:
  v11 = *(_QWORD *)(v5 + 40);
  if (!v11)
    v11 = *(_QWORD *)(qword_102310E98 + 40);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_25:
  v12 = *(_QWORD *)(v5 + 48);
  if (!v12)
    v12 = *(_QWORD *)(qword_102310E98 + 48);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 64), a2, a4);
  }
LABEL_28:
  v13 = *(_QWORD *)(v5 + 56);
  if (!v13)
    v13 = *(_QWORD *)(qword_102310E98 + 56);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v13, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 64), a2, a4);
  return result;
}

uint64_t sub_1008E22B8(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  uint64_t v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;

  LOBYTE(v3) = *(_BYTE *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_59;
  }
  if ((*(_BYTE *)(a1 + 72) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 72) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    v5 = *(_QWORD *)(qword_102310E98 + 8);
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE938(v5, a2);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  else
    v8 = 1;
  v4 = (v7 + v8 + 1);
  v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310E98 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DF11C(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
    v3 = *(_DWORD *)(a1 + 72);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v13 = *(_QWORD *)(a1 + 24);
    if (!v13)
      v13 = *(_QWORD *)(qword_102310E98 + 24);
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DFB24(v13, a2);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    else
      v16 = 1;
    v4 = (v4 + v15 + v16 + 1);
    v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  v17 = *(_QWORD *)(a1 + 32);
  if (!v17)
    v17 = *(_QWORD *)(qword_102310E98 + 32);
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E049C(v17, a2);
  v19 = (int)v18;
  if (v18 >= 0x80)
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  else
    v20 = 1;
  v4 = (v4 + v19 + v20 + 1);
  v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_37:
  v21 = *(_QWORD *)(a1 + 40);
  if (!v21)
    v21 = *(_QWORD *)(qword_102310E98 + 40);
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE398(v21, a2);
  v23 = (int)v22;
  if (v22 >= 0x80)
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  else
    v24 = 1;
  v4 = (v4 + v23 + v24 + 1);
  v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_49;
  }
LABEL_43:
  v25 = *(_QWORD *)(a1 + 48);
  if (!v25)
    v25 = *(_QWORD *)(qword_102310E98 + 48);
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E0AEC(v25, a2);
  v27 = (int)v26;
  if (v26 >= 0x80)
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  else
    v28 = 1;
  v4 = (v4 + v27 + v28 + 1);
  v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0)
      goto LABEL_59;
    goto LABEL_55;
  }
LABEL_49:
  v29 = *(_QWORD *)(a1 + 56);
  if (!v29)
    v29 = *(_QWORD *)(qword_102310E98 + 56);
  v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E1190(v29, a2);
  v31 = (int)v30;
  if (v30 >= 0x80)
    v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
  else
    v32 = 1;
  v4 = (v4 + v31 + v32 + 1);
  if ((*(_DWORD *)(a1 + 72) & 0x80) != 0)
  {
LABEL_55:
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v33 >= 0x80)
      v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2) + 1;
    else
      v34 = 2;
    v4 = (v34 + v4);
  }
LABEL_59:
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

void sub_1008E2530(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E12A0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E257C()
{
  return 1;
}

_QWORD *sub_1008E2584@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.ShapeInfo");
}

void sub_1008E2594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 15144);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 9)
        sub_10190E5C0();
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      v7 = *(_QWORD *)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310EA0 + 8);
      sub_1008E12A0(v7, v8);
    }
  }
}

void sub_1008E26A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E26B8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215C280;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310EA0 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008E270C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008E26B8(a1);
  operator delete();
}

void sub_1008E2730()
{
  operator new();
}

uint64_t sub_1008E276C(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_1008E17B8(result);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008E27A8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  unsigned int v21;
  unsigned int v22;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v9 = v21;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v7 = TagFallback & 7;
        goto LABEL_15;
      }
      v7 = TagFallback & 7;
      if (v7 == 2)
        break;
LABEL_15:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    v12 = *(_QWORD *)(a1 + 8);
    if (!v12)
      operator new();
    v22 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))
        return 0;
    }
    else
    {
      v22 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)this + 14);
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008E1878(v12, this, v17) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    v18 = *((_DWORD *)this + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)this + 14) = v20;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008E2A08(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return result;
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310EA0 + 8);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008E2A74(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  unsigned int v8;
  int v9;
  int v10;

  v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_19;
    }
    v6 = *(_QWORD *)(a1 + 8);
    if (!v6)
      v6 = *(_QWORD *)(qword_102310EA0 + 8);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E22B8(v6, a2);
    v9 = (int)v7;
    if (v7 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    else
      v10 = 1;
    v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E2B38(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E2594(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E2B84()
{
  return 1;
}

_QWORD *sub_1008E2B8C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.LocEstimate");
}

void sub_1008E2B9C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 15346);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008E2C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E2C5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C2F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E2C6C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C2F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E2C9C()
{
  operator new();
}

uint64_t sub_1008E2CD4(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008E2CE8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008E2E84(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008E2EDC(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008E2F68(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E2B9C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E2FB4()
{
  return 1;
}

_QWORD *sub_1008E2FBC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.HorizontalVelocity");
}

void sub_1008E2FCC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  _BYTE v11[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 15610);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[7] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 28);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*(_BYTE *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[7] |= 2u;
    a1[3] = v8;
    v5 = *(_DWORD *)(a2 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v9 = *(_DWORD *)(a2 + 16);
    a1[7] |= 4u;
    a1[4] = v9;
    if ((*(_DWORD *)(a2 + 28) & 8) == 0)
      return;
LABEL_8:
    v6 = *(_DWORD *)(a2 + 20);
    a1[7] |= 8u;
    a1[5] = v6;
  }
}

void sub_1008E30BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E30D4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C370;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E30E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C370;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E3114()
{
  operator new();
}

uint64_t sub_1008E314C(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008E3160(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned __int8 *v20;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  v8 = a1 + 5;
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          *v5 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
LABEL_24:
          a1[7] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if ((_DWORD)result)
        {
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v15;
          v18 = v15 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        a1[7] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24)
          continue;
        v16 = v18 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_35:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v16;
          v19 = v16 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        a1[7] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 32)
          continue;
        v17 = v19 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v20 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v17;
          v20 = (unsigned __int8 *)(v17 + 1);
          *((_QWORD *)this + 1) = v20;
        }
        a1[7] |= 8u;
        if (v20 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_35;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_43;
      default:
        v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008E340C(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[7];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[7];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  }
LABEL_8:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  if ((v5[7] & 8) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  return result;
}

uint64_t sub_1008E34A0(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;

  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_25;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_25;
    goto LABEL_21;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v9 = 2;
  }
  v4 = (v9 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_21:
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    else
      v11 = 2;
    v4 = (v11 + v4);
  }
LABEL_25:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008E3584(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E2FCC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E35D0()
{
  return 1;
}

_QWORD *sub_1008E35D8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.HorizWithVertVelocity");
}

void sub_1008E35E8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 15851);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v8;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v6;
  }
}

void sub_1008E36B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E36D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C3E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E36E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C3E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E3710()
{
  operator new();
}

uint64_t sub_1008E374C(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008E3764(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  _BYTE *v17;
  unsigned __int8 *v18;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2)
        break;
      v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v16 = (char *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
      }
      else
      {
        *v6 = *v16;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v13;
          v18 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

int *sub_1008E3984(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_1008E39FC(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E3AB0(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E35E8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E3AFC()
{
  return 1;
}

_QWORD *sub_1008E3B04@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.HorizWithUncertaintyVelocity");
}

void sub_1008E3B14(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  _BYTE v13[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 16181);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[9] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_14;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[9] |= 2u;
    a1[3] = v8;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_15;
    }
LABEL_14:
    v9 = *(_DWORD *)(a2 + 16);
    a1[9] |= 4u;
    a1[4] = v9;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_16;
    }
LABEL_15:
    v10 = *(_DWORD *)(a2 + 20);
    a1[9] |= 8u;
    a1[5] = v10;
    v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return;
      goto LABEL_10;
    }
LABEL_16:
    v11 = *(_DWORD *)(a2 + 24);
    a1[9] |= 0x10u;
    a1[6] = v11;
    if ((*(_DWORD *)(a2 + 36) & 0x20) == 0)
      return;
LABEL_10:
    v6 = *(_DWORD *)(a2 + 28);
    a1[9] |= 0x20u;
    a1[7] = v6;
  }
}

void sub_1008E3C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E3C5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C460;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E3C6C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C460;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E3C9C()
{
  operator new();
}

uint64_t sub_1008E3CDC(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008E3CF4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  unsigned __int8 *v26;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  v8 = a1 + 5;
  v9 = a1 + 6;
  v10 = a1 + 7;
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v5 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
LABEL_28:
          a1[9] |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)this + 1) = v17;
            goto LABEL_31;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_31:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v17;
          v22 = v17 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        a1[9] |= 2u;
        if ((unint64_t)v22 >= v14 || *v22 != 24)
          continue;
        v18 = v22 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_39:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v18;
          v23 = v18 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        a1[9] |= 4u;
        if ((unint64_t)v23 >= v14 || *v23 != 32)
          continue;
        v19 = v23 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_47:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v19;
          v24 = v19 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        a1[9] |= 8u;
        if ((unint64_t)v24 >= v14 || *v24 != 40)
          continue;
        v20 = v24 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_55:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v20;
          v25 = v20 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        a1[9] |= 0x10u;
        if ((unint64_t)v25 >= v14 || *v25 != 48)
          continue;
        v21 = v25 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v26 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v21;
          v26 = (unsigned __int8 *)(v21 + 1);
          *((_QWORD *)this + 1) = v26;
        }
        a1[9] |= 0x20u;
        if (v26 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_39;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v19 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v20 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_55;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v21 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_63;
      default:
        v13 = TagFallback & 7;
LABEL_22:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008E4090(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[9];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[9];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  }
LABEL_12:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  if ((v5[9] & 0x20) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  return result;
}

uint64_t sub_1008E415C(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;

  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_35;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v9 = 2;
    }
    v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v11 = 2;
  }
  v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0)
      goto LABEL_35;
    goto LABEL_31;
  }
LABEL_27:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    v13 = 2;
  }
  v4 = (v13 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_31:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v14 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    else
      v15 = 2;
    v4 = (v15 + v4);
  }
LABEL_35:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008E4298(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E3B14(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E42E4()
{
  return 1;
}

_QWORD *sub_1008E42EC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.HorizWithVertUncertaintyVelocity");
}

void sub_1008E42FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  char v14;
  _BYTE v15[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v15, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 16493);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 44) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 44) & 2) == 0)
      goto LABEL_6;
LABEL_14:
    *(_DWORD *)(a1 + 44) |= 2u;
    v8 = *(_DWORD **)(a1 + 16);
    if (!v8)
      operator new();
    v9 = *(_QWORD *)(a2 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310EC8 + 16);
    sub_1008E2FCC(v8, v9);
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return;
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  *(_DWORD *)(a1 + 44) |= 1u;
  v6 = *(_DWORD **)(a1 + 8);
  if (!v6)
    operator new();
  v7 = *(_QWORD *)(a2 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310EC8 + 8);
  sub_1008E2B9C(v6, v7);
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 2) != 0)
    goto LABEL_14;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_19:
  *(_DWORD *)(a1 + 44) |= 4u;
  v10 = *(_DWORD **)(a1 + 24);
  if (!v10)
    operator new();
  v11 = *(_QWORD *)(a2 + 24);
  if (!v11)
    v11 = *(_QWORD *)(qword_102310EC8 + 24);
  sub_1008E35E8(v10, v11);
  if ((*(_DWORD *)(a2 + 44) & 8) != 0)
  {
LABEL_24:
    *(_DWORD *)(a1 + 44) |= 8u;
    v12 = *(_DWORD **)(a1 + 32);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 32);
    if (!v13)
      v13 = *(_QWORD *)(qword_102310EC8 + 32);
    sub_1008E3B14(v12, v13);
  }
}

void sub_1008E4508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008E4520(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((_QWORD *)qword_102310EC8 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[2];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[3];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    result = (_QWORD *)v1[4];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008E45A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C4D8;
  sub_1008E4520(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E45D4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C4D8;
  sub_1008E4520(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E4618()
{
  operator new();
}

uint64_t sub_1008E465C(uint64_t result)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v1) = *(_BYTE *)(result + 44);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 44) & 1) != 0)
    {
      v2 = *(_QWORD *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 20))
          *(_QWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 20) = 0;
        v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 24))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      v5 = *(_QWORD *)(result + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
          *(_QWORD *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008E46F0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  unsigned int *v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  unsigned int *v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  _BYTE *v26;
  unsigned int *v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  _BYTE *v35;
  unsigned int *v36;
  char *v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  uint64_t result;
  unsigned int v45;

  while (1)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 < *((_QWORD *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_19;
        *(_DWORD *)(a1 + 44) |= 1u;
        v8 = *(unsigned int **)(a1 + 8);
        if (!v8)
          operator new();
        v45 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0;
        }
        else
        {
          v45 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)this + 14);
        v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E2CE8(v8, this, v13) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        v14 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)this + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 18)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_19;
LABEL_31:
        *(_DWORD *)(a1 + 44) |= 2u;
        v18 = *(unsigned int **)(a1 + 16);
        if (!v18)
          operator new();
        v45 = 0;
        v19 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0;
        }
        else
        {
          v45 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)this + 14);
        v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E3160(v18, this, v23) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        v24 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v15)
          *((_DWORD *)this + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 != 26)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_45:
        *(_DWORD *)(a1 + 44) |= 4u;
        v27 = *(unsigned int **)(a1 + 24);
        if (!v27)
          operator new();
        v45 = 0;
        v28 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0;
        }
        else
        {
          v45 = *v28;
          *((_QWORD *)this + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E3764(v27, this, v32) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        v33 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v33, 1);
        v34 = v33 - 1;
        if (v34 < 0 == v15)
          *((_DWORD *)this + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v35 >= *((_QWORD *)this + 2) || *v35 != 34)
          continue;
        *((_QWORD *)this + 1) = v35 + 1;
LABEL_59:
        *(_DWORD *)(a1 + 44) |= 8u;
        v36 = *(unsigned int **)(a1 + 32);
        if (!v36)
          operator new();
        v45 = 0;
        v37 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v37 >= *((_QWORD *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0;
        }
        else
        {
          v45 = *v37;
          *((_QWORD *)this + 1) = v37 + 1;
        }
        v38 = *((_DWORD *)this + 14);
        v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39)
          return 0;
        v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E3CF4(v36, this, v41) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        v42 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v42, 1);
        v43 = v42 - 1;
        if (v43 < 0 == v15)
          *((_DWORD *)this + 14) = v43;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_45;
        goto LABEL_19;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_19;
        goto LABEL_59;
      default:
        v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008E4C04(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310EC8 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310EC8 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    goto LABEL_15;
  }
LABEL_12:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
    v9 = *(_QWORD *)(qword_102310EC8 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_15:
    v10 = *(_QWORD *)(v5 + 32);
    if (!v10)
      v10 = *(_QWORD *)(qword_102310EC8 + 32);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
  return result;
}

uint64_t sub_1008E4CD8(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  unsigned int v19;
  int v20;
  int v21;

  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_33;
  }
  if ((*(_BYTE *)(a1 + 44) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    v5 = *(_QWORD *)(qword_102310EC8 + 8);
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E2EDC(v5, a2);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  else
    v8 = 1;
  v4 = (v7 + v8 + 1);
  v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310EC8 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E34A0(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
    v3 = *(_DWORD *)(a1 + 44);
  }
LABEL_18:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  v13 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v13 = *(_QWORD *)(qword_102310EC8 + 24);
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E39FC(v13, a2);
  v15 = (int)v14;
  if (v14 >= 0x80)
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  else
    v16 = 1;
  v4 = (v4 + v15 + v16 + 1);
  if ((*(_DWORD *)(a1 + 44) & 8) != 0)
  {
LABEL_27:
    v17 = *(_QWORD *)(a1 + 32);
    if (!v17)
      v17 = *(_QWORD *)(qword_102310EC8 + 32);
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E415C(v17, a2);
    v20 = (int)v18;
    if (v18 >= 0x80)
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
    else
      v21 = 1;
    v4 = (v4 + v20 + v21 + 1);
  }
LABEL_33:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_1008E4E40(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E42FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E4E8C()
{
  return 1;
}

_QWORD *sub_1008E4E94@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.VelocityInfo");
}

void sub_1008E4EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 16714);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 6)
        sub_10190E5E8();
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      v7 = *(_QWORD *)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310ED0 + 8);
      sub_1008E42FC(v7, v8);
    }
  }
}

void sub_1008E4FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E4FC0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215C550;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310ED0 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008E5014(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008E4FC0(a1);
  operator delete();
}

void sub_1008E5038()
{
  operator new();
}

uint64_t sub_1008E5074(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_1008E465C(result);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008E50B0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  unsigned int v21;
  unsigned int v22;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v9 = v21;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v7 = TagFallback & 7;
        goto LABEL_15;
      }
      v7 = TagFallback & 7;
      if (v7 == 2)
        break;
LABEL_15:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    v12 = *(_QWORD *)(a1 + 8);
    if (!v12)
      operator new();
    v22 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))
        return 0;
    }
    else
    {
      v22 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)this + 14);
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008E46F0(v12, this, v17) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    v18 = *((_DWORD *)this + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)this + 14) = v20;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008E5308(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return result;
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310ED0 + 8);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008E5374(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  unsigned int v8;
  int v9;
  int v10;

  v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_19;
    }
    v6 = *(_QWORD *)(a1 + 8);
    if (!v6)
      v6 = *(_QWORD *)(qword_102310ED0 + 8);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E4CD8(v6, a2);
    v9 = (int)v7;
    if (v7 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    else
      v10 = 1;
    v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E5438(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E4EA4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E5484()
{
  return 1;
}

_QWORD *sub_1008E548C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.VelocityEstimate");
}

void sub_1008E549C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 17145);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 64);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 64) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 8);
    if (v6 >= 9)
      sub_10190E610();
    *(_DWORD *)(a1 + 64) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    v5 = *(_DWORD *)(a2 + 64);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_22;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 64) |= 4u;
  v9 = *(_DWORD **)(a1 + 16);
  if (!v9)
    operator new();
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310ED8 + 16);
  sub_1008D5F18(v9, v10);
  v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_22:
  *(_DWORD *)(a1 + 64) |= 8u;
  v11 = *(_QWORD *)(a1 + 24);
  if (!v11)
    operator new();
  v12 = *(_QWORD *)(a2 + 24);
  if (!v12)
    v12 = *(_QWORD *)(qword_102310ED8 + 24);
  sub_1008D9B04(v11, v12);
  v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0)
      goto LABEL_12;
LABEL_32:
    *(_DWORD *)(a1 + 64) |= 0x20u;
    v15 = *(_QWORD *)(a1 + 40);
    if (!v15)
      operator new();
    v16 = *(_QWORD *)(a2 + 40);
    if (!v16)
      v16 = *(_QWORD *)(qword_102310ED8 + 40);
    sub_1008E2594(v15, v16);
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0)
        return;
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_27:
  *(_DWORD *)(a1 + 64) |= 0x10u;
  v13 = *(_DWORD **)(a1 + 32);
  if (!v13)
    operator new();
  v14 = *(_QWORD *)(a2 + 32);
  if (!v14)
    v14 = *(_QWORD *)(qword_102310ED8 + 32);
  sub_1008DD820(v13, v14);
  v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x20) != 0)
    goto LABEL_32;
LABEL_12:
  if ((v5 & 0x40) == 0)
    goto LABEL_13;
LABEL_37:
  *(_DWORD *)(a1 + 64) |= 0x40u;
  v17 = *(_QWORD *)(a1 + 48);
  if (!v17)
    operator new();
  v18 = *(_QWORD *)(a2 + 48);
  if (!v18)
    v18 = *(_QWORD *)(qword_102310ED8 + 48);
  sub_1008E4EA4(v17, v18);
  if ((*(_DWORD *)(a2 + 64) & 0x80) != 0)
  {
LABEL_14:
    v7 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x80u;
    *(_DWORD *)(a1 + 56) = v7;
  }
}

void sub_1008E5788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008E57A0(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((_QWORD *)qword_102310ED8 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = v1[4];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = v1[5];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    result = (_QWORD *)v1[6];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008E5838(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C5C8;
  sub_1008E57A0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E5868(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C5C8;
  sub_1008E57A0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008E58AC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310ED8;
  if (!qword_102310ED8)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310ED8;
  }
  return result;
}

void sub_1008E58D8()
{
  operator new();
}

uint64_t sub_1008E5920(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 64);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 64);
      }
    }
    if ((v2 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_1008D9D58(result);
        v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(v1 + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      result = *(_QWORD *)(v1 + 40);
      if (result)
      {
        result = sub_1008E276C(result);
        v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      result = *(_QWORD *)(v1 + 48);
      if (result)
        result = sub_1008E5074(result);
    }
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 64) = 0;
  return result;
}

uint64_t sub_1008E59D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  int v12;
  unint64_t v13;
  char *v14;
  uint64_t result;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  _DWORD *v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  BOOL v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  _BYTE *v37;
  unsigned int *v38;
  char *v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  _BYTE *v55;
  uint64_t v56;
  char *v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  _BYTE *v64;
  unsigned int v65;
  unsigned __int8 *v66;
  unsigned int v67;

  while (1)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 < *((_QWORD *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v67 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67);
          if (!(_DWORD)result)
            return result;
          v9 = v67;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 64) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v10 && *v16 == 16)
        {
          v11 = v16 + 1;
          *((_QWORD *)this + 1) = v11;
          goto LABEL_36;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_36:
        v67 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67);
          if (!(_DWORD)result)
            return result;
          v17 = v67;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v17 = *v11;
          v18 = v11 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 12) = v17;
        v12 = *(_DWORD *)(a1 + 64) | 2;
        *(_DWORD *)(a1 + 64) = v12;
        if ((unint64_t)v18 >= v10 || *v18 != 26)
          continue;
        *((_QWORD *)this + 1) = v18 + 1;
LABEL_44:
        *(_DWORD *)(a1 + 64) = v12 | 4;
        v19 = *(_DWORD **)(a1 + 16);
        if (!v19)
          operator new();
        v67 = 0;
        v20 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0;
        }
        else
        {
          v67 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)this + 14);
        v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008D60A0(v19, this, v24) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        v25 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v25, 1);
        v27 = v25 - 1;
        if (v27 < 0 == v26)
          *((_DWORD *)this + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 != 34)
          continue;
        *((_QWORD *)this + 1) = v28 + 1;
LABEL_58:
        *(_DWORD *)(a1 + 64) |= 8u;
        v29 = *(_QWORD *)(a1 + 24);
        if (!v29)
          operator new();
        v67 = 0;
        v30 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0;
        }
        else
        {
          v67 = *v30;
          *((_QWORD *)this + 1) = v30 + 1;
        }
        v31 = *((_DWORD *)this + 14);
        v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32)
          return 0;
        v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008D9D90(v29, this, v34) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        v35 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v35, 1);
        v36 = v35 - 1;
        if (v36 < 0 == v26)
          *((_DWORD *)this + 14) = v36;
        v37 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v37 >= *((_QWORD *)this + 2) || *v37 != 42)
          continue;
        *((_QWORD *)this + 1) = v37 + 1;
LABEL_72:
        *(_DWORD *)(a1 + 64) |= 0x10u;
        v38 = *(unsigned int **)(a1 + 32);
        if (!v38)
          operator new();
        v67 = 0;
        v39 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0;
        }
        else
        {
          v67 = *v39;
          *((_QWORD *)this + 1) = v39 + 1;
        }
        v40 = *((_DWORD *)this + 14);
        v41 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v40 + 1;
        if (v40 >= v41)
          return 0;
        v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008DDA14(v38, this, v43) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v42);
        v44 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v26)
          *((_DWORD *)this + 14) = v45;
        v46 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v46 >= *((_QWORD *)this + 2) || *v46 != 50)
          continue;
        *((_QWORD *)this + 1) = v46 + 1;
LABEL_86:
        *(_DWORD *)(a1 + 64) |= 0x20u;
        v47 = *(_QWORD *)(a1 + 40);
        if (!v47)
          operator new();
        v67 = 0;
        v48 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v48 >= *((_QWORD *)this + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0;
        }
        else
        {
          v67 = *v48;
          *((_QWORD *)this + 1) = v48 + 1;
        }
        v49 = *((_DWORD *)this + 14);
        v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50)
          return 0;
        v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008E27A8(v47, this, v52) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
        v53 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v53, 1);
        v54 = v53 - 1;
        if (v54 < 0 == v26)
          *((_DWORD *)this + 14) = v54;
        v55 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v55 >= *((_QWORD *)this + 2) || *v55 != 58)
          continue;
        *((_QWORD *)this + 1) = v55 + 1;
LABEL_100:
        *(_DWORD *)(a1 + 64) |= 0x40u;
        v56 = *(_QWORD *)(a1 + 48);
        if (!v56)
          operator new();
        v67 = 0;
        v57 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v57 >= *((_QWORD *)this + 2) || *v57 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0;
        }
        else
        {
          v67 = *v57;
          *((_QWORD *)this + 1) = v57 + 1;
        }
        v58 = *((_DWORD *)this + 14);
        v59 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v58 + 1;
        if (v58 >= v59)
          return 0;
        v60 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008E50B0(v56, this, v61) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v60);
        v62 = *((_DWORD *)this + 14);
        v26 = __OFSUB__(v62, 1);
        v63 = v62 - 1;
        if (v63 < 0 == v26)
          *((_DWORD *)this + 14) = v63;
        v64 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v64 < v13 && *v64 == 64)
        {
          v14 = v64 + 1;
          *((_QWORD *)this + 1) = v14;
LABEL_114:
          v67 = 0;
          if ((unint64_t)v14 >= v13 || *v14 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67);
            if (!(_DWORD)result)
              return result;
            v65 = v67;
            v66 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
          }
          else
          {
            v65 = *v14;
            v66 = (unsigned __int8 *)(v14 + 1);
            *((_QWORD *)this + 1) = v66;
          }
          *(_DWORD *)(a1 + 56) = v65;
          *(_DWORD *)(a1 + 64) |= 0x80u;
          if (v66 == (unsigned __int8 *)v13
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_25;
        v12 = *(_DWORD *)(a1 + 64);
        goto LABEL_44;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_58;
        goto LABEL_25;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_72;
        goto LABEL_25;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_86;
        goto LABEL_25;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_100;
        goto LABEL_25;
      case 8u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_114;
      default:
        v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008E6174(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  v6 = *(_DWORD *)(result + 64);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_12:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310ED8 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_15:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310ED8 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_18:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_102310ED8 + 32);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_21:
  v10 = *(_QWORD *)(v5 + 40);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310ED8 + 40);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 56), (int)a2, a4);
  }
LABEL_24:
  v11 = *(_QWORD *)(v5 + 48);
  if (!v11)
    v11 = *(_QWORD *)(qword_102310ED8 + 48);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 56), (int)a2, a4);
  return result;
}

uint64_t sub_1008E62C8(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;

  LOBYTE(v3) = *(_BYTE *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_61;
  }
  if ((*(_BYTE *)(a1 + 64) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 64) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310ED8 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D6350(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
    v3 = *(_DWORD *)(a1 + 64);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v13 = *(_QWORD *)(qword_102310ED8 + 24);
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DA2B4(v13, a2);
  v15 = (int)v14;
  if (v14 >= 0x80)
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  else
    v16 = 1;
  v4 = (v4 + v15 + v16 + 1);
  v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_37:
  v17 = *(_QWORD *)(a1 + 32);
  if (!v17)
    v17 = *(_QWORD *)(qword_102310ED8 + 32);
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DDE94(v17, a2);
  v19 = (int)v18;
  if (v18 >= 0x80)
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  else
    v20 = 1;
  v4 = (v4 + v19 + v20 + 1);
  v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_49;
  }
LABEL_43:
  v21 = *(_QWORD *)(a1 + 40);
  if (!v21)
    v21 = *(_QWORD *)(qword_102310ED8 + 40);
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E2A74(v21, a2);
  v23 = (int)v22;
  if (v22 >= 0x80)
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  else
    v24 = 1;
  v4 = (v4 + v23 + v24 + 1);
  v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0)
      goto LABEL_61;
    goto LABEL_55;
  }
LABEL_49:
  v25 = *(_QWORD *)(a1 + 48);
  if (!v25)
    v25 = *(_QWORD *)(qword_102310ED8 + 48);
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E5374(v25, a2);
  v27 = (int)v26;
  if (v26 >= 0x80)
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  else
    v28 = 1;
  v4 = (v4 + v27 + v28 + 1);
  if ((*(_DWORD *)(a1 + 64) & 0x80) != 0)
  {
LABEL_55:
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v29 & 0x80000000) != 0)
    {
      v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    }
    else
    {
      v30 = 2;
    }
    v4 = (v30 + v4);
  }
LABEL_61:
  *(_DWORD *)(a1 + 60) = v4;
  return v4;
}

void sub_1008E6524(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E549C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E6570()
{
  return 1;
}

_QWORD *sub_1008E6578@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.PositionReport");
}

void sub_1008E6588(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  char v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 17595);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v5 = a2[12];
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v8 = a2[2];
    a1[12] |= 1u;
    a1[2] = v8;
    v5 = a2[12];
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = a2[3];
  a1[12] |= 2u;
  a1[3] = v9;
  v5 = a2[12];
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v10 = a2[4];
  a1[12] |= 4u;
  a1[4] = v10;
  v5 = a2[12];
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v11 = a2[5];
  a1[12] |= 8u;
  a1[5] = v11;
  v5 = a2[12];
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_22:
    v13 = a2[7];
    a1[12] |= 0x20u;
    a1[7] = v13;
    v5 = a2[12];
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_20:
  v12 = a2[6];
  if (v12 >= 6)
    sub_10190E638();
  a1[12] |= 0x10u;
  a1[6] = v12;
  v5 = a2[12];
  if ((v5 & 0x20) != 0)
    goto LABEL_22;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_23:
  v14 = a2[8];
  a1[12] |= 0x40u;
  a1[8] = v14;
  v5 = a2[12];
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = a2[9];
    a1[12] |= 0x80u;
    a1[9] = v6;
    v5 = a2[12];
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    v7 = a2[10];
    a1[12] |= 0x100u;
    a1[10] = v7;
  }
}

void sub_1008E6724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E673C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C640;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E674C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C640;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E677C()
{
  operator new();
}

uint64_t sub_1008E67C0(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 48);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1008E67EC(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  unsigned int v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  unsigned __int8 *v36;
  uint64_t result;
  unsigned int v38;
  unsigned int v39;

  v5 = a1 + 3;
  v6 = a1 + 4;
  v7 = a1 + 5;
  v8 = a1 + 7;
  v9 = a1 + 8;
  v10 = a1 + 9;
  v11 = a1 + 10;
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v38 = 0;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          v17 = *v16;
          v18 = v16 + 1;
          *((_QWORD *)this + 1) = v18;
LABEL_34:
          a1[2] = v17;
          a1[12] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            v19 = v18 + 1;
            *((_QWORD *)this + 1) = v19;
            goto LABEL_37;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
        if ((_DWORD)result)
        {
          v17 = v38;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_37:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v19;
          v28 = v19 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        a1[12] |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_45:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v20;
          v29 = v20 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        a1[12] |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32)
          continue;
        v21 = v29 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_53:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v21;
          v30 = v21 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        a1[12] |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40)
          continue;
        v22 = v30 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_61:
        v39 = 0;
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!(_DWORD)result)
            return result;
          v31 = v39;
        }
        else
        {
          v31 = *v22;
          *((_QWORD *)this + 1) = v22 + 1;
        }
        if (v31 <= 5)
        {
          a1[12] |= 0x10u;
          a1[6] = v31;
        }
        v32 = (_BYTE *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        if ((unint64_t)v32 >= v23 || *v32 != 48)
          continue;
        v24 = v32 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_71:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v24;
          v33 = v24 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        a1[12] |= 0x20u;
        if ((unint64_t)v33 >= v23 || *v33 != 56)
          continue;
        v25 = v33 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_79:
        if ((unint64_t)v25 >= v23 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v25;
          v34 = v25 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        a1[12] |= 0x40u;
        if ((unint64_t)v34 >= v23 || *v34 != 64)
          continue;
        v26 = v34 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v23 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v26;
          v35 = v26 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        a1[12] |= 0x80u;
        if ((unint64_t)v35 >= v23 || *v35 != 72)
          continue;
        v27 = v35 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_95:
        if ((unint64_t)v27 >= v23 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v36 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v27;
          v36 = (unsigned __int8 *)(v27 + 1);
          *((_QWORD *)this + 1) = v36;
        }
        a1[12] |= 0x100u;
        if (v36 != (unsigned __int8 *)v23 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v22 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_61;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v24 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v25 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_79;
      case 8u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v26 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v27 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_95;
      default:
        v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008E6CFC(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[12];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  }
LABEL_18:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  if ((v5[12] & 0x100) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  return result;
}

uint64_t sub_1008E6E1C(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;

  v3 = a1[12];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    if ((v3 & 0x100) == 0)
      goto LABEL_55;
    goto LABEL_51;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_17;
    goto LABEL_13;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = a1[12];
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_13:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      v3 = a1[12];
    }
    else
    {
      v8 = 2;
    }
    v4 = (v8 + v4);
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = a1[12];
    }
    else
    {
      v10 = 2;
    }
    v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_20;
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v12 = 2;
  }
  v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0)
      goto LABEL_21;
    goto LABEL_39;
  }
LABEL_33:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v13 & 0x80000000) != 0)
  {
    v14 = 11;
  }
  else if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_21:
    if ((v3 & 0x40) == 0)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_39:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_22:
    if ((v3 & 0x80) == 0)
      goto LABEL_23;
    goto LABEL_47;
  }
LABEL_43:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v18 = 2;
  }
  v4 = (v18 + v4);
  if ((v3 & 0x80) == 0)
  {
LABEL_23:
    if ((v3 & 0x100) == 0)
      goto LABEL_55;
    goto LABEL_51;
  }
LABEL_47:
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
  if (v19 >= 0x80)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v20 = 2;
  }
  v4 = (v20 + v4);
  if ((v3 & 0x100) != 0)
  {
LABEL_51:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    else
      v22 = 2;
    v4 = (v22 + v4);
  }
LABEL_55:
  a1[11] = v4;
  return v4;
}

void sub_1008E6FF8(_DWORD *a1, _DWORD *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E6588(a1, lpsrc);
}

uint64_t sub_1008E7044()
{
  return 1;
}

_QWORD *sub_1008E704C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssMeasurementElement");
}

void sub_1008E705C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  char v14;
  _BYTE v15[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v15, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 17889);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_DWORD **)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = a1[7];
      v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v7 + 1);
          v7 = a1[7];
        }
        a1[7] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 2);
      a1[6] = v8 + 1;
      sub_1008E6588(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v10)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      v12 = *(_DWORD *)(a2 + 8);
      a1[12] |= 1u;
      a1[2] = v12;
      v10 = *(_DWORD *)(a2 + 48);
      if ((v10 & 2) == 0)
      {
LABEL_14:
        if ((v10 & 4) == 0)
          return;
        goto LABEL_15;
      }
    }
    else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_14;
    }
    v13 = *(_DWORD *)(a2 + 12);
    a1[12] |= 2u;
    a1[3] = v13;
    if ((*(_DWORD *)(a2 + 48) & 4) == 0)
      return;
LABEL_15:
    v11 = *(_DWORD *)(a2 + 40);
    a1[12] |= 4u;
    a1[10] = v11;
  }
}

void sub_1008E7214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E722C(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215C6B8;
  sub_10010C59C(a1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008E7264(uint64_t *a1)
{
  sub_1008E722C(a1);
  operator delete();
}

void sub_1008E7288()
{
  operator new();
}

uint64_t sub_1008E72CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 48))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 40) = 0;
  }
  if (*(int *)(result + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_1008E7334(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v8;
  unsigned __int8 *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  uint64_t result;
  _BYTE *v18;
  _BYTE *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  BOOL v30;
  int v31;
  _BYTE *v32;
  unsigned int v33;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 10;
  v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  while (1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || (char)*v9 < 0)
      break;
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    *((_QWORD *)this + 1) = v9 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        a1[12] |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_26;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_26:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v15;
          v18 = v15 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        a1[12] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24)
          continue;
        v16 = v18 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_34:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v16;
          v19 = v16 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        a1[12] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 34)
          continue;
        break;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_34;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_18;
        goto LABEL_42;
      default:
        v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
    do
    {
      *((_QWORD *)this + 1) = v19 + 1;
LABEL_42:
      v20 = a1[7];
      v21 = (int)a1[6];
      if ((int)v21 >= v20)
      {
        if (v20 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v20 + 1);
          v20 = a1[7];
        }
        a1[7] = v20 + 1;
        operator new();
      }
      v22 = *((_QWORD *)a1 + 2);
      a1[6] = v21 + 1;
      v23 = *(unsigned int **)(v22 + 8 * v21);
      v33 = 0;
      v24 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0;
      }
      else
      {
        v33 = *v24;
        *((_QWORD *)this + 1) = v24 + 1;
      }
      v25 = *((_DWORD *)this + 14);
      v26 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v25 + 1;
      if (v25 >= v26)
        return 0;
      v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
      if (!sub_1008E67EC(v23, this, v28) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
      v29 = *((_DWORD *)this + 14);
      v30 = __OFSUB__(v29, 1);
      v31 = v29 - 1;
      if (v31 < 0 == v30)
        *((_DWORD *)this + 14) = v31;
      v19 = (_BYTE *)*((_QWORD *)this + 1);
      v32 = (_BYTE *)*((_QWORD *)this + 2);
    }
    while (v19 < v32 && *v19 == 34);
    if (v19 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
  TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = (_DWORD)TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t sub_1008E76E8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 4) != 0)
LABEL_4:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 40), a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_1008E7798(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;

  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 48) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v4 += v9;
  }
LABEL_19:
  v10 = *(_DWORD *)(a1 + 24);
  v11 = (v10 + v4);
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E6E1C(*(unsigned int **)(*(_QWORD *)(a1 + 16)+ 8 * v12), a2);
      v14 = (int)v13;
      if (v13 >= 0x80)
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      else
        v15 = 1;
      v11 = (v14 + v11 + v15);
      ++v12;
    }
    while (v12 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1008E78A8(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E705C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E78F4()
{
  return 1;
}

_QWORD *sub_1008E78FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssSignalMeasurementInfo");
}

void sub_1008E790C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  _DWORD *v7;
  uint64_t v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 18108);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 7)
        sub_10190E660();
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      v7 = *(_DWORD **)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310EF0 + 8);
      sub_1008E705C(v7, v8);
    }
  }
}

void sub_1008E7A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E7A28(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215C730;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310EF0 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008E7A7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008E7A28(a1);
  operator delete();
}

void sub_1008E7AA0()
{
  operator new();
}

uint64_t sub_1008E7ADC(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_1008E72CC(result);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008E7B18(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  _DWORD *v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  unsigned int v21;
  unsigned int v22;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v9 = v21;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 6)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v7 = TagFallback & 7;
        goto LABEL_15;
      }
      v7 = TagFallback & 7;
      if (v7 == 2)
        break;
LABEL_15:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    v12 = *(_DWORD **)(a1 + 8);
    if (!v12)
      operator new();
    v22 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))
        return 0;
    }
    else
    {
      v22 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)this + 14);
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008E7334(v12, this, v17) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    v18 = *((_DWORD *)this + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)this + 14) = v20;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008E7D70(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return result;
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310EF0 + 8);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008E7DDC(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  unsigned int v8;
  int v9;
  int v10;

  v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_19;
    }
    v6 = *(_QWORD *)(a1 + 8);
    if (!v6)
      v6 = *(_QWORD *)(qword_102310EF0 + 8);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E7798(v6, a2);
    v9 = (int)v7;
    if (v7 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    else
      v10 = 1;
    v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E7EA0(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E790C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E7EEC()
{
  return 1;
}

_QWORD *sub_1008E7EF4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssMeasurementsForSingleGanss");
}

void sub_1008E7F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v17[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v17, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 18515);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      if (v6 >= 6)
        sub_10190E688();
      *(_DWORD *)(a1 + 52) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 52);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(_DWORD *)(a1 + 12) = v7;
      v5 = *(_DWORD *)(a2 + 52);
      if ((v5 & 4) == 0)
      {
LABEL_9:
        if ((v5 & 8) == 0)
          goto LABEL_10;
        goto LABEL_17;
      }
    }
    else if ((v5 & 4) == 0)
    {
      goto LABEL_9;
    }
    v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 4u;
    *(_DWORD *)(a1 + 16) = v8;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0)
        goto LABEL_11;
      goto LABEL_18;
    }
LABEL_17:
    v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(_DWORD *)(a1 + 20) = v9;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x10) == 0)
    {
LABEL_11:
      if ((v5 & 0x20) == 0)
        goto LABEL_12;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v10;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x20) == 0)
    {
LABEL_12:
      if ((v5 & 0x40) == 0)
        goto LABEL_13;
      goto LABEL_24;
    }
LABEL_19:
    *(_DWORD *)(a1 + 52) |= 0x20u;
    v11 = *(_QWORD *)(a1 + 24);
    if (!v11)
      operator new();
    v12 = *(_QWORD *)(a2 + 24);
    if (!v12)
      v12 = *(_QWORD *)(qword_102310EF8 + 24);
    sub_1008DD230(v11, v12);
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0)
        return;
LABEL_25:
      *(_DWORD *)(a1 + 52) |= 0x80u;
      v14 = *(_QWORD *)(a1 + 40);
      if (!v14)
        operator new();
      v15 = *(_QWORD *)(a2 + 40);
      if (!v15)
        v15 = *(_QWORD *)(qword_102310EF8 + 40);
      sub_1008E790C(v14, v15);
      return;
    }
LABEL_24:
    v13 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v13;
    if ((*(_DWORD *)(a2 + 52) & 0x80) == 0)
      return;
    goto LABEL_25;
  }
}

void sub_1008E810C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008E8124(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_102310EF8 != result)
  {
    v1 = result;
    v2 = result[3];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[5];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008E8180(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C7A8;
  sub_1008E8124(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E81B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C7A8;
  sub_1008E8124(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E81F4()
{
  operator new();
}

uint64_t sub_1008E8238(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 52);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v2 & 0x20) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_1008DD3FC(result);
        v2 = *(_DWORD *)(v1 + 52);
      }
    }
    *(_DWORD *)(v1 + 36) = 0;
    if ((v2 & 0x80) != 0)
    {
      result = *(_QWORD *)(v1 + 40);
      if (result)
        result = sub_1008E7ADC(result);
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1008E8290(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  char *v13;
  unsigned int v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  int v20;
  unint64_t v21;
  char *v22;
  int v23;
  uint64_t result;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  BOOL v37;
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;

  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 32);
  v9 = (unsigned int *)(a1 + 36);
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v49 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
          if (!(_DWORD)result)
            return result;
          v14 = v49;
        }
        else
        {
          v14 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        if (v14 <= 5)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v14;
        }
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v25 < v15 && *v25 == 16)
        {
          v16 = v25 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_37;
        }
        continue;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_37:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v16;
          v26 = v16 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if ((unint64_t)v26 >= v15 || *v26 != 24)
          continue;
        v17 = v26 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v17;
          v27 = v17 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if ((unint64_t)v27 >= v15 || *v27 != 32)
          continue;
        v18 = v27 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v18;
          v28 = v18 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        if ((unint64_t)v28 >= v15 || *v28 != 40)
          continue;
        v19 = v28 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_61:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v19;
          v29 = v19 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        v20 = *(_DWORD *)(a1 + 52) | 0x10;
        *(_DWORD *)(a1 + 52) = v20;
        if ((unint64_t)v29 >= v15 || *v29 != 50)
          continue;
        *((_QWORD *)this + 1) = v29 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 52) = v20 | 0x20;
        v30 = *(_QWORD *)(a1 + 24);
        if (!v30)
          operator new();
        v50 = 0;
        v31 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0;
        }
        else
        {
          v50 = *v31;
          *((_QWORD *)this + 1) = v31 + 1;
        }
        v32 = *((_DWORD *)this + 14);
        v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33)
          return 0;
        v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v50);
        if (!sub_1008DD438(v30, this, v35) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        v36 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v36, 1);
        v38 = v36 - 1;
        if (v38 < 0 == v37)
          *((_DWORD *)this + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((unint64_t)v39 >= v21 || *v39 != 56)
          continue;
        v22 = v39 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_83:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v21 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v22;
          v40 = v22 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        v23 = *(_DWORD *)(a1 + 52) | 0x40;
        *(_DWORD *)(a1 + 52) = v23;
        if ((unint64_t)v40 >= v21 || *v40 != 66)
          continue;
        *((_QWORD *)this + 1) = v40 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 52) = v23 | 0x80;
        v41 = *(_QWORD *)(a1 + 40);
        if (!v41)
          operator new();
        v51 = 0;
        v42 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v42 >= *((_QWORD *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0;
        }
        else
        {
          v51 = *v42;
          *((_QWORD *)this + 1) = v42 + 1;
        }
        v43 = *((_DWORD *)this + 14);
        v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 < v44)
        {
          v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
          if (sub_1008E7B18(v41, this, v46))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
              v47 = *((_DWORD *)this + 14);
              v37 = __OFSUB__(v47, 1);
              v48 = v47 - 1;
              if (v48 < 0 == v37)
                *((_DWORD *)this + 14) = v48;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_61;
      case 6u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_27;
        v20 = *(_DWORD *)(a1 + 52);
        goto LABEL_69;
      case 7u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v22 = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_83;
      case 8u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_27;
        v23 = *(_DWORD *)(a1 + 52);
        goto LABEL_91;
      default:
        v12 = TagFallback & 7;
LABEL_27:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008E8858(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
LABEL_18:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 36), a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x80) == 0)
      return result;
    goto LABEL_19;
  }
LABEL_15:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310EF8 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) != 0)
    goto LABEL_18;
LABEL_8:
  if ((v6 & 0x80) == 0)
    return result;
LABEL_19:
  v8 = *(_QWORD *)(v5 + 40);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310EF8 + 40);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v8, a2, a4);
}

uint64_t sub_1008E897C(uint64_t a1, unint64_t a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  unsigned int v23;
  int v24;
  int v25;

  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_51;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      v8 = 2;
    }
    v4 = (v8 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      v10 = 2;
    }
    v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_31;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v12 = 2;
  }
  v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_35;
  }
LABEL_31:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0)
      goto LABEL_21;
LABEL_41:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v19 >= 0x80)
    {
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      v20 = 2;
    }
    v4 = (v20 + v4);
    if ((v3 & 0x80) == 0)
      goto LABEL_51;
    goto LABEL_45;
  }
LABEL_35:
  v15 = *(_QWORD *)(a1 + 24);
  if (!v15)
    v15 = *(_QWORD *)(qword_102310EF8 + 24);
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6F8(v15, a2);
  v17 = (int)v16;
  if (v16 >= 0x80)
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  else
    v18 = 1;
  v4 = (v4 + v17 + v18 + 1);
  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x40) != 0)
    goto LABEL_41;
LABEL_21:
  if ((v3 & 0x80) == 0)
    goto LABEL_51;
LABEL_45:
  v21 = *(_QWORD *)(a1 + 40);
  if (!v21)
    v21 = *(_QWORD *)(qword_102310EF8 + 40);
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E7DDC(v21, a2);
  v24 = (int)v22;
  if (v22 >= 0x80)
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, v23);
  else
    v25 = 1;
  v4 = (v4 + v24 + v25 + 1);
LABEL_51:
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

void sub_1008E8B60(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E7F04(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E8BAC()
{
  return 1;
}

_QWORD *sub_1008E8BB4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssMeasurements");
}

void sub_1008E8BC4(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  char v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 18965);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v5 = a2[12];
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v8 = a2[2];
    a1[12] |= 1u;
    a1[2] = v8;
    v5 = a2[12];
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = a2[3];
  a1[12] |= 2u;
  a1[3] = v9;
  v5 = a2[12];
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  v10 = a2[4];
  a1[12] |= 4u;
  a1[4] = v10;
  v5 = a2[12];
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v11 = a2[5];
  a1[12] |= 8u;
  a1[5] = v11;
  v5 = a2[12];
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_21:
    v13 = a2[7];
    a1[12] |= 0x20u;
    a1[7] = v13;
    v5 = a2[12];
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  v12 = a2[6];
  a1[12] |= 0x10u;
  a1[6] = v12;
  v5 = a2[12];
  if ((v5 & 0x20) != 0)
    goto LABEL_21;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_22:
  v14 = a2[8];
  if (v14 >= 6)
    sub_10190E6B0();
  a1[12] |= 0x40u;
  a1[8] = v14;
  v5 = a2[12];
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = a2[9];
    a1[12] |= 0x80u;
    a1[9] = v6;
    v5 = a2[12];
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    v7 = a2[10];
    a1[12] |= 0x100u;
    a1[10] = v7;
  }
}

void sub_1008E8D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E8D78(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C820;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E8D88(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C820;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008E8DB8()
{
  operator new();
}

uint64_t sub_1008E8DFC(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 48);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1008E8E28(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  unsigned int v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  unint64_t v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  _BYTE *v35;
  unsigned __int8 *v36;
  uint64_t result;
  unsigned int v38;
  unsigned int v39;

  v5 = a1 + 3;
  v6 = a1 + 4;
  v7 = a1 + 5;
  v8 = a1 + 6;
  v9 = a1 + 7;
  v10 = a1 + 9;
  v11 = a1 + 10;
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v38 = 0;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          v17 = *v16;
          v18 = v16 + 1;
          *((_QWORD *)this + 1) = v18;
LABEL_34:
          a1[2] = v17;
          a1[12] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            v19 = v18 + 1;
            *((_QWORD *)this + 1) = v19;
            goto LABEL_37;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
        if ((_DWORD)result)
        {
          v17 = v38;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_37:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v19;
          v28 = v19 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        a1[12] |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_45:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v20;
          v29 = v20 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        a1[12] |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32)
          continue;
        v21 = v29 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_53:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v21;
          v30 = v21 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        a1[12] |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40)
          continue;
        v22 = v30 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_61:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v22;
          v31 = v22 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        a1[12] |= 0x10u;
        if ((unint64_t)v31 >= v15 || *v31 != 48)
          continue;
        v23 = v31 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_69:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v23;
          v32 = v23 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        a1[12] |= 0x20u;
        if ((unint64_t)v32 >= v15 || *v32 != 56)
          continue;
        v24 = v32 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_77:
        v39 = 0;
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!(_DWORD)result)
            return result;
          v33 = v39;
        }
        else
        {
          v33 = *v24;
          *((_QWORD *)this + 1) = v24 + 1;
        }
        if (v33 <= 5)
        {
          a1[12] |= 0x40u;
          a1[8] = v33;
        }
        v34 = (_BYTE *)*((_QWORD *)this + 1);
        v25 = *((_QWORD *)this + 2);
        if ((unint64_t)v34 >= v25 || *v34 != 64)
          continue;
        v26 = v34 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v25 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v25 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v26;
          v35 = v26 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        a1[12] |= 0x80u;
        if ((unint64_t)v35 >= v25 || *v35 != 72)
          continue;
        v27 = v35 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_95:
        if ((unint64_t)v27 >= v25 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v36 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v25 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v27;
          v36 = (unsigned __int8 *)(v27 + 1);
          *((_QWORD *)this + 1) = v36;
        }
        a1[12] |= 0x100u;
        if (v36 != (unsigned __int8 *)v25 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v22 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_61;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v23 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_69;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v24 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_77;
      case 8u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v26 = (char *)*((_QWORD *)this + 1);
        v25 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v27 = (char *)*((_QWORD *)this + 1);
        v25 = *((_QWORD *)this + 2);
        goto LABEL_95;
      default:
        v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008E9338(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[12];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[12];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  }
LABEL_18:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  if ((v5[12] & 0x100) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  return result;
}

uint64_t sub_1008E9458(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;

  v3 = a1[12];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    if ((v3 & 0x100) == 0)
      goto LABEL_55;
    goto LABEL_51;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_17;
    goto LABEL_13;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = a1[12];
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_13:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      v3 = a1[12];
    }
    else
    {
      v8 = 2;
    }
    v4 = (v8 + v4);
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = a1[12];
    }
    else
    {
      v10 = 2;
    }
    v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_20;
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v12 = 2;
  }
  v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0)
      goto LABEL_21;
    goto LABEL_37;
  }
LABEL_33:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v14 = 2;
  }
  v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_21:
    if ((v3 & 0x40) == 0)
      goto LABEL_22;
    goto LABEL_41;
  }
LABEL_37:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_22:
    if ((v3 & 0x80) == 0)
      goto LABEL_23;
    goto LABEL_47;
  }
LABEL_41:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if ((v17 & 0x80000000) != 0)
  {
    v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v18 = 2;
  }
  v4 = (v18 + v4);
  if ((v3 & 0x80) == 0)
  {
LABEL_23:
    if ((v3 & 0x100) == 0)
      goto LABEL_55;
    goto LABEL_51;
  }
LABEL_47:
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
  if (v19 >= 0x80)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    v3 = a1[12];
  }
  else
  {
    v20 = 2;
  }
  v4 = (v20 + v4);
  if ((v3 & 0x100) != 0)
  {
LABEL_51:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    else
      v22 = 2;
    v4 = (v22 + v4);
  }
LABEL_55:
  a1[11] = v4;
  return v4;
}

void sub_1008E9634(_DWORD *a1, _DWORD *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E8BC4(a1, lpsrc);
}

uint64_t sub_1008E9680()
{
  return 1;
}

_QWORD *sub_1008E9688@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsMeasurementElement");
}

void sub_1008E9698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  _BYTE v22[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v22, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 19434);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_DWORD **)(*(_QWORD *)(a2 + 24) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 36);
      v8 = *(int *)(a1 + 32);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v7 + 1);
          v7 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v7 + 1;
        operator new();
      }
      v9 = *(_QWORD *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v8 + 1;
      sub_1008E8BC4(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 32));
  }
  v10 = *(_DWORD *)(a2 + 76);
  if (!(_BYTE)v10)
    goto LABEL_20;
  if ((v10 & 1) != 0)
  {
    v14 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(_DWORD *)(a1 + 8) = v14;
    v10 = *(_DWORD *)(a2 + 76);
    if ((v10 & 2) == 0)
    {
LABEL_14:
      if ((v10 & 4) == 0)
        goto LABEL_15;
      goto LABEL_29;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_14;
  }
  v15 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(_DWORD *)(a1 + 12) = v15;
  v10 = *(_DWORD *)(a2 + 76);
  if ((v10 & 4) == 0)
  {
LABEL_15:
    if ((v10 & 8) == 0)
      goto LABEL_16;
    goto LABEL_30;
  }
LABEL_29:
  v16 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(_DWORD *)(a1 + 16) = v16;
  v10 = *(_DWORD *)(a2 + 76);
  if ((v10 & 8) == 0)
  {
LABEL_16:
    if ((v10 & 0x20) == 0)
      goto LABEL_17;
LABEL_31:
    *(_DWORD *)(a1 + 76) |= 0x20u;
    v18 = *(_QWORD *)(a1 + 48);
    if (!v18)
      operator new();
    v19 = *(_QWORD *)(a2 + 48);
    if (!v19)
      v19 = *(_QWORD *)(qword_102310F08 + 48);
    sub_1008D8FE8(v18, v19);
    v10 = *(_DWORD *)(a2 + 76);
    if ((v10 & 0x40) == 0)
    {
LABEL_18:
      if ((v10 & 0x80) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_30:
  v17 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_DWORD *)(a1 + 20) = v17;
  v10 = *(_DWORD *)(a2 + 76);
  if ((v10 & 0x20) != 0)
    goto LABEL_31;
LABEL_17:
  if ((v10 & 0x40) == 0)
    goto LABEL_18;
LABEL_36:
  v20 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 76) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v20;
  v10 = *(_DWORD *)(a2 + 76);
  if ((v10 & 0x80) != 0)
  {
LABEL_19:
    v11 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v11;
    v10 = *(_DWORD *)(a2 + 76);
  }
LABEL_20:
  if ((v10 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x100u;
    v12 = *(_DWORD **)(a1 + 64);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 64);
    if (!v13)
      v13 = *(_QWORD *)(qword_102310F08 + 64);
    sub_1008D95D8(v12, v13);
  }
}

void sub_1008E9980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E9998(uint64_t *a1)
{
  uint64_t *v2;

  *a1 = (uint64_t)off_10215C898;
  v2 = a1 + 3;
  sub_1008E99D8(a1);
  sub_10010C59C(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

_QWORD *sub_1008E99D8(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_102310F08 != result)
  {
    v1 = result;
    v2 = result[6];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[8];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008E9A38(uint64_t *a1)
{
  sub_1008E9998(a1);
  operator delete();
}

void sub_1008E9A5C()
{
  operator new();
}

uint64_t sub_1008E9AA4(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = result;
  v2 = *(_DWORD *)(result + 76);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v2 & 0x20) != 0)
    {
      result = *(_QWORD *)(result + 48);
      if (result)
      {
        result = sub_1008D91B4(result);
        v2 = *(_DWORD *)(v1 + 76);
      }
    }
    *(_QWORD *)(v1 + 56) = 0;
  }
  if ((v2 & 0x100) != 0)
  {
    v3 = *(_QWORD *)(v1 + 64);
    if (v3)
    {
      if (*(_BYTE *)(v3 + 24))
      {
        *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 16) = 0;
      }
      *(_DWORD *)(v3 + 24) = 0;
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v4);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  return result;
}

uint64_t sub_1008E9B44(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t result;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  BOOL v37;
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  unsigned int *v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v59;
  unsigned int *v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;

  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v59 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  v60 = (unsigned int *)(a1 + 8);
  v8 = (unsigned int *)(a1 + 56);
  v9 = (unsigned int *)(a1 + 60);
LABEL_2:
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v60 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_37;
        }
        continue;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_37:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v16;
          v24 = v16 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 76) |= 2u;
        if ((unint64_t)v24 >= v13 || *v24 != 24)
          continue;
        v17 = v24 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v17;
          v25 = v17 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        if ((unint64_t)v25 >= v13 || *v25 != 32)
          continue;
        v18 = v25 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v18;
          v26 = v18 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 76) |= 8u;
        if ((unint64_t)v26 >= v13 || *v26 != 42)
          continue;
        do
        {
          *((_QWORD *)this + 1) = v26 + 1;
LABEL_61:
          v27 = *(_DWORD *)(a1 + 36);
          v28 = *(int *)(a1 + 32);
          if ((int)v28 >= v27)
          {
            if (v27 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v59, v27 + 1);
              v27 = *(_DWORD *)(a1 + 36);
            }
            *(_DWORD *)(a1 + 36) = v27 + 1;
            operator new();
          }
          v29 = *(_QWORD *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v28 + 1;
          v30 = *(unsigned int **)(v29 + 8 * v28);
          v61 = 0;
          v31 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v61))return 0;
          }
          else
          {
            v61 = *v31;
            *((_QWORD *)this + 1) = v31 + 1;
          }
          v32 = *((_DWORD *)this + 14);
          v33 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v32 + 1;
          if (v32 >= v33)
            return 0;
          v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61);
          if (!sub_1008E8E28(v30, this, v35) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
          v36 = *((_DWORD *)this + 14);
          v37 = __OFSUB__(v36, 1);
          v38 = v36 - 1;
          if (v38 < 0 == v37)
            *((_DWORD *)this + 14) = v38;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v26 >= *((_QWORD *)this + 2))
            goto LABEL_2;
          v39 = *v26;
        }
        while (v39 == 42);
        if (v39 != 50)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_79:
        *(_DWORD *)(a1 + 76) |= 0x20u;
        v40 = *(_QWORD *)(a1 + 48);
        if (!v40)
          operator new();
        v62 = 0;
        v41 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v62))return 0;
        }
        else
        {
          v62 = *v41;
          *((_QWORD *)this + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)this + 14);
        v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v62);
        if (!sub_1008D91F0(v40, this, v45) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        v46 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v37)
          *((_DWORD *)this + 14) = v47;
        v48 = (_BYTE *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        if ((unint64_t)v48 >= v19 || *v48 != 56)
          continue;
        v20 = v48 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_93:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v49 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v20;
          v49 = v20 + 1;
          *((_QWORD *)this + 1) = v49;
        }
        *(_DWORD *)(a1 + 76) |= 0x40u;
        if ((unint64_t)v49 >= v19 || *v49 != 64)
          continue;
        v21 = v49 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_101:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v50 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v21;
          v50 = v21 + 1;
          *((_QWORD *)this + 1) = v50;
        }
        v22 = *(_DWORD *)(a1 + 76) | 0x80;
        *(_DWORD *)(a1 + 76) = v22;
        if ((unint64_t)v50 >= v19 || *v50 != 74)
          continue;
        *((_QWORD *)this + 1) = v50 + 1;
LABEL_109:
        *(_DWORD *)(a1 + 76) = v22 | 0x100;
        v51 = *(unsigned int **)(a1 + 64);
        if (!v51)
          operator new();
        v63 = 0;
        v52 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v52;
          *((_QWORD *)this + 1) = v52 + 1;
        }
        v53 = *((_DWORD *)this + 14);
        v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 < v54)
        {
          v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
          if (sub_1008D9754(v51, this, v56))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
              v57 = *((_DWORD *)this + 14);
              v37 = __OFSUB__(v57, 1);
              v58 = v57 - 1;
              if (v58 < 0 == v37)
                *((_DWORD *)this + 14) = v58;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v18 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 5u:
        v12 = TagFallback & 7;
        if (v12 == 2)
          goto LABEL_61;
        goto LABEL_29;
      case 6u:
        v12 = TagFallback & 7;
        if (v12 == 2)
          goto LABEL_79;
        goto LABEL_29;
      case 7u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v20 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 8u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v21 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        goto LABEL_101;
      case 9u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_29;
        v22 = *(_DWORD *)(a1 + 76);
        goto LABEL_109;
      default:
        v12 = TagFallback & 7;
LABEL_29:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008EA26C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  v6 = *(_DWORD *)(result + 76);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 8) != 0)
LABEL_5:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x20) != 0)
  {
    v9 = *(_QWORD *)(v5 + 48);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310F08 + 48);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
    v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
        goto LABEL_12;
LABEL_22:
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x100) == 0)
        return result;
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), a2, a4);
  v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x80) != 0)
    goto LABEL_22;
LABEL_12:
  if ((v8 & 0x100) == 0)
    return result;
LABEL_23:
  v10 = *(_QWORD *)(v5 + 64);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310F08 + 64);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v10, a2, a4);
}

uint64_t sub_1008EA3D0(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  int v30;

  v3 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
        v3 = *(_DWORD *)(a1 + 76);
      }
      else
      {
        v6 = 1;
      }
      v4 = v6 + 1;
      if ((v3 & 2) == 0)
      {
LABEL_15:
        if ((v3 & 4) != 0)
        {
          v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
          if (v9 >= 0x80)
          {
            v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
            v3 = *(_DWORD *)(a1 + 76);
          }
          else
          {
            v10 = 2;
          }
          v4 += v10;
          if ((v3 & 8) == 0)
          {
LABEL_17:
            if ((v3 & 0x20) == 0)
              goto LABEL_18;
            goto LABEL_30;
          }
        }
        else if ((v3 & 8) == 0)
        {
          goto LABEL_17;
        }
        v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
        if (v11 >= 0x80)
        {
          v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
          v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          v12 = 2;
        }
        v4 += v12;
        if ((v3 & 0x20) == 0)
        {
LABEL_18:
          if ((v3 & 0x40) == 0)
            goto LABEL_19;
          goto LABEL_36;
        }
LABEL_30:
        v13 = *(_QWORD *)(a1 + 48);
        if (!v13)
          v13 = *(_QWORD *)(qword_102310F08 + 48);
        v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D94B0(v13, a2);
        v15 = (int)v14;
        if (v14 >= 0x80)
          v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        else
          v16 = 1;
        v4 += v15 + v16 + 1;
        v3 = *(_DWORD *)(a1 + 76);
        if ((v3 & 0x40) == 0)
        {
LABEL_19:
          if ((v3 & 0x80) == 0)
            goto LABEL_20;
          goto LABEL_40;
        }
LABEL_36:
        v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
        if (v17 >= 0x80)
        {
          v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
          v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          v18 = 2;
        }
        v4 += v18;
        if ((v3 & 0x80) == 0)
        {
LABEL_20:
          if ((v3 & 0x100) == 0)
            goto LABEL_50;
          goto LABEL_44;
        }
LABEL_40:
        v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
        if (v19 >= 0x80)
        {
          v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
          v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          v20 = 2;
        }
        v4 += v20;
        if ((v3 & 0x100) == 0)
          goto LABEL_50;
        goto LABEL_44;
      }
    }
    else
    {
      v4 = 0;
      if ((v3 & 2) == 0)
        goto LABEL_15;
    }
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 76);
    }
    else
    {
      v8 = 1;
    }
    v4 += v8 + 1;
    goto LABEL_15;
  }
  v4 = 0;
  if ((v3 & 0x100) == 0)
    goto LABEL_50;
LABEL_44:
  v21 = *(_QWORD *)(a1 + 64);
  if (!v21)
    v21 = *(_QWORD *)(qword_102310F08 + 64);
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D99EC(v21, a2);
  v23 = (int)v22;
  if (v22 >= 0x80)
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  else
    v24 = 1;
  v4 += v23 + v24 + 1;
LABEL_50:
  v25 = *(_DWORD *)(a1 + 32);
  v26 = (v25 + v4);
  if (v25 >= 1)
  {
    v27 = 0;
    do
    {
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E9458(*(unsigned int **)(*(_QWORD *)(a1 + 24)+ 8 * v27), a2);
      v29 = (int)v28;
      if (v28 >= 0x80)
        v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      else
        v30 = 1;
      v26 = (v29 + v26 + v30);
      ++v27;
    }
    while (v27 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 72) = v26;
  return v26;
}

void sub_1008EA604(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008E9698(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EA650()
{
  return 1;
}

_QWORD *sub_1008EA658@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsMeasurements");
}

void sub_1008EA668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  char v7;
  int v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  _BYTE v17[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v17, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 19844);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 52);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 8);
    if (v6 >= 9)
      sub_10190E6D8();
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    v5 = *(_DWORD *)(a2 + 52);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 52) |= 4u;
  v9 = *(_DWORD **)(a1 + 16);
  if (!v9)
    operator new();
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310F10 + 16);
  sub_1008D5F18(v9, v10);
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
LABEL_26:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    v13 = *(_QWORD *)(a1 + 32);
    if (!v13)
      operator new();
    v14 = *(_QWORD *)(a2 + 32);
    if (!v14)
      v14 = *(_QWORD *)(qword_102310F10 + 32);
    sub_1008E7F04(v13, v14);
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x20) == 0)
    {
LABEL_12:
      if ((v5 & 0x40) == 0)
        return;
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *(_DWORD *)(a1 + 52) |= 8u;
  v11 = *(_QWORD *)(a1 + 24);
  if (!v11)
    operator new();
  v12 = *(_QWORD *)(a2 + 24);
  if (!v12)
    v12 = *(_QWORD *)(qword_102310F10 + 24);
  sub_1008E9698(v11, v12);
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x10) != 0)
    goto LABEL_26;
LABEL_11:
  if ((v5 & 0x20) == 0)
    goto LABEL_12;
LABEL_31:
  v15 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 40) = v15;
  if ((*(_DWORD *)(a2 + 52) & 0x40) != 0)
  {
LABEL_13:
    v7 = *(_BYTE *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_BYTE *)(a1 + 44) = v7;
  }
}

void sub_1008EA8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008EA8C4(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)qword_102310F10 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    result = (_QWORD *)v1[4];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008EA934(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C910;
  sub_1008EA8C4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008EA964(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215C910;
  sub_1008EA8C4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008EA9A8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310F10;
  if (!qword_102310F10)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310F10;
  }
  return result;
}

void sub_1008EA9D4()
{
  operator new();
}

uint64_t sub_1008EAA1C(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 52);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_1008E9AA4(result);
        v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      result = *(_QWORD *)(v1 + 32);
      if (result)
        result = sub_1008E8238(result);
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1008EAA98(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  unsigned int v11;
  unint64_t v12;
  char *v13;
  int v14;
  unint64_t v15;
  char *v16;
  char *v17;
  uint64_t result;
  _BYTE *v19;
  _BYTE *v20;
  _DWORD *v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  BOOL v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  _BYTE *v48;
  _BYTE *v49;
  unsigned int v50;
  unsigned __int8 *v51;
  unsigned int v52;

  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 40);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v52 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
          if (!(_DWORD)result)
            return result;
          v11 = v52;
        }
        else
        {
          v11 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
        }
        if (v11 <= 8)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v11;
        }
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v19 < v12 && *v19 == 16)
        {
          v13 = v19 + 1;
          *((_QWORD *)this + 1) = v13;
          goto LABEL_35;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v13;
          v20 = v13 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        v14 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v14;
        if ((unint64_t)v20 >= v12 || *v20 != 26)
          continue;
        *((_QWORD *)this + 1) = v20 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 52) = v14 | 4;
        v21 = *(_DWORD **)(a1 + 16);
        if (!v21)
          operator new();
        v52 = 0;
        v22 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
        }
        else
        {
          v52 = *v22;
          *((_QWORD *)this + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)this + 14);
        v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
        if (!sub_1008D60A0(v21, this, v26) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        v27 = *((_DWORD *)this + 14);
        v28 = __OFSUB__(v27, 1);
        v29 = v27 - 1;
        if (v29 < 0 == v28)
          *((_DWORD *)this + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 != 34)
          continue;
        *((_QWORD *)this + 1) = v30 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 8u;
        v31 = *(_QWORD *)(a1 + 24);
        if (!v31)
          operator new();
        v52 = 0;
        v32 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
        }
        else
        {
          v52 = *v32;
          *((_QWORD *)this + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)this + 14);
        v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34)
          return 0;
        v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
        if (!sub_1008E9B44(v31, this, v36) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        v37 = *((_DWORD *)this + 14);
        v28 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v28)
          *((_DWORD *)this + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 != 42)
          continue;
        *((_QWORD *)this + 1) = v39 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        v40 = *(_QWORD *)(a1 + 32);
        if (!v40)
          operator new();
        v52 = 0;
        v41 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
        }
        else
        {
          v52 = *v41;
          *((_QWORD *)this + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)this + 14);
        v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 < v43)
        {
          v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
          if (sub_1008E8290(v40, this, v45))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
              v46 = *((_DWORD *)this + 14);
              v28 = __OFSUB__(v46, 1);
              v47 = v46 - 1;
              if (v47 < 0 == v28)
                *((_DWORD *)this + 14) = v47;
              v48 = (_BYTE *)*((_QWORD *)this + 1);
              v15 = *((_QWORD *)this + 2);
              if ((unint64_t)v48 < v15 && *v48 == 48)
              {
                v16 = v48 + 1;
                *((_QWORD *)this + 1) = v16;
LABEL_85:
                if ((unint64_t)v16 >= v15 || *v16 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                  if (!(_DWORD)result)
                    return result;
                  v49 = (_BYTE *)*((_QWORD *)this + 1);
                  v15 = *((_QWORD *)this + 2);
                }
                else
                {
                  *v6 = *v16;
                  v49 = v16 + 1;
                  *((_QWORD *)this + 1) = v49;
                }
                *(_DWORD *)(a1 + 52) |= 0x20u;
                if ((unint64_t)v49 < v15 && *v49 == 56)
                {
                  v17 = v49 + 1;
                  *((_QWORD *)this + 1) = v17;
LABEL_93:
                  v52 = 0;
                  if ((unint64_t)v17 >= v15 || *v17 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
                    if (!(_DWORD)result)
                      return result;
                    v50 = v52;
                    v51 = (unsigned __int8 *)*((_QWORD *)this + 1);
                    v15 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    v50 = *v17;
                    v51 = (unsigned __int8 *)(v17 + 1);
                    *((_QWORD *)this + 1) = v51;
                  }
                  *(_BYTE *)(a1 + 44) = v50 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if (v51 == (unsigned __int8 *)v15
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    result = 1;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_24;
        v14 = *(_DWORD *)(a1 + 52);
        goto LABEL_43;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_57;
        goto LABEL_24;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_71;
        goto LABEL_24;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_93;
      default:
        v9 = TagFallback & 7;
LABEL_24:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008EB0A4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_11:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310F10 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_14:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310F10 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_17:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_102310F10 + 32);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (BOOL)a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (BOOL)a2, a4);
  return result;
}

uint64_t sub_1008EB1BC(uint64_t a1, unint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;

  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    result = 0;
    goto LABEL_47;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v6 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else if (v6 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_17;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310F10 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D6350(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 += v11 + v12 + 1;
    v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_20;
LABEL_34:
      v17 = *(_QWORD *)(a1 + 32);
      if (!v17)
        v17 = *(_QWORD *)(qword_102310F10 + 32);
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E897C(v17, a2);
      v19 = (int)v18;
      if (v18 >= 0x80)
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      else
        v20 = 1;
      v4 += v19 + v20 + 1;
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 0x20) == 0)
        goto LABEL_44;
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v13 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v13 = *(_QWORD *)(qword_102310F10 + 24);
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EA3D0(v13, a2);
  v15 = (int)v14;
  if (v14 >= 0x80)
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  else
    v16 = 1;
  v4 += v15 + v16 + 1;
  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x10) != 0)
    goto LABEL_34;
LABEL_20:
  if ((v3 & 0x20) != 0)
  {
LABEL_40:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      v22 = 2;
    }
    v4 += v22;
  }
LABEL_44:
  if ((v3 & 0x40) != 0)
    result = v4 + 2;
  else
    result = v4;
LABEL_47:
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_1008EB37C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EA668(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EB3C8()
{
  return 1;
}

_QWORD *sub_1008EB3D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.MeasurementReport");
}

void sub_1008EB3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 20239);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    sub_1002A19E0(a1 + 24, *(_DWORD *)(a1 + 32) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_1002A19E0(a1 + 40, *(_DWORD *)(a1 + 48) + v6);
    memcpy((void *)(*(_QWORD *)(a1 + 40) + 4 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  LOBYTE(v7) = *(_BYTE *)(a2 + 64);
  if ((_BYTE)v7)
  {
    if ((*(_BYTE *)(a2 + 64) & 1) != 0)
    {
      v9 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v9;
      v7 = *(_DWORD *)(a2 + 64);
      if ((v7 & 2) == 0)
      {
LABEL_10:
        if ((v7 & 4) == 0)
          goto LABEL_11;
        goto LABEL_17;
      }
    }
    else if ((*(_BYTE *)(a2 + 64) & 2) == 0)
    {
      goto LABEL_10;
    }
    v10 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v10;
    v7 = *(_DWORD *)(a2 + 64);
    if ((v7 & 4) == 0)
    {
LABEL_11:
      if ((v7 & 8) == 0)
        goto LABEL_12;
      goto LABEL_18;
    }
LABEL_17:
    v11 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v11;
    v7 = *(_DWORD *)(a2 + 64);
    if ((v7 & 8) == 0)
    {
LABEL_12:
      if ((v7 & 0x40) == 0)
        return;
      goto LABEL_13;
    }
LABEL_18:
    v12 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v12;
    if ((*(_DWORD *)(a2 + 64) & 0x40) == 0)
      return;
LABEL_13:
    v8 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(_DWORD *)(a1 + 56) = v8;
  }
}

void sub_1008EB578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EB590(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(_QWORD *)this = &off_10215C988;
  if (*((_QWORD *)this + 5))
    operator delete[]();
  if (*((_QWORD *)this + 3))
    operator delete[]();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008EB5F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008EB590(a1);
  operator delete();
}

void sub_1008EB61C()
{
  operator new();
}

uint64_t sub_1008EB664(uint64_t result)
{
  if (*(_BYTE *)(result + 64))
  {
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1008EB684(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  unsigned __int8 *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t result;
  _BYTE *v22;
  _BYTE *v23;
  unsigned __int8 *v24;
  int v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  int v29;
  int v30;
  _BYTE *v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  _BYTE *v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  int v48;
  unsigned __int8 *v49;
  unsigned int *v50;
  unsigned int *v51;
  unsigned int *v52;
  unsigned int v53;
  char v54;
  _BYTE v55[48];

  v5 = a1 + 40;
  v6 = a1 + 24;
  v50 = (unsigned int *)(a1 + 8);
  v51 = (unsigned int *)(a1 + 12);
  v52 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 56);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v50);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v50 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_39;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_39:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v51 = *v15;
          v22 = v15 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v22 >= v12 || *v22 != 24)
          continue;
        v16 = v22 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_47:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v52);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v52 = *v16;
          v23 = v16 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v23 >= v12 || *v23 != 32)
          continue;
        v17 = v23 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_55:
        if ((unint64_t)v17 >= v12 || (char)*v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v24 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v24 = v17 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v24 >= v12)
          continue;
        v25 = *v24;
        goto LABEL_81;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_55;
      case 5u:
        v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v18 = (char *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
            goto LABEL_62;
          }
          goto LABEL_26;
        }
        result = sub_1008D0E98(this, v6);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v24 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          if ((unint64_t)v24 >= v12)
            goto LABEL_2;
          v25 = *v24;
          if (v25 == 48)
            goto LABEL_103;
LABEL_81:
          if (v25 != 40)
            goto LABEL_2;
          v18 = (char *)(v24 + 1);
          *((_QWORD *)this + 1) = v18;
LABEL_62:
          v53 = 0;
          if ((unint64_t)v18 >= v12 || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
          }
          else
          {
            v53 = *v18;
            *((_QWORD *)this + 1) = v18 + 1;
          }
          v26 = *(_DWORD *)(a1 + 32);
          if (v26 == *(_DWORD *)(a1 + 36))
          {
            sub_1002A19E0(v6, v26 + 1);
            v26 = *(_DWORD *)(a1 + 32);
          }
          v27 = v53;
          v28 = *(_QWORD *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v26 + 1;
          *(_DWORD *)(v28 + 4 * v26) = v27;
          v29 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v29 >= 1)
          {
            v30 = v29 + 1;
            do
            {
              v31 = (_BYTE *)*((_QWORD *)this + 1);
              v32 = *((_QWORD *)this + 2);
              if ((unint64_t)v31 >= v32 || *v31 != 40)
                break;
              *((_QWORD *)this + 1) = v31 + 1;
              if ((unint64_t)(v31 + 1) >= v32 || (char)v31[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
              }
              else
              {
                v53 = v31[1];
                *((_QWORD *)this + 1) = v31 + 2;
              }
              v33 = *(_DWORD *)(a1 + 32);
              if (v33 >= *(_DWORD *)(a1 + 36))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v55, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                v34 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v55, "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v54, v34);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v55);
                v33 = *(_DWORD *)(a1 + 32);
              }
              v35 = v53;
              v36 = *(_QWORD *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v33 + 1;
              *(_DWORD *)(v36 + 4 * v33) = v35;
              --v30;
            }
            while (v30 > 1);
          }
        }
      case 6u:
        v11 = TagFallback & 7;
        if (v11 == 2)
        {
          result = sub_1008D0E98(this, v5);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v24 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
            if ((unint64_t)v24 >= v12)
              goto LABEL_2;
            v48 = *v24;
            if (v48 == 56)
            {
              v20 = (char *)(v24 + 1);
              *((_QWORD *)this + 1) = v20;
LABEL_105:
              if ((unint64_t)v20 >= v12 || *v20 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                if (!(_DWORD)result)
                  return result;
                v49 = (unsigned __int8 *)*((_QWORD *)this + 1);
                v12 = *((_QWORD *)this + 2);
              }
              else
              {
                *v8 = *v20;
                v49 = (unsigned __int8 *)(v20 + 1);
                *((_QWORD *)this + 1) = v49;
              }
              *(_DWORD *)(a1 + 64) |= 0x40u;
              if (v49 == (unsigned __int8 *)v12
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              goto LABEL_2;
            }
            if (v48 != 48)
              goto LABEL_2;
LABEL_103:
            v19 = (char *)(v24 + 1);
            *((_QWORD *)this + 1) = v19;
LABEL_83:
            v53 = 0;
            if ((unint64_t)v19 >= v12 || *v19 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
            }
            else
            {
              v53 = *v19;
              *((_QWORD *)this + 1) = v19 + 1;
            }
            v37 = *(_DWORD *)(a1 + 48);
            if (v37 == *(_DWORD *)(a1 + 52))
            {
              sub_1002A19E0(v5, v37 + 1);
              v37 = *(_DWORD *)(a1 + 48);
            }
            v38 = v53;
            v39 = *(_QWORD *)(a1 + 40);
            *(_DWORD *)(a1 + 48) = v37 + 1;
            *(_DWORD *)(v39 + 4 * v37) = v38;
            v40 = *(_DWORD *)(a1 + 52) - *(_DWORD *)(a1 + 48);
            if (v40 >= 1)
            {
              v41 = v40 + 1;
              do
              {
                v42 = (_BYTE *)*((_QWORD *)this + 1);
                v43 = *((_QWORD *)this + 2);
                if ((unint64_t)v42 >= v43 || *v42 != 48)
                  break;
                *((_QWORD *)this + 1) = v42 + 1;
                if ((unint64_t)(v42 + 1) >= v43 || (char)v42[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
                }
                else
                {
                  v53 = v42[1];
                  *((_QWORD *)this + 1) = v42 + 2;
                }
                v44 = *(_DWORD *)(a1 + 48);
                if (v44 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v55, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                  v45 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v55, "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v54, v45);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v55);
                  v44 = *(_DWORD *)(a1 + 48);
                }
                v46 = v53;
                v47 = *(_QWORD *)(a1 + 40);
                *(_DWORD *)(a1 + 48) = v44 + 1;
                *(_DWORD *)(v47 + 4 * v44) = v46;
                --v41;
              }
              while (v41 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          v19 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_83;
        }
LABEL_26:
        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
            return 0;
          continue;
        }
        return 1;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_105;
      default:
        v11 = TagFallback & 7;
        goto LABEL_26;
    }
  }
}

void sub_1008EBCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008EBD14(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 64);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 8) != 0)
LABEL_5:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(*(_QWORD *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v8 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(_QWORD *)(v5 + 40) + 4 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if ((*(_BYTE *)(v5 + 64) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), a2, a4);
  return result;
}

uint64_t sub_1008EBE38(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  uint64_t result;

  LOBYTE(v3) = *(_BYTE *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 64) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x40) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x40) != 0)
  {
LABEL_26:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v12 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    else
      v13 = 2;
    v4 += v13;
  }
LABEL_30:
  v14 = *(_DWORD *)(a1 + 32);
  if (v14 < 1)
  {
    v16 = 0;
  }
  else
  {
    v15 = 0;
    v16 = 0;
    do
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 24)
                                                                                             + 4 * v15);
      if (v17 >= 0x80)
      {
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        v14 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  v19 = *(_DWORD *)(a1 + 48);
  if (v19 < 1)
  {
    v21 = 0;
  }
  else
  {
    v20 = 0;
    v21 = 0;
    do
    {
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 40)
                                                                                             + 4 * v20);
      if (v22 >= 0x80)
      {
        v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
        v19 = *(_DWORD *)(a1 + 48);
      }
      else
      {
        v23 = 1;
      }
      v21 += v23;
      ++v20;
    }
    while (v20 < v19);
  }
  result = (v16 + v4 + v19 + v14 + v21);
  *(_DWORD *)(a1 + 60) = result;
  return result;
}

void sub_1008EBFFC(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EB3E0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EC048()
{
  return 1;
}

_QWORD *sub_1008EC050@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsAssistanceRequest");
}

void sub_1008EC060(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 20457);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008EC108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EC120(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CA00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008EC130(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CA00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008EC160()
{
  operator new();
}

uint64_t sub_1008EC198(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008EC1AC(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008EC348(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008EC3A0(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008EC42C(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EC060(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EC478()
{
  return 1;
}

_QWORD *sub_1008EC480@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssTimeModelElem");
}

void sub_1008EC490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v13, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 20792);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    sub_1002A19E0(a1 + 24, *(_DWORD *)(a1 + 32) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  LOBYTE(v6) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 48) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      v6 = *(_DWORD *)(a2 + 48);
      if ((v6 & 2) == 0)
      {
LABEL_8:
        if ((v6 & 4) == 0)
          goto LABEL_9;
        goto LABEL_15;
      }
    }
    else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_8;
    }
    v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    v6 = *(_DWORD *)(a2 + 48);
    if ((v6 & 4) == 0)
    {
LABEL_9:
      if ((v6 & 8) == 0)
        goto LABEL_10;
      goto LABEL_16;
    }
LABEL_15:
    v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    v6 = *(_DWORD *)(a2 + 48);
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 0x10) == 0)
        return;
      goto LABEL_11;
    }
LABEL_16:
    v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    if ((*(_DWORD *)(a2 + 48) & 0x10) == 0)
      return;
LABEL_11:
    v7 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 0x10u;
    *(_DWORD *)(a1 + 40) = v7;
  }
}

void sub_1008EC5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EC5FC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(_QWORD *)this = &off_10215CA78;
  if (*((_QWORD *)this + 3))
    operator delete[]();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008EC648(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008EC5FC(a1);
  operator delete();
}

void sub_1008EC66C()
{
  operator new();
}

uint64_t sub_1008EC6B0(uint64_t result)
{
  if (*(_BYTE *)(result + 48))
  {
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1008EC6CC(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t result;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  _BYTE *v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int *v37;
  unsigned int v38;
  char v39;
  _BYTE v40[48];

  v5 = a1 + 24;
  v36 = (unsigned int *)(a1 + 8);
  v37 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 40);
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = (char *)*((_QWORD *)this + 2);
        if (v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v36);
          if (!(_DWORD)result)
            return result;
          v14 = (char *)*((_QWORD *)this + 1);
          v12 = (char *)*((_QWORD *)this + 2);
        }
        else
        {
          *v36 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        if (v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_34;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = (char *)*((_QWORD *)this + 2);
LABEL_34:
        if (v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v37);
          if (!(_DWORD)result)
            return result;
          v21 = (char *)*((_QWORD *)this + 1);
          v12 = (char *)*((_QWORD *)this + 2);
        }
        else
        {
          *v37 = *v15;
          v21 = v15 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        if (v21 >= v12 || *v21 != 24)
          continue;
        v16 = v21 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_42:
        if (v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v22 = (char *)*((_QWORD *)this + 1);
          v12 = (char *)*((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v22 = v16 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        if (v22 >= v12 || *v22 != 32)
          continue;
        v17 = v22 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_50:
        if (v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v23 = (char *)*((_QWORD *)this + 1);
          v12 = (char *)*((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v23 = v17 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 48) |= 8u;
        if (v23 >= v12 || *v23 != 40)
          continue;
        v18 = v23 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_58:
        if (v18 >= v12 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v24 = (char *)*((_QWORD *)this + 1);
          v12 = (char *)*((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v24 = v18 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 48) |= 0x10u;
        if (v24 < v12 && *v24 == 48)
          goto LABEL_65;
        continue;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = (char *)*((_QWORD *)this + 2);
        goto LABEL_42;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = (char *)*((_QWORD *)this + 2);
        goto LABEL_50;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)this + 1);
        v12 = (char *)*((_QWORD *)this + 2);
        goto LABEL_58;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v19 = (char *)*((_QWORD *)this + 1);
            v12 = (char *)*((_QWORD *)this + 2);
            goto LABEL_66;
          }
LABEL_24:
          if (v11 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
            return 0;
          continue;
        }
        result = sub_1008D0E98(this, v5);
        if (!(_DWORD)result)
          return result;
LABEL_83:
        v24 = (char *)*((_QWORD *)this + 1);
        v12 = (char *)*((_QWORD *)this + 2);
        if (v24 >= v12 || *v24 != 48)
        {
          if (v24 == v12 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_65:
        v19 = v24 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_66:
        v38 = 0;
        if (v19 < v12 && (*v19 & 0x80000000) == 0)
        {
          v38 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
LABEL_70:
          v25 = *(_DWORD *)(a1 + 32);
          if (v25 == *(_DWORD *)(a1 + 36))
          {
            sub_1002A19E0(v5, v25 + 1);
            v25 = *(_DWORD *)(a1 + 32);
          }
          v26 = v38;
          v27 = *(_QWORD *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v25 + 1;
          *(_DWORD *)(v27 + 4 * v25) = v26;
          v28 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v28 >= 1)
          {
            v29 = v28 + 1;
            do
            {
              v30 = (_BYTE *)*((_QWORD *)this + 1);
              v31 = *((_QWORD *)this + 2);
              if ((unint64_t)v30 >= v31 || *v30 != 48)
                break;
              *((_QWORD *)this + 1) = v30 + 1;
              if ((unint64_t)(v30 + 1) >= v31 || (char)v30[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0;
              }
              else
              {
                v38 = v30[1];
                *((_QWORD *)this + 1) = v30 + 2;
              }
              v32 = *(_DWORD *)(a1 + 32);
              if (v32 >= *(_DWORD *)(a1 + 36))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v40, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 602);
                v33 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v40, "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v39, v33);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
                v32 = *(_DWORD *)(a1 + 32);
              }
              v34 = v38;
              v35 = *(_QWORD *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v32 + 1;
              *(_DWORD *)(v35 + 4 * v32) = v34;
              --v29;
            }
            while (v29 > 1);
          }
          goto LABEL_83;
        }
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))goto LABEL_70;
        return 0;
      default:
        v11 = TagFallback & 7;
        goto LABEL_24;
    }
  }
}

void sub_1008ECBB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008ECBC8(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
LABEL_6:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), a2, a4);
LABEL_7:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(_QWORD *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1008ECCB0(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  uint64_t result;

  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 48) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x10) != 0)
  {
LABEL_26:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v12 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    else
      v13 = 2;
    v4 += v13;
  }
LABEL_30:
  v14 = *(_DWORD *)(a1 + 32);
  if (v14 < 1)
  {
    v16 = 0;
  }
  else
  {
    v15 = 0;
    v16 = 0;
    do
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 24)
                                                                                             + 4 * v15);
      if (v17 >= 0x80)
      {
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        v14 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  result = (v16 + v4 + v14);
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1008ECE18(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EC490(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008ECE64()
{
  return 1;
}

_QWORD *sub_1008ECE6C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssDataBitAssist");
}

void sub_1008ECE7C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 21008);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008ECF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008ECF3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CAF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008ECF4C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CAF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008ECF7C()
{
  operator new();
}

uint64_t sub_1008ECFB4(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008ECFC8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008ED164(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008ED1BC(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008ED248(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008ECE7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008ED294()
{
  return 1;
}

_QWORD *sub_1008ED29C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssStoredSatDataElem");
}

void sub_1008ED2AC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  char v15;
  _BYTE v16[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 21303);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), *(_DWORD *)(a2 + 32) + a1[8]);
  if (*(int *)(a2 + 32) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8 * v5);
      v7 = a1[9];
      v8 = (int)a1[8];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), v7 + 1);
          v7 = a1[9];
        }
        a1[9] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 3);
      a1[8] = v8 + 1;
      sub_1008ECE7C(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 32));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v10)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      v12 = *(_DWORD *)(a2 + 8);
      a1[13] |= 1u;
      a1[2] = v12;
      v10 = *(_DWORD *)(a2 + 52);
      if ((v10 & 2) == 0)
      {
LABEL_14:
        if ((v10 & 4) == 0)
          goto LABEL_15;
        goto LABEL_20;
      }
    }
    else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_14;
    }
    v13 = *(_DWORD *)(a2 + 12);
    a1[13] |= 2u;
    a1[3] = v13;
    v10 = *(_DWORD *)(a2 + 52);
    if ((v10 & 4) == 0)
    {
LABEL_15:
      if ((v10 & 8) == 0)
        return;
      goto LABEL_16;
    }
LABEL_20:
    v14 = *(_DWORD *)(a2 + 16);
    a1[13] |= 4u;
    a1[4] = v14;
    if ((*(_DWORD *)(a2 + 52) & 8) == 0)
      return;
LABEL_16:
    v11 = *(_DWORD *)(a2 + 20);
    a1[13] |= 8u;
    a1[5] = v11;
  }
}

void sub_1008ED478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008ED490(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215CB68;
  sub_10010C59C(a1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008ED4C8(uint64_t *a1)
{
  sub_1008ED490(a1);
  operator delete();
}

void sub_1008ED4EC()
{
  operator new();
}

uint64_t sub_1008ED534(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 52))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  if (*(int *)(result + 32) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1008ED598(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v9;
  unsigned __int8 *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t result;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  BOOL v33;
  int v34;
  _BYTE *v35;
  unsigned int v36;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  v8 = a1 + 5;
  v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  while (1)
  {
    v10 = (unsigned __int8 *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || (char)*v10 < 0)
      break;
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    *((_QWORD *)this + 1) = v10 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        a1[13] |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_28;
        }
        continue;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_28:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v20 = v16 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        a1[13] |= 2u;
        if ((unint64_t)v20 >= v13 || *v20 != 24)
          continue;
        v17 = v20 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_36:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v21 = v17 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        a1[13] |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32)
          continue;
        v18 = v21 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_44:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v22 = v18 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        a1[13] |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 42)
          continue;
        break;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_36;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_44;
      case 5u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_20;
        goto LABEL_52;
      default:
        v12 = TagFallback & 7;
LABEL_20:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
    do
    {
      *((_QWORD *)this + 1) = v22 + 1;
LABEL_52:
      v23 = a1[9];
      v24 = (int)a1[8];
      if ((int)v24 >= v23)
      {
        if (v23 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v23 + 1);
          v23 = a1[9];
        }
        a1[9] = v23 + 1;
        operator new();
      }
      v25 = *((_QWORD *)a1 + 3);
      a1[8] = v24 + 1;
      v26 = *(unsigned int **)(v25 + 8 * v24);
      v36 = 0;
      v27 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v27 >= *((_QWORD *)this + 2) || *v27 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0;
      }
      else
      {
        v36 = *v27;
        *((_QWORD *)this + 1) = v27 + 1;
      }
      v28 = *((_DWORD *)this + 14);
      v29 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v28 + 1;
      if (v28 >= v29)
        return 0;
      v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_1008ECFC8(v26, this, v31) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
      v32 = *((_DWORD *)this + 14);
      v33 = __OFSUB__(v32, 1);
      v34 = v32 - 1;
      if (v34 < 0 == v33)
        *((_DWORD *)this + 14) = v34;
      v22 = (_BYTE *)*((_QWORD *)this + 1);
      v35 = (_BYTE *)*((_QWORD *)this + 2);
    }
    while (v22 < v35 && *v22 == 42);
    if (v22 == v35 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
  TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = (_DWORD)TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t sub_1008ED9B4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 8) != 0)
LABEL_5:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1008EDA80(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;

  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_25;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_25;
    goto LABEL_21;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v9 = 2;
  }
  v4 += v9;
  if ((v3 & 8) != 0)
  {
LABEL_21:
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    else
      v11 = 2;
    v4 += v11;
  }
LABEL_25:
  v12 = *(_DWORD *)(a1 + 32);
  v13 = (v12 + v4);
  if (v12 >= 1)
  {
    v14 = 0;
    do
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008ED1BC(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * v14), a2);
      v16 = (int)v15;
      if (v15 >= 0x80)
        v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      else
        v17 = 1;
      v13 = (v16 + v13 + v17);
      ++v14;
    }
    while (v14 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 48) = v13;
  return v13;
}

void sub_1008EDBC0(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008ED2AC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EDC0C()
{
  return 1;
}

_QWORD *sub_1008EDC14@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssNavModelAddData");
}

void sub_1008EDC24(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  _BYTE v11[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 21577);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[7] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 28);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*(_BYTE *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[7] |= 2u;
    a1[3] = v8;
    v5 = *(_DWORD *)(a2 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v9 = *(_DWORD *)(a2 + 16);
    a1[7] |= 4u;
    a1[4] = v9;
    if ((*(_DWORD *)(a2 + 28) & 8) == 0)
      return;
LABEL_8:
    v6 = *(_DWORD *)(a2 + 20);
    a1[7] |= 8u;
    a1[5] = v6;
  }
}

void sub_1008EDD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EDD2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CBE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008EDD3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CBE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008EDD6C()
{
  operator new();
}

uint64_t sub_1008EDDA4(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008EDDB8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned __int8 *v20;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  v8 = a1 + 5;
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          *v5 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
LABEL_24:
          a1[7] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if ((_DWORD)result)
        {
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v15;
          v18 = v15 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        a1[7] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24)
          continue;
        v16 = v18 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_35:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v16;
          v19 = v16 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        a1[7] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 32)
          continue;
        v17 = v19 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v20 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v17;
          v20 = (unsigned __int8 *)(v17 + 1);
          *((_QWORD *)this + 1) = v20;
        }
        a1[7] |= 8u;
        if (v20 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_35;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_43;
      default:
        v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008EE064(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[7];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[7];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  }
LABEL_8:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  if ((v5[7] & 8) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  return result;
}

uint64_t sub_1008EE0F8(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;

  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_25;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_25;
    goto LABEL_21;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v9 = 2;
  }
  v4 = (v9 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_21:
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    else
      v11 = 2;
    v4 = (v11 + v4);
  }
LABEL_25:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008EE1DC(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EDC24(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EE228()
{
  return 1;
}

_QWORD *sub_1008EE230@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssAddAssistDataChoices");
}

void sub_1008EE240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  char v20;
  _BYTE v21[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v21, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 21969);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 28);
      v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      v9 = *(_QWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      sub_1008EC060(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 72);
  if (!(_BYTE)v10)
    return;
  if ((*(_BYTE *)(a2 + 72) & 1) != 0)
  {
    v11 = *(_DWORD *)(a2 + 8);
    if (v11 >= 7)
      sub_10190E700();
    *(_DWORD *)(a1 + 72) |= 1u;
    *(_DWORD *)(a1 + 8) = v11;
    v10 = *(_DWORD *)(a2 + 72);
  }
  if ((v10 & 2) != 0)
  {
    v12 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 72) |= 2u;
    *(_DWORD *)(a1 + 12) = v12;
    v10 = *(_DWORD *)(a2 + 72);
    if ((v10 & 4) == 0)
    {
LABEL_17:
      if ((v10 & 0x10) == 0)
        goto LABEL_18;
LABEL_23:
      *(_DWORD *)(a1 + 72) |= 0x10u;
      v14 = *(_QWORD *)(a1 + 40);
      if (!v14)
        operator new();
      v15 = *(_QWORD *)(a2 + 40);
      if (!v15)
        v15 = *(_QWORD *)(qword_102310F48 + 40);
      sub_1008EC490(v14, v15);
      v10 = *(_DWORD *)(a2 + 72);
      if ((v10 & 0x20) == 0)
      {
LABEL_19:
        if ((v10 & 0x40) == 0)
          return;
        goto LABEL_33;
      }
      goto LABEL_28;
    }
  }
  else if ((v10 & 4) == 0)
  {
    goto LABEL_17;
  }
  v13 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 64) = v13;
  v10 = *(_DWORD *)(a2 + 72);
  if ((v10 & 0x10) != 0)
    goto LABEL_23;
LABEL_18:
  if ((v10 & 0x20) == 0)
    goto LABEL_19;
LABEL_28:
  *(_DWORD *)(a1 + 72) |= 0x20u;
  v16 = *(_DWORD **)(a1 + 48);
  if (!v16)
    operator new();
  v17 = *(_QWORD *)(a2 + 48);
  if (!v17)
    v17 = *(_QWORD *)(qword_102310F48 + 48);
  sub_1008ED2AC(v16, v17);
  if ((*(_DWORD *)(a2 + 72) & 0x40) != 0)
  {
LABEL_33:
    *(_DWORD *)(a1 + 72) |= 0x40u;
    v18 = *(_DWORD **)(a1 + 56);
    if (!v18)
      operator new();
    v19 = *(_QWORD *)(a2 + 56);
    if (!v19)
      v19 = *(_QWORD *)(qword_102310F48 + 56);
    sub_1008EDC24(v18, v19);
  }
}

void sub_1008EE53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EE554(uint64_t *a1)
{
  uint64_t *v2;

  *a1 = (uint64_t)off_10215CC58;
  v2 = a1 + 2;
  sub_1008EE594(a1);
  sub_10010C59C(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

_QWORD *sub_1008EE594(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)qword_102310F48 != result)
  {
    v1 = result;
    v2 = result[5];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[6];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    result = (_QWORD *)v1[7];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008EE608(uint64_t *a1)
{
  sub_1008EE554(a1);
  operator delete();
}

void sub_1008EE62C()
{
  operator new();
}

uint64_t sub_1008EE678(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 72);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 64) = 0;
    if ((v2 & 0x10) != 0)
    {
      v3 = *(_QWORD *)(result + 40);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 48))
        {
          *(_DWORD *)(v3 + 40) = 0;
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        *(_DWORD *)(v3 + 48) = 0;
        v2 = *(_DWORD *)(result + 72);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      result = *(_QWORD *)(result + 48);
      if (result)
      {
        result = sub_1008ED534(result);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      v4 = *(_QWORD *)(v1 + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
      }
    }
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v5);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t sub_1008EE738(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  char *v11;
  unsigned int v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  BOOL v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  _BYTE *v41;
  _DWORD *v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  _BYTE *v50;
  unsigned int *v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;

  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 64);
  v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 < *((_QWORD *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v59 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59);
          if (!(_DWORD)result)
            return result;
          v12 = v59;
        }
        else
        {
          v12 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (v12 <= 6)
        {
          *(_DWORD *)(a1 + 72) |= 1u;
          *(_DWORD *)(a1 + 8) = v12;
        }
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v17 < v13 && *v17 == 16)
        {
          v14 = v17 + 1;
          *((_QWORD *)this + 1) = v14;
          goto LABEL_34;
        }
        continue;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_34:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v18 = v14 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v18 >= v13 || *v18 != 24)
          continue;
        v15 = v18 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_42:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v15;
          v19 = v15 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v19 >= v13 || *v19 != 34)
          continue;
        do
        {
          *((_QWORD *)this + 1) = v19 + 1;
LABEL_50:
          v20 = *(_DWORD *)(a1 + 28);
          v21 = *(int *)(a1 + 24);
          if ((int)v21 >= v20)
          {
            if (v20 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v20 + 1);
              v20 = *(_DWORD *)(a1 + 28);
            }
            *(_DWORD *)(a1 + 28) = v20 + 1;
            operator new();
          }
          v22 = *(_QWORD *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v21 + 1;
          v23 = *(unsigned int **)(v22 + 8 * v21);
          v59 = 0;
          v24 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0;
          }
          else
          {
            v59 = *v24;
            *((_QWORD *)this + 1) = v24 + 1;
          }
          v25 = *((_DWORD *)this + 14);
          v26 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v25 + 1;
          if (v25 >= v26)
            return 0;
          v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
          if (!sub_1008EC1AC(v23, this, v28) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
          v29 = *((_DWORD *)this + 14);
          v30 = __OFSUB__(v29, 1);
          v31 = v29 - 1;
          if (v31 < 0 == v30)
            *((_DWORD *)this + 14) = v31;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          if ((unint64_t)v19 >= *((_QWORD *)this + 2))
            goto LABEL_2;
          v32 = *v19;
        }
        while (v32 == 34);
        if (v32 != 42)
          continue;
        *((_QWORD *)this + 1) = v19 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 72) |= 0x10u;
        v33 = *(_QWORD *)(a1 + 40);
        if (!v33)
          operator new();
        v59 = 0;
        v34 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0;
        }
        else
        {
          v59 = *v34;
          *((_QWORD *)this + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)this + 14);
        v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1008EC6CC(v33, this, v38) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        v39 = *((_DWORD *)this + 14);
        v30 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v30)
          *((_DWORD *)this + 14) = v40;
        v41 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 != 50)
          continue;
        *((_QWORD *)this + 1) = v41 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 72) |= 0x20u;
        v42 = *(_DWORD **)(a1 + 48);
        if (!v42)
          operator new();
        v59 = 0;
        v43 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v43 >= *((_QWORD *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0;
        }
        else
        {
          v59 = *v43;
          *((_QWORD *)this + 1) = v43 + 1;
        }
        v44 = *((_DWORD *)this + 14);
        v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45)
          return 0;
        v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1008ED598(v42, this, v47) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        v48 = *((_DWORD *)this + 14);
        v30 = __OFSUB__(v48, 1);
        v49 = v48 - 1;
        if (v49 < 0 == v30)
          *((_DWORD *)this + 14) = v49;
        v50 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v50 >= *((_QWORD *)this + 2) || *v50 != 58)
          continue;
        *((_QWORD *)this + 1) = v50 + 1;
LABEL_96:
        *(_DWORD *)(a1 + 72) |= 0x40u;
        v51 = *(unsigned int **)(a1 + 56);
        if (!v51)
          operator new();
        v59 = 0;
        v52 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0;
        }
        else
        {
          v59 = *v52;
          *((_QWORD *)this + 1) = v52 + 1;
        }
        v53 = *((_DWORD *)this + 14);
        v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54)
          return 0;
        v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1008EDDB8(v51, this, v56) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        v57 = *((_DWORD *)this + 14);
        v30 = __OFSUB__(v57, 1);
        v58 = v57 - 1;
        if (v58 < 0 == v30)
          *((_DWORD *)this + 14) = v58;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_42;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_50;
        goto LABEL_24;
      case 5u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_68;
        goto LABEL_24;
      case 6u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_82;
        goto LABEL_24;
      case 7u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_24;
        goto LABEL_96;
      default:
        v10 = TagFallback & 7;
LABEL_24:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008EEE14(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  v6 = *(_DWORD *)(result + 72);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 4) != 0)
LABEL_4:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 40);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310F48 + 40);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
    v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0)
        return result;
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }
  v10 = *(_QWORD *)(v5 + 48);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310F48 + 48);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x40) != 0)
  {
LABEL_21:
    v11 = *(_QWORD *)(v5 + 56);
    if (!v11)
      v11 = *(_QWORD *)(qword_102310F48 + 56);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  }
  return result;
}

uint64_t sub_1008EEF50(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;

  LOBYTE(v3) = *(_BYTE *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_44;
  }
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      v3 = *(_DWORD *)(a1 + 72);
      v4 = v6 + 1;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 72) & 2) == 0)
      goto LABEL_17;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v10 = 2;
    }
    v4 += v10;
    if ((v3 & 0x10) == 0)
    {
LABEL_19:
      if ((v3 & 0x20) == 0)
        goto LABEL_20;
      goto LABEL_32;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 40);
  if (!v11)
    v11 = *(_QWORD *)(qword_102310F48 + 40);
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008ECCB0(v11, a2);
  v13 = (int)v12;
  if (v12 >= 0x80)
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
  else
    v14 = 1;
  v4 += v13 + v14 + 1;
  v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0)
      goto LABEL_44;
    goto LABEL_38;
  }
LABEL_32:
  v15 = *(_QWORD *)(a1 + 48);
  if (!v15)
    v15 = *(_QWORD *)(qword_102310F48 + 48);
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EDA80(v15, a2);
  v17 = (int)v16;
  if (v16 >= 0x80)
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  else
    v18 = 1;
  v4 += v17 + v18 + 1;
  if ((*(_DWORD *)(a1 + 72) & 0x40) != 0)
  {
LABEL_38:
    v19 = *(_QWORD *)(a1 + 56);
    if (!v19)
      v19 = *(_QWORD *)(qword_102310F48 + 56);
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EE0F8(v19, a2);
    v21 = (int)v20;
    if (v20 >= 0x80)
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
    else
      v22 = 1;
    v4 += v21 + v22 + 1;
  }
LABEL_44:
  v23 = *(_DWORD *)(a1 + 24);
  v24 = (v23 + v4);
  if (v23 >= 1)
  {
    v25 = 0;
    do
    {
      v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EC3A0(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v25), a2);
      v27 = (int)v26;
      if (v26 >= 0x80)
        v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
      else
        v28 = 1;
      v24 = (v27 + v24 + v28);
      ++v25;
    }
    while (v25 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 68) = v24;
  return v24;
}

void sub_1008EF158(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EE240(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EF1A4()
{
  return 1;
}

_QWORD *sub_1008EF1AC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssAidRequestPerGanss");
}

void sub_1008EF1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  char v17;
  _BYTE v18[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v18, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 22358);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_1002A19E0(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v6);
      v8 = *(_DWORD *)(a1 + 52);
      v9 = *(int *)(a1 + 48);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v8 + 1);
          v8 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v8 + 1;
        operator new();
      }
      v10 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v9 + 1;
      sub_1008EE240(*(_QWORD *)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *(int *)(a2 + 48));
  }
  LOBYTE(v11) = *(_BYTE *)(a2 + 72);
  if ((_BYTE)v11)
  {
    if ((*(_BYTE *)(a2 + 72) & 1) != 0)
    {
      v13 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 72) |= 1u;
      *(_DWORD *)(a1 + 8) = v13;
      v11 = *(_DWORD *)(a2 + 72);
      if ((v11 & 2) == 0)
      {
LABEL_16:
        if ((v11 & 8) == 0)
          goto LABEL_17;
        goto LABEL_23;
      }
    }
    else if ((*(_BYTE *)(a2 + 72) & 2) == 0)
    {
      goto LABEL_16;
    }
    v14 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 72) |= 2u;
    *(_DWORD *)(a1 + 12) = v14;
    v11 = *(_DWORD *)(a2 + 72);
    if ((v11 & 8) == 0)
    {
LABEL_17:
      if ((v11 & 0x10) == 0)
        goto LABEL_18;
      goto LABEL_24;
    }
LABEL_23:
    v15 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 72) |= 8u;
    *(_DWORD *)(a1 + 32) = v15;
    v11 = *(_DWORD *)(a2 + 72);
    if ((v11 & 0x10) == 0)
    {
LABEL_18:
      if ((v11 & 0x20) == 0)
        return;
      goto LABEL_19;
    }
LABEL_24:
    v16 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 72) |= 0x10u;
    *(_DWORD *)(a1 + 36) = v16;
    if ((*(_DWORD *)(a2 + 72) & 0x20) == 0)
      return;
LABEL_19:
    v12 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 64) = v12;
  }
}

void sub_1008EF400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EF418(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215CCD0;
  sub_10010C59C(a1 + 5);
  if (a1[2])
    operator delete[]();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008EF46C(uint64_t *a1)
{
  sub_1008EF418(a1);
  operator delete();
}

void sub_1008EF490()
{
  operator new();
}

uint64_t sub_1008EF4E0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 72))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_DWORD *)(result + 64) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  if (*(int *)(result + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t sub_1008EF554(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  unsigned __int8 *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t result;
  unsigned __int8 *v22;
  int v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  BOOL v40;
  int v41;
  _BYTE *v42;
  unsigned int *v43;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v44;
  unsigned int v45;
  unsigned int v46;

  v5 = a1 + 16;
  v6 = (unsigned int *)(a1 + 12);
  v7 = (unsigned int *)(a1 + 32);
  v8 = (unsigned int *)(a1 + 36);
  v9 = (unsigned int *)(a1 + 64);
  v43 = (unsigned int *)(a1 + 8);
  v44 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40);
LABEL_2:
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v43 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_35;
        }
        continue;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v16 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v16 >= v13 || (char)*v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v22 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v22 = v16 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v22 < v13)
        {
          v23 = *v22;
          goto LABEL_53;
        }
        continue;
      case 3u:
        v12 = TagFallback & 7;
        if (v12 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(this, sub_1008CA490, v5);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v22 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
            if ((unint64_t)v22 >= v13)
              goto LABEL_2;
            v23 = *v22;
            if (v23 == 32)
              break;
LABEL_53:
            if (v23 != 24)
              goto LABEL_2;
            v17 = (char *)(v22 + 1);
            *((_QWORD *)this + 1) = v17;
LABEL_42:
            v45 = 0;
            if ((unint64_t)v17 >= v13 || *v17 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
              if (!(_DWORD)result)
                return result;
              v24 = v45;
            }
            else
            {
              v24 = *v17;
              *((_QWORD *)this + 1) = v17 + 1;
            }
            if (v24 <= 6)
            {
              v25 = *(_DWORD *)(a1 + 24);
              if (v25 == *(_DWORD *)(a1 + 28))
              {
                sub_1002A19E0(v5, v25 + 1);
                v25 = *(_DWORD *)(a1 + 24);
              }
              v26 = *(_QWORD *)(a1 + 16);
              *(_DWORD *)(a1 + 24) = v25 + 1;
              *(_DWORD *)(v26 + 4 * v25) = v24;
            }
          }
          v18 = (char *)(v22 + 1);
          *((_QWORD *)this + 1) = v18;
LABEL_56:
          if ((unint64_t)v18 >= v13 || *v18 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
            if (!(_DWORD)result)
              return result;
            v27 = (_BYTE *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
          }
          else
          {
            *v7 = *v18;
            v27 = v18 + 1;
            *((_QWORD *)this + 1) = v27;
          }
          *(_DWORD *)(a1 + 72) |= 8u;
          if ((unint64_t)v27 < v13 && *v27 == 40)
          {
            v19 = v27 + 1;
            *((_QWORD *)this + 1) = v19;
LABEL_64:
            if ((unint64_t)v19 >= v13 || *v19 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
              if (!(_DWORD)result)
                return result;
              v28 = (_BYTE *)*((_QWORD *)this + 1);
              v13 = *((_QWORD *)this + 2);
            }
            else
            {
              *v8 = *v19;
              v28 = v19 + 1;
              *((_QWORD *)this + 1) = v28;
            }
            *(_DWORD *)(a1 + 72) |= 0x10u;
            if ((unint64_t)v28 < v13 && *v28 == 48)
            {
              v20 = v28 + 1;
              *((_QWORD *)this + 1) = v20;
LABEL_72:
              if ((unint64_t)v20 >= v13 || *v20 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                if (!(_DWORD)result)
                  return result;
                v29 = (_BYTE *)*((_QWORD *)this + 1);
                v13 = *((_QWORD *)this + 2);
              }
              else
              {
                *v9 = *v20;
                v29 = v20 + 1;
                *((_QWORD *)this + 1) = v29;
              }
              *(_DWORD *)(a1 + 72) |= 0x20u;
              if ((unint64_t)v29 < v13 && *v29 == 58)
              {
                do
                {
                  *((_QWORD *)this + 1) = v29 + 1;
LABEL_80:
                  v30 = *(_DWORD *)(a1 + 52);
                  v31 = *(int *)(a1 + 48);
                  if ((int)v31 >= v30)
                  {
                    if (v30 == *(_DWORD *)(a1 + 56))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v44, v30 + 1);
                      v30 = *(_DWORD *)(a1 + 52);
                    }
                    *(_DWORD *)(a1 + 52) = v30 + 1;
                    operator new();
                  }
                  v32 = *(_QWORD *)(a1 + 40);
                  *(_DWORD *)(a1 + 48) = v31 + 1;
                  v33 = *(_QWORD *)(v32 + 8 * v31);
                  v46 = 0;
                  v34 = (char *)*((_QWORD *)this + 1);
                  if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
                  }
                  else
                  {
                    v46 = *v34;
                    *((_QWORD *)this + 1) = v34 + 1;
                  }
                  v35 = *((_DWORD *)this + 14);
                  v36 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v35 + 1;
                  if (v35 >= v36)
                    return 0;
                  v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46);
                  if (!sub_1008EE738(v33, this, v38) || !*((_BYTE *)this + 36))
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
                  v39 = *((_DWORD *)this + 14);
                  v40 = __OFSUB__(v39, 1);
                  v41 = v39 - 1;
                  if (v41 < 0 == v40)
                    *((_DWORD *)this + 14) = v41;
                  v29 = (_BYTE *)*((_QWORD *)this + 1);
                  v42 = (_BYTE *)*((_QWORD *)this + 2);
                }
                while (v29 < v42 && *v29 == 58);
                if (v29 == v42 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  result = 1;
                  *((_BYTE *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v17 = (char *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          goto LABEL_42;
        }
LABEL_25:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v18 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_56;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v19 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_64;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v20 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_72;
      case 7u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_25;
        goto LABEL_80;
      default:
        v12 = TagFallback & 7;
        goto LABEL_25;
    }
  }
}

uint64_t sub_1008EFACC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 72);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
  }
  if ((v6 & 2) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(*(_QWORD *)(v5 + 16) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 8) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
    v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x10) == 0)
    {
LABEL_10:
      if ((v8 & 0x20) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
  }
  else if ((v8 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x20) != 0)
LABEL_11:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_12:
  if (*(int *)(v5 + 48) >= 1)
  {
    v9 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 48));
  }
  return result;
}

uint64_t sub_1008EFBE0(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;

  LOBYTE(v3) = *(_BYTE *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 72);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 72) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 8) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v9 = 2;
    }
    v4 += v9;
    if ((v3 & 0x10) == 0)
    {
LABEL_16:
      if ((v3 & 0x20) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x20) != 0)
  {
LABEL_26:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v12 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    else
      v13 = 2;
    v4 += v13;
  }
LABEL_30:
  v14 = *(_DWORD *)(a1 + 24);
  if (v14 < 1)
  {
    v16 = 0;
  }
  else
  {
    v15 = 0;
    v16 = 0;
    do
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 16)
                                                                                             + 4 * v15);
      if ((v17 & 0x80000000) != 0)
      {
        v18 = 10;
      }
      else if (v17 >= 0x80)
      {
        v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        v14 = *(_DWORD *)(a1 + 24);
      }
      else
      {
        v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  v19 = *(_DWORD *)(a1 + 48);
  v20 = (v16 + v19 + v4 + v14);
  if (v19 >= 1)
  {
    v21 = 0;
    do
    {
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EEF50(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * v21), a2);
      v23 = (int)v22;
      if (v22 >= 0x80)
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      else
        v24 = 1;
      v20 = (v23 + v20 + v24);
      ++v21;
    }
    while (v21 < *(int *)(a1 + 48));
  }
  *(_DWORD *)(a1 + 68) = v20;
  return v20;
}

void sub_1008EFDAC(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EF1BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EFDF8()
{
  return 1;
}

_QWORD *sub_1008EFE00@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GanssAssistanceRequest");
}

void sub_1008EFE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v15[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v15, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 22696);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 8);
    if (v6 >= 9)
      sub_10190E728();
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    v5 = *(_DWORD *)(a2 + 44);
  }
  if ((v5 & 2) == 0)
  {
    if ((v5 & 4) == 0)
      goto LABEL_9;
LABEL_13:
    *(_DWORD *)(a1 + 44) |= 4u;
    v8 = *(_DWORD **)(a1 + 16);
    if (!v8)
      operator new();
    v9 = *(_QWORD *)(a2 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310F58 + 16);
    sub_1008D5F18(v8, v9);
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0)
        return;
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  v7 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 12) = v7;
  v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 4) != 0)
    goto LABEL_13;
LABEL_9:
  if ((v5 & 8) == 0)
    goto LABEL_10;
LABEL_18:
  *(_DWORD *)(a1 + 44) |= 8u;
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10)
    operator new();
  v11 = *(_QWORD *)(a2 + 24);
  if (!v11)
    v11 = *(_QWORD *)(qword_102310F58 + 24);
  sub_1008EB3E0(v10, v11);
  if ((*(_DWORD *)(a2 + 44) & 0x10) != 0)
  {
LABEL_23:
    *(_DWORD *)(a1 + 44) |= 0x10u;
    v12 = *(_QWORD *)(a1 + 32);
    if (!v12)
      operator new();
    v13 = *(_QWORD *)(a2 + 32);
    if (!v13)
      v13 = *(_QWORD *)(qword_102310F58 + 32);
    sub_1008EF1BC(v12, v13);
  }
}

void sub_1008F0020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008F0038(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)qword_102310F58 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    result = (_QWORD *)v1[4];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008F00A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CD48;
  sub_1008F0038(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F00D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CD48;
  sub_1008F0038(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008F011C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310F58;
  if (!qword_102310F58)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310F58;
  }
  return result;
}

void sub_1008F0148()
{
  operator new();
}

uint64_t sub_1008F018C(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 44);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 44);
      }
    }
    if ((v2 & 8) != 0)
    {
      v4 = *(_QWORD *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 64))
        {
          *(_DWORD *)(v4 + 56) = 0;
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        *(_DWORD *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 64) = 0;
        v2 = *(_DWORD *)(result + 44);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      result = *(_QWORD *)(result + 32);
      if (result)
        result = sub_1008EF4E0(result);
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1008F0218(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  char *v9;
  unsigned int v10;
  unint64_t v11;
  char *v12;
  int v13;
  uint64_t result;
  _BYTE *v15;
  _BYTE *v16;
  _DWORD *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  _BYTE *v35;
  uint64_t v36;
  char *v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;

  v5 = (unsigned int *)(a1 + 12);
  while (1)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 < *((_QWORD *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v44 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!(_DWORD)result)
            return result;
          v10 = v44;
        }
        else
        {
          v10 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        if (v10 <= 8)
        {
          *(_DWORD *)(a1 + 44) |= 1u;
          *(_DWORD *)(a1 + 8) = v10;
        }
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 < v11 && *v15 == 16)
        {
          v12 = v15 + 1;
          *((_QWORD *)this + 1) = v12;
          goto LABEL_30;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_30:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v12;
          v16 = v12 + 1;
          *((_QWORD *)this + 1) = v16;
        }
        v13 = *(_DWORD *)(a1 + 44) | 2;
        *(_DWORD *)(a1 + 44) = v13;
        if ((unint64_t)v16 >= v11 || *v16 != 26)
          continue;
        *((_QWORD *)this + 1) = v16 + 1;
LABEL_38:
        *(_DWORD *)(a1 + 44) = v13 | 4;
        v17 = *(_DWORD **)(a1 + 16);
        if (!v17)
          operator new();
        v44 = 0;
        v18 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0;
        }
        else
        {
          v44 = *v18;
          *((_QWORD *)this + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)this + 14);
        v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1008D60A0(v17, this, v22) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        v23 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)this + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 != 34)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_52:
        *(_DWORD *)(a1 + 44) |= 8u;
        v27 = *(_QWORD *)(a1 + 24);
        if (!v27)
          operator new();
        v44 = 0;
        v28 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0;
        }
        else
        {
          v44 = *v28;
          *((_QWORD *)this + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1008EB684(v27, this, v32) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        v33 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v33, 1);
        v34 = v33 - 1;
        if (v34 < 0 == v24)
          *((_DWORD *)this + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v35 >= *((_QWORD *)this + 2) || *v35 != 42)
          continue;
        *((_QWORD *)this + 1) = v35 + 1;
LABEL_66:
        *(_DWORD *)(a1 + 44) |= 0x10u;
        v36 = *(_QWORD *)(a1 + 32);
        if (!v36)
          operator new();
        v44 = 0;
        v37 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v37 >= *((_QWORD *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0;
        }
        else
        {
          v44 = *v37;
          *((_QWORD *)this + 1) = v37 + 1;
        }
        v38 = *((_DWORD *)this + 14);
        v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39)
          return 0;
        v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1008EF554(v36, this, v41) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        v42 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v42, 1);
        v43 = v42 - 1;
        if (v43 < 0 == v24)
          *((_DWORD *)this + 14) = v43;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        v13 = *(_DWORD *)(a1 + 44);
        goto LABEL_38;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_52;
        goto LABEL_20;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        goto LABEL_66;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008F0738(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_9:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310F58 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    goto LABEL_15;
  }
LABEL_12:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_102310F58 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 0x10) != 0)
  {
LABEL_15:
    v9 = *(_QWORD *)(v5 + 32);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310F58 + 32);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1008F0818(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  unsigned int v18;
  int v19;
  int v20;

  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_39;
  }
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 44);
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0)
      goto LABEL_17;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310F58 + 16);
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D6350(v8, a2);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    else
      v11 = 1;
    v4 = (v4 + v10 + v11 + 1);
    v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_39;
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a1 + 24);
  if (!v12)
    v12 = *(_QWORD *)(qword_102310F58 + 24);
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EBE38(v12, a2);
  v14 = (int)v13;
  if (v13 >= 0x80)
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
  else
    v15 = 1;
  v4 = (v4 + v14 + v15 + 1);
  if ((*(_DWORD *)(a1 + 44) & 0x10) != 0)
  {
LABEL_33:
    v16 = *(_QWORD *)(a1 + 32);
    if (!v16)
      v16 = *(_QWORD *)(qword_102310F58 + 32);
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EFBE0(v16, a2);
    v19 = (int)v17;
    if (v17 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, v18);
    else
      v20 = 1;
    v4 = (v4 + v19 + v20 + 1);
  }
LABEL_39:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_1008F09A0(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008EFE10(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F09EC()
{
  return 1;
}

_QWORD *sub_1008F09F4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.AssistanceNeededReport");
}

void sub_1008F0A04(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 22910);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v5);
      v7 = a1[5];
      v8 = (int)a1[4];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v7 + 1);
          v7 = a1[5];
        }
        a1[5] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 1);
      a1[4] = v8 + 1;
      sub_1008DBA70(*(_QWORD *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 16));
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    v10 = *(_DWORD *)(a2 + 32);
    a1[10] |= 1u;
    a1[8] = v10;
  }
}

void sub_1008F0B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F0B90(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215CDC0;
  sub_10010C59C(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008F0BC8(uint64_t *a1)
{
  sub_1008F0B90(a1);
  operator delete();
}

void sub_1008F0BEC()
{
  operator new();
}

uint64_t sub_1008F0C30(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 40))
    *(_DWORD *)(result + 32) = 0;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_1008F0C94(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  char *v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t result;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  unsigned int v27;

  v5 = a1 + 8;
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v10 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        a1[10] |= 1u;
        if ((unint64_t)v12 < v11 && *v12 == 18)
          goto LABEL_23;
      }
      if (TagFallback >> 3 != 2)
        break;
      v9 = TagFallback & 7;
      if (v9 != 2)
        goto LABEL_16;
      while (1)
      {
        v14 = a1[5];
        v15 = (int)a1[4];
        if ((int)v15 >= v14)
        {
          if (v14 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
            v14 = a1[5];
          }
          a1[5] = v14 + 1;
          operator new();
        }
        v16 = *((_QWORD *)a1 + 1);
        a1[4] = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
        v27 = 0;
        v18 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0;
        }
        else
        {
          v27 = *v18;
          *((_QWORD *)this + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)this + 14);
        v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008DBDC0(v17, this, v22) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        v23 = *((_DWORD *)this + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)this + 14) = v25;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v26 = (_BYTE *)*((_QWORD *)this + 2);
        if (v12 >= v26 || *v12 != 18)
          break;
LABEL_23:
        *((_QWORD *)this + 1) = v12 + 1;
      }
      if (v12 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008F0F48(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = result;
  if ((*(_BYTE *)(result + 40) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1008F0FBC(uint64_t a1, unsigned int a2)
{
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80)
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    else
      v3 = 2;
  }
  else
  {
    v3 = 0;
  }
  v5 = *(_DWORD *)(a1 + 16);
  v6 = (v5 + v3);
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DC600(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v7), a2);
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      else
        v10 = 1;
      v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_1008F1068(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F0A04(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F10B4()
{
  return 1;
}

_QWORD *sub_1008F10BC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.EutranCellTime");
}

void sub_1008F10CC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  _BYTE v14[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 23265);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[10] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[10] |= 2u;
    a1[3] = v8;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v9 = *(_DWORD *)(a2 + 16);
    a1[10] |= 4u;
    a1[4] = v9;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    v10 = *(_DWORD *)(a2 + 20);
    a1[10] |= 8u;
    a1[5] = v10;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    v11 = *(_DWORD *)(a2 + 24);
    a1[10] |= 0x10u;
    a1[6] = v11;
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        return;
      goto LABEL_11;
    }
LABEL_18:
    v12 = *(_DWORD *)(a2 + 28);
    a1[10] |= 0x20u;
    a1[7] = v12;
    if ((*(_DWORD *)(a2 + 40) & 0x40) == 0)
      return;
LABEL_11:
    v6 = *(_DWORD *)(a2 + 32);
    a1[10] |= 0x40u;
    a1[8] = v6;
  }
}

void sub_1008F121C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F1234(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CE38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F1244(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CE38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008F1274()
{
  operator new();
}

uint64_t sub_1008F12B8(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1008F12D4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  unsigned __int8 *v29;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  v8 = a1 + 5;
  v9 = a1 + 6;
  v10 = a1 + 7;
  v11 = a1 + 8;
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *v5 = *v16;
          v17 = v16 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_30:
          a1[10] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            v18 = v17 + 1;
            *((_QWORD *)this + 1) = v18;
            goto LABEL_33;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if ((_DWORD)result)
        {
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_33:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v18;
          v24 = v18 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        a1[10] |= 2u;
        if ((unint64_t)v24 >= v15 || *v24 != 24)
          continue;
        v19 = v24 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_41:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v19;
          v25 = v19 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        a1[10] |= 4u;
        if ((unint64_t)v25 >= v15 || *v25 != 32)
          continue;
        v20 = v25 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_49:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v20;
          v26 = v20 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        a1[10] |= 8u;
        if ((unint64_t)v26 >= v15 || *v26 != 40)
          continue;
        v21 = v26 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_57:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v21;
          v27 = v21 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        a1[10] |= 0x10u;
        if ((unint64_t)v27 >= v15 || *v27 != 48)
          continue;
        v22 = v27 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_65:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v22;
          v28 = v22 + 1;
          *((_QWORD *)this + 1) = v28;
        }
        a1[10] |= 0x20u;
        if ((unint64_t)v28 >= v15 || *v28 != 56)
          continue;
        v23 = v28 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_73:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v29 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v23;
          v29 = (unsigned __int8 *)(v23 + 1);
          *((_QWORD *)this + 1) = v29;
        }
        a1[10] |= 0x40u;
        if (v29 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_41;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_49;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v22 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_65;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v23 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_73;
      default:
        v14 = TagFallback & 7;
LABEL_24:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008F16E4(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[10];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[10];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[10];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  }
LABEL_14:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  if ((v5[10] & 0x40) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  return result;
}

uint64_t sub_1008F17CC(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;

  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_40;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      v9 = 2;
    }
    v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v11 = 2;
  }
  v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_32;
  }
LABEL_28:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v13 = 2;
  }
  v4 = (v13 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0)
      goto LABEL_40;
    goto LABEL_36;
  }
LABEL_32:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v15 = 2;
  }
  v4 = (v15 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_36:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v16 >= 0x80)
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
    else
      v17 = 2;
    v4 = (v17 + v4);
  }
LABEL_40:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008F1934(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F10CC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F1980()
{
  return 1;
}

_QWORD *sub_1008F1988@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.ClsGeranCellTime");
}

void sub_1008F1998(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 23487);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008F1A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F1A58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CEB0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F1A68(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CEB0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008F1A98()
{
  operator new();
}

uint64_t sub_1008F1AD0(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008F1AE4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008F1C80(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008F1CD8(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008F1D64(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F1998(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F1DB0()
{
  return 1;
}

_QWORD *sub_1008F1DB8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsTowCdmaCellTime");
}

void sub_1008F1DC8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 23720);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v8;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v6;
  }
}

void sub_1008F1E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F1EB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CF28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F1EC0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215CF28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008F1EF0()
{
  operator new();
}

uint64_t sub_1008F1F2C(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008F1F44(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  _BYTE *v17;
  unsigned __int8 *v18;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2)
        break;
      v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v16 = (char *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
      }
      else
      {
        *v6 = *v16;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v13;
          v18 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

int *sub_1008F2164(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_1008F21DC(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008F2290(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F1DC8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F22DC()
{
  return 1;
}

_QWORD *sub_1008F22E4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CtsEutranCellTime");
}

void sub_1008F22F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 23965);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      v7 = *(_DWORD **)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310F80 + 8);
      sub_1008F1998(v7, v8);
      v5 = *(_DWORD *)(a2 + 28);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 16) = v9;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_DWORD *)(a1 + 20) = v6;
  }
}

void sub_1008F2408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F2420(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215CFA0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310F80 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008F2474(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008F2420(a1);
  operator delete();
}

void sub_1008F2498()
{
  operator new();
}

uint64_t sub_1008F24D0(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 28))
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008F2500(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  unsigned int *v13;
  char *v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t result;
  unsigned __int8 *v26;
  unsigned int v27;

  v5 = (unsigned int *)(a1 + 16);
  v6 = (unsigned int *)(a1 + 20);
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
        break;
      if (v9 == 2)
      {
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v15 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_33:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v15;
          v24 = v15 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v24 < v11 && *v24 == 24)
        {
          v12 = v24 + 1;
          *((_QWORD *)this + 1) = v12;
LABEL_41:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!(_DWORD)result)
              return result;
            v26 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v11 = *((_QWORD *)this + 2);
          }
          else
          {
            *v6 = *v12;
            v26 = (unsigned __int8 *)(v12 + 1);
            *((_QWORD *)this + 1) = v26;
          }
          *(_DWORD *)(a1 + 28) |= 4u;
          if (v26 == (unsigned __int8 *)v11
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }
      }
      else
      {
        if (v9 == 3)
        {
          v10 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            v12 = (char *)*((_QWORD *)this + 1);
            v11 = *((_QWORD *)this + 2);
            goto LABEL_41;
          }
        }
        else
        {
          v10 = TagFallback & 7;
        }
LABEL_21:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
      }
    }
    v10 = TagFallback & 7;
    if (v10 != 2)
      goto LABEL_21;
    *(_DWORD *)(a1 + 28) |= 1u;
    v13 = *(unsigned int **)(a1 + 8);
    if (!v13)
      operator new();
    v27 = 0;
    v14 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))
        return 0;
    }
    else
    {
      v27 = *v14;
      *((_QWORD *)this + 1) = v14 + 1;
    }
    v16 = *((_DWORD *)this + 14);
    v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17)
      return 0;
    v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_1008F1AE4(v13, this, v19) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    v20 = *((_DWORD *)this + 14);
    v21 = __OFSUB__(v20, 1);
    v22 = v20 - 1;
    if (v22 < 0 == v21)
      *((_DWORD *)this + 14) = v22;
    v23 = (_BYTE *)*((_QWORD *)this + 1);
    v11 = *((_QWORD *)this + 2);
    if ((unint64_t)v23 < v11 && *v23 == 16)
    {
      v15 = v23 + 1;
      *((_QWORD *)this + 1) = v15;
      goto LABEL_33;
    }
  }
}

uint64_t sub_1008F27C4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;
  uint64_t v7;

  v5 = (int *)result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310F80 + 8);
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  if ((v5[7] & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  return result;
}

uint64_t sub_1008F284C(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_21;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
      v5 = *(_QWORD *)(qword_102310F80 + 8);
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F1CD8(v5, a2);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    else
      v8 = 1;
    v4 = (v7 + v8 + 1);
    v3 = *(_DWORD *)(a1 + 28);
    if ((v3 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_16;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v10 = 2;
  }
  v4 = (v10 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    else
      v12 = 2;
    v4 = (v12 + v4);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008F291C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F22F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F2968()
{
  return 1;
}

_QWORD *sub_1008F2970@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CtsCdmaCellTime");
}

void sub_1008F2980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 24187);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      v6 = *(_DWORD **)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310F88 + 8);
      sub_1008F1DC8(v6, v7);
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      v8 = *(_QWORD *)(a1 + 16);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 16);
      if (!v9)
        v9 = *(_QWORD *)(qword_102310F88 + 16);
      sub_1008F22F4(v8, v9);
    }
  }
}

void sub_1008F2AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008F2ACC(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_102310F88 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[2];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008F2B28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D018;
  sub_1008F2ACC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F2B58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D018;
  sub_1008F2ACC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008F2B9C()
{
  operator new();
}

uint64_t sub_1008F2BD4(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 28);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      v3 = *(_QWORD *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
        result = sub_1008F24D0(result);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008F2C30(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  unsigned int *v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t result;
  unsigned int v27;
  unsigned int v28;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_17;
        *(_DWORD *)(a1 + 28) |= 1u;
        v8 = *(unsigned int **)(a1 + 8);
        if (!v8)
          operator new();
        v27 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0;
        }
        else
        {
          v27 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)this + 14);
        v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008F1F44(v8, this, v13) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        v14 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)this + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 < *((_QWORD *)this + 2) && *v17 == 18)
        {
          *((_QWORD *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_17;
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      v18 = *(_QWORD *)(a1 + 16);
      if (!v18)
        operator new();
      v28 = 0;
      v19 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0;
      }
      else
      {
        v28 = *v19;
        *((_QWORD *)this + 1) = v19 + 1;
      }
      v20 = *((_DWORD *)this + 14);
      v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21)
        return 0;
      v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_1008F2500(v18, this, v23) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      v24 = *((_DWORD *)this + 14);
      v15 = __OFSUB__(v24, 1);
      v25 = v24 - 1;
      if (v25 < 0 == v15)
        *((_DWORD *)this + 14) = v25;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008F2F08(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310F88 + 8);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310F88 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008F2F84(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  unsigned int v10;
  int v11;
  int v12;

  if (!*(_BYTE *)(a1 + 28))
  {
    v3 = 0;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    v4 = *(_QWORD *)(qword_102310F88 + 8);
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F21DC(v4, a2);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_12:
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310F88 + 16);
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F284C(v8, a2);
    v11 = (int)v9;
    if (v9 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_18:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_1008F3054(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F2980(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F30A0()
{
  return 1;
}

_QWORD *sub_1008F30A8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CellTimeData");
}

void sub_1008F30B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 24400);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 6)
        sub_10190E750();
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      v7 = *(_QWORD *)(a1 + 8);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 8);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310F90 + 8);
      sub_1008F2980(v7, v8);
    }
  }
}

void sub_1008F31B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F31C8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215D090;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310F90 != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008F321C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008F31C8(a1);
  operator delete();
}

void sub_1008F3240()
{
  operator new();
}

uint64_t sub_1008F327C(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_1008F2BD4(result);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008F32B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  unsigned int v21;
  unsigned int v22;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v9 = v21;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 < *((_QWORD *)this + 2) && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v7 = TagFallback & 7;
        goto LABEL_15;
      }
      v7 = TagFallback & 7;
      if (v7 == 2)
        break;
LABEL_15:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    v12 = *(_QWORD *)(a1 + 8);
    if (!v12)
      operator new();
    v22 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))
        return 0;
    }
    else
    {
      v22 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)this + 14);
    v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008F2C30(v12, this, v17) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    v18 = *((_DWORD *)this + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)this + 14) = v20;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008F3504(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return result;
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310F90 + 8);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008F3570(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  unsigned int v8;
  int v9;
  int v10;

  v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
      else if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_19;
    }
    v6 = *(_QWORD *)(a1 + 8);
    if (!v6)
      v6 = *(_QWORD *)(qword_102310F90 + 8);
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F2F84(v6, a2);
    v9 = (int)v7;
    if (v7 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    else
      v10 = 1;
    v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008F3634(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F30B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F3680()
{
  return 1;
}

_QWORD *sub_1008F3688@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CellTimeAssistance");
}

void sub_1008F3698(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  char v11;
  _BYTE v12[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v12, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 24695);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[8] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[8] |= 2u;
    a1[3] = v8;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v9 = *(_DWORD *)(a2 + 16);
    a1[8] |= 4u;
    a1[4] = v9;
    v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v10 = *(_DWORD *)(a2 + 20);
    a1[8] |= 8u;
    a1[5] = v10;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0)
      return;
LABEL_9:
    v6 = *(_DWORD *)(a2 + 24);
    a1[8] |= 0x10u;
    a1[6] = v6;
  }
}

void sub_1008F37A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F37C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D108;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F37D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D108;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008F3800()
{
  operator new();
}

uint64_t sub_1008F383C(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008F3854(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned __int8 *v23;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  v8 = a1 + 5;
  v9 = a1 + 6;
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
LABEL_26:
          a1[8] |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            v16 = v15 + 1;
            *((_QWORD *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if ((_DWORD)result)
        {
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v20 = v16 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        a1[8] |= 2u;
        if ((unint64_t)v20 >= v13 || *v20 != 24)
          continue;
        v17 = v20 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v21 = v17 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        a1[8] |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32)
          continue;
        v18 = v21 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v22 = v18 + 1;
          *((_QWORD *)this + 1) = v22;
        }
        a1[8] |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 40)
          continue;
        v19 = v22 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v19;
          v23 = (unsigned __int8 *)(v19 + 1);
          *((_QWORD *)this + 1) = v23;
        }
        a1[8] |= 0x10u;
        if (v23 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_37;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v19 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_53;
      default:
        v12 = TagFallback & 7;
LABEL_20:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008F3B74(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[8];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[8];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  }
LABEL_10:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  if ((v5[8] & 0x10) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  return result;
}

uint64_t sub_1008F3C24(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;

  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 32);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      v9 = 2;
    }
    v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v11 = 2;
  }
  v4 = (v11 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_26:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v12 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    else
      v13 = 2;
    v4 = (v13 + v4);
  }
LABEL_30:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1008F3D34(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F3698(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F3D80()
{
  return 1;
}

_QWORD *sub_1008F3D88@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.TowAssist");
}

void sub_1008F3D98(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  char v19;
  _BYTE v20[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 25136);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), *(_DWORD *)(a2 + 32) + a1[8]);
  if (*(int *)(a2 + 32) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8 * v5);
      v7 = a1[9];
      v8 = (int)a1[8];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), v7 + 1);
          v7 = a1[9];
        }
        a1[9] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 3);
      a1[8] = v8 + 1;
      sub_1008F3698(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 32));
  }
  v10 = *(_DWORD *)(a2 + 68);
  if (!(_BYTE)v10)
    goto LABEL_19;
  if ((v10 & 1) != 0)
  {
    v12 = *(_DWORD *)(a2 + 8);
    a1[17] |= 1u;
    a1[2] = v12;
    v10 = *(_DWORD *)(a2 + 68);
    if ((v10 & 2) == 0)
    {
LABEL_14:
      if ((v10 & 4) == 0)
        goto LABEL_15;
      goto LABEL_24;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_14;
  }
  v13 = *(_DWORD *)(a2 + 12);
  a1[17] |= 2u;
  a1[3] = v13;
  v10 = *(_DWORD *)(a2 + 68);
  if ((v10 & 4) == 0)
  {
LABEL_15:
    if ((v10 & 8) == 0)
      goto LABEL_16;
    goto LABEL_25;
  }
LABEL_24:
  v14 = *(_DWORD *)(a2 + 16);
  a1[17] |= 4u;
  a1[4] = v14;
  v10 = *(_DWORD *)(a2 + 68);
  if ((v10 & 8) == 0)
  {
LABEL_16:
    if ((v10 & 0x20) == 0)
      goto LABEL_17;
    goto LABEL_26;
  }
LABEL_25:
  v15 = *(_DWORD *)(a2 + 20);
  a1[17] |= 8u;
  a1[5] = v15;
  v10 = *(_DWORD *)(a2 + 68);
  if ((v10 & 0x20) == 0)
  {
LABEL_17:
    if ((v10 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_27;
  }
LABEL_26:
  v16 = *(_DWORD *)(a2 + 48);
  a1[17] |= 0x20u;
  a1[12] = v16;
  v10 = *(_DWORD *)(a2 + 68);
  if ((v10 & 0x40) != 0)
  {
LABEL_27:
    v17 = *(_DWORD *)(a2 + 52);
    if (v17 >= 6)
      sub_10190E7A0();
    a1[17] |= 0x40u;
    a1[13] = v17;
    v10 = *(_DWORD *)(a2 + 68);
    if ((v10 & 0x80) != 0)
      goto LABEL_29;
LABEL_19:
    if ((v10 & 0x100) == 0)
      return;
    goto LABEL_20;
  }
LABEL_18:
  if ((v10 & 0x80) == 0)
    goto LABEL_19;
LABEL_29:
  v18 = *(_DWORD *)(a2 + 56);
  if (v18 >= 7)
    sub_10190E778();
  a1[17] |= 0x80u;
  a1[14] = v18;
  if ((*(_DWORD *)(a2 + 68) & 0x100) != 0)
  {
LABEL_20:
    v11 = *(_DWORD *)(a2 + 60);
    a1[17] |= 0x100u;
    a1[15] = v11;
  }
}

void sub_1008F4004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F401C(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215D180;
  sub_10010C59C(a1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008F4054(uint64_t *a1)
{
  sub_1008F401C(a1);
  operator delete();
}

uint64_t sub_1008F4078(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FA0;
  if (!qword_102310FA0)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FA0;
  }
  return result;
}

void sub_1008F40A4()
{
  operator new();
}

uint64_t sub_1008F40F0(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  v2 = *(_DWORD *)(result + 68);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  if ((v2 & 0xFF00) != 0)
    *(_DWORD *)(result + 60) = 0;
  if (*(int *)(result + 32) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v3);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_1008F416C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unsigned __int8 *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  unsigned __int8 *v25;
  uint64_t result;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int *v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  BOOL v40;
  int v41;
  int v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  char *v48;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v49;
  unsigned int *v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;

  v5 = a1 + 3;
  v6 = a1 + 4;
  v7 = a1 + 5;
  v49 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  v50 = a1 + 2;
  v8 = a1 + 12;
  v9 = a1 + 15;
  while (1)
  {
    while (1)
    {
LABEL_2:
      v10 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v10 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      switch(TagFallback >> 3)
      {
        case 1u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v14 = (char *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          if ((unint64_t)v14 >= v13 || *v14 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v50);
            if (!(_DWORD)result)
              return result;
            v15 = (_BYTE *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
          }
          else
          {
            *v50 = *v14;
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
          }
          a1[17] |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            v16 = v15 + 1;
            *((_QWORD *)this + 1) = v16;
            goto LABEL_37;
          }
          continue;
        case 2u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v16 = (char *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
LABEL_37:
          if ((unint64_t)v16 >= v13 || *v16 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result)
              return result;
            v27 = (_BYTE *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
          }
          else
          {
            *v5 = *v16;
            v27 = v16 + 1;
            *((_QWORD *)this + 1) = v27;
          }
          a1[17] |= 2u;
          if ((unint64_t)v27 >= v13 || *v27 != 24)
            continue;
          v17 = v27 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_45:
          if ((unint64_t)v17 >= v13 || *v17 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!(_DWORD)result)
              return result;
            v28 = (_BYTE *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
          }
          else
          {
            *v6 = *v17;
            v28 = v17 + 1;
            *((_QWORD *)this + 1) = v28;
          }
          a1[17] |= 4u;
          if ((unint64_t)v28 >= v13 || *v28 != 32)
            continue;
          v18 = v28 + 1;
          *((_QWORD *)this + 1) = v18;
LABEL_53:
          if ((unint64_t)v18 >= v13 || *v18 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
            if (!(_DWORD)result)
              return result;
            v29 = (_BYTE *)*((_QWORD *)this + 1);
            v13 = *((_QWORD *)this + 2);
          }
          else
          {
            *v7 = *v18;
            v29 = v18 + 1;
            *((_QWORD *)this + 1) = v29;
          }
          a1[17] |= 8u;
          if ((unint64_t)v29 >= v13 || *v29 != 42)
            continue;
          break;
        case 3u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v17 = (char *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          goto LABEL_45;
        case 4u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v18 = (char *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          goto LABEL_53;
        case 5u:
          v12 = TagFallback & 7;
          if (v12 == 2)
            goto LABEL_61;
          goto LABEL_28;
        case 6u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v20 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
          goto LABEL_79;
        case 7u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v21 = (char *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
          goto LABEL_87;
        case 8u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v23 = (char *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
          goto LABEL_97;
        case 9u:
          v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v25 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v24 = *((_QWORD *)this + 2);
          goto LABEL_107;
        default:
          v12 = TagFallback & 7;
LABEL_28:
          if (v12 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
            return 0;
          continue;
      }
      do
      {
        *((_QWORD *)this + 1) = v29 + 1;
LABEL_61:
        v30 = a1[9];
        v31 = (int)a1[8];
        if ((int)v31 >= v30)
        {
          if (v30 == a1[10])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v49, v30 + 1);
            v30 = a1[9];
          }
          a1[9] = v30 + 1;
          operator new();
        }
        v32 = *((_QWORD *)a1 + 3);
        a1[8] = v31 + 1;
        v33 = *(unsigned int **)(v32 + 8 * v31);
        v53 = 0;
        v34 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
        }
        else
        {
          v53 = *v34;
          *((_QWORD *)this + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)this + 14);
        v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
        if (!sub_1008F3854(v33, this, v38) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        v39 = *((_DWORD *)this + 14);
        v40 = __OFSUB__(v39, 1);
        v41 = v39 - 1;
        if (v41 < 0 == v40)
          *((_DWORD *)this + 14) = v41;
        v29 = (_BYTE *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
        if ((unint64_t)v29 >= v19)
          goto LABEL_2;
        v42 = *v29;
      }
      while (v42 == 42);
      if (v42 != 48)
        continue;
      v20 = v29 + 1;
      *((_QWORD *)this + 1) = v20;
LABEL_79:
      if ((unint64_t)v20 >= v19 || (char)*v20 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
        if ((_DWORD)result)
        {
          v43 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
          goto LABEL_84;
        }
        return result;
      }
      *v8 = *v20;
      v43 = v20 + 1;
      *((_QWORD *)this + 1) = v43;
LABEL_84:
      a1[17] |= 0x20u;
      if ((unint64_t)v43 < v19 && *v43 == 56)
      {
        v21 = v43 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_87:
        v52 = 0;
        if ((unint64_t)v21 < v19 && (*v21 & 0x80000000) == 0)
        {
          v44 = *v21;
          *((_QWORD *)this + 1) = v21 + 1;
          goto LABEL_92;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
        if (!(_DWORD)result)
          return result;
        v44 = v52;
LABEL_92:
        if (v44 <= 5)
        {
          a1[17] |= 0x40u;
          a1[13] = v44;
        }
        v45 = (_BYTE *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        if ((unint64_t)v45 < v22 && *v45 == 64)
        {
          v23 = v45 + 1;
          *((_QWORD *)this + 1) = v23;
LABEL_97:
          v51 = 0;
          if ((unint64_t)v23 < v22 && (*v23 & 0x80000000) == 0)
          {
            v46 = *v23;
            *((_QWORD *)this + 1) = v23 + 1;
            goto LABEL_102;
          }
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
          if (!(_DWORD)result)
            return result;
          v46 = v51;
LABEL_102:
          if (v46 <= 6)
          {
            a1[17] |= 0x80u;
            a1[14] = v46;
          }
          v47 = (_BYTE *)*((_QWORD *)this + 1);
          v24 = *((_QWORD *)this + 2);
          if ((unint64_t)v47 < v24 && *v47 == 72)
            break;
        }
      }
    }
    v25 = v47 + 1;
    *((_QWORD *)this + 1) = v25;
LABEL_107:
    if ((unint64_t)v25 >= v24 || (char)*v25 < 0)
      break;
    *v9 = *v25;
    v48 = (char *)(v25 + 1);
    *((_QWORD *)this + 1) = v48;
LABEL_112:
    a1[17] |= 0x100u;
    if (v48 == (char *)v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
  if ((_DWORD)result)
  {
    v48 = (char *)*((_QWORD *)this + 1);
    v24 = *((_QWORD *)this + 2);
    goto LABEL_112;
  }
  return result;
}

uint64_t sub_1008F4774(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 68);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0)
LABEL_5:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x20) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 48), a2, a4);
    v8 = *(_DWORD *)(v5 + 68);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
        goto LABEL_12;
      goto LABEL_20;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), (int)a2, a4);
  v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x80) == 0)
  {
LABEL_12:
    if ((v8 & 0x100) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 60), a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 56), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 60), a2, a4);
  return result;
}

uint64_t sub_1008F48B8(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  int v26;

  v3 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    if ((v3 & 0x100) == 0)
      goto LABEL_50;
    goto LABEL_46;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_15;
    goto LABEL_11;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v6 = 1;
  }
  v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_11:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v8 = 1;
    }
    v4 += v8 + 1;
  }
LABEL_15:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v10 = 2;
    }
    v4 += v10;
    if ((v3 & 8) == 0)
    {
LABEL_17:
      if ((v3 & 0x20) == 0)
        goto LABEL_18;
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_17;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v12 = 2;
  }
  v4 += v12;
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_34;
  }
LABEL_30:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_34:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v15 & 0x80000000) != 0)
  {
    v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x80) == 0)
  {
LABEL_20:
    if ((v3 & 0x100) == 0)
      goto LABEL_50;
    goto LABEL_46;
  }
LABEL_40:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v17 & 0x80000000) != 0)
  {
    v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v18 = 2;
  }
  v4 += v18;
  if ((v3 & 0x100) != 0)
  {
LABEL_46:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v19 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    else
      v20 = 2;
    v4 += v20;
  }
LABEL_50:
  v21 = *(_DWORD *)(a1 + 32);
  v22 = (v21 + v4);
  if (v21 >= 1)
  {
    v23 = 0;
    do
    {
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F3C24(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * v23), a2);
      v25 = (int)v24;
      if (v24 >= 0x80)
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      else
        v26 = 1;
      v22 = (v25 + v22 + v26);
      ++v23;
    }
    while (v23 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v22;
  return v22;
}

void sub_1008F4AC4(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F3D98(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F4B10()
{
  return 1;
}

_QWORD *sub_1008F4B18@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsReferenceTime");
}

void sub_1008F4B28(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  char v20;
  _BYTE v21[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v21, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 25748);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  v5 = a2[17];
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v8 = a2[2];
    a1[17] |= 1u;
    a1[2] = v8;
    v5 = a2[17];
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = a2[3];
  a1[17] |= 2u;
  a1[3] = v9;
  v5 = a2[17];
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  v10 = a2[4];
  a1[17] |= 4u;
  a1[4] = v10;
  v5 = a2[17];
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  v11 = a2[5];
  a1[17] |= 8u;
  a1[5] = v11;
  v5 = a2[17];
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_27:
    v13 = a2[7];
    a1[17] |= 0x20u;
    a1[7] = v13;
    v5 = a2[17];
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  v12 = a2[6];
  a1[17] |= 0x10u;
  a1[6] = v12;
  v5 = a2[17];
  if ((v5 & 0x20) != 0)
    goto LABEL_27;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_28:
  v14 = a2[8];
  a1[17] |= 0x40u;
  a1[8] = v14;
  v5 = a2[17];
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = a2[9];
    a1[17] |= 0x80u;
    a1[9] = v6;
    v5 = a2[17];
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return;
  if ((v5 & 0x100) != 0)
  {
    v15 = a2[10];
    a1[17] |= 0x100u;
    a1[10] = v15;
    v5 = a2[17];
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_32;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v16 = a2[11];
  a1[17] |= 0x200u;
  a1[11] = v16;
  v5 = a2[17];
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_32:
  v17 = a2[12];
  a1[17] |= 0x400u;
  a1[12] = v17;
  v5 = a2[17];
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_35;
  }
LABEL_33:
  v18 = a2[13];
  if (v18 >= 6)
    sub_10190E7F0();
  a1[17] |= 0x800u;
  a1[13] = v18;
  v5 = a2[17];
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      return;
    goto LABEL_20;
  }
LABEL_35:
  v19 = a2[14];
  if (v19 >= 7)
    sub_10190E7C8();
  a1[17] |= 0x1000u;
  a1[14] = v19;
  if ((a2[17] & 0x2000) != 0)
  {
LABEL_20:
    v7 = a2[15];
    a1[17] |= 0x2000u;
    a1[15] = v7;
  }
}

void sub_1008F4D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F4D94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D1F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F4DA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D1F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008F4DD4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FA8;
  if (!qword_102310FA8)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FA8;
  }
  return result;
}

void sub_1008F4E00()
{
  operator new();
}

uint64_t sub_1008F4E48(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 68);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 68) = 0;
  return result;
}

uint64_t sub_1008F4E78(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  char *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  unsigned int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  unsigned __int8 *v48;
  uint64_t result;
  unsigned int *v50;
  unsigned int *v51;
  unsigned int *v52;
  unsigned int *v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;

  v50 = a1 + 2;
  v51 = a1 + 3;
  v52 = a1 + 4;
  v53 = a1 + 5;
  v5 = a1 + 7;
  v6 = a1 + 8;
  v7 = a1 + 9;
  v8 = a1 + 10;
  v9 = a1 + 11;
  v10 = a1 + 12;
  v11 = a1 + 15;
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *v50 = *v16;
          v17 = v16 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_44:
          a1[17] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            v18 = v17 + 1;
            *((_QWORD *)this + 1) = v18;
            goto LABEL_47;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v50);
        if ((_DWORD)result)
        {
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_47:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v51 = *v18;
          v33 = v18 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        a1[17] |= 2u;
        if ((unint64_t)v33 >= v15 || *v33 != 24)
          continue;
        v19 = v33 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_55:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v52);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v52 = *v19;
          v34 = v19 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        a1[17] |= 4u;
        if ((unint64_t)v34 >= v15 || *v34 != 32)
          continue;
        v20 = v34 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v53);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v53 = *v20;
          v35 = v20 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        a1[17] |= 8u;
        if ((unint64_t)v35 >= v15 || *v35 != 40)
          continue;
        v21 = v35 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_71:
        v54 = 0;
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54);
          if (!(_DWORD)result)
            return result;
          v36 = v54;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v36 = *v21;
          v37 = v21 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        a1[6] = v36;
        a1[17] |= 0x10u;
        if ((unint64_t)v37 >= v15 || *v37 != 48)
          continue;
        v22 = v37 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_79:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v22;
          v38 = v22 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        a1[17] |= 0x20u;
        if ((unint64_t)v38 >= v15 || *v38 != 56)
          continue;
        v23 = v38 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_87:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v23;
          v39 = v23 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        a1[17] |= 0x40u;
        if ((unint64_t)v39 >= v15 || *v39 != 64)
          continue;
        v24 = v39 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_95:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v24;
          v40 = v24 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        a1[17] |= 0x80u;
        if ((unint64_t)v40 >= v15 || *v40 != 72)
          continue;
        v25 = v40 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_103:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v25;
          v41 = v25 + 1;
          *((_QWORD *)this + 1) = v41;
        }
        a1[17] |= 0x100u;
        if ((unint64_t)v41 >= v15 || *v41 != 80)
          continue;
        v26 = v41 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_111:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v26;
          v42 = v26 + 1;
          *((_QWORD *)this + 1) = v42;
        }
        a1[17] |= 0x200u;
        if ((unint64_t)v42 >= v15 || *v42 != 88)
          continue;
        v27 = v42 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_119:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v43 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v27;
          v43 = v27 + 1;
          *((_QWORD *)this + 1) = v43;
        }
        a1[17] |= 0x400u;
        if ((unint64_t)v43 >= v15 || *v43 != 96)
          continue;
        v28 = v43 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_127:
        v56 = 0;
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v56);
          if (!(_DWORD)result)
            return result;
          v44 = v56;
        }
        else
        {
          v44 = *v28;
          *((_QWORD *)this + 1) = v28 + 1;
        }
        if (v44 <= 5)
        {
          a1[17] |= 0x800u;
          a1[13] = v44;
        }
        v45 = (_BYTE *)*((_QWORD *)this + 1);
        v29 = *((_QWORD *)this + 2);
        if ((unint64_t)v45 >= v29 || *v45 != 104)
          continue;
        v30 = v45 + 1;
        *((_QWORD *)this + 1) = v30;
LABEL_137:
        v55 = 0;
        if ((unint64_t)v30 >= v29 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
          if (!(_DWORD)result)
            return result;
          v46 = v55;
        }
        else
        {
          v46 = *v30;
          *((_QWORD *)this + 1) = v30 + 1;
        }
        if (v46 <= 6)
        {
          a1[17] |= 0x1000u;
          a1[14] = v46;
        }
        v47 = (_BYTE *)*((_QWORD *)this + 1);
        v31 = *((_QWORD *)this + 2);
        if ((unint64_t)v47 >= v31 || *v47 != 112)
          continue;
        v32 = v47 + 1;
        *((_QWORD *)this + 1) = v32;
LABEL_147:
        if ((unint64_t)v32 >= v31 || *v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v48 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v31 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v32;
          v48 = (unsigned __int8 *)(v32 + 1);
          *((_QWORD *)this + 1) = v48;
        }
        a1[17] |= 0x2000u;
        if (v48 != (unsigned __int8 *)v31 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_55;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_63;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v22 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_79;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v23 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 8u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v24 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v25 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 0xAu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v26 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 0xBu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v27 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_119;
      case 0xCu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v28 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_127;
      case 0xDu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v30 = (char *)*((_QWORD *)this + 1);
        v29 = *((_QWORD *)this + 2);
        goto LABEL_137;
      case 0xEu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v32 = (char *)*((_QWORD *)this + 1);
        v31 = *((_QWORD *)this + 2);
        goto LABEL_147;
      default:
        v14 = TagFallback & 7;
LABEL_38:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008F55F0(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[17];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  }
LABEL_28:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  if ((v5[17] & 0x2000) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  return result;
}

uint64_t sub_1008F579C(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;

  v3 = a1[17];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = a1[17];
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = a1[17];
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = a1[17];
    }
    else
    {
      v10 = 1;
    }
    v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = a1[17];
  }
  else
  {
    v12 = 1;
  }
  v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_35;
  }
LABEL_29:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v13 & 0x80000000) != 0)
  {
    v14 = 10;
  }
  else if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    v3 = a1[17];
  }
  else
  {
    v14 = 1;
  }
  v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_35:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    v3 = a1[17];
  }
  else
  {
    v16 = 1;
  }
  v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_39:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    v3 = a1[17];
  }
  else
  {
    v18 = 1;
  }
  v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v19 >= 0x80)
    {
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      v3 = a1[17];
    }
    else
    {
      v20 = 2;
    }
    v4 = (v20 + v4);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_83;
  if ((v3 & 0x100) != 0)
  {
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      v3 = a1[17];
    }
    else
    {
      v22 = 2;
    }
    v4 = (v22 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0)
        goto LABEL_51;
      goto LABEL_63;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    v3 = a1[17];
  }
  else
  {
    v24 = 2;
  }
  v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_51:
    if ((v3 & 0x800) == 0)
      goto LABEL_52;
    goto LABEL_67;
  }
LABEL_63:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    v3 = a1[17];
  }
  else
  {
    v26 = 2;
  }
  v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_52:
    if ((v3 & 0x1000) == 0)
      goto LABEL_53;
    goto LABEL_73;
  }
LABEL_67:
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if ((v27 & 0x80000000) != 0)
  {
    v28 = 11;
  }
  else if (v27 >= 0x80)
  {
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    v3 = a1[17];
  }
  else
  {
    v28 = 2;
  }
  v4 = (v28 + v4);
  if ((v3 & 0x1000) == 0)
  {
LABEL_53:
    if ((v3 & 0x2000) == 0)
      goto LABEL_83;
    goto LABEL_79;
  }
LABEL_73:
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
  if ((v29 & 0x80000000) != 0)
  {
    v30 = 11;
  }
  else if (v29 >= 0x80)
  {
    v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    v3 = a1[17];
  }
  else
  {
    v30 = 2;
  }
  v4 = (v30 + v4);
  if ((v3 & 0x2000) != 0)
  {
LABEL_79:
    v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
    if (v31 >= 0x80)
      v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    else
      v32 = 2;
    v4 = (v32 + v4);
  }
LABEL_83:
  a1[16] = v4;
  return v4;
}

void sub_1008F5A64(_DWORD *a1, _DWORD *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F4B28(a1, lpsrc);
}

uint64_t sub_1008F5AB0()
{
  return 1;
}

_QWORD *sub_1008F5AB8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.ReferenceLocation");
}

void sub_1008F5AC8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  char v41;
  _BYTE v42[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v42, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 27008);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v42, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v41, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v42);
  }
  v5 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v12 = *(_DWORD *)(a2 + 8);
    a1[37] |= 1u;
    a1[2] = v12;
    v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_50;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v13 = *(_DWORD *)(a2 + 12);
  a1[37] |= 2u;
  a1[3] = v13;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_51;
  }
LABEL_50:
  v14 = *(_DWORD *)(a2 + 16);
  a1[37] |= 4u;
  a1[4] = v14;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_52;
  }
LABEL_51:
  v15 = *(_DWORD *)(a2 + 20);
  a1[37] |= 8u;
  a1[5] = v15;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_53:
    v17 = *(_DWORD *)(a2 + 28);
    a1[37] |= 0x20u;
    a1[7] = v17;
    v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_52:
  v16 = *(_DWORD *)(a2 + 24);
  a1[37] |= 0x10u;
  a1[6] = v16;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x20) != 0)
    goto LABEL_53;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_54:
  v18 = *(_DWORD *)(a2 + 32);
  a1[37] |= 0x40u;
  a1[8] = v18;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *(_DWORD *)(a2 + 36);
    a1[37] |= 0x80u;
    a1[9] = v6;
    v5 = *(_DWORD *)(a2 + 148);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_23;
  if ((v5 & 0x100) != 0)
  {
    v19 = *(_DWORD *)(a2 + 40);
    a1[37] |= 0x100u;
    a1[10] = v19;
    v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_58;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v20 = *(_DWORD *)(a2 + 44);
  a1[37] |= 0x200u;
  a1[11] = v20;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_59;
  }
LABEL_58:
  v21 = *(_DWORD *)(a2 + 48);
  a1[37] |= 0x400u;
  a1[12] = v21;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_60;
  }
LABEL_59:
  v22 = *(_DWORD *)(a2 + 52);
  a1[37] |= 0x800u;
  a1[13] = v22;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_61;
  }
LABEL_60:
  v23 = *(_DWORD *)(a2 + 56);
  a1[37] |= 0x1000u;
  a1[14] = v23;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_62;
  }
LABEL_61:
  v24 = *(_DWORD *)(a2 + 60);
  a1[37] |= 0x2000u;
  a1[15] = v24;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_62:
  v25 = *(_DWORD *)(a2 + 64);
  a1[37] |= 0x4000u;
  a1[16] = v25;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x8000) != 0)
  {
LABEL_22:
    v7 = *(_DWORD *)(a2 + 68);
    a1[37] |= 0x8000u;
    a1[17] = v7;
    v5 = *(_DWORD *)(a2 + 148);
  }
LABEL_23:
  if ((v5 & 0xFF0000) == 0)
    goto LABEL_33;
  if ((v5 & 0x10000) != 0)
  {
    v26 = *(_DWORD *)(a2 + 72);
    a1[37] |= 0x10000u;
    a1[18] = v26;
    v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 0x20000) == 0)
    {
LABEL_26:
      if ((v5 & 0x40000) == 0)
        goto LABEL_27;
      goto LABEL_66;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  v27 = *(_DWORD *)(a2 + 76);
  a1[37] |= 0x20000u;
  a1[19] = v27;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0)
      goto LABEL_28;
    goto LABEL_67;
  }
LABEL_66:
  v28 = *(_DWORD *)(a2 + 80);
  a1[37] |= 0x40000u;
  a1[20] = v28;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x80000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000) == 0)
      goto LABEL_29;
    goto LABEL_68;
  }
LABEL_67:
  v29 = *(_DWORD *)(a2 + 84);
  a1[37] |= 0x80000u;
  a1[21] = v29;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x100000) == 0)
  {
LABEL_29:
    if ((v5 & 0x200000) == 0)
      goto LABEL_30;
    goto LABEL_69;
  }
LABEL_68:
  v30 = *(_DWORD *)(a2 + 88);
  a1[37] |= 0x100000u;
  a1[22] = v30;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x200000) == 0)
  {
LABEL_30:
    if ((v5 & 0x400000) == 0)
      goto LABEL_31;
    goto LABEL_70;
  }
LABEL_69:
  v31 = *(_DWORD *)(a2 + 92);
  a1[37] |= 0x200000u;
  a1[23] = v31;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x400000) == 0)
  {
LABEL_31:
    if ((v5 & 0x800000) == 0)
      goto LABEL_33;
    goto LABEL_32;
  }
LABEL_70:
  v32 = *(_DWORD *)(a2 + 96);
  a1[37] |= 0x400000u;
  a1[24] = v32;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x800000) != 0)
  {
LABEL_32:
    v8 = *(_DWORD *)(a2 + 100);
    a1[37] |= 0x800000u;
    a1[25] = v8;
    v5 = *(_DWORD *)(a2 + 148);
  }
LABEL_33:
  if (!HIBYTE(v5))
    goto LABEL_42;
  if ((v5 & 0x1000000) != 0)
  {
    v33 = *(_DWORD *)(a2 + 104);
    a1[37] |= 0x1000000u;
    a1[26] = v33;
    v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v5 & 0x4000000) == 0)
        goto LABEL_37;
      goto LABEL_74;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }
  v34 = *(_DWORD *)(a2 + 108);
  a1[37] |= 0x2000000u;
  a1[27] = v34;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x8000000) == 0)
      goto LABEL_38;
    goto LABEL_75;
  }
LABEL_74:
  v35 = *(_DWORD *)(a2 + 112);
  a1[37] |= 0x4000000u;
  a1[28] = v35;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x10000000) == 0)
      goto LABEL_39;
    goto LABEL_76;
  }
LABEL_75:
  v36 = *(_DWORD *)(a2 + 116);
  a1[37] |= 0x8000000u;
  a1[29] = v36;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x20000000) == 0)
      goto LABEL_40;
    goto LABEL_77;
  }
LABEL_76:
  v37 = *(_DWORD *)(a2 + 120);
  a1[37] |= 0x10000000u;
  a1[30] = v37;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x40000000) == 0)
      goto LABEL_41;
LABEL_78:
    v39 = *(_DWORD *)(a2 + 128);
    a1[37] |= 0x40000000u;
    a1[32] = v39;
    if ((*(_DWORD *)(a2 + 148) & 0x80000000) == 0)
      goto LABEL_42;
    goto LABEL_79;
  }
LABEL_77:
  v38 = *(_DWORD *)(a2 + 124);
  a1[37] |= 0x20000000u;
  a1[31] = v38;
  v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x40000000) != 0)
    goto LABEL_78;
LABEL_41:
  if ((v5 & 0x80000000) == 0)
    goto LABEL_42;
LABEL_79:
  v40 = *(_DWORD *)(a2 + 132);
  a1[37] |= 0x80000000;
  a1[33] = v40;
LABEL_42:
  LOBYTE(v9) = *(_BYTE *)(a2 + 152);
  if ((_BYTE)v9)
  {
    if ((*(_BYTE *)(a2 + 152) & 1) != 0)
    {
      v10 = *(_DWORD *)(a2 + 136);
      a1[38] |= 1u;
      a1[34] = v10;
      v9 = *(_DWORD *)(a2 + 152);
    }
    if ((v9 & 2) != 0)
    {
      v11 = *(_DWORD *)(a2 + 140);
      a1[38] |= 2u;
      a1[35] = v11;
    }
  }
}

void sub_1008F5F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F5FA8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D270;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F5FB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D270;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008F5FE8()
{
  operator new();
}

uint64_t sub_1008F6048(uint64_t result)
{
  unsigned int v1;

  v1 = *(_DWORD *)(result + 148);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
  }
  if (*(_BYTE *)(result + 152))
    *(_QWORD *)(result + 136) = 0;
  *(_QWORD *)(result + 148) = 0;
  return result;
}

uint64_t sub_1008F60B0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  unsigned int v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  unint64_t v43;
  unsigned __int8 *v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  char *v52;
  unsigned int v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  unsigned int v57;
  _BYTE *v58;
  unsigned int v59;
  _BYTE *v60;
  unsigned int v61;
  _BYTE *v62;
  unsigned int v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  unsigned int v67;
  _BYTE *v68;
  unsigned int v69;
  _BYTE *v70;
  unsigned int v71;
  _BYTE *v72;
  unsigned int v73;
  _BYTE *v74;
  unsigned int v75;
  unsigned __int8 *v76;
  unsigned __int8 *v77;
  unsigned int v78;
  unsigned __int8 *v79;
  unsigned int v80;
  unsigned __int8 *v81;
  unsigned int v82;
  unsigned __int8 *v83;
  unsigned int v84;
  unsigned __int8 *v85;
  unsigned __int8 *v86;
  unsigned __int8 *v87;
  unsigned __int8 *v88;
  unsigned int v89;
  unsigned __int8 *v90;
  unsigned __int8 *v91;
  unsigned __int8 *v92;
  unsigned __int8 *v93;
  unsigned int v94;
  unsigned __int8 *v95;
  unsigned __int8 *v96;
  unsigned __int8 *v97;
  unsigned __int8 *v98;
  unsigned __int8 *v99;
  unsigned __int8 *v100;
  unsigned __int8 *v101;
  uint64_t result;
  unsigned int *v103;
  unsigned int *v104;
  unsigned int *v105;
  unsigned int *v106;
  unsigned int *v107;
  unsigned int *v108;
  unsigned int *v109;
  unsigned int *v110;
  unsigned int *v111;
  unsigned int *v112;
  unsigned int v113;

  v5 = a1 + 4;
  v6 = a1 + 5;
  v7 = a1 + 10;
  v8 = a1 + 11;
  v9 = a1 + 17;
  v111 = a1 + 23;
  v112 = a1 + 22;
  v109 = a1 + 26;
  v110 = a1 + 24;
  v107 = a1 + 28;
  v108 = a1 + 27;
  v105 = a1 + 31;
  v106 = a1 + 30;
  v103 = a1 + 33;
  v104 = a1 + 32;
  v10 = a1 + 34;
  v11 = a1 + 35;
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v113 = 0;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          v17 = *v16;
          v18 = v16 + 1;
          *((_QWORD *)this + 1) = v18;
LABEL_84:
          a1[2] = v17;
          a1[37] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            v19 = v18 + 1;
            *((_QWORD *)this + 1) = v19;
            goto LABEL_87;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
        if ((_DWORD)result)
        {
          v17 = v113;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_84;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_87:
        v113 = 0;
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v53 = v113;
          v54 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v53 = *v19;
          v54 = v19 + 1;
          *((_QWORD *)this + 1) = v54;
        }
        a1[3] = v53;
        a1[37] |= 2u;
        if ((unint64_t)v54 >= v15 || *v54 != 24)
          continue;
        v20 = v54 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_95:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v55 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v20;
          v55 = v20 + 1;
          *((_QWORD *)this + 1) = v55;
        }
        a1[37] |= 4u;
        if ((unint64_t)v55 >= v15 || *v55 != 32)
          continue;
        v21 = v55 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_103:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v56 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v21;
          v56 = v21 + 1;
          *((_QWORD *)this + 1) = v56;
        }
        a1[37] |= 8u;
        if ((unint64_t)v56 >= v15 || *v56 != 40)
          continue;
        v22 = v56 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_111:
        v113 = 0;
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v57 = v113;
          v58 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v57 = *v22;
          v58 = v22 + 1;
          *((_QWORD *)this + 1) = v58;
        }
        a1[6] = v57;
        a1[37] |= 0x10u;
        if ((unint64_t)v58 >= v15 || *v58 != 48)
          continue;
        v23 = v58 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_119:
        v113 = 0;
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v59 = v113;
          v60 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v59 = *v23;
          v60 = v23 + 1;
          *((_QWORD *)this + 1) = v60;
        }
        a1[7] = v59;
        a1[37] |= 0x20u;
        if ((unint64_t)v60 >= v15 || *v60 != 56)
          continue;
        v24 = v60 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_127:
        v113 = 0;
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v61 = v113;
          v62 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v61 = *v24;
          v62 = v24 + 1;
          *((_QWORD *)this + 1) = v62;
        }
        a1[8] = v61;
        a1[37] |= 0x40u;
        if ((unint64_t)v62 >= v15 || *v62 != 64)
          continue;
        v25 = v62 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_135:
        v113 = 0;
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v63 = v113;
          v64 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v63 = *v25;
          v64 = v25 + 1;
          *((_QWORD *)this + 1) = v64;
        }
        a1[9] = v63;
        a1[37] |= 0x80u;
        if ((unint64_t)v64 >= v15 || *v64 != 72)
          continue;
        v26 = v64 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_143:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v65 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v26;
          v65 = v26 + 1;
          *((_QWORD *)this + 1) = v65;
        }
        a1[37] |= 0x100u;
        if ((unint64_t)v65 >= v15 || *v65 != 80)
          continue;
        v27 = v65 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_151:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v66 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v27;
          v66 = v27 + 1;
          *((_QWORD *)this + 1) = v66;
        }
        a1[37] |= 0x200u;
        if ((unint64_t)v66 >= v15 || *v66 != 88)
          continue;
        v28 = v66 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_159:
        v113 = 0;
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v67 = v113;
          v68 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v67 = *v28;
          v68 = v28 + 1;
          *((_QWORD *)this + 1) = v68;
        }
        a1[12] = v67;
        a1[37] |= 0x400u;
        if ((unint64_t)v68 >= v15 || *v68 != 96)
          continue;
        v29 = v68 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_167:
        v113 = 0;
        if ((unint64_t)v29 >= v15 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v69 = v113;
          v70 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v69 = *v29;
          v70 = v29 + 1;
          *((_QWORD *)this + 1) = v70;
        }
        a1[13] = v69;
        a1[37] |= 0x800u;
        if ((unint64_t)v70 >= v15 || *v70 != 104)
          continue;
        v30 = v70 + 1;
        *((_QWORD *)this + 1) = v30;
LABEL_175:
        v113 = 0;
        if ((unint64_t)v30 >= v15 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v71 = v113;
          v72 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v71 = *v30;
          v72 = v30 + 1;
          *((_QWORD *)this + 1) = v72;
        }
        a1[14] = v71;
        a1[37] |= 0x1000u;
        if ((unint64_t)v72 >= v15 || *v72 != 112)
          continue;
        v31 = v72 + 1;
        *((_QWORD *)this + 1) = v31;
LABEL_183:
        v113 = 0;
        if ((unint64_t)v31 >= v15 || *v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v73 = v113;
          v74 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v73 = *v31;
          v74 = v31 + 1;
          *((_QWORD *)this + 1) = v74;
        }
        a1[15] = v73;
        a1[37] |= 0x2000u;
        if ((unint64_t)v74 >= v15 || *v74 != 120)
          continue;
        v32 = v74 + 1;
        *((_QWORD *)this + 1) = v32;
LABEL_191:
        v113 = 0;
        if ((unint64_t)v32 >= v15 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v75 = v113;
          v76 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v75 = *v32;
          v76 = v32 + 1;
          *((_QWORD *)this + 1) = v76;
        }
        a1[16] = v75;
        a1[37] |= 0x4000u;
        if ((int)v15 - (int)v76 < 2 || *v76 != 128 || v76[1] != 1)
          continue;
        v33 = v76 + 2;
        *((_QWORD *)this + 1) = v33;
LABEL_200:
        if ((unint64_t)v33 >= v15 || (char)*v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v77 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v33;
          v77 = v33 + 1;
          *((_QWORD *)this + 1) = v77;
        }
        a1[37] |= 0x8000u;
        if ((int)v15 - (int)v77 < 2 || *v77 != 136 || v77[1] != 1)
          continue;
        v34 = v77 + 2;
        *((_QWORD *)this + 1) = v34;
LABEL_209:
        v113 = 0;
        if ((unint64_t)v34 >= v15 || (char)*v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v78 = v113;
          v79 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v78 = *v34;
          v79 = v34 + 1;
          *((_QWORD *)this + 1) = v79;
        }
        a1[18] = v78;
        a1[37] |= 0x10000u;
        if ((int)v15 - (int)v79 < 2 || *v79 != 144 || v79[1] != 1)
          continue;
        v35 = v79 + 2;
        *((_QWORD *)this + 1) = v35;
LABEL_218:
        v113 = 0;
        if ((unint64_t)v35 >= v15 || (char)*v35 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v80 = v113;
          v81 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v80 = *v35;
          v81 = v35 + 1;
          *((_QWORD *)this + 1) = v81;
        }
        a1[19] = v80;
        a1[37] |= 0x20000u;
        if ((int)v15 - (int)v81 < 2 || *v81 != 152 || v81[1] != 1)
          continue;
        v36 = v81 + 2;
        *((_QWORD *)this + 1) = v36;
LABEL_227:
        v113 = 0;
        if ((unint64_t)v36 >= v15 || (char)*v36 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v82 = v113;
          v83 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v82 = *v36;
          v83 = v36 + 1;
          *((_QWORD *)this + 1) = v83;
        }
        a1[20] = v82;
        a1[37] |= 0x40000u;
        if ((int)v15 - (int)v83 < 2 || *v83 != 160 || v83[1] != 1)
          continue;
        v37 = v83 + 2;
        *((_QWORD *)this + 1) = v37;
LABEL_236:
        v113 = 0;
        if ((unint64_t)v37 >= v15 || (char)*v37 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v84 = v113;
          v85 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v84 = *v37;
          v85 = v37 + 1;
          *((_QWORD *)this + 1) = v85;
        }
        a1[21] = v84;
        a1[37] |= 0x80000u;
        if ((int)v15 - (int)v85 < 2 || *v85 != 168 || v85[1] != 1)
          continue;
        v38 = v85 + 2;
        *((_QWORD *)this + 1) = v38;
LABEL_245:
        if ((unint64_t)v38 >= v15 || (char)*v38 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result)
            return result;
          v86 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v112 = *v38;
          v86 = v38 + 1;
          *((_QWORD *)this + 1) = v86;
        }
        a1[37] |= 0x100000u;
        if ((int)v15 - (int)v86 < 2 || *v86 != 176 || v86[1] != 1)
          continue;
        v39 = v86 + 2;
        *((_QWORD *)this + 1) = v39;
LABEL_254:
        if ((unint64_t)v39 >= v15 || (char)*v39 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v111);
          if (!(_DWORD)result)
            return result;
          v87 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v111 = *v39;
          v87 = v39 + 1;
          *((_QWORD *)this + 1) = v87;
        }
        a1[37] |= 0x200000u;
        if ((int)v15 - (int)v87 < 2 || *v87 != 184 || v87[1] != 1)
          continue;
        v40 = v87 + 2;
        *((_QWORD *)this + 1) = v40;
LABEL_263:
        if ((unint64_t)v40 >= v15 || (char)*v40 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v110);
          if (!(_DWORD)result)
            return result;
          v88 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v110 = *v40;
          v88 = v40 + 1;
          *((_QWORD *)this + 1) = v88;
        }
        a1[37] |= 0x400000u;
        if ((int)v15 - (int)v88 < 2 || *v88 != 192 || v88[1] != 1)
          continue;
        v41 = v88 + 2;
        *((_QWORD *)this + 1) = v41;
LABEL_272:
        v113 = 0;
        if ((unint64_t)v41 >= v15 || (char)*v41 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v89 = v113;
          v90 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          v89 = *v41;
          v90 = v41 + 1;
          *((_QWORD *)this + 1) = v90;
        }
        a1[25] = v89;
        a1[37] |= 0x800000u;
        if ((int)v15 - (int)v90 < 2 || *v90 != 200 || v90[1] != 1)
          continue;
        v42 = v90 + 2;
        *((_QWORD *)this + 1) = v42;
LABEL_281:
        v43 = *((_QWORD *)this + 2);
        if ((unint64_t)v42 >= v43 || (char)*v42 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v109);
          if (!(_DWORD)result)
            return result;
          v91 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v109 = *v42;
          v91 = v42 + 1;
          *((_QWORD *)this + 1) = v91;
        }
        a1[37] |= 0x1000000u;
        if ((int)v43 - (int)v91 < 2 || *v91 != 208 || v91[1] != 1)
          continue;
        v44 = v91 + 2;
        *((_QWORD *)this + 1) = v44;
LABEL_290:
        if ((unint64_t)v44 >= v43 || (char)*v44 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!(_DWORD)result)
            return result;
          v92 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v108 = *v44;
          v92 = v44 + 1;
          *((_QWORD *)this + 1) = v92;
        }
        a1[37] |= 0x2000000u;
        if ((int)v43 - (int)v92 < 2 || *v92 != 216 || v92[1] != 1)
          continue;
        v45 = v92 + 2;
        *((_QWORD *)this + 1) = v45;
LABEL_299:
        if ((unint64_t)v45 >= v43 || (char)*v45 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!(_DWORD)result)
            return result;
          v93 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v107 = *v45;
          v93 = v45 + 1;
          *((_QWORD *)this + 1) = v93;
        }
        a1[37] |= 0x4000000u;
        if ((int)v43 - (int)v93 < 2 || *v93 != 224 || v93[1] != 1)
          continue;
        v46 = v93 + 2;
        *((_QWORD *)this + 1) = v46;
LABEL_308:
        v113 = 0;
        if ((unint64_t)v46 >= v43 || (char)*v46 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!(_DWORD)result)
            return result;
          v94 = v113;
          v95 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          v94 = *v46;
          v95 = v46 + 1;
          *((_QWORD *)this + 1) = v95;
        }
        a1[29] = v94;
        a1[37] |= 0x8000000u;
        if ((int)v43 - (int)v95 < 2 || *v95 != 232 || v95[1] != 1)
          continue;
        v47 = v95 + 2;
        *((_QWORD *)this + 1) = v47;
LABEL_317:
        if ((unint64_t)v47 >= v43 || (char)*v47 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!(_DWORD)result)
            return result;
          v96 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v106 = *v47;
          v96 = v47 + 1;
          *((_QWORD *)this + 1) = v96;
        }
        a1[37] |= 0x10000000u;
        if ((int)v43 - (int)v96 < 2 || *v96 != 240 || v96[1] != 1)
          continue;
        v48 = v96 + 2;
        *((_QWORD *)this + 1) = v48;
LABEL_326:
        if ((unint64_t)v48 >= v43 || (char)*v48 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v105);
          if (!(_DWORD)result)
            return result;
          v97 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v105 = *v48;
          v97 = v48 + 1;
          *((_QWORD *)this + 1) = v97;
        }
        a1[37] |= 0x20000000u;
        if ((int)v43 - (int)v97 < 2 || *v97 != 248 || v97[1] != 1)
          continue;
        v49 = v97 + 2;
        *((_QWORD *)this + 1) = v49;
LABEL_335:
        if ((unint64_t)v49 >= v43 || (char)*v49 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v104);
          if (!(_DWORD)result)
            return result;
          v98 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v104 = *v49;
          v98 = v49 + 1;
          *((_QWORD *)this + 1) = v98;
        }
        a1[37] |= 0x40000000u;
        if ((int)v43 - (int)v98 < 2 || *v98 != 128 || v98[1] != 2)
          continue;
        v50 = v98 + 2;
        *((_QWORD *)this + 1) = v50;
LABEL_344:
        if ((unint64_t)v50 >= v43 || (char)*v50 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v103);
          if (!(_DWORD)result)
            return result;
          v99 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v103 = *v50;
          v99 = v50 + 1;
          *((_QWORD *)this + 1) = v99;
        }
        a1[37] |= 0x80000000;
        if ((int)v43 - (int)v99 < 2 || *v99 != 136 || v99[1] != 2)
          continue;
        v51 = v99 + 2;
        *((_QWORD *)this + 1) = v51;
LABEL_353:
        if ((unint64_t)v51 >= v43 || (char)*v51 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v100 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v51;
          v100 = v51 + 1;
          *((_QWORD *)this + 1) = v100;
        }
        a1[38] |= 1u;
        if ((int)v43 - (int)v100 < 2 || *v100 != 144 || v100[1] != 2)
          continue;
        v52 = (char *)(v100 + 2);
        *((_QWORD *)this + 1) = v52;
LABEL_362:
        if ((unint64_t)v52 >= v43 || *v52 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v101 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v43 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v52;
          v101 = (unsigned __int8 *)(v52 + 1);
          *((_QWORD *)this + 1) = v101;
        }
        a1[38] |= 2u;
        if (v101 != (unsigned __int8 *)v43
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v22 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v23 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_119;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v24 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_127;
      case 8u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v25 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_135;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v26 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_143;
      case 0xAu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v27 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_151;
      case 0xBu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v28 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_159;
      case 0xCu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v29 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_167;
      case 0xDu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v30 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_175;
      case 0xEu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v31 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_183;
      case 0xFu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v32 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_191;
      case 0x10u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v33 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_200;
      case 0x11u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v34 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_209;
      case 0x12u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v35 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_218;
      case 0x13u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v36 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_227;
      case 0x14u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v37 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_236;
      case 0x15u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v38 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_245;
      case 0x16u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v39 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_254;
      case 0x17u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v40 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_263;
      case 0x18u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_272;
      case 0x19u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v42 = (unsigned __int8 *)*((_QWORD *)this + 1);
        goto LABEL_281;
      case 0x1Au:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v44 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_290;
      case 0x1Bu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v45 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_299;
      case 0x1Cu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v46 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_308;
      case 0x1Du:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v47 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_317;
      case 0x1Eu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v48 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_326;
      case 0x1Fu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v49 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_335;
      case 0x20u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v50 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_344;
      case 0x21u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v51 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_353;
      case 0x22u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v52 = (char *)*((_QWORD *)this + 1);
        v43 = *((_QWORD *)this + 2);
        goto LABEL_362;
      default:
        v14 = TagFallback & 7;
LABEL_78:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008F72B8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;
  int v7;

  v5 = result;
  v6 = result[37];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[37];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_39;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[37];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_40;
  }
LABEL_39:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[37];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_41;
  }
LABEL_40:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_42;
  }
LABEL_41:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_43;
  }
LABEL_42:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_44;
  }
LABEL_43:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_45;
  }
LABEL_44:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_46;
  }
LABEL_45:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_47;
  }
LABEL_46:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_48;
  }
LABEL_47:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_49;
  }
LABEL_48:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_50;
  }
LABEL_49:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_51;
  }
LABEL_50:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_52;
  }
LABEL_51:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_53;
  }
LABEL_52:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_54;
  }
LABEL_53:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[18], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_55;
  }
LABEL_54:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[19], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_56;
  }
LABEL_55:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[20], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_57;
  }
LABEL_56:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v5[21], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_58;
  }
LABEL_57:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v5[22], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_59;
  }
LABEL_58:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v5[23], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_60;
  }
LABEL_59:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v5[24], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_61;
  }
LABEL_60:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v5[25], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_62;
  }
LABEL_61:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v5[26], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_63;
  }
LABEL_62:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v5[27], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_64;
  }
LABEL_63:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v5[28], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_65;
  }
LABEL_64:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v5[29], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_66;
  }
LABEL_65:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v5[30], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
LABEL_67:
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v5[32], a2, a4);
    if ((v5[37] & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_68;
  }
LABEL_66:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v5[31], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x40000000) != 0)
    goto LABEL_67;
LABEL_32:
  if ((v6 & 0x80000000) == 0)
    goto LABEL_33;
LABEL_68:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v5[33], a2, a4);
LABEL_33:
  v7 = v5[38];
  if ((v7 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v5[34], a2, a4);
    v7 = v5[38];
  }
  if ((v7 & 2) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v5[35], a2, a4);
  return result;
}

uint64_t sub_1008F7690(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v47;
  int v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  int v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v57;
  int v58;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v59;
  int v60;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v61;
  int v62;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v63;
  int v64;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v65;
  int v66;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v67;
  int v68;
  int v69;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v70;
  int v71;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v72;
  int v73;

  v3 = *(_DWORD *)(a1 + 148);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_57;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v10 = 1;
    }
    v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v12 = 1;
  }
  v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_39;
  }
LABEL_33:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v13 & 0x80000000) != 0)
  {
    v14 = 10;
  }
  else if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v14 = 1;
  }
  v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_45;
  }
LABEL_39:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if ((v15 & 0x80000000) != 0)
  {
    v16 = 10;
  }
  else if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v16 = 1;
  }
  v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0)
      goto LABEL_57;
    goto LABEL_51;
  }
LABEL_45:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v17 & 0x80000000) != 0)
  {
    v18 = 10;
  }
  else if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v18 = 1;
  }
  v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_51:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if ((v19 & 0x80000000) != 0)
    {
      v20 = 10;
    }
    else if (v19 >= 0x80)
    {
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v20 = 1;
    }
    v4 = (v4 + v20 + 1);
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_109;
  if ((v3 & 0x100) != 0)
  {
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v22 = 1;
    }
    v4 = (v4 + v22 + 1);
    if ((v3 & 0x200) == 0)
    {
LABEL_60:
      if ((v3 & 0x400) == 0)
        goto LABEL_61;
      goto LABEL_75;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v24 = 1;
  }
  v4 = (v4 + v24 + 1);
  if ((v3 & 0x400) == 0)
  {
LABEL_61:
    if ((v3 & 0x800) == 0)
      goto LABEL_62;
    goto LABEL_81;
  }
LABEL_75:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v25 & 0x80000000) != 0)
  {
    v26 = 10;
  }
  else if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v26 = 1;
  }
  v4 = (v4 + v26 + 1);
  if ((v3 & 0x800) == 0)
  {
LABEL_62:
    if ((v3 & 0x1000) == 0)
      goto LABEL_63;
    goto LABEL_87;
  }
LABEL_81:
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v27 & 0x80000000) != 0)
  {
    v28 = 10;
  }
  else if (v27 >= 0x80)
  {
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v28 = 1;
  }
  v4 = (v4 + v28 + 1);
  if ((v3 & 0x1000) == 0)
  {
LABEL_63:
    if ((v3 & 0x2000) == 0)
      goto LABEL_64;
    goto LABEL_93;
  }
LABEL_87:
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v29 & 0x80000000) != 0)
  {
    v30 = 10;
  }
  else if (v29 >= 0x80)
  {
    v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v30 = 1;
  }
  v4 = (v4 + v30 + 1);
  if ((v3 & 0x2000) == 0)
  {
LABEL_64:
    if ((v3 & 0x4000) == 0)
      goto LABEL_65;
    goto LABEL_99;
  }
LABEL_93:
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
  if ((v31 & 0x80000000) != 0)
  {
    v32 = 10;
  }
  else if (v31 >= 0x80)
  {
    v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v32 = 1;
  }
  v4 = (v4 + v32 + 1);
  if ((v3 & 0x4000) == 0)
  {
LABEL_65:
    if ((v3 & 0x8000) == 0)
      goto LABEL_109;
    goto LABEL_105;
  }
LABEL_99:
  v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if ((v33 & 0x80000000) != 0)
  {
    v34 = 10;
  }
  else if (v33 >= 0x80)
  {
    v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v34 = 1;
  }
  v4 = (v4 + v34 + 1);
  if ((v3 & 0x8000) != 0)
  {
LABEL_105:
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if (v35 >= 0x80)
    {
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v36 = 1;
    }
    v4 = (v4 + v36 + 2);
  }
LABEL_109:
  if ((v3 & 0xFF0000) == 0)
    goto LABEL_161;
  if ((v3 & 0x10000) != 0)
  {
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v37 & 0x80000000) != 0)
    {
      v38 = 10;
    }
    else if (v37 >= 0x80)
    {
      v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v38 = 1;
    }
    v4 = (v4 + v38 + 2);
    if ((v3 & 0x20000) == 0)
    {
LABEL_112:
      if ((v3 & 0x40000) == 0)
        goto LABEL_113;
      goto LABEL_131;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_112;
  }
  v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
  if ((v39 & 0x80000000) != 0)
  {
    v40 = 10;
  }
  else if (v39 >= 0x80)
  {
    v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v40 = 1;
  }
  v4 = (v4 + v40 + 2);
  if ((v3 & 0x40000) == 0)
  {
LABEL_113:
    if ((v3 & 0x80000) == 0)
      goto LABEL_114;
    goto LABEL_137;
  }
LABEL_131:
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
  if ((v41 & 0x80000000) != 0)
  {
    v42 = 10;
  }
  else if (v41 >= 0x80)
  {
    v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v42 = 1;
  }
  v4 = (v4 + v42 + 2);
  if ((v3 & 0x80000) == 0)
  {
LABEL_114:
    if ((v3 & 0x100000) == 0)
      goto LABEL_115;
    goto LABEL_143;
  }
LABEL_137:
  v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if ((v43 & 0x80000000) != 0)
  {
    v44 = 10;
  }
  else if (v43 >= 0x80)
  {
    v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v44 = 1;
  }
  v4 = (v4 + v44 + 2);
  if ((v3 & 0x100000) == 0)
  {
LABEL_115:
    if ((v3 & 0x200000) == 0)
      goto LABEL_116;
    goto LABEL_147;
  }
LABEL_143:
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
  if (v45 >= 0x80)
  {
    v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v46 = 1;
  }
  v4 = (v4 + v46 + 2);
  if ((v3 & 0x200000) == 0)
  {
LABEL_116:
    if ((v3 & 0x400000) == 0)
      goto LABEL_117;
    goto LABEL_151;
  }
LABEL_147:
  v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
  if (v47 >= 0x80)
  {
    v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v48 = 1;
  }
  v4 = (v4 + v48 + 2);
  if ((v3 & 0x400000) == 0)
  {
LABEL_117:
    if ((v3 & 0x800000) == 0)
      goto LABEL_161;
    goto LABEL_155;
  }
LABEL_151:
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if (v49 >= 0x80)
  {
    v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v50 = 1;
  }
  v4 = (v4 + v50 + 2);
  if ((v3 & 0x800000) != 0)
  {
LABEL_155:
    v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
    if ((v51 & 0x80000000) != 0)
    {
      v52 = 10;
    }
    else if (v51 >= 0x80)
    {
      v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v52 = 1;
    }
    v4 = (v4 + v52 + 2);
  }
LABEL_161:
  if (!HIBYTE(v3))
    goto LABEL_205;
  if ((v3 & 0x1000000) != 0)
  {
    v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
    if (v53 >= 0x80)
    {
      v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53, a2);
      v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v54 = 1;
    }
    v4 = (v4 + v54 + 2);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_164:
      if ((v3 & 0x4000000) == 0)
        goto LABEL_165;
      goto LABEL_179;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_164;
  }
  v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
  if (v55 >= 0x80)
  {
    v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v56 = 1;
  }
  v4 = (v4 + v56 + 2);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_165:
    if ((v3 & 0x8000000) == 0)
      goto LABEL_166;
    goto LABEL_183;
  }
LABEL_179:
  v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 112);
  if (v57 >= 0x80)
  {
    v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57, a2);
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v58 = 1;
  }
  v4 = (v4 + v58 + 2);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_166:
    if ((v3 & 0x10000000) == 0)
      goto LABEL_167;
    goto LABEL_189;
  }
LABEL_183:
  v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
  if ((v59 & 0x80000000) != 0)
  {
    v60 = 12;
  }
  else if (v59 >= 0x80)
  {
    v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59, a2) + 2;
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v60 = 3;
  }
  v4 = (v60 + v4);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_167:
    if ((v3 & 0x20000000) == 0)
      goto LABEL_168;
    goto LABEL_193;
  }
LABEL_189:
  v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
  if (v61 >= 0x80)
  {
    v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61, a2) + 2;
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v62 = 3;
  }
  v4 = (v62 + v4);
  if ((v3 & 0x20000000) == 0)
  {
LABEL_168:
    if ((v3 & 0x40000000) == 0)
      goto LABEL_169;
    goto LABEL_197;
  }
LABEL_193:
  v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
  if (v63 >= 0x80)
  {
    v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63, a2) + 2;
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v64 = 3;
  }
  v4 = (v64 + v4);
  if ((v3 & 0x40000000) == 0)
  {
LABEL_169:
    if ((v3 & 0x80000000) == 0)
      goto LABEL_205;
    goto LABEL_201;
  }
LABEL_197:
  v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
  if (v65 >= 0x80)
  {
    v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65, a2) + 2;
    v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v66 = 3;
  }
  v4 = (v66 + v4);
  if ((v3 & 0x80000000) != 0)
  {
LABEL_201:
    v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 132);
    if (v67 >= 0x80)
      v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67, a2) + 2;
    else
      v68 = 3;
    v4 = (v68 + v4);
  }
LABEL_205:
  LOBYTE(v69) = *(_BYTE *)(a1 + 152);
  if ((_BYTE)v69)
  {
    if ((*(_BYTE *)(a1 + 152) & 1) != 0)
    {
      v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
      if (v70 >= 0x80)
      {
        v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70, a2) + 2;
        v69 = *(_DWORD *)(a1 + 152);
      }
      else
      {
        v71 = 3;
      }
      v4 = (v71 + v4);
    }
    if ((v69 & 2) != 0)
    {
      v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
      if (v72 >= 0x80)
        v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72, a2) + 2;
      else
        v73 = 3;
      v4 = (v73 + v4);
    }
  }
  *(_DWORD *)(a1 + 144) = v4;
  return v4;
}

void sub_1008F7D7C(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F5AC8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F7DC8()
{
  return 1;
}

_QWORD *sub_1008F7DD0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsEphemeris");
}

void sub_1008F7DE0(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  char v15;
  _BYTE v16[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v16, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 27446);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v5);
      v7 = a1[5];
      v8 = (int)a1[4];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v7 + 1);
          v7 = a1[5];
        }
        a1[5] = v7 + 1;
        operator new();
      }
      v9 = *((_QWORD *)a1 + 1);
      a1[4] = v8 + 1;
      sub_1008F5AC8(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 16));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v10)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      v11 = *(_DWORD *)(a2 + 32);
      a1[13] |= 1u;
      a1[8] = v11;
      v10 = *(_DWORD *)(a2 + 52);
    }
    if ((v10 & 4) != 0)
    {
      v12 = *(_DWORD *)(a2 + 36);
      if (v12 >= 6)
        sub_10190E840();
      a1[13] |= 4u;
      a1[9] = v12;
      v10 = *(_DWORD *)(a2 + 52);
    }
    if ((v10 & 8) != 0)
    {
      v13 = *(_DWORD *)(a2 + 40);
      if (v13 >= 7)
        sub_10190E818();
      a1[13] |= 8u;
      a1[10] = v13;
      v10 = *(_DWORD *)(a2 + 52);
    }
    if ((v10 & 0x10) != 0)
    {
      v14 = *(_DWORD *)(a2 + 44);
      a1[13] |= 0x10u;
      a1[11] = v14;
    }
  }
}

void sub_1008F7FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F7FF4(uint64_t *a1)
{
  *a1 = (uint64_t)off_10215D2E8;
  sub_10010C59C(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008F802C(uint64_t *a1)
{
  sub_1008F7FF4(a1);
  operator delete();
}

uint64_t sub_1008F8050(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FB8;
  if (!qword_102310FB8)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FB8;
  }
  return result;
}

void sub_1008F807C()
{
  operator new();
}

uint64_t sub_1008F80C0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 52))
  {
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
  }
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1008F8124(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v10;
  char *v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t result;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  BOOL v31;
  int v32;
  int v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned __int8 *v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;

  v5 = a1 + 8;
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  v7 = a1 + 11;
LABEL_2:
  while (2)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 >= v12 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)this + 1) = v13;
        }
        a1[13] |= 1u;
        if ((unint64_t)v13 >= v12 || *v13 != 18)
          continue;
        goto LABEL_28;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_20;
        while (2)
        {
          v21 = a1[5];
          v22 = (int)a1[4];
          if ((int)v22 >= v21)
          {
            if (v21 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v21 + 1);
              v21 = a1[5];
            }
            a1[5] = v21 + 1;
            operator new();
          }
          v23 = *((_QWORD *)a1 + 1);
          a1[4] = v22 + 1;
          v24 = *(unsigned int **)(v23 + 8 * v22);
          v41 = 0;
          v25 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0;
          }
          else
          {
            v41 = *v25;
            *((_QWORD *)this + 1) = v25 + 1;
          }
          v26 = *((_DWORD *)this + 14);
          v27 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v26 + 1;
          if (v26 < v27)
          {
            v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
            if (sub_1008F60B0(v24, this, v29))
            {
              if (*((_BYTE *)this + 36))
              {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
                v30 = *((_DWORD *)this + 14);
                v31 = __OFSUB__(v30, 1);
                v32 = v30 - 1;
                if (v32 < 0 == v31)
                  *((_DWORD *)this + 14) = v32;
                v13 = (_BYTE *)*((_QWORD *)this + 1);
                v15 = *((_QWORD *)this + 2);
                if ((unint64_t)v13 < v15)
                {
                  v33 = *v13;
                  if (v33 == 18)
                  {
LABEL_28:
                    *((_QWORD *)this + 1) = v13 + 1;
                    continue;
                  }
                  if (v33 == 24)
                  {
                    v14 = v13 + 1;
                    *((_QWORD *)this + 1) = v14;
LABEL_47:
                    v40 = 0;
                    if ((unint64_t)v14 >= v15 || *v14 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
                      if (!(_DWORD)result)
                        return result;
                      v34 = v40;
                    }
                    else
                    {
                      v34 = *v14;
                      *((_QWORD *)this + 1) = v14 + 1;
                    }
                    if (v34 <= 5)
                    {
                      a1[13] |= 4u;
                      a1[9] = v34;
                    }
                    v35 = (_BYTE *)*((_QWORD *)this + 1);
                    v16 = *((_QWORD *)this + 2);
                    if ((unint64_t)v35 < v16 && *v35 == 32)
                    {
                      v17 = v35 + 1;
                      *((_QWORD *)this + 1) = v17;
LABEL_57:
                      v39 = 0;
                      if ((unint64_t)v17 >= v16 || *v17 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
                        if (!(_DWORD)result)
                          return result;
                        v36 = v39;
                      }
                      else
                      {
                        v36 = *v17;
                        *((_QWORD *)this + 1) = v17 + 1;
                      }
                      if (v36 <= 6)
                      {
                        a1[13] |= 8u;
                        a1[10] = v36;
                      }
                      v37 = (_BYTE *)*((_QWORD *)this + 1);
                      v18 = *((_QWORD *)this + 2);
                      if ((unint64_t)v37 < v18 && *v37 == 40)
                      {
                        v19 = v37 + 1;
                        *((_QWORD *)this + 1) = v19;
LABEL_67:
                        if ((unint64_t)v19 >= v18 || *v19 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                          if (!(_DWORD)result)
                            return result;
                          v38 = (unsigned __int8 *)*((_QWORD *)this + 1);
                          v18 = *((_QWORD *)this + 2);
                        }
                        else
                        {
                          *v7 = *v19;
                          v38 = (unsigned __int8 *)(v19 + 1);
                          *((_QWORD *)this + 1) = v38;
                        }
                        a1[13] |= 0x10u;
                        if (v38 == (unsigned __int8 *)v18
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          result = 1;
                          *((_BYTE *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
                goto LABEL_2;
              }
            }
          }
          return 0;
        }
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v19 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_67;
      default:
        v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008F8578(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = result;
  if ((*(_BYTE *)(result + 52) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 4) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 36), (int)a2, a4);
    v7 = *(_DWORD *)(v5 + 52);
    if ((v7 & 8) == 0)
    {
LABEL_8:
      if ((v7 & 0x10) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 44), a2, a4);
    }
  }
  else if ((v7 & 8) == 0)
  {
    goto LABEL_8;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 44), a2, a4);
  return result;
}

uint64_t sub_1008F8648(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;

  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_29;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 4) == 0)
        goto LABEL_16;
    }
    else
    {
      v4 = 2;
      if ((v3 & 4) == 0)
        goto LABEL_16;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      goto LABEL_16;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v7 = 2;
  }
  v4 += v7;
LABEL_16:
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0)
      goto LABEL_29;
    goto LABEL_25;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v8 & 0x80000000) != 0)
  {
    v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v9 = 2;
  }
  v4 += v9;
  if ((v3 & 0x10) != 0)
  {
LABEL_25:
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v10 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    else
      v11 = 2;
    v4 += v11;
  }
LABEL_29:
  v12 = *(_DWORD *)(a1 + 16);
  v13 = (v12 + v4);
  if (v12 >= 1)
  {
    v14 = 0;
    do
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F7690(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v14), a2);
      v16 = (int)v15;
      if (v15 >= 0x80)
        v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      else
        v17 = 1;
      v13 = (v16 + v13 + v17);
      ++v14;
    }
    while (v14 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 48) = v13;
  return v13;
}

void sub_1008F87A0(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F7DE0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F87EC()
{
  return 1;
}

_QWORD *sub_1008F87F4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsNavigationModel");
}

void sub_1008F8804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v7, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 27625);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v6, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v5 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_BYTE *)(a1 + 8) = v5;
  }
}

void sub_1008F888C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F88A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D360;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F88B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D360;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008F88E4()
{
  operator new();
}

uint64_t sub_1008F8920(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008F8934(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  uint64_t result;
  unsigned int v12;

  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v12 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      v7 = *((_QWORD *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!(_DWORD)result)
          return result;
        v9 = v12;
        v10 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
      }
      else
      {
        v9 = *v8;
        v10 = (unsigned __int8 *)(v8 + 1);
        *((_QWORD *)this + 1) = v10;
      }
      *(_BYTE *)(a1 + 8) = v9 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1008F8A50(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_1008F8A6C(uint64_t a1)
{
  uint64_t v1;

  if (*(_DWORD *)(a1 + 16))
    v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  else
    v1 = 0;
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_1008F8A88(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F8804(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F8AD4()
{
  return 1;
}

_QWORD *sub_1008F8ADC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CplaneConfig");
}

void sub_1008F8AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 27839);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      v6 = *(_QWORD *)(a1 + 8);
      if (!v6)
        operator new();
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310FC8 + 8);
      sub_1008CA49C(v6, v7);
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      v8 = *(_QWORD *)(a1 + 16);
      if (!v8)
        operator new();
      v9 = *(_BYTE **)(a2 + 16);
      if (!v9)
        v9 = *(_BYTE **)(qword_102310FC8 + 16);
      sub_1008F924C(v8, v9);
    }
  }
}

void sub_1008F8C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008F8C38(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if ((_QWORD *)qword_102310FC8 != result)
  {
    v1 = result;
    v2 = result[1];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    result = (_QWORD *)v1[2];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008F8C94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D3D8;
  sub_1008F8C38(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F8CC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D3D8;
  sub_1008F8C38(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008F8D08(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FC8;
  if (!qword_102310FC8)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FC8;
  }
  return result;
}

void sub_1008F8D34()
{
  operator new();
}

uint64_t sub_1008F8D6C(uint64_t result)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v1) = *(_BYTE *)(result + 28);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      v2 = *(_QWORD *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_WORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        v1 = *(_DWORD *)(result + 28);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 16))
          *(_DWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008F8DBC(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008F8DD0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t result;
  unsigned int v27;
  unsigned int v28;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_17;
        *(_DWORD *)(a1 + 28) |= 1u;
        v8 = *(_QWORD *)(a1 + 8);
        if (!v8)
          operator new();
        v27 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0;
        }
        else
        {
          v27 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)this + 14);
        v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008CA618(v8, this, v13) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        v14 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)this + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 < *((_QWORD *)this + 2) && *v17 == 18)
        {
          *((_QWORD *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_17;
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      v18 = *(_QWORD *)(a1 + 16);
      if (!v18)
        operator new();
      v28 = 0;
      v19 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0;
      }
      else
      {
        v28 = *v19;
        *((_QWORD *)this + 1) = v19 + 1;
      }
      v20 = *((_DWORD *)this + 14);
      v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21)
        return 0;
      v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_1008FFB74(v18, this, v23) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      v24 = *((_DWORD *)this + 14);
      v15 = __OFSUB__(v24, 1);
      v25 = v24 - 1;
      if (v25 < 0 == v15)
        *((_DWORD *)this + 14) = v25;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008F90A8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310FC8 + 8);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310FC8 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008F9124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  unsigned int v9;
  int v10;
  int v11;

  if (!*(_BYTE *)(a1 + 28))
  {
    v2 = 0;
    goto LABEL_22;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v2 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_22;
    goto LABEL_16;
  }
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    v3 = *(_QWORD *)(qword_102310FC8 + 8);
  v4 = *(_DWORD *)(v3 + 24);
  v5 = 2 * (v4 & 1);
  if ((v4 & 2) != 0)
    v5 += 2;
  if ((v4 & 4) != 0)
    v5 |= 9u;
  if (*(_DWORD *)(v3 + 24))
    v6 = v5;
  else
    v6 = 0;
  *(_DWORD *)(v3 + 20) = v6;
  v2 = (v6 + 2);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_16:
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
      v7 = *(_QWORD *)(qword_102310FC8 + 16);
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FFEDC(v7);
    v10 = (int)v8;
    if (v8 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, v9);
    else
      v11 = 1;
    v2 = (v2 + v10 + v11 + 1);
  }
LABEL_22:
  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

void sub_1008F9200(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F8AEC(a1, (uint64_t)lpsrc);
}

void sub_1008F924C(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  _BYTE v11[48];

  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 32055);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      v7 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + 8) = v7;
      v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v9 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(_BYTE *)(a1 + 10) = v9;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      return;
LABEL_8:
    v6 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(_BYTE *)(a1 + 11) = v6;
  }
}

void sub_1008F933C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008F9354()
{
  return 1;
}

_QWORD *sub_1008F935C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CplaneContext");
}

void sub_1008F936C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  const std::string *v7;
  std::string *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v14[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v14, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 28123);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v7 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 2u;
    v8 = *(std::string **)(a1 + 8);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v8, v7);
    v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return;
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  v6 = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_BYTE *)(a1 + 32) = v6;
  v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_13:
  *(_DWORD *)(a1 + 40) |= 4u;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    operator new();
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
    v10 = *(_QWORD *)(qword_102310FD0 + 16);
  sub_1008F8804(v9, v10);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_18:
    *(_DWORD *)(a1 + 40) |= 8u;
    v11 = *(_QWORD *)(a1 + 24);
    if (!v11)
      operator new();
    v12 = *(_QWORD *)(a2 + 24);
    if (!v12)
      v12 = *(_QWORD *)(qword_102310FD0 + 24);
    sub_1008CBB7C(v11, v12);
  }
}

void sub_1008F9534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008F954C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = result;
  v2 = result[1];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    operator delete();
  }
  if ((_QWORD *)qword_102310FD0 != result)
  {
    v4 = result[2];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    result = (_QWORD *)v1[3];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008F95E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D450;
  sub_1008F954C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F9618(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D450;
  sub_1008F954C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008F965C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FD0;
  if (!qword_102310FD0)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FD0;
  }
  return result;
}

void sub_1008F9688()
{
  operator new();
}

uint64_t sub_1008F96D0(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v1 = result;
  v2 = *(_BYTE *)(result + 40);
  if (v2)
  {
    *(_BYTE *)(result + 32) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(result + 8);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    v4 = *(_DWORD *)(result + 40);
    if ((v4 & 4) != 0)
    {
      v5 = *(_QWORD *)(result + 16);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 16))
          *(_BYTE *)(v5 + 8) = 0;
        *(_DWORD *)(v5 + 16) = 0;
        v4 = *(_DWORD *)(result + 40);
      }
    }
    if ((v4 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
        result = sub_1008CBDBC(result);
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_1008F9768(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  int v12;
  uint64_t result;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;

  while (1)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 < *((_QWORD *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v34 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result)
            return result;
          v10 = v34;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v10 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)this + 1) = v11;
        }
        *(_BYTE *)(a1 + 32) = v10 != 0;
        v12 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v11 < v8 && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_17;
        v12 = *(_DWORD *)(a1 + 40);
LABEL_25:
        *(_DWORD *)(a1 + 40) = v12 | 2;
        v14 = *(void **)(a1 + 8);
        if (v14 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          operator new();
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v14);
        if (!(_DWORD)result)
          return result;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 != 26)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
LABEL_31:
        *(_DWORD *)(a1 + 40) |= 4u;
        v16 = *(_QWORD *)(a1 + 16);
        if (!v16)
          operator new();
        v35 = 0;
        v17 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0;
        }
        else
        {
          v35 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        if (!sub_1008F8934(v16, this, v21) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        v22 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)this + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 != 34)
          continue;
        *((_QWORD *)this + 1) = v25 + 1;
LABEL_45:
        *(_DWORD *)(a1 + 40) |= 8u;
        v26 = *(_QWORD *)(a1 + 24);
        if (!v26)
          operator new();
        v36 = 0;
        v27 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v27 >= *((_QWORD *)this + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0;
        }
        else
        {
          v36 = *v27;
          *((_QWORD *)this + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)this + 14);
        v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29)
          return 0;
        v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
        if (!sub_1008CBE0C(v26, this, v31) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        v32 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v23)
          *((_DWORD *)this + 14) = v33;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_31;
        goto LABEL_17;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_17;
        goto LABEL_45;
      default:
        v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008F9B60(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 32), (BOOL)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2, *(_QWORD *)(v5 + 8), a2);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    goto LABEL_11;
  }
LABEL_8:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310FD0 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_11:
    v8 = *(_QWORD *)(v5 + 24);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310FD0 + 24);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008F9C14(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  unsigned int v15;
  int v16;
  int v17;

  v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_28;
  }
  v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v3 = *(_DWORD *)(a1 + 40);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 1;
    }
    if (v7 < 0)
      v6 = v8;
    v4 = (v4 | 1) + v10 + v6;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0)
        goto LABEL_28;
      goto LABEL_22;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    v11 = *(_QWORD *)(qword_102310FD0 + 16);
  if (*(_DWORD *)(v11 + 16))
    v12 = 2 * (*(_DWORD *)(v11 + 16) & 1);
  else
    v12 = 0;
  *(_DWORD *)(v11 + 12) = v12;
  v4 = (v4 + v12 + 2);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_22:
    v13 = *(_QWORD *)(a1 + 24);
    if (!v13)
      v13 = *(_QWORD *)(qword_102310FD0 + 24);
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CC2AC(v13, a2);
    v16 = (int)v14;
    if (v14 >= 0x80)
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    else
      v17 = 1;
    v4 = (v4 + v16 + v17 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008F9D38(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F936C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F9D84()
{
  return 1;
}

_QWORD *sub_1008F9D8C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.EmergConfig");
}

void sub_1008F9D9C(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 28681);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v5 = a2[16];
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    v7 = a2[2];
    a1[16] |= 1u;
    a1[2] = v7;
    v5 = a2[16];
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = a2[3];
  a1[16] |= 2u;
  a1[3] = v8;
  v5 = a2[16];
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v9 = a2[4];
  a1[16] |= 4u;
  a1[4] = v9;
  v5 = a2[16];
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v10 = a2[5];
  a1[16] |= 8u;
  a1[5] = v10;
  v5 = a2[16];
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_25:
    v12 = a2[7];
    a1[16] |= 0x20u;
    a1[7] = v12;
    v5 = a2[16];
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  v11 = a2[6];
  a1[16] |= 0x10u;
  a1[6] = v11;
  v5 = a2[16];
  if ((v5 & 0x20) != 0)
    goto LABEL_25;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_26:
  v13 = a2[8];
  a1[16] |= 0x40u;
  a1[8] = v13;
  v5 = a2[16];
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = a2[9];
    a1[16] |= 0x80u;
    a1[9] = v6;
    v5 = a2[16];
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return;
  if ((v5 & 0x100) != 0)
  {
    v14 = a2[10];
    a1[16] |= 0x100u;
    a1[10] = v14;
    v5 = a2[16];
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_30;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = a2[11];
  a1[16] |= 0x200u;
  a1[11] = v15;
  v5 = a2[16];
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
LABEL_31:
    v17 = a2[13];
    a1[16] |= 0x800u;
    a1[13] = v17;
    if ((a2[16] & 0x1000) == 0)
      return;
    goto LABEL_32;
  }
LABEL_30:
  v16 = a2[12];
  a1[16] |= 0x400u;
  a1[12] = v16;
  v5 = a2[16];
  if ((v5 & 0x800) != 0)
    goto LABEL_31;
LABEL_18:
  if ((v5 & 0x1000) == 0)
    return;
LABEL_32:
  v18 = a2[14];
  if (v18 >= 7)
    sub_10190E868();
  a1[16] |= 0x1000u;
  a1[14] = v18;
}

void sub_1008F9FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F9FDC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D4C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F9FEC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D4C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FA01C()
{
  operator new();
}

uint64_t sub_1008FA064(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_DWORD *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1008FA094(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  char *v12;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  unsigned int v41;
  uint64_t result;
  unsigned int *v43;
  unsigned int *v44;
  unsigned int *v45;
  unsigned int *v46;
  unsigned int *v47;
  unsigned int v48;

  v43 = a1 + 2;
  v44 = a1 + 3;
  v45 = a1 + 4;
  v46 = a1 + 5;
  v47 = a1 + 6;
  v5 = a1 + 7;
  v6 = a1 + 8;
  v7 = a1 + 9;
  v8 = a1 + 10;
  v9 = a1 + 11;
  v10 = a1 + 12;
  v11 = a1 + 13;
  while (2)
  {
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *v43 = *v16;
          v17 = v16 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_42:
          a1[16] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            v18 = v17 + 1;
            *((_QWORD *)this + 1) = v18;
            goto LABEL_45;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
        if ((_DWORD)result)
        {
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
          goto LABEL_42;
        }
        break;
      case 2u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v18 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
LABEL_45:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v44 = *v18;
          v30 = v18 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        a1[16] |= 2u;
        if ((unint64_t)v30 >= v15 || *v30 != 24)
          continue;
        v19 = v30 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v45 = *v19;
          v31 = v19 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        a1[16] |= 4u;
        if ((unint64_t)v31 >= v15 || *v31 != 32)
          continue;
        v20 = v31 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_61:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v46 = *v20;
          v32 = v20 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        a1[16] |= 8u;
        if ((unint64_t)v32 >= v15 || *v32 != 40)
          continue;
        v21 = v32 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_69:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v47 = *v21;
          v33 = v21 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        a1[16] |= 0x10u;
        if ((unint64_t)v33 >= v15 || *v33 != 48)
          continue;
        v22 = v33 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_77:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v22;
          v34 = v22 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        a1[16] |= 0x20u;
        if ((unint64_t)v34 >= v15 || *v34 != 56)
          continue;
        v23 = v34 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_85:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v23;
          v35 = v23 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        a1[16] |= 0x40u;
        if ((unint64_t)v35 >= v15 || *v35 != 64)
          continue;
        v24 = v35 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_93:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v24;
          v36 = v24 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        a1[16] |= 0x80u;
        if ((unint64_t)v36 >= v15 || *v36 != 72)
          continue;
        v25 = v36 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_101:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v25;
          v37 = v25 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        a1[16] |= 0x100u;
        if ((unint64_t)v37 >= v15 || *v37 != 80)
          continue;
        v26 = v37 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_109:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v26;
          v38 = v26 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        a1[16] |= 0x200u;
        if ((unint64_t)v38 >= v15 || *v38 != 88)
          continue;
        v27 = v38 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_117:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v27;
          v39 = v27 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        a1[16] |= 0x400u;
        if ((unint64_t)v39 >= v15 || *v39 != 96)
          continue;
        v28 = v39 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_125:
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v15 = *((_QWORD *)this + 2);
        }
        else
        {
          *v11 = *v28;
          v40 = v28 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        a1[16] |= 0x800u;
        if ((unint64_t)v40 >= v15 || *v40 != 104)
          continue;
        v29 = v40 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_133:
        v48 = 0;
        if ((unint64_t)v29 >= v15 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!(_DWORD)result)
            return result;
          v41 = v48;
        }
        else
        {
          v41 = *v29;
          *((_QWORD *)this + 1) = v29 + 1;
        }
        if (v41 <= 6)
        {
          a1[16] |= 0x1000u;
          a1[14] = v41;
        }
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v19 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 4u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v20 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_61;
      case 5u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v21 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_69;
      case 6u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v22 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_77;
      case 7u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v23 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 8u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v24 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 9u:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v25 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_101;
      case 0xAu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v26 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_109;
      case 0xBu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v27 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_117;
      case 0xCu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v28 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_125;
      case 0xDu:
        v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v29 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_133;
      default:
        v14 = TagFallback & 7;
LABEL_36:
        if (v14 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

int *sub_1008FA790(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[16];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_19:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_25:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      return result;
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  }
LABEL_26:
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  if ((v5[16] & 0x1000) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  return result;
}

uint64_t sub_1008FA920(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;

  v3 = a1[16];
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_45;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = a1[16];
  }
  else
  {
    v6 = 1;
  }
  v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = a1[16];
    }
    else
    {
      v8 = 1;
    }
    v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = a1[16];
    }
    else
    {
      v10 = 1;
    }
    v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    v3 = a1[16];
  }
  else
  {
    v12 = 1;
  }
  v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_29:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    v3 = a1[16];
  }
  else
  {
    v14 = 1;
  }
  v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_37;
  }
LABEL_33:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    v3 = a1[16];
  }
  else
  {
    v16 = 1;
  }
  v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0)
      goto LABEL_45;
    goto LABEL_41;
  }
LABEL_37:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = a1[16];
  }
  else
  {
    v18 = 2;
  }
  v4 = (v18 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_41:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v19 >= 0x80)
    {
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      v3 = a1[16];
    }
    else
    {
      v20 = 2;
    }
    v4 = (v20 + v4);
  }
LABEL_45:
  if ((v3 & 0xFF00) == 0)
    goto LABEL_74;
  if ((v3 & 0x100) != 0)
  {
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      v3 = a1[16];
    }
    else
    {
      v22 = 2;
    }
    v4 = (v22 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_48:
      if ((v3 & 0x400) == 0)
        goto LABEL_49;
      goto LABEL_60;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    v3 = a1[16];
  }
  else
  {
    v24 = 2;
  }
  v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_49:
    if ((v3 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_64;
  }
LABEL_60:
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    v3 = a1[16];
  }
  else
  {
    v26 = 2;
  }
  v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_50:
    if ((v3 & 0x1000) == 0)
      goto LABEL_74;
    goto LABEL_68;
  }
LABEL_64:
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if (v27 >= 0x80)
  {
    v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    v3 = a1[16];
  }
  else
  {
    v28 = 2;
  }
  v4 = (v28 + v4);
  if ((v3 & 0x1000) != 0)
  {
LABEL_68:
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
    if ((v29 & 0x80000000) != 0)
    {
      v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    }
    else
    {
      v30 = 2;
    }
    v4 = (v30 + v4);
  }
LABEL_74:
  a1[15] = v4;
  return v4;
}

void sub_1008FABA4(_DWORD *a1, _DWORD *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F9D9C(a1, lpsrc);
}

uint64_t sub_1008FABF0()
{
  return 1;
}

_QWORD *sub_1008FABF8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsAcqElement");
}

void sub_1008FAC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  char v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v20, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 29129);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_DWORD **)(*(_QWORD *)(a2 + 24) + 8 * v5);
      v7 = *(_DWORD *)(a1 + 36);
      v8 = *(int *)(a1 + 32);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v7 + 1);
          v7 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v7 + 1;
        operator new();
      }
      v9 = *(_QWORD *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v8 + 1;
      sub_1008F9D9C(*(_DWORD **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 32));
  }
  LOBYTE(v10) = *(_BYTE *)(a2 + 68);
  if (!(_BYTE)v10)
    return;
  if ((*(_BYTE *)(a2 + 68) & 1) != 0)
  {
    v12 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(_DWORD *)(a1 + 8) = v12;
    v10 = *(_DWORD *)(a2 + 68);
    if ((v10 & 2) == 0)
    {
LABEL_14:
      if ((v10 & 4) == 0)
        goto LABEL_15;
      goto LABEL_23;
    }
  }
  else if ((*(_BYTE *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_14;
  }
  v13 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 12) = v13;
  v10 = *(_DWORD *)(a2 + 68);
  if ((v10 & 4) == 0)
  {
LABEL_15:
    if ((v10 & 0x10) == 0)
      goto LABEL_16;
    goto LABEL_28;
  }
LABEL_23:
  *(_DWORD *)(a1 + 68) |= 4u;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    operator new();
  v15 = *(_QWORD *)(a2 + 16);
  if (!v15)
    v15 = *(_QWORD *)(qword_102310FE0 + 16);
  sub_1008F30B8(v14, v15);
  v10 = *(_DWORD *)(a2 + 68);
  if ((v10 & 0x10) == 0)
  {
LABEL_16:
    if ((v10 & 0x20) == 0)
      goto LABEL_17;
LABEL_29:
    v17 = *(_DWORD *)(a2 + 52);
    if (v17 >= 6)
      sub_10190E8B8();
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_DWORD *)(a1 + 52) = v17;
    v10 = *(_DWORD *)(a2 + 68);
    if ((v10 & 0x40) == 0)
    {
LABEL_18:
      if ((v10 & 0x80) == 0)
        return;
      goto LABEL_19;
    }
    goto LABEL_31;
  }
LABEL_28:
  v16 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_DWORD *)(a1 + 48) = v16;
  v10 = *(_DWORD *)(a2 + 68);
  if ((v10 & 0x20) != 0)
    goto LABEL_29;
LABEL_17:
  if ((v10 & 0x40) == 0)
    goto LABEL_18;
LABEL_31:
  v18 = *(_DWORD *)(a2 + 56);
  if (v18 >= 7)
    sub_10190E890();
  *(_DWORD *)(a1 + 68) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v18;
  if ((*(_DWORD *)(a2 + 68) & 0x80) != 0)
  {
LABEL_19:
    v11 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v11;
  }
}

void sub_1008FAEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FAEBC(uint64_t *a1)
{
  uint64_t v2;

  *a1 = (uint64_t)off_10215D540;
  if ((uint64_t *)qword_102310FE0 != a1)
  {
    v2 = a1[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_10010C59C(a1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008FAF1C(uint64_t *a1)
{
  sub_1008FAEBC(a1);
  operator delete();
}

uint64_t sub_1008FAF40(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FE0;
  if (!qword_102310FE0)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FE0;
  }
  return result;
}

void sub_1008FAF6C()
{
  operator new();
}

uint64_t sub_1008FAFB8(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  v2 = *(_BYTE *)(result + 68);
  if (v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
        result = sub_1008F327C(result);
    }
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v1 + 56) = 0;
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v3);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_1008FB030(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  int v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  uint64_t result;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  BOOL v34;
  int v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int *v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  _BYTE *v49;
  unsigned int v50;
  _BYTE *v51;
  unsigned int v52;
  _BYTE *v53;
  unsigned __int8 *v54;
  unsigned int v55;

  v5 = (unsigned int *)(a1 + 8);
  v6 = (unsigned int *)(a1 + 12);
  v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  v8 = (unsigned int *)(a1 + 48);
  v9 = (unsigned int *)(a1 + 60);
LABEL_2:
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_35;
        }
        continue;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v26 = v16 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        v17 = *(_DWORD *)(a1 + 68) | 2;
        *(_DWORD *)(a1 + 68) = v17;
        if ((unint64_t)v26 >= v13 || *v26 != 26)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 68) = v17 | 4;
        v27 = *(_QWORD *)(a1 + 16);
        if (!v27)
          operator new();
        v55 = 0;
        v28 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v28 >= *((_QWORD *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0;
        }
        else
        {
          v55 = *v28;
          *((_QWORD *)this + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
          if (sub_1008F32B8(v27, this, v32))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              v33 = *((_DWORD *)this + 14);
              v34 = __OFSUB__(v33, 1);
              v35 = v33 - 1;
              if (v35 < 0 == v34)
                *((_DWORD *)this + 14) = v35;
              v36 = (_BYTE *)*((_QWORD *)this + 1);
              if ((unint64_t)v36 < *((_QWORD *)this + 2) && *v36 == 34)
              {
                do
                {
                  *((_QWORD *)this + 1) = v36 + 1;
LABEL_57:
                  v37 = *(_DWORD *)(a1 + 36);
                  v38 = *(int *)(a1 + 32);
                  if ((int)v38 >= v37)
                  {
                    if (v37 == *(_DWORD *)(a1 + 40))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v37 + 1);
                      v37 = *(_DWORD *)(a1 + 36);
                    }
                    *(_DWORD *)(a1 + 36) = v37 + 1;
                    operator new();
                  }
                  v39 = *(_QWORD *)(a1 + 24);
                  *(_DWORD *)(a1 + 32) = v38 + 1;
                  v40 = *(unsigned int **)(v39 + 8 * v38);
                  v55 = 0;
                  v41 = (char *)*((_QWORD *)this + 1);
                  if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0;
                  }
                  else
                  {
                    v55 = *v41;
                    *((_QWORD *)this + 1) = v41 + 1;
                  }
                  v42 = *((_DWORD *)this + 14);
                  v43 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v42 + 1;
                  if (v42 >= v43)
                    return 0;
                  v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
                  if (!sub_1008FA094(v40, this, v45) || !*((_BYTE *)this + 36))
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
                  v46 = *((_DWORD *)this + 14);
                  v34 = __OFSUB__(v46, 1);
                  v47 = v46 - 1;
                  if (v47 < 0 == v34)
                    *((_DWORD *)this + 14) = v47;
                  v36 = (_BYTE *)*((_QWORD *)this + 1);
                  v18 = *((_QWORD *)this + 2);
                  if ((unint64_t)v36 >= v18)
                    goto LABEL_2;
                  v48 = *v36;
                }
                while (v48 == 34);
                if (v48 == 40)
                {
                  v19 = v36 + 1;
                  *((_QWORD *)this + 1) = v19;
LABEL_75:
                  if ((unint64_t)v19 >= v18 || *v19 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                    if (!(_DWORD)result)
                      return result;
                    v49 = (_BYTE *)*((_QWORD *)this + 1);
                    v18 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    *v8 = *v19;
                    v49 = v19 + 1;
                    *((_QWORD *)this + 1) = v49;
                  }
                  *(_DWORD *)(a1 + 68) |= 0x10u;
                  if ((unint64_t)v49 < v18 && *v49 == 48)
                  {
                    v20 = v49 + 1;
                    *((_QWORD *)this + 1) = v20;
LABEL_83:
                    v55 = 0;
                    if ((unint64_t)v20 >= v18 || *v20 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
                      if (!(_DWORD)result)
                        return result;
                      v50 = v55;
                    }
                    else
                    {
                      v50 = *v20;
                      *((_QWORD *)this + 1) = v20 + 1;
                    }
                    if (v50 <= 5)
                    {
                      *(_DWORD *)(a1 + 68) |= 0x20u;
                      *(_DWORD *)(a1 + 52) = v50;
                    }
                    v51 = (_BYTE *)*((_QWORD *)this + 1);
                    v21 = *((_QWORD *)this + 2);
                    if ((unint64_t)v51 < v21 && *v51 == 56)
                    {
                      v22 = v51 + 1;
                      *((_QWORD *)this + 1) = v22;
LABEL_93:
                      v55 = 0;
                      if ((unint64_t)v22 >= v21 || *v22 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
                        if (!(_DWORD)result)
                          return result;
                        v52 = v55;
                      }
                      else
                      {
                        v52 = *v22;
                        *((_QWORD *)this + 1) = v22 + 1;
                      }
                      if (v52 <= 6)
                      {
                        *(_DWORD *)(a1 + 68) |= 0x40u;
                        *(_DWORD *)(a1 + 56) = v52;
                      }
                      v53 = (_BYTE *)*((_QWORD *)this + 1);
                      v23 = *((_QWORD *)this + 2);
                      if ((unint64_t)v53 < v23 && *v53 == 64)
                      {
                        v24 = v53 + 1;
                        *((_QWORD *)this + 1) = v24;
LABEL_103:
                        if ((unint64_t)v24 >= v23 || *v24 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                          if (!(_DWORD)result)
                            return result;
                          v54 = (unsigned __int8 *)*((_QWORD *)this + 1);
                          v23 = *((_QWORD *)this + 2);
                        }
                        else
                        {
                          *v9 = *v24;
                          v54 = (unsigned __int8 *)(v24 + 1);
                          *((_QWORD *)this + 1) = v54;
                        }
                        *(_DWORD *)(a1 + 68) |= 0x80u;
                        if (v54 == (unsigned __int8 *)v23
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          result = 1;
                          *((_BYTE *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_26;
        v17 = *(_DWORD *)(a1 + 68);
        goto LABEL_43;
      case 4u:
        v12 = TagFallback & 7;
        if (v12 == 2)
          goto LABEL_57;
        goto LABEL_26;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v19 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_75;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        goto LABEL_83;
      case 7u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v22 = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 8u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v24 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_103;
      default:
        v12 = TagFallback & 7;
LABEL_26:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008FB660(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 68);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_10;
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 4) == 0)
    goto LABEL_10;
LABEL_7:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310FE0 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  if (*(int *)(v5 + 32) >= 1)
  {
    v8 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x10) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 48), a2, a4);
    v9 = *(_DWORD *)(v5 + 68);
    if ((v9 & 0x20) == 0)
    {
LABEL_15:
      if ((v9 & 0x40) == 0)
        goto LABEL_16;
      goto LABEL_20;
    }
  }
  else if ((v9 & 0x20) == 0)
  {
    goto LABEL_15;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 52), (int)a2, a4);
  v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x40) == 0)
  {
LABEL_16:
    if ((v9 & 0x80) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
  return result;
}

uint64_t sub_1008FB798(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  int v26;

  LOBYTE(v3) = *(_BYTE *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_46;
  }
  if ((*(_BYTE *)(a1 + 68) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 68) & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v6 = 1;
  }
  v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_10:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v8 = 2;
    }
    v4 += v8;
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102310FE0 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F3570(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 += v11 + v12 + 1;
    v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 0x10) == 0)
    {
LABEL_16:
      if ((v3 & 0x20) == 0)
        goto LABEL_17;
      goto LABEL_30;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x20) == 0)
  {
LABEL_17:
    if ((v3 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_30:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v15 & 0x80000000) != 0)
  {
    v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x40) == 0)
  {
LABEL_18:
    if ((v3 & 0x80) == 0)
      goto LABEL_46;
    goto LABEL_42;
  }
LABEL_36:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v17 & 0x80000000) != 0)
  {
    v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v18 = 2;
  }
  v4 += v18;
  if ((v3 & 0x80) != 0)
  {
LABEL_42:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v19 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    else
      v20 = 2;
    v4 += v20;
  }
LABEL_46:
  v21 = *(_DWORD *)(a1 + 32);
  v22 = (v21 + v4);
  if (v21 >= 1)
  {
    v23 = 0;
    do
    {
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FA920(*(unsigned int **)(*(_QWORD *)(a1 + 24)+ 8 * v23), a2);
      v25 = (int)v24;
      if (v24 >= 0x80)
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      else
        v26 = 1;
      v22 = (v25 + v22 + v26);
      ++v23;
    }
    while (v23 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v22;
  return v22;
}

void sub_1008FB990(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FAC08(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FB9DC()
{
  return 1;
}

_QWORD *sub_1008FB9E4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.GpsAcqAssistance");
}

void sub_1008FB9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v7, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 29325);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v6, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 6)
      sub_10190E8E0();
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
  }
}

void sub_1008FBA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FBAA0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D5B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FBAB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D5B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008FBAE0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FE8;
  if (!qword_102310FE8)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FE8;
  }
  return result;
}

void sub_1008FBB0C()
{
  operator new();
}

uint64_t sub_1008FBB44(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008FBB58(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  char *v7;
  unsigned int v8;
  uint64_t result;
  unsigned int v10;

  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v10 = 0;
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!(_DWORD)result)
          return result;
        v8 = v10;
      }
      else
      {
        v8 = *v7;
        *((_QWORD *)this + 1) = v7 + 1;
      }
      if (v8 <= 5)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v8;
      }
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1008FBC74(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_1008FBC90(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      result = 11;
    }
    else if (v4 >= 0x80)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)
             + 1;
    }
    else
    {
      result = 2;
    }
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_1008FBCE8(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FB9F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FBD34()
{
  return 1;
}

_QWORD *sub_1008FBD3C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CellFTAssistanceRequest");
}

void sub_1008FBD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v11, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 29568);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      if (!sub_10010285C(v6))
        sub_10190E930();
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 6)
        sub_10190E908();
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_DWORD *)(a1 + 12) = v7;
      v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 4u;
      v8 = *(_QWORD *)(a1 + 16);
      if (!v8)
        operator new();
      v9 = *(_QWORD *)(a2 + 16);
      if (!v9)
        v9 = *(_QWORD *)(qword_102310FF0 + 16);
      sub_1008F2980(v8, v9);
    }
  }
}

void sub_1008FBE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FBE90(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_10215D630;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102310FF0 != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008FBEE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008FBE90(a1);
  operator delete();
}

uint64_t sub_1008FBF08(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102310FF0;
  if (!qword_102310FF0)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102310FF0;
  }
  return result;
}

void sub_1008FBF34()
{
  operator new();
}

uint64_t sub_1008FBF6C(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 28);
  if (v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
        result = sub_1008F2BD4(result);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008FBFA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v7;
  int v8;
  char *v9;
  unsigned int v10;
  unint64_t v11;
  char *v12;
  uint64_t result;
  _BYTE *v14;
  unsigned int v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_18;
          v27 = 0;
          v9 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
            if (!(_DWORD)result)
              return result;
            v10 = v27;
          }
          else
          {
            v10 = *v9;
            *((_QWORD *)this + 1) = v9 + 1;
          }
          if (sub_10010285C(v10))
          {
            if (!sub_10010285C(v10))
              sub_10190E930();
            *(_DWORD *)(a1 + 28) |= 1u;
            *(_DWORD *)(a1 + 8) = v10;
          }
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
          if ((unint64_t)v14 < v11 && *v14 == 16)
          {
            v12 = v14 + 1;
            *((_QWORD *)this + 1) = v12;
            goto LABEL_29;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_29:
        v26 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result)
            return result;
          v15 = v26;
        }
        else
        {
          v15 = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        if (v15 <= 5)
        {
          *(_DWORD *)(a1 + 28) |= 2u;
          *(_DWORD *)(a1 + 12) = v15;
        }
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v16 < *((_QWORD *)this + 2) && *v16 == 26)
        {
          *((_QWORD *)this + 1) = v16 + 1;
          goto LABEL_39;
        }
      }
      if (v7 != 3)
      {
        v8 = TagFallback & 7;
        goto LABEL_18;
      }
      v8 = TagFallback & 7;
      if (v8 == 2)
        break;
LABEL_18:
      if (v8 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
        return 0;
    }
LABEL_39:
    *(_DWORD *)(a1 + 28) |= 4u;
    v17 = *(_QWORD *)(a1 + 16);
    if (!v17)
      operator new();
    v28 = 0;
    v18 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))
        return 0;
    }
    else
    {
      v28 = *v18;
      *((_QWORD *)this + 1) = v18 + 1;
    }
    v19 = *((_DWORD *)this + 14);
    v20 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v19 + 1;
    if (v19 >= v20)
      return 0;
    v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
    if (!sub_1008F2C30(v17, this, v22) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
    v23 = *((_DWORD *)this + 14);
    v24 = __OFSUB__(v23, 1);
    v25 = v23 - 1;
    if (v25 < 0 == v24)
      *((_DWORD *)this + 14) = v25;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008FC290(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0)
      return result;
    goto LABEL_7;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 4) == 0)
    return result;
LABEL_7:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310FF0 + 16);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008FC318(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  unsigned int v10;
  int v11;
  int v12;

  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_26;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
    else if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_19;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
      v8 = *(_QWORD *)(qword_102310FF0 + 16);
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F2F84(v8, a2);
    v11 = (int)v9;
    if (v9 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    else
      v12 = 1;
    v4 = (v4 + v11 + v12 + 1);
  }
LABEL_26:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008FC410(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FBD4C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FC45C()
{
  return 1;
}

_QWORD *sub_1008FC464@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.CellFTAssistance");
}

void sub_1008FC474(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D6A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FC484(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D6A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FC4B4()
{
  operator new();
}

uint64_t sub_1008FC4FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  unint64_t v14;
  _BYTE *v15;
  char *v16;
  _BYTE *v17;
  char *v18;
  uint64_t result;
  unsigned __int8 *v20;
  unint64_t v21;

  v5 = (unsigned int *)(a1 + 48);
  v6 = (unsigned int *)(a1 + 52);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_40;
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 8) = v21;
        *(_DWORD *)(a1 + 60) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 17)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_40;
LABEL_15:
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 60) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 25)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_20:
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v21;
        *(_DWORD *)(a1 + 60) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 33)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_25:
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 32) = v21;
        *(_DWORD *)(a1 + 60) |= 8u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 != 41)
          continue;
        *((_QWORD *)this + 1) = v13 + 1;
LABEL_30:
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) != 0)
        {
          *(_QWORD *)(a1 + 40) = v21;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          if ((unint64_t)v15 < v14 && *v15 == 48)
          {
            v16 = v15 + 1;
            *((_QWORD *)this + 1) = v16;
LABEL_36:
            if ((unint64_t)v16 >= v14 || *v16 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
              if (!(_DWORD)result)
                return result;
              v17 = (_BYTE *)*((_QWORD *)this + 1);
              v14 = *((_QWORD *)this + 2);
            }
            else
            {
              *v5 = *v16;
              v17 = v16 + 1;
              *((_QWORD *)this + 1) = v17;
            }
            *(_DWORD *)(a1 + 60) |= 0x20u;
            if ((unint64_t)v17 < v14 && *v17 == 56)
            {
              v18 = v17 + 1;
              *((_QWORD *)this + 1) = v18;
LABEL_49:
              if ((unint64_t)v18 >= v14 || *v18 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                if (!(_DWORD)result)
                  return result;
                v20 = (unsigned __int8 *)*((_QWORD *)this + 1);
                v14 = *((_QWORD *)this + 2);
              }
              else
              {
                *v6 = *v18;
                v20 = (unsigned __int8 *)(v18 + 1);
                *((_QWORD *)this + 1) = v20;
              }
              *(_DWORD *)(a1 + 60) |= 0x40u;
              if (v20 == (unsigned __int8 *)v14
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_20;
        goto LABEL_40;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_25;
        goto LABEL_40;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_30;
        goto LABEL_40;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v16 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_36;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_49;
      default:
        v9 = TagFallback & 7;
LABEL_40:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008FC878(uint64_t result, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), a2, a4);
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 48), a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), a2, a4);
  return result;
}

uint64_t sub_1008FC960(uint64_t a1, unsigned int a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  v3 = *(unsigned __int8 *)(a1 + 60);
  if (*(_BYTE *)(a1 + 60))
  {
    v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
      v4 += 9;
    if ((v3 & 4) != 0)
      v4 += 9;
    if ((v3 & 8) != 0)
      v4 += 9;
    if ((v3 & 0x10) != 0)
      v5 = v4 + 9;
    else
      v5 = v4;
    if ((v3 & 0x20) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
      if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        v3 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        v7 = 2;
      }
      v5 = (v7 + v5);
    }
    if ((v3 & 0x40) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v8 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      else
        v9 = 2;
      v5 = (v9 + v5);
    }
  }
  else
  {
    v5 = 0;
  }
  *(_DWORD *)(a1 + 56) = v5;
  return v5;
}

void sub_1008FCA1C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D4AC8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FCA68()
{
  return 1;
}

_QWORD *sub_1008FCA70@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.NetworkReferenceLocation");
}

void sub_1008FCA80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D720;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FCA90(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D720;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FCAC0()
{
  operator new();
}

uint64_t sub_1008FCAF8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  uint64_t result;
  _BYTE *v16;
  unint64_t v17;

  v5 = (unsigned int *)(a1 + 8);
  v6 = (unsigned int *)(a1 + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v7 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((_QWORD *)this + 1) = v7 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v12 = (char *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result)
              return result;
            v13 = (_BYTE *)*((_QWORD *)this + 1);
            v11 = *((_QWORD *)this + 2);
          }
          else
          {
            *v5 = *v12;
            v13 = v12 + 1;
            *((_QWORD *)this + 1) = v13;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            v14 = v13 + 1;
            *((_QWORD *)this + 1) = v14;
            goto LABEL_27;
          }
        }
        if (v9 != 2)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v14;
          v16 = v14 + 1;
          *((_QWORD *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v16 < v11 && *v16 == 25)
        {
          *((_QWORD *)this + 1) = v16 + 1;
          goto LABEL_35;
        }
      }
      if (v9 != 3)
        break;
      v10 = TagFallback & 7;
      if (v10 != 1)
        goto LABEL_19;
LABEL_35:
      v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 16) = v17;
      *(_DWORD *)(a1 + 28) |= 4u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v10 = TagFallback & 7;
LABEL_19:
    if (v10 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1008FCCFC(uint64_t result, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 16), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 16), a3);
  return result;
}

uint64_t sub_1008FCD74(uint64_t a1, unsigned int a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;

  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    result = 0;
    goto LABEL_17;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_14;
LABEL_10:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      v3 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      v8 = 2;
    }
    v4 += v8;
    goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v6 >= 0x80)
  {
    v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 28);
    if ((v3 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = 2;
  if ((v3 & 2) != 0)
    goto LABEL_10;
LABEL_14:
  if ((v3 & 4) != 0)
    result = v4 + 9;
  else
    result = v4;
LABEL_17:
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_1008FCE0C(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008D4C30(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FCE58()
{
  return 1;
}

_QWORD *sub_1008FCE60@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.NetworkReferenceTime");
}

void sub_1008FCE70(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v10, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 30407);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v7;
      v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v8;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v6 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v6;
  }
}

void sub_1008FCF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FCF58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D798;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FCF68(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D798;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FCF98()
{
  operator new();
}

uint64_t sub_1008FCFD4(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008FCFEC(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  unsigned int v10;
  int v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  _BYTE *v17;
  unsigned __int8 *v18;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((_QWORD *)this + 1) = v8 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2)
        break;
      v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v16 = (char *)*((_QWORD *)this + 1);
      v12 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
      }
      else
      {
        *v6 = *v16;
        v17 = v16 + 1;
        *((_QWORD *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v18 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v13;
          v18 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

int *sub_1008FD20C(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int *v5;
  int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_1008FD284(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_14;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v7 = 2;
  }
  v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    else
      v9 = 2;
    v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008FD338(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FCE70(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FD384()
{
  return 1;
}

_QWORD *sub_1008FD38C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Is801VelocityInfo");
}

void sub_1008FD39C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 30613);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008FD444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FD45C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D810;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FD46C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D810;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FD49C()
{
  operator new();
}

uint64_t sub_1008FD4D4(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008FD4E8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008FD684(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008FD6DC(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008FD768(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FD39C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FD7B4()
{
  return 1;
}

_QWORD *sub_1008FD7BC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Is801ClockInfo");
}

void sub_1008FD7CC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v9, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 30815);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      v5 = *(_DWORD *)(a2 + 20);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }
}

void sub_1008FD874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FD88C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D888;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FD89C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D888;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FD8CC()
{
  operator new();
}

uint64_t sub_1008FD904(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008FD918(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  uint64_t result;

  v5 = a1 + 2;
  v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((_QWORD *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v12 = (char *)*((_QWORD *)this + 1);
      v10 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v12;
        v13 = v12 + 1;
        *((_QWORD *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        v11 = v13 + 1;
        *((_QWORD *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v14 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v11;
          v14 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
      return 0;
  }
}

uint64_t sub_1008FDAB4(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_1008FDB0C(uint64_t a1, unsigned int a2)
{
  char v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v4 = 2;
        if ((v3 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v4 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    else
      v7 = 2;
    v4 = (v7 + v4);
  }
  else
  {
    v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008FDB98(_DWORD *a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FD7CC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FDBE4()
{
  return 1;
}

_QWORD *sub_1008FDBEC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Is801HeightInfo");
}

void sub_1008FDBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  char v15;
  _DWORD *v16;
  uint64_t v17;
  char v18;
  _DWORD *v19;
  uint64_t v20;
  char v21;
  _BYTE v22[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v22, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 31352);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  v5 = *(_DWORD *)(a2 + 64);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      v9 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v9;
      v5 = *(_DWORD *)(a2 + 64);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_26;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v10 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v10;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_27;
    }
LABEL_26:
    v11 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v11;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_28;
    }
LABEL_27:
    v12 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v12;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_29;
    }
LABEL_28:
    v13 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v13;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
LABEL_29:
    v14 = *(_DWORD *)(a2 + 28);
    if (v14 >= 4)
      sub_10190E958();
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v14;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 0x40) == 0)
      goto LABEL_12;
LABEL_11:
    v6 = *(_BYTE *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(_BYTE *)(a1 + 56) = v6;
    v5 = *(_DWORD *)(a2 + 64);
LABEL_12:
    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 0x80u;
      v7 = *(_DWORD **)(a1 + 32);
      if (!v7)
        operator new();
      v8 = *(_QWORD *)(a2 + 32);
      if (!v8)
        v8 = *(_QWORD *)(qword_102311020 + 32);
      sub_1008FCE70(v7, v8);
      v5 = *(_DWORD *)(a2 + 64);
    }
  }
  if ((v5 & 0xFF00) == 0)
    return;
  if ((v5 & 0x100) != 0)
  {
    v15 = *(_BYTE *)(a2 + 57);
    *(_DWORD *)(a1 + 64) |= 0x100u;
    *(_BYTE *)(a1 + 57) = v15;
    v5 = *(_DWORD *)(a2 + 64);
    if ((v5 & 0x200) == 0)
    {
LABEL_21:
      if ((v5 & 0x400) == 0)
        goto LABEL_22;
LABEL_38:
      v18 = *(_BYTE *)(a2 + 58);
      *(_DWORD *)(a1 + 64) |= 0x400u;
      *(_BYTE *)(a1 + 58) = v18;
      if ((*(_DWORD *)(a2 + 64) & 0x800) == 0)
        return;
      goto LABEL_39;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  *(_DWORD *)(a1 + 64) |= 0x200u;
  v16 = *(_DWORD **)(a1 + 40);
  if (!v16)
    operator new();
  v17 = *(_QWORD *)(a2 + 40);
  if (!v17)
    v17 = *(_QWORD *)(qword_102311020 + 40);
  sub_1008FD39C(v16, v17);
  v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x400) != 0)
    goto LABEL_38;
LABEL_22:
  if ((v5 & 0x800) == 0)
    return;
LABEL_39:
  *(_DWORD *)(a1 + 64) |= 0x800u;
  v19 = *(_DWORD **)(a1 + 48);
  if (!v19)
    operator new();
  v20 = *(_QWORD *)(a2 + 48);
  if (!v20)
    v20 = *(_QWORD *)(qword_102311020 + 48);
  sub_1008FD7CC(v19, v20);
}

void sub_1008FDED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008FDEE8(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)qword_102311020 != result)
  {
    v1 = result;
    v2 = result[4];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[5];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    result = (_QWORD *)v1[6];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008FDF58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D900;
  sub_1008FDEE8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FDF88(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D900;
  sub_1008FDEE8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FDFCC()
{
  operator new();
}

uint64_t sub_1008FE018(uint64_t result)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 8) = 0;
    if ((v1 & 0x80) != 0)
    {
      v2 = *(_QWORD *)(result + 32);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        v1 = *(_DWORD *)(result + 64);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_BYTE *)(result + 57) = 0;
    if ((v1 & 0x200) != 0)
    {
      v3 = *(_QWORD *)(result + 40);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v1 = *(_DWORD *)(result + 64);
      }
    }
    *(_BYTE *)(result + 58) = 0;
    if ((v1 & 0x800) != 0)
    {
      v4 = *(_QWORD *)(result + 48);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20))
          *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1008FE0A8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v12;
  unint64_t v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  int v23;
  unint64_t v24;
  char *v25;
  int v26;
  unint64_t v27;
  char *v28;
  int v29;
  uint64_t result;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned int v37;
  _BYTE *v38;
  unsigned int *v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  BOOL v46;
  int v47;
  _BYTE *v48;
  unsigned int v49;
  _BYTE *v50;
  unsigned int *v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  _BYTE *v59;
  unsigned int v60;
  _BYTE *v61;
  unsigned int *v62;
  char *v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;

  v5 = (unsigned int *)(a1 + 8);
  v6 = (unsigned int *)(a1 + 12);
  v7 = (unsigned int *)(a1 + 16);
  v8 = (unsigned int *)(a1 + 20);
  v9 = (unsigned int *)(a1 + 24);
  while (2)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v14;
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
          goto LABEL_43;
        }
        continue;
      case 2u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
LABEL_43:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v31 = v16 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v31 >= v13 || *v31 != 24)
          continue;
        v17 = v31 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v32 = v17 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v32 >= v13 || *v32 != 32)
          continue;
        v18 = v32 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v33 = v18 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v33 >= v13 || *v33 != 40)
          continue;
        v19 = v33 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_67:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v19;
          v34 = v19 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        if ((unint64_t)v34 >= v13 || *v34 != 48)
          continue;
        v20 = v34 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_75:
        v70 = 0;
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!(_DWORD)result)
            return result;
          v35 = v70;
        }
        else
        {
          v35 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
        }
        if (v35 <= 3)
        {
          *(_DWORD *)(a1 + 64) |= 0x20u;
          *(_DWORD *)(a1 + 28) = v35;
        }
        v36 = (_BYTE *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((unint64_t)v36 >= v21 || *v36 != 56)
          continue;
        v22 = v36 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_85:
        v70 = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!(_DWORD)result)
            return result;
          v37 = v70;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v21 = *((_QWORD *)this + 2);
        }
        else
        {
          v37 = *v22;
          v38 = v22 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        *(_BYTE *)(a1 + 56) = v37 != 0;
        v23 = *(_DWORD *)(a1 + 64) | 0x40;
        *(_DWORD *)(a1 + 64) = v23;
        if ((unint64_t)v38 >= v21 || *v38 != 66)
          continue;
        *((_QWORD *)this + 1) = v38 + 1;
LABEL_93:
        *(_DWORD *)(a1 + 64) = v23 | 0x80;
        v39 = *(unsigned int **)(a1 + 32);
        if (!v39)
          operator new();
        v70 = 0;
        v40 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v40 >= *((_QWORD *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0;
        }
        else
        {
          v70 = *v40;
          *((_QWORD *)this + 1) = v40 + 1;
        }
        v41 = *((_DWORD *)this + 14);
        v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42)
          return 0;
        v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_1008FCFEC(v39, this, v44) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        v45 = *((_DWORD *)this + 14);
        v46 = __OFSUB__(v45, 1);
        v47 = v45 - 1;
        if (v47 < 0 == v46)
          *((_DWORD *)this + 14) = v47;
        v48 = (_BYTE *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        if ((unint64_t)v48 >= v24 || *v48 != 72)
          continue;
        v25 = v48 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_107:
        v70 = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!(_DWORD)result)
            return result;
          v49 = v70;
          v50 = (_BYTE *)*((_QWORD *)this + 1);
          v24 = *((_QWORD *)this + 2);
        }
        else
        {
          v49 = *v25;
          v50 = v25 + 1;
          *((_QWORD *)this + 1) = v50;
        }
        *(_BYTE *)(a1 + 57) = v49 != 0;
        v26 = *(_DWORD *)(a1 + 64) | 0x100;
        *(_DWORD *)(a1 + 64) = v26;
        if ((unint64_t)v50 >= v24 || *v50 != 82)
          continue;
        *((_QWORD *)this + 1) = v50 + 1;
LABEL_115:
        *(_DWORD *)(a1 + 64) = v26 | 0x200;
        v51 = *(unsigned int **)(a1 + 40);
        if (!v51)
          operator new();
        v70 = 0;
        v52 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v52 >= *((_QWORD *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0;
        }
        else
        {
          v70 = *v52;
          *((_QWORD *)this + 1) = v52 + 1;
        }
        v53 = *((_DWORD *)this + 14);
        v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54)
          return 0;
        v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_1008FD4E8(v51, this, v56) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        v57 = *((_DWORD *)this + 14);
        v46 = __OFSUB__(v57, 1);
        v58 = v57 - 1;
        if (v58 < 0 == v46)
          *((_DWORD *)this + 14) = v58;
        v59 = (_BYTE *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        if ((unint64_t)v59 >= v27 || *v59 != 88)
          continue;
        v28 = v59 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_129:
        v70 = 0;
        if ((unint64_t)v28 >= v27 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!(_DWORD)result)
            return result;
          v60 = v70;
          v61 = (_BYTE *)*((_QWORD *)this + 1);
          v27 = *((_QWORD *)this + 2);
        }
        else
        {
          v60 = *v28;
          v61 = v28 + 1;
          *((_QWORD *)this + 1) = v61;
        }
        *(_BYTE *)(a1 + 58) = v60 != 0;
        v29 = *(_DWORD *)(a1 + 64) | 0x400;
        *(_DWORD *)(a1 + 64) = v29;
        if ((unint64_t)v61 >= v27 || *v61 != 98)
          continue;
        *((_QWORD *)this + 1) = v61 + 1;
LABEL_137:
        *(_DWORD *)(a1 + 64) = v29 | 0x800;
        v62 = *(unsigned int **)(a1 + 48);
        if (!v62)
          operator new();
        v70 = 0;
        v63 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v63 >= *((_QWORD *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0;
        }
        else
        {
          v70 = *v63;
          *((_QWORD *)this + 1) = v63 + 1;
        }
        v64 = *((_DWORD *)this + 14);
        v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 < v65)
        {
          v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
          if (sub_1008FD918(v62, this, v67))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
              v68 = *((_DWORD *)this + 14);
              v46 = __OFSUB__(v68, 1);
              v69 = v68 - 1;
              if (v69 < 0 == v46)
                *((_DWORD *)this + 14) = v69;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_51;
      case 4u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v18 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_59;
      case 5u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v19 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_67;
      case 6u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v20 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_75;
      case 7u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v22 = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 8u:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_35;
        v23 = *(_DWORD *)(a1 + 64);
        goto LABEL_93;
      case 9u:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v25 = (char *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_107;
      case 0xAu:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_35;
        v26 = *(_DWORD *)(a1 + 64);
        goto LABEL_115;
      case 0xBu:
        v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v28 = (char *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_129;
      case 0xCu:
        v12 = TagFallback & 7;
        if (v12 != 2)
          goto LABEL_35;
        v29 = *(_DWORD *)(a1 + 64);
        goto LABEL_137;
      default:
        v12 = TagFallback & 7;
LABEL_35:
        if (v12 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008FE8F4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 64);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 28), (int)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 56), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_21:
  v7 = *(_QWORD *)(v5 + 32);
  if (!v7)
    v7 = *(_QWORD *)(qword_102311020 + 32);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 57), (BOOL)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
LABEL_28:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 58), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 64) & 0x800) == 0)
      return result;
    goto LABEL_29;
  }
LABEL_25:
  v8 = *(_QWORD *)(v5 + 40);
  if (!v8)
    v8 = *(_QWORD *)(qword_102311020 + 40);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x400) != 0)
    goto LABEL_28;
LABEL_12:
  if ((v6 & 0x800) == 0)
    return result;
LABEL_29:
  v9 = *(_QWORD *)(v5 + 48);
  if (!v9)
    v9 = *(_QWORD *)(qword_102311020 + 48);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v9, a2, a4);
}

uint64_t sub_1008FEA98(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  unsigned int v28;
  int v29;
  int v30;

  v3 = *(_DWORD *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    LODWORD(v4) = 0;
    if ((v3 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v6 = 1;
  }
  LODWORD(v4) = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_10:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v8 = 1;
    }
    LODWORD(v4) = v4 + v8 + 1;
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v10 = 1;
    }
    LODWORD(v4) = v4 + v10 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v12 = 2;
  }
  LODWORD(v4) = v12 + v4;
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0)
      goto LABEL_37;
    goto LABEL_31;
  }
LABEL_27:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v14 = 2;
  }
  LODWORD(v4) = v14 + v4;
  if ((v3 & 0x20) != 0)
  {
LABEL_31:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v16 = 2;
    }
    LODWORD(v4) = v16 + v4;
  }
LABEL_37:
  if ((v3 & 0x40) != 0)
    v4 = (v4 + 2);
  else
    v4 = v4;
  if ((v3 & 0x80) != 0)
  {
    v17 = *(_QWORD *)(a1 + 32);
    if (!v17)
      v17 = *(_QWORD *)(qword_102311020 + 32);
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FD284(v17, a2);
    v19 = (int)v18;
    if (v18 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
    else
      v20 = 1;
    v4 = (v4 + v19 + v20 + 1);
    v3 = *(_DWORD *)(a1 + 64);
  }
LABEL_47:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
      v21 = v4 + 2;
    else
      v21 = v4;
    if ((v3 & 0x200) != 0)
    {
      v22 = *(_QWORD *)(a1 + 40);
      if (!v22)
        v22 = *(_QWORD *)(qword_102311020 + 40);
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FD6DC(v22, a2);
      v24 = (int)v23;
      if (v23 >= 0x80)
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
      else
        v25 = 1;
      v21 += v24 + v25 + 1;
      v3 = *(_DWORD *)(a1 + 64);
    }
    if ((v3 & 0x400) != 0)
      v4 = v21 + 2;
    else
      v4 = v21;
    if ((v3 & 0x800) != 0)
    {
      v26 = *(_QWORD *)(a1 + 48);
      if (!v26)
        v26 = *(_QWORD *)(qword_102311020 + 48);
      v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FDB0C(v26, a2);
      v29 = (int)v27;
      if (v27 >= 0x80)
        v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, v28);
      else
        v30 = 1;
      v4 = (v4 + v29 + v30 + 1);
    }
  }
  *(_DWORD *)(a1 + 60) = v4;
  return v4;
}

void sub_1008FECEC(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FDBFC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FED38()
{
  return 1;
}

_QWORD *sub_1008FED40@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Is801LocationInd");
}

void sub_1008FED50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  char v7;
  int v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char v16;
  _BYTE v17[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(v17, 3, "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", 31779);
    v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 52);
  if (!(_BYTE)v5)
    return;
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    v6 = *(_DWORD *)(a2 + 8);
    if (v6 >= 9)
      sub_10190E9A8();
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    v5 = *(_DWORD *)(a2 + 52);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 52) |= 4u;
  v9 = *(_DWORD **)(a1 + 16);
  if (!v9)
    operator new();
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
    v10 = *(_QWORD *)(qword_102311028 + 16);
  sub_1008D5F18(v9, v10);
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
LABEL_26:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    v13 = *(_QWORD *)(a1 + 32);
    if (!v13)
      operator new();
    v14 = *(_QWORD *)(a2 + 32);
    if (!v14)
      v14 = *(_QWORD *)(qword_102311028 + 32);
    sub_1008FDBFC(v13, v14);
    v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x20) == 0)
    {
LABEL_12:
      if ((v5 & 0x40) == 0)
        return;
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *(_DWORD *)(a1 + 52) |= 8u;
  v11 = *(_QWORD *)(a1 + 24);
  if (!v11)
    operator new();
  v12 = *(_QWORD *)(a2 + 24);
  if (!v12)
    v12 = *(_QWORD *)(qword_102311028 + 24);
  sub_1008E9698(v11, v12);
  v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x10) != 0)
    goto LABEL_26;
LABEL_11:
  if ((v5 & 0x20) == 0)
    goto LABEL_12;
LABEL_31:
  v15 = *(_DWORD *)(a2 + 40);
  if (v15 >= 4)
    sub_10190E980();
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 40) = v15;
  if ((*(_DWORD *)(a2 + 52) & 0x40) != 0)
  {
LABEL_13:
    v7 = *(_BYTE *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_BYTE *)(a1 + 44) = v7;
  }
}

void sub_1008FEFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1008FEFC0(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((_QWORD *)qword_102311028 != result)
  {
    v1 = result;
    v2 = result[2];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = v1[3];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    result = (_QWORD *)v1[4];
    if (result)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_1008FF030(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D978;
  sub_1008FEFC0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FF060(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D978;
  sub_1008FEFC0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

uint64_t sub_1008FF0A4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result;

  result = qword_102311028;
  if (!qword_102311028)
  {
    sub_1008C80A4(0, a2, a3, a4);
    return qword_102311028;
  }
  return result;
}

void sub_1008FF0D0()
{
  operator new();
}

uint64_t sub_1008FF118(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 52);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_1008E9AA4(result);
        v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      result = *(_QWORD *)(v1 + 32);
      if (result)
        result = sub_1008FE018(result);
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1008FF194(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v8;
  char *v9;
  unsigned int v10;
  unint64_t v11;
  char *v12;
  int v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t result;
  _BYTE *v19;
  _BYTE *v20;
  _DWORD *v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  BOOL v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  _BYTE *v48;
  unsigned int v49;
  _BYTE *v50;
  unsigned int v51;
  unsigned __int8 *v52;
  unsigned int v53;

  v5 = (unsigned int *)(a1 + 12);
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v53 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
          if (!(_DWORD)result)
            return result;
          v10 = v53;
        }
        else
        {
          v10 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        if (v10 <= 8)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v10;
        }
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v19 < v11 && *v19 == 16)
        {
          v12 = v19 + 1;
          *((_QWORD *)this + 1) = v12;
          goto LABEL_35;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v12;
          v20 = v12 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        v13 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v13;
        if ((unint64_t)v20 >= v11 || *v20 != 26)
          continue;
        *((_QWORD *)this + 1) = v20 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 52) = v13 | 4;
        v21 = *(_DWORD **)(a1 + 16);
        if (!v21)
          operator new();
        v53 = 0;
        v22 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v22 >= *((_QWORD *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
        }
        else
        {
          v53 = *v22;
          *((_QWORD *)this + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)this + 14);
        v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
        if (!sub_1008D60A0(v21, this, v26) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        v27 = *((_DWORD *)this + 14);
        v28 = __OFSUB__(v27, 1);
        v29 = v27 - 1;
        if (v29 < 0 == v28)
          *((_DWORD *)this + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 != 34)
          continue;
        *((_QWORD *)this + 1) = v30 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 8u;
        v31 = *(_QWORD *)(a1 + 24);
        if (!v31)
          operator new();
        v53 = 0;
        v32 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
        }
        else
        {
          v53 = *v32;
          *((_QWORD *)this + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)this + 14);
        v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34)
          return 0;
        v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
        if (!sub_1008E9B44(v31, this, v36) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        v37 = *((_DWORD *)this + 14);
        v28 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v28)
          *((_DWORD *)this + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 != 42)
          continue;
        *((_QWORD *)this + 1) = v39 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        v40 = *(_QWORD *)(a1 + 32);
        if (!v40)
          operator new();
        v53 = 0;
        v41 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0;
        }
        else
        {
          v53 = *v41;
          *((_QWORD *)this + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)this + 14);
        v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 < v43)
        {
          v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
          if (sub_1008FE0A8(v40, this, v45))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
              v46 = *((_DWORD *)this + 14);
              v28 = __OFSUB__(v46, 1);
              v47 = v46 - 1;
              if (v47 < 0 == v28)
                *((_DWORD *)this + 14) = v47;
              v48 = (_BYTE *)*((_QWORD *)this + 1);
              v14 = *((_QWORD *)this + 2);
              if ((unint64_t)v48 < v14 && *v48 == 48)
              {
                v15 = v48 + 1;
                *((_QWORD *)this + 1) = v15;
LABEL_85:
                v53 = 0;
                if ((unint64_t)v15 >= v14 || *v15 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
                  if (!(_DWORD)result)
                    return result;
                  v49 = v53;
                }
                else
                {
                  v49 = *v15;
                  *((_QWORD *)this + 1) = v15 + 1;
                }
                if (v49 <= 3)
                {
                  *(_DWORD *)(a1 + 52) |= 0x20u;
                  *(_DWORD *)(a1 + 40) = v49;
                }
                v50 = (_BYTE *)*((_QWORD *)this + 1);
                v16 = *((_QWORD *)this + 2);
                if ((unint64_t)v50 < v16 && *v50 == 56)
                {
                  v17 = v50 + 1;
                  *((_QWORD *)this + 1) = v17;
LABEL_95:
                  v53 = 0;
                  if ((unint64_t)v17 >= v16 || *v17 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
                    if (!(_DWORD)result)
                      return result;
                    v51 = v53;
                    v52 = (unsigned __int8 *)*((_QWORD *)this + 1);
                    v16 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    v51 = *v17;
                    v52 = (unsigned __int8 *)(v17 + 1);
                    *((_QWORD *)this + 1) = v52;
                  }
                  *(_BYTE *)(a1 + 44) = v51 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if (v52 == (unsigned __int8 *)v16
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    result = 1;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_24;
        v13 = *(_DWORD *)(a1 + 52);
        goto LABEL_43;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_57;
        goto LABEL_24;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_71;
        goto LABEL_24;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)this + 1);
        v16 = *((_QWORD *)this + 2);
        goto LABEL_95;
      default:
        v8 = TagFallback & 7;
LABEL_24:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
          return 0;
        continue;
    }
  }
}

uint64_t sub_1008FF7B4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_11:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102311028 + 16);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_14:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
    v8 = *(_QWORD *)(qword_102311028 + 24);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_17:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
    v9 = *(_QWORD *)(qword_102311028 + 32);
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (BOOL)a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (BOOL)a2, a4);
  return result;
}

uint64_t sub_1008FF8CC(uint64_t a1, unsigned int a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;

  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    result = 0;
    goto LABEL_49;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v6 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else if (v6 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_17;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
      v9 = *(_QWORD *)(qword_102311028 + 16);
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D6350(v9, a2);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    else
      v12 = 1;
    v4 += v11 + v12 + 1;
    v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0)
        goto LABEL_20;
LABEL_34:
      v17 = *(_QWORD *)(a1 + 32);
      if (!v17)
        v17 = *(_QWORD *)(qword_102311028 + 32);
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FEA98(v17, a2);
      v19 = (int)v18;
      if (v18 >= 0x80)
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      else
        v20 = 1;
      v4 += v19 + v20 + 1;
      v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 0x20) == 0)
        goto LABEL_46;
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  v13 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v13 = *(_QWORD *)(qword_102311028 + 24);
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EA3D0(v13, a2);
  v15 = (int)v14;
  if (v14 >= 0x80)
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  else
    v16 = 1;
  v4 += v15 + v16 + 1;
  v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x10) != 0)
    goto LABEL_34;
LABEL_20:
  if ((v3 & 0x20) != 0)
  {
LABEL_40:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v21 & 0x80000000) != 0)
    {
      v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      v22 = 2;
    }
    v4 += v22;
  }
LABEL_46:
  if ((v3 & 0x40) != 0)
    result = v4 + 2;
  else
    result = v4;
LABEL_49:
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_1008FFA98(uint64_t a1, void *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008FED50(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FFAE4()
{
  return 1;
}

_QWORD *sub_1008FFAEC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.MeasurementReportWithEstimate");
}

void sub_1008FFAFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D9F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FFB0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = off_10215D9F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete();
}

void sub_1008FFB3C()
{
  operator new();
}

uint64_t sub_1008FFB74(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char *v5;
  wireless_diagnostics::google::protobuf::io::CodedInputStream *TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  char *v14;
  unsigned int v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  unsigned __int8 *v20;
  uint64_t result;
  unsigned int v22;

  while (2)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v22 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          v10 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)this + 1) = v11;
LABEL_23:
          *(_BYTE *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if ((_DWORD)result)
        {
          v10 = v22;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
LABEL_26:
        v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result)
            return result;
          v15 = v22;
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v15 = *v12;
          v16 = v12 + 1;
          *((_QWORD *)this + 1) = v16;
        }
        *(_BYTE *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24)
          continue;
        v13 = v16 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_34:
        v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result)
            return result;
          v17 = v22;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v17 = *v13;
          v18 = v13 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        *(_BYTE *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32)
          continue;
        v14 = v18 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_42:
        v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result)
            return result;
          v19 = v22;
          v20 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v19 = *v14;
          v20 = (unsigned __int8 *)(v14 + 1);
          *((_QWORD *)this + 1) = v20;
        }
        *(_BYTE *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_34;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v14 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_42;
      default:
        v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0)
          continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_1008FFE48(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  }
LABEL_8:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  return result;
}

uint64_t sub_1008FFEDC(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 16);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if ((v1 & 8) != 0)
    v2 += 2;
  if (*(_DWORD *)(a1 + 16))
    v3 = v2;
  else
    v3 = 0;
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_1008FFF1C(uint64_t a1, _BYTE *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  sub_1008F924C(a1, lpsrc);
}

uint64_t sub_1008FFF68()
{
  return 1;
}

_QWORD *sub_1008FFF70@<X0>(_QWORD *a1@<X8>)
{
  return sub_1015A2E04(a1, "proto.gnss.Emergency.Cdma1xContext");
}

_QWORD *sub_1008FFF84(_QWORD *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_100270E34((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1008FFFB4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008FFFD4(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;

  result = sub_100F72BB4(a2, a3);
  v6 = *a1;
  v5 = a1[1];
  if (*a1 != v5)
  {
    while (*v6 != result)
    {
      v6 += 5;
      if (v6 == v5)
        return result;
    }
  }
  if (v6 != v5)
  {
    result = sub_100900068((uint64_t)a1, 0, v6);
    v7 = a1[1];
    v8 = (char *)v7 - (char *)(v6 + 5);
    if (v7 != v6 + 5)
      result = (uint64_t)memmove(v6, v6 + 5, (char *)v7 - (char *)(v6 + 5));
    a1[1] = (uint64_t *)((char *)v6 + v8);
  }
  return result;
}

uint64_t sub_100900068(uint64_t result, int a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v6[14];
  uint64_t v7;

  if (*(_QWORD *)(result + 48))
  {
    v3 = result;
    v7 = 0;
    if (a2)
      v4 = 20;
    else
      v4 = 21;
    memset(v6, 0, sizeof(v6));
    sub_1009004DC(v4, *a3, a3[1], a3[2], a3[3], (uint64_t)v6);
    v5 = *(_QWORD *)(v3 + 48);
    if (!v5)
      sub_10025FD1C();
    return (*(uint64_t (**)(uint64_t, _OWORD *))(*(_QWORD *)v5 + 48))(v5, v6);
  }
  return result;
}

void sub_100900120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  char *v11;
  char *v12;
  int64_t v13;
  char v14[40];

  v10 = sub_100F72BB4(a2, a3);
  v12 = *(char **)a1;
  v11 = *(char **)(a1 + 8);
  if (*(char **)a1 != v11)
  {
    while (*(_QWORD *)v12 != v10)
    {
      v12 += 40;
      if (v12 == v11)
        goto LABEL_9;
    }
  }
  if (v12 == v11)
  {
LABEL_9:
    sub_10090020C(a1);
  }
  else
  {
    v13 = v11 - (v12 + 40);
    if (v11 != v12 + 40)
      memmove(v12, v12 + 40, v11 - (v12 + 40));
    *(_QWORD *)(a1 + 8) = &v12[v13];
    sub_10090020C(a1);
    sub_100900260((void **)a1, a2, a3, a4, a5, (uint64_t)v14);
  }
}

uint64_t sub_10090020C(uint64_t result)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t *v3;

  v1 = (uint64_t **)result;
  v2 = *(uint64_t **)result;
  v3 = *(uint64_t **)(result + 8);
  if (*(uint64_t **)result != v3)
  {
    do
    {
      result = sub_100900068((uint64_t)v1, 0, v2);
      v2 += 5;
    }
    while (v2 != v3);
    v2 = *v1;
  }
  v1[1] = v2;
  return result;
}

void sub_100900260(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char *v11;
  char *v12;
  __int128 v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  __int128 v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;

  *(_QWORD *)a6 = sub_100F72BB4(a2, a3);
  *(_QWORD *)(a6 + 8) = a3;
  *(_QWORD *)(a6 + 16) = a4;
  *(_QWORD *)(a6 + 24) = a5;
  *(CFAbsoluteTime *)(a6 + 32) = CFAbsoluteTimeGetCurrent();
  v11 = (char *)a1[2];
  v12 = (char *)a1[1];
  if (v12 >= v11)
  {
    v15 = 0xCCCCCCCCCCCCCCCDLL * ((v12 - (_BYTE *)*a1) >> 3);
    v16 = v15 + 1;
    if (v15 + 1 > 0x666666666666666)
      sub_100259694();
    v17 = 0xCCCCCCCCCCCCCCCDLL * ((v11 - (_BYTE *)*a1) >> 3);
    if (2 * v17 > v16)
      v16 = 2 * v17;
    if (v17 >= 0x333333333333333)
      v18 = 0x666666666666666;
    else
      v18 = v16;
    if (v18)
      v19 = (char *)sub_100357184((uint64_t)(a1 + 2), v18);
    else
      v19 = 0;
    v20 = &v19[40 * v15];
    v21 = &v19[40 * v18];
    v22 = *(_OWORD *)(a6 + 16);
    *(_OWORD *)v20 = *(_OWORD *)a6;
    *((_OWORD *)v20 + 1) = v22;
    *((_QWORD *)v20 + 4) = *(_QWORD *)(a6 + 32);
    v14 = v20 + 40;
    v24 = (char *)*a1;
    v23 = (char *)a1[1];
    if (v23 != *a1)
    {
      do
      {
        v25 = *(_OWORD *)(v23 - 40);
        v26 = *(_OWORD *)(v23 - 24);
        *((_QWORD *)v20 - 1) = *((_QWORD *)v23 - 1);
        *(_OWORD *)(v20 - 24) = v26;
        *(_OWORD *)(v20 - 40) = v25;
        v20 -= 40;
        v23 -= 40;
      }
      while (v23 != v24);
      v23 = (char *)*a1;
    }
    *a1 = v20;
    a1[1] = v14;
    a1[2] = v21;
    if (v23)
      operator delete(v23);
  }
  else
  {
    v13 = *(_OWORD *)(a6 + 16);
    *(_OWORD *)v12 = *(_OWORD *)a6;
    *((_OWORD *)v12 + 1) = v13;
    *((_QWORD *)v12 + 4) = *(_QWORD *)(a6 + 32);
    v14 = v12 + 40;
  }
  a1[1] = v14;
}

double sub_1009003C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_100F72BB4(a2, a3);
  v5 = *a1;
  v6 = a1[1];
  if (*a1 != v6)
  {
    while (*(_QWORD *)v5 != v4)
    {
      v5 += 40;
      if (v5 == v6)
        return -1.0;
    }
  }
  if (v5 == v6)
    return -1.0;
  else
    return *(double *)(v5 + 32);
}

uint64_t sub_100900424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13[5];

  result = sub_100F72BB4(a2, a3);
  v11 = *(_QWORD **)a1;
  v12 = *(_QWORD **)(a1 + 8);
  if (*(_QWORD **)a1 != v12)
  {
    while (*v11 != result)
    {
      v11 += 5;
      if (v11 == v12)
        goto LABEL_6;
    }
  }
  if (v11 == v12)
  {
LABEL_6:
    sub_100900260((void **)a1, a2, a3, a4, a5, (uint64_t)v13);
    return sub_100900068(a1, 1, v13);
  }
  return result;
}

_QWORD *sub_1009004D0(_QWORD *result)
{
  result[1] = *result;
  return result;
}

void sub_1009004DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  CFAbsoluteTime Current;
  NSObject *v13;
  const char *v14;
  uint8_t *v15;
  int v16;
  uint64_t v17;
  uint8_t buf[4];
  uint64_t v19;

  *(_QWORD *)(a6 + 224) = 0;
  *(_OWORD *)(a6 + 192) = 0u;
  *(_OWORD *)(a6 + 208) = 0u;
  *(_OWORD *)(a6 + 160) = 0u;
  *(_OWORD *)(a6 + 176) = 0u;
  *(_OWORD *)(a6 + 128) = 0u;
  *(_OWORD *)(a6 + 144) = 0u;
  *(_OWORD *)(a6 + 96) = 0u;
  *(_OWORD *)(a6 + 112) = 0u;
  *(_OWORD *)(a6 + 64) = 0u;
  *(_OWORD *)(a6 + 80) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)(a6 + 48) = 0u;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  Current = CFAbsoluteTimeGetCurrent();
  *(CFAbsoluteTime *)a6 = Current;
  *(CFAbsoluteTime *)(a6 + 8) = Current;
  *(CFAbsoluteTime *)(a6 + 24) = Current;
  *(_QWORD *)(a6 + 112) = a2;
  *(_QWORD *)(a6 + 120) = a3;
  *(_QWORD *)(a6 + 128) = a4;
  *(_QWORD *)(a6 + 136) = a5;
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 0x14)
  {
    *(_QWORD *)(a6 + 16) = a1;
  }
  else
  {
    *(_QWORD *)(a6 + 16) = 23;
    if (qword_10229FE60 != -1)
      dispatch_once(&qword_10229FE60, &stru_10215E340);
    v13 = qword_10229FE68;
    if (os_log_type_enabled((os_log_t)qword_10229FE68, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134217984;
      v19 = a1;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "Unsupported event type passed to prewarm manager %lu, sending out a null event", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FE60 != -1)
        dispatch_once(&qword_10229FE60, &stru_10215E340);
      v16 = 134217984;
      v17 = a1;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE68, 17, "Unsupported event type passed to prewarm manager %lu, sending out a null event", &v16);
      v15 = (uint8_t *)v14;
      sub_100512490("Generic", 1, 0, 0, "static CLMotionStateMediator_Type::WorkoutEvent CLWorkoutUtil::PrewarmManager::createPrewarmWorkoutEvent(CMWorkoutEvent, CMWorkoutType, CMWorkoutLocationType, CLMotionStateMediator_Type::WorkoutAttrib)", "%s\n", v14);
      if (v15 != buf)
        free(v15);
    }
  }
}

void sub_1009006F4(id a1)
{
  qword_10229FE68 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_100900720(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  _QWORD *v5;

  v5 = (_QWORD *)sub_1001B5A2C(a1, a2, a3, a4, a5);
  *v5 = off_10215E370;
  v5[6] = 0;
  sub_100CFAD30();
}

void sub_1009007B0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  sub_10002FA68(v1);
  _Unwind_Resume(a1);
}

void sub_1009007DC(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLSkiDataSubscription::onSkiNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 8), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E3F0);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLSkiDataSubscription::onSkiNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E3F0);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLSkiDataSubscription::onSkiNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_1009019AC(a4, v7, a2, a3);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_100900994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009009B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = off_10215E370;
  v2 = a1[6];
  a1[6] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[6];
    a1[6] = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  return sub_10002FA68((uint64_t)a1);
}

void sub_100900A18(_QWORD *a1)
{
  sub_1009009B8(a1);
  operator delete();
}

_QWORD *sub_100900A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t i;
  _BYTE *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  _QWORD v11[3];
  _QWORD *v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[3];
  _QWORD *v16;
  _QWORD v17[3];
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  _QWORD v21[3];
  _BYTE v22[32];

  v15[0] = off_10215E440;
  v15[1] = sub_100900D60;
  v15[2] = 0;
  v16 = v15;
  sub_1015A2E04(v17, "kCLConnectionMessageSkiDataUpdate");
  sub_100902120((uint64_t)&v18, (uint64_t)v15);
  v13[0] = off_10215E4F0;
  v13[1] = sub_100901170;
  v13[2] = 0;
  v14 = v13;
  sub_1015A2E04(v19, "kCLConnectionMessageSkiDataQuery");
  sub_100902120((uint64_t)&v20, (uint64_t)v13);
  v11[0] = off_10215E440;
  v11[1] = sub_100901584;
  v11[2] = 0;
  v12 = v11;
  sub_1015A2E04(v21, "kCLConnectionMessageSkiDataLiveUpdate");
  sub_100902120((uint64_t)v22, (uint64_t)v11);
  sub_1009026B4(a1, (unsigned __int8 *)v17, 3);
  for (i = 0; i != -21; i -= 7)
  {
    v3 = *(_BYTE **)&v22[i * 8 + 24];
    if (&v22[i * 8] == v3)
    {
      v3 = &v22[i * 8];
      v4 = 4;
    }
    else
    {
      if (!v3)
        goto LABEL_7;
      v4 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_7:
    if (SHIBYTE(v21[i + 2]) < 0)
      operator delete((void *)v21[i]);
  }
  v5 = v12;
  if (v12 == v11)
  {
    v6 = 4;
    v5 = v11;
LABEL_14:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }
  else if (v12)
  {
    v6 = 5;
    goto LABEL_14;
  }
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
LABEL_19:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }
  else if (v14)
  {
    v8 = 5;
    goto LABEL_19;
  }
  result = v16;
  if (v16 == v15)
  {
    v10 = 4;
    result = v15;
    return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
  }
  else if (v16)
  {
    v10 = 5;
    return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
  }
  return result;
}

void sub_100900C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, char a13, uint64_t a14, uint64_t a15, char *a16, char a17, uint64_t a18, uint64_t a19, char *a20,char a21)
{
  uint64_t i;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  for (i = 112; i != -56; i -= 56)
    sub_1004E21A4((uint64_t)(&a21 + i));
  v23 = a12;
  if (a12 == &a9)
  {
    v24 = 4;
    v23 = &a9;
  }
  else
  {
    if (!a12)
      goto LABEL_8;
    v24 = 5;
  }
  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_8:
  v25 = a16;
  if (a16 == &a13)
  {
    v26 = 4;
    v25 = &a13;
  }
  else
  {
    if (!a16)
      goto LABEL_13;
    v26 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_13:
  v27 = a20;
  if (a20 == &a17)
  {
    v28 = 4;
    v27 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_18;
    v28 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v27 + 8 * v28))();
LABEL_18:
  _Unwind_Resume(a1);
}

void sub_100900D60(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  char *v14;
  const char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSNumber *v19;
  int v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  int v25;
  _BYTE buf[12];
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  int v30;

  v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (qword_10229FE20 != -1)
    dispatch_once(&qword_10229FE20, &stru_10215E410);
  v5 = qword_10229FE28;
  if (os_log_type_enabled((os_log_t)qword_10229FE28, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 24);
    *(_DWORD *)buf = 138412802;
    *(_QWORD *)&buf[4] = v6;
    v27 = 2048;
    v28 = a1;
    v29 = 1024;
    v30 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SkiData subscription changed, %@, %p, %d", buf, 0x1Cu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FE20 != -1)
      dispatch_once(&qword_10229FE20, &stru_10215E410);
    v12 = *(_QWORD *)(a1 + 24);
    v20 = 138412802;
    v21 = v12;
    v22 = 2048;
    v23 = a1;
    v24 = 1024;
    v25 = a2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE28, 0, "SkiData subscription changed, %@, %p, %d", &v20, 28);
    v14 = (char *)v13;
    sub_100512490("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleRequestSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v13);
    if (v14 != buf)
      free(v14);
  }
  if (sub_1001BBC08(a1))
  {
    if ((sub_1001B7910() & 0x400000000) != 0)
    {
      sub_1001A638C(a1);
      v9 = *(_QWORD *)(a1 + 48);
      v11 = *(_QWORD *)(v9 + 8);
      v10 = *(void **)(v9 + 16);
      if (a2)
        objc_msgSend(v10, "register:forNotification:registrationInfo:", v11, 0, 0);
      else
        objc_msgSend(v10, "unregister:forNotification:", v11, 0);
      goto LABEL_16;
    }
    v7 = 109;
  }
  else
  {
    v7 = 111;
  }
  if (qword_10229FE20 != -1)
    dispatch_once(&qword_10229FE20, &stru_10215E410);
  v8 = qword_10229FE28;
  if (os_log_type_enabled((os_log_t)qword_10229FE28, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning Failed to subscribe to ski updates.", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FE20 != -1)
      dispatch_once(&qword_10229FE20, &stru_10215E410);
    LOWORD(v20) = 0;
    LODWORD(v17) = 2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE28, 0, "#Warning Failed to subscribe to ski updates.", &v20, v17);
    v16 = (char *)v15;
    sub_100512490("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleRequestSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v15);
    if (v16 != buf)
      free(v16);
  }
  v18 = CMErrorMessage;
  v19 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v7);
  *(_QWORD *)buf = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1);
  sub_100901CF0(a1, buf);
LABEL_16:

}

void sub_100901130(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100901170(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  CLConnectionMessage *v7;
  uint64_t v8;
  uint64_t v9;
  NSSet *v10;
  void *DictionaryOfClasses;
  void *v12;
  uint64_t v13;
  void *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  NSObject *v21;
  CLConnectionMessage *v22;
  const char *v23;
  uint8_t *v24;
  uint64_t v25;
  id v26[2];
  _QWORD v27[4];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  CLConnectionMessage *v34;
  std::__shared_weak_count *v35;
  _OWORD v36[6];
  uint64_t v37;
  _UNKNOWN **v38;
  uint8_t buf[16];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  NSNumber *v46;

  v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (!sub_1001BBC08(a1))
  {
    v6 = 111;
    goto LABEL_5;
  }
  if ((sub_1001B7910() & 0x400000000) == 0)
  {
    v6 = 109;
LABEL_5:
    v7 = *(CLConnectionMessage **)a2;
    v45 = CMErrorMessage;
    v46 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v6);
    +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v46, &v45, 1);
    CLConnectionMessage::sendReply(v7);
    goto LABEL_6;
  }
  v8 = objc_opt_class(CMSkiData, v5);
  v10 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v8, objc_opt_class(NSString, v9), 0);
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses(*(CLConnectionMessage **)a2, v10);
  v12 = DictionaryOfClasses;
  if (DictionaryOfClasses
    && (v13 = CMSkiKeyDataRecord, objc_msgSend(DictionaryOfClasses, "objectForKeyedSubscript:", CMSkiKeyDataRecord)))
  {
    sub_100131938(v26, (uint64_t)"CLDaemonClient.SkiNotifierQuery", 0);
    objc_msgSend(objc_msgSend(v12, "objectForKeyedSubscript:", v13), "convertToSkiEntry:", buf);
    v14 = *(void **)(*(_QWORD *)(a1 + 48) + 16);
    v36[2] = v41;
    v36[3] = v42;
    v36[4] = v43;
    v36[5] = v44;
    v36[0] = *(_OWORD *)buf;
    v36[1] = v40;
    v27[1] = 3321888768;
    v28 = *(_OWORD *)buf;
    v29 = v40;
    v32 = v43;
    v33 = v44;
    v27[0] = _NSConcreteStackBlock;
    v27[2] = sub_100901D90;
    v27[3] = &unk_10215E390;
    v30 = v41;
    v31 = v42;
    v15 = *(std::__shared_weak_count **)(a2 + 8);
    v34 = *(CLConnectionMessage **)a2;
    v35 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    objc_msgSend(v14, "queryUsingRecord:withReply:", v36, v27);
    v18 = v35;
    if (v35)
    {
      v19 = (unint64_t *)&v35->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    sub_100131740(v26);
  }
  else
  {
    if (qword_10229FE20 != -1)
      dispatch_once(&qword_10229FE20, &stru_10215E410);
    v21 = qword_10229FE28;
    if (os_log_type_enabled((os_log_t)qword_10229FE28, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_FAULT, "Programmer error: Wrong parameters were passed.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FE20 != -1)
        dispatch_once(&qword_10229FE20, &stru_10215E410);
      LOWORD(v26[0]) = 0;
      LODWORD(v25) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE28, 17, "Programmer error: Wrong parameters were passed.", v26, v25);
      v24 = (uint8_t *)v23;
      sub_100512490("Generic", 1, 0, 0, "void CLSkiDataSubscription::handleMessageSkiDataQuery(std::shared_ptr<CLConnectionMessage>)", "%s\n", v23);
      if (v24 != buf)
        free(v24);
    }
    v22 = *(CLConnectionMessage **)a2;
    v37 = CMErrorMessage;
    v38 = &off_10221B798;
    +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v38, &v37, 1);
    CLConnectionMessage::sendReply(v22);
  }
LABEL_6:

}

void sub_10090152C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100901584(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  char *v14;
  const char *v15;
  char *v16;
  uint64_t v17;
  NSNumber *v18;
  int v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  int v24;
  _BYTE buf[12];
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  int v29;

  v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (qword_10229FE20 != -1)
    dispatch_once(&qword_10229FE20, &stru_10215E410);
  v5 = qword_10229FE28;
  if (os_log_type_enabled((os_log_t)qword_10229FE28, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 24);
    *(_DWORD *)buf = 138412802;
    *(_QWORD *)&buf[4] = v6;
    v26 = 2048;
    v27 = a1;
    v28 = 1024;
    v29 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[live data] subscription changed, %@, %p, %d", buf, 0x1Cu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FE20 != -1)
      dispatch_once(&qword_10229FE20, &stru_10215E410);
    v12 = *(_QWORD *)(a1 + 24);
    v19 = 138412802;
    v20 = v12;
    v21 = 2048;
    v22 = a1;
    v23 = 1024;
    v24 = a2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE28, 0, "[live data] subscription changed, %@, %p, %d", &v19, 28);
    v14 = (char *)v13;
    sub_100512490("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleRequestLiveSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v13);
    if (v14 != buf)
      free(v14);
  }
  if (sub_1001BBC08(a1))
  {
    if ((sub_1001B7910() & 0x400000000) != 0)
    {
      sub_1001A638C(a1);
      v9 = *(_QWORD *)(a1 + 48);
      v11 = *(_QWORD *)(v9 + 8);
      v10 = *(void **)(v9 + 16);
      if (a2)
        objc_msgSend(v10, "register:forNotification:registrationInfo:", v11, 2, 0);
      else
        objc_msgSend(v10, "unregister:forNotification:", v11, 2);
      goto LABEL_16;
    }
    v7 = 109;
  }
  else
  {
    v7 = 111;
  }
  if (qword_10229FE20 != -1)
    dispatch_once(&qword_10229FE20, &stru_10215E410);
  v8 = qword_10229FE28;
  if (os_log_type_enabled((os_log_t)qword_10229FE28, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "[live data] Failed to subscribe to live updates due to error %d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FE20 != -1)
      dispatch_once(&qword_10229FE20, &stru_10215E410);
    v19 = 67109120;
    LODWORD(v20) = v7;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FE28, 16, "[live data] Failed to subscribe to live updates due to error %d", &v19);
    v16 = (char *)v15;
    sub_100512490("Generic", 1, 0, 0, "void CLSkiDataSubscription::handleRequestLiveSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v15);
    if (v16 != buf)
      free(v16);
  }
  v17 = CMErrorMessage;
  v18 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v7);
  *(_QWORD *)buf = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v18, &v17, 1);
  sub_100902054(a1, buf);
LABEL_16:

}

void sub_10090196C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1009019AC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  id v6;
  void *v7;
  char v8;
  char v9;
  id v10;
  void *__p[2];
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  NSArray *v17;

  if (*a3 == 2)
  {
    sub_1015A2E04(__p, "kCLConnectionMessageSkiDataLiveUpdate");
    v8 = sub_100FFB214(a1);
    v9 = v8;
    if (v12 < 0)
    {
      operator delete(__p[0]);
      if ((v9 & 1) == 0)
        return;
    }
    else if ((v8 & 1) == 0)
    {
      return;
    }
    v10 = objc_msgSend(objc_alloc((Class)CMLiveSkiData), "initWithDate:distance:averageSpeed:verticalDescent:runCount:maximumSpeed:", objc_msgSend(objc_alloc((Class)NSDate), "initWithTimeIntervalSinceReferenceDate:", *(double *)a4), *(unsigned int *)(a4 + 32), *(double *)(a4 + 8), *(double *)(a4 + 16), *(double *)(a4 + 24), *(double *)(a4 + 40));
    v13 = CMSkiKeyDataRecord;
    v14 = v10;
    __p[0] = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v14, &v13, 1);
    sub_100901C48(a1, __p);

    return;
  }
  if (!*a3)
  {
    v6 = objc_msgSend(objc_alloc((Class)CMSkiData), "initWithSkiEntry:", a4);
    if (v6)
    {
      v7 = v6;
      v15 = v6;
      v16 = CMSkiKeyDataArray;
      v17 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v15, 1);
      __p[0] = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);

      sub_100901BA0(a1, __p);
    }
  }
}

void sub_100901B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100901BA0(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  sub_100876330(&off_10215E560, a2, &v6);
  sub_10011A678(a1, &v6);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_100901C34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100901C48(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  sub_1004E6BA4(&off_10215E568, a2, &v6);
  sub_10011A678(a1, &v6);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_100901CDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100901CF0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  v2 = *(_QWORD *)(a1 + 32);
  sub_1004E6BA4(&off_10215E560, a2, &v6);
  (*(void (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v2 + 24))(v2, &v6, 0);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_100901D7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100901D90(uint64_t a1, void *a2)
{
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint8_t *v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  char *v15;
  __int16 v16;
  char *v17;
  __int16 v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  char *v23;
  __int16 v24;
  char *v25;
  __int16 v26;
  id v27;
  char v28[48];
  char out[40];
  uint64_t v30;
  void *v31;

  if (a2)
    v4 = a2;
  else
    v4 = &__NSArray0__struct;
  v30 = CMSkiKeyDataArray;
  v31 = v4;
  +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1);
  memset(out, 0, 37);
  memset(v28, 0, 37);
  uuid_unparse((const unsigned __int8 *)(a1 + 56), out);
  uuid_unparse((const unsigned __int8 *)(a1 + 40), v28);
  if (qword_10229FE20 != -1)
    dispatch_once(&qword_10229FE20, &stru_10215E410);
  v5 = qword_10229FE28;
  if (os_log_type_enabled((os_log_t)qword_10229FE28, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134218754;
    v21 = v6;
    v22 = 2080;
    v23 = out;
    v24 = 2080;
    v25 = v28;
    v26 = 2048;
    v27 = objc_msgSend(a2, "count");
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Query: id, %llu, session, %s, source, %s, count: %lu", buf, 0x2Au);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FE20 != -1)
      dispatch_once(&qword_10229FE20, &stru_10215E410);
    v8 = qword_10229FE28;
    v9 = *(_QWORD *)(a1 + 32);
    v12 = 134218754;
    v13 = v9;
    v14 = 2080;
    v15 = out;
    v16 = 2080;
    v17 = v28;
    v18 = 2048;
    v19 = objc_msgSend(a2, "count");
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v8, 1, "Query: id, %llu, session, %s, source, %s, count: %lu", &v12, 42);
    v11 = (uint8_t *)v10;
    sub_100512490("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleMessageSkiDataQuery(std::shared_ptr<CLConnectionMessage>)_block_invoke", "%s\n", v10);
    if (v11 != buf)
      free(v11);
  }
  return CLConnectionMessage::sendReply(*(_QWORD *)(a1 + 128));
}

uint64_t sub_100902028(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(result + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(result + 136) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t sub_10090204C(uint64_t a1)
{
  return sub_100261F44(a1 + 128);
}

void sub_100902054(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  v2 = *(_QWORD *)(a1 + 32);
  sub_1004E6BA4(&off_10215E568, a2, &v6);
  (*(void (**)(uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v2 + 24))(v2, &v6, 0);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1009020E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1009020F4(id a1)
{
  qword_1022A0228 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100902120(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

void sub_100902184(id a1)
{
  qword_10229FE28 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Skiing");
}

__n128 sub_1009021B0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = off_10215E440;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1009021EC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_10215E440;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100902210(uint64_t a1, uint64_t a2, __int128 *a3)
{
  sub_100902260(a1 + 8, a2, a3);
}

uint64_t sub_100902218(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100902254()
{
}

void sub_100902260(uint64_t a1, uint64_t a2, __int128 *a3)
{
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  __int128 v6;

  v6 = *a3;
  *(_QWORD *)a3 = 0;
  *((_QWORD *)a3 + 1) = 0;
  sub_1009022E4(a1, a2, (CLConnectionMessage **)&v6);
  v3 = (std::__shared_weak_count *)*((_QWORD *)&v6 + 1);
  if (*((_QWORD *)&v6 + 1))
  {
    v4 = (unint64_t *)(*((_QWORD *)&v6 + 1) + 8);
    do
      v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_1009022CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
    sub_1018FBC0C(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009022E4(uint64_t a1, uint64_t a2, CLConnectionMessage **a3)
{
  NSSet *v6;
  const __CFDictionary *DictionaryOfClasses;
  void (*v8)(_QWORD *, BOOL, uint8_t *);
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  NSObject *v12;
  BOOL v14;
  uint8_t v15[16];
  uint8_t buf[4];
  int v17;
  __int16 v18;
  const char *v19;

  v6 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  DictionaryOfClasses = (const __CFDictionary *)CLConnectionMessage::getDictionaryOfClasses(*a3, v6);
  sub_1001C1D6C((int)v15, DictionaryOfClasses);
  v14 = 0;
  if ((sub_1001E4874((uint64_t)v15, "kCLConnectionMessageSubscribeKey", &v14) & 1) != 0)
  {
    v8 = *(void (**)(_QWORD *, BOOL, uint8_t *))a1;
    v9 = *(_QWORD *)(a1 + 8);
    v10 = (_QWORD *)(a2 + (v9 >> 1));
    if ((v9 & 1) != 0)
      v8 = *(void (**)(_QWORD *, BOOL, uint8_t *))(*v10 + v8);
    v8(v10, v14, v15);
  }
  else
  {
    if (qword_1022A01C0 != -1)
      dispatch_once(&qword_1022A01C0, &stru_10215E4B0);
    v11 = qword_1022A01C8;
    if (os_log_type_enabled((os_log_t)qword_1022A01C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 68289026;
      v17 = 0;
      v18 = 2082;
      v19 = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
      if (qword_1022A01C0 != -1)
        dispatch_once(&qword_1022A01C0, &stru_10215E4B0);
    }
    v12 = qword_1022A01C8;
    if (os_signpost_enabled((os_log_t)qword_1022A01C8))
    {
      *(_DWORD *)buf = 68289026;
      v17 = 0;
      v18 = 2082;
      v19 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Couldn't get value for kCLConnectionMessageSubscribeKey key", "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
    }
  }
  return sub_10011A5A8(v15);
}

void sub_1009024CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  _Unwind_Resume(exception_object);
}

void sub_1009024E8(id a1)
{
  qword_1022A01C8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

__n128 sub_100902514(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = off_10215E4F0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100902550(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_10215E4F0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100902574(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1009025C4(a1 + 8, a2, a3);
}

uint64_t sub_10090257C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1009025B8()
{
}

void sub_1009025C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  void (*v5)(_QWORD *, uint64_t *);
  uint64_t v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v4 = *a3;
  v3 = (std::__shared_weak_count *)a3[1];
  v15 = v3;
  *a3 = 0;
  a3[1] = 0;
  v5 = *(void (**)(_QWORD *, uint64_t *))a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = (_QWORD *)(a2 + (v6 >> 1));
  if ((v6 & 1) != 0)
    v5 = *(void (**)(_QWORD *, uint64_t *))(*v7 + v5);
  v16 = v4;
  v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v5(v7, &v16);
  v10 = v17;
  if (v17)
  {
    v11 = (unint64_t *)&v17->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v15)
  {
    v13 = (unint64_t *)&v15->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_100902698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_100261F44((uint64_t)&a11);
  sub_100261F44((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1009026B4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    v5 = 56 * a3;
    do
    {
      sub_10090272C(a1, a2, (__int128 *)a2);
      a2 += 56;
      v5 -= 56;
    }
    while (v5);
  }
  return a1;
}

void sub_100902718(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1004E6A98(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_10090272C(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unsigned __int8 **v13;
  unsigned __int8 *i;
  unint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD v25[3];

  v7 = (_QWORD *)(a1 + 24);
  v8 = sub_10025A024(a1 + 24, (uint64_t)a2);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v10)
        v3 = v8 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v8;
    }
    v13 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(unsigned __int8 **)i)
      {
        v15 = *((_QWORD *)i + 1);
        if (v15 == v9)
        {
          if ((sub_10025A4CC(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10)
              v15 %= v10;
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3)
            break;
        }
      }
    }
  }
  sub_1009029AC(a1, v9, a3, (uint64_t)v25);
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_10012E444(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v25[0] = *v22;
    *v22 = v25[0];
  }
  else
  {
    *(_QWORD *)v25[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v25[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v25[0])
    {
      v23 = *(_QWORD *)(*(_QWORD *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10)
          v23 %= v10;
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v25[0];
    }
  }
  i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  sub_1004E69F0((uint64_t)v25, 0);
  return i;
}

void sub_100902994(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1004E69F0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_1009029AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;

  v7 = a1 + 16;
  v8 = operator new(0x48uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_100902A20(v8 + 2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100902A08(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1004E69F0(v1, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_100902A20(_QWORD *__dst, __int128 *a2)
{
  __int128 v4;

  if (*((char *)a2 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    __dst[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  sub_100270E34((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_100902A78(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100902A94()
{
  sub_1015A2E04(qword_102305718, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305718, (void *)&_mh_execute_header);
}

void sub_100902DF8(uint64_t a1, int a2)
{
  NSObject *v3;
  id v4;
  int v5;
  NSObject *v6;
  id v7;
  int v8;
  uint64_t v9;
  id v10;
  int v11;
  const char *v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  int v16;
  const char *v17;
  uint8_t *v18;
  _QWORD v19[2];
  _QWORD v20[2];
  int v21;
  id v22;
  __int16 v23;
  int v24;
  uint8_t buf[4];
  id v26;
  __int16 v27;
  int v28;

  if (a2)
  {
    if (qword_1022A01C0 != -1)
      dispatch_once(&qword_1022A01C0, &stru_10215E570);
    v3 = qword_1022A01C8;
    if (os_log_type_enabled((os_log_t)qword_1022A01C8, OS_LOG_TYPE_INFO))
    {
      v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "UTF8String");
      v5 = *(_DWORD *)(*(_QWORD *)(a1 + 32) + 16);
      *(_DWORD *)buf = 136446466;
      v26 = v4;
      v27 = 1026;
      v28 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Completed async acquire of status bar assertion for %{public}s (PID:%{public}d)", buf, 0x12u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01C0 != -1)
        dispatch_once(&qword_1022A01C0, &stru_10215E570);
      v9 = qword_1022A01C8;
      v10 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "UTF8String");
      v11 = *(_DWORD *)(*(_QWORD *)(a1 + 32) + 16);
      v21 = 136446466;
      v22 = v10;
      v23 = 1026;
      v24 = v11;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v9, 1, "Completed async acquire of status bar assertion for %{public}s (PID:%{public}d)", &v21, 18);
      v13 = (uint8_t *)v12;
      sub_100512490("Generic", 1, 0, 2, "-[CLStatusBarAssertion setDesiredEnablementState:]_block_invoke", "%s\n", v12);
      if (v13 != buf)
        free(v13);
    }
    v19[0] = CFSTR("Status");
    v19[1] = CFSTR("Pid");
    v20[0] = &__kCFBooleanTrue;
    v20[1] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(*(_QWORD *)(a1 + 32) + 16));
    sub_10019E128((uint64_t)+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v20, v19, 2), (uint64_t)"StatusBarOverride");
  }
  else
  {
    if (qword_1022A01C0 != -1)
      dispatch_once(&qword_1022A01C0, &stru_10215E570);
    v6 = qword_1022A01C8;
    if (os_log_type_enabled((os_log_t)qword_1022A01C8, OS_LOG_TYPE_FAULT))
    {
      v7 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "UTF8String");
      v8 = *(_DWORD *)(*(_QWORD *)(a1 + 32) + 16);
      *(_DWORD *)buf = 136446466;
      v26 = v7;
      v27 = 1026;
      v28 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "Failed async acquire of status bar assertion for %{public}s (PID:%{public}d)", buf, 0x12u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A01C0 != -1)
        dispatch_once(&qword_1022A01C0, &stru_10215E570);
      v14 = qword_1022A01C8;
      v15 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "UTF8String");
      v16 = *(_DWORD *)(*(_QWORD *)(a1 + 32) + 16);
      v21 = 136446466;
      v22 = v15;
      v23 = 1026;
      v24 = v16;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v14, 17, "Failed async acquire of status bar assertion for %{public}s (PID:%{public}d)", &v21, 18);
      v18 = (uint8_t *)v17;
      sub_100512490("Generic", 1, 0, 0, "-[CLStatusBarAssertion setDesiredEnablementState:]_block_invoke", "%s\n", v17);
      if (v18 != buf)
        free(v18);
    }
  }
}

void sub_1009031F4(id a1)
{
  qword_1022A01C8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

BOOL sub_100903220()
{
  return os_log_type_enabled((os_log_t)qword_1022A01C8, OS_LOG_TYPE_FAULT);
}

BOOL sub_100903234()
{
  uint64_t v0;

  return os_log_type_enabled(*(os_log_t *)(v0 + 456), OS_LOG_TYPE_INFO);
}

BOOL sub_100903244()
{
  uint64_t v0;

  return os_signpost_enabled(*(os_log_t *)(v0 + 456));
}

void sub_100903250(double *a1)
{
  double v1;
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  double v6;
  double v7;
  double v8;
  __double2 v9;
  __double2 v10;
  _WORD v11[8];
  uint8_t buf[1640];

  v1 = fabs(*a1) / 90.0;
  if (v1 > 1.0 || (v6 = a1[1], v6 < -180.0) || v6 > 180.0)
  {
    if (qword_1022A02D0 != -1)
      dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
    v2 = qword_1022A02D8;
    if (os_log_type_enabled((os_log_t)qword_1022A02D8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "Lat/lon is out of range for conversion.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A02D0 != -1)
        dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
      v11[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A02D8, 17, "Lat/lon is out of range for conversion.", v11, 2);
      v4 = (uint8_t *)v3;
      sub_100512490("Generic", 1, 0, 0, "void DPPoint::convertLatLon()", "%s\n", v3);
      if (v4 != buf)
        free(v4);
    }
  }
  else
  {
    v7 = (1.0 - v1) * 6378137.0 + v1 * 6356752.31;
    v8 = v6 / 57.2957795;
    v9 = __sincos_stret((90.0 - *a1) / 57.2957795);
    v10 = __sincos_stret(v8);
    *a1 = v9.__sinval * v7 * v10.__cosval;
    a1[1] = v9.__sinval * v7 * v10.__sinval;
    a1[2] = v9.__cosval * v7;
  }
}

void sub_100903488(uint64_t *a1, double *a2, uint64_t *a3, int a4, double a5)
{
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD **v21;
  _DWORD **v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _DWORD *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  int v45;
  double v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  NSObject *v71;
  const char *v72;
  uint8_t *v73;
  NSObject *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  double v78;
  uint64_t v79;
  unint64_t v80;
  double *v81;
  double *v82;
  uint8_t *v83;
  __int128 v84;
  double v85;
  double v86;
  double v87;
  const char *v88;
  uint8_t *v89;
  const char *v90;
  double *v91;
  _QWORD v93[3];
  _QWORD v94[3];
  _QWORD v95[3];
  _DWORD v96[2];
  __int16 v97;
  int v98;
  uint8_t buf[16];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  if (!a4)
  {
    sub_100903D90(a1, a3, 0xFFFFFFFFLL, 0xFFFFFFFFLL, a5);
    v58 = a1;
    goto LABEL_68;
  }
  v10 = (a3[1] - *a3) >> 3;
  v11 = 0xAAAAAAAAAAAAAAABLL * v10;
  v12 = -1431655765 * (int)v10;
  sub_100673974(v95, v12);
  v13 = v11 - 1;
  sub_100673974(v94, (int)v11 - 1);
  sub_1009046DC(v93, (int)v11 - 1);
  v91 = a2;
  if ((int)v11 < 1)
    goto LABEL_13;
  v14 = 0;
  v15 = v95[0];
  do
  {
    sub_1000F3860(v15 + 24 * v14, v12);
    v16 = *(_QWORD *)(v95[0] + 24 * v14);
    v17 = v14;
    do
    {
      *(_QWORD *)(v16 + 8 * v17) = 0;
      v18 = sub_1009041B4(a3, v14, v17, a4, v96);
      v15 = v95[0];
      v16 = *(_QWORD *)(v95[0] + 24 * v14);
      *(double *)(v16 + 8 * v17++) = v18;
    }
    while (v11 != v17);
    ++v14;
  }
  while (v14 != v11);
  if ((int)v11 < 2)
  {
LABEL_13:
    v29 = 0;
  }
  else
  {
    v19 = 0;
    v20 = (v11 - 1);
    do
    {
      sub_1000F3860(v94[0] + v19, v13);
      sub_1002F3170(v93[0] + v19, v13);
      v19 += 24;
      --v20;
    }
    while (v20);
    v21 = (_QWORD **)v94[0];
    v22 = (_DWORD **)v93[0];
    v23 = (uint64_t *)(*(_QWORD *)v95[0] + 8);
    v24 = (v11 - 1);
    do
    {
      v25 = *v23++;
      v26 = v25;
      v27 = *v21;
      v21 += 3;
      *v27 = v26;
      v28 = *v22;
      v22 += 3;
      *v28 = 0;
      --v24;
    }
    while (v24);
    v29 = 1;
  }
  v30 = 0;
  v31 = v93[0];
  v32 = v94[0];
  v33 = 24;
  v34 = (_QWORD *)(v94[0] + 24 * (int)(((v11 << 32) - 0x200000000) >> 32));
  if (v13 <= 1)
    v35 = 1;
  else
    v35 = v11 - 1;
  v36 = (v35 - 1);
  v37 = 2;
  v38 = 1;
  v39 = (uint64_t *)v94[0];
  do
  {
    if (v30 == v36)
    {
      if (qword_1022A02D0 != -1)
        dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
      v66 = qword_1022A02D8;
      if (os_log_type_enabled((os_log_t)qword_1022A02D8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "#Warning Never achieved the desired simplification. Using the original curve.", buf, 2u);
      }
      v58 = a1;
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A02D0 != -1)
          dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
        LOWORD(v96[0]) = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A02D8, 0, "#Warning Never achieved the desired simplification. Using the original curve.", v96, 2);
        v89 = (uint8_t *)v88;
        sub_100512490("Generic", 1, 0, 2, "void DynamicProgramPolygonSimplify(PointList &, const PointList &, double, SimplifyType)", "%s\n", v88);
        if (v89 != buf)
          free(v89);
        v58 = a1;
      }
      sub_10090446C(v58, v12);
      if ((int)v11 >= 1)
      {
        v67 = v11;
        v68 = (_QWORD *)(*v58 + 16);
        v69 = (_QWORD *)(*a3 + 16);
        do
        {
          *((_OWORD *)v68 - 1) = *((_OWORD *)v69 - 1);
          v70 = *v69;
          v69 += 3;
          *v68 = v70;
          v68 += 3;
          --v67;
        }
        while (v67);
      }
      goto LABEL_67;
    }
    v40 = v37;
    v41 = v38;
    *(_DWORD *)(*(_QWORD *)(v31 + 24 * v38) + 4 * v38) = v38;
    *(_QWORD *)(*(_QWORD *)(v32 + 24 * v38) + 8 * v38) = 0;
    if (++v38 < v13)
    {
      v42 = v37;
      v43 = (uint64_t *)(v95[0] + v33);
      do
      {
        v44 = v42 + 1;
        if (v41 <= v42)
        {
          v45 = -1;
          v47 = v43;
          v48 = v39;
          v49 = v30;
          v46 = 1.0e300;
          do
          {
            ++v49;
            v50 = *v47;
            v47 += 3;
            v51 = *(double *)(v50 + 8 * (v42 + 1));
            v52 = *v48;
            v48 += 3;
            v53 = *(double *)(v52 + 8 * (v41 - 1));
            if (v53 <= v51)
              v54 = v51;
            else
              v54 = v53;
            v55 = v51 + v53;
            if (a4 != 2)
              v55 = v54;
            if (v55 < v46 || v45 == -1)
            {
              v45 = v49;
              v46 = v55;
            }
          }
          while (v49 < v42);
        }
        else
        {
          v45 = -1;
          v46 = 1.0e300;
        }
        v57 = 3 * v42;
        *(double *)(*(_QWORD *)(v32 + 8 * v57) + 8 * v41) = v46;
        *(_DWORD *)(*(_QWORD *)(v31 + 8 * v57) + 4 * v41) = v45;
        v42 = v44;
      }
      while (v13 != (_DWORD)v44);
    }
    ++v30;
    ++v37;
    v39 += 3;
    v33 += 24;
  }
  while (*(double *)(*v34 + 8 * v41) >= a5);
  v58 = a1;
  sub_10090446C(a1, (v41 + 2));
  v59 = *a3;
  v60 = *a3 + 24 * ((int)v11 - 1);
  v61 = *a1;
  v62 = *a1 + 24 * v38;
  *(_OWORD *)v62 = *(_OWORD *)v60;
  *(_QWORD *)(v62 + 16) = *(_QWORD *)(v60 + 16);
  if (!v29)
  {
    v40 = v38;
LABEL_53:
    if (!(v40 | v13))
      goto LABEL_67;
    if (qword_1022A02D0 != -1)
      dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
    v71 = qword_1022A02D8;
    if (os_log_type_enabled((os_log_t)qword_1022A02D8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 67240448;
      *(_DWORD *)&buf[4] = v41;
      *(_WORD *)&buf[8] = 1026;
      *(_DWORD *)&buf[10] = v13;
      _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_FAULT, "Programming error. Number of points in backtrack do not match expected (2): %{public}d, %{public}d", buf, 0xEu);
    }
    if (!sub_1001BFF7C(115, 0))
      goto LABEL_67;
    bzero(buf, 0x65CuLL);
    if (qword_1022A02D0 != -1)
      dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
    v96[0] = 67240448;
    v96[1] = v41;
    v97 = 1026;
    v98 = v13;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A02D8, 17, "Programming error. Number of points in backtrack do not match expected (2): %{public}d, %{public}d", v96, 14);
    v73 = (uint8_t *)v72;
    sub_100512490("Generic", 1, 0, 0, "void DynamicProgramPolygonSimplify(PointList &, const PointList &, double, SimplifyType)", "%s\n", v72);
LABEL_80:
    if (v73 != buf)
      free(v73);
    v58 = a1;
    goto LABEL_67;
  }
  v63 = v93[0];
  while (v40 > 0)
  {
    v13 = *(_DWORD *)(*(_QWORD *)(v63 + 24 * (v13 - 1)) + 4 * --v40);
    v64 = v59 + 24 * v13;
    v65 = v61 + 24 * v40;
    *(_OWORD *)v65 = *(_OWORD *)v64;
    *(_QWORD *)(v65 + 16) = *(_QWORD *)(v64 + 16);
    if (v13 <= 0)
    {
      LODWORD(v41) = v40 - 1;
      goto LABEL_53;
    }
  }
  if (qword_1022A02D0 != -1)
    dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
  v74 = qword_1022A02D8;
  if (os_log_type_enabled((os_log_t)qword_1022A02D8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_FAULT, "Programming error. Number of points in backtrack do not match expected (1).", buf, 2u);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A02D0 != -1)
      dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
    LOWORD(v96[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A02D8, 17, "Programming error. Number of points in backtrack do not match expected (1).", v96, 2);
    v73 = (uint8_t *)v90;
    sub_100512490("Generic", 1, 0, 0, "void DynamicProgramPolygonSimplify(PointList &, const PointList &, double, SimplifyType)", "%s\n", v90);
    goto LABEL_80;
  }
LABEL_67:
  *(_QWORD *)buf = v93;
  sub_10025E1F0((void ***)buf);
  *(_QWORD *)buf = v94;
  sub_10025E1F0((void ***)buf);
  *(_QWORD *)buf = v95;
  sub_10025E1F0((void ***)buf);
  a2 = v91;
LABEL_68:
  v101 = 0;
  v102 = 0;
  v103 = 0;
  v76 = *v58;
  v75 = v58[1];
  *(_OWORD *)buf = *(_OWORD *)*v58;
  v100 = *(_QWORD *)(v76 + 16);
  v77 = 0xAAAAAAAAAAAAAAABLL * ((v75 - v76) >> 3);
  v78 = 0.0;
  if (v77 >= 2)
  {
    v79 = 0;
    v80 = v77 - 1;
    v81 = (double *)(v76 + 40);
    do
    {
      v82 = (double *)&buf[24 * v79];
      v79 ^= 1uLL;
      v83 = &buf[24 * v79];
      v84 = *((_OWORD *)v81 - 1);
      *(_OWORD *)v83 = v84;
      v85 = *v81;
      v81 += 3;
      *((double *)v83 + 2) = v85;
      v86 = *v82 - *(double *)&v84;
      *(double *)&v84 = v82[1] - *((double *)&v84 + 1);
      *v82 = v86;
      *((_QWORD *)v82 + 1) = v84;
      v87 = v82[2] - v85;
      v82[2] = v87;
      v78 = v78 + sqrt(*(double *)&v84 * *(double *)&v84 + v86 * v86 + v87 * v87);
      --v80;
    }
    while (v80);
  }
  *a2 = v78;
}

void sub_100903D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **a25)
{
  a25 = (void **)&a14;
  sub_10025E1F0(&a25);
  a25 = (void **)&a17;
  sub_10025E1F0(&a25);
  a25 = (void **)&a20;
  sub_10025E1F0(&a25);
  _Unwind_Resume(a1);
}

void sub_100903D90(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v6;
  unsigned int v10;
  double v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  int v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  const char *v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE *v38;
  uint64_t v39;
  unsigned int v40;
  uint8_t buf[8];
  uint64_t v42;
  uint64_t v43;

  v6 = a3;
  if ((a3 & 0x80000000) != 0)
  {
    v6 = 0;
    a4 = -1431655765 * ((unint64_t)(a2[1] - *a2) >> 3) - 1;
  }
  v10 = a4 - v6;
  if ((int)a4 - (int)v6 < 0)
  {
    if (qword_1022A02D0 != -1)
      dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
    v26 = qword_1022A02D8;
    if (os_log_type_enabled((os_log_t)qword_1022A02D8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "Input to Douglas-Peucker algorithm must have at least one vertex.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A02D0 != -1)
        dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
      LOWORD(v37) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A02D8, 17, "Input to Douglas-Peucker algorithm must have at least one vertex.", &v37, 2);
      v28 = (uint8_t *)v27;
      sub_100512490("Generic", 1, 0, 0, "void DouglasPeuckerPolygonSimplify(PointList &, const PointList &, double, int, int)", "%s\n", v27);
      if (v28 != buf)
        free(v28);
    }
  }
  else
  {
    v40 = 0;
    v11 = sub_1009041B4(a2, v6, a4, 0, &v40);
    if (v10 >= 2)
    {
      v12 = v40;
      if ((v40 & 0x80000000) == 0)
      {
        if (v11 <= a5)
        {
          sub_10090446C(a1, 2uLL);
          v33 = *a2;
          v34 = *a2 + 24 * v6;
          v35 = *a1;
          *(_OWORD *)v35 = *(_OWORD *)v34;
          *(_QWORD *)(v35 + 16) = *(_QWORD *)(v34 + 16);
          v36 = v33 + 24 * (int)a4;
          *(_OWORD *)(v35 + 24) = *(_OWORD *)v36;
          *(_QWORD *)(v35 + 40) = *(_QWORD *)(v36 + 16);
          return;
        }
        *(_QWORD *)buf = 0;
        v42 = 0;
        v43 = 0;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        sub_100903D90(buf, a2, v6, v40, a5);
        sub_100903D90(&v37, a2, v12, a4, a5);
        sub_10090446C(a1, 0xAAAAAAAAAAAAAAABLL * ((v38 - (_BYTE *)v37) >> 3) - 0x5555555555555555 * ((v42 - *(_QWORD *)buf) >> 3) - 1);
        v13 = *(void **)buf;
        v14 = -1431655765 * ((v42 - *(_QWORD *)buf) >> 3);
        if (v14 >= 1)
        {
          v15 = -1431655765 * ((v42 - *(_QWORD *)buf) >> 3);
          v16 = (_QWORD *)(*(_QWORD *)buf + 16);
          v17 = (_QWORD *)(*a1 + 16);
          do
          {
            *((_OWORD *)v17 - 1) = *((_OWORD *)v16 - 1);
            v18 = *v16;
            v16 += 3;
            *v17 = v18;
            v17 += 3;
            --v15;
          }
          while (v15);
        }
        v19 = v37;
        v20 = 0xAAAAAAAAAAAAAAABLL * ((v38 - (_BYTE *)v37) >> 3);
        if (v20 < 2)
        {
          if (!v37)
            goto LABEL_29;
        }
        else
        {
          v21 = v14 - 1;
          v22 = v37 + 5;
          v23 = (_QWORD *)(*a1 + 24 * v21 + 40);
          v24 = v20 - 1;
          do
          {
            *((_OWORD *)v23 - 1) = *((_OWORD *)v22 - 1);
            v25 = *v22;
            v22 += 3;
            *v23 = v25;
            v23 += 3;
            --v24;
          }
          while (v24);
        }
        v38 = v19;
        operator delete(v19);
        v13 = *(void **)buf;
LABEL_29:
        if (v13)
        {
          v42 = (uint64_t)v13;
          operator delete(v13);
        }
        return;
      }
    }
    sub_10090446C(a1, v10 + 1);
    v29 = v10 + 1;
    v30 = (_QWORD *)(*a2 + 24 * v6 + 16);
    v31 = (_QWORD *)(*a1 + 16);
    do
    {
      *((_OWORD *)v31 - 1) = *((_OWORD *)v30 - 1);
      v32 = *v30;
      v30 += 3;
      *v31 = v32;
      v31 += 3;
      --v29;
    }
    while (v29);
  }
}

void sub_100904154(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_100904188(id a1)
{
  qword_1022A02D8 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

double sub_1009041B4(_QWORD *a1, int a2, int a3, int a4, _DWORD *a5)
{
  NSObject *v5;
  double v6;
  const char *v7;
  uint8_t *v8;
  int v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  _WORD v32[8];
  uint8_t buf[1640];

  if (a4 == 2)
  {
    if (qword_1022A02D0 != -1)
      dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
    v5 = qword_1022A02D8;
    if (os_log_type_enabled((os_log_t)qword_1022A02D8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "DynamicProgramArea distance is not implemented", buf, 2u);
    }
    v6 = 0.0;
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A02D0 != -1)
        dispatch_once(&qword_1022A02D0, &stru_10215E5B0);
      v32[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A02D8, 17, "DynamicProgramArea distance is not implemented", v32, 2);
      v8 = (uint8_t *)v7;
      sub_100512490("Generic", 1, 0, 0, "double curveSegmentCompare(const PointList &, int, int, SimplifyType, int &)", "%s\n", v7);
      if (v8 != buf)
        free(v8);
    }
  }
  else
  {
    *a5 = -1;
    v6 = 0.0;
    if (a3 - a2 >= 2)
    {
      v9 = a2 + 1;
      if (a2 + 1 < a3)
      {
        v10 = (double *)(*a1 + 24 * a2);
        v11 = *v10;
        v12 = v10[1];
        v13 = v10[2];
        v14 = *a1 + 24 * a3;
        v15 = *(double *)v14;
        v16 = *(double *)(v14 + 8);
        v17 = *(double *)(v14 + 16);
        v18 = *(double *)v14 - v11;
        v19 = v16 - v12;
        v20 = v17 - v13;
        v21 = v19 * v19 + v18 * v18 + v20 * v20;
        v22 = (double *)(*a1 + 24 * v9 + 16);
        do
        {
          v23 = *(v22 - 2);
          v24 = *(v22 - 1);
          v25 = v13;
          v26 = v12;
          v27 = v11;
          v28 = *v22;
          if (v21 > 0.0)
          {
            v29 = (v19 * (v24 - v12) + v18 * (v23 - v11) + v20 * (v28 - v13)) / v21;
            v25 = v17;
            v26 = v16;
            v27 = v15;
            if (v29 <= 1.0)
            {
              v25 = v13;
              v26 = v12;
              v27 = v11;
              if (v29 >= 0.0)
              {
                v27 = v11 + v18 * v29;
                v26 = v12 + v19 * v29;
                v25 = v13 + v20 * v29;
              }
            }
          }
          v30 = sqrt((v26 - v24) * (v26 - v24) + (v27 - v23) * (v27 - v23) + (v25 - v28) * (v25 - v28));
          if (v30 > v6)
          {
            *a5 = v9;
            v6 = v30;
          }
          ++v9;
          v22 += 3;
        }
        while (a3 != v9);
      }
    }
  }
  return v6;
}

void sub_10090446C(uint64_t *a1, unint64_t a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v3 = a2 >= v2;
  v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_1009044A8(a1, v4);
  }
  else if (!v3)
  {
    a1[1] = *a1 + 24 * a2;
  }
}

void sub_1009044A8(uint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  size_t v13;
  size_t v14;
  void *__p;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      v13 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL)
      sub_100259694();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    v19 = v4;
    if (v11)
      v12 = (char *)sub_1002596A8(v4, v11);
    else
      v12 = 0;
    __p = v12;
    v16 = &v12[24 * v8];
    v18 = &v12[24 * v11];
    v14 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v16, v14);
    v17 = &v16[v14];
    sub_10090467C(a1, &__p);
    if (v17 != v16)
      v17 = &v16[(v17 - v16 - 24) % 0x18uLL];
    if (__p)
      operator delete(__p);
  }
}

void sub_100904630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10090467C(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *result;
  v2 = result[1];
  v4 = a2[1];
  while (v2 != v3)
  {
    v5 = *(_OWORD *)(v2 - 24);
    v2 -= 24;
    *(_OWORD *)(v4 - 24) = v5;
    v4 -= 24;
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  }
  a2[1] = v4;
  v6 = *result;
  *result = v4;
  a2[1] = v6;
  v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

_QWORD *sub_1009046DC(_QWORD *a1, unint64_t a2)
{
  char *v4;
  size_t v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_100259C18(a1, a2);
    v4 = (char *)a1[1];
    v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_100904768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_10025E1F0(&a9);
  _Unwind_Resume(a1);
}

void sub_100904820(id a1)
{
  qword_102305748 = (uint64_t)objc_msgSend(objc_alloc((Class)CLDispatchSilo), "initWithIdentifier:", CFSTR("CLTimeZoneManagerSilo"));
}

void sub_1009048EC()
{
  operator delete();
}

id sub_100904920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1001FD94C();
  sub_1005254E4(v2);
  v3 = sub_1001FD94C();
  sub_1005254E4(v3);
  v4 = sub_1001FD94C();
  sub_1005254E4(v4);
  if (sub_10019CFA0() == 1 || sub_100BCF098(a1 + 624) != 3)
  {
    if (*(char *)(a1 + 119) < 0)
    {
      if (!*(_QWORD *)(a1 + 104))
        goto LABEL_6;
      goto LABEL_5;
    }
    if (*(_BYTE *)(a1 + 119))
    {
LABEL_5:
      v5 = sub_1001FD94C();
      sub_1005288FC(v5, CFSTR("PreviousTimeZone"), (char *)(a1 + 96));
    }
  }
LABEL_6:
  objc_msgSend(*(id *)(a1 + 832), "invalidate");
  return objc_msgSend(*(id *)(a1 + 848), "invalidate");
}

void sub_100904A3C(uint64_t a1, void *a2)
{
  id v3;

  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 64) = a2;
  v3 = objc_msgSend(a2, "silo");
  *(_OWORD *)(a1 + 96) = 0u;
  *(_QWORD *)(a1 + 72) = v3;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 80) = _Q0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_QWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 0xFFFF;
  *(_QWORD *)(a1 + 164) = 0;
  *(_QWORD *)(a1 + 156) = 0;
  *(_OWORD *)(a1 + 172) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 188) = _Q0;
  *(_OWORD *)(a1 + 204) = _Q0;
  *(_OWORD *)(a1 + 220) = _Q0;
  *(_DWORD *)(a1 + 236) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 240) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 268) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 276) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 288) = 0;
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_BYTE *)(a1 + 304) = 0;
  *(_DWORD *)(a1 + 308) = 0xFFFF;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 320) = 0;
  *(_QWORD *)(a1 + 328) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 336) = xmmword_101BAFEE0;
  *(_OWORD *)(a1 + 352) = _Q0;
  *(_OWORD *)(a1 + 368) = _Q0;
  *(_QWORD *)(a1 + 384) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 396) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 420) = 0;
  *(_QWORD *)(a1 + 404) = 0;
  *(_QWORD *)(a1 + 412) = 0;
  *(_QWORD *)(a1 + 424) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 432) = 0x7FFFFFFF;
  *(_BYTE *)(a1 + 460) = 0;
  *(_QWORD *)(a1 + 444) = 0;
  *(_QWORD *)(a1 + 452) = 0;
  *(_QWORD *)(a1 + 436) = 0;
  *(_DWORD *)(a1 + 464) = 0xFFFF;
  *(_QWORD *)(a1 + 476) = 0;
  *(_QWORD *)(a1 + 468) = 0;
  *(_OWORD *)(a1 + 484) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 500) = _Q0;
  *(_OWORD *)(a1 + 516) = _Q0;
  *(_OWORD *)(a1 + 532) = _Q0;
  *(_DWORD *)(a1 + 548) = 0;
  *(_QWORD *)(a1 + 560) = 0;
  *(_QWORD *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 552) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 576) = 0;
  *(_QWORD *)(a1 + 580) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 588) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 592) = 0;
  *(_QWORD *)(a1 + 600) = 0;
  *(_BYTE *)(a1 + 616) = 0;
  *(_QWORD *)(a1 + 608) = 0;
  sub_100E4F1B4(a1 + 624, "TimeZone", *(_QWORD *)(a1 + 64));
  *(_WORD *)(a1 + 824) = 0;
  *(_QWORD *)(a1 + 816) = 0;
  *(_QWORD *)(a1 + 832) = 0;
  *(_QWORD *)(a1 + 848) = 0;
  *(_QWORD *)(a1 + 840) = 0;
  *(_DWORD *)(a1 + 856) = -1;
  *(_QWORD *)(a1 + 864) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 872) = 0;
  sub_1002433B8(a1 + 984);
  *(_OWORD *)(a1 + 1056) = 0u;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1024) = 0u;
  sub_1012B2C64();
}

void sub_100905250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  uint64_t v39;
  void **v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_100BCD638(v41);
  if (*(char *)(v39 + 143) < 0)
    operator delete(*(void **)(v39 + 120));
  if (*(char *)(v39 + 119) < 0)
    operator delete(*v40);
  v43 = *(_QWORD *)(v39 + 56);
  *(_QWORD *)(v39 + 56) = 0;
  if (v43)
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
  v44 = *(_QWORD *)(v39 + 48);
  *(_QWORD *)(v39 + 48) = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  v45 = *(_QWORD *)(v39 + 40);
  *(_QWORD *)(v39 + 40) = 0;
  if (v45)
    (*(void (**)(uint64_t))(*(_QWORD *)v45 + 8))(v45);
  v46 = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v39 + 32) = 0;
  if (v46)
    (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
  v47 = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v39 + 24) = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  v48 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v39 + 16) = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  v49 = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v39 + 8) = 0;
  if (v49)
    (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
  _Unwind_Resume(a1);
}

void sub_1009053C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  NSObject *v6;
  os_activity_scope_state_s state;
  char v8;
  uint8_t buf[4];
  int v10;
  __int16 v11;
  const char *v12;
  __int16 v13;
  const char *v14;
  __int16 v15;
  uint64_t v16;

  CLProfilingIdentify("CLTimeZoneManager::onSettingsNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 64), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E610);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v8 = 1;
    v5 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onSettingsNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E610);
    v6 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v10 = 0;
      v11 = 2082;
      v12 = "";
      v13 = 2082;
      v14 = "activity";
      v15 = 2050;
      v16 = a4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onSettingsNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v8 = 0;
  }
  sub_100905588((_DWORD *)a4);
  if (v8)
    os_activity_scope_leave(&state);
}

void sub_100905568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100905588(_DWORD *a1)
{
  char v2;
  char v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  char v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  char v12;
  char v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  char v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  char v22;
  char v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  char v27;
  char v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  char v32;
  char v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  char v37;
  char v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  char v42;
  char v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  char v47;
  char v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  char v52;
  char v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  char v57;
  char v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  _QWORD *v62;
  char v63;
  char v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  std::__shared_weak_count *v69;

  sub_1001E4804(&v68);
  v2 = sub_1001FD9FC(v68, (uint64_t)off_1022A54F8, a1 + 220);
  v3 = v2;
  v4 = v69;
  if (v69)
  {
    p_shared_owners = (unint64_t *)&v69->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if ((v3 & 1) != 0)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  if ((v2 & 1) == 0)
LABEL_6:
    *((_QWORD *)a1 + 110) = 0x405F400000000000;
LABEL_7:
  sub_1001E4804(&v68);
  v7 = sub_1001FD9FC(v68, (uint64_t)off_1022A5500, a1 + 222);
  v8 = v7;
  v9 = v69;
  if (v69)
  {
    v10 = (unint64_t *)&v69->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if ((v8 & 1) != 0)
        goto LABEL_13;
      goto LABEL_12;
    }
  }
  if ((v7 & 1) == 0)
LABEL_12:
    *((_QWORD *)a1 + 111) = 0x40F86A0000000000;
LABEL_13:
  sub_1001E4804(&v68);
  v12 = sub_1001FD9FC(v68, (uint64_t)off_1022A5508, a1 + 224);
  v13 = v12;
  v14 = v69;
  if (v69)
  {
    v15 = (unint64_t *)&v69->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      if ((v13 & 1) != 0)
        goto LABEL_19;
      goto LABEL_18;
    }
  }
  if ((v12 & 1) == 0)
LABEL_18:
    *((_QWORD *)a1 + 112) = 0x404E000000000000;
LABEL_19:
  sub_1001E4804(&v68);
  v17 = sub_1001FD9FC(v68, (uint64_t)off_1022A5510, a1 + 226);
  v18 = v17;
  v19 = v69;
  if (v69)
  {
    v20 = (unint64_t *)&v69->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if ((v18 & 1) != 0)
        goto LABEL_25;
      goto LABEL_24;
    }
  }
  if ((v17 & 1) == 0)
LABEL_24:
    *((_QWORD *)a1 + 113) = 0x4066800000000000;
LABEL_25:
  sub_1001E4804(&v68);
  v22 = sub_1001C1194(v68, (uint64_t)off_1022A5518, a1 + 228);
  v23 = v22;
  v24 = v69;
  if (v69)
  {
    v25 = (unint64_t *)&v69->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
      if ((v23 & 1) != 0)
        goto LABEL_31;
      goto LABEL_30;
    }
  }
  if ((v22 & 1) == 0)
LABEL_30:
    a1[228] = 2;
LABEL_31:
  sub_1001E4804(&v68);
  v27 = sub_1001FD9FC(v68, (uint64_t)off_1022A5520, a1 + 230);
  v28 = v27;
  v29 = v69;
  if (v69)
  {
    v30 = (unint64_t *)&v69->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
      if ((v28 & 1) != 0)
        goto LABEL_37;
      goto LABEL_36;
    }
  }
  if ((v27 & 1) == 0)
LABEL_36:
    *((_QWORD *)a1 + 115) = 0x404E000000000000;
LABEL_37:
  sub_1001E4804(&v68);
  v32 = sub_1001FD9FC(v68, (uint64_t)off_1022A5528, a1 + 232);
  v33 = v32;
  v34 = v69;
  if (v69)
  {
    v35 = (unint64_t *)&v69->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      if ((v33 & 1) != 0)
        goto LABEL_43;
      goto LABEL_42;
    }
  }
  if ((v32 & 1) == 0)
LABEL_42:
    *((_QWORD *)a1 + 116) = 0x40AC200000000000;
LABEL_43:
  sub_1001E4804(&v68);
  v37 = sub_1001FD9FC(v68, (uint64_t)off_1022A5530, a1 + 234);
  v38 = v37;
  v39 = v69;
  if (v69)
  {
    v40 = (unint64_t *)&v69->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
      if ((v38 & 1) != 0)
        goto LABEL_49;
      goto LABEL_48;
    }
  }
  if ((v37 & 1) == 0)
LABEL_48:
    *((_QWORD *)a1 + 117) = 0x4082C00000000000;
LABEL_49:
  sub_1001E4804(&v68);
  v42 = sub_1001FD9FC(v68, (uint64_t)off_1022A5538, a1 + 236);
  v43 = v42;
  v44 = v69;
  if (v69)
  {
    v45 = (unint64_t *)&v69->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
      if ((v43 & 1) != 0)
        goto LABEL_55;
      goto LABEL_54;
    }
  }
  if ((v42 & 1) == 0)
LABEL_54:
    *((_QWORD *)a1 + 118) = 0x40AC200000000000;
LABEL_55:
  sub_1001E4804(&v68);
  v47 = sub_1001FD9FC(v68, (uint64_t)off_1022A5540, a1 + 238);
  v48 = v47;
  v49 = v69;
  if (v69)
  {
    v50 = (unint64_t *)&v69->__shared_owners_;
    do
      v51 = __ldaxr(v50);
    while (__stlxr(v51 - 1, v50));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
      if ((v48 & 1) != 0)
        goto LABEL_61;
      goto LABEL_60;
    }
  }
  if ((v47 & 1) == 0)
LABEL_60:
    *((_QWORD *)a1 + 119) = 0x3FE8000000000000;
LABEL_61:
  sub_1001E4804(&v68);
  v52 = sub_1001FD9FC(v68, (uint64_t)off_1022A5548, a1 + 240);
  v53 = v52;
  v54 = v69;
  if (v69)
  {
    v55 = (unint64_t *)&v69->__shared_owners_;
    do
      v56 = __ldaxr(v55);
    while (__stlxr(v56 - 1, v55));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
      std::__shared_weak_count::__release_weak(v54);
      if ((v53 & 1) != 0)
        goto LABEL_67;
      goto LABEL_66;
    }
  }
  if ((v52 & 1) == 0)
LABEL_66:
    *((_QWORD *)a1 + 120) = 0x404E000000000000;
LABEL_67:
  sub_1001E4804(&v68);
  v57 = sub_1001FD9FC(v68, (uint64_t)off_1022A5550, a1 + 242);
  v58 = v57;
  v59 = v69;
  if (v69)
  {
    v60 = (unint64_t *)&v69->__shared_owners_;
    do
      v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
      if ((v58 & 1) != 0)
        goto LABEL_73;
      goto LABEL_72;
    }
  }
  if ((v57 & 1) == 0)
LABEL_72:
    *((_QWORD *)a1 + 121) = 0x4092C00000000000;
LABEL_73:
  sub_1001E4804(&v68);
  v62 = a1 + 244;
  v63 = sub_1001FD9FC(v68, (uint64_t)off_1022A5558, v62);
  v64 = v63;
  v65 = v69;
  if (!v69)
    goto LABEL_77;
  v66 = (unint64_t *)&v69->__shared_owners_;
  do
    v67 = __ldaxr(v66);
  while (__stlxr(v67 - 1, v66));
  if (!v67)
  {
    ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
    std::__shared_weak_count::__release_weak(v65);
    if ((v64 & 1) != 0)
      return;
  }
  else
  {
LABEL_77:
    if ((v63 & 1) != 0)
      return;
  }
  *v62 = 0x408C200000000000;
}

void sub_100905BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100261F44((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100905BFC(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLTimeZoneManager::onStatusNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 64), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E610);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E610);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_10090A5CC(a4, v7, a2, a3);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_100905DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100905DD4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _BOOL8 v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLTimeZoneManager::onTelephonyNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 64), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E610);
  v6 = os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onTelephonyNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E610);
    v9 = qword_1022A0228;
    v6 = os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG);
    if (v6)
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onTelephonyNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_10090AC40(v6, v7, a2);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_100905F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100905FA0(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  os_activity_scope_state_s state;
  char v10;
  uint8_t buf[4];
  int v12;
  __int16 v13;
  const char *v14;
  __int16 v15;
  const char *v16;
  __int16 v17;
  uint64_t v18;

  CLProfilingIdentify("CLTimeZoneManager::onManagerNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 64), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E610);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v10 = 1;
    v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onManagerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E610);
    v8 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v12 = 0;
      v13 = 2082;
      v14 = "";
      v15 = 2082;
      v16 = "activity";
      v17 = 2050;
      v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onManagerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v10 = 0;
  }
  sub_10090B170(a4, v6, a2);
  if (v10)
    os_activity_scope_leave(&state);
}

void sub_100906150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100906170(uint64_t a1)
{
  sub_100907210(*(_QWORD *)(a1 + 32));
}

void sub_100906178(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  NSObject *v4;
  os_activity_scope_state_s state;
  char v6;
  uint8_t buf[4];
  int v8;
  __int16 v9;
  const char *v10;
  __int16 v11;
  const char *v12;
  __int16 v13;
  uint64_t v14;

  CLProfilingIdentify("CLTimeZoneManager::onActiveModeTimer");
  objc_msgSend(objc_msgSend(*(id *)(a2 + 64), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E610);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v6 = 1;
    v3 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onActiveModeTimer", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E610);
    v4 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v8 = 0;
      v9 = 2082;
      v10 = "";
      v11 = 2082;
      v12 = "activity";
      v13 = 2050;
      v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onActiveModeTimer\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v6 = 0;
  }
  sub_100907940(a2);
  if (v6)
    os_activity_scope_leave(&state);
}

void sub_100906318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100906338(uint64_t a1)
{
  sub_100906340(*(_QWORD *)(a1 + 32));
}

void sub_100906340(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  int v6;
  const char *v7;
  uint8_t *v8;
  uint64_t v9;
  _WORD v10[8];
  uint8_t buf[1640];

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v2 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Continuous location timer fired", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v10[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Continuous location timer fired", v10, 2);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onContinuousLocationTimer()", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
  if (*(int *)(a1 + 816) >= 1)
  {
    if (*(double *)(a1 + 484) >= 0.0)
    {
      sub_100163B5C(a1, a1 + 464, 1);
    }
    else
    {
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v3 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Failed to get any fix while in continuous location mode", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        v10[0] = 0;
        LODWORD(v9) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Warning Failed to get any fix while in continuous location mode", v10, v9);
        v5 = (uint8_t *)v4;
        sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onContinuousLocationTimer()", "%s\n", v4);
        if (v5 != buf)
          free(v5);
      }
    }
    v6 = *(_DWORD *)(a1 + 816);
    sub_10090828C(a1);
    if (v6 == 2)
      sub_100908600(a1, 1);
  }
}

id sub_100906644(uint64_t a1)
{
  return sub_10090664C(*(_QWORD *)(a1 + 32));
}

id sub_10090664C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  const char *v5;
  uint8_t *v6;
  _WORD v7[8];
  uint8_t buf[1640];

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v2 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "ReachabilityTimer fired", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v7[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "ReachabilityTimer fired", v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onReachabilityTimer()", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    objc_msgSend(*(id *)(v3 + 16), "unregister:forNotification:", *(_QWORD *)(v3 + 8), 6);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "register:forNotification:registrationInfo:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8), 6, 0);
  }
  return objc_msgSend(*(id *)(a1 + 872), "setNextFireDelay:", 1.79769313e308);
}

void sub_100906814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  NSObject *v11;
  id v12;
  _QWORD v13[9];
  os_activity_scope_state_s state;
  char v15;
  uint8_t buf[4];
  int v17;
  __int16 v18;
  const char *v19;
  __int16 v20;
  const char *v21;
  __int16 v22;
  uint64_t v23;

  CLProfilingIdentify("CLTimeZoneManager::onImmediateCheckNotification");
  objc_msgSend(objc_msgSend(*(id *)(a2 + 64), "silo"), "assertOutside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E610);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v15 = 1;
    v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onImmediateCheckNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E610);
    v11 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v17 = 0;
      v18 = 2082;
      v19 = "";
      v20 = 2082;
      v21 = "activity";
      v22 = 2050;
      v23 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onImmediateCheckNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v15 = 0;
  }
  v12 = objc_msgSend(*(id *)(a2 + 64), "silo");
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10090B604;
  v13[3] = &unk_1021382B0;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  objc_msgSend(v12, "sync:", v13);
  if (v15)
    os_activity_scope_leave(&state);
}

void sub_100906A14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100906A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  NSObject *v11;
  id v12;
  _QWORD v13[9];
  os_activity_scope_state_s state;
  char v15;
  uint8_t buf[4];
  int v17;
  __int16 v18;
  const char *v19;
  __int16 v20;
  const char *v21;
  __int16 v22;
  uint64_t v23;

  CLProfilingIdentify("CLTimeZoneManager::onLocationTimeZoneActiveNotification");
  objc_msgSend(objc_msgSend(*(id *)(a2 + 64), "silo"), "assertOutside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E610);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v15 = 1;
    v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onLocationTimeZoneActiveNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E610);
    v11 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v17 = 0;
      v18 = 2082;
      v19 = "";
      v20 = 2082;
      v21 = "activity";
      v22 = 2050;
      v23 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onLocationTimeZoneActiveNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v15 = 0;
  }
  v12 = objc_msgSend(*(id *)(a2 + 64), "silo");
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10090B60C;
  v13[3] = &unk_1021382B0;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  objc_msgSend(v12, "sync:", v13);
  if (v15)
    os_activity_scope_leave(&state);
}

void sub_100906C34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

id sub_100906C54(uint64_t a1, double *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v7;
  const char *v8;
  uint8_t *v9;
  int v10;
  uint64_t v11;
  uint8_t buf[4];
  uint64_t v13;

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v4 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
  {
    v5 = *(_QWORD *)a2;
    *(_DWORD *)buf = 134217984;
    v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Setting start timer to fire after %.2fs", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v7 = *(_QWORD *)a2;
    v10 = 134217984;
    v11 = v7;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Setting start timer to fire after %.2fs", COERCE_DOUBLE(&v10));
    v9 = (uint8_t *)v8;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::setStartTimer(const CFTimeInterval &)", "%s\n", v8);
    if (v9 != buf)
      free(v9);
  }
  return objc_msgSend(*(id *)(a1 + 832), "setNextFireDelay:", *a2);
}

id sub_100906E14(uint64_t a1, double *a2)
{
  double Current;
  double v6;
  double v7;
  NSObject *v8;
  double v9;
  double v10;
  const char *v11;
  uint8_t *v12;
  double v13;
  int v14;
  double v15;
  __int16 v16;
  double v17;
  uint8_t buf[4];
  double v19;
  __int16 v20;
  double v21;

  if (*a2 == 1.79769313e308)
    return sub_10016E3C4(*(_QWORD *)(a1 + 840));
  Current = CFAbsoluteTimeGetCurrent();
  v6 = *a2;
  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v7 = Current + v6;
  v8 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
  {
    v9 = *a2;
    *(_DWORD *)buf = 134218240;
    v19 = v7;
    v20 = 2048;
    v21 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Setting active mode timer to fire at %.2f (%.2fs away)", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v10 = *a2;
    v14 = 134218240;
    v15 = v7;
    v16 = 2048;
    v17 = v10;
    LODWORD(v13) = 22;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Setting active mode timer to fire at %.2f (%.2fs away)", COERCE_DOUBLE(&v14), v13);
    v12 = (uint8_t *)v11;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::setActiveModeTimer(const CFTimeInterval &)", "%s\n", v11);
    if (v12 != buf)
      free(v12);
  }
  return sub_1001F40D0(*(_QWORD *)(a1 + 840), v7);
}

id sub_100907050(uint64_t a1, double *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v7;
  const char *v8;
  uint8_t *v9;
  int v10;
  uint64_t v11;
  uint8_t buf[4];
  uint64_t v13;

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v4 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
  {
    v5 = *(_QWORD *)a2;
    *(_DWORD *)buf = 134217984;
    v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Setting continuous location timer to fire after %.2fs", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v7 = *(_QWORD *)a2;
    v10 = 134217984;
    v11 = v7;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Setting continuous location timer to fire after %.2fs", COERCE_DOUBLE(&v10));
    v9 = (uint8_t *)v8;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::setContinuousLocationTimer(const CFTimeInterval &)", "%s\n", v8);
    if (v9 != buf)
      free(v9);
  }
  return objc_msgSend(*(id *)(a1 + 848), "setNextFireDelay:", *a2);
}

void sub_100907210(uint64_t a1)
{
  int v2;
  int v3;
  NSObject *v4;
  NSObject *v5;
  const char *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t *v16;
  const char *v17;
  uint8_t *v18;
  const char *v19;
  uint8_t *v20;
  const char *v21;
  uint8_t *v22;
  _QWORD v23[2];
  uint8_t buf[1640];

  *(_BYTE *)(a1 + 824) = 1;
  if (sub_10019CFA0() != 1)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v5 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Location services are disabled; stopping automatic time zone",
        buf,
        2u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_32;
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    LOWORD(v23[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Location services are disabled; stopping automatic time zone",
      v23,
      2,
      v23[0]);
    goto LABEL_54;
  }
  if (sub_100BCF098(a1 + 624) != 3)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v7 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Time Zone system service disabled; stopping automatic time zone",
        buf,
        2u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_32;
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    LOWORD(v23[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Time Zone system service disabled; stopping automatic time zone",
      v23,
      2,
      v23[0]);
LABEL_54:
    v16 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v6);
    if (v16 != buf)
      free(v16);
LABEL_32:
    v8 = sub_1001FD94C();
    sub_1005254E4(v8);
    v9 = sub_1001FD94C();
    sub_1005254E4(v9);
    v10 = sub_1001FD94C();
    sub_1005254E4(v10);
    v11 = sub_1001FD94C();
    (*(void (**)(uint64_t))(*(_QWORD *)v11 + 944))(v11);
    *(_DWORD *)(a1 + 820) = 0;
    sub_100908CD8(a1);
    v12 = &off_1022A5630;
    goto LABEL_46;
  }
  v2 = *(_DWORD *)(a1 + 856);
  if (v2 == -1)
  {
    v3 = off_1022A5638();
    if (v3)
      v2 = 2;
    else
      v2 = 1;
    if (*(_DWORD *)(a1 + 856) != 2 && v3)
      *(_QWORD *)(a1 + 144) = 0;
    *(_DWORD *)(a1 + 856) = v2;
  }
  if (v2 == 2)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v13 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Automatic time zone starting in active mode", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      LOWORD(v23[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Automatic time zone starting in active mode", v23, 2);
      v20 = (uint8_t *)v19;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v19);
      if (v20 != buf)
        free(v20);
    }
    sub_10090905C(a1);
  }
  else if (v2 == 1)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v4 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Automatic time zone starting in passive mode", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      LOWORD(v23[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Automatic time zone starting in passive mode", v23, 2);
      v18 = (uint8_t *)v17;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v17);
      if (v18 != buf)
        free(v18);
    }
    sub_100908E8C(a1);
  }
  else
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v14 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Automatic time zone disabled", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      LOWORD(v23[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Automatic time zone disabled", v23, 2);
      v22 = (uint8_t *)v21;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v21);
      if (v22 != buf)
        free(v22);
    }
    sub_100908CD8(a1);
  }
  v12 = &off_1022A5640;
LABEL_46:
  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  if (qword_102305760)
  {
    v15 = off_1022A5628();
    ((void (*)(uint64_t))*v12)(v15);
  }
}

void sub_100907940(uint64_t a1)
{
  sub_100906E14(a1, (double *)(a1 + 944));
  if (!*(_DWORD *)(a1 + 816))
    sub_100907984(a1, 1, 0);
}

void sub_100907984(uint64_t a1, int a2, int a3)
{
  int v6;
  NSObject *v7;
  int v8;
  int v9;
  NSObject *v10;
  const char *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  uint8_t *v15;
  NSObject *v16;
  _BYTE *v17;
  uint64_t v18;
  NSObject *v19;
  const char *v20;
  uint8_t *v21;
  const char *v22;
  uint8_t *v23;
  const char *v24;
  uint8_t *v25;
  const char *v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD v29[2];
  uint8_t buf[1640];

  *(_QWORD *)(a1 + 144) = 0;
  v6 = *(_DWORD *)(a1 + 816);
  if (v6 < 1)
  {
    if (sub_10019CFA0())
    {
      if (sub_100BCF098(a1 + 624) == 3)
      {
        v8 = *(_DWORD *)(a1 + 856);
        if (v8 == -1)
        {
          v9 = off_1022A5638();
          if (v9)
            v8 = 2;
          else
            v8 = 1;
          if (*(_DWORD *)(a1 + 856) != 2 && v9)
            *(_QWORD *)(a1 + 144) = 0;
          *(_DWORD *)(a1 + 856) = v8;
        }
        if (v8 == 2 || (a3 & 1) != 0)
        {
          if (qword_1022A0230 != -1)
            dispatch_once(&qword_1022A0230, &stru_10215E630);
          v16 = qword_1022A0238;
          if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Entering continuous location mode", buf, 2u);
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1022A0230 != -1)
              dispatch_once(&qword_1022A0230, &stru_10215E630);
            LOWORD(v29[0]) = 0;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Entering continuous location mode", v29, 2);
            v25 = (uint8_t *)v24;
            sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v24);
            if (v25 != buf)
              free(v25);
          }
          if (off_1022A5650())
          {
            *(_BYTE *)(a1 + 1024) = 0;
            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8), 0);
            v17 = (_BYTE *)(a1 + 1025);
            v18 = 1;
          }
          else
          {
            if (qword_1022A0230 != -1)
              dispatch_once(&qword_1022A0230, &stru_10215E630);
            v19 = qword_1022A0238;
            if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Timezone is not confirmed.", buf, 2u);
            }
            if (sub_1001BFF7C(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1022A0230 != -1)
                dispatch_once(&qword_1022A0230, &stru_10215E630);
              LOWORD(v29[0]) = 0;
              LODWORD(v28) = 2;
              _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Timezone is not confirmed.", v29, v28);
              v27 = (uint8_t *)v26;
              sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v26);
              if (v27 != buf)
                free(v27);
            }
            v17 = (_BYTE *)(a1 + 1024);
            *(_BYTE *)(a1 + 1025) = 0;
            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8), 1);
            v18 = 0;
          }
          *v17 = 1;
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), "register:forNotification:registrationInfo:", *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8), v18, 0);
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "register:forNotification:registrationInfo:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8), 18, 0);
          *(_DWORD *)(a1 + 816) = a2;
          goto LABEL_69;
        }
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        v10 = qword_1022A0238;
        if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "In bystander-only mode; not starting continuous location",
            buf,
            2u);
        }
        if (!sub_1001BFF7C(115, 2))
          return;
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        LOWORD(v29[0]) = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "In bystander-only mode; not starting continuous location",
          v29,
          2,
          v29[0]);
      }
      else
      {
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        v14 = qword_1022A0238;
        if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Time Zone system service disabled; not starting continuous location",
            buf,
            2u);
        }
        if (!sub_1001BFF7C(115, 2))
          return;
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        LOWORD(v29[0]) = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Time Zone system service disabled; not starting continuous location",
          v29,
          2,
          v29[0]);
      }
    }
    else
    {
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v13 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Location services are disabled; not starting continuous location",
          buf,
          2u);
      }
      if (!sub_1001BFF7C(115, 2))
        return;
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      LOWORD(v29[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Location services are disabled; not starting continuous location",
        v29,
        2,
        v29[0]);
    }
    v15 = (uint8_t *)v11;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v11);
    if (v15 != buf)
      free(v15);
    return;
  }
  if (a2 == 2 && v6 == 1)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v7 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Transition from continuous active to continuous active with retry", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      LOWORD(v29[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Transition from continuous active to continuous active with retry", v29, 2);
      v21 = (uint8_t *)v20;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v20);
      if (v21 != buf)
        free(v21);
    }
    *(_DWORD *)(a1 + 816) = 2;
    return;
  }
  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v12 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Already in continuous location mode; not re-entering",
      buf,
      2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    LOWORD(v29[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Already in continuous location mode; not re-entering",
      v29,
      2);
    v23 = (uint8_t *)v22;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v22);
    if (v23 != buf)
      free(v23);
  }
  if (a3)
LABEL_69:
    sub_100907050(a1, (double *)(a1 + 960));
}

void sub_10090828C(uint64_t a1)
{
  NSObject *v2;
  NSObject *v8;
  const char *v9;
  uint8_t *v10;
  const char *v11;
  uint8_t *v12;
  _WORD v13[8];
  uint8_t buf[8];

  if (*(_DWORD *)(a1 + 816))
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v2 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Exiting continuous location mode", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v13[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Exiting continuous location mode", v13, 2);
      v10 = (uint8_t *)v9;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::exitContinuousLocationMode()", "%s\n", v9);
      if (v10 != buf)
        free(v10);
    }
    *(_BYTE *)(a1 + 1024) = 0;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8), 0);
    *(_BYTE *)(a1 + 1025) = 0;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8), 1);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8), 18);
    *(_DWORD *)(a1 + 816) = 0;
    *(_QWORD *)buf = 0x7FEFFFFFFFFFFFFFLL;
    sub_100907050(a1, (double *)buf);
    *(_DWORD *)(a1 + 464) = 0xFFFF;
    *(_QWORD *)(a1 + 476) = 0;
    *(_QWORD *)(a1 + 468) = 0;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a1 + 484) = xmmword_101BAFC90;
    *(_OWORD *)(a1 + 500) = _Q1;
    *(_OWORD *)(a1 + 516) = _Q1;
    *(_OWORD *)(a1 + 532) = _Q1;
    *(_DWORD *)(a1 + 548) = 0;
    *(_QWORD *)(a1 + 552) = 0xBFF0000000000000;
    *(_QWORD *)(a1 + 568) = 0;
    *(_QWORD *)(a1 + 560) = 0;
    *(_DWORD *)(a1 + 576) = 0;
    *(_QWORD *)(a1 + 580) = 0xBFF0000000000000;
    *(_DWORD *)(a1 + 588) = 0x7FFFFFFF;
    *(_QWORD *)(a1 + 592) = 0;
    *(_QWORD *)(a1 + 608) = 0;
    *(_QWORD *)(a1 + 600) = 0;
    *(_BYTE *)(a1 + 616) = 0;
  }
  else
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v8 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Not in continuous location mode; not exiting",
        buf,
        2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v13[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Not in continuous location mode; not exiting",
        v13,
        2);
      v12 = (uint8_t *)v11;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::exitContinuousLocationMode()", "%s\n", v11);
      if (v12 != buf)
        free(v12);
    }
  }
}

void sub_100908600(uint64_t a1, int a2)
{
  NSObject *v4;
  const char *v5;
  __CFNotificationCenter *DarwinNotifyCenter;
  NSObject *v7;
  int v8;
  NSObject *v9;
  uint64_t v10;
  double *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  uint8_t *v15;
  int v16;
  const char *v17;
  uint8_t *v18;
  uint64_t v19;
  const char *v20;
  uint8_t *v21;
  uint64_t v22;
  const char *v23;
  uint8_t *v24;
  _BYTE v25[14];
  uint8_t buf[4];
  _QWORD v27[204];

  if ((a2 & 1) != 0)
    goto LABEL_13;
  if (*(_BYTE *)(a1 + 1024) || *(_BYTE *)(a1 + 1025))
  {
    if (*(int *)(a1 + 816) >= 1)
    {
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v4 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Got location unavailable while in continuous location mode; ignoring location failure",
          buf,
          2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        *(_WORD *)v25 = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Got location unavailable while in continuous location mode; ignoring location failure",
          v25,
          2,
          *(_QWORD *)v25);
LABEL_43:
        v15 = (uint8_t *)v5;
        sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v5);
        if (v15 != buf)
          free(v15);
        return;
      }
      return;
    }
LABEL_13:
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, CFSTR("AutomaticTimeZoneUpdateFailed"), 0, 0, 1u);
    ++*(_DWORD *)(a1 + 820);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v7 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_DWORD *)(a1 + 820);
      *(_DWORD *)buf = 67109376;
      LODWORD(v27[0]) = a2;
      WORD2(v27[0]) = 1024;
      *(_DWORD *)((char *)v27 + 6) = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning Location failed for time zone (exiting continuous mode %d; failure count now %d)",
        buf,
        0xEu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v16 = *(_DWORD *)(a1 + 820);
      *(_DWORD *)v25 = 67109376;
      *(_DWORD *)&v25[4] = a2;
      *(_WORD *)&v25[8] = 1024;
      *(_DWORD *)&v25[10] = v16;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Warning Location failed for time zone (exiting continuous mode %d; failure count now %d)",
        v25,
        14);
      v18 = (uint8_t *)v17;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v17);
      if (v18 != buf)
        free(v18);
    }
    if (!*(_BYTE *)(a1 + 825))
      sub_100908CD8(a1);
    if (*(_DWORD *)(a1 + 820) >= *(_DWORD *)(a1 + 912))
    {
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v12 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
      {
        v13 = *(_QWORD *)(a1 + 928);
        *(_DWORD *)buf = 134217984;
        v27[0] = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Exceeded maximum failures; not retrying for %.2f seconds",
          buf,
          0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        v22 = *(_QWORD *)(a1 + 928);
        *(_DWORD *)v25 = 134217984;
        *(_QWORD *)&v25[4] = v22;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Exceeded maximum failures; not retrying for %.2f seconds",
          COERCE_DOUBLE(v25));
        v24 = (uint8_t *)v23;
        sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v23);
        if (v24 != buf)
          free(v24);
      }
      v11 = (double *)(a1 + 928);
    }
    else
    {
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v9 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
      {
        v10 = *(_QWORD *)(a1 + 920);
        *(_DWORD *)buf = 134217984;
        v27[0] = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Maximum failure count not exceeded; retrying in %.2f seconds",
          buf,
          0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        v19 = *(_QWORD *)(a1 + 920);
        *(_DWORD *)v25 = 134217984;
        *(_QWORD *)&v25[4] = v19;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Maximum failure count not exceeded; retrying in %.2f seconds",
          COERCE_DOUBLE(v25));
        v21 = (uint8_t *)v20;
        sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v20);
        if (v21 != buf)
          free(v21);
      }
      v11 = (double *)(a1 + 920);
    }
    sub_100906C54(a1, v11);
    return;
  }
  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v14 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Not registered for location or fine location; ignoring location failure",
      buf,
      2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    *(_WORD *)v25 = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Not registered for location or fine location; ignoring location failure",
      v25,
      2,
      *(_QWORD *)v25);
    goto LABEL_43;
  }
}

id sub_100908CD8(uint64_t a1)
{
  NSObject *v2;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[8];

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v2 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#Notice Stopping automatic time zone", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v6[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Notice Stopping automatic time zone", v6, 2);
    v5 = (uint8_t *)v4;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::stop()", "%s\n", v4);
    if (v5 != buf)
      free(v5);
  }
  sub_10090828C(a1);
  sub_100909500(a1);
  *(_QWORD *)buf = 0x7FEFFFFFFFFFFFFFLL;
  return sub_100906C54(a1, (double *)buf);
}

void sub_100908E8C(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v2 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Starting automatic time zone in passive mode", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Starting automatic time zone in passive mode", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::startPassive()", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  if (*(_BYTE *)(a1 + 825))
    sub_100909500(a1);
  if (!*(_DWORD *)(a1 + 816))
  {
    *(_BYTE *)(a1 + 1024) = 0;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8), 0);
    *(_BYTE *)(a1 + 1025) = 0;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8), 1);
  }
}

void sub_10090905C(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  const char *v6;
  uint8_t *v7;
  uint64_t v8;
  _WORD v9[8];
  uint8_t buf[1640];

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v2 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Starting automatic time zone in active mode", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v9[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Starting automatic time zone in active mode", v9, 2);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::startActive()", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  sub_100909340((_BYTE *)a1);
  if (*(double *)(a1 + 80) < 0.0 || *(_DWORD *)(a1 + 820))
  {
    sub_100907984(a1, 2, 0);
  }
  else
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v3 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Already have previous border distance and timestamp", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v9[0] = 0;
      LODWORD(v8) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Already have previous border distance and timestamp", v9, v8);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::startActive()", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
  }
}

_BYTE *sub_100909340(_BYTE *result)
{
  uint64_t v1;
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (!result[825])
  {
    v1 = (uint64_t)result;
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v2 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Entering active location mode", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v5[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Entering active location mode", v5, 2);
      v4 = (uint8_t *)v3;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::enterActiveMode()", "%s\n", v3);
      if (v4 != buf)
        free(v4);
    }
    sub_100906E14(v1, (double *)(v1 + 944));
    *(_BYTE *)(v1 + 825) = 1;
    return objc_msgSend(*(id *)(*(_QWORD *)(v1 + 24) + 16), "register:forNotification:registrationInfo:", *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8), 4, 0);
  }
  return result;
}

id sub_100909500(uint64_t a1)
{
  NSObject *v2;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[8];

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v2 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Exiting active location mode", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v6[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Exiting active location mode", v6, 2);
    v5 = (uint8_t *)v4;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::exitActiveMode()", "%s\n", v4);
    if (v5 != buf)
      free(v5);
  }
  *(_QWORD *)buf = 0x7FEFFFFFFFFFFFFFLL;
  sub_100906E14(a1, (double *)buf);
  *(_BYTE *)(a1 + 825) = 0;
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 24) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8), 4);
}

BOOL sub_1009096B8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, double *a4)
{
  NSObject *v4;
  _BOOL4 v5;
  _BOOL8 result;
  double v7;
  uint8_t *v8;
  uint8_t *v9;
  char *v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char *v19;
  uint64_t v21;
  NSObject *v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint8_t *v28;
  NSObject *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint8_t *v34;
  double v35;
  int v36;
  double v37;
  __int16 v38;
  uint64_t v39;
  uint8_t buf[4];
  double v41;
  __int16 v42;
  uint64_t v43;

  if (*(double *)(a3 + 20) > *(double *)(a1 + 888))
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v4 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "We ran point-in-polygon on a location we threw out anyway!", buf, 2u);
    }
    v5 = sub_1001BFF7C(115, 0);
    result = 0;
    if (v5)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      LOWORD(v36) = 0;
      LODWORD(v35) = 2;
      v7 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 17, "We ran point-in-polygon on a location we threw out anyway!", &v36, *(_QWORD *)&v35);
      v9 = v8;
      sub_100512490("Generic", 1, 0, 0, "BOOL CLTimeZoneManager::shouldSetSystemTimeZone(const std::string &, const CLDaemonLocation &, double &)", "%s\n", v7);
LABEL_10:
      if (v9 != buf)
        free(v9);
      return 0;
    }
    return result;
  }
  v13 = (char *)(a1 + 96);
  v14 = a2[23];
  v15 = *((_QWORD *)a2 + 1);
  if ((v14 & 0x80u) == 0)
    v16 = a2[23];
  else
    v16 = *((_QWORD *)a2 + 1);
  v17 = *(unsigned __int8 *)(a1 + 119);
  v18 = (char)v17;
  if ((v17 & 0x80u) != 0)
    v17 = *(_QWORD *)(a1 + 104);
  if (v16 == v17)
  {
    if (v18 >= 0)
      v19 = (char *)(a1 + 96);
    else
      v19 = *(char **)v13;
    if ((v14 & 0x80) != 0)
    {
      if (!memcmp(*(const void **)a2, v19, v15) || v15 == 0)
        return 1;
      goto LABEL_33;
    }
    if (!a2[23])
      return 1;
    while (*a2 == *v19)
    {
      ++a2;
      ++v19;
      if (!--v14)
        return 1;
    }
  }
  if (!v17)
    return 1;
LABEL_33:
  HIBYTE(v35) = 0;
  v21 = *(_QWORD *)a1;
  if (!*(_QWORD *)a1)
  {
    v21 = sub_10068878C();
    *(_QWORD *)a1 = v21;
  }
  if ((sub_10068EB94(v21, v13, (double *)(a3 + 4), (double *)(a3 + 12), (char *)&v35 + 7, a4) & 1) == 0)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v29 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      v30 = v13;
      if (*(char *)(a1 + 119) < 0)
        v30 = *(char **)v13;
      v31 = *(_QWORD *)(a3 + 20);
      *(_DWORD *)buf = 136315394;
      v41 = *(double *)&v30;
      v42 = 2048;
      v43 = v31;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Current time zone %s not in database; changing time because of acceptable location accuracy %.3f",
        buf,
        0x16u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      if (*(char *)(a1 + 119) < 0)
        v13 = *(char **)v13;
      v32 = *(_QWORD *)(a3 + 20);
      v36 = 136315394;
      v37 = *(double *)&v13;
      v38 = 2048;
      v39 = v32;
      LODWORD(v35) = 22;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Current time zone %s not in database; changing time because of acceptable location accuracy %.3f",
        (const char *)&v36,
        v35);
      v34 = (uint8_t *)v33;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::shouldSetSystemTimeZone(const std::string &, const CLDaemonLocation &, double &)", "%s\n", v33);
      if (v34 != buf)
        free(v34);
    }
    return 1;
  }
  if (*a4 >= *(double *)(a3 + 20))
    return 1;
  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v22 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
  {
    v23 = *a4;
    v24 = *(_QWORD *)(a3 + 20);
    *(_DWORD *)buf = 134218240;
    v41 = v23;
    v42 = 2048;
    v43 = v24;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#Warning Distance from previous time zone's border is %.3f; accuracy of position is %.3f",
      buf,
      0x16u);
  }
  result = sub_1001BFF7C(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v25 = *a4;
    v26 = *(_QWORD *)(a3 + 20);
    v36 = 134218240;
    v37 = v25;
    v38 = 2048;
    v39 = v26;
    LODWORD(v35) = 22;
    v27 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Warning Distance from previous time zone's border is %.3f; accuracy of position is %.3f",
            COERCE_DOUBLE(&v36),
            v35);
    v9 = v28;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::shouldSetSystemTimeZone(const std::string &, const CLDaemonLocation &, double &)", "%s\n", v27);
    goto LABEL_10;
  }
  return result;
}

BOOL sub_100909C28(uint64_t a1, const char *a2)
{
  const std::string *v2;
  CFStringRef v4;
  NSObject *v5;
  const std::string *v6;
  const std::string *v8;
  const char *v9;
  uint8_t *v10;
  int v11;
  const std::string *v12;
  uint8_t buf[4];
  const std::string *v14;

  v2 = (const std::string *)a2;
  if (a2[23] < 0)
    a2 = *(const char **)a2;
  v4 = CFStringCreateWithCString(kCFAllocatorDefault, a2, 0x8000100u);
  if (v4)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v5 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEBUG))
    {
      if ((v2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v6 = v2;
      else
        v6 = (const std::string *)v2->__r_.__value_.__r.__words[0];
      *(_DWORD *)buf = 136315138;
      v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Telling timed the time zone is \"%s\".", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      if ((v2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v8 = v2;
      else
        v8 = (const std::string *)v2->__r_.__value_.__r.__words[0];
      v11 = 136315138;
      v12 = v8;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 2, "Telling timed the time zone is \"%s\".", (const char *)&v11);
      v10 = (uint8_t *)v9;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setSystemTimeZone(const std::string &)", "%s\n", v9);
      if (v10 != buf)
        free(v10);
    }
    off_1022A5648((uint64_t)CFSTR("Location"), (uint64_t)v4);
    std::string::operator=((std::string *)(a1 + 96), v2);
    *(CFAbsoluteTime *)(a1 + 144) = CFAbsoluteTimeGetCurrent();
    if (*(_BYTE *)(a1 + 825))
      sub_100906E14(a1, (double *)(a1 + 944));
    CFRelease(v4);
  }
  return v4 != 0;
}

BOOL sub_100909E7C(uint64_t a1, std::string *a2, uint64_t a3)
{
  _QWORD *v6;
  _BOOL8 v7;
  NSObject *v8;
  NSObject *v9;
  std::string *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  std::string *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  const char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  NSObject *v30;
  std::string *v31;
  NSObject *v32;
  std::string *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  const char *v40;
  uint8_t *v41;
  std::string *v42;
  const char *v43;
  uint8_t *v44;
  std::string *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint8_t *v51;
  uint64_t v52;
  _BYTE v53[24];
  _BYTE v54[32];
  uint8_t buf[4];
  std::string *v56;
  __int16 v57;
  uint64_t v58;
  __int16 v59;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  __int16 v63;
  uint64_t v64;
  __int16 v65;
  int v66;

  *(_QWORD *)(a1 + 88) = 0xBFF0000000000000;
  v6 = (_QWORD *)(a1 + 88);
  v7 = sub_1009096B8(a1, (unsigned __int8 *)a2, a3, (double *)(a1 + 88));
  if (!v7)
  {
    std::string::operator=((std::string *)(a1 + 120), a2);
    v23 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(a1 + 308) = *(_OWORD *)a3;
    *(_OWORD *)(a1 + 324) = v23;
    v24 = *(_OWORD *)(a3 + 80);
    v26 = *(_OWORD *)(a3 + 32);
    v25 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(a1 + 372) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(a1 + 388) = v24;
    *(_OWORD *)(a1 + 340) = v26;
    *(_OWORD *)(a1 + 356) = v25;
    v28 = *(_OWORD *)(a3 + 112);
    v27 = *(_OWORD *)(a3 + 128);
    v29 = *(_OWORD *)(a3 + 96);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a3 + 140);
    *(_OWORD *)(a1 + 420) = v28;
    *(_OWORD *)(a1 + 436) = v27;
    *(_OWORD *)(a1 + 404) = v29;
    return v7;
  }
  *(_DWORD *)(a1 + 820) = 0;
  if (!*(_DWORD *)(a1 + 816))
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v8 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning bystander location, used to set time zone, billed to 'TimeZone' system service", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      *(_WORD *)v53 = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Warning bystander location, used to set time zone, billed to 'TimeZone' system service", v53, 2);
      v41 = (uint8_t *)v40;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setTimeZoneIfAppropriate(const std::string &, const CLDaemonLocation &)", "%s\n", v40);
      if (v41 != buf)
        free(v41);
    }
    sub_100BCF0A0(a1 + 624);
  }
  if (sub_100512464())
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v9 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v10 = a2;
      else
        v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
      v11 = *(_QWORD *)(a3 + 4);
      v12 = *(_QWORD *)(a3 + 12);
      v13 = *(_QWORD *)(a3 + 20);
      v14 = *(_QWORD *)(a3 + 76);
      v15 = *(_DWORD *)(a3 + 84);
      *(_DWORD *)buf = 136316419;
      v56 = v10;
      v57 = 2049;
      v58 = v11;
      v59 = 2049;
      v60 = v12;
      v61 = 2048;
      v62 = v13;
      v63 = 2048;
      v64 = v14;
      v65 = 1024;
      v66 = v15;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#Notice Potentially setting system time zone to %s based on <%{private}+.8lf,%{private}+.8lf> acc %.2f timestamp %.2f confidence %d", buf, 0x3Au);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_41;
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = a2;
    else
      v16 = (std::string *)a2->__r_.__value_.__r.__words[0];
    v17 = *(_QWORD *)(a3 + 4);
    v18 = *(_QWORD *)(a3 + 12);
    v19 = *(_QWORD *)(a3 + 20);
    v20 = *(_QWORD *)(a3 + 76);
    v21 = *(_DWORD *)(a3 + 84);
    *(_DWORD *)v53 = 136316419;
    *(_QWORD *)&v53[4] = v16;
    *(_WORD *)&v53[12] = 2049;
    *(_QWORD *)&v53[14] = v17;
    *(_WORD *)&v53[22] = 2049;
    *(_WORD *)v54 = 2048;
    *(_QWORD *)&v54[2] = v19;
    *(_WORD *)&v54[10] = 2048;
    *(_QWORD *)&v54[12] = v20;
    *(_WORD *)&v54[20] = 1024;
    *(_DWORD *)&v54[22] = v21;
    LODWORD(v52) = 58;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Notice Potentially setting system time zone to %s based on <%{private}+.8lf,%{private}+.8lf> acc %.2f timestamp %.2f confidence %d", v53, v52, *(_OWORD *)v53, *(_QWORD *)&v53[16], v18, *(_OWORD *)v54, *(_OWORD *)&v54[16]);
  }
  else
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v30 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v31 = a2;
      else
        v31 = (std::string *)a2->__r_.__value_.__r.__words[0];
      *(_DWORD *)buf = 136446210;
      v56 = v31;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "#Notice Potentially setting system time zone to %{public}s", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v42 = a2;
      else
        v42 = (std::string *)a2->__r_.__value_.__r.__words[0];
      *(_DWORD *)v53 = 136446210;
      *(_QWORD *)&v53[4] = v42;
      LODWORD(v52) = 12;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Notice Potentially setting system time zone to %{public}s", v53, v52);
      v44 = (uint8_t *)v43;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setTimeZoneIfAppropriate(const std::string &, const CLDaemonLocation &)", "%s\n", v43);
      if (v44 != buf)
        free(v44);
    }
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v32 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v33 = a2;
      else
        v33 = (std::string *)a2->__r_.__value_.__r.__words[0];
      v34 = *(_QWORD *)(a3 + 4);
      v35 = *(_QWORD *)(a3 + 12);
      v36 = *(_QWORD *)(a3 + 20);
      v37 = *(_QWORD *)(a3 + 76);
      v38 = *(_DWORD *)(a3 + 84);
      *(_DWORD *)buf = 136316419;
      v56 = v33;
      v57 = 2049;
      v58 = v34;
      v59 = 2049;
      v60 = v35;
      v61 = 2048;
      v62 = v36;
      v63 = 2048;
      v64 = v37;
      v65 = 1024;
      v66 = v38;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "Potentially setting system time zone to %s based on <%{private}+.8lf,%{private}+.8lf> acc %.2f timestamp %.2f confidence %d", buf, 0x3Au);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_41;
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v45 = a2;
    else
      v45 = (std::string *)a2->__r_.__value_.__r.__words[0];
    v46 = *(_QWORD *)(a3 + 4);
    v47 = *(_QWORD *)(a3 + 12);
    v48 = *(_QWORD *)(a3 + 20);
    v49 = *(_QWORD *)(a3 + 76);
    v50 = *(_DWORD *)(a3 + 84);
    *(_DWORD *)v53 = 136316419;
    *(_QWORD *)&v53[4] = v45;
    *(_WORD *)&v53[12] = 2049;
    *(_QWORD *)&v53[14] = v46;
    *(_WORD *)&v53[22] = 2049;
    *(_WORD *)v54 = 2048;
    *(_QWORD *)&v54[2] = v48;
    *(_WORD *)&v54[10] = 2048;
    *(_QWORD *)&v54[12] = v49;
    *(_WORD *)&v54[20] = 1024;
    *(_DWORD *)&v54[22] = v50;
    LODWORD(v52) = 58;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Potentially setting system time zone to %s based on <%{private}+.8lf,%{private}+.8lf> acc %.2f timestamp %.2f confidence %d", v53, v52, *(_QWORD *)v53, *(_OWORD *)&v53[8], v47, *(_QWORD *)v54, *(_QWORD *)&v54[8], *(_QWORD *)&v54[16], *(_QWORD *)&v54[24]);
  }
  v51 = (uint8_t *)v22;
  sub_100512490("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setTimeZoneIfAppropriate(const std::string &, const CLDaemonLocation &)", "%s\n", v22);
  if (v51 != buf)
    free(v51);
LABEL_41:
  sub_100909C28(a1, (const char *)a2);
  if (*(char *)(a1 + 143) < 0)
  {
    **(_BYTE **)(a1 + 120) = 0;
    *(_QWORD *)(a1 + 128) = 0;
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
    *(_BYTE *)(a1 + 143) = 0;
  }
  *v6 = 0xBFF0000000000000;
  return v7;
}

void sub_10090A5CC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  int v6;
  int v7;
  double v8;
  double v9;
  double v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  const char *v14;
  uint8_t *v15;
  int v16;
  int v17;
  int v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  const char *v22;
  uint8_t *v23;
  const char *v24;
  uint8_t *v25;
  const char *v26;
  uint8_t *v27;
  double v28;
  double v29;
  int v30;
  uint64_t v31;
  __int16 v32;
  double v33;
  uint8_t buf[4];
  uint64_t v35;
  __int16 v36;
  double v37;

  if (*a3 == 8)
  {
    if (*(_BYTE *)a4)
    {
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v13 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Got airplane entered notification", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        LOWORD(v30) = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Got airplane entered notification", &v30, 2);
        v15 = (uint8_t *)v14;
        sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v14);
        if (v15 != buf)
          free(v15);
      }
    }
    else
    {
      v16 = *(_DWORD *)(a1 + 856);
      if (v16)
      {
        if (v16 == -1)
        {
          v17 = off_1022A5638();
          if (v17)
            v18 = 2;
          else
            v18 = 1;
          if (*(_DWORD *)(a1 + 856) != 2 && v17)
            *(_QWORD *)(a1 + 144) = 0;
          *(_DWORD *)(a1 + 856) = v18;
        }
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        v19 = qword_1022A0238;
        if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Got airplane mode exited notification; entering continuous location mode",
            buf,
            2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0230 != -1)
            dispatch_once(&qword_1022A0230, &stru_10215E630);
          LOWORD(v30) = 0;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Got airplane mode exited notification; entering continuous location mode",
            &v30,
            2);
          v25 = (uint8_t *)v24;
          sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v24);
          if (v25 != buf)
            free(v25);
        }
        sub_100906C54(a1, (double *)(a1 + 928));
        sub_100907984(a1, 2, 1);
      }
    }
  }
  else if (*a3 == 6 && *(int *)(a1 + 820) >= 1 && *(_DWORD *)(a4 + 4) != 0)
  {
    v6 = off_1022A5638();
    if (v6)
      v7 = 2;
    else
      v7 = 1;
    if (*(_DWORD *)(a1 + 856) != 2 && v6)
      *(_QWORD *)(a1 + 144) = 0;
    *(_DWORD *)(a1 + 856) = v7;
    v8 = CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 864);
    v9 = *(double *)(a1 + 976);
    if (v8 >= v9)
    {
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v20 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Got data mode change notification; entering continuous location mode",
          buf,
          2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        LOWORD(v30) = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Got data mode change notification; entering continuous location mode",
          &v30,
          2);
        v27 = (uint8_t *)v26;
        sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v26);
        if (v27 != buf)
          free(v27);
      }
      sub_100906C54(a1, (double *)(a1 + 928));
      sub_100907984(a1, 2, 0);
      *(CFAbsoluteTime *)(a1 + 864) = CFAbsoluteTimeGetCurrent();
    }
    else
    {
      if (qword_1022A0230 != -1)
      {
        v29 = *(double *)(a1 + 976);
        dispatch_once(&qword_1022A0230, &stru_10215E630);
        v9 = v29;
      }
      v10 = v9 - v8;
      v11 = qword_1022A0238;
      if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
      {
        v12 = *(_QWORD *)(a1 + 976);
        *(_DWORD *)buf = 134218240;
        v35 = v12;
        v36 = 2048;
        v37 = v10;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Got data mode change notification, but haven't exceeded reachability interval(%.3f s).  Will try again in %.3f s", buf, 0x16u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0230 != -1)
          dispatch_once(&qword_1022A0230, &stru_10215E630);
        v21 = *(_QWORD *)(a1 + 976);
        v30 = 134218240;
        v31 = v21;
        v32 = 2048;
        v33 = v10;
        LODWORD(v28) = 22;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Got data mode change notification, but haven't exceeded reachability interval(%.3f s).  Will try again in %.3f s", COERCE_DOUBLE(&v30), v28);
        v23 = (uint8_t *)v22;
        sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v22);
        if (v23 != buf)
          free(v23);
      }
      objc_msgSend(*(id *)(a1 + 872), "setNextFireDelay:", v10);
    }
  }
}

void sub_10090AC40(uint64_t a1, uint64_t a2, int *a3)
{
  const void *v4;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  NSObject *v8;
  const __CFString *v9;
  uint8_t *v10;
  uint64_t v11;
  const __CFString *v12;
  _BYTE *v13;
  uint8_t *v14;
  _BYTE v15[12];
  char v16;
  int v17;
  _BYTE *v18;
  uint8_t buf[8];
  char v20;

  v4 = (const void *)sub_1001DEC98(a3);
  if (CFEqual(v4, kCTRegistrationNewServingNetworkNotification))
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v5 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Ignoring kCTRegistrationNewServingNetworkNotification until <rdar://problem/10068712> is fixed", buf, 2u);
    }
    if (!sub_1001BFF7C(115, 2))
      return;
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    *(_WORD *)v15 = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Ignoring kCTRegistrationNewServingNetworkNotification until <rdar://problem/10068712> is fixed", v15, 2);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v6);
    if (v7 == buf)
      return;
LABEL_29:
    free(v7);
    return;
  }
  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v8 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (const __CFString *)sub_1001DEC98(a3);
    sub_1001A486C(v9, (uint64_t)buf);
    v10 = v20 >= 0 ? buf : *(uint8_t **)buf;
    *(_DWORD *)v15 = 136315138;
    *(_QWORD *)&v15[4] = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning received unknown notification %s from telephony service", v15, 0xCu);
    if (v20 < 0)
      operator delete(*(void **)buf);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v11 = qword_1022A0238;
    v12 = (const __CFString *)sub_1001DEC98(a3);
    sub_1001A486C(v12, (uint64_t)v15);
    if (v16 >= 0)
      v13 = v15;
    else
      v13 = *(_BYTE **)v15;
    v17 = 136315138;
    v18 = v13;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v11, 0, "#Warning received unknown notification %s from telephony service", (const char *)&v17);
    v7 = v14;
    if (v16 < 0)
      operator delete(*(void **)v15);
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", (const char *)v7);
    if (v7 != buf)
      goto LABEL_29;
  }
}

void sub_10090AF90(uint64_t a1)
{
  int v2;
  int v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _DWORD v8[4];
  uint8_t buf[4];
  int v10;

  v2 = off_1022A5638();
  if (v2)
    v3 = 2;
  else
    v3 = 1;
  if (*(_DWORD *)(a1 + 856) != 2 && v2 != 0)
    *(_QWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 856) = v3;
  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v5 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109120;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Automatic time is now in mode %d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v8[0] = 67109120;
    v8[1] = v3;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Automatic time is now in mode %d", v8);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onLocationTimeZoneActiveNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  sub_100907210(a1);
}

void sub_10090B170(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  NSObject *v4;
  uint64_t v5;
  id v11;
  uint64_t *v12;
  const char *v13;
  uint8_t *v14;
  _WORD v15[8];
  uint8_t buf[1640];

  if (*a3 == 4)
  {
    sub_100907210(a1);
  }
  else if (!*a3)
  {
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v4 = qword_1022A0238;
    if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Warning location status reset; removing all clients",
        buf,
        2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0230 != -1)
        dispatch_once(&qword_1022A0230, &stru_10215E630);
      v15[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 0, "#Warning location status reset; removing all clients",
        v15,
        2);
      v14 = (uint8_t *)v13;
      sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v13);
      if (v14 != buf)
        free(v14);
    }
    *(_DWORD *)(a1 + 152) = 0xFFFF;
    v5 = a1 + 152;
    *(_QWORD *)(v5 + 12) = 0;
    *(_QWORD *)(v5 + 4) = 0;
    *(_OWORD *)(v5 + 20) = xmmword_101BAFC90;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v5 + 36) = _Q0;
    *(_OWORD *)(v5 + 52) = _Q0;
    *(_OWORD *)(v5 + 68) = _Q0;
    *(_DWORD *)(v5 + 84) = 0;
    *(_QWORD *)(v5 + 96) = 0;
    *(_QWORD *)(v5 + 104) = 0;
    *(_QWORD *)(v5 + 88) = 0xBFF0000000000000;
    *(_DWORD *)(v5 + 112) = 0;
    *(_QWORD *)(v5 + 116) = 0xBFF0000000000000;
    *(_DWORD *)(v5 + 124) = 0x7FFFFFFF;
    *(_QWORD *)(v5 + 136) = 0;
    *(_QWORD *)(v5 + 144) = 0;
    *(_QWORD *)(v5 + 128) = 0;
    *(_BYTE *)(v5 + 152) = 0;
    v11 = objc_msgSend(objc_msgSend(*(id *)(v5 - 88), "vendor"), "proxyForService:", CFSTR("CLClientManager"));
    if (byte_102305747 >= 0)
      v12 = &qword_102305730;
    else
      v12 = (uint64_t *)qword_102305730;
    objc_msgSend(v11, "resetNotificationConsumedForIdentifier:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  }
}

void sub_10090B3E4(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A0230 != -1)
    dispatch_once(&qword_1022A0230, &stru_10215E630);
  v2 = qword_1022A0238;
  if (os_log_type_enabled((os_log_t)qword_1022A0238, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Got immediate check notification", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0230 != -1)
      dispatch_once(&qword_1022A0230, &stru_10215E630);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0238, 1, "Got immediate check notification", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLTimeZoneManager::onImmediateCheckNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  sub_100907984(a1, 2, 1);
}

void sub_10090B584(id a1)
{
  qword_102305760 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CoreTime.framework/CoreTime", 2);
}

void sub_10090B5AC(id a1)
{
  qword_1022A0228 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10090B5D8(id a1)
{
  qword_1022A0238 = (uint64_t)os_log_create("com.apple.locationd.Core", "TZ");
}

void sub_10090B604(uint64_t a1)
{
  sub_10090B3E4(*(_QWORD *)(a1 + 32));
}

void sub_10090B60C(uint64_t a1)
{
  sub_10090AF90(*(_QWORD *)(a1 + 32));
}

uint64_t sub_10090B614()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  v0 = (uint64_t *)dlsym((void *)qword_102305760, "TMLocationTimeZoneActiveNotification");
  if (v0)
  {
    result = *v0;
    qword_102305768 = result;
  }
  else
  {
    result = qword_102305768;
  }
  off_1022A5620 = sub_10090B68C;
  return result;
}

uint64_t sub_10090B68C()
{
  return qword_102305768;
}

uint64_t sub_10090B698(uint64_t a1)
{
  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  off_1022A5630 = (uint64_t (*)())dlsym((void *)qword_102305760, "TMSetSourceUnavailable");
  return ((uint64_t (*)(uint64_t))off_1022A5630)(a1);
}

uint64_t sub_10090B700()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  v0 = (uint64_t *)dlsym((void *)qword_102305760, "TMSourceLocation");
  if (v0)
  {
    result = *v0;
    qword_102305770 = result;
  }
  else
  {
    result = qword_102305770;
  }
  off_1022A5628 = sub_10090B778;
  return result;
}

uint64_t sub_10090B778()
{
  return qword_102305770;
}

uint64_t sub_10090B784()
{
  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  off_1022A5638 = (uint64_t (*)())dlsym((void *)qword_102305760, "TMIsAutomaticTimeZoneEnabled");
  return off_1022A5638();
}

uint64_t sub_10090B7D8(uint64_t a1)
{
  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  off_1022A5640 = (uint64_t (*)())dlsym((void *)qword_102305760, "TMSetSourceAvailable");
  return ((uint64_t (*)(uint64_t))off_1022A5640)(a1);
}

uint64_t sub_10090B840(uint64_t a1, uint64_t a2)
{
  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  off_1022A5648 = (uint64_t (*)())dlsym((void *)qword_102305760, "TMSetSourceTimeZone");
  return ((uint64_t (*)(uint64_t, uint64_t))off_1022A5648)(a1, a2);
}

uint64_t sub_10090B8B0()
{
  if (qword_102305758 != -1)
    dispatch_once(&qword_102305758, &stru_10215E5F0);
  off_1022A5650 = (uint64_t (*)())dlsym((void *)qword_102305760, "TMIsTimeZoneConfirmed");
  return off_1022A5650();
}

void sub_10090B904()
{
  unsigned __int8 v0;
  _OWORD v1[5];
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_1022A19C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1022A19C8))
    {
      v2 = 0x7FFFFFFF00000000;
      v1[2] = xmmword_101BE70D8;
      v1[3] = unk_101BE70E8;
      v1[4] = xmmword_101BE70F8;
      v1[0] = xmmword_101BE70B8;
      v1[1] = unk_101BE70C8;
      sub_100428DFC((uint64_t)&unk_1022A19B0, (int *)v1, 11);
      __cxa_atexit((void (*)(void *))sub_100427E4C, &unk_1022A19B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1022A19C8);
    }
  }
}

void sub_10090B9D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A19C8);
  _Unwind_Resume(a1);
}

uint64_t sub_10090B9F0()
{
  sub_1015A2E04(&qword_102305730, "TimeZoneManager");
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102305730, (void *)&_mh_execute_header);
}

void sub_10090C4E0(id a1)
{
  qword_1022A0068 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_10090D77C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a42 < 0)
    operator delete(__p);
  if (a51 < 0)
    operator delete(a46);
  if (a60 < 0)
    operator delete(a55);
  _Unwind_Resume(exception_object);
}

void sub_10090D860(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *p_p;
  std::string::size_type size;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  void *v24;
  std::string *v25;
  __int128 v26;
  __int128 v27;
  std::string __p;
  std::string v29;
  std::string v30;
  std::string v31;
  std::string v32;
  double *v33;
  double *v34;
  uint64_t v35;

  v33 = 0;
  v34 = 0;
  v35 = 0;
  sub_10025EA00(&v33, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
  v6 = (char *)v34 - (char *)v33;
  if (v34 == v33)
  {
    if (!v34)
    {
      v9 = *(double **)a1;
      if (*(_QWORD *)(a1 + 8) != *(_QWORD *)a1)
        goto LABEL_30;
LABEL_36:
      sub_1015A2E04(a2, "(--inf,inf)");
      return;
    }
    LODWORD(v7) = 0;
  }
  else
  {
    v7 = 0;
    v8 = v6 >> 3;
    if ((unint64_t)(v6 >> 3) <= 1)
      v8 = 1;
    while (v33[v7] < a3)
    {
      if (v8 == ++v7)
      {
        LODWORD(v7) = v8;
        break;
      }
    }
  }
  v34 = v33;
  operator delete(v33);
  v9 = *(double **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10 == *(_QWORD *)a1)
    goto LABEL_36;
  if (!(_DWORD)v7)
  {
LABEL_30:
    std::to_string(&v31, *v9);
    v25 = std::string::insert(&v31, 0, "(--inf,");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    v13 = std::string::append(&v32, "]");
LABEL_31:
    v27 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    a2[2] = *((_QWORD *)&v13->__r_.__value_.__l + 2);
    *(_OWORD *)a2 = v27;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    {
      v24 = (void *)v31.__r_.__value_.__r.__words[0];
      goto LABEL_35;
    }
    return;
  }
  if ((v10 - *(_QWORD *)a1) >> 3 == (int)v7)
  {
    std::to_string(&v31, *(double *)(v10 - 8));
    v11 = std::string::insert(&v31, 0, "(");
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    v13 = std::string::append(&v32, ",inf)");
    goto LABEL_31;
  }
  std::to_string(&v29, v9[(int)v7 - 1]);
  v14 = std::string::insert(&v29, 0, "(");
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v30.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  v16 = std::string::append(&v30, ",");
  v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, *(double *)(*(_QWORD *)a1 + 8 * (int)v7));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v20 = std::string::append(&v31, (const std::string::value_type *)p_p, size);
  v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  v22 = std::string::append(&v32, "]");
  v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  a2[2] = *((_QWORD *)&v22->__r_.__value_.__l + 2);
  *(_OWORD *)a2 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v31.__r_.__value_.__l.__data_);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
  {
    v24 = (void *)v29.__r_.__value_.__r.__words[0];
LABEL_35:
    operator delete(v24);
  }
}

void sub_10090DB38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (*(char *)(v33 - 73) < 0)
    operator delete(*(void **)(v33 - 96));
  if (a14 < 0)
    operator delete(__p);
  if (a33 < 0)
    operator delete(a28);
  if (a26 < 0)
    operator delete(a21);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

NSDictionary *sub_10090DBE8(char *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD v6[3];
  _QWORD v7[3];

  v6[0] = CFSTR("altitudeDifferenceWhenThresholdSet");
  v2 = a1 + 32;
  if (a1[55] < 0)
    v2 = (_QWORD *)*v2;
  v7[0] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v2);
  v6[1] = CFSTR("maxAltitudeChangeFromThresholdSetToTrigger");
  v3 = a1 + 56;
  if (a1[79] < 0)
    v3 = (_QWORD *)*v3;
  v7[1] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3);
  v6[2] = CFSTR("timeFromThresholdSetToTrigger");
  v4 = a1 + 80;
  if (a1[103] < 0)
    v4 = (_QWORD *)*v4;
  v7[2] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v4);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v6, 3);
}

_BYTE *sub_10090DCCC(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  _BYTE *result;
  __int128 v7;

  if (*(char *)(a2 + 55) < 0)
  {
    sub_100115CE4((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(_QWORD *)(a2 + 40));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }
  if (*(char *)(a2 + 79) < 0)
  {
    sub_100115CE4((_BYTE *)(a1 + 56), *(void **)(a2 + 56), *(_QWORD *)(a2 + 64));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v5;
  }
  result = (_BYTE *)(a1 + 80);
  if (*(char *)(a2 + 103) < 0)
    return sub_100115CE4(result, *(void **)(a2 + 80), *(_QWORD *)(a2 + 88));
  v7 = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)result = v7;
  return result;
}

void sub_10090DD80(_Unwind_Exception *exception_object)
{
  void **v1;
  uint64_t v2;
  void **v3;

  if (*(char *)(v2 + 79) < 0)
    operator delete(*v3);
  if (*(char *)(v2 + 55) < 0)
    operator delete(*v1);
  _Unwind_Resume(exception_object);
}

void sub_10090DDB4(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0)
    operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
}

void sub_10090DE68(id a1)
{
  qword_10229FE88 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

_OWORD *sub_10090DE94(uint64_t **a1, _OWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t **v9;

  v4 = operator new(0x40uLL);
  v5 = v4;
  v6 = a2[1];
  v4[2] = *a2;
  v4[3] = v6;
  v7 = a1 + 1;
  v8 = a1[1];
  if (v8)
  {
    do
    {
      while (1)
      {
        v7 = (uint64_t **)v8;
        if (*((float *)v4 + 8) >= *((float *)v8 + 8))
          break;
        v8 = (uint64_t *)*v8;
        v9 = v7;
        if (!*v7)
          goto LABEL_8;
      }
      v8 = (uint64_t *)v8[1];
    }
    while (v8);
    v9 = v7 + 1;
  }
  else
  {
    v9 = a1 + 1;
  }
LABEL_8:
  sub_1000145B0(a1, (uint64_t)v7, v9, (uint64_t *)v4);
  return v5;
}

uint64_t **sub_10090DF28(uint64_t **a1, unint64_t *a2, _OWORD *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  unint64_t v7;
  uint64_t **v8;
  unint64_t v9;
  uint64_t *v10;
  __int128 v11;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = v5[4];
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (uint64_t *)operator new(0x50uLL);
    v11 = a3[1];
    *((_OWORD *)v10 + 2) = *a3;
    *((_OWORD *)v10 + 3) = v11;
    *((_OWORD *)v10 + 4) = a3[2];
    sub_1000145B0(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t sub_10090DFE8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)a1 = a1 + 8;
  sub_10090E03C((char *)a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_10090E024(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100008848(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

char *sub_10090E03C(char *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  float *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = (float *)(result + 8);
    do
    {
      result = (char *)sub_10090E0BC(v5, v6, (_OWORD *)v4 + 2);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void *sub_10090E0BC(uint64_t **a1, float *a2, _OWORD *a3)
{
  void *v6;
  __int128 v7;
  float *v8;
  float *v10;

  v6 = operator new(0x40uLL);
  v7 = a3[1];
  *((_OWORD *)v6 + 2) = *a3;
  *((_OWORD *)v6 + 3) = v7;
  v8 = sub_10090E144(a1, a2, &v10, (float *)v6 + 8);
  sub_1000145B0(a1, (uint64_t)v10, (uint64_t **)v8, (uint64_t *)v6);
  return v6;
}

void sub_10090E130(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

float *sub_10090E144(_QWORD *a1, float *a2, float **a3, float *a4)
{
  float *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float *v8;
  float *v9;
  BOOL v10;
  uint64_t v11;

  v4 = (float *)(a1 + 1);
  if (a1 + 1 != (_QWORD *)a2 && a2[8] < *a4)
  {
    while (1)
    {
      v5 = *(_QWORD *)v4;
      a2 = v4;
      if (!*(_QWORD *)v4)
        break;
      while (1)
      {
        v4 = (float *)v5;
        if (*(float *)(v5 + 32) >= *a4)
          break;
        v5 = *(_QWORD *)(v5 + 8);
        if (!v5)
          goto LABEL_19;
      }
    }
LABEL_20:
    *a3 = v4;
    return a2;
  }
  v6 = *(_QWORD *)a2;
  if ((float *)*a1 == a2)
  {
    v8 = a2;
  }
  else
  {
    if (v6)
    {
      v7 = *(_QWORD *)a2;
      do
      {
        v8 = (float *)v7;
        v7 = *(_QWORD *)(v7 + 8);
      }
      while (v7);
    }
    else
    {
      v9 = a2;
      do
      {
        v8 = (float *)*((_QWORD *)v9 + 2);
        v10 = *(_QWORD *)v8 == (_QWORD)v9;
        v9 = v8;
      }
      while (v10);
    }
    if (*a4 < v8[8])
    {
      while (1)
      {
        v11 = *(_QWORD *)v4;
        a2 = v4;
        if (!*(_QWORD *)v4)
          goto LABEL_20;
        while (1)
        {
          v4 = (float *)v11;
          if (*a4 < *(float *)(v11 + 32))
            break;
          v11 = *(_QWORD *)(v11 + 8);
          if (!v11)
          {
LABEL_19:
            a2 = v4 + 2;
            goto LABEL_20;
          }
        }
      }
    }
  }
  if (v6)
  {
    *a3 = v8;
    return v8 + 2;
  }
  else
  {
    *a3 = a2;
  }
  return a2;
}

uint64_t sub_10090E22C()
{
  _OWORD *v0;
  _OWORD *v1;

  sub_1015A2E04(qword_102305778, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102305778, (void *)&_mh_execute_header);
  qword_102305798 = 0;
  qword_1023057A0 = 0;
  qword_102305790 = 0;
  v0 = operator new(0x98uLL);
  qword_1023057A0 = (uint64_t)v0 + 152;
  v0[6] = xmmword_101BE7178;
  v0[7] = unk_101BE7188;
  v0[8] = xmmword_101BE7198;
  *((_QWORD *)v0 + 18) = 0x40B3880000000000;
  v0[2] = xmmword_101BE7138;
  v0[3] = unk_101BE7148;
  v0[4] = xmmword_101BE7158;
  v0[5] = unk_101BE7168;
  *v0 = xmmword_101BE7118;
  v0[1] = unk_101BE7128;
  qword_102305790 = (uint64_t)v0;
  qword_102305798 = (uint64_t)v0 + 152;
  __cxa_atexit((void (*)(void *))sub_1004093B0, &qword_102305790, (void *)&_mh_execute_header);
  qword_1023057B0 = 0;
  unk_1023057B8 = 0;
  qword_1023057A8 = 0;
  v1 = operator new(0x58uLL);
  qword_1023057B0 = (uint64_t)v1 + 88;
  unk_1023057B8 = (char *)v1 + 88;
  v1[2] = xmmword_101BE71D0;
  v1[3] = unk_101BE71E0;
  v1[4] = xmmword_101BE71F0;
  *((_QWORD *)v1 + 10) = 0x4115F90000000000;
  *v1 = xmmword_101BE71B0;
  v1[1] = unk_101BE71C0;
  qword_1023057A8 = (uint64_t)v1;
  return __cxa_atexit((void (*)(void *))sub_1004093B0, &qword_1023057A8, (void *)&_mh_execute_header);
}

void sub_10090E3D4(id a1)
{
  qword_1023057C0 = (uint64_t)objc_msgSend(objc_alloc((Class)CLDispatchSilo), "initWithIdentifier:", CFSTR("CLFenceManagerSilo"));
}

uint64_t sub_10090E488(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10091174C;
  block[3] = &unk_10212BB58;
  block[4] = a1;
  if (qword_1023057E0 != -1)
    dispatch_once(&qword_1023057E0, block);
  return qword_102311038;
}

void sub_10090E660(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1004E2BD0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10090E674(uint64_t *a1, uint64_t a2)
{
  void *v4;
  NSObject *v5;
  _BYTE *v6;
  unsigned int v7;
  NSObject *v8;
  const char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  const std::string *v13;
  const char *v14;
  std::string *p_buf;
  size_t v16;
  std::string::size_type size;
  BOOL v18;
  unsigned int v20;
  unsigned int v21;
  NSObject *v22;
  std::string *v23;
  uint64_t v24;
  std::string *v25;
  char *v26;
  char *v27;
  NSObject *v30;
  std::string *v31;
  std::string *v32;
  std::string *v33;
  std::string *v34;
  const char *v35;
  NSObject *v36;
  std::string::size_type v37;
  _BYTE *v38;
  std::string *v39;
  std::string *v40;
  std::string::size_type v41;
  std::string *v42;
  __int128 v43;
  std::string *v44;
  NSObject *v45;
  _BYTE *v46;
  NSObject *v47;
  _BYTE *v48;
  NSObject *v49;
  std::string *v50;
  std::string *v51;
  std::string *v52;
  std::string *v53;
  const char *v54;
  char *v55;
  NSObject *v56;
  NSObject *v57;
  std::string *v58;
  NSObject *v59;
  std::string *v60;
  NSObject *v61;
  std::string::size_type v62;
  _BYTE *v63;
  std::string *p_str;
  std::string *v65;
  std::string::size_type v66;
  std::string *v67;
  __int128 v68;
  std::string *v69;
  NSObject *v70;
  _BYTE *v71;
  uint64_t v73;
  std::string *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  std::string *v78;
  char *v79;
  uint64_t v80;
  std::string *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  std::string *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  std::string *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  std::string *v93;
  char *v94;
  char *v95;
  const char *v96;
  uint64_t v97;
  void *v98[2];
  char v99;
  void *v100;
  char v101;
  void *v102;
  char v103;
  void *v104;
  char v105;
  id v106;
  void *v107;
  void *v108;
  _QWORD v109[3];
  std::string v110;
  std::string v111;
  std::string v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _BYTE v119[21];
  std::string v120;
  id v121;
  char v122[24];
  std::string v123[3];
  uint64_t v124;
  std::string __str;
  std::string v126;
  std::string v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  _BYTE v134[21];
  std::string v135;
  id v136;
  void *__src;
  _BYTE *v138;
  std::string v139;
  std::string v140;
  std::string buf;
  _BYTE __dst[32];
  char v143;
  void *v144;
  char v145;
  void *v146;
  char v147;
  id v148;
  void *__p;
  void *v150;

  sub_1004E5748((char *)&__str, (__int128 *)a2);
  sub_10091B98C((uint64_t)&v110);
  std::string::operator=(&v110, &__str);
  std::string::operator=(&v111, &v126);
  std::string::operator=(&v112, &v127);
  v117 = v132;
  v118 = v133;
  *(_OWORD *)v119 = *(_OWORD *)v134;
  *(_QWORD *)&v119[13] = *(_QWORD *)&v134[13];
  v113 = v128;
  v114 = v129;
  v115 = v130;
  v116 = v131;
  std::string::operator=(&v120, &v135);
  v4 = v121;
  v121 = v136;

  sub_1002F3538(v122, (char *)__src, (uint64_t)v138, (v138 - (_BYTE *)__src) >> 4);
  memset(v109, 0, sizeof(v109));
  if (v138 != __src && !sub_100B6EAB4((uint64_t)&__str))
  {
    sub_100914658((uint64_t)a1, (uint64_t)&v110);
    v11 = 0;
    goto LABEL_264;
  }
  sub_1004E5748(__dst, (__int128 *)a2);
  sub_10091478C((uint64_t)v123, (__int128 *)__dst);
  if (__p)
  {
    v150 = __p;
    operator delete(__p);
  }

  if (v147 < 0)
    operator delete(v146);
  if (v145 < 0)
    operator delete(v144);
  if (v143 < 0)
    operator delete(*(void **)&__dst[24]);
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  v124 = 0x4079000000000000;
  sub_1001157C0((char *)v98);
  if (!sub_100D3E4A0((uint64_t)(a1 + 14)))
  {
LABEL_38:
    memset(&buf, 0, sizeof(buf));
    v12 = *(unsigned __int8 *)(a2 + 71);
    if ((v12 & 0x80u) != 0)
      v12 = *(_QWORD *)(a2 + 56);
    if (v12)
      v13 = (const std::string *)(a2 + 48);
    else
      v13 = (const std::string *)a2;
    std::string::operator=(&buf, v13);
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
    {
      size = buf.__r_.__value_.__l.__size_;
      if (buf.__r_.__value_.__l.__size_ == 19)
      {
        v18 = *(_QWORD *)buf.__r_.__value_.__l.__data_ == 0x6C7070612E6D6F63
           && *(_QWORD *)(buf.__r_.__value_.__r.__words[0] + 8) == 0x646E696D65722E65;
        if (v18 && *(_QWORD *)(buf.__r_.__value_.__r.__words[0] + 11) == 0x737265646E696D65)
          goto LABEL_110;
      }
      if (buf.__r_.__value_.__l.__size_ == 84)
      {
        if (!memcmp(buf.__r_.__value_.__l.__data_, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/BulletinBoard.framework", 0x54uLL))goto LABEL_110;
        size = buf.__r_.__value_.__l.__size_;
      }
      if (size == 74)
      {
        if (!memcmp(buf.__r_.__value_.__l.__data_, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FMF.framework", 0x4AuLL))goto LABEL_110;
        size = buf.__r_.__value_.__l.__size_;
      }
      if (size == 83)
      {
        if (!memcmp(buf.__r_.__value_.__l.__data_, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FindMyDevice.framework", 0x53uLL))goto LABEL_110;
        size = buf.__r_.__value_.__l.__size_;
      }
      if (size != 81)
        goto LABEL_76;
      p_buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (HIBYTE(buf.__r_.__value_.__r.__words[2]) <= 0x50u)
      {
        if (HIBYTE(buf.__r_.__value_.__r.__words[2]) == 19)
        {
          if (buf.__r_.__value_.__r.__words[0] == 0x6C7070612E6D6F63
            && buf.__r_.__value_.__l.__size_ == 0x646E696D65722E65
            && *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 3) == 0x737265646E696D65)
          {
            goto LABEL_110;
          }
        }
        else if (HIBYTE(buf.__r_.__value_.__r.__words[2]) == 74
               && !memcmp(&buf, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FMF.framework", 0x4AuLL))
        {
          goto LABEL_110;
        }
        goto LABEL_76;
      }
      if (HIBYTE(buf.__r_.__value_.__r.__words[2]) != 81)
      {
        if (HIBYTE(buf.__r_.__value_.__r.__words[2]) != 83)
        {
          if (HIBYTE(buf.__r_.__value_.__r.__words[2]) == 84)
          {
            v14 = "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/BulletinBoard.framework";
            p_buf = &buf;
            v16 = 84;
            goto LABEL_75;
          }
LABEL_76:
          if (sub_100914CD8(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/RemindersAlerts.bundle")
            && sub_100914CD8(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/Wea.bundle")
            && sub_100914CD8(&buf, "com.apple.locationd.bundle-/AppleInternal/Library/Frameworks/CoreAutomationDevice.framework")&& sub_100914CD8(&buf, "com.apple.locationd.bundle-/AppleInternal/Library/LocationBundles/FenceTester.bundle")&& sub_100914CD8(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/LocationFenceSync.bundle")&& sub_100914CD8(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/LocationdInternal.bundle"))
          {
            v20 = sub_100D3EF6C((uint64_t)(a1 + 14));
            v21 = v20;
            if ((v20 & 0x80000000) != 0)
            {
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v57 = qword_1022A0068;
              if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_FAULT))
              {
                v58 = &buf;
                if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  v58 = (std::string *)buf.__r_.__value_.__r.__words[0];
                *(_DWORD *)__dst = 68289282;
                *(_DWORD *)&__dst[4] = 0;
                *(_WORD *)&__dst[8] = 2082;
                *(_QWORD *)&__dst[10] = "";
                *(_WORD *)&__dst[18] = 2082;
                *(_QWORD *)&__dst[20] = v58;
                _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Fence: unable to retrieve count of Fences\", \"bundleID\":%{public, location:escape_only}s}", __dst, 0x1Cu);
                if (qword_1022A0060 != -1)
                  dispatch_once(&qword_1022A0060, &stru_10215E938);
              }
              v59 = qword_1022A0068;
              if (!os_signpost_enabled((os_log_t)qword_1022A0068))
              {
LABEL_218:
                v61 = qword_1022A0068;
                if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
                {
                  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v62 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                  else
                    v62 = __str.__r_.__value_.__l.__size_;
                  v63 = __dst;
                  sub_100259584((uint64_t)__dst, v62 + 1);
                  if (__dst[23] < 0)
                    v63 = *(_BYTE **)__dst;
                  if (v62)
                  {
                    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                      p_str = &__str;
                    else
                      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
                    memmove(v63, p_str, v62);
                  }
                  *(_WORD *)&v63[v62] = 47;
                  if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v65 = &v126;
                  else
                    v65 = (std::string *)v126.__r_.__value_.__r.__words[0];
                  if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v66 = HIBYTE(v126.__r_.__value_.__r.__words[2]);
                  else
                    v66 = v126.__r_.__value_.__l.__size_;
                  v67 = std::string::append((std::string *)__dst, (const std::string::value_type *)v65, v66);
                  v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
                  v140.__r_.__value_.__r.__words[2] = v67->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v68;
                  v67->__r_.__value_.__l.__size_ = 0;
                  v67->__r_.__value_.__r.__words[2] = 0;
                  v67->__r_.__value_.__r.__words[0] = 0;
                  if ((__dst[23] & 0x80000000) != 0)
                    operator delete(*(void **)__dst);
                  v69 = &v140;
                  if ((v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                    v69 = (std::string *)v140.__r_.__value_.__r.__words[0];
                  LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                  *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v69;
                  _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEBUG, "canPerformMonitoringForFence is false, fence, %{private}s", (uint8_t *)&v139, 0xCu);
                  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v140.__r_.__value_.__l.__data_);
                }
                if (!sub_1001BFF7C(115, 2))
                  goto LABEL_242;
                bzero(__dst, 0x65CuLL);
                if (qword_1022A0060 != -1)
                  dispatch_once(&qword_1022A0060, &stru_10215E938);
                v77 = qword_1022A0068;
                sub_100914D68((const void **)&__str.__r_.__value_.__l.__data_, &v140);
                if ((v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v78 = &v140;
                else
                  v78 = (std::string *)v140.__r_.__value_.__r.__words[0];
                LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v78;
                LODWORD(v97) = 12;
                _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, v77, 2, "canPerformMonitoringForFence is false, fence, %{private}s", &v139, v97);
                v55 = v79;
                if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v140.__r_.__value_.__l.__data_);
                sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v55);
                if (v55 == __dst)
                  goto LABEL_242;
                goto LABEL_292;
              }
              v60 = &buf;
              if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                v60 = (std::string *)buf.__r_.__value_.__r.__words[0];
              *(_DWORD *)__dst = 68289282;
              *(_DWORD *)&__dst[4] = 0;
              *(_WORD *)&__dst[8] = 2082;
              *(_QWORD *)&__dst[10] = "";
              *(_WORD *)&__dst[18] = 2082;
              *(_QWORD *)&__dst[20] = v60;
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v59, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Fence: unable to retrieve count of Fences", "{\"msg%{public}.0s\":\"Fence: unable to retrieve count of Fences\", \"bundleID\":%{public, location:escape_only}s}", __dst, 0x1Cu);
              goto LABEL_216;
            }
            if (v20 >= 0x14)
            {
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v22 = qword_1022A0068;
              if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
              {
                sub_100914D68((const void **)a2, &v140);
                v23 = (v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                    ? &v140
                    : (std::string *)v140.__r_.__value_.__r.__words[0];
                *(_DWORD *)__dst = 136381187;
                *(_QWORD *)&__dst[4] = v23;
                *(_WORD *)&__dst[12] = 1025;
                *(_DWORD *)&__dst[14] = v21;
                *(_WORD *)&__dst[18] = 1025;
                *(_DWORD *)&__dst[20] = 20;
                _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Fence: fence not added, too many fences, %{private}s, %{private}d, %{private}u", __dst, 0x18u);
                if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v140.__r_.__value_.__l.__data_);
              }
              if (!sub_1001BFF7C(115, 2))
                goto LABEL_216;
              bzero(__dst, 0x65CuLL);
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v24 = qword_1022A0068;
              sub_100914D68((const void **)a2, &v139);
              if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v25 = &v139;
              else
                v25 = (std::string *)v139.__r_.__value_.__r.__words[0];
              LODWORD(v140.__r_.__value_.__l.__data_) = 136381187;
              *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
              WORD2(v140.__r_.__value_.__r.__words[1]) = 1025;
              *(_DWORD *)((char *)&v140.__r_.__value_.__r.__words[1] + 6) = v21;
              WORD1(v140.__r_.__value_.__r.__words[2]) = 1025;
              HIDWORD(v140.__r_.__value_.__r.__words[2]) = 20;
              _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, v24, 0, "Fence: fence not added, too many fences, %{private}s, %{private}d, %{private}u", &v140, 24);
              v27 = v26;
              if (SHIBYTE(v139.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v139.__r_.__value_.__l.__data_);
              sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v27);
              if (v27 == __dst)
                goto LABEL_216;
              goto LABEL_129;
            }
          }
LABEL_110:
          sub_100197040();
          if ((sub_1001B796C() & 0x100) != 0)
          {
            if (*(_QWORD *)(a2 + 232) == *(_QWORD *)(a2 + 224)
              && !sub_10011CE88(*(double *)(a2 + 72), *(double *)(a2 + 80)))
            {
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v49 = qword_1022A0068;
              if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
              {
                v50 = &__str;
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  v50 = (std::string *)__str.__r_.__value_.__r.__words[0];
                if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v51 = &v126;
                else
                  v51 = (std::string *)v126.__r_.__value_.__r.__words[0];
                *(_DWORD *)__dst = 136380931;
                *(_QWORD *)&__dst[4] = v50;
                *(_WORD *)&__dst[12] = 2081;
                *(_QWORD *)&__dst[14] = v51;
                _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "Not adding fence %{private}s/%{private}s because coordinate is invalid", __dst, 0x16u);
              }
              if (!sub_1001BFF7C(115, 2))
                goto LABEL_242;
              bzero(__dst, 0x65CuLL);
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v52 = &__str;
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                v52 = (std::string *)__str.__r_.__value_.__r.__words[0];
              v53 = (v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? &v126
                  : (std::string *)v126.__r_.__value_.__r.__words[0];
              LODWORD(v140.__r_.__value_.__l.__data_) = 136380931;
              *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v52;
              WORD2(v140.__r_.__value_.__r.__words[1]) = 2081;
              *(std::string::size_type *)((char *)&v140.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v53;
              _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, qword_1022A0068, 0, "Not adding fence %{private}s/%{private}s because coordinate is invalid", &v140, 22);
              v55 = (char *)v54;
              sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v54);
              if (v55 == __dst)
                goto LABEL_242;
LABEL_292:
              free(v55);
              goto LABEL_242;
            }
            if (sub_100D62C44(&__str, v123))
            {
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v36 = qword_1022A0068;
              if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
              {
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v37 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                else
                  v37 = __str.__r_.__value_.__l.__size_;
                v38 = __dst;
                sub_100259584((uint64_t)__dst, v37 + 1);
                if (__dst[23] < 0)
                  v38 = *(_BYTE **)__dst;
                if (v37)
                {
                  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v39 = &__str;
                  else
                    v39 = (std::string *)__str.__r_.__value_.__r.__words[0];
                  memmove(v38, v39, v37);
                }
                *(_WORD *)&v38[v37] = 47;
                if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v40 = &v126;
                else
                  v40 = (std::string *)v126.__r_.__value_.__r.__words[0];
                if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v41 = HIBYTE(v126.__r_.__value_.__r.__words[2]);
                else
                  v41 = v126.__r_.__value_.__l.__size_;
                v42 = std::string::append((std::string *)__dst, (const std::string::value_type *)v40, v41);
                v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
                v140.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v43;
                v42->__r_.__value_.__l.__size_ = 0;
                v42->__r_.__value_.__r.__words[2] = 0;
                v42->__r_.__value_.__r.__words[0] = 0;
                if ((__dst[23] & 0x80000000) != 0)
                  operator delete(*(void **)__dst);
                v44 = &v140;
                if ((v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  v44 = (std::string *)v140.__r_.__value_.__r.__words[0];
                LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v44;
                _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "canPerformMonitoringForFence is true, fence, %{private}s", (uint8_t *)&v139, 0xCu);
                if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v140.__r_.__value_.__l.__data_);
              }
              if (sub_1001BFF7C(115, 2))
              {
                bzero(__dst, 0x65CuLL);
                if (qword_1022A0060 != -1)
                  dispatch_once(&qword_1022A0060, &stru_10215E938);
                v84 = qword_1022A0068;
                sub_100914D68((const void **)&__str.__r_.__value_.__l.__data_, &v140);
                if ((v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v85 = &v140;
                else
                  v85 = (std::string *)v140.__r_.__value_.__r.__words[0];
                LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v85;
                _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, v84, 2, "canPerformMonitoringForFence is true, fence, %{private}s", &v139, 12);
                v87 = v86;
                if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v140.__r_.__value_.__l.__data_);
                sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v87);
                if (v87 != __dst)
                  free(v87);
              }
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v45 = qword_1022A0068;
              if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
              {
                sub_100C3B9BC((uint64_t)&__str, __dst);
                v46 = __dst[23] >= 0 ? __dst : *(_BYTE **)__dst;
                LODWORD(v140.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v46;
                _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEBUG, "Adding fence %{private}s", (uint8_t *)&v140, 0xCu);
                if ((__dst[23] & 0x80000000) != 0)
                  operator delete(*(void **)__dst);
              }
              if (sub_1001BFF7C(115, 2))
              {
                bzero(__dst, 0x65CuLL);
                if (qword_1022A0060 != -1)
                  dispatch_once(&qword_1022A0060, &stru_10215E938);
                v88 = qword_1022A0068;
                sub_100C3B9BC((uint64_t)&__str, &v140);
                if ((v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v89 = &v140;
                else
                  v89 = (std::string *)v140.__r_.__value_.__r.__words[0];
                LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v89;
                LODWORD(v97) = 12;
                _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, v88, 2, "Adding fence %{private}s", &v139, v97);
                v91 = v90;
                if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v140.__r_.__value_.__l.__data_);
                sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v91);
                if (v91 != __dst)
                  free(v91);
              }
              if ((sub_100D3DC54(a1 + 14, (uint64_t)&__str) & 1) != 0)
              {
                if (qword_1022A0060 != -1)
                  dispatch_once(&qword_1022A0060, &stru_10215E938);
                v47 = qword_1022A0068;
                if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
                {
                  sub_100C3B9BC((uint64_t)&v110, __dst);
                  v48 = __dst[23] >= 0 ? __dst : *(_BYTE **)__dst;
                  LODWORD(v140.__r_.__value_.__l.__data_) = 136380675;
                  *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v48;
                  _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Fence:Add sending kNotificationFenceSetupCompleted, fence, %{private}s", (uint8_t *)&v140, 0xCu);
                  if ((__dst[23] & 0x80000000) != 0)
                    operator delete(*(void **)__dst);
                }
                if (sub_1001BFF7C(115, 2))
                {
                  bzero(__dst, 0x65CuLL);
                  if (qword_1022A0060 != -1)
                    dispatch_once(&qword_1022A0060, &stru_10215E938);
                  v92 = qword_1022A0068;
                  sub_100C3B9BC((uint64_t)&v110, &v140);
                  if ((v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v93 = &v140;
                  else
                    v93 = (std::string *)v140.__r_.__value_.__r.__words[0];
                  LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                  *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v93;
                  LODWORD(v97) = 12;
                  _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, v92, 0, "Fence:Add sending kNotificationFenceSetupCompleted, fence, %{private}s", &v139, v97);
                  v95 = v94;
                  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v140.__r_.__value_.__l.__data_);
                  sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v95);
                  if (v95 != __dst)
                    free(v95);
                }
                *(_DWORD *)__dst = 3;
                (*(void (**)(uint64_t *, _BYTE *, std::string *, _QWORD, uint64_t, _QWORD))(*a1 + 152))(a1, __dst, &v110, 0, 0xFFFFFFFFLL, 0);
                v11 = 1;
                goto LABEL_252;
              }
LABEL_242:
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v70 = qword_1022A0068;
              if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
              {
                sub_100C3B9BC((uint64_t)&v110, __dst);
                v71 = __dst[23] >= 0 ? __dst : *(_BYTE **)__dst;
                LODWORD(v140.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v71;
                _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEFAULT, "Fence:Fail sending kNotificationFenceFailure, fence, %{private}s", (uint8_t *)&v140, 0xCu);
                if ((__dst[23] & 0x80000000) != 0)
                  operator delete(*(void **)__dst);
              }
              if (sub_1001BFF7C(115, 2))
              {
                bzero(__dst, 0x65CuLL);
                if (qword_1022A0060 != -1)
                  dispatch_once(&qword_1022A0060, &stru_10215E938);
                v73 = qword_1022A0068;
                sub_100C3B9BC((uint64_t)&v110, &v140);
                if ((v140.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v74 = &v140;
                else
                  v74 = (std::string *)v140.__r_.__value_.__r.__words[0];
                LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v74;
                LODWORD(v97) = 12;
                _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, v73, 0, "Fence:Fail sending kNotificationFenceFailure, fence, %{private}s", &v139, v97);
                v76 = v75;
                if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v140.__r_.__value_.__l.__data_);
                sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v76);
                if (v76 != __dst)
                  free(v76);
              }
              sub_100914658((uint64_t)a1, (uint64_t)&v110);
              v11 = 0;
LABEL_252:
              if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
                operator delete(buf.__r_.__value_.__l.__data_);
              goto LABEL_254;
            }
            goto LABEL_216;
          }
          if (qword_1022A0060 != -1)
            dispatch_once(&qword_1022A0060, &stru_10215E938);
          v30 = qword_1022A0068;
          if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
          {
            v31 = &__str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v31 = (std::string *)__str.__r_.__value_.__r.__words[0];
            if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v32 = &v126;
            else
              v32 = (std::string *)v126.__r_.__value_.__r.__words[0];
            *(_DWORD *)__dst = 136380931;
            *(_QWORD *)&__dst[4] = v31;
            *(_WORD *)&__dst[12] = 2081;
            *(_QWORD *)&__dst[14] = v32;
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Fence: monitoring is not supported on this platform; not adding fence %{private}s/%{private}s",
              __dst,
              0x16u);
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(__dst, 0x65CuLL);
            if (qword_1022A0060 != -1)
              dispatch_once(&qword_1022A0060, &stru_10215E938);
            v33 = &__str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v33 = (std::string *)__str.__r_.__value_.__r.__words[0];
            v34 = (v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                ? &v126
                : (std::string *)v126.__r_.__value_.__r.__words[0];
            LODWORD(v140.__r_.__value_.__l.__data_) = 136380931;
            *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
            WORD2(v140.__r_.__value_.__r.__words[1]) = 2081;
            *(std::string::size_type *)((char *)&v140.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v34;
            _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, qword_1022A0068, 0, "Fence: monitoring is not supported on this platform; not adding fence %{private}s/%{private}s",
              &v140,
              22);
            v27 = (char *)v35;
            sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v35);
            if (v27 != __dst)
LABEL_129:
              free(v27);
          }
LABEL_216:
          if (qword_1022A0060 != -1)
            dispatch_once(&qword_1022A0060, &stru_10215E938);
          goto LABEL_218;
        }
        v14 = "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FindMyDevice.framework";
        p_buf = &buf;
        v16 = 83;
LABEL_75:
        if (!memcmp(p_buf, v14, v16))
          goto LABEL_110;
        goto LABEL_76;
      }
      p_buf = &buf;
    }
    v14 = "com.apple.locationd.bundle-/System/Library/LocationBundles/FindMyDevice.framework";
    v16 = 81;
    goto LABEL_75;
  }
  if (!sub_100C3B8C8(a2, (uint64_t)v98))
  {
    sub_100D3AF8C((uint64_t)(a1 + 14), (__int128 *)a2);
    goto LABEL_38;
  }
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v5 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
  {
    sub_100C3B9BC((uint64_t)&v110, __dst);
    v6 = __dst[23] >= 0 ? __dst : *(_BYTE **)__dst;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Fence:Add sending kNotificationFenceSetupCompleted - existed, fence, %{private}s", (uint8_t *)&buf, 0xCu);
    if ((__dst[23] & 0x80000000) != 0)
      operator delete(*(void **)__dst);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(__dst, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v80 = qword_1022A0068;
    sub_100C3B9BC((uint64_t)&v110, &buf);
    if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v81 = &buf;
    else
      v81 = (std::string *)buf.__r_.__value_.__r.__words[0];
    LODWORD(v140.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v81;
    _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, v80, 0, "Fence:Add sending kNotificationFenceSetupCompleted - existed, fence, %{private}s", &v140, 12);
    v83 = v82;
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      operator delete(buf.__r_.__value_.__l.__data_);
    sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v83);
    if (v83 != __dst)
      free(v83);
  }
  *(_DWORD *)__dst = 3;
  (*(void (**)(uint64_t *, _BYTE *, std::string *, _QWORD, uint64_t, _QWORD))(*a1 + 152))(a1, __dst, &v110, 0, 0xFFFFFFFFLL, 0);
  if (!sub_100D3A758((uint64_t)(a1 + 14), (uint64_t)&__str))
    goto LABEL_204;
  v7 = sub_100D17708((uint64_t)(a1 + 43), (uint64_t)&__str, 1);
  LODWORD(buf.__r_.__value_.__l.__data_) = v7;
  if (v7 < 2)
  {
    *(_DWORD *)__dst = 8;
    sub_1009148CC((uint64_t)a1, (uint64_t)&__str, (int *)&buf, (int *)__dst, 0xFFFFFFFFLL);
  }
  else
  {
    if (v7 == 2)
    {
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v56 = qword_1022A0068;
      if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__dst = 0;
        _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "#Warning monitoring for identical pre-existing fence hasn't started yet", __dst, 2u);
      }
      if (!sub_1001BFF7C(115, 2))
        goto LABEL_204;
      bzero(__dst, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      LOWORD(v140.__r_.__value_.__l.__data_) = 0;
      LODWORD(v97) = 2;
      _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, qword_1022A0068, 0, "#Warning monitoring for identical pre-existing fence hasn't started yet", &v140, v97);
      v10 = (char *)v96;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v96);
    }
    else
    {
      if (v7 != 3)
        goto LABEL_204;
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v8 = qword_1022A0068;
      if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)__dst = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "Fence Status Not Set used for analytics received in FenceManager", __dst, 2u);
      }
      if (!sub_1001BFF7C(115, 0))
        goto LABEL_204;
      bzero(__dst, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      LOWORD(v140.__r_.__value_.__l.__data_) = 0;
      LODWORD(v97) = 2;
      _os_log_send_and_compose_impl(2, 0, __dst, 1628, &_mh_execute_header, qword_1022A0068, 17, "Fence Status Not Set used for analytics received in FenceManager", &v140, v97);
      v10 = (char *)v9;
      sub_100512490("Generic", 1, 0, 0, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v9);
    }
    if (v10 != __dst)
      free(v10);
  }
LABEL_204:
  v11 = 1;
LABEL_254:
  if (v107)
  {
    v108 = v107;
    operator delete(v107);
  }

  if (v105 < 0)
    operator delete(v104);
  if (v103 < 0)
    operator delete(v102);
  if (v101 < 0)
    operator delete(v100);
  if (v99 < 0)
    operator delete(v98[0]);
LABEL_264:
  *(_QWORD *)__dst = v109;
  sub_10091BBB0((void ***)__dst);
  sub_100115F78((uint64_t)&v110);
  if (__src)
  {
    v138 = __src;
    operator delete(__src);
  }

  if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v135.__r_.__value_.__l.__data_);
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v127.__r_.__value_.__l.__data_);
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v126.__r_.__value_.__l.__data_);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v11;
}

void sub_10091012C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46)
{
  if (SLOBYTE(STACK[0x8C7]) < 0)
    operator delete((void *)STACK[0x8B0]);
  sub_1004E2BD0((uint64_t)&a12);
  a12 = (void **)&a43;
  sub_10091BBB0(&a12);
  sub_100115F78((uint64_t)&a46);
  sub_1004E2BD0((uint64_t)&STACK[0x770]);
  _Unwind_Resume(a1);
}

void sub_100910308(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1004E2BD0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10091031C(uint64_t a1, __int128 *a2)
{
  NSObject *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t *v10;
  const char *v11;
  uint8_t *v12;
  int v13;
  uint64_t *v14;
  __int16 v15;
  uint64_t *v16;
  uint8_t buf[4];
  uint64_t *v18;
  __int16 v19;
  uint64_t *v20;

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v4 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a2 + 23) >= 0)
      v5 = (uint64_t *)a2;
    else
      v5 = *(uint64_t **)a2;
    if (*((char *)a2 + 47) >= 0)
      v6 = (uint64_t *)a2 + 3;
    else
      v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    *(_DWORD *)buf = 136446467;
    v18 = v5;
    v19 = 2081;
    v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Fence:Remove fence %{public}s/%{private}s", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    if (*((char *)a2 + 23) >= 0)
      v9 = (uint64_t *)a2;
    else
      v9 = *(uint64_t **)a2;
    if (*((char *)a2 + 47) >= 0)
      v10 = (uint64_t *)a2 + 3;
    else
      v10 = (uint64_t *)*((_QWORD *)a2 + 3);
    v13 = 136446467;
    v14 = v9;
    v15 = 2081;
    v16 = v10;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Fence:Remove fence %{public}s/%{private}s", &v13, 22);
    v12 = (uint8_t *)v11;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::removeFence(const CLFenceManager_Type::Fence &)", "%s\n", v11);
    if (v12 != buf)
      free(v12);
  }
  sub_100131938(buf, (uint64_t)"CLFenceManager.removeFence", 0);
  v7 = sub_100D3AF8C(a1 + 112, a2);
  sub_100131740((id *)buf);
  return v7;
}

void sub_100910558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_100131740((id *)va);
  _Unwind_Resume(a1);
}

void sub_100910620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1004E2BD0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100910634(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  const char *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint8_t *v41;
  uint64_t v42;
  int v43;
  __int16 v44;
  int v45;
  uint64_t v46;
  __int16 v47;
  uint64_t v48;
  __int16 v49;
  int v50;
  __int16 v51;
  const char *v52;
  uint8_t buf[4];
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  __int16 v57;
  int v58;
  __int16 v59;
  const char *v60;

  v44 = 0;
  sub_100D3F430(a1 + 112, a2, (_BYTE *)&v44 + 1, &v44);
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v4 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0)
      v5 = a2;
    else
      v5 = *(_QWORD *)a2;
    if (*(char *)(a2 + 47) >= 0)
      v6 = a2 + 24;
    else
      v6 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)buf = 136381443;
    v54 = v5;
    v55 = 2081;
    v56 = v6;
    v57 = 1026;
    v58 = HIBYTE(v44);
    v59 = 1026;
    LODWORD(v60) = v44;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: requestRegionState, %{private}s/%{private}s, registered, %{public}d, authorized, %{public}d", buf, 0x22u);
  }
  v7 = 2;
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    if (*(char *)(a2 + 23) >= 0)
      v26 = a2;
    else
      v26 = *(_QWORD *)a2;
    if (*(char *)(a2 + 47) >= 0)
      v27 = a2 + 24;
    else
      v27 = *(_QWORD *)(a2 + 24);
    v45 = 136381443;
    v46 = v26;
    v47 = 2081;
    v48 = v27;
    v49 = 1026;
    v50 = HIBYTE(v44);
    v51 = 1026;
    LODWORD(v52) = v44;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: requestRegionState, %{private}s/%{private}s, registered, %{public}d, authorized, %{public}d", &v45, 34);
    v29 = (uint8_t *)v28;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v28);
    if (v29 != buf)
      free(v29);
  }
  v43 = 2;
  v8 = HIBYTE(v44);
  if ((_BYTE)v44 && HIBYTE(v44))
  {
    v7 = sub_100D17708(a1 + 344, a2, 1);
    v43 = v7;
    v8 = HIBYTE(v44);
  }
  if (!v8)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v13 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_INFO))
    {
      if (*(char *)(a2 + 23) >= 0)
        v14 = a2;
      else
        v14 = *(_QWORD *)a2;
      if (*(char *)(a2 + 47) >= 0)
        v15 = a2 + 24;
      else
        v15 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)buf = 136380931;
      v54 = v14;
      v55 = 2081;
      v56 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Fence: requestRegionState, fence, %{private}s/%{private}s, not registered", buf, 0x16u);
    }
    if (!sub_1001BFF7C(115, 2))
      return sub_100914658(a1, a2);
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    if (*(char *)(a2 + 23) >= 0)
      v16 = a2;
    else
      v16 = *(_QWORD *)a2;
    if (*(char *)(a2 + 47) >= 0)
      v17 = a2 + 24;
    else
      v17 = *(_QWORD *)(a2 + 24);
    v45 = 136380931;
    v46 = v16;
    v47 = 2081;
    v48 = v17;
    LODWORD(v42) = 22;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 1, "Fence: requestRegionState, fence, %{private}s/%{private}s, not registered", &v45, v42);
    goto LABEL_107;
  }
  if ((_BYTE)v44 && v7 != 2)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v9 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
    {
      if (*(char *)(a2 + 23) >= 0)
        v10 = a2;
      else
        v10 = *(_QWORD *)a2;
      if (*(char *)(a2 + 47) >= 0)
        v11 = a2 + 24;
      else
        v11 = *(_QWORD *)(a2 + 24);
      if ((v7 + 1) > 4)
        v12 = "---";
      else
        v12 = off_10215EB20[v7 + 1];
      *(_DWORD *)buf = 136381443;
      v54 = v10;
      v55 = 2081;
      v56 = v11;
      v57 = 1025;
      v58 = v7;
      v59 = 2081;
      v60 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: requestRegionState, fence, %{private}s/%{private}s, status, %{private}d, %{private}s", buf, 0x26u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      if (*(char *)(a2 + 23) >= 0)
        v30 = a2;
      else
        v30 = *(_QWORD *)a2;
      if (*(char *)(a2 + 47) >= 0)
        v31 = a2 + 24;
      else
        v31 = *(_QWORD *)(a2 + 24);
      if ((v7 + 1) > 4)
        v32 = "---";
      else
        v32 = off_10215EB48[v7 + 1];
      v45 = 136381443;
      v46 = v30;
      v47 = 2081;
      v48 = v31;
      v49 = 1025;
      v50 = v7;
      v51 = 2081;
      v52 = v32;
      LODWORD(v42) = 38;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: requestRegionState, fence, %{private}s/%{private}s, status, %{private}d, %{private}s", &v45, v42);
      v37 = (uint8_t *)v36;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v36);
      if (v37 != buf)
        free(v37);
    }
    *(_DWORD *)buf = 6;
    return sub_1009148CC(a1, a2, &v43, (int *)buf, 0xFFFFFFFFLL);
  }
  if ((_BYTE)v44)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v19 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_INFO))
    {
      if (*(char *)(a2 + 23) >= 0)
        v20 = a2;
      else
        v20 = *(_QWORD *)a2;
      if (*(char *)(a2 + 47) >= 0)
        v21 = a2 + 24;
      else
        v21 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)buf = 136380931;
      v54 = v20;
      v55 = 2081;
      v56 = v21;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Fence: requestRegionState, fence, %{private}s/%{private}s, error.", buf, 0x16u);
    }
    if (!sub_1001BFF7C(115, 2))
      return sub_100914658(a1, a2);
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    if (*(char *)(a2 + 23) >= 0)
      v33 = a2;
    else
      v33 = *(_QWORD *)a2;
    if (*(char *)(a2 + 47) >= 0)
      v34 = a2 + 24;
    else
      v34 = *(_QWORD *)(a2 + 24);
    v45 = 136380931;
    v46 = v33;
    v47 = 2081;
    v48 = v34;
    LODWORD(v42) = 22;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 1, "Fence: requestRegionState, fence, %{private}s/%{private}s, error.", &v45, v42);
LABEL_107:
    v35 = (uint8_t *)v18;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v18);
    if (v35 != buf)
      free(v35);
    return sub_100914658(a1, a2);
  }
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v23 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_INFO))
  {
    if (*(char *)(a2 + 23) >= 0)
      v24 = a2;
    else
      v24 = *(_QWORD *)a2;
    if (*(char *)(a2 + 47) >= 0)
      v25 = a2 + 24;
    else
      v25 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)buf = 136380931;
    v54 = v24;
    v55 = 2081;
    v56 = v25;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Fence: requestRegionState, fence, %{private}s/%{private}s, not authorized", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    if (*(char *)(a2 + 23) >= 0)
      v38 = a2;
    else
      v38 = *(_QWORD *)a2;
    if (*(char *)(a2 + 47) >= 0)
      v39 = a2 + 24;
    else
      v39 = *(_QWORD *)(a2 + 24);
    v45 = 136380931;
    v46 = v38;
    v47 = 2081;
    v48 = v39;
    LODWORD(v42) = 22;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 1, "Fence: requestRegionState, fence, %{private}s/%{private}s, not authorized", &v45, v42);
    v41 = (uint8_t *)v40;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v40);
    if (v41 != buf)
      free(v41);
  }
  return sub_1009154D0(a1, a2);
}

void sub_100911040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100911178(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 73) < 0)
    operator delete(*(void **)(v1 - 96));
  if (*(char *)(v1 - 49) < 0)
    operator delete(*(void **)(v1 - 72));
  _Unwind_Resume(exception_object);
}

void sub_1009111AC(uint64_t a1, uint64_t a2, const void **a3, int a4, _OWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  std::string *v13;
  int v14;
  unint64_t v15;
  const void *v16;
  size_t v17;
  uint64_t v19;
  std::string *v20;
  const char *v21;
  NSObject *v22;
  uint32_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  id v30;
  uint64_t v31;
  std::string *v32;
  std::string *v33;
  std::string v34;
  std::string v35;
  std::string v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[21];
  std::string v44;
  id v45;
  void *__p[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t buf;
  __int16 v52;
  const char *v53;
  __int16 v54;
  std::string *v55;
  __int16 v56;
  std::string *v57;

  v50 = a4;
  v47 = 0;
  v48 = 0;
  v49 = 0;
  v8 = a1 + 112;
  sub_100D3F0F0(a1 + 112, a2, &v47);
  sub_1001157C0((char *)&v34);
  v9 = v47;
  v10 = v48;
  if (v47 == v48)
  {
LABEL_22:
    if (qword_1022A0240 != -1)
      dispatch_once(&qword_1022A0240, &stru_10215E958);
    v19 = qword_1022A0248;
    if (os_log_type_enabled((os_log_t)qword_1022A0248, OS_LOG_TYPE_DEFAULT))
    {
      if (*((char *)a3 + 23) >= 0)
        v20 = (std::string *)a3;
      else
        v20 = (std::string *)*a3;
      buf = 68289282;
      v52 = 2082;
      v53 = "";
      v54 = 2082;
      v55 = v20;
      v21 = "{\"msg%{public}.0s\":\"Found the bundleID but it contained no fences with fenceID\", \"fenceID\":%{public, l"
            "ocation:escape_only}s}";
      v22 = v19;
      v23 = 28;
LABEL_29:
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v21, (uint8_t *)&buf, v23);
    }
  }
  else
  {
    v11 = *((char *)a3 + 23);
    if (v11 >= 0)
      v12 = *((unsigned __int8 *)a3 + 23);
    else
      v12 = (unint64_t)a3[1];
    if (v11 >= 0)
      v13 = (std::string *)a3;
    else
      v13 = (std::string *)*a3;
    while (1)
    {
      v14 = *(char *)(v9 + 47);
      v15 = v14 >= 0 ? *(unsigned __int8 *)(v9 + 47) : *(_QWORD *)(v9 + 32);
      v16 = v14 >= 0 ? (const void *)(v9 + 24) : *(const void **)(v9 + 24);
      v17 = v15 >= v12 ? v12 : v15;
      if (!memcmp(v13, v16, v17) && v15 == v12)
        break;
      v9 += 248;
      if (v9 == v10)
        goto LABEL_22;
    }
    std::string::operator=(&v34, (const std::string *)v9);
    std::string::operator=(&v35, (const std::string *)(v9 + 24));
    std::string::operator=(&v36, (const std::string *)(v9 + 48));
    v24 = *(_OWORD *)(v9 + 72);
    v25 = *(_OWORD *)(v9 + 88);
    v26 = *(_OWORD *)(v9 + 120);
    v39 = *(_OWORD *)(v9 + 104);
    v40 = v26;
    v37 = v24;
    v38 = v25;
    v27 = *(_OWORD *)(v9 + 136);
    v28 = *(_OWORD *)(v9 + 152);
    v29 = *(_OWORD *)(v9 + 168);
    *(_QWORD *)&v43[13] = *(_QWORD *)(v9 + 181);
    *(_OWORD *)v43 = v29;
    v42 = v28;
    v41 = v27;
    std::string::operator=(&v44, (const std::string *)(v9 + 192));
    v30 = v45;
    v45 = *(id *)(v9 + 216);

    if ((std::string *)v9 != &v34)
      sub_1002F3538((char *)__p, *(char **)(v9 + 224), *(_QWORD *)(v9 + 232), (uint64_t)(*(_QWORD *)(v9 + 232) - *(_QWORD *)(v9 + 224)) >> 4);
    if (sub_100D3A758(v8, (uint64_t)&v34))
    {
      sub_100914E60(a1, (__int128 *)&v34, &v50, a5);
      goto LABEL_43;
    }
    if (qword_1022A0240 != -1)
      dispatch_once(&qword_1022A0240, &stru_10215E958);
    v31 = qword_1022A0248;
    if (os_log_type_enabled((os_log_t)qword_1022A0248, OS_LOG_TYPE_DEFAULT))
    {
      v32 = &v34;
      if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v32 = (std::string *)v34.__r_.__value_.__r.__words[0];
      if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v33 = &v35;
      else
        v33 = (std::string *)v35.__r_.__value_.__r.__words[0];
      buf = 68289538;
      v52 = 2082;
      v53 = "";
      v54 = 2082;
      v55 = v32;
      v56 = 2082;
      v57 = v33;
      v21 = "{\"msg%{public}.0s\":\"You're not authorized for fence.\", \"bundleID\":%{public, location:escape_only}s, \""
            "fenceId\":%{public, location:escape_only}s}";
      v22 = v31;
      v23 = 38;
      goto LABEL_29;
    }
  }
LABEL_43:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }

  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v44.__r_.__value_.__l.__data_);
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v36.__r_.__value_.__l.__data_);
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v35.__r_.__value_.__l.__data_);
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v34.__r_.__value_.__l.__data_);
  v34.__r_.__value_.__r.__words[0] = (std::string::size_type)&v47;
  sub_10091BBB0((void ***)&v34);
}

void sub_100911558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v10;

  sub_1004E2BD0((uint64_t)&a10);
  a10 = (void **)(v10 - 176);
  sub_10091BBB0(&a10);
  _Unwind_Resume(a1);
}

void sub_100911634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100911650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  __int128 *v5[3];
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 **v9;

  v6 = 0;
  v7 = 0;
  v8 = 0;
  sub_100D3F0F0(a1 + 112, a2, (uint64_t *)&v6);
  memset(v5, 0, sizeof(v5));
  sub_10091C98C((char *)v5, v6, v7, 0xEF7BDEF7BDEF7BDFLL * (((char *)v7 - (char *)v6) >> 3));
  v4 = sub_100915414(v5);
  (*(void (**)(uint64_t, id))(a3 + 16))(a3, v4);
  v9 = v5;
  sub_10091BBB0((void ***)&v9);
  v9 = &v6;
  sub_10091BBB0((void ***)&v9);
}

void sub_1009116F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v14 - 24) = v13;
  sub_10091BBB0((void ***)(v14 - 24));
  *(_QWORD *)(v14 - 24) = &a13;
  sub_10091BBB0((void ***)(v14 - 24));
  _Unwind_Resume(a1);
}

void sub_100911724(id a1)
{
  sub_100197040();
  if ((sub_1001B796C() & 0x100) != 0)
    byte_1023057D0 = 1;
}

void sub_10091174C()
{
  operator new();
}

void sub_100911794()
{
  operator delete();
}

void sub_1009117B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char *v5;
  void *v6;
  char *v7;
  int v8;
  void *v9[2];
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *__p[2];
  unsigned __int8 v18;
  void *v19;
  char v20;
  void *v21;
  char v22;

  sub_100119F3C(a2);
  sub_100528888(a2, "kCLConnectionMessageNameKey", (char *)(a1 + 24));
  sub_100204320((std::string *)(a1 + 48), (uint64_t)v9);
  sub_1001A8D50((uint64_t)v9);
  v4 = v18;
  if ((v18 & 0x80u) != 0)
    v4 = (unint64_t)__p[1];
  if (v4)
  {
    sub_1001A8D50((uint64_t)v9);
    v5 = (char *)__p;
  }
  else
  {
    v5 = (char *)&v13;
  }
  sub_100528888(a2, "kCLConnectionMessageOnBehalfOfKey", v5);
  v8 = 1;
  sub_10011B4E4(a2, "kCLConnectionMessageRegionTypeKey", &v8);
  sub_10018A4CC(a2, "kCLConnectionMessageLatitudeKey", (const void *)(a1 + 72));
  sub_10018A4CC(a2, "kCLConnectionMessageLongitudeKey", (const void *)(a1 + 80));
  sub_10018A4CC(a2, "kCLConnectionMessageRadiusKey", (const void *)(a1 + 88));
  v8 = *(_DWORD *)(a1 + 180);
  sub_10011B4E4(a2, "kCLConnectionMessageReferenceFrameKey", &v8);
  LOBYTE(v8) = *(_BYTE *)(a1 + 160) & 1;
  sub_10011B47C(a2, "kCLConnectionMessageNotifyOnEntryKey", &v8);
  LOBYTE(v8) = (*(_BYTE *)(a1 + 160) & 2) != 0;
  sub_10011B47C(a2, "kCLConnectionMessageNotifyOnExitKey", &v8);
  LOBYTE(v8) = (*(_BYTE *)(a1 + 160) & 4) != 0;
  sub_10011B47C(a2, "kCLConnectionMessageConservativeEntry", &v8);
  LOBYTE(v8) = (*(_BYTE *)(a1 + 160) & 0x10) != 0;
  sub_10011B47C(a2, "kCLConnectionMessageEmergencyKey", &v8);
  v6 = *(void **)(a1 + 216);
  if (v6)
    v7 = (char *)objc_msgSend(objc_msgSend(v6, "UUIDString"), "UTF8String");
  else
    v7 = "";
  sub_1005285B4(a2, "kCLConnectionMessageDeviceIDKey", v7);
  sub_100528888(a2, "kCLConnectionMessageHandoffTagKey", (char *)(a1 + 192));
  if (v22 < 0)
    operator delete(v21);
  if (v20 < 0)
    operator delete(v19);
  if ((char)v18 < 0)
    operator delete(__p[0]);
  if (v16 < 0)
    operator delete(v15);
  if (v14 < 0)
    operator delete(v13);
  if (v12 < 0)
    operator delete(v11);
  if (v10 < 0)
    operator delete(v9[0]);
}

void sub_100911A08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_100010174((uint64_t)va);
  sub_10011A5A8(v2);
  _Unwind_Resume(a1);
}

void sub_100911A4C(uint64_t a1, void *a2)
{
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)sub_100911CEC(a1, "FenceManager", a2);
  *v3 = off_10215E738;
  sub_100D39670(v3 + 14, v3[4]);
  sub_100D16244(a1 + 344, *(_QWORD *)(a1 + 32));
  sub_100D2D5E8(a1 + 3312, *(_QWORD *)(a1 + 32));
  sub_1002433B8(a1 + 3768);
  *(_BYTE *)(a1 + 3808) = 0;
  sub_100197040();
  *(_BYTE *)(a1 + 3809) = sub_100760428();
  *(_BYTE *)(a1 + 3810) = 0;
  *(_QWORD *)(a1 + 3816) = 0;
  *(_QWORD *)(a1 + 3856) = 0;
  *(_QWORD *)(a1 + 3848) = 0;
  *(_QWORD *)(a1 + 3840) = a1 + 3848;
  *(_QWORD *)(a1 + 3880) = 0;
  *(_QWORD *)(a1 + 3872) = 0;
  *(_QWORD *)(a1 + 3864) = a1 + 3872;
  *(_QWORD *)(a1 + 3904) = 0;
  *(_QWORD *)(a1 + 3896) = 0;
  *(_QWORD *)(a1 + 3888) = a1 + 3896;
  *(_QWORD *)(a1 + 3928) = 0;
  *(_QWORD *)(a1 + 3920) = 0;
  *(_QWORD *)(a1 + 3912) = a1 + 3920;
  *(_QWORD *)(a1 + 3968) = 0;
  *(_OWORD *)(a1 + 3952) = 0u;
  *(_OWORD *)(a1 + 3936) = 0u;
  *(_QWORD *)(a1 + 3984) = off_102141E98;
  v4 = operator new(0x20uLL);
  v4[2] = 0;
  *v4 = off_102141ED0;
  v4[1] = 0;
  *((_DWORD *)v4 + 6) = 31337;
  *(_QWORD *)(a1 + 3992) = v4 + 3;
  *(_QWORD *)(a1 + 4000) = v4;
  *(_QWORD *)(a1 + 3984) = off_102152D70;
  *(_QWORD *)(a1 + 4008) = 0;
  sub_100911D88(a1);
}

void sub_100911BB0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD **v5;
  uint64_t v6;
  _QWORD **v7;
  _QWORD **v8;
  char **v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD **v17;

  v17 = v5;
  sub_1007A1B98(v6);
  v11 = v1[496];
  v1[496] = 0;
  if (v11)
    (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  v12 = v1[495];
  v1[495] = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = v1[494];
  v1[494] = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = v1[493];
  v1[493] = 0;
  v15 = v1 + 492;
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  v16 = *v15;
  *v15 = 0;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  sub_100090AE4((uint64_t)(v1 + 489), *v9);
  sub_10091BD80((uint64_t)(v1 + 486), *v8);
  sub_10091BCB4((uint64_t)(v1 + 483), *v7);
  sub_10091BCB4((uint64_t)(v1 + 480), *v17);
  sub_100D2D884(v4);
  sub_100D165EC(v3);
  sub_100D39758(v2);
  sub_100912444((uint64_t)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100911CEC(uint64_t a1, char *a2, void *a3)
{
  *(_QWORD *)a1 = off_10215E988;
  sub_1015A2E04((_QWORD *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 32) = a3;
  *(_QWORD *)(a1 + 40) = objc_msgSend(a3, "silo");
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 56) = a1 + 64;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100911D6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_100911D88(uint64_t a1)
{
  int v2;
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  NSObject *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CFAbsoluteTime Current;
  void *v15;
  id v16;
  const char *v17;
  char *v18;
  const char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  __int128 buf;

  v22 = 0x404E000000000000;
  sub_1001E4804(&buf);
  v2 = sub_1001FD98C(buf, "FenceStartDelay", &v22);
  v3 = (std::__shared_weak_count *)*((_QWORD *)&buf + 1);
  if (*((_QWORD *)&buf + 1))
  {
    v4 = (unint64_t *)(*((_QWORD *)&buf + 1) + 8);
    do
      v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v6 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 134283521;
      *(_QWORD *)((char *)&buf + 4) = v22;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Overriding fence start delay to %{private}.2f", (uint8_t *)&buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v23 = 134283521;
      v24 = v22;
      _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A0068, 1, "Overriding fence start delay to %{private}.2f", &v23, 12);
      v20 = (char *)v19;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::init()", "%s\n", v19);
      if (v20 != (char *)&buf)
        free(v20);
    }
  }
  sub_1001E4804(&buf);
  sub_1001E4874(buf, "FenceShowTriggerDialog", (BOOL *)&byte_1023057E8);
  v7 = (std::__shared_weak_count *)*((_QWORD *)&buf + 1);
  if (*((_QWORD *)&buf + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&buf + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v10 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf) = 67174657;
    DWORD1(buf) = byte_1023057E8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "setting FenceStartShowDialog to %{private}d", (uint8_t *)&buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v23 = 67174657;
    LODWORD(v24) = byte_1023057E8;
    LODWORD(v21) = 8;
    _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "setting FenceStartShowDialog to %{private}d", &v23, v21);
    v18 = (char *)v17;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::init()", "%s\n", v17);
    if (v18 != (char *)&buf)
      free(v18);
  }
  v11 = sub_1001FD94C();
  if ((sub_1001FD98C(v11, off_1022FB108, (void *)(a1 + 3832)) & 1) == 0)
  {
    *(CFAbsoluteTime *)(a1 + 3832) = CFAbsoluteTimeGetCurrent();
    v12 = sub_1001FD94C();
    sub_10018A4CC(v12, off_1022FB108, (const void *)(a1 + 3832));
    v13 = sub_1001FD94C();
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 944))(v13);
  }
  Current = CFAbsoluteTimeGetCurrent();
  v15 = *(void **)(a1 + 32);
  *(CFAbsoluteTime *)(a1 + 3824) = Current;
  v16 = objc_msgSend(objc_msgSend(v15, "vendor"), "proxyForService:", CFSTR("CLClientManager"));
  *(_QWORD *)(a1 + 3976) = v16;
  objc_msgSend(v16, "registerDelegate:inSilo:", sub_1001E5288(a1 + 3984), objc_msgSend(*(id *)(a1 + 32), "silo"));
  sub_1001B6A0C();
}

void sub_1009123EC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  operator delete();
}

uint64_t sub_100912444(uint64_t a1)
{
  *(_QWORD *)a1 = off_10215E988;
  objc_msgSend(*(id *)(a1 + 48), "invalidate");

  sub_10007CDDC(a1 + 80, *(_QWORD **)(a1 + 88));
  sub_1007F8C14(a1 + 56, *(_QWORD **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_1009124B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = off_10215E738;
  sub_100913A58(a1);
  sub_1007A1B98(a1 + 3984);
  v2 = *(_QWORD *)(a1 + 3968);
  *(_QWORD *)(a1 + 3968) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *(_QWORD *)(a1 + 3960);
  *(_QWORD *)(a1 + 3960) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *(_QWORD *)(a1 + 3952);
  *(_QWORD *)(a1 + 3952) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  v5 = *(_QWORD *)(a1 + 3944);
  *(_QWORD *)(a1 + 3944) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  v6 = *(_QWORD *)(a1 + 3936);
  *(_QWORD *)(a1 + 3936) = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  sub_100090AE4(a1 + 3912, *(char **)(a1 + 3920));
  sub_10091BD80(a1 + 3888, *(_QWORD **)(a1 + 3896));
  sub_10091BCB4(a1 + 3864, *(_QWORD **)(a1 + 3872));
  sub_10091BCB4(a1 + 3840, *(_QWORD **)(a1 + 3848));
  sub_100D2D884(a1 + 3312);
  sub_100D165EC(a1 + 344);
  sub_100D39758(a1 + 112);
  return sub_100912444(a1);
}

void sub_1009125B8(uint64_t a1)
{
  sub_1009124B8(a1);
  operator delete();
}

void sub_1009125DC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLFenceManager::onClientNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 32), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E918);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onClientNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onClientNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_100919054(a4, v7, a2, a3);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_100912794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_1009127B4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_activity_scope_state_s state;
  char v12;
  uint8_t buf[4];
  int v14;
  __int16 v15;
  const char *v16;
  __int16 v17;
  const char *v18;
  __int16 v19;
  uint64_t v20;

  CLProfilingIdentify("CLFenceManager::onMonitorNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 32), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E918);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v12 = 1;
    v9 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onMonitorNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v9, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v10 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v14 = 0;
      v15 = 2082;
      v16 = "";
      v17 = 2082;
      v18 = "activity";
      v19 = 2050;
      v20 = a4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onMonitorNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v12 = 0;
  }
  sub_1009185B4(a4, v7, a2, a3, v8);
  if (v12)
    os_activity_scope_leave(&state);
}

void sub_10091296C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_10091298C(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  NSObject *v4;
  os_activity_scope_state_s state;
  char v6;
  uint8_t buf[4];
  int v8;
  __int16 v9;
  const char *v10;
  __int16 v11;
  const char *v12;
  __int16 v13;
  uint64_t v14;

  CLProfilingIdentify("CLFenceManager::onStartTimer");
  objc_msgSend(objc_msgSend(*(id *)(a2 + 32), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E918);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v6 = 1;
    v3 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onStartTimer", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v4 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v8 = 0;
      v9 = 2082;
      v10 = "";
      v11 = 2082;
      v12 = "activity";
      v13 = 2050;
      v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onStartTimer\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v6 = 0;
  }
  sub_100912D20(a2);
  if (v6)
    os_activity_scope_leave(&state);
}

void sub_100912B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100912B50(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  os_activity_scope_state_s state;
  char v10;
  uint8_t buf[4];
  int v12;
  __int16 v13;
  const char *v14;
  __int16 v15;
  const char *v16;
  __int16 v17;
  uint64_t v18;

  CLProfilingIdentify("CLFenceManager::onDaemonStatusNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 32), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E918);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v10 = 1;
    v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onDaemonStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v8 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v12 = 0;
      v13 = 2082;
      v14 = "";
      v15 = 2082;
      v16 = "activity";
      v17 = 2050;
      v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onDaemonStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v10 = 0;
  }
  sub_100913148(a4, v6, a2);
  if (v10)
    os_activity_scope_leave(&state);
}

void sub_100912D00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_100912D20(uint64_t a1)
{
  NSObject *v1;
  const char *v2;
  uint8_t *v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (!*(_BYTE *)(a1 + 3808))
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v5 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Fence: Starting fence monitoring", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Fence: Starting fence monitoring", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::start(BOOL)", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    *(_BYTE *)(a1 + 3808) = 1;
    sub_100D31D40();
  }
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v1 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Fence: Already started fence monitoring", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v8[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Fence: Already started fence monitoring", v8, 2);
    v3 = (uint8_t *)v2;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::start(BOOL)", "%s\n", v2);
    if (v3 != buf)
      free(v3);
  }
}

void sub_100913148(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  BOOL v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (*(_BYTE *)(a1 + 3808))
    v3 = 0;
  else
    v3 = *a3 == 17;
  if (v3)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v5 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Fence: Start after unclean shutdown", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Fence: Start after unclean shutdown", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onDaemonStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    sub_10016E3C4(*(_QWORD *)(a1 + 3816));
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 3968) + 16), "unregister:forNotification:", *(_QWORD *)(*(_QWORD *)(a1 + 3968) + 8), 17);
    sub_100912D20(a1);
  }
}

void sub_100913310(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLFenceManager::onDataDownloadNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 32), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E918);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onDataDownloadNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onDataDownloadNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_100918A6C((uint64_t *)a4, v7, a2, a3);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_1009134C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_1009134E8(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_scope_state_s state;
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  uint64_t v19;

  CLProfilingIdentify("CLFenceManager::onAuthorizationNotification");
  objc_msgSend(objc_msgSend(*(id *)(a4 + 32), "silo"), "assertInside");
  if (qword_1022A0220 != -1)
    dispatch_once(&qword_1022A0220, &stru_10215E918);
  if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
  {
    v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onAuthorizationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      v13 = 0;
      v14 = 2082;
      v15 = "";
      v16 = 2082;
      v17 = "activity";
      v18 = 2050;
      v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onAuthorizationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_1009193A0(a4, v7, a2, a3);
  if (v11)
    os_activity_scope_leave(&state);
}

void sub_1009136A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11)
    os_activity_scope_leave(&state);
  _Unwind_Resume(exception_object);
}

void sub_1009136C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  NSObject *v6;
  NSObject *v7;
  const char *v8;
  char *v9;
  const char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  _BYTE buf[1632];

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v6 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: startMonitoringAllFences_nl", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    LOWORD(v13) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: startMonitoringAllFences_nl", &v13, 2);
    v9 = (char *)v8;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::startMonitoringAllFences_nl(BOOL, BOOL, BOOL)", "%s\n", v8);
    if (v9 != buf)
      free(v9);
  }
  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_100D3E844((uint64_t *)(a1 + 112), &v13);
  sub_100D39C70(a1 + 112);
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v7 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 134349056;
    *(_QWORD *)&buf[4] = 0xEF7BDEF7BDEF7BDFLL * ((v14 - v13) >> 3);
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Starting to monitor all %{public}ld authorized fences", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v16 = 134349056;
    v17 = 0xEF7BDEF7BDEF7BDFLL * ((v14 - v13) >> 3);
    LODWORD(v12) = 12;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 1, "Starting to monitor all %{public}ld authorized fences", &v16, v12);
    v11 = (char *)v10;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::startMonitoringAllFences_nl(BOOL, BOOL, BOOL)", "%s\n", v10);
    if (v11 != buf)
      free(v11);
  }
  sub_100913E98(a1, &v13);
  if (a4)
    sub_100D17620(a1 + 344, &v13);
  *(_QWORD *)buf = &v13;
  sub_10091BBB0((void ***)buf);
}

void sub_100913A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **a17)
{
  a17 = (void **)&a11;
  sub_10091BBB0(&a17);
  _Unwind_Resume(a1);
}

id sub_100913A58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  const char *v13;
  uint8_t *v14;
  _WORD v15[8];
  uint8_t buf[1640];

  *(CFAbsoluteTime *)(a1 + 3832) = CFAbsoluteTimeGetCurrent();
  v2 = sub_1001FD94C();
  sub_10018A4CC(v2, off_1022FB108, (const void *)(a1 + 3832));
  v3 = sub_1001FD94C();
  (*(void (**)(uint64_t))(*(_QWORD *)v3 + 944))(v3);
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v4 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Fence: CLFenceManager, shutdown", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v15[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 1, "Fence: CLFenceManager, shutdown", v15, 2);
    v14 = (uint8_t *)v13;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLFenceManager::shutdown()", "%s\n", v13);
    if (v14 != buf)
      free(v14);
  }
  v5 = *(_QWORD *)(a1 + 3968);
  *(_QWORD *)(a1 + 3968) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  v6 = *(_QWORD *)(a1 + 3936);
  *(_QWORD *)(a1 + 3936) = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  v7 = *(_QWORD *)(a1 + 3944);
  *(_QWORD *)(a1 + 3944) = 0;
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  v8 = *(_QWORD *)(a1 + 3952);
  *(_QWORD *)(a1 + 3952) = 0;
  if (v8)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  v9 = *(_QWORD *)(a1 + 3960);
  *(_QWORD *)(a1 + 3960) = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);

  *(_QWORD *)(a1 + 3976) = 0;
  sub_100D1D15C(a1 + 344);
  v10 = objc_alloc_init((Class)NSAutoreleasePool);
  v11 = *(_QWORD *)(a1 + 3816);
  if (v11)
  {
    sub_1009865B8(v11);
    operator delete();
  }
  return objc_msgSend(v10, "drain");
}

void sub_100913CE4(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v2 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Fence: resetFenceMonitoring_nl", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Fence: resetFenceMonitoring_nl", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::resetFenceMonitoring_nl()", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  sub_100D1758C(a1 + 344);
  sub_100D30564((_QWORD *)(a1 + 3312));
  sub_1009136C0(a1, 0, 1, 0);
}

void sub_100913E98(uint64_t a1, uint64_t *a2)
{
  NSObject *v4;
  const char *v5;
  uint8_t *v6;
  _WORD v7[8];
  uint8_t buf[1640];

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v4 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: startMonitoringFences_nl", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v7[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: startMonitoringFences_nl", v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::startMonitoringFences_nl(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  sub_100D16FCC((uint64_t *)(a1 + 344), a2);
  sub_100D2D934((_QWORD *)(a1 + 3312), (__int128 **)a2);
}

void sub_100914044(uint64_t a1, unsigned __int8 **a2, int a3)
{
  NSObject *v6;
  const char *v7;
  uint8_t *v8;
  _WORD v9[8];
  uint8_t buf[1640];

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v6 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: stopMonitoringFences_nl", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v9[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: stopMonitoringFences_nl", v9, 2);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::stopMonitoringFences_nl(const std::vector<CLFenceManager_Type::Fence> &, BOOL)", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
  sub_100D174A8(a1 + 344, a2, a3);
  sub_100D2FD00((uint64_t *)(a1 + 3312), (uint64_t *)a2);
}

double sub_100914200(uint64_t a1, char a2)
{
  sub_10091BCB4(a1 + 3840, *(_QWORD **)(a1 + 3848));
  *(_QWORD *)(a1 + 3840) = a1 + 3848;
  *(_QWORD *)(a1 + 3856) = 0;
  *(_QWORD *)(a1 + 3848) = 0;
  sub_10091BCB4(a1 + 3864, *(_QWORD **)(a1 + 3872));
  *(_QWORD *)(a1 + 3864) = a1 + 3872;
  *(_QWORD *)(a1 + 3880) = 0;
  *(_QWORD *)(a1 + 3872) = 0;
  sub_10091BD80(a1 + 3888, *(_QWORD **)(a1 + 3896));
  *(_QWORD *)(a1 + 3888) = a1 + 3896;
  *(_QWORD *)(a1 + 3904) = 0;
  *(_QWORD *)(a1 + 3896) = 0;
  sub_100D16FC4(a1 + 344, a2);
  return sub_10064AD18(a1 + 3768);
}

void sub_10091428C(uint64_t *a1)
{
  double Current;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double v6;
  _QWORD *v7;
  NSObject *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t *v11;
  BOOL v12;
  const char *v13;
  uint8_t *v14;
  NSObject *v15;
  const char *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD *v21;
  __int16 v22;
  uint64_t v23;
  uint8_t buf[4];
  _QWORD *v25;
  __int16 v26;
  uint64_t v27;

  Current = CFAbsoluteTimeGetCurrent();
  v3 = a1[489];
  v4 = (_QWORD *)a1[491];
  v5 = (uint64_t)v4;
  if ((uint64_t *)v3 != a1 + 490)
  {
    v6 = Current;
    v19 = a1[491];
    do
    {
      if (sub_1004CF2E0(v3 + 56, v6))
      {
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        v7 = (_QWORD *)(v3 + 32);
        v8 = qword_1022A0068;
        if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
        {
          v9 = (_QWORD *)(v3 + 32);
          if (*(char *)(v3 + 55) < 0)
            v9 = (_QWORD *)*v7;
          *(_DWORD *)buf = 136380675;
          v25 = v9;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: erasing dormant bucket %{private}s", buf, 0xCu);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0060 != -1)
            dispatch_once(&qword_1022A0060, &stru_10215E938);
          if (*(char *)(v3 + 55) < 0)
            v7 = (_QWORD *)*v7;
          v20 = 136380675;
          v21 = v7;
          LODWORD(v18) = 12;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: erasing dormant bucket %{private}s", &v20, v18);
          v14 = (uint8_t *)v13;
          sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::maintenanceActiveRateLimiters()", "%s\n", v13);
          if (v14 != buf)
            free(v14);
        }
        v10 = sub_100675198((uint64_t **)a1 + 489, v3);
      }
      else
      {
        v11 = *(uint64_t **)(v3 + 8);
        if (v11)
        {
          do
          {
            v10 = v11;
            v11 = (uint64_t *)*v11;
          }
          while (v11);
        }
        else
        {
          do
          {
            v10 = *(uint64_t **)(v3 + 16);
            v12 = *v10 == v3;
            v3 = (uint64_t)v10;
          }
          while (!v12);
        }
      }
      v3 = (uint64_t)v10;
    }
    while (v10 != a1 + 490);
    v5 = a1[491];
    v4 = (_QWORD *)v19;
  }
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v15 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134349312;
    v25 = v4;
    v26 = 2050;
    v27 = v5;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Fence: Number of buckets,%{public}lu,%{public}lu", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v20 = 134349312;
    v21 = v4;
    v22 = 2050;
    v23 = v5;
    LODWORD(v18) = 22;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: Number of buckets,%{public}lu,%{public}lu", &v20, v18);
    v17 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::maintenanceActiveRateLimiters()", "%s\n", v16);
    if (v17 != buf)
      free(v17);
  }
}

uint64_t sub_100914658(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  int v8;
  std::string v9;
  std::string v10;
  std::string v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[21];
  std::string v19;
  id v20;
  char v21[1384];

  sub_10091B98C((uint64_t)&v9);
  std::string::operator=(&v9, (const std::string *)a2);
  std::string::operator=(&v10, (const std::string *)(a2 + 24));
  std::string::operator=(&v11, (const std::string *)(a2 + 48));
  v16 = *(_OWORD *)(a2 + 136);
  v17 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)v18 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)&v18[13] = *(_QWORD *)(a2 + 181);
  v4 = *(_OWORD *)(a2 + 88);
  v12 = *(_OWORD *)(a2 + 72);
  v13 = v4;
  v5 = *(_OWORD *)(a2 + 120);
  v14 = *(_OWORD *)(a2 + 104);
  v15 = v5;
  std::string::operator=(&v19, (const std::string *)(a2 + 192));
  v6 = v20;
  v20 = *(id *)(a2 + 216);

  if (&v9 != (std::string *)a2)
    sub_1002F3538(v21, *(char **)(a2 + 224), *(_QWORD *)(a2 + 232), (uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 4);
  v8 = 4;
  (*(void (**)(uint64_t, int *, std::string *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, &v8, &v9, 0, 0xFFFFFFFFLL, 0);
  return sub_100115F78((uint64_t)&v9);
}

void sub_100914774(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10091478C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  void **v5;
  __int128 v6;
  void **v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void **v15;
  __int128 v16;
  void *v17;

  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  v4 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((_BYTE *)a2 + 23) = 0;
  *(_BYTE *)a2 = 0;
  v5 = (void **)(a1 + 24);
  if (*(char *)(a1 + 47) < 0)
    operator delete(*v5);
  v6 = *(__int128 *)((char *)a2 + 24);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_OWORD *)v5 = v6;
  *((_BYTE *)a2 + 47) = 0;
  *((_BYTE *)a2 + 24) = 0;
  v7 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0)
    operator delete(*v7);
  v8 = a2[3];
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_OWORD *)v7 = v8;
  *((_BYTE *)a2 + 71) = 0;
  *((_BYTE *)a2 + 48) = 0;
  v9 = *(_QWORD *)((char *)a2 + 181);
  v10 = *(__int128 *)((char *)a2 + 168);
  v11 = *(__int128 *)((char *)a2 + 152);
  *(_OWORD *)(a1 + 136) = *(__int128 *)((char *)a2 + 136);
  *(_OWORD *)(a1 + 152) = v11;
  *(_OWORD *)(a1 + 168) = v10;
  *(_QWORD *)(a1 + 181) = v9;
  v12 = *(__int128 *)((char *)a2 + 120);
  v13 = *(__int128 *)((char *)a2 + 104);
  v14 = *(__int128 *)((char *)a2 + 88);
  *(_OWORD *)(a1 + 72) = *(__int128 *)((char *)a2 + 72);
  *(_OWORD *)(a1 + 88) = v14;
  *(_OWORD *)(a1 + 104) = v13;
  *(_OWORD *)(a1 + 120) = v12;
  v15 = (void **)(a1 + 192);
  if (*(char *)(a1 + 215) < 0)
    operator delete(*v15);
  v16 = a2[12];
  *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
  *(_OWORD *)v15 = v16;
  *((_BYTE *)a2 + 215) = 0;
  *((_BYTE *)a2 + 192) = 0;
  v17 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *((_QWORD *)a2 + 27);
  *((_QWORD *)a2 + 27) = 0;

  sub_100006898(a1 + 224, (__n128 *)a2 + 14);
  return a1;
}

uint64_t sub_1009148CC(uint64_t a1, uint64_t a2, int *a3, int *a4, uint64_t a5)
{
  double Current;
  __int128 v11;
  __int128 v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  std::string *v16;
  std::string *v17;
  std::string *v18;
  const char *v19;
  _BOOL4 v21;
  std::string *v22;
  std::string *v23;
  std::string *v24;
  const char *v25;
  char *v26;
  std::string v27;
  std::string v28;
  std::string v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[21];
  std::string v37;
  id v38;
  char v39[428];
  int v40;
  _DWORD v41[2];
  __int16 v42;
  std::string *v43;
  __int16 v44;
  std::string *v45;
  __int16 v46;
  std::string *v47;
  __int16 v48;
  int v49;
  __int16 v50;
  const char *v51;
  uint8_t buf[4];
  _BOOL4 v53;
  __int16 v54;
  std::string *v55;
  __int16 v56;
  std::string *v57;
  __int16 v58;
  std::string *v59;
  __int16 v60;
  int v61;
  __int16 v62;
  const char *v63;

  if ((a5 & 0x80000000) != 0)
  {
    Current = CFAbsoluteTimeGetCurrent();
    sub_1009169C8(a1, a2, a3, a4, Current);
  }
  sub_10091B98C((uint64_t)&v27);
  std::string::operator=(&v27, (const std::string *)a2);
  std::string::operator=(&v28, (const std::string *)(a2 + 24));
  std::string::operator=(&v29, (const std::string *)(a2 + 48));
  v34 = *(_OWORD *)(a2 + 136);
  v35 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)v36 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)&v36[13] = *(_QWORD *)(a2 + 181);
  v11 = *(_OWORD *)(a2 + 88);
  v30 = *(_OWORD *)(a2 + 72);
  v31 = v11;
  v12 = *(_OWORD *)(a2 + 120);
  v32 = *(_OWORD *)(a2 + 104);
  v33 = v12;
  std::string::operator=(&v37, (const std::string *)(a2 + 192));
  v13 = v38;
  v38 = *(id *)(a2 + 216);

  if (&v27 != (std::string *)a2)
    sub_1002F3538(v39, *(char **)(a2 + 224), *(_QWORD *)(a2 + 232), (uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 4);
  v40 = *a3;
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v14 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    v15 = *a4 == 6;
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = &v29;
    else
      v16 = (std::string *)v29.__r_.__value_.__r.__words[0];
    v17 = &v27;
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v17 = (std::string *)v27.__r_.__value_.__r.__words[0];
    v18 = (std::string *)v28.__r_.__value_.__r.__words[0];
    v19 = "";
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v18 = &v28;
    if ((int)a5 < 0)
      v19 = " (all)";
    *(_DWORD *)buf = 67175939;
    v53 = v15;
    v54 = 2082;
    v55 = v16;
    v56 = 2081;
    v57 = v17;
    v58 = 2081;
    v59 = v18;
    v60 = 1026;
    v61 = a5;
    v62 = 2081;
    v63 = v19;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Fence: Sending state notification (requested: %{private}d) for [%{public}s]/%{private}s/%{private}s to client %{public}d%{private}s", buf, 0x36u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v21 = *a4 == 6;
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v22 = &v29;
    else
      v22 = (std::string *)v29.__r_.__value_.__r.__words[0];
    v23 = &v27;
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v23 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = &v28;
    else
      v24 = (std::string *)v28.__r_.__value_.__r.__words[0];
    v25 = "";
    if ((int)a5 < 0)
      v25 = " (all)";
    v41[0] = 67175939;
    v41[1] = v21;
    v42 = 2082;
    v43 = v22;
    v44 = 2081;
    v45 = v23;
    v46 = 2081;
    v47 = v24;
    v48 = 1026;
    v49 = a5;
    v50 = 2081;
    v51 = v25;
    v26 = (char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: Sending state notification (requested: %{private}d) for [%{public}s]/%{private}s/%{private}s to client %{public}d%{private}s", v41, 54);
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::notifyFenceStateForAuthorizedFence(const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::Notification &, int)", "%s\n", v26);
    if (v26 != (char *)buf)
      free(v26);
  }
  (*(void (**)(uint64_t, int *, std::string *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, a4, &v27, 0, a5, 0);
  return sub_100115F78((uint64_t)&v27);
}

void sub_100914CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_100914CD8(_QWORD *a1, char *__s)
{
  size_t v4;

  v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1)
        goto LABEL_10;
      a1 = (_QWORD *)*a1;
      return memcmp(a1, __s, v4) != 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1)
LABEL_10:
      sub_10035AD9C();
    return memcmp(a1, __s, v4) != 0;
  }
  return 1;
}

void sub_100914D68(const void **a1@<X0>, std::string *a2@<X8>)
{
  size_t v4;
  std::string *p_p;
  const void *v6;
  const std::string::value_type *v7;
  const void **v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  std::string *v13;
  std::string __p;

  if (*((char *)a1 + 23) >= 0)
    v4 = *((unsigned __int8 *)a1 + 23);
  else
    v4 = (size_t)a1[1];
  p_p = &__p;
  sub_100259584((uint64_t)&__p, v4 + 1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if (v4)
  {
    if (*((char *)a1 + 23) >= 0)
      v6 = a1;
    else
      v6 = *a1;
    memmove(p_p, v6, v4);
  }
  *(_WORD *)((char *)&p_p->__r_.__value_.__l.__data_ + v4) = 47;
  v9 = (const std::string::value_type *)a1[3];
  v8 = a1 + 3;
  v7 = v9;
  v10 = *((char *)v8 + 23);
  if (v10 >= 0)
    v11 = (const std::string::value_type *)v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)v8 + 23);
  else
    v12 = (std::string::size_type)v8[1];
  v13 = std::string::append(&__p, v11, v12);
  *a2 = *v13;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_100914E44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100914E60(uint64_t a1, __int128 *a2, int *a3, _OWORD *a4)
{
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  void *v13;
  uint8_t *v14;
  NSString *v15;
  NSDate *v16;
  NSDateComponents *v17;
  double v18;
  NSObject *v19;
  int v20;
  int v21;
  const char *v22;
  uint8_t *v23;
  const char *v24;
  void *v25;
  uint8_t *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  const __CFString *v40;
  const char *v41;
  _QWORD v42[5];
  void *v43;
  char v44;
  void *v45;
  char v46;
  void *v47;
  char v48;
  void *v49;
  char v50;
  id v51;
  void *__p;
  void *v53;
  int v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _BYTE v63[28];
  _OWORD v64[8];
  _OWORD v65[2];
  _BYTE v66[32];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[2];
  uint8_t buf[23];
  char v75;
  void *v76;
  char v77;
  void *v78;
  char v79;
  uint64_t v80;
  double v81;
  void *v82;
  char v83;
  id v84;
  void *v85;
  void *v86;

  if (*a3 >= 2)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v19 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_FAULT))
    {
      v20 = *a3;
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = v20;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "#Warning Invalid fence status, %d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v21 = *a3;
      *(_DWORD *)v66 = 67109120;
      *(_DWORD *)&v66[4] = v21;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 17, "#Warning Invalid fence status, %d", v66);
      v23 = (uint8_t *)v22;
      sub_100512490("Generic", 1, 0, 0, "void CLFenceManager::notifyAndLaunchClientForAuthorizedFenceOnEntryExit(const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v22);
      if (v23 != buf)
        free(v23);
    }
  }
  else
  {
    sub_1004E5748((char *)buf, a2);
    v7 = *a3;
    v8 = a4[7];
    v71 = a4[6];
    v72 = v8;
    v73[0] = a4[8];
    *(_OWORD *)((char *)v73 + 12) = *(_OWORD *)((char *)a4 + 140);
    v9 = a4[3];
    v67 = a4[2];
    v68 = v9;
    v10 = a4[5];
    v69 = a4[4];
    v70 = v10;
    v11 = a4[1];
    *(_OWORD *)v66 = *a4;
    *(_OWORD *)&v66[16] = v11;
    v64[6] = v71;
    v64[7] = v72;
    v65[0] = v73[0];
    *(_OWORD *)((char *)v65 + 12) = *(_OWORD *)((char *)v73 + 12);
    v64[2] = v67;
    v64[3] = v68;
    v64[4] = v69;
    v64[5] = v70;
    v64[0] = *(_OWORD *)v66;
    v64[1] = v11;
    v12 = objc_msgSend(objc_alloc((Class)CLLocation), "initWithClientLocation:", v64);
    v13 = *(void **)(a1 + 3976);
    if (v75 >= 0)
      v14 = buf;
    else
      v14 = *(uint8_t **)buf;
    v15 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v14);
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3321888768;
    v42[2] = sub_1009183DC;
    v42[3] = &unk_10215E860;
    v42[4] = a1;
    sub_1004E5748((char *)&v43, (__int128 *)buf);
    v54 = v7;
    v61 = v71;
    v62 = v72;
    *(_OWORD *)v63 = v73[0];
    v57 = v67;
    v58 = v68;
    v59 = v69;
    v60 = v70;
    v55 = *(_OWORD *)v66;
    v56 = *(_OWORD *)&v66[16];
    *(_OWORD *)&v63[12] = *(_OWORD *)((char *)v73 + 12);
    objc_msgSend(v13, "handleProvisionalIntermediationForService:forClientKey:at:withReply:", 1, v15, v12, v42);
    if (byte_1023057E8)
    {
      v16 = +[NSDate date](NSDate, "date");
      v17 = -[NSCalendar components:fromDate:](+[NSCalendar currentCalendar](NSCalendar, "currentCalendar"), "components:fromDate:", 248, v16);
      v18 = sub_10016CEDC((uint64_t)v66, (uint64_t)buf, (double *)(a1 + 3768));
      if (sub_10051247C())
      {
        v24 = "EXIT";
        if (!v7)
          v24 = "ENTER";
        v41 = v24;
        if (v77 >= 0)
          v25 = &v76;
        else
          v25 = v76;
        if (v75 >= 0)
          v26 = buf;
        else
          v26 = *(uint8_t **)buf;
        v27 = v80;
        v28 = sub_10014D1E0(v71);
        v29 = *(_QWORD *)&v66[4];
        v30 = *(_QWORD *)&v66[12];
        v31 = *(_QWORD *)&v66[20];
        v32 = -[NSDateComponents month](v17, "month");
        v33 = -[NSDateComponents day](v17, "day");
        v34 = -[NSDateComponents hour](v17, "hour");
        v35 = -[NSDateComponents minute](v17, "minute");
        v36 = -[NSDateComponents second](v17, "second");
        -[NSDate timeIntervalSinceReferenceDate](v16, "timeIntervalSinceReferenceDate");
        v38 = v37;
        -[NSDate timeIntervalSinceReferenceDate](v16, "timeIntervalSinceReferenceDate");
        v40 = CFStringCreateWithFormat(kCFAllocatorDefault, 0, CFSTR("Fence %s detected\n name: \"%s\"\n bundle: %s\n rad: %.1lf\n location: %s %+.8lf,%+.8lf\n acc:±%.2lfm dist: %.1lf \n date: %ld/%ld, %ld:%ld:%ld\n time: %.2lf lat: %.1lf"), v41, v25, v26, v27, v28, v29, v30, v31, *(_QWORD *)&v18, v32, v33, v34, v35, v36, v38, v39 - v81);
        sub_100D78C28(CFSTR("Fence Trigger"), 0, v40);
        CFRelease(v40);
      }
    }
    if (__p)
    {
      v53 = __p;
      operator delete(__p);
    }

    if (v50 < 0)
      operator delete(v49);
    if (v48 < 0)
      operator delete(v47);
    if (v46 < 0)
      operator delete(v45);
    if (v44 < 0)
      operator delete(v43);
    if (v85)
    {
      v86 = v85;
      operator delete(v85);
    }

    if (v83 < 0)
      operator delete(v82);
    if (v79 < 0)
      operator delete(v78);
    if (v77 < 0)
      operator delete(v76);
    if (v75 < 0)
      operator delete(*(void **)buf);
  }
}

void sub_1009153C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1004E2BD0(v1);
  sub_1004E2BD0((uint64_t)&STACK[0x390]);
  _Unwind_Resume(a1);
}

id sub_100915414(__int128 **a1)
{
  id v1;
  _QWORD v3[4];
  _QWORD v4[3];
  void **v5;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  v3[2] = sub_10091C904;
  v3[3] = &unk_10215EAC8;
  memset(v4, 0, sizeof(v4));
  sub_10091C98C((char *)v4, *a1, a1[1], 0xEF7BDEF7BDEF7BDFLL * (((char *)a1[1] - (char *)*a1) >> 3));
  v1 = objc_msgSend(v3, "copy");
  v5 = (void **)v4;
  sub_10091BBB0(&v5);
  return v1;
}

void sub_1009154B8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 24) = v1;
  sub_10091BBB0((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_1009154D0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  int v8;
  std::string v9;
  std::string v10;
  std::string v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[21];
  std::string v19;
  id v20;
  char v21[1384];

  sub_10091B98C((uint64_t)&v9);
  std::string::operator=(&v9, (const std::string *)a2);
  std::string::operator=(&v10, (const std::string *)(a2 + 24));
  std::string::operator=(&v11, (const std::string *)(a2 + 48));
  v16 = *(_OWORD *)(a2 + 136);
  v17 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)v18 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)&v18[13] = *(_QWORD *)(a2 + 181);
  v4 = *(_OWORD *)(a2 + 88);
  v12 = *(_OWORD *)(a2 + 72);
  v13 = v4;
  v5 = *(_OWORD *)(a2 + 120);
  v14 = *(_OWORD *)(a2 + 104);
  v15 = v5;
  std::string::operator=(&v19, (const std::string *)(a2 + 192));
  v6 = v20;
  v20 = *(id *)(a2 + 216);

  if (&v9 != (std::string *)a2)
    sub_1002F3538(v21, *(char **)(a2 + 224), *(_QWORD *)(a2 + 232), (uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 4);
  v8 = 7;
  (*(void (**)(uint64_t, int *, std::string *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, &v8, &v9, 0, 0xFFFFFFFFLL, 0);
  return sub_100115F78((uint64_t)&v9);
}

void sub_1009155EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100915604(uint64_t a1, _QWORD *a2)
{
  NSObject *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  uint8_t *v14;
  unint64_t v15;
  const char *v16;
  uint8_t *v17;
  int v18;
  _QWORD *v19;
  uint8_t buf[4];
  _QWORD *v21;

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v4 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(a2[1] - *a2) >> 3);
    *(_DWORD *)buf = 134217984;
    v21 = (_QWORD *)v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Notifying failure for %lu fences", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v15 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(a2[1] - *a2) >> 3);
    v18 = 134217984;
    v19 = (_QWORD *)v15;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Notifying failure for %lu fences", &v18);
    v17 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::notifyClientsOfInvalidFences(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v16);
    if (v17 != buf)
      free(v17);
  }
  if (a2[1] != *a2)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v8 = qword_1022A0068;
      if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
      {
        v9 = *a2 + v6;
        v10 = (_QWORD *)(v9 + 24);
        if (*(char *)(v9 + 47) < 0)
          v10 = (_QWORD *)*v10;
        *(_DWORD *)buf = 136315138;
        v21 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Notifying failure for Fence, %s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        v11 = *a2 + v6;
        v12 = (_QWORD *)(v11 + 24);
        if (*(char *)(v11 + 47) < 0)
          v12 = (_QWORD *)*v12;
        v18 = 136315138;
        v19 = v12;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Notifying failure for Fence, %s", (const char *)&v18);
        v14 = (uint8_t *)v13;
        sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::notifyClientsOfInvalidFences(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v13);
        if (v14 != buf)
          free(v14);
      }
      sub_1009159D0(a1, (__int128 *)(*a2 + v6));
      ++v7;
      v6 += 248;
    }
    while (0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(a2[1] - *a2) >> 3) > v7);
  }
}

void sub_1009159D0(uint64_t a1, __int128 *a2)
{
  void *v3;
  void **v4;
  NSString *v5;
  _QWORD v6[5];
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  id v15;
  void *__p;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  void *__dst[2];
  char v37;
  void *v38;
  char v39;
  void *v40;
  char v41;
  void *v42;
  char v43;
  id v44;
  void *v45;
  void *v46;

  v33 = xmmword_101C174D8;
  v34 = xmmword_101C174E8;
  memset(v35, 0, 28);
  v29 = xmmword_101C17498;
  v30 = xmmword_101C174A8;
  v31 = xmmword_101C174B8;
  v32 = xmmword_101C174C8;
  v27 = xmmword_101C17478;
  v28 = xmmword_101C17488;
  sub_1004E5748((char *)__dst, a2);
  v3 = *(void **)(a1 + 3976);
  if (v37 >= 0)
    v4 = __dst;
  else
    v4 = (void **)__dst[0];
  v5 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v4);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  v6[2] = sub_10091813C;
  v6[3] = &unk_10215E830;
  v6[4] = a1;
  sub_1004E5748((char *)&v7, (__int128 *)__dst);
  *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)((char *)v35 + 12);
  v24 = v33;
  v25 = v34;
  v26[0] = v35[0];
  v20 = v29;
  v21 = v30;
  v22 = v31;
  v23 = v32;
  v18 = v27;
  v19 = v28;
  objc_msgSend(v3, "handleProvisionalIntermediationForService:forClientKey:at:withReply:", 1, v5, 0, v6);
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }

  if (v14 < 0)
    operator delete(v13);
  if (v12 < 0)
    operator delete(v11);
  if (v10 < 0)
    operator delete(v9);
  if (v8 < 0)
    operator delete(v7);
  if (v45)
  {
    v46 = v45;
    operator delete(v45);
  }

  if (v43 < 0)
    operator delete(v42);
  if (v41 < 0)
    operator delete(v40);
  if (v39 < 0)
    operator delete(v38);
  if (v37 < 0)
    operator delete(__dst[0]);
}

void sub_100915BB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1004E2BD0(v1);
  sub_1004E2BD0((uint64_t)&STACK[0x268]);
  _Unwind_Resume(a1);
}

void sub_100915BDC(uint64_t a1, int *a2, uint64_t a3, int *a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  double Current;
  double v12;
  double v13;
  NSObject *v14;
  _BYTE *v15;
  unsigned int v16;
  char *v17;
  NSObject *v18;
  _BYTE *v19;
  unsigned int v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  unsigned int v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  int v32;
  unint64_t v33;
  int v34;
  NSObject *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void **v44;
  unsigned int v45;
  const char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int v56;
  unint64_t v59;
  void *v60[2];
  char v61;
  _BYTE __p[12];
  __int16 v63;
  _BYTE v64[10];
  __int128 v65;
  uint64_t v66;
  __int16 v67;
  uint64_t v68;
  _BYTE buf[12];
  __int16 v70;
  _BYTE v71[10];
  __int128 v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v75;

  v8 = sub_1001FD94C();
  v9 = off_1022FB108;
  *(_QWORD *)buf = CFAbsoluteTimeGetCurrent();
  sub_10018A4CC(v8, v9, buf);
  v10 = sub_1001FD94C();
  (*(void (**)(uint64_t))(*(_QWORD *)v10 + 944))(v10);
  if (sub_100D3A758(a1 + 112, a3))
  {
    Current = CFAbsoluteTimeGetCurrent();
    v12 = *(double *)(a3 + 120);
    v56 = *a2;
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v13 = Current - v12;
    v14 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
    {
      sub_100C3B9BC(a3, __p);
      v15 = v64[9] >= 0 ? __p : *(_BYTE **)__p;
      v16 = *a4 + 1;
      v17 = v16 > 4 ? "---" : off_10215EB48[v16];
      v27 = *(_QWORD *)(a1 + 3832);
      v28 = *(_QWORD *)(a1 + 3824);
      *(_DWORD *)buf = 136381955;
      *(_QWORD *)&buf[4] = v15;
      v70 = 2081;
      *(_QWORD *)v71 = v17;
      *(_WORD *)&v71[8] = 1026;
      LODWORD(v72) = v56 == 0;
      WORD2(v72) = 2050;
      *(double *)((char *)&v72 + 6) = v13;
      HIWORD(v72) = 2049;
      v73 = v27;
      v74 = 2049;
      v75 = v28;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Fence:Status fence, %{private}s, status, %{private}s, isIssueNotification, %{public}d, fenceAge, %{public}.1lf, StopTime, %{private}.1lf, StartTime, %{private}.1lf", buf, 0x3Au);
      if ((v64[9] & 0x80000000) != 0)
        operator delete(*(void **)__p);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v43 = qword_1022A0068;
      sub_100C3B9BC(a3, v60);
      if (v61 >= 0)
        v44 = v60;
      else
        v44 = (void **)v60[0];
      v45 = *a4 + 1;
      if (v45 > 4)
        v46 = "---";
      else
        v46 = off_10215EB48[v45];
      v50 = *(_QWORD *)(a1 + 3832);
      v51 = *(_QWORD *)(a1 + 3824);
      *(_DWORD *)__p = 136381955;
      *(_QWORD *)&__p[4] = v44;
      v63 = 2081;
      *(_QWORD *)v64 = v46;
      *(_WORD *)&v64[8] = 1026;
      LODWORD(v65) = v56 == 0;
      WORD2(v65) = 2050;
      *(double *)((char *)&v65 + 6) = v13;
      HIWORD(v65) = 2049;
      v66 = v50;
      v67 = 2049;
      v68 = v51;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v43, 0, "Fence:Status fence, %{private}s, status, %{private}s, isIssueNotification, %{public}d, fenceAge, %{public}.1lf, StopTime, %{private}.1lf, StartTime, %{private}.1lf", __p, 58);
      v53 = v52;
      if (v61 < 0)
        operator delete(v60[0]);
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::fenceStatusChanged(const CLFenceMonitor_Type::Notification &, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v53);
      if (v53 != buf)
        free(v53);
    }
    v29 = *(_QWORD *)(a3 + 232) - *(_QWORD *)(a3 + 224);
    if (v29)
    {
      v59 = v29 >> 4;
      if ((int)(v29 >> 4) >= -8)
      {
        v30 = 0;
        v31 = ((int)v59 - 1) / 10;
        v32 = -1;
        v33 = v29 >> 4;
        do
        {
          if (v30 >= v31)
            v34 = v33;
          else
            v34 = 10;
          if (qword_1022A0060 != -1)
            dispatch_once(&qword_1022A0060, &stru_10215E938);
          ++v30;
          v35 = qword_1022A0068;
          if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
          {
            if (*(char *)(a3 + 47) >= 0)
              v36 = a3 + 24;
            else
              v36 = *(_QWORD *)(a3 + 24);
            sub_100C3C08C(a3, v32 + 1, v34 + v32, __p);
            v37 = __p;
            if (v64[9] < 0)
              v37 = *(_BYTE **)__p;
            *(_DWORD *)buf = 136447235;
            *(_QWORD *)&buf[4] = v36;
            v70 = 1026;
            *(_DWORD *)v71 = v59;
            *(_WORD *)&v71[4] = 1026;
            *(_DWORD *)&v71[6] = v30;
            LOWORD(v72) = 1024;
            *(_DWORD *)((char *)&v72 + 2) = v31 + 1;
            WORD3(v72) = 2081;
            *((_QWORD *)&v72 + 1) = v37;
            _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Fence:Poly, %{public}s, %{public}d, %{public}d, %{publice}d, %{private}s", buf, 0x28u);
            if ((v64[9] & 0x80000000) != 0)
              operator delete(*(void **)__p);
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1022A0060 != -1)
              dispatch_once(&qword_1022A0060, &stru_10215E938);
            v38 = qword_1022A0068;
            if (*(char *)(a3 + 47) >= 0)
              v39 = a3 + 24;
            else
              v39 = *(_QWORD *)(a3 + 24);
            sub_100C3C08C(a3, v32 + 1, v34 + v32, v60);
            v40 = v60;
            if (v61 < 0)
              v40 = (void **)v60[0];
            *(_DWORD *)__p = 136447235;
            *(_QWORD *)&__p[4] = v39;
            v63 = 1026;
            *(_DWORD *)v64 = v59;
            *(_WORD *)&v64[4] = 1026;
            *(_DWORD *)&v64[6] = v30;
            LOWORD(v65) = 1024;
            *(_DWORD *)((char *)&v65 + 2) = v31 + 1;
            WORD3(v65) = 2081;
            *((_QWORD *)&v65 + 1) = v40;
            LODWORD(v54) = 40;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v38, 0, "Fence:Poly, %{public}s, %{public}d, %{public}d, %{publice}d, %{private}s", __p, v54);
            v42 = v41;
            if (v61 < 0)
              operator delete(v60[0]);
            sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::fenceStatusChanged(const CLFenceMonitor_Type::Notification &, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v42);
            if (v42 != buf)
              free(v42);
          }
          v32 += 10;
          LODWORD(v33) = v33 - 10;
        }
        while ((v31 & ~(v31 >> 31)) + 1 != v30);
      }
    }
    if (v56)
    {
      *(_DWORD *)buf = 8;
      sub_1009148CC(a1, a3, a4, (int *)buf, 0xFFFFFFFFLL);
    }
    else
    {
      sub_100914E60(a1, (__int128 *)a3, a4, a6);
    }
  }
  else
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v18 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
    {
      sub_100C3B9BC(a3, __p);
      v19 = v64[9] >= 0 ? __p : *(_BYTE **)__p;
      v20 = *a4 + 1;
      v21 = v20 > 4 ? "---" : off_10215EB48[v20];
      v22 = *(char *)(a3 + 23) >= 0 ? a3 : *(_QWORD *)a3;
      *(_DWORD *)buf = 136381187;
      *(_QWORD *)&buf[4] = v19;
      v70 = 2081;
      *(_QWORD *)v71 = v21;
      *(_WORD *)&v71[8] = 2081;
      *(_QWORD *)&v72 = v22;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Fence: fence, %{private}s, new status, %{private}s, bundleId, %{private}s, not authorized, avoiding notification\n", buf, 0x20u);
      if ((v64[9] & 0x80000000) != 0)
        operator delete(*(void **)__p);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v23 = qword_1022A0068;
      sub_100C3B9BC(a3, v60);
      if (v61 >= 0)
        v24 = v60;
      else
        v24 = (void **)v60[0];
      v25 = *a4 + 1;
      if (v25 > 4)
        v26 = "---";
      else
        v26 = off_10215EB48[v25];
      if (*(char *)(a3 + 23) >= 0)
        v47 = a3;
      else
        v47 = *(_QWORD *)a3;
      *(_DWORD *)__p = 136381187;
      *(_QWORD *)&__p[4] = v24;
      v63 = 2081;
      *(_QWORD *)v64 = v26;
      *(_WORD *)&v64[8] = 2081;
      *(_QWORD *)&v65 = v47;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v23, 2, "Fence: fence, %{private}s, new status, %{private}s, bundleId, %{private}s, not authorized, avoiding notification\n", __p, 32);
      v49 = v48;
      if (v61 < 0)
        operator delete(v60[0]);
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::fenceStatusChanged(const CLFenceMonitor_Type::Notification &, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v49);
      if (v49 != buf)
        free(v49);
    }
  }
}

void sub_1009164E8(uint64_t a1, uint64_t a2, _DWORD *a3, __int128 *a4, double a5)
{
  CLOSTransaction *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  NSObject *v25;
  unsigned int v26;
  const char *v27;
  size_t v28;
  std::string *v29;
  const void *v30;
  int v31;
  const std::string::value_type *v32;
  std::string::size_type v33;
  std::string *v34;
  __int128 v35;
  _BYTE *v36;
  unsigned int v37;
  const char *v38;
  uint64_t v39;
  std::string *v40;
  std::string *v41;
  std::string v42;
  std::string v43;
  id v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD v53[92];
  _BYTE __p[32];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];

  LODWORD(v43.__r_.__value_.__l.__data_) = *a3;
  *(double *)&v43.__r_.__value_.__l.__size_ = a5;
  LODWORD(v43.__r_.__value_.__r.__words[2]) = 8;
  v10 = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "Pending geofence notification");
  v11 = a4[6];
  v12 = a4[8];
  v52 = a4[7];
  v53[0] = v12;
  *(_OWORD *)((char *)v53 + 12) = *(__int128 *)((char *)a4 + 140);
  v13 = a4[3];
  v47 = a4[2];
  v48 = v13;
  v14 = a4[5];
  v49 = a4[4];
  v44 = v10;
  v50 = v14;
  v51 = v11;
  v15 = a4[1];
  v45 = *a4;
  v46 = v15;
  *(_QWORD *)__p = a2;
  v16 = sub_10091CBD0((uint64_t **)(a1 + 3840), (unsigned __int8 *)a2, (uint64_t)&unk_101B9EB60, (__int128 **)__p);
  sub_100916DCC((int *)v16 + 70, (int *)&v43);
  v17 = *(_OWORD *)(v16 + 53);
  v59 = *(_OWORD *)(v16 + 51);
  v60 = v17;
  v61[0] = *(_OWORD *)(v16 + 55);
  *(_OWORD *)((char *)v61 + 12) = *(_OWORD *)((char *)v16 + 452);
  v18 = *(_OWORD *)(v16 + 45);
  v55 = *(_OWORD *)(v16 + 43);
  v56 = v18;
  v19 = *(_OWORD *)(v16 + 49);
  v57 = *(_OWORD *)(v16 + 47);
  v58 = v19;
  v20 = *(_OWORD *)(v16 + 41);
  *(_OWORD *)__p = *(_OWORD *)(v16 + 39);
  *(_OWORD *)&__p[16] = v20;
  v21 = v52;
  *(_OWORD *)(v16 + 51) = v51;
  *(_OWORD *)(v16 + 53) = v21;
  *(_OWORD *)(v16 + 55) = v53[0];
  *(_OWORD *)((char *)v16 + 452) = *(_OWORD *)((char *)v53 + 12);
  v22 = v48;
  *(_OWORD *)(v16 + 43) = v47;
  *(_OWORD *)(v16 + 45) = v22;
  v23 = v50;
  *(_OWORD *)(v16 + 47) = v49;
  *(_OWORD *)(v16 + 49) = v23;
  v24 = v46;
  *(_OWORD *)(v16 + 39) = v45;
  *(_OWORD *)(v16 + 41) = v24;
  v51 = v59;
  v52 = v60;
  v53[0] = v61[0];
  *(_OWORD *)((char *)v53 + 12) = *(_OWORD *)((char *)v61 + 12);
  v47 = v55;
  v48 = v56;
  v49 = v57;
  v50 = v58;
  v45 = *(_OWORD *)__p;
  v46 = *(_OWORD *)&__p[16];

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v25 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    v26 = *a3 + 1;
    if (v26 > 4)
      v27 = "---";
    else
      v27 = off_10215EB48[v26];
    if (*(char *)(a2 + 23) >= 0)
      v28 = *(unsigned __int8 *)(a2 + 23);
    else
      v28 = *(_QWORD *)(a2 + 8);
    v29 = &v43;
    sub_100259584((uint64_t)&v43, v28 + 1);
    if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v29 = (std::string *)v43.__r_.__value_.__r.__words[0];
    if (v28)
    {
      if (*(char *)(a2 + 23) >= 0)
        v30 = (const void *)a2;
      else
        v30 = *(const void **)a2;
      memmove(v29, v30, v28);
    }
    *(_WORD *)((char *)&v29->__r_.__value_.__l.__data_ + v28) = 47;
    v31 = *(char *)(a2 + 47);
    if (v31 >= 0)
      v32 = (const std::string::value_type *)(a2 + 24);
    else
      v32 = *(const std::string::value_type **)(a2 + 24);
    if (v31 >= 0)
      v33 = *(unsigned __int8 *)(a2 + 47);
    else
      v33 = *(_QWORD *)(a2 + 32);
    v34 = std::string::append(&v43, v32, v33);
    v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    *(_QWORD *)&__p[16] = *((_QWORD *)&v34->__r_.__value_.__l + 2);
    *(_OWORD *)__p = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    v36 = __p;
    if (__p[23] < 0)
      v36 = *(_BYTE **)__p;
    LODWORD(v43.__r_.__value_.__l.__data_) = 136381187;
    *(std::string::size_type *)((char *)v43.__r_.__value_.__r.__words + 4) = (std::string::size_type)v27;
    WORD2(v43.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v43.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v36;
    HIWORD(v43.__r_.__value_.__r.__words[2]) = 2049;
    v44 = *(id *)&a5;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "pending, transition, %{private}s, fence, %{private}s, timestamp, %{private}.1lf", (uint8_t *)&v43, 0x20u);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v43, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v37 = *a3 + 1;
    if (v37 > 4)
      v38 = "---";
    else
      v38 = off_10215EB48[v37];
    v39 = qword_1022A0068;
    sub_100914D68((const void **)a2, &v42);
    if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = &v42;
    else
      v40 = (std::string *)v42.__r_.__value_.__r.__words[0];
    *(_DWORD *)__p = 136381187;
    *(_QWORD *)&__p[4] = v38;
    *(_WORD *)&__p[12] = 2081;
    *(_QWORD *)&__p[14] = v40;
    *(_WORD *)&__p[22] = 2049;
    *(double *)&__p[24] = a5;
    v41 = (std::string *)_os_log_send_and_compose_impl(2, 0, &v43, 1628, &_mh_execute_header, v39, 2, "pending, transition, %{private}s, fence, %{private}s, timestamp, %{private}.1lf", __p, 32);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceEntryExitNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", (const char *)v41);
    if (v41 != &v43)
      free(v41);
  }
}

void sub_10091697C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1009169C8(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4, double a5)
{
  int v9;
  uint64_t *v10;
  NSObject *v11;
  unsigned int v12;
  const char *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  _BYTE *v22;
  unsigned int v23;
  const char *v24;
  uint64_t v25;
  std::string *v26;
  std::string *v27;
  std::string v28;
  _BYTE __p[24];
  double v30;
  std::string v31;
  id v32;

  v9 = *a4;
  LODWORD(v31.__r_.__value_.__l.__data_) = *a3;
  *(double *)&v31.__r_.__value_.__l.__size_ = a5;
  LODWORD(v31.__r_.__value_.__r.__words[2]) = v9;
  v32 = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "Pending geofence notification");
  *(_QWORD *)__p = a2;
  v10 = sub_10091CED0((uint64_t **)(a1 + 3864), (unsigned __int8 *)a2, (uint64_t)&unk_101B9EB60, (__int128 **)__p);
  sub_100916DCC((int *)v10 + 70, (int *)&v31);

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v11 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    v12 = *a3 + 1;
    if (v12 > 4)
      v13 = "---";
    else
      v13 = off_10215EB48[v12];
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v31;
    sub_100259584((uint64_t)&v31, v14 + 1);
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v31.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 47;
    v17 = *(char *)(a2 + 47);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)(a2 + 24);
    else
      v18 = *(const std::string::value_type **)(a2 + 24);
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a2 + 47);
    else
      v19 = *(_QWORD *)(a2 + 32);
    v20 = std::string::append(&v31, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    *(_QWORD *)&__p[16] = *((_QWORD *)&v20->__r_.__value_.__l + 2);
    *(_OWORD *)__p = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    v22 = __p;
    if (__p[23] < 0)
      v22 = *(_BYTE **)__p;
    LODWORD(v31.__r_.__value_.__l.__data_) = 136381187;
    *(std::string::size_type *)((char *)v31.__r_.__value_.__r.__words + 4) = (std::string::size_type)v13;
    WORD2(v31.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v31.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v22;
    HIWORD(v31.__r_.__value_.__r.__words[2]) = 2049;
    v32 = *(id *)&a5;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "pending, state, %{private}s, fence, %{private}s, timestamp, %{private}.1lf", (uint8_t *)&v31, 0x20u);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v31, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v23 = *a3 + 1;
    if (v23 > 4)
      v24 = "---";
    else
      v24 = off_10215EB48[v23];
    v25 = qword_1022A0068;
    sub_100914D68((const void **)a2, &v28);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &v28;
    else
      v26 = (std::string *)v28.__r_.__value_.__r.__words[0];
    *(_DWORD *)__p = 136381187;
    *(_QWORD *)&__p[4] = v24;
    *(_WORD *)&__p[12] = 2081;
    *(_QWORD *)&__p[14] = v26;
    *(_WORD *)&__p[22] = 2049;
    v30 = a5;
    v27 = (std::string *)_os_log_send_and_compose_impl(2, 0, &v31, 1628, &_mh_execute_header, v25, 2, "pending, state, %{private}s, fence, %{private}s, timestamp, %{private}.1lf", __p, 32);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceStateNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::Notification &)", "%s\n", (const char *)v27);
    if (v27 != &v31)
      free(v27);
  }
}

void sub_100916D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25)
{
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

int *sub_100916DCC(int *a1, int *a2)
{
  void *v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v3 = (void *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  v4 = *a1;
  *a1 = *a2;
  *a2 = v4;
  v5 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = v5;
  v6 = a1[4];
  a1[4] = a2[4];
  a2[4] = v6;
  v7 = *((_QWORD *)a1 + 3);
  *((_QWORD *)a1 + 3) = 0;
  *((_QWORD *)a2 + 3) = v7;

  return a1;
}

void sub_100916E38(uint64_t a1, std::string::size_type a2, int *a3, double a4)
{
  NSObject *v8;
  size_t v9;
  std::string *v10;
  const void *v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  std::string *v15;
  __int128 v16;
  std::string *p_p;
  int v18;
  uint64_t *v19;
  NSObject *v20;
  size_t v21;
  std::string *v22;
  const void *v23;
  int v24;
  const std::string::value_type *v25;
  std::string::size_type v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  uint64_t v30;
  std::string *v31;
  std::string *v32;
  std::string *v33;
  uint64_t v34;
  std::string *v35;
  std::string *v36;
  std::string *v37;
  uint64_t v38;
  std::string __p;
  int v40;
  std::string *v41;
  __int16 v42;
  double v43;
  std::string v44;

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v8 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0)
      v9 = *(unsigned __int8 *)(a2 + 23);
    else
      v9 = *(_QWORD *)(a2 + 8);
    v10 = &v44;
    sub_100259584((uint64_t)&v44, v9 + 1);
    if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v10 = (std::string *)v44.__r_.__value_.__r.__words[0];
    if (v9)
    {
      if (*(char *)(a2 + 23) >= 0)
        v11 = (const void *)a2;
      else
        v11 = *(const void **)a2;
      memmove(v10, v11, v9);
    }
    *(_WORD *)((char *)&v10->__r_.__value_.__l.__data_ + v9) = 47;
    v12 = *(char *)(a2 + 47);
    if (v12 >= 0)
      v13 = (const std::string::value_type *)(a2 + 24);
    else
      v13 = *(const std::string::value_type **)(a2 + 24);
    if (v12 >= 0)
      v14 = *(unsigned __int8 *)(a2 + 47);
    else
      v14 = *(_QWORD *)(a2 + 32);
    v15 = std::string::append(&v44, v13, v14);
    v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    LODWORD(v44.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)v44.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    WORD2(v44.__r_.__value_.__r.__words[1]) = 2049;
    *(double *)((char *)&v44.__r_.__value_.__r.__words[1] + 6) = a4;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "pending, failure, fence, %{private}s, timestamp, %{private}.1lf", (uint8_t *)&v44, 0x16u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v44, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v30 = qword_1022A0068;
    sub_100914D68((const void **)a2, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v31 = &__p;
    else
      v31 = (std::string *)__p.__r_.__value_.__r.__words[0];
    v40 = 136380931;
    v41 = v31;
    v42 = 2049;
    v43 = a4;
    _os_log_send_and_compose_impl(2, 0, &v44, 1628, &_mh_execute_header, v30, 2, "pending, failure, fence, %{private}s, timestamp, %{private}.1lf", &v40, 22);
    v33 = v32;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceFailureNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::Notification &)", "%s\n", (const char *)v33);
    if (v33 != &v44)
      free(v33);
  }
  v18 = *a3;
  *(double *)&v44.__r_.__value_.__l.__data_ = a4;
  LODWORD(v44.__r_.__value_.__r.__words[1]) = v18;
  v44.__r_.__value_.__r.__words[2] = (std::string::size_type)-[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "Pending geofence failure notification");
  __p.__r_.__value_.__r.__words[0] = a2;
  v19 = sub_10091D080((uint64_t **)(a1 + 3888), (unsigned __int8 *)a2, (uint64_t)&unk_101B9EB60, (__int128 **)&__p);
  sub_100917430(v19 + 35, (uint64_t *)&v44);

  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v20 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0)
      v21 = *(unsigned __int8 *)(a2 + 23);
    else
      v21 = *(_QWORD *)(a2 + 8);
    v22 = &v44;
    sub_100259584((uint64_t)&v44, v21 + 1);
    if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v22 = (std::string *)v44.__r_.__value_.__r.__words[0];
    if (v21)
    {
      if (*(char *)(a2 + 23) >= 0)
        v23 = (const void *)a2;
      else
        v23 = *(const void **)a2;
      memmove(v22, v23, v21);
    }
    *(_WORD *)((char *)&v22->__r_.__value_.__l.__data_ + v21) = 47;
    v24 = *(char *)(a2 + 47);
    if (v24 >= 0)
      v25 = (const std::string::value_type *)(a2 + 24);
    else
      v25 = *(const std::string::value_type **)(a2 + 24);
    if (v24 >= 0)
      v26 = *(unsigned __int8 *)(a2 + 47);
    else
      v26 = *(_QWORD *)(a2 + 32);
    v27 = std::string::append(&v44, v25, v26);
    v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v28;
    v27->__r_.__value_.__l.__size_ = 0;
    v27->__r_.__value_.__r.__words[2] = 0;
    v27->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    v29 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v29 = (std::string *)__p.__r_.__value_.__r.__words[0];
    LODWORD(v44.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)v44.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
    WORD2(v44.__r_.__value_.__r.__words[1]) = 2049;
    *(double *)((char *)&v44.__r_.__value_.__r.__words[1] + 6) = a4;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "pending, failure, fence, %{private}s, timestamp, %{private}.1lf, created transaction", (uint8_t *)&v44, 0x16u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v44, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v34 = qword_1022A0068;
    sub_100914D68((const void **)a2, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v35 = &__p;
    else
      v35 = (std::string *)__p.__r_.__value_.__r.__words[0];
    v40 = 136380931;
    v41 = v35;
    v42 = 2049;
    v43 = a4;
    LODWORD(v38) = 22;
    _os_log_send_and_compose_impl(2, 0, &v44, 1628, &_mh_execute_header, v34, 2, "pending, failure, fence, %{private}s, timestamp, %{private}.1lf, created transaction", &v40, v38);
    v37 = v36;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceFailureNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::Notification &)", "%s\n", (const char *)v37);
    if (v37 != &v44)
      free(v37);
  }
}

void sub_1009173E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100917430(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v3 = (void *)a2[2];
  a2[2] = 0;
  v4 = *a1;
  *a1 = *a2;
  *a2 = v4;
  v5 = *((_DWORD *)a1 + 2);
  *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 2) = v5;
  v6 = a1[2];
  a1[2] = 0;
  a2[2] = v6;

  return a1;
}

uint64_t sub_10091748C(uint64_t a1, uint64_t a2, _DWORD *a3, __int128 *a4, uint64_t a5)
{
  uint64_t *v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t *v19;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  NSObject *v28;
  const char *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  const char *v33;
  double v34;
  int v35;
  uint64_t v36;
  _BOOL4 v37;
  unsigned int v38;
  _BOOL4 v39;
  int isStatic;
  int isWalking;
  int isDriving;
  int v43;
  void *v44;
  const char *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  const char *v51;
  uint64_t v52;
  _BOOL4 v53;
  unsigned int v54;
  _BOOL4 v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  char *v62;
  uint64_t v63;
  _BOOL4 v64;
  const char *v65;
  const char *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  const char *v71;
  const char *v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[8];
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  __n128 (*v81)(uint64_t, uint64_t);
  uint64_t (*v82)();
  void *v83;
  _OWORD v84[8];
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  void *(*v89)(uint64_t, uint64_t);
  uint64_t (*v90)(uint64_t);
  const char *v91;
  _BYTE v92[1608];
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  _BOOL4 v96;
  uint64_t v97;
  double *v98;
  uint64_t v99;
  CFAbsoluteTime Current;
  int v101;
  const char *v102;
  __int16 v103;
  _QWORD *v104;
  __int16 v105;
  _QWORD *v106;
  __int16 v107;
  _QWORD *v108;
  __int16 v109;
  int v110;
  __int16 v111;
  const char *v112;
  __int16 v113;
  uint64_t v114;
  __int16 v115;
  int v116;
  __int16 v117;
  _BOOL4 v118;
  __int16 v119;
  int v120;
  __int16 v121;
  _BOOL4 v122;
  __int16 v123;
  int v124;
  __int16 v125;
  int v126;
  __int16 v127;
  int v128;
  __int16 v129;
  int v130;
  __int16 v131;
  int v132;
  uint8_t buf[4];
  const char *v134;
  __int16 v135;
  _QWORD *v136;
  __int16 v137;
  _QWORD *v138;
  __int16 v139;
  _QWORD *v140;
  __int16 v141;
  unsigned int v142;
  __int16 v143;
  const char *v144;
  __int16 v145;
  uint64_t v146;
  __int16 v147;
  _BOOL4 v148;
  __int16 v149;
  _BOOL4 v150;
  __int16 v151;
  int v152;
  __int16 v153;
  _BOOL4 v154;
  __int16 v155;
  int v156;
  __int16 v157;
  int v158;
  __int16 v159;
  int v160;
  __int16 v161;
  int v162;
  __int16 v163;
  int v164;

  if (*a3 >= 2u)
    sub_10190EE3C();
  v97 = 0;
  v98 = (double *)&v97;
  v99 = 0x2020000000;
  Current = 0.0;
  Current = CFAbsoluteTimeGetCurrent();
  if ((a5 & 0x80000000) != 0)
    sub_1009164E8(a1, a2, a3, a4, v98[3]);
  v93 = 0;
  v94 = &v93;
  v95 = 0x2020000000;
  v96 = *a3 != 0;
  v86 = 0;
  v87 = &v86;
  v88 = 0x67812000000;
  v89 = sub_100206EA0;
  v90 = sub_100207BD0;
  v91 = "/!0/-0";
  sub_10091B98C((uint64_t)v92);
  v78 = 0;
  v79 = &v78;
  v80 = 0xB812000000;
  v81 = sub_100917D40;
  v82 = nullsub_415;
  v83 = &unk_102080316;
  memset(v84, 0, sizeof(v84));
  v85 = 0;
  sub_10016F508(a1 + 344, (uint64_t)v84);
  v10 = v87;
  v11 = v87 + 6;
  std::string::operator=((std::string *)v87 + 2, (const std::string *)a2);
  std::string::operator=((std::string *)v10 + 3, (const std::string *)(a2 + 24));
  std::string::operator=((std::string *)v10 + 4, (const std::string *)(a2 + 48));
  v12 = *(_OWORD *)(a2 + 72);
  v13 = *(_OWORD *)(a2 + 88);
  v14 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v10 + 21) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v10 + 19) = v14;
  *(_OWORD *)(v10 + 17) = v13;
  *(_OWORD *)(v10 + 15) = v12;
  v15 = *(_OWORD *)(a2 + 136);
  v16 = *(_OWORD *)(a2 + 152);
  v17 = *(_OWORD *)(a2 + 168);
  *(uint64_t *)((char *)v10 + 229) = *(_QWORD *)(a2 + 181);
  *(_OWORD *)(v10 + 27) = v17;
  *(_OWORD *)(v10 + 25) = v16;
  *(_OWORD *)(v10 + 23) = v15;
  std::string::operator=((std::string *)v10 + 10, (const std::string *)(a2 + 192));
  v18 = (void *)v10[33];
  v10[33] = (uint64_t)*(id *)(a2 + 216);

  if (v11 != (_QWORD *)a2)
    sub_1002F3538((char *)v10 + 272, *(char **)(a2 + 224), *(_QWORD *)(a2 + 232), (uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 4);
  v19 = v87;
  v20 = v87 + 68;
  v21 = a4[1];
  *((_OWORD *)v87 + 34) = *a4;
  *((_OWORD *)v19 + 35) = v21;
  v22 = a4[5];
  v24 = a4[2];
  v23 = a4[3];
  *((_OWORD *)v19 + 38) = a4[4];
  *((_OWORD *)v19 + 39) = v22;
  *((_OWORD *)v19 + 36) = v24;
  *((_OWORD *)v19 + 37) = v23;
  v26 = a4[7];
  v25 = a4[8];
  v27 = a4[6];
  *(_OWORD *)((char *)v20 + 140) = *(__int128 *)((char *)a4 + 140);
  *((_OWORD *)v19 + 41) = v26;
  *((_OWORD *)v19 + 42) = v25;
  *((_OWORD *)v19 + 40) = v27;
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v28 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
  {
    if (*((_DWORD *)v94 + 6))
      v29 = "exited";
    else
      v29 = "entered";
    v30 = v87 + 12;
    if (*((char *)v87 + 119) < 0)
      v30 = (_QWORD *)*v30;
    v31 = v87 + 6;
    if (*((char *)v87 + 71) < 0)
      v31 = (_QWORD *)*v31;
    v32 = v87 + 9;
    if (*((char *)v87 + 95) < 0)
      v32 = (_QWORD *)*v32;
    v33 = " (all)";
    if ((int)a5 >= 0)
      v33 = "";
    v34 = *((double *)v87 + 18);
    v35 = *((unsigned __int8 *)v87 + 236);
    v75 = a1;
    v74 = a5;
    v70 = v30;
    v72 = v29;
    v66 = v33;
    v68 = v31;
    if (v34 <= 400.0)
    {
      if (*((_BYTE *)v87 + 236))
      {
        v64 = 0;
        v35 = 1;
LABEL_27:
        v36 = v87[25];
        v37 = v34 >= 7000.0;
        v38 = *((_DWORD *)v87 + 52);
        v39 = v87[35] != v87[34];
        isStatic = CLMotionActivity::isStatic((CLMotionActivity *)(v79 + 6));
        isWalking = CLMotionActivity::isWalking((CLMotionActivity *)(v79 + 6));
        isDriving = CLMotionActivity::isDriving((CLMotionActivity *)(v79 + 6));
        v43 = CLMotionActivity::isInVehicle((CLMotionActivity *)(v79 + 6));
        *(_DWORD *)buf = 136384515;
        v134 = v72;
        v135 = 2082;
        v136 = v70;
        v137 = 2081;
        v138 = v68;
        v139 = 2081;
        v140 = v32;
        v141 = 1026;
        v142 = v74;
        v143 = 2081;
        v144 = v66;
        v145 = 2049;
        v146 = v36;
        v147 = 1025;
        v148 = v64;
        v149 = 1025;
        v150 = v37;
        a5 = v74;
        v151 = 1025;
        v152 = (v38 >> 4) & 1;
        v153 = 1025;
        v154 = v39;
        v155 = 1025;
        v156 = v35;
        v157 = 1025;
        v158 = isStatic;
        v159 = 1025;
        v160 = isWalking;
        v161 = 1025;
        v162 = isDriving;
        v163 = 1025;
        v164 = v43;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "Fence: Sending %{private}s notification for [%{public}s]/%{private}s/%{private}s to client %{public}d%{private}s, sinceLast,%{private}.1f, type,%{private}d,%{private}d,%{private}d,%{private}d,%{private}d, motion,%{private}d,%{private}d,%{private}d,%{private}d", buf, 0x7Au);
        a1 = v75;
        goto LABEL_28;
      }
      if (*((_DWORD *)v87 + 57) != 2 && v87[35] == v87[34])
      {
        v35 = 0;
        v64 = (v87[26] & 0x20) == 0;
        goto LABEL_27;
      }
      v35 = 0;
    }
    v64 = 0;
    goto LABEL_27;
  }
LABEL_28:
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    if (*((_DWORD *)v94 + 6))
      v46 = "exited";
    else
      v46 = "entered";
    v71 = v46;
    v47 = v87 + 12;
    if (*((char *)v87 + 119) < 0)
      v47 = (_QWORD *)*v47;
    v76 = a1;
    v48 = v87 + 6;
    v49 = v87 + 6;
    if (*((char *)v87 + 71) < 0)
      v49 = (_QWORD *)*v48;
    v50 = v87 + 9;
    v69 = v49;
    if (*((char *)v87 + 95) < 0)
      v50 = (_QWORD *)*v50;
    v51 = "";
    v73 = qword_1022A0068;
    v52 = a5;
    if ((int)a5 < 0)
      v51 = " (all)";
    v65 = v51;
    v67 = v87[25];
    HIDWORD(v63) = sub_1004E458C((uint64_t)v48);
    v53 = *((double *)v87 + 18) >= 7000.0;
    v54 = *((_DWORD *)v87 + 52);
    v55 = v87[35] != v87[34];
    v56 = *((unsigned __int8 *)v87 + 236);
    v57 = CLMotionActivity::isStatic((CLMotionActivity *)(v79 + 6));
    v58 = CLMotionActivity::isWalking((CLMotionActivity *)(v79 + 6));
    v59 = CLMotionActivity::isDriving((CLMotionActivity *)(v79 + 6));
    v60 = CLMotionActivity::isInVehicle((CLMotionActivity *)(v79 + 6));
    v61 = (v54 >> 4) & 1;
    v101 = 136384515;
    v102 = v71;
    v103 = 2082;
    v104 = v47;
    v105 = 2081;
    v106 = v69;
    v107 = 2081;
    v108 = v50;
    v109 = 1026;
    a5 = v52;
    v110 = v52;
    v111 = 2081;
    v112 = v65;
    v113 = 2049;
    v114 = v67;
    v115 = 1025;
    v116 = HIDWORD(v63);
    v117 = 1025;
    v118 = v53;
    v119 = 1025;
    v120 = v61;
    v121 = 1025;
    v122 = v55;
    v123 = 1025;
    v124 = v56;
    v125 = 1025;
    v126 = v57;
    v127 = 1025;
    v128 = v58;
    v129 = 1025;
    v130 = v59;
    v131 = 1025;
    v132 = v60;
    LODWORD(v63) = 122;
    v62 = (char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v73, 2, "Fence: Sending %{private}s notification for [%{public}s]/%{private}s/%{private}s to client %{public}d%{private}s, sinceLast,%{private}.1f, type,%{private}d,%{private}d,%{private}d,%{private}d,%{private}d, motion,%{private}d,%{private}d,%{private}d,%{private}d", &v101, v63);
    sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::notifyFenceEntryExitForAuthorizedFence(const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &, int)", "%s\n", v62);
    a1 = v76;
    if (v62 != (char *)buf)
      free(v62);
  }
  (*(void (**)(uint64_t, uint64_t *, uint64_t *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, v94 + 3, v87 + 6, 0, a5, 0);
  if (*(_BYTE *)(a1 + 3809) && !*(_BYTE *)(a1 + 3810))
  {
    v44 = *(void **)(a1 + 32);
    v77[0] = _NSConcreteStackBlock;
    v77[1] = 3221225472;
    v77[2] = sub_100917D78;
    v77[3] = &unk_10215E810;
    v77[4] = &v97;
    v77[5] = &v93;
    v77[6] = &v86;
    v77[7] = &v78;
    sub_1001B6EA4(v44, (uint64_t)v77);
  }
  _Block_object_dispose(&v78, 8);
  _Block_object_dispose(&v86, 8);
  sub_100115F78((uint64_t)v92);
  _Block_object_dispose(&v93, 8);
  _Block_object_dispose(&v97, 8);
  return 1;
}

void sub_100917CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a50, 8);
  sub_100115F78(a18);
  _Block_object_dispose(&STACK[0x7C0], 8);
  _Block_object_dispose(&STACK[0x7E0], 8);
  _Unwind_Resume(a1);
}

__n128 sub_100917D40(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v2 = *(_OWORD *)(a2 + 64);
  v3 = *(_OWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 64) = v2;
  *(_OWORD *)(a1 + 80) = v3;
  result = *(__n128 *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 144);
  v7 = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = v7;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

void sub_100917D78(_QWORD *a1)
{
  void *__p[2];
  char v2;

  sub_100ED1884((_DWORD *)(*(_QWORD *)(a1[5] + 8) + 24), *(_QWORD *)(a1[6] + 8) + 48, (CLMotionActivity *)(*(_QWORD *)(a1[7] + 8) + 48), (uint64_t)__p, *(double *)(*(_QWORD *)(a1[4] + 8) + 24));
  sub_100008D50((uint64_t *)__p);
  if (v2 < 0)
    operator delete(__p[0]);
}

void sub_100917DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100917E04(uint64_t a1, std::string::size_type a2, __int128 *a3, int a4)
{
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  double Current;
  NSObject *v14;
  const char *v16;
  uint8_t *v17;
  _WORD v18[8];
  std::string v19;
  std::string v20;
  std::string v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[21];
  std::string v29;
  id v30;
  char v31[272];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[61];
  int v41;
  uint8_t buf[1640];

  v41 = 4;
  sub_10091B98C((uint64_t)&v19);
  std::string::operator=(&v19, (const std::string *)a2);
  std::string::operator=(&v20, (const std::string *)(a2 + 24));
  std::string::operator=(&v21, (const std::string *)(a2 + 48));
  v26 = *(_OWORD *)(a2 + 136);
  v27 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)v28 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)&v28[13] = *(_QWORD *)(a2 + 181);
  v22 = *(_OWORD *)(a2 + 72);
  v23 = *(_OWORD *)(a2 + 88);
  v24 = *(_OWORD *)(a2 + 104);
  v25 = *(_OWORD *)(a2 + 120);
  std::string::operator=(&v29, (const std::string *)(a2 + 192));
  v8 = v30;
  v30 = *(id *)(a2 + 216);

  if (&v19 != (std::string *)a2)
    sub_1002F3538(v31, *(char **)(a2 + 224), *(_QWORD *)(a2 + 232), (uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 4);
  *(_OWORD *)((char *)v40 + 12) = *(__int128 *)((char *)a3 + 140);
  v9 = a3[7];
  v38 = a3[6];
  v39 = v9;
  v40[0] = a3[8];
  v10 = a3[3];
  v34 = a3[2];
  v35 = v10;
  v11 = a3[5];
  v36 = a3[4];
  v37 = v11;
  v12 = a3[1];
  v32 = *a3;
  v33 = v12;
  if (a4 < 0)
  {
    Current = CFAbsoluteTimeGetCurrent();
    sub_100916E38(a1, a2, &v41, Current);
  }
  if (qword_1022A0060 != -1)
    dispatch_once(&qword_1022A0060, &stru_10215E938);
  v14 = qword_1022A0068;
  if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Sending Fence Failure notification", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v18[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Sending Fence Failure notification", v18, 2);
    v17 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLFenceManager::notifyFenceFailure(const CLFenceManager_Type::Fence &, const CLDaemonLocation &, int)", "%s\n", v16);
    if (v17 != buf)
      free(v17);
  }
  *(_DWORD *)buf = 4;
  (*(void (**)(uint64_t, uint8_t *, std::string *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, buf, &v19, 0, 0xFFFFFFFFLL, 0);
  *(_DWORD *)buf = 10;
  (*(void (**)(uint64_t, uint8_t *, std::string *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, buf, &v19, 0, 0xFFFFFFFFLL, 0);
  sub_100115F78((uint64_t)&v19);
  return 1;
}

void sub_100918110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10091813C(uint64_t a1, char a2)
{
  uint64_t v3;
  _QWORD *v4;
  id v5;
  NSObject *v6;
  const char *v7;
  uint8_t *v8;
  _WORD v9[8];
  uint8_t buf[1640];

  if ((a2 & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = (_QWORD *)(a1 + 40);
    sub_100917E04(v3, a1 + 40, (__int128 *)(a1 + 288), -1);
    v5 = objc_msgSend(objc_msgSend(*(id *)(v3 + 32), "vendor"), "proxyForService:", CFSTR("CLApplicationLifecycleManager"));
    if (*(char *)(a1 + 63) < 0)
      v4 = (_QWORD *)*v4;
    objc_msgSend(v5, "launchApplication:requiringAuthForServiceMask:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v4), 2);
  }
  else
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v6 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Not launching client", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v9[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "Not launching client", v9, 2);
      v8 = (uint8_t *)v7;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::notifyAndLaunchClientForAuthorizedFenceFailure(const CLFenceManager_Type::Fence &)_block_invoke", "%s\n", v7);
      if (v8 != buf)
        free(v8);
    }
  }
}

char *sub_100918350(uint64_t a1, uint64_t a2)
{
  return sub_1004E5748((char *)(a1 + 40), (__int128 *)(a2 + 40));
}

void sub_10091835C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 264);
  if (v2)
  {
    *(_QWORD *)(a1 + 272) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)(a1 + 232));
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)(a1 + 88));
  if (*(char *)(a1 + 87) < 0)
    operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0)
    operator delete(*(void **)(a1 + 40));
}

char *sub_1009183DC(char *result, int a2)
{
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;

  if (a2)
  {
    v2 = result;
    v3 = *((_QWORD *)result + 4);
    v4 = result + 40;
    sub_10091748C(v3, (uint64_t)(result + 40), (_DWORD *)result + 72, (__int128 *)(result + 292), 0xFFFFFFFFLL);
    v5 = objc_msgSend(objc_msgSend(*(id *)(v3 + 32), "vendor"), "proxyForService:", CFSTR("CLApplicationLifecycleManager"));
    if (v2[63] < 0)
      v4 = (_QWORD *)*v4;
    return (char *)objc_msgSend(v5, "launchApplication:requiringAuthForServiceMask:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v4), 2);
  }
  return result;
}

uint64_t sub_100918468()
{
  return 1;
}

uint64_t sub_100918470()
{
  return 1;
}

_QWORD *sub_100918478@<X0>(_DWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  char __str[32];

  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_1015A2E04(a2, __str);
}

BOOL sub_1009184F0(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned __int8 *a4, uint64_t a5, unsigned __int8 *a6)
{
  _BOOL8 result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  int v14;

  result = 1;
  if (*a3 <= 8u && ((1 << *a3) & 0x143) != 0)
  {
    v8 = a6[23];
    v9 = *((_QWORD *)a6 + 1);
    if ((v8 & 0x80u) == 0)
      v10 = a6[23];
    else
      v10 = *((_QWORD *)a6 + 1);
    v11 = a4[23];
    v12 = (char)v11;
    if ((v11 & 0x80u) != 0)
      v11 = *((_QWORD *)a4 + 1);
    if (v10 != v11)
      return v10 == 0;
    if (v12 >= 0)
      v13 = a4;
    else
      v13 = *(unsigned __int8 **)a4;
    if ((v8 & 0x80) == 0)
    {
      if (!a6[23])
        return result;
      while (*a6 == *v13)
      {
        ++a6;
        ++v13;
        if (!--v8)
          return 1;
      }
      return v10 == 0;
    }
    v14 = memcmp(*(const void **)a6, v13, *((_QWORD *)a6 + 1));
    v10 = v9;
    if (v14)
      return v10 == 0;
    return 1;
  }
  return result;
}

void sub_1009185B4(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5)
{
  NSObject *v8;
  void *v9;
  void *v10;
  const char *v11;
  std::string *v12;
  _DWORD v13[4];
  std::string buf;
  std::string v15;
  std::string v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[21];
  std::string v24;
  id v25;
  char v26[428];
  int v27;
  uint64_t v28;
  _BYTE v29[944];

  switch(*a3)
  {
    case 0:
      if (*(_DWORD *)(a4 + 408) == -1)
      {
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        v8 = qword_1022A0068;
        if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_ERROR))
        {
          LOWORD(buf.__r_.__value_.__l.__data_) = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Transtion, but prev state unknown", (uint8_t *)&buf, 2u);
        }
        if (sub_1001BFF7C(115, 0))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1022A0060 != -1)
            dispatch_once(&qword_1022A0060, &stru_10215E938);
          LOWORD(v13[0]) = 0;
          _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A0068, 16, "Transtion, but prev state unknown", v13, 2);
          v12 = (std::string *)v11;
          sub_100512490("Generic", 1, 0, 0, "void CLFenceManager::onMonitorNotification(int, const CLFenceMonitor_Type::Notification &, const CLFenceMonitor_Type::NotificationData &)", "%s\n", v11);
          if (v12 != &buf)
            free(v12);
        }
      }
      sub_100915BDC(a1, a3, a4, (int *)(a4 + 248), a5, (_OWORD *)(a4 + 252));
      break;
    case 1:
      sub_100915BDC(a1, a3, a4, (int *)(a4 + 248), a5, (_OWORD *)(a4 + 252));
      break;
    case 4:
      sub_100D30264(a1 + 3312, a4);
      break;
    case 5:
      if (sub_100D3A758(a1 + 112, a4))
      {
        sub_10091B98C((uint64_t)&buf);
        std::string::operator=(&buf, (const std::string *)a4);
        std::string::operator=(&v15, (const std::string *)(a4 + 24));
        std::string::operator=(&v16, (const std::string *)(a4 + 48));
        v21 = *(_OWORD *)(a4 + 136);
        v22 = *(_OWORD *)(a4 + 152);
        *(_OWORD *)v23 = *(_OWORD *)(a4 + 168);
        *(_QWORD *)&v23[13] = *(_QWORD *)(a4 + 181);
        v17 = *(_OWORD *)(a4 + 72);
        v18 = *(_OWORD *)(a4 + 88);
        v19 = *(_OWORD *)(a4 + 104);
        v20 = *(_OWORD *)(a4 + 120);
        std::string::operator=(&v24, (const std::string *)(a4 + 192));
        v9 = v25;
        v25 = *(id *)(a4 + 216);

        if (&buf != (std::string *)a4)
          sub_1002F3538(v26, *(char **)(a4 + 224), *(_QWORD *)(a4 + 232), (uint64_t)(*(_QWORD *)(a4 + 232) - *(_QWORD *)(a4 + 224)) >> 4);
        v28 = *(_QWORD *)(a4 + 416);
        v13[0] = 9;
        (*(void (**)(uint64_t, _DWORD *, std::string *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, v13, &buf, 0, 0xFFFFFFFFLL, 0);
        goto LABEL_18;
      }
      break;
    case 6:
      sub_10091B98C((uint64_t)&buf);
      memcpy(v29, (const void *)(a4 + 424), sizeof(v29));
      std::string::operator=(&buf, (const std::string *)a4);
      std::string::operator=(&v15, (const std::string *)(a4 + 24));
      std::string::operator=(&v16, (const std::string *)(a4 + 48));
      v21 = *(_OWORD *)(a4 + 136);
      v22 = *(_OWORD *)(a4 + 152);
      *(_OWORD *)v23 = *(_OWORD *)(a4 + 168);
      *(_QWORD *)&v23[13] = *(_QWORD *)(a4 + 181);
      v17 = *(_OWORD *)(a4 + 72);
      v18 = *(_OWORD *)(a4 + 88);
      v20 = *(_OWORD *)(a4 + 120);
      v19 = *(_OWORD *)(a4 + 104);
      std::string::operator=(&v24, (const std::string *)(a4 + 192));
      v10 = v25;
      v25 = *(id *)(a4 + 216);

      if (&buf != (std::string *)a4)
        sub_1002F3538(v26, *(char **)(a4 + 224), *(_QWORD *)(a4 + 232), (uint64_t)(*(_QWORD *)(a4 + 232) - *(_QWORD *)(a4 + 224)) >> 4);
      v27 = *(_DWORD *)(a4 + 248);
      v13[0] = 11;
      (*(void (**)(uint64_t, _DWORD *, std::string *, _QWORD, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, v13, &buf, 0, 0xFFFFFFFFLL, 0);
LABEL_18:
      sub_100115F78((uint64_t)&buf);
      break;
    default:
      return;
  }
}

void sub_100918A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100918A6C(uint64_t *a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v5;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  char *v20;
  const char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  char *v27;
  int v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  _BYTE buf[12];
  __int16 v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;

  v5 = *a3;
  if (*a3 == 2)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v11 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Fence: Got data download invalidated notification", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      LOWORD(v28) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: Got data download invalidated notification", &v28, 2);
      v22 = (char *)v21;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onDataDownloadNotification(int, const CLFenceDataDownloadManager_Type::Notification &, const CLFenceDataDownloadManager_Type::NotificationData &)", "%s\n", v21);
      if (v22 != buf)
        free(v22);
    }
    sub_100D40504((uint64_t)(a1 + 14));
  }
  else if (v5 == 1)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v12 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a4 + 71) >= 0)
        v13 = a4 + 48;
      else
        v13 = *(_QWORD *)(a4 + 48);
      if (*(char *)(a4 + 23) >= 0)
        v14 = a4;
      else
        v14 = *(_QWORD *)a4;
      v15 = a4 + 24;
      if (*(char *)(a4 + 47) < 0)
        v15 = *(_QWORD *)(a4 + 24);
      *(_DWORD *)buf = 136446723;
      *(_QWORD *)&buf[4] = v13;
      v35 = 2081;
      v36 = v14;
      v37 = 2081;
      v38 = v15;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#Warning Fence: Got data download failure notification for [%{public}s]/%{private}s/%{private}s", buf, 0x20u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      if (*(char *)(a4 + 71) >= 0)
        v23 = a4 + 48;
      else
        v23 = *(_QWORD *)(a4 + 48);
      if (*(char *)(a4 + 23) >= 0)
        v24 = a4;
      else
        v24 = *(_QWORD *)a4;
      v25 = a4 + 24;
      if (*(char *)(a4 + 47) < 0)
        v25 = *(_QWORD *)(a4 + 24);
      v28 = 136446723;
      v29 = v23;
      v30 = 2081;
      v31 = v24;
      v32 = 2081;
      v33 = v25;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "#Warning Fence: Got data download failure notification for [%{public}s]/%{private}s/%{private}s", &v28, 32);
      v27 = (char *)v26;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onDataDownloadNotification(int, const CLFenceDataDownloadManager_Type::Notification &, const CLFenceDataDownloadManager_Type::NotificationData &)", "%s\n", v26);
      if (v27 != buf)
        free(v27);
    }
    *(_QWORD *)buf = 0;
    sub_100D40348((uint64_t)(a1 + 14), (uint64_t *)a4, (uint64_t *)(a4 + 48), (uint64_t *)(a4 + 24), (double *)buf);
  }
  else if (!v5)
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v7 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
    {
      if (*(char *)(a4 + 71) >= 0)
        v8 = a4 + 48;
      else
        v8 = *(_QWORD *)(a4 + 48);
      if (*(char *)(a4 + 23) >= 0)
        v9 = a4;
      else
        v9 = *(_QWORD *)a4;
      if (*(char *)(a4 + 47) >= 0)
        v10 = a4 + 24;
      else
        v10 = *(_QWORD *)(a4 + 24);
      *(_DWORD *)buf = 136446723;
      *(_QWORD *)&buf[4] = v8;
      v35 = 2082;
      v36 = v9;
      v37 = 2081;
      v38 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: Got data downloaded notification for [%{public}s]/%{public}s/%{private}s", buf, 0x20u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      if (*(char *)(a4 + 71) >= 0)
        v16 = a4 + 48;
      else
        v16 = *(_QWORD *)(a4 + 48);
      if (*(char *)(a4 + 23) >= 0)
        v17 = a4;
      else
        v17 = *(_QWORD *)a4;
      if (*(char *)(a4 + 47) >= 0)
        v18 = a4 + 24;
      else
        v18 = *(_QWORD *)(a4 + 24);
      v28 = 136446723;
      v29 = v16;
      v30 = 2082;
      v31 = v17;
      v32 = 2081;
      v33 = v18;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: Got data downloaded notification for [%{public}s]/%{public}s/%{private}s", &v28, 32);
      v20 = (char *)v19;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onDataDownloadNotification(int, const CLFenceDataDownloadManager_Type::Notification &, const CLFenceDataDownloadManager_Type::NotificationData &)", "%s\n", v19);
      if (v20 != buf)
        free(v20);
    }
    *(_QWORD *)buf = CFAbsoluteTimeGetCurrent();
    sub_100D40348((uint64_t)(a1 + 14), (uint64_t *)a4, (uint64_t *)(a4 + 48), (uint64_t *)(a4 + 24), (double *)buf);
    if (!*(_BYTE *)(a4 + 248))
      sub_10091428C(a1);
    sub_100D1959C((uint64_t)(a1 + 43), a4);
  }
}

void sub_100919054(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  double Current;
  int v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  NSObject *v16;
  int v17;
  int v18;
  uint8_t *v19;
  uint64_t v20;
  _BYTE v21[24];
  uint8_t buf[4];
  _BOOL4 v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;

  if (*a3 == 4)
  {
    Current = CFAbsoluteTimeGetCurrent();
    v7 = *(_DWORD *)(a4 + 188);
    v8 = 3832;
    if (v7)
      v8 = 3824;
    *(double *)(a1 + v8) = Current;
    sub_100914200(a1, v7 != 0);
    sub_100D2E364(a1 + 3312);
    sub_100D31600(a1 + 3312);
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v9 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
    {
      v10 = *(_QWORD *)(a1 + 3832);
      v11 = *(_QWORD *)(a1 + 3824);
      *(_DWORD *)buf = 67240704;
      v23 = v7 != 0;
      v24 = 2050;
      v25 = v10;
      v26 = 2050;
      v27 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationLocationServicesStatus, enabled, %{public}d, StopTime, %{public}.1lf, StartTime, %{public}.1lf", buf, 0x1Cu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v12 = *(_QWORD *)(a1 + 3832);
      v13 = *(_QWORD *)(a1 + 3824);
      LODWORD(v20) = 67240704;
      HIDWORD(v20) = v7 != 0;
      *(_WORD *)v21 = 2050;
      *(_QWORD *)&v21[2] = v12;
      *(_WORD *)&v21[10] = 2050;
      *(_QWORD *)&v21[12] = v13;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence: Got kNotificationLocationServicesStatus, enabled, %{public}d, StopTime, %{public}.1lf, StartTime, %{public}.1lf", &v20, 28, v20, *(_OWORD *)v21, *(_QWORD *)&v21[16]);
LABEL_21:
      v19 = (uint8_t *)v14;
      sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v14);
      if (v19 != buf)
        free(v19);
    }
  }
  else
  {
    if (qword_1022A0060 != -1)
      dispatch_once(&qword_1022A0060, &stru_10215E938);
    v16 = qword_1022A0068;
    if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
    {
      v17 = *a3;
      *(_DWORD *)buf = 67240192;
      v23 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#Warning Got unknown client notification %{public}d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v18 = *a3;
      LODWORD(v20) = 67240192;
      HIDWORD(v20) = v18;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "#Warning Got unknown client notification %{public}d", &v20, 8, v20, *(_QWORD *)v21, *(_OWORD *)&v21[8]);
      goto LABEL_21;
    }
  }
}

void sub_1009193A0(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v4;
  NSObject *v6;
  unint64_t v7;
  double Current;
  uint64_t v9;
  uint64_t v10;
  double v11;
  NSObject *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  NSObject *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  const char *v24;
  char *v25;
  char *v26;
  char *v27;
  const std::string *v28;
  uint64_t *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  _BYTE *v34;
  void **v35;
  _BYTE *v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  const char *v42;
  char *v43;
  int v44;
  _BYTE *v45;
  void **v46;
  void **v47;
  char *v48;
  char *v49;
  NSObject *v50;
  NSObject *v51;
  _BOOL4 v52;
  NSObject *v53;
  NSObject *v54;
  unint64_t v55;
  NSObject *v56;
  uint64_t v57;
  const char *v58;
  char *v59;
  const char *v60;
  char *v61;
  unint64_t v62;
  const char *v63;
  char *v64;
  unint64_t v65;
  const char *v66;
  char *v67;
  const char *v68;
  char *v69;
  const char *v70;
  char *v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  int v75;
  int v76;
  void **v77;
  void **v78;
  NSObject *v79;
  uint64_t v80;
  void *v81[2];
  char v82;
  std::string v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  _BYTE __p[12];
  __int16 v88;
  _BYTE *v89;
  __int16 v90;
  void **v91;
  _BYTE __dst[12];
  __int16 v93;
  unint64_t v94;
  __int16 v95;
  void *v96;
  char v97;
  void *v98[2];
  char v99;
  char v100;
  void *v101;
  char v102;
  id v103;
  void *v104;
  void *v105;
  _BYTE buf[12];
  __int16 v107;
  _BYTE *v108;
  __int16 v109;
  _QWORD *v110;

  v4 = a4;
  switch(*a3)
  {
    case 0:
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v6 = qword_1022A0068;
      if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
      {
        v7 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3);
        *(_DWORD *)buf = 136315394;
        *(_QWORD *)&buf[4] = "onAuthorizationNotification";
        v107 = 2050;
        v108 = (_BYTE *)v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s, Got fence addition notification for %{public}ld fences", buf, 0x16u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        v62 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3);
        *(_DWORD *)__dst = 136315394;
        *(_QWORD *)&__dst[4] = "onAuthorizationNotification";
        v93 = 2050;
        v94 = v62;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "%s, Got fence addition notification for %{public}ld fences", __dst, 22);
        v64 = (char *)v63;
        sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v63);
        if (v64 != buf)
          free(v64);
      }
      Current = CFAbsoluteTimeGetCurrent();
      v84 = 0;
      v85 = 0;
      v86 = 0;
      v9 = *(_QWORD *)v4;
      v10 = *(_QWORD *)(v4 + 8);
      if (*(_QWORD *)v4 != v10)
      {
        v11 = Current;
        v4 = a1 + 112;
        do
        {
          if (sub_100D3A758(a1 + 112, v9))
          {
            if (qword_1022A0060 != -1)
              dispatch_once(&qword_1022A0060, &stru_10215E938);
            v12 = qword_1022A0068;
            if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
            {
              v13 = (_QWORD *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0)
                v13 = (_QWORD *)*v13;
              v14 = v9;
              if (*(char *)(v9 + 23) < 0)
                v14 = *(_QWORD *)v9;
              v15 = (_QWORD *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0)
                v15 = (_QWORD *)*v15;
              *(_DWORD *)buf = 136446723;
              *(_QWORD *)&buf[4] = v13;
              v107 = 2082;
              v108 = (_BYTE *)v14;
              v109 = 2081;
              v110 = v15;
              _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Fence [%{public}s]/%{public}s/%{private}s is authorized", buf, 0x20u);
            }
            if (sub_1001BFF7C(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v39 = (_QWORD *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0)
                v39 = (_QWORD *)*v39;
              v40 = v9;
              if (*(char *)(v9 + 23) < 0)
                v40 = *(_QWORD *)v9;
              v41 = (_QWORD *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0)
                v41 = (_QWORD *)*v41;
              *(_DWORD *)__dst = 136446723;
              *(_QWORD *)&__dst[4] = v39;
              v93 = 2082;
              v94 = v40;
              v95 = 2081;
              v96 = v41;
              LODWORD(v72) = 32;
              _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence [%{public}s]/%{public}s/%{private}s is authorized", __dst, v72);
              v43 = (char *)v42;
              sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v42);
              if (v43 != buf)
                free(v43);
            }
            if (*(_DWORD *)(v9 + 184) == -1)
            {
              sub_10190EFC0();
              abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/Fence/CLFenceManager.mm", 1313, "onAuthorizationNotification");
              __break(1u);
              goto LABEL_146;
            }
            if (*(double *)(v9 + 96) > 400.0
              || *(_BYTE *)(v9 + 188)
              || *(_DWORD *)(v9 + 180) == 2
              || *(_QWORD *)(v9 + 232) != *(_QWORD *)(v9 + 224)
              || (*(_BYTE *)(v9 + 160) & 0x20) != 0)
            {
              v26 = v85;
              if ((unint64_t)v85 >= v86)
              {
                v27 = (char *)sub_10091D4EC(&v84, (__int128 *)v9);
              }
              else
              {
                sub_1004E5748(v85, (__int128 *)v9);
                v27 = v26 + 248;
              }
              v85 = v27;
            }
            else
            {
              memset(&v83, 0, sizeof(v83));
              if (*(char *)(v9 + 71) < 0)
                v16 = *(_QWORD *)(v9 + 56);
              else
                v16 = *(unsigned __int8 *)(v9 + 71);
              if (v16)
                v28 = (const std::string *)(v9 + 48);
              else
                v28 = (const std::string *)v9;
              std::string::operator=(&v83, v28);
              *(_QWORD *)__dst = &v83;
              v29 = sub_10091D358((uint64_t **)(a1 + 3912), (const void **)&v83.__r_.__value_.__l.__data_, (uint64_t)&unk_101B9EB60, (__int128 **)__dst);
              if (sub_1004CF1F4((uint64_t)(v29 + 7), v11))
              {
                v30 = v85;
                if ((unint64_t)v85 >= v86)
                {
                  v31 = (char *)sub_10091D4EC(&v84, (__int128 *)v9);
                }
                else
                {
                  sub_1004E5748(v85, (__int128 *)v9);
                  v31 = v30 + 248;
                }
                v85 = v31;
              }
              else
              {
                sub_1004E5748(__dst, (__int128 *)v9);
                v100 = 1;
                if (qword_1022A0060 != -1)
                  dispatch_once(&qword_1022A0060, &stru_10215E938);
                v32 = qword_1022A0068;
                if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
                {
                  v75 = v99;
                  v77 = (void **)v98[0];
                  v79 = v32;
                  v33 = SHIBYTE(v95);
                  v73 = *(_BYTE **)__dst;
                  sub_100C3B9BC((uint64_t)__dst, __p);
                  v34 = __dst;
                  if (v33 < 0)
                    v34 = v73;
                  v35 = v98;
                  if (v75 < 0)
                    v35 = v77;
                  *(_DWORD *)buf = 136446723;
                  v36 = __p;
                  if (v90 < 0)
                    v36 = *(_BYTE **)__p;
                  *(_QWORD *)&buf[4] = v35;
                  v107 = 2082;
                  v108 = v34;
                  v109 = 2081;
                  v110 = v36;
                  _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEBUG, "#Warning throttle fine fence usage by client [%{public}s]/%{public}s, %{private}s", buf, 0x20u);
                  if (SHIBYTE(v90) < 0)
                    operator delete(*(void **)__p);
                }
                if (sub_1001BFF7C(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1022A0060 != -1)
                    dispatch_once(&qword_1022A0060, &stru_10215E938);
                  v76 = v99;
                  v78 = (void **)v98[0];
                  v80 = qword_1022A0068;
                  v44 = SHIBYTE(v95);
                  v74 = *(_BYTE **)__dst;
                  sub_100C3B9BC((uint64_t)__dst, v81);
                  v45 = __dst;
                  if (v44 < 0)
                    v45 = v74;
                  v46 = v98;
                  if (v76 < 0)
                    v46 = v78;
                  *(_DWORD *)__p = 136446723;
                  v47 = v81;
                  if (v82 < 0)
                    v47 = (void **)v81[0];
                  *(_QWORD *)&__p[4] = v46;
                  v88 = 2082;
                  v89 = v45;
                  v90 = 2081;
                  v91 = v47;
                  LODWORD(v72) = 32;
                  _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v80, 2, "#Warning throttle fine fence usage by client [%{public}s]/%{public}s, %{private}s", __p, v72);
                  v49 = v48;
                  if (v82 < 0)
                    operator delete(v81[0]);
                  sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v49);
                  if (v49 != buf)
                    free(v49);
                }
                v37 = v85;
                if ((unint64_t)v85 >= v86)
                {
                  v38 = (char *)sub_10091D4EC(&v84, (__int128 *)__dst);
                }
                else
                {
                  sub_1004E5748(v85, (__int128 *)__dst);
                  v38 = v37 + 248;
                }
                v85 = v38;
                if (v104)
                {
                  v105 = v104;
                  operator delete(v104);
                }

                if (v102 < 0)
                  operator delete(v101);
                if (v99 < 0)
                  operator delete(v98[0]);
                if (v97 < 0)
                  operator delete(v96);
                if (SHIBYTE(v95) < 0)
                  operator delete(*(void **)__dst);
              }
              if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v83.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            if (qword_1022A0060 != -1)
              dispatch_once(&qword_1022A0060, &stru_10215E938);
            v17 = qword_1022A0068;
            if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEBUG))
            {
              v18 = (_QWORD *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0)
                v18 = (_QWORD *)*v18;
              v19 = v9;
              if (*(char *)(v9 + 23) < 0)
                v19 = *(_QWORD *)v9;
              v20 = (_QWORD *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0)
                v20 = (_QWORD *)*v20;
              *(_DWORD *)buf = 136446723;
              *(_QWORD *)&buf[4] = v18;
              v107 = 2082;
              v108 = (_BYTE *)v19;
              v109 = 2081;
              v110 = v20;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Fence [%{public}s]/%{public}s/%{private}s is not authorized", buf, 0x20u);
            }
            if (sub_1001BFF7C(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1022A0060 != -1)
                dispatch_once(&qword_1022A0060, &stru_10215E938);
              v21 = (_QWORD *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0)
                v21 = (_QWORD *)*v21;
              v22 = v9;
              if (*(char *)(v9 + 23) < 0)
                v22 = *(_QWORD *)v9;
              v23 = (_QWORD *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0)
                v23 = (_QWORD *)*v23;
              *(_DWORD *)__dst = 136446723;
              *(_QWORD *)&__dst[4] = v21;
              v93 = 2082;
              v94 = v22;
              v95 = 2081;
              v96 = v23;
              LODWORD(v72) = 32;
              _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 2, "Fence [%{public}s]/%{public}s/%{private}s is not authorized", __dst, v72);
              v25 = (char *)v24;
              sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v24);
              if (v25 != buf)
                free(v25);
            }
          }
          v9 += 248;
        }
        while (v9 != v10);
      }
      sub_100913E98(a1, &v84);
      *(_QWORD *)buf = &v84;
      sub_10091BBB0((void ***)buf);
      break;
    case 1:
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v54 = qword_1022A0068;
      if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
      {
        v55 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3);
        *(_DWORD *)buf = 136315394;
        *(_QWORD *)&buf[4] = "onAuthorizationNotification";
        v107 = 2050;
        v108 = (_BYTE *)v55;
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "%s, Got fence removal notification for %{public}ld fences", buf, 0x16u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        v65 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3);
        *(_DWORD *)__dst = 136315394;
        *(_QWORD *)&__dst[4] = "onAuthorizationNotification";
        v93 = 2050;
        v94 = v65;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "%s, Got fence removal notification for %{public}ld fences", __dst, 22);
        v67 = (char *)v66;
        sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v66);
        if (v67 != buf)
          free(v67);
      }
      sub_100914044(a1, (unsigned __int8 **)v4, *(unsigned __int8 *)(v4 + 24));
      break;
    case 2:
      if (qword_1022A0060 != -1)
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v51 = qword_1022A0068;
      if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        *(_QWORD *)&buf[4] = "onAuthorizationNotification";
        _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "%s, Got fence reset notification", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        *(_DWORD *)__dst = 136315138;
        *(_QWORD *)&__dst[4] = "onAuthorizationNotification";
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "%s, Got fence reset notification", __dst);
        v61 = (char *)v60;
        sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v60);
        if (v61 != buf)
          free(v61);
      }
      v52 = sub_10019CFA0() == 1;
      sub_100D16FB4(a1 + 344, v52);
      sub_100913CE4(a1);
      break;
    case 3:
      if (*(_BYTE *)(a4 + 25))
      {
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        v53 = qword_1022A0068;
        if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          *(_QWORD *)&buf[4] = "onAuthorizationNotification";
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "%s, Got fence enable notification", buf, 0xCu);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0060 != -1)
            dispatch_once(&qword_1022A0060, &stru_10215E938);
          *(_DWORD *)__dst = 136315138;
          *(_QWORD *)&__dst[4] = "onAuthorizationNotification";
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "%s, Got fence enable notification", __dst);
          v69 = (char *)v68;
          sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v68);
          if (v69 != buf)
            free(v69);
        }
        sub_100D16FB4(a1 + 344, 1);
        sub_1009136C0(a1, 0, 1, 0);
      }
      else
      {
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        v56 = qword_1022A0068;
        if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          *(_QWORD *)&buf[4] = "onAuthorizationNotification";
          _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "%s, Got fence disable notification", buf, 0xCu);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0060 != -1)
            dispatch_once(&qword_1022A0060, &stru_10215E938);
          *(_DWORD *)__dst = 136315138;
          *(_QWORD *)&__dst[4] = "onAuthorizationNotification";
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "%s, Got fence disable notification", __dst);
          v71 = (char *)v70;
          sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v70);
          if (v71 != buf)
            free(v71);
        }
        v57 = a1 + 344;
        sub_100D16FB4(v57, 0);
        sub_100D1758C(v57);
      }
      break;
    case 4:
      if (qword_1022A0060 != -1)
LABEL_146:
        dispatch_once(&qword_1022A0060, &stru_10215E938);
      v50 = qword_1022A0068;
      if (os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        *(_QWORD *)&buf[4] = "onAuthorizationNotification";
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "%s, Got fence failure notification", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0060 != -1)
          dispatch_once(&qword_1022A0060, &stru_10215E938);
        *(_DWORD *)__dst = 136315138;
        *(_QWORD *)&__dst[4] = "onAuthorizationNotification";
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0068, 0, "%s, Got fence failure notification", __dst);
        v59 = (char *)v58;
        sub_100512490("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v58);
        if (v59 != buf)
          free(v59);
      }
      sub_100915604(a1, (_QWORD *)v4);
      break;
    default:
      return;
  }
}

void sub_10091A5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a70;

  sub_1004E2BD0((uint64_t)&a38);
  if (a30 < 0)
    operator delete(__p);
  a70 = (uint64_t)&a31;
  sub_10091BBB0((void ***)&a70);
  _Unwind_Resume(a1);
}

uint64_t sub_10091A674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v3 = atomic_load((unsigned __int8 *)&qword_1022A5738);
  if ((v3 & 1) == 0)
  {
    v9 = a1;
    v8 = a3;
    v7 = a2;
    v5 = __cxa_guard_acquire(&qword_1022A5738);
    a2 = v7;
    a3 = v8;
    v6 = v5;
    a1 = v9;
    if (v6)
    {
      qword_1022A5720 = 0;
      *(_QWORD *)algn_1022A5728 = 0;
      qword_1022A5730 = 0;
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1022A5720, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1022A5738);
      a1 = v9;
      a2 = v7;
      a3 = v8;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(_QWORD *)a1 + 96))(a1, a2, a3, &qword_1022A5720);
}

BOOL sub_10091A71C(uint64_t a1, int a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  uint64_t *v9;
  NSObject *v10;
  _QWORD *v11;
  _BOOL4 v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t *v21;
  _QWORD *v22;
  const char *v23;
  uint8_t *v24;
  int v25;
  _QWORD *v26;
  __int16 v27;
  int v28;
  uint8_t buf[4];
  _QWORD *v30;
  __int16 v31;
  int v32;

  v5 = *(_QWORD *)(a1 + 88);
  if (!v5)
    goto LABEL_11;
  v6 = a1 + 88;
  do
  {
    v7 = *(_DWORD *)(v5 + 32);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (uint64_t *)v5;
    else
      v9 = (uint64_t *)(v5 + 8);
    if (!v8)
      v6 = v5;
    v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    v16 = *(_QWORD *)(v6 + 48);
    v14 = v6 + 48;
    v15 = v16;
    if (!v16)
      goto LABEL_29;
    v17 = *a3;
    v18 = v14;
    do
    {
      v19 = *(_DWORD *)(v15 + 28);
      v20 = v19 < v17;
      if (v19 >= v17)
        v21 = (uint64_t *)v15;
      else
        v21 = (uint64_t *)(v15 + 8);
      if (!v20)
        v18 = v15;
      v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28))
LABEL_29:
      v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v10 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_FAULT))
    {
      v11 = (_QWORD *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        v11 = (_QWORD *)*v11;
      *(_DWORD *)buf = 136446466;
      v30 = v11;
      v31 = 1026;
      v32 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    v12 = sub_1001BFF7C(115, 0);
    result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0220 != -1)
        dispatch_once(&qword_1022A0220, &stru_10215E918);
      v22 = (_QWORD *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        v22 = (_QWORD *)*v22;
      v25 = 136446466;
      v26 = v22;
      v27 = 1026;
      v28 = a2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0228, 17, "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      v24 = (uint8_t *)v23;
      sub_100512490("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::clientRegistered(int, const Notification_T &) [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v23);
      if (v24 != buf)
        free(v24);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10091A99C(uint64_t a1, int *a2, __int128 *a3)
{
  uint64_t **v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  int v10;
  __int128 v11;
  int *v12;

  sub_10091C3B4(a3, &v11);
  v10 = *a2;
  v12 = &v10;
  v5 = sub_1004A5DC8((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_101B9EB60, &v12);
  sub_1002B7674((uint64_t)(v5 + 8), &v11);
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
  if (*((_QWORD *)&v11 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return 1;
}

void sub_10091AA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10091AA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v14[248];
  char v15[89];
  int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  unint64_t v23;
  __int128 v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  int v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  unint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  int v116;

  sub_1001157C0(v14);
  sub_1001157C0(v15);
  v16 = 0xFFFF;
  v17 = 0u;
  __asm { FMOV            V1.2D, #-1.0 }
  v18 = xmmword_101BAFC90;
  v19 = _Q1;
  v20 = _Q1;
  v21 = _Q1;
  v22 = 0;
  v23 = 0xBFF0000000000000;
  v24 = 0u;
  v25 = 0;
  v26 = 0xBFF0000000000000;
  v27 = 0x7FFFFFFF;
  v29 = 0u;
  v28 = 0;
  v30 = 0;
  v32 = 1;
  v31 = 0u;
  v33 = 0xBFF0000000000000;
  v34 = _Q1;
  v35 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v40 = xmmword_101BAFC90;
  v41 = 0xFFFF;
  v43 = 0;
  v42 = 0;
  v44 = xmmword_101BAFC90;
  v45 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v48 = 0;
  v49 = 0xBFF0000000000000;
  v51 = 0;
  v50 = 0;
  v52 = 0;
  v53 = 0xBFF0000000000000;
  v54 = 0x7FFFFFFF;
  v58 = 0;
  v56 = 0;
  v55 = 0;
  v57 = 0;
  v59 = 0xFFFF;
  v61 = 0;
  v60 = 0;
  v62 = xmmword_101BAFC90;
  v63 = _Q1;
  v64 = _Q1;
  v65 = _Q1;
  v66 = 0;
  v67 = 0xBFF0000000000000;
  v68 = 0;
  v69 = 0;
  v70 = 0;
  v71 = 0xBFF0000000000000;
  v72 = 0x7FFFFFFF;
  v73 = 0;
  v74 = 0;
  v75 = 0;
  v76 = 0;
  v77 = 0xFFFF;
  v79 = 0;
  v78 = 0;
  v80 = xmmword_101BAFC90;
  v81 = _Q1;
  v82 = _Q1;
  v83 = _Q1;
  v84 = 0;
  v85 = 0xBFF0000000000000;
  v87 = 0;
  v86 = 0;
  v88 = 0;
  v89 = 0xBFF0000000000000;
  v90 = 0x7FFFFFFF;
  v92 = 0;
  v91 = 0;
  v94 = 0;
  v93 = 0;
  v114 = 0u;
  v115 = 0u;
  v112 = 0u;
  v113 = 0u;
  v110 = 0u;
  v111 = 0u;
  v108 = 0u;
  v109 = 0u;
  v106 = 0u;
  v107 = 0u;
  v104 = 0u;
  v105 = 0u;
  v102 = 0u;
  v103 = 0u;
  v100 = 0u;
  v101 = 0u;
  v98 = 0u;
  v99 = 0u;
  v96 = 0u;
  v97 = 0u;
  v95 = 0u;
  v116 = 0;
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1 + 152))(a1, a2, v14, a3, a4, 0);
  return sub_100115F78((uint64_t)v14);
}

void sub_10091ACB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100115F78((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10091ACD4(uint64_t a1, signed __int32 *a2, __int128 *a3, int a4)
{
  NSObject *v8;
  NSObject *v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  __n128 *v12;
  signed __int32 v13;
  __n128 *v14;
  signed __int32 v15;
  BOOL v16;
  __n128 **v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  os_activity_scope_state_s state;
  uint64_t buf;
  _BYTE v29[20];
  __int16 v30;
  _QWORD *v31;
  __int16 v32;
  std::__shared_weak_count *v33;
  char **v34;
  char *v35[3];
  std::__shared_weak_count *v36;

  if (!*(_BYTE *)(a1 + 108))
  {
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v8, &state);

    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v9 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      v10 = (_QWORD *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        v10 = (_QWORD *)*v10;
      v11 = (std::__shared_weak_count *)*a2;
      buf = 68289794;
      *(_WORD *)v29 = 2082;
      *(_QWORD *)&v29[2] = "";
      *(_WORD *)&v29[10] = 2082;
      *(_QWORD *)&v29[12] = "activity";
      v30 = 2082;
      v31 = v10;
      v32 = 2050;
      v33 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", (uint8_t *)&buf, 0x30u);
    }
    v12 = *(__n128 **)(a1 + 64);
    if (!v12)
      goto LABEL_18;
    v13 = *a2;
    v14 = (__n128 *)(a1 + 64);
    do
    {
      v15 = v12[2].n128_i32[0];
      v16 = v15 < v13;
      if (v15 >= v13)
        v17 = (__n128 **)v12;
      else
        v17 = (__n128 **)&v12->n128_u64[1];
      if (!v16)
        v14 = v12;
      v12 = *v17;
    }
    while (*v17);
    if (v14 == (__n128 *)(a1 + 64) || v13 < (signed __int32)v14[2].n128_u32[0])
    {
LABEL_18:
      v34 = v35;
      memset(v35, 0, sizeof(v35));
      v36 = 0;
      sub_1007A2608((uint64_t)&buf, a2, (uint64_t)&v34);
      v14 = sub_1007A24CC((uint64_t **)(a1 + 56), (__n128 *)&buf);
      v18 = v33;
      if (v33)
      {
        p_shared_owners = (unint64_t *)&v33->__shared_owners_;
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      sub_1007A28B0((uint64_t)v29, *(char **)&v29[8]);
      v21 = v36;
      if (v36)
      {
        v22 = (unint64_t *)&v36->__shared_owners_;
        do
          v23 = __ldaxr(v22);
        while (__stlxr(v23 - 1, v22));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      sub_1007A28B0((uint64_t)&v34, v35[0]);
    }
    if (a4)
    {
      sub_10091C3B4(a3, &buf);
      sub_1002B7674((uint64_t)&v14[4], (__int128 *)&buf);
      v24 = *(std::__shared_weak_count **)v29;
      if (*(_QWORD *)v29)
      {
        v25 = (unint64_t *)(*(_QWORD *)v29 + 8);
        do
          v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
    }
    else
    {
      sub_100346F9C((__n128 *)v14[4].n128_u64);
    }
    if (v14[3].n128_u64[1])
      sub_10091BE4C();
    os_activity_scope_leave(&state);
  }
}

void sub_10091B2F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_10091B33C(uint64_t a1)
{
  NSObject *v2;
  _QWORD *v3;
  _QWORD *v4;
  const char *v5;
  uint8_t *v6;
  NSObject *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  NSObject *v13;
  _QWORD *v14;
  int v15;
  int v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  _QWORD *v20;
  int v21;
  int v22;
  const char *v23;
  uint8_t *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  const char *v29;
  uint8_t *v30;
  int v31;
  int v32;
  _QWORD *v33;
  __int16 v34;
  _QWORD v35[2];
  uint8_t buf[4];
  _QWORD *v37;
  __int16 v38;
  _QWORD v39[202];

  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v2 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      v3 = (_QWORD *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        v3 = (_QWORD *)*v3;
      *(_DWORD *)buf = 136315138;
      v37 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0220 != -1)
        dispatch_once(&qword_1022A0220, &stru_10215E918);
      v4 = (_QWORD *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        v4 = (_QWORD *)*v4;
      v32 = 136315138;
      v33 = v4;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0228, 2, "%s; already shutdown; not listing clients",
        (const char *)&v32);
      v6 = (uint8_t *)v5;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v5);
      if (v6 != buf)
        free(v6);
    }
  }
  else
  {
    if (qword_1022A0220 != -1)
      dispatch_once(&qword_1022A0220, &stru_10215E918);
    v7 = qword_1022A0228;
    if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
    {
      v8 = (_QWORD *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        v8 = (_QWORD *)*v8;
      v9 = *(_QWORD *)(a1 + 96);
      *(_DWORD *)buf = 136315394;
      v37 = v8;
      v38 = 2048;
      v39[0] = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0220 != -1)
        dispatch_once(&qword_1022A0220, &stru_10215E918);
      v27 = (_QWORD *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0)
        v27 = (_QWORD *)*v27;
      v28 = *(_QWORD *)(a1 + 96);
      v32 = 136315394;
      v33 = v27;
      v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0228, 2, "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      v30 = (uint8_t *)v29;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v29);
      if (v30 != buf)
        free(v30);
    }
    v10 = *(_QWORD **)(a1 + 80);
    if (v10 != (_QWORD *)(a1 + 88))
    {
      v11 = (_QWORD *)(a1 + 8);
      do
      {
        v12 = (_QWORD *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1022A0220 != -1)
              dispatch_once(&qword_1022A0220, &stru_10215E918);
            v13 = qword_1022A0228;
            if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_DEBUG))
            {
              v14 = (_QWORD *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0)
                v14 = (_QWORD *)*v11;
              v15 = *((_DWORD *)v10 + 8);
              v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)buf = 136315650;
              v37 = v14;
              v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_1001BFF7C(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1022A0220 != -1)
                dispatch_once(&qword_1022A0220, &stru_10215E918);
              v20 = (_QWORD *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0)
                v20 = (_QWORD *)*v11;
              v21 = *((_DWORD *)v10 + 8);
              v22 = *((_DWORD *)v12 + 7);
              v32 = 136315650;
              v33 = v20;
              v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0228, 2, "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              v24 = (uint8_t *)v23;
              sub_100512490("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v23);
              if (v24 != buf)
                free(v24);
            }
            v17 = (_QWORD *)v12[1];
            if (v17)
            {
              do
              {
                v18 = v17;
                v17 = (_QWORD *)*v17;
              }
              while (v17);
            }
            else
            {
              do
              {
                v18 = (_QWORD *)v12[2];
                v19 = *v18 == (_QWORD)v12;
                v12 = v18;
              }
              while (!v19);
            }
            v12 = v18;
          }
          while (v18 != v10 + 6);
        }
        v25 = (_QWORD *)v10[1];
        if (v25)
        {
          do
          {
            v26 = v25;
            v25 = (_QWORD *)*v25;
          }
          while (v25);
        }
        else
        {
          do
          {
            v26 = (_QWORD *)v10[2];
            v19 = *v26 == (_QWORD)v10;
            v10 = v26;
          }
          while (!v19);
        }
        v10 = v26;
      }
      while (v26 != (_QWORD *)(a1 + 88));
    }
  }
}

id sub_10091B8E8(uint64_t a1, uint64_t a2, void *a3)
{
  int v3;
  id result;
  int v6;

  v3 = a2;
  result = sub_10091C4E0(a3, a2);
  if (result)
  {
    v6 = v3;
    return (id)(*(uint64_t (**)(_QWORD, int *, id, _QWORD))(a1 + 24))(0, &v6, result, *(_QWORD *)(a1 + 32));
  }
  return result;
}

void sub_10091B934(id a1)
{
  qword_1022A0228 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10091B960(id a1)
{
  qword_1022A0068 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

uint64_t sub_10091B98C(uint64_t a1)
{
  char *v2;

  v2 = sub_1001157C0((char *)a1);
  sub_1001157C0(v2 + 248);
  *(_DWORD *)(a1 + 496) = 0xFFFF;
  *(_QWORD *)(a1 + 508) = 0;
  *(_QWORD *)(a1 + 500) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 516) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 532) = _Q0;
  *(_OWORD *)(a1 + 548) = _Q0;
  *(_OWORD *)(a1 + 564) = _Q0;
  *(_DWORD *)(a1 + 580) = 0;
  *(_QWORD *)(a1 + 584) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 600) = 0;
  *(_QWORD *)(a1 + 592) = 0;
  *(_DWORD *)(a1 + 608) = 0;
  *(_QWORD *)(a1 + 612) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 620) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 624) = 0;
  *(_QWORD *)(a1 + 640) = 0;
  *(_QWORD *)(a1 + 632) = 0;
  *(_BYTE *)(a1 + 648) = 0;
  *(_BYTE *)(a1 + 672) = 1;
  *(_QWORD *)(a1 + 680) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 688) = _Q0;
  *(_OWORD *)(a1 + 704) = _Q0;
  *(_OWORD *)(a1 + 720) = _Q0;
  *(_OWORD *)(a1 + 736) = _Q0;
  *(_OWORD *)(a1 + 752) = _Q0;
  *(_OWORD *)(a1 + 768) = _Q0;
  *(_QWORD *)(a1 + 784) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 800) = 0xFFFF;
  *(_QWORD *)(a1 + 812) = 0;
  *(_QWORD *)(a1 + 804) = 0;
  *(_OWORD *)(a1 + 820) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 836) = _Q0;
  *(_OWORD *)(a1 + 852) = _Q0;
  *(_OWORD *)(a1 + 868) = _Q0;
  *(_DWORD *)(a1 + 884) = 0;
  *(_QWORD *)(a1 + 888) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 904) = 0;
  *(_QWORD *)(a1 + 896) = 0;
  *(_DWORD *)(a1 + 912) = 0;
  *(_QWORD *)(a1 + 916) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 924) = 0x7FFFFFFF;
  *(_BYTE *)(a1 + 952) = 0;
  *(_QWORD *)(a1 + 936) = 0;
  *(_QWORD *)(a1 + 928) = 0;
  *(_QWORD *)(a1 + 944) = 0;
  *(_DWORD *)(a1 + 956) = 0xFFFF;
  *(_QWORD *)(a1 + 968) = 0;
  *(_QWORD *)(a1 + 960) = 0;
  *(_OWORD *)(a1 + 976) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 992) = _Q0;
  *(_OWORD *)(a1 + 1008) = _Q0;
  *(_OWORD *)(a1 + 1024) = _Q0;
  *(_DWORD *)(a1 + 1040) = 0;
  *(_QWORD *)(a1 + 1044) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 1052) = 0;
  *(_QWORD *)(a1 + 1060) = 0;
  *(_DWORD *)(a1 + 1068) = 0;
  *(_QWORD *)(a1 + 1072) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 1080) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 1084) = 0;
  *(_QWORD *)(a1 + 1092) = 0;
  *(_BYTE *)(a1 + 1108) = 0;
  *(_QWORD *)(a1 + 1100) = 0;
  *(_DWORD *)(a1 + 1112) = 0xFFFF;
  *(_QWORD *)(a1 + 1124) = 0;
  *(_QWORD *)(a1 + 1116) = 0;
  *(_OWORD *)(a1 + 1132) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 1148) = _Q0;
  *(_OWORD *)(a1 + 1164) = _Q0;
  *(_OWORD *)(a1 + 1180) = _Q0;
  *(_DWORD *)(a1 + 1196) = 0;
  *(_QWORD *)(a1 + 1200) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 1216) = 0;
  *(_QWORD *)(a1 + 1208) = 0;
  *(_DWORD *)(a1 + 1224) = 0;
  *(_QWORD *)(a1 + 1228) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 1236) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 1248) = 0;
  *(_QWORD *)(a1 + 1240) = 0;
  *(_BYTE *)(a1 + 1264) = 0;
  *(_QWORD *)(a1 + 1256) = 0;
  return a1;
}

void sub_10091BB10(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1004E2BD0(v1);
  _Unwind_Resume(a1);
}

void sub_10091BB24(id a1)
{
  qword_1022A0248 = (uint64_t)os_log_create("com.apple.locationd.Core", "Simulation");
}

uint64_t sub_10091BB50(uint64_t a1)
{

  *(_QWORD *)(a1 + 24) = 0;
  return a1;
}

uint64_t sub_10091BB80(uint64_t a1)
{

  *(_QWORD *)(a1 + 16) = 0;
  return a1;
}

void sub_10091BBB0(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 248;
        sub_10091BC34((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_10091BC34(uint64_t a1, uint64_t a2)
{
  void *v3;

  v3 = *(void **)(a2 + 224);
  if (v3)
  {
    *(_QWORD *)(a2 + 232) = v3;
    operator delete(v3);
  }

  if (*(char *)(a2 + 215) < 0)
    operator delete(*(void **)(a2 + 192));
  if (*(char *)(a2 + 71) < 0)
    operator delete(*(void **)(a2 + 48));
  if (*(char *)(a2 + 47) < 0)
    operator delete(*(void **)(a2 + 24));
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
}

void sub_10091BCB4(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_10091BCB4(a1, *a2);
    sub_10091BCB4(a1, a2[1]);
    sub_10091BCFC((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_10091BCFC(uint64_t a1)
{
  void *v2;

  sub_10091BB50(a1 + 248);
  v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(_QWORD *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0)
    operator delete(*(void **)(a1 + 192));
  if (*(char *)(a1 + 71) < 0)
    operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10091BD80(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_10091BD80(a1, *a2);
    sub_10091BD80(a1, a2[1]);
    sub_10091BDC8((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_10091BDC8(uint64_t a1)
{
  void *v2;

  sub_10091BB80(a1 + 248);
  v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(_QWORD *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0)
    operator delete(*(void **)(a1 + 192));
  if (*(char *)(a1 + 71) < 0)
    operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10091BE4C()
{
  operator new();
}

void sub_10091BEE0()
{
  operator delete();
}

void sub_10091BF04(_QWORD *a1, int *a2, void *a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v8;
  _QWORD *v9;
  int v10;
  BOOL v11;
  uint64_t *v12;
  id v13;
  _QWORD *v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int v20;
  BOOL v21;
  uint64_t *v22;
  int v23;
  NSObject *v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  int v30;
  BOOL v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int v37;
  BOOL v38;
  uint64_t *v39;
  int v40;
  BOOL v41;
  uint64_t *v42;
  _QWORD *v43;
  BOOL v44;
  _QWORD *v45;
  int v46;
  const char *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD *v51;
  int v52;
  _QWORD *v53;
  __int16 v54;
  int v55;
  uint8_t buf[4];
  _QWORD *v57;
  __int16 v58;
  int v59;

  if (!*((_BYTE *)a1 + 108))
  {
    v5 = a1 + 8;
    v4 = a1[8];
    if (v4)
    {
      v8 = *a2;
      v9 = a1 + 8;
      do
      {
        v10 = *(_DWORD *)(v4 + 32);
        v11 = v10 < v8;
        if (v10 >= v8)
          v12 = (uint64_t *)v4;
        else
          v12 = (uint64_t *)(v4 + 8);
        if (!v11)
          v9 = (_QWORD *)v4;
        v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        v51 = v9;
        v13 = sub_10091C4E0(a3, (uint64_t)a2);
        (*(void (**)(_QWORD *, int *, id, _QWORD *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        v14 = (_QWORD *)v9[5];
        if (v14 != v9 + 6)
        {
          v15 = a1 + 11;
          v16 = a1 + 1;
          do
          {
            v17 = *v15;
            if (!*v15)
              goto LABEL_25;
            v18 = *((_DWORD *)v14 + 8);
            v19 = a1 + 11;
            do
            {
              v20 = *(_DWORD *)(v17 + 32);
              v21 = v20 < v18;
              if (v20 >= v18)
                v22 = (uint64_t *)v17;
              else
                v22 = (uint64_t *)(v17 + 8);
              if (!v21)
                v19 = (uint64_t *)v17;
              v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              v50 = v19;
              sub_10091C2D8(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              v27 = a1[8];
              if (!v27)
                return;
              v28 = *a2;
              v29 = v5;
              do
              {
                v30 = *(_DWORD *)(v27 + 32);
                v31 = v30 < v28;
                if (v30 >= v28)
                  v32 = (uint64_t *)v27;
                else
                  v32 = (uint64_t *)(v27 + 8);
                if (!v31)
                  v29 = (_QWORD *)v27;
                v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8))
                return;
              v51 = v29;
              v34 = v29[6];
              v14 = v29 + 6;
              v33 = v34;
              if (v34)
              {
                v35 = v14;
                v36 = v33;
                do
                {
                  v37 = *(_DWORD *)(v36 + 32);
                  v38 = v37 < v23;
                  if (v37 >= v23)
                    v39 = (uint64_t *)v36;
                  else
                    v39 = (uint64_t *)(v36 + 8);
                  if (!v38)
                    v35 = (_QWORD *)v36;
                  v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    v40 = *(_DWORD *)(v33 + 32);
                    v41 = v23 < v40;
                    if (v23 >= v40)
                      v42 = (uint64_t *)(v33 + 8);
                    else
                      v42 = (uint64_t *)v33;
                    if (v41)
                      v14 = (_QWORD *)v33;
                    v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  v43 = (_QWORD *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      v14 = v43;
                      v43 = (_QWORD *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      v14 = (_QWORD *)v35[2];
                      v44 = *v14 == (_QWORD)v35;
                      v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              v50 = a1 + 11;
              if (qword_1022A0220 != -1)
                dispatch_once(&qword_1022A0220, &stru_10215E918);
              v24 = qword_1022A0228;
              if (os_log_type_enabled((os_log_t)qword_1022A0228, OS_LOG_TYPE_FAULT))
              {
                v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0)
                  v25 = (_QWORD *)*v16;
                v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)buf = 136446466;
                v57 = v25;
                v58 = 1026;
                v59 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_1001BFF7C(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1022A0220 != -1)
                  dispatch_once(&qword_1022A0220, &stru_10215E918);
                v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0)
                  v45 = (_QWORD *)*v16;
                v46 = *((_DWORD *)v14 + 8);
                v52 = 136446466;
                v53 = v45;
                v54 = 1026;
                v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0228, 17, "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                v48 = (uint8_t *)v47;
                sub_100512490("Generic", 1, 0, 0, "void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v47);
                if (v48 != buf)
                  free(v48);
              }
            }
          }
          while (v14 != v51 + 6);
        }
      }
    }
  }
}

_BYTE *sub_10091C2D8(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  _BYTE *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t **v11;
  uint64_t **v12;
  uint64_t v13;
  int *v14;

  if (!result[108])
  {
    v7 = result;
    v8 = *(unsigned int *)(*(_QWORD *)a2 + 32);
    LODWORD(v13) = *(_DWORD *)(*(_QWORD *)a3 + 32);
    v9 = sub_10091C4E0(a4, a2);
    v10 = *(_QWORD *)a3 + 80;
    v11 = (uint64_t **)(*(_QWORD *)a3 + 40);
    v14 = (int *)(*(_QWORD *)a2 + 32);
    v12 = sub_1000BC378(v11, v14, (uint64_t)&unk_101B9EB60, &v14);
    result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(_QWORD *)v7 + 192))(v7, v8, &v13, v9, v10, v12 + 5);
    if ((_DWORD)result)
      return objc_msgSend(*(id *)(*(_QWORD *)a2 + 64), "onNotification:withData:", *(unsigned int *)(*(_QWORD *)a3 + 32), a4, v13);
  }
  return result;
}

uint64_t sub_10091C3B4@<X0>(__int128 *a1@<X1>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t result;

  v4 = (char *)operator new(0x660uLL);
  result = sub_10091C40C((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_10091C3F8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10091C40C(uint64_t a1, __int128 *a2)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_10215EA68;
  *(_QWORD *)(a1 + 8) = 0;
  sub_1008A44AC((char *)(a1 + 24), a2);
  return a1;
}

void sub_10091C444(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10091C458(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10215EA68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10091C46C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10215EA68;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_10091C4A0(uint64_t a1)
{
  return sub_100115F78(a1 + 24);
}

uint64_t sub_10091C4AC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    sub_100115F78(result);
    operator delete();
  }
  return result;
}

id sub_10091C4E0(void *a1, uint64_t a2)
{
  uint64_t v3;

  v3 = objc_opt_class(CLCppContainer, a2);
  if ((objc_opt_isKindOfClass(a1, v3) & 1) != 0)
    return sub_10091C52C(a1);
  else
    return 0;
}

id sub_10091C52C(void *a1)
{
  id v2;
  NSObject *v3;
  const char *v4;
  NSObject *v6;
  uint8_t *v7;
  uint64_t v8;
  uint8_t buf[4];
  id v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  unint64_t v14;

  v2 = objc_msgSend(a1, "binaryVersion");
  objc_msgSend(a1, "sizeOfType");
  if (!v2)
    return objc_msgSend(a1, "cppObjectPtr");
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_10229FC30 != -1)
      dispatch_once(&qword_10229FC30, &stru_10215EAA8);
    v3 = qword_10229FC38;
    if (os_log_type_enabled((os_log_t)qword_10229FC38, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218498;
      v10 = v2;
      v11 = 2048;
      v12 = 0;
      v13 = 2080;
      v14 = 0x8000000101BE7478 & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
    }
    if (!sub_1001BFF7C(115, 0))
      return 0;
    bzero(buf, 0x65CuLL);
    if (qword_10229FC30 != -1)
      dispatch_once(&qword_10229FC30, &stru_10215EAA8);
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    v4 = (const char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC38, 16, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", &v8, 32, v8);
  }
  else
  {
    if (qword_10229FC30 != -1)
      dispatch_once(&qword_10229FC30, &stru_10215EAA8);
    v6 = qword_10229FC38;
    if (os_log_type_enabled((os_log_t)qword_10229FC38, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134218498;
      v10 = v2;
      v11 = 2048;
      v12 = 0;
      v13 = 2080;
      v14 = 0x8000000101BE7478 & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
    }
    if (!sub_1001BFF7C(115, 0))
      return 0;
    bzero(buf, 0x65CuLL);
    if (qword_10229FC30 != -1)
      dispatch_once(&qword_10229FC30, &stru_10215EAA8);
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    v4 = (const char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FC38, 17, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", &v8, 32, v8);
  }
  v7 = (uint8_t *)v4;
  sub_100512490("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLFenceManager_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]", "%s\n", v4);
  if (v7 != buf)
    free(v7);
  return 0;
}

void sub_10091C8D8(id a1)
{
  qword_10229FC38 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

char *sub_10091C904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  return sub_10091C98C((char *)a2, *(__int128 **)(a1 + 32), *(__int128 **)(a1 + 40), 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 3));
}

char *sub_10091C934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v2 = a1 + 32;
  *(_QWORD *)(v2 + 16) = 0;
  return sub_10091C98C((char *)v2, *(__int128 **)(a2 + 32), *(__int128 **)(a2 + 40), 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3));
}

void sub_10091C964(uint64_t a1)
{
  void **v1;

  v1 = (void **)(a1 + 32);
  sub_10091BBB0(&v1);
}

char *sub_10091C98C(char *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  char *v6;

  if (a4)
  {
    v6 = result;
    sub_10091CA10(result, a4);
    result = sub_10091CAAC((uint64_t)(v6 + 16), a2, a3, *((char **)v6 + 1));
    *((_QWORD *)v6 + 1) = result;
  }
  return result;
}

void sub_10091C9F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_10091BBB0(&a9);
  _Unwind_Resume(a1);
}

char *sub_10091CA10(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x108421084210843)
    sub_100259694();
  result = (char *)sub_10091CA64((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[248 * v4];
  return result;
}

void *sub_10091CA64(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x108421084210843)
    sub_10025955C();
  return operator new(248 * a2);
}

char *sub_10091CAAC(uint64_t a1, __int128 *a2, __int128 *a3, char *__dst)
{
  char *v4;
  __int128 *v6;
  _QWORD v8[3];
  char v9;
  char *v10;
  char *v11;

  v4 = __dst;
  v10 = __dst;
  v11 = __dst;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_1004E5748(v4, v6);
      v6 = (__int128 *)((char *)v6 + 248);
      v4 = v11 + 248;
      v11 += 248;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_10091CB4C((uint64_t)v8);
  return v4;
}

void sub_10091CB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10091CB4C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_10091CB4C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_10091CB80((uint64_t *)a1);
  return a1;
}

void sub_10091CB80(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 248;
      sub_10091BC34(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t *sub_10091CBD0(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)sub_10091CC78((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    sub_10091CD08((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000145B0(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_10091CE8C((uint64_t)v10, 0);
  }
  return v7;
}

_QWORD *sub_10091CC78(uint64_t a1, _QWORD *a2, unsigned __int8 *a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  unsigned __int8 *v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = (_QWORD *)v4;
        v8 = (unsigned __int8 *)(v4 + 32);
        if (!sub_10016FCB8(a3, (unsigned __int8 *)(v4 + 32)))
          break;
        v4 = *v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (!sub_10016FCB8(v8, a3))
        break;
      v5 = v7 + 1;
      v4 = v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

char *sub_10091CD08@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  char *result;
  __int128 *v8;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x1D8uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v8 = *a2;
  result = sub_10091CD84(v6 + 32, &v8);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10091CD6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10091CE8C(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_10091CD84(char *a1, __int128 **a2)
{
  char *v3;

  v3 = sub_1004E5748(a1, *a2);
  sub_10091CDE4((uint64_t)(v3 + 248));
  return a1;
}

void sub_10091CDB4(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(_QWORD *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_10190F134();
  _Unwind_Resume(a1);
}

uint64_t sub_10091CDE4(uint64_t a1)
{
  *(_DWORD *)a1 = -1;
  *(_QWORD *)(a1 + 8) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 16) = 8;
  *(_QWORD *)(a1 + 24) = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "Pending geofence notification");
  *(_DWORD *)(a1 + 32) = 0xFFFF;
  *(_QWORD *)(a1 + 44) = 0;
  *(_QWORD *)(a1 + 36) = 0;
  *(_OWORD *)(a1 + 52) = xmmword_101BAFC90;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 68) = _Q0;
  *(_OWORD *)(a1 + 84) = _Q0;
  *(_OWORD *)(a1 + 100) = _Q0;
  *(_DWORD *)(a1 + 116) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 120) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 148) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 156) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  return a1;
}

void sub_10091CE8C(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_10091BCFC((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

uint64_t *sub_10091CED0(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)sub_10091CC78((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    sub_10091CF78((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000145B0(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_10091CE8C((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t sub_10091CF78@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6;
  uint64_t result;
  __int128 *v8;

  v5 = a1 + 8;
  v6 = operator new(0x138uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v8 = *a2;
  result = sub_10091CFF4((uint64_t)v6 + 32, &v8);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10091CFDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10091CE8C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_10091CFF4(uint64_t a1, __int128 **a2)
{
  char *v3;

  v3 = sub_1004E5748((char *)a1, *a2);
  *((_DWORD *)v3 + 62) = -1;
  *((_QWORD *)v3 + 32) = 0xBFF0000000000000;
  *((_DWORD *)v3 + 66) = 8;
  *(_QWORD *)(a1 + 272) = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "Pending geofence notification");
  return a1;
}

void sub_10091D050(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(_QWORD *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_10190F134();
  _Unwind_Resume(a1);
}

uint64_t *sub_10091D080(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)sub_10091CC78((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    sub_10091D128((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000145B0(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_10091D228((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t sub_10091D128@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6;
  uint64_t result;
  __int128 *v8;

  v5 = a1 + 8;
  v6 = operator new(0x130uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v8 = *a2;
  result = sub_10091D1A4((uint64_t)v6 + 32, &v8);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10091D18C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10091D228(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_10091D1A4(uint64_t a1, __int128 **a2)
{
  char *v3;

  v3 = sub_1004E5748((char *)a1, *a2);
  *((_QWORD *)v3 + 31) = 0xBFF0000000000000;
  *((_DWORD *)v3 + 64) = 4;
  *(_QWORD *)(a1 + 264) = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "Pending geofence failure notification");
  return a1;
}

void sub_10091D1F8(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(_QWORD *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_10190F134();
  _Unwind_Resume(a1);
}

void sub_10091D228(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_10091BDC8((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

void sub_10091D26C()
{
  operator new();
}

void sub_10091D300()
{
  operator delete();
}

uint64_t sub_10091D324(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    sub_100115F78(result);
    operator delete();
  }
  return result;
}

uint64_t *sub_10091D358(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;

  v6 = (uint64_t **)sub_10019C424((uint64_t)a1, &v9, a2);
  result = *v6;
  if (!*v6)
  {
    sub_10091D3EC((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000145B0(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

_QWORD *sub_10091D3EC@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *result;

  v5 = a1 + 8;
  v6 = operator new(0x58uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_10091D46C(v6 + 4, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10091D450(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_100279070(v3, v2);
  _Unwind_Resume(a1);
}

_QWORD *sub_10091D46C(_QWORD *__dst, __int128 *a2)
{
  __int128 v3;

  if (*((char *)a2 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v3 = *a2;
    __dst[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v3;
  }
  sub_1004CF1E0((uint64_t)(__dst + 3), 40, 1, 360.0);
  return __dst;
}

void sub_10091D4D0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10091D4EC(uint64_t *a1, __int128 *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xEF7BDEF7BDEF7BDFLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x108421084210842)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xEF7BDEF7BDEF7BDFLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x84210842108421)
    v9 = 0x108421084210842;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_10091CA64(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[248 * v4];
  v16 = &v10[248 * v9];
  sub_1004E5748(v14, a2);
  v15 = v14 + 248;
  sub_10091D608(a1, &v13);
  v11 = a1[1];
  sub_10091D7B8(&v13);
  return v11;
}

void sub_10091D5F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10091D7B8((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10091D608(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_10091D67C((uint64_t)(a1 + 2), a1[1], (__int128 *)a1[1], *a1, (__int128 *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10091D67C(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 *v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  v13 = 0;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 = (__int128 *)((char *)v9 - 248);
      sub_1004E5748((char *)(v7 - 248), v9);
      v7 = *((_QWORD *)&v15 + 1) - 248;
      *((_QWORD *)&v15 + 1) -= 248;
    }
    while (v9 != a5);
    v10 = v15;
  }
  v13 = 1;
  sub_10091D734((uint64_t)v12);
  return v10;
}

void sub_10091D720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10091D734((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_10091D734(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_10091D768((uint64_t *)a1);
  return a1;
}

void sub_10091D768(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_10091BC34(v3, v1);
      v1 += 248;
    }
    while (v1 != v2);
  }
}

void **sub_10091D7B8(void **a1)
{
  sub_10091D7E8(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_10091D7E8(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 248;
    sub_10091BC34(v4, i - 248);
  }
}

uint64_t sub_10091D82C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;

  std::string::operator=((std::string *)a1, (const std::string *)a2);
  std::string::operator=((std::string *)(a1 + 24), (const std::string *)(a2 + 24));
  std::string::operator=((std::string *)(a1 + 48), (const std::string *)(a2 + 48));
  v4 = *(_OWORD *)(a2 + 88);
  v5 = *(_OWORD *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 120) = v6;
  *(_OWORD *)(a1 + 104) = v5;
  *(_OWORD *)(a1 + 88) = v4;
  v7 = *(_OWORD *)(a2 + 152);
  v8 = *(_OWORD *)(a2 + 168);
  v9 = *(_QWORD *)(a2 + 181);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 181) = v9;
  *(_OWORD *)(a1 + 168) = v8;
  *(_OWORD *)(a1 + 152) = v7;
  std::string::operator=((std::string *)(a1 + 192), (const std::string *)(a2 + 192));
  v10 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(id *)(a2 + 216);

  if (a1 != a2)
    sub_1002F3538((char *)(a1 + 224), *(char **)(a2 + 224), *(_QWORD *)(a2 + 232), (uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 4);
  std::string::operator=((std::string *)(a1 + 248), (const std::string *)(a2 + 248));
  std::string::operator=((std::string *)(a1 + 272), (const std::string *)(a2 + 272));
  std::string::operator=((std::string *)(a1 + 296), (const std::string *)(a2 + 296));
  v11 = *(_OWORD *)(a2 + 368);
  v13 = *(_OWORD *)(a2 + 320);
  v12 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v11;
  *(_OWORD *)(a1 + 320) = v13;
  *(_OWORD *)(a1 + 336) = v12;
  v15 = *(_OWORD *)(a2 + 400);
  v14 = *(_OWORD *)(a2 + 416);
  v16 = *(_OWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 429) = *(_QWORD *)(a2 + 429);
  *(_OWORD *)(a1 + 400) = v15;
  *(_OWORD *)(a1 + 416) = v14;
  *(_OWORD *)(a1 + 384) = v16;
  std::string::operator=((std::string *)(a1 + 440), (const std::string *)(a2 + 440));
  v17 = *(void **)(a1 + 464);
  *(_QWORD *)(a1 + 464) = *(id *)(a2 + 464);

  if (a1 != a2)
    sub_1002F3538((char *)(a1 + 472), *(char **)(a2 + 472), *(_QWORD *)(a2 + 480), (uint64_t)(*(_QWORD *)(a2 + 480) - *(_QWORD *)(a2 + 472)) >> 4);
  memcpy((void *)(a1 + 496), (const void *)(a2 + 496), 0x458uLL);
  return a1;
}

void sub_10091D990(void *__p)
{
  operator delete(__p);
}

BOOL sub_10091D998()
{
  return os_log_type_enabled((os_log_t)qword_1022A0068, OS_LOG_TYPE_FAULT);
}

void sub_10091D9AC()
{
  uint64_t v0;

  operator delete(*(void **)(v0 + 48));
}

void sub_10091D9B4()
{
  uint64_t v0;

  operator delete(*(void **)(v0 + 192));
}

void sub_10091D9BC()
{
  uint64_t v0;

  operator delete(*(void **)(v0 + 24));
}

BOOL sub_10091D9C4()
{
  uint64_t v0;

  return os_signpost_enabled(*(os_log_t *)(v0 + 104));
}

void sub_10091D9DC()
{
  unsigned __int8 v0;
  _OWORD v1[5];
  uint64_t v2;

  v0 = atomic_load((unsigned __int8 *)&qword_1022A19C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1022A19C8))
    {
      v2 = 0x7FFFFFFF00000000;
      v1[2] = xmmword_101BE7248;
      v1[3] = unk_101BE7258;
      v1[4] = xmmword_101BE7268;
      v1[0] = xmmword_101BE7228;
      v1[1] = unk_101BE7238;
      sub_100428DFC((uint64_t)&unk_1022A19B0, (int *)v1, 11);
      __cxa_atexit((void (*)(void *))sub_100427E4C, &unk_1022A19B0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1022A19C8);
    }
  }
}

void sub_10091DAB0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A19C8);
  _Unwind_Resume(a1);
}

double sub_10091DAC8(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = sub_1005EB794(a1, 3600);
  *(_QWORD *)v1 = off_10215EB80;
  result = 0.0;
  *(_OWORD *)(v1 + 36) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_10091DAFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) += a2;
  ++*(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_10091DB18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) += a2;
  ++*(_DWORD *)(result + 56);
  return result;
}

uint64_t sub_10091DB34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) += a2;
  ++*(_DWORD *)(result + 60);
  return result;
}

uint64_t sub_10091DB50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

uint64_t sub_10091DB58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

uint64_t sub_10091DB60(uint64_t result)
{
  ++*(_DWORD *)(result + 36);
  return result;
}

void sub_10091DB70(_DWORD *a1)
{
  NSObject *v2;
  int v3;
  int v4;
  NSObject *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  NSObject *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  const char *v16;
  uint8_t *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  const char *v22;
  uint8_t *v23;
  int v24;
  int v25;
  int v26;
  const char *v27;
  uint8_t *v28;
  uint64_t v29;
  int v30;
  int v31;
  __int16 v32;
  int v33;
  __int16 v34;
  int v35;
  __int16 v36;
  int v37;
  uint8_t buf[4];
  int v39;
  __int16 v40;
  int v41;
  __int16 v42;
  int v43;
  __int16 v44;
  int v45;

  if (qword_1022A0040 != -1)
    dispatch_once(&qword_1022A0040, &stru_10215EBB8);
  v2 = qword_1022A0048;
  if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_DEBUG))
  {
    v4 = a1[16];
    v3 = a1[17];
    *(_DWORD *)buf = 67240448;
    v39 = v3;
    v40 = 1026;
    v41 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "@Wsb, WifiManager AP cache cnt, %{public}d, Aonsensed AP cache cnt, %{public}d", buf, 0xEu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215EBB8);
    v15 = a1[16];
    v14 = a1[17];
    v30 = 67240448;
    v31 = v14;
    v32 = 1026;
    v33 = v15;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0048, 2, "@Wsb, WifiManager AP cache cnt, %{public}d, Aonsensed AP cache cnt, %{public}d", &v30, 14);
    v17 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "void CLWsbScanComparatorMetrics::logMetricData()", "%s\n", v16);
    if (v17 != buf)
      free(v17);
  }
  if (qword_1022A0040 != -1)
    dispatch_once(&qword_1022A0040, &stru_10215EBB8);
  v5 = qword_1022A0048;
  if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_DEBUG))
  {
    v6 = a1[11];
    v7 = a1[12];
    v9 = a1[9];
    v8 = a1[10];
    *(_DWORD *)buf = 67240960;
    v39 = v6;
    v40 = 1026;
    v41 = v8;
    v42 = 1026;
    v43 = v7;
    v44 = 1026;
    v45 = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "@Wsb, WifiManager AP total cnt, %{public}d, Aonsensed AP total cnt, %{public}d, NotificationScan AP total cnt, %{public}d, matched WSB AP cnt, %{public}d", buf, 0x1Au);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215EBB8);
    v18 = a1[11];
    v19 = a1[12];
    v21 = a1[9];
    v20 = a1[10];
    v30 = 67240960;
    v31 = v18;
    v32 = 1026;
    v33 = v20;
    v34 = 1026;
    v35 = v19;
    v36 = 1026;
    v37 = v21;
    LODWORD(v29) = 26;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0048, 2, "@Wsb, WifiManager AP total cnt, %{public}d, Aonsensed AP total cnt, %{public}d, NotificationScan AP total cnt, %{public}d, matched WSB AP cnt, %{public}d", &v30, v29);
    v23 = (uint8_t *)v22;
    sub_100512490("Generic", 1, 0, 2, "void CLWsbScanComparatorMetrics::logMetricData()", "%s\n", v22);
    if (v23 != buf)
      free(v23);
  }
  if (qword_1022A0040 != -1)
    dispatch_once(&qword_1022A0040, &stru_10215EBB8);
  v10 = qword_1022A0048;
  if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_DEBUG))
  {
    v12 = a1[14];
    v11 = a1[15];
    v13 = a1[13];
    *(_DWORD *)buf = 67240704;
    v39 = v12;
    v40 = 1026;
    v41 = v11;
    v42 = 1026;
    v43 = v13;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "@Wsb, WifiManager WSB notifications, %{public}d, scan notifications, %{public}d, Aonsensed notifications, %{public}d", buf, 0x14u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215EBB8);
    v25 = a1[14];
    v24 = a1[15];
    v26 = a1[13];
    v30 = 67240704;
    v31 = v25;
    v32 = 1026;
    v33 = v24;
    v34 = 1026;
    v35 = v26;
    LODWORD(v29) = 20;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0048, 2, "@Wsb, WifiManager WSB notifications, %{public}d, scan notifications, %{public}d, Aonsensed notifications, %{public}d", &v30, v29);
    v28 = (uint8_t *)v27;
    sub_100512490("Generic", 1, 0, 2, "void CLWsbScanComparatorMetrics::logMetricData()", "%s\n", v27);
    if (v28 != buf)
      free(v28);
  }
}

double sub_10091E038(uint64_t a1)
{
  double result;

  *(_DWORD *)(a1 + 68) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 52) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

uint64_t sub_10091E04C(unsigned int *a1)
{
  NSDictionary *v2;
  NSObject *v3;
  const char *v5;
  uint8_t *v6;
  _QWORD v7[5];
  int v8;
  NSDictionary *v9;
  uint8_t buf[4];
  NSDictionary *v11;
  _QWORD v12[9];
  _QWORD v13[9];

  v12[0] = CFSTR("numScannedApsFromAonsensed");
  v13[0] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[10]);
  v12[1] = CFSTR("numScannedApsFromWifiManager");
  v13[1] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[11]);
  v12[2] = CFSTR("numScannedApsFromNotificationScan");
  v13[2] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[12]);
  v12[3] = CFSTR("numNotificationScanCachesFromAonsensed");
  v13[3] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[13]);
  v12[4] = CFSTR("numNotificationScanCachesFromWifiManager");
  v13[4] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[14]);
  v12[5] = CFSTR("numNotificationScans");
  v13[5] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[15]);
  v12[6] = CFSTR("numMatchedApsBetweenAonsensedAndWifiManager");
  v13[6] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[9]);
  v12[7] = CFSTR("numCachedApsFromAonsensed");
  v13[7] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[16]);
  v12[8] = CFSTR("numCachedApsFromWifiManager");
  v13[8] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1[17]);
  v2 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v13, v12, 9);
  if (qword_1022A0040 != -1)
    dispatch_once(&qword_1022A0040, &stru_10215EBB8);
  v3 = qword_1022A0048;
  if (os_log_type_enabled((os_log_t)qword_1022A0048, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138477827;
    v11 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "@Wsb, submitting CoreAnalytics event for WSB scan comparisons, %{private}@", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0040 != -1)
      dispatch_once(&qword_1022A0040, &stru_10215EBB8);
    v8 = 138477827;
    v9 = v2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0048, 2, "@Wsb, submitting CoreAnalytics event for WSB scan comparisons, %{private}@", &v8, 12);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLWsbScanComparatorMetrics::sendCoreAnalyticsEvent()", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10091E350;
  v7[3] = &unk_102132010;
  v7[4] = v2;
  return AnalyticsSendEventLazy(CFSTR("com.apple.clx.wsb.scancomparison"), v7);
}

uint64_t sub_10091E350(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

void sub_10091E358()
{
  operator delete();
}

void sub_10091E36C(id a1)
{
  qword_1022A0048 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_10091EF1C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x278]);
  _Unwind_Resume(a1);
}

uint64_t sub_10091EF54@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  void **v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  void **v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  void *__p[2];
  unsigned __int8 v22;
  void *v23[2];
  unsigned __int8 v24;
  void *v25[2];
  unsigned __int8 v26;
  void *v27[2];
  unsigned __int8 v28;
  _QWORD v29[2];
  uint64_t v30;
  _QWORD v31[10];
  char v32;
  uint64_t v33;

  sub_100263E50((uint64_t)v29);
  v4 = sub_100263F7C(&v30, (uint64_t)"nominal,", 8);
  sub_1004C5520(a1, v27);
  if ((v28 & 0x80u) == 0)
    v5 = v27;
  else
    v5 = (void **)v27[0];
  if ((v28 & 0x80u) == 0)
    v6 = v28;
  else
    v6 = (uint64_t)v27[1];
  v7 = sub_100263F7C(v4, (uint64_t)v5, v6);
  v8 = sub_100263F7C(v7, (uint64_t)",cellular,", 10);
  sub_100920930(a1 + 16, v25);
  if ((v26 & 0x80u) == 0)
    v9 = v25;
  else
    v9 = (void **)v25[0];
  if ((v26 & 0x80u) == 0)
    v10 = v26;
  else
    v10 = (uint64_t)v25[1];
  v11 = sub_100263F7C(v8, (uint64_t)v9, v10);
  v12 = sub_100263F7C(v11, (uint64_t)",thermal,", 9);
  sub_1004C3D30(a1 + 56, v23);
  if ((v24 & 0x80u) == 0)
    v13 = v23;
  else
    v13 = (void **)v23[0];
  if ((v24 & 0x80u) == 0)
    v14 = v24;
  else
    v14 = (uint64_t)v23[1];
  v15 = sub_100263F7C(v12, (uint64_t)v13, v14);
  v16 = sub_100263F7C(v15, (uint64_t)",peakPower,", 11);
  sub_1004C3D30(a1 + 108, __p);
  if ((v22 & 0x80u) == 0)
    v17 = __p;
  else
    v17 = (void **)__p[0];
  if ((v22 & 0x80u) == 0)
    v18 = v22;
  else
    v18 = (uint64_t)__p[1];
  sub_100263F7C(v16, (uint64_t)v17, v18);
  if ((char)v22 < 0)
    operator delete(__p[0]);
  if ((char)v24 < 0)
    operator delete(v23[0]);
  if ((char)v26 < 0)
    operator delete(v25[0]);
  if ((char)v28 < 0)
    operator delete(v27[0]);
  std::stringbuf::str(a2, v31);
  *(_QWORD *)((char *)v29
  v30 = v19;
  if (v32 < 0)
    operator delete((void *)v31[8]);
  std::streambuf::~streambuf(v31);
  return std::ios::~ios(&v33);
}

void sub_10091F15C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34)
{
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a27 < 0)
    operator delete(a22);
  if (a33 < 0)
    operator delete(a28);
  sub_1018B38B4((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_10091F1E0(uint64_t a1, uint64_t a2)
{
  id Weak;
  NSObject *v4;
  const char *v5;
  uint8_t *v6;
  int v7;
  const char *v8;
  uint8_t buf[4];
  const char *v10;

  Weak = objc_loadWeak((id *)(a1 + 32));
  if (Weak)
  {
    if (a2)
    {
      _objc_msgSend(Weak, "processIncomingMitigation:", a2);
    }
    else
    {
      if (qword_1022A0080 != -1)
        dispatch_once(&qword_1022A0080, &stru_10215EC00);
      v4 = qword_1022A0088;
      if (os_log_type_enabled((os_log_t)qword_1022A0088, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v10 = "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedC"
              "oexMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#EED2CXMN,%{public}s mitigation nil", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0080 != -1)
          dispatch_once(&qword_1022A0080, &stru_10215EC00);
        v7 = 136446210;
        v8 = "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedCo"
             "exMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke";
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0088, 0, "#EED2CXMN,%{public}s mitigation nil", &v7, 12);
        v6 = (uint8_t *)v5;
        sub_100512490("Generic", 1, 0, 2, "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedCoexMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke", "%s\n", v5);
        if (v6 != buf)
          free(v6);
      }
    }
  }
}

void sub_10091F3CC(uint64_t a1)
{
  id Weak;
  void *v2;
  id v3;
  id v4;
  void (**v5)(id, _QWORD);
  NSObject *v6;
  const char *v7;
  uint8_t *v8;
  int v9;
  const char *v10;
  uint8_t buf[4];
  const char *v12;

  Weak = objc_loadWeak((id *)(a1 + 32));
  if (Weak)
  {
    v2 = Weak;
    v3 = objc_msgSend(Weak, "createCoexMetricDictForCASubmission:", 0);
    if (v3)
    {
      v4 = v3;
      v5 = (void (**)(id, _QWORD))objc_msgSend(v2, "fCoexMetricUpdateCallback");
      ((void (**)(id, id))v5)[2](v5, v4);
    }
    else
    {
      if (qword_1022A0080 != -1)
        dispatch_once(&qword_1022A0080, &stru_10215EC00);
      v6 = qword_1022A0088;
      if (os_log_type_enabled((os_log_t)qword_1022A0088, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        v12 = "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedC"
              "oexMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke_2";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#EED2CXMN,%{public}s, coexMetricDict nil", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0080 != -1)
          dispatch_once(&qword_1022A0080, &stru_10215EC00);
        v9 = 136446210;
        v10 = "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedC"
              "oexMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke";
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0088, 16, "#EED2CXMN,%{public}s, coexMetricDict nil", &v9, 12);
        v8 = (uint8_t *)v7;
        sub_100512490("Generic", 1, 0, 0, "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedCoexMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke", "%s\n", v7);
        if (v8 != buf)
          free(v8);
      }
    }
  }
}

uint64_t sub_1009208C4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

void sub_100920904(id a1)
{
  qword_1022A0088 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

uint64_t sub_100920930@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void *__p[2];
  unsigned __int8 v20;
  _QWORD v21[2];
  uint64_t v22;
  _QWORD v23[10];
  char v24;
  uint64_t v25;

  sub_100263E50((uint64_t)v21);
  v4 = sub_100263F7C(&v22, (uint64_t)"enabled,", 8);
  v5 = (_QWORD *)std::ostream::operator<<(v4, *a1);
  v6 = sub_100263F7C(v5, (uint64_t)",rsrpThresholddBm,", 18);
  v7 = (_QWORD *)std::ostream::operator<<(v6, *((unsigned int *)a1 + 1));
  v8 = sub_100263F7C(v7, (uint64_t)",rsrpQueryRateSecs,", 19);
  v9 = (_QWORD *)std::ostream::operator<<(v8, *((double *)a1 + 1));
  v10 = sub_100263F7C(v9, (uint64_t)",rsrpSamplesToAvg,", 18);
  v11 = (_QWORD *)std::ostream::operator<<(v10, *((unsigned int *)a1 + 4));
  v12 = sub_100263F7C(v11, (uint64_t)",ulFreqThresholdMHz,", 20);
  v13 = (_QWORD *)std::ostream::operator<<(v12, *((unsigned int *)a1 + 5));
  v14 = sub_100263F7C(v13, (uint64_t)",belowThresholdParams,", 22);
  sub_1004C5520(a1 + 24, __p);
  if ((v20 & 0x80u) == 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if ((v20 & 0x80u) == 0)
    v16 = v20;
  else
    v16 = (uint64_t)__p[1];
  sub_100263F7C(v14, (uint64_t)v15, v16);
  if ((char)v20 < 0)
    operator delete(__p[0]);
  std::stringbuf::str(a2, v23);
  *(_QWORD *)((char *)v21
  v22 = v17;
  if (v24 < 0)
    operator delete((void *)v23[8]);
  std::streambuf::~streambuf(v23);
  return std::ios::~ios(&v25);
}

void sub_100920AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1018B38B4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_100920B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  NSDictionary *v7;
  _QWORD v8[2];
  _QWORD v9[2];

  v6 = objc_alloc_init((Class)NSAutoreleasePool);
  if ((sub_1009222DC(a1) & 1) != 0)
  {
    v8[0] = CMMotionAlarmKey;
    v8[1] = CMErrorMessage;
    v9[0] = a2;
    v9[1] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", a3);
    v7 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v8, 2);
    sub_100922374(a1, &v7);
  }

}

void sub_100920C34(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_10024F88C(exception_object);
}

uint64_t sub_100920C80(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v7;
  CLMotionAlarmSubscriptionAdapter *v8;

  v7 = sub_1001B5A2C(a1, a2, a3, a4, a5);
  *(_QWORD *)v7 = off_10215EC30;
  *(_WORD *)(v7 + 41) = 0;
  *(_QWORD *)(a1 + 48) = objc_msgSend(objc_msgSend(a3, "vendor"), "proxyForService:", CFSTR("CLMotionAlarmNotifier"));
  v8 = -[CLMotionAlarmSubscriptionAdapter initWithMotionAlarmSubscription:]([CLMotionAlarmSubscriptionAdapter alloc], "initWithMotionAlarmSubscription:", a1);
  *(_QWORD *)(a1 + 56) = v8;
  -[CLMotionAlarmSubscriptionAdapter setValid:](v8, "setValid:", 1);
  objc_msgSend(*(id *)(a1 + 48), "registerDelegate:inSilo:", *(_QWORD *)(a1 + 56), objc_msgSend(a3, "silo"));
  *(_BYTE *)(a1 + 42) = sub_100920D38(a1);
  return a1;
}

void sub_100920D24(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10002FA68(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100920D38(uint64_t a1)
{
  uint64_t v2;
  void *__p;
  char v5;

  sub_1015A2E04(&__p, "com.apple.locationd.motion_alarms-system-client");
  v2 = sub_1002255E0(a1);
  if (v5 < 0)
    operator delete(__p);
  return v2;
}

void sub_100920D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100920DB0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v5[2];
  void *v6[2];
  __int128 v7;
  void *v8[2];
  void *v9[2];
  __int128 v10;
  void *v11[2];
  __int128 v12;
  void *v13[2];
  void *__p[2];
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)a1 = off_10215EC30;
  if (*(_BYTE *)(a1 + 41))
  {
    v2 = *(void **)(a1 + 48);
    v3 = *(void **)(a1 + 24);
    if (v3)
    {
      objc_msgSend(v3, "clientName");
    }
    else
    {
      v16 = 0;
      *(_OWORD *)__p = 0u;
      v15 = 0u;
      v12 = 0u;
      *(_OWORD *)v13 = 0u;
      v10 = 0u;
      *(_OWORD *)v11 = 0u;
      *(_OWORD *)v8 = 0u;
      *(_OWORD *)v9 = 0u;
      *(_OWORD *)v6 = 0u;
      v7 = 0u;
      *(_OWORD *)v5 = 0u;
    }
    objc_msgSend(v2, "unregisterClient:systemClient:", sub_1001AE728((__int128 *)v5), *(unsigned __int8 *)(a1 + 42));
    if (SHIBYTE(v15) < 0)
      operator delete(__p[1]);
    if (SHIBYTE(__p[0]) < 0)
      operator delete(v13[0]);
    if (SHIBYTE(v12) < 0)
      operator delete(v11[1]);
    if (SHIBYTE(v10) < 0)
      operator delete(v9[1]);
    if (SHIBYTE(v9[0]) < 0)
      operator delete(v8[0]);
    if (SHIBYTE(v7) < 0)
      operator delete(v6[1]);
    if (SHIBYTE(v6[0]) < 0)
      operator delete(v5[0]);
  }

  *(_QWORD *)(a1 + 48) = 0;
  objc_msgSend(*(id *)(a1 + 56), "setValid:", 0);

  *(_QWORD *)(a1 + 56) = 0;
  return sub_10002FA68(a1);
}

void sub_100920EDC(uint64_t a1)
{
  sub_100920DB0(a1);
  operator delete();
}

_QWORD *sub_100920F00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (***v11)();
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  _QWORD v15[3];
  _QWORD *v16;
  _QWORD v17[3];
  _QWORD *v18;
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t (**v21)();
  _QWORD v22[2];
  uint64_t (***v23)();
  _QWORD v24[3];
  _QWORD *v25;
  _QWORD v26[3];
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;

  v24[0] = off_10215ED40;
  v24[1] = sub_100921364;
  v24[2] = 0;
  v25 = v24;
  sub_1015A2E04(v26, "kCLConnectionMessageMotionAlarmFire");
  sub_100922AF4((uint64_t)&v27, (uint64_t)v24);
  v21 = off_10215EDF0;
  v22[0] = sub_100921684;
  v22[1] = 0;
  v23 = &v21;
  sub_1015A2E04(v28, "kCLConnectionMessageMotionAlarmRegister");
  sub_100922AF4((uint64_t)&v29, (uint64_t)&v21);
  v19[0] = off_10215EDF0;
  v19[1] = sub_100921AE8;
  v19[2] = 0;
  v20 = v19;
  sub_1015A2E04(v30, "kCLConnectionMessageMotionAlarmUnregister");
  sub_100922AF4((uint64_t)&v31, (uint64_t)v19);
  v17[0] = off_10215EDF0;
  v17[1] = sub_100921DB0;
  v17[2] = 0;
  v18 = v17;
  sub_1015A2E04(v32, "kCLConnectionMessageMotionAlarmAcknowledge");
  sub_100922AF4((uint64_t)&v33, (uint64_t)v17);
  v15[0] = off_10215EDF0;
  v15[1] = sub_100922078;
  v15[2] = 0;
  v16 = v15;
  sub_1015A2E04(v34, "kCLConnectionMessageMotionAlarmLaunchRemoteApplication");
  sub_100922AF4((uint64_t)&v35, (uint64_t)v15);
  sub_100923114(a1, (unsigned __int8 *)v26, 5);
  v2 = 35;
  do
  {
    v3 = (_QWORD *)v26[v2 - 1];
    if (&v24[v2] == v3)
    {
      v3 = &v24[v2];
      v4 = 4;
    }
    else
    {
      if (!v3)
        goto LABEL_7;
      v4 = 5;
    }
    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_7:
    if (SHIBYTE((&v23)[v2]) < 0)
      operator delete((void *)v22[v2]);
    v2 -= 7;
  }
  while (v2 * 8);
  v5 = v16;
  if (v16 == v15)
  {
    v6 = 4;
    v5 = v15;
LABEL_14:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }
  else if (v16)
  {
    v6 = 5;
    goto LABEL_14;
  }
  v7 = v18;
  if (v18 == v17)
  {
    v8 = 4;
    v7 = v17;
LABEL_19:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }
  else if (v18)
  {
    v8 = 5;
    goto LABEL_19;
  }
  v9 = v20;
  if (v20 == v19)
  {
    v10 = 4;
    v9 = v19;
LABEL_24:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }
  else if (v20)
  {
    v10 = 5;
    goto LABEL_24;
  }
  v11 = v23;
  if (v23 == &v21)
  {
    v12 = 4;
    v11 = &v21;
LABEL_29:
    (*v11)[v12]();
  }
  else if (v23)
  {
    v12 = 5;
    goto LABEL_29;
  }
  result = v25;
  if (v25 == v24)
  {
    v14 = 4;
    result = v24;
    return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v14))();
  }
  else if (v25)
  {
    v14 = 5;
    return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v14))();
  }
  return result;
}

