void sub_10035E0F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  __p = a12;
  sub_1002A1A78((void ***)&__p);
  sub_100067AC4((uint64_t)&a21);
  __p = &a26;
  sub_100364F30((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_10035E1B8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double Current;
  double v5;
  double v6;
  double v7;
  double v8;
  NSObject *v9;
  NSObject *v10;
  double v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  CFStringRef v15;
  int v16;
  double v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  double v21;
  NSObject *v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  int v30;
  _OWORD *v31;
  const char *p_p;
  uint64_t v33;
  float v34;
  CFAbsoluteTime v35;
  uint64_t v36;
  int v37;
  void **v38;
  uint64_t v39;
  float v40;
  CFAbsoluteTime v41;
  char *v42;
  char *v43;
  const char *v44;
  char *v45;
  uint64_t v46;
  void *v47[2];
  char v48;
  void *__p;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  double v54;
  _BYTE v55[18];
  __int16 v56;
  double v57;
  __int16 v58;
  CFAbsoluteTime v59;
  uint64_t *v60[2];
  unsigned __int8 v61;
  _BYTE buf[18];
  __int16 v63;
  double v64;
  __int16 v65;
  CFAbsoluteTime v66;
  int v67;

  if (*(_BYTE *)(a1 + 160))
  {
    Current = j__CFAbsoluteTimeGetCurrent();
    if (!*(_BYTE *)(a1 + 160))
      sub_10028DF3C();
    v5 = Current;
    v6 = Current - *(double *)(a1 + 152);
    sub_10035EC58();
    v54 = 0.0;
    if (v6 < v7)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v14 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        v63 = 2050;
        v64 = v6;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"UWB Scan duration\", \"duration\":\"%{public}.5f\"}", buf, 0x1Cu);
      }
      if (!*(_BYTE *)(a1 + 160))
        sub_10028DF3C();
      sub_1001E4804(buf);
      *(_QWORD *)v55 = 0;
      v15 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsUwbRangeMaximalAgeForValidityFromScanStart", 0x8000100u, kCFAllocatorNull);
      v16 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v15, v55);
      CFRelease(v15);
      v17 = *(double *)v55;
      v18 = *(std::__shared_weak_count **)&buf[8];
      if (*(_QWORD *)&buf[8])
      {
        v19 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
        do
          v20 = __ldaxr(v19);
        while (__stlxr(v20 - 1, v19));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      v21 = 1.0;
      if (v16)
        v21 = v17;
      v11 = *(double *)(a1 + 152) - v21;
    }
    else
    {
      v8 = v7;
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 68289538;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        v63 = 2050;
        v64 = v6;
        v65 = 2050;
        v66 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Scan duration is exceeded threshold\", \"duration\":\"%{public}.5f\", \"threshold\":\"%{public}.5f\"}", buf, 0x26u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v10 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        *(_DWORD *)buf = 68289538;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        v63 = 2050;
        v64 = v6;
        v65 = 2050;
        v66 = v8;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Scan duration is exceeded threshold", "{\"msg%{public}.0s\":\"Scan duration is exceeded threshold\", \"duration\":\"%{public}.5f\", \"threshold\":\"%{public}.5f\"}", buf, 0x26u);
      }
      v11 = v5 - v8;
    }
    v54 = v11;
    v53 = 0;
    sub_10035ED34(a1 + 712, &v54, &v53, &v51);
    if (v53)
    {
      sub_1015A2E04(buf, "UWB range buffer overflow");
      sub_10038AA2C((uint64_t *)buf);
      if (SBYTE3(v64) < 0)
        operator delete(*(void **)buf);
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v22 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134349056;
      *(_QWORD *)&buf[4] = 0xCCCCCCCCCCCCCCCDLL * ((v52 - v51) >> 4);
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "uwb cached scan, read %{public}lu measurements", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      *(_DWORD *)v55 = 134349056;
      *(_QWORD *)&v55[4] = 0xCCCCCCCCCCCCCCCDLL * ((v52 - v51) >> 4);
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "uwb cached scan, read %{public}lu measurements", v55, 12);
      v45 = (char *)v44;
      sub_100512490("Generic", 1, 0, 2, "std::vector<CLMiLoProtobufWrapper::Measurement> CLMicroLocationSensorsLogic::getUwbMeasurements()", "%s\n", v44);
      if (v45 != buf)
        free(v45);
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v23 = os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG);
    v25 = v51;
    v24 = v52;
    if (v23)
    {
      if (v52 == v51)
      {
        *a2 = 0;
        a2[1] = 0;
        a2[2] = 0;
LABEL_82:
        *(_QWORD *)buf = &v51;
        sub_100364F30((void ***)buf);
        return;
      }
      v26 = 0;
      v27 = 0;
      do
      {
        v28 = *(_QWORD *)(v25 + v26 + 56);
        if (!v28)
          v28 = *(_QWORD *)(qword_102310298 + 56);
        sub_10035777C(*(uint64_t ***)(v28 + 32), v60);
        if (qword_1022A0100 != -1)
          dispatch_once(&qword_1022A0100, &stru_102130F08);
        v29 = qword_1022A0108;
        if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEBUG))
        {
          v30 = v61;
          if (v61)
          {
            v31 = operator new(0x28uLL);
            __p = v31;
            v50 = xmmword_101B97FF0;
            *v31 = 0u;
            v31[1] = 0u;
            *(_QWORD *)((char *)v31 + 29) = 0;
            sub_100261F9C((uint64_t)v60, v31);
            if (v50 >= 0)
              p_p = (const char *)&__p;
            else
              p_p = (const char *)__p;
          }
          else
          {
            p_p = "not available";
          }
          v33 = *(_QWORD *)(v51 + v26 + 56);
          if (!v33)
            v33 = *(_QWORD *)(qword_102310298 + 56);
          v34 = *(float *)(v33 + 20);
          v35 = CFAbsoluteTimeGetCurrent() - *(double *)(v51 + v26 + 8);
          *(_DWORD *)buf = 67240963;
          *(_DWORD *)&buf[4] = v27;
          *(_WORD *)&buf[8] = 2081;
          *(_QWORD *)&buf[10] = p_p;
          v63 = 2049;
          v64 = v34;
          v65 = 2050;
          v66 = v35;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "meas index: %{public}d, deviceId: %{private}s, range: %{private}f, age: %{public}f", buf, 0x26u);
          if (v30 && SHIBYTE(v50) < 0)
            operator delete(__p);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0100 != -1)
            dispatch_once(&qword_1022A0100, &stru_102130F08);
          v36 = qword_1022A0108;
          v37 = v61;
          if (v61)
          {
            sub_1002F822C((uint64_t)v60, (uint64_t)v47);
            if (v48 >= 0)
              v38 = v47;
            else
              v38 = (void **)v47[0];
          }
          else
          {
            v38 = (void **)"not available";
          }
          v39 = *(_QWORD *)(v51 + v26 + 56);
          if (!v39)
            v39 = *(_QWORD *)(qword_102310298 + 56);
          v40 = *(float *)(v39 + 20);
          v41 = CFAbsoluteTimeGetCurrent() - *(double *)(v51 + v26 + 8);
          *(_DWORD *)v55 = 67240963;
          *(_DWORD *)&v55[4] = v27;
          *(_WORD *)&v55[8] = 2081;
          *(_QWORD *)&v55[10] = v38;
          v56 = 2049;
          v57 = v40;
          v58 = 2050;
          v59 = v41;
          LODWORD(v46) = 38;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v36, 2, "meas index: %{public}d, deviceId: %{private}s, range: %{private}f, age: %{public}f", v55, v46);
          v43 = v42;
          if (v37 && v48 < 0)
            operator delete(v47[0]);
          sub_100512490("Generic", 1, 0, 2, "std::vector<CLMiLoProtobufWrapper::Measurement> CLMicroLocationSensorsLogic::getUwbMeasurements()", "%s\n", v43);
          if (v43 != buf)
            free(v43);
        }
        ++v27;
        v25 = v51;
        v24 = v52;
        v26 += 80;
      }
      while (0xCCCCCCCCCCCCCCCDLL * ((v52 - v51) >> 4) > v27);
    }
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    v60[0] = a2;
    while (v25 != v24)
    {
      sub_1002C0A54(buf, v25);
      v67 = 0;
      sub_1003650E4(v60, (uint64_t)buf);
      sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)buf);
      v25 += 80;
    }
    goto LABEL_82;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v12 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 68289026;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)&buf[8] = 2082;
    *(_QWORD *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"CLMicroLocationSensorsLogic::getUwbMeasurements, fState.fStartTime is nullopt!\"}", buf, 0x12u);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  }
  v13 = qword_1022A00F8;
  if (os_signpost_enabled((os_log_t)qword_1022A00F8))
  {
    *(_DWORD *)buf = 68289026;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)&buf[8] = 2082;
    *(_QWORD *)&buf[10] = "";
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "CLMicroLocationSensorsLogic::getUwbMeasurements, fState.fStartTime is nullopt!", "{\"msg%{public}.0s\":\"CLMicroLocationSensorsLogic::getUwbMeasurements, fState.fStartTime is nullopt!\"}", buf, 0x12u);
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
}

void sub_10035EB90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  a35 = &a30;
  sub_100364F30((void ***)&a35);
  _Unwind_Resume(a1);
}

void sub_10035EC58()
{
  CFStringRef v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;

  sub_1001E4804(&v5);
  v4 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsScanDurationThreshold", 0x8000100u, kCFAllocatorNull);
  sub_1001FD9FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  v1 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_10035ED1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_10035ED34@<X0>(uint64_t a1@<X0>, double *a2@<X1>, _BYTE *a3@<X2>, _QWORD *a4@<X8>)
{
  double *v7;
  double *v8;
  _BYTE v10[2];
  _BYTE *v11;

  *a3 = 0;
  v7 = *(double **)(a1 + 8);
  v11 = v10;
  v10[1] = 0;
  v8 = sub_100364C28(v7, (double *)(a1 + 16), a2);
  if (*(double **)(a1 + 8) == v8 && *(_BYTE *)(a1 + 56))
    *a3 = 1;
  return sub_100364D0C(a4, v8, (_QWORD *)(a1 + 16));
}

void sub_10035EDC0(uint64_t a1, double a2)
{
  unint64_t v4;
  CFStringRef v5;
  int v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *v12;
  uint64_t v13;
  unsigned int v14;
  uint8_t buf[8];
  _BYTE v16[10];
  __int16 v17;
  uint64_t v18;

  *(_BYTE *)(a1 + 145) = 2;
  if (*(_BYTE *)(a1 + 272) && *(_BYTE *)(a1 + 273))
  {
    v4 = sub_10036AE64((uint64_t *)(a1 + 608));
    sub_1001E4804(buf);
    v14 = 0;
    v5 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiNumberOfMeasurementsForScanExtension", 0x8000100u, kCFAllocatorNull);
    v6 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v5, &v14);
    CFRelease(v5);
    v7 = v14;
    v8 = *(std::__shared_weak_count **)v16;
    if (*(_QWORD *)v16)
    {
      v9 = (unint64_t *)(*(_QWORD *)v16 + 8);
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    v11 = 2;
    if (v6)
      v11 = v7;
    if (v4 >= v11)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v12 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
      {
        v13 = sub_10036AE64((uint64_t *)(a1 + 608));
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v16 = 2082;
        *(_QWORD *)&v16[2] = "";
        v17 = 2050;
        v18 = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Received valid scan results, clearing WiFi scan error state\", \"number of APs in scan buffer\":%{public}llu}", buf, 0x1Cu);
      }
      *(_BYTE *)(a1 + 272) = 0;
    }
  }
  sub_10037E288(*(unsigned __int8 **)(a1 + 304), (a1 + 8), a2);
  *(_WORD *)(a1 + 272) = 0;
}

void sub_10035EFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10035EFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a1 + 304);
  v4 = sub_10036AE64((uint64_t *)(a1 + 608));
  return sub_10037F42C(v3, a2, v4);
}

void sub_10035F000(uint64_t a1)
{
  CFStringRef v2;
  char v3;
  _BOOL4 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  char v8;
  CFStringRef v9;
  char v10;
  _BOOL4 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  sub_1001E4804(&v17);
  v16 = 0;
  v2 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsScanBleLeechedBeaconsRSSIEnabled", 0x8000100u, kCFAllocatorNull);
  v3 = sub_1001E48E4(v17, (uint64_t)v2, &v16);
  CFRelease(v2);
  v4 = v16;
  v5 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v4)
    v8 = 0;
  else
    v8 = v3;
  if ((v8 & 1) != 0)
    sub_10035F5AC(a1);
  else
    sub_10035F1F8(a1);
  sub_1001E4804(&v17);
  v16 = 0;
  v9 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsScanUWBRangeEnabled", 0x8000100u, kCFAllocatorNull);
  v10 = sub_1001E48E4(v17, (uint64_t)v9, &v16);
  CFRelease(v9);
  v11 = v16;
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
    v15 = 0;
  else
    v15 = v10;
  if ((v15 & 1) != 0)
    sub_10035FB90(a1);
  else
    sub_10035F8B8(a1);
}

void sub_10035F188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10035F1F8(uint64_t a1)
{
  NSObject *v1;
  const char *v2;
  uint8_t *v3;
  NSObject *v5;
  char v6;
  const char *v7;
  uint8_t *v8;
  __n128 v9;
  uint64_t v10;
  _QWORD v11[3];
  void **v12[2];
  uint8_t buf[16];
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(a1 + 168))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v1 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "BLE spyscan session already running", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      LOWORD(v12[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "BLE spyscan session already running", v12, 2);
      v3 = (uint8_t *)v2;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::startBleSpyscanSessionIfStopped()", "%s\n", v2);
      if (v3 != buf)
        free(v3);
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Start BLE spyscan session", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      LOWORD(v12[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Start BLE spyscan session", v12, 2);
      v8 = (uint8_t *)v7;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::startBleSpyscanSessionIfStopped()", "%s\n", v7);
      if (v8 != buf)
        free(v8);
    }
    sub_10035FEAC((uint64_t *)a1);
    v6 = sub_10035CB1C(a1);
    memset(v11, 0, sizeof(v11));
    sub_100364A90(v11, *(id **)(a1 + 784), *(id **)(a1 + 792), (uint64_t)(*(_QWORD *)(a1 + 792) - *(_QWORD *)(a1 + 784)) >> 3);
    v9 = 0uLL;
    v10 = 0;
    sub_1002EC7DC((uint64_t)buf, 0, 1, v6, (uint64_t)v11, &v9, 0.0);
    v12[0] = (void **)&v9;
    sub_100259608(v12);
    v12[0] = (void **)v11;
    sub_100364928(v12);
    sub_10035CDF4(a1, (uint64_t)buf);
    sub_10035B118(a1 + 8, 1);
    v12[0] = (void **)&v15;
    sub_100259608(v12);
    v12[0] = (void **)&v14;
    sub_100364928(v12);
  }
}

void sub_10035F570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_100259608((void ***)va);
  sub_100364928((void ***)va);
  _Unwind_Resume(a1);
}

void sub_10035F5AC(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (*(_BYTE *)(a1 + 168))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v2 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Stopping BLE spyscan session", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Stopping BLE spyscan session", v8, 2);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::stopBleSpyscanSessionIfRunning()", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
    sub_10031E2E0(a1 + 320);
    *(_WORD *)(a1 + 808) = 0;
    sub_100364238(a1 + 656, *(_QWORD **)(a1 + 664));
    *(_QWORD *)(a1 + 656) = a1 + 664;
    *(_QWORD *)(a1 + 672) = 0;
    *(_QWORD *)(a1 + 664) = 0;
    sub_1003602A4(a1);
    sub_10036611C(a1 + 816);
    sub_10035B118(a1 + 8, 0);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BLE spyscan session already stopped", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "BLE spyscan session already stopped", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::stopBleSpyscanSessionIfRunning()", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
  }
}

void sub_10035F8B8(uint64_t a1)
{
  NSObject *v1;
  const char *v2;
  uint8_t *v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (*(_BYTE *)(a1 + 169))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v1 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "ranging session already running", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "ranging session already running", v8, 2);
      v3 = (uint8_t *)v2;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::startRangingSessionIfStopped()", "%s\n", v2);
      if (v3 != buf)
        free(v3);
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "start a ranging session", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "start a ranging session", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::startRangingSessionIfStopped()", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    sub_10031E8FC(a1 + 320);
    sub_10035B2F8(a1 + 8, 1);
  }
}

void sub_10035FB90(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (*(_BYTE *)(a1 + 169))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v2 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "stop a ranging session", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "stop a ranging session", v8, 2);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::stopRangingSessionIfRunning()", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
    sub_10031EA9C(a1 + 320);
    sub_100364238(a1 + 720, *(_QWORD **)(a1 + 728));
    *(_QWORD *)(a1 + 720) = a1 + 728;
    *(_QWORD *)(a1 + 736) = 0;
    *(_QWORD *)(a1 + 728) = 0;
    sub_10035B2F8(a1 + 8, 0);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "ranging session already stopped", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "ranging session already stopped", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::stopRangingSessionIfRunning()", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
  }
}

void sub_10035FE88(uint64_t a1)
{
  sub_10035F5AC(a1);
  sub_10035FB90(a1);
}

void sub_10035FEAC(uint64_t *a1)
{
  double Current;
  NSDate *v3;
  CFStringRef v4;
  int v5;
  int v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  int v10;
  double v11;
  uint64_t v12;
  uint64_t i;
  void **v14;
  __int128 v15;
  unint64_t v16;
  char v17;
  void **v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  NSObject *v22;
  uint64_t v23;
  void *__p[2];
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  std::string v29;
  std::string v30;
  _BYTE buf[28];
  __int16 v32;
  uint64_t v33;

  Current = j__CFAbsoluteTimeGetCurrent();
  v3 = +[NSDate date](NSDate, "date");
  sub_1001E4804(buf);
  LODWORD(__p[0]) = 0;
  v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumberDaysToUseBtIdentities", 0x8000100u, kCFAllocatorNull);
  v5 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v4, __p);
  CFRelease(v4);
  v6 = (int)__p[0];
  v7 = *(std::__shared_weak_count **)&buf[8];
  if (*(_QWORD *)&buf[8])
  {
    v8 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v5)
    v10 = ~v6;
  else
    v10 = -29;
  v11 = sub_1003B1DE4((uint64_t)v3, v10);
  std::to_string(&v30, v11);
  std::to_string(&v29, Current + 86400.0);
  sub_100283C48(a1[39], (uint64_t)&v30, (uint64_t)&v29, &v27);
  v12 = v27;
  for (i = v28; v12 != i; v12 += 72)
  {
    v14 = (void **)(v12 + 16);
    if (*(char *)(v12 + 39) < 0)
    {
      v16 = *(_QWORD *)(v12 + 24);
      if (v16)
      {
        sub_100115CE4(buf, *v14, v16);
        goto LABEL_15;
      }
    }
    else if (*(_BYTE *)(v12 + 39))
    {
      v15 = *(_OWORD *)v14;
      *(_QWORD *)&buf[16] = *(_QWORD *)(v12 + 32);
      *(_OWORD *)buf = v15;
LABEL_15:
      v17 = 1;
      goto LABEL_17;
    }
    v17 = 0;
    buf[0] = 0;
LABEL_17:
    buf[24] = v17;
    v18 = (void **)(v12 + 40);
    if (*(char *)(v12 + 63) < 0)
    {
      v20 = *(_QWORD *)(v12 + 48);
      if (v20)
      {
        sub_100115CE4(__p, *v18, v20);
        goto LABEL_22;
      }
    }
    else if (*(_BYTE *)(v12 + 63))
    {
      v19 = *(_OWORD *)v18;
      v25 = *(_QWORD *)(v12 + 56);
      *(_OWORD *)__p = v19;
LABEL_22:
      v21 = 1;
      goto LABEL_24;
    }
    v21 = 0;
    LOBYTE(__p[0]) = 0;
LABEL_24:
    v26 = v21;
    sub_100366170(a1 + 102, (_OWORD *)v12, (__int128 *)buf, (__int128 *)__p, (uint64_t)"", (_QWORD *)(v12 + 64));
    if (v26 && SHIBYTE(v25) < 0)
      operator delete(__p[0]);
    if (buf[24] && (buf[23] & 0x80000000) != 0)
      operator delete(*(void **)buf);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v22 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v23 = a1[105];
    *(_DWORD *)buf = 68289538;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)&buf[8] = 2082;
    *(_QWORD *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2050;
    *(_QWORD *)&buf[20] = 0x8E38E38E38E38E39 * ((v28 - v27) >> 3);
    v32 = 2050;
    v33 = v23;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"SensorsLogic, loadBleIdentitiesFromDb\", \"num of entries loaded\":%{public}lu, \"Total number of identities in memory\":%{public}lu}", buf, 0x26u);
  }
  *(_QWORD *)buf = &v27;
  sub_10029D4B8((void ***)buf);
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v29.__r_.__value_.__l.__data_);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
}

void sub_1003601FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38)
{
  if (a25 < 0)
    operator delete(__p);
  if (a31 < 0)
    operator delete(a26);
  _Unwind_Resume(exception_object);
}

void sub_1003602A4(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  void *__p[2];
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8_t buf[40];

  v8 = 0;
  v9 = 0;
  v10 = 0;
  v1 = *(uint64_t **)(a1 + 832);
  if (v1)
  {
    do
    {
      if (*((_BYTE *)v1 + 56))
      {
        if (*((char *)v1 + 55) < 0)
        {
          sub_100115CE4(buf, (void *)v1[4], v1[5]);
        }
        else
        {
          *(_OWORD *)buf = *((_OWORD *)v1 + 2);
          *(_QWORD *)&buf[16] = v1[6];
        }
      }
      else
      {
        memset(buf, 0, 24);
      }
      if (*((_BYTE *)v1 + 88))
      {
        if (*((char *)v1 + 87) < 0)
        {
          sub_100115CE4(__p, (void *)v1[8], v1[9]);
        }
        else
        {
          *(_OWORD *)__p = *((_OWORD *)v1 + 4);
          v7 = v1[10];
        }
      }
      else
      {
        __p[0] = 0;
        __p[1] = 0;
        v7 = 0;
      }
      v3 = v9;
      if (v9 >= v10)
      {
        v4 = sub_100365C00(&v8, v1 + 2, (uint64_t)buf, (uint64_t)__p, (double *)v1 + 16);
      }
      else
      {
        sub_100365D4C((uint64_t)&v10, v9, v1 + 2, (uint64_t)buf, (uint64_t)__p, (double *)v1 + 16);
        v4 = v3 + 72;
      }
      v9 = v4;
      if (SHIBYTE(v7) < 0)
        operator delete(__p[0]);
      if ((char)buf[23] < 0)
        operator delete(*(void **)buf);
      v1 = (uint64_t *)*v1;
    }
    while (v1);
    if (v9 != v8)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v5 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2050;
        *(_QWORD *)&buf[20] = 0x8E38E38E38E38E39 * ((uint64_t)(v9 - v8) >> 3);
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"SensorsLogic, back up BT identities data to DB\", \"Num Entries\":%{public}lu}", buf, 0x1Cu);
      }
      sub_100362C1C(*(_QWORD *)(a1 + 312));
    }
  }
  *(_QWORD *)buf = &v8;
  sub_10029D4B8((void ***)buf);
}

void sub_1003604E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  __p = &a15;
  sub_10029D4B8((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_100360544(uint64_t a1)
{
  NSObject *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  const char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[2];
  uint64_t buf[205];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "stop a motion state-machine", (uint8_t *)buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    LOWORD(v13[0]) = 0;
    LODWORD(v12) = 2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "stop a motion state-machine", v13);
    v10 = (char *)v9;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::stopMotionSM()", "%s\n", v9);
    if (v10 != (char *)buf)
      free(v10);
  }
  sub_100362EAC(a1 + 592, 5, v3, v4, v5, v6, v7, v8, v11, v12, v13[0], v13[1], buf[0], buf[1], buf[2], (void *)buf[3]);
}

void sub_1003606E0(uint64_t a1, int a2)
{
  uint64_t v3;
  NSObject *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  const char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[2];
  uint64_t buf[205];

  if (!a2 || !*(_DWORD *)(a1 + 592))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v3 = a1 + 592;
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "start motion state-machine geofence", (uint8_t *)buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      LOWORD(v15[0]) = 0;
      LODWORD(v14) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "start motion state-machine geofence", v15);
      v12 = (char *)v11;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationSensorsLogic::setFence(BOOL)", "%s\n", v11);
      if (v12 != (char *)buf)
        free(v12);
    }
    sub_100362EAC(v3, 0, v5, v6, v7, v8, v9, v10, v13, v14, v15[0], v15[1], buf[0], buf[1], buf[2], (void *)buf[3]);
  }
}

void sub_10036088C(_BYTE *a1)
{
  uint64_t v2;
  double Current;
  int v4;
  _BYTE v5[20];
  int v6;
  __int128 v7;
  _BYTE v8[32];
  uint64_t v9;

  if (!a1[170])
  {
    sub_1002BC04C((uint64_t)v5);
    v6 |= 2u;
    v5[12] = 1;
    v4 = 0;
    sub_1000B0C3C(&v4);
    *(_QWORD *)&v7 = sub_1000B0D38((ssize_t)&v4);
    *((_QWORD *)&v7 + 1) = v2;
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_1003609B8(&v7, (uint64_t)v5, (uint64_t)v8, Current);
    (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a1 + 144))(a1, v8);
    sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v9);
    sub_1000B0D18((unsigned int *)&v4);
    sub_10031EEAC((uint64_t)(a1 + 320));
    sub_10035B4D8((uint64_t)(a1 + 8), 1);
    sub_1002E1EDC((wireless_diagnostics::google::protobuf::MessageLite *)v5);
  }
}

void sub_100360978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  uint64_t v12;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1000B0D18(&a11);
  sub_1002E1EDC((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_1003609B8(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  _BYTE v8[304];

  sub_1000B13D8((uint64_t)v8);
  sub_1003597C8((uint64_t)v8, a2);
  sub_1000B0EC8(a3, a1, *(_DWORD *)(a2 + 8), (uint64_t)v8, a4);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100360A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&a9);
  _Unwind_Resume(a1);
}

void sub_100360A40(_BYTE *a1)
{
  uint64_t v2;
  double Current;
  int v4;
  _BYTE v5[20];
  int v6;
  __int128 v7;
  _BYTE v8[32];
  uint64_t v9;

  if (a1[170])
  {
    sub_1002BC04C((uint64_t)v5);
    v6 |= 2u;
    v5[12] = 0;
    v4 = 0;
    sub_1000B0C3C(&v4);
    *(_QWORD *)&v7 = sub_1000B0D38((ssize_t)&v4);
    *((_QWORD *)&v7 + 1) = v2;
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_1003609B8(&v7, (uint64_t)v5, (uint64_t)v8, Current);
    (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a1 + 144))(a1, v8);
    sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v9);
    sub_1000B0D18((unsigned int *)&v4);
    sub_10031EEE4((uint64_t)(a1 + 320));
    sub_10035B4D8((uint64_t)(a1 + 8), 0);
    sub_1002E1EDC((wireless_diagnostics::google::protobuf::MessageLite *)v5);
  }
}

void sub_100360B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  uint64_t v12;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1000B0D18(&a11);
  sub_1002E1EDC((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_100360B68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  NSObject *v6;
  float v7;
  std::string *p_p;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[3];
  std::string __p;
  uint64_t v14;
  uint8_t buf[8];
  __int16 v16;
  const char *v17;
  __int16 v18;
  int v19;
  __int16 v20;
  std::string *v21;
  __int16 v22;
  int v23;

  if (*a2 != a2[1])
  {
    *(_BYTE *)(a1 + 273) = 1;
    sub_10036A4F4(a1 + 608, a2, v12);
    sub_10035AAEC(v12, &v10);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      v3 = v10;
      for (i = v11; v3 != i; v3 += 88)
      {
        v5 = *(_QWORD *)(v3 + 16);
        if (!v5)
          v5 = *(_QWORD *)(qword_102310298 + 16);
        v14 = nullsub_34(*(_QWORD *)(v5 + 24));
        if (qword_1022A0100 != -1)
          dispatch_once(&qword_1022A0100, &stru_102130F08);
        v6 = qword_1022A0108;
        if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEBUG))
        {
          v7 = *(float *)(v5 + 20);
          sub_1000C2254(&v14, &__p);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          v9 = *(_DWORD *)(v5 + 32);
          *(_DWORD *)buf = 68289795;
          *(_DWORD *)&buf[4] = 0;
          v16 = 2082;
          v17 = "";
          v18 = 1025;
          v19 = (int)v7;
          v20 = 2081;
          v21 = p_p;
          v22 = 1025;
          v23 = v9;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Wifi AP received\", \"rssi\":%{private}d, \"mac\":%{private, location:escape_only}s, \"channel\":%{private}d}", buf, 0x28u);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
    sub_10037E1EC(*(uint64_t **)(a1 + 304), &v10);
    *(_QWORD *)buf = &v10;
    sub_1002A1A78((void ***)buf);
    *(_QWORD *)buf = v12;
    sub_1003648B8((void ***)buf);
  }
}

void sub_100360DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void **a21)
{
  a21 = (void **)&a11;
  sub_1002A1A78(&a21);
  a21 = (void **)&a14;
  sub_1003648B8(&a21);
  _Unwind_Resume(a1);
}

void sub_100360DE8(uint64_t a1)
{
  NSObject *v2;
  _DWORD v3[2];
  __int16 v4;
  const char *v5;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    v4 = 2082;
    v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"sensorLogic, received wifi scan error\"}", (uint8_t *)v3, 0x12u);
  }
  *(_BYTE *)(a1 + 272) = 1;
}

void sub_100360EC8(uint64_t a1)
{
  NSObject *v2;
  _DWORD v3[2];
  __int16 v4;
  const char *v5;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    v4 = 2082;
    v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"sensorLogic, received wifi scan error busy\"}", (uint8_t *)v3, 0x12u);
  }
  *(_BYTE *)(a1 + 272) = 1;
}

void sub_100360FA8(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  void **v5;
  void *__p[2];
  char v7;
  uint8_t buf[4];
  int v9;
  __int16 v10;
  const char *v11;
  __int16 v12;
  void **v13;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v4 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    sub_100CF1FAC(a2, __p);
    if (v7 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    *(_DWORD *)buf = 68289282;
    v9 = 0;
    v10 = 2082;
    v11 = "";
    v12 = 2082;
    v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Logic, onAssociatedStateChange\", \"state\":%{public, location:escape_only}s}", buf, 0x1Cu);
    if (v7 < 0)
      operator delete(__p[0]);
  }
  sub_10031F180(a1 + 176, a2);
  sub_1003829D0(*(_QWORD *)(a1 + 304), a2);
}

void sub_1003610E0(uint64_t a1)
{
  NSObject *v2;
  int v3;
  NSObject *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  __int16 v9;
  const char *v10;
  __int16 v11;
  int v12;

  if (*(_BYTE *)(a1 + 809) != 1)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v2 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v3 = *(unsigned __int8 *)(a1 + 809);
      v7 = 68289282;
      v8 = 0;
      v9 = 2082;
      v10 = "";
      v11 = 1026;
      v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Ble requested scan timeout but the session state is not running\", \"fBleSessionStatusRequested\":%{public}u}", (uint8_t *)&v7, 0x18u);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    }
    v4 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      v5 = *(unsigned __int8 *)(a1 + 809);
      v7 = 68289282;
      v8 = 0;
      v9 = 2082;
      v10 = "";
      v11 = 1026;
      v12 = v5;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Ble requested scan timeout but the session state is not running", "{\"msg%{public}.0s\":\"Ble requested scan timeout but the session state is not running\", \"fBleSessionStatusRequested\":%{public}u}", (uint8_t *)&v7, 0x18u);
    }
  }
  v6 = *(unsigned __int8 *)(a1 + 808);
  sub_10031E2E0(a1 + 320);
  *(_WORD *)(a1 + 808) = 0;
  if (v6 == 2)
    sub_10035C060(a1);
  sub_1003612A0(a1);
}

void sub_1003612A0(uint64_t a1)
{
  double v2;
  NSObject *v3;
  NSObject *v4;
  double Current;
  CFStringRef v6;
  int v7;
  double v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  double v12;
  NSObject *v13;
  uint64_t v14[3];
  _QWORD v15[3];
  uint64_t v16[3];
  uint8_t buf[8];
  _BYTE v18[10];
  __int16 v19;
  uint64_t v20;

  if (*(_BYTE *)(a1 + 160))
  {
    v2 = *(double *)(a1 + 152);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"CLMicroLocationSensorsLogic::requestWiFiScan, fState.fStartTime is nullopt!\"}", buf, 0x12u);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    }
    v4 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "CLMicroLocationSensorsLogic::requestWiFiScan, fState.fStartTime is nullopt!", "{\"msg%{public}.0s\":\"CLMicroLocationSensorsLogic::requestWiFiScan, fState.fStartTime is nullopt!\"}", buf, 0x12u);
    }
    Current = j__CFAbsoluteTimeGetCurrent();
    v2 = Current;
    if (!*(_BYTE *)(a1 + 160))
      *(_BYTE *)(a1 + 160) = 1;
    *(double *)(a1 + 152) = Current;
  }
  sub_1001E4804(buf);
  v15[0] = 0;
  v6 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumAgeForValidity", 0x8000100u, kCFAllocatorNull);
  v7 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v6, v15);
  CFRelease(v6);
  v8 = *(double *)v15;
  v9 = *(std::__shared_weak_count **)v18;
  if (*(_QWORD *)v18)
  {
    v10 = (unint64_t *)(*(_QWORD *)v18 + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (v7)
    v12 = v8;
  else
    v12 = 1.0;
  sub_10036AA10(a1 + 608, v16, v2, v12);
  *(_QWORD *)buf = v16;
  sub_1003648B8((void ***)buf);
  memset(v15, 0, sizeof(v15));
  sub_100365A94(v15, *(_QWORD *)(a1 + 608), *(_QWORD *)(a1 + 616), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a1 + 616) - *(_QWORD *)(a1 + 608)) >> 3));
  sub_10035AAEC(v15, v14);
  buf[0] = *(_BYTE *)(a1 + 144);
  *(_QWORD *)v18 = 0;
  sub_10031CDB8(a1 + 320, (uint64_t)buf);
  *(_BYTE *)(a1 + 145) = 1;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v13 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v18 = 2082;
    *(_QWORD *)&v18[2] = "";
    v19 = 2050;
    v20 = 0x2E8BA2E8BA2E8BA3 * ((v14[1] - v14[0]) >> 3);
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"SensorsLogic, WiFi scan starts\", \"Num Valid Buffered WiFi APs\":%{public}lu}", buf, 0x1Cu);
  }
  sub_10037E1EC(*(uint64_t **)(a1 + 304), v14);
  *(_QWORD *)buf = v14;
  sub_1002A1A78((void ***)buf);
  *(_QWORD *)buf = v15;
  sub_1003648B8((void ***)buf);
}

void sub_100361640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19)
{
  a19 = (void **)&a10;
  sub_1002A1A78(&a19);
  a19 = (void **)&a13;
  sub_1003648B8(&a19);
  _Unwind_Resume(a1);
}

void sub_100361694(uint64_t a1, double *a2, uint64_t a3)
{
  CFStringRef v6;
  int v7;
  double v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  double v12;
  std::locale::__imp **v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  char v16;
  double v17;
  double v18;

  v17 = 0.0;
  sub_1001E4804(&v14);
  v18 = 0.0;
  v6 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleScanMaximalAgeForValidity", 0x8000100u, kCFAllocatorNull);
  v7 = sub_1001FD9FC(v14, (uint64_t)v6, &v18);
  CFRelease(v6);
  v8 = v18;
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = 1.0;
  if (v7)
    v12 = v8;
  v17 = v12;
  sub_100361814(a3, (uint64_t)&v14);
  if (v16)
  {
    v13 = (std::locale::__imp **)sub_10037B4B8(*(_QWORD *)(a1 + 304));
    if (sub_1002793C0(a2, (uint64_t)&v14, &v17, v13))
    {
      if (!v16)
        sub_10028DF3C();
      sub_1003652E0(a1 + 656, (uint64_t)&v14);
      sub_100365284((uint64_t *)(a1 + 648));
    }
    if (v16)
      sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)&v14);
  }
}

void sub_1003617E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100361814(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  _QWORD v6[8];
  int v7;
  int v8;

  sub_1002BB8D0((uint64_t)v6);
  v4 = *(_DWORD *)(a1 + 16);
  if (!sub_1002BC664(v4))
    __assert_rtn("set_datatype", "microlocation.pb.h", 10437, "::CLMicroLocationProto::DataType_IsValid(value)");
  v5 = *(_QWORD *)(a1 + 8);
  v7 = v4;
  v8 |= 3u;
  v6[1] = v5;
  sub_100358044((uint64_t)v6, a1);
  sub_1002C0A54(a2, v6);
  *(_BYTE *)(a2 + 80) = 1;
  sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)v6);
}

void sub_1003618C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)&a9);
  _Unwind_Resume(a1);
}

void sub_1003618D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  std::locale::__imp **v5;
  char v6;
  NSObject *v7;
  char *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  int v19;
  int v20;
  __int16 v21;
  const char *v22;
  __int16 v23;
  char *v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;

  if (a1[105] >= (unint64_t)a1[107])
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v15 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v16 = a1[105];
      v19 = 68289283;
      v20 = 0;
      v21 = 2082;
      v22 = "";
      v23 = 2049;
      v24 = (char *)v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"fSameAccountBleIdentities exceeded max entries\", \"Size\":%{private}lu}", (uint8_t *)&v19, 0x1Cu);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    }
    v17 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      v18 = a1[105];
      v19 = 68289283;
      v20 = 0;
      v21 = 2082;
      v22 = "";
      v23 = 2049;
      v24 = (char *)v18;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v17, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "fSameAccountBleIdentities exceeded max entries", "{\"msg%{public}.0s\":\"fSameAccountBleIdentities exceeded max entries\", \"Size\":%{private}lu}", (uint8_t *)&v19, 0x1Cu);
    }
  }
  else if (*(_BYTE *)(a2 + 104))
  {
    v4 = a2 + 80;
    v5 = (std::locale::__imp **)sub_10037B4B8(a1[38]);
    if (sub_1002798F8(a2 + 80, v5))
    {
      sub_100365480((uint64_t)(a1 + 102), a2, a2);
      if ((v6 & 1) != 0)
      {
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
        v7 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
        {
          v8 = (char *)operator new(0x28uLL);
          *(_OWORD *)v8 = 0u;
          *((_OWORD *)v8 + 1) = 0u;
          *(_QWORD *)(v8 + 29) = 0;
          sub_100261F9C(a2, v8);
          if (!*(_BYTE *)(a2 + 104))
            sub_10028DF3C();
          v11 = *(const char **)(a2 + 48);
          v10 = a2 + 48;
          v9 = v11;
          if (*(char *)(v10 + 23) >= 0)
            v9 = (const char *)v10;
          if (!*(_BYTE *)(v10 + 24))
            v9 = "";
          if (*(char *)(v10 - 9) >= 0)
            v12 = (const char *)(v10 - 32);
          else
            v12 = *(const char **)(v10 - 32);
          if (!*(_BYTE *)(v10 - 8))
            v12 = "";
          if (*(char *)(v10 + 55) >= 0)
            v13 = v4;
          else
            v13 = *(_QWORD *)(v10 + 32);
          v14 = *(_QWORD *)(v10 + 64);
          v19 = 68290307;
          v20 = 0;
          v21 = 2082;
          v22 = "";
          v23 = 2081;
          v24 = v8;
          v25 = 2081;
          v26 = v12;
          v27 = 2081;
          v28 = v9;
          v29 = 2081;
          v30 = v13;
          v31 = 2050;
          v32 = v14;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"buffered a same icloud account BT identity\", \"BT uuid\":%{private, location:escape_only}s, \"Device name\":%{private, location:escape_only}s, \"Stable identifier\":%{private, location:escape_only}s, \"device model\":%{private, location:escape_only}s, \"Time stamp_s\":\"%{public}.09f\"}", (uint8_t *)&v19, 0x44u);
          operator delete(v8);
        }
      }
    }
  }
}

void sub_100361BF4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100361C0C(uint64_t a1, uint64_t *a2, double a3)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  _OWORD *v7;
  NSObject *v8;
  uint64_t v9;
  double v10;
  void *p_p;
  void *__p;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint8_t buf[8];
  _BYTE v18[20];
  __int16 v19;
  void *v20;
  double v21[2];
  char v22;

  v16 = a3;
  sub_100361EBC(a2, (uint64_t)&v14);
  v21[0] = 1.79769313e308;
  *(_QWORD *)buf = 0;
  *(_QWORD *)v18 = 0;
  *(_QWORD *)&v18[8] = 0;
  sub_100279798(&v16, &v14, v21, (std::locale::__imp **)buf);
  __p = buf;
  sub_100259608((void ***)&__p);
  sub_100365860(v14, v15, a1 + 720, a1 + 728, (uint64_t *)buf);
  sub_100365284((uint64_t *)(a1 + 712));
  v4 = v14;
  for (i = v15; v4 != i; v4 += 80)
  {
    v6 = *(_QWORD *)(v4 + 56);
    if (!v6)
      v6 = *(_QWORD *)(qword_102310298 + 56);
    sub_10035777C(*(uint64_t ***)(v6 + 32), v21);
    if (v22)
    {
      v7 = operator new(0x28uLL);
      __p = v7;
      v13 = xmmword_101B97FF0;
      *v7 = 0u;
      v7[1] = 0u;
      *(_QWORD *)((char *)v7 + 29) = 0;
      sub_100261F9C((uint64_t)v21, v7);
    }
    else
    {
      sub_1015A2E04(&__p, "");
    }
    if (qword_1022A0100 != -1)
      dispatch_once(&qword_1022A0100, &stru_102130F08);
    v8 = qword_1022A0108;
    if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEBUG))
    {
      v9 = *(_QWORD *)(v4 + 56);
      if (!v9)
        v9 = *(_QWORD *)(qword_102310298 + 56);
      v10 = *(float *)(v9 + 20);
      p_p = &__p;
      if (v13 < 0)
        p_p = __p;
      *(_DWORD *)buf = 68289539;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      *(_WORD *)&v18[10] = 2050;
      *(double *)&v18[12] = v10;
      v19 = 2081;
      v20 = p_p;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Ingested UWB range measurement\", \"range\":\"%{public}.3f\", \"device ID\":%{private, location:escape_only}s}", buf, 0x26u);
    }
    if (SHIBYTE(v13) < 0)
      operator delete(__p);
  }
  *(_QWORD *)buf = &v14;
  sub_100364F30((void ***)buf);
}

void sub_100361E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_100259608(&a14);
  a14 = (void **)&a17;
  sub_100364F30(&a14);
  _Unwind_Resume(a1);
}

void sub_100361EBC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8[10];
  char v9;
  __int128 v10;
  unint64_t v11;

  v10 = 0uLL;
  v11 = 0;
  sub_1003642B4((uint64_t *)&v10, (a1[1] - *a1) >> 6);
  v4 = *a1;
  v5 = a1[1];
  while (v4 != v5)
  {
    sub_100364364(v4, (uint64_t)v8);
    if (v9)
    {
      v6 = *((_QWORD *)&v10 + 1);
      if (*((_QWORD *)&v10 + 1) >= v11)
      {
        v7 = sub_100364580((uint64_t *)&v10, (uint64_t)v8);
      }
      else
      {
        sub_1002C0A54(*((_QWORD *)&v10 + 1), v8);
        v7 = v6 + 80;
      }
      *((_QWORD *)&v10 + 1) = v7;
      if (v9)
        sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)v8);
    }
    v4 += 64;
  }
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v11;
  v11 = 0;
  v10 = 0uLL;
  v8[0] = (void **)&v10;
  sub_100364F30(v8);
}

void sub_100361F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v10;

  a10 = (void **)(v10 - 64);
  sub_100364F30(&a10);
  _Unwind_Resume(a1);
}

void sub_100361FDC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  sub_100362EAC(a1 + 592, 3, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

void sub_100361FE8(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  CFStringRef v8;
  int v9;
  double v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  CFStringRef v14;
  int v15;
  double v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  std::string::size_type v25;
  std::string *v26;
  __int128 v27;
  void **v28;
  std::string::size_type v29;
  std::string *v30;
  void *v31;
  char v32;
  NSObject *v33;
  void *p_p;
  void *v35;
  const char *v36;
  std::string *v37;
  uint64_t v38;
  uint64_t v39;
  std::string v40;
  std::string v41;
  void *v42[2];
  int64_t v43;
  std::string v44;
  void *__p;
  _BYTE v46[15];
  char v47;
  std::string v48;
  std::string v49;

  sub_1015A2E04(&__p, "onFailureToReceiveGeofenceStatusReports: ");
  sub_1015A2E04(&v44, "");
  if (*(_DWORD *)(a1 + 592) == 1)
  {
    std::string::assign(&v44, "Restarting Geofence. ");
    sub_100362EAC(a1 + 592, 0, v2, v3, v4, v5, v6, v7, v38, v39, (uint64_t)v40.__r_.__value_.__l.__data_, v40.__r_.__value_.__l.__size_, v40.__r_.__value_.__r.__words[2], (uint64_t)v41.__r_.__value_.__l.__data_, v41.__r_.__value_.__l.__size_, (void *)v41.__r_.__value_.__r.__words[2]);
  }
  else
  {
    std::string::assign(&v44, "Ignoring failure. ");
  }
  sub_1001E4804(&v48);
  v42[0] = 0;
  v8 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxTimeAllowedWithoutFenceStatusReport", 0x8000100u, kCFAllocatorNull);
  v9 = sub_1001FD9FC((uint64_t)v48.__r_.__value_.__l.__data_, (uint64_t)v8, v42);
  CFRelease(v8);
  v10 = *(double *)v42;
  size = (std::__shared_weak_count *)v48.__r_.__value_.__l.__size_;
  if (v48.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v48.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  if (!v9)
    v10 = 600.0;
  sub_1001E4804(&v48);
  v42[0] = 0;
  v14 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxDelayAfterFenceStatusReportTimerFires", 0x8000100u, kCFAllocatorNull);
  v15 = sub_1001FD9FC((uint64_t)v48.__r_.__value_.__l.__data_, (uint64_t)v14, v42);
  CFRelease(v14);
  v16 = *(double *)v42;
  v17 = (std::__shared_weak_count *)v48.__r_.__value_.__l.__size_;
  if (v48.__r_.__value_.__l.__size_)
  {
    v18 = (unint64_t *)(v48.__r_.__value_.__l.__size_ + 8);
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (!v15)
    v16 = 30.0;
  std::to_string(&v41, v10);
  v20 = std::string::insert(&v41, 0, " Running with FenceStatusTimeout: ");
  v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  v22 = std::string::append(&v49, "and RaceDelayTimeout: ");
  v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v40, v16);
  if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v24 = &v40;
  else
    v24 = (std::string *)v40.__r_.__value_.__r.__words[0];
  if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v25 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
  else
    v25 = v40.__r_.__value_.__l.__size_;
  v26 = std::string::append(&v48, (const std::string::value_type *)v24, v25);
  v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  v43 = v26->__r_.__value_.__r.__words[2];
  *(_OWORD *)v42 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v40.__r_.__value_.__l.__data_);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v49.__r_.__value_.__l.__data_);
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v41.__r_.__value_.__l.__data_);
  sub_1003625F4((const void **)&__p, (const void **)&v44.__r_.__value_.__l.__data_, (uint64_t)&v48);
  if (v43 >= 0)
    v28 = v42;
  else
    v28 = (void **)v42[0];
  if (v43 >= 0)
    v29 = HIBYTE(v43);
  else
    v29 = (std::string::size_type)v42[1];
  v30 = std::string::append(&v48, (const std::string::value_type *)v28, v29);
  v31 = (void *)v30->__r_.__value_.__r.__words[0];
  v49.__r_.__value_.__r.__words[0] = v30->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v49.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v30->__r_.__value_.__r.__words[1] + 7);
  v32 = HIBYTE(v30->__r_.__value_.__r.__words[2]);
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (v47 < 0)
    operator delete(__p);
  __p = v31;
  *(_QWORD *)v46 = v49.__r_.__value_.__r.__words[0];
  *(_QWORD *)&v46[7] = *(std::string::size_type *)((char *)v49.__r_.__value_.__r.__words + 7);
  v47 = v32;
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v33 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
  {
    p_p = &__p;
    if (v47 < 0)
      p_p = __p;
    LODWORD(v48.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v48.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v48, 0xCu);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(&v48, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v35 = &__p;
    if (v47 < 0)
      v35 = __p;
    LODWORD(v49.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v49.__r_.__value_.__r.__words + 4) = (std::string::size_type)v35;
    _os_log_send_and_compose_impl(2, 0, &v48, 1628, &_mh_execute_header, qword_1022A00F8, 16, "%s", (const char *)&v49);
    v37 = (std::string *)v36;
    sub_100512490("Generic", 1, 0, 0, "virtual void CLMicroLocationSensorsLogic::onFailureToReceiveGeofenceStatusReports()", "%s\n", v36);
    if (v37 != &v48)
      free(v37);
  }
  sub_10038AA2C((uint64_t *)&__p);
  if (SHIBYTE(v43) < 0)
    operator delete(v42[0]);
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v44.__r_.__value_.__l.__data_);
  if (v47 < 0)
    operator delete(__p);
}

void sub_1003624FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a28 < 0)
    operator delete(__p);
  if (a35 < 0)
    operator delete(a30);
  if (a41 < 0)
    operator delete(a36);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003625F4@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  size_t v5;
  size_t v6;
  uint64_t result;
  char *v8;
  const void *v9;
  char *v10;
  const void *v11;

  if (*((char *)a1 + 23) >= 0)
    v5 = *((unsigned __int8 *)a1 + 23);
  else
    v5 = (size_t)a1[1];
  if (*((char *)a2 + 23) >= 0)
    v6 = *((unsigned __int8 *)a2 + 23);
  else
    v6 = (size_t)a2[1];
  result = sub_100259584(a3, v6 + v5);
  if (*(char *)(result + 23) >= 0)
    v8 = (char *)result;
  else
    v8 = *(char **)result;
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0)
      v9 = a1;
    else
      v9 = *a1;
    result = (uint64_t)memmove(v8, v9, v5);
  }
  v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0)
      v11 = a2;
    else
      v11 = *a2;
    result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

void sub_1003626BC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  sub_100362EAC(a1 + 592, 4, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1003626C8(uint64_t result, int a2, double a3)
{
  *(double *)(result + 288) = a3;
  *(_DWORD *)(result + 280) = a2;
  return result;
}

uint64_t sub_1003626D4(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 296))
  {
    v1 = result;
    result = sub_10031E75C(result + 320);
    *(_BYTE *)(v1 + 296) = 0;
  }
  return result;
}

void sub_100362704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *__p;
  void *v4;
  uint64_t v5;

  v2 = a1 + 320;
  __p = 0;
  v4 = 0;
  v5 = 0;
  sub_10025EA00(&__p, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  sub_10031DED4(v2, &__p);
  if (__p)
  {
    v4 = __p;
    operator delete(__p);
  }
}

void sub_100362764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_100362780(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(a1 + 280);
  return j__CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 288) < (double)a2 / 1000.0 || v2 != 1;
}

uint64_t sub_1003627D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 24);
  if (!v3)
    sub_10025FD1C();
  v4 = a1 + 320;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 48))(&v6, v3, a1 + 320);
  sub_10031CCF0(v4, &v6);
  result = v6;
  v6 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_10036283C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100362860(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 24);
  if (!v3)
    sub_10025FD1C();
  v4 = a1 + 320;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 48))(&v6, v3, a1 + 320);
  sub_10031CD18(v4, &v6);
  result = v6;
  v6 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_1003628CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003628F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 24);
  if (!v3)
    sub_10025FD1C();
  v4 = a1 + 320;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 48))(&v6, v3, a1 + 320);
  sub_10031CD40(v4, &v6);
  result = v6;
  v6 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_10036295C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100362980(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 24);
  if (!v3)
    sub_10025FD1C();
  v4 = a1 + 320;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 48))(&v6, v3, a1 + 320);
  sub_10031CD68(v4, &v6);
  result = v6;
  v6 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_1003629EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100362A10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 24);
  if (!v3)
    sub_10025FD1C();
  v4 = a1 + 320;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 48))(&v6, v3, a1 + 320);
  sub_10031CD90(v4, &v6);
  result = v6;
  v6 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_100362A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_100362AA0(uint64_t a1, int a2, _QWORD *a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  int v16;

  if (a2)
  {
    *(_QWORD *)(a1 + 776) = *a3;
    v16 = 1;
  }
  else
  {
    v16 = 2;
  }
  sub_100362EAC(a1 + 592, v16, (int)a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100362AC0(uint64_t a1)
{
  double Current;
  double v3;
  double v4;

  Current = j__CFAbsoluteTimeGetCurrent();
  if (*(_BYTE *)(a1 + 169)
    && (v3 = Current, v4 = Current - *(double *)(a1 + 776), v4 * 1000.0 < (double)sub_100362B44()))
  {
    return (uint64_t)((double)sub_100362B44() + (v3 - *(double *)(a1 + 776)) * -1000.0);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100362B44()
{
  CFStringRef v0;
  int v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsLocalizingBacklightOnInitialScanDelay", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 0;
}

void sub_100362C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100362C1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (sub_1000CC4F4(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 296);
    if (!v2)
      operator new();
    v3 = sub_10029B364(v2);
    sub_100365E4C(a1);
    return v3;
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Can't insert because the database is invalid", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationBluetoothIdentityTable::Entry]", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    return 0;
  }
}

void sub_100362E4C()
{
  operator delete();
}

uint64_t sub_100362E78(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 304) + 152))(*(_QWORD *)(a1 + 304));
}

__n128 sub_100362E88@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[54];
  *a2 = result;
  a2[1].n128_u64[0] = a1[55].n128_u64[0];
  return result;
}

double sub_100362E9C(uint64_t a1)
{
  double result;

  *(_DWORD *)(a1 + 880) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 864) = 0u;
  return result;
}

void sub_100362EAC(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  BOOL v16;
  int v17;
  int v18;
  char v19;
  unsigned int v22;
  unsigned int v23;

  switch(*(_DWORD *)a1)
  {
    case 0:
      sub_100363294(a1, a2);
      v19 = 0;
      LOBYTE(v18) = 0;
      LOBYTE(v17) = 0;
      v16 = 0;
      break;
    case 1:
      v22 = sub_100363568(a1, a2);
      goto LABEL_5;
    case 2:
      v22 = sub_1003637E4(a1, a2);
LABEL_5:
      v16 = 0;
      v19 = v22 & 1;
      v18 = (v22 >> 8) & 1;
      LOBYTE(v17) = (v22 & 0xFFFF0000) != 0;
      break;
    case 3:
      v23 = sub_100363B0C(a1, a2);
      v19 = v23 & 1;
      v18 = (v23 >> 8) & 1;
      v17 = HIWORD(v23) & 1;
      v16 = (v23 & 0xFF000000) != 0;
      break;
    default:
      break;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    __asm { BR              X10 }
  if ((v19 & 1) != 0)
    sub_10037ED10(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 304), 0);
  if ((v18 & 1) != 0)
    sub_10037ED10(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 304), 1);
  if ((v17 & 1) != 0)
    sub_10037EFAC(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 304));
  if (v16)
    sub_10037ED10(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 304), 2);
}

void sub_100363234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (v22 < 0)
    operator delete(v21);
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100363294(uint64_t a1, int a2)
{
  NSObject *v3;
  NSObject *v4;
  const char *v5;
  const char *v6;
  NSObject *v7;
  int v9;
  int v10;
  __int16 v11;
  const char *v12;

  switch(a2)
  {
    case 0:
      sub_10031EE8C(*(_QWORD *)(a1 + 8) + 320);
      *(_DWORD *)a1 = 1;
      break;
    case 1:
      *(_BYTE *)(a1 + 4) = 1;
      break;
    case 2:
      *(_BYTE *)(a1 + 4) = 0;
      break;
    case 3:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v3 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v9 = 68289026;
        v10 = 0;
        v11 = 2082;
        v12 = "";
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionLogicIdle, shouldn't receive FenceCross at Idle state\"}", (uint8_t *)&v9, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v4 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        v9 = 68289026;
        v10 = 0;
        v11 = 2082;
        v12 = "";
        v5 = "MotionSM::transitionLogicIdle, shouldn't receive FenceCross at Idle state";
        v6 = "{\"msg%{public}.0s\":\"MotionSM::transitionLogicIdle, shouldn't receive FenceCross at Idle state\"}";
        goto LABEL_19;
      }
      break;
    case 4:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v7 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v9 = 68289026;
        v10 = 0;
        v11 = 2082;
        v12 = "";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionLogicIdle, shouldn't receive StopMotion at Idle state\"}", (uint8_t *)&v9, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v4 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        v9 = 68289026;
        v10 = 0;
        v11 = 2082;
        v12 = "";
        v5 = "MotionSM::transitionLogicIdle, shouldn't receive StopMotion at Idle state";
        v6 = "{\"msg%{public}.0s\":\"MotionSM::transitionLogicIdle, shouldn't receive StopMotion at Idle state\"}";
LABEL_19:
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, v5, v6, (uint8_t *)&v9, 0x12u);
      }
      break;
    default:
      return 0;
  }
  return 0;
}

uint64_t sub_100363568(uint64_t a1, int a2)
{
  int v3;
  int v4;
  int v5;
  NSObject *v6;
  NSObject *v7;
  int v9;
  int v10;
  __int16 v11;
  const char *v12;

  switch(a2)
  {
    case 0:
      sub_10031EE9C(*(_QWORD *)(a1 + 8) + 320);
      sub_10031EE8C(*(_QWORD *)(a1 + 8) + 320);
      v3 = 0;
      v4 = 0;
      *(_DWORD *)a1 = 1;
      return v3 & 0x10000 | v4;
    case 1:
      v3 = 0;
      v4 = 0;
      *(_BYTE *)(a1 + 4) = 1;
      return v3 & 0x10000 | v4;
    case 2:
      v3 = 0;
      v4 = 0;
      *(_BYTE *)(a1 + 4) = 0;
      return v3 & 0x10000 | v4;
    case 3:
      if (!*(_BYTE *)(a1 + 4))
        goto LABEL_18;
      if ((sub_100364130() & 1) != 0)
      {
        v3 = 0;
        v5 = 2;
        v4 = 1;
        goto LABEL_22;
      }
      if (*(_BYTE *)(a1 + 4))
        goto LABEL_20;
LABEL_18:
      if ((sub_100364130() & 1) != 0)
      {
        v4 = 0;
        v5 = 3;
      }
      else
      {
LABEL_20:
        v4 = 0;
        v5 = 0;
      }
      v3 = 0x10000;
LABEL_22:
      sub_1003640B4(a1, 1, v5);
      return v3 & 0x10000 | v4;
    case 4:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v6 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v9 = 68289026;
        v10 = 0;
        v11 = 2082;
        v12 = "";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionLogicGeofence, shouldn't receive StopMotion at Geofence state\"}", (uint8_t *)&v9, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v7 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        v9 = 68289026;
        v10 = 0;
        v11 = 2082;
        v12 = "";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "MotionSM::transitionLogicGeofence, shouldn't receive StopMotion at Geofence state", "{\"msg%{public}.0s\":\"MotionSM::transitionLogicGeofence, shouldn't receive StopMotion at Geofence state\"}", (uint8_t *)&v9, 0x12u);
      }
      goto LABEL_15;
    case 5:
      sub_10031EE9C(*(_QWORD *)(a1 + 8) + 320);
      v3 = 0;
      v4 = 0;
      *(_DWORD *)a1 = 0;
      return v3 & 0x10000 | v4;
    default:
LABEL_15:
      v3 = 0;
      v4 = 0;
      return v3 & 0x10000 | v4;
  }
}

uint64_t sub_1003637E4(uint64_t a1, int a2)
{
  NSObject *v3;
  NSObject *v4;
  uint64_t result;
  NSObject *v6;
  NSObject *v7;
  int v8;
  int v9;
  __int16 v10;
  const char *v11;

  switch(a2)
  {
    case 0:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v3 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v8 = 68289026;
        v9 = 0;
        v10 = 2082;
        v11 = "";
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionLogicStopDetection, shouldn't receive SetFence at StopDetection state\"}", (uint8_t *)&v8, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v4 = qword_1022A00F8;
      result = os_signpost_enabled((os_log_t)qword_1022A00F8);
      if ((_DWORD)result)
      {
        v8 = 68289026;
        v9 = 0;
        v10 = 2082;
        v11 = "";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "MotionSM::transitionLogicStopDetection, shouldn't receive SetFence at StopDetection state", "{\"msg%{public}.0s\":\"MotionSM::transitionLogicStopDetection, shouldn't receive SetFence at StopDetection state\"}", (uint8_t *)&v8, 0x12u);
        goto LABEL_9;
      }
      break;
    case 1:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v6 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v8 = 68289026;
        v9 = 0;
        v10 = 2082;
        v11 = "";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionLogicStopDetection, shouldn't receive ScreenOn at StopDetection state\"}", (uint8_t *)&v8, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v7 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        v8 = 68289026;
        v9 = 0;
        v10 = 2082;
        v11 = "";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "MotionSM::transitionLogicStopDetection, shouldn't receive ScreenOn at StopDetection state", "{\"msg%{public}.0s\":\"MotionSM::transitionLogicStopDetection, shouldn't receive ScreenOn at StopDetection state\"}", (uint8_t *)&v8, 0x12u);
      }
      result = 0;
      *(_BYTE *)(a1 + 4) = 1;
      break;
    case 2:
      *(_BYTE *)(a1 + 4) = 0;
      sub_10031EF2C(*(_QWORD *)(a1 + 8) + 320);
      *(_DWORD *)a1 = 3;
      goto LABEL_21;
    case 3:
      result = 256;
      break;
    case 4:
      sub_10031EF2C(*(_QWORD *)(a1 + 8) + 320);
      *(_DWORD *)a1 = 0;
LABEL_21:
      result = 0x10000;
      break;
    case 5:
      sub_10031EF2C(*(_QWORD *)(a1 + 8) + 320);
      result = 0;
      *(_DWORD *)a1 = 0;
      break;
    default:
LABEL_9:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_100363B0C(uint64_t a1, int a2)
{
  NSObject *v3;
  NSObject *v4;
  uint64_t result;
  const char *v6;
  const char *v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  int v11;
  int v12;
  __int16 v13;
  const char *v14;

  switch(a2)
  {
    case 0:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v3 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive SetFence at PendingResumeStopDetection state\"}", (uint8_t *)&v11, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v4 = qword_1022A00F8;
      result = os_signpost_enabled((os_log_t)qword_1022A00F8);
      if ((_DWORD)result)
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        v6 = "MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive SetFence at PendingResumeStopDetection state";
        v7 = "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive SetFence at P"
             "endingResumeStopDetection state\"}";
        goto LABEL_31;
      }
      break;
    case 1:
      *(_BYTE *)(a1 + 4) = 1;
      sub_10031EF1C(*(_QWORD *)(a1 + 8) + 320);
      *(_DWORD *)a1 = 2;
      result = 0x1000000;
      break;
    case 2:
      *(_BYTE *)(a1 + 4) = 0;
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v8 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive ScreenOff at PendingResumeStopDetection state\"}", (uint8_t *)&v11, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v4 = qword_1022A00F8;
      result = os_signpost_enabled((os_log_t)qword_1022A00F8);
      if ((_DWORD)result)
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        v6 = "MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive ScreenOff at PendingResumeStopDetection state";
        v7 = "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive ScreenOff at "
             "PendingResumeStopDetection state\"}";
        goto LABEL_31;
      }
      break;
    case 3:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive FenceCross at PendingResumeStopDetection state\"}", (uint8_t *)&v11, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v4 = qword_1022A00F8;
      result = os_signpost_enabled((os_log_t)qword_1022A00F8);
      if ((_DWORD)result)
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        v6 = "MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive FenceCross at PendingResumeStopDetection state";
        v7 = "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive FenceCross at"
             " PendingResumeStopDetection state\"}";
        goto LABEL_31;
      }
      break;
    case 4:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      v10 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive StopMotion at PendingResumeStopDetection state\"}", (uint8_t *)&v11, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102130EE8);
      }
      v4 = qword_1022A00F8;
      result = os_signpost_enabled((os_log_t)qword_1022A00F8);
      if ((_DWORD)result)
      {
        v11 = 68289026;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        v6 = "MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive StopMotion at PendingResumeStopDetection state";
        v7 = "{\"msg%{public}.0s\":\"MotionSM::transitionPendingResumeLogicStopDetection, shouldn't receive StopMotion at"
             " PendingResumeStopDetection state\"}";
LABEL_31:
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, v6, v7, (uint8_t *)&v11, 0x12u);
        goto LABEL_32;
      }
      break;
    case 5:
      result = 0;
      *(_DWORD *)a1 = 0;
      break;
    default:
LABEL_32:
      result = 0;
      break;
  }
  return result;
}

void sub_100363FE0(int a1)
{
  __asm { BR              X10 }
}

void sub_10036400C()
{
  char *v0;

  v0[23] = 4;
  strcpy(v0, "Idle");
}

uint64_t sub_1003640B4(uint64_t result, int a2, int a3)
{
  uint64_t v4;

  v4 = result;
  if (a2 == 2)
  {
    result = sub_10031EF2C(*(_QWORD *)(result + 8) + 320);
  }
  else if (a2 == 1)
  {
    result = sub_10031EE9C(*(_QWORD *)(result + 8) + 320);
  }
  if (a3 == 2)
  {
    result = sub_10031EF1C(*(_QWORD *)(v4 + 8) + 320);
  }
  else if (a3 == 1)
  {
    result = sub_10031EE8C(*(_QWORD *)(v4 + 8) + 320);
  }
  *(_DWORD *)v4 = a3;
  return result;
}

uint64_t sub_100364130()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleEnable", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_1003641F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10036420C(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_100364238(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_100364238(a1, *a2);
    sub_100364238(a1, a2[1]);
    (*(void (**)(_QWORD *))a2[4])(a2 + 4);
    operator delete(a2);
  }
}

void sub_100364288(id a1)
{
  qword_1022A0108 = (uint64_t)os_log_create("com.apple.locationd.Position", "MicrolocationQE");
}

uint64_t sub_1003642B4(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - *a1) >> 4) < a2)
  {
    if (a2 >= 0x333333333333334)
      sub_100259694();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_1002952D4(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 80 * v6;
    sub_100364424(a1, v7);
    return sub_100364530((uint64_t)v7);
  }
  return result;
}

void sub_100364350(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100364530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100364364(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  _QWORD v6[8];
  int v7;
  int v8;

  sub_1002BB8D0((uint64_t)v6);
  v4 = *(_DWORD *)(a1 + 16);
  if (!sub_1002BC664(v4))
    __assert_rtn("set_datatype", "microlocation.pb.h", 10437, "::CLMicroLocationProto::DataType_IsValid(value)");
  v5 = *(_QWORD *)(a1 + 8);
  v7 = v4;
  v8 |= 3u;
  v6[1] = v5;
  sub_1003580D0((uint64_t)v6, a1);
  sub_1002C0A54(a2, v6);
  *(_BYTE *)(a2 + 80) = 1;
  sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)v6);
}

void sub_100364410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100364424(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_100364498((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100364498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = 0;
  v11 = a7 - 80;
  while (a3 + v10 != a5)
  {
    v12 = v11 + v10;
    v10 -= 80;
    sub_1002C0A54(v12, v10 + a3);
  }
  return a6;
}

uint64_t sub_100364530(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void (**v4)(void);

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(void (***)(void))(i - 80);
    *(_QWORD *)(a1 + 16) = i - 80;
    (*v4)();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_100364580(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 4);
  v5 = v4 + 1;
  if (v4 + 1 > 0x333333333333333)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x199999999999999)
    v9 = 0x333333333333333;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_1002952D4(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[80 * v4];
  v16 = &v10[80 * v9];
  sub_1002C0A54(v14, a2);
  v15 = v14 + 80;
  sub_100364424(a1, &v13);
  v11 = a1[1];
  sub_100364530((uint64_t)&v13);
  return v11;
}

void sub_100364670(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100364530((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100364684(uint64_t a1, uint64_t a2, std::string *__str)
{
  _QWORD *v4;
  NSObject *v5;
  _QWORD *v6;
  _QWORD *v8;
  const char *v9;
  uint8_t *v10;
  int v11;
  _QWORD *v12;
  uint8_t buf[4];
  _QWORD *v14;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 8) = a1 + 16;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  v4 = (_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  std::string::operator=((std::string *)(a1 + 32), __str);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v5 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v6 = v4;
    if (*(char *)(a1 + 55) < 0)
      v6 = (_QWORD *)*v4;
    *(_DWORD *)buf = 136315138;
    v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Initialize EventsBuffer %s", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v8 = v4;
    if (*(char *)(a1 + 55) < 0)
      v8 = (_QWORD *)*v4;
    v11 = 136315138;
    v12 = v8;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Initialize EventsBuffer %s", (const char *)&v11);
    v10 = (uint8_t *)v9;
    sub_100512490("Generic", 1, 0, 2, "CLEventsBuffer<CLMicroLocationProto::Measurement, double, ProtoMeasurementGetTime>::CLEventsBuffer(size_t, std::string) [Event = CLMicroLocationProto::Measurement, Time = double, CallableEventGetTime = ProtoMeasurementGetTime]", "%s\n", v9);
    if (v10 != buf)
      free(v10);
  }
  return a1;
}

void sub_10036488C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  _QWORD **v4;

  if (*(char *)(v1 + 55) < 0)
    operator delete(*v3);
  sub_100364238(v2, *v4);
  _Unwind_Resume(a1);
}

void sub_1003648B8(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = v2;
    if (v4 != v2)
    {
      do
        sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)(v4 - 56));
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_100364928(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_100364968((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

void sub_100364968(uint64_t a1, uint64_t a2)
{
  uint64_t i;
  void *v5;

  for (i = *(_QWORD *)(a1 + 8); i != a2; i -= 8)
  {
    v5 = *(void **)(i - 8);

  }
  *(_QWORD *)(a1 + 8) = a2;
}

uint64_t sub_1003649B0(uint64_t a1)
{
  void *v2;

  sub_1003649E8(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_1003649E8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_100364A24((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_100364A24(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 104) && *(char *)(a1 + 103) < 0)
    operator delete(*(void **)(a1 + 80));
  if (*(_BYTE *)(a1 + 72) && *(char *)(a1 + 71) < 0)
    operator delete(*(void **)(a1 + 48));
  if (*(_BYTE *)(a1 + 40))
  {
    if (*(char *)(a1 + 39) < 0)
      operator delete(*(void **)(a1 + 16));
  }
}

_QWORD *sub_100364A90(_QWORD *result, id *a2, id *a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_10025E660(result, a4);
    result = sub_100364B14((uint64_t)(v6 + 2), a2, a3, (_QWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100364AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_100364928(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_100364B14(uint64_t a1, id *a2, id *a3, _QWORD *a4)
{
  _QWORD *v4;
  id *v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      *v4 = *v6++;
      v4 = ++v11;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_100364BB8((uint64_t)v8);
  return v4;
}

void sub_100364BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100364BB8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100364BB8(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_100364BEC(a1);
  return a1;
}

void sub_100364BEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  while (v1 != v2)
  {
    v3 = *(void **)(v1 - 8);
    v1 -= 8;

  }
}

double *sub_100364C28(double *a1, double *a2, double *a3)
{
  double *v3;
  unint64_t v5;
  double *v6;
  double *v7;
  double *v8;
  BOOL v9;
  unint64_t v10;
  double *v11;
  double *v12;
  double *v14;

  v3 = a1;
  if (a1 != a2)
  {
    v5 = 0;
    v6 = a1;
    do
    {
      v7 = (double *)*((_QWORD *)v6 + 1);
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = *(double **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (double *)*((_QWORD *)v6 + 2);
          v9 = *(_QWORD *)v8 == (_QWORD)v6;
          v6 = v8;
        }
        while (!v9);
      }
      ++v5;
      v6 = v8;
    }
    while (v8 != a2);
    do
    {
      v10 = v5 >> 1;
      v14 = v3;
      sub_100346A7C((_QWORD **)&v14, v5 >> 1);
      v11 = v14;
      if (v14[5] < *a3)
      {
        v12 = (double *)*((_QWORD *)v14 + 1);
        if (v12)
        {
          do
          {
            v3 = v12;
            v12 = *(double **)v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            v3 = (double *)*((_QWORD *)v11 + 2);
            v9 = *(_QWORD *)v3 == (_QWORD)v11;
            v11 = v3;
          }
          while (!v9);
        }
        v10 = v5 + ~v10;
      }
      v5 = v10;
    }
    while (v10);
  }
  return v3;
}

_QWORD *sub_100364D0C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 == a3)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = a2;
    do
    {
      v6 = (_QWORD *)v5[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v5[2];
          v8 = *v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      ++v4;
      v5 = v7;
    }
    while (v7 != a3);
  }
  sub_100364D90(a1, a2, a3, v4);
  return a1;
}

_QWORD *sub_100364D90(_QWORD *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_100364E14(result, a4);
    result = (_QWORD *)sub_100364E64((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100364DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_100364F30(&a9);
  _Unwind_Resume(a1);
}

char *sub_100364E14(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x333333333333334)
    sub_100259694();
  result = (char *)sub_1002952D4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[80 * v4];
  return result;
}

uint64_t sub_100364E64(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;

  if (a2 == a3)
    return a4;
  v5 = a2;
  v6 = 0;
  v7 = a4;
  do
  {
    sub_1002C0A54(v7, v5 + 4);
    v8 = (_QWORD *)v5[1];
    if (v8)
    {
      do
      {
        v9 = v8;
        v8 = (_QWORD *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        v9 = (_QWORD *)v5[2];
        v10 = *v9 == (_QWORD)v5;
        v5 = v9;
      }
      while (!v10);
    }
    v7 += 80;
    v6 += 80;
    v5 = v9;
  }
  while (v9 != a3);
  return v7;
}

void sub_100364F30(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void (**v8)(char *);
  BOOL v9;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = v4 - 80;
      v7 = v4 - 80;
      do
      {
        v8 = *(void (***)(char *))v7;
        v7 -= 80;
        (*v8)(v6);
        v9 = v6 == v2;
        v6 = v7;
      }
      while (!v9);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_100364FBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x2E8BA2E8BA2E8BA3 * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x2E8BA2E8BA2E8BALL)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x2E8BA2E8BA2E8BA3 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x1745D1745D1745DLL)
    v9 = 0x2E8BA2E8BA2E8BALL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_100279B30(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[88 * v4];
  v15 = v14;
  v16 = &v10[88 * v9];
  sub_1002C0A54(v14, a2);
  *((_DWORD *)v14 + 20) = 0;
  v15 += 88;
  sub_10035AE60(a1, &v13);
  v11 = a1[1];
  sub_1002A2E9C((uint64_t)&v13);
  return v11;
}

void sub_1003650D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002A2E9C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_1003650E4(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = (*a1)[1];
  if (v5 >= (*a1)[2])
  {
    v6 = sub_100365158(*a1, a2);
  }
  else
  {
    sub_1002C0A54((*a1)[1], a2);
    *(_DWORD *)(v5 + 80) = *(_DWORD *)(a2 + 80);
    v6 = v5 + 88;
    v4[1] = v5 + 88;
  }
  v4[1] = v6;
  return a1;
}

void sub_100365150(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100365158(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x2E8BA2E8BA2E8BA3 * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x2E8BA2E8BA2E8BALL)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x2E8BA2E8BA2E8BA3 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x1745D1745D1745DLL)
    v9 = 0x2E8BA2E8BA2E8BALL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_100279B30(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[88 * v4];
  v15 = v14;
  v16 = &v10[88 * v9];
  sub_1002C0A54(v14, a2);
  *((_DWORD *)v14 + 20) = *(_DWORD *)(a2 + 80);
  v15 += 88;
  sub_10035AE60(a1, &v13);
  v11 = a1[1];
  sub_1002A2E9C((uint64_t)&v13);
  return v11;
}

void sub_100365270(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002A2E9C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_100365284(uint64_t *result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t **v3;
  uint64_t *v4;

  v1 = result[3];
  v2 = v1 - *result;
  if (v1 > *result)
  {
    *((_BYTE *)result + 56) = 1;
    v3 = (uint64_t **)(result + 1);
    v4 = (uint64_t *)result[1];
    sub_100346A7C(&v4, v2);
    return sub_100365414(v3, *v3, v4);
  }
  return result;
}

double *sub_1003652E0(uint64_t a1, uint64_t a2)
{
  uint64_t **v3;
  uint64_t *v4;
  uint64_t **v5;
  double *v7;

  sub_100365360(a1, a2, (uint64_t)&v7);
  v3 = (uint64_t **)(a1 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v3 = (uint64_t **)v4;
        if (v7[5] >= *((double *)v4 + 5))
          break;
        v4 = (uint64_t *)*v4;
        v5 = v3;
        if (!*v3)
          goto LABEL_8;
      }
      v4 = (uint64_t *)v4[1];
    }
    while (v4);
    v5 = v3 + 1;
  }
  else
  {
    v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_1000145B0((uint64_t **)a1, (uint64_t)v3, v5, (uint64_t *)v7);
  return v7;
}

uint64_t sub_100365360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t result;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x70uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_1002C0A54(v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1003653B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1003653C8(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1003653C8(uint64_t a1, uint64_t a2)
{
  void (***v2)(_QWORD);

  v2 = *(void (****)(_QWORD))a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      (*v2[4])(v2 + 4);
    operator delete(v2);
  }
}

uint64_t *sub_100365414(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v4;
  uint64_t *v6;

  if (a2 != a3)
  {
    v4 = a2;
    do
    {
      v6 = sub_10008A9F0(a1, v4);
      (*(void (**)(uint64_t *))v4[4])(v4 + 4);
      operator delete(v4);
      v4 = v6;
    }
    while (v6 != a3);
  }
  return a3;
}

_QWORD *sub_100365480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD v25[3];

  v7 = (_QWORD *)(a1 + 24);
  v8 = sub_1002EC844(a1 + 24, a2);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v10)
        v3 = v8 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v8;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (*v13)
      {
        do
        {
          v15 = v14[1];
          if (v15 == v9)
          {
            if ((sub_1002EC87C(a1 + 32, (uint64_t)(v14 + 2), a2) & 1) != 0)
              return v14;
          }
          else
          {
            if (v12 > 1)
            {
              if (v15 >= v10)
                v15 %= v10;
            }
            else
            {
              v15 &= v10 - 1;
            }
            if (v15 != v3)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
  sub_100365700(a1, v9, a3, (uint64_t)v25);
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_10012E444(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v25[0] = *v22;
    *v22 = v25[0];
  }
  else
  {
    *(_QWORD *)v25[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v25[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v25[0])
    {
      v23 = *(_QWORD *)(*(_QWORD *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10)
          v23 %= v10;
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v25[0];
    }
  }
  v14 = (_QWORD *)v25[0];
  v25[0] = 0;
  ++*v7;
  sub_10036581C((uint64_t)v25, 0);
  return v14;
}

void sub_1003656E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10036581C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100365700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x88uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_100365774(v7, (uint64_t)(v8 + 2), a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_10036575C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10036581C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100365774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  *(_OWORD *)a2 = *(_OWORD *)a3;
  sub_1002A2230(a2 + 16, (__int128 *)(a3 + 16));
  sub_1002A2230(a2 + 48, (__int128 *)(a3 + 48));
  result = sub_1002A2230(a2 + 80, (__int128 *)(a3 + 80));
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a3 + 112);
  return result;
}

void sub_1003657D8(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[72] && v1[71] < 0)
    operator delete(*v3);
  if (v1[40])
  {
    if (v1[39] < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_10036581C(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_100364A24((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

uint64_t sub_100365860@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v8 = a3;
  v9 = a4;
  if (result != a2)
  {
    do
    {
      result = sub_1003658C8((uint64_t)&v8, v5);
      v5 += 80;
    }
    while (v5 != a2);
    a3 = v8;
    a4 = v9;
    v5 = a2;
  }
  *a5 = v5;
  a5[1] = a3;
  a5[2] = a4;
  return result;
}

uint64_t sub_1003658C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  BOOL v6;

  v3 = sub_10036592C(*(uint64_t ***)a1, *(double **)(a1 + 8), a2);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = (uint64_t *)v3[1];
  if (v4)
  {
    do
    {
      v5 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    do
    {
      v5 = (uint64_t *)v3[2];
      v6 = *v5 == (_QWORD)v3;
      v3 = v5;
    }
    while (!v6);
  }
  *(_QWORD *)(a1 + 8) = v5;
  return a1;
}

uint64_t *sub_10036592C(uint64_t **a1, double *a2, uint64_t a3)
{
  double *v5;
  double *v7;
  uint64_t *v8;

  sub_100365360((uint64_t)a1, a3, (uint64_t)&v8);
  v5 = sub_1003659AC(a1, a2, &v7, (uint64_t)(v8 + 4));
  sub_1000145B0(a1, (uint64_t)v7, (uint64_t **)v5, v8);
  return v8;
}

void sub_10036598C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *__p)
{
  char *v11;

  v11 = __p;
  __p = 0;
  if (v11)
    sub_1018F67E8((uint64_t)&__p, v11);
  _Unwind_Resume(exception_object);
}

double *sub_1003659AC(_QWORD *a1, double *a2, double **a3, uint64_t a4)
{
  double *v4;
  double v5;
  uint64_t v6;
  double v7;
  double v8;
  double *v9;
  double *v10;
  BOOL v11;
  double v12;
  uint64_t v13;

  v4 = (double *)(a1 + 1);
  if (a1 + 1 != (_QWORD *)a2)
  {
    v5 = *(double *)(a4 + 8);
    if (a2[5] < v5)
    {
      while (1)
      {
        v6 = *(_QWORD *)v4;
        a2 = v4;
        if (!*(_QWORD *)v4)
          break;
        while (1)
        {
          v4 = (double *)v6;
          if (*(double *)(v6 + 40) >= v5)
            break;
          v6 = *(_QWORD *)(v6 + 8);
          if (!v6)
            goto LABEL_19;
        }
      }
LABEL_20:
      *a3 = v4;
      return a2;
    }
  }
  v7 = *a2;
  if ((double *)*a1 == a2)
  {
    v9 = a2;
  }
  else
  {
    if (v7 == 0.0)
    {
      v10 = a2;
      do
      {
        v9 = (double *)*((_QWORD *)v10 + 2);
        v11 = *(_QWORD *)v9 == (_QWORD)v10;
        v10 = v9;
      }
      while (v11);
    }
    else
    {
      v8 = *a2;
      do
      {
        v9 = *(double **)&v8;
        v8 = *(double *)(*(_QWORD *)&v8 + 8);
      }
      while (v8 != 0.0);
    }
    v12 = *(double *)(a4 + 8);
    if (v12 < v9[5])
    {
      while (1)
      {
        v13 = *(_QWORD *)v4;
        a2 = v4;
        if (!*(_QWORD *)v4)
          goto LABEL_20;
        while (1)
        {
          v4 = (double *)v13;
          if (v12 < *(double *)(v13 + 40))
            break;
          v13 = *(_QWORD *)(v13 + 8);
          if (!v13)
          {
LABEL_19:
            a2 = v4 + 1;
            goto LABEL_20;
          }
        }
      }
    }
  }
  if (v7 == 0.0)
  {
    *a3 = a2;
  }
  else
  {
    *a3 = v9;
    return v9 + 1;
  }
  return a2;
}

_QWORD *sub_100365A94(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_100365B18(result, a4);
    result = (_QWORD *)sub_100365B6C((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100365AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_1003648B8(&a9);
  _Unwind_Resume(a1);
}

char *sub_100365B18(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x492492492492493)
    sub_100259694();
  result = (char *)sub_10025B800((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[56 * v4];
  return result;
}

uint64_t sub_100365B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      *(_DWORD *)(sub_1002BD5C4(a4 + v7, a2 + v7) + 48) = *(_DWORD *)(a2 + v7 + 48);
      v7 += 56;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_100365BDC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (v2)
  {
    v4 = v1 - 56;
    do
    {
      sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)(v4 + v2));
      v2 -= 56;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100365C00(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, double *a5)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  void *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t *v20;

  v6 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 3);
  v7 = v6 + 1;
  if (v6 + 1 > 0x38E38E38E38E38ELL)
    sub_100259694();
  if (0x1C71C71C71C71C72 * ((a1[2] - *a1) >> 3) > v7)
    v7 = 0x1C71C71C71C71C72 * ((a1[2] - *a1) >> 3);
  if (0x8E38E38E38E38E39 * ((a1[2] - *a1) >> 3) >= 0x1C71C71C71C71C7)
    v12 = 0x38E38E38E38E38ELL;
  else
    v12 = v7;
  v20 = a1 + 2;
  if (v12)
    v13 = (char *)sub_10029D26C((uint64_t)(a1 + 2), v12);
  else
    v13 = 0;
  v16 = v13;
  v17 = &v13[72 * v6];
  v19 = &v13[72 * v12];
  sub_100365D4C((uint64_t)(a1 + 2), (uint64_t)v17, a2, a3, a4, a5);
  v18 = v17 + 72;
  sub_10029D1F8(a1, &v16);
  v14 = a1[1];
  sub_10029D444(&v16);
  return v14;
}

void sub_100365D38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10029D444((void **)va);
  _Unwind_Resume(a1);
}

void sub_100365D4C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, double *a6)
{
  uint64_t v9;
  uint64_t v10;
  void *__p[2];
  uint64_t v12;
  void *__dst[2];
  uint64_t v14;

  v9 = *a3;
  v10 = a3[1];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a4;
    v14 = *(_QWORD *)(a4 + 16);
  }
  if (*(char *)(a5 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a5, *(_QWORD *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a5;
    v12 = *(_QWORD *)(a5 + 16);
  }
  sub_10029B360(a2, v9, v10, __dst, __p, *a6);
  if (SHIBYTE(v12) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_100365E18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100365E4C(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  uint64_t result;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  int v8;
  const char *v9;
  uint8_t buf[4];
  const char *v11;

  v2 = sub_100290258(a1);
  if (sub_100366040() > v2)
    return 1;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102130EE8);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v11 = "MicroLocationBluetoothIdentityTable";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102130EE8);
    v8 = 136446210;
    v9 = "MicroLocationBluetoothIdentityTable";
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", &v8, 12);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationBluetoothIdentityTable]", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  result = sub_1002887C0(a1);
  if ((_DWORD)result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0)
      v5 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v5 = *(_QWORD *)(a1 + 160);
    sub_100053048(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_100366040()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBluetoothIdentityTableMaxRows", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 96;
}

void sub_100366104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10036611C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1003649E8(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

_QWORD *sub_100366170(_QWORD *a1, _OWORD *a2, __int128 *a3, __int128 *a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v7;
  char v8;
  _QWORD *v10[3];

  sub_1003661E4((uint64_t)a1, a2, a3, a4, a5, a6, (uint64_t)v10);
  v7 = sub_1003662A8(a1, v10[0]);
  if ((v8 & 1) != 0)
    v10[0] = 0;
  sub_10036581C((uint64_t)v10, 0);
  return v7;
}

void sub_1003661CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10036581C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unint64_t sub_1003661E4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  _QWORD *v15;
  unint64_t result;

  v14 = a1 + 16;
  v15 = operator new(0x88uLL);
  *(_QWORD *)a7 = v15;
  *(_QWORD *)(a7 + 8) = v14;
  *(_BYTE *)(a7 + 16) = 0;
  *v15 = 0;
  v15[1] = 0;
  sub_100366318(v14, (uint64_t)(v15 + 2), a2, a3, a4, a5, a6);
  *(_BYTE *)(a7 + 16) = 1;
  result = sub_1002EC844(a1 + 24, (uint64_t)(v15 + 2));
  v15[1] = result;
  return result;
}

void sub_100366290(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10036581C(v1, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_1003662A8(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v2 = a2;
  v4 = (uint64_t)(a2 + 2);
  v5 = sub_1002EC844((uint64_t)(a1 + 3), (uint64_t)(a2 + 2));
  v2[1] = v5;
  v6 = sub_100366458((uint64_t)a1, v5, v4);
  if (v6)
    return v6;
  sub_1003665AC(a1, v2);
  return v2;
}

void sub_100366318(uint64_t a1, uint64_t a2, _OWORD *a3, __int128 *a4, __int128 *a5, uint64_t a6, _QWORD *a7)
{
  __int128 __p;
  char v8;
  char v9;

  LOBYTE(__p) = 0;
  v9 = 0;
  sub_10036639C(a2, a3, a4, a5, &__p, a7);
  if (v9)
  {
    if (v8 < 0)
      operator delete((void *)__p);
  }
}

void sub_100366378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036639C(uint64_t a1, _OWORD *a2, __int128 *a3, __int128 *a4, __int128 *a5, _QWORD *a6)
{
  *(_OWORD *)a1 = *a2;
  sub_1002A2230(a1 + 16, a3);
  sub_1002A2230(a1 + 48, a4);
  sub_1002A2230(a1 + 80, a5);
  *(_QWORD *)(a1 + 112) = *a6;
  return a1;
}

void sub_100366414(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[72] && v1[71] < 0)
    operator delete(*v3);
  if (v1[40])
  {
    if (v1[39] < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100366458(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint8x8_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v7 = (uint8x8_t)vcnt_s8((int8x8_t)v4);
    v7.i16[0] = vaddlv_u8(v7);
    v8 = v7.u32[0];
    if (v7.u32[0] > 1uLL)
      v9 = v4 <= a2 ? a2 % v4 : a2;
    else
      v9 = (v4 - 1) & a2;
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == a2)
          {
            if ((sub_1002EC87C(a1 + 32, (uint64_t)(v11 + 2), a3) & 1) != 0)
              return v11;
          }
          else
          {
            if (v8 > 1)
            {
              if (v12 >= v4)
                v12 %= v4;
            }
            else
            {
              v12 &= v4 - 1;
            }
            if (v12 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v4 || (float)(v14 * (float)v4) < v13)
  {
    v15 = 1;
    if (v4 >= 3)
      v15 = (v4 & (v4 - 1)) != 0;
    v16 = v15 | (2 * v4);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_10012E444(a1, v18);
  }
  return 0;
}

_QWORD *sub_1003665AC(_QWORD *result, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  _QWORD *v5;
  unint64_t v6;

  v2 = (int8x8_t)result[1];
  v3 = a2[1];
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    if (v3 >= *(_QWORD *)&v2)
      v3 %= *(_QWORD *)&v2;
  }
  else
  {
    v3 &= *(_QWORD *)&v2 - 1;
  }
  v5 = *(_QWORD **)(*result + 8 * v3);
  if (v5)
  {
    *a2 = *v5;
LABEL_13:
    *v5 = a2;
    goto LABEL_14;
  }
  *a2 = result[2];
  result[2] = a2;
  *(_QWORD *)(*result + 8 * v3) = result + 2;
  if (*a2)
  {
    v6 = *(_QWORD *)(*a2 + 8);
    if (v4.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v2)
        v6 %= *(_QWORD *)&v2;
    }
    else
    {
      v6 &= *(_QWORD *)&v2 - 1;
    }
    v5 = (_QWORD *)(*result + 8 * v6);
    goto LABEL_13;
  }
LABEL_14:
  ++result[3];
  return result;
}

_QWORD *sub_100366664(_QWORD *a1, void *a2, uint64_t a3)
{
  *a1 = off_102130F38;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = a2;
  a1[4] = a3;
  a1[5] = 0;
  a1[5] = objc_msgSend(objc_msgSend(a2, "silo"), "newTimer");
  return a1;
}

uint64_t sub_1003666A8(uint64_t a1)
{
  *(_QWORD *)a1 = off_102130F38;
  objc_msgSend(*(id *)(a1 + 8), "invalidate");

  *(_QWORD *)(a1 + 8) = 0;
  if (*(_QWORD *)(a1 + 16) && sub_100366710())
  {
    objc_msgSend(*(id *)(a1 + 16), "invalidate");

    *(_QWORD *)(a1 + 16) = 0;
  }
  return a1;
}

uint64_t sub_100366710()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleNonLeechingScannerEnabled", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_1003667D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003667F0(uint64_t a1)
{
  sub_1003666A8(a1);
  operator delete();
}

uint64_t sub_100366814(uint64_t a1)
{
  CFAbsoluteTime Current;
  NSObject *v3;
  _DWORD v5[2];
  __int16 v6;
  const char *v7;
  __int16 v8;
  CFAbsoluteTime v9;

  objc_msgSend(*(id *)(a1 + 24), "silo");
  Current = j__CFAbsoluteTimeGetCurrent();
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131030);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    v6 = 2082;
    v7 = "";
    v8 = 2050;
    v9 = Current;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CBDiscovery, a BLE session timer stopped\", \"now\":\"%{public}.3f\"}", (uint8_t *)v5, 0x1Cu);
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 32))(*(_QWORD *)(a1 + 32));
}

void sub_100366920(id *a1, uint64_t a2)
{
  double v4;
  double Current;
  NSObject *v6;
  uint64_t v7;
  double v8;
  _QWORD v9[5];
  uint8_t buf[4];
  int v11;
  __int16 v12;
  const char *v13;
  __int16 v14;
  double v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  double v19;

  (*((void (**)(id *))*a1 + 5))(a1);
  sub_100366AA4((uint64_t)a1, a2);
  if (!*(_BYTE *)(a2 + 9))
  {
    v4 = *(double *)a2;
    Current = j__CFAbsoluteTimeGetCurrent();
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131030);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      v7 = (uint64_t)v4;
      v8 = v4 + Current;
      *(_DWORD *)buf = 68289794;
      v11 = 0;
      v12 = 2082;
      v13 = "";
      v14 = 2050;
      v15 = Current;
      v16 = 2050;
      v17 = v7;
      v18 = 2050;
      v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CBDiscovery, Starting BLE scan timer\", \"now\":\"%{public}.3f\", \"durationInMs\":%{public}lld, \"expected end time\":\"%{public}.3f\"}", buf, 0x30u);
    }
    else
    {
      v8 = v4 + Current;
    }
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100366BBC;
    v9[3] = &unk_10212ECA0;
    v9[4] = a1;
    objc_msgSend(a1[5], "setHandler:", v9);
    objc_msgSend(a1[5], "setNextFireTime:", v8);
  }
}

void sub_100366AA4(uint64_t a1, uint64_t a2)
{
  CFStringRef v4;
  int v5;
  _BOOL4 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  int v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_10036736C(a1, a2);
  if (*(_QWORD *)(a1 + 16) && sub_100366710())
  {
    if (*(_BYTE *)(a2 + 10))
      goto LABEL_13;
    sub_1001E4804(&v12);
    v11 = 0;
    v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleForceScanNearbyInfoV2", 0x8000100u, kCFAllocatorNull);
    v5 = sub_1001E48E4(v12, (uint64_t)v4, &v11);
    CFRelease(v4);
    v6 = v11;
    v7 = v13;
    if (v13)
    {
      p_shared_owners = (unint64_t *)&v13->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v10 = v6 ? v5 : 0;
    if (v10 == 1)
LABEL_13:
      sub_10036789C(a1, a2);
  }
}

void sub_100366BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100366BBC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
}

id sub_100366BCC(uint64_t a1)
{
  NSObject *v2;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131030);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Unregister all BLE scan sessions", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131030);
    v6[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Unregister all BLE scan sessions", v6, 2);
    v5 = (uint8_t *)v4;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLMicroLocationBLERssiBridge::stopBleRssiSession()", "%s\n", v4);
    if (v5 != buf)
      free(v5);
  }
  objc_msgSend(*(id *)(a1 + 40), "invalidate");
  return sub_100366D6C(a1);
}

id sub_100366D6C(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 8), "removeAllDiscoveryTypes");
  objc_msgSend(*(id *)(a1 + 8), "setDiscoveryFlags:", 0);
  objc_msgSend(*(id *)(a1 + 8), "setDeviceFilter:", 0);
  result = (id)sub_100366710();
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 16), "removeAllDiscoveryTypes");
    objc_msgSend(*(id *)(a1 + 16), "setDiscoveryFlags:", 0);
    objc_msgSend(*(id *)(a1 + 16), "setDeviceFilter:", 0);
    return objc_msgSend(*(id *)(a1 + 16), "setOobKeys:", 0);
  }
  return result;
}

void sub_100366DE4(uint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  unsigned int v6;
  unsigned __int8 v7;
  unsigned __int16 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  CFAbsoluteTime v20;
  void *v21[2];
  uint64_t v22;
  char v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  void *v27[2];
  uint64_t v28;
  char v29;
  _BYTE v30[72];
  char v31;
  id v32;
  CFAbsoluteTime Current;
  _BYTE buf[28];
  __int16 v35;
  id v36;
  __int16 v37;
  id v38;
  void *v39;
  int v40;
  __int16 v41;
  int v42;
  __int16 v43;
  uint64_t v44;
  __int16 v45;
  _BYTE v46[10];
  char v47;
  char v48;
  __int128 v49;
  char v50;

  v3 = a1;
  objc_msgSend(*(id *)(a1 + 24), "silo");
  v4 = (unint64_t)objc_msgSend(a2, "deviceFlags") & 0x180;
  v5 = objc_msgSend(a2, "nearbyInfoV2DecryptedFlags");
  if (v4 || (v5 & 4) != 0)
  {
    v6 = objc_msgSend(a2, "discoveryFlags");
    v7 = objc_msgSend(a2, "deviceFlags");
    v8 = (unsigned __int16)objc_msgSend(a2, "deviceFlags");
    if (qword_1022A0100 != -1)
      dispatch_once(&qword_1022A0100, &stru_102131050);
    v9 = *(_QWORD *)&v6 & 0x80040;
    v10 = v7 & 0x80;
    v11 = v8 & 0x8000;
    v12 = qword_1022A0108;
    if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEBUG))
    {
      v18 = v11 >> 15;
      v19 = v8 & 0x8000;
      v13 = objc_msgSend(objc_msgSend(a2, "idsDeviceID"), "UTF8String");
      v14 = objc_msgSend(objc_msgSend(a2, "identifier"), "UTF8String");
      v15 = v3;
      v16 = objc_msgSend(objc_msgSend(a2, "model"), "UTF8String");
      objc_msgSend(a2, "bleAdvertisementTimestamp");
      *(_DWORD *)buf = 68291075;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(_QWORD *)&buf[20] = v13;
      v35 = 2081;
      v36 = v14;
      v37 = 2081;
      v38 = v16;
      v3 = v15;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v9 != 0;
      HIWORD(v39) = 1025;
      v40 = v10 >> 7;
      v41 = 1025;
      v11 = v19;
      v42 = v18;
      v43 = 2050;
      v44 = v17;
      v45 = 1026;
      *(_DWORD *)v46 = objc_msgSend(a2, "rssi");
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Ble Beacon Received\", \"IDS ID\":%{private, location:escape_only}s, \"BT identifier\":%{private, location:escape_only}s, \"Model\":%{private, location:escape_only}s, \"is device nearbyInfo or nearbyAction type?\":%{private}hhd, \"is device same account?\":%{private}hhd, \"is device cloud paired?\":%{private}hhd, \"AdvertisementTimestamp\":\"%{public}.3f\", \"RSSI\":%{public}d}", buf, 0x52u);
    }
    Current = j__CFAbsoluteTimeGetCurrent();
    v32 = a2;
    sub_10035783C(&v32, v30);
    if (v31)
      (*(void (**)(_QWORD, CFAbsoluteTime *, _BYTE *))(**(_QWORD **)(v3 + 32) + 16))(*(_QWORD *)(v3 + 32), &Current, v30);
    if (objc_msgSend(a2, "identifier") && v9 && v10 && v11)
    {
      sub_1015A2E04(buf, (char *)objc_msgSend(objc_msgSend(a2, "identifier"), "UTF8String"));
      sub_100357708((uint64_t)buf, (uint64_t)&v49);
      if ((buf[23] & 0x80000000) != 0)
        operator delete(*(void **)buf);
      if (v50)
      {
        if (objc_msgSend(a2, "name"))
        {
          sub_1015A2E04(buf, (char *)objc_msgSend(objc_msgSend(a2, "name"), "UTF8String"));
          *(_OWORD *)v27 = *(_OWORD *)buf;
          v28 = *(_QWORD *)&buf[16];
          v29 = 1;
        }
        else
        {
          LOBYTE(v27[0]) = 0;
          v29 = 0;
        }
        if (objc_msgSend(a2, "stableIdentifier"))
        {
          sub_1015A2E04(buf, (char *)objc_msgSend(objc_msgSend(a2, "stableIdentifier"), "UTF8String"));
          *(_OWORD *)v24 = *(_OWORD *)buf;
          v25 = *(_QWORD *)&buf[16];
          v26 = 1;
        }
        else
        {
          LOBYTE(v24[0]) = 0;
          v26 = 0;
        }
        if (objc_msgSend(a2, "model"))
        {
          sub_1015A2E04(buf, (char *)objc_msgSend(objc_msgSend(a2, "model"), "UTF8String"));
          *(_OWORD *)v21 = *(_OWORD *)buf;
          v22 = *(_QWORD *)&buf[16];
          v23 = 1;
        }
        else
        {
          LOBYTE(v21[0]) = 0;
          v23 = 0;
        }
        v20 = j__CFAbsoluteTimeGetCurrent();
        sub_10036639C((uint64_t)buf, &v49, (__int128 *)v27, (__int128 *)v24, (__int128 *)v21, &v20);
        (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v3 + 32) + 24))(*(_QWORD *)(v3 + 32), buf);
        if (v48 && v47 < 0)
          operator delete(*(void **)&v46[2]);
        if (BYTE4(v44) && SBYTE3(v44) < 0)
          operator delete(v39);
        if ((_BYTE)v38 && SHIBYTE(v37) < 0)
          operator delete(*(void **)&buf[16]);
        if (v23 && SHIBYTE(v22) < 0)
          operator delete(v21[0]);
        if (v26 && SHIBYTE(v25) < 0)
          operator delete(v24[0]);
        if (v29 && SHIBYTE(v28) < 0)
          operator delete(v27[0]);
      }
    }
    if (v31)
      sub_1002BCAA8((wireless_diagnostics::google::protobuf::MessageLite *)v30);
  }
}

void sub_100367248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  sub_100367304((uint64_t)&a49);
  if (a19 && a18 < 0)
    operator delete(__p);
  if (a26 && a25 < 0)
    operator delete(a20);
  if (a33 && a32 < 0)
    operator delete(a27);
  if (a46)
    sub_1002BCAA8((wireless_diagnostics::google::protobuf::MessageLite *)&a35);
  _Unwind_Resume(a1);
}

uint64_t sub_100367304(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 104) && *(char *)(a1 + 103) < 0)
    operator delete(*(void **)(a1 + 80));
  if (*(_BYTE *)(a1 + 72) && *(char *)(a1 + 71) < 0)
    operator delete(*(void **)(a1 + 48));
  if (*(_BYTE *)(a1 + 40) && *(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_10036736C(uint64_t a1, uint64_t a2)
{
  CFStringRef v4;
  char v5;
  _BOOL4 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  unint64_t v12;
  void *v13;
  CFStringRef v14;
  char v15;
  _BOOL4 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  char v20;
  id v21;
  uint64_t *i;
  uint64_t *v23;
  uint64_t *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  BOOL v29;
  uint8_t buf[8];
  _BYTE v31[10];
  __int16 v32;
  id v33;

  if (*(_BYTE *)(a2 + 9) || *(_QWORD *)(a2 + 40) != *(_QWORD *)(a2 + 48))
    goto LABEL_12;
  sub_1001E4804(buf);
  v29 = 0;
  v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleForceRequestedType15Type16ScanWhenDeviceFilterIsEmpty", 0x8000100u, kCFAllocatorNull);
  v5 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v4, &v29);
  CFRelease(v4);
  v6 = v29;
  v7 = *(std::__shared_weak_count **)v31;
  if (*(_QWORD *)v31)
  {
    v8 = (unint64_t *)(*(_QWORD *)v31 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = v6 ? v5 : 0;
  if ((v10 & 1) != 0)
  {
LABEL_12:
    objc_msgSend(*(id *)(a1 + 8), "setDiscoveryFlags:", 524352);
    objc_msgSend(*(id *)(a1 + 8), "setLabel:", CFSTR("CLMiLoLeeching"));
    v11 = *(_BYTE *)(a2 + 9) == 0;
    v12 = (unint64_t)objc_msgSend(*(id *)(a1 + 8), "discoveryFlags");
    v13 = *(void **)(a1 + 8);
    if (v11)
    {
      objc_msgSend(v13, "setDiscoveryFlags:", v12 | 0x1000000000);
      objc_msgSend(*(id *)(a1 + 8), "setUseCase:", 524290);
      sub_1001E4804(buf);
      v29 = 0;
      v14 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleType15andType16DeviceFilterIsSet", 0x8000100u, kCFAllocatorNull);
      v15 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v14, &v29);
      CFRelease(v14);
      v16 = v29;
      v17 = *(std::__shared_weak_count **)v31;
      if (*(_QWORD *)v31)
      {
        v18 = (unint64_t *)(*(_QWORD *)v31 + 8);
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      if (v16)
        v20 = 0;
      else
        v20 = v15;
      if ((v20 & 1) == 0)
      {
        if (*(_QWORD *)(a2 + 40) == *(_QWORD *)(a2 + 48))
        {
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131030);
          v27 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 68289026;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v31 = 2082;
            *(_QWORD *)&v31[2] = "";
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"scanner type 15, 16 deviceFilter is empty for initiated scan\"}", buf, 0x12u);
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_102131030);
          }
          v28 = qword_1022A00F8;
          if (os_signpost_enabled((os_log_t)qword_1022A00F8))
          {
            *(_DWORD *)buf = 68289026;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v31 = 2082;
            *(_QWORD *)&v31[2] = "";
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v28, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "scanner type 15, 16 deviceFilter is empty for initiated scan", "{\"msg%{public}.0s\":\"scanner type 15, 16 deviceFilter is empty for initiated scan\"}", buf, 0x12u);
          }
        }
        else
        {
          v21 = +[NSMutableArray array](NSMutableArray, "array");
          v23 = *(uint64_t **)(a2 + 40);
          for (i = *(uint64_t **)(a2 + 48); v23 != i; v23 += 3)
          {
            v24 = v23;
            if (*((char *)v23 + 23) < 0)
              v24 = (uint64_t *)*v23;
            objc_msgSend(v21, "addObject:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v24));
          }
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131030);
          v25 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v31 = 2082;
            *(_QWORD *)&v31[2] = "";
            v32 = 2114;
            v33 = v21;
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"scanner type 15, 16 deviceFilter is\", \"deviceFilter\":%{public, location:escape_only}@}", buf, 0x1Cu);
          }
          objc_msgSend(*(id *)(a1 + 8), "setDeviceFilter:", v21);
        }
      }
      if (sub_10036859C())
        objc_msgSend(*(id *)(a1 + 8), "setDiscoveryFlags:", (unint64_t)objc_msgSend(*(id *)(a1 + 8), "discoveryFlags") | 0x200000000);
      objc_msgSend(*(id *)(a1 + 8), "setBleScanRate:", sub_100368678());
    }
    else
    {
      objc_msgSend(v13, "setDiscoveryFlags:", v12 | 0x100200000000);
      objc_msgSend(*(id *)(a1 + 8), "setUseCase:", 524291);
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131030);
    v26 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v31 = 2082;
      *(_QWORD *)&v31[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"will not conduct nearbyAction, nearbyInfo requested scan because device filter is empty\"}", buf, 0x12u);
    }
  }
}

void sub_100367874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_10036789C(uint64_t a1, uint64_t a2)
{
  CFStringRef v2;
  char v3;
  int v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  char v8;
  CFStringRef v9;
  char v10;
  int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  char v15;
  id v16;
  id v17;
  id *i;
  id *v19;
  id v20;
  id v21;
  _BYTE *v22;
  id v23;
  const char *v24;
  id v25;
  NSObject *v26;
  id v27;
  NSObject *v28;
  NSObject *v29;
  NSObject *v30;
  void *v31;
  CFStringRef v32;
  int v33;
  unsigned int v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  NSObject *v40;
  void *v41;
  id *v44;
  unsigned int v45;
  uint8_t buf[8];
  _BYTE v47[10];
  __int16 v48;
  id v49;

  if (!*(_BYTE *)(a2 + 9))
    goto LABEL_61;
  sub_1001E4804(buf);
  LOBYTE(v45) = 0;
  v2 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleNonLeechingBackgroundScanEnabled", 0x8000100u, kCFAllocatorNull);
  v3 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v2, (BOOL *)&v45);
  CFRelease(v2);
  v4 = v45;
  v5 = *(std::__shared_weak_count **)v47;
  if (*(_QWORD *)v47)
  {
    v6 = (unint64_t *)(*(_QWORD *)v47 + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v4 ? v3 : 0;
  if ((v8 & 1) == 0)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131030);
    v40 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v47 = 2082;
      *(_QWORD *)&v47[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"BleNonLeechingBackgroundScanEnabled is disabled\"}", buf, 0x12u);
    }
    v41 = *(void **)(a1 + 16);
    v44 = (id *)(a1 + 16);
    objc_msgSend(v41, "removeAllDiscoveryTypes");
    objc_msgSend(*v44, "setDiscoveryFlags:", 0);
    objc_msgSend(*v44, "setDeviceFilter:", 0);
    return objc_msgSend(*v44, "setOobKeys:", 0);
  }
  else
  {
LABEL_61:
    if (sub_10036859C())
      objc_msgSend(*(id *)(a1 + 16), "setDiscoveryFlags:", 0x200000000);
    objc_msgSend(*(id *)(a1 + 16), "addDiscoveryType:", 19);
    sub_1001E4804(buf);
    LOBYTE(v45) = 0;
    v9 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleType22DeviceFilterIsSet", 0x8000100u, kCFAllocatorNull);
    v10 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v9, (BOOL *)&v45);
    CFRelease(v9);
    v11 = v45;
    v12 = *(std::__shared_weak_count **)v47;
    if (*(_QWORD *)v47)
    {
      v13 = (unint64_t *)(*(_QWORD *)v47 + 8);
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v11)
      v15 = 0;
    else
      v15 = v10;
    if ((v15 & 1) == 0)
    {
      v16 = +[NSMutableArray array](NSMutableArray, "array");
      v17 = +[NSMutableArray array](NSMutableArray, "array");
      v19 = *(id **)(a2 + 16);
      for (i = *(id **)(a2 + 24); v19 != i; ++v19)
      {
        v20 = *v19;
        v21 = objc_msgSend(*v19, "btAddressData");
        if (objc_msgSend(v21, "length") == (id)7)
        {
          v22 = objc_msgSend(v21, "bytes");
          v23 = objc_alloc((Class)NSString);
          v24 = "Random";
          if ((*v22 & 1) == 0)
            v24 = "Public";
          v25 = objc_msgSend(v23, "initWithFormat:", CFSTR("%s %02X:%02X:%02X:%02X:%02X:%02X"), v24, v22[1], v22[2], v22[3], v22[4], v22[5], v22[6]);
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131030);
          v26 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
          {
            v27 = objc_msgSend(v25, "UTF8String");
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v47 = 2082;
            *(_QWORD *)&v47[2] = "";
            v48 = 2082;
            v49 = v27;
            _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"_nsDataToBTAddressString\", \"address\":%{public, location:escape_only}s}", buf, 0x1Cu);
          }
        }
        else
        {
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131030);
          v28 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v47 = 2082;
            *(_QWORD *)&v47[2] = "";
            v48 = 2114;
            v49 = v21;
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Invalid Address data\", \"address\":%{public, location:escape_only}@}", buf, 0x1Cu);
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_102131030);
          }
          v29 = qword_1022A00F8;
          if (os_signpost_enabled((os_log_t)qword_1022A00F8))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v47 = 2082;
            *(_QWORD *)&v47[2] = "";
            v48 = 2114;
            v49 = v21;
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v29, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Invalid Address data", "{\"msg%{public}.0s\":\"Invalid Address data\", \"address\":%{public, location:escape_only}@}", buf, 0x1Cu);
          }
          v25 = 0;
        }
        objc_msgSend(v16, "addObject:", v25);
        objc_msgSend(v17, "addObject:", v20);
      }
      objc_msgSend(*(id *)(a1 + 16), "setOobKeys:", v17);
      objc_msgSend(*(id *)(a1 + 16), "setDeviceFilter:", v16);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131030);
      v30 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v47 = 2082;
        *(_QWORD *)&v47[2] = "";
        v48 = 2114;
        v49 = v16;
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"scanner type 22 deviceFilter is\", \"deviceFilter\":%{public, location:escape_only}@}", buf, 0x1Cu);
      }
    }
    objc_msgSend(*(id *)(a1 + 16), "setLabel:", CFSTR("CLMiLoNonLeeching"));
    v31 = *(void **)(a1 + 16);
    if (*(_BYTE *)(a2 + 9))
    {
      sub_1001E4804(buf);
      v45 = 0;
      v32 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleBackgroundScanRate", 0x8000100u, kCFAllocatorNull);
      v33 = sub_1001C1194(*(uint64_t *)buf, (uint64_t)v32, &v45);
      CFRelease(v32);
      v34 = v45;
      v35 = *(std::__shared_weak_count **)v47;
      if (*(_QWORD *)v47)
      {
        v36 = (unint64_t *)(*(_QWORD *)v47 + 8);
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if (v33)
        v38 = v34;
      else
        v38 = 30;
      return objc_msgSend(v31, "setBleScanRate:", v38);
    }
    else
    {
      return objc_msgSend(v31, "setBleScanRate:", sub_100368678());
    }
  }
}

void sub_100367F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

id *sub_100367FA0(id *result)
{
  id *v1;
  id v2;
  id v3;
  _QWORD v4[5];
  _QWORD v5[5];
  _QWORD v6[5];
  _QWORD v7[5];

  v1 = result;
  if (!result[1])
  {
    result[1] = objc_alloc_init((Class)CBDiscovery);
    objc_msgSend(v1[1], "setDispatchQueue:", objc_msgSend(objc_msgSend(v1[3], "silo"), "queue"));
    objc_msgSend(v1[1], "setDiscoveryFlags:", 0);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10036814C;
    v7[3] = &unk_102130F68;
    v7[4] = v1;
    objc_msgSend(v1[1], "setDeviceFoundHandler:", v7);
    objc_msgSend(v1[1], "setDeviceLostHandler:", &stru_102130FA8);
    v2 = v1[1];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100368238;
    v6[3] = &unk_102130FC8;
    v6[4] = v1;
    result = (id *)objc_msgSend(v2, "activateWithCompletion:", v6);
  }
  if (!v1[2])
  {
    result = (id *)sub_100366710();
    if ((_DWORD)result)
    {
      v1[2] = objc_alloc_init((Class)CBDiscovery);
      objc_msgSend(v1[2], "setDispatchQueue:", objc_msgSend(objc_msgSend(v1[3], "silo"), "queue"));
      objc_msgSend(v1[2], "setDiscoveryFlags:", 0);
      objc_msgSend(v1[2], "setUseCase:", 524290);
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_100368374;
      v5[3] = &unk_102130F68;
      v5[4] = v1;
      objc_msgSend(v1[2], "setDeviceFoundHandler:", v5);
      objc_msgSend(v1[2], "setDeviceLostHandler:", &stru_102130FE8);
      v3 = v1[2];
      v4[0] = _NSConcreteStackBlock;
      v4[1] = 3221225472;
      v4[2] = sub_100368460;
      v4[3] = &unk_102130FC8;
      v4[4] = v1;
      return (id *)objc_msgSend(v3, "activateWithCompletion:", v4);
    }
  }
  return result;
}

void sub_10036814C(uint64_t a1, void *a2)
{
  sub_100366DE4(*(_QWORD *)(a1 + 32), a2);
}

void sub_100368154(id a1, CBDevice *a2)
{
  NSObject *v3;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;
  __int16 v7;
  CBDevice *v8;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131030);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289282;
    v4[1] = 0;
    v5 = 2082;
    v6 = "";
    v7 = 2114;
    v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Device lost\", \"device:\":%{public, location:escape_only}@}", (uint8_t *)v4, 0x1Cu);
  }
}

void sub_100368238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  uint8_t buf[4];
  int v6;
  __int16 v7;
  const char *v8;

  if (a2)
  {
    v3 = *(_QWORD *)(a1 + 32);
    objc_msgSend(*(id *)(v3 + 8), "invalidate");

    *(_QWORD *)(v3 + 8) = 0;
    sub_10038ADA4((uint64_t)+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ %@"), CFSTR("CBDiscovery activation error:"), a2));
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131030);
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 68289026;
      v6 = 0;
      v7 = 2082;
      v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"CBDiscovery leeching supported activated successfully\"}", buf, 0x12u);
    }
  }
}

void sub_100368374(uint64_t a1, void *a2)
{
  sub_100366DE4(*(_QWORD *)(a1 + 32), a2);
}

void sub_10036837C(id a1, CBDevice *a2)
{
  NSObject *v3;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;
  __int16 v7;
  CBDevice *v8;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131030);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289282;
    v4[1] = 0;
    v5 = 2082;
    v6 = "";
    v7 = 2114;
    v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Device lost\", \"device:\":%{public, location:escape_only}@}", (uint8_t *)v4, 0x1Cu);
  }
}

void sub_100368460(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  uint8_t buf[4];
  int v6;
  __int16 v7;
  const char *v8;

  if (a2)
  {
    v3 = *(_QWORD *)(a1 + 32);
    objc_msgSend(*(id *)(v3 + 16), "invalidate");

    *(_QWORD *)(v3 + 16) = 0;
    sub_10038ADA4((uint64_t)+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ %@"), CFSTR("CBDiscovery activation error:"), a2));
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131030);
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289026;
      v6 = 0;
      v7 = 2082;
      v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CBDiscovery leeching not supported activated successfully\"}", buf, 0x12u);
    }
  }
}

uint64_t sub_10036859C()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleScanFlagRssiIsSet", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_100368660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100368678()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleActiveScanRate", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001C1194(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 40;
}

void sub_10036873C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100368754(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_100368780(id a1)
{
  qword_1022A0108 = (uint64_t)os_log_create("com.apple.locationd.Position", "MicrolocationQE");
}

void sub_1003687AC(_BYTE *a1@<X0>, int a2@<W1>, double *a3@<X2>, _BYTE *a4@<X8>)
{
  NSObject *v8;
  const std::string::value_type *v9;
  _BYTE v10[136];
  _BYTE v11[8];
  std::string *v12;
  int v13;
  uint8_t buf[4];
  int v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  int v19;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131070);
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v8 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289282;
      v15 = 0;
      v16 = 2082;
      v17 = "";
      v18 = 1026;
      v19 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"displayState\", \"isDisplayOn\":%{public}hhd}", buf, 0x18u);
    }
  }
  *a1 = a2;
  sub_1002BBB74((uint64_t)v11);
  if (a2)
    v9 = "BackLightSwitchedOn";
  else
    v9 = "BackLightSwitchedOff";
  v13 |= 2u;
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::assign(v12, v9);
  sub_1003689CC((uint64_t)v11, 0, 0, 3u, (uint64_t)v10, *a3);
  buf[0] = a2;
  sub_1002DF194(&v16);
  *a4 = buf[0];
  sub_1002DF194(a4 + 8);
  sub_1002DF2E0(&v16);
  sub_1002DF2E0(v10);
  sub_1002CC368((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_10036898C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  sub_1002DF2E0(v27);
  sub_1002DF2E0(&a10);
  sub_1002CC368((wireless_diagnostics::google::protobuf::MessageLite *)&a27);
  _Unwind_Resume(a1);
}

void sub_1003689CC(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  unsigned int v12;
  int v13;
  const char *v14;
  int v15;
  const char *v16;

  sub_1002BBFAC(a5);
  v12 = *(_DWORD *)(a1 + 16);
  if (!sub_1002BC6A4(v12))
  {
    v14 = "::CLMicroLocationProto::EventType_IsValid(value)";
    v15 = 19803;
    v16 = "set_eventtype";
    goto LABEL_6;
  }
  v13 = *(_DWORD *)(a5 + 128);
  *(_DWORD *)(a5 + 72) = v12;
  *(double *)(a5 + 8) = a6;
  *(_BYTE *)(a5 + 77) = a2;
  *(_DWORD *)(a5 + 128) = v13 | 0x2803;
  *(_BYTE *)(a5 + 76) = a3;
  if ((sub_1002BC674(a4) & 1) == 0)
  {
    v14 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    v15 = 20312;
    v16 = "set_confidencelevel";
LABEL_6:
    __assert_rtn(v16, "microlocation.pb.h", v15, v14);
  }
  *(_DWORD *)(a5 + 128) |= 0x4000u;
  *(_DWORD *)(a5 + 120) = a4;
  sub_1003586D4(a5, a1);
}

void sub_100368AB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1002DF2E0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100368AC4(unsigned __int8 *a1)
{
  return *a1;
}

void sub_100368ACC(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_100368AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  _BYTE v10[24];
  _BYTE *v11;

  *(_QWORD *)a1 = off_1021310A0;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = 0;
  v5 = a1 + 32;
  v6 = operator new(0x20uLL);
  *v6 = off_102131130;
  v6[1] = sub_1003698E0;
  v6[2] = 0;
  v6[3] = a1;
  v11 = v6;
  sub_10148007C(v5, a2, v10);
  v7 = v11;
  if (v11 == v10)
  {
    v8 = 4;
    v7 = v10;
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_6:
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  sub_10023CFD8(a1 + 216, (uint64_t)"CLMicroLocationSensors", a1, 60.0);
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 184) = objc_msgSend(objc_msgSend(*(id *)(a1 + 16), "silo"), "newTimer");
  (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)(a1 + 8) + 80))(&v9);
  operator new();
}

void sub_100368DE4(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100261F44((uint64_t)va);
  operator delete();
}

uint64_t sub_100368EA0(uint64_t a1)
{
  *(_QWORD *)a1 = off_1021310A0;
  objc_msgSend(*(id *)(a1 + 184), "invalidate");

  *(_QWORD *)(a1 + 184) = 0;
  sub_100368F40((uint64_t *)(a1 + 208), 0);
  sub_100368F40((uint64_t *)(a1 + 200), 0);

  *(_QWORD *)(a1 + 24) = 0;
  sub_100E3E6C8(a1 + 216);
  sub_100368F40((uint64_t *)(a1 + 208), 0);
  sub_100368F40((uint64_t *)(a1 + 200), 0);
  sub_101480134(a1 + 32);
  return a1;
}

uint64_t sub_100368F40(uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100FE8508();
    operator delete();
  }
  return result;
}

void sub_100368F80(uint64_t a1)
{
  sub_100368EA0(a1);
  operator delete();
}

void sub_100368FA4(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  const char *v7;
  uint8_t *v8;
  _WORD v9[8];
  uint8_t buf[4];

  v4 = a1 + 32;
  if ((sub_1001240F8(a1 + 32) & 1) != 0)
  {
    *(_DWORD *)buf = 3;
    sub_101480138(v4, (unsigned int *)buf);
    *(_DWORD *)buf = 4;
    sub_101480138(v4, (unsigned int *)buf);
    *(_DWORD *)buf = 5;
    sub_101480138(v4, (unsigned int *)buf);
    v5 = sub_100369190(a1, a2);
    sub_100FE850C(v5);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131100);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "WifiBridge, Wifi is powered off - not scanning", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131100);
      v9[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "WifiBridge, Wifi is powered off - not scanning", v9, 2);
      v8 = (uint8_t *)v7;
      sub_100512490("Generic", 1, 0, 2, "virtual void CLMicroLocationWifiBridge::startWifiRssiScanning(CLMicroLocationUtils::ScanActivity)", "%s\n", v7);
      if (v8 != buf)
        free(v8);
    }
  }
}

uint64_t sub_100369190(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = result;
  switch(a2)
  {
    case 1:
      (*(void (**)(_QWORD))(**(_QWORD **)(result + 8) + 64))(*(_QWORD *)(result + 8));
      v3 = v2 + 200;
      return *(_QWORD *)v3;
    case 2:
      (*(void (**)(_QWORD))(**(_QWORD **)(result + 8) + 64))(*(_QWORD *)(result + 8));
      v3 = v2 + 208;
      return *(_QWORD *)v3;
    case 0:
      sub_1018F6824();
  }
  return result;
}

uint64_t sub_1003691F4(uint64_t a1, int a2)
{
  uint64_t v4;
  NSObject *v5;
  double Current;
  double v7;
  NSObject *v8;
  const char *v10;
  uint8_t *v11;
  _WORD v12[8];
  uint8_t buf[4];
  int v14;
  __int16 v15;
  const char *v16;
  __int16 v17;
  double v18;
  __int16 v19;
  int v20;

  objc_msgSend(*(id *)(a1 + 16), "silo");
  sub_100E3E6F0(a1 + 216);
  v4 = sub_100369190(a1, a2);
  sub_100FE8308(v4);
  *(_DWORD *)buf = 3;
  sub_10148017C(a1 + 32, (int *)buf);
  *(_DWORD *)buf = 4;
  sub_10148017C(a1 + 32, (int *)buf);
  *(_DWORD *)buf = 5;
  sub_10148017C(a1 + 32, (int *)buf);
  objc_msgSend(*(id *)(a1 + 184), "invalidate");
  *(_QWORD *)(a1 + 192) = 0x7FEFFFFFFFFFFFFFLL;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131100);
  v5 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "WifiBridge, wifi, stop scanning", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131100);
    v12[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "WifiBridge, wifi, stop scanning", v12, 2);
    v11 = (uint8_t *)v10;
    sub_100512490("Generic", 1, 0, 2, "virtual void CLMicroLocationWifiBridge::stopWifiRssiScanning(CLMicroLocationUtils::ScanActivity)", "%s\n", v10);
    if (v11 != buf)
      free(v11);
  }
  Current = j__CFAbsoluteTimeGetCurrent();
  v7 = *(double *)(a1 + 264);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131100);
  v8 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 68289538;
    v14 = 0;
    v15 = 2082;
    v16 = "";
    v17 = 2050;
    v18 = Current - v7;
    v19 = 1026;
    v20 = a2;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, scan complete\", \"scanDurationInMs\":\"%{public}.4f\", \"scanActivity\":%{public}d}", buf, 0x22u);
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 48))(*(_QWORD *)(a1 + 8));
}

id sub_1003694C0(uint64_t a1, uint64_t a2)
{
  double Current;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[5];
  void *__p[2];
  char v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  double v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;

  objc_msgSend(*(id *)(a1 + 16), "silo");
  sub_1015A2E04(__p, "startScanning");
  sub_10002B684(a1 + 216, (uint64_t *)__p);
  if (v11 < 0)
    operator delete(__p[0]);
  Current = j__CFAbsoluteTimeGetCurrent();
  *(double *)(a1 + 192) = (Current * 1000.0 + (double)a2) / 1000.0;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131100);
  v5 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v6 = *(_QWORD *)(a1 + 192);
    *(_DWORD *)buf = 68289794;
    v13 = 0;
    v14 = 2082;
    v15 = "";
    v16 = 2050;
    v17 = Current;
    v18 = 2050;
    v19 = a2;
    v20 = 2050;
    v21 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, RecordingStarted\", \"now\":\"%{public}.3f\", \"durationInMs\":%{public}lld, \"expected end time\":\"%{public}.3f\"}", buf, 0x30u);
  }
  v7 = *(void **)(a1 + 184);
  *(double *)(a1 + 264) = Current;
  objc_msgSend(v7, "setNextFireTime:", *(double *)(a1 + 192));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100369698;
  v9[3] = &unk_10212ECA0;
  v9[4] = a1;
  return objc_msgSend(*(id *)(a1 + 184), "setHandler:", v9);
}

void sub_100369674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100369698(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 48))(*(_QWORD *)(a1 + 32));
}

id sub_1003696A8(uint64_t a1, uint64_t a2)
{
  double v2;
  NSObject *v5;
  _DWORD v7[2];
  __int16 v8;
  const char *v9;
  __int16 v10;
  uint64_t v11;

  v2 = *(double *)(a1 + 192);
  if (v2 == 1.79769313e308)
    sub_1018F6990();
  *(double *)(a1 + 192) = (v2 * 1000.0 + (double)a2) / 1000.0;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131100);
  v5 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v7[0] = 68289282;
    v7[1] = 0;
    v8 = 2082;
    v9 = "";
    v10 = 2050;
    v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, RecordingExtended\", \"by durationInMs\":%{public}lld}", (uint8_t *)v7, 0x1Cu);
  }
  return objc_msgSend(*(id *)(a1 + 184), "setNextFireTime:", *(double *)(a1 + 192));
}

uint64_t sub_1003697D8(uint64_t a1)
{
  double Current;
  NSObject *v3;
  _DWORD v5[2];
  __int16 v6;
  const char *v7;
  __int16 v8;
  double v9;

  Current = j__CFAbsoluteTimeGetCurrent();
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131100);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    v6 = 2082;
    v7 = "";
    v8 = 2050;
    v9 = Current;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, wifi scan timer stopped\", \"now\":\"%{public}.3f\"}", (uint8_t *)v5, 0x1Cu);
  }
  return (*(uint64_t (**)(_QWORD, double))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8), Current);
}

void sub_1003698E0(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  NSObject *v7;
  int v8;
  int v9;
  int *v10;
  int *v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  int v17;
  int v18;
  const char *v19;
  uint8_t *v20;
  NSObject *v21;
  void **v22;
  uint64_t v23;
  NSObject *v24;
  const char *v25;
  int v26;
  int v27;
  const char *v28;
  uint8_t *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  void *__p;
  int *v37;
  char v38;
  uint8_t buf[8];
  _BYTE v40[10];
  __int16 v41;
  void **v42;
  char v43;
  char v44;
  char v45;

  objc_msgSend(*(id *)(a1 + 16), "silo");
  if (sub_10019CFA0() == 1)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131100);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *a3;
      v9 = *(char *)(a4 + 1);
      *(_DWORD *)buf = 67240448;
      *(_DWORD *)&buf[4] = v8;
      *(_WORD *)v40 = 1026;
      *(_DWORD *)&v40[2] = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "WifiBridge, Received wifi notification %{public}d with scan type %{public}d", buf, 0xEu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131100);
      v26 = *a3;
      v27 = *(char *)(a4 + 1);
      LODWORD(__p) = 67240448;
      HIDWORD(__p) = v26;
      LOWORD(v37) = 1026;
      *(_DWORD *)((char *)&v37 + 2) = v27;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "WifiBridge, Received wifi notification %{public}d with scan type %{public}d", &__p, 14);
      v29 = (uint8_t *)v28;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationWifiBridge::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v28);
      if (v29 != buf)
        free(v29);
    }
    switch(*a3)
    {
      case 3:
        if (*(_BYTE *)(a4 + 1) == 11)
        {
          sub_1002790BC((uint64_t **)(a4 + 112), (uint64_t *)&__p);
          v32 = 0;
          v33 = 0;
          v34 = 0;
          v10 = (int *)__p;
          v11 = v37;
          while (v10 != v11)
          {
            sub_10035765C(v10, (uint64_t)buf);
            if (v44)
            {
              v12 = v10[17];
              v35 = v12;
              v13 = v33;
              if (v33 >= v34)
              {
                v14 = sub_10036A208(&v32, (uint64_t)buf, &v35);
              }
              else
              {
                sub_10036A32C(v33, (uint64_t)buf, v12);
                v14 = v13 + 56;
              }
              v33 = v14;
              if (v44)
                sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)buf);
            }
            v10 += 22;
          }
          (*(void (**)(_QWORD, uint64_t *, double))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), &v32, *(double *)(a4 + 104));
          *(_QWORD *)buf = &v32;
          sub_1003648B8((void ***)buf);
          *(_QWORD *)buf = &__p;
          sub_100279AA4((void ***)buf);
        }
        else
        {
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131100);
          v24 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "WifiBridge, Received a wifi scan result that is not requested by MiLo, ignore this scan result", buf, 2u);
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_102131100);
            LOWORD(__p) = 0;
            LODWORD(v31) = 2;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "WifiBridge, Received a wifi scan result that is not requested by MiLo, ignore this scan result", &__p, v31);
            v20 = (uint8_t *)v25;
            sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationWifiBridge::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v25);
            goto LABEL_61;
          }
        }
        break;
      case 4:
        (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
        break;
      case 5:
        (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8));
        break;
      case 6:
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131100);
        v21 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
        {
          sub_100CF1FAC(a4 + 8, &__p);
          v22 = v38 >= 0 ? &__p : (void **)__p;
          *(_DWORD *)buf = 68289283;
          *(_DWORD *)&buf[4] = 0;
          *(_WORD *)v40 = 2082;
          *(_QWORD *)&v40[2] = "";
          v41 = 2081;
          v42 = v22;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Received link status notification\", \"associatedState\":%{private, location:escape_only}s}", buf, 0x1Cu);
          if (v38 < 0)
            operator delete(__p);
        }
        v23 = *(_QWORD *)(a1 + 8);
        sub_100CF2884(a4 + 8, (uint64_t)buf);
        (*(void (**)(uint64_t, uint8_t *))(*(_QWORD *)v23 + 24))(v23, buf);
        if (v45 && v43 < 0)
          operator delete(*(void **)v40);
        break;
      default:
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131100);
        v16 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
        {
          v17 = *a3;
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)&buf[4] = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#Warning WifiBridge, Received unknown wifi service notification %{public}d", buf, 8u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131100);
          v18 = *a3;
          LODWORD(__p) = 67240192;
          HIDWORD(__p) = v18;
          LODWORD(v31) = 8;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning WifiBridge, Received unknown wifi service notification %{public}d", &__p, v31);
          v20 = (uint8_t *)v19;
          sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationWifiBridge::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v19);
          goto LABEL_61;
        }
        break;
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131100);
    v15 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "WifiBridge, Location services are disabled, ignore WiFi scan result", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131100);
      LOWORD(__p) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "WifiBridge, Location services are disabled, ignore WiFi scan result", &__p, 2);
      v20 = (uint8_t *)v30;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationWifiBridge::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v30);
LABEL_61:
      if (v20 != buf)
        free(v20);
    }
  }
}

void sub_10036A064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  a14 = (uint64_t *)&a11;
  sub_1003648B8((void ***)&a14);
  a11 = &a15;
  sub_100279AA4((void ***)&a11);
  _Unwind_Resume(a1);
}

void sub_10036A0F0(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_10036A11C()
{
  operator delete();
}

__n128 sub_10036A130(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = off_102131130;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_10036A174(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_102131130;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10036A1A0(_QWORD *a1, unsigned int *a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *, _QWORD);
  _QWORD *v4;

  v2 = a1[2];
  v3 = (uint64_t (*)(_QWORD *, _QWORD))a1[1];
  v4 = (_QWORD *)(a1[3] + (v2 >> 1));
  if ((v2 & 1) != 0)
    v3 = *(uint64_t (**)(_QWORD *, _QWORD))(*v4 + v3);
  return v3(v4, *a2);
}

uint64_t sub_10036A1C0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10036A1FC()
{
}

uint64_t sub_10036A208(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;

  v4 = *a1;
  v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x492492492492492)
    sub_100259694();
  v9 = (uint64_t)(a1 + 2);
  v10 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v4) >> 3);
  if (2 * v10 > v6)
    v6 = 2 * v10;
  if (v10 >= 0x249249249249249)
    v11 = 0x492492492492492;
  else
    v11 = v6;
  v19 = a1 + 2;
  if (v11)
    v12 = (char *)sub_10025B800(v9, v11);
  else
    v12 = 0;
  v15 = v12;
  v16 = &v12[56 * v5];
  v17 = (uint64_t)v16;
  v18 = &v12[56 * v11];
  sub_10036A32C((uint64_t)v16, a2, *a3);
  v17 = (uint64_t)(v16 + 56);
  sub_10036A380(a1, &v15);
  v13 = a1[1];
  sub_10036A498((uint64_t)&v15);
  return v13;
}

void sub_10036A318(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10036A498((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036A32C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;

  v6 = sub_1002BB860(a1);
  *(_DWORD *)(v6 + 48) = a3;
  sub_1002BDB78(v6, a2);
  return a1;
}

void sub_10036A36C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  sub_1002BD5C8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10036A380(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_10036A3F4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10036A3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;

  if (a3 != a5)
  {
    v11 = 0;
    do
    {
      sub_1002BD5C4(a7 + v11 - 56, a3 + v11 - 56);
      *(_DWORD *)(a7 + v11 - 8) = *(_DWORD *)(a3 + v11 - 8);
      v11 -= 56;
    }
    while (a3 + v11 != a5);
  }
  return a6;
}

void sub_10036A478(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  for (; v2; v2 += 56)
    sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)(v1 + v2));
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036A498(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 56;
    sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)(i - 56));
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_10036A4E4(uint64_t result, double a2)
{
  *(_OWORD *)result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(double *)(result + 32) = a2;
  return result;
}

void sub_10036A4F4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::MessageLite *v11;
  double v12;
  NSObject *v13;
  std::string *p_p;
  int *v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  std::string __p;
  uint8_t v32[4];
  _BYTE v33[20];
  uint64_t v34;
  _DWORD v35[400];
  uint64_t buf;
  __int16 v37;
  const char *v38;
  __int16 v39;
  std::string *v40;
  int v41;
  _BYTE v42[20];
  uint64_t v43;
  _DWORD v44[6];

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v5 = *a2;
  v6 = a2[1];
  if (*a2 == v6)
  {
    v29 = 0;
    v7 = 0;
  }
  else
  {
    v7 = 0;
    v29 = 0;
    do
    {
      sub_1002BD5C4(v32, v5);
      v8 = *(double *)&v33[4];
      if (*(double *)&v33[4] >= *(double *)(a1 + 24))
      {
        v9 = *(_QWORD *)a1;
        v10 = *(_QWORD *)(a1 + 8);
        while (v9 != v10)
        {
          v11 = (wireless_diagnostics::google::protobuf::MessageLite *)sub_1002BD5C4(&v41, v9);
          if (v43 == v34)
          {
            v12 = *(double *)&v42[4] - v8;
            if (*(double *)&v42[4] - v8 < 0.0)
              v12 = -v12;
            if (v12 < *(double *)(a1 + 32))
            {
              if (v44[0] == v35[0]
                && *(float *)&v42[16] == *(float *)&v33[16]
                && *(_DWORD *)(v9 + 48) == *(_DWORD *)(v5 + 48))
              {
                ++v29;
                sub_1002BD5C8(v11);
                goto LABEL_29;
              }
              if (qword_1022A00F0 != -1)
                dispatch_once(&qword_1022A00F0, &stru_1021311C8);
              v13 = qword_1022A00F8;
              if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
              {
                v30 = nullsub_34(v34);
                sub_1000C2150(&v30, &__p);
                p_p = &__p;
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
                buf = 68289282;
                v37 = 2082;
                v38 = "";
                v39 = 2082;
                v40 = p_p;
                _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning AP matches timestamp and mac in buffer, but values are not same\", \"mac address\":%{public, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(__p.__r_.__value_.__l.__data_);
              }
            }
          }
          sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)&v41);
          v9 += 56;
        }
        v15 = (int *)(v5 + 48);
        v16 = a3[1];
        if (v16 >= a3[2])
        {
          v18 = sub_10036AF24(a3, (uint64_t)v32, (int *)(v5 + 48));
        }
        else
        {
          v17 = *v15;
          sub_1002BD5C4(a3[1], v32);
          *(_DWORD *)(v16 + 48) = v17;
          v18 = v16 + 56;
          a3[1] = v16 + 56;
        }
        a3[1] = v18;
        v19 = *(_QWORD *)(a1 + 8);
        if (v19 >= *(_QWORD *)(a1 + 16))
        {
          v21 = sub_10036AF24((uint64_t *)a1, (uint64_t)v32, (int *)(v5 + 48));
        }
        else
        {
          v20 = *v15;
          sub_1002BD5C4(*(_QWORD *)(a1 + 8), v32);
          *(_DWORD *)(v19 + 48) = v20;
          v21 = v19 + 56;
          *(_QWORD *)(a1 + 8) = v19 + 56;
        }
        *(_QWORD *)(a1 + 8) = v21;
      }
      else
      {
        ++v7;
      }
LABEL_29:
      sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)v32);
      v5 += 56;
    }
    while (v5 != v6);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021311C8);
  v22 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v23 = 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3);
    v24 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
    *(_DWORD *)v32 = 134349824;
    *(_QWORD *)v33 = v23;
    *(_WORD *)&v33[8] = 2050;
    *(_QWORD *)&v33[10] = v7;
    *(_WORD *)&v33[18] = 2050;
    v34 = v29;
    LOWORD(v35[0]) = 2050;
    *(_QWORD *)((char *)v35 + 2) = v24;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Ingested %{public}ld new AP measurements, too old %{public}ld, dupe %{public}ld, buffer size %{public}ld", v32, 0x2Au);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(v32, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021311C8);
    v25 = 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3);
    v26 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
    v41 = 134349824;
    *(_QWORD *)v42 = v25;
    *(_WORD *)&v42[8] = 2050;
    *(_QWORD *)&v42[10] = v7;
    *(_WORD *)&v42[18] = 2050;
    v43 = v29;
    LOWORD(v44[0]) = 2050;
    *(_QWORD *)((char *)v44 + 2) = v26;
    _os_log_send_and_compose_impl(2, 0, v32, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Ingested %{public}ld new AP measurements, too old %{public}ld, dupe %{public}ld, buffer size %{public}ld", &v41, 42);
    v28 = (uint8_t *)v27;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMiLoProtobufWrapper::WiFiRssi> CLMicroLocationScanBuffer::ingestAps(cl::chrono::CFAbsoluteTimeClock::time_point, const std::vector<CLMiLoProtobufWrapper::WiFiRssi> &)", "%s\n", v27);
    if (v28 != v32)
      free(v28);
  }
}

void sub_10036A9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_1003648B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_10036AA10(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint8_t *v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  uint64_t v24;

  *(double *)(a1 + 24) = a3 - a4;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_10036AD3C(a2, 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3));
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)a1 == v7)
  {
    v7 = *(_QWORD *)a1;
  }
  else
  {
    v8 = *(double *)(a1 + 24);
    while (*(double *)(v6 + 8) >= v8)
    {
      v6 += 56;
      if (v6 == v7)
      {
        v6 = *(_QWORD *)(a1 + 8);
        goto LABEL_13;
      }
    }
    if (v6 != v7)
    {
      v9 = v6 + 56;
      if (v6 + 56 != v7)
      {
        do
        {
          if (*(double *)(v9 + 8) >= v8)
          {
            sub_1002BDB30(v6, v9);
            *(_DWORD *)(v6 + 48) = *(_DWORD *)(v9 + 48);
            v6 += 56;
          }
          v9 += 56;
        }
        while (v9 != v7);
        v7 = *(_QWORD *)(a1 + 8);
      }
    }
  }
LABEL_13:
  sub_10036B05C(v6, v7, a2);
  sub_10036ADF8(a1, v6, *(_QWORD *)(a1 + 8));
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021311C8);
  v10 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v11 = 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 3);
    v12 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
    *(_DWORD *)buf = 134349312;
    v22 = v11;
    v23 = 2050;
    v24 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Pruned %{public}ld AP measurements, buffer size %{public}ld", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021311C8);
    v13 = 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 3);
    v14 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
    v17 = 134349312;
    v18 = v13;
    v19 = 2050;
    v20 = v14;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Pruned %{public}ld AP measurements, buffer size %{public}ld", &v17, 22);
    v16 = (uint8_t *)v15;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMiLoProtobufWrapper::WiFiRssi> CLMicroLocationScanBuffer::pruneAps(cl::chrono::CFAbsoluteTimeClock::time_point, cl::chrono::CFAbsoluteTimeClock::duration)", "%s\n", v15);
    if (v16 != buf)
      free(v16);
  }
}

void sub_10036AD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_1003648B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036AD3C(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0x6DB6DB6DB6DB6DB7 * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x492492492492493)
      sub_100259694();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_10025B800(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 56 * v6;
    sub_10036A380(a1, v7);
    return sub_10036A498((uint64_t)v7);
  }
  return result;
}

void sub_10036ADE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10036A498((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036ADF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 != a3)
  {
    sub_10036B25C(a3, *(_QWORD *)(a1 + 8), a2);
    v6 = v5;
    v7 = *(_QWORD *)(a1 + 8);
    if (v7 != v5)
    {
      do
        sub_1002BD5C8((wireless_diagnostics::google::protobuf::MessageLite *)(v7 - 56));
      while (v7 != v6);
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  return a2;
}

uint64_t sub_10036AE64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7 = 0;
  v8 = 0;
  v6 = (uint64_t *)&v7;
  v1 = *a1;
  v2 = a1[1];
  if (*a1 == v2)
  {
    v3 = 0;
    v4 = 0;
  }
  else
  {
    do
    {
      v9 = *(_QWORD *)(v1 + 24);
      sub_100210524(&v6, (unint64_t *)&v9, &v9);
      v1 += 56;
    }
    while (v1 != v2);
    v3 = v7;
    v4 = v8;
  }
  sub_100008848((uint64_t)&v6, v3);
  return v4;
}

void sub_10036AEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  sub_100008848((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_10036AEF8(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10036AF24(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t *v20;

  v4 = *a1;
  v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x492492492492492)
    sub_100259694();
  v9 = (uint64_t)(a1 + 2);
  v10 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v4) >> 3);
  if (2 * v10 > v6)
    v6 = 2 * v10;
  if (v10 >= 0x249249249249249)
    v11 = 0x492492492492492;
  else
    v11 = v6;
  v20 = a1 + 2;
  if (v11)
    v12 = (char *)sub_10025B800(v9, v11);
  else
    v12 = 0;
  v16 = v12;
  v17 = &v12[56 * v5];
  v18 = v17;
  v19 = &v12[56 * v11];
  v13 = *a3;
  sub_1002BD5C4(v17, a2);
  *((_DWORD *)v17 + 12) = v13;
  v18 += 56;
  sub_10036A380(a1, &v16);
  v14 = a1[1];
  sub_10036A498((uint64_t)&v16);
  return v14;
}

void sub_10036B048(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10036A498((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036B05C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;

  v3 = a1;
  v6 = a3;
  if (a1 == a2)
    return a1;
  v4 = a2;
  do
  {
    sub_10036B0BC(&v6, v3);
    v3 += 56;
  }
  while (v3 != v4);
  return v4;
}

uint64_t **sub_10036B0BC(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = (*a1)[1];
  if (v5 >= (*a1)[2])
  {
    v6 = sub_10036B130(*a1, a2);
  }
  else
  {
    sub_1002BD5C4((*a1)[1], a2);
    *(_DWORD *)(v5 + 48) = *(_DWORD *)(a2 + 48);
    v6 = v5 + 56;
    v4[1] = v5 + 56;
  }
  v4[1] = v6;
  return a1;
}

void sub_10036B128(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10036B130(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x492492492492492)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x249249249249249)
    v9 = 0x492492492492492;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_10025B800(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[56 * v4];
  v15 = v14;
  v16 = &v10[56 * v9];
  sub_1002BD5C4(v14, a2);
  *((_DWORD *)v14 + 12) = *(_DWORD *)(a2 + 48);
  v15 += 56;
  sub_10036A380(a1, &v13);
  v11 = a1[1];
  sub_10036A498((uint64_t)&v13);
  return v11;
}

void sub_10036B248(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10036A498((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036B25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1;
  if (a1 == a2)
    return a1;
  v5 = a2;
  do
  {
    sub_1002BDB30(a3, v4);
    *(_DWORD *)(a3 + 48) = *(_DWORD *)(v4 + 48);
    a3 += 56;
    v4 += 56;
  }
  while (v4 != v5);
  return v5;
}

uint64_t sub_10036B2C4@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char **a5@<X8>)
{
  _QWORD *v10;
  _QWORD *i;
  uint64_t **v12;
  uint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  __int128 v21;
  _QWORD *j;
  uint64_t *k;
  char *v25;
  uint64_t **v26;
  char v28[16];
  _OWORD v29[2];
  int v30;
  _BYTE v31[16];
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  int v35;
  uint8_t buf[8];

  if (!sub_1002EFEB8((uint64_t)a1))
  {
    sub_1018F6C68();
    goto LABEL_28;
  }
  if (!*(_BYTE *)(a3 + 32))
  {
    sub_1018F6AFC();
LABEL_28:
    __break(1u);
  }
  v33 = 0u;
  v34 = 0u;
  v35 = 1065353216;
  v10 = (_QWORD *)a1[29];
  for (i = (_QWORD *)a1[30]; v10 != i; v10 += 4)
  {
    *(_QWORD *)buf = v10 + 2;
    v12 = (uint64_t **)sub_10036BD18((uint64_t)&v33, v10 + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
    v13 = *(_QWORD *)(a3 + 24);
    if (!v13)
      sub_10025FD1C();
    *(_QWORD *)buf = (*(double (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)v13 + 48))(v13, *v10, a2);
    sub_10009E97C(v12 + 4, (double *)buf);
  }
  sub_1002EF90C(a1, (uint64_t)v31);
  v14 = *(_DWORD *)(a2 + 160);
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  *((_DWORD *)a5 + 6) = 3;
  *((_BYTE *)a5 + 80) = 0;
  a5[5] = 0;
  a5[6] = 0;
  a5[4] = 0;
  *((_BYTE *)a5 + 56) = 0;
  v15 = (char *)sub_10025BA00((uint64_t)(a5 + 2), 1uLL);
  v17 = &v15[32 * v16];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  *((_QWORD *)v15 + 2) = 0;
  *((_DWORD *)v15 + 6) = v14;
  v18 = v15 + 32;
  v20 = *a5;
  v19 = a5[1];
  if (v19 != *a5)
  {
    do
    {
      v21 = *((_OWORD *)v19 - 2);
      *(_OWORD *)(v15 - 20) = *(_OWORD *)(v19 - 20);
      *((_OWORD *)v15 - 2) = v21;
      v15 -= 32;
      v19 -= 32;
    }
    while (v19 != v20);
    v19 = *a5;
  }
  *a5 = v15;
  a5[1] = v18;
  a5[2] = v17;
  if (v19)
    operator delete(v19);
  a5[1] = v18;
  sub_10036B978((uint64_t)v15, a4);
  for (j = v32; j; j = (_QWORD *)*j)
  {
    if ((j[2] & j[3]) != -1)
    {
      memset(v29, 0, sizeof(v29));
      v30 = 1065353216;
      for (k = (uint64_t *)v34; k; k = (uint64_t *)*k)
      {
        if (k[2] == j[2] && k[3] == j[3])
        {
          *(_QWORD *)buf = k + 2;
          v26 = (uint64_t **)sub_10036BD18((uint64_t)v29, k + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
          if (k != (uint64_t *)v26)
            sub_10036BFF0(v26 + 4, (_QWORD *)k[4], k + 5);
        }
        else
        {
          *(_QWORD *)buf = qword_101B9EA00;
          v25 = (char *)sub_10036BD18((uint64_t)v29, qword_101B9EA00, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
          sub_100346D04(v25 + 32, (_QWORD *)k[4], k + 5);
        }
      }
      sub_10036B9C8((uint64_t)v29, a4, (uint64_t)v28);
      sub_100263868(a4, buf);
      sub_10029822C((uint64_t)buf);
    }
  }
  sub_100067AC4((uint64_t)v31);
  return sub_10036BCA0((uint64_t)&v33);
}

void sub_10036B8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  sub_100261E8C(v41);
  sub_100067AC4((uint64_t)&a36);
  sub_10036BCA0((uint64_t)&a41);
  _Unwind_Resume(a1);
}

void sub_10036B978(uint64_t a1, uint64_t a2)
{
  double v2;
  __n128 v3;
  char v4;
  uint64_t v6;

  v2 = COERCE_DOUBLE(sub_1002638A8(a2));
  if (v4)
  {
    v3.n128_f64[0] = v2;
    if (v2 > 0.0 && v2 < 1.0)
    {
      log(v2);
    }
    else
    {
      v6 = sub_1018F6DD4(v3);
      sub_10036B9C8(v6);
    }
  }
}

uint64_t *sub_10036B9C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  int v11;
  int v12;
  double v13;
  uint64_t *result;
  double v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _Unwind_Exception *v22;
  _OWORD *v23;

  v6 = *(uint64_t **)(a1 + 16);
  if (v6)
  {
    v7 = 0;
    do
    {
      v7 += *((_DWORD *)v6 + 12);
      v6 = (uint64_t *)*v6;
    }
    while (v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = nullsub_34(a2);
  v9 = *(uint64_t **)(v8 + 8);
  if (v9)
  {
    v3 = v8;
    v10 = *(uint64_t **)(v8 + 8);
    do
    {
      v11 = *((_DWORD *)v10 + 8);
      if (v11 <= 2)
      {
        if (v11 == 2)
          goto LABEL_15;
        ++v10;
      }
      v10 = (uint64_t *)*v10;
    }
    while (v10);
  }
  v8 = sub_1018F6F38();
  do
  {
    ++v9;
    do
    {
      v9 = (uint64_t *)*v9;
      if (!v9)
      {
        v22 = (_Unwind_Exception *)sub_1018F70A4(v8);
        sub_100067AC4(a3);
        _Unwind_Resume(v22);
      }
LABEL_15:
      v12 = *((_DWORD *)v9 + 8);
    }
    while (v12 > 3);
  }
  while (v12 != 3);
  LODWORD(v23) = 2;
  v13 = *(double *)sub_1000B5C9C(v3, (int *)&v23);
  LODWORD(v23) = 3;
  result = sub_1000B5C9C(v3, (int *)&v23);
  v15 = *(double *)result;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  v16 = *(uint64_t **)(a1 + 16);
  if (v16)
  {
    v17 = (double)v7;
    do
    {
      if (~*((_OWORD *)v16 + 1) == 0)
        v18 = v15;
      else
        v18 = v13;
      sub_10036BB54((_QWORD **)v16 + 4, v18);
      v20 = v19;
      v21 = v16[6];
      v23 = v16 + 2;
      result = sub_100273930(a3, v16 + 2, (uint64_t)&unk_101B9EB60, &v23);
      result[4] = v20;
      *((double *)result + 5) = (double)v21 / v17;
      v16 = (uint64_t *)*v16;
    }
    while (v16);
  }
  return result;
}

_QWORD **sub_10036BB54(_QWORD **result, double a2)
{
  _QWORD *v2;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v2 = result[2];
  if (!v2)
    sub_1018F7210();
  if (a2 < 0.0 || a2 > 1.0)
    sub_1018F7238();
  v4 = a2 == 0.0 || v2 == (_QWORD *)1;
  if (!v4)
  {
    if (a2 == 1.0)
    {
      v6 = result[1];
      ++result;
      v5 = v6;
      if (v6)
      {
        do
          v5 = (_QWORD *)v5[1];
        while (v5);
      }
      else
      {
        do
        {
          v4 = *result[2] == (_QWORD)result;
          result = (_QWORD **)result[2];
        }
        while (v4);
      }
    }
    else
    {
      v7 = (double)((unint64_t)v2 - 1);
      v8 = v7 * a2;
      if (v8 < 0.0)
        v8 = 0.0;
      if (v8 <= v7)
        v9 = v8;
      else
        v9 = (double)((unint64_t)v2 - 1);
      v10 = llround(floor(v9));
      if (v10 < 0 || v10 > (int)v2 - 2)
        sub_1018F7260();
      v13 = *result;
      result = sub_100346A7C(&v13, v10);
      v11 = v13;
      v12 = (_QWORD *)v13[1];
      if (v12)
      {
        do
          v12 = (_QWORD *)*v12;
        while (v12);
      }
      else
      {
        do
        {
          v4 = *(_QWORD *)v11[2] == (_QWORD)v11;
          v11 = (_QWORD *)v11[2];
        }
        while (!v4);
      }
    }
  }
  return result;
}

void sub_10036BC74(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10036BCA0(uint64_t a1)
{
  void *v2;

  sub_10036BCD8(a1, *(_QWORD ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_10036BCD8(uint64_t a1, _QWORD **a2)
{
  _QWORD **v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = *v2;
      sub_100008848((uint64_t)(v2 + 4), v2[5]);
      operator delete(v2);
      v2 = (_QWORD **)v3;
    }
    while (v3);
  }
}

_QWORD *sub_10036BD18(uint64_t a1, _QWORD *a2, uint64_t a3, _OWORD **a4)
{
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v7 = 0;
  v8 = 0;
  do
    v8 ^= (v8 << 6) + (v8 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v7++);
  while (v7 != 16);
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2 && i[3] == a2[1])
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4)
            break;
        }
      }
    }
  }
  v15 = (_QWORD *)(a1 + 16);
  i = operator new(0x38uLL);
  *i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = **a4;
  i[6] = 0;
  i[5] = 0;
  i[4] = i + 5;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_10012E444(a1, v21);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *i = *v23;
LABEL_44:
    *v23 = i;
    goto LABEL_45;
  }
  *i = *v15;
  *v15 = i;
  *(_QWORD *)(v22 + 8 * v4) = v15;
  if (*i)
  {
    v24 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9)
        v24 %= v9;
    }
    else
    {
      v24 &= v9 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_44;
  }
LABEL_45:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_10036BF8C(_Unwind_Exception *a1)
{
  _QWORD **v1;
  uint64_t v2;

  sub_10036BFA8(v2, v1);
  _Unwind_Resume(a1);
}

void sub_10036BFA8(uint64_t a1, _QWORD **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_100008848((uint64_t)(a2 + 4), a2[5]);
  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

uint64_t **sub_10036BFF0(uint64_t **result, _QWORD *a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t *v16;

  v5 = result;
  if (result[2])
  {
    v6 = *result;
    v7 = result[1];
    *result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1])
      v8 = (uint64_t *)v6[1];
    else
      v8 = v6;
    v14 = result;
    v15 = v8;
    v16 = v8;
    if (v8)
    {
      v15 = sub_10036C1BC((uint64_t)v8);
      if (a2 != a3)
      {
        v9 = a2;
        do
        {
          v8[4] = v9[4];
          sub_10036C150(v5, (uint64_t)v8);
          v8 = v15;
          v16 = v15;
          if (v15)
            v15 = sub_10036C1BC((uint64_t)v15);
          v10 = (_QWORD *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              v10 = (_QWORD *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (_QWORD *)v9[2];
              v11 = *a2 == (_QWORD)v9;
              v9 = a2;
            }
            while (!v11);
          }
          if (!v8)
            break;
          v9 = a2;
        }
        while (a2 != a3);
      }
    }
    result = (uint64_t **)sub_10036C210((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      result = (uint64_t **)sub_10009E97C(v5, (double *)a2 + 4);
      v12 = (_QWORD *)a2[1];
      if (v12)
      {
        do
        {
          v13 = v12;
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (_QWORD *)a2[2];
          v11 = *v13 == (_QWORD)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_10036C13C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10036C210((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036C150(uint64_t **a1, uint64_t a2)
{
  uint64_t **v3;
  uint64_t *v4;
  uint64_t **v5;

  v3 = a1 + 1;
  v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        v3 = (uint64_t **)v4;
        if (*(double *)(a2 + 32) >= *((double *)v4 + 4))
          break;
        v4 = (uint64_t *)*v4;
        v5 = v3;
        if (!*v3)
          goto LABEL_8;
      }
      v4 = (uint64_t *)v4[1];
    }
    while (v4);
    v5 = v3 + 1;
  }
  else
  {
    v5 = a1 + 1;
  }
LABEL_8:
  sub_1000145B0(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

_QWORD *sub_10036C1BC(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  _QWORD *v4;

  result = *(_QWORD **)(a1 + 16);
  if (result)
  {
    v3 = (_QWORD *)*result;
    if (*result == a1)
    {
      *result = 0;
      while (1)
      {
        v4 = (_QWORD *)result[1];
        if (!v4)
          break;
        do
        {
          result = v4;
          v4 = (_QWORD *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; v3 = (_QWORD *)result[1])
      {
        do
        {
          result = v3;
          v3 = (_QWORD *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_10036C210(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_100008848(*(_QWORD *)a1, *(_QWORD **)(a1 + 16));
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = (_QWORD *)v2[2];
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = (_QWORD *)v3[2];
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    sub_100008848(*(_QWORD *)a1, v2);
  }
  return a1;
}

void sub_10036C264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  _QWORD *i;
  uint64_t **v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];
  int v16;
  uint8_t buf[8];

  if (sub_1002EFEB8(a2))
  {
    if (*(_BYTE *)(a4 + 32))
    {
      memset(v15, 0, sizeof(v15));
      v16 = 1065353216;
      v10 = *(_QWORD **)(a2 + 232);
      for (i = *(_QWORD **)(a2 + 240); v10 != i; v10 += 4)
      {
        *(_QWORD *)buf = v10 + 2;
        v12 = (uint64_t **)sub_10036BD18((uint64_t)v15, v10 + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
        v13 = *(_QWORD *)(a4 + 24);
        if (!v13)
          sub_10025FD1C();
        *(_QWORD *)buf = (*(double (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)v13 + 48))(v13, *v10, a3);
        sub_10009E97C(v12 + 4, (double *)buf);
      }
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _BYTE *, uint64_t))(*(_QWORD *)a1 + 24))(&v14, a1, v15, a5);
      sub_100263868(a5, buf);
      sub_10029822C((uint64_t)buf);
    }
    sub_1018F7288();
  }
  else
  {
    sub_1018F73F4();
  }
  __break(1u);
}

void sub_10036C964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  sub_100261E8C(v33);
  if (a19)
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
  if (__p)
    operator delete(__p);
  sub_100067AC4((uint64_t)&a23);
  sub_100067AC4((uint64_t)&a28);
  sub_10036BCA0((uint64_t)&a33);
  _Unwind_Resume(a1);
}

uint64_t *sub_10036CA1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v6;
  int v7;
  double v8;
  double v9;
  double v10;
  CFStringRef v11;
  int v12;
  unsigned int v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  uint64_t v17;
  uint64_t *i;
  double v19;
  unint64_t v20;
  double *v21;
  uint64_t *result;
  uint64_t v23;
  _QWORD *v24[3];
  _OWORD *v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t *v28;

  v6 = *(uint64_t **)(a1 + 16);
  if (v6)
  {
    v7 = 0;
    do
    {
      v7 += *((_DWORD *)v6 + 12);
      v6 = (uint64_t *)*v6;
    }
    while (v6);
    v8 = (double)v7;
  }
  else
  {
    v8 = 0.0;
  }
  v9 = sub_100263814(a2);
  v10 = sub_10026383C(a2);
  sub_1001E4804(&v26);
  LODWORD(v25) = 0;
  v11 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNullSpaceDistanceReductionFunction", 0x8000100u, kCFAllocatorNull);
  v12 = sub_1000B1180(v26, (uint64_t)v11, &v25);
  CFRelease(v11);
  v13 = v25;
  v14 = v27;
  if (v27)
  {
    p_shared_owners = (unint64_t *)&v27->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v12)
    v17 = v13;
  else
    v17 = 5;
  sub_1003465E0(v17, 0, (uint64_t)&v26, v9, v10);
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  for (i = *(uint64_t **)(a1 + 16); i; i = (uint64_t *)*i)
  {
    sub_100346CB0((uint64_t)v24, (uint64_t)(i + 4));
    if (!v28)
      sub_10025FD1C();
    v19 = (*(double (**)(uint64_t *, _QWORD **))(*v28 + 48))(v28, v24);
    v20 = i[6];
    v25 = i + 2;
    v21 = (double *)sub_100273930(a3, i + 2, (uint64_t)&unk_101B9EB60, &v25);
    v21[4] = v19;
    v21[5] = (double)v20 / v8;
    sub_100008848((uint64_t)v24, v24[1]);
  }
  result = v28;
  if (v28 == &v26)
  {
    v23 = 4;
    result = &v26;
  }
  else
  {
    if (!v28)
      return result;
    v23 = 5;
  }
  return (uint64_t *)(*(uint64_t (**)(void))(*result + 8 * v23))();
}

void sub_10036CC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10036CCBC(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10036CCE8(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  CFStringRef v4;
  int v5;
  unsigned int v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  CFStringRef v12;
  int v13;
  unsigned int v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  NSObject *v19;
  uint64_t v20;
  unsigned int v22;
  uint8_t buf[8];
  _BYTE v24[10];
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  int v28;
  __int16 v29;
  unint64_t v30;

  if (sub_100345FC0(a1))
  {
    v2 = 0;
    while (2)
    {
      v3 = sub_100345F70(a1, v2) + 16;
      while (1)
      {
        v3 = *(_QWORD *)v3;
        if (!v3)
          break;
        if (*(_DWORD *)(v3 + 24) == 5)
        {
          sub_1001E4804(buf);
          v22 = 0;
          v12 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsModelQualityNumFingerprintsWiFiBleThreshold", 0x8000100u, kCFAllocatorNull);
          v13 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v12, &v22);
          CFRelease(v12);
          v14 = v22;
          v15 = *(std::__shared_weak_count **)v24;
          if (*(_QWORD *)v24)
          {
            v16 = (unint64_t *)(*(_QWORD *)v24 + 8);
            do
              v17 = __ldaxr(v16);
            while (__stlxr(v17 - 1, v16));
            if (!v17)
            {
              ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
              std::__shared_weak_count::__release_weak(v15);
            }
          }
          if (v13)
            v11 = v14;
          else
            v11 = 150;
          v10 = 1;
          goto LABEL_25;
        }
      }
      if (++v2 < sub_100345FC0(a1))
        continue;
      break;
    }
  }
  sub_1001E4804(buf);
  v22 = 0;
  v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsModelQualityNumFingerprintsWiFiOnlyThreshold", 0x8000100u, kCFAllocatorNull);
  v5 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v4, &v22);
  CFRelease(v4);
  v6 = v22;
  v7 = *(std::__shared_weak_count **)v24;
  if (*(_QWORD *)v24)
  {
    v8 = (unint64_t *)(*(_QWORD *)v24 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = 0;
  if (v5)
    v11 = v6;
  else
    v11 = 200;
LABEL_25:
  v18 = v11;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021312B0);
  v19 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v20 = sub_100345FC0(a1);
    *(_DWORD *)buf = 68289794;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v24 = 2082;
    *(_QWORD *)&v24[2] = "";
    v25 = 2050;
    v26 = v20;
    v27 = 1026;
    v28 = v10;
    v29 = 2050;
    v30 = v18;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"evaluateQualityWithNumFingerprints\", \"Num fingerprints (unpruned)\":%{public}lu, \"Has BLE\":%{public}hhd, \"Threshold\":%{public}lu}", buf, 0x2Cu);
  }
  if (sub_100345FC0(a1) < v18)
    return 1;
  else
    return 3;
}

void sub_10036CF9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036D014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  CFStringRef v4;
  char v5;
  int v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *i;
  int v16;
  _QWORD *v17;
  uint64_t **v18;
  int v19;
  int v20;
  uint64_t **v21;
  int *v22;
  int *v23;
  int *v24;
  unsigned int v25;
  unint64_t v26;
  CFStringRef v27;
  int v28;
  double v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  double v33;
  NSObject *v34;
  int v35;
  int v36;
  int v37;
  CFStringRef v38;
  int v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int *v46;
  int v47;
  float v48;
  CFStringRef v49;
  int v50;
  double v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  double v55;
  CFStringRef v56;
  int v57;
  unsigned int v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unsigned int v62;
  unint64_t v63;
  CFStringRef v64;
  int v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  int v70;
  unint64_t v71;
  unint64_t v72;
  int *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  unint64_t v79;
  _DWORD *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  int v95;
  int *v97;
  uint64_t v98;
  void **v99;
  _QWORD **v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD **v103;
  _QWORD *v104;
  unint64_t v105;
  __int128 v106;
  __int128 v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  const __CFString *v112;
  uint64_t v113;
  char v114;
  double v115;
  uint8_t buf[8];
  _BYTE v117[10];
  __int16 v118;
  unint64_t v119;
  __int16 v120;
  uint64_t v121;
  __int16 v122;
  int v123;
  __int16 v124;
  int v125;
  __int16 v126;
  int v127;
  __int16 v128;
  double v129;

  v3 = a2;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  v99 = (void **)(a2 + 8);
  sub_1002A3054((char *)(a2 + 8), 0, 0, 0);
  sub_1001E4804(buf);
  LOBYTE(v106) = 0;
  v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveSensorsEnable", 0x8000100u, kCFAllocatorNull);
  v5 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v4, (BOOL *)&v106);
  CFRelease(v4);
  v6 = v106;
  v7 = *(std::__shared_weak_count **)v117;
  if (*(_QWORD *)v117)
  {
    v8 = (unint64_t *)(*(_QWORD *)v117 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v112 = &stru_1021D8FB8;
  v10 = sub_1002EBABC(1, 1, 1);
  v11 = v5 ^ 1;
  v113 = v10;
  if (v6)
    v11 = 1;
  v114 = v11;
  v109 = 0;
  v110 = 0;
  v111 = 0;
  sub_100314B8C(a1, (float *)&v109);
  if (sub_1002ED634(a1) == 1)
  {
    HIDWORD(v110) = 0;
    LODWORD(v111) = 0;
  }
  v106 = 0u;
  v107 = 0u;
  v108 = 1065353216;
  v104 = 0;
  v105 = 0;
  v102 = 0;
  v103 = &v104;
  v100 = &v101;
  v101 = 0;
  v13 = *(_QWORD *)(a1 + 232);
  v12 = *(_QWORD *)(a1 + 240);
  v14 = (v12 - v13) >> 5;
  if (v12 == v13)
  {
    v25 = 0;
    *(_DWORD *)(v3 + 32) = 0;
    v22 = (int *)(v3 + 32);
    *(_DWORD *)(v3 + 36) = 0;
    v23 = (int *)(v3 + 36);
    *(_DWORD *)(v3 + 40) = 0;
    v24 = (int *)(v3 + 40);
  }
  else
  {
    do
    {
      for (i = *(uint64_t **)(*(_QWORD *)v13 + 16); i; i = (uint64_t *)*i)
      {
        v16 = *((_DWORD *)i + 6);
        if (v16 == 6)
        {
          v18 = (uint64_t **)&v100;
        }
        else
        {
          if (v16 != 5)
          {
            if (v16 == 1)
            {
              *(_QWORD *)buf = i + 4;
              v17 = sub_10036DAC8((uint64_t)&v106, (uint64_t)(i + 4), (uint64_t)&unk_101B9EB60, (uint64_t *)buf);
              ++*((_DWORD *)v17 + 12);
            }
            continue;
          }
          v18 = (uint64_t **)&v103;
        }
        sub_10036DFC4(v18, (uint64_t)(i + 4), (uint64_t)(i + 4));
      }
      v13 += 32;
    }
    while (v13 != v12);
    v19 = v105;
    v20 = v102;
    v21 = (uint64_t **)v107;
    *(_DWORD *)(v3 + 32) = DWORD2(v107);
    v22 = (int *)(v3 + 32);
    *(_DWORD *)(v3 + 36) = v19;
    v23 = (int *)(v3 + 36);
    *(_DWORD *)(v3 + 40) = v20;
    v24 = (int *)(v3 + 40);
    if (v21)
    {
      v97 = (int *)(v3 + 36);
      v98 = v3;
      v25 = 0;
      do
      {
        v26 = *((int *)v21 + 12);
        sub_1001E4804(buf);
        v115 = 0.0;
        v27 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRobustWiFiMinARDecisionTreeFeatureThreshold", 0x8000100u, kCFAllocatorNull);
        v28 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v27, &v115);
        CFRelease(v27);
        v29 = v115;
        v30 = *(std::__shared_weak_count **)v117;
        if (*(_QWORD *)v117)
        {
          v31 = (unint64_t *)(*(_QWORD *)v117 + 8);
          do
            v32 = __ldaxr(v31);
          while (__stlxr(v32 - 1, v31));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        if (v28)
          v33 = v29;
        else
          v33 = 0.05;
        if (v33 < (float)(v26 / v14))
          ++v25;
        v21 = (uint64_t **)*v21;
      }
      while (v21);
      v23 = v97;
      v3 = v98;
    }
    else
    {
      v25 = 0;
    }
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021312B0);
  v34 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v35 = *v22;
    v36 = *v23;
    v37 = *v24;
    *(_DWORD *)buf = 68290562;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v117 = 2082;
    *(_QWORD *)&v117[2] = "";
    v118 = 2050;
    v119 = v14;
    v120 = 2050;
    v121 = v25;
    v122 = 1026;
    v123 = v35;
    v124 = 1026;
    v125 = v36;
    v126 = 1026;
    v127 = v37;
    v128 = 2050;
    v129 = *(float *)&v111;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"evaluateQualityTreeBased\", \"Num fingerprints (post-pruning)\":%{public}lu, \"NumRobustWifiSources\":%{public}lu, \"NumWiFiSources\":%{public}u, \"NumBLESources\":%{public}u, \"NumUWBSources\":%{public}u, \"maxClusterRfDistance\":\"%{public}f\"}", buf, 0x42u);
  }
  sub_1001E4804(buf);
  LODWORD(v115) = 0;
  v38 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumMinFingerprintsPostPruningTreeBasedThreshold", 0x8000100u, kCFAllocatorNull);
  v39 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v38, &v115);
  CFRelease(v38);
  v40 = LODWORD(v115);
  v41 = *(std::__shared_weak_count **)v117;
  if (*(_QWORD *)v117)
  {
    v42 = (unint64_t *)(*(_QWORD *)v117 + 8);
    do
      v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }
  v44 = 130;
  if (v39)
    v44 = v40;
  if (v14 < v44)
  {
    v45 = *(_QWORD *)(v3 + 24);
    v46 = *(int **)(v3 + 16);
    if ((unint64_t)v46 < v45)
    {
      v47 = 5;
LABEL_89:
      *v46 = v47;
      v80 = v46 + 1;
LABEL_121:
      *(_QWORD *)(v3 + 16) = v80;
      v70 = 1;
      goto LABEL_122;
    }
    v73 = (int *)*v99;
    v74 = ((char *)v46 - (_BYTE *)*v99) >> 2;
    v75 = v74 + 1;
    if ((unint64_t)(v74 + 1) >> 62)
      sub_100259694();
    v76 = v45 - (_QWORD)v73;
    if (v76 >> 1 > v75)
      v75 = v76 >> 1;
    if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL)
      v77 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v77 = v75;
    if (v77)
    {
      v78 = (char *)sub_100260634(v3 + 24, v77);
      v73 = *(int **)(v3 + 8);
      v46 = *(int **)(v3 + 16);
    }
    else
    {
      v78 = 0;
    }
    v86 = &v78[4 * v74];
    v87 = &v78[4 * v77];
    *(_DWORD *)v86 = 5;
    v80 = v86 + 4;
    while (v46 != v73)
    {
      v88 = *--v46;
      *((_DWORD *)v86 - 1) = v88;
      v86 -= 4;
    }
    goto LABEL_119;
  }
  v48 = *(float *)&v111;
  sub_1001E4804(buf);
  v115 = 0.0;
  v49 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxClusterRFDistanceDecisionTreeNodeThreshold", 0x8000100u, kCFAllocatorNull);
  v50 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v49, &v115);
  CFRelease(v49);
  v51 = v115;
  v52 = *(std::__shared_weak_count **)v117;
  if (*(_QWORD *)v117)
  {
    v53 = (unint64_t *)(*(_QWORD *)v117 + 8);
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
  v55 = 0.49;
  if (v50)
    v55 = v51;
  if (v55 >= v48)
  {
    v79 = *(_QWORD *)(v3 + 24);
    v46 = *(int **)(v3 + 16);
    if ((unint64_t)v46 < v79)
    {
      v47 = 6;
      goto LABEL_89;
    }
    v73 = (int *)*v99;
    v81 = ((char *)v46 - (_BYTE *)*v99) >> 2;
    v82 = v81 + 1;
    if ((unint64_t)(v81 + 1) >> 62)
      sub_100259694();
    v83 = v79 - (_QWORD)v73;
    if (v83 >> 1 > v82)
      v82 = v83 >> 1;
    if ((unint64_t)v83 >= 0x7FFFFFFFFFFFFFFCLL)
      v84 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v84 = v82;
    if (v84)
    {
      v85 = (char *)sub_100260634(v3 + 24, v84);
      v73 = *(int **)(v3 + 8);
      v46 = *(int **)(v3 + 16);
    }
    else
    {
      v85 = 0;
    }
    v86 = &v85[4 * v81];
    v87 = &v85[4 * v84];
    *(_DWORD *)v86 = 6;
    v80 = v86 + 4;
    while (v46 != v73)
    {
      v89 = *--v46;
      *((_DWORD *)v86 - 1) = v89;
      v86 -= 4;
    }
    goto LABEL_119;
  }
  sub_1001E4804(buf);
  LODWORD(v115) = 0;
  v56 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumRobustWifiSourcesDecisionTreeNodeThreshold", 0x8000100u, kCFAllocatorNull);
  v57 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v56, &v115);
  CFRelease(v56);
  v58 = LODWORD(v115);
  v59 = *(std::__shared_weak_count **)v117;
  if (*(_QWORD *)v117)
  {
    v60 = (unint64_t *)(*(_QWORD *)v117 + 8);
    do
      v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
    }
  }
  if (v57)
    v62 = v58;
  else
    v62 = 42;
  if (v25 >= v62)
  {
    v70 = 3;
  }
  else
  {
    v63 = v105;
    sub_1001E4804(buf);
    LODWORD(v115) = 0;
    v64 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumBLESourcesDecisionTreeNodeThreshold", 0x8000100u, kCFAllocatorNull);
    v65 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v64, &v115);
    CFRelease(v64);
    v66 = LODWORD(v115);
    v67 = *(std::__shared_weak_count **)v117;
    if (*(_QWORD *)v117)
    {
      v68 = (unint64_t *)(*(_QWORD *)v117 + 8);
      do
        v69 = __ldaxr(v68);
      while (__stlxr(v69 - 1, v68));
      if (!v69)
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
    }
    v70 = 3;
    if (v65)
      v71 = v66;
    else
      v71 = 3;
    if (v63 < v71)
    {
      v72 = *(_QWORD *)(v3 + 24);
      v46 = *(int **)(v3 + 16);
      if ((unint64_t)v46 < v72)
      {
        v47 = 7;
        goto LABEL_89;
      }
      v73 = (int *)*v99;
      v90 = ((char *)v46 - (_BYTE *)*v99) >> 2;
      v91 = v90 + 1;
      if ((unint64_t)(v90 + 1) >> 62)
        sub_100259694();
      v92 = v72 - (_QWORD)v73;
      if (v92 >> 1 > v91)
        v91 = v92 >> 1;
      if ((unint64_t)v92 >= 0x7FFFFFFFFFFFFFFCLL)
        v93 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v93 = v91;
      if (v93)
      {
        v94 = (char *)sub_100260634(v3 + 24, v93);
        v73 = *(int **)(v3 + 8);
        v46 = *(int **)(v3 + 16);
      }
      else
      {
        v94 = 0;
      }
      v86 = &v94[4 * v90];
      v87 = &v94[4 * v93];
      *(_DWORD *)v86 = 7;
      v80 = v86 + 4;
      while (v46 != v73)
      {
        v95 = *--v46;
        *((_DWORD *)v86 - 1) = v95;
        v86 -= 4;
      }
LABEL_119:
      *(_QWORD *)(v3 + 8) = v86;
      *(_QWORD *)(v3 + 16) = v80;
      *(_QWORD *)(v3 + 24) = v87;
      if (v73)
        operator delete(v73);
      goto LABEL_121;
    }
  }
LABEL_122:
  *(_DWORD *)v3 = v70;
  sub_10036DA80((uint64_t)&v100, v101);
  sub_10036DA80((uint64_t)&v103, v104);
  return sub_10036DA0C((uint64_t)&v106);
}

void sub_10036D91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, ...)
{
  uint64_t v5;
  void *v7;
  uint64_t v8;
  va_list va;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;
  _QWORD *v14;
  uint64_t v15;
  va_list va2;

  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD *);
  v11 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v12 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD *);
  v15 = va_arg(va2, _QWORD);
  sub_10036DA80((uint64_t)va, v10);
  sub_10036DA80((uint64_t)va1, v14);
  sub_10036DA0C((uint64_t)va2);
  v7 = *a5;
  if (*a5)
  {
    *(_QWORD *)(v5 + 16) = v7;
    operator delete(v7);
  }
  _Unwind_Resume(a1);
}

void sub_10036D9E0(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10036DA0C(uint64_t a1)
{
  void *v2;

  sub_10036DA44(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_10036DA44(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_100271404((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_10036DA80(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_10036DA80(a1, *a2);
    sub_10036DA80(a1, a2[1]);
    sub_100271404((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

_QWORD *sub_10036DAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t *v26;
  _QWORD v27[3];

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_10036DDD4(a1 + 24, a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v26 = a4;
      v15 = (_QWORD *)*v14;
      if (*v14)
      {
        do
        {
          v16 = v15[1];
          if (v16 == v10)
          {
            if ((sub_10036DECC((uint64_t)(v15 + 2), a2) & 1) != 0)
              return v15;
          }
          else
          {
            if (v13 > 1)
            {
              if (v16 >= v11)
                v16 %= v11;
            }
            else
            {
              v16 &= v11 - 1;
            }
            if (v16 != v4)
              break;
          }
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
      a4 = v26;
    }
  }
  sub_10036DD58(a1, v10, a4, (uint64_t)v27);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_10012E444(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v27[0] = *v23;
    *v23 = v27[0];
  }
  else
  {
    *(_QWORD *)v27[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v27[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v27[0])
    {
      v24 = *(_QWORD *)(*(_QWORD *)v27[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11)
          v24 %= v11;
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v27[0];
    }
  }
  v15 = (_QWORD *)v27[0];
  v27[0] = 0;
  ++*v8;
  sub_10036DF80((uint64_t)v27, 0);
  return v15;
}

void sub_10036DD40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_10036DF80((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_10036DD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x38uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_1002719DC((uint64_t)(v8 + 2), *a3);
  *((_DWORD *)v8 + 12) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_10036DDBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10036DF80(v1, 0);
  _Unwind_Resume(a1);
}

unint64_t sub_10036DDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v9;

  v2 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v2 == -1)
  {
    v4 = 299792458;
LABEL_5:
    v5 = -1;
    goto LABEL_6;
  }
  v4 = ((uint64_t (*)(char *))*(&off_1021312D0 + v2))(&v9);
  v5 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_5;
LABEL_6:
  v6 = 0x9DDFEA08EB382D69 * (v4 ^ __ROR8__(v5 + 16, 16));
  v7 = __ROR8__(v5 + 16, 16) ^ (v6 >> 47);
  return (0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * (v7 ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v7 ^ v6)) >> 47))) ^ v5;
}

uint64_t sub_10036DE6C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a2;
}

unint64_t sub_10036DE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t result;

  v2 = 0;
  result = 0;
  do
    result ^= (result << 6) + (result >> 2) + 2654435769u + *(unsigned __int8 *)(a2 + v2++);
  while (v2 != 16);
  return result;
}

unint64_t sub_10036DEAC(uint64_t a1, uint64_t a2)
{
  char v3;

  return sub_10025A024((uint64_t)&v3, a2);
}

uint64_t sub_10036DECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  uint64_t result;
  BOOL v9;
  char v10;
  char *v11;

  v4 = *(unsigned int *)(a1 + 24);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = v5 == v4;
  v9 = v5 == -1;
  v7 = v5 == -1;
  if (v9)
    v6 = 0;
  if ((_DWORD)v4 == -1)
    result = v7;
  else
    result = v6;
  v9 = (_DWORD)v4 == -1 || !v6;
  if (!v9)
  {
    v11 = &v10;
    return ((uint64_t (*)(char **, uint64_t))*(&off_1021312E8 + v4))(&v11, a1);
  }
  return result;
}

BOOL sub_10036DF34(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  return *a2 == *a3;
}

BOOL sub_10036DF48(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  return *a2 == *a3 && a2[1] == a3[1];
}

uint64_t sub_10036DF60(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  char v4;

  return sub_10025A4CC((uint64_t)&v4, a2, a3);
}

void sub_10036DF80(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_100271404((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

uint64_t *sub_10036DFC4(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t **v7;
  uint64_t *v9[3];
  uint64_t v10;

  v5 = (uint64_t **)sub_10036E054((uint64_t)a1, &v10, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = v5;
    sub_10036E0E4((uint64_t)a1, a3, (uint64_t)v9);
    sub_1000145B0(a1, v10, v7, v9[0]);
    v6 = v9[0];
    v9[0] = 0;
    sub_100271AF0((uint64_t)v9, 0);
  }
  return v6;
}

_QWORD *sub_10036E054(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = (uint64_t)(v4 + 4);
        if (!sub_10036E14C(a3, (uint64_t)(v4 + 4)))
          break;
        v4 = (_QWORD *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (!sub_10036E14C(v8, a3))
        break;
      v5 = v7 + 1;
      v4 = (_QWORD *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

uint64_t sub_10036E0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6;
  uint64_t result;

  v5 = a1 + 8;
  v6 = operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_1002719DC((uint64_t)v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10036E134(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100271AF0(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_10036E14C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  char v5;
  char *v6;

  v2 = *(_DWORD *)(a2 + 24);
  if (v2 == -1)
    return 0;
  v3 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v3 == -1 || v3 < v2)
    return 1;
  if (v3 > v2)
    return 0;
  v6 = &v5;
  return ((uint64_t (*)(char **, uint64_t, uint64_t))*(&off_102131300 + v3))(&v6, a1, a2);
}

BOOL sub_10036E1C0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  return *a2 < *a3;
}

uint64_t sub_10036E1D4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;

  v3 = bswap64(*a2);
  v4 = bswap64(*a3);
  if (v3 == v4 && (v3 = bswap64(a2[1]), v4 = bswap64(a3[1]), v3 == v4))
  {
    v5 = 0;
  }
  else if (v3 < v4)
  {
    v5 = -1;
  }
  else
  {
    v5 = 1;
  }
  return v5 >> 31;
}

BOOL sub_10036E220(uint64_t a1, const void **a2, const void **a3)
{
  char v4;

  return sub_100279008((uint64_t)&v4, a2, a3);
}

double sub_10036E240(uint64_t a1, uint64_t a2)
{
  double result;

  *(_DWORD *)a1 = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = a2;
  return result;
}

uint64_t sub_10036E258(uint64_t a1)
{
  void **v3;

  sub_10036E2A0(a1);
  v3 = (void **)(a1 + 16);
  sub_1002B2904(&v3);
  sub_10036E554((uint64_t *)(a1 + 8), 0);
  return a1;
}

uint64_t sub_10036E2A0(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  void **v6;

  v4 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0;
  v5 = v2;
  v6 = (void **)&v4;
  sub_1002B2904(&v6);
  *(_DWORD *)a1 = 0;
  return sub_10036E554((uint64_t *)(a1 + 8), 0);
}

void sub_10036E2FC(uint64_t a1, uint64_t a2)
{
  int v3;
  _DWORD v4[2];

  v3 = 0;
  sub_1000B0C3C(&v3);
  sub_1000B0D38((ssize_t)&v3);
  j__CFAbsoluteTimeGetCurrent();
  v4[0] = *(_DWORD *)(a2 + 16);
  *(_DWORD *)((char *)v4 + 3) = *(_DWORD *)(a2 + 19);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  sub_1000B0D18((unsigned int *)&v3);
  operator new();
}

void sub_10036E4EC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  operator delete();
}

uint64_t sub_10036E554(uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10036F128(result);
    operator delete();
  }
  return result;
}

uint64_t *sub_10036E590(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *result;

  result = *(uint64_t **)(a1 + 8);
  if (result)
    return (uint64_t *)sub_10036E5A0(result, a2, a3);
  return result;
}

uint64_t **sub_10036E5A0(uint64_t *a1, unint64_t *a2, uint64_t a3)
{
  __int128 *v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  NSObject *v11;
  const char *v13;
  uint8_t *v14;
  uint8_t buf[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[56];
  int v20;
  const void *v21;
  uint64_t v22;
  char v23;
  int v24[4];
  uint64_t *v25;
  __int128 v26;
  uint64_t v27;
  _BYTE v28[40];
  _BYTE v29[32];
  char v30;
  __int128 v31;
  int v32;
  void *__p;
  void *v34;
  uint64_t v35;
  __int128 v36;
  char v37;

  v4 = (__int128 *)a1[11];
  if ((__int128 *)a1[12] == v4)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v11 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Error - recording transaction does not have any valid recording events", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      LOWORD(v24[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Error - recording transaction does not have any valid recording events", v24, 2);
      v14 = (uint8_t *)v13;
      sub_100512490("Generic", 1, 0, 0, "void CLMicroLocationRecorder::RecordingTransaction::updateFingerprintMetaInfoOfCurrentRecording(const CLMicroLocationFingerprintConfiguration &, CLMicroLocationRecordingCompletionMetaInformation::RecordingMetaInformation &)", "%s\n", v13);
      if (v14 != buf)
        free(v14);
    }
    *(_DWORD *)(a3 + 48) = 1;
    *(_DWORD *)buf = 1;
    return sub_1000C6190((uint64_t **)(a3 + 24), (int *)buf, buf);
  }
  else
  {
    sub_1002DF194(v24);
    v30 = 1;
    v36 = *v4;
    v37 = 1;
    sub_100391278(a1 + 8, (uint64_t)v24, (uint64_t)&v36, a2, buf);
    if (v30)
      sub_1002DF2E0(v24);
    if (v23)
    {
      sub_100271670((uint64_t)v24, (uint64_t)buf);
      v26 = v16;
      v27 = v17;
      sub_100271B34((uint64_t)v28, (uint64_t)&v18);
      sub_100271DC4((uint64_t)v29, (uint64_t)v19);
      v31 = *(_OWORD *)&v19[40];
      v32 = v20;
      v35 = 0;
      __p = 0;
      v34 = 0;
      sub_10027205C(&__p, v21, v22, (v22 - (uint64_t)v21) >> 2);
      v7 = v25;
      if (v25)
      {
        v8 = 0;
        v9 = v25;
        do
        {
          if (*((_DWORD *)v9 + 6) == 1)
            ++v8;
          v9 = (uint64_t *)*v9;
        }
        while (v9);
        v10 = v25;
        do
        {
          if (*((_DWORD *)v10 + 6) == 5)
            v9 = (uint64_t *)((char *)v9 + 1);
          v10 = (uint64_t *)*v10;
        }
        while (v10);
        do
        {
          if (*((_DWORD *)v7 + 6) == 6)
            v10 = (uint64_t *)((char *)v10 + 1);
          v7 = (uint64_t *)*v7;
        }
        while (v7);
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = 0;
      }
      *(_QWORD *)a3 = v8;
      *(_QWORD *)(a3 + 8) = v9;
      *(_QWORD *)(a3 + 16) = v10;
      *(_DWORD *)(a3 + 48) = 0;
      if (__p)
      {
        v34 = __p;
        operator delete(__p);
      }
      sub_100067AC4((uint64_t)v29);
      sub_100067AC4((uint64_t)v28);
      sub_100271390((uint64_t)v24);
    }
    else
    {
      *(_DWORD *)(a3 + 48) = 1;
      v24[0] = 1;
      sub_1000C6190((uint64_t **)(a3 + 24), v24, v24);
    }
    return (uint64_t **)sub_1002967B0((uint64_t)buf);
  }
}

void sub_10036E8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1002967B0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036E958(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(v1 + 88);
  for (i = *(_QWORD *)(v1 + 96); v2 != i; v2 += 240)
  {
    *(_DWORD *)(v2 + 208) |= 0x2000u;
    *(_BYTE *)(v2 + 157) = 1;
  }
  return result;
}

uint64_t sub_10036E98C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(v1 + 88);
  for (i = *(_QWORD *)(v1 + 96); v2 != i; v2 += 240)
  {
    *(_DWORD *)(v2 + 208) |= 0x800u;
    *(_BYTE *)(v2 + 156) = 1;
  }
  return result;
}

uint64_t sub_10036E9C0(uint64_t a1, unsigned int a2, int **a3)
{
  int *v6;
  int *v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE *p_p;
  const char *v13;
  NSObject *v14;
  uint64_t v15;
  void *__p;
  uint64_t v18;
  unsigned __int8 v19;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD v22[10];
  char v23;
  uint64_t v24;
  uint8_t buf[8];
  _BYTE v26[10];
  __int16 v27;
  signed int v28;
  __int16 v29;
  const char *v30;

  sub_100263E50((uint64_t)v20);
  v6 = *a3;
  v7 = a3[1];
  if (*a3 != v7)
  {
    do
    {
      sub_1002EC830(*v6, buf);
      if (v28 >= 0)
        v8 = buf;
      else
        v8 = *(uint8_t **)buf;
      if (v28 >= 0)
        v9 = HIBYTE(v28);
      else
        v9 = *(_QWORD *)v26;
      v10 = sub_100263F7C(&v21, (uint64_t)v8, v9);
      sub_100263F7C(v10, (uint64_t)" ", 1);
      if (SHIBYTE(v28) < 0)
        operator delete(*(void **)buf);
      ++v6;
    }
    while (v6 != v7);
  }
  std::stringbuf::str(&__p, v22);
  if (((char)v19 & 0x80000000) == 0)
  {
    if (v19)
    {
      v11 = --v19;
      p_p = &__p;
      goto LABEL_16;
    }
LABEL_19:
    v13 = "";
    goto LABEL_20;
  }
  if (!v18)
    goto LABEL_19;
  v11 = v18 - 1;
  p_p = __p;
  --v18;
LABEL_16:
  p_p[v11] = 0;
  if ((v19 & 0x80u) == 0)
    v13 = (const char *)&__p;
  else
    v13 = (const char *)__p;
LABEL_20:
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131318);
  v14 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 68289538;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v26 = 2082;
    *(_QWORD *)&v26[2] = "";
    v27 = 1026;
    v28 = a2;
    v29 = 2082;
    v30 = v13;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"recorder setting confidence and reasons\", \"confidence level\":%{public}d, \"confidence reasons\":%{public, location:escape_only}s}", buf, 0x22u);
  }
  sub_10036EC88(*(_QWORD *)(a1 + 8), a2, (uint64_t)a3);
  if ((char)v19 < 0)
    operator delete(__p);
  *(_QWORD *)((char *)v20
  v21 = v15;
  if (v23 < 0)
    operator delete((void *)v22[8]);
  std::streambuf::~streambuf(v22);
  return std::ios::~ios(&v24);
}

void sub_10036EC3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_1018B38B4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_10036EC88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  void *v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int v18;
  void *__p;
  void *v20;
  uint64_t v21;
  unsigned int v22;
  void *v23;
  _BYTE *v24;
  uint64_t v25;

  v22 = a2;
  v24 = 0;
  v25 = 0;
  v23 = 0;
  sub_10027205C(&v23, *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 2);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v14 = v22;
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_10027205C(&v15, v23, (uint64_t)v24, (v24 - (_BYTE *)v23) >> 2);
  if (v4 != v5)
  {
    v6 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    v7 = "set_confidencelevel";
    while (sub_1002BC674(v14))
    {
      *(_DWORD *)(v4 + 208) |= 0x4000u;
      *(_DWORD *)(v4 + 200) = v14;
      *(_DWORD *)(v4 + 192) = 0;
      v8 = (unsigned int *)v15;
      v9 = v16;
      if (v15 != v16)
      {
        while (1)
        {
          v10 = *v8;
          if (!sub_1002BC68C(*v8))
            break;
          v11 = *(_DWORD *)(v4 + 192);
          if (v11 == *(_DWORD *)(v4 + 196))
          {
            sub_1002A19E0(v4 + 184, v11 + 1);
            v11 = *(_DWORD *)(v4 + 192);
          }
          v12 = *(_QWORD *)(v4 + 184);
          *(_DWORD *)(v4 + 192) = v11 + 1;
          *(_DWORD *)(v12 + 4 * v11) = v10;
          if (++v8 == v9)
            goto LABEL_9;
        }
        v13 = 20332;
        v7 = "add_confidencereasons";
        v6 = "::CLMicroLocationProto::ConfidenceReason_IsValid(value)";
LABEL_18:
        __assert_rtn(v7, "microlocation.pb.h", v13, v6);
      }
LABEL_9:
      v4 += 240;
      if (v4 == v5)
        goto LABEL_10;
    }
    v13 = 20312;
    goto LABEL_18;
  }
LABEL_10:
  v18 = v14;
  v20 = 0;
  v21 = 0;
  __p = 0;
  sub_10027205C(&__p, v15, (uint64_t)v16, ((char *)v16 - (_BYTE *)v15) >> 2);
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    v16 = (unsigned int *)v15;
    operator delete(v15);
  }
  if (v23)
  {
    v24 = v23;
    operator delete(v23);
  }
}

void sub_10036EE50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036EE8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (sub_1000CC4F4(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 240);
    if (!v2)
      operator new();
    v3 = sub_100265E6C(v2);
    sub_100371BB8(a1);
    return v3;
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Can't insert because the database is invalid", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationRecordingLabelsTable::Entry]", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    return 0;
  }
}

void sub_10036F0BC()
{
  operator delete();
}

uint64_t sub_10036F0E8(uint64_t a1, uint64_t a2)
{
  int v4;

  *(CFAbsoluteTime *)a1 = j__CFAbsoluteTimeGetCurrent();
  *(_QWORD *)(a1 + 8) = mach_continuous_time();
  if ((a2 & 0xFF00000000) != 0)
    v4 = a2;
  else
    v4 = 0;
  *(_DWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t sub_10036F128(uint64_t a1)
{
  CLOSTransaction *v2;
  NSObject *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  __int16 v9;
  const char *v10;
  __int16 v11;
  char *v12;
  __int16 v13;
  unint64_t v14;
  __int16 v15;
  unint64_t v16;

  v2 = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "com.apple.locationd.microlocation-recording-transaction-commit");
  if (qword_1022A0100 != -1)
    dispatch_once(&qword_1022A0100, &stru_102131338);
  v3 = qword_1022A0108;
  if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (char *)operator new(0x28uLL);
    *(_QWORD *)(v4 + 29) = 0;
    *(_OWORD *)v4 = 0u;
    *((_OWORD *)v4 + 1) = 0u;
    sub_100261F9C(a1, v4);
    v5 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(_QWORD *)(a1 + 96) - *(_QWORD *)(a1 + 88)) >> 4);
    v6 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(_QWORD *)(a1 + 72) - *(_QWORD *)(a1 + 64)) >> 3);
    v8 = 68289794;
    v9 = 2082;
    v10 = "";
    v11 = 2082;
    v12 = v4;
    v13 = 2050;
    v14 = v5;
    v15 = 2050;
    v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: commiting recording transaction\", \"Recording UUID\":%{public, location:escape_only}s, \"Num records\":%{public}lu, \"Num measurements\":%{public}lu}", (uint8_t *)&v8, 0x30u);
    operator delete(v4);
  }
  sub_10036F334(*(_QWORD *)(a1 + 136));
  sub_10036F590(*(_QWORD *)(a1 + 136));
  sub_10036EE8C(*(_QWORD *)(a1 + 136));

  v8 = a1 + 112;
  sub_1002699DC((void ***)&v8);
  v8 = a1 + 88;
  sub_100270C6C((void ***)&v8);
  v8 = a1 + 64;
  sub_100296984((void ***)&v8);
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  return a1;
}

void sub_10036F308(_Unwind_Exception *exception_object, int a2)
{
  void *v2;

  if (a2)
  {
    operator delete(v2);
    sub_10024F88C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036F334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (sub_1000CC4F4(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 232);
    if (!v2)
      operator new();
    v3 = sub_100399490(v2);
    sub_100371E88(a1);
    return v3;
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Can't insert because the database is invalid", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationRecordingEventsTable::Entry]", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    return 0;
  }
}

void sub_10036F564()
{
  operator delete();
}

uint64_t sub_10036F590(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (sub_1000CC4F4(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 216);
    if (!v2)
      operator new();
    v3 = sub_100321234(v2);
    sub_100372158(a1);
    return v3;
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Can't insert because the database is invalid", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationMeasurementTable::Entry]", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    return 0;
  }
}

void sub_10036F7C0()
{
  operator delete();
}

uint64_t sub_10036F7EC(uint64_t result, double *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  unsigned int v10;

  v3 = *a3;
  v4 = a3[1];
  if (*a3 != v4)
  {
    v6 = (uint64_t *)result;
    v7 = (uint64_t *)(result + 64);
    v8 = (uint64_t *)(a2 + 1);
    v9 = *(_QWORD *)(result + 72);
    do
    {
      v10 = *(_DWORD *)(v3 + 80);
      if (v9 >= v6[10])
      {
        result = sub_100372480(v7, v6, a2, v8, v3, &v10);
        v9 = result;
      }
      else
      {
        result = sub_10037242C((uint64_t)v7, v6, a2, v8, v3, &v10);
        v9 += 120;
      }
      v6[9] = v9;
      v3 += 88;
    }
    while (v3 != v4);
  }
  return result;
}

void sub_10036F894(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  _OWORD *v9;
  void *v10;
  _OWORD *v11;
  void *p_p;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *__p;
  __int128 v19;
  void *v20;
  __int128 v21;
  std::string v22;
  _BYTE buf[18];
  __int16 v24;
  void *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  char *v29;
  __int128 v30;
  char v31;
  __int128 v32;
  char v33;

  LOBYTE(v32) = 0;
  v33 = 0;
  memset(&v22, 0, sizeof(v22));
  LOBYTE(v30) = 0;
  v31 = 0;
  v4 = *(_DWORD *)(a2 + 72);
  if (v4 != 1)
  {
    if (v4 != 13 || (*(_BYTE *)(a2 + 129) & 4) == 0)
      goto LABEL_27;
    v5 = *(_QWORD *)(a2 + 88);
    if (!v5)
      v5 = *(_QWORD *)(qword_102310400 + 88);
    if ((*(_BYTE *)(v5 + 44) & 8) == 0)
      goto LABEL_27;
    sub_10035777C(*(uint64_t ***)(v5 + 24), buf);
    v32 = *(_OWORD *)buf;
    v33 = buf[16];
    v6 = *(_QWORD *)(a2 + 88);
    if (v6)
    {
      if ((*(_BYTE *)(v6 + 44) & 4) == 0)
      {
LABEL_20:
        if ((*(_BYTE *)(v6 + 44) & 0x10) != 0)
          goto LABEL_26;
        goto LABEL_27;
      }
    }
    else
    {
      v6 = *(_QWORD *)(qword_102310400 + 88);
      if ((*(_BYTE *)(v6 + 44) & 4) == 0)
      {
LABEL_19:
        v6 = *(_QWORD *)(qword_102310400 + 88);
        goto LABEL_20;
      }
    }
    std::string::operator=(&v22, *(const std::string **)(v6 + 16));
    v6 = *(_QWORD *)(a2 + 88);
    if (v6)
      goto LABEL_20;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a2 + 128) & 4) == 0)
    goto LABEL_27;
  v7 = *(_QWORD *)(a2 + 16);
  if (!v7)
    v7 = *(_QWORD *)(qword_102310400 + 16);
  if ((*(_BYTE *)(v7 + 44) & 8) == 0)
    goto LABEL_27;
  sub_10035777C(*(uint64_t ***)(v7 + 24), buf);
  v32 = *(_OWORD *)buf;
  v33 = buf[16];
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    v6 = *(_QWORD *)(qword_102310400 + 16);
    if ((*(_BYTE *)(v6 + 44) & 4) == 0)
    {
LABEL_24:
      v6 = *(_QWORD *)(qword_102310400 + 16);
      goto LABEL_25;
    }
LABEL_23:
    std::string::operator=(&v22, *(const std::string **)(v6 + 16));
    v6 = *(_QWORD *)(a2 + 16);
    if (v6)
      goto LABEL_25;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(v6 + 44) & 4) != 0)
    goto LABEL_23;
LABEL_25:
  if ((*(_BYTE *)(v6 + 44) & 0x10) != 0)
  {
LABEL_26:
    sub_10035777C(*(uint64_t ***)(v6 + 32), buf);
    v30 = *(_OWORD *)buf;
    v31 = buf[16];
  }
LABEL_27:
  if (v31 && v33)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v8 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = operator new(0x28uLL);
      v20 = v9;
      v21 = xmmword_101B97FF0;
      *v9 = 0u;
      v9[1] = 0u;
      *(_QWORD *)((char *)v9 + 29) = 0;
      sub_100261F9C(a1, v9);
      if (v21 >= 0)
        v10 = &v20;
      else
        v10 = v20;
      if (!v33)
        sub_10028DF3C();
      v11 = operator new(0x28uLL);
      __p = v11;
      v19 = xmmword_101B97FF0;
      *v11 = 0u;
      v11[1] = 0u;
      *(_QWORD *)((char *)v11 + 29) = 0;
      sub_100261F9C((uint64_t)&v32, v11);
      if (v19 >= 0)
        p_p = &__p;
      else
        p_p = __p;
      if (!v31)
        sub_10028DF3C();
      v13 = (char *)operator new(0x28uLL);
      *(_QWORD *)(v13 + 29) = 0;
      *(_OWORD *)v13 = 0u;
      *((_OWORD *)v13 + 1) = 0u;
      sub_100261F9C((uint64_t)&v30, v13);
      *(_DWORD *)buf = 68289794;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      v24 = 2082;
      v25 = v10;
      v26 = 2082;
      v27 = p_p;
      v28 = 2082;
      v29 = v13;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: adding label for recording event\", \"Recording UUID\":%{public, location:escape_only}s, \"Trigger UUID\":%{public, location:escape_only}s, \"Label UUID\":%{public, location:escape_only}s}", buf, 0x30u);
      operator delete(v13);
      if (SHIBYTE(v19) < 0)
        operator delete(__p);
      if (SHIBYTE(v21) < 0)
        operator delete(v20);
    }
    *(_QWORD *)buf = *(_QWORD *)(a2 + 8);
    v14 = *(_QWORD *)(a1 + 120);
    if (v14 >= *(_QWORD *)(a1 + 128))
    {
      v15 = sub_1003719F4((uint64_t *)(a1 + 112), (uint64_t *)&v32, (uint64_t)&v22, (uint64_t *)&v30, (double *)buf);
    }
    else
    {
      sub_100371B08(a1 + 128, *(_QWORD *)(a1 + 120), (uint64_t *)&v32, (uint64_t)&v22, (uint64_t *)&v30, (double *)buf);
      v15 = v14 + 64;
      *(_QWORD *)(a1 + 120) = v14 + 64;
    }
    *(_QWORD *)(a1 + 120) = v15;
  }
  v16 = *(_QWORD *)(a1 + 96);
  if (v16 >= *(_QWORD *)(a1 + 104))
  {
    v17 = sub_1003725B8((uint64_t *)(a1 + 88), (uint64_t *)a1, (double *)(a1 + 16), a1 + 24, a2, (uint64_t)&v32, (uint64_t *)(a1 + 48));
  }
  else
  {
    sub_100372704(a1 + 104, *(_QWORD *)(a1 + 96), (uint64_t *)a1, (double *)(a1 + 16), a1 + 24, a2, (uint64_t)&v32, (uint64_t *)(a1 + 48));
    v17 = v16 + 240;
    *(_QWORD *)(a1 + 96) = v16 + 240;
  }
  *(_QWORD *)(a1 + 96) = v17;
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
}

void sub_10036FD10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036FDB4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, double a5)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  double v10;

  v10 = a5;
  v7 = a1[16];
  v6 = (uint64_t)(a1 + 16);
  v8 = *(_QWORD *)(v6 - 8);
  if (v8 >= v7)
  {
    result = sub_100372810(a1 + 14, a2, a3, a4, &v10);
  }
  else
  {
    sub_100372924(v6, *(_QWORD *)(v6 - 8), a2, a3, a4, &v10);
    result = v8 + 64;
    a1[15] = v8 + 64;
  }
  a1[15] = result;
  return result;
}

void sub_10036FE30(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 120) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10036FE38(uint64_t a1, __int128 *a2, uint64_t *a3)
{
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    sub_1018F7560();
  v5 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  return sub_10036F7EC(v3, (double *)&v5, a3);
}

void sub_10036FE74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int64x2_t v6;
  uint64_t v7;
  int64x2_t v8;
  uint64_t v9;
  int64x2_t *v10;

  v3 = a1[1];
  if (!v3)
    sub_1018F76DC();
  sub_10036F894(v3, a2);
  v4 = a1[2];
  v5 = a1[3];
  if (v4 == v5)
  {
    v6 = vdupq_n_s64(v4);
  }
  else
  {
    do
    {
      sub_10036F894(a1[1], v4);
      v4 += 136;
    }
    while (v4 != v5);
    v6 = *((int64x2_t *)a1 + 1);
  }
  v8 = v6;
  a1[2] = 0;
  a1[3] = 0;
  v7 = a1[4];
  a1[4] = 0;
  v9 = v7;
  v10 = &v8;
  sub_1002B2904((void ***)&v10);
}

void sub_10036FF00(uint64_t a1)
{
  __int128 v1;
  uint64_t v2;
  void **v3;

  v1 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0;
  v3 = (void **)&v1;
  sub_1002B2904(&v3);
}

void sub_10036FF40(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  if (*(_DWORD *)a1 == 1)
  {
    sub_10036FE74(a1, a2);
  }
  else
  {
    v3 = a1[3];
    if (v3 >= a1[4])
    {
      v4 = sub_1002B2990(a1 + 2);
    }
    else
    {
      sub_1002DF194(a1[3]);
      v4 = v3 + 136;
      a1[3] = v3 + 136;
    }
    a1[3] = v4;
  }
}

void sub_10036FFA4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 24) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10036FFAC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  BOOL v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  double Current;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char *v21;
  uint64_t v22;
  char *v23;
  void *__p[2];
  uint64_t v25;
  char **v26;
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _BYTE buf[32];
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37[2];
  char v38;
  uint64_t v39[2];
  char v40;

  sub_1003577C0(a4, (uint64_t)v39);
  sub_1003577C0(a3, (uint64_t)v37);
  if (v40)
    v7 = v38 == 0;
  else
    v7 = 1;
  if (v7)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v8 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v9 = *(char *)(a2 + 23) >= 0 ? a2 : *(_QWORD *)a2;
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(_QWORD *)&buf[20] = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: received invalid truth label\", \"Client\":%{public, location:escape_only}s}", buf, 0x1Cu);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
    }
    v10 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      if (*(char *)(a2 + 23) >= 0)
        v11 = (void *)a2;
      else
        v11 = *(void **)a2;
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(_QWORD *)&buf[20] = v11;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "CLMicroLocationRecorder: received invalid truth label", "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: received invalid truth label\", \"Client\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    return 0;
  }
  else if (*(_DWORD *)a1 == 1)
  {
    v13 = *(uint64_t **)(a1 + 8);
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_10036FDB4(v13, v37, a2, v39, Current);
    return 1;
  }
  else
  {
    v15 = v37[0];
    v16 = v37[1];
    if (*(char *)(a2 + 23) < 0)
    {
      sub_100115CE4(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)a2;
      v25 = *(_QWORD *)(a2 + 16);
    }
    v17 = v39[0];
    v18 = v39[1];
    v19 = j__CFAbsoluteTimeGetCurrent();
    sub_1002648D4((uint64_t)buf, v15, v16, (__int128 *)__p, v17, v18, v19);
    if (SHIBYTE(v25) < 0)
      operator delete(__p[0]);
    v28 = *(_OWORD *)buf;
    if (SHIBYTE(v34) < 0)
    {
      sub_100115CE4(&v29, *(void **)&buf[16], *(unint64_t *)&buf[24]);
    }
    else
    {
      v29 = *(_OWORD *)&buf[16];
      v30 = v34;
    }
    v31 = v35;
    v32 = v36;
    v22 = 0;
    v23 = 0;
    v21 = 0;
    v26 = &v21;
    v27 = 0;
    v21 = (char *)operator new(0x40uLL);
    v22 = (uint64_t)v21;
    v23 = v21 + 64;
    v22 = sub_1003729D4((uint64_t)&v23, &v28, (__int128 *)buf, (uint64_t)v21);
    v12 = sub_10036EE8C(*(_QWORD *)(a1 + 40));
    v26 = &v21;
    sub_1002699DC((void ***)&v26);
    if (SHIBYTE(v30) < 0)
      operator delete((void *)v29);
    if (SHIBYTE(v34) < 0)
      operator delete(*(void **)&buf[16]);
  }
  return v12;
}

void sub_1003702F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100370364(uint64_t a1, const std::string *a2, _OWORD *a3, __int128 *a4)
{
  uint64_t v8;
  _OWORD *v9;
  NSObject *v10;
  char *v11;
  std::string *p_str;
  NSObject *v13;
  char *v14;
  std::string *v15;
  uint64_t v16;
  double Current;
  uint64_t v18;
  uint64_t v19;
  double v20;
  NSObject *v21;
  char *v22;
  NSObject *v23;
  char *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  char *v29;
  void *__dst[2];
  uint64_t v31;
  _BYTE v32[136];
  _BYTE v33[8];
  std::string *v34;
  std::string *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void **v39;
  char v40;
  std::string __str;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[2];
  _BYTE v45[160];
  __int128 v46;
  char v47;
  _BYTE __p[40];
  uint64_t v49;
  _OWORD v50[2];
  _BYTE v51[168];

  v8 = *(_QWORD *)(a1 + 40);
  v9 = operator new(0x10uLL);
  *(_QWORD *)&__p[16] = v9 + 1;
  *v9 = *a3;
  *(_QWORD *)__p = v9;
  *(_QWORD *)&__p[8] = v9 + 1;
  sub_10027E6C8(v8, (uint64_t)__p, &v37);
  if (*(_QWORD *)__p)
  {
    *(_QWORD *)&__p[8] = *(_QWORD *)__p;
    operator delete(*(void **)__p);
  }
  if (v37 == v38)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v21 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v22 = (char *)operator new(0x28uLL);
      *(_QWORD *)(v22 + 29) = 0;
      *(_OWORD *)v22 = 0u;
      *((_OWORD *)v22 + 1) = 0u;
      sub_100261F9C((uint64_t)a3, v22);
      *(_QWORD *)__p = 68289282;
      *(_WORD *)&__p[8] = 2082;
      *(_QWORD *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2082;
      *(_QWORD *)&__p[20] = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Did not find matching entry for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s}", __p, 0x1Cu);
      operator delete(v22);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
    }
    v23 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      v24 = (char *)operator new(0x28uLL);
      *(_QWORD *)(v24 + 29) = 0;
      *(_OWORD *)v24 = 0u;
      *((_OWORD *)v24 + 1) = 0u;
      sub_100261F9C((uint64_t)a3, v24);
      *(_QWORD *)__p = 68289282;
      *(_WORD *)&__p[8] = 2082;
      *(_QWORD *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2082;
      *(_QWORD *)&__p[20] = v24;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v23, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Did not find matching entry for cached trigger UUID", "{\"msg%{public}.0s\":\"Did not find matching entry for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s}", __p, 0x1Cu);
      operator delete(v24);
    }
    v25 = 0;
  }
  else
  {
    if (0xEEEEEEEEEEEEEEEFLL * ((v38 - v37) >> 4) >= 2)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      v10 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        v11 = (char *)operator new(0x28uLL);
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
        *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = xmmword_101B97FF0;
        *(_OWORD *)v11 = 0u;
        *((_OWORD *)v11 + 1) = 0u;
        *(_QWORD *)(v11 + 29) = 0;
        sub_100261F9C((uint64_t)a3, v11);
        p_str = &__str;
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
        *(_QWORD *)__p = 68289538;
        *(_WORD *)&__p[8] = 2082;
        *(_QWORD *)&__p[10] = "";
        *(_WORD *)&__p[18] = 2082;
        *(_QWORD *)&__p[20] = p_str;
        *(_WORD *)&__p[28] = 2050;
        *(_QWORD *)&__p[30] = 0xEEEEEEEEEEEEEEEFLL * ((v38 - v37) >> 4);
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Found too many matching entries for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s, \"Number of matches\":%{public}lu}", __p, 0x26u);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131318);
      }
      v13 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        v14 = (char *)operator new(0x28uLL);
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
        *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = xmmword_101B97FF0;
        *(_OWORD *)v14 = 0u;
        *((_OWORD *)v14 + 1) = 0u;
        *(_QWORD *)(v14 + 29) = 0;
        sub_100261F9C((uint64_t)a3, v14);
        v15 = &__str;
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v15 = (std::string *)__str.__r_.__value_.__r.__words[0];
        *(_QWORD *)__p = 68289538;
        *(_WORD *)&__p[8] = 2082;
        *(_QWORD *)&__p[10] = "";
        *(_WORD *)&__p[18] = 2082;
        *(_QWORD *)&__p[20] = v15;
        *(_WORD *)&__p[28] = 2050;
        *(_QWORD *)&__p[30] = 0xEEEEEEEEEEEEEEEFLL * ((v38 - v37) >> 4);
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Found too many matching entries for cached trigger UUID", "{\"msg%{public}.0s\":\"Found too many matching entries for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s, \"Number of matches\":%{public}lu}", __p, 0x26u);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
      }
    }
    v16 = v37;
    sub_1002BBBBC((uint64_t)v33);
    v36 |= 2u;
    if (v34 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v34, a2);
    memset(&__str, 0, sizeof(__str));
    if ((sub_10026A098((uint64_t)a4, &__str) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)__p);
      *(_QWORD *)__p = &off_10212A508;
      sub_10026A9C8((uint64_t)__p);
    }
    v36 |= 4u;
    if (v35 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v35, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_100370C04((uint64_t)v33, 0, 0, 3u, (uint64_t)v32, Current);
    v18 = *(_QWORD *)v16;
    v19 = *(_QWORD *)(v16 + 8);
    v20 = *(double *)(v16 + 16);
    if (*(char *)(v16 + 47) < 0)
    {
      sub_100115CE4(__dst, *(void **)(v16 + 24), *(_QWORD *)(v16 + 32));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)(v16 + 24);
      v31 = *(_QWORD *)(v16 + 40);
    }
    v46 = *a4;
    v47 = 1;
    sub_100398EEC((uint64_t)__p, v18, v19, (__int128 *)__dst, (uint64_t)v32, &v46, *(_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 56), v20);
    if (SHIBYTE(v31) < 0)
      operator delete(__dst[0]);
    __str = *(std::string *)__p;
    if (SHIBYTE(v49) < 0)
    {
      sub_100115CE4(&v42, *(void **)&__p[24], *(unint64_t *)&__p[32]);
    }
    else
    {
      v42 = *(_OWORD *)&__p[24];
      v43 = v49;
    }
    v44[0] = v50[0];
    *(_OWORD *)((char *)v44 + 12) = *(_OWORD *)((char *)v50 + 12);
    sub_1002DF194(v45);
    *(_OWORD *)&v45[136] = *(_OWORD *)&v51[136];
    v45[152] = v51[152];
    v28 = 0;
    v29 = 0;
    v27 = 0;
    v39 = (void **)&v27;
    v40 = 0;
    v27 = (char *)operator new(0xF0uLL);
    v28 = (uint64_t)v27;
    v29 = v27 + 240;
    v28 = sub_1002B9A90((uint64_t)&v29, (__int128 *)&__str, &v46, (uint64_t)v27);
    sub_1002DF2E0(v45);
    if (SHIBYTE(v43) < 0)
      operator delete((void *)v42);
    v25 = sub_10036F334(*(_QWORD *)(a1 + 40));
    __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v27;
    sub_100270C6C((void ***)&__str);
    sub_1002DF2E0(v51);
    if (SHIBYTE(v49) < 0)
      operator delete(*(void **)&__p[24]);
    sub_1002DF2E0(v32);
    sub_1002CCF00((wireless_diagnostics::google::protobuf::MessageLite *)v33);
  }
  *(_QWORD *)__p = &v37;
  sub_100270C6C((void ***)__p);
  return v25;
}

void sub_100370AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  void *v40;

  operator delete(v40);
  STACK[0x230] = (unint64_t)&a40;
  sub_100270C6C((void ***)&STACK[0x230]);
  _Unwind_Resume(a1);
}

void sub_100370C04(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  unsigned int v12;
  int v13;
  const char *v14;
  int v15;
  const char *v16;

  sub_1002BBFAC(a5);
  v12 = *(_DWORD *)(a1 + 32);
  if (!sub_1002BC6A4(v12))
  {
    v14 = "::CLMicroLocationProto::EventType_IsValid(value)";
    v15 = 19803;
    v16 = "set_eventtype";
    goto LABEL_6;
  }
  v13 = *(_DWORD *)(a5 + 128);
  *(_DWORD *)(a5 + 72) = v12;
  *(double *)(a5 + 8) = a6;
  *(_BYTE *)(a5 + 77) = a2;
  *(_DWORD *)(a5 + 128) = v13 | 0x2803;
  *(_BYTE *)(a5 + 76) = a3;
  if ((sub_1002BC674(a4) & 1) == 0)
  {
    v14 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    v15 = 20312;
    v16 = "set_confidencelevel";
LABEL_6:
    __assert_rtn(v16, "microlocation.pb.h", v15, v14);
  }
  *(_DWORD *)(a5 + 128) |= 0x4000u;
  *(_DWORD *)(a5 + 120) = a4;
  sub_1003587EC(a5, a1);
}

void sub_100370CE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1002DF2E0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100370CFC(uint64_t a1, const std::string *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  NSObject *v11;
  uint64_t v12;
  double v13;
  double v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *i;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  double Current;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  _BOOL4 v34;
  const char *v36;
  char *v37;
  const char *v38;
  char *v39;
  _DWORD *v40;
  char v42[8];
  std::string *v43;
  std::string *v44;
  std::string *v45;
  int v46;
  std::string __str;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  __int128 *v51;
  unint64_t v52;
  unint64_t v53;
  std::string::value_type *__s;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  _DWORD *v58;
  std::string v59;
  std::string v60;
  __int128 v61;
  char v62;
  std::bad_cast v63;
  _UNKNOWN **v64;
  _UNKNOWN **v65;
  __int128 v66;
  _BYTE buf[40];
  uint64_t v68;
  _BYTE v69[28];
  _BYTE v70[1560];

  if (objc_msgSend(a4, "compare:", a5) == (id)1)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v11 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "recordTruthLabelBetweenDates, startDate is later than endDate", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      LOWORD(v63.__vftable) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "recordTruthLabelBetweenDates, startDate is later than endDate", &v63, 2);
      v37 = (char *)v36;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationRecorder::recordTruthLabelBetweenDates(const std::string &, NSUUID *const, NSDate *const, NSDate *const, const std::string &)", "%s\n", v36);
      if (v37 != buf)
        free(v37);
    }
    return 0;
  }
  else
  {
    objc_msgSend(a4, "timeIntervalSinceReferenceDate");
    std::to_string(&v60, v13);
    objc_msgSend(a5, "timeIntervalSinceReferenceDate");
    std::to_string(&v59, v14);
    sub_1003200B4(1u, (char **)&v57);
    v15 = v57;
    v16 = v58;
    if (v57 == v58)
      goto LABEL_47;
    v17 = v57;
    while (*v17 != 14)
    {
      if (++v17 == v58)
        goto LABEL_21;
    }
    if (v17 != v58)
    {
      for (i = v17 + 1; i != v16; ++i)
      {
        if (*i != 14)
          *v17++ = *i;
      }
    }
    if (v17 != v16)
    {
      v16 = v17;
      v58 = v17;
    }
LABEL_21:
    if (v15 == v16)
    {
LABEL_47:
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      v32 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&buf[4] = 1;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#Warning No recording events for model type %{public}d", buf, 8u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131318);
        v63.__vftable = (std::bad_cast_vtbl *)0x104020100;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning No recording events for model type %{public}d", &v63, 8);
        v39 = (char *)v38;
        sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationRecorder::recordTruthLabelBetweenDates(const std::string &, NSUUID *const, NSDate *const, NSDate *const, const std::string &)", "%s\n", v38);
        if (v39 != buf)
          free(v39);
      }
      v12 = 0;
    }
    else
    {
      sub_100281828(*(_QWORD *)(a1 + 40), (uint64_t)&v57, (uint64_t)&v60, (uint64_t)&v59, &v55);
      v53 = 0;
      __s = (std::string::value_type *)objc_msgSend(objc_msgSend(a3, "UUIDString"), "UTF8String");
      v51 = 0;
      v52 = 0;
      sub_100371750((uint64_t *)&v51, 0xEEEEEEEEEEEEEEEFLL * ((v56 - v55) >> 4));
      v40 = (_DWORD *)a1;
      v48 = 0;
      v49 = 0;
      v50 = 0;
      sub_100371800(&v48, 0xEEEEEEEEEEEEEEEFLL * ((v56 - v55) >> 4));
      v19 = v56;
      if (v55 != v56)
      {
        v20 = v55 + 80;
        do
        {
          v21 = *(_OWORD *)(v20 - 80);
          *(_QWORD *)&buf[16] = *(_QWORD *)(v20 - 64);
          *(_OWORD *)buf = v21;
          if (*(char *)(v20 - 33) < 0)
          {
            sub_100115CE4(&buf[24], *(void **)(v20 - 56), *(_QWORD *)(v20 - 48));
          }
          else
          {
            v22 = *(_OWORD *)(v20 - 56);
            v68 = *(_QWORD *)(v20 - 40);
            *(_OWORD *)&buf[24] = v22;
          }
          v23 = v20 - 80;
          v24 = *(_OWORD *)(v20 - 32);
          *(_OWORD *)&v69[12] = *(_OWORD *)(v20 - 20);
          *(_OWORD *)v69 = v24;
          sub_1002DF194(v70);
          v25 = *(_OWORD *)(v20 + 136);
          v70[152] = *(_BYTE *)(v20 + 152);
          *(_OWORD *)&v70[136] = v25;
          v66 = 0uLL;
          LODWORD(v63.__vftable) = 0;
          sub_1000B0C3C((int *)&v63);
          *(_QWORD *)&v66 = sub_1000B0D38((ssize_t)&v63);
          *((_QWORD *)&v66 + 1) = v26;
          sub_1000B0D18((unsigned int *)&v63);
          memset(&__str, 0, sizeof(__str));
          if ((sub_10026A098((uint64_t)&v66, &__str) & 1) == 0)
          {
            std::bad_cast::bad_cast(&v63);
            v63.__vftable = (std::bad_cast_vtbl *)&off_10212A508;
            sub_10026A9C8((uint64_t)&v63);
          }
          sub_1002BBBBC((uint64_t)v42);
          v46 |= 2u;
          if (v43 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
            operator new();
          std::string::operator=(v43, a2);
          v46 |= 4u;
          if (v44 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
            operator new();
          std::string::operator=(v44, &__str);
          v46 |= 8u;
          if (v45 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
            operator new();
          std::string::assign(v45, __s);
          Current = j__CFAbsoluteTimeGetCurrent();
          sub_100370C04((uint64_t)v42, 0, 0, 3u, (uint64_t)&v63, Current);
          v61 = v66;
          v62 = 1;
          v28 = v52;
          if (v52 >= v53)
          {
            v29 = sub_100372AB4((uint64_t *)&v51, (uint64_t *)buf, (double *)&buf[16], a6, (uint64_t)&v63, (uint64_t)&v61, (uint64_t *)v69);
          }
          else
          {
            sub_100372C00((uint64_t)&v53, v52, (uint64_t *)buf, (double *)&buf[16], a6, (uint64_t)&v63, (uint64_t)&v61, (uint64_t *)v69);
            v29 = v28 + 240;
          }
          v52 = v29;
          *(_QWORD *)&v61 = v64;
          v30 = v49;
          if (v49 >= v50)
          {
            v31 = sub_100372D0C(&v48, (uint64_t *)&v66, (uint64_t)a2, &__s, (double *)&v61);
          }
          else
          {
            sub_100372E20((uint64_t)&v50, v49, (uint64_t *)&v66, (uint64_t)a2, &__s, (double *)&v61);
            v31 = v30 + 64;
          }
          v49 = v31;
          sub_1002DF2E0(&v63);
          sub_1002CCF00((wireless_diagnostics::google::protobuf::MessageLite *)v42);
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__str.__r_.__value_.__l.__data_);
          sub_1002DF2E0(v70);
          if (SHIBYTE(v68) < 0)
            operator delete(*(void **)&buf[24]);
          v20 += 240;
        }
        while (v23 + 240 != v19);
      }
      if (*(_DWORD *)a1 == 1)
      {
        sub_100371890(*(_QWORD **)(a1 + 8), &v51);
        sub_100371924(*(_QWORD **)(a1 + 8), &v48);
        v12 = 1;
      }
      else if (sub_10036F334(*(_QWORD *)(a1 + 40)))
      {
        v12 = sub_10036EE8C(*(_QWORD *)(a1 + 40));
      }
      else
      {
        v12 = 0;
      }
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131318);
      v33 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        v34 = *v40 == 1;
        *(_DWORD *)buf = 68289794;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2050;
        *(_QWORD *)&buf[20] = 0xEEEEEEEEEEEEEEEFLL * ((v56 - v55) >> 4);
        *(_WORD *)&buf[28] = 1026;
        *(_DWORD *)&buf[30] = v34;
        *(_WORD *)&buf[34] = 1026;
        *(_DWORD *)&buf[36] = v12;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: record TruthLabel between dates\", \"Num Matching Events\":%{public}lu, \"Is Recorder Active\":%{public}hhd, \"Insertion Result\":%{public}hhd}", buf, 0x28u);
      }
      *(_QWORD *)buf = &v48;
      sub_1002699DC((void ***)buf);
      *(_QWORD *)buf = &v51;
      sub_100270C6C((void ***)buf);
      *(_QWORD *)buf = &v55;
      sub_100270C6C((void ***)buf);
    }
    if (v57)
    {
      v58 = v57;
      operator delete(v57);
    }
    if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v59.__r_.__value_.__l.__data_);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v60.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_100371600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (__p)
    operator delete(__p);
  if (a44 < 0)
    operator delete(a39);
  if (a50 < 0)
    operator delete(a45);
  _Unwind_Resume(a1);
}

void **sub_100371750(uint64_t *a1, unint64_t a2)
{
  void **result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7[5];

  v4 = a1[2];
  result = (void **)(a1 + 2);
  if (0xEEEEEEEEEEEEEEEFLL * ((v4 - *a1) >> 4) < a2)
  {
    if (a2 >= 0x111111111111112)
      sub_100259694();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_100273E28((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 240 * v6;
    sub_100273DB4(a1, v7);
    return sub_100273FB8(v7);
  }
  return result;
}

void sub_1003717EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100273FB8((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100371800(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (a2 > (v4 - *a1) >> 6)
  {
    if (a2 >> 58)
      sub_100259694();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_1002697F0(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + (v6 << 6);
    sub_10026977C(a1, v7);
    return sub_100269954((uint64_t)v7);
  }
  return result;
}

void sub_10037187C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100269954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100371890(_QWORD *a1, __int128 **a2)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = *a2;
  v3 = a2[1];
  if (*a2 != v3)
  {
    v5 = a1 + 11;
    v6 = a1 + 13;
    v7 = a1[12];
    do
    {
      if (v7 >= *v6)
      {
        v7 = sub_100273BF8(v5, v2);
      }
      else
      {
        sub_100273D04((uint64_t)v6, v7, v2);
        v7 += 240;
        a1[12] = v7;
      }
      a1[12] = v7;
      v2 += 15;
    }
    while (v2 != v3);
  }
}

void sub_10037191C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 96) = v2;
  _Unwind_Resume(a1);
}

void sub_100371924(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  unint64_t v6;

  v2 = *a2;
  v3 = a2[1];
  if (*a2 != v3)
  {
    v5 = a1 + 14;
    v6 = a1[15];
    do
    {
      if (v6 >= a1[16])
      {
        v6 = sub_100372F84(v5, v2);
      }
      else
      {
        sub_100372F04((uint64_t)v5, v2);
        v6 += 64;
      }
      a1[15] = v6;
      v2 += 64;
    }
    while (v2 != v3);
  }
}

void sub_10037199C(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1003719C8(id a1)
{
  qword_1022A0108 = (uint64_t)os_log_create("com.apple.locationd.Position", "MicrolocationQE");
}

uint64_t sub_1003719F4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, double *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t *v21;

  v6 = (a1[1] - *a1) >> 6;
  v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 58)
    sub_100259694();
  v12 = a1[2] - *a1;
  if (v12 >> 5 > v7)
    v7 = v12 >> 5;
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0)
    v13 = 0x3FFFFFFFFFFFFFFLL;
  else
    v13 = v7;
  v21 = a1 + 2;
  if (v13)
    v14 = (char *)sub_1002697F0((uint64_t)(a1 + 2), v13);
  else
    v14 = 0;
  v17 = v14;
  v18 = &v14[64 * v6];
  v20 = &v14[64 * v13];
  sub_100371B08((uint64_t)(a1 + 2), (uint64_t)v18, a2, a3, a4, a5);
  v19 = v18 + 64;
  sub_10026977C(a1, &v17);
  v15 = a1[1];
  sub_100269954((uint64_t)&v17);
  return v15;
}

void sub_100371AF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100269954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100371B08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, double *a6)
{
  uint64_t v9;
  uint64_t v10;
  void *__p[2];
  uint64_t v12;

  v9 = *a3;
  v10 = a3[1];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a4;
    v12 = *(_QWORD *)(a4 + 16);
  }
  sub_1002648D4(a2, v9, v10, (__int128 *)__p, *a5, a5[1], *a6);
  if (SHIBYTE(v12) < 0)
    operator delete(__p[0]);
}

void sub_100371B9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100371BB8(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  uint64_t result;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  int v8;
  const char *v9;
  uint8_t buf[4];
  const char *v11;

  v2 = sub_10028FB40(a1);
  if (sub_100371DAC() > v2)
    return 1;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131318);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v11 = "MicroLocationLabels";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v8 = 136446210;
    v9 = "MicroLocationLabels";
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", &v8, 12);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationRecordingLabelsTable]", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  result = sub_100288274(a1);
  if ((_DWORD)result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0)
      v5 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v5 = *(_QWORD *)(a1 + 160);
    sub_100053048(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_100371DAC()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRecordingLabelsTableMaxRows", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 2500;
}

void sub_100371E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100371E88(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  uint64_t result;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  int v8;
  const char *v9;
  uint8_t buf[4];
  const char *v11;

  v2 = sub_10028F214(a1);
  if (sub_10037207C() > v2)
    return 1;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131318);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v11 = "MicroLocationRecordingEvents";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v8 = 136446210;
    v9 = "MicroLocationRecordingEvents";
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", &v8, 12);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationRecordingEventsTable]", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  result = sub_100287B64(a1);
  if ((_DWORD)result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0)
      v5 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v5 = *(_QWORD *)(a1 + 160);
    sub_100053048(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_10037207C()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRecordingEventsTableMaxRows", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 15150;
}

void sub_100372140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100372158(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  uint64_t result;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  int v8;
  const char *v9;
  uint8_t buf[4];
  const char *v11;

  v2 = sub_10028EF20(a1);
  if (sub_10037234C() > v2)
    return 1;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131318);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v11 = "MicroLocationMeasurements";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131318);
    v8 = 136446210;
    v9 = "MicroLocationMeasurements";
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", &v8, 12);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationMeasurementTable]", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  result = sub_1002879A0(a1);
  if ((_DWORD)result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0)
      v5 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v5 = *(_QWORD *)(a1 + 160);
    sub_100053048(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_10037234C()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementTableMaxRows", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 321100;
}

void sub_100372414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037242C(uint64_t a1, uint64_t *a2, double *a3, uint64_t *a4, uint64_t a5, unsigned int *a6)
{
  uint64_t v7;
  uint64_t result;

  v7 = *(_QWORD *)(a1 + 8);
  result = sub_100320DC4(v7, *a2, a2[1], *a4, a5, *a6 | (unint64_t)&_mh_execute_header, *a3);
  *(_QWORD *)(a1 + 8) = v7 + 120;
  return result;
}

void sub_100372478(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100372480(uint64_t *a1, uint64_t *a2, double *a3, uint64_t *a4, uint64_t a5, unsigned int *a6)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;

  v7 = *a1;
  v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 3);
  v9 = v8 + 1;
  if (v8 + 1 > 0x222222222222222)
    sub_100259694();
  v15 = (uint64_t)(a1 + 2);
  v16 = 0xEEEEEEEEEEEEEEEFLL * ((a1[2] - v7) >> 3);
  if (2 * v16 > v9)
    v9 = 2 * v16;
  if (v16 >= 0x111111111111111)
    v17 = 0x222222222222222;
  else
    v17 = v9;
  v25 = a1 + 2;
  if (v17)
    v18 = (char *)sub_100313328(v15, v17);
  else
    v18 = 0;
  v21 = v18;
  v22 = &v18[120 * v8];
  v23 = (uint64_t)v22;
  v24 = &v18[120 * v17];
  sub_100320DC4((uint64_t)v22, *a2, a2[1], *a4, a5, *a6 | (unint64_t)&_mh_execute_header, *a3);
  v23 = (uint64_t)(v22 + 120);
  sub_100324A3C(a1, &v21);
  v19 = a1[1];
  sub_1003134C4((uint64_t)&v21);
  return v19;
}

void sub_1003725A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003134C4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003725B8(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  void *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t *v24;

  v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 4);
  v9 = v8 + 1;
  if (v8 + 1 > 0x111111111111111)
    sub_100259694();
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4) > v9)
    v9 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4);
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - *a1) >> 4) >= 0x88888888888888)
    v16 = 0x111111111111111;
  else
    v16 = v9;
  v24 = a1 + 2;
  if (v16)
    v17 = (char *)sub_100273E28((uint64_t)(a1 + 2), v16);
  else
    v17 = 0;
  v20 = v17;
  v21 = &v17[240 * v8];
  v23 = &v17[240 * v16];
  sub_100372704((uint64_t)(a1 + 2), (uint64_t)v21, a2, a3, a4, a5, a6, a7);
  v22 = v21 + 240;
  sub_100273DB4(a1, &v20);
  v18 = a1[1];
  sub_100273FB8(&v20);
  return v18;
}

void sub_1003726F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100273FB8((void **)va);
  _Unwind_Resume(a1);
}

void sub_100372704(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v12;
  uint64_t v13;
  double v14;
  void *__p[2];
  uint64_t v16;
  __int128 v17;
  char v18;

  v12 = *a3;
  v13 = a3[1];
  v14 = *a4;
  if (*(char *)(a5 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a5, *(_QWORD *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a5;
    v16 = *(_QWORD *)(a5 + 16);
  }
  v17 = *(_OWORD *)a7;
  v18 = *(_BYTE *)(a7 + 16);
  sub_100398EEC(a2, v12, v13, (__int128 *)__p, a6, &v17, *a8, a8[1], v14);
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
}

void sub_1003727EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_100372810(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, double *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t *v21;

  v6 = (a1[1] - *a1) >> 6;
  v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 58)
    sub_100259694();
  v12 = a1[2] - *a1;
  if (v12 >> 5 > v7)
    v7 = v12 >> 5;
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0)
    v13 = 0x3FFFFFFFFFFFFFFLL;
  else
    v13 = v7;
  v21 = a1 + 2;
  if (v13)
    v14 = (char *)sub_1002697F0((uint64_t)(a1 + 2), v13);
  else
    v14 = 0;
  v17 = v14;
  v18 = &v14[64 * v6];
  v20 = &v14[64 * v13];
  sub_100372924((uint64_t)(a1 + 2), (uint64_t)v18, a2, a3, a4, a5);
  v19 = v18 + 64;
  sub_10026977C(a1, &v17);
  v15 = a1[1];
  sub_100269954((uint64_t)&v17);
  return v15;
}

void sub_100372910(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100269954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100372924(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, double *a6)
{
  uint64_t v9;
  uint64_t v10;
  void *__p[2];
  uint64_t v12;

  v9 = *a3;
  v10 = a3[1];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a4;
    v12 = *(_QWORD *)(a4 + 16);
  }
  sub_1002648D4(a2, v9, v10, (__int128 *)__p, *a5, a5[1], *a6);
  if (SHIBYTE(v12) < 0)
    operator delete(__p[0]);
}

void sub_1003729B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003729D4(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v6;
  _BYTE *v7;
  __int128 v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  _QWORD v13[3];
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a4;
  v15 = a4;
  v16 = a4;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a2 != a3)
  {
    v6 = a2 + 1;
    do
    {
      *(_OWORD *)v4 = *(v6 - 1);
      v7 = (_BYTE *)(v4 + 16);
      if (*((char *)v6 + 23) < 0)
      {
        sub_100115CE4(v7, *(void **)v6, *((_QWORD *)v6 + 1));
        v9 = v16;
      }
      else
      {
        v8 = *v6;
        *(_QWORD *)(v4 + 32) = *((_QWORD *)v6 + 2);
        *(_OWORD *)v7 = v8;
        v9 = v4;
      }
      v10 = v6 - 1;
      v11 = *(__int128 *)((char *)v6 + 24);
      *(_QWORD *)(v4 + 56) = *((_QWORD *)v6 + 5);
      *(_OWORD *)(v4 + 40) = v11;
      v4 = v9 + 64;
      v16 = v9 + 64;
      v6 += 4;
    }
    while (v10 + 4 != a3);
  }
  v14 = 1;
  sub_10030229C((uint64_t)v13);
  return v4;
}

void sub_100372AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10030229C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100372AB4(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  void *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t *v24;

  v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 4);
  v9 = v8 + 1;
  if (v8 + 1 > 0x111111111111111)
    sub_100259694();
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4) > v9)
    v9 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4);
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - *a1) >> 4) >= 0x88888888888888)
    v16 = 0x111111111111111;
  else
    v16 = v9;
  v24 = a1 + 2;
  if (v16)
    v17 = (char *)sub_100273E28((uint64_t)(a1 + 2), v16);
  else
    v17 = 0;
  v20 = v17;
  v21 = &v17[240 * v8];
  v23 = &v17[240 * v16];
  sub_100372C00((uint64_t)(a1 + 2), (uint64_t)v21, a2, a3, a4, a5, a6, a7);
  v22 = v21 + 240;
  sub_100273DB4(a1, &v20);
  v18 = a1[1];
  sub_100273FB8(&v20);
  return v18;
}

void sub_100372BEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100273FB8((void **)va);
  _Unwind_Resume(a1);
}

void sub_100372C00(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v12;
  uint64_t v13;
  double v14;
  void *__p[2];
  uint64_t v16;
  __int128 v17;
  char v18;

  v12 = *a3;
  v13 = a3[1];
  v14 = *a4;
  if (*(char *)(a5 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a5, *(_QWORD *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a5;
    v16 = *(_QWORD *)(a5 + 16);
  }
  v17 = *(_OWORD *)a7;
  v18 = *(_BYTE *)(a7 + 16);
  sub_100398EEC(a2, v12, v13, (__int128 *)__p, a6, &v17, *a8, a8[1], v14);
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
}

void sub_100372CE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_100372D0C(uint64_t *a1, uint64_t *a2, uint64_t a3, char **a4, double *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t *v21;

  v6 = (a1[1] - *a1) >> 6;
  v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 58)
    sub_100259694();
  v12 = a1[2] - *a1;
  if (v12 >> 5 > v7)
    v7 = v12 >> 5;
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0)
    v13 = 0x3FFFFFFFFFFFFFFLL;
  else
    v13 = v7;
  v21 = a1 + 2;
  if (v13)
    v14 = (char *)sub_1002697F0((uint64_t)(a1 + 2), v13);
  else
    v14 = 0;
  v17 = v14;
  v18 = &v14[64 * v6];
  v20 = &v14[64 * v13];
  sub_100372E20((uint64_t)(a1 + 2), (uint64_t)v18, a2, a3, a4, a5);
  v19 = v18 + 64;
  sub_10026977C(a1, &v17);
  v15 = a1[1];
  sub_100269954((uint64_t)&v17);
  return v15;
}

void sub_100372E0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100269954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100372E20(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char **a5, double *a6)
{
  uint64_t v9;
  uint64_t v10;
  void *__p[2];
  char v12;
  void *__dst[2];
  uint64_t v14;

  v9 = *a3;
  v10 = a3[1];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a4;
    v14 = *(_QWORD *)(a4 + 16);
  }
  sub_1015A2E04(__p, *a5);
  sub_1002649CC(a2, v9, v10, (__int128 *)__dst, (uint64_t)__p, *a6);
  if (v12 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_100372ED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

__n128 sub_100372F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  __int128 v6;
  __n128 result;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  v5 = (_BYTE *)(v4 + 16);
  if (*(char *)(a2 + 39) < 0)
  {
    sub_100115CE4(v5, *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)v5 = v6;
  }
  result = *(__n128 *)(a2 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a2 + 56);
  *(__n128 *)(v4 + 40) = result;
  *(_QWORD *)(a1 + 8) = v4 + 64;
  return result;
}

void sub_100372F7C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100372F84(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  __int128 v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v18[2];
  char *v19;
  char *v20;
  uint64_t *v21;

  v3 = *a1;
  v4 = (a1[1] - *a1) >> 6;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 58)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = a1[2] - v3;
  if (v8 >> 5 > v5)
    v5 = v8 >> 5;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFC0)
    v9 = 0x3FFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  v21 = a1 + 2;
  if (v9)
    v10 = (char *)sub_1002697F0(v7, v9);
  else
    v10 = 0;
  v11 = &v10[64 * v4];
  v18[0] = v10;
  v18[1] = v11;
  v19 = v11;
  v20 = &v10[64 * v9];
  *(_OWORD *)v11 = *(_OWORD *)a2;
  v12 = v11 + 16;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_100115CE4(v12, *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
    v11 = v19;
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 16);
    *((_QWORD *)v11 + 4) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)v12 = v13;
  }
  v14 = &v10[64 * v4];
  v15 = *(_OWORD *)(a2 + 40);
  *((_QWORD *)v14 + 7) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(v14 + 40) = v15;
  v19 = v11 + 64;
  sub_10026977C(a1, v18);
  v16 = a1[1];
  sub_100269954((uint64_t)v18);
  return v16;
}

void sub_100373094(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100269954((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_1003732D8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id result;
  const char *v14;
  uint8_t *v15;
  _WORD v16[8];
  uint8_t buf[4];
  int v18;
  __int16 v19;
  const char *v20;
  __int16 v21;
  double v22;
  __int16 v23;
  int v24;

  v2 = *(_QWORD *)(a1 + 32);
  if (!*(_BYTE *)(v2 + 32))
  {
    objc_msgSend(*(id *)(v2 + 16), "startSessionForClient:");
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 68289026;
      v18 = 0;
      v19 = 2082;
      v20 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Requested PDR fence without an active session! Starting Motion Session\"}", buf, 0x12u);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
    }
    v4 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      *(_DWORD *)buf = 68289026;
      v18 = 0;
      v19 = 2082;
      v20 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Requested PDR fence without an active session! Starting Motion Session", "{\"msg%{public}.0s\":\"Requested PDR fence without an active session! Starting Motion Session\"}", buf, 0x12u);
    }
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
    v2 = *(_QWORD *)(a1 + 32);
  }
  v5 = qword_1022A00F0;
  if (*(_BYTE *)(v2 + 77))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Fence is already active, setting fence again", buf, 2u);
    }
    v7 = sub_1001BFF7C(115, 0);
    v5 = qword_1022A00F0;
    if (v7)
    {
      bzero(buf, 0x65CuLL);
      if (v5 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v16[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Fence is already active, setting fence again", v16, 2);
      v15 = (uint8_t *)v14;
      sub_100512490("Generic", 1, 0, 0, "-[CLMiLoPedestrianFenceClient setFence]_block_invoke", "%s\n", v14);
      if (v15 != buf)
        free(v15);
      v5 = qword_1022A00F0;
    }
  }
  if (v5 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v8 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(float *)(v10 + 72);
    LODWORD(v10) = *(unsigned __int8 *)(v10 + 77);
    *(_DWORD *)buf = 68289538;
    v18 = 0;
    v19 = 2082;
    v20 = "";
    v21 = 2050;
    v22 = v11;
    v23 = 1026;
    v24 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Setting PDR fence\", \"fence size in m\":\"%{public}.2f\", \"previous fence state\":%{public}hhd}", buf, 0x22u);
  }
  v12 = *(_QWORD *)(a1 + 32);
  LODWORD(v9) = *(_DWORD *)(v12 + 72);
  result = objc_msgSend(*(id *)(v12 + 16), "setFence:forClient:withRadius:", *(_QWORD *)(v12 + 40), v9);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 77) = 1;
  return result;
}

void sub_1003736C0(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 77))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v2 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Clearing PDR fence -- will not receive any more fence breach notifications", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Clearing PDR fence -- will not receive any more fence breach notifications", v8, 2);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 2, "-[CLMiLoPedestrianFenceClient clearFence]_block_invoke", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "clearFence:forClient:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40));
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 77) = 0;
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "No fence active -- ignoring request to clear fence", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "No fence active -- ignoring request to clear fence", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "-[CLMiLoPedestrianFenceClient clearFence]_block_invoke", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
  }
}

void sub_1003739F8(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;

  v1 = *(_QWORD *)(a1 + 32);
  if (!*(_BYTE *)(v1 + 32))
  {
    objc_msgSend(*(id *)(v1 + 16), "startSessionForClient:");
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      v4[0] = 68289026;
      v4[1] = 0;
      v5 = 2082;
      v6 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Starting Motion Session\"}", (uint8_t *)v4, 0x12u);
    }
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
  }
}

void sub_100373B50(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;

  v1 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v1 + 32))
  {
    objc_msgSend(*(id *)(v1 + 16), "endSessionForClient:");
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      v4[0] = 68289026;
      v4[1] = 0;
      v5 = 2082;
      v6 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Ending Motion Session\"}", (uint8_t *)v4, 0x12u);
    }
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 0;
  }
}

void sub_100373E30(uint64_t a1)
{
  NSObject *v2;
  id v3;
  uint64_t v4;
  double Current;
  void *__p;
  __int16 v7;
  const char *v8;
  __int16 v9;
  id v10;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v3 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "UTF8String");
    __p = (void *)68289282;
    v7 = 2082;
    v8 = "";
    v9 = 2082;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Breached PDR fence\", \"fenceId\":%{public, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
  }
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48);
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_1015A2E04(&__p, (char *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "UTF8String"));
  (*(void (**)(uint64_t, void **, double))(v4 + 16))(v4, &__p, Current);
  if (SBYTE3(v10) < 0)
    operator delete(__p);
}

void sub_100373F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100374164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 16))();
}

uint64_t sub_1003743DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 56) + 16))();
}

_QWORD *sub_100374414(_QWORD *a1, void *a2, uint64_t a3)
{
  id v5;
  CFStringRef v6;
  int v7;
  int v8;
  float v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  CFStringRef v13;
  int v14;
  int v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  CLMiLoPedestrianFenceClient *v19;
  double v20;
  _QWORD v22[6];
  _QWORD v23[5];
  _QWORD v24[5];
  float v25;
  uint64_t v26;
  std::__shared_weak_count *v27;

  *a1 = off_102131390;
  a1[1] = a2;
  a1[2] = a3;
  v5 = objc_msgSend(a2, "silo");
  sub_1001E4804(&v26);
  v25 = 0.0;
  v6 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsPedestrianFenceRadiusInMeters", 0x8000100u, kCFAllocatorNull);
  sub_10052688C(v26, (uint64_t)v6, &v25);
  v8 = v7;
  CFRelease(v6);
  v9 = v25;
  v10 = v27;
  if (v27)
  {
    p_shared_owners = (unint64_t *)&v27->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (!v8)
    v9 = 3.5;
  if (sub_100081BD0())
  {
    sub_1001E4804(&v26);
    v25 = 0.0;
    v13 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsPedestrianFenceRadiusForIpadInMeters", 0x8000100u, kCFAllocatorNull);
    sub_10052688C(v26, (uint64_t)v13, &v25);
    v15 = v14;
    CFRelease(v13);
    v9 = v25;
    v16 = v27;
    if (v27)
    {
      v17 = (unint64_t *)&v27->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    if (!v15)
      v9 = 3.5;
  }
  v23[4] = a1;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_100374688;
  v24[3] = &unk_1021313C0;
  v24[4] = a1;
  v22[5] = a1;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_100374A24;
  v23[3] = &unk_1021313E0;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_100374B74;
  v22[3] = &unk_102131408;
  v22[4] = CFSTR("CLMiLoPDRFence");
  v19 = [CLMiLoPedestrianFenceClient alloc];
  *(float *)&v20 = v9;
  a1[3] = -[CLMiLoPedestrianFenceClient initInUniverse:andIdentifier:andRadiusInMeters:andCallback:andStatusCallback:andErrorCallback:](v19, "initInUniverse:andIdentifier:andRadiusInMeters:andCallback:andStatusCallback:andErrorCallback:", a2, CFSTR("CLMiLoPDRFence"), v24, v22, v23, v20);
  a1[4] = objc_msgSend(v5, "newTimer");
  a1[5] = objc_msgSend(v5, "newTimer");
  return a1;
}

void sub_100374668(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100261F44(v1 - 80);
  _Unwind_Resume(a1);
}

void sub_100374688(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD v9[2];
  int v10;
  int v11;
  __int128 v12;
  _BYTE v13[32];
  uint64_t v14;

  v5 = *(_QWORD *)(a1 + 32);
  sub_1003747FC(v5);
  (*(void (**)(_QWORD, uint64_t, double))(**(_QWORD **)(v5 + 16) + 16))(*(_QWORD *)(v5 + 16), a2, a3);
  sub_1002BBEFC(v9);
  if (!sub_1002D7DBC(4u))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v11 |= 4u;
  v10 = 4;
  v6 = *(_QWORD *)(v5 + 16);
  v8 = 0;
  sub_1000B0C3C(&v8);
  *(_QWORD *)&v12 = sub_1000B0D38((ssize_t)&v8);
  *((_QWORD *)&v12 + 1) = v7;
  sub_10037499C(&v12, (uint64_t)v9, (uint64_t)v13, a3);
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v6 + 32))(v6, v13);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v14);
  sub_1000B0D18((unsigned int *)&v8);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v9);
}

void sub_1003747BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  uint64_t v11;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1000B0D18(&a10);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

id sub_1003747FC(uint64_t a1)
{
  NSObject *v2;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "stopAllStatusTimers", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v6[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "stopAllStatusTimers", v6, 2);
    v5 = (uint8_t *)v4;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationMotionBridge::stopAllStatusTimers()", "%s\n", v4);
    if (v5 != buf)
      free(v5);
  }
  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  return objc_msgSend(*(id *)(a1 + 40), "invalidate");
}

void sub_10037499C(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  _BYTE v8[304];

  sub_1000B13D8((uint64_t)v8);
  sub_10035950C((uint64_t)v8, a2);
  sub_1000B0EC8(a3, a1, *(_DWORD *)(a2 + 16), (uint64_t)v8, a4);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100374A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&a9);
  _Unwind_Resume(a1);
}

void sub_100374A24(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double Current;
  int v7;
  _QWORD v8[2];
  int v9;
  int v10;
  int v11;
  __int128 v12;
  _BYTE v13[32];
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 32);
  sub_1002BBEFC(v8);
  if (!sub_1002D7DBC(0xAu))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v11 |= 0x24u;
  v9 = 10;
  v10 = a2;
  v4 = *(_QWORD *)(v3 + 16);
  v7 = 0;
  sub_1000B0C3C(&v7);
  *(_QWORD *)&v12 = sub_1000B0D38((ssize_t)&v7);
  *((_QWORD *)&v12 + 1) = v5;
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_10037499C(&v12, (uint64_t)v8, (uint64_t)v13, Current);
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v4 + 32))(v4, v13);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v14);
  sub_1000B0D18((unsigned int *)&v7);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100374B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  uint64_t v11;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1000B0D18(&a10);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_100374B74(uint64_t a1, void *a2)
{
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  NSObject *v6;
  int v7;
  int v8;
  __int16 v9;
  const char *v10;
  __int16 v11;
  void *v12;

  v3 = *(_QWORD *)(a1 + 40);
  if (objc_msgSend(a2, "objectForKey:", *(_QWORD *)(a1 + 32)))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      v7 = 68289282;
      v8 = 0;
      v9 = 2082;
      v10 = "";
      v11 = 2114;
      v12 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Received status report for active fence\", \"Status report\":%{public, location:escape_only}@}", (uint8_t *)&v7, 0x1Cu);
    }
    sub_100374DA0(v3);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v7 = 68289282;
      v8 = 0;
      v9 = 2082;
      v10 = "";
      v11 = 2114;
      v12 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Did not receive status report for active fence\", \"Status report\":%{public, location:escape_only}@}", (uint8_t *)&v7, 0x1Cu);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
    }
    v6 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      v7 = 68289282;
      v8 = 0;
      v9 = 2082;
      v10 = "";
      v11 = 2114;
      v12 = a2;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v6, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Did not receive status report for active fence", "{\"msg%{public}.0s\":\"Did not receive status report for active fence\", \"Status report\":%{public, location:escape_only}@}", (uint8_t *)&v7, 0x1Cu);
    }
  }
}

id sub_100374DA0(uint64_t a1)
{
  double Current;
  CFStringRef v3;
  int v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  NSObject *v9;
  _QWORD v11[5];
  double v12;
  uint8_t buf[8];
  _BYTE v14[10];
  __int16 v15;
  double v16;

  sub_1003747FC(a1);
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_1001E4804(buf);
  v12 = 0.0;
  v3 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxTimeAllowedWithoutFenceStatusReport", 0x8000100u, kCFAllocatorNull);
  v4 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v3, &v12);
  CFRelease(v3);
  v5 = v12;
  v6 = *(std::__shared_weak_count **)v14;
  if (*(_QWORD *)v14)
  {
    v7 = (unint64_t *)(*(_QWORD *)v14 + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v4)
    v5 = 600.0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100375064;
  v11[3] = &unk_10212ECA0;
  v11[4] = a1;
  objc_msgSend(*(id *)(a1 + 32), "setHandler:", v11);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v9 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v14 = 2082;
    *(_QWORD *)&v14[2] = "";
    v15 = 2050;
    v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"stopAllStatusTimersAndStartFenceStatusTimer: setting fence status timer to fire in the future\", \"Delay to next fire\":\"%{public}f\"}", buf, 0x1Cu);
  }
  return objc_msgSend(*(id *)(a1 + 32), "setNextFireTime:", Current + v5);
}

void sub_100374F88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100374FDC(uint64_t a1)
{
  *(_QWORD *)a1 = off_102131390;

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  *(_QWORD *)(a1 + 32) = 0;
  objc_msgSend(*(id *)(a1 + 40), "invalidate");

  *(_QWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_100375040(uint64_t a1)
{
  sub_100374FDC(a1);
  operator delete();
}

id sub_100375064(uint64_t a1)
{
  return sub_10037506C(*(_QWORD *)(a1 + 32));
}

id sub_10037506C(uint64_t a1)
{
  NSObject *v2;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "handleFenceStatusTimerFire", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v6[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "handleFenceStatusTimerFire", v6, 2);
    v5 = (uint8_t *)v4;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationMotionBridge::handleFenceStatusTimerFire()", "%s\n", v4);
    if (v5 != buf)
      free(v5);
  }
  return sub_100375204(a1);
}

id sub_100375204(uint64_t a1)
{
  double Current;
  CFStringRef v3;
  int v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  NSObject *v9;
  _QWORD v11[5];
  double v12;
  uint8_t buf[8];
  _BYTE v14[10];
  __int16 v15;
  double v16;

  sub_1003747FC(a1);
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_1001E4804(buf);
  v12 = 0.0;
  v3 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxDelayAfterFenceStatusReportTimerFires", 0x8000100u, kCFAllocatorNull);
  v4 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v3, &v12);
  CFRelease(v3);
  v5 = v12;
  v6 = *(std::__shared_weak_count **)v14;
  if (*(_QWORD *)v14)
  {
    v7 = (unint64_t *)(*(_QWORD *)v14 + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v4)
    v5 = 30.0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100375438;
  v11[3] = &unk_10212ECA0;
  v11[4] = a1;
  objc_msgSend(*(id *)(a1 + 40), "setHandler:", v11);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v9 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v14 = 2082;
    *(_QWORD *)&v14[2] = "";
    v15 = 2050;
    v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"stopAllStatusTimersAndStartRaceDelayTimer: setting race delay timer to fire in the future\", \"Delay to next fire\":\"%{public}f\"}", buf, 0x1Cu);
  }
  return objc_msgSend(*(id *)(a1 + 40), "setNextFireTime:", Current + v5);
}

void sub_1003753E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100375438(uint64_t a1)
{
  return sub_100375440(*(_QWORD *)(a1 + 32));
}

uint64_t sub_100375440(uint64_t a1)
{
  NSObject *v2;
  const char *v4;
  uint8_t *v5;
  _WORD v6[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "handleRaceDelayTimerFire", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v6[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "handleRaceDelayTimerFire", v6, 2);
    v5 = (uint8_t *)v4;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationMotionBridge::handleRaceDelayTimerFire()", "%s\n", v4);
    if (v5 != buf)
      free(v5);
  }
  sub_1003747FC(a1);
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
}

void sub_1003755E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double Current;
  int v5;
  _QWORD v6[2];
  int v7;
  int v8;
  __int128 v9;
  _BYTE v10[32];
  uint64_t v11;

  sub_1002BBEFC(v6);
  if (!sub_1002D7DBC(8u))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v8 |= 4u;
  v7 = 8;
  v2 = *(_QWORD *)(a1 + 16);
  v5 = 0;
  sub_1000B0C3C(&v5);
  *(_QWORD *)&v9 = sub_1000B0D38((ssize_t)&v5);
  *((_QWORD *)&v9 + 1) = v3;
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_10037499C(&v9, (uint64_t)v6, (uint64_t)v10, Current);
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v2 + 32))(v2, v10);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v11);
  sub_1000B0D18((unsigned int *)&v5);
  objc_msgSend(*(id *)(a1 + 24), "setFence");
  sub_100374DA0(a1);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v6);
}

void sub_1003756FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  uint64_t v11;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1000B0D18(&a10);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_10037573C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double Current;
  int v5;
  _QWORD v6[2];
  int v7;
  int v8;
  __int128 v9;
  _BYTE v10[32];
  uint64_t v11;

  sub_1002BBEFC(v6);
  if (!sub_1002D7DBC(9u))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v8 |= 4u;
  v7 = 9;
  v2 = *(_QWORD *)(a1 + 16);
  v5 = 0;
  sub_1000B0C3C(&v5);
  *(_QWORD *)&v9 = sub_1000B0D38((ssize_t)&v5);
  *((_QWORD *)&v9 + 1) = v3;
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_10037499C(&v9, (uint64_t)v6, (uint64_t)v10, Current);
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v2 + 32))(v2, v10);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v11);
  sub_1000B0D18((unsigned int *)&v5);
  objc_msgSend(*(id *)(a1 + 24), "clearFence");
  sub_1003747FC(a1);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v6);
}

void sub_100375850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  uint64_t v11;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1000B0D18(&a10);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

id sub_100375890(uint64_t a1)
{
  NSObject *v2;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    v5 = 2082;
    v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationMotionBridge::startMotionSession\"}", (uint8_t *)v4, 0x12u);
  }
  return objc_msgSend(*(id *)(a1 + 24), "startSession");
}

id sub_100375970(uint64_t a1)
{
  NSObject *v2;
  _DWORD v4[2];
  __int16 v5;
  const char *v6;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    v5 = 2082;
    v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationMotionBridge::stopMotionSession\"}", (uint8_t *)v4, 0x12u);
  }
  return objc_msgSend(*(id *)(a1 + 24), "endSession");
}

uint64_t sub_100375A50(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  CFStringRef v4;
  char v5;
  int v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  char v10;
  NSObject *v11;
  const __CFString *v12;
  _BOOL4 v13;
  __n128 v14;
  _OWORD *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  CFStringRef v19;
  int v20;
  double v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  const __CFString *v25;
  _BOOL4 v26;
  __n128 v27;
  _OWORD *v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  const __CFString *v32;
  _BOOL4 v33;
  __n128 v34;
  void *v35;
  uint64_t v36;
  _OWORD *v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  CFStringRef v41;
  int v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  const __CFString *v46;
  _BOOL4 v47;
  __n128 v48;
  _OWORD *v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  CLMiLoPedestrianFenceClient *v55;
  uint64_t v56;
  void **v57;
  NSString *v58;
  double v59;
  id v60;
  NSObject *v61;
  NSObject *v62;
  uint64_t v64;
  uint64_t v65;
  id v66;
  __int128 v68;
  void *v69[2];
  char v70;
  char v71;
  id v72;
  id v73;
  void *v74[2];
  char v75;
  _QWORD v76[5];
  _QWORD v77[5];
  void *v78;
  __int128 v79;
  void *__p[2];
  _OWORD *v81;
  __int128 v82;
  id *v83;
  void **v84;
  uint8_t buf[24];
  __int16 v86;
  int64_t v87;
  __int16 v88;
  uint64_t v89;
  uint64_t v90;
  id v91;

  *(_QWORD *)a1 = &off_102131438;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_BYTE *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  v65 = a1 + 32;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_DWORD *)(a1 + 64) = 1065353216;
  *(_BYTE *)(a1 + 72) = 0;
  v3 = a1 + 72;
  *(_BYTE *)(a1 + 136) = 0;
  v66 = objc_msgSend(a2, "silo");
  sub_1001E4804(buf);
  LOBYTE(v82) = 0;
  v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleEnable", 0x8000100u, kCFAllocatorNull);
  v5 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v4, (BOOL *)&v82);
  CFRelease(v4);
  v6 = v82;
  v7 = *(std::__shared_weak_count **)&buf[8];
  if (*(_QWORD *)&buf[8])
  {
    v8 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v6)
    v10 = 0;
  else
    v10 = v5;
  if ((v10 & 1) != 0)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v11 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_QWORD *)buf = 68289282;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      *(_WORD *)&buf[18] = 1026;
      *(_DWORD *)&buf[20] = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationStopMotionDetectionBridge CTOR, setting is off so object did not initialize\", \"Stop detection enabled\":%{public}hhd}", buf, 0x18u);
    }
  }
  else
  {
    sub_1001E4804(buf);
    *(_QWORD *)&v82 = 0;
    v12 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleRadiuses", 0x8000100u, kCFAllocatorNull);
    v13 = sub_100527258(*(uint64_t *)buf, v12, (CFTypeRef *)&v82);
    CFRelease(v12);
    if (v13)
    {
      v14.n128_f64[0] = sub_100377C0C((const __CFArray *)v82, (uint64_t)__p);
    }
    else
    {
      v15 = operator new(0x10uLL);
      v81 = v15 + 1;
      v14 = (__n128)xmmword_101B9EB20;
      *v15 = xmmword_101B9EB20;
      __p[0] = v15;
      __p[1] = v15 + 1;
    }
    v16 = *(std::__shared_weak_count **)&buf[8];
    if (*(_QWORD *)&buf[8])
    {
      v17 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v16->__on_zero_shared)(v16, v14);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    sub_1001E4804(buf);
    *(_QWORD *)&v82 = 0;
    v19 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleOngoingTimerTimeout", 0x8000100u, kCFAllocatorNull);
    v20 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v19, &v82);
    CFRelease(v19);
    v21 = *(double *)&v82;
    v22 = *(std::__shared_weak_count **)&buf[8];
    if (*(_QWORD *)&buf[8])
    {
      v23 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    if (!v20)
      v21 = 5.0;
    sub_1001E4804(buf);
    *(_QWORD *)&v82 = 0;
    v25 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleTimeouts", 0x8000100u, kCFAllocatorNull);
    v26 = sub_100527258(*(uint64_t *)buf, v25, (CFTypeRef *)&v82);
    CFRelease(v25);
    if (v26)
    {
      v27.n128_f64[0] = sub_100377D68((const __CFArray *)v82, (uint64_t)&v78);
    }
    else
    {
      v28 = operator new(0x10uLL);
      *((_QWORD *)&v79 + 1) = v28 + 1;
      v27 = (__n128)xmmword_101B9EB30;
      *v28 = xmmword_101B9EB30;
      v78 = v28;
      *(_QWORD *)&v79 = v28 + 1;
    }
    v29 = *(std::__shared_weak_count **)&buf[8];
    if (*(_QWORD *)&buf[8])
    {
      v30 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v29->__on_zero_shared)(v29, v27);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if ((sub_100081BD0() & 1) != 0)
    {
      sub_1001E4804(&v82);
      v74[0] = 0;
      v32 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleIpadRadii", 0x8000100u, kCFAllocatorNull);
      v33 = sub_100527258(v82, v32, (CFTypeRef *)v74);
      CFRelease(v32);
      if (v33)
      {
        v34.n128_f64[0] = sub_100377EC4((const __CFArray *)v74[0], (uint64_t)buf);
      }
      else
      {
        memset(buf, 0, sizeof(buf));
        v37 = operator new(0x10uLL);
        *(_QWORD *)&buf[16] = v37 + 1;
        v34 = (__n128)xmmword_101B9EB40;
        *v37 = xmmword_101B9EB40;
        *(_QWORD *)buf = v37;
        *(_QWORD *)&buf[8] = v37 + 1;
      }
      v38 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
      if (*((_QWORD *)&v82 + 1))
      {
        v39 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
        do
          v40 = __ldaxr(v39);
        while (__stlxr(v40 - 1, v39));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v38->__on_zero_shared)(v38, v34);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      *(_OWORD *)__p = *(_OWORD *)buf;
      v81 = *(_OWORD **)&buf[16];
      sub_1001E4804(buf);
      *(_QWORD *)&v82 = 0;
      v41 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleIpadOngoingTimerTimeout", 0x8000100u, kCFAllocatorNull);
      v42 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v41, &v82);
      CFRelease(v41);
      v21 = *(double *)&v82;
      v43 = *(std::__shared_weak_count **)&buf[8];
      if (*(_QWORD *)&buf[8])
      {
        v44 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
        do
          v45 = __ldaxr(v44);
        while (__stlxr(v45 - 1, v44));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
      }
      if (!v42)
        v21 = 300.0;
      sub_1001E4804(&v82);
      v74[0] = 0;
      v46 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleIpadTimeouts", 0x8000100u, kCFAllocatorNull);
      v47 = sub_100527258(v82, v46, (CFTypeRef *)v74);
      CFRelease(v46);
      if (v47)
      {
        v48.n128_f64[0] = sub_100378020((const __CFArray *)v74[0], (uint64_t)buf);
      }
      else
      {
        memset(buf, 0, sizeof(buf));
        v49 = operator new(0x10uLL);
        *(_QWORD *)&buf[16] = v49 + 1;
        v48 = (__n128)xmmword_101B9EB50;
        *v49 = xmmword_101B9EB50;
        *(_QWORD *)buf = v49;
        *(_QWORD *)&buf[8] = v49 + 1;
      }
      v50 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
      if (*((_QWORD *)&v82 + 1))
      {
        v51 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
        do
          v52 = __ldaxr(v51);
        while (__stlxr(v52 - 1, v51));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v50->__on_zero_shared)(v50, v48);
          std::__shared_weak_count::__release_weak(v50);
        }
      }
      if (v78)
      {
        *(_QWORD *)&v79 = v78;
        operator delete(v78);
      }
      v35 = *(void **)buf;
      v78 = *(void **)buf;
      v79 = *(_OWORD *)&buf[8];
      v36 = *(_QWORD *)&buf[8];
    }
    else
    {
      v35 = v78;
      v36 = v79;
    }
    v77[0] = _NSConcreteStackBlock;
    v77[1] = 3221225472;
    v77[2] = sub_10037660C;
    v77[3] = &unk_1021313C0;
    v77[4] = a1;
    v76[0] = _NSConcreteStackBlock;
    v76[1] = 3221225472;
    v76[2] = sub_1003769BC;
    v76[3] = &unk_1021313E0;
    v53 = __p[0];
    v76[4] = a1;
    if ((char *)__p[1] - (char *)__p[0] == v36 - (_QWORD)v35)
    {
      v64 = v3;
      if (__p[1] != __p[0])
      {
        v54 = 0;
        do
        {
          *(_QWORD *)buf = v53[v54];
          *(_QWORD *)&buf[8] = *((_QWORD *)v78 + v54);
          buf[16] = 0;
          BYTE4(v89) = 0;
          sub_100376B10((char *)buf, (uint64_t)v74);
          v73 = 0;
          v55 = [CLMiLoPedestrianFenceClient alloc];
          v56 = *(_QWORD *)(a1 + 8);
          if (v75 >= 0)
            v57 = v74;
          else
            v57 = (void **)v74[0];
          v58 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v57, v64);
          HIDWORD(v59) = *(_DWORD *)&buf[4];
          *(float *)&v59 = *(double *)buf;
          v73 = -[CLMiLoPedestrianFenceClient initInUniverse:andIdentifier:andRadiusInMeters:andCallback:andStatusCallback:andErrorCallback:](v55, "initInUniverse:andIdentifier:andRadiusInMeters:andCallback:andStatusCallback:andErrorCallback:", v56, v58, v77, &stru_102131488, v76, v59);
          v72 = objc_msgSend(v66, "newTimer");
          v83 = &v72;
          v84 = v74;
          *(_QWORD *)&v82 = buf;
          *((_QWORD *)&v82 + 1) = &v73;
          sub_10037827C(v65, (unsigned __int8 *)v74, (uint64_t)&unk_101B9EB60, (__int128 **)&v84, &v82);
          if (v75 < 0)
            operator delete(v74[0]);
          if (BYTE4(v89) && SBYTE3(v89) < 0)
            operator delete(*(void **)&buf[16]);
          ++v54;
          v53 = __p[0];
        }
        while (v54 < ((char *)__p[1] - (char *)__p[0]) >> 3);
      }
      *(_QWORD *)&v68 = nan("");
      *((double *)&v68 + 1) = v21;
      sub_1015A2E04(v69, "ongoingTimer");
      v71 = 1;
      v60 = objc_msgSend(v66, "newTimer");
      *(_OWORD *)buf = v68;
      sub_1002A2230((uint64_t)&buf[16], (__int128 *)v69);
      v90 = 0;
      v91 = v60;
      sub_100376D58(v64, (uint64_t)buf);
      if (BYTE4(v89) && SBYTE3(v89) < 0)
        operator delete(*(void **)&buf[16]);
      if (v71 && v70 < 0)
        operator delete(v69[0]);
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v61 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_QWORD *)buf = 68289794;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        *(_WORD *)&buf[18] = 1026;
        *(_DWORD *)&buf[20] = 1;
        v86 = 2050;
        v87 = ((char *)__p[1] - (char *)__p[0]) >> 3;
        v88 = 2050;
        v89 = (uint64_t)(v79 - (_QWORD)v78) >> 3;
        _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"CLMicroLocationStopMotionDetectionBridge CTOR, wrong configuration, object did not initialize\", \"Stop detection enabled\":%{public}hhd, \"Num Radiuses\":%{public}lu, \"Num Timeouts\":%{public}lu}", buf, 0x2Cu);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131528);
      }
      v62 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        *(_QWORD *)buf = 68289794;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        *(_WORD *)&buf[18] = 1026;
        *(_DWORD *)&buf[20] = 1;
        v86 = 2050;
        v87 = ((char *)__p[1] - (char *)__p[0]) >> 3;
        v88 = 2050;
        v89 = (uint64_t)(v79 - (_QWORD)v78) >> 3;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v62, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "CLMicroLocationStopMotionDetectionBridge CTOR, wrong configuration, object did not initialize", "{\"msg%{public}.0s\":\"CLMicroLocationStopMotionDetectionBridge CTOR, wrong configuration, object did not initialize\", \"Stop detection enabled\":%{public}hhd, \"Num Radiuses\":%{public}lu, \"Num Timeouts\":%{public}lu}", buf, 0x2Cu);
      }
    }
    if (v78)
    {
      *(_QWORD *)&v79 = v78;
      operator delete(v78);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  return a1;
}

void sub_1003764A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,uint64_t a42,void *a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;

  sub_100261F44(v45 - 224);
  if (__p)
    operator delete(__p);
  if (a43)
    operator delete(a43);
  sub_10037817C(v44);
  sub_1003781BC(a10);
  _Unwind_Resume(a1);
}

void sub_10037660C(uint64_t a1, std::string *a2, double a3)
{
  sub_100376614(*(_QWORD *)(a1 + 32), a2, a3);
}

void sub_100376614(uint64_t a1, std::string *a2, double a3)
{
  NSObject *v6;
  std::string *v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  NSObject *v10;
  uint64_t *v11;
  NSObject *v12;
  std::string *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD v17[2];
  int v18;
  std::string *v19;
  int v20;
  __int128 v21;
  uint8_t buf[4];
  int v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  std::string *v27;
  uint64_t v28;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v6 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v7 = a2;
    else
      v7 = (std::string *)a2->__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 68289282;
    v23 = 0;
    v24 = 2082;
    v25 = "";
    v26 = 2082;
    v27 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"StopMotionDetectionBridge::onMotionMeasurements\", \"fenceId\":%{public, location:escape_only}s}", buf, 0x1Cu);
  }
  v8 = sub_1001987C8((_QWORD *)(a1 + 32), (unsigned __int8 *)a2);
  v9 = v8;
  if (v8)
  {
    objc_msgSend(*((id *)v8 + 11), "setFence");
    objc_msgSend(*((id *)v9 + 12), "setNextFireTime:", a3 + *((double *)v9 + 6));
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v10 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v11 = (a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (uint64_t *)a2
          : (uint64_t *)a2->__r_.__value_.__r.__words[0];
      *(_DWORD *)buf = 68289282;
      v23 = 0;
      v24 = 2082;
      v25 = "";
      v26 = 2082;
      v27 = (std::string *)v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"onMotionMeasurements, couldn't find StopMotionDetection element\", \"fenceIdStr\":%{public, location:escape_only}s}", buf, 0x1Cu);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
    }
    v12 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = a2;
      else
        v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
      *(_DWORD *)buf = 68289282;
      v23 = 0;
      v24 = 2082;
      v25 = "";
      v26 = 2082;
      v27 = v13;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "onMotionMeasurements, couldn't find StopMotionDetection element", "{\"msg%{public}.0s\":\"onMotionMeasurements, couldn't find StopMotionDetection element\", \"fenceIdStr\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
  }
  sub_1002BBEFC(v17);
  if (!sub_1002D7DBC(5u))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v18 = 5;
  v20 |= 0xCu;
  if (v19 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v19, a2);
  v14 = *(_QWORD *)(a1 + 16);
  v16 = 0;
  sub_1000B0C3C(&v16);
  *(_QWORD *)&v21 = sub_1000B0D38((ssize_t)&v16);
  *((_QWORD *)&v21 + 1) = v15;
  sub_10037499C(&v21, (uint64_t)v17, (uint64_t)buf, a3);
  (*(void (**)(uint64_t, uint8_t *))(*(_QWORD *)v14 + 32))(v14, buf);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v28);
  sub_1000B0D18((unsigned int *)&v16);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v17);
}

void sub_10037697C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  uint64_t v12;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1000B0D18(&a11);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_1003769BC(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double Current;
  int v7;
  _QWORD v8[2];
  int v9;
  int v10;
  int v11;
  __int128 v12;
  _BYTE v13[32];
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 32);
  sub_1002BBEFC(v8);
  if (!sub_1002D7DBC(0xAu))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v11 |= 0x24u;
  v9 = 10;
  v10 = a2;
  v4 = *(_QWORD *)(v3 + 16);
  v7 = 0;
  sub_1000B0C3C(&v7);
  *(_QWORD *)&v12 = sub_1000B0D38((ssize_t)&v7);
  *((_QWORD *)&v12 + 1) = v5;
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_10037499C(&v12, (uint64_t)v8, (uint64_t)v13, Current);
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v4 + 32))(v4, v13);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v14);
  sub_1000B0D18((unsigned int *)&v7);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100376ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  uint64_t v11;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1000B0D18(&a10);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

char *sub_100376B10@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *__p;
  char v12;
  void *v13[2];
  char v14;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD v17[10];
  char v18;
  uint64_t v19;

  v2 = (double *)result;
  if (result[40])
  {
    if (result[39] < 0)
    {
      return (char *)sub_100115CE4((_BYTE *)a2, *((void **)result + 2), *((_QWORD *)result + 3));
    }
    else
    {
      *(_OWORD *)a2 = *((_OWORD *)result + 1);
      *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 4);
    }
  }
  else
  {
    sub_100263E50((uint64_t)v15);
    v4 = v16;
    *(_DWORD *)((char *)v17 + *(_QWORD *)(v16 - 24)) = *(_DWORD *)((_BYTE *)v17 + *(_QWORD *)(v16 - 24)) & 0xFFFFFEFB | 4;
    *(_QWORD *)((char *)&v17[1] + *(_QWORD *)(v4 - 24)) = 2;
    v5 = (char *)operator new(0x28uLL);
    strcpy(v5, "MiLoStopMotionDetectionFence:radius:");
    v6 = sub_100263F7C(&v16, (uint64_t)v5, 36);
    v7 = (_QWORD *)std::ostream::operator<<(v6, *v2);
    v14 = 10;
    strcpy((char *)v13, "m:timeout:");
    v8 = sub_100263F7C(v7, (uint64_t)v13, 10);
    v9 = (_QWORD *)std::ostream::operator<<(v8, v2[1]);
    v12 = 3;
    LODWORD(__p) = 6514035;
    sub_100263F7C(v9, (uint64_t)&__p, 3);
    if (v12 < 0)
      operator delete(__p);
    if (v14 < 0)
      operator delete(v13[0]);
    operator delete(v5);
    std::stringbuf::str((_QWORD *)a2, v17);
    *(_QWORD *)((char *)v15
    v16 = v10;
    if (v18 < 0)
      operator delete((void *)v17[8]);
    std::streambuf::~streambuf(v17);
    return (char *)std::ios::~ios(&v19);
  }
  return result;
}

void sub_100376D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  sub_1018B38B4((uint64_t)&a22);
  _Unwind_Resume(a1);
}

uint64_t sub_100376D58(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(unsigned __int8 *)(a1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = a1 + 16;
  if (v4)
  {
    sub_10034ED7C(v5, (__n128 *)(a2 + 16));
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  else
  {
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 40) = 0;
    if (*(_BYTE *)(a2 + 40))
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)v5 = v6;
      *(_QWORD *)(a2 + 24) = 0;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = 1;
  }
  return a1;
}

uint64_t sub_100376DE8(uint64_t a1)
{
  uint64_t **i;

  *(_QWORD *)a1 = &off_102131438;
  for (i = *(uint64_t ***)(a1 + 48); i; i = (uint64_t **)*i)
  {

    i[11] = 0;
    objc_msgSend(i[12], "invalidate");

    i[12] = 0;
  }
  if (*(_BYTE *)(a1 + 136))
  {
    objc_msgSend(*(id *)(a1 + 128), "invalidate");

    *(_QWORD *)(a1 + 128) = 0;
  }
  sub_10037817C(a1 + 72);
  sub_1003781BC(a1 + 32);
  return a1;
}

void sub_100376E80(uint64_t a1)
{
  sub_100376DE8(a1);
  operator delete();
}

char *sub_100376EA4(char *result, __n128 a2)
{
  char *v2;
  uint64_t *v3;
  NSObject *v4;
  void **v5;
  NSObject *v6;
  void **v7;
  __n128 v8;
  void *__p[2];
  char v10;
  uint8_t buf[4];
  int v12;
  __int16 v13;
  const char *v14;
  __int16 v15;
  void **v16;

  if (result[24])
  {
    v2 = result;
    v3 = (uint64_t *)*((_QWORD *)result + 6);
    if (v3)
    {
      a2.n128_u64[0] = 68289282;
      v8 = a2;
      do
      {
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131528);
        v4 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
        {
          v5 = (void **)(v3 + 2);
          if (*((char *)v3 + 39) < 0)
            v5 = (void **)*v5;
          *(_DWORD *)buf = v8.n128_u32[0];
          v12 = 0;
          v13 = 2082;
          v14 = "";
          v15 = 2082;
          v16 = v5;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting stopDetection element to Idle (clear fence and timer)\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
        }
        objc_msgSend((id)v3[11], "clearFence", *(_OWORD *)&v8);
        result = (char *)objc_msgSend((id)v3[12], "invalidate");
        v3 = (uint64_t *)*v3;
      }
      while (v3);
    }
    if (v2[136])
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v6 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        sub_100376B10(v2 + 72, (uint64_t)__p);
        if (v10 >= 0)
          v7 = __p;
        else
          v7 = (void **)__p[0];
        *(_DWORD *)buf = 68289282;
        v12 = 0;
        v13 = 2082;
        v14 = "";
        v15 = 2082;
        v16 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting stopDetection ongoing timer to Idle (clear fence)\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
        if (v10 < 0)
          operator delete(__p[0]);
      }
      result = (char *)objc_msgSend(*((id *)v2 + 16), "invalidate");
    }
    v2[24] = 0;
  }
  return result;
}

void sub_1003770CC(uint64_t a1)
{
  __int128 v2;
  uint64_t *v3;
  double v4;
  uint64_t *v5;
  NSObject *v6;
  uint64_t *v7;
  __int128 v8;
  void **v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  void *v12;
  uint64_t v13;
  __int128 __p;
  uint64_t v15;
  _BYTE buf[28];

  *(_BYTE *)(a1 + 24) = 1;
  *(double *)&v2 = j__CFAbsoluteTimeGetCurrent();
  v3 = *(uint64_t **)(a1 + 48);
  if (v3)
  {
    v4 = *(double *)&v2;
    *(_QWORD *)&v2 = 68289282;
    v8 = v2;
    do
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v5 = v3 + 2;
      v6 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        v7 = v3 + 2;
        if (*((char *)v3 + 39) < 0)
          v7 = (uint64_t *)*v5;
        *(_DWORD *)buf = v8;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2082;
        *(_QWORD *)&buf[20] = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"starting stopDetection in element (set fence and timer)\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      if (*((char *)v3 + 39) < 0)
      {
        sub_100115CE4(buf, (void *)v3[2], v3[3]);
      }
      else
      {
        *(_OWORD *)buf = *(_OWORD *)v5;
        *(_QWORD *)&buf[16] = v3[4];
      }
      objc_msgSend((id)v3[11], "setFence", v8, v9, v10, v11, v12, v13);
      objc_msgSend((id)v3[12], "setNextFireTime:", v4 + *((double *)v3 + 6));
      v9 = _NSConcreteStackBlock;
      v10 = 3321888768;
      v11 = sub_100377328;
      v12 = &unk_1021314A8;
      v13 = a1;
      if ((buf[23] & 0x80000000) != 0)
      {
        sub_100115CE4(&__p, *(void **)buf, *(unint64_t *)&buf[8]);
      }
      else
      {
        __p = *(_OWORD *)buf;
        v15 = *(_QWORD *)&buf[16];
      }
      objc_msgSend((id)v3[12], "setHandler:", &v9);
      if (SHIBYTE(v15) < 0)
        operator delete((void *)__p);
      if ((buf[23] & 0x80000000) != 0)
        operator delete(*(void **)buf);
      v3 = (uint64_t *)*v3;
    }
    while (v3);
  }
  sub_1003775AC(a1);
}

void sub_1003772E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  _Unwind_Resume(exception_object);
}

void sub_100377328(uint64_t a1)
{
  _QWORD *v2;
  double Current;

  v2 = *(_QWORD **)(a1 + 32);
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_100377354(v2, (const std::string *)(a1 + 40), Current);
}

void sub_100377354(_QWORD *a1, const std::string *a2, double a3)
{
  NSObject *v6;
  const std::string *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD v11[2];
  int v12;
  std::string *v13;
  int v14;
  __int128 v15;
  uint8_t buf[4];
  int v17;
  __int16 v18;
  const char *v19;
  __int16 v20;
  const std::string *v21;
  uint64_t v22;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v6 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v7 = a2;
    else
      v7 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 68289282;
    v17 = 0;
    v18 = 2082;
    v19 = "";
    v20 = 2082;
    v21 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"StopMotionDetectionBridge::onTimerTimeout\", \"fenceIdStr\":%{public, location:escape_only}s}", buf, 0x1Cu);
  }
  (*(void (**)(_QWORD *))(*a1 + 16))(a1);
  sub_1002BBEFC(v11);
  if (!sub_1002D7DBC(6u))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v12 = 6;
  v14 |= 0xCu;
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v13, a2);
  v8 = a1[2];
  v10 = 0;
  sub_1000B0C3C(&v10);
  *(_QWORD *)&v15 = sub_1000B0D38((ssize_t)&v10);
  *((_QWORD *)&v15 + 1) = v9;
  sub_10037499C(&v15, (uint64_t)v11, (uint64_t)buf, a3);
  (*(void (**)(uint64_t, uint8_t *))(*(_QWORD *)v8 + 32))(v8, buf);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v22);
  sub_1000B0D18((unsigned int *)&v10);
  (*(void (**)(_QWORD, double))(*(_QWORD *)a1[2] + 16))(a1[2], a3);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_10037756C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  uint64_t v12;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1000B0D18(&a11);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_1003775AC(uint64_t a1)
{
  double Current;
  double v3;
  NSObject *v4;
  void **v5;
  _QWORD v6[5];
  void *__p[2];
  char v8;
  uint8_t buf[4];
  int v10;
  __int16 v11;
  const char *v12;
  __int16 v13;
  void **v14;

  Current = j__CFAbsoluteTimeGetCurrent();
  if (*(_BYTE *)(a1 + 136))
  {
    v3 = Current;
    sub_100376B10((char *)(a1 + 72), (uint64_t)__p);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131528);
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      v5 = __p;
      if (v8 < 0)
        v5 = (void **)__p[0];
      *(_DWORD *)buf = 68289282;
      v10 = 0;
      v11 = 2082;
      v12 = "";
      v13 = 2082;
      v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting ongoing timer\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    objc_msgSend(*(id *)(a1 + 128), "setNextFireTime:", v3 + *(double *)(a1 + 80));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1003779C8;
    v6[3] = &unk_10212ECA0;
    v6[4] = a1;
    objc_msgSend(*(id *)(a1 + 128), "setHandler:", v6);
    if (v8 < 0)
      operator delete(__p[0]);
  }
}

void sub_100377720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100377748(_QWORD *result, __n128 a2)
{
  uint64_t *v2;
  NSObject *v3;
  _QWORD *v4;
  __n128 v5;
  uint8_t buf[4];
  int v7;
  __int16 v8;
  const char *v9;
  __int16 v10;
  _QWORD *v11;

  v2 = (uint64_t *)result[6];
  if (v2)
  {
    a2.n128_u64[0] = 68289282;
    v5 = a2;
    do
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v3 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        v4 = v2 + 2;
        if (*((char *)v2 + 39) < 0)
          v4 = (_QWORD *)*v4;
        *(_DWORD *)buf = v5.n128_u32[0];
        v7 = 0;
        v8 = 2082;
        v9 = "";
        v10 = 2082;
        v11 = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"starting session for stopDetection element\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      result = objc_msgSend((id)v2[11], "startSession", *(_OWORD *)&v5);
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_100377888(_QWORD *result, __n128 a2)
{
  uint64_t *v2;
  NSObject *v3;
  _QWORD *v4;
  __n128 v5;
  uint8_t buf[4];
  int v7;
  __int16 v8;
  const char *v9;
  __int16 v10;
  _QWORD *v11;

  v2 = (uint64_t *)result[6];
  if (v2)
  {
    a2.n128_u64[0] = 68289282;
    v5 = a2;
    do
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131528);
      v3 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        v4 = v2 + 2;
        if (*((char *)v2 + 39) < 0)
          v4 = (_QWORD *)*v4;
        *(_DWORD *)buf = v5.n128_u32[0];
        v7 = 0;
        v8 = 2082;
        v9 = "";
        v10 = 2082;
        v11 = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"stopping session for stopDetection element\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      result = objc_msgSend((id)v2[11], "endSession", *(_OWORD *)&v5);
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  return result;
}

void sub_1003779C8(uint64_t a1)
{
  uint64_t v1;
  double Current;

  v1 = *(_QWORD *)(a1 + 32);
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_1003779EC(v1, Current);
}

void sub_1003779EC(uint64_t a1, double a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD v8[2];
  int v9;
  int v10;
  __int128 v11;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  const char *v15;
  uint64_t v16;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131528);
  v4 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 68289026;
    v13 = 0;
    v14 = 2082;
    v15 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"StopMotionDetectionBridge::ongoingTimerTimeout\"}", buf, 0x12u);
  }
  sub_1002BBEFC(v8);
  if (!sub_1002D7DBC(7u))
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  v10 |= 4u;
  v9 = 7;
  v5 = *(_QWORD *)(a1 + 16);
  v7 = 0;
  sub_1000B0C3C(&v7);
  *(_QWORD *)&v11 = sub_1000B0D38((ssize_t)&v7);
  *((_QWORD *)&v11 + 1) = v6;
  sub_10037499C(&v11, (uint64_t)v8, (uint64_t)buf, a2);
  (*(void (**)(uint64_t, uint8_t *))(*(_QWORD *)v5 + 32))(v5, buf);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v16);
  sub_1000B0D18((unsigned int *)&v7);
  (*(void (**)(_QWORD, double))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16), a2);
  sub_1003775AC(a1);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100377BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  uint64_t v12;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1000B0D18(&a11);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_100377BE0(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

double sub_100377C0C@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v5;
  uint64_t v6;
  CFRange v7;

  v5 = 0uLL;
  v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100377C88, &v5);
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v6;
  return result;
}

void sub_100377C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100377C88(const void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  sub_100298DBC(a1);
  v4 = v3;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    v8 = *(_QWORD **)a2;
    v9 = ((uint64_t)v6 - *(_QWORD *)a2) >> 3;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61)
      sub_100259694();
    v11 = v5 - (_QWORD)v8;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      v13 = (char *)sub_10025E6A0(a2 + 16, v12);
      v8 = *(_QWORD **)a2;
      v6 = *(_QWORD **)(a2 + 8);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = &v13[8 * v12];
    *(_QWORD *)v14 = v4;
    v7 = v14 + 8;
    while (v6 != v8)
    {
      v16 = *--v6;
      *((_QWORD *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v15;
    if (v8)
      operator delete(v8);
  }
  else
  {
    *v6 = v3;
    v7 = v6 + 1;
  }
  *(_QWORD *)(a2 + 8) = v7;
}

double sub_100377D68@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v5;
  uint64_t v6;
  CFRange v7;

  v5 = 0uLL;
  v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100377DE4, &v5);
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v6;
  return result;
}

void sub_100377DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100377DE4(const void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  sub_100298DBC(a1);
  v4 = v3;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    v8 = *(_QWORD **)a2;
    v9 = ((uint64_t)v6 - *(_QWORD *)a2) >> 3;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61)
      sub_100259694();
    v11 = v5 - (_QWORD)v8;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      v13 = (char *)sub_10025E6A0(a2 + 16, v12);
      v8 = *(_QWORD **)a2;
      v6 = *(_QWORD **)(a2 + 8);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = &v13[8 * v12];
    *(_QWORD *)v14 = v4;
    v7 = v14 + 8;
    while (v6 != v8)
    {
      v16 = *--v6;
      *((_QWORD *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v15;
    if (v8)
      operator delete(v8);
  }
  else
  {
    *v6 = v3;
    v7 = v6 + 1;
  }
  *(_QWORD *)(a2 + 8) = v7;
}

double sub_100377EC4@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v5;
  uint64_t v6;
  CFRange v7;

  v5 = 0uLL;
  v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100377F40, &v5);
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v6;
  return result;
}

void sub_100377F24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100377F40(const void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  sub_100298DBC(a1);
  v4 = v3;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    v8 = *(_QWORD **)a2;
    v9 = ((uint64_t)v6 - *(_QWORD *)a2) >> 3;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61)
      sub_100259694();
    v11 = v5 - (_QWORD)v8;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      v13 = (char *)sub_10025E6A0(a2 + 16, v12);
      v8 = *(_QWORD **)a2;
      v6 = *(_QWORD **)(a2 + 8);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = &v13[8 * v12];
    *(_QWORD *)v14 = v4;
    v7 = v14 + 8;
    while (v6 != v8)
    {
      v16 = *--v6;
      *((_QWORD *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v15;
    if (v8)
      operator delete(v8);
  }
  else
  {
    *v6 = v3;
    v7 = v6 + 1;
  }
  *(_QWORD *)(a2 + 8) = v7;
}

double sub_100378020@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v5;
  uint64_t v6;
  CFRange v7;

  v5 = 0uLL;
  v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_10037809C, &v5);
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v6;
  return result;
}

void sub_100378080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10037809C(const void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  sub_100298DBC(a1);
  v4 = v3;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    v8 = *(_QWORD **)a2;
    v9 = ((uint64_t)v6 - *(_QWORD *)a2) >> 3;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61)
      sub_100259694();
    v11 = v5 - (_QWORD)v8;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      v13 = (char *)sub_10025E6A0(a2 + 16, v12);
      v8 = *(_QWORD **)a2;
      v6 = *(_QWORD **)(a2 + 8);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = &v13[8 * v12];
    *(_QWORD *)v14 = v4;
    v7 = v14 + 8;
    while (v6 != v8)
    {
      v16 = *--v6;
      *((_QWORD *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v15;
    if (v8)
      operator delete(v8);
  }
  else
  {
    *v6 = v3;
    v7 = v6 + 1;
  }
  *(_QWORD *)(a2 + 8) = v7;
}

uint64_t sub_10037817C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 64) && *(_BYTE *)(a1 + 40) && *(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_1003781BC(uint64_t a1)
{
  void *v2;

  sub_1003781F4(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_1003781F4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_100378230((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_100378230(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 64) && *(char *)(a1 + 63) < 0)
    operator delete(*(void **)(a1 + 40));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

unsigned __int8 *sub_10037827C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4, __int128 *a5)
{
  unint64_t v5;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  unint64_t v15;
  unsigned __int8 **v16;
  unsigned __int8 *i;
  unint64_t v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD v28[3];

  v10 = (_QWORD *)(a1 + 24);
  v11 = sub_10025A024(a1 + 24, (uint64_t)a2);
  v12 = v11;
  v13 = *(_QWORD *)(a1 + 8);
  if (v13)
  {
    v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      v5 = v11;
      if (v11 >= v13)
        v5 = v11 % v13;
    }
    else
    {
      v5 = (v13 - 1) & v11;
    }
    v16 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v5);
    if (v16)
    {
      for (i = *v16; i; i = *(unsigned __int8 **)i)
      {
        v18 = *((_QWORD *)i + 1);
        if (v18 == v12)
        {
          if ((sub_10025A4CC(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v15 > 1)
          {
            if (v18 >= v13)
              v18 %= v13;
          }
          else
          {
            v18 &= v13 - 1;
          }
          if (v18 != v5)
            break;
        }
      }
    }
  }
  sub_100378514(a1, v12, a4, a5, (uint64_t)v28);
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (!v13 || (float)(v20 * (float)v13) < v19)
  {
    v21 = 1;
    if (v13 >= 3)
      v21 = (v13 & (v13 - 1)) != 0;
    v22 = v21 | (2 * v13);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      v24 = v23;
    else
      v24 = v22;
    sub_10012E444(a1, v24);
    v13 = *(_QWORD *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
        v5 = v12 % v13;
      else
        v5 = v12;
    }
    else
    {
      v5 = (v13 - 1) & v12;
    }
  }
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v25)
  {
    *(_QWORD *)v28[0] = *v25;
    *v25 = v28[0];
  }
  else
  {
    *(_QWORD *)v28[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v28[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v5) = a1 + 16;
    if (*(_QWORD *)v28[0])
    {
      v26 = *(_QWORD *)(*(_QWORD *)v28[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v26 >= v13)
          v26 %= v13;
      }
      else
      {
        v26 &= v13 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v26) = v28[0];
    }
  }
  i = (unsigned __int8 *)v28[0];
  v28[0] = 0;
  ++*v10;
  sub_1003786A4((uint64_t)v28, 0);
  return i;
}

void sub_1003784FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1003786A4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

char *sub_100378514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, __int128 *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  void *v10;
  __int128 *v11;
  char *result;
  __int128 v13;
  uint64_t v14;
  __int128 *v15;

  v9 = a1 + 16;
  v10 = operator new(0x68uLL);
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = a2;
  v11 = *a3;
  v13 = *a4;
  v14 = *((_QWORD *)a4 + 2);
  v15 = v11;
  result = sub_1003785AC((char *)v10 + 16, &v15, (__int128 **)&v13);
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_100378594(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1003786A4(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_1003785AC(char *__dst, __int128 **a2, __int128 **a3)
{
  __int128 *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  void *__p[2];
  char v12;
  char v13;

  v5 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)v5, *((_QWORD *)v5 + 1));
  }
  else
  {
    v6 = *v5;
    *((_QWORD *)__dst + 2) = *((_QWORD *)v5 + 2);
    *(_OWORD *)__dst = v6;
  }
  v10 = **a3;
  sub_1002A2230((uint64_t)__p, *a3 + 1);
  v7 = *(_QWORD *)a3[1];
  v8 = *(_QWORD *)a3[2];
  *(_OWORD *)(__dst + 24) = v10;
  sub_1002A2230((uint64_t)(__dst + 40), (__int128 *)__p);
  *((_QWORD *)__dst + 9) = v7;
  *((_QWORD *)__dst + 10) = v8;
  if (v13 && v12 < 0)
    operator delete(__p[0]);
  return __dst;
}

void sub_100378668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  uint64_t v17;

  if (a17 && a16 < 0)
    operator delete(__p);
  if (*(char *)(v17 + 23) < 0)
    operator delete(*(void **)v17);
  _Unwind_Resume(exception_object);
}

void sub_1003786A4(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_100378230((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

double sub_1003786E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)a1 = a2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = a3;
  return result;
}

id sub_100378700(_QWORD *a1)
{
  id v2;
  id v3;
  id result;
  _QWORD v5[5];
  _QWORD v6[5];

  if (a1[1])
    sub_1018F79CC();
  a1[1] = objc_msgSend(objc_alloc((Class)BMBiomeScheduler), "initWithIdentifier:targetQueue:waking:", CFSTR("com.apple.locationd.milo.nowplaying"), a1[5], 0);
  v2 = objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend((id)BiomeLibrary(), "Media"), "NowPlaying"), "DSLPublisher"), "subscribeOn:", a1[1]);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1003789BC;
  v6[3] = &unk_102131588;
  v6[4] = a1;
  a1[2] = objc_msgSend(v2, "sinkWithCompletion:receiveInput:", &stru_102131568, v6);
  if (a1[3])
    sub_1018F7860();
  a1[3] = objc_msgSend(objc_alloc((Class)BMBiomeScheduler), "initWithIdentifier:targetQueue:waking:", CFSTR("com.apple.locationd.milo.appinfocus"), a1[5], 0);
  v3 = objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend((id)BiomeLibrary(), "App"), "InFocus"), "DSLPublisher"), "subscribeOn:", a1[3]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100378D3C;
  v5[3] = &unk_102131588;
  v5[4] = a1;
  result = objc_msgSend(v3, "sinkWithCompletion:receiveInput:", &stru_1021315A8, v5);
  a1[4] = result;
  return result;
}

void sub_100378838(id a1, BPSCompletion *a2)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021315C8);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "MiLo registration on NowPlaying completed", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021315C8);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "MiLo registration on NowPlaying completed", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
}

void sub_1003789BC(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  const char *v8;
  uint8_t *v9;
  _WORD v10[8];
  uint8_t buf[1640];

  v3 = *(_QWORD **)(a1 + 32);
  v4 = objc_msgSend(a2, "eventBody");
  v6 = objc_opt_class(BMNowPlayingEvent, v5);
  if ((objc_opt_isKindOfClass(v4, v6) & 1) != 0)
  {
    (*(void (**)(_QWORD, id))(*(_QWORD *)*v3 + 16))(*v3, objc_msgSend(a2, "eventBody"));
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021315C8);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "received biome event data doesn't match event type BMNowPlayingEvent", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021315C8);
      v10[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "received biome event data doesn't match event type BMNowPlayingEvent", v10, 2);
      v9 = (uint8_t *)v8;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v8);
      if (v9 != buf)
        free(v9);
    }
  }
}

void sub_100378BB8(id a1, BPSCompletion *a2)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021315C8);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "MiLo registration on App InFocus completed", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021315C8);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "MiLo registration on App InFocus completed", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
}

void sub_100378D3C(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  const char *v8;
  uint8_t *v9;
  _WORD v10[8];
  uint8_t buf[1640];

  v3 = *(_QWORD **)(a1 + 32);
  v4 = objc_msgSend(a2, "eventBody");
  v6 = objc_opt_class(BMAppInFocus, v5);
  if ((objc_opt_isKindOfClass(v4, v6) & 1) != 0)
  {
    (*(void (**)(_QWORD, id))(*(_QWORD *)*v3 + 24))(*v3, objc_msgSend(a2, "eventBody"));
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021315C8);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "received biome event data doesn't match event type BMAppInFocus", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021315C8);
      v10[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "received biome event data doesn't match event type BMAppInFocus", v10, 2);
      v9 = (uint8_t *)v8;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v8);
      if (v9 != buf)
        free(v9);
    }
  }
}

void sub_100378F38(id *a1)
{

  a1[1] = 0;
  objc_msgSend(a1[2], "cancel");

  a1[2] = 0;
  a1[3] = 0;
  objc_msgSend(a1[4], "cancel");

  a1[4] = 0;
}

void sub_100378F94(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100378FC0(uint64_t a1)
{
  *(_DWORD *)a1 = 0x1000000;
  *(_WORD *)(a1 + 4) = 0;
  sub_1015A2E04((_QWORD *)(a1 + 8), "unknown");
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  *(_DWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 68) = 16777473;
  *(_BYTE *)(a1 + 72) = 1;
  return a1;
}

void sub_100379020(uint64_t a1, char a2)
{
  NSObject *v4;
  int v5;
  void **v6;
  void **v7;
  _BYTE *v8;
  NSObject *v9;
  int v10;
  void **v11;
  void **v12;
  _BYTE *v13;
  NSObject *v14;
  int v15;
  void **v16;
  void **v17;
  _BYTE *v18;
  NSObject *v19;
  int v20;
  uint8_t *v21;
  uint8_t *v22;
  void **v23;
  uint64_t v24;
  int v25;
  void **v26;
  void **v27;
  _BYTE *v28;
  char *v29;
  char *v30;
  NSObject *v31;
  int v32;
  void **v33;
  void **v34;
  _BYTE *v35;
  NSObject *v36;
  int v37;
  void **v38;
  void **v39;
  _BYTE *v40;
  NSObject *v41;
  int v42;
  void **v43;
  void **v44;
  _BYTE *v45;
  void *__p[2];
  char v47;
  int v48;
  void **v49;
  __int16 v50;
  _BYTE *v51;
  uint8_t buf[8];
  __int16 v53;
  const char *v54;
  __int16 v55;
  void **v56;
  __int16 v57;
  _BYTE *v58;
  __int16 v59;
  const char *v60;
  __int16 v61;
  const char *v62;
  _BYTE v63[12];
  __int16 v64;
  void **v65;
  char v66;

  if (*(_BYTE *)(a1 + 4))
  {
    if (*(unsigned __int8 *)(a1 + 4) - 1 < 2)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v4 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_FAULT))
      {
        sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
        v5 = v47;
        v6 = (void **)__p[0];
        sub_1002EC7C4(a2, v63);
        v7 = __p;
        if (v5 < 0)
          v7 = v6;
        if (v66 >= 0)
          v8 = v63;
        else
          v8 = *(_BYTE **)v63;
        *(_DWORD *)buf = 68290051;
        *(_DWORD *)&buf[4] = 0;
        v53 = 2082;
        v54 = "";
        v55 = 2082;
        v56 = v7;
        v57 = 2082;
        v58 = v8;
        v59 = 2082;
        v60 = "assert";
        v61 = 2081;
        v62 = "false";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
        if (v66 < 0)
          operator delete(*(void **)v63);
        if (v47 < 0)
          operator delete(__p[0]);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
      }
      v9 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
        v10 = v47;
        v11 = (void **)__p[0];
        sub_1002EC7C4(a2, v63);
        v12 = __p;
        if (v10 < 0)
          v12 = v11;
        if (v66 >= 0)
          v13 = v63;
        else
          v13 = *(_BYTE **)v63;
        *(_DWORD *)buf = 68290051;
        *(_DWORD *)&buf[4] = 0;
        v53 = 2082;
        v54 = "";
        v55 = 2082;
        v56 = v12;
        v57 = 2082;
        v58 = v13;
        v59 = 2082;
        v60 = "assert";
        v61 = 2081;
        v62 = "false";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Can't set new activity", "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
        if (v66 < 0)
          operator delete(*(void **)v63);
        if (v47 < 0)
          operator delete(__p[0]);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
      }
      v14 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
      {
        sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
        v15 = v47;
        v16 = (void **)__p[0];
        sub_1002EC7C4(a2, v63);
        v17 = __p;
        if (v15 < 0)
          v17 = v16;
        if (v66 >= 0)
          v18 = v63;
        else
          v18 = *(_BYTE **)v63;
        *(_DWORD *)buf = 68290051;
        *(_DWORD *)&buf[4] = 0;
        v53 = 2082;
        v54 = "";
        v55 = 2082;
        v56 = v17;
        v57 = 2082;
        v58 = v18;
        v59 = 2082;
        v60 = "assert";
        v61 = 2081;
        v62 = "false";
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
        if (v66 < 0)
          operator delete(*(void **)v63);
        if (v47 < 0)
          operator delete(__p[0]);
      }
      sub_1018F7B6C();
      goto LABEL_105;
    }
  }
  else if ((a2 - 3) <= 0xFDu)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v31 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_FAULT))
    {
      sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
      v32 = v47;
      v33 = (void **)__p[0];
      sub_1002EC7C4(a2, v63);
      v34 = __p;
      if (v32 < 0)
        v34 = v33;
      if (v66 >= 0)
        v35 = v63;
      else
        v35 = *(_BYTE **)v63;
      *(_DWORD *)buf = 68290051;
      *(_DWORD *)&buf[4] = 0;
      v53 = 2082;
      v54 = "";
      v55 = 2082;
      v56 = v34;
      v57 = 2082;
      v58 = v35;
      v59 = 2082;
      v60 = "assert";
      v61 = 2081;
      v62 = "scanActivity == CLMicroLocationUtils::ScanActivity::Localizing || scanActivity == CLMicroLocationUtils::Scan"
            "Activity::Recording";
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (v66 < 0)
        operator delete(*(void **)v63);
      if (v47 < 0)
        operator delete(__p[0]);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v36 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
      v37 = v47;
      v38 = (void **)__p[0];
      sub_1002EC7C4(a2, v63);
      v39 = __p;
      if (v37 < 0)
        v39 = v38;
      if (v66 >= 0)
        v40 = v63;
      else
        v40 = *(_BYTE **)v63;
      *(_DWORD *)buf = 68290051;
      *(_DWORD *)&buf[4] = 0;
      v53 = 2082;
      v54 = "";
      v55 = 2082;
      v56 = v39;
      v57 = 2082;
      v58 = v40;
      v59 = 2082;
      v60 = "assert";
      v61 = 2081;
      v62 = "scanActivity == CLMicroLocationUtils::ScanActivity::Localizing || scanActivity == CLMicroLocationUtils::Scan"
            "Activity::Recording";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v36, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Can't set new activity", "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (v66 < 0)
        operator delete(*(void **)v63);
      if (v47 < 0)
        operator delete(__p[0]);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v41 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
      v42 = v47;
      v43 = (void **)__p[0];
      sub_1002EC7C4(a2, v63);
      v44 = __p;
      if (v42 < 0)
        v44 = v43;
      if (v66 >= 0)
        v45 = v63;
      else
        v45 = *(_BYTE **)v63;
      *(_DWORD *)buf = 68290051;
      *(_DWORD *)&buf[4] = 0;
      v53 = 2082;
      v54 = "";
      v55 = 2082;
      v56 = v44;
      v57 = 2082;
      v58 = v45;
      v59 = 2082;
      v60 = "assert";
      v61 = 2081;
      v62 = "scanActivity == CLMicroLocationUtils::ScanActivity::Localizing || scanActivity == CLMicroLocationUtils::Scan"
            "Activity::Recording";
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (v66 < 0)
        operator delete(*(void **)v63);
      if (v47 < 0)
        operator delete(__p[0]);
    }
    sub_1018F7B38();
LABEL_105:
    __break(1u);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v19 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    sub_1002EC7C4(*(_BYTE *)(a1 + 4), buf);
    v20 = SBYTE3(v56);
    v21 = *(uint8_t **)buf;
    sub_1002EC7C4(a2, __p);
    v22 = buf;
    if (v20 < 0)
      v22 = v21;
    if (v47 >= 0)
      v23 = __p;
    else
      v23 = (void **)__p[0];
    *(_DWORD *)v63 = 136446466;
    *(_QWORD *)&v63[4] = v22;
    v64 = 2082;
    v65 = v23;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Advanced from %{public}s to %{public}s", v63, 0x16u);
    if (v47 < 0)
      operator delete(__p[0]);
    if (SBYTE3(v56) < 0)
      operator delete(*(void **)buf);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v24 = qword_1022A00F8;
    sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
    v25 = v47;
    v26 = (void **)__p[0];
    sub_1002EC7C4(a2, v63);
    v27 = __p;
    if (v25 < 0)
      v27 = v26;
    if (v66 >= 0)
      v28 = v63;
    else
      v28 = *(_BYTE **)v63;
    v48 = 136446466;
    v49 = v27;
    v50 = 2082;
    v51 = v28;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v24, 0, "Advanced from %{public}s to %{public}s", &v48, 22);
    v30 = v29;
    if (v66 < 0)
      operator delete(*(void **)v63);
    if (v47 < 0)
      operator delete(__p[0]);
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::State::setScanActivity(CLMicroLocationUtils::ScanActivity)", "%s\n", v30);
    if (v30 != (char *)buf)
      free(v30);
  }
  *(_BYTE *)(a1 + 4) = a2;
}

void sub_10037999C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1003799EC(uint64_t a1)
{
  NSObject *v2;
  int v3;
  uint8_t *v4;
  uint8_t *v5;
  void **v6;
  uint64_t v7;
  int v8;
  void **v9;
  void **v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  NSObject *v14;
  void **v15;
  NSObject *v16;
  void **v17;
  NSObject *v18;
  void **v19;
  void *__p[2];
  char v21;
  _BYTE buf[12];
  __int16 v23;
  void **v24;
  char v25;
  int v26;
  void **v27;
  __int16 v28;
  _BYTE *v29;
  uint8_t v30[8];
  __int16 v31;
  const char *v32;
  __int16 v33;
  void **v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  const char *v38;

  if (!*(_BYTE *)(a1 + 4))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v14 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_FAULT))
    {
      sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
      if (v21 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      *(_DWORD *)v30 = 68289795;
      *(_DWORD *)&v30[4] = 0;
      v31 = 2082;
      v32 = "";
      v33 = 2082;
      v34 = v15;
      v35 = 2082;
      v36 = "assert";
      v37 = 2081;
      v38 = "false";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Can't clear current activity as it is already invalid\", \"currentActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v30, 0x30u);
      if (v21 < 0)
        operator delete(__p[0]);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v16 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
      if (v21 >= 0)
        v17 = __p;
      else
        v17 = (void **)__p[0];
      *(_DWORD *)v30 = 68289795;
      *(_DWORD *)&v30[4] = 0;
      v31 = 2082;
      v32 = "";
      v33 = 2082;
      v34 = v17;
      v35 = 2082;
      v36 = "assert";
      v37 = 2081;
      v38 = "false";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Can't clear current activity as it is already invalid", "{\"msg%{public}.0s\":\"Can't clear current activity as it is already invalid\", \"currentActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v30, 0x30u);
      if (v21 < 0)
        operator delete(__p[0]);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v18 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
      v19 = v21 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)v30 = 68289795;
      *(_DWORD *)&v30[4] = 0;
      v31 = 2082;
      v32 = "";
      v33 = 2082;
      v34 = v19;
      v35 = 2082;
      v36 = "assert";
      v37 = 2081;
      v38 = "false";
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Can't clear current activity as it is already invalid\", \"currentActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v30, 0x30u);
      if (v21 < 0)
        operator delete(__p[0]);
    }
    abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/MicroLocation/CLMicroLocationLogic.mm", 102, "clearScanActivity");
    __break(1u);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    sub_1002EC7C4(*(_BYTE *)(a1 + 4), v30);
    v3 = SBYTE3(v34);
    v4 = *(uint8_t **)v30;
    sub_1002EC7C4(0, __p);
    v5 = v30;
    if (v3 < 0)
      v5 = v4;
    if (v21 >= 0)
      v6 = __p;
    else
      v6 = (void **)__p[0];
    *(_DWORD *)buf = 136446466;
    *(_QWORD *)&buf[4] = v5;
    v23 = 2082;
    v24 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Reversed from %{public}s to %{public}s", buf, 0x16u);
    if (v21 < 0)
      operator delete(__p[0]);
    if (SBYTE3(v34) < 0)
      operator delete(*(void **)v30);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(v30, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v7 = qword_1022A00F8;
    sub_1002EC7C4(*(_BYTE *)(a1 + 4), __p);
    v8 = v21;
    v9 = (void **)__p[0];
    sub_1002EC7C4(0, buf);
    v10 = __p;
    if (v8 < 0)
      v10 = v9;
    if (v25 >= 0)
      v11 = buf;
    else
      v11 = *(_BYTE **)buf;
    v26 = 136446466;
    v27 = v10;
    v28 = 2082;
    v29 = v11;
    _os_log_send_and_compose_impl(2, 0, v30, 1628, &_mh_execute_header, v7, 0, "Reversed from %{public}s to %{public}s", &v26, 22);
    v13 = v12;
    if (v25 < 0)
      operator delete(*(void **)buf);
    if (v21 < 0)
      operator delete(__p[0]);
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::State::clearScanActivity()", "%s\n", v13);
    if (v13 != (char *)v30)
      free(v13);
  }
  *(_BYTE *)(a1 + 4) = 0;
}

void sub_100379F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100379F84(uint64_t a1, int a2)
{
  NSObject *v4;
  const char *v5;
  _DWORD v6[2];
  __int16 v7;
  const char *v8;
  __int16 v9;
  const char *v10;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v4 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v5 = "not running";
    v6[0] = 68289282;
    v6[1] = 0;
    v7 = 2082;
    v8 = "";
    if (a2)
      v5 = "running";
    v9 = 2082;
    v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Rapport, setRapportSessionRunning\", \"session set to\":%{public, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  *(_BYTE *)(a1 + 5) = a2;
}

void sub_10037A08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a1 + 8) = off_102131798;
  *(_QWORD *)(a1 + 16) = off_102131810;
  *(_QWORD *)(a1 + 32) = off_1021318D0;
  *(_QWORD *)a1 = off_1021315F8;
  *(_QWORD *)(a1 + 40) = off_102131920;
  *(_QWORD *)(a1 + 24) = off_102131860;
  sub_100378FC0(a1 + 48);
  *(_QWORD *)(a1 + 128) = a4;
  *(_BYTE *)(a1 + 576) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_BYTE *)(a1 + 192) = 0;
  sub_10036E240(a1 + 584, a4);
  sub_10035BBF8(a1 + 632, a1, *(_QWORD *)(a1 + 128));
}

void sub_10037A324()
{
  operator delete();
}

void sub_10037A3F0(uint64_t a1)
{
  int v2;
  CFStringRef v3;
  int v4;
  int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  NSObject *v17;
  NSObject *v18;
  const char *v19;
  uint8_t *v20;
  NSObject *v21;
  uint64_t v22;
  double Current;
  const char *v24;
  uint8_t *v25;
  const char *v26;
  uint8_t *v27;
  uint64_t v28;
  __int128 v29;
  _DWORD v30[2];
  __int16 v31;
  int v32;
  __int16 v33;
  int v34;
  __int16 v35;
  _BYTE v36[6];
  int v37;
  __int16 v38;
  int v39;
  uint8_t buf[8];
  std::__shared_weak_count *v41;
  int v42;
  __int16 v43;
  int v44;
  __int16 v45;
  int v46;
  __int16 v47;
  int v48;

  v2 = *(unsigned __int8 *)(a1 + 48);
  sub_1001E4804(buf);
  LOBYTE(v30[0]) = 0;
  v3 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsEnabled", 0x8000100u, kCFAllocatorNull);
  v4 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v3, (BOOL *)v30);
  CFRelease(v3);
  v5 = LOBYTE(v30[0]);
  v6 = v41;
  if (v41)
  {
    p_shared_owners = (unint64_t *)&v41->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (v5)
    v9 = v4;
  else
    v9 = 0;
  v10 = *(unsigned __int8 *)(a1 + 49);
  v11 = *(unsigned __int8 *)(a1 + 50);
  v12 = *(unsigned __int8 *)(a1 + 51);
  v13 = *(unsigned __int8 *)(a1 + 118);
  if (*(_BYTE *)(a1 + 51))
    v14 = v13 == 0;
  else
    v14 = 0;
  v15 = v14;
  if (!*(_BYTE *)(a1 + 50))
    v15 = 0;
  if (!*(_BYTE *)(a1 + 49))
    v15 = 0;
  if (v9 == 1)
    v16 = v15;
  else
    v16 = 0;
  *(_BYTE *)(a1 + 48) = v16;
  sub_10033FF58(a1 + 1808, v16, v13 != 0);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v17 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67241472;
    *(_DWORD *)&buf[4] = v9;
    LOWORD(v41) = 1026;
    *(_DWORD *)((char *)&v41 + 2) = v10;
    HIWORD(v41) = 1026;
    v42 = v11;
    v43 = 1026;
    v44 = v12;
    v45 = 1026;
    v46 = v13;
    v47 = 1026;
    v48 = v16;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Enabled state: microlocations defaults enabled: %{public}d; location services enabled: %{public}d; significant loc"
      "ations enabled: %{public}d; platform supported %{public}d; LowPowerMode %{public}d; overall enabled: %{public}d",
      buf,
      0x26u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v30[0] = 67241472;
    v30[1] = v9;
    v31 = 1026;
    v32 = v10;
    v33 = 1026;
    v34 = v11;
    v35 = 1026;
    *(_DWORD *)v36 = v12;
    *(_WORD *)&v36[4] = 1026;
    v37 = v13;
    v38 = 1026;
    v39 = v16;
    LODWORD(v28) = 38;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Enabled state: microlocations defaults enabled: %{public}d; location services enabled: %{public}d; significant loc"
      "ations enabled: %{public}d; platform supported %{public}d; LowPowerMode %{public}d; overall enabled: %{public}d",
      v30,
      v28);
    v25 = (uint8_t *)v24;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::updateEnabled()", "%s\n", v24);
    if (v25 != buf)
      free(v25);
  }
  if ((v16 & 1) != 0 || !v2)
  {
    if (!v2 && v16)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v21 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "MicroLocations are now re-enabled. Clients should begin getting notifications again", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        LOWORD(v30[0]) = 0;
        LODWORD(v28) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "MicroLocations are now re-enabled. Clients should begin getting notifications again", v30, v28);
        v27 = (uint8_t *)v26;
        sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::updateEnabled()", "%s\n", v26);
        if (v27 != buf)
          free(v27);
      }
      sub_100014604(*(_QWORD *)(a1 + 128));
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v18 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "MicroLocations have been disabled. Clients will no longer get notifications until we are enabled again.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      LOWORD(v30[0]) = 0;
      LODWORD(v28) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "MicroLocations have been disabled. Clients will no longer get notifications until we are enabled again.", v30, v28);
      v20 = (uint8_t *)v19;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::updateEnabled()", "%s\n", v19);
      if (v20 != buf)
        free(v20);
    }
  }
  if ((v2 != 0) != v16)
  {
    sub_1002BC06C((uint64_t)v30);
    BYTE2(v32) = v9;
    HIBYTE(v32) = v10;
    LOBYTE(v33) = v11;
    HIBYTE(v33) = v12;
    LOBYTE(v34) = v13;
    *(_DWORD *)&v36[2] |= 0x7Eu;
    BYTE1(v34) = v16;
    HIDWORD(v28) = 0;
    sub_1000B0C3C((int *)&v28 + 1);
    *(_QWORD *)&v29 = sub_1000B0D38((ssize_t)&v28 + 4);
    *((_QWORD *)&v29 + 1) = v22;
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_100382FB0(&v29, (uint64_t)v30, (uint64_t)buf, Current);
    (*(void (**)(uint64_t, uint8_t *))(*(_QWORD *)a1 + 152))(a1, buf);
    sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v47);
    sub_1000B0D18((unsigned int *)&v28 + 1);
    sub_1002E22CC((wireless_diagnostics::google::protobuf::MessageLite *)v30);
  }
}

void sub_10037A9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v14 + 32));
  sub_1000B0D18(&a11);
  sub_1002E22CC((wireless_diagnostics::google::protobuf::MessageLite *)&a14);
  _Unwind_Resume(a1);
}

void sub_10037AA4C(uint64_t a1)
{
  const __CFString *v2;
  _BOOL4 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  const __CFArray *v9;
  void **v10;
  std::__shared_weak_count *v11;

  sub_1001E4804(&v10);
  v9 = 0;
  v2 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAnchorDeviceModelAllowedList", 0x8000100u, kCFAllocatorNull);
  v3 = sub_100527258((uint64_t)v10, v2, (CFTypeRef *)&v9);
  CFRelease(v2);
  if (v3)
  {
    sub_10038562C(v9, (uint64_t)&v7);
  }
  else
  {
    v7 = 0uLL;
    v8 = 0;
    sub_1003857D8(&v7, &off_10212F5E0, &off_10212F610, 6uLL);
  }
  v4 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_100385A64((uint64_t *)(a1 + 2584));
  *(_OWORD *)(a1 + 2584) = v7;
  *(_QWORD *)(a1 + 2600) = v8;
  v8 = 0;
  v7 = 0uLL;
  v10 = (void **)&v7;
  sub_100259608(&v10);
}

void sub_10037AB68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10037ABB0(uint64_t a1)
{
  void **v3;

  v3 = (void **)(a1 + 72);
  sub_1002B2904(&v3);
  v3 = (void **)(a1 + 48);
  sub_1002B2904(&v3);
  sub_100067AC4(a1 + 8);
  return a1;
}

uint64_t sub_10037AC00(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0)
    operator delete(*(void **)(a1 + 48));
  return sub_1003859AC(a1);
}

uint64_t sub_10037AC30(uint64_t a1)
{
  void **v3;

  sub_100385574(a1 + 56);
  v3 = (void **)(a1 + 32);
  sub_1003855BC(&v3);
  v3 = (void **)(a1 + 8);
  sub_1002A1A78(&v3);
  return a1;
}

uint64_t sub_10037AC84(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  const char *v5;
  uint8_t *v6;
  _WORD v7[8];
  uint8_t buf[8];

  *(_QWORD *)a1 = off_1021315F8;
  *(_QWORD *)(a1 + 8) = off_102131798;
  *(_QWORD *)(a1 + 16) = off_102131810;
  *(_QWORD *)(a1 + 24) = off_102131860;
  *(_QWORD *)(a1 + 32) = off_1021318D0;
  *(_QWORD *)(a1 + 40) = off_102131920;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLMicroLocationLogic: DTOR", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v7[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "CLMicroLocationLogic: DTOR", v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "virtual CLMicroLocationLogic::~CLMicroLocationLogic()", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  sub_1003A17FC(a1 + 1520);
  sub_1003602A4(a1 + 632);
  v3 = *(_QWORD *)(a1 + 2552);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  *(_QWORD *)buf = a1 + 2584;
  sub_100259608((void ***)buf);
  sub_10032CC84(a1 + 2056);
  *(_QWORD *)(a1 + 1808) = off_1021305A8;
  sub_10034111C((_QWORD *)(a1 + 2000));
  sub_100300C78(a1 + 1960);
  sub_100067AC4(a1 + 1872);
  sub_1003411B0((uint64_t *)(a1 + 1848));
  *(_QWORD *)buf = a1 + 1824;
  sub_1002A3684((void ***)buf);
  *(_QWORD *)buf = a1 + 1688;
  sub_1002B2904((void ***)buf);
  *(_QWORD *)buf = a1 + 1664;
  sub_1002B2904((void ***)buf);
  sub_100067AC4(a1 + 1624);
  if (*(char *)(a1 + 1591) < 0)
    operator delete(*(void **)(a1 + 1568));
  sub_1003859AC(a1 + 1520);
  sub_10035BE54(a1 + 632);
  sub_10036E2F8(a1 + 584);
  sub_100385574(a1 + 192);
  *(_QWORD *)buf = a1 + 168;
  sub_1003855BC((void ***)buf);
  *(_QWORD *)buf = a1 + 144;
  sub_1002A1A78((void ***)buf);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  return a1;
}

void sub_10037AF4C(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_10024F88C(a1);
}

uint64_t sub_10037AF5C(uint64_t a1)
{
  return sub_10037AC84(a1 - 8);
}

uint64_t sub_10037AF64(uint64_t a1)
{
  return sub_10037AC84(a1 - 16);
}

uint64_t sub_10037AF6C(uint64_t a1)
{
  return sub_10037AC84(a1 - 24);
}

uint64_t sub_10037AF74(uint64_t a1)
{
  return sub_10037AC84(a1 - 32);
}

uint64_t sub_10037AF7C(uint64_t a1)
{
  return sub_10037AC84(a1 - 40);
}

void sub_10037AF84(uint64_t a1)
{
  sub_10037AC84(a1);
  operator delete();
}

void sub_10037AFA8(uint64_t a1)
{
  sub_10037AC84(a1 - 8);
  operator delete();
}

void sub_10037AFD0(uint64_t a1)
{
  sub_10037AC84(a1 - 16);
  operator delete();
}

void sub_10037AFF8(uint64_t a1)
{
  sub_10037AC84(a1 - 24);
  operator delete();
}

void sub_10037B020(uint64_t a1)
{
  sub_10037AC84(a1 - 32);
  operator delete();
}

void sub_10037B048(uint64_t a1)
{
  sub_10037AC84(a1 - 40);
  operator delete();
}

uint64_t sub_10037B090(uint64_t a1, uint64_t a2)
{
  return sub_1003627D0(a1 + 632, a2);
}

uint64_t sub_10037B098(uint64_t a1, uint64_t a2)
{
  return sub_100362860(a1 + 632, a2);
}

uint64_t sub_10037B0A0(uint64_t a1, uint64_t a2)
{
  return sub_1003628F0(a1 + 632, a2);
}

uint64_t sub_10037B0A8(uint64_t a1, uint64_t a2)
{
  return sub_100362980(a1 + 632, a2);
}

uint64_t sub_10037B0B0(uint64_t a1, uint64_t a2)
{
  return sub_100362A10(a1 + 632, a2);
}

id sub_10037B0B8(uint64_t a1, void *a2)
{
  return sub_10032CCDC(a1 + 2056, a2);
}

void sub_10037B0C0(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLMicroLocationLogic: Settings updated so updating wifi strategies, allowed anchor models, and checking enabled flags", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "CLMicroLocationLogic: Settings updated so updating wifi strategies, allowed anchor models, and checking enabled flags", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadSettings()", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  sub_10035BE7C(a1 + 632);
  sub_10037AA4C(a1);
  sub_10037A3F0(a1);
}

void sub_10037B268(uint64_t a1)
{
  NSObject *v2;
  _QWORD *v3;
  int v4;
  char *v5;
  int v6;
  int v7;
  void **v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  _BOOL4 v18;
  void *__p[2];
  char v20;
  uint8_t buf[4];
  int v22;
  __int16 v23;
  const char *v24;
  __int16 v25;
  int v26;
  __int16 v27;
  _QWORD *v28;
  __int16 v29;
  char *v30;
  __int16 v31;
  int v32;
  __int16 v33;
  int v34;
  __int16 v35;
  void **v36;
  __int16 v37;
  int v38;
  __int16 v39;
  int v40;
  __int16 v41;
  int v42;
  __int16 v43;
  int v44;
  __int16 v45;
  int v46;
  __int16 v47;
  int v48;
  __int16 v49;
  int v50;
  __int16 v51;
  int v52;
  __int16 v53;
  int v54;
  __int16 v55;
  _BOOL4 v56;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v3 = (_QWORD *)(a1 + 56);
    if (*(char *)(a1 + 79) < 0)
      v3 = (_QWORD *)*v3;
    v4 = *(unsigned __int8 *)(a1 + 48);
    v5 = (char *)operator new(0x28uLL);
    *(_OWORD *)v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
    *(_QWORD *)(v5 + 29) = 0;
    sub_100261F9C(a1 + 80, v5);
    v6 = *(unsigned __int8 *)(a1 + 49);
    v7 = *(unsigned __int8 *)(a1 + 50);
    sub_1002EC7C4(*(_BYTE *)(a1 + 52), __p);
    if (v20 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    v9 = *(_DWORD *)(a1 + 96);
    v10 = *(_DWORD *)(a1 + 100);
    v11 = *(unsigned __int8 *)(a1 + 104);
    v12 = *(unsigned __int8 *)(a1 + 119);
    v13 = *(unsigned __int8 *)(a1 + 116);
    v14 = *(_DWORD *)(a1 + 108);
    v15 = *(_DWORD *)(a1 + 112);
    v16 = *(unsigned __int8 *)(a1 + 117);
    v17 = *(unsigned __int8 *)(a1 + 118);
    v18 = *(_BYTE *)(a1 + 120) == 0;
    *(_DWORD *)buf = 68293123;
    v23 = 2082;
    v22 = 0;
    v24 = "";
    v25 = 1026;
    v26 = v4;
    v27 = 2081;
    v28 = v3;
    v29 = 2081;
    v30 = v5;
    v31 = 1026;
    v32 = v6;
    v33 = 1026;
    v34 = v7;
    v35 = 2081;
    v36 = v8;
    v37 = 1026;
    v38 = v9;
    v39 = 1026;
    v40 = v10;
    v41 = 1026;
    v42 = v11;
    v43 = 1026;
    v44 = v12;
    v45 = 1026;
    v46 = v13;
    v47 = 1026;
    v48 = v14;
    v49 = 1026;
    v50 = v15;
    v51 = 1026;
    v52 = v16;
    v53 = 1026;
    v54 = v17;
    v55 = 1026;
    v56 = v18;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic State\", \"enabled\":%{public}hhd, \"LOI Type\":%{private, location:escape_only}s, \"LOI ID\":%{private, location:escape_only}s, \"locationServicesEnabled\":%{public}hhd, \"significantLocationsEnabled\":%{public}hhd, \"ScanActivity\":%{private, location:escape_only}s, \"Localizing Counter\":%{public}d, \"Recording Counter\":%{public}d, \"displayOn\":%{public}hhd, \"isOnLockScreen\":%{public}hhd, \"isWiFiErrorRetryEnabled\":%{public}hhd, \"WiFi Error Retry Counter\":%{public}d, \"WiFi Error Retry Disabled Period Counter\":%{public}d, \"isLowNumberOfObservation\":%{public}hhd, \"isLowPowerMode\":%{public}hhd, \"isBluetoothDisabled\":%{public}hhd}", buf, 0x7Eu);
    if (v20 < 0)
      operator delete(__p[0]);
    operator delete(v5);
  }
  sub_10033FE4C(a1 + 1808);
}

void sub_10037B498(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10037B4B8(uint64_t a1)
{
  return a1 + 2584;
}

uint64_t sub_10037B4C0(uint64_t a1, const std::string *a2, void *a3, void *a4, void *a5)
{
  NSObject *v10;
  const std::string *v11;
  _DWORD v13[2];
  __int16 v14;
  const char *v15;
  __int16 v16;
  const std::string *v17;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v10 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v11 = a2;
    else
      v11 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    v13[0] = 68289282;
    v13[1] = 0;
    v14 = 2082;
    v15 = "";
    v16 = 2082;
    v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic: client request donate truth label (time window based)\", \"client\":%{public, location:escape_only}s}", (uint8_t *)v13, 0x1Cu);
  }
  return sub_100370CFC(a1 + 584, a2, a3, a4, a5, a1 + 56);
}

std::string *sub_10037B5EC@<X0>(const std::string::value_type *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::string *v5;
  int v6;
  std::string *v7;
  int v9;
  std::string::value_type __s[8];
  uint64_t v11;

  v9 = 0;
  sub_1000B0C3C(&v9);
  *(_QWORD *)__s = sub_1000B0D38((ssize_t)&v9);
  v11 = v4;
  sub_1000B0D18((unsigned int *)&v9);
  sub_1002BBAF4((_QWORD *)a2);
  *(_DWORD *)(a2 + 44) |= 4u;
  v5 = *(std::string **)(a2 + 16);
  if (v5 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::assign(v5, a1);
  if (!sub_100106170(1))
    __assert_rtn("set_receivedeventactiontype", "microlocation.pb.h", 12856, "::CLMicroLocationProto::ReceivedEventActionType_IsValid(value)");
  v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 12) = 1;
  *(_DWORD *)(a2 + 44) = v6 | 0xA;
  v7 = *(std::string **)(a2 + 24);
  if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  return std::string::assign(v7, __s, 0x10uLL);
}

void sub_10037B740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10)
{
  sub_1000B0D18(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_10037B76C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2552) + 112))(*(_QWORD *)(a1 + 2552));
}

BOOL sub_10037B77C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  _QWORD *v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  _QWORD *v12;
  int v13;
  _DWORD *v14;
  int v15;
  int v16;
  int v18;
  int *v19;
  int v21;
  _BOOL4 v23;
  int v24;
  int v25;
  _BOOL4 v27;

  v5 = (_QWORD *)(a1 + 56);
  v6 = *(unsigned __int8 *)(a1 + 79);
  if (*(char *)(a1 + 79) < 0)
  {
    v8 = *(_QWORD *)(a1 + 64);
    if (v8 != 6)
      goto LABEL_35;
    v7 = (_QWORD *)*v5;
  }
  else
  {
    if (v6 == 4)
      goto LABEL_37;
    v7 = (_QWORD *)(a1 + 56);
    if (v6 != 6)
      return 0;
  }
  v9 = *(_DWORD *)v7;
  v10 = *((unsigned __int16 *)v7 + 2);
  if (v9 == 1953723747 && v10 == 28015)
  {
    v13 = *((char *)a2 + 23);
    if (v13 < 0)
    {
      if (a2[1] != 4)
        goto LABEL_11;
      v14 = (_DWORD *)*a2;
    }
    else
    {
      v14 = a2;
      if (v13 != 4)
        goto LABEL_11;
    }
    if (*v14 == 1701670760)
      return 1;
  }
LABEL_11:
  if ((v6 & 0x80) != 0)
  {
    v8 = *(_QWORD *)(a1 + 64);
    if (v8 != 6)
      goto LABEL_35;
    v12 = (_QWORD *)*v5;
LABEL_20:
    v15 = *(_DWORD *)v12;
    v16 = *((unsigned __int16 *)v12 + 2);
    if (v15 != 1953723747 || v16 != 28015)
      goto LABEL_24;
    v18 = *((char *)a2 + 23);
    if (v18 < 0)
    {
      if (a2[1] == 7)
      {
        v19 = (int *)*a2;
        goto LABEL_55;
      }
    }
    else
    {
      v19 = (int *)a2;
      if (v18 == 7)
      {
LABEL_55:
        v24 = *v19;
        v25 = *(int *)((char *)v19 + 3);
        v27 = v24 != 1852534389 || v25 != 1853321070;
        if (a5 == 2 && !v27)
          return 1;
      }
    }
LABEL_24:
    if ((v6 & 0x80) == 0)
    {
      if (v6 != 4)
        return 0;
      goto LABEL_37;
    }
    v8 = *(_QWORD *)(a1 + 64);
LABEL_35:
    if (v8 != 4)
      return 0;
    v5 = (_QWORD *)*v5;
    goto LABEL_37;
  }
  if (v6 != 4)
  {
    v12 = (_QWORD *)(a1 + 56);
    if (v6 != 6)
      return 0;
    goto LABEL_20;
  }
LABEL_37:
  if (*(_DWORD *)v5 != 1701670760)
    return 0;
  v21 = *((char *)a2 + 23);
  if (v21 < 0)
  {
    if (a2[1] != 7)
      return 0;
    a2 = (uint64_t *)*a2;
  }
  else if (v21 != 7)
  {
    return 0;
  }
  v23 = *(_DWORD *)a2 != 1852534389 || *(_DWORD *)((char *)a2 + 3) != 1853321070;
  return a5 == 11 && !v23;
}

void sub_10037B94C(uint64_t a1, uint64_t a2, char a3)
{
  void *__p[2];
  uint64_t v5;
  __int128 v6;
  char v7;
  __int128 v8;
  char v9;

  if (*(_BYTE *)(a1 + 48))
  {
    if ((a3 - 3) > 0xFDu)
    {
      sub_100359E44(a2, &v8);
      if (*(char *)(a1 + 79) < 0)
      {
        sub_100115CE4(__p, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
      }
      else
      {
        *(_OWORD *)__p = *(_OWORD *)(a1 + 56);
        v5 = *(_QWORD *)(a1 + 72);
      }
      v6 = v8;
      v7 = v9;
      sub_10036E2FC(a1 + 584, (uint64_t)__p);
    }
    sub_1018F7E90();
  }
  sub_1018F7D10();
}

void sub_10037BD4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;

  sub_1002DF2E0(&a20);
  sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)(v20 - 192));
  _Unwind_Resume(a1);
}

uint64_t sub_10037BD94()
{
  CFStringRef v0;
  unsigned int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsLocalizeWithRecordingMeasurements", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return v1;
  else
    return 0;
}

void sub_10037BE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10037BE6C(uint64_t a1, uint64_t a2, char a3)
{
  sub_10037B94C(a1 - 8, a2, a3);
}

void sub_10037BE74(uint64_t a1, uint64_t a2, int a3)
{
  __n128 v5;
  char v6;

  sub_10036FE74((uint64_t *)(a1 + 584), a2);
  if (a3)
  {
    sub_1002B2618(a1 + 1616, &v5);
    if (v6)
      sub_1002A0F60(a1 + 136, &v5);
  }
}

void sub_10037BEF4(uint64_t a1, uint64_t a2, int a3)
{
  sub_10037BE74(a1 - 8, a2, a3);
}

void sub_10037BEFC(uint64_t a1, uint64_t a2)
{
  sub_10036FF40((uint64_t *)(a1 + 584), a2);
}

void sub_10037BF04(uint64_t a1, uint64_t a2)
{
  sub_10036FF40((uint64_t *)(a1 + 576), a2);
}

void sub_10037BF0C(uint64_t a1, int a2)
{
  int v4;
  _QWORD v5[3];
  uint64_t *v6;
  _QWORD *v7[2];
  int v8;

  sub_10035BE84((_BYTE *)(a1 + 632));
  if (a2 == 2)
  {
    v7[0] = 0;
    v7[1] = 0;
    memset(v5, 0, sizeof(v5));
    v6 = (uint64_t *)v7;
    v8 = 3;
    v4 = 3;
    sub_1000C6190(&v6, &v4, &v4);
    sub_10037BFC4(a1, (uint64_t)v5);
    sub_100008848((uint64_t)&v6, v7[0]);
  }
  else
  {
    sub_10037C358(a1, 2u);
  }
}

void sub_10037BFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  uint64_t v14;

  sub_100008848(v14, a14);
  _Unwind_Resume(a1);
}

void sub_10037BFC4(uint64_t a1, uint64_t a2)
{
  CLOSTransaction *v4;
  uint64_t **v5;
  NSObject *v6;
  unsigned int v7;
  __CFString *v8;
  const char *v9;
  uint8_t *v10;
  void **v11[4];
  uint8_t buf[8];
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  void *__p;
  void *v17;
  uint64_t v18;
  __n128 v19;
  char v20;
  __n128 v21;
  char v22;

  v4 = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "com.apple.locationd.microlocation.stop-recording");
  sub_10035D134(a1 + 632);
  sub_10037D5A4((unsigned __int8 *)a1);
  if (sub_100184A10(a1 + 640))
  {
    *(_DWORD *)buf = 0;
    sub_1000C6190((uint64_t **)(a2 + 24), (int *)buf, buf);
  }
  if (*(_DWORD *)(a2 + 48) == 4)
  {
    sub_10038E2F0((uint64_t *)buf);
    sub_10036E590(a1 + 584, (unint64_t *)buf, a2);
    sub_100067AC4((uint64_t)&v14);
  }
  if (sub_10037BD94())
  {
    sub_1002B2618(a1 + 1616, &v21);
    v19 = v21;
    v20 = v22;
    *(_QWORD *)buf = 0;
    v13 = 0;
    v14 = 0;
    memset(v11, 0, 24);
    sub_10037CBB8(a1, (uint64_t)&v19, (uint64_t *)buf, (uint64_t *)v11, 0);
    __p = 0;
    v17 = 0;
    v18 = 0;
    v13 = 0;
    v14 = 0;
    *(_QWORD *)buf = 0;
    v15 = 0;
    if (!v22
      || (v5 = (uint64_t **)sub_10033E05C(a1 + 1808), sub_1002A05A0((_QWORD *)(a1 + 136), &v21, v5, (uint64_t)buf), !v22))
    {
      sub_10028DF3C();
    }
    sub_10033DD54(a1 + 1808, (uint64_t *)buf, v21.n128_i64[0], v21.n128_i64[1]);
    sub_10036E9C0(a1 + 584, v15, (int **)&__p);
    if (__p)
    {
      v17 = __p;
      operator delete(__p);
    }
    v11[0] = (void **)buf;
    sub_100385928(v11);
  }
  sub_10036E2A0(a1 + 584);
  *(_DWORD *)(a1 + 100) = 0;
  sub_1003799EC(a1 + 48);
  if (qword_1022A0100 != -1)
    dispatch_once(&qword_1022A0100, &stru_102131A60);
  v6 = qword_1022A0108;
  if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Recording stopped", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0100 != -1)
      dispatch_once(&qword_1022A0100, &stru_102131A60);
    LOWORD(v11[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0108, 0, "Recording stopped", v11, 2);
    v10 = (uint8_t *)v9;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopRecording(RecordingMetaInformation &)", "%s\n", v9);
    if (v10 != buf)
      free(v10);
  }
  sub_10033F7CC(a1 + 1808, a2);
  sub_1002B09E0(a1 + 1616, *(_DWORD *)(a2 + 48) != 2, 5u);
  v7 = *(_DWORD *)(a2 + 48) - 1;
  if (v7 > 3)
    v8 = 0;
  else
    v8 = off_102131A80[v7];
  (*(void (**)(_QWORD, __CFString *))(**(_QWORD **)(a1 + 2560) + 64))(*(_QWORD *)(a1 + 2560), v8);

}

void sub_10037C328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_10037C358(uint64_t a1, unsigned int a2)
{
  CLOSTransaction *v4;
  uint64_t **v5;
  NSObject *v6;
  _BOOL4 v7;
  int v8;
  NSObject *v9;
  CFStringRef v10;
  int v11;
  double v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  double v16;
  double Current;
  double v18;
  double v19;
  BOOL v20;
  double v21;
  _BOOL4 v22;
  NSObject *v23;
  const char *v24;
  uint8_t *v25;
  const char *v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD v29[7];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  void *__p;
  void *v35;
  uint64_t v36;
  uint8_t buf[8];
  __int128 v38;
  __n128 v39;
  char v40;
  __n128 v41;
  char v42;

  v4 = -[CLOSTransaction initWithDescription:]([CLOSTransaction alloc], "initWithDescription:", "com.apple.locationd.microlocation.stop-localizing");
  sub_10035D134(a1 + 632);
  sub_1002B2618(a1 + 1616, &v41);
  sub_10037D5A4((unsigned __int8 *)a1);
  v39 = v41;
  v40 = v42;
  *(_QWORD *)buf = 0;
  v38 = 0uLL;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  sub_10037CBB8(a1, (uint64_t)&v39, (uint64_t *)buf, &v30, a2);
  __p = 0;
  v35 = 0;
  v36 = 0;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  v33 = 0;
  if (!v42)
    goto LABEL_43;
  v5 = (uint64_t **)sub_10033E05C(a1 + 1808);
  sub_1002A05A0((_QWORD *)(a1 + 136), &v41, v5, (uint64_t)&v30);
  sub_10036E9C0(a1 + 584, v33, (int **)&__p);
  *(_DWORD *)(a1 + 96) = 0;
  sub_1003799EC(a1 + 48);
  if (qword_1022A0100 != -1)
    dispatch_once(&qword_1022A0100, &stru_102131A60);
  v6 = qword_1022A0108;
  if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Localization stopped", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0100 != -1)
      dispatch_once(&qword_1022A0100, &stru_102131A60);
    LOWORD(v29[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0108, 0, "Localization stopped", v29, 2);
    v25 = (uint8_t *)v24;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopLocalizing(LocalizationStopReason)", "%s\n", v24);
    if (v25 != buf)
      free(v25);
  }
  v7 = sub_1002B1024(a1 + 1616);
  v8 = sub_1002B1044(a1 + 1616);
  if (sub_10037D8E4(a1, (uint64_t)&v30, v7, v8))
  {
    if (sub_1002B104C(a1 + 1616) && !sub_1002EC99C(a2))
    {
      sub_1001E4804(buf);
      v29[0] = 0;
      v10 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsLocalizationRescheduleDelay", 0x8000100u, kCFAllocatorNull);
      v11 = sub_1001FD9FC(*(uint64_t *)buf, (uint64_t)v10, v29);
      CFRelease(v10);
      v12 = *(double *)v29;
      v13 = (std::__shared_weak_count *)v38;
      if ((_QWORD)v38)
      {
        v14 = (unint64_t *)(v38 + 8);
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      v16 = *(double *)(a1 + 1720);
      Current = j__CFAbsoluteTimeGetCurrent();
      v18 = 5.0;
      if (v11)
        v18 = v12;
      v19 = (v18 - (Current - v16)) * 1000.0;
      v20 = Current - v16 < v18;
      v21 = 0.0;
      if (v20)
        v21 = v19;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 2560) + 128))(*(_QWORD *)(a1 + 2560), (uint64_t)v21);
      sub_10037B5EC("InternalClientLogic", (uint64_t)v29);
      sub_10031C740((uint64_t)v29, 0, 0, 3u, (uint64_t)buf, Current);
      sub_1002AF6E8(a1 + 1616, (uint64_t)buf, 1);
      sub_1002DF2E0(buf);
      sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)v29);
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289026;
        *(_DWORD *)&buf[4] = 0;
        LOWORD(v38) = 2082;
        *(_QWORD *)((char *)&v38 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"decided to reschedule a localization but not rescheduling because not spectating\"}", buf, 0x12u);
      }
    }
  }
  sub_10036E2A0(a1 + 584);
  if (!v42)
LABEL_43:
    sub_10028DF3C();
  sub_10033DD54(a1 + 1808, &v30, v41.n128_i64[0], v41.n128_i64[1]);
  v22 = sub_1002EC99C(a2);
  if ((sub_1002B09E0(a1 + 1616, !v22, 5u) & 1) == 0)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v23 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Cannot serve queued record requests because we're no longer enabled", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      LOWORD(v29[0]) = 0;
      LODWORD(v28) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Cannot serve queued record requests because we're no longer enabled", v29, v28);
      v27 = (uint8_t *)v26;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopLocalizing(LocalizationStopReason)", "%s\n", v26);
      if (v27 != buf)
        free(v27);
    }
    (*(void (**)(_QWORD, const __CFString *))(**(_QWORD **)(a1 + 2560) + 64))(*(_QWORD *)(a1 + 2560), CFSTR("requestMicroLocationRecordingScan failed internally, MicroLocation is not enabled"));
  }

  if (__p)
  {
    v35 = __p;
    operator delete(__p);
  }
  *(_QWORD *)buf = &v30;
  sub_100385928((void ***)buf);
}

void sub_10037C988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_10037E1A8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10037C9FC(uint64_t a1, int a2)
{
  sub_10037BF0C(a1 - 8, a2);
}

void sub_10037CA04(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  NSObject *v6;
  NSObject *v7;
  int v8;
  int v9;
  __int16 v10;
  const char *v11;
  __n128 v12;
  char v13;
  __n128 v14;
  char v15;

  sub_1002B2618(a1 + 1616, &v14);
  if (v15)
  {
    v12 = v14;
    v13 = v15;
    sub_10037CBB8(a1, (uint64_t)&v12, a2, a3, 0);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v8 = 68289026;
      v9 = 0;
      v10 = 2082;
      v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"updateLocalizationConfidenceAndReasonsIfNeeded, no current localization\"}", (uint8_t *)&v8, 0x12u);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v7 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      v8 = 68289026;
      v9 = 0;
      v10 = 2082;
      v11 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "updateLocalizationConfidenceAndReasonsIfNeeded, no current localization", "{\"msg%{public}.0s\":\"updateLocalizationConfidenceAndReasonsIfNeeded, no current localization\"}", (uint8_t *)&v8, 0x12u);
    }
  }
}

void sub_10037CBB8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, unsigned int a5)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  int v26;
  NSObject *v27;
  char *v28;
  char *v29;
  NSObject *v30;
  NSObject *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  int v40;
  unint64_t v41;
  int v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  int v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  int v78;
  NSObject *v79;
  int v80;
  void *v81;
  char *v82;
  char *v83;
  void *__p;
  char *v85;
  char *v86;
  uint8_t buf[4];
  int v88;
  __int16 v89;
  const char *v90;
  __int16 v91;
  uint64_t v92;
  __int16 v93;
  int v94;

  if (*(_BYTE *)(a2 + 16))
  {
    __p = 0;
    v85 = 0;
    v86 = 0;
    v81 = 0;
    v82 = 0;
    v83 = 0;
    if (sub_100184A10(a1 + 640))
    {
      v10 = (v85 - (_BYTE *)__p) >> 2;
      v11 = v10 + 1;
      if ((unint64_t)(v10 + 1) >> 62)
        sub_100259694();
      v12 = v86 - (_BYTE *)__p;
      if ((v86 - (_BYTE *)__p) >> 1 > v11)
        v11 = v12 >> 1;
      if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL)
        v13 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v13 = v11;
      if (v13)
        v14 = (char *)sub_100260634((uint64_t)&v86, v13);
      else
        v14 = 0;
      v15 = &v14[4 * v10];
      *(_DWORD *)v15 = 0;
      __p = v15;
      v86 = &v14[4 * v13];
      v85 = v15 + 4;
      v16 = v82;
      if (v82 >= v83)
      {
        v18 = (char *)v81;
        v19 = (v82 - (_BYTE *)v81) >> 2;
        v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 62)
          sub_100259694();
        v21 = v83 - (_BYTE *)v81;
        if ((v83 - (_BYTE *)v81) >> 1 > v20)
          v20 = v21 >> 1;
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL)
          v22 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v22 = v20;
        if (v22)
        {
          v23 = (char *)sub_100260634((uint64_t)&v83, v22);
          v18 = (char *)v81;
          v16 = v82;
        }
        else
        {
          v23 = 0;
        }
        v24 = &v23[4 * v19];
        v25 = &v23[4 * v22];
        *(_DWORD *)v24 = 0;
        v17 = v24 + 4;
        while (v16 != v18)
        {
          v26 = *((_DWORD *)v16 - 1);
          v16 -= 4;
          *((_DWORD *)v24 - 1) = v26;
          v24 -= 4;
        }
        v81 = v24;
        v82 = v17;
        v83 = v25;
        if (v18)
          operator delete(v18);
      }
      else
      {
        *(_DWORD *)v82 = 0;
        v17 = v16 + 4;
      }
      v82 = v17;
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v27 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289026;
        v88 = 0;
        v89 = 2082;
        v90 = "";
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"update confidence of localization request due to wifi scan error\"}", buf, 0x12u);
      }
    }
    if (a5)
    {
      if ((sub_1002EC974(a5) & 0xFF00000000) != 0)
      {
        v28 = v85;
        if (v85 >= v86)
        {
          v32 = (char *)__p;
          v33 = (v85 - (_BYTE *)__p) >> 2;
          v34 = v33 + 1;
          if ((unint64_t)(v33 + 1) >> 62)
            sub_100259694();
          v35 = v86 - (_BYTE *)__p;
          if ((v86 - (_BYTE *)__p) >> 1 > v34)
            v34 = v35 >> 1;
          if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL)
            v36 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v36 = v34;
          if (v36)
          {
            v37 = (char *)sub_100260634((uint64_t)&v86, v36);
            v32 = (char *)__p;
            v28 = v85;
          }
          else
          {
            v37 = 0;
          }
          v38 = &v37[4 * v33];
          v39 = &v37[4 * v36];
          *(_DWORD *)v38 = 1;
          v29 = v38 + 4;
          while (v28 != v32)
          {
            v40 = *((_DWORD *)v28 - 1);
            v28 -= 4;
            *((_DWORD *)v38 - 1) = v40;
            v38 -= 4;
          }
          __p = v38;
          v85 = v29;
          v86 = v39;
          if (v32)
            operator delete(v32);
        }
        else
        {
          *(_DWORD *)v85 = 1;
          v29 = v28 + 4;
        }
        v85 = v29;
        v41 = sub_1002EC974(a5);
        v42 = v41;
        if ((v41 & 0xFF00000000) == 0)
          sub_10028DF3C();
        v43 = v82;
        if (v82 >= v83)
        {
          v45 = (char *)v81;
          v46 = (v82 - (_BYTE *)v81) >> 2;
          v47 = v46 + 1;
          if ((unint64_t)(v46 + 1) >> 62)
            sub_100259694();
          v48 = v83 - (_BYTE *)v81;
          if ((v83 - (_BYTE *)v81) >> 1 > v47)
            v47 = v48 >> 1;
          if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFFCLL)
            v49 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v49 = v47;
          if (v49)
          {
            v50 = (char *)sub_100260634((uint64_t)&v83, v49);
            v45 = (char *)v81;
            v43 = v82;
          }
          else
          {
            v50 = 0;
          }
          v51 = &v50[4 * v46];
          v52 = &v50[4 * v49];
          *(_DWORD *)v51 = v42;
          v44 = v51 + 4;
          while (v43 != v45)
          {
            v53 = *((_DWORD *)v43 - 1);
            v43 -= 4;
            *((_DWORD *)v51 - 1) = v53;
            v51 -= 4;
          }
          v81 = v51;
          v82 = v44;
          v83 = v52;
          if (v45)
            operator delete(v45);
        }
        else
        {
          *(_DWORD *)v82 = v41;
          v44 = v43 + 4;
        }
        v82 = v44;
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        v54 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 68289538;
          v88 = 0;
          v89 = 2082;
          v90 = "";
          v91 = 2050;
          v92 = a5;
          v93 = 1026;
          v94 = 1;
          _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"update confidence of localization request due to localization stop reason\", \"stopReason\":%{public}lu, \"confidence level\":%{public}d}", buf, 0x22u);
        }
      }
      else
      {
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        v30 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 68289282;
          v88 = 0;
          v89 = 2082;
          v90 = "";
          v91 = 2050;
          v92 = a5;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"stopReason != LocalizationStopReason::CompletedSuccessfully, but stopReasonToConfidenceReason returned nullopt! shouldn't happen\", \"stopReason\":%{public}lu}", buf, 0x1Cu);
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131A40);
        }
        v31 = qword_1022A00F8;
        if (os_signpost_enabled((os_log_t)qword_1022A00F8))
        {
          *(_DWORD *)buf = 68289282;
          v88 = 0;
          v89 = 2082;
          v90 = "";
          v91 = 2050;
          v92 = a5;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v31, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "stopReason != LocalizationStopReason::CompletedSuccessfully, but stopReasonToConfidenceReason returned nullopt! shouldn't happen", "{\"msg%{public}.0s\":\"stopReason != LocalizationStopReason::CompletedSuccessfully, but stopReasonToConfidenceReason returned nullopt! shouldn't happen\", \"stopReason\":%{public}lu}", buf, 0x1Cu);
        }
      }
    }
    v56 = *a3;
    v55 = a3[1];
    if (*a3 != v55 && v55 - v56 == a4[1] - *a4)
    {
      v57 = 0;
      do
      {
        v58 = v85;
        if (v85 >= v86)
        {
          v60 = (char *)__p;
          v61 = (v85 - (_BYTE *)__p) >> 2;
          v62 = v61 + 1;
          if ((unint64_t)(v61 + 1) >> 62)
            sub_100259694();
          v63 = v86 - (_BYTE *)__p;
          if ((v86 - (_BYTE *)__p) >> 1 > v62)
            v62 = v63 >> 1;
          if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL)
            v64 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v64 = v62;
          if (v64)
          {
            v65 = (char *)sub_100260634((uint64_t)&v86, v64);
            v60 = (char *)__p;
            v58 = v85;
          }
          else
          {
            v65 = 0;
          }
          v66 = &v65[4 * v61];
          *(_DWORD *)v66 = *(_DWORD *)(v56 + 4 * v57);
          v59 = v66 + 4;
          while (v58 != v60)
          {
            v67 = *((_DWORD *)v58 - 1);
            v58 -= 4;
            *((_DWORD *)v66 - 1) = v67;
            v66 -= 4;
          }
          __p = v66;
          v85 = v59;
          v86 = &v65[4 * v64];
          if (v60)
            operator delete(v60);
        }
        else
        {
          *(_DWORD *)v85 = *(_DWORD *)(v56 + 4 * v57);
          v59 = v58 + 4;
        }
        v85 = v59;
        v68 = *a4;
        v69 = v82;
        if (v82 >= v83)
        {
          v71 = (char *)v81;
          v72 = (v82 - (_BYTE *)v81) >> 2;
          v73 = v72 + 1;
          if ((unint64_t)(v72 + 1) >> 62)
            sub_100259694();
          v74 = v83 - (_BYTE *)v81;
          if ((v83 - (_BYTE *)v81) >> 1 > v73)
            v73 = v74 >> 1;
          if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL)
            v75 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v75 = v73;
          if (v75)
          {
            v76 = (char *)sub_100260634((uint64_t)&v83, v75);
            v71 = (char *)v81;
            v69 = v82;
          }
          else
          {
            v76 = 0;
          }
          v77 = &v76[4 * v72];
          *(_DWORD *)v77 = *(_DWORD *)(v68 + 4 * v57);
          v70 = v77 + 4;
          while (v69 != v71)
          {
            v78 = *((_DWORD *)v69 - 1);
            v69 -= 4;
            *((_DWORD *)v77 - 1) = v78;
            v77 -= 4;
          }
          v81 = v77;
          v82 = v70;
          v83 = &v76[4 * v75];
          if (v71)
            operator delete(v71);
        }
        else
        {
          *(_DWORD *)v82 = *(_DWORD *)(v68 + 4 * v57);
          v70 = v69 + 4;
        }
        v82 = v70;
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        v79 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
        {
          v80 = *(_DWORD *)(*a3 + 4 * v57);
          *(_DWORD *)buf = 68289282;
          v88 = 0;
          v89 = 2082;
          v90 = "";
          v91 = 1026;
          LODWORD(v92) = v80;
          _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"update confidence of localization request\", \"confidence level\":%{public}d}", buf, 0x18u);
        }
        ++v57;
        v56 = *a3;
      }
      while (v57 < (a3[1] - *a3) >> 2);
    }
    if (!*(_BYTE *)(a2 + 16))
      sub_10028DF3C();
    sub_1002A0B68(a1 + 136, (_QWORD *)a2, (uint64_t *)&__p, &v81);
    if (v81)
    {
      v82 = (char *)v81;
      operator delete(v81);
    }
    if (__p)
    {
      v85 = (char *)__p;
      operator delete(__p);
    }
  }
}

void sub_10037D47C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  if (a18)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

void sub_10037D4C4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_10037CA04(a1 - 8, a2, a3);
}

uint64_t sub_10037D4CC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 128))(*(_QWORD *)(a1 + 2560));
}

uint64_t sub_10037D4DC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2552) + 128))(*(_QWORD *)(a1 + 2552));
}

void sub_10037D4EC(uint64_t a1, int a2)
{
  sub_1003606E0(a1 + 632, a2);
}

void sub_10037D4F4(uint64_t a1, int a2)
{
  sub_1003606E0(a1 + 624, a2);
}

void sub_10037D4FC(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 632;
  sub_10036088C((_BYTE *)(a1 + 632));
  sub_1003606E0(v1, 0);
}

void sub_10037D528(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 624;
  sub_10036088C((_BYTE *)(a1 + 624));
  sub_1003606E0(v1, 0);
}

void sub_10037D554(uint64_t a1)
{
  _BYTE *v1;

  v1 = (_BYTE *)(a1 + 632);
  sub_100360544(a1 + 632);
  sub_100360A40(v1);
}

void sub_10037D57C(uint64_t a1)
{
  _BYTE *v1;

  v1 = (_BYTE *)(a1 + 624);
  sub_100360544(a1 + 624);
  sub_100360A40(v1);
}

uint64_t sub_10037D5A4(unsigned __int8 *a1)
{
  int v2;
  int v3;
  int v4;
  CFStringRef v5;
  int v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int v13;
  NSObject *v14;
  NSObject *v15;
  unsigned int v16;
  uint8_t buf[8];
  _BYTE v18[10];
  __int16 v19;
  _BOOL4 v20;

  v2 = a1[52];
  if (v2 == 1)
  {
    v3 = 1;
  }
  else if (v2 == 2)
  {
    v3 = sub_10037BD94();
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[104];
  sub_1001E4804(buf);
  v16 = 0;
  v5 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsUwbRangeLocalizationMinValidSessionTime", 0x8000100u, kCFAllocatorNull);
  v6 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v5, &v16);
  CFRelease(v5);
  v7 = v16;
  v8 = *(std::__shared_weak_count **)v18;
  if (*(_QWORD *)v18)
  {
    v9 = (unint64_t *)(*(_QWORD *)v18 + 8);
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v6)
    v11 = v7;
  else
    v11 = 2500;
  result = sub_100362780((uint64_t)(a1 + 632), v11);
  v13 = result;
  if (!v4 || !a1[120])
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v14 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      v19 = 1026;
      v20 = v4 == 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Setting all BLE measurements as ignored\", \"displayStateOff\":%{public}hhd}", buf, 0x18u);
    }
    if (v3)
    {
      sub_1002B2618((uint64_t)(a1 + 1616), (__n128 *)buf);
      if (!v18[8])
        sub_10028DF3C();
      sub_1002A0868((uint64_t)(a1 + 136), buf);
    }
    result = sub_10036E958((uint64_t)(a1 + 584));
  }
  if (v13)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v15 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      v19 = 1026;
      v20 = 1;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Setting all UWB measurements as ignored\", \"NI session not resumed\":%{public}hhd}", buf, 0x18u);
    }
    if (v3)
    {
      sub_1002B2618((uint64_t)(a1 + 1616), (__n128 *)buf);
      if (!v18[8])
        sub_10028DF3C();
      sub_1002A09E8((uint64_t)(a1 + 136), buf);
    }
    return sub_10036E98C((uint64_t)(a1 + 584));
  }
  return result;
}

void sub_10037D894(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10037D8E4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  NSObject *v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v8;
  int v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  int v14;
  NSObject *v16;
  NSObject *v17;
  _BOOL4 v18;
  int *v19;
  int *i;
  int v21;
  NSObject *v22;
  void **v23;
  NSObject *v24;
  int v25;
  CFStringRef v26;
  int v27;
  int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  int v32;
  NSObject *v33;
  int v34;
  int v35;
  CFStringRef v36;
  int v37;
  int v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  int v42;
  NSObject *v43;
  int v44;
  NSObject *v45;
  int v46;
  NSObject *v47;
  int v48;
  unsigned int v50;
  uint64_t v51;
  void *__p[2];
  char v53;
  uint8_t buf[8];
  _BYTE v55[10];
  __int16 v56;
  _BYTE v57[10];
  __int16 v58;
  _BOOL4 v59;

  if (a4)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v4 = qword_1022A00F8;
    v5 = os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT);
    v6 = 0;
    if (v5)
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v55 = 2082;
      *(_QWORD *)&v55[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will not reschedule, currently in motion\"}", buf, 0x12u);
      return 0;
    }
    return v6;
  }
  v8 = a1;
  v9 = *(_DWORD *)(a2 + 24);
  v11 = *(_DWORD **)(a2 + 32);
  v10 = *(_DWORD **)(a2 + 40);
  if (v11 == v10)
  {
    v14 = 0;
    v50 = 0;
  }
  else
  {
    v12 = *(_DWORD **)(a2 + 32);
    do
    {
      if (*v12 == 1)
        goto LABEL_11;
      ++v12;
    }
    while (v12 != v10);
    v12 = *(_DWORD **)(a2 + 40);
    do
    {
LABEL_11:
      if (*v11 <= 7u && ((1 << *v11) & 0x89) != 0)
      {
        v14 = 1;
        goto LABEL_18;
      }
      ++v11;
    }
    while (v11 != v10);
    v14 = 0;
LABEL_18:
    if (v9 == 3 || v12 == v10)
    {
      v50 = 0;
    }
    else if (a3)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v16 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289026;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v55 = 2082;
        *(_QWORD *)&v55[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will not reschedule a motion trigger due to motion reason\"}", buf, 0x12u);
      }
      v50 = 0;
      v8 = a1;
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v17 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289026;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v55 = 2082;
        *(_QWORD *)&v55[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will reschedule a localization trigger due to motion during prediction\"}", buf, 0x12u);
      }
      v50 = 1;
    }
  }
  v51 = v8;
  v18 = sub_1002B1340(v8 + 1616);
  if (((v9 != 3) & v14 & v18) != 1)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v24 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 68289794;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v55 = 2082;
      *(_QWORD *)&v55[2] = "";
      v56 = 1026;
      *(_DWORD *)v57 = v9 != 3;
      *(_WORD *)&v57[4] = 1026;
      *(_DWORD *)&v57[6] = v14;
      v58 = 1026;
      v59 = v18;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, result is valid or low latency mode is disabled, resetting retry states\", \"confidenceLevelAllowReschedule\":%{public}hhd, \"localizationRetryReasonExists\":%{public}hhd, \"isLowLatencyMode\":%{public}hhd}", buf, 0x24u);
    }
    *(_DWORD *)(v51 + 108) = 0;
    *(_DWORD *)(v51 + 112) = 0;
    *(_BYTE *)(v51 + 116) = 1;
    return v50;
  }
  v19 = *(int **)(a2 + 32);
  for (i = *(int **)(a2 + 40); v19 != i; ++v19)
  {
    v21 = *v19;
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v22 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002EC830(v21, __p);
      v23 = __p;
      if (v53 < 0)
        v23 = (void **)__p[0];
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v55 = 2082;
      *(_QWORD *)&v55[2] = "";
      v56 = 2082;
      *(_QWORD *)v57 = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, result contains reason:\", \"reason\":%{public, location:escape_only}s}", buf, 0x1Cu);
      if (v53 < 0)
        operator delete(__p[0]);
    }
  }
  if (!*(_BYTE *)(v51 + 116))
  {
    v35 = *(_DWORD *)(v51 + 112);
    *(_DWORD *)(v51 + 112) = v35 + 1;
    sub_1001E4804(buf);
    LODWORD(__p[0]) = 0;
    v36 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumLocalizeNumRetryDisabledDueToWiFiError", 0x8000100u, kCFAllocatorNull);
    v37 = sub_1001C1194(*(uint64_t *)buf, (uint64_t)v36, __p);
    CFRelease(v36);
    v38 = (int)__p[0];
    v39 = *(std::__shared_weak_count **)v55;
    if (*(_QWORD *)v55)
    {
      v40 = (unint64_t *)(*(_QWORD *)v55 + 8);
      do
        v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }
    if (v37)
      v42 = v38;
    else
      v42 = 30;
    if (v35 >= v42)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v47 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
      {
        v48 = *(_DWORD *)(v51 + 112) - 1;
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v55 = 2082;
        *(_QWORD *)&v55[2] = "";
        v56 = 1026;
        *(_DWORD *)v57 = v48;
        _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, reached invalid result retry disabled count limit\", \"retry disabled trigger count\":%{public}d}", buf, 0x18u);
      }
      *(_BYTE *)(v51 + 116) = 1;
      *(_DWORD *)(v51 + 112) = 0;
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v43 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
      {
        v44 = *(_DWORD *)(v51 + 112);
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v55 = 2082;
        *(_QWORD *)&v55[2] = "";
        v56 = 1026;
        *(_DWORD *)v57 = v44;
        _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will not retry\", \"retry disabled trigger count\":%{public}d}", buf, 0x18u);
      }
    }
    return v50;
  }
  v25 = *(_DWORD *)(v51 + 108);
  *(_DWORD *)(v51 + 108) = v25 + 1;
  sub_1001E4804(buf);
  LODWORD(__p[0]) = 0;
  v26 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumLocalizeNumRetryDueToWiFiError", 0x8000100u, kCFAllocatorNull);
  v27 = sub_1001C1194(*(uint64_t *)buf, (uint64_t)v26, __p);
  CFRelease(v26);
  v28 = (int)__p[0];
  v29 = *(std::__shared_weak_count **)v55;
  if (*(_QWORD *)v55)
  {
    v30 = (unint64_t *)(*(_QWORD *)v55 + 8);
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  if (v27)
    v32 = v28;
  else
    v32 = 5;
  if (v25 >= v32)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v45 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      v46 = *(_DWORD *)(v51 + 108) - 1;
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v55 = 2082;
      *(_QWORD *)&v55[2] = "";
      v56 = 1026;
      *(_DWORD *)v57 = v46;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, reached invalid result reschedule limit\", \"retried number\":%{public}d}", buf, 0x18u);
    }
    *(_BYTE *)(v51 + 116) = 0;
    *(_DWORD *)(v51 + 108) = 0;
    return v50;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v33 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v34 = *(_DWORD *)(v51 + 108);
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v55 = 2082;
    *(_QWORD *)&v55[2] = "";
    v56 = 1026;
    *(_DWORD *)v57 = v34;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will reschedule a localization trigger due to invalid result\", \"retried count\":%{public}d}", buf, 0x18u);
  }
  return 1;
}

void sub_10037E180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037E1A8(uint64_t a1)
{
  void *v2;
  void **v4;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(_QWORD *)(a1 + 40) = v2;
    operator delete(v2);
  }
  v4 = (void **)a1;
  sub_100385928(&v4);
  return a1;
}

uint64_t *sub_10037E1EC(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  int v4;
  __int128 v5;
  __int128 v6;

  v3 = result;
  v4 = *((unsigned __int8 *)result + 52);
  if (v4 == 1)
  {
    sub_10036F0E8((uint64_t)&v5, 0);
    sub_10036FE38((uint64_t)(v3 + 73), &v5, a2);
    return sub_10029E860(v3 + 17, a2);
  }
  if (v4 == 2)
  {
    sub_10036F0E8((uint64_t)&v6, 0);
    sub_10036FE38((uint64_t)(v3 + 73), &v6, a2);
    result = (uint64_t *)sub_10037BD94();
    if ((result & 1) != 0)
      return sub_10029E860(v3 + 17, a2);
  }
  return result;
}

void sub_10037E288(unsigned __int8 *a1, NSObject *a2, double a3)
{
  uint64_t v6;
  uint64_t *v7;
  NSObject *v8;
  void **v9;
  NSObject *v10;
  void **v11;
  void **v12;
  void *__p[2];
  char v14;
  int v15;
  __int128 v16;
  uint8_t buf[8];
  _BYTE v18[32];
  const char *v19;
  int v20;

  v15 = 0;
  sub_1000B0C3C(&v15);
  *(_QWORD *)&v16 = sub_1000B0D38((ssize_t)&v15);
  *((_QWORD *)&v16 + 1) = v6;
  sub_1002BBD14((uint64_t)__p);
  sub_10037E6F8(&v16, (uint64_t)__p, (uint64_t)buf, a3);
  (*(void (**)(unsigned __int8 *, uint8_t *))(*(_QWORD *)a1 + 152))(a1, buf);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v18[24]);
  sub_1002D2854((wireless_diagnostics::google::protobuf::MessageLite *)__p);
  sub_1000B0D18((unsigned int *)&v15);
  LODWORD(v7) = a1[52];
  if ((_DWORD)v7 == 1)
  {
    sub_10037C358((uint64_t)a1, 0);
    goto LABEL_31;
  }
  if ((_DWORD)v7 == 2)
    goto LABEL_29;
  if (!a1[52])
  {
    a1 = (unsigned __int8 *)&qword_1022A0000;
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v7 = &qword_1022A0000;
    v8 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_FAULT))
    {
      sub_1002EC7C4(0, __p);
      if (v14 >= 0)
        v9 = __p;
      else
        v9 = (void **)__p[0];
      *(_DWORD *)buf = 68289795;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      *(_WORD *)&v18[10] = 2082;
      *(_QWORD *)&v18[12] = v9;
      *(_WORD *)&v18[20] = 2082;
      *(_QWORD *)&v18[22] = "assert";
      *(_WORD *)&v18[30] = 2081;
      v19 = "false";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Invalid MiLo current activity\", \"state\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v14 < 0)
        operator delete(__p[0]);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v10 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      sub_1002EC7C4(0, __p);
      if (v14 >= 0)
        v11 = __p;
      else
        v11 = (void **)__p[0];
      *(_DWORD *)buf = 68289795;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      *(_WORD *)&v18[10] = 2082;
      *(_QWORD *)&v18[12] = v11;
      *(_WORD *)&v18[20] = 2082;
      *(_QWORD *)&v18[22] = "assert";
      *(_WORD *)&v18[30] = 2081;
      v19 = "false";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Invalid MiLo current activity", "{\"msg%{public}.0s\":\"Invalid MiLo current activity\", \"state\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v14 < 0)
        operator delete(__p[0]);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    a2 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      a1 = (unsigned __int8 *)__p;
      sub_1002EC7C4(0, __p);
      if (v14 >= 0)
        v12 = __p;
      else
        v12 = (void **)__p[0];
      *(_DWORD *)buf = 68289795;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v18 = 2082;
      *(_QWORD *)&v18[2] = "";
      *(_WORD *)&v18[10] = 2082;
      *(_QWORD *)&v18[12] = v12;
      *(_WORD *)&v18[20] = 2082;
      *(_QWORD *)&v18[22] = "assert";
      *(_WORD *)&v18[30] = 2081;
      v19 = "false";
      _os_log_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Invalid MiLo current activity\", \"state\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v14 < 0)
        operator delete(__p[0]);
    }
    abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/MicroLocation/CLMicroLocationLogic.mm", 750, "onScanActivityCompleted");
    __break(1u);
LABEL_29:
    *(_QWORD *)&v18[24] = 0;
    v19 = 0;
    *(_QWORD *)buf = 0;
    *(_QWORD *)v18 = 0;
    *(_QWORD *)&v18[8] = 0;
    *(_QWORD *)&v18[16] = &v18[24];
    v20 = 4;
    sub_10037BFC4((uint64_t)a1, (uint64_t)buf);
    sub_100008848((uint64_t)&v18[16], *(_QWORD **)&v18[24]);
  }
LABEL_31:
  sub_10037E780((uint64_t)a1, (int)v7, (uint64_t)a2);
}

void sub_10037E6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_QWORD *a23)
{
  uint64_t v23;

  sub_100008848(v23, a23);
  _Unwind_Resume(a1);
}

void sub_10037E6F8(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  _BYTE v8[304];

  sub_1000B13D8((uint64_t)v8);
  sub_100358E7C((uint64_t)v8, a2);
  sub_1000B0EC8(a3, a1, *(_DWORD *)(a2 + 8), (uint64_t)v8, a4);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_10037E76C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&a9);
  _Unwind_Resume(a1);
}

double sub_10037E780(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  NSDictionary *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v10[2];
  char v11;
  std::string __p;
  _BYTE v13[24];
  _BYTE *v14;
  char v15;
  _QWORD v16[6];
  _QWORD v17[6];

  sub_1002B2828(a3, &__p);
  v5 = sub_1002B15F8((uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  memset(&__p, 0, sizeof(__p));
  v16[0] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "TriggerType", sub_100362E88((__n128 *)(a1 + 632), (__n128 *)&__p).n128_f64[0]);
  v17[0] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v5);
  v16[1] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NumLocalizations");
  v17[1] = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2 == 1);
  v16[2] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NumRecordings");
  v17[2] = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2 == 2);
  v16[3] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "WiFiScanDuration");
  v17[3] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)&__p.__r_.__value_.__l.__data_);
  v16[4] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BTScanDuration");
  v17[4] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)&__p.__r_.__value_.__l.__size_);
  v16[5] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BleActiveScanRate");
  v17[5] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", LODWORD(__p.__r_.__value_.__r.__words[2]));
  v6 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v17, v16, 6);
  v13[0] = 0;
  v15 = 0;
  sub_1015A2E04(v10, "ScanEvent");
  sub_10052E57C(a1 + 2048, (uint64_t)v13, (uint64_t)v10, (const __CFDictionary *)v6);
  if (v11 < 0)
    operator delete(v10[0]);
  if (v15)
  {
    v7 = v14;
    if (v14 == v13)
    {
      v8 = 4;
      v7 = v13;
      goto LABEL_10;
    }
    if (v14)
    {
      v8 = 5;
LABEL_10:
      (*(void (**)(void))(*v7 + 8 * v8))();
    }
  }
  return sub_100362E9C(a1 + 632);
}

void sub_10037E9D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,char *a24,char a25)
{
  char *v26;
  uint64_t v27;

  if (a14 < 0)
    operator delete(__p);
  if (a25)
  {
    v26 = a24;
    if (a24 == &a21)
    {
      v27 = 4;
      v26 = &a21;
    }
    else
    {
      if (!a24)
        goto LABEL_9;
      v27 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v26 + 8 * v27))();
  }
LABEL_9:
  _Unwind_Resume(exception_object);
}

uint64_t sub_10037EA54(uint64_t a1, double *a2, uint64_t a3, int a4, unsigned int a5)
{
  double v8;
  _BYTE v10[48];
  _BYTE v11[136];

  v8 = *a2;
  sub_10037B5EC("InternalClientMotion", (uint64_t)v10);
  sub_10031C740((uint64_t)v10, 0, 0, 3u, (uint64_t)v11, v8);
  sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_1002AE8FC((unsigned __int8 *)(a1 + 1616), (uint64_t)v11, 1, a4, a5);
  return sub_1002DF2E0(v11);
}

void sub_10037EAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_1002DF2E0(va);
  _Unwind_Resume(a1);
}

void sub_10037EB0C(uint64_t a1, int a2)
{
  uint64_t v4;
  CFStringRef v5;
  char v6;
  _BOOL4 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  char v11;
  CFStringRef v12;
  int v13;
  _BOOL4 v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  sub_1002A0E78(a1 + 136);
  v4 = a1 + 1808;
  sub_10033DE58(v4);
  sub_1001E4804(&v20);
  v19 = 0;
  v5 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleEnable", 0x8000100u, kCFAllocatorNull);
  v6 = sub_1001E48E4(v20, (uint64_t)v5, &v19);
  CFRelease(v5);
  v7 = v19;
  v8 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v7)
    v11 = 0;
  else
    v11 = v6;
  if ((v11 & 1) == 0)
  {
    sub_1001E4804(&v20);
    v19 = 0;
    v12 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionInvalidateConfidenceOnMotion", 0x8000100u, kCFAllocatorNull);
    v13 = sub_1001E48E4(v20, (uint64_t)v12, &v19);
    CFRelease(v12);
    v14 = v19;
    v15 = v21;
    if (v21)
    {
      v16 = (unint64_t *)&v21->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v18 = v13 ^ 1;
    if (v14)
      v18 = 1;
    if (!a2)
    {
      if (v18)
        sub_10033DE90(v4, 1);
    }
  }
}

void sub_10037ECA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10037ED10(uint64_t a1, int a2)
{
  double Current;
  int v5;
  NSObject *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  const char *v10;
  int v11;
  const char *v12;
  int v13;
  _QWORD v14[2];
  int v15;
  unsigned int v16;
  int v17;
  double v18;
  __int128 v19;
  uint8_t buf[4];
  int v21;
  __int16 v22;
  const char *v23;
  __int16 v24;
  int v25;
  uint64_t v26;

  Current = j__CFAbsoluteTimeGetCurrent();
  v18 = Current;
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 192))(a1);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v6 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 68289282;
    v21 = 0;
    v22 = 2082;
    v23 = "";
    v24 = 1026;
    v25 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"onInMotion - setting medium confidence and resetting localization error retries\", \"ScreenOn\":%{public}hhd}", buf, 0x18u);
  }
  *(_DWORD *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 116) = 1;
  sub_1002BBEFC(v14);
  if (!sub_1002D7DBC(0))
  {
    v10 = "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)";
    v11 = 17711;
    v12 = "set_status";
    goto LABEL_16;
  }
  v17 |= 4u;
  v15 = 0;
  if (v5)
    v7 = 1;
  else
    v7 = 2;
  if (!sub_10008D1F0(v7))
  {
    v10 = "::CLMicroLocationProto::MotionEvent_ScreenStatus_IsValid(value)";
    v11 = 17804;
    v12 = "set_screenon";
LABEL_16:
    __assert_rtn(v12, "microlocation.pb.h", v11, v10);
  }
  v17 |= 0x10u;
  v16 = v7;
  v13 = 0;
  sub_1000B0C3C(&v13);
  *(_QWORD *)&v19 = sub_1000B0D38((ssize_t)&v13);
  *((_QWORD *)&v19 + 1) = v8;
  sub_10037499C(&v19, (uint64_t)v14, (uint64_t)buf, Current);
  (*(void (**)(uint64_t, uint8_t *))(*(_QWORD *)a1 + 152))(a1, buf);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v26);
  sub_1000B0D18((unsigned int *)&v13);
  sub_1002B0904(a1 + 1616);
  if (a2)
  {
    v9 = a2 == 2;
  }
  else
  {
    sub_10037EB0C(a1, 0);
    v9 = 0;
  }
  sub_10037EA54(a1, &v18, 0, 1, v9);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v14);
}

void sub_10037EF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  uint64_t v11;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1000B0D18(&a10);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_10037EFAC(uint64_t a1)
{
  double Current;
  int v3;
  NSObject *v4;
  unsigned int v5;
  uint64_t v6;
  const char *v7;
  int v8;
  const char *v9;
  int v10;
  _QWORD v11[2];
  int v12;
  unsigned int v13;
  int v14;
  double v15;
  __int128 v16;
  uint8_t buf[4];
  int v18;
  __int16 v19;
  const char *v20;
  __int16 v21;
  int v22;
  uint64_t v23;

  Current = j__CFAbsoluteTimeGetCurrent();
  v15 = Current;
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 192))(a1);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v4 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 68289282;
    v18 = 0;
    v19 = 2082;
    v20 = "";
    v21 = 1026;
    v22 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"onStopMotion\", \"ScreenOn\":%{public}hhd}", buf, 0x18u);
  }
  sub_1002BBEFC(v11);
  if (!sub_1002D7DBC(1u))
  {
    v7 = "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)";
    v8 = 17711;
    v9 = "set_status";
    goto LABEL_16;
  }
  v14 |= 4u;
  v12 = 1;
  if (v3)
    v5 = 1;
  else
    v5 = 2;
  if (!sub_10008D1F0(v5))
  {
    v7 = "::CLMicroLocationProto::MotionEvent_ScreenStatus_IsValid(value)";
    v8 = 17804;
    v9 = "set_screenon";
LABEL_16:
    __assert_rtn(v9, "microlocation.pb.h", v8, v7);
  }
  v14 |= 0x10u;
  v13 = v5;
  v10 = 0;
  sub_1000B0C3C(&v10);
  *(_QWORD *)&v16 = sub_1000B0D38((ssize_t)&v10);
  *((_QWORD *)&v16 + 1) = v6;
  sub_10037499C(&v16, (uint64_t)v11, (uint64_t)buf, Current);
  (*(void (**)(uint64_t, uint8_t *))(*(_QWORD *)a1 + 152))(a1, buf);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v23);
  sub_1000B0D18((unsigned int *)&v10);
  sub_1002B09D8(a1 + 1616);
  if (v3)
  {
    sub_1002B0588(a1 + 1616, 0);
    sub_10037EA54(a1, &v15, 0, 0, 0);
  }
  else
  {
    sub_10037EB0C(a1, 0);
  }
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_10037F1E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  uint64_t v11;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1000B0D18(&a10);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_10037F228(unsigned __int8 *a1)
{
  int v2;
  unsigned __int8 *v3;
  uint64_t v4;
  double Current;
  int v6[34];
  uint64_t v7;
  int v8;
  std::string *v9;
  std::string *v10;
  int v11;
  std::string::value_type __s[8];
  uint64_t v13;

  v2 = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)a1 + 192))(a1);
  v3 = a1 + 1616;
  if (sub_1002B104C((uint64_t)v3) && v2)
  {
    sub_1002BBB1C(&v7);
    v11 |= 4u;
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::assign(v9, "InternalClientMac");
    if (!sub_1002BC6C0(1))
      __assert_rtn("set_recordingrequesttype", "microlocation.pb.h", 13116, "::CLMicroLocationProto::RecordingRequestType_IsValid(value)");
    v11 |= 2u;
    v8 = 1;
    v6[0] = 0;
    sub_1000B0C3C(v6);
    *(_QWORD *)__s = sub_1000B0D38((ssize_t)v6);
    v13 = v4;
    sub_1000B0D18((unsigned int *)v6);
    v11 |= 8u;
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::assign(v10, __s, 0x10uLL);
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_100339450((uint64_t)&v7, 0, 0, 3u, (uint64_t)v6, Current);
    sub_1002B00CC(v3, (uint64_t)v6);
    sub_1002DF2E0(v6);
    sub_1002CAF70((wireless_diagnostics::google::protobuf::MessageLite *)&v7);
  }
}

void sub_10037F3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_1002DF2E0(&a9);
  sub_1002CAF70((wireless_diagnostics::google::protobuf::MessageLite *)(v9 - 88));
  _Unwind_Resume(a1);
}

void sub_10037F420(uint64_t a1)
{
  sub_1002B2490(a1 + 1616, 2);
}

uint64_t sub_10037F42C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  CFStringRef v7;
  int v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  signed int v15;
  CFStringRef v16;
  int v17;
  int v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  signed int v25;
  NSObject *v26;
  uint64_t v27;
  CFStringRef v28;
  int v29;
  int v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  const char *v41;
  uint8_t *v42;
  _DWORD v43[4];
  uint8_t buf[8];
  _BYTE v45[10];
  __int16 v46;
  _BOOL4 v47;
  __int16 v48;
  unint64_t v49;
  __int16 v50;
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  __int16 v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;

  v6 = sub_10037F940();
  sub_1001E4804(buf);
  v43[0] = 0;
  v7 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsScanDurationIncrement", 0x8000100u, kCFAllocatorNull);
  v8 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v7, v43);
  CFRelease(v7);
  v9 = v43[0];
  v10 = *(std::__shared_weak_count **)v45;
  if (*(_QWORD *)v45)
  {
    v11 = (unint64_t *)(*(_QWORD *)v45 + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v8)
    v13 = v9;
  else
    v13 = 500;
  if (!v13)
    return 0;
  v14 = *(unsigned __int8 *)(a1 + 52);
  if (!*(_BYTE *)(a1 + 52))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v26 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "Logic, shouldExtendWifiScan was called when activity is NotSet", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      LOWORD(v43[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Logic, shouldExtendWifiScan was called when activity is NotSet", v43, 2);
      v42 = (uint8_t *)v41;
      sub_100512490("Generic", 1, 0, 0, "cl::chrono::milliseconds CLMicroLocationLogic::requestWifiScanExtension(cl::chrono::milliseconds, size_t)", "%s\n", v41);
      if (v42 != buf)
        free(v42);
    }
    return 0;
  }
  v15 = vcvtpd_s64_f64((double)a2 / (double)v13);
  if (v14 == 1)
  {
    sub_1001E4804(buf);
    v43[0] = 0;
    v28 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsLocalizingDurationMaximumIncrements", 0x8000100u, kCFAllocatorNull);
    v29 = sub_1001C1194(*(uint64_t *)buf, (uint64_t)v28, v43);
    CFRelease(v28);
    v30 = v43[0];
    v31 = *(std::__shared_weak_count **)v45;
    if (*(_QWORD *)v45)
    {
      v32 = (unint64_t *)(*(_QWORD *)v45 + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    if (v29)
      v34 = v30;
    else
      v34 = 4;
    v35 = *(_DWORD *)(a1 + 96);
    v24 = v34 - v35;
    if (v34 - v35 >= v15)
      v25 = v15;
    else
      v25 = v34 - v35;
    *(_DWORD *)(a1 + 96) = v25 + v35;
  }
  else if (v14 == 2)
  {
    sub_1001E4804(buf);
    v43[0] = 0;
    v16 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRecordingDurationMaximumIncrements", 0x8000100u, kCFAllocatorNull);
    v17 = sub_1001C1194(*(uint64_t *)buf, (uint64_t)v16, v43);
    CFRelease(v16);
    v18 = v43[0];
    v19 = *(std::__shared_weak_count **)v45;
    if (*(_QWORD *)v45)
    {
      v20 = (unint64_t *)(*(_QWORD *)v45 + 8);
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v17)
      v22 = v18;
    else
      v22 = 4;
    v23 = *(_DWORD *)(a1 + 100);
    v24 = v22 - v23;
    if (v22 - v23 >= v15)
      v25 = v15;
    else
      v25 = v22 - v23;
    *(_DWORD *)(a1 + 100) = v25 + v23;
  }
  else
  {
    v24 = 0;
    v25 = 0;
  }
  v36 = v13 * v25;
  if (v6 > a3)
    v27 = v36;
  else
    v27 = 0;
  v37 = *(unsigned __int8 *)(a1 + 52);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v38 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    v39 = sub_10037F940();
    *(_DWORD *)buf = 68291074;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v45 = 2082;
    *(_QWORD *)&v45[2] = "";
    v46 = 1026;
    v47 = v6 <= a3;
    v48 = 2050;
    v49 = a3;
    v50 = 2050;
    v51 = v39;
    v52 = 2050;
    v53 = a2;
    v54 = 2050;
    v55 = v13;
    v56 = 2050;
    v57 = v24;
    v58 = 2050;
    v59 = v27;
    v60 = 2050;
    v61 = v37;
    _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"CLMicroLocationLogic:requestWifiScanExtension\", \"requirement for min num measurements met\":%{public}hhd, \"Num measurements\":%{public}lu, \"Minimum num of measurements for scan extension\":%{public}lu, \"requestedExtension\":%{public}lld, \"singleScanIncrement\":%{public}lld, \"remainingExtensions\":%{public}lu, \"extendDuration\":%{public}lld, \"scanActivity\":%{public, location:CLMicroLocationUtils::ScanActivity}lld}", buf, 0x5Eu);
  }
  return v27;
}

void sub_10037F910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037F940()
{
  CFStringRef v0;
  int v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiNumberOfMeasurementsForScanExtension", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 2;
}

void sub_10037FA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10037FA1C(uint64_t a1, std::string *a2, uint64_t a3, uint64_t a4, int a5)
{
  CFStringRef v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *size;
  unint64_t *v13;
  unint64_t v14;
  std::string::size_type v15;
  _BOOL4 v16;
  NSObject *v17;
  std::string *v18;
  std::string *v19;
  std::string *v20;
  std::string *v21;
  NSObject *v22;
  std::string *v23;
  std::string *v24;
  std::string *v25;
  std::string::size_type v26;
  __int128 v27;
  int v28;
  std::string::size_type v29;
  double Current;
  NSObject *v31;
  int v32;
  std::string::size_type v33;
  std::string *v34;
  std::string *v35;
  std::bad_cast *v36;
  std::string __p;
  int v38;
  std::string *v39;
  char v40;
  int v41;
  void *v42[2];
  std::string::size_type v43;
  std::string v44;
  void *__dst[2];
  std::string::size_type v46;
  std::string __str;
  _BYTE buf[28];
  __int16 v49;
  std::string *v50;
  __int16 v51;
  std::string *v52;
  __int16 v53;
  std::string *v54;
  __int128 v55;
  std::string v56;

  *(_QWORD *)&v55 = a3;
  *((_QWORD *)&v55 + 1) = a4;
  sub_1001E4804(&v56);
  memset(buf, 0, 24);
  v8 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsOverrideCurrentRTLOIType", 0x8000100u, kCFAllocatorNull);
  v9 = sub_1000BD5F0((uint64_t)v56.__r_.__value_.__l.__data_, (uint64_t)v8, (std::string *)buf);
  CFRelease(v8);
  if (v9)
  {
    if ((buf[23] & 0x80000000) != 0)
      sub_100115CE4(&__p, *(void **)buf, *(unint64_t *)&buf[8]);
    else
      __p = *(std::string *)buf;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_100115CE4(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      __str = __p;
    }
  }
  else
  {
    sub_1015A2E04(&__str, "");
  }
  if ((buf[23] & 0x80000000) != 0)
    operator delete(*(void **)buf);
  size = (std::__shared_weak_count *)v56.__r_.__value_.__l.__size_;
  if (v56.__r_.__value_.__l.__size_)
  {
    v13 = (unint64_t *)(v56.__r_.__value_.__l.__size_ + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v15 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v15 = __str.__r_.__value_.__l.__size_;
  if (v15)
    std::string::operator=(a2, &__str);
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_100115CE4(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
    v46 = a2->__r_.__value_.__r.__words[2];
  }
  v16 = sub_10037B77C(a1, (uint64_t *)__dst, v10, v11, a5);
  if (SHIBYTE(v46) < 0)
    operator delete(__dst[0]);
  if (v16)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v17 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      memset(&v56, 0, sizeof(v56));
      if ((sub_10026A098(a1 + 80, &v56) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
        sub_10026A9C8((uint64_t)&__p);
      }
      if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v18 = &v56;
      else
        v18 = (std::string *)v56.__r_.__value_.__r.__words[0];
      v19 = (std::string *)(a1 + 56);
      if (*(char *)(a1 + 79) < 0)
        v19 = (std::string *)v19->__r_.__value_.__r.__words[0];
      memset(&v44, 0, sizeof(v44));
      if ((sub_10026A098((uint64_t)&v55, &v44) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
        sub_10026A9C8((uint64_t)&__p);
      }
      v20 = &v44;
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v20 = (std::string *)v44.__r_.__value_.__r.__words[0];
      v21 = a2;
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
        v21 = (std::string *)a2->__r_.__value_.__r.__words[0];
      *(_DWORD *)buf = 68290051;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(_QWORD *)&buf[20] = v18;
      v49 = 2081;
      v50 = v19;
      v51 = 2081;
      v52 = v20;
      v53 = 2081;
      v54 = v21;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Not allowed to switch to new LOI\", \"Current LOI ID\":%{private, location:escape_only}s, \"Current LOI Type\":%{private, location:escape_only}s, \"New LOI ID\":%{private, location:escape_only}s, \"New LOI Type\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v56.__r_.__value_.__l.__data_);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v22 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      memset(&v56, 0, sizeof(v56));
      if ((sub_10026A098(a1 + 80, &v56) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
        sub_10026A9C8((uint64_t)&__p);
      }
      if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v23 = &v56;
      else
        v23 = (std::string *)v56.__r_.__value_.__r.__words[0];
      v24 = (std::string *)(a1 + 56);
      if (*(char *)(a1 + 79) < 0)
        v24 = (std::string *)v24->__r_.__value_.__r.__words[0];
      memset(&v44, 0, sizeof(v44));
      if ((sub_10026A098((uint64_t)&v55, &v44) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
        sub_10026A9C8((uint64_t)&__p);
      }
      v25 = &v44;
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v25 = (std::string *)v44.__r_.__value_.__r.__words[0];
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
        a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
      *(_DWORD *)buf = 68290051;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(_QWORD *)&buf[20] = v23;
      v49 = 2081;
      v50 = v24;
      v51 = 2081;
      v52 = v25;
      v53 = 2081;
      v54 = a2;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Not allowed to switch to new LOI", "{\"msg%{public}.0s\":\"Not allowed to switch to new LOI\", \"Current LOI ID\":%{private, location:escape_only}s, \"Current LOI Type\":%{private, location:escape_only}s, \"New LOI ID\":%{private, location:escape_only}s, \"New LOI Type\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v56.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_100115CE4(v42, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)v42 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      v43 = a2->__r_.__value_.__r.__words[2];
    }
    v26 = *(_QWORD *)(a1 + 72);
    v27 = *(_OWORD *)(a1 + 56);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v42;
    *(_QWORD *)(a1 + 72) = v43;
    *(_OWORD *)v42 = v27;
    v43 = v26;
    if (SHIBYTE(v26) < 0)
      operator delete(v42[0]);
    *(_OWORD *)(a1 + 80) = v55;
    sub_100380474(a1);
    sub_10033D9D4(a1 + 1808, (uint64_t *)a2, v55, *((uint64_t *)&v55 + 1));
    v28 = sub_1002B104C(a1 + 1616);
    sub_1002BBF50((uint64_t)&__p);
    if (!sub_1002BC6E8(a5))
      __assert_rtn("set_reason", "microlocation.pb.h", 18183, "::CLMicroLocationProto::ChangedLoiReason_IsValid(value)");
    v38 = a5;
    v41 |= 0x14u;
    if ((_UNKNOWN *)__p.__r_.__value_.__r.__words[2] == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=((std::string *)__p.__r_.__value_.__r.__words[2], a2);
    memset(&v56, 0, sizeof(v56));
    if ((sub_10026A098((uint64_t)&v55, &v56) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)buf);
      *(_QWORD *)buf = &off_10212A508;
      sub_10026A9C8((uint64_t)buf);
    }
    v41 |= 8u;
    if (v39 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v39, &v56);
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v56.__r_.__value_.__l.__data_);
    v41 |= 0x20u;
    v40 = v28;
    LODWORD(v44.__r_.__value_.__l.__data_) = 0;
    sub_1000B0C3C((int *)&v44);
    v56.__r_.__value_.__r.__words[0] = sub_1000B0D38((ssize_t)&v44);
    v56.__r_.__value_.__l.__size_ = v29;
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_100380D68(&v56, (uint64_t)&__p, (uint64_t)buf, Current);
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)a1 + 152))(a1, buf);
    sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)((char *)&v50 + 2));
    sub_1000B0D18((unsigned int *)&v44);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v31 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
        a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
      memset(&v44, 0, sizeof(v44));
      if ((sub_10026A098((uint64_t)&v55, &v44) & 1) == 0)
      {
        v36 = std::bad_cast::bad_cast((std::bad_cast *)&v56);
        v56.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
        sub_10026A9C8((uint64_t)v36);
      }
      v32 = SHIBYTE(v44.__r_.__value_.__r.__words[2]);
      v33 = v44.__r_.__value_.__r.__words[0];
      sub_100357644(a5, &v56);
      v34 = &v44;
      if (v32 < 0)
        v34 = (std::string *)v33;
      if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v35 = &v56;
      else
        v35 = (std::string *)v56.__r_.__value_.__r.__words[0];
      *(_DWORD *)buf = 68290051;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(_QWORD *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(_QWORD *)&buf[20] = a2;
      v49 = 2081;
      v50 = v34;
      v51 = 2081;
      v52 = v35;
      v53 = 1025;
      LODWORD(v54) = v28;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Set current LOI.\", \"type\":%{private, location:escape_only}s, \"id\":%{private, location:escape_only}s, \"reason\":%{private, location:escape_only}s, \"is spectating\":%{private}hhd}", buf, 0x36u);
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v56.__r_.__value_.__l.__data_);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
    }
    sub_1002D918C((wireless_diagnostics::google::protobuf::MessageLite *)&__p);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
}

void sub_100380324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,std::bad_cast a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;

  if (a14 < 0)
    operator delete(__p);
  if (a49 < 0)
    operator delete(a44.__vftable);
  sub_100261F44(v49 - 112);
  _Unwind_Resume(a1);
}

void sub_100380474(uint64_t a1)
{
  NSObject *v2;
  _BYTE *v3;
  void **v4;
  uint64_t v5;
  NSObject *v6;
  void **v7;
  _OWORD *v8;
  NSObject *v9;
  unsigned int *v10;
  unsigned int *i;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  NSObject *v16;
  void **v17;
  _UNKNOWN **v18;
  const char *v19;
  uint8_t *v20;
  uint64_t v21;
  _BYTE *v22;
  void **v23;
  char *v24;
  char *v25;
  void **v26;
  const char *v27;
  uint8_t *v28;
  uint64_t v29;
  void *v30[2];
  char v31;
  void *__dst[2];
  uint64_t v33;
  _BYTE __p[28];
  _BYTE buf[24];
  uint8_t v36[16];
  _UNKNOWN **v37;
  _QWORD v38[10];
  char v39;
  uint64_t v40;
  _BYTE v41[56];
  uint64_t v42;
  char v43;
  __int128 v44;

  v44 = *(_OWORD *)(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
  {
    sub_100115CE4(__dst, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 56);
    v33 = *(_QWORD *)(a1 + 72);
  }
  sub_1002826E8(*(_QWORD *)(a1 + 128), &v44, v41);
  if (!v43)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v2 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      memset(__p, 0, 24);
      if ((sub_10026A098((uint64_t)&v44, (std::string *)__p) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)v36);
        *(_QWORD *)v36 = &off_10212A508;
        sub_10026A9C8((uint64_t)v36);
      }
      v3 = __p;
      if (__p[23] < 0)
        v3 = *(_BYTE **)__p;
      v4 = __dst;
      if (v33 < 0)
        v4 = (void **)__dst[0];
      *(_DWORD *)buf = 136380931;
      *(_QWORD *)&buf[4] = v3;
      *(_WORD *)&buf[12] = 2081;
      *(_QWORD *)&buf[14] = v4;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Don't have a current wifi channel histogram for this LOI id %{private}s. Using histogram using LOI type only %{private}s.", buf, 0x16u);
      if ((__p[23] & 0x80000000) != 0)
        operator delete(*(void **)__p);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(v36, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v21 = qword_1022A00F8;
      sub_1002A4BE0((uint64_t)&v44, (std::string *)__p);
      if (__p[23] >= 0)
        v22 = __p;
      else
        v22 = *(_BYTE **)__p;
      v23 = __dst;
      if (v33 < 0)
        v23 = (void **)__dst[0];
      *(_DWORD *)buf = 136380931;
      *(_QWORD *)&buf[4] = v22;
      *(_WORD *)&buf[12] = 2081;
      *(_QWORD *)&buf[14] = v23;
      _os_log_send_and_compose_impl(2, 0, v36, 1628, &_mh_execute_header, v21, 2, "Don't have a current wifi channel histogram for this LOI id %{private}s. Using histogram using LOI type only %{private}s.", buf, 22);
      v25 = v24;
      if ((__p[23] & 0x80000000) != 0)
        operator delete(*(void **)__p);
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadWifiChannelHistogram()", "%s\n", v25);
      if (v25 != (char *)v36)
        free(v25);
    }
    v5 = *(_QWORD *)(a1 + 128);
    *(_QWORD *)__p = 0;
    *(_QWORD *)&__p[8] = 0;
    sub_1002826E8(v5, (__int128 *)__p, v36);
    sub_1002FFBE0((uint64_t)v41, (uint64_t)v36);
    sub_1002FFD68((uint64_t)v36);
    if (!v43)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v6 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        v7 = __dst;
        if (v33 < 0)
          v7 = (void **)__dst[0];
        *(_DWORD *)v36 = 136380675;
        *(_QWORD *)&v36[4] = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Don't have wifi channel histogram for current LOI type %{private}s. Using default wifi histogram", v36, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(v36, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        v26 = __dst;
        if (v33 < 0)
          v26 = (void **)__dst[0];
        *(_DWORD *)__p = 136380675;
        *(_QWORD *)&__p[4] = v26;
        LODWORD(v29) = 12;
        _os_log_send_and_compose_impl(2, 0, v36, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Don't have wifi channel histogram for current LOI type %{private}s. Using default wifi histogram", __p, v29);
        v28 = (uint8_t *)v27;
        sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadWifiChannelHistogram()", "%s\n", v27);
        if (v28 != v36)
          free(v28);
      }
    }
  }
  v8 = operator new(0x68uLL);
  *(_QWORD *)&buf[16] = (char *)v8 + 104;
  *v8 = xmmword_101B9B430;
  v8[1] = xmmword_101B9B440;
  v8[2] = xmmword_101B9B450;
  v8[3] = xmmword_101B9B460;
  v8[4] = xmmword_101B9B470;
  v8[5] = xmmword_101B9B480;
  *((_QWORD *)v8 + 12) = 13;
  *(_QWORD *)buf = v8;
  *(_QWORD *)&buf[8] = (char *)v8 + 104;
  if (v43)
  {
    sub_100343EBC((uint64_t)&v42, (void **)v36);
    if (*(_QWORD *)buf)
    {
      *(_QWORD *)&buf[8] = *(_QWORD *)buf;
      operator delete(*(void **)buf);
    }
    *(_OWORD *)buf = *(_OWORD *)v36;
    *(_QWORD *)&buf[16] = v37;
  }
  sub_100362704(a1 + 632, (uint64_t)buf);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v9 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Reloaded wifi channel histogram", v36, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(v36, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    *(_WORD *)__p = 0;
    LODWORD(v29) = 2;
    _os_log_send_and_compose_impl(2, 0, v36, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Reloaded wifi channel histogram", __p, v29);
    v20 = (uint8_t *)v19;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadWifiChannelHistogram()", "%s\n", v19);
    if (v20 != v36)
      free(v20);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    sub_100263E50((uint64_t)v36);
    v10 = *(unsigned int **)buf;
    for (i = *(unsigned int **)&buf[8]; v10 != i; v10 += 2)
    {
      v12 = sub_100263F7C(&v37, (uint64_t)"channel: ", 9);
      v13 = (_QWORD *)std::ostream::operator<<(v12, *v10);
      v14 = sub_100263F7C(v13, (uint64_t)" count: ", 8);
      v15 = (_QWORD *)std::ostream::operator<<(v14, v10[1]);
      sub_100263F7C(v15, (uint64_t)", ", 2);
    }
    std::stringbuf::str(v30, v38);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v16 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      v17 = v30;
      if (v31 < 0)
        v17 = (void **)v30[0];
      *(_QWORD *)__p = 68289283;
      *(_WORD *)&__p[8] = 2082;
      *(_QWORD *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2081;
      *(_QWORD *)&__p[20] = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Wifi channel histogram:\", \"Histogram\":%{private, location:escape_only}s}", __p, 0x1Cu);
    }
    if (v31 < 0)
      operator delete(v30[0]);
    v37 = v18;
    if (v39 < 0)
      operator delete((void *)v38[8]);
    std::streambuf::~streambuf(v38);
    std::ios::~ios(&v40);
  }
  if (*(_QWORD *)buf)
  {
    *(_QWORD *)&buf[8] = *(_QWORD *)buf;
    operator delete(*(void **)buf);
  }
  sub_1002FFD68((uint64_t)v41);
  if (SHIBYTE(v33) < 0)
    operator delete(__dst[0]);
}

void sub_100380CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,std::bad_cast a33)
{
  uint64_t v33;

  sub_1002FFD68(v33 - 232);
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_100380D68(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  _BYTE v8[304];

  sub_1000B13D8((uint64_t)v8);
  sub_100359624((uint64_t)v8, a2);
  sub_1000B0EC8(a3, a1, *(_DWORD *)(a2 + 24), (uint64_t)v8, a4);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100380DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&a9);
  _Unwind_Resume(a1);
}

void sub_100380DF0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  NSObject *v6;
  const char *v7;
  uint8_t *v8;
  _WORD v9[8];
  uint8_t buf[1640];

  v2 = a1 + 1520;
  sub_1003A1CD4((std::string *)(a1 + 1520), (const std::string *)(a1 + 56));
  sub_1003A1CDC(v2, (__n128 *)(a1 + 80));
  if (*(_BYTE *)(a1 + 53))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Rapport, rapport session already running", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v9[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Rapport, rapport session already running", v9, 2);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::startRapportSessionIfStopped()", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Rapport, start rapport session", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v9[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Rapport, start rapport session", v9, 2);
      v8 = (uint8_t *)v7;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::startRapportSessionIfStopped()", "%s\n", v7);
      if (v8 != buf)
        free(v8);
    }
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 88))(*(_QWORD *)(a1 + 2560));
    sub_100379F84(a1 + 48, 1);
  }
}

double sub_1003810E8(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  double result;
  const char *v5;
  uint8_t *v6;
  const char *v7;
  uint8_t *v8;
  _WORD v9[8];
  uint8_t buf[1640];

  if (*(_BYTE *)(a1 + 53))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v2 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Rapport, stopping rapport session", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v9[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Rapport, stopping rapport session", v9, 2);
      v6 = (uint8_t *)v5;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopRapportSessionIfRunning()", "%s\n", v5);
      if (v6 != buf)
        free(v6);
    }
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 96))(*(_QWORD *)(a1 + 2560));
    sub_1003A17FC(a1 + 1520);
    sub_1003A17F8(a1 + 1520);
    sub_100379F84(a1 + 48, 0);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v3 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Rapport, rapport session already stopped", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v9[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Rapport, rapport session already stopped", v9, 2);
      v8 = (uint8_t *)v7;
      sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopRapportSessionIfRunning()", "%s\n", v7);
      if (v8 != buf)
        free(v8);
    }
  }
  sub_1003A1CD4((std::string *)(a1 + 1520), (const std::string *)(a1 + 56));
  *(_QWORD *)&result = sub_1003A1CDC(a1 + 1520, (__n128 *)(a1 + 80)).n128_u64[0];
  return result;
}

void sub_1003813F8(_QWORD **a1, int a2)
{
  uint64_t v4;
  int v5;
  CFStringRef v6;
  char v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  char v12;
  NSObject *v13;
  uint64_t v14;
  double v15;
  NSObject *v16;
  uint64_t v17;
  double Current;
  const char *v19;
  uint8_t *v20;
  const char *v21;
  uint8_t *v22;
  uint64_t v23;
  unsigned __int8 v24[20];
  int v25;
  int v26;
  __int128 v27;
  uint8_t buf[8];
  std::__shared_weak_count *v29;
  uint64_t v30;

  v4 = (uint64_t)(a1 + 202);
  v5 = sub_1002B104C((uint64_t)(a1 + 202));
  if (a2)
  {
    if ((v5 & 1) == 0)
      (*(void (**)(_QWORD *))(*a1[320] + 72))(a1[320]);
    sub_10035F000((uint64_t)(a1 + 79));
    sub_1001E4804(buf);
    v24[0] = 0;
    v6 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRapportUsageEnabled", 0x8000100u, kCFAllocatorNull);
    v7 = sub_1001E48E4(*(uint64_t *)buf, (uint64_t)v6, (BOOL *)v24);
    CFRelease(v6);
    v8 = v24[0];
    v9 = v29;
    if (v29)
    {
      p_shared_owners = (unint64_t *)&v29->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    if (v8)
      v12 = 0;
    else
      v12 = v7;
    if ((v12 & 1) != 0)
      sub_1003810E8((uint64_t)a1);
    else
      sub_100380DF0((uint64_t)a1);
    sub_1002B0E90(v4, 1);
    if (sub_1003819BC())
    {
      ((void (*)(_QWORD **))(*a1)[36])(a1);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v16 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Starting Motion Session MiLo is starting spectating", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        *(_WORD *)v24 = 0;
        LODWORD(v23) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Starting Motion Session MiLo is starting spectating", v24, v23);
        v22 = (uint8_t *)v21;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLMicroLocationLogic::onUpdateSpectating(BOOL)", "%s\n", v21);
        if (v22 != buf)
          free(v22);
      }
      sub_1002BBEFC(v24);
      if (!sub_1002D7DBC(2u))
        __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
      v26 |= 4u;
      v25 = 2;
      HIDWORD(v23) = 0;
      sub_1000B0C3C((int *)&v23 + 1);
      *(_QWORD *)&v27 = sub_1000B0D38((ssize_t)&v23 + 4);
      *((_QWORD *)&v27 + 1) = v17;
      Current = j__CFAbsoluteTimeGetCurrent();
      sub_10037499C(&v27, (uint64_t)v24, (uint64_t)buf, Current);
      ((void (*)(_QWORD **, uint8_t *))(*a1)[19])(a1, buf);
LABEL_33:
      sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v30);
      sub_1000B0D18((unsigned int *)&v23 + 1);
      sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)v24);
    }
  }
  else
  {
    if (v5)
      (*(void (**)(_QWORD *))(*a1[320] + 80))(a1[320]);
    sub_10035FE88((uint64_t)(a1 + 79));
    sub_100360544((uint64_t)(a1 + 79));
    sub_100360A40((_BYTE *)a1 + 632);
    sub_1003810E8((uint64_t)a1);
    sub_100381A94((uint64_t)a1, 1u);
    sub_1002A0E78((uint64_t)(a1 + 17));
    sub_1002B0E90(v4, 0);
    if (sub_1003819BC())
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v13 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Stopping PDR Fence because MiLo is no longer spectating", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        *(_WORD *)v24 = 0;
        LODWORD(v23) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Stopping PDR Fence because MiLo is no longer spectating", v24, v23);
        v20 = (uint8_t *)v19;
        sub_100512490("Generic", 1, 0, 2, "virtual void CLMicroLocationLogic::onUpdateSpectating(BOOL)", "%s\n", v19);
        if (v20 != buf)
          free(v20);
      }
      sub_1002BBEFC(v24);
      if (!sub_1002D7DBC(3u))
        __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
      v26 |= 4u;
      v25 = 3;
      HIDWORD(v23) = 0;
      sub_1000B0C3C((int *)&v23 + 1);
      *(_QWORD *)&v27 = sub_1000B0D38((ssize_t)&v23 + 4);
      *((_QWORD *)&v27 + 1) = v14;
      v15 = j__CFAbsoluteTimeGetCurrent();
      sub_10037499C(&v27, (uint64_t)v24, (uint64_t)buf, v15);
      ((void (*)(_QWORD **, uint8_t *))(*a1)[19])(a1, buf);
      goto LABEL_33;
    }
  }
}

void sub_100381958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  uint64_t v12;

  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1000B0D18(&a11);
  sub_1002D7FBC((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1003819BC()
{
  CFStringRef v0;
  unsigned int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsPedestrianFenceWhenSpectatingEnabled", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return v1;
  else
    return 0;
}

void sub_100381A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100381A94(uint64_t a1, unsigned int a2)
{
  int v3;
  NSObject *v4;
  NSObject *v6;
  int v7;
  uint8_t buf[8];
  __int128 v9;
  uint64_t *v10;
  _QWORD *v11[2];
  int v12;

  v3 = *(unsigned __int8 *)(a1 + 52);
  if (v3 == 2)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      LOWORD(v9) = 2082;
      *(_QWORD *)((char *)&v9 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"interrupting an ongoing recording\"}", buf, 0x12u);
    }
    sub_10035BE84((_BYTE *)(a1 + 632));
    v11[0] = 0;
    v11[1] = 0;
    *(_QWORD *)buf = 0;
    v9 = 0uLL;
    v10 = (uint64_t *)v11;
    v12 = 2;
    v7 = 2;
    sub_1000C6190(&v10, &v7, &v7);
    sub_10037BFC4(a1, (uint64_t)buf);
    sub_100008848((uint64_t)&v10, v11[0]);
  }
  else if (v3 == 1)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      LOWORD(v9) = 2082;
      *(_QWORD *)((char *)&v9 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"interrupting an ongoing localization\"}", buf, 0x12u);
    }
    sub_10035BE84((_BYTE *)(a1 + 632));
    sub_10037C358(a1, a2);
  }
  else if (!*(_BYTE *)(a1 + 52))
  {
    sub_10036FF00(a1 + 584);
  }
}

void sub_100381CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _QWORD *a15)
{
  uint64_t v15;

  sub_100008848(v15, a15);
  _Unwind_Resume(a1);
}

void sub_100381CD8(uint64_t a1, int a2)
{
  sub_1003813F8((_QWORD **)(a1 - 24), a2);
}

void sub_100381CE0(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  if (sub_1002798F8(a3, (std::locale::__imp **)(a1 + 2584)))
    sub_1003A0F00(a1 + 1520, a2, a4);
}

void sub_100381D38(uint64_t a1, int a2)
{
  NSObject *v4;
  const char *v5;
  const char *v6;
  const char *v7;
  uint8_t *v8;
  int v9;
  const char *v10;
  uint8_t buf[4];
  const char *v12;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v4 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v5 = "disabled";
    if (a2)
      v5 = "enabled";
    *(_DWORD *)buf = 136446210;
    v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Location services set to %{public}s", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = "disabled";
    if (a2)
      v6 = "enabled";
    v9 = 136446210;
    v10 = v6;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Location services set to %{public}s", &v9, 12);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::setLocationServicesEnabled(BOOL)", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
  *(_BYTE *)(a1 + 49) = a2;
  sub_10037A3F0(a1);
}

void sub_100381F20(uint64_t a1, int a2)
{
  NSObject *v4;
  const char *v5;
  const char *v6;
  const char *v7;
  uint8_t *v8;
  int v9;
  const char *v10;
  uint8_t buf[4];
  const char *v12;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v4 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    v5 = "False";
    if (a2)
      v5 = "True";
    *(_DWORD *)buf = 136446210;
    v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Platform support for milo is set to %{public}s", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = "False";
    if (a2)
      v6 = "True";
    v9 = 136446210;
    v10 = v6;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "Platform support for milo is set to %{public}s", &v9, 12);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::setPlatformSupport(BOOL)", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
  *(_BYTE *)(a1 + 51) = a2;
}

void sub_100382100(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Got request to reset Location data. Dropping microlocation tables", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Got request to reset Location data. Dropping microlocation tables", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::onResetLocationData()", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  sub_10027AF8C(*(_QWORD *)(a1 + 128));
  sub_100308BCC(buf, *(_QWORD *)(a1 + 128));
  sub_10030A738((uint64_t)buf);
  sub_10033DB70((_QWORD *)(a1 + 1808));
}

void sub_1003822B4(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;
  _DWORD v6[2];
  __int16 v7;
  const char *v8;
  __int16 v9;
  uint64_t v10;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v4 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 23) >= 0)
      v5 = a2;
    else
      v5 = *(_QWORD *)a2;
    v6[0] = 68289283;
    v6[1] = 0;
    v7 = 2082;
    v8 = "";
    v9 = 2081;
    v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Got request to reset semi-supervised model related data for\", \"clientIdentifier\":%{private, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  sub_10027DEA0(*(_QWORD *)(a1 + 128), a2);
  sub_10033DB70((_QWORD *)(a1 + 1808));
}

#error "100382420: call analysis failed (funcsize=28)"

uint64_t sub_10038243C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t result;
  NSObject *v6;
  double Current;
  _BYTE v8[48];
  uint8_t buf[4];
  int v10;
  __int16 v11;
  const char *v12;
  __int16 v13;
  uint64_t v14;

  v4 = (unsigned __int8 *)(a1 + 1616);
  result = sub_1002B104C(a1 + 1616);
  if ((_DWORD)result && !*(_BYTE *)(a1 + 116))
  {
    *(_DWORD *)(a1 + 108) = 0;
    *(_DWORD *)(a1 + 112) = 0;
    *(_BYTE *)(a1 + 116) = 1;
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 68289282;
      v10 = 0;
      v11 = 2082;
      v12 = "";
      v13 = 2082;
      v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"localization retries have been exhausted, reset counters and trying another localization\", \"reason\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_10037B5EC("InternalClientLogic", (uint64_t)v8);
    sub_10031C740((uint64_t)v8, 0, 0, 3u, (uint64_t)buf, Current);
    sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)v8);
    sub_1002AE8FC(v4, (uint64_t)buf, 1, 0, 0);
    return sub_1002DF2E0(buf);
  }
  return result;
}

void sub_1003825B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_1002DF2E0(va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003825DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  double Current;
  _BYTE v4[48];
  _BYTE v5[136];

  v1 = a1 + 1616;
  result = sub_1002B104C(a1 + 1616);
  if ((_DWORD)result)
  {
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_10037B5EC("InternalClientScreenOnFallback", (uint64_t)v4);
    sub_10031C740((uint64_t)v4, 0, 0, 3u, (uint64_t)v5, Current);
    sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)v4);
    sub_1002B2054(v1, (uint64_t)v5);
    return sub_1002DF2E0(v5);
  }
  return result;
}

void sub_100382664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_1002DF2E0(va);
  _Unwind_Resume(a1);
}

uint64_t sub_100382688(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 104);
}

uint64_t sub_100382690(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 96);
}

void sub_100382698(uint64_t a1, char a2)
{
  *(_BYTE *)(a1 + 118) = a2;
  sub_10037A3F0(a1);
}

void sub_1003826A0()
{
  NSObject *v0;
  const char *v1;
  uint8_t *v2;
  _WORD v3[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v0 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Models have been regenerated. Doing nothing", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v3[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Models have been regenerated. Doing nothing", v3, 2);
    v2 = (uint8_t *)v1;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::onModelGenerated(CLMicroLocationProto::Model::ModelType)", "%s\n", v1);
    if (v2 != buf)
      free(v2);
  }
}

void sub_100382824(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Models have been regenerated, Letting service Manager know", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Models have been regenerated, Letting service Manager know", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLogic::onLearningCompleted()", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  sub_1003810E8(a1);
  sub_10033FDF4((_QWORD *)(a1 + 1808));
  sub_1003602A4(a1 + 632);
}

void sub_1003829D0(uint64_t a1, uint64_t a2)
{
  int v3;
  BOOL v4;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v10;
  NSObject *v11;
  char *v12;
  std::string *p_p;
  int v14;
  std::string::size_type v15;
  std::string __p;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t buf[8];
  __int16 v23;
  const char *v24;
  __int16 v25;
  _QWORD *v26;
  __int16 v27;
  char *v28;
  __int16 v29;
  int v30;
  __int16 v31;
  std::string *v32;
  __int16 v33;
  uint64_t v34;
  __int16 v35;
  int v36;

  v3 = *(_DWORD *)(a2 + 40);
  if (*(_BYTE *)(a2 + 88))
    v4 = v3 < 1;
  else
    v4 = 1;
  if (!v4)
  {
    if (*(_BYTE *)(a1 + 80))
    {
LABEL_6:
      v19 = 0;
      v20 = 0;
      v21 = 0;
      if (sub_1000AFA5C(v3))
        v6 = 2;
      else
        v6 = 5;
      v18 = v6;
      v7 = (_QWORD *)(a1 + 56);
      *(_QWORD *)buf = j__CFAbsoluteTimeGetCurrent();
      v17 = 1;
      __p.__r_.__value_.__r.__words[0] = *(_QWORD *)a2;
      LODWORD(v15) = *(_DWORD *)(a2 + 40);
      v20 = sub_100385A9C(&v19);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v11 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(a1 + 79) < 0)
          v7 = (_QWORD *)*v7;
        v12 = (char *)operator new(0x28uLL);
        *(_QWORD *)(v12 + 29) = 0;
        *(_OWORD *)v12 = 0u;
        *((_OWORD *)v12 + 1) = 0u;
        sub_100261F9C(a1 + 80, v12);
        v15 = *(_QWORD *)a2;
        sub_1000C2150(&v15, &__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        v14 = *(_DWORD *)(a2 + 40);
        *(_DWORD *)buf = 68290563;
        *(_DWORD *)&buf[4] = 0;
        v23 = 2082;
        v24 = "";
        v25 = 2081;
        v26 = v7;
        v27 = 2081;
        v28 = v12;
        v29 = 1026;
        v30 = 1;
        v31 = 2081;
        v32 = p_p;
        v33 = 2050;
        v34 = v18;
        v35 = 1026;
        v36 = v14;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic, onAssociatedState event\", \"currentRTLOIType\":%{private, location:escape_only}s, \"currentRtLoiId\":%{private, location:escape_only}s, \"IsAssociated\":%{public}hhd, \"MAC Address\":%{private, location:escape_only}s, \"Band\":%{public}lu, \"Channel\":%{public}d}", buf, 0x46u);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        operator delete(v12);
      }
      sub_100382D4C(*(_QWORD *)(a1 + 128));
      *(_QWORD *)buf = &v19;
      sub_100313844((void ***)buf);
    }
    else
    {
      v8 = 0;
      while (v8 != 15)
      {
        if (*(unsigned __int8 *)(a1 + 81 + v8++))
        {
          if ((unint64_t)(v8 - 1) < 0xF)
            goto LABEL_6;
          break;
        }
      }
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v10 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289026;
        *(_DWORD *)&buf[4] = 0;
        v23 = 2082;
        v24 = "";
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic, onAssociatedState event ignored - nil currentRtLoiId\"}", buf, 0x12u);
      }
    }
  }
}

void sub_100382D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  void *v17;

  operator delete(v17);
  a17 = &a14;
  sub_100313844((void ***)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_100382D4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (sub_1000CC4F4(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 272);
    if (!v2)
      operator new();
    v3 = sub_100396A38(v2);
    sub_100385C00(a1);
    return v3;
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Can't insert because the database is invalid", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationAssociatedStateTable::Entry]", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    return 0;
  }
}

void sub_100382F7C()
{
  operator delete();
}

void sub_100382FA8(uint64_t a1)
{
  sub_10032D08C(a1 + 2056);
}

void sub_100382FB0(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  _BYTE v8[304];

  sub_1000B13D8((uint64_t)v8);
  sub_100359854((uint64_t)v8, a2);
  sub_1000B0EC8(a3, a1, *(_DWORD *)(a2 + 8), (uint64_t)v8, a4);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100383024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100383038(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_100383040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  _BYTE *v10;
  NSObject *v11;
  const char *v13;
  uint8_t *v14;
  const char *v15;
  uint8_t *v16;
  const char *v17;
  uint8_t *v18;
  const char *v19;
  uint8_t *v20;
  uint64_t v21;
  _WORD v22[8];
  void *__p;
  _BYTE *v24;
  uint8_t buf[1632];
  uint64_t v26;
  char v27;

  v4 = (uint64_t *)a2;
  sub_100286670(*(_QWORD *)(a1 + 128), a2, &v26);
  if (v27)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "CLMicroLocationLogic got previously stored LOI Group ID for LOI ID", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      LOWORD(__p) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "CLMicroLocationLogic got previously stored LOI Group ID for LOI ID", &__p, 2);
      v14 = (uint8_t *)v13;
      sub_100512490("Generic", 1, 0, 2, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v13);
      if (v14 != buf)
        free(v14);
    }
    if (!v27)
      sub_10028DF3C();
    return v26;
  }
  else
  {
    sub_10028698C(*(_QWORD *)(a1 + 128), a3, &__p);
    if (v24 == __p)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v11 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "CLMicroLocationLogic never before seen LOI, so starting with this LOI ID as the group ID", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        v22[0] = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "CLMicroLocationLogic never before seen LOI, so starting with this LOI ID as the group ID", v22, 2);
        v18 = (uint8_t *)v17;
        sub_100512490("Generic", 1, 0, 2, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v17);
        if (v18 != buf)
          free(v18);
      }
      v10 = __p;
    }
    else
    {
      if ((unint64_t)(v24 - (_BYTE *)__p) >= 0x11)
      {
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        v8 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "CLMicroLocationLogic received multiple Loi Group IDs for LOI -- this should never happen", buf, 2u);
        }
        if (sub_1001BFF7C(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_102131A40);
          v22[0] = 0;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "CLMicroLocationLogic received multiple Loi Group IDs for LOI -- this should never happen", v22, 2);
          v20 = (uint8_t *)v19;
          sub_100512490("Generic", 1, 0, 0, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v19);
          if (v20 != buf)
            free(v20);
        }
      }
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "CLMicroLocationNotifier got previously stored LOI Group ID for list of LOI IDs", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131A40);
        v22[0] = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 1, "CLMicroLocationNotifier got previously stored LOI Group ID for list of LOI IDs", v22, v21);
        v16 = (uint8_t *)v15;
        sub_100512490("Generic", 1, 0, 2, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v15);
        if (v16 != buf)
          free(v16);
      }
      v10 = __p;
      v4 = (uint64_t *)__p;
    }
    v7 = *v4;
    if (v10)
    {
      v24 = v10;
      operator delete(v10);
    }
  }
  return v7;
}

void sub_1003835E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100383610(uint64_t a1, uint64_t a2, _OWORD *a3, const void **a4)
{
  uint64_t v8;
  const void *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  void *__p;
  char *v25;
  unint64_t v26;
  _QWORD v27[2];

  v27[0] = sub_100383040(a1, (uint64_t)a3, (uint64_t)a4);
  v27[1] = v8;
  v9 = *a4;
  v10 = (uint64_t)a4[1];
  v11 = (v10 - (uint64_t)*a4) >> 4;
  v25 = 0;
  v26 = 0;
  __p = 0;
  sub_1002AE804(&__p, v9, v10, v11);
  v12 = v25;
  if ((unint64_t)v25 >= v26)
  {
    v14 = (v25 - (_BYTE *)__p) >> 4;
    v15 = v14 + 1;
    if ((unint64_t)(v14 + 1) >> 60)
      sub_100259694();
    v16 = v26 - (_QWORD)__p;
    if ((uint64_t)(v26 - (_QWORD)__p) >> 3 > v15)
      v15 = v16 >> 3;
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0)
      v17 = 0xFFFFFFFFFFFFFFFLL;
    else
      v17 = v15;
    if (v17)
      v18 = (char *)sub_10028E224((uint64_t)&v26, v17);
    else
      v18 = 0;
    v19 = &v18[16 * v14];
    v20 = &v18[16 * v17];
    *(_OWORD *)v19 = *a3;
    v13 = v19 + 16;
    v22 = (char *)__p;
    v21 = v25;
    if (v25 != __p)
    {
      do
      {
        *((_OWORD *)v19 - 1) = *((_OWORD *)v21 - 1);
        v19 -= 16;
        v21 -= 16;
      }
      while (v21 != v22);
      v21 = (char *)__p;
    }
    __p = v19;
    v25 = v13;
    v26 = (unint64_t)v20;
    if (v21)
      operator delete(v21);
  }
  else
  {
    *(_OWORD *)v25 = *a3;
    v13 = v12 + 16;
  }
  v25 = v13;
  sub_100286CA8(*(_QWORD *)(a1 + 128), (uint64_t)v27, (uint64_t)&__p, a2);
  if (__p)
  {
    v25 = (char *)__p;
    operator delete(__p);
  }
  return v27[0];
}

void sub_10038379C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003837C0(uint64_t a1, uint64_t a2, _OWORD *a3, const void **a4)
{
  return sub_100383610(a1 - 32, a2, a3, a4);
}

void sub_1003837C8(uint64_t a1)
{
  sub_100014604(*(_QWORD *)(a1 + 128));
  if (sub_1000A1914(*(_QWORD *)(a1 + 128)))
    sub_10035FEAC((uint64_t *)(a1 + 632));
}

uint64_t sub_100383808@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>, double a5@<D0>)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD v11[5];
  double v12;

  v12 = a5;
  v6 = a1 + 1520;
  sub_1003A130C(a1 + 1520, &v12, a2, a3, (uint64_t)v11);
  sub_1003A17FC(v6);
  sub_1003A17F8(v6);
  v7 = (_QWORD *)v11[2];
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  v8 = 0;
  if (v7)
  {
    v9 = v7;
    do
    {
      ++v8;
      v9 = (_QWORD *)*v9;
    }
    while (v9);
  }
  sub_100385ED0(a4, v7, 0, v8);
  return sub_1003859AC((uint64_t)v11);
}

void sub_100383894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1003859AC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1003838A8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, double *a6)
{
  id v9;
  uint64_t v10;
  int v11;
  int v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  _BYTE v17[48];
  __int128 v18;
  _BYTE v19[32];
  uint64_t v20;
  __int128 v21;
  char v22;

  v21 = *a5;
  v22 = *((_BYTE *)a5 + 16);
  v9 = sub_100359CF8(1, a3, a4, (uint64_t)&v21);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v15 = *(_QWORD *)(a2 + 16);
  }
  v16 = 1;
  sub_10035996C((uint64_t)__p, v9, (uint64_t)v17);
  if (v16 && SHIBYTE(v15) < 0)
    operator delete(__p[0]);
  v13 = 0;
  sub_1000B0C3C(&v13);
  *(_QWORD *)&v18 = sub_1000B0D38((ssize_t)&v13);
  *((_QWORD *)&v18 + 1) = v10;
  sub_100319B00(&v18, (uint64_t)v17, (uint64_t)v19, *a6);
  (*(void (**)(unsigned __int8 *, _BYTE *))(*(_QWORD *)a1 + 152))(a1, v19);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v20);
  sub_1000B0D18((unsigned int *)&v13);
  sub_100339450((uint64_t)v17, 0, 0, 3u, (uint64_t)v19, *a6);
  v11 = sub_1002B00CC(a1 + 1616, (uint64_t)v19);
  sub_1002DF2E0(v19);
  sub_1002CAF70((wireless_diagnostics::google::protobuf::MessageLite *)v17);
  return v11 != 5;
}

void sub_100383A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, char a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  sub_1002DF2E0(&a30);
  sub_1002CAF70((wireless_diagnostics::google::protobuf::MessageLite *)&a20);
  _Unwind_Resume(a1);
}

BOOL sub_100383AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, double *a6)
{
  return sub_1003838A8((unsigned __int8 *)(a1 - 24), a2, a3, a4, a5, a6);
}

void sub_100383AAC(unsigned __int8 *a1@<X0>, const std::string *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X5>, int a7@<W6>, __n128 *a8@<X8>)
{
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  char v17;
  int v18;
  uint64_t v19;
  int v20;
  std::string *v21;
  std::string *v22;
  std::string *v23;
  int v24;
  __int128 v25;
  _BYTE v26[32];
  uint64_t v27;
  __n128 __s;

  __s.n128_u64[0] = a3;
  __s.n128_u64[1] = a4;
  sub_1002BBAF4(&v19);
  v24 |= 4u;
  if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v21, a2);
  if (!sub_100106170(1))
    __assert_rtn("set_receivedeventactiontype", "microlocation.pb.h", 12856, "::CLMicroLocationProto::ReceivedEventActionType_IsValid(value)");
  v20 = 1;
  v24 |= 0xAu;
  if (v22 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::assign(v22, (const std::string::value_type *)&__s, 0x10uLL);
  if (*(_BYTE *)(a5 + 16))
  {
    v24 |= 0x10u;
    if (v23 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::assign(v23, (const std::string::value_type *)a5, 0x10uLL);
  }
  v18 = 0;
  sub_1000B0C3C(&v18);
  *(_QWORD *)&v25 = sub_1000B0D38((ssize_t)&v18);
  *((_QWORD *)&v25 + 1) = v14;
  sub_100319CD4(&v25, (uint64_t)&v19, (uint64_t)v26, *a6);
  (*(void (**)(unsigned __int8 *, _BYTE *))(*(_QWORD *)a1 + 152))(a1, v26);
  sub_1000B2748((wireless_diagnostics::google::protobuf::MessageLite *)&v27);
  sub_1000B0D18((unsigned int *)&v18);
  sub_10031C740((uint64_t)&v19, 0, 0, 3u, (uint64_t)v26, *a6);
  v15 = a1 + 1616;
  v16 = sub_1002AE8FC(v15, (uint64_t)v26, a7, 0, 0);
  if (v16 == 3)
  {
    sub_1002B262C((uint64_t)v15, a8);
LABEL_15:
    v17 = 0;
    goto LABEL_16;
  }
  if (v16 != 4)
  {
    sub_1002B2618((uint64_t)v15, a8);
    goto LABEL_15;
  }
  *a8 = __s;
  v17 = 1;
  a8[1].n128_u8[0] = 1;
LABEL_16:
  a8[1].n128_u8[1] = v17;
  sub_1002DF2E0(v26);
  sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)&v19);
}

void sub_100383D44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)va);
  _Unwind_Resume(a1);
}

void sub_100383D98(uint64_t a1@<X0>, const std::string *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X5>, int a7@<W6>, __n128 *a8@<X8>)
{
  sub_100383AAC((unsigned __int8 *)(a1 - 24), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100383DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD v7[2];
  _QWORD v8[2];

  v8[0] = a3;
  v8[1] = a4;
  v7[0] = a5;
  v7[1] = a6;
  return sub_10036FFAC(a1 + 584, a2, objc_msgSend(objc_alloc((Class)NSUUID), "initWithUUIDBytes:", v8), objc_msgSend(objc_alloc((Class)NSUUID), "initWithUUIDBytes:", v7));
}

uint64_t sub_100383E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100383DA0(a1 - 24, a2, a3, a4, a5, a6);
}

uint64_t sub_100383E50(uint64_t a1, const std::string *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_10037B4C0(a1, a2, objc_msgSend(objc_alloc((Class)NSUUID), "initWithUUIDBytes:", a3), a4, a5);
}

uint64_t sub_100383EB8(uint64_t a1, const std::string *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_100383E50(a1 - 24, a2, a3, a4, a5);
}

uint64_t sub_100383EC0(uint64_t a1, const std::string *a2, _OWORD *a3, __int128 *a4)
{
  return sub_100370364(a1 + 584, a2, a3, a4);
}

uint64_t sub_100383EC8(uint64_t a1, const std::string *a2, _OWORD *a3, __int128 *a4)
{
  return sub_100370364(a1 + 560, a2, a3, a4);
}

BOOL sub_100383ED0(uint64_t a1, uint64_t *a2)
{
  unsigned __int8 *v4;
  _BOOL4 v5;
  _BOOL8 v6;
  _BOOL4 v7;
  NSObject *v8;
  char *v9;
  NSObject *v10;
  char *v11;
  double Current;
  NSObject *v13;
  char *v14;
  _BYTE v16[52];
  int v17;
  uint8_t buf[4];
  int v19;
  __int16 v20;
  const char *v21;
  __int16 v22;
  char *v23;
  __int16 v24;
  _BOOL4 v25;

  v17 = 1;
  v4 = (unsigned __int8 *)(a1 + 1616);
  v5 = sub_1002B1340(a1 + 1616);
  v6 = sub_1002B1054((uint64_t)v4, a2, &v17);
  if (!v6)
    goto LABEL_15;
  if (!v5)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v10 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (char *)operator new(0x28uLL);
      *(_QWORD *)(v11 + 29) = 0;
      *(_OWORD *)v11 = 0u;
      *((_OWORD *)v11 + 1) = 0u;
      sub_100261F9C((uint64_t)a2, v11);
      *(_DWORD *)buf = 68289282;
      v19 = 0;
      v20 = 2082;
      v21 = "";
      v22 = 2082;
      v23 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"first service to connect to low-latency: invalidating caches\", \"ServiceUUID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      operator delete(v11);
    }
    sub_10037EB0C(a1, 1);
    goto LABEL_14;
  }
  v7 = sub_100384290(a1, *a2, a2[1]);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v8 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (char *)operator new(0x28uLL);
    *(_QWORD *)(v9 + 29) = 0;
    *(_OWORD *)v9 = 0u;
    *((_OWORD *)v9 + 1) = 0u;
    sub_100261F9C((uint64_t)a2, v9);
    *(_DWORD *)buf = 68289538;
    v19 = 0;
    v20 = 2082;
    v21 = "";
    v22 = 2082;
    v23 = v9;
    v24 = 1026;
    v25 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"service connects to low-latency while already in low-latency\", \"ServiceUUID\":%{public, location:escape_only}s, \"CachedLocalizationSuccess\":%{public}hhd}", buf, 0x22u);
    operator delete(v9);
  }
  if (!v7)
  {
LABEL_14:
    Current = j__CFAbsoluteTimeGetCurrent();
    sub_10037B5EC("InternalClientLogic", (uint64_t)v16);
    sub_10031C740((uint64_t)v16, 0, 0, 3u, (uint64_t)buf, Current);
    sub_1002CA540((wireless_diagnostics::google::protobuf::MessageLite *)v16);
    sub_1002AE8FC(v4, (uint64_t)buf, 1, 0, 0);
    sub_1002DF2E0(buf);
  }
LABEL_15:
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v13 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_INFO))
  {
    v14 = (char *)operator new(0x28uLL);
    *(_QWORD *)(v14 + 29) = 0;
    *(_OWORD *)v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    sub_100261F9C((uint64_t)a2, v14);
    *(_DWORD *)buf = 68289539;
    v19 = 0;
    v20 = 2082;
    v21 = "";
    v22 = 2081;
    v23 = v14;
    v24 = 1025;
    v25 = v6;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Adding Low Latency policy to trigger manager\", \"\":%{private, location:escape_only}s, \"Success\":%{private}hhd}", buf, 0x22u);
    operator delete(v14);
  }
  return v6;
}

void sub_100384244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v17;

  operator delete(v17);
  _Unwind_Resume(a1);
}

BOOL sub_100384290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL8 v5;
  NSObject *v6;
  char *v7;
  NSObject *v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint8_t *v16;
  uint8_t buf[8];
  _QWORD v18[3];
  void *__p;
  void *v20;
  uint64_t v21;
  uint64_t v22[2];
  char v23;
  _QWORD v24[2];

  v24[0] = a2;
  v24[1] = a3;
  v4 = a1 + 1808;
  sub_10033E064(a1 + 1808, a2, a3, &v14);
  if (v14)
  {
    LOBYTE(v22[0]) = 0;
    v23 = 0;
    __p = 0;
    v20 = 0;
    v21 = 0;
    memset(v18, 0, 20);
    *(_QWORD *)buf = 0;
    v5 = sub_10029FE30(a1 + 136, &v14, (uint64_t)v22, (uint64_t)buf);
    if (v5)
    {
      if (!v23)
        sub_10028DF3C();
      sub_10033DD54(v4, (uint64_t *)buf, v22[0], v22[1]);
    }
    if (__p)
    {
      v20 = __p;
      operator delete(__p);
    }
    v16 = buf;
    sub_100385928((void ***)&v16);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v6 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v7 = (char *)operator new(0x28uLL);
      *(_QWORD *)(v7 + 29) = 0;
      *(_OWORD *)v7 = 0u;
      *((_OWORD *)v7 + 1) = 0u;
      sub_100261F9C((uint64_t)v24, v7);
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      LOWORD(v18[0]) = 2082;
      *(_QWORD *)((char *)v18 + 2) = "";
      WORD1(v18[1]) = 2082;
      *(_QWORD *)((char *)&v18[1] + 4) = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calcCachedLocalizationResults, didn't find model for requested service\", \"Service Uuid\":%{public, location:escape_only}s}", buf, 0x1Cu);
      operator delete(v7);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131A40);
    }
    v8 = qword_1022A00F8;
    if (os_signpost_enabled((os_log_t)qword_1022A00F8))
    {
      v9 = (char *)operator new(0x28uLL);
      *(_QWORD *)(v9 + 29) = 0;
      *(_OWORD *)v9 = 0u;
      *((_OWORD *)v9 + 1) = 0u;
      sub_100261F9C((uint64_t)v24, v9);
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      LOWORD(v18[0]) = 2082;
      *(_QWORD *)((char *)v18 + 2) = "";
      WORD1(v18[1]) = 2082;
      *(_QWORD *)((char *)&v18[1] + 4) = v9;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calcCachedLocalizationResults, didn't find model for requested service", "{\"msg%{public}.0s\":\"calcCachedLocalizationResults, didn't find model for requested service\", \"Service Uuid\":%{public, location:escape_only}s}", buf, 0x1Cu);
      operator delete(v9);
    }
    v5 = 0;
  }
  v10 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  return v5;
}

void sub_100384540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13)
{
  void *v13;

  operator delete(v13);
  sub_100261F44((uint64_t)&a10);
  _Unwind_Resume(a1);
}

BOOL sub_100384584(uint64_t a1, uint64_t *a2)
{
  return sub_100383ED0(a1 - 24, a2);
}

BOOL sub_10038458C(uint64_t a1, _QWORD *a2)
{
  return sub_1002B1120(a1 + 1616, a2);
}

BOOL sub_100384594(uint64_t a1, _QWORD *a2)
{
  return sub_1002B1120(a1 + 1592, a2);
}

void sub_10038459C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  void *__p;
  void *v12;
  uint64_t v13;

  v10 = a1 + 1808;
  __p = 0;
  v12 = 0;
  v13 = 0;
  sub_10025EA00(&__p, *(const void **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 3);
  sub_10033A828(v10, a2, a3, (uint64_t)&__p, a5, a6);
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_100384628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100384644(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, __n128 *a6@<X8>)
{
  NSObject *v9;
  int v10;
  uint64_t *v11;
  int v12;
  uint64_t *v13;
  char *v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  _DWORD v18[2];
  __int16 v19;
  const char *v20;
  __int16 v21;
  uint64_t *v22;
  __int16 v23;
  uint64_t *v24;
  __int16 v25;
  char *v26;
  __int16 v27;
  int v28;
  _QWORD v29[2];

  v29[0] = a3;
  v29[1] = a4;
  sub_10033B504(a1 + 1808, a2, a3, a4, a5, a6);
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v9 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v10 = (char)a2[23];
    v11 = *(uint64_t **)a2;
    v12 = (char)a5[23];
    v13 = *(uint64_t **)a5;
    v14 = (char *)operator new(0x28uLL);
    *(_OWORD *)v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    *(_QWORD *)(v14 + 29) = 0;
    sub_100261F9C((uint64_t)v29, v14);
    v15 = a6[2].n128_u64[1];
    if (v12 >= 0)
      v16 = (uint64_t *)a5;
    else
      v16 = v13;
    if (v10 >= 0)
      v17 = (uint64_t *)a2;
    else
      v17 = v11;
    v18[0] = 68290051;
    v18[1] = 0;
    v19 = 2082;
    v20 = "";
    v21 = 2081;
    v22 = v17;
    v23 = 2081;
    v24 = v16;
    v25 = 2081;
    v26 = v14;
    v27 = 1025;
    v28 = v15;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic::deleteService\", \"clientId\":%{private, location:escape_only}s, \"userId\":%{private, location:escape_only}s, \"serviceId\":%{private, location:escape_only}s, \"result\":%{private}d}", (uint8_t *)v18, 0x36u);
    operator delete(v14);
  }
}

void sub_1003847CC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1003847E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void **a4@<X8>)
{
  sub_10033A4FC(a1 + 1808, a2, a3, a4);
}

uint64_t sub_1003847E8(uint64_t a1, size_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void **a7)
{
  return sub_10033B834((uint64_t *)(a1 + 1808), a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1003847F0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 *a7)
{
  return sub_10033D048((_QWORD *)(a1 + 1808), a2, a3, a4, a7);
}

uint64_t sub_1003847FC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, int a6)
{
  return sub_10033DC84(a1 + 1808, a2, a3, a4, a5, a6);
}

uint64_t sub_100384804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7)
{
  __int128 v8;
  char v9;

  v8 = *a6;
  v9 = *((_BYTE *)a6 + 16);
  return sub_10033DEDC(a1 + 1808, a2, a3, a4, a5, (uint64_t)&v8, a7);
}

uint64_t sub_100384864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 16))(*(_QWORD *)(a1 + 2560));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2568) + 16))(*(_QWORD *)(a1 + 2568), a2, a3);
}

uint64_t sub_1003848B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2544) + 16))(*(_QWORD *)(a1 + 2544));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2552) + 16))(*(_QWORD *)(a1 + 2552), a2, a3);
}

uint64_t sub_100384904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 24))(*(_QWORD *)(a1 + 2560));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2568) + 24))(*(_QWORD *)(a1 + 2568), a2, a3, a4, a5);
}

uint64_t sub_10038496C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2544) + 24))(*(_QWORD *)(a1 + 2544));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2552) + 24))(*(_QWORD *)(a1 + 2552), a2, a3, a4, a5);
}

uint64_t sub_1003849D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 32))(*(_QWORD *)(a1 + 2560));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2568) + 32))(*(_QWORD *)(a1 + 2568), a2, a3, a4, a5);
}

uint64_t sub_100384A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2544) + 32))(*(_QWORD *)(a1 + 2544));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2552) + 32))(*(_QWORD *)(a1 + 2552), a2, a3, a4, a5);
}

uint64_t sub_100384AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  NSObject *v5;
  const char *v6;
  void *v7;
  _OWORD *v8;
  void **v9;
  int v10;
  char *v11;
  void **v12;
  uint64_t v13;
  void **v14;
  CFStringRef v15;
  int v16;
  unsigned int v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v26;
  NSObject *v27;
  _OWORD *v28;
  int v29;
  void **v30;
  void *v31;
  void **v32;
  void **v33;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  NSObject *v37;
  _OWORD *v38;
  int v39;
  void **v40;
  void *v41;
  void **v42;
  void **v43;
  void *__p[2];
  uint64_t v51;
  void **v52;
  __int128 v53;
  void *v54;
  __int128 v55;
  void *v56[2];
  uint64_t v57;
  void *v58;
  __int128 v59;
  uint8_t buf[8];
  _BYTE v61[10];
  __int16 v62;
  void *v63;
  __int16 v64;
  void *v65;
  __int16 v66;
  void **v67;
  __int16 v68;
  void **v69;
  __int16 v70;
  uint64_t v71;

  if (qword_1022A0100 != -1)
    dispatch_once(&qword_1022A0100, &stru_102131A60);
  v5 = qword_1022A0108;
  if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEFAULT))
  {
    if (*((_BYTE *)a4 + 48))
      v6 = "YES";
    else
      v6 = "NO";
    v56[0] = 0;
    v56[1] = 0;
    v57 = 0;
    v7 = &v58;
    sub_10029F7B8((char *)a4 + 56, (uint64_t)v56, (uint64_t)&v58);
    if (v59 < 0)
      v7 = v58;
    v8 = operator new(0x28uLL);
    v54 = v8;
    v55 = xmmword_101B97FF0;
    *v8 = 0u;
    v8[1] = 0u;
    *(_QWORD *)((char *)v8 + 29) = 0;
    sub_100261F9C(a2, v8);
    if (v55 >= 0)
      v9 = &v54;
    else
      v9 = (void **)v54;
    v10 = *(unsigned __int8 *)(a3 + 16);
    if (*(_BYTE *)(a3 + 16))
    {
      v11 = (char *)operator new(0x28uLL);
      v52 = (void **)v11;
      v53 = xmmword_101B97FF0;
      *(_OWORD *)v11 = 0u;
      *((_OWORD *)v11 + 1) = 0u;
      *(_QWORD *)(v11 + 29) = 0;
      sub_100261F9C(a3, v11);
      v12 = (void **)&v52;
      if (v53 < 0)
        v12 = v52;
    }
    else
    {
      __p[0] = 0;
      __p[1] = 0;
      v12 = __p;
      v51 = 0;
    }
    v13 = (a4[1] - *a4) >> 5;
    *(_QWORD *)buf = 68290307;
    *(_WORD *)v61 = 2082;
    *(_QWORD *)&v61[2] = "";
    v62 = 2081;
    v63 = (void *)v6;
    v64 = 2081;
    v65 = v7;
    v66 = 2081;
    v67 = v9;
    v68 = 2081;
    v69 = v12;
    v70 = 2049;
    v71 = v13;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Localizer results, model\", \"isStable\":%{private, location:escape_only}s, \"clientIdentifier\":%{private, location:escape_only}s, \"serviceUUID\":%{private, location:escape_only}s, \"requestId\":%{private, location:escape_only}s, \"numberOfMicroLocations\":%{private}lu}", buf, 0x44u);
    if (v10)
    {
      if (SHIBYTE(v53) < 0)
      {
        v14 = v52;
LABEL_22:
        operator delete(v14);
      }
    }
    else if (SHIBYTE(v51) < 0)
    {
      v14 = (void **)__p[0];
      goto LABEL_22;
    }
    if (SHIBYTE(v55) < 0)
      operator delete(v54);
    if (SHIBYTE(v59) < 0)
      operator delete(v58);
    if (SHIBYTE(v57) < 0)
      operator delete(v56[0]);
  }
  sub_1001E4804(buf);
  LODWORD(v58) = 0;
  v15 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumberOfLoggedProbabilityResults", 0x8000100u, kCFAllocatorNull);
  v16 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v15, &v58);
  CFRelease(v15);
  v17 = v58;
  v18 = *(std::__shared_weak_count **)v61;
  if (*(_QWORD *)v61)
  {
    v19 = (unint64_t *)(*(_QWORD *)v61 + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (v16)
    v21 = v17;
  else
    v21 = 20;
  v22 = *a4;
  v23 = a4[1];
  v24 = 0;
  if (*a4 != v23 && v21 != 0)
  {
    v26 = v22 + 32;
    do
    {
      if (qword_1022A0100 != -1)
        dispatch_once(&qword_1022A0100, &stru_102131A60);
      v27 = qword_1022A0108;
      if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEFAULT))
      {
        v28 = operator new(0x28uLL);
        v58 = v28;
        v59 = xmmword_101B97FF0;
        *v28 = 0u;
        v28[1] = 0u;
        *(_QWORD *)((char *)v28 + 29) = 0;
        sub_100261F9C(v26 - 32, v28);
        v29 = SHIBYTE(v59);
        v30 = (void **)v58;
        v31 = *(void **)(v26 - 16);
        v54 = 0;
        v55 = 0uLL;
        sub_10029F7B8((char *)a4 + 56, (uint64_t)&v54, (uint64_t)v56);
        v32 = &v58;
        if (v29 < 0)
          v32 = v30;
        v33 = v56;
        if (v57 < 0)
          v33 = (void **)v56[0];
        *(_QWORD *)buf = 68289795;
        *(_WORD *)v61 = 2082;
        *(_QWORD *)&v61[2] = "";
        v62 = 2081;
        v63 = v32;
        v64 = 2049;
        v65 = v31;
        v66 = 2081;
        v67 = v33;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Localizer results, cluster\", \"microLocationId\":%{private, location:escape_only}s, \"probability\":\"%{private}.6f\", \"clientIdentifier\":%{private, location:escape_only}s}", buf, 0x30u);
        if (SHIBYTE(v57) < 0)
          operator delete(v56[0]);
        if (SHIBYTE(v55) < 0)
          operator delete(v54);
        if (SHIBYTE(v59) < 0)
          operator delete(v58);
      }
      ++v24;
      if (v26 == v23)
        break;
      v26 += 32;
    }
    while (v24 < v21);
    v22 = *a4;
    v23 = a4[1];
  }
  v34 = v24;
  if (v24 < (unint64_t)((v23 - v22) >> 5))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      v35 = *a4;
      if (v24 < (unint64_t)((a4[1] - *a4) >> 5))
      {
        v36 = v24 + 1;
        do
        {
          if (qword_1022A0100 != -1)
            dispatch_once(&qword_1022A0100, &stru_102131A60);
          v37 = qword_1022A0108;
          if (os_log_type_enabled((os_log_t)qword_1022A0108, OS_LOG_TYPE_DEBUG))
          {
            v38 = operator new(0x28uLL);
            v58 = v38;
            v59 = xmmword_101B97FF0;
            *v38 = 0u;
            v38[1] = 0u;
            *(_QWORD *)((char *)v38 + 29) = 0;
            sub_100261F9C(v35 + 32 * v34, v38);
            v39 = SHIBYTE(v59);
            v40 = (void **)v58;
            v41 = *(void **)(v35 + 32 * v34 + 16);
            v54 = 0;
            v55 = 0uLL;
            sub_10029F7B8((char *)a4 + 56, (uint64_t)&v54, (uint64_t)v56);
            v42 = &v58;
            if (v39 < 0)
              v42 = v40;
            v43 = v56;
            if (v57 < 0)
              v43 = (void **)v56[0];
            *(_QWORD *)buf = 68289795;
            *(_WORD *)v61 = 2082;
            *(_QWORD *)&v61[2] = "";
            v62 = 2081;
            v63 = v42;
            v64 = 2049;
            v65 = v41;
            v66 = 2081;
            v67 = v43;
            _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Localizer results, cluster\", \"microLocationId\":%{private, location:escape_only}s, \"probability\":\"%{private}.6f\", \"clientIdentifier\":%{private, location:escape_only}s}", buf, 0x30u);
            if (SHIBYTE(v57) < 0)
              operator delete(v56[0]);
            if (SHIBYTE(v55) < 0)
              operator delete(v54);
            if (SHIBYTE(v59) < 0)
              operator delete(v58);
          }
          v34 = v36;
          v35 = *a4;
          ++v36;
        }
        while (v34 < (a4[1] - *a4) >> 5);
      }
    }
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t *, uint64_t))(**(_QWORD **)(a1 + 2560) + 40))(*(_QWORD *)(a1 + 2560), a2, a3, a4, a5);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t *, uint64_t))(**(_QWORD **)(a1 + 2568) + 40))(*(_QWORD *)(a1 + 2568), a2, a3, a4, a5);
}

void sub_1003851B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  void *v41;

  operator delete(v41);
  if (a29 < 0)
    operator delete(__p);
  if (a41 < 0)
    operator delete(a36);
  if (a35 < 0)
    operator delete(a30);
  _Unwind_Resume(a1);
}

uint64_t sub_10038526C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  return sub_100384AA4(a1 - 16, a2, a3, a4, a5);
}

uint64_t sub_100385274(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 48))(*(_QWORD *)(a1 + 2560));
}

uint64_t sub_100385284(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2544) + 48))(*(_QWORD *)(a1 + 2544));
}

BOOL sub_100385294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10033DF58(a1 + 1808, a2, a3, a4, a5, a6, a7);
}

BOOL sub_10038529C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10033DFCC(a1 + 1808, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1003852A4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  return sub_1003400F0((_QWORD *)(a1 + 1808), a2, a3, a4);
}

uint64_t sub_1003852AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 56))(*(_QWORD *)(a1 + 2560));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2568) + 56))(*(_QWORD *)(a1 + 2568), a2, a3, a4);
}

uint64_t sub_100385304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 2544) + 56))(*(_QWORD *)(a1 + 2544));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a1 + 2552) + 56))(*(_QWORD *)(a1 + 2552), a2, a3, a4);
}

BOOL sub_10038535C(uint64_t a1)
{
  return sub_1002B1340(a1 + 1616);
}

uint64_t sub_100385364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  return sub_10033FC38(a1 + 1808, a2, a3, a4, a5);
}

uint64_t sub_10038536C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 104))(*(_QWORD *)(a1 + 2560));
}

uint64_t sub_10038537C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2536) + 104))(*(_QWORD *)(a1 + 2536));
}

BOOL sub_10038538C(uint64_t a1, uint64_t *a2, int a3)
{
  return sub_10033DCDC(a1 + 1808, a2, a3);
}

BOOL sub_100385394(uint64_t a1, uint64_t *a2)
{
  return sub_10033DD1C(a1 + 1808, a2);
}

uint64_t sub_10038539C(uint64_t a1, __int128 *a2)
{
  sub_10032CE84(a1 + 2056, a2);
  return -1;
}

uint64_t sub_1003853B8(uint64_t a1, __int128 *a2)
{
  sub_10032CE84(a1 + 2032, a2);
  return -1;
}

uint64_t sub_1003853D4(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v4 = a1 + 2056;
  v5 = *(unsigned __int8 *)(a3 + 23);
  if ((v5 & 0x80u) == 0)
    v6 = (unsigned __int8 *)a3;
  else
    v6 = *(unsigned __int8 **)a3;
  if ((v5 & 0x80u) != 0)
    v5 = *(_QWORD *)(a3 + 8);
  v7 = sub_100268D2C((uint64_t)&v10, v6, &v6[v5]);
  sub_10032CF7C(v4, v7, v8, a2);
  return -1;
}

void sub_100385440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_100115CE4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_10037FA1C(a1, &__p, a3, a4, a5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_1003854CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1003854E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  sub_100385440(a1 - 32, a2, a3, a4, a5);
}

void sub_1003854F0(uint64_t a1, uint64_t a2)
{
  sub_1003402F8(a1 + 1808, a2);
}

void sub_1003854F8(uint64_t a1, uint64_t a2)
{
  sub_1003402F8(a1 + 1776, a2);
}

uint64_t sub_100385508(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 136))(*(_QWORD *)(a1 + 2560));
}

uint64_t sub_100385518(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2528) + 136))(*(_QWORD *)(a1 + 2528));
}

uint64_t sub_100385528(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2560) + 144))(*(_QWORD *)(a1 + 2560));
}

uint64_t sub_100385538(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 2528) + 144))(*(_QWORD *)(a1 + 2528));
}

void sub_100385548(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100385574(uint64_t a1)
{
  void *v2;

  if (*(_BYTE *)(a1 + 384))
  {
    sub_1002DF2E0(a1 + 248);
    sub_1002967B0(a1 + 48);
    v2 = *(void **)(a1 + 24);
    if (v2)
    {
      *(_QWORD *)(a1 + 32) = v2;
      operator delete(v2);
    }
  }
  return a1;
}

void sub_1003855BC(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_10029DE48(v4 - 192);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_10038562C(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  void **v6;
  CFRange v7;

  v4 = 0uLL;
  v5 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_1003856CC, &v4);
  *(_OWORD *)a2 = v4;
  *(_QWORD *)(a2 + 16) = v5;
  v5 = 0;
  v4 = 0uLL;
  v6 = (void **)&v4;
  sub_100259608(&v6);
}

void sub_1003856AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_100259608(&a12);
  _Unwind_Resume(a1);
}

void sub_1003856CC(void *a1, uint64_t *a2)
{
  unint64_t v3;
  __int128 v4;
  uint64_t v5;
  void *__p[2];
  uint64_t v7;

  sub_100385788(a1, __p);
  v3 = a2[1];
  if (v3 >= a2[2])
  {
    v5 = sub_1015E796C(a2, (__int128 *)__p);
  }
  else
  {
    if (SHIBYTE(v7) < 0)
    {
      sub_100115CE4((_BYTE *)a2[1], __p[0], (unint64_t)__p[1]);
    }
    else
    {
      v4 = *(_OWORD *)__p;
      *(_QWORD *)(v3 + 16) = v7;
      *(_OWORD *)v3 = v4;
    }
    v5 = v3 + 24;
    a2[1] = v3 + 24;
  }
  a2[1] = v5;
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
}

void sub_100385760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 + 8) = v16;
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100385788@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  CFTypeID v4;

  v4 = CFGetTypeID(a1);
  if (v4 != CFStringGetTypeID())
    sub_1018F8010();
  return sub_1015A2E04(a2, (char *)objc_msgSend(a1, "UTF8String"));
}

_QWORD *sub_1003857D8(_QWORD *result, char **a2, char **a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_100259C18(result, a4);
    result = sub_10038585C((uint64_t)(v6 + 2), a2, a3, (_QWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10038583C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_100259608(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_10038585C(uint64_t a1, char **a2, char **a3, _QWORD *a4)
{
  _QWORD *v4;
  char **v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_1015A2E04(v4, *v6++);
      v4 = v11 + 3;
      v11 += 3;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_100259D24((uint64_t)v8);
  return v4;
}

void sub_1003858E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100259D24((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003858FC(id a1)
{
  qword_1022A0108 = (uint64_t)os_log_create("com.apple.locationd.Position", "MicrolocationQE");
}

void sub_100385928(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 216;
        sub_1002A358C((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1003859AC(uint64_t a1)
{
  void *v2;

  sub_1003859E4(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_1003859E4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_100385A20((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_100385A20(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0)
    operator delete(*(void **)(a1 + 40));
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
}

void sub_100385A64(uint64_t *a1)
{
  if (*a1)
  {
    sub_100259648(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_100385A9C(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t *v15;

  v2 = *a1;
  v3 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL)
    sub_100259694();
  v5 = (uint64_t)(a1 + 2);
  v6 = 0x8E38E38E38E38E39 * ((a1[2] - v2) >> 3);
  if (2 * v6 > v4)
    v4 = 2 * v6;
  if (v6 >= 0x1C71C71C71C71C7)
    v7 = 0x38E38E38E38E38ELL;
  else
    v7 = v4;
  v15 = a1 + 2;
  if (v7)
    v8 = (char *)sub_10029D26C(v5, v7);
  else
    v8 = 0;
  v11 = v8;
  v12 = &v8[72 * v3];
  v14 = &v8[72 * v7];
  sub_100395B20(v12);
  v13 = v12 + 72;
  sub_100313AF4(a1, &v11);
  v9 = a1[1];
  sub_100313C8C((uint64_t)&v11);
  return v9;
}

void sub_100385BEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100313C8C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100385C00(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  uint64_t result;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  int v8;
  const char *v9;
  uint8_t buf[4];
  const char *v11;

  v2 = sub_100290044(a1);
  if (sub_100385DF4() > v2)
    return 1;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131A40);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v11 = "MicroLocationAssociatedState";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131A40);
    v8 = 136446210;
    v9 = "MicroLocationAssociatedState";
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", &v8, 12);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationAssociatedStateTable]", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  result = sub_1002885FC(a1);
  if ((_DWORD)result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0)
      v5 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v5 = *(_QWORD *)(a1 + 160);
    sub_100053048(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_100385DF4()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAssociatedStateTableMaxRows", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 1000;
}

void sub_100385EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_100385ED0(_QWORD *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_100364E14(result, a4);
    result = (_QWORD *)sub_100385F54((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100385F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_10030558C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100385F54(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_100385FFC(a1, v4, (uint64_t)(v6 + 2));
      v6 = (_QWORD *)*v6;
      v4 = v12 + 80;
      v12 += 80;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_1003860AC((uint64_t)v9);
  return v4;
}

void sub_100385FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1003860AC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

__n128 sub_100385FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v5;
  __int128 v6;
  _BYTE *v7;
  __int128 v8;
  __n128 result;

  *(_OWORD *)a2 = *(_OWORD *)a3;
  v5 = (_BYTE *)(a2 + 16);
  if (*(char *)(a3 + 39) < 0)
  {
    sub_100115CE4(v5, *(void **)(a3 + 16), *(_QWORD *)(a3 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a3 + 16);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a3 + 32);
    *(_OWORD *)v5 = v6;
  }
  v7 = (_BYTE *)(a2 + 40);
  if (*(char *)(a3 + 63) < 0)
  {
    sub_100115CE4(v7, *(void **)(a3 + 40), *(_QWORD *)(a3 + 48));
  }
  else
  {
    v8 = *(_OWORD *)(a3 + 40);
    *(_QWORD *)(a2 + 56) = *(_QWORD *)(a3 + 56);
    *(_OWORD *)v7 = v8;
  }
  result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

void sub_100386090(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003860AC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1003860E0((uint64_t *)a1);
  return a1;
}

void sub_1003860E0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 80;
      sub_10029D400(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_100386130(_QWORD *a1, uint64_t *a2)
{
  void *v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  const __CFDictionary *v9;
  uint64_t v10;
  _BYTE v11[16];
  _QWORD v12[2];

  *sub_100119D70(a1) = &off_102131AB0;
  v4 = objc_autoreleasePoolPush();
  v5 = *((char *)a2 + 23);
  if (v5 >= 0)
    v6 = a2;
  else
    v6 = (uint64_t *)*a2;
  if (v5 >= 0)
    v7 = *((unsigned __int8 *)a2 + 23);
  else
    v7 = a2[1];
  v9 = +[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", +[NSData dataWithBytes:length:](NSData, "dataWithBytes:length:", v6, v7), 0, 0);
  if (v9 && (v10 = objc_opt_class(NSDictionary, v8), (objc_opt_isKindOfClass(v9, v10) & 1) != 0))
  {
    sub_1001C1D6C((int)v11, v9);
    sub_100524E68(v12, (uint64_t)v11);
    v12[0] = &off_102131AB0;
    sub_10052502C((uint64_t)a1, (uint64_t)v12);
    sub_10011A56C(v12);
    sub_10011A5A8(v11);
    objc_autoreleasePoolPop(v4);
  }
  else
  {
    sub_1018F8188();
    abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/MicroLocation/CLMicroLocationSettingsTypes.mm", 17, "CLMicroLocationDictionary");
    __break(1u);
  }
}

void sub_10038624C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_10011A56C(v1);
  _Unwind_Resume(a1);
}

const __CFString *sub_100386290()
{
  return CFSTR("MicroLocationSettings");
}

void sub_10038629C(_QWORD *a1)
{
  sub_10011A56C(a1);
  operator delete();
}

void sub_1003862C0(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1003862EC(double *a1@<X1>, _BYTE *a2@<X8>)
{
  NSObject *v4;
  double v5;
  const char *v6;
  uint8_t *v7;
  _BYTE v8[24];
  _WORD v9[72];
  uint8_t buf[8];
  _BYTE v11[1632];

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131E90);
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Force Recording received", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131E90);
      v9[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Force Recording received", v9, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "std::tuple<BOOL, const CLMicroLocationProto::RecordingEvent> CLMicroLocationLegacyEventForcedRecording::handleEvent(const cl::chrono::CFAbsoluteTimeClock::time_point &)", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
  }
  v5 = *a1;
  sub_1002BBBE8((uint64_t)v8);
  sub_100386544((uint64_t)v8, 0, 0, 3u, (uint64_t)v9, v5);
  buf[0] = 1;
  sub_1002DF194(v11);
  *a2 = buf[0];
  sub_1002DF194(a2 + 8);
  sub_1002DF2E0(v11);
  sub_1002DF2E0(v9);
  sub_1002CD720((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100386508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_1002DF2E0(v4);
  sub_1002DF2E0(va1);
  sub_1002CD720((wireless_diagnostics::google::protobuf::MessageLite *)va);
  _Unwind_Resume(a1);
}

void sub_100386544(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  unsigned int v12;
  int v13;
  const char *v14;
  int v15;
  const char *v16;

  sub_1002BBFAC(a5);
  v12 = *(_DWORD *)(a1 + 8);
  if (!sub_1002BC6A4(v12))
  {
    v14 = "::CLMicroLocationProto::EventType_IsValid(value)";
    v15 = 19803;
    v16 = "set_eventtype";
    goto LABEL_6;
  }
  v13 = *(_DWORD *)(a5 + 128);
  *(_DWORD *)(a5 + 72) = v12;
  *(double *)(a5 + 8) = a6;
  *(_BYTE *)(a5 + 77) = a2;
  *(_DWORD *)(a5 + 128) = v13 | 0x2803;
  *(_BYTE *)(a5 + 76) = a3;
  if ((sub_1002BC674(a4) & 1) == 0)
  {
    v14 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    v15 = 20312;
    v16 = "set_confidencelevel";
LABEL_6:
    __assert_rtn(v16, "microlocation.pb.h", v15, v14);
  }
  *(_DWORD *)(a5 + 128) |= 0x4000u;
  *(_DWORD *)(a5 + 120) = a4;
  sub_100358300(a5, a1);
}

void sub_100386628(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1002DF2E0(v1);
  _Unwind_Resume(a1);
}

void sub_10038663C(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100386668(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  const __CFString *v8;
  _BOOL4 v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const __CFString *v19;
  _BOOL4 v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  CFStringRef v32;
  unsigned __int8 v33;
  int v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  void **v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void **v45;
  std::__shared_weak_count *v46;
  const __CFArray *v47;

  v3 = 0;
  v5 = 0;
  switch(*(_DWORD *)(a2 + 72))
  {
    case 1:
      if ((*(_BYTE *)(a2 + 128) & 4) == 0)
        goto LABEL_6;
      v6 = *(_QWORD *)(a2 + 16);
      if (!v6)
        v6 = *(_QWORD *)(qword_102310400 + 16);
      if ((*(_BYTE *)(v6 + 44) & 2) == 0)
        goto LABEL_6;
      v5 = 0;
      if (*(_DWORD *)(v6 + 12) == 3)
        v3 = 1;
      else
        v3 = 2;
      break;
    case 2:
      sub_1001E4804(&v39);
      v45 = 0;
      v8 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAppLaunchReasonRecordingAllowedList", 0x8000100u, kCFAllocatorNull);
      v9 = sub_100527258((uint64_t)v39, v8, (CFTypeRef *)&v45);
      CFRelease(v8);
      if (v9)
      {
        sub_100386CF4((const __CFArray *)v45, (uint64_t)&v42);
      }
      else
      {
        v42 = 0;
        v43 = 0;
        v44 = 0;
        sub_1003857D8(&v42, &off_10212F610, (char **)&stru_10212F658, 9uLL);
      }
      v14 = v40;
      if (v40)
      {
        p_shared_owners = (unint64_t *)&v40->__shared_owners_;
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      v17 = *(_QWORD *)(a2 + 24);
      if (!v17)
        v17 = *(_QWORD *)(qword_102310400 + 24);
      v18 = sub_100304CA0(v42, v43, *(unsigned __int8 ***)(v17 + 24));
      if (v18 == v43)
        v5 = 0;
      else
        v5 = 0x300000000;
      sub_1001E4804(&v45);
      v47 = 0;
      v19 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAppLaunchLocalizationReasonDenyList", 0x8000100u, kCFAllocatorNull);
      v20 = sub_100527258((uint64_t)v45, v19, (CFTypeRef *)&v47);
      CFRelease(v19);
      if (v20)
      {
        sub_100386E50(v47, (uint64_t)&v39);
      }
      else
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        sub_1003857D8(&v39, &off_102131EB0, (char **)&stru_102131EB8, 1uLL);
      }
      v21 = v46;
      if (v46)
      {
        v22 = (unint64_t *)&v46->__shared_owners_;
        do
          v23 = __ldaxr(v22);
        while (__stlxr(v23 - 1, v22));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      v24 = *(_QWORD *)(a2 + 24);
      if (!v24)
        v24 = *(_QWORD *)(qword_102310400 + 24);
      v25 = sub_100304CA0((uint64_t)v39, (uint64_t)v40, *(unsigned __int8 ***)(v24 + 24));
      v26 = *(_QWORD *)(a2 + 24);
      v27 = v26;
      if (!v26)
        v27 = *(_QWORD *)(qword_102310400 + 24);
      v28 = *(_QWORD *)(v27 + 16);
      if (!v28)
        v28 = *(_QWORD *)(qword_102310320 + 16);
      if (*(_BYTE *)(v28 + 8))
        goto LABEL_64;
      if (!v26)
        v26 = *(_QWORD *)(qword_102310400 + 24);
      v29 = *(_QWORD *)(v26 + 16);
      if (!v29)
        v29 = *(_QWORD *)(qword_102310320 + 16);
      v30 = !*(_BYTE *)(v29 + 9) || a3 == 0;
      if (!v30 && v25 == (_QWORD)v40)
      {
LABEL_64:
        sub_1001E4804(&v45);
        LOBYTE(v47) = 0;
        v32 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsForceLocalizeOnAllowedApps", 0x8000100u, kCFAllocatorNull);
        v33 = sub_1001E48E4((uint64_t)v45, (uint64_t)v32, (BOOL *)&v47);
        CFRelease(v32);
        v34 = v47;
        v35 = v46;
        if (v46)
        {
          v36 = (unint64_t *)&v46->__shared_owners_;
          do
            v37 = __ldaxr(v36);
          while (__stlxr(v37 - 1, v36));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        if ((v33 & (v34 != 0)) != 0)
          v3 = 1;
        else
          v3 = 2;
      }
      else
      {
        v3 = 0;
      }
      v45 = (void **)&v39;
      sub_100259608(&v45);
      v39 = (void **)&v42;
      sub_100259608(&v39);
      break;
    case 3:
    case 6:
    case 8:
    case 0xB:
      return v5 | v3;
    case 4:
      v5 = 0;
      v3 = 3;
      break;
    case 5:
    case 0xC:
LABEL_6:
      v5 = 0;
      v3 = 2;
      break;
    case 7:
      v3 = 0;
      v5 = (uint64_t)&_mh_execute_header;
      break;
    case 9:
      v10 = *(_QWORD *)(a2 + 56);
      if (!v10)
        v10 = *(_QWORD *)(qword_102310400 + 56);
      v3 = 2 * *(unsigned __int8 *)(v10 + 68);
      v11 = *(unsigned __int8 *)(v10 + 69);
      goto LABEL_17;
    case 0xA:
      v12 = *(_QWORD *)(a2 + 64);
      if (!v12)
        v12 = *(_QWORD *)(qword_102310400 + 64);
      v3 = 2 * *(unsigned __int8 *)(v12 + 52);
      v11 = *(unsigned __int8 *)(v12 + 53);
LABEL_17:
      if (v11)
        v5 = 0x300000000;
      else
        v5 = 0;
      break;
    case 0xD:
      v13 = *(_QWORD *)(a2 + 88);
      if (!v13)
        v13 = *(_QWORD *)(qword_102310400 + 88);
      v3 = 0;
      if (*(_DWORD *)(v13 + 12) == 2)
        v5 = 0x200000000;
      else
        v5 = 0x300000000;
      break;
    default:
      v5 = 0;
      break;
  }
  return v5 | v3;
}

void sub_100386AE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;
  uint64_t v10;
  uint64_t v11;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, void **);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v8 = va_arg(va2, _QWORD);
  v10 = va_arg(va2, _QWORD);
  v11 = va_arg(va2, _QWORD);
  sub_100261F44((uint64_t)va2);
  *(_QWORD *)(v2 - 56) = va;
  sub_100259608((void ***)(v2 - 56));
  va_copy((va_list)v4, va1);
  sub_100259608((void ***)va);
  _Unwind_Resume(a1);
}

BOOL sub_100386B58(double a1, double a2, uint64_t a3, int a4, uint64_t a5, unsigned __int8 a6)
{
  int v8;
  double v9;
  _BOOL4 v10;
  _BOOL8 v11;
  NSObject *v12;
  unint64_t v13;
  _DWORD v15[2];
  __int16 v16;
  const char *v17;
  __int16 v18;
  int v19;
  __int16 v20;
  unint64_t v21;
  __int16 v22;
  double v23;
  __int16 v24;
  _BOOL4 v25;

  v8 = a6;
  v9 = a1 - *(double *)&a5;
  v10 = a1 - *(double *)&a5 < a2;
  if (!a6)
    v10 = 0;
  v11 = a4 == 3 && v10;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131EB8);
  v12 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v13 = *(_QWORD *)&v9;
    v16 = 2082;
    v15[0] = 68290050;
    if (!v8)
      v13 = 0xBFF0000000000000;
    v15[1] = 0;
    v17 = "";
    v18 = 1026;
    v19 = a4;
    v20 = 2050;
    v21 = v13;
    v22 = 2050;
    v23 = a2;
    v24 = 1026;
    v25 = v11;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"isThrottle\", \"type\":%{public}d, \"time since last allowed timestamp(sec)\":\"%{public}.2f\", \"throttle duration(sec)\":\"%{public}.2f\", \"isThrottle\":%{public}hhd}", (uint8_t *)v15, 0x32u);
  }
  return v11;
}

uint64_t sub_100386CA4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  if (!*(_BYTE *)(result + 8))
    *(_BYTE *)(result + 8) = 1;
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_100386CC0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  if (!*(_BYTE *)(result + 24))
    *(_BYTE *)(result + 24) = 1;
  *(_QWORD *)(result + 16) = v2;
  return result;
}

uint64_t sub_100386CDC(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_100386CE8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

void sub_100386CF4(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  void **v6;
  CFRange v7;

  v4 = 0uLL;
  v5 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100386D94, &v4);
  *(_OWORD *)a2 = v4;
  *(_QWORD *)(a2 + 16) = v5;
  v5 = 0;
  v4 = 0uLL;
  v6 = (void **)&v4;
  sub_100259608(&v6);
}

void sub_100386D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_100259608(&a12);
  _Unwind_Resume(a1);
}

void sub_100386D94(void *a1, uint64_t *a2)
{
  unint64_t v3;
  __int128 v4;
  uint64_t v5;
  void *__p[2];
  uint64_t v7;

  sub_100385788(a1, __p);
  v3 = a2[1];
  if (v3 >= a2[2])
  {
    v5 = sub_1015E796C(a2, (__int128 *)__p);
  }
  else
  {
    if (SHIBYTE(v7) < 0)
    {
      sub_100115CE4((_BYTE *)a2[1], __p[0], (unint64_t)__p[1]);
    }
    else
    {
      v4 = *(_OWORD *)__p;
      *(_QWORD *)(v3 + 16) = v7;
      *(_OWORD *)v3 = v4;
    }
    v5 = v3 + 24;
    a2[1] = v3 + 24;
  }
  a2[1] = v5;
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
}

void sub_100386E28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 + 8) = v16;
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100386E50(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  void **v6;
  CFRange v7;

  v4 = 0uLL;
  v5 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100386EF0, &v4);
  *(_OWORD *)a2 = v4;
  *(_QWORD *)(a2 + 16) = v5;
  v5 = 0;
  v4 = 0uLL;
  v6 = (void **)&v4;
  sub_100259608(&v6);
}

void sub_100386ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_100259608(&a12);
  _Unwind_Resume(a1);
}

void sub_100386EF0(void *a1, uint64_t *a2)
{
  unint64_t v3;
  __int128 v4;
  uint64_t v5;
  void *__p[2];
  uint64_t v7;

  sub_100385788(a1, __p);
  v3 = a2[1];
  if (v3 >= a2[2])
  {
    v5 = sub_1015E796C(a2, (__int128 *)__p);
  }
  else
  {
    if (SHIBYTE(v7) < 0)
    {
      sub_100115CE4((_BYTE *)a2[1], __p[0], (unint64_t)__p[1]);
    }
    else
    {
      v4 = *(_OWORD *)__p;
      *(_QWORD *)(v3 + 16) = v7;
      *(_OWORD *)v3 = v4;
    }
    v5 = v3 + 24;
    a2[1] = v3 + 24;
  }
  a2[1] = v5;
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
}

void sub_100386F84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 + 8) = v16;
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100386FAC(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_100386FD8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A08D0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A08D0))
  {
    sub_10038A224((std::string *)&xmmword_1022A08B8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A08B8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A08D0);
  }
  if (byte_1022A08CF < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A08B8, *((unint64_t *)&xmmword_1022A08B8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A08B8;
    *(_QWORD *)(a1 + 16) = unk_1022A08C8;
  }
}

void sub_100387088(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A08D0);
  _Unwind_Resume(a1);
}

void sub_1003870A0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A08F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A08F0))
  {
    sub_10038A394((std::string *)&xmmword_1022A08D8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A08D8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A08F0);
  }
  if (byte_1022A08EF < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A08D8, *((unint64_t *)&xmmword_1022A08D8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A08D8;
    *(_QWORD *)(a1 + 16) = unk_1022A08E8;
  }
}

void sub_100387150(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A08F0);
  _Unwind_Resume(a1);
}

void sub_100387168(uint64_t a1)
{
  BOOL v2;
  BOOL v3;
  NSObject *v4;
  uint8_t *v5;
  double v6;
  NSObject *v7;
  uint8_t *v8;
  NSObject *v9;
  double v10;
  uint8_t *v11;
  int v12;
  const char *v13;
  uint8_t buf[4];
  const char *v15;

  v2 = sub_1000CC4F4(*(_QWORD *)a1);
  *(_BYTE *)(a1 + 8) = v2;
  if (v2)
  {
    sub_100634364(*(_QWORD *)a1, "MiLoCustomLoiTable", (const char **)&off_102131EF8, 0, 0);
    v3 = sub_100635B3C(*(_QWORD *)a1, "MiLoCustomLoiTable");
    *(_BYTE *)(a1 + 8) = v3;
    if (v3)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131ED8);
      v4 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136315138;
        v15 = "MiLoCustomLoiTable";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131ED8);
        v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Sucessfully created table if necessary: %s", &v12);
LABEL_19:
        v8 = v5;
        sub_100512490("Generic", 1, 0, 2, "void CLMiLoCustomLoiTable::initTable()", "%s\n", v6);
LABEL_29:
        if (v8 != buf)
          free(v8);
      }
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131ED8);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        v15 = "MiLoCustomLoiTable";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102131ED8);
        v12 = 136446210;
        v13 = "MiLoCustomLoiTable";
        v10 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Failed to create table: %{public}s", &v12, 12);
        v8 = v11;
        sub_100512490("Generic", 1, 0, 0, "void CLMiLoCustomLoiTable::initTable()", "%s\n", v10);
        goto LABEL_29;
      }
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131ED8);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131ED8);
      v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Database is not connected so we can't intialize our table");
      goto LABEL_19;
    }
  }
}

uint64_t sub_100387554(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  sub_100387168(a1);
  return a1;
}

uint64_t sub_100387580(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  NSObject *v3;
  const char *v5;
  uint8_t *v6;
  void *__dst[2];
  uint8_t buf[8];

  if (*(_BYTE *)(a1 + 8))
  {
    v1 = *(_QWORD *)a1;
    if (byte_102301197 >= 0)
      v2 = (char *)&xmmword_102301180;
    else
      v2 = (char *)xmmword_102301180;
    sub_1000CDA68(v1, v2);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131ED8);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131ED8);
    LOWORD(__dst[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't insert or replace", __dst, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMiLoCustomLoiTable::insertOrReplace(const std::vector<CLMiLoCustomLoiTable::Entry> &)", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  return 0;
}

void sub_100387BA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,std::bad_cast a31)
{
  if (a21 < 0)
    operator delete(__p);
  if (a27 < 0)
    operator delete(a22);
  if (a28)
    (*(void (**)(uint64_t))(*(_QWORD *)a28 + 8))(a28);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100387C1C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CFAbsoluteTime Current;
  NSObject *v10;
  const char *v12;
  void **v13;
  _WORD v14[8];
  void *__dst[2];
  uint64_t v16;
  uint64_t v17[3];
  void *__p[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CFAbsoluteTime v22;

  if (!sub_100387EE0(a1, a2, (uint64_t)a3))
    return 0;
  memset(v17, 0, sizeof(v17));
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a2;
    v16 = *(_QWORD *)(a2 + 16);
  }
  v8 = *a3;
  v7 = a3[1];
  Current = j__CFAbsoluteTimeGetCurrent();
  if (SHIBYTE(v16) < 0)
  {
    sub_100115CE4(__p, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)__dst;
    v19 = v16;
  }
  v20 = v8;
  v21 = v7;
  v22 = Current;
  sub_10038873C(v17, (__int128 *)__p);
  if (SHIBYTE(v19) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v16) < 0)
    operator delete(__dst[0]);
  v6 = sub_100387580((uint64_t)a1);
  if ((v6 & 1) == 0)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131ED8);
    v10 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#Warning Failed to add Service Id to LOI Id mapping", (uint8_t *)__p, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102131ED8);
      v14[0] = 0;
      _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, qword_1022A00F8, 16, "#Warning Failed to add Service Id to LOI Id mapping", v14, 2);
      v13 = (void **)v12;
      sub_100512490("Generic", 1, 0, 0, "BOOL CLMiLoCustomLoiTable::addServiceToCustomLoiMapping(const std::string &, const boost::uuids::uuid &)", "%s\n", v12);
      if (v13 != __p)
        free(v13);
    }
  }
  __p[0] = v17;
  sub_10038A4E8((void ***)__p);
  return v6;
}

void sub_100387E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,char *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  __p = &a19;
  sub_10038A4E8((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_100387EE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *p_p;
  std::string::size_type size;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  char *v31;
  NSObject *v32;
  const char *v34;
  std::string::value_type *v35;
  std::string __p;
  std::string::value_type v37[8];
  char v38;
  std::string::value_type v39[8];
  char v40;
  std::string::value_type __s[8];
  char v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  std::string v52;
  __int128 v53;
  int64_t v54;
  std::string::value_type v55[8];
  _UNKNOWN **v56;
  _UNKNOWN **v57;

  if (*((_BYTE *)a1 + 8))
  {
    *((_BYTE *)&v43.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v43, "DELETE FROM ");
    v6 = std::string::append(&v43, "MiLoCustomLoiTable");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v44, " WHERE (");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v45, "ServiceId");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v42 = 2;
    strcpy(__s, "=\"");
    v12 = std::string::append(&v46, __s, 2uLL);
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = *(char *)(a2 + 23);
    if (v14 >= 0)
      v15 = (const std::string::value_type *)a2;
    else
      v15 = *(const std::string::value_type **)a2;
    if (v14 >= 0)
      v16 = *(unsigned __int8 *)(a2 + 23);
    else
      v16 = *(_QWORD *)(a2 + 8);
    v17 = std::string::append(&v47, v15, v16);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v40 = 6;
    strcpy(v39, "\" AND ");
    v19 = std::string::append(&v48, v39, 6uLL);
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    v21 = std::string::append(&v49, "LoiId");
    v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    v38 = 2;
    strcpy(v37, "=\"");
    v23 = std::string::append(&v50, v37, 2uLL);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    memset(&__p, 0, sizeof(__p));
    if ((sub_10026A098(a3, &__p) & 1) != 0)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        size = __p.__r_.__value_.__l.__size_;
      v27 = std::string::append(&v51, (const std::string::value_type *)p_p, size);
      v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
      v52.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v28;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      HIBYTE(v57) = 2;
      strcpy(v55, "\")");
      v29 = std::string::append(&v52, v55, 2uLL);
      v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      v54 = v29->__r_.__value_.__r.__words[2];
      v53 = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v57) < 0)
        operator delete(*(void **)v55);
      if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v52.__r_.__value_.__l.__data_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v51.__r_.__value_.__l.__data_);
      if (v38 < 0)
        operator delete(*(void **)v37);
      if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v50.__r_.__value_.__l.__data_);
      if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v49.__r_.__value_.__l.__data_);
      if (v40 < 0)
        operator delete(*(void **)v39);
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v48.__r_.__value_.__l.__data_);
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v47.__r_.__value_.__l.__data_);
      if (v42 < 0)
        operator delete(*(void **)__s);
      if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v46.__r_.__value_.__l.__data_);
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v45.__r_.__value_.__l.__data_);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v43.__r_.__value_.__l.__data_);
      if (v54 >= 0)
        v31 = (char *)&v53;
      else
        v31 = (char *)v53;
      sub_1000CDA68(*a1, v31);
    }
    std::bad_cast::bad_cast((std::bad_cast *)v55);
    *(_QWORD *)v55 = &off_10212A508;
    sub_10026A9C8((uint64_t)v55);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131ED8);
  v32 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v55 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so can't remove service to custom LOI mapping", (uint8_t *)v55, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(v55, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131ED8);
    LOWORD(v53) = 0;
    _os_log_send_and_compose_impl(2, 0, v55, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so can't remove service to custom LOI mapping", &v53, 2);
    v35 = (std::string::value_type *)v34;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMiLoCustomLoiTable::removeServiceToCustomLoiMapping(const std::string &, const boost::uuids::uuid &)", "%s\n", v34);
    if (v35 != v55)
      free(v35);
  }
  return 0;
}

void sub_1003885A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,uint64_t a62,void *__p)
{
  char a68;
  uint64_t v68;

  if (v68)
    (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
  if (a68 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_10038873C(uint64_t *a1, __int128 *a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  _QWORD v19[5];

  v6 = a1[2];
  result = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(result - 8);
  if (v7 >= v6)
  {
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a1) >> 4);
    v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555)
      sub_100259694();
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 4);
    if (2 * v13 > v12)
      v12 = 2 * v13;
    if (v13 >= 0x2AAAAAAAAAAAAAALL)
      v14 = 0x555555555555555;
    else
      v14 = v12;
    v19[4] = result;
    if (v14)
      v15 = (char *)sub_100313718(result, v14);
    else
      v15 = 0;
    v16 = &v15[48 * v11];
    v19[0] = v15;
    v19[1] = v16;
    v19[3] = &v15[48 * v14];
    v17 = *a2;
    *((_QWORD *)v16 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v16 = v17;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v18 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)v16 + 5) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(v16 + 24) = v18;
    v19[2] = v16 + 48;
    sub_10038A574(a1, v19);
    v10 = a1[1];
    result = sub_10038A70C((uint64_t)v19);
  }
  else
  {
    v8 = *a2;
    *(_QWORD *)(v7 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v7 = v8;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v9 = *(__int128 *)((char *)a2 + 24);
    *(_QWORD *)(v7 + 40) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(v7 + 24) = v9;
    v10 = v7 + 48;
    a1[1] = v7 + 48;
  }
  a1[1] = v10;
  return result;
}

void sub_100388880(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10038A70C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100388894(uint64_t *a1, uint64_t a2)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *p_p;
  std::string::size_type size;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  char *v22;
  std::string __p;
  std::string::value_type v24[8];
  char v25;
  std::string::value_type v26[8];
  char v27;
  std::string::value_type __s[8];
  char v29;
  std::string v30;
  std::string v31;
  std::string v32;
  std::string v33;
  std::string v34;
  std::string v35;
  std::string v36;
  __int128 v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  std::string::value_type v42[8];
  _UNKNOWN **v43;
  _UNKNOWN **v44;
  std::string v45;

  v39 = 0;
  v40 = 0;
  v41 = 0;
  *((_BYTE *)&v30.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v30, "SELECT ");
  v4 = std::string::append(&v30, "ServiceId");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  v29 = 6;
  strcpy(__s, " FROM ");
  v6 = std::string::append(&v31, __s, 6uLL);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  v8 = std::string::append(&v32, "MiLoCustomLoiTable");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  v27 = 7;
  strcpy(v26, " WHERE ");
  v10 = std::string::append(&v33, v26, 7uLL);
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  v12 = std::string::append(&v34, "LoiId");
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  v25 = 2;
  strcpy(v24, "=\"");
  v14 = std::string::append(&v35, v24, 2uLL);
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  memset(&__p, 0, sizeof(__p));
  if ((sub_10026A098(a2, &__p) & 1) != 0)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    v18 = std::string::append(&v36, (const std::string::value_type *)p_p, size);
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    HIBYTE(v44) = 1;
    strcpy(v42, "\"");
    v20 = std::string::append(&v45, v42, 1uLL);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v38 = v20->__r_.__value_.__r.__words[2];
    v37 = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v44) < 0)
      operator delete(*(void **)v42);
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v36.__r_.__value_.__l.__data_);
    if (v25 < 0)
      operator delete(*(void **)v24);
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v35.__r_.__value_.__l.__data_);
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v34.__r_.__value_.__l.__data_);
    if (v27 < 0)
      operator delete(*(void **)v26);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v33.__r_.__value_.__l.__data_);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
    if (v29 < 0)
      operator delete(*(void **)__s);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (v38 >= 0)
      v22 = (char *)&v37;
    else
      v22 = (char *)v37;
    sub_1000CDA68(*a1, v22);
  }
  std::bad_cast::bad_cast((std::bad_cast *)v42);
  *(_QWORD *)v42 = &off_10212A508;
  sub_10026A9C8((uint64_t)v42);
}

void sub_100388D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,std::bad_cast a62)
{
  if (a56 < 0)
    operator delete(__p);
  a62.__vftable = (std::bad_cast_vtbl *)&a58;
  sub_100259608((void ***)&a62);
  _Unwind_Resume(a1);
}

void sub_10038907C(uint64_t a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X8>)
{
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  std::string::size_type size;
  std::string *v20;
  __int128 v21;
  char *p_p;
  NSObject *v23;
  const char *v24;
  std::string *v25;
  std::string v26;
  std::string v27;
  std::string v28;
  std::string v29;
  std::string v30;
  std::string v31;
  __int128 __p;
  int64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  std::string v37;
  std::string v38;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v27.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v27, "SELECT DISTINCT ");
    v6 = std::string::append(&v27, "LoiId");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v28, " FROM ");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v29, "MiLoCustomLoiTable");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v30, " ORDER BY ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v31, "LastSeenTimeStamp");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v37, " DESC LIMIT ");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v26, a2);
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v18 = &v26;
    else
      v18 = (std::string *)v26.__r_.__value_.__r.__words[0];
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    else
      size = v26.__r_.__value_.__l.__size_;
    v20 = std::string::append(&v38, (const std::string::value_type *)v18, size);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v33 = v20->__r_.__value_.__r.__words[2];
    __p = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v26.__r_.__value_.__l.__data_);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v38.__r_.__value_.__l.__data_);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v27.__r_.__value_.__l.__data_);
    if (v33 >= 0)
      p_p = (char *)&__p;
    else
      p_p = (char *)__p;
    sub_1000CDA68(*(_QWORD *)a1, p_p);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131ED8);
  v23 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v38.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select distinct Custom Loi Ids", (uint8_t *)&v38, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v38, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131ED8);
    LOWORD(__p) = 0;
    _os_log_send_and_compose_impl(2, 0, &v38, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select distinct Custom Loi Ids", &__p, 2);
    v25 = (std::string *)v24;
    sub_100512490("Generic", 1, 0, 2, "std::vector<boost::uuids::uuid> CLMiLoCustomLoiTable::getAllCustomLoiIds(uint32_t)", "%s\n", v24);
    if (v25 != &v38)
      free(v25);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
}

void sub_1003895C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

#error "100389868: call analysis failed (funcsize=98)"

void sub_100389898()
{
  __cxa_end_catch();
  JUMPOUT(0x1003896A8);
}

void sub_1003898AC(void *a1, int a2)
{
  if (a2)
    sub_10024F88C(a1);
  JUMPOUT(0x1003896DCLL);
}

void sub_1003898BC(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, _QWORD *a4@<X8>)
{
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  int v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  std::string::size_type size;
  std::string *v29;
  __int128 v30;
  char *p_p;
  NSObject *v32;
  const char *v33;
  std::string *v34;
  std::string v35;
  std::string v36;
  std::string v37;
  std::string v38;
  std::string v39;
  std::string v40;
  std::string v41;
  __int128 __p;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  std::string v47;
  std::string v48;
  std::string __str;

  if (*(_BYTE *)(a1 + 8))
  {
    v44 = 0;
    v45 = 0;
    v46 = 0;
    *((_BYTE *)&v36.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v36, "SELECT DISTINCT ");
    v8 = std::string::append(&v36, "LoiId");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v37, "\tFROM ");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v38, "MiLoCustomLoiTable");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v39, " \tWHERE ");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v40, "ServiceId");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v41, " IN (SELECT ServiceUUID FROM MiLoServices WHERE UserId==\"");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = *(char *)(a2 + 23);
    if (v20 >= 0)
      v21 = (const std::string::value_type *)a2;
    else
      v21 = *(const std::string::value_type **)a2;
    if (v20 >= 0)
      v22 = *(unsigned __int8 *)(a2 + 23);
    else
      v22 = *(_QWORD *)(a2 + 8);
    v23 = std::string::append(&v48, v21, v22);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v47, "\") LIMIT ");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v35, a3);
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v27 = &v35;
    else
      v27 = (std::string *)v35.__r_.__value_.__r.__words[0];
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    else
      size = v35.__r_.__value_.__l.__size_;
    v29 = std::string::append(&__str, (const std::string::value_type *)v27, size);
    v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    v43 = v29->__r_.__value_.__r.__words[2];
    __p = v30;
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v35.__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v41.__r_.__value_.__l.__data_);
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v40.__r_.__value_.__l.__data_);
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v39.__r_.__value_.__l.__data_);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v38.__r_.__value_.__l.__data_);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v36.__r_.__value_.__l.__data_);
    if (v43 >= 0)
      p_p = (char *)&__p;
    else
      p_p = (char *)__p;
    sub_1000CDA68(*(_QWORD *)a1, p_p);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102131ED8);
  v32 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__str.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select GroupIDs for current user", (uint8_t *)&__str, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&__str, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102131ED8);
    LOWORD(v47.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &__str, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select GroupIDs for current user", &v47, 2);
    v34 = (std::string *)v33;
    sub_100512490("Generic", 1, 0, 2, "std::vector<std::string> CLMiLoCustomLoiTable::selectLoiIdsForCurrentUser(const std::string &, uint32_t)", "%s\n", v33);
    if (v34 != &__str)
      free(v34);
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_100389EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10038A1F8(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

double sub_10038A224@<D0>(std::string *a1@<X8>)
{
  double result;
  std::string v3;

  memset(&v3, 0, sizeof(v3));
  sub_10038A284(&v3);
  result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_10038A268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038A284(std::string *a1)
{
  sub_10029D5D8(a1);
  sub_10038A2B8(a1);
  sub_1002AC188(a1);
  return sub_10029D6A8(a1);
}

uint64_t sub_10038A2B8(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "ServiceId");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_10038A360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_10038A394@<D0>(std::string *a1@<X8>)
{
  uint64_t v2;
  std::string *v3;
  __int128 v4;
  void **v5;
  std::string::size_type v6;
  double result;
  std::string v8;
  void *__p[2];
  int64_t v10;
  std::string v11;

  sub_1015A2E04(&v11, "VALUES (");
  v2 = 4;
  do
  {
    if (v2 == 4)
    {
      *((_BYTE *)&v8.__r_.__value_.__s + 23) = 0;
      v8.__r_.__value_.__s.__data_[0] = 0;
    }
    else
    {
      *((_BYTE *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
    }
    v3 = std::string::append(&v8, "?");
    v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v10 = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    if (v10 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    if (v10 >= 0)
      v6 = HIBYTE(v10);
    else
      v6 = (std::string::size_type)__p[1];
    std::string::append(&v11, (const std::string::value_type *)v5, v6);
    if (SHIBYTE(v10) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    --v2;
  }
  while (v2);
  std::string::append(&v11, ")");
  result = *(double *)&v11.__r_.__value_.__l.__data_;
  *a1 = v11;
  return result;
}

void sub_10038A49C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10038A4E8(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_10038A528((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_10038A528(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 48)
  {
    if (*(char *)(i - 25) < 0)
      operator delete(*(void **)(i - 48));
  }
  a1[1] = v2;
}

uint64_t sub_10038A574(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_10038A5E8((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10038A5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 != a5)
  {
    v9 = a7;
    do
    {
      v10 = *(_OWORD *)(a3 - 48);
      *(_QWORD *)(v9 - 32) = *(_QWORD *)(a3 - 32);
      *(_OWORD *)(v9 - 48) = v10;
      *(_QWORD *)(a3 - 40) = 0;
      *(_QWORD *)(a3 - 32) = 0;
      *(_QWORD *)(a3 - 48) = 0;
      v11 = *(_OWORD *)(a3 - 24);
      *(_QWORD *)(v9 - 8) = *(_QWORD *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v11;
      v9 -= 48;
      v7 -= 48;
      a3 -= 48;
    }
    while (a3 != a5);
    *((_QWORD *)&v16 + 1) = v9;
  }
  v14 = 1;
  sub_10038A694((uint64_t)v13);
  return a6;
}

uint64_t sub_10038A694(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_10038A6C8(a1);
  return a1;
}

void sub_10038A6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    v1 += 48;
  }
}

uint64_t sub_10038A70C(uint64_t a1)
{
  sub_10038A740(a1, *(void ***)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_10038A740(uint64_t a1, void **a2)
{
  void **v2;
  void **v5;

  v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      v5 = v2 - 6;
      *(_QWORD *)(a1 + 16) = v2 - 6;
      if (*((char *)v2 - 25) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_10038A794()
{
  std::string *v0;
  __int128 v1;
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  void *__p[2];
  unsigned __int8 v16;
  void *v17[2];
  unsigned __int8 v18;
  std::string v19;
  std::string v20;
  std::string v21;
  std::string v22;
  std::string v23;

  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101B980A0;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  v0 = std::string::append(&v19, "MiLoCustomLoiTable");
  v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  v2 = std::string::append(&v20, " (");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_100386FD8((uint64_t)v17);
  if ((v18 & 0x80u) == 0)
    v4 = v17;
  else
    v4 = (void **)v17[0];
  if ((v18 & 0x80u) == 0)
    v5 = v18;
  else
    v5 = (std::string::size_type)v17[1];
  v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  v8 = std::string::append(&v22, ") ");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_1003870A0((uint64_t)__p);
  if ((v16 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v16 & 0x80u) == 0)
    v11 = v16;
  else
    v11 = (std::string::size_type)__p[1];
  v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_102301190 = *((_QWORD *)&v12->__r_.__value_.__l + 2);
  xmmword_102301180 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
  if ((char)v18 < 0)
    operator delete(v17[0]);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102301180, (void *)&_mh_execute_header);
}

void sub_10038A980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v40 - 25) < 0)
    operator delete(*(void **)(v40 - 48));
  if (*(char *)(v40 - 57) < 0)
    operator delete(*(void **)(v40 - 80));
  if (a21 < 0)
    operator delete(a16);
  if (a40 < 0)
    operator delete(a35);
  if (a33 < 0)
    operator delete(a28);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038AA2C(uint64_t *a1)
{
  NSObject *v2;
  uint64_t *v3;
  uint64_t result;
  uint64_t *v5;
  const char *v6;
  uint8_t *v7;
  _QWORD v8[5];
  int v9;
  uint64_t *v10;
  uint8_t buf[4];
  uint64_t *v12;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132030);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
  {
    if (*((char *)a1 + 23) >= 0)
      v3 = a1;
    else
      v3 = (uint64_t *)*a1;
    *(_DWORD *)buf = 136315138;
    v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Microlocation error report: %s", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132030);
    if (*((char *)a1 + 23) >= 0)
      v5 = a1;
    else
      v5 = (uint64_t *)*a1;
    v9 = 136315138;
    v10 = v5;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Microlocation error report: %s", (const char *)&v9);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 0, "void CLMicroLocationErrorHandling::reportError(const std::string &)", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  result = sub_10038AC3C();
  if ((_DWORD)result)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10038AD18;
    v8[3] = &unk_102131FE8;
    v8[4] = a1;
    return AnalyticsSendEventLazy(CFSTR("com.apple.MicroLocation.ErrorCases"), v8);
  }
  return result;
}

uint64_t sub_10038AC3C()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAnalyticsSendEventEnabled", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_10038AD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

NSDictionary *sub_10038AD18(uint64_t a1)
{
  uint64_t *v1;
  const __CFString *v3;
  NSString *v4;

  v3 = CFSTR("errorType");
  v1 = *(uint64_t **)(a1 + 32);
  if (*((char *)v1 + 23) < 0)
    v1 = (uint64_t *)*v1;
  v4 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v1);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v4, &v3, 1);
}

uint64_t sub_10038ADA4(uint64_t a1)
{
  NSObject *v2;
  uint64_t result;
  const char *v4;
  uint8_t *v5;
  _QWORD v6[5];
  int v7;
  uint64_t v8;
  uint8_t buf[4];
  uint64_t v10;

  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132030);
  v2 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v10 = a1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Microlocation error report: %@", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132030);
    v7 = 138412290;
    v8 = a1;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Microlocation error report: %@", &v7, 12);
    v5 = (uint8_t *)v4;
    sub_100512490("Generic", 1, 0, 0, "void CLMicroLocationErrorHandling::reportError(NSString *)", "%s\n", v4);
    if (v5 != buf)
      free(v5);
  }
  result = sub_10038AC3C();
  if ((_DWORD)result)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10038AF94;
    v6[3] = &unk_102132010;
    v6[4] = a1;
    return AnalyticsSendEventLazy(CFSTR("com.apple.MicroLocation.ErrorCases"), v6);
  }
  return result;
}

NSDictionary *sub_10038AF94(uint64_t a1)
{
  uint64_t v1;
  const __CFString *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 32);
  v3 = CFSTR("errorType");
  v4 = v1;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v4, &v3, 1);
}

void sub_10038B000(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_10038B02C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A0910);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A0910))
  {
    sub_10038DD34((std::string *)&xmmword_1022A08F8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A08F8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A0910);
  }
  if (byte_1022A090F < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A08F8, *((unint64_t *)&xmmword_1022A08F8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A08F8;
    *(_QWORD *)(a1 + 16) = unk_1022A0908;
  }
}

void sub_10038B0DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A0910);
  _Unwind_Resume(a1);
}

void sub_10038B0F4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A0930);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A0930))
  {
    sub_100269F44((std::string *)&xmmword_1022A0918);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A0918, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A0930);
  }
  if (byte_1022A092F < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A0918, *((unint64_t *)&xmmword_1022A0918 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A0918;
    *(_QWORD *)(a1 + 16) = unk_1022A0928;
  }
}

void sub_10038B1A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A0930);
  _Unwind_Resume(a1);
}

void sub_10038B1BC(uint64_t a1)
{
  BOOL v2;
  BOOL v3;
  NSObject *v4;
  uint8_t *v5;
  double v6;
  NSObject *v7;
  uint8_t *v8;
  NSObject *v9;
  double v10;
  uint8_t *v11;
  __int128 v12;
  uint8_t buf[4];
  const char *v14;

  v2 = sub_1000CC4F4(*(_QWORD *)a1);
  *(_BYTE *)(a1 + 8) = v2;
  if (v2)
  {
    sub_10038B5F4((uint64_t *)a1);
    sub_100634364(*(_QWORD *)a1, "MicroLocationLoggedEvents", (const char **)&off_102132070, 0, 0);
    v3 = sub_100635B3C(*(_QWORD *)a1, "MicroLocationLoggedEvents");
    *(_BYTE *)(a1 + 8) = v3;
    if (v3)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132050);
      v4 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136380675;
        v14 = "MicroLocationLoggedEvents";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{private}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102132050);
        LODWORD(v12) = 136380675;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationLoggedEvents";
        v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Sucessfully created table if necessary: %{private}s", &v12, 12, v12);
LABEL_19:
        v8 = v5;
        sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationLoggedEventsTable::initTable()", "%s\n", v6);
LABEL_29:
        if (v8 != buf)
          free(v8);
      }
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132050);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        v14 = "MicroLocationLoggedEvents";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102132050);
        LODWORD(v12) = 136446210;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationLoggedEvents";
        v10 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Failed to create table: %{public}s", &v12, 12);
        v8 = v11;
        sub_100512490("Generic", 1, 0, 0, "void CLMicroLocationLoggedEventsTable::initTable()", "%s\n", v10);
        goto LABEL_29;
      }
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132050);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132050);
      LOWORD(v12) = 0;
      v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Database is not connected so we can't intialize our table", &v12, 2, v12);
      goto LABEL_19;
    }
  }
}

uint64_t sub_10038B5C8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  sub_10038B1BC(a1);
  return a1;
}

BOOL sub_10038B5F4(uint64_t *a1)
{
  _BOOL8 result;

  result = sub_100635B3C(*a1, "MicroLocationLoggedEvents");
  if (result)
    return sub_1002639C4(*a1, (uint64_t *)&off_102132070, 5, "MicroLocationLoggedEvents");
  return result;
}

uint64_t sub_10038B648(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  NSObject *v3;
  const char *v5;
  uint8_t *v6;
  void *v7;
  uint8_t buf[8];

  if (*(_BYTE *)(a1 + 8))
  {
    v1 = *(_QWORD *)a1;
    if (byte_1023011AF >= 0)
      v2 = (char *)&xmmword_102301198;
    else
      v2 = (char *)xmmword_102301198;
    sub_1000CDA68(v1, v2);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132050);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132050);
    LOWORD(v7) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't insert or replace", &v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationLoggedEventsTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  return 0;
}

void sub_10038BC98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,std::bad_cast a33)
{
  if (a23 < 0)
    operator delete(__p);
  if (a29 < 0)
    operator delete(a24);
  if (a30)
    (*(void (**)(uint64_t))(*(_QWORD *)a30 + 8))(a30);
  _Unwind_Resume(exception_object);
}

void sub_10038BD14(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  std::string::size_type size;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  int v33;
  const std::string::value_type *v34;
  std::string::size_type v35;
  std::string *v36;
  __int128 v37;
  char *v38;
  std::string v39;
  void *__p[2];
  unsigned __int8 v41;
  std::string::value_type __s[8];
  char v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  void *v52[2];
  int64_t v53;
  std::string v54;
  std::string v55;

  *((_BYTE *)&v44.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v44, "SELECT * FROM (");
  v43 = 7;
  strcpy(__s, "SELECT ");
  v8 = std::string::append(&v44, __s, 7uLL);
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_10038B02C((uint64_t)__p);
  if ((v41 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v41 & 0x80u) == 0)
    v11 = v41;
  else
    v11 = (std::string::size_type)__p[1];
  v12 = std::string::append(&v45, (const std::string::value_type *)v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  v14 = std::string::append(&v46, " FROM ");
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  v16 = *(char *)(a2 + 23);
  if (v16 >= 0)
    v17 = (const std::string::value_type *)a2;
  else
    v17 = *(const std::string::value_type **)a2;
  if (v16 >= 0)
    v18 = *(unsigned __int8 *)(a2 + 23);
  else
    v18 = *(_QWORD *)(a2 + 8);
  v19 = std::string::append(&v47, v17, v18);
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  v21 = std::string::append(&v48, " ORDER BY ");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v49, "ReceivedTimestamp");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v50.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  v25 = std::string::append(&v50, " DESC LIMIT ");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v55.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v39, a3);
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v27 = &v39;
  else
    v27 = (std::string *)v39.__r_.__value_.__r.__words[0];
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
  else
    size = v39.__r_.__value_.__l.__size_;
  v29 = std::string::append(&v55, (const std::string::value_type *)v27, size);
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v51, ") ORDER BY ");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  v54.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  v33 = *(char *)(a4 + 23);
  if (v33 >= 0)
    v34 = (const std::string::value_type *)a4;
  else
    v34 = *(const std::string::value_type **)a4;
  if (v33 >= 0)
    v35 = *(unsigned __int8 *)(a4 + 23);
  else
    v35 = *(_QWORD *)(a4 + 8);
  v36 = std::string::append(&v54, v34, v35);
  v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  v53 = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)v52 = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v54.__r_.__value_.__l.__data_);
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v51.__r_.__value_.__l.__data_);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v39.__r_.__value_.__l.__data_);
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v55.__r_.__value_.__l.__data_);
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v50.__r_.__value_.__l.__data_);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v49.__r_.__value_.__l.__data_);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v47.__r_.__value_.__l.__data_);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  if ((char)v41 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v45.__r_.__value_.__l.__data_);
  if (v43 < 0)
    operator delete(*(void **)__s);
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v44.__r_.__value_.__l.__data_);
  if (v53 >= 0)
    v38 = (char *)v52;
  else
    v38 = (char *)v52[0];
  sub_1000CDA68(a1, v38);
}

void sub_10038C1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void **buf)
{
  uint64_t v58;

  buf = &a47;
  sub_10029A77C(&buf);
  if (v58)
    (*(void (**)(uint64_t))(*(_QWORD *)v58 + 8))(v58);
  if (a56 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_10038C550(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int **a4@<X3>, unsigned int a5@<W4>, _QWORD *a6@<X8>)
{
  std::string *v12;
  __int128 v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  std::string::size_type v18;
  char v19;
  std::string::size_type *v20;
  std::string::size_type *v21;
  NSObject *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  std::string::size_type v27;
  std::string *v28;
  __int128 v29;
  int v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  std::string *v33;
  std::string::size_type v34;
  char v35;
  std::string::size_type *v36;
  std::string::size_type *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  std::string::size_type v42;
  int *v43;
  int *v44;
  std::string *v45;
  __int128 v46;
  void **v47;
  std::string::size_type v48;
  std::string *v49;
  __int128 v50;
  std::string *v51;
  std::string::size_type v52;
  char v53;
  std::string::size_type *v54;
  std::string::size_type v55;
  std::string::size_type *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  std::string::size_type v61;
  uint64_t v62;
  std::string *v63;
  std::string::size_type v64;
  char v65;
  uint64_t v66;
  const char *v67;
  std::string *v68;
  void *__p[2];
  unsigned __int8 v70;
  std::string::value_type v71[8];
  char v72;
  std::string __s;
  std::string v74;
  std::string::size_type *v75;
  std::string::size_type *v76;
  unint64_t v77;
  std::string v78;
  _QWORD v79[2];
  std::string v80;
  std::string buf;
  char *v82;
  unint64_t *v83;

  if (*(_BYTE *)(a1 + 8))
  {
    v75 = 0;
    v76 = 0;
    v77 = 0;
    if (*(_BYTE *)(a2 + 24))
    {
      sub_1015A2E04(&v80, "ReceivedTimestamp");
      *((_BYTE *)&__s.__r_.__value_.__s + 23) = 3;
      strcpy((char *)&__s, " > ");
      v12 = std::string::append(&v80, (const std::string::value_type *)&__s, 3uLL);
      v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v74.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      if (!*(_BYTE *)(a2 + 24))
        sub_10028DF3C();
      v14 = *(char *)(a2 + 23);
      if (v14 >= 0)
        v15 = (const std::string::value_type *)a2;
      else
        v15 = *(const std::string::value_type **)a2;
      if (v14 >= 0)
        v16 = *(unsigned __int8 *)(a2 + 23);
      else
        v16 = *(_QWORD *)(a2 + 8);
      v17 = std::string::append(&v74, v15, v16);
      v18 = v17->__r_.__value_.__r.__words[0];
      v78.__r_.__value_.__r.__words[0] = v17->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v17->__r_.__value_.__r.__words[1] + 7);
      v19 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      v20 = v76;
      if ((unint64_t)v76 >= v77)
      {
        v23 = 0xAAAAAAAAAAAAAAABLL * (v76 - v75);
        v24 = v23 + 1;
        if (v23 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_100259694();
        if (0x5555555555555556 * ((uint64_t)(v77 - (_QWORD)v75) >> 3) > v24)
          v24 = 0x5555555555555556 * ((uint64_t)(v77 - (_QWORD)v75) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v77 - (_QWORD)v75) >> 3) >= 0x555555555555555)
          v25 = 0xAAAAAAAAAAAAAAALL;
        else
          v25 = v24;
        v83 = &v77;
        if (v25)
          v26 = (char *)sub_1002596A8((uint64_t)&v77, v25);
        else
          v26 = 0;
        v27 = (std::string::size_type)&v26[24 * v23];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v26;
        buf.__r_.__value_.__l.__size_ = v27;
        v82 = &v26[24 * v25];
        *(_QWORD *)v27 = v18;
        *(_QWORD *)(v27 + 8) = v78.__r_.__value_.__r.__words[0];
        *(_QWORD *)(v27 + 15) = *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7);
        *(_BYTE *)(v27 + 23) = v19;
        v78.__r_.__value_.__r.__words[0] = 0;
        *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7) = 0;
        buf.__r_.__value_.__r.__words[2] = v27 + 24;
        sub_100074D44((uint64_t *)&v75, &buf);
        v21 = v76;
        sub_100074DB8((uint64_t)&buf);
      }
      else
      {
        *v76 = v18;
        v20[1] = v78.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)v20 + 15) = *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words
                                                                                  + 7);
        *((_BYTE *)v20 + 23) = v19;
        v21 = v20 + 3;
      }
      v76 = v21;
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v74.__r_.__value_.__l.__data_);
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__s.__r_.__value_.__l.__data_);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
    }
    if (*(_BYTE *)(a3 + 24))
    {
      sub_1015A2E04(&v80, "ReceivedTimestamp");
      *((_BYTE *)&__s.__r_.__value_.__s + 23) = 3;
      strcpy((char *)&__s, "<= ");
      v28 = std::string::append(&v80, (const std::string::value_type *)&__s, 3uLL);
      v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v74.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      if (!*(_BYTE *)(a3 + 24))
        sub_10028DF3C();
      v30 = *(char *)(a3 + 23);
      if (v30 >= 0)
        v31 = (const std::string::value_type *)a3;
      else
        v31 = *(const std::string::value_type **)a3;
      if (v30 >= 0)
        v32 = *(unsigned __int8 *)(a3 + 23);
      else
        v32 = *(_QWORD *)(a3 + 8);
      v33 = std::string::append(&v74, v31, v32);
      v34 = v33->__r_.__value_.__r.__words[0];
      v78.__r_.__value_.__r.__words[0] = v33->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v33->__r_.__value_.__r.__words[1] + 7);
      v35 = HIBYTE(v33->__r_.__value_.__r.__words[2]);
      v33->__r_.__value_.__l.__size_ = 0;
      v33->__r_.__value_.__r.__words[2] = 0;
      v33->__r_.__value_.__r.__words[0] = 0;
      v36 = v76;
      if ((unint64_t)v76 >= v77)
      {
        v38 = 0xAAAAAAAAAAAAAAABLL * (v76 - v75);
        v39 = v38 + 1;
        if (v38 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_100259694();
        if (0x5555555555555556 * ((uint64_t)(v77 - (_QWORD)v75) >> 3) > v39)
          v39 = 0x5555555555555556 * ((uint64_t)(v77 - (_QWORD)v75) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v77 - (_QWORD)v75) >> 3) >= 0x555555555555555)
          v40 = 0xAAAAAAAAAAAAAAALL;
        else
          v40 = v39;
        v83 = &v77;
        if (v40)
          v41 = (char *)sub_1002596A8((uint64_t)&v77, v40);
        else
          v41 = 0;
        v42 = (std::string::size_type)&v41[24 * v38];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v41;
        buf.__r_.__value_.__l.__size_ = v42;
        v82 = &v41[24 * v40];
        *(_QWORD *)v42 = v34;
        *(_QWORD *)(v42 + 8) = v78.__r_.__value_.__r.__words[0];
        *(_QWORD *)(v42 + 15) = *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7);
        *(_BYTE *)(v42 + 23) = v35;
        v78.__r_.__value_.__r.__words[0] = 0;
        *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7) = 0;
        buf.__r_.__value_.__r.__words[2] = v42 + 24;
        sub_100074D44((uint64_t *)&v75, &buf);
        v37 = v76;
        sub_100074DB8((uint64_t)&buf);
      }
      else
      {
        *v76 = v34;
        v36[1] = v78.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)v36 + 15) = *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words
                                                                                  + 7);
        *((_BYTE *)v36 + 23) = v35;
        v37 = v36 + 3;
      }
      v76 = v37;
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v74.__r_.__value_.__l.__data_);
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__s.__r_.__value_.__l.__data_);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
    }
    v44 = *a4;
    v43 = a4[1];
    if (v44 != v43)
    {
      memset(&v74, 0, sizeof(v74));
      __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v74;
      do
      {
        std::to_string(&buf, *v44);
        sub_1002EB978((uint64_t **)&__s, (__int128 *)&buf);
        if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
          operator delete(buf.__r_.__value_.__l.__data_);
        ++v44;
      }
      while (v44 != v43);
      sub_1015A2E04(&v78, "EventType");
      v72 = 5;
      strcpy(v71, " IN (");
      v45 = std::string::append(&v78, v71, 5uLL);
      v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      sub_1002563C0(",", (uint64_t *)&v74, (uint64_t)__p);
      if ((v70 & 0x80u) == 0)
        v47 = __p;
      else
        v47 = (void **)__p[0];
      if ((v70 & 0x80u) == 0)
        v48 = v70;
      else
        v48 = (std::string::size_type)__p[1];
      v49 = std::string::append(&__s, (const std::string::value_type *)v47, v48);
      v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
      v80.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v50;
      v49->__r_.__value_.__l.__size_ = 0;
      v49->__r_.__value_.__r.__words[2] = 0;
      v49->__r_.__value_.__r.__words[0] = 0;
      v51 = std::string::append(&v80, ")");
      v52 = v51->__r_.__value_.__r.__words[0];
      v79[0] = v51->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)v79 + 7) = *(std::string::size_type *)((char *)&v51->__r_.__value_.__r.__words[1] + 7);
      v53 = HIBYTE(v51->__r_.__value_.__r.__words[2]);
      v51->__r_.__value_.__l.__size_ = 0;
      v51->__r_.__value_.__r.__words[2] = 0;
      v51->__r_.__value_.__r.__words[0] = 0;
      v54 = v76;
      if ((unint64_t)v76 >= v77)
      {
        v57 = 0xAAAAAAAAAAAAAAABLL * (v76 - v75);
        v58 = v57 + 1;
        if (v57 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_100259694();
        if (0x5555555555555556 * ((uint64_t)(v77 - (_QWORD)v75) >> 3) > v58)
          v58 = 0x5555555555555556 * ((uint64_t)(v77 - (_QWORD)v75) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v77 - (_QWORD)v75) >> 3) >= 0x555555555555555)
          v59 = 0xAAAAAAAAAAAAAAALL;
        else
          v59 = v58;
        v83 = &v77;
        if (v59)
          v60 = (char *)sub_1002596A8((uint64_t)&v77, v59);
        else
          v60 = 0;
        v61 = (std::string::size_type)&v60[24 * v57];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v60;
        buf.__r_.__value_.__l.__size_ = v61;
        v82 = &v60[24 * v59];
        v62 = v79[0];
        *(_QWORD *)v61 = v52;
        *(_QWORD *)(v61 + 8) = v62;
        *(_QWORD *)(v61 + 15) = *(_QWORD *)((char *)v79 + 7);
        *(_BYTE *)(v61 + 23) = v53;
        v79[0] = 0;
        *(_QWORD *)((char *)v79 + 7) = 0;
        buf.__r_.__value_.__r.__words[2] = v61 + 24;
        sub_100074D44((uint64_t *)&v75, &buf);
        v56 = v76;
        sub_100074DB8((uint64_t)&buf);
      }
      else
      {
        v55 = v79[0];
        *v76 = v52;
        v54[1] = v55;
        *(std::string::size_type *)((char *)v54 + 15) = *(_QWORD *)((char *)v79 + 7);
        *((_BYTE *)v54 + 23) = v53;
        v56 = v54 + 3;
      }
      v76 = v56;
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
      if ((char)v70 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__s.__r_.__value_.__l.__data_);
      if (v72 < 0)
        operator delete(*(void **)v71);
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v78.__r_.__value_.__l.__data_);
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v74;
      sub_100259608((void ***)&buf);
    }
    sub_1015A2E04(&buf, "");
    if (v75 != v76)
    {
      sub_1002563C0(" AND ", (uint64_t *)&v75, (uint64_t)&v74);
      v63 = std::string::insert(&v74, 0, " WHERE ");
      v64 = v63->__r_.__value_.__r.__words[0];
      v80.__r_.__value_.__r.__words[0] = v63->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v80.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v63->__r_.__value_.__r.__words[1] + 7);
      v65 = HIBYTE(v63->__r_.__value_.__r.__words[2]);
      v63->__r_.__value_.__l.__size_ = 0;
      v63->__r_.__value_.__r.__words[2] = 0;
      v63->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
        operator delete(buf.__r_.__value_.__l.__data_);
      buf.__r_.__value_.__r.__words[0] = v64;
      buf.__r_.__value_.__l.__size_ = v80.__r_.__value_.__r.__words[0];
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v80.__r_.__value_.__r.__words + 7);
      *((_BYTE *)&buf.__r_.__value_.__s + 23) = v65;
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v74.__r_.__value_.__l.__data_);
    }
    v66 = *(_QWORD *)a1;
    std::operator+<char>(&v74, "MicroLocationLoggedEvents", &buf);
    sub_1015A2E04(&v80, "ReceivedTimestamp");
    sub_10038BD14(v66, (uint64_t)&v74, a5, (uint64_t)&v80);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132050);
  v22 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select", (uint8_t *)&buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132050);
    LOWORD(v75) = 0;
    _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select", &v75, 2);
    v68 = (std::string *)v67;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationLoggedEventsTable::Entry> CLMicroLocationLoggedEventsTable::selectByFields(const std::optional<std::string> &, const std::optional<std::string> &, const std::vector<CLMicroLocationProto::EventType> &, uint32_t)", "%s\n", v67);
    if (v68 != &buf)
      free(v68);
  }
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
}

void sub_10038CE50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,uint64_t a47,char **__p,uint64_t a49,int a50,__int16 a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  sub_100074DB8((uint64_t)&a55);
  if (a53 < 0)
    operator delete(__p);
  if (a16 < 0)
    operator delete(a11);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a45 < 0)
    operator delete(a40);
  __p = &a30;
  sub_100259608((void ***)&__p);
  a30 = &a37;
  sub_100259608((void ***)&a30);
  _Unwind_Resume(a1);
}

void sub_10038D00C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int **a4@<X3>, unsigned int a5@<W4>, _QWORD *a6@<X8>)
{
  void *__p[2];
  uint64_t v12;
  char v13;
  void *__dst[2];
  uint64_t v15;
  char v16;

  if (*(char *)(a2 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a2;
    v15 = *(_QWORD *)(a2 + 16);
  }
  v16 = 1;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v12 = *(_QWORD *)(a3 + 16);
  }
  v13 = 1;
  sub_10038C550(a1, (uint64_t)__dst, (uint64_t)__p, a4, a5, a6);
  if (v13 && SHIBYTE(v12) < 0)
    operator delete(__p[0]);
  if (v16)
  {
    if (SHIBYTE(v15) < 0)
      operator delete(__dst[0]);
  }
}

void sub_10038D100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22)
  {
    if (a21 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10038D144(uint64_t a1@<X0>, uint64_t a2@<X1>, int **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  __int128 v8;
  char v9;
  void *__p[2];
  uint64_t v11;
  char v12;
  void *v13[2];
  char v14;
  char v15;
  _QWORD v16[3];

  LOBYTE(v13[0]) = 0;
  v15 = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v11 = *(_QWORD *)(a2 + 16);
  }
  v12 = 1;
  sub_10038C550(a1, (uint64_t)v13, (uint64_t)__p, a3, 1u, v16);
  if (v12 && SHIBYTE(v11) < 0)
    operator delete(__p[0]);
  if (v15 && v14 < 0)
    operator delete(v13[0]);
  v7 = v16[0];
  if (v16[0] == v16[1])
  {
    v9 = 0;
    *(_BYTE *)a4 = 0;
  }
  else
  {
    v8 = *(_OWORD *)v16[0];
    *(_OWORD *)(a4 + 12) = *(_OWORD *)(v16[0] + 12);
    *(_OWORD *)a4 = v8;
    sub_1000B26F4(a4 + 32, v7 + 32);
    v9 = 1;
  }
  *(_BYTE *)(a4 + 336) = v9;
  v13[0] = v16;
  sub_10029A77C((void ***)v13);
}

void sub_10038D24C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a23)
  {
    if (a22 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038D2A8(uint64_t a1, unint64_t a2)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  std::string::size_type size;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  char *v32;
  NSObject *v33;
  const char *v35;
  std::string *v36;
  std::string v37;
  std::string v38;
  std::string v39;
  std::string v40;
  std::string v41;
  std::string v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  void *__p[2];
  int64_t v51;
  std::string v52;

  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v38.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v38, "DELETE FROM ");
    v4 = std::string::append(&v38, "MicroLocationLoggedEvents");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    v6 = std::string::append(&v39, " WHERE ");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v40, "ReceivedTimestamp");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v41, " IN (");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v42, "SELECT ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v43, "ReceivedTimestamp");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v44, " FROM ");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v45, "MicroLocationLoggedEvents");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = std::string::append(&v46, " ORDER BY ");
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    v22 = std::string::append(&v47, "ReceivedTimestamp");
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    v24 = std::string::append(&v48, " LIMIT ");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v37, a2);
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &v37;
    else
      v26 = (std::string *)v37.__r_.__value_.__r.__words[0];
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
    else
      size = v37.__r_.__value_.__l.__size_;
    v28 = std::string::append(&v49, (const std::string::value_type *)v26, size);
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = std::string::append(&v52, ")");
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v51 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v41.__r_.__value_.__l.__data_);
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v40.__r_.__value_.__l.__data_);
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v39.__r_.__value_.__l.__data_);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v38.__r_.__value_.__l.__data_);
    if (v51 >= 0)
      v32 = (char *)__p;
    else
      v32 = (char *)__p[0];
    sub_1000CDA68(*(_QWORD *)a1, v32);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132050);
  v33 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v52.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v52, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v52, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132050);
    LOWORD(__p[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v52, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't deleteOldestRows", __p, 2);
    v36 = (std::string *)v35;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationLoggedEventsTable::deleteOldestRows(uint64_t)", "%s\n", v35);
    if (v36 != &v52)
      free(v36);
  }
  return 0;
}

void sub_10038D920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  char a66;
  uint64_t v66;

  if (v66)
    (*(void (**)(uint64_t))(*(_QWORD *)v66 + 8))(v66);
  if (a66 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_10038DAB0(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10038DADC@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  const void *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::MessageLite *v9;
  uint64_t result;
  std::runtime_error *exception;
  std::string v12;

  v6 = sqlite3_column_blob(a1, a2);
  v7 = sqlite3_column_bytes(a1, a2);
  if (!v6)
    sub_1018F834C();
  v8 = v7;
  sub_1000B13D8(a3);
  result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(v9, v6, v8);
  if ((result & 1) == 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_1015A2E04(&v12, "Unable to parse protobuf");
    std::runtime_error::runtime_error(exception, &v12);
    exception->__vftable = (std::runtime_error_vtbl *)&off_10212AC58;
  }
  return result;
}

void sub_10038DBA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  wireless_diagnostics::google::protobuf::MessageLite *v15;
  void *v16;
  int v17;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_1000B2748(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t sub_10038DBEC(uint64_t *a1, _OWORD *a2, uint64_t *a3, int *a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD v22[2];
  char *v23;
  char *v24;
  uint64_t *v25;

  v6 = *a1;
  v7 = 0xCF3CF3CF3CF3CF3DLL * ((a1[1] - *a1) >> 4);
  v8 = v7 + 1;
  if (v7 + 1 > 0xC30C30C30C30C3)
    sub_100259694();
  v13 = (uint64_t)(a1 + 2);
  v14 = 0xCF3CF3CF3CF3CF3DLL * ((a1[2] - v6) >> 4);
  if (2 * v14 > v8)
    v8 = 2 * v14;
  if (v14 >= 0x61861861861861)
    v15 = 0xC30C30C30C30C3;
  else
    v15 = v8;
  v25 = a1 + 2;
  if (v15)
    v16 = (char *)sub_10029A91C(v13, v15);
  else
    v16 = 0;
  v17 = &v16[336 * v7];
  v22[0] = v16;
  v22[1] = v17;
  v23 = v17;
  v24 = &v16[336 * v15];
  v18 = *a3;
  v19 = *a4;
  *(_OWORD *)v17 = *a2;
  *((_QWORD *)v17 + 2) = v18;
  *((_DWORD *)v17 + 6) = v19;
  sub_1000B26F4(v17 + 32, a5);
  v23 += 336;
  sub_10021042C(a1, v22);
  v20 = a1[1];
  sub_1000B26F8((uint64_t)v22);
  return v20;
}

void sub_10038DD20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1000B26F8((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_10038DD34@<D0>(std::string *a1@<X8>)
{
  double result;
  std::string v3;

  memset(&v3, 0, sizeof(v3));
  sub_10038DD94(&v3);
  result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_10038DD78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038DD94(std::string *a1)
{
  sub_10038DDD0(a1);
  sub_100269D8C(a1);
  sub_10038DEA0(a1);
  sub_10038DF7C(a1);
  return sub_100269E68(a1);
}

uint64_t sub_10038DDD0(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 0;
  v7.__r_.__value_.__s.__data_[0] = 0;
  v2 = std::string::append(&v7, "EventUUID");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_10038DE6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038DEA0(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "EventType");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_10038DF48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038DF7C(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "Event");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_10038E024(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038E058()
{
  std::string *v0;
  __int128 v1;
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  void *__p[2];
  unsigned __int8 v16;
  void *v17[2];
  unsigned __int8 v18;
  std::string v19;
  std::string v20;
  std::string v21;
  std::string v22;
  std::string v23;

  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101B980A0;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  v0 = std::string::append(&v19, "MicroLocationLoggedEvents");
  v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  v2 = std::string::append(&v20, " (");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_10038B02C((uint64_t)v17);
  if ((v18 & 0x80u) == 0)
    v4 = v17;
  else
    v4 = (void **)v17[0];
  if ((v18 & 0x80u) == 0)
    v5 = v18;
  else
    v5 = (std::string::size_type)v17[1];
  v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  v8 = std::string::append(&v22, ") ");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_10038B0F4((uint64_t)__p);
  if ((v16 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v16 & 0x80u) == 0)
    v11 = v16;
  else
    v11 = (std::string::size_type)__p[1];
  v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_1023011A8 = *((_QWORD *)&v12->__r_.__value_.__l + 2);
  xmmword_102301198 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
  if ((char)v18 < 0)
    operator delete(v17[0]);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102301198, (void *)&_mh_execute_header);
}

void sub_10038E244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v40 - 25) < 0)
    operator delete(*(void **)(v40 - 48));
  if (*(char *)(v40 - 57) < 0)
    operator delete(*(void **)(v40 - 80));
  if (a21 < 0)
    operator delete(a16);
  if (a40 < 0)
    operator delete(a35);
  if (a33 < 0)
    operator delete(a28);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

char *sub_10038E2F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  char v2;
  char v3;
  CFStringRef v4;
  int v5;
  double v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  CFStringRef v10;
  int v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  CFStringRef v18;
  int v19;
  double v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  CFStringRef v24;
  int v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  CFStringRef v32;
  int v33;
  double v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  CFStringRef v38;
  int v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *result;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[7];
  _BYTE v54[7];
  _BYTE v55[7];
  double v56;
  double *v57;
  std::__shared_weak_count *v58;

  v1 = a1;
  *a1 = sub_10038E884();
  *((_BYTE *)v1 + 8) = sub_10038E960();
  v2 = sub_10038EA38();
  *((_OWORD *)v1 + 1) = 0u;
  v1 += 2;
  *((_BYTE *)v1 - 7) = v2;
  *((_OWORD *)v1 + 1) = 0u;
  v52 = (uint64_t)v1;
  *((_DWORD *)v1 + 8) = 1065353216;
  v3 = sub_10038EB14();
  sub_1001E4804(&v57);
  v56 = 0.0;
  v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiDurationForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  v5 = sub_1001FD9FC((uint64_t)v57, (uint64_t)v4, &v56);
  CFRelease(v4);
  v6 = v56;
  v7 = v58;
  if (v58)
  {
    p_shared_owners = (unint64_t *)&v58->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (!v5)
    v6 = 0.0;
  sub_1001E4804(&v57);
  LODWORD(v56) = 0;
  v10 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiNumberOfMeasurementsForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  v11 = sub_1000B1180((uint64_t)v57, (uint64_t)v10, &v56);
  CFRelease(v10);
  v12 = LODWORD(v56);
  v13 = v58;
  if (v58)
  {
    v14 = (unint64_t *)&v58->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v11)
    v16 = v12;
  else
    v16 = 1;
  v51 = v16;
  v50 = sub_10038EBF0();
  v17 = sub_10038ECCC();
  sub_1001E4804(&v57);
  v56 = 0.0;
  v18 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleDurationForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  v19 = sub_1001FD9FC((uint64_t)v57, (uint64_t)v18, &v56);
  CFRelease(v18);
  v20 = v56;
  v21 = v58;
  if (v58)
  {
    v22 = (unint64_t *)&v58->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  if (!v19)
    v20 = 0.0;
  sub_1001E4804(&v57);
  LODWORD(v56) = 0;
  v24 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleNumberOfMeasurementsForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  v25 = sub_1000B1180((uint64_t)v57, (uint64_t)v24, &v56);
  CFRelease(v24);
  v26 = LODWORD(v56);
  v27 = v58;
  if (v58)
  {
    v28 = (unint64_t *)&v58->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  if (!v25)
    v26 = 0;
  v30 = sub_10038EDA8();
  if (sub_10038EE84())
    v31 = sub_10097905C();
  else
    v31 = 0;
  sub_1001E4804(&v57);
  v56 = 0.0;
  v32 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbRangeDurationForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  v33 = sub_1001FD9FC((uint64_t)v57, (uint64_t)v32, &v56);
  CFRelease(v32);
  v34 = v56;
  v35 = v58;
  if (v58)
  {
    v36 = (unint64_t *)&v58->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  sub_1001E4804(&v57);
  LODWORD(v56) = 0;
  v38 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbNumberOfMeasurementsForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  v39 = sub_1000B1180((uint64_t)v57, (uint64_t)v38, &v56);
  CFRelease(v38);
  v49 = LODWORD(v56);
  v40 = v58;
  if (v58)
  {
    v41 = (unint64_t *)&v58->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  v43 = sub_10038EF60();
  LODWORD(v56) = 1;
  v57 = &v56;
  v44 = sub_1003927EC(v52, (unsigned int *)&v56, (uint64_t)&unk_101B9EB60, (_DWORD **)&v57);
  v44[24] = v3;
  *(_DWORD *)(v44 + 25) = *(_DWORD *)v55;
  *((_DWORD *)v44 + 7) = *(_DWORD *)&v55[3];
  *((double *)v44 + 4) = v6;
  *((_QWORD *)v44 + 5) = v51;
  *((_QWORD *)v44 + 6) = v50;
  LODWORD(v56) = 5;
  v57 = &v56;
  v45 = sub_1003927EC(v52, (unsigned int *)&v56, (uint64_t)&unk_101B9EB60, (_DWORD **)&v57);
  v45[24] = v17;
  *(_DWORD *)(v45 + 25) = *(_DWORD *)v54;
  *((_DWORD *)v45 + 7) = *(_DWORD *)&v54[3];
  *((double *)v45 + 4) = v20;
  *((_QWORD *)v45 + 5) = v26;
  *((_QWORD *)v45 + 6) = v30;
  LODWORD(v56) = 6;
  v57 = &v56;
  result = sub_1003927EC(v52, (unsigned int *)&v56, (uint64_t)&unk_101B9EB60, (_DWORD **)&v57);
  v47 = v49;
  if (!v39)
    v47 = 0;
  v48 = 0.0;
  if (v33)
    v48 = v34;
  result[24] = v31;
  *(_DWORD *)(result + 25) = *(_DWORD *)v53;
  *((_DWORD *)result + 7) = *(_DWORD *)&v53[3];
  *((double *)result + 4) = v48;
  *((_QWORD *)result + 5) = v47;
  *((_QWORD *)result + 6) = v43;
  return result;
}

void sub_10038E820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_100067AC4(a13);
  _Unwind_Resume(a1);
}

uint64_t sub_10038E884()
{
  CFStringRef v0;
  int v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumTotalNumberOfMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 2;
}

void sub_10038E948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038E960()
{
  CFStringRef v0;
  unsigned int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsProcessOffChannelRssiAP", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return v1;
  else
    return 0;
}

void sub_10038EA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038EA38()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsProcessInvalidRssiAP", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_10038EAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038EB14()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementProcessingWifiRssiEnable", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_10038EBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038EBF0()
{
  CFStringRef v0;
  int v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumNumberOfWifiRssiMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 100;
}

void sub_10038ECB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038ECCC()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementProcessingBleLeechEnable", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_10038ED90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038EDA8()
{
  CFStringRef v0;
  int v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumNumberOfBleRssiMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 100;
}

void sub_10038EE6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038EE84()
{
  CFStringRef v0;
  int v1;
  _BOOL4 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementProcessingUwbRangeEnable", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1001E48E4(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v2)
    return 1;
  else
    return v1 ^ 1u;
}

void sub_10038EF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038EF60()
{
  CFStringRef v0;
  int v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumNumberOfUwbRangeMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 100;
}

void sub_10038F024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_10038F03C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  char v2;
  char v3;
  CFStringRef v4;
  int v5;
  double v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  CFStringRef v10;
  int v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  CFStringRef v18;
  int v19;
  double v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  CFStringRef v24;
  int v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  CFStringRef v32;
  int v33;
  double v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  CFStringRef v38;
  int v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *result;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[7];
  _BYTE v54[7];
  _BYTE v55[7];
  double v56;
  double *v57;
  std::__shared_weak_count *v58;

  v1 = a1;
  *a1 = sub_10038E884();
  *((_BYTE *)v1 + 8) = sub_10038E960();
  v2 = sub_10038EA38();
  *((_OWORD *)v1 + 1) = 0u;
  v1 += 2;
  *((_BYTE *)v1 - 7) = v2;
  *((_OWORD *)v1 + 1) = 0u;
  v52 = (uint64_t)v1;
  *((_DWORD *)v1 + 8) = 1065353216;
  v3 = sub_10038EB14();
  sub_1001E4804(&v57);
  v56 = 0.0;
  v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiDurationForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  v5 = sub_1001FD9FC((uint64_t)v57, (uint64_t)v4, &v56);
  CFRelease(v4);
  v6 = v56;
  v7 = v58;
  if (v58)
  {
    p_shared_owners = (unint64_t *)&v58->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (!v5)
    v6 = 0.0;
  sub_1001E4804(&v57);
  LODWORD(v56) = 0;
  v10 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiNumberOfMeasurementsForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  v11 = sub_1000B1180((uint64_t)v57, (uint64_t)v10, &v56);
  CFRelease(v10);
  v12 = LODWORD(v56);
  v13 = v58;
  if (v58)
  {
    v14 = (unint64_t *)&v58->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v11)
    v16 = v12;
  else
    v16 = 1;
  v51 = v16;
  v50 = sub_10038EBF0();
  v17 = sub_10038ECCC();
  sub_1001E4804(&v57);
  v56 = 0.0;
  v18 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleDurationForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  v19 = sub_1001FD9FC((uint64_t)v57, (uint64_t)v18, &v56);
  CFRelease(v18);
  v20 = v56;
  v21 = v58;
  if (v58)
  {
    v22 = (unint64_t *)&v58->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  if (!v19)
    v20 = 0.0;
  sub_1001E4804(&v57);
  LODWORD(v56) = 0;
  v24 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleNumberOfMeasurementsForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  v25 = sub_1000B1180((uint64_t)v57, (uint64_t)v24, &v56);
  CFRelease(v24);
  v26 = LODWORD(v56);
  v27 = v58;
  if (v58)
  {
    v28 = (unint64_t *)&v58->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  if (!v25)
    v26 = 0;
  v30 = sub_10038EDA8();
  if (sub_10038EE84())
    v31 = sub_10097905C();
  else
    v31 = 0;
  sub_1001E4804(&v57);
  v56 = 0.0;
  v32 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbRangeDurationForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  v33 = sub_1001FD9FC((uint64_t)v57, (uint64_t)v32, &v56);
  CFRelease(v32);
  v34 = v56;
  v35 = v58;
  if (v58)
  {
    v36 = (unint64_t *)&v58->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  sub_1001E4804(&v57);
  LODWORD(v56) = 0;
  v38 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbNumberOfMeasurementsForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  v39 = sub_1000B1180((uint64_t)v57, (uint64_t)v38, &v56);
  CFRelease(v38);
  v49 = LODWORD(v56);
  v40 = v58;
  if (v58)
  {
    v41 = (unint64_t *)&v58->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  v43 = sub_10038EF60();
  LODWORD(v56) = 1;
  v57 = &v56;
  v44 = sub_1003927EC(v52, (unsigned int *)&v56, (uint64_t)&unk_101B9EB60, (_DWORD **)&v57);
  v44[24] = v3;
  *(_DWORD *)(v44 + 25) = *(_DWORD *)v55;
  *((_DWORD *)v44 + 7) = *(_DWORD *)&v55[3];
  *((double *)v44 + 4) = v6;
  *((_QWORD *)v44 + 5) = v51;
  *((_QWORD *)v44 + 6) = v50;
  LODWORD(v56) = 5;
  v57 = &v56;
  v45 = sub_1003927EC(v52, (unsigned int *)&v56, (uint64_t)&unk_101B9EB60, (_DWORD **)&v57);
  v45[24] = v17;
  *(_DWORD *)(v45 + 25) = *(_DWORD *)v54;
  *((_DWORD *)v45 + 7) = *(_DWORD *)&v54[3];
  *((double *)v45 + 4) = v20;
  *((_QWORD *)v45 + 5) = v26;
  *((_QWORD *)v45 + 6) = v30;
  LODWORD(v56) = 6;
  v57 = &v56;
  result = sub_1003927EC(v52, (unsigned int *)&v56, (uint64_t)&unk_101B9EB60, (_DWORD **)&v57);
  v47 = v49;
  if (!v39)
    v47 = 0;
  v48 = 0.0;
  if (v33)
    v48 = v34;
  result[24] = v31;
  *(_DWORD *)(result + 25) = *(_DWORD *)v53;
  *((_DWORD *)result + 7) = *(_DWORD *)&v53[3];
  *((double *)result + 4) = v48;
  *((_QWORD *)result + 5) = v47;
  *((_QWORD *)result + 6) = v43;
  return result;
}

void sub_10038F56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_100067AC4(a13);
  _Unwind_Resume(a1);
}

uint64_t sub_10038F5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t **v6;

  v5 = *(unsigned int *)(a2 + 8);
  v4 = &v5;
  v2 = *(unsigned int *)(a2 + 40);
  if ((_DWORD)v2 == -1)
    sub_100392428();
  v6 = &v4;
  ((void (*)(uint64_t ***, uint64_t))*(&off_102132190 + v2))(&v6, a2 + 16);
  return v5;
}

uint64_t sub_10038F62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a2 + 8) == *(_DWORD *)(a3 + 8))
    return sub_10036DECC(a2 + 16, a3 + 16);
  else
    return 0;
}

_QWORD *sub_10038F650(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  _BYTE *v15;
  _QWORD v16[3];
  _QWORD *v17;
  _QWORD v18[3];
  _QWORD *v19;
  _QWORD v20[3];
  _QWORD *v21;
  _BYTE v22[24];
  _BYTE *v23;
  _BYTE v24[24];
  _BYTE *v25;
  _BYTE v26[24];
  _BYTE *v27;

  v21 = v20;
  v19 = v18;
  v20[0] = off_102132238;
  v16[0] = off_102132358;
  v17 = v16;
  v18[0] = off_1021322C8;
  sub_100392C28((uint64_t)v22, (uint64_t)v20, (uint64_t)v18, (uint64_t)v16);
  v2 = v17;
  if (v17 == v16)
  {
    v3 = 4;
    v2 = v16;
  }
  else
  {
    if (!v17)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  v4 = v19;
  if (v19 == v18)
  {
    v5 = 4;
    v4 = v18;
  }
  else
  {
    if (!v19)
      goto LABEL_11;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_11:
  v6 = v21;
  if (v21 == v20)
  {
    v7 = 4;
    v6 = v20;
  }
  else
  {
    if (!v21)
      goto LABEL_16;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_16:
  v8 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v8 == -1)
    sub_100392428();
  v15 = v22;
  ((void (*)(_BYTE **, uint64_t))*(&off_1021321A8 + v8))(&v15, a1 + 16);
  v9 = v27;
  if (v27 == v26)
  {
    v10 = 4;
    v9 = v26;
  }
  else
  {
    if (!v27)
      goto LABEL_22;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_22:
  v11 = v25;
  if (v25 == v24)
  {
    v12 = 4;
    v11 = v24;
  }
  else
  {
    if (!v25)
      goto LABEL_27;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_27:
  result = v23;
  if (v23 == v22)
  {
    v14 = 4;
    result = v22;
  }
  else
  {
    if (!v23)
      return result;
    v14 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v14))();
}

void sub_10038F84C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17, char a18, uint64_t a19, uint64_t a20,char *a21,char a22)
{
  char *v22;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v24 = a13;
  if (a13 == v22)
  {
    v25 = 4;
    v24 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v25 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v24 + 8 * v25))();
LABEL_6:
  v26 = a17;
  if (a17 == &a14)
  {
    v27 = 4;
    v26 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_11;
    v27 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v26 + 8 * v27))();
LABEL_11:
  v28 = a21;
  if (a21 == &a18)
  {
    v29 = 4;
    v28 = &a18;
  }
  else
  {
    if (!a21)
      goto LABEL_16;
    v29 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v28 + 8 * v29))();
LABEL_16:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_10038F8F4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = a1 + 8;
  v3 = (_QWORD *)a1[11];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (_QWORD *)a1[7];
  if (v5 == a1 + 4)
  {
    v6 = 4;
    v5 = a1 + 4;
  }
  else
  {
    if (!v5)
      goto LABEL_11;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_11:
  v7 = (_QWORD *)a1[3];
  if (v7 == a1)
  {
    v8 = 4;
    v7 = a1;
    goto LABEL_15;
  }
  if (v7)
  {
    v8 = 5;
LABEL_15:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }
  return a1;
}

_QWORD *sub_10038F9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *result;
  uint64_t v19;
  _BYTE *v20;
  _QWORD v21[3];
  _QWORD *v22;
  _QWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  _QWORD *v26;
  _BYTE v27[24];
  _BYTE *v28;
  _BYTE v29[24];
  _BYTE *v30;
  _BYTE v31[24];
  _BYTE *v32;

  sub_1002BB920((_QWORD *)a2);
  v4 = *(_DWORD *)(a1 + 8);
  if (!sub_1002BC664(v4))
    __assert_rtn("set_datatype", "microlocation.pb.h", 10856, "::CLMicroLocationProto::DataType_IsValid(value)");
  v5 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)a1;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a2 + 36) = v5 | 0xF;
  v6 = *(_QWORD *)(a2 + 24);
  if (!v6)
    operator new();
  v25[0] = off_1021323E8;
  v25[1] = v6;
  v26 = v25;
  v23[0] = off_102132478;
  v23[1] = v6;
  v24 = v23;
  v21[0] = off_102132508;
  v21[1] = v6;
  v22 = v21;
  sub_100392C28((uint64_t)v27, (uint64_t)v25, (uint64_t)v23, (uint64_t)v21);
  v7 = v22;
  if (v22 == v21)
  {
    v8 = 4;
    v7 = v21;
  }
  else
  {
    if (!v22)
      goto LABEL_9;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_9:
  v9 = v24;
  if (v24 == v23)
  {
    v10 = 4;
    v9 = v23;
  }
  else
  {
    if (!v24)
      goto LABEL_14;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_14:
  v11 = v26;
  if (v26 == v25)
  {
    v12 = 4;
    v11 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_19;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_19:
  v13 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v13 == -1)
    sub_100392428();
  v20 = v27;
  ((void (*)(_BYTE **, uint64_t))*(&off_1021321C0 + v13))(&v20, a1 + 16);
  v14 = v32;
  if (v32 == v31)
  {
    v15 = 4;
    v14 = v31;
  }
  else
  {
    if (!v32)
      goto LABEL_25;
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
LABEL_25:
  v16 = v30;
  if (v30 == v29)
  {
    v17 = 4;
    v16 = v29;
  }
  else
  {
    if (!v30)
      goto LABEL_30;
    v17 = 5;
  }
  (*(void (**)(void))(*v16 + 8 * v17))();
LABEL_30:
  result = v28;
  if (v28 == v27)
  {
    v19 = 4;
    result = v27;
  }
  else
  {
    if (!v28)
      return result;
    v19 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v19))();
}

void sub_10038FC28()
{
  operator delete();
}

uint64_t sub_10038FD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  float v12;
  uint64_t v14;
  _BYTE v15[32];
  std::string v16;
  int v17;
  __int128 v18;
  char v19;

  v4 = *(_DWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = sub_10035A138(a1);
  v16.__r_.__value_.__r.__words[0] = 0;
  v17 = 0;
  switch(v4)
  {
    case 1:
      v7 = *(_QWORD *)(a1 + 16);
      if (!v7)
        v7 = *(_QWORD *)(qword_102310298 + 16);
      *(_QWORD *)&v18 = *(_QWORD *)(v7 + 24);
      sub_10038FF58((uint64_t)&v16, &v18);
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310298 + 24);
      goto LABEL_15;
    case 3:
      v8 = *(_QWORD *)(a1 + 32);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310298 + 32);
      goto LABEL_15;
    case 4:
      v8 = *(_QWORD *)(a1 + 40);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310298 + 40);
      goto LABEL_15;
    case 5:
      v8 = *(_QWORD *)(a1 + 48);
      if (!v8)
        v8 = *(_QWORD *)(qword_102310298 + 48);
      v9 = *(_DWORD *)(v8 + 64);
      if ((v9 & 0x80) != 0)
      {
        sub_10035777C(*(uint64_t ***)(v8 + 48), &v18);
        if (v19)
        {
LABEL_23:
          sub_10038FF98((uint64_t)&v16, &v18);
        }
        else
        {
          v14 = *(_QWORD *)(a1 + 48);
          if (!v14)
            v14 = *(_QWORD *)(qword_102310298 + 48);
          sub_100392FEC((uint64_t)&v16, &v16, *(std::string **)(v14 + 48));
        }
      }
      else if ((v9 & 8) != 0)
      {
LABEL_15:
        sub_100392FEC((uint64_t)&v16, &v16, *(std::string **)(v8 + 24));
      }
      break;
    case 6:
      v10 = *(_QWORD *)(a1 + 56);
      if (!v10)
        v10 = *(_QWORD *)(qword_102310298 + 56);
      sub_10035777C(*(uint64_t ***)(v10 + 32), &v18);
      if (v19)
        goto LABEL_23;
      v11 = *(_QWORD *)(a1 + 56);
      if (!v11)
        v11 = *(_QWORD *)(qword_102310298 + 56);
      sub_100392FEC((uint64_t)&v16, &v16, *(std::string **)(v11 + 32));
      break;
    default:
      break;
  }
  sub_1002719DC((uint64_t)v15, (uint64_t)&v16);
  v12 = v6;
  *(_QWORD *)a2 = v5;
  *(_DWORD *)(a2 + 8) = v4;
  *(float *)(a2 + 12) = v12;
  sub_100392698(a2 + 16, (uint64_t)v15);
  sub_100271404((uint64_t)v15);
  return sub_100271404((uint64_t)&v16);
}

void sub_10038FF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_100271404((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10038FF58(uint64_t a1, _QWORD *a2)
{
  if (*(_DWORD *)(a1 + 24))
    sub_100393130(a1, a2);
  else
    *(_QWORD *)a1 = *a2;
  return a1;
}

uint64_t sub_10038FF98(uint64_t a1, _OWORD *a2)
{
  if (*(_DWORD *)(a1 + 24) == 1)
    *(_OWORD *)a1 = *a2;
  else
    sub_100393190(a1, a2);
  return a1;
}

uint64_t sub_10038FFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  NSObject *v9;
  int v10;
  uint64_t v12;
  const char *v13;
  uint8_t *v14;
  _BYTE v15[32];
  _WORD v16[8];
  std::string v17;
  int v18;
  uint8_t buf[1640];

  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 20);
  v17.__r_.__value_.__r.__words[0] = 0;
  v18 = 0;
  v7 = *(_QWORD *)(a1 + 24);
  if (!v7)
  {
    v7 = *(_QWORD *)(qword_1023102A8 + 24);
    v10 = *(_DWORD *)(v7 + 28);
    if ((v10 & 1) == 0)
    {
      if ((v10 & 2) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
LABEL_14:
    *(_QWORD *)buf = *(_QWORD *)(v7 + 8);
    sub_10038FF58((uint64_t)&v17, buf);
    goto LABEL_15;
  }
  v8 = *(_DWORD *)(v7 + 28);
  if ((v8 & 1) != 0)
    goto LABEL_14;
  if ((v8 & 2) == 0)
  {
LABEL_4:
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021321F0);
    v9 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unknown device id", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021321F0);
      v16[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Unknown device id", v16, 2);
      v14 = (uint8_t *)v13;
      sub_100512490("Generic", 1, 0, 0, "static CLMicroLocationFingerprint::Measurement CLMicroLocationFingerprint::Measurement::fromProtobuf(const CLMicroLocationProto::FingerprintMeasurement &)", "%s\n", v13);
      if (v14 != buf)
        free(v14);
    }
    sub_1003931FC((uint64_t)&v17, &v17, "Unknown");
    goto LABEL_15;
  }
LABEL_12:
  sub_10035777C(*(uint64_t ***)(v7 + 16), buf);
  if (buf[16])
  {
    sub_10038FF98((uint64_t)&v17, buf);
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 24);
    if (!v12)
      v12 = *(_QWORD *)(qword_1023102A8 + 24);
    sub_100392FEC((uint64_t)&v17, &v17, *(std::string **)(v12 + 16));
  }
LABEL_15:
  sub_1002719DC((uint64_t)v15, (uint64_t)&v17);
  *(_QWORD *)a2 = v5;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v6;
  sub_100392698(a2 + 16, (uint64_t)v15);
  sub_100271404((uint64_t)v15);
  return sub_100271404((uint64_t)&v17);
}

void sub_10039026C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_100271404((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100390288(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _OWORD *v5;
  uint64_t *v6;
  int v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *i;
  const char *v17;
  char *v18;
  _WORD v19[8];
  __int128 buf;
  _BYTE v21[1624];

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  v4 = (_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_QWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 96) = 1065353216;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 1065353216;
  *(_QWORD *)(a1 + 144) = 0;
  v5 = (_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 0;
  v6 = *(uint64_t **)(a2 + 56);
  v7 = *((char *)v6 + 23);
  if ((v7 & 0x80000000) == 0)
  {
    if (v7 != 16)
      goto LABEL_7;
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
    goto LABEL_12;
  }
  if (v6[1] == 16)
  {
    v6 = (uint64_t *)*v6;
    goto LABEL_6;
  }
LABEL_7:
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021321F0);
  v8 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning The protobuf fingerprint does not have a valid recording uuid", (uint8_t *)&buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021321F0);
    v19[0] = 0;
    _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning The protobuf fingerprint does not have a valid recording uuid", v19, 2);
    v18 = (char *)v17;
    sub_100512490("Generic", 1, 0, 2, "CLMicroLocationFingerprint::CLMicroLocationFingerprint(const CLMicroLocationProto::Fingerprint &)", "%s\n", v17);
    if (v18 != (char *)&buf)
      free(v18);
  }
LABEL_12:
  *v5 = *(_OWORD *)(a2 + 40);
  v9 = *(unsigned int *)(a2 + 16);
  if ((int)v9 < 1)
  {
    v12 = *(int *)(a2 + 80);
    if ((_DWORD)v12)
    {
      v13 = *(uint64_t **)(a2 + 72);
      v14 = 8 * v12;
      do
      {
        sub_10038FFDC(*v13, (uint64_t)&buf);
        sub_1003932A4(a1, (uint64_t)&buf, &buf);
        sub_100271404((uint64_t)v21);
        ++v13;
        v14 -= 8;
      }
      while (v14);
    }
  }
  else
  {
    v10 = *(uint64_t **)(a2 + 8);
    v11 = 8 * v9;
    do
    {
      sub_10038FD04(*v10, (uint64_t)&buf);
      sub_1003932A4(a1, (uint64_t)&buf, &buf);
      sub_100271404((uint64_t)v21);
      ++v10;
      v11 -= 8;
    }
    while (v11);
  }
  for (i = (_QWORD *)(a1 + 16); ; sub_1003905F4(a1, i + 2))
  {
    i = (_QWORD *)*i;
    if (!i)
      break;
  }
  if (*(_BYTE *)(a2 + 96))
    *v4 |= 0x20uLL;
  if (*(_BYTE *)(a2 + 97))
    *v4 |= 0x40uLL;
  return a1;
}

void sub_100390598(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v5;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 176) = v5;
    operator delete(v5);
  }
  sub_100067AC4(v2);
  sub_100067AC4(v1 + 64);
  sub_100271390(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1003905F4(uint64_t a1, _QWORD *a2)
{
  unsigned int *v4;
  _QWORD *v5;
  uint64_t *result;
  double v7;
  double v8;
  __int128 v9;

  v4 = (unsigned int *)(a2 + 1);
  sub_100271BA8(a1 + 64, v4, v4);
  v5 = (_QWORD *)(a1 + 104);
  if (sub_100270BB8(v5, v4))
  {
    result = sub_100270BB8(v5, v4);
    v7 = *(double *)a2;
    v8 = *((double *)result + 3);
    if (*(double *)a2 < v8)
      v8 = *(double *)a2;
    if (*((double *)result + 4) >= *(double *)a2)
      v7 = *((double *)result + 4);
    *((double *)result + 3) = v8;
    *((double *)result + 4) = v7;
  }
  else
  {
    *(_QWORD *)&v9 = *a2;
    *((_QWORD *)&v9 + 1) = v9;
    return (uint64_t *)sub_1003940AC((uint64_t)v5, v4, v4, &v9);
  }
  return result;
}

void sub_1003906A4(_QWORD *a1, unint64_t a2, int a3)
{
  uint64_t *v3;
  unint64_t v7;
  uint64_t *i;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  int v18;
  uint64_t *v19;
  unint64_t v20;
  void *__p;
  char *v22;
  char *v23;

  v3 = (uint64_t *)a1[2];
  if (v3)
  {
    v7 = 0;
    do
    {
      if (*((_DWORD *)v3 + 6) == a3)
        ++v7;
      v3 = (uint64_t *)*v3;
    }
    while (v3);
    if (v7 > a2)
    {
      __p = 0;
      v22 = 0;
      v23 = 0;
      sub_1003908C0(&__p, v7);
      for (i = (uint64_t *)a1[2]; i; i = (uint64_t *)*i)
      {
        if (*((_DWORD *)i + 6) == a3)
        {
          v9 = v22;
          if (v22 >= v23)
          {
            v11 = (char *)__p;
            v12 = (v22 - (_BYTE *)__p) >> 2;
            v13 = v12 + 1;
            if ((unint64_t)(v12 + 1) >> 62)
              sub_100259694();
            v14 = v23 - (_BYTE *)__p;
            if ((v23 - (_BYTE *)__p) >> 1 > v13)
              v13 = v14 >> 1;
            if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL)
              v15 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v15 = v13;
            if (v15)
            {
              v16 = (char *)sub_100260634((uint64_t)&v23, v15);
              v11 = (char *)__p;
              v9 = v22;
            }
            else
            {
              v16 = 0;
            }
            v17 = &v16[4 * v12];
            *(_DWORD *)v17 = *((_DWORD *)i + 7);
            v10 = v17 + 4;
            while (v9 != v11)
            {
              v18 = *((_DWORD *)v9 - 1);
              v9 -= 4;
              *((_DWORD *)v17 - 1) = v18;
              v17 -= 4;
            }
            __p = v17;
            v22 = v10;
            v23 = &v16[4 * v15];
            if (v11)
              operator delete(v11);
          }
          else
          {
            *(_DWORD *)v22 = *((_DWORD *)i + 7);
            v10 = v9 + 4;
          }
          v22 = v10;
        }
      }
      if (((a3 - 2) & 0xFFFFFFFB) != 0)
        sub_100390954(a1, (float **)&__p, a2, a3);
      else
        sub_100390A18(a1, &__p, a2, a3);
      v19 = (uint64_t *)a1[2];
      if (!v19)
        goto LABEL_36;
      v20 = 0;
      do
      {
        if (*((_DWORD *)v19 + 6) == a3)
          ++v20;
        v19 = (uint64_t *)*v19;
      }
      while (v19);
      if (v20 > a2)
      {
        sub_1018F84C0();
        abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/MicroLocation/CLMicroLocationFingerprint.mm", 331, "removeExceedingMeasurements");
        __break(1u);
      }
      else
      {
LABEL_36:
        if (__p)
        {
          v22 = (char *)__p;
          operator delete(__p);
        }
      }
    }
  }
}

void sub_10039089C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1003908C0(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 2)
  {
    if (a2 >> 62)
      sub_100259694();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_100260634(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    v9 = &v6[4 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_100390954(_QWORD *a1, float **a2, uint64_t a3, int a4)
{
  float *v8;
  float *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  float v13;
  uint64_t *v14;
  _BYTE v15[24];

  v8 = *a2;
  v9 = a2[1];
  v10 = 126 - 2 * __clz(v9 - v8);
  if (v9 == v8)
    v11 = 0;
  else
    v11 = v10;
  sub_100393534(v8, v9, (uint64_t)v15, v11, 1);
  v12 = (uint64_t *)a1[2];
  if (v12)
  {
    v13 = (*a2)[a3];
    do
    {
      while (*((_DWORD *)v12 + 6) != a4 || *((float *)v12 + 7) > v13)
      {
        v12 = (uint64_t *)*v12;
        if (!v12)
          return;
      }
      v14 = (uint64_t *)*v12;
      sub_1000592D8(a1, v12, (uint64_t)v15);
      sub_100271AF0((uint64_t)v15, 0);
      v12 = v14;
    }
    while (v14);
  }
}

void sub_100390A18(_QWORD *a1, _QWORD *a2, uint64_t a3, int a4)
{
  uint64_t *v8;
  float v9;
  uint64_t *v10;
  _BYTE v11[24];

  std::__sort<std::__less<float,float> &,float *>(*a2, a2[1], v11);
  v8 = (uint64_t *)a1[2];
  if (v8)
  {
    v9 = *(float *)(*a2 + 4 * a3);
    do
    {
      while (*((_DWORD *)v8 + 6) != a4 || *((float *)v8 + 7) < v9)
      {
        v8 = (uint64_t *)*v8;
        if (!v8)
          return;
      }
      v10 = (uint64_t *)*v8;
      sub_1000592D8(a1, v8, (uint64_t)v11);
      sub_100271AF0((uint64_t)v11, 0);
      v8 = v10;
    }
    while (v10);
  }
}

uint64_t sub_100390ABC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  std::string *p_p;
  NSObject *v18;
  uint64_t v19;
  uint64_t *v20;
  double v21;
  double v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  _BYTE *v27;
  BOOL v28;
  double v29;
  double v30;
  double v31;
  float v32;
  uint64_t i;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  char *v45;
  _DWORD *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  int v54;
  const char *v56;
  char *v57;
  _QWORD *v59;
  void **v60;
  __int128 v61;
  __int128 v62;
  int v63;
  std::string __p;
  uint64_t v65;
  _BYTE buf[18];
  __int16 v67;
  std::string *v68;
  __int16 v69;
  int v70;
  __int16 v71;
  int v72;

  v5 = a5;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  v59 = (_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_QWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 96) = 1065353216;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 1065353216;
  *(_QWORD *)(a1 + 168) = 0;
  v60 = (void **)(a1 + 168);
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 0;
  v61 = 0u;
  v62 = 0u;
  v63 = 1065353216;
  v9 = *a2;
  v10 = a2[1];
  if (*a2 == v10)
    goto LABEL_21;
  do
  {
    v11 = sub_10035AAAC(v9) ^ 1;
    if (*(_BYTE *)(a3 + 9))
      v12 = 1;
    else
      v12 = v11;
    v13 = sub_10035AACC(v9) ^ 1;
    if (*(_BYTE *)(a3 + 8))
      v14 = 1;
    else
      v14 = v13;
    if ((v12 & v14 & 1) != 0)
    {
      sub_10038FD04(v9, (uint64_t)buf);
      sub_1003942DC(&v61, buf);
      sub_100271404((uint64_t)&buf[16]);
    }
    else
    {
      v15 = *(_QWORD *)(v9 + 16);
      if (!v15)
        v15 = *(_QWORD *)(qword_102310298 + 16);
      v65 = nullsub_34(*(_QWORD *)(v15 + 24));
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021321F0);
      v16 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        sub_1000C2254(&v65, &__p);
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)buf = 68289794;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "";
        v67 = 2082;
        v68 = p_p;
        v69 = 1026;
        v70 = v12;
        v71 = 1026;
        v72 = v14;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldProcess, ignore a measurement\", \"macAddress\":%{public, location:escape_only}s, \"shouldProcessPerInvalidRssiFlag\":%{public}hhd, \"shouldProcessPerOffChannelRssiFlag\":%{public}hhd}", buf, 0x28u);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    v9 += 88;
  }
  while (v9 != v10);
  v5 = a5;
  if (!*((_QWORD *)&v62 + 1))
  {
LABEL_21:
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021321F0);
    v18 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#warning, this fingerprint does not have any measurements, all measurements might have been filtered out", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021321F0);
      LOWORD(__p.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#warning, this fingerprint does not have any measurements, all measurements might have been filtered out", &__p, 2);
      v57 = (char *)v56;
      sub_100512490("Generic", 1, 0, 2, "CLMicroLocationFingerprint::CLMicroLocationFingerprint(const std::vector<CLMiLoProtobufWrapper::Measurement> &, const CLMicroLocationFingerprintConfiguration &, const std::optional<CLMicroLocationProto::RecordingEvent> &, const std::optional<boost::uuids::uuid> &)", "%s\n", v56);
      if (v57 != buf)
        free(v57);
    }
  }
  if (*(_BYTE *)(v5 + 16))
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
  }
  else
  {
    *(_DWORD *)buf = 0;
    sub_1000B0C3C((int *)buf);
    *(_QWORD *)(a1 + 40) = sub_1000B0D38((ssize_t)buf);
    *(_QWORD *)(a1 + 48) = v19;
    sub_1000B0D18((unsigned int *)buf);
  }
  v20 = (uint64_t *)v62;
  if ((_QWORD)v62)
  {
    v21 = 1.79769313e308;
    v22 = 2.22507386e-308;
    do
    {
      v23 = sub_100394840(&v61, (uint64_t)(v20 + 2));
      v25 = v24;
      *(_DWORD *)buf = *((_DWORD *)v20 + 6);
      v26 = sub_100270BB8((_QWORD *)(a3 + 16), (unsigned int *)buf);
      v27 = v26 + 3;
      if (!v26)
        v27 = &unk_101B9ED60;
      if (*v27)
        v28 = v23 == v25;
      else
        v28 = 1;
      if (!v28)
      {
        v29 = 0.0;
        v30 = 0.0;
        do
        {
          v31 = *((double *)v23 + 2);
          sub_1003905F4(a1, v23 + 2);
          if (v31 > v22)
            v22 = v31;
          if (v31 < v21)
            v21 = v31;
          v30 = v30 + 1.0;
          v29 = v29 + *((float *)v23 + 7);
          v23 = (uint64_t *)*v23;
        }
        while (v23 != v25);
        if (v30 > 0.0)
        {
          *(_OWORD *)buf = *((_OWORD *)v20 + 1);
          sub_1002719DC((uint64_t)&buf[16], (uint64_t)(v20 + 4));
          v32 = v29 / v30;
          *(float *)&buf[12] = v32;
          sub_1002716E4(a1, (uint64_t)buf, buf);
          sub_100271404((uint64_t)&buf[16]);
        }
      }
      v20 = v25;
    }
    while (v25);
  }
  else
  {
    v22 = 2.22507386e-308;
    v21 = 1.79769313e308;
  }
  *(double *)(a1 + 144) = v21;
  *(double *)(a1 + 152) = v22;
  for (i = a1 + 80; ; sub_1003906A4((_QWORD *)a1, v35[3], *(_DWORD *)(i + 16)))
  {
    i = *(_QWORD *)i;
    if (!i)
      break;
    *(_DWORD *)buf = *(_DWORD *)(i + 16);
    v34 = sub_100270BB8((_QWORD *)(a3 + 16), (unsigned int *)buf);
    v35 = v34 + 3;
    if (!v34)
      v35 = &unk_101B9ED60;
  }
  if (*(_BYTE *)(a4 + 136))
  {
    if (*(_BYTE *)(a4 + 77))
    {
      v36 = *(uint64_t **)(a1 + 16);
      if (!v36)
        goto LABEL_61;
      v37 = 0;
      do
      {
        if (*((_DWORD *)v36 + 6) == 5)
          ++v37;
        v36 = (uint64_t *)*v36;
      }
      while (v36);
      if (!v37)
LABEL_61:
        *v59 |= 0x20uLL;
    }
    if (*(_BYTE *)(a4 + 76))
    {
      v38 = *(uint64_t **)(a1 + 16);
      if (!v38)
        goto LABEL_69;
      v39 = 0;
      do
      {
        if (*((_DWORD *)v38 + 6) == 6)
          ++v39;
        v38 = (uint64_t *)*v38;
      }
      while (v38);
      if (!v39)
LABEL_69:
        *v59 |= 0x40uLL;
    }
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a4 + 120);
    LODWORD(v40) = *(_DWORD *)(a4 + 112);
    if ((int)v40 >= 1)
    {
      v41 = 0;
      do
      {
        if (v41 >= (int)v40)
        {
          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage(buf, 3, "/AppleInternal/Library/BuildRoots/f82e4213-595f-11ef-b136-76625042721f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.0.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h", 614);
          v42 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(buf, "CHECK failed: (index) < (size()): ");
          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&__p, v42);
          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
        }
        v43 = *(_DWORD *)(*(_QWORD *)(a4 + 104) + 4 * v41);
        v45 = *(char **)(a1 + 176);
        v44 = *(_QWORD *)(a1 + 184);
        if ((unint64_t)v45 >= v44)
        {
          v47 = (char *)*v60;
          v48 = (v45 - (_BYTE *)*v60) >> 2;
          v49 = v48 + 1;
          if ((unint64_t)(v48 + 1) >> 62)
            sub_100259694();
          v50 = v44 - (_QWORD)v47;
          if (v50 >> 1 > v49)
            v49 = v50 >> 1;
          if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL)
            v51 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v51 = v49;
          if (v51)
          {
            v52 = (char *)sub_100260634(a1 + 184, v51);
            v47 = *(char **)(a1 + 168);
            v45 = *(char **)(a1 + 176);
          }
          else
          {
            v52 = 0;
          }
          v53 = &v52[4 * v48];
          *(_DWORD *)v53 = v43;
          v46 = v53 + 4;
          while (v45 != v47)
          {
            v54 = *((_DWORD *)v45 - 1);
            v45 -= 4;
            *((_DWORD *)v53 - 1) = v54;
            v53 -= 4;
          }
          *(_QWORD *)(a1 + 168) = v53;
          *(_QWORD *)(a1 + 176) = v46;
          *(_QWORD *)(a1 + 184) = &v52[4 * v51];
          if (v47)
            operator delete(v47);
        }
        else
        {
          *(_DWORD *)v45 = v43;
          v46 = v45 + 4;
        }
        *(_QWORD *)(a1 + 176) = v46;
        ++v41;
        v40 = *(int *)(a4 + 112);
      }
      while (v41 < v40);
    }
  }
  sub_100271390((uint64_t)&v61);
  return a1;
}

void sub_1003911C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, ...)
{
  uint64_t v11;
  void *v13;
  va_list va;

  va_start(va, a11);
  sub_100271390((uint64_t)va);
  v13 = *a11;
  if (*a11)
  {
    *(_QWORD *)(v11 + 176) = v13;
    operator delete(v13);
  }
  sub_100067AC4(a5);
  sub_100067AC4(v11 + 64);
  sub_100271390(v11);
  _Unwind_Resume(a1);
}

void sub_100391278(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12[3];
  void **v13[10];
  int v14;
  uint64_t *v15;

  memset(v12, 0, sizeof(v12));
  v9 = *a1;
  v10 = a1[1];
  v15 = v12;
  while (v9 != v10)
  {
    v11 = *(_DWORD *)(v9 + 112);
    sub_1002C0A54(v13, v9 + 32);
    v14 = v11;
    sub_1003650E4(&v15, (uint64_t)v13);
    sub_1002C0B04((wireless_diagnostics::google::protobuf::MessageLite *)v13);
    v9 += 120;
  }
  sub_100391364(v12, a2, a3, a4, a5);
  v13[0] = (void **)v12;
  sub_1002A1A78(v13);
}

void sub_100391334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 - 72) = &a9;
  sub_1002A1A78((void ***)(v9 - 72));
  _Unwind_Resume(a1);
}

uint64_t *sub_100391364@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t *v6;
  double *v7;
  uint64_t *v8;
  double *v9;
  uint64_t *v10;
  double *v11;
  uint64_t *v12;
  double v13;
  uint64_t *v14;
  double v15;
  uint64_t *v16;
  double v17;
  _BOOL4 v18;
  _BOOL4 v19;
  _BOOL4 v20;
  int v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  _OWORD *v27;
  BOOL v28;
  int v29;
  BOOL v30;
  int v31;
  BOOL v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  NSObject *v36;
  uint64_t *v37;
  uint64_t *v38;
  unint64_t v39;
  unsigned __int8 *v40;
  _BYTE *v41;
  int v42;
  uint64_t *v43;
  uint64_t *v44;
  unint64_t v45;
  BOOL v46;
  CFStringRef v47;
  int v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  CFStringRef v54;
  int v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  char *v62;
  _OWORD *p_p;
  char v64;
  NSObject *v65;
  _QWORD *v68;
  void *__p;
  __int128 v70;
  _BYTE v71[16];
  uint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD v75[7];
  int v76;
  void *v77;
  void *__dst;
  uint8_t buf[8];
  _BYTE v80[10];
  __int16 v81;
  unint64_t v82;
  __int16 v83;
  unint64_t v84;
  __int16 v85;
  _OWORD *v86;
  __int16 v87;
  unint64_t v88;
  __int16 v89;
  double v90;
  __int16 v91;
  int v92;
  __int16 v93;
  _BOOL4 v94;
  __int16 v95;
  int v96;
  __int16 v97;
  int v98;
  __int16 v99;
  double v100;
  __int16 v101;
  double v102;

  *a5 = 0;
  a5[192] = 0;
  if (*result == result[1])
    return result;
  sub_100390ABC((uint64_t)v71, result, (uint64_t)a4, a2, a3);
  *(_DWORD *)buf = 1;
  v6 = sub_100270BB8(a4 + 2, (unsigned int *)buf);
  if (v6)
    v7 = (double *)(v6 + 3);
  else
    v7 = (double *)&unk_101B9ED60;
  *(_DWORD *)buf = 5;
  v8 = sub_100270BB8(a4 + 2, (unsigned int *)buf);
  if (v8)
    v9 = (double *)(v8 + 3);
  else
    v9 = (double *)&unk_101B9ED60;
  *(_DWORD *)buf = 6;
  v10 = sub_100270BB8(a4 + 2, (unsigned int *)buf);
  if (v10)
    v11 = (double *)(v10 + 3);
  else
    v11 = (double *)&unk_101B9ED60;
  *(_DWORD *)buf = 1;
  v12 = sub_100270BB8(v75, (unsigned int *)buf);
  if (v12)
    v13 = *((double *)v12 + 4) - *((double *)v12 + 3);
  else
    v13 = 0.0;
  *(_DWORD *)buf = 5;
  v14 = sub_100270BB8(v75, (unsigned int *)buf);
  if (v14)
    v15 = *((double *)v14 + 4) - *((double *)v14 + 3);
  else
    v15 = 0.0;
  *(_DWORD *)buf = 6;
  v16 = sub_100270BB8(v75, (unsigned int *)buf);
  if (v16)
    v17 = *((double *)v16 + 4) - *((double *)v16 + 3);
  else
    v17 = 0.0;
  if (*(_BYTE *)v7)
    v18 = v13 >= v7[1];
  else
    v18 = 1;
  if (*(_BYTE *)v9)
    v19 = v15 >= v9[1];
  else
    v19 = 1;
  if (!*(_BYTE *)v11)
  {
    v20 = 1;
    if (v18)
      goto LABEL_28;
LABEL_30:
    v21 = 0;
    goto LABEL_31;
  }
  v20 = v17 >= v11[1];
  if (!v18)
    goto LABEL_30;
LABEL_28:
  v21 = v19 && v20;
LABEL_31:
  v22 = v72;
  v68 = a4 + 2;
  if (v72)
  {
    v23 = 0;
    v24 = v72;
    do
    {
      if (*((_DWORD *)v24 + 6) == 1)
        ++v23;
      v24 = (uint64_t *)*v24;
    }
    while (v24);
    v25 = 0;
    v26 = v72;
    do
    {
      if (*((_DWORD *)v26 + 6) == 5)
        ++v25;
      v26 = (uint64_t *)*v26;
    }
    while (v26);
    v27 = 0;
    do
    {
      if (*((_DWORD *)v22 + 6) == 6)
        v27 = (_OWORD *)((char *)v27 + 1);
      v22 = (uint64_t *)*v22;
    }
    while (v22);
  }
  else
  {
    v25 = 0;
    v23 = 0;
    v27 = 0;
  }
  if (*(_BYTE *)v7)
    v28 = v23 >= *((_QWORD *)v7 + 2);
  else
    v28 = 1;
  v29 = v28;
  if (v29 == 1)
  {
    if (*(_BYTE *)v9)
      v30 = v25 >= *((_QWORD *)v9 + 2);
    else
      v30 = 1;
    v31 = v30;
    if (*(_BYTE *)v11)
      v32 = (unint64_t)v27 >= *((_QWORD *)v11 + 2);
    else
      v32 = 1;
    if (!v32)
      v31 = 0;
  }
  else
  {
    v31 = 0;
  }
  v33 = v73;
  v34 = *a4;
  if (*a4 > v73)
    v31 = 0;
  if (v21)
    v35 = v31;
  else
    v35 = 0;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021321F0);
  v36 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 68291842;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v80 = 2082;
    *(_QWORD *)&v80[2] = "";
    v81 = 2050;
    v82 = v23;
    v83 = 2050;
    v84 = v25;
    v85 = 2050;
    v86 = v27;
    v87 = 2050;
    v88 = v33;
    v89 = 2050;
    v90 = v13;
    v91 = 1026;
    v92 = v29;
    v93 = 1026;
    v94 = v34 <= v33;
    v95 = 1026;
    v96 = v21;
    v97 = 1026;
    v98 = v35;
    v99 = 2050;
    v100 = v15;
    v101 = 2050;
    v102 = v17;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Fingerprint creation\", \"NumWiFiMeasurements\":%{public}lu, \"NumBLEMeasurements\":%{public}lu, \"NumUWBMeasurements\":%{public}lu, \"number of total measurements\":%{public}lu, \"WiFi RSSI duration_s\":\"%{public}.09f\", \"enough WiFi measurements\":%{public}hhd, \"enough total measurements\":%{public}hhd, \"isDurationValid\":%{public}hhd, \"isFingerprintValid\":%{public}hhd, \"BLE Duration_s\":\"%{public}.09f\", \"UWB Duration_s\":\"%{public}.09f\"}", buf, 0x70u);
  }
  if (v35)
  {
    *(_DWORD *)buf = 5;
    v37 = sub_100270BB8(v68, (unsigned int *)buf);
    *(_DWORD *)buf = 6;
    v38 = sub_100270BB8(v68, (unsigned int *)buf);
    v39 = 0;
    v40 = (unsigned __int8 *)(v37 + 3);
    if (!v37)
      v40 = (unsigned __int8 *)&unk_101B9ED60;
    v41 = v38 + 3;
    if (!v38)
      v41 = &unk_101B9ED60;
    v42 = *v40;
    v43 = v72;
    if (v42 && v72)
    {
      v39 = 0;
      v44 = v72;
      do
      {
        if (*((_DWORD *)v44 + 6) == 5)
          ++v39;
        v44 = (uint64_t *)*v44;
      }
      while (v44);
    }
    v45 = 0;
    if (*v41)
      v46 = v72 == 0;
    else
      v46 = 1;
    if (!v46)
    {
      do
      {
        if (*((_DWORD *)v43 + 6) == 6)
          ++v45;
        v43 = (uint64_t *)*v43;
      }
      while (v43);
    }
    sub_1001E4804(buf);
    LODWORD(__p) = 0;
    v47 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsHighConfidenceBleSourceNumThreshold", 0x8000100u, kCFAllocatorNull);
    v48 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v47, &__p);
    CFRelease(v47);
    v49 = __p;
    v50 = *(std::__shared_weak_count **)v80;
    if (*(_QWORD *)v80)
    {
      v51 = (unint64_t *)(*(_QWORD *)v80 + 8);
      do
        v52 = __ldaxr(v51);
      while (__stlxr(v52 - 1, v51));
      if (!v52)
      {
        ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
        std::__shared_weak_count::__release_weak(v50);
      }
    }
    if (v48)
      v53 = v49;
    else
      v53 = 1;
    if (v39 < v53)
    {
      sub_1001E4804(buf);
      LODWORD(__p) = 0;
      v54 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsHighConfidenceUwbSourceNumThreshold", 0x8000100u, kCFAllocatorNull);
      v55 = sub_1000B1180(*(uint64_t *)buf, (uint64_t)v54, &__p);
      CFRelease(v54);
      v56 = __p;
      v57 = *(std::__shared_weak_count **)v80;
      if (*(_QWORD *)v80)
      {
        v58 = (unint64_t *)(*(_QWORD *)v80 + 8);
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
      if (v55)
        v60 = v56;
      else
        v60 = 1;
      if (v45 < v60)
      {
        if (v76 >= 2)
          v61 = 2;
        else
          v61 = v76;
        v76 = v61;
        v62 = (char *)operator new(4uLL);
        *(_DWORD *)v62 = 2;
        sub_100262014((uint64_t)&v77, (uint64_t)__dst, v62, v62 + 4, 1);
        operator delete(v62);
        if (*(_BYTE *)(a3 + 16))
        {
          p_p = operator new(0x28uLL);
          __p = p_p;
          v70 = xmmword_101B97FF0;
          *p_p = 0u;
          p_p[1] = 0u;
          *(_QWORD *)((char *)p_p + 29) = 0;
          sub_100261F9C(a3, p_p);
          v64 = 0x80;
        }
        else
        {
          v64 = 0;
          __p = 0;
          v70 = 0uLL;
          p_p = &__p;
        }
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021321F0);
        v65 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 68290050;
          *(_DWORD *)&buf[4] = 0;
          *(_WORD *)v80 = 2082;
          *(_QWORD *)&v80[2] = "";
          v81 = 2050;
          v82 = v39;
          v83 = 2050;
          v84 = v45;
          v85 = 2082;
          v86 = p_p;
          v87 = 1026;
          LODWORD(v88) = v61;
          _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting fingerprint confidence due to number of RF sources\", \"number of Ble measurements\":%{public}lu, \"number of Uwb measurements\":%{public}lu, \"Recording UUID\":%{public, location:escape_only}s, \"confidence level\":%{public}d}", buf, 0x36u);
          v64 = HIBYTE(v70);
        }
        if (v64 < 0)
          operator delete(__p);
      }
    }
    sub_100391AF8((uint64_t)a5, (uint64_t)v71);
  }
  if (v77)
  {
    __dst = v77;
    operator delete(v77);
  }
  sub_100067AC4((uint64_t)v75);
  sub_100067AC4((uint64_t)&v74);
  return (uint64_t *)sub_100271390((uint64_t)v71);
}

void sub_100391AA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  void *v39;

  operator delete(v39);
  sub_100271350((uint64_t)&a15);
  sub_1002967B0(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_100391AF8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  if (*(_BYTE *)(a1 + 192))
  {
    if (a1 != a2)
    {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      sub_1003949B8((_QWORD *)a1, *(uint64_t **)(a2 + 16), 0);
      v4 = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = v4;
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      sub_100394C7C((_QWORD *)(a1 + 64), *(unsigned int **)(a2 + 80), 0);
      *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
      sub_100395198((_QWORD *)(a1 + 104), *(uint64_t **)(a2 + 120), 0);
      v5 = *(_OWORD *)(a2 + 144);
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = v5;
      sub_1002A3054((char *)(a1 + 168), *(char **)(a2 + 168), *(_QWORD *)(a2 + 176), (uint64_t)(*(_QWORD *)(a2 + 176) - *(_QWORD *)(a2 + 168)) >> 2);
    }
  }
  else
  {
    sub_1002B7BA0(a1, a2);
    *(_BYTE *)(a1 + 192) = 1;
  }
  return a1;
}

BOOL sub_100391BC0@<W0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  float *v15;
  double v16;
  double *v17;
  double *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  double *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *__p;
  double *v34;
  double *v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;

  sub_10027360C(a2);
  __p = (void *)sub_100345FF8((uint64_t)a1);
  v34 = v6;
  v37 = sub_100346004(a1);
  v38 = v7;
  while (sub_100345F10(&__p, &v37))
  {
    for (i = *(uint64_t **)(sub_100345F3C(&__p) + 16); i; i = (uint64_t *)*i)
      sub_1002716E4(a2, (uint64_t)(i + 2), (_OWORD *)i + 1);
    sub_100345F50((uint64_t)&__p);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v37 = sub_100345FF8((uint64_t)a1);
  v38 = v9;
  v36[0] = sub_100346004(a1);
  v36[1] = v10;
  while (1)
  {
    result = sub_100345F10(&v37, v36);
    if (!result)
      return result;
    v12 = sub_100345F3C(&v37);
    __p = 0;
    v34 = 0;
    v35 = 0;
    v13 = *(uint64_t **)(a2 + 16);
    if (v13)
    {
      v14 = (_QWORD *)v12;
      do
      {
        v15 = (float *)sub_100345964(v14, (uint64_t)(v13 + 2));
        if (v15)
        {
          v16 = v15[7];
          v17 = v34;
          if (v34 >= v35)
          {
            v18 = (double *)__p;
            v19 = ((char *)v34 - (_BYTE *)__p) >> 3;
            v20 = v19 + 1;
            if ((unint64_t)(v19 + 1) >> 61)
              sub_100259694();
            v21 = (char *)v35 - (_BYTE *)__p;
            if (((char *)v35 - (_BYTE *)__p) >> 2 > v20)
              v20 = v21 >> 2;
            if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8)
              v22 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v22 = v20;
            if (v22)
            {
              v23 = (char *)sub_10025E6A0((uint64_t)&v35, v22);
              v18 = (double *)__p;
              v17 = v34;
            }
            else
            {
              v23 = 0;
            }
            v28 = (double *)&v23[8 * v19];
            *v28 = v16;
            v24 = v28 + 1;
            while (v17 != v18)
            {
              v29 = *((_QWORD *)v17-- - 1);
              *((_QWORD *)v28-- - 1) = v29;
            }
LABEL_37:
            __p = v28;
            v34 = v24;
            v35 = (double *)&v23[8 * v22];
            if (v18)
              operator delete(v18);
            goto LABEL_39;
          }
        }
        else
        {
          v16 = sub_10035A2BC(*((_DWORD *)v13 + 6));
          v17 = v34;
          if (v34 >= v35)
          {
            v18 = (double *)__p;
            v25 = ((char *)v34 - (_BYTE *)__p) >> 3;
            v26 = v25 + 1;
            if ((unint64_t)(v25 + 1) >> 61)
              sub_100259694();
            v27 = (char *)v35 - (_BYTE *)__p;
            if (((char *)v35 - (_BYTE *)__p) >> 2 > v26)
              v26 = v27 >> 2;
            if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8)
              v22 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v22 = v26;
            if (v22)
            {
              v23 = (char *)sub_10025E6A0((uint64_t)&v35, v22);
              v18 = (double *)__p;
              v17 = v34;
            }
            else
            {
              v23 = 0;
            }
            v28 = (double *)&v23[8 * v25];
            *v28 = v16;
            v24 = v28 + 1;
            while (v17 != v18)
            {
              v30 = *((_QWORD *)v17-- - 1);
              *((_QWORD *)v28-- - 1) = v30;
            }
            goto LABEL_37;
          }
        }
        *v17 = v16;
        v24 = v17 + 1;
LABEL_39:
        v34 = v24;
        v13 = (uint64_t *)*v13;
      }
      while (v13);
    }
    v31 = a3[1];
    if (v31 >= a3[2])
    {
      v32 = sub_10025E6D4(a3, (uint64_t)&__p);
    }
    else
    {
      sub_100395328((uint64_t)a3, (uint64_t)&__p);
      v32 = v31 + 24;
    }
    a3[1] = v32;
    if (__p)
    {
      v34 = (double *)__p;
      operator delete(__p);
    }
    sub_100345F50((uint64_t)&v37);
  }
}

void sub_100391E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  sub_10025E1F0((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_100391ECC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double *v5;
  double *v6;
  double *v7;
  double *v8;
  double **v9;
  double **v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  double *v16;
  int v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22[9];
  int v23;
  _BYTE v24[40];
  uint64_t *v25;
  uint64_t v26;
  std::string *v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  std::string::value_type __s[8];
  uint64_t v34;

  v5 = *(double **)(a2 + 16);
  if (v5)
  {
    v6 = *(double **)v5;
    if (*(_QWORD *)v5)
    {
      v7 = *(double **)v5;
      v8 = *(double **)(a2 + 16);
      do
      {
        if (v8[2] > v7[2])
          v8 = v7;
        v7 = *(double **)v7;
      }
      while (v7);
      do
      {
        if (v6[2] > v5[2])
          v5 = v6;
        v6 = *(double **)v6;
      }
      while (v6);
    }
    else
    {
      v8 = *(double **)(a2 + 16);
    }
  }
  else
  {
    v8 = 0;
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v9 = *(double ***)result;
  v10 = *(double ***)(result + 8);
  if (*(double ***)result != v10)
  {
    if (v8)
      v11 = v5 == 0;
    else
      v11 = 1;
    v12 = !v11;
    do
    {
      if (*(_QWORD *)(a2 + 24) != v9[1] - *v9)
      {
        sub_1018F8604();
        abort_report_np("%s:%d: assertion failure in %s", "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/MicroLocation/CLMicroLocationFingerprint.mm", 707, "convertDoubleVectorToFingerprint");
        __break(1u);
      }
      sub_1002BB93C((uint64_t)v24);
      *(_QWORD *)__s = 0;
      v34 = 0;
      v22[0] = 0;
      sub_1000B0C3C(v22);
      *(_QWORD *)__s = sub_1000B0D38((ssize_t)v22);
      v34 = v13;
      sub_1000B0D18((unsigned int *)v22);
      v32 |= 0x10u;
      if (v27 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::assign(v27, __s, 0x10uLL);
      if (v12)
      {
        v26 = *((_QWORD *)v8 + 2);
        v14 = (uint64_t *)*((_QWORD *)v5 + 2);
        v32 |= 0xCu;
        v25 = v14;
      }
      v15 = *(_QWORD **)(a2 + 16);
      if (v15)
      {
        v16 = *v9;
        do
        {
          if (v16 == v9[1])
            break;
          sub_10038F9A0((uint64_t)(v15 + 2), (uint64_t)v22);
          *(float *)&v17 = *v16;
          v23 |= 4u;
          v22[5] = v17;
          v18 = v30;
          v19 = v29;
          if (v29 >= v30)
          {
            if (v30 == v31)
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)&v28, v30 + 1);
              v18 = v30;
            }
            v30 = v18 + 1;
            sub_10039278C();
          }
          ++v29;
          sub_1002C262C(*(_QWORD *)(v28 + 8 * v19), (uint64_t)v22);
          sub_1002C20A0((wireless_diagnostics::google::protobuf::MessageLite *)v22);
          ++v16;
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
      v20 = a3[1];
      if (v20 >= a3[2])
      {
        v21 = sub_100395378(a3, (uint64_t)v24);
      }
      else
      {
        sub_100390288(a3[1], (uint64_t)v24);
        v21 = v20 + 192;
        a3[1] = v20 + 192;
      }
      a3[1] = v21;
      result = sub_1002C2B30(v24);
      v9 += 3;
    }
    while (v9 != v10);
  }
  return result;
}

void sub_1003921A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_1002C2B30((void ***)va);
  sub_100274134((void ***)va);
  _Unwind_Resume(a1);
}

void sub_10039220C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *i;
  int v7;
  uint64_t v8;
  uint64_t v9;
  std::string *v10;
  int v11;
  std::string *v12;
  char v13;
  int v14;
  std::string __p[2];

  sub_1002BB93C(a3);
  for (i = *(_QWORD **)(a1 + 16); i; i = (_QWORD *)*i)
  {
    sub_10038F9A0((uint64_t)(i + 2), (uint64_t)__p);
    v7 = *(_DWORD *)(a3 + 84);
    v8 = *(int *)(a3 + 80);
    if ((int)v8 >= v7)
    {
      if (v7 == *(_DWORD *)(a3 + 88))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a3 + 72), v7 + 1);
        v7 = *(_DWORD *)(a3 + 84);
      }
      *(_DWORD *)(a3 + 84) = v7 + 1;
      sub_10039278C();
    }
    v9 = *(_QWORD *)(a3 + 72);
    *(_DWORD *)(a3 + 80) = v8 + 1;
    sub_1002C262C(*(_QWORD *)(v9 + 8 * v8), (uint64_t)__p);
    sub_1002C20A0((wireless_diagnostics::google::protobuf::MessageLite *)__p);
  }
  if (*(_BYTE *)(a2 + 16))
  {
    *((_BYTE *)&__p[0].__r_.__value_.__s + 23) = 16;
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    __p[0].__r_.__value_.__s.__data_[16] = 0;
    *(_DWORD *)(a3 + 104) |= 0x20u;
    v10 = *(std::string **)(a3 + 64);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      operator new();
    std::string::operator=(v10, __p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  v11 = *(_DWORD *)(a3 + 104);
  *(_OWORD *)(a3 + 40) = *(_OWORD *)(a1 + 144);
  *((_BYTE *)&__p[0].__r_.__value_.__s + 23) = 16;
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = *(_OWORD *)(a1 + 40);
  __p[0].__r_.__value_.__s.__data_[16] = 0;
  *(_DWORD *)(a3 + 104) = v11 | 0x1C;
  v12 = *(std::string **)(a3 + 56);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::operator=(v12, __p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
  v13 = *(_BYTE *)(a1 + 56);
  v14 = *(_DWORD *)(a3 + 104);
  *(_BYTE *)(a3 + 96) = (v13 & 0x20) != 0;
  *(_DWORD *)(a3 + 104) = v14 | 0x180;
  *(_BYTE *)(a3 + 97) = (v13 & 0x40) != 0;
}

void sub_1003923E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  sub_1002C2B30(v14);
  _Unwind_Resume(a1);
}

void sub_100392428()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

_QWORD ***sub_100392460(_QWORD ***result, _QWORD *a2)
{
  ***result = 0xC6A4A7935BD1E995
            * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * *a2) ^ ((0xC6A4A7935BD1E995 * *a2) >> 47))) ^ ***result)
            + 3864292196u;
  return result;
}

_QWORD ***sub_1003924A4(_QWORD ***result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = 0;
  v3 = 0;
  do
    v3 ^= (v3 << 6) + (v3 >> 2) + 2654435769u + *(unsigned __int8 *)(a2 + v2++);
  while (v2 != 16);
  ***result = 0xC6A4A7935BD1E995
            * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * v3) ^ ((0xC6A4A7935BD1E995 * v3) >> 47))) ^ ***result)
            + 3864292196u;
  return result;
}

unint64_t sub_100392518(uint64_t ***a1, char *a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t result;
  char v5;

  v2 = **a1;
  v3 = *v2;
  result = sub_100115F1C((uint64_t)&v5, a2);
  *v2 = 0xC6A4A7935BD1E995
      * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * result) ^ ((0xC6A4A7935BD1E995 * result) >> 47))) ^ v3)
      + 3864292196u;
  return result;
}

uint64_t sub_10039257C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t sub_1003925A4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t sub_1003925CC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t sub_1003925F4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t sub_10039261C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t sub_100392644(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

void sub_10039266C(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100392698(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 24) = -1;
  sub_1003926CC(a1, a2);
  return a1;
}

uint64_t sub_1003926CC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = result;
  v4 = *(unsigned int *)(result + 24);
  if ((_DWORD)v4 != -1)
    result = ((uint64_t (*)(char *, uint64_t))*(&off_1021321D8 + v4))(&v7, result);
  *(_DWORD *)(v3 + 24) = -1;
  v5 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v5 != -1)
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_102132210[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 24) = v5;
  }
  return result;
}

void sub_100392758(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  *a2 = *a3;
}

__n128 sub_100392764(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result;

  result = *a3;
  *a2 = *a3;
  return result;
}

__n128 sub_100392770(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result;

  result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

void sub_10039278C()
{
  operator new();
}

void sub_1003927C8()
{
  operator delete();
}

char *sub_1003927EC(uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  char *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = (char *)*v10;
      if (*v10)
      {
        do
        {
          v12 = *((_QWORD *)v11 + 1);
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = *(char **)v11;
        }
        while (v11);
      }
    }
  }
  v11 = (char *)operator new(0x38uLL);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_10012E444(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *(_QWORD *)v11 = *v20;
LABEL_38:
    *v20 = v11;
    goto LABEL_39;
  }
  *(_QWORD *)v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*(_QWORD *)v11)
  {
    v21 = *(_QWORD *)(*(_QWORD *)v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_100392A04(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100392A1C()
{
  operator delete();
}

_QWORD *sub_100392A30()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_102132238;
  return result;
}

void sub_100392A54(uint64_t a1, _QWORD *a2)
{
  *a2 = off_102132238;
}

uint64_t sub_100392A6C@<X0>(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_10035A214(*a1, a2);
}

uint64_t sub_100392A74(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100392AB0()
{
}

void sub_100392AC0()
{
  operator delete();
}

_QWORD *sub_100392AD4()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_1021322C8;
  return result;
}

void sub_100392AF8(uint64_t a1, _QWORD *a2)
{
  *a2 = off_1021322C8;
}

_BYTE *sub_100392B10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10035A24C(a1, a2);
}

uint64_t sub_100392B18(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100392B54()
{
}

void sub_100392B64()
{
  operator delete();
}

_QWORD *sub_100392B78()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_102132358;
  return result;
}

void sub_100392B9C(uint64_t a1, _QWORD *a2)
{
  *a2 = off_102132358;
}

void *sub_100392BB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  void *result;

  if (*(char *)(a1 + 23) < 0)
    return sub_100115CE4((_BYTE *)a2, *(void **)a1, *(_QWORD *)(a1 + 8));
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  return result;
}

uint64_t sub_100392BE0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100392C1C()
{
}

uint64_t sub_100392C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_100270E34(a1, a2);
  sub_100270E34(v7 + 32, a3);
  sub_100270E34(a1 + 64, a4);
  return a1;
}

void sub_100392C78(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = (_QWORD *)v1[7];
  if (v4 == v2)
  {
    v5 = v2;
    v6 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v6 = 5;
    v5 = (_QWORD *)v1[7];
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  v7 = (_QWORD *)v1[3];
  if (v7 == v1)
  {
    v8 = 4;
  }
  else
  {
    if (!v7)
      goto LABEL_11;
    v8 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v8))(v1);
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_100392CF0()
{
  operator delete();
}

_QWORD *sub_100392D04(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_1021323E8;
  result[1] = v3;
  return result;
}

uint64_t sub_100392D38(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_1021323E8;
  a2[1] = v2;
  return result;
}

uint64_t sub_100392D54(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 8);
  v3 = *a2;
  *(_DWORD *)(v2 + 28) |= 1u;
  *(_QWORD *)(v2 + 8) = v3;
  return result;
}

uint64_t sub_100392D70(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100392DAC()
{
}

void sub_100392DBC()
{
  operator delete();
}

_QWORD *sub_100392DD0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102132478;
  result[1] = v3;
  return result;
}

uint64_t sub_100392E04(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102132478;
  a2[1] = v2;
  return result;
}

std::string *sub_100392E20(uint64_t a1, std::string::value_type *__s)
{
  uint64_t v2;
  std::string *v3;

  v2 = *(_QWORD *)(a1 + 8);
  *(_DWORD *)(v2 + 28) |= 2u;
  v3 = *(std::string **)(v2 + 16);
  if (v3 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  return std::string::assign(v3, __s, 0x10uLL);
}

uint64_t sub_100392E8C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100392EC8()
{
}

void sub_100392ED8()
{
  operator delete();
}

_QWORD *sub_100392EEC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102132508;
  result[1] = v3;
  return result;
}

uint64_t sub_100392F20(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102132508;
  a2[1] = v2;
  return result;
}

std::string *sub_100392F3C(uint64_t a1, std::string *__str)
{
  uint64_t v2;
  std::string *v3;

  v2 = *(_QWORD *)(a1 + 8);
  *(_DWORD *)(v2 + 28) |= 2u;
  v3 = *(std::string **)(v2 + 16);
  if (v3 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  return std::string::operator=(v3, __str);
}

uint64_t sub_100392FA4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100392FE0()
{
}

void sub_100392FEC(uint64_t a1, std::string *this, std::string *__str)
{
  uint64_t v3[2];

  if (*(_DWORD *)(a1 + 24) == 2)
  {
    std::string::operator=(this, __str);
  }
  else
  {
    v3[0] = a1;
    v3[1] = (uint64_t)__str;
    sub_100393030(v3);
  }
}

void sub_100393030(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  void *__p[2];
  uint64_t v5;

  v2 = *a1;
  v1 = a1[1];
  if (*(char *)(v1 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)v1, *(_QWORD *)(v1 + 8));
  }
  else
  {
    v3 = *(_OWORD *)v1;
    v5 = *(_QWORD *)(v1 + 16);
    *(_OWORD *)__p = v3;
  }
  sub_1003930B4(v2, (__int128 *)__p);
  if (SHIBYTE(v5) < 0)
    operator delete(__p[0]);
}

void sub_100393098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003930B4(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  char v7;

  v4 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, uint64_t))*(&off_1021321D8 + v4))(&v7, a1);
  *(_DWORD *)(a1 + 24) = -1;
  v5 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v5;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a1 + 24) = 2;
  return a1;
}

uint64_t sub_100393130(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  char v6;

  v4 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, uint64_t))*(&off_1021321D8 + v4))(&v6, a1);
  *(_QWORD *)a1 = *a2;
  *(_DWORD *)(a1 + 24) = 0;
  return a1;
}

uint64_t sub_100393190(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  char v6;

  v4 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, uint64_t))*(&off_1021321D8 + v4))(&v6, a1);
  *(_DWORD *)(a1 + 24) = -1;
  *(_OWORD *)a1 = *a2;
  *(_DWORD *)(a1 + 24) = 1;
  return a1;
}

void sub_1003931FC(uint64_t a1, std::string *this, std::string::value_type *__s)
{
  _QWORD v3[2];

  if (*(_DWORD *)(a1 + 24) == 2)
  {
    std::string::assign(this, __s);
  }
  else
  {
    v3[0] = a1;
    v3[1] = __s;
    sub_100393240((uint64_t)v3);
  }
}

void sub_100393240(uint64_t a1)
{
  uint64_t v1;
  void *__p[2];
  char v3;

  v1 = *(_QWORD *)a1;
  sub_1015A2E04(__p, *(char **)(a1 + 8));
  sub_1003930B4(v1, (__int128 *)__p);
  if (v3 < 0)
    operator delete(__p[0]);
}

void sub_100393288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1003932A4(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  uint64_t **v12;
  uint64_t *i;
  unint64_t v14;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD v25[2];
  char v26;

  v7 = sub_10038F5D0(a1, a2);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v9)
        v3 = v7 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v7;
    }
    v12 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v12)
    {
      for (i = *v12; i; i = (uint64_t *)*i)
      {
        v14 = i[1];
        if (v14 == v8)
        {
          if (*((_DWORD *)i + 6) == *(_DWORD *)(a2 + 8) && (sub_10036DECC((uint64_t)(i + 4), a2 + 16) & 1) != 0)
            return i;
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9)
              v14 %= v9;
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3)
            break;
        }
      }
    }
  }
  v15 = operator new(0x40uLL);
  v25[0] = v15;
  v25[1] = a1 + 16;
  *v15 = 0;
  v15[1] = v8;
  *((_OWORD *)v15 + 1) = *a3;
  sub_100392698((uint64_t)(v15 + 4), (uint64_t)(a3 + 1));
  v26 = 1;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_10012E444(a1, v21);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v25[0] = *v22;
    *v22 = v25[0];
  }
  else
  {
    *(_QWORD *)v25[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v25[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v25[0])
    {
      v23 = *(_QWORD *)(*(_QWORD *)v25[0] + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v23 >= v9)
          v23 %= v9;
      }
      else
      {
        v23 &= v9 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v25[0];
    }
  }
  i = (uint64_t *)v25[0];
  v25[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_100271AF0((uint64_t)v25, 0);
  return i;
}

void sub_10039351C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100271AF0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

float *sub_100393534(float *result, float *a2, uint64_t a3, uint64_t a4, char a5)
{
  float *v8;
  float *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  float *v15;
  float v16;
  float *v17;
  char v18;
  BOOL v19;
  float v20;
  float v21;
  float v22;
  float v23;
  int v24;
  float v25;
  float v26;
  float v27;
  int v28;
  float v29;
  float v30;
  int v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  int v41;
  float v42;
  int v43;
  float v44;
  float v45;
  int v46;
  float v47;
  float v48;
  float v49;
  float v50;
  int v51;
  float v52;
  float v53;
  float v54;
  int v55;
  float v56;
  float v57;
  float v58;
  float v59;
  float v60;
  float *v61;
  BOOL v63;
  uint64_t v64;
  float *v65;
  float v66;
  float v67;
  uint64_t v68;
  float *v69;
  float v70;
  float v71;
  float *v72;

  v8 = result;
LABEL_2:
  v9 = v8;
LABEL_3:
  v10 = 1 - a4;
  while (2)
  {
    v8 = v9;
    v11 = v10;
    v12 = (char *)a2 - (char *)v9;
    v13 = a2 - v9;
    switch(v13)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v20 = *(a2 - 1);
        v21 = *v9;
        if (v20 > *v9)
        {
          *v9 = v20;
          *(a2 - 1) = v21;
        }
        return result;
      case 3uLL:
        v22 = v9[1];
        v23 = *(a2 - 1);
        if (v22 <= v23)
          v24 = *((_DWORD *)a2 - 1);
        else
          v24 = *((_DWORD *)v9 + 1);
        if (v22 > v23)
          v22 = *(a2 - 1);
        *(a2 - 1) = v22;
        *((_DWORD *)v9 + 1) = v24;
        v25 = *(a2 - 1);
        if (v25 <= *v9)
          v26 = *v9;
        else
          v26 = *(a2 - 1);
        if (v25 > *v9)
          v25 = *v9;
        *(a2 - 1) = v25;
        v28 = *(_DWORD *)v9;
        v27 = v9[1];
        if (v26 <= v27)
        {
          v28 = *((_DWORD *)v9 + 1);
          v27 = v26;
        }
        *(_DWORD *)v9 = v28;
        v9[1] = v27;
        return result;
      case 4uLL:
        v30 = v9[1];
        v29 = v9[2];
        if (*v9 <= v29)
          v31 = *((_DWORD *)v9 + 2);
        else
          v31 = *(_DWORD *)v9;
        if (*v9 <= v29)
          v29 = *v9;
        v9[2] = v29;
        *(_DWORD *)v9 = v31;
        v32 = *(a2 - 1);
        if (v30 <= v32)
          v33 = *(a2 - 1);
        else
          v33 = v30;
        if (v30 <= v32)
          v32 = v30;
        *(a2 - 1) = v32;
        v34 = *v9;
        if (*v9 <= v33)
          v35 = v33;
        else
          v35 = *v9;
        if (*v9 > v33)
          v34 = v33;
        *v9 = v35;
        v9[1] = v34;
        v36 = v9[2];
        v37 = *(a2 - 1);
        if (v36 <= v37)
          v38 = *(a2 - 1);
        else
          v38 = v9[2];
        if (v36 > v37)
          v36 = *(a2 - 1);
        *(a2 - 1) = v36;
        v39 = v9[1];
        if (v39 <= v38)
          v40 = v38;
        else
          v40 = v9[1];
        if (v39 > v38)
          v39 = v38;
        v9[1] = v40;
        v9[2] = v39;
        return result;
      case 5uLL:
        v41 = *(_DWORD *)v9;
        v42 = v9[1];
        if (*v9 <= v42)
          v43 = *((_DWORD *)v9 + 1);
        else
          v43 = *(_DWORD *)v9;
        if (*v9 > v42)
          v41 = *((_DWORD *)v9 + 1);
        *(_DWORD *)v9 = v43;
        *((_DWORD *)v9 + 1) = v41;
        v44 = v9[3];
        v45 = *(a2 - 1);
        if (v44 <= v45)
          v46 = *((_DWORD *)a2 - 1);
        else
          v46 = *((_DWORD *)v9 + 3);
        if (v44 > v45)
          v44 = *(a2 - 1);
        *(a2 - 1) = v44;
        *((_DWORD *)v9 + 3) = v46;
        v47 = *(a2 - 1);
        v48 = v9[2];
        if (v47 <= v48)
          v49 = v9[2];
        else
          v49 = *(a2 - 1);
        if (v47 > v48)
          v47 = v9[2];
        *(a2 - 1) = v47;
        v51 = *((_DWORD *)v9 + 2);
        v50 = v9[3];
        v52 = v9[1];
        if (v49 <= v50)
        {
          v51 = *((_DWORD *)v9 + 3);
          v50 = v49;
        }
        *((_DWORD *)v9 + 2) = v51;
        v9[3] = v50;
        v53 = *(a2 - 1);
        if (v52 <= v53)
          v54 = *(a2 - 1);
        else
          v54 = v52;
        if (v52 <= v53)
          v53 = v52;
        *(a2 - 1) = v53;
        v55 = *(_DWORD *)v9;
        v57 = v9[2];
        v56 = v9[3];
        if (v56 <= *v9)
          v58 = *v9;
        else
          v58 = v9[3];
        if (v56 > *v9)
          v56 = *v9;
        if (v58 <= v57)
        {
          v55 = *((_DWORD *)v9 + 2);
          v57 = v58;
        }
        if (v56 <= v54)
          v59 = v54;
        else
          v59 = v56;
        if (v56 > v54)
          v56 = v54;
        if (v59 <= v57)
          v54 = v57;
        *(_DWORD *)v9 = v55;
        v9[1] = v54;
        if (v59 <= v57)
          v60 = v59;
        else
          v60 = v57;
        v9[2] = v60;
        v9[3] = v56;
        return result;
      default:
        if (v12 > 95)
        {
          if (v11 == 1)
          {
            if (v9 != a2)
              return sub_100393E20(v9, a2, a2, a3);
            return result;
          }
          v14 = v13 >> 1;
          v15 = &v9[v13 >> 1];
          if ((unint64_t)v12 < 0x201)
          {
            sub_1003939A4(&v9[v13 >> 1], v9, a2 - 1);
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          else
          {
            sub_1003939A4(v9, &v9[v13 >> 1], a2 - 1);
            sub_1003939A4(v9 + 1, v15 - 1, a2 - 2);
            sub_1003939A4(v9 + 2, &v9[v14 + 1], a2 - 3);
            sub_1003939A4(v15 - 1, v15, &v9[v14 + 1]);
            v16 = *v9;
            *v9 = *v15;
            *v15 = v16;
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          if (*(v9 - 1) <= *v9)
          {
            result = sub_100393A2C(v9, a2);
            v9 = result;
            goto LABEL_17;
          }
LABEL_12:
          v17 = sub_100393ADC(v9, a2);
          if ((v18 & 1) == 0)
            goto LABEL_15;
          v19 = sub_100393B90(v9, v17);
          v9 = v17 + 1;
          result = (float *)sub_100393B90(v17 + 1, a2);
          if (!(_DWORD)result)
          {
            v10 = v11 + 1;
            if (v19)
              continue;
LABEL_15:
            result = (float *)sub_100393534(v8, v17, a3, -v11, a5 & 1);
            v9 = v17 + 1;
LABEL_17:
            a5 = 0;
            a4 = -v11;
            goto LABEL_3;
          }
          a4 = -v11;
          a2 = v17;
          if (v19)
            return result;
          goto LABEL_2;
        }
        v61 = v9 + 1;
        v63 = v9 == a2 || v61 == a2;
        if ((a5 & 1) != 0)
        {
          if (!v63)
          {
            v64 = 0;
            v65 = v9;
            do
            {
              v67 = *v65;
              v66 = v65[1];
              v65 = v61;
              if (v66 > v67)
              {
                v68 = v64;
                while (1)
                {
                  *(float *)((char *)v9 + v68 + 4) = v67;
                  if (!v68)
                    break;
                  v67 = *(float *)((char *)v9 + v68 - 4);
                  v68 -= 4;
                  if (v66 <= v67)
                  {
                    v69 = (float *)((char *)v9 + v68 + 4);
                    goto LABEL_117;
                  }
                }
                v69 = v9;
LABEL_117:
                *v69 = v66;
              }
              v61 = v65 + 1;
              v64 += 4;
            }
            while (v65 + 1 != a2);
          }
        }
        else if (!v63)
        {
          do
          {
            v71 = *v8;
            v70 = v8[1];
            v8 = v61;
            if (v70 > v71)
            {
              v72 = v61;
              do
              {
                *v72 = v71;
                v71 = *(v72 - 2);
                --v72;
              }
              while (v70 > v71);
              *v72 = v70;
            }
            ++v61;
          }
          while (v8 + 1 != a2);
        }
        return result;
    }
  }
}

uint64_t sub_1003939A4(float *a1, float *a2, float *a3)
{
  float v3;
  float v4;
  float v5;
  float v6;

  v3 = *a2;
  v4 = *a1;
  v5 = *a3;
  if (*a2 > *a1)
  {
    if (v5 > v3)
    {
      *a1 = v5;
      *a3 = v4;
      return 1;
    }
    *a1 = v3;
    *a2 = v4;
    if (*a3 <= v4)
      return 1;
    *a2 = *a3;
    *a3 = v4;
    return 2;
  }
  if (v5 > v3)
  {
    *a2 = v5;
    *a3 = v3;
    v6 = *a1;
    if (*a2 <= *a1)
      return 1;
    *a1 = *a2;
    *a2 = v6;
    return 2;
  }
  return 0;
}

float *sub_100393A2C(float *a1, float *a2)
{
  float v2;
  float *v3;
  float v4;
  float *v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;

  v2 = *a1;
  if (*a1 <= *(a2 - 1))
  {
    v5 = a1 + 1;
    do
    {
      v3 = v5;
      if (v5 >= a2)
        break;
      ++v5;
    }
    while (v2 <= *v3);
  }
  else
  {
    v3 = a1;
    do
    {
      v4 = v3[1];
      ++v3;
    }
    while (v2 <= v4);
  }
  if (v3 < a2)
  {
    do
      v6 = *--a2;
    while (v2 > v6);
  }
  if (v3 < a2)
  {
    v7 = *v3;
    v8 = *a2;
    do
    {
      *v3 = v8;
      *a2 = v7;
      do
      {
        v9 = v3[1];
        ++v3;
        v7 = v9;
      }
      while (v2 <= v9);
      do
      {
        v10 = *--a2;
        v8 = v10;
      }
      while (v2 > v10);
    }
    while (v3 < a2);
  }
  if (v3 - 1 != a1)
    *a1 = *(v3 - 1);
  *(v3 - 1) = v2;
  return v3;
}

float *sub_100393ADC(float *a1, float *a2)
{
  uint64_t v2;
  float v3;
  float v4;
  float *v5;
  float *v6;
  float v7;
  float v8;
  float v9;
  float *v10;
  float *v11;
  float v12;
  float v13;

  v2 = 0;
  v3 = *a1;
  do
    v4 = a1[++v2];
  while (v4 > v3);
  v5 = &a1[v2];
  v6 = &a1[v2 - 1];
  if (v2 == 1)
  {
    do
    {
      if (v5 >= a2)
        break;
      v8 = *--a2;
    }
    while (v8 <= v3);
  }
  else
  {
    do
      v7 = *--a2;
    while (v7 <= v3);
  }
  if (v5 < a2)
  {
    v9 = *a2;
    v10 = &a1[v2];
    v11 = a2;
    do
    {
      *v10 = v9;
      *v11 = v4;
      do
      {
        v12 = v10[1];
        ++v10;
        v4 = v12;
      }
      while (v12 > v3);
      do
      {
        v13 = *--v11;
        v9 = v13;
      }
      while (v13 <= v3);
    }
    while (v10 < v11);
    v6 = v10 - 1;
  }
  if (v6 != a1)
    *a1 = *v6;
  *v6 = v3;
  return v6;
}

BOOL sub_100393B90(float *a1, float *a2)
{
  _BOOL8 v2;
  float v3;
  float v4;
  float *v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float *v12;
  int v13;
  uint64_t v14;
  float v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  float *v19;
  float v20;
  float v21;
  int v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  int v32;
  float v33;
  float v34;
  float v35;
  float v36;
  int v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  float v57;
  float v58;

  v2 = 1;
  switch(a2 - a1)
  {
    case 0:
    case 1:
      return v2;
    case 2:
      v3 = *(a2 - 1);
      v4 = *a1;
      if (v3 > *a1)
      {
        *a1 = v3;
        *(a2 - 1) = v4;
      }
      break;
    case 3:
      v20 = a1[1];
      v21 = *(a2 - 1);
      if (v20 <= v21)
        v22 = *((_DWORD *)a2 - 1);
      else
        v22 = *((_DWORD *)a1 + 1);
      if (v20 > v21)
        v20 = *(a2 - 1);
      *(a2 - 1) = v20;
      *((_DWORD *)a1 + 1) = v22;
      v23 = *(a2 - 1);
      if (v23 <= *a1)
        v24 = *a1;
      else
        v24 = *(a2 - 1);
      if (v23 > *a1)
        v23 = *a1;
      *(a2 - 1) = v23;
      v26 = *a1;
      v25 = a1[1];
      if (v24 <= v25)
      {
        v26 = a1[1];
        v25 = v24;
      }
      *a1 = v26;
      a1[1] = v25;
      break;
    case 4:
      v48 = a1[1];
      v47 = a1[2];
      if (*a1 <= v47)
        v49 = a1[2];
      else
        v49 = *a1;
      if (*a1 <= v47)
        v47 = *a1;
      a1[2] = v47;
      *a1 = v49;
      v50 = *(a2 - 1);
      if (v48 <= v50)
        v51 = *(a2 - 1);
      else
        v51 = v48;
      if (v48 <= v50)
        v50 = v48;
      *(a2 - 1) = v50;
      v52 = *a1;
      if (*a1 <= v51)
        v53 = v51;
      else
        v53 = *a1;
      if (*a1 > v51)
        v52 = v51;
      *a1 = v53;
      a1[1] = v52;
      v54 = a1[2];
      v55 = *(a2 - 1);
      if (v54 <= v55)
        v56 = *(a2 - 1);
      else
        v56 = a1[2];
      if (v54 > v55)
        v54 = *(a2 - 1);
      *(a2 - 1) = v54;
      v57 = a1[1];
      if (v57 <= v56)
        v58 = v56;
      else
        v58 = a1[1];
      if (v57 > v56)
        v57 = v56;
      a1[1] = v58;
      a1[2] = v57;
      break;
    case 5:
      v27 = *a1;
      v28 = a1[1];
      if (*a1 <= v28)
        v29 = a1[1];
      else
        v29 = *a1;
      if (*a1 > v28)
        v27 = a1[1];
      *a1 = v29;
      a1[1] = v27;
      v30 = a1[3];
      v31 = *(a2 - 1);
      if (v30 <= v31)
        v32 = *((_DWORD *)a2 - 1);
      else
        v32 = *((_DWORD *)a1 + 3);
      if (v30 > v31)
        v30 = *(a2 - 1);
      *(a2 - 1) = v30;
      *((_DWORD *)a1 + 3) = v32;
      v33 = *(a2 - 1);
      v34 = a1[2];
      if (v33 <= v34)
        v35 = a1[2];
      else
        v35 = *(a2 - 1);
      if (v33 > v34)
        v33 = a1[2];
      *(a2 - 1) = v33;
      v37 = *((_DWORD *)a1 + 2);
      v36 = a1[3];
      v38 = a1[1];
      if (v35 <= v36)
      {
        v37 = *((_DWORD *)a1 + 3);
        v36 = v35;
      }
      *((_DWORD *)a1 + 2) = v37;
      a1[3] = v36;
      v39 = *(a2 - 1);
      if (v38 <= v39)
        v40 = *(a2 - 1);
      else
        v40 = v38;
      if (v38 <= v39)
        v39 = v38;
      *(a2 - 1) = v39;
      v41 = *a1;
      v43 = a1[2];
      v42 = a1[3];
      if (v42 <= *a1)
        v44 = *a1;
      else
        v44 = a1[3];
      if (v42 > *a1)
        v42 = *a1;
      if (v44 <= v43)
      {
        v41 = a1[2];
        v43 = v44;
      }
      if (v42 <= v40)
        v45 = v40;
      else
        v45 = v42;
      if (v42 > v40)
        v42 = v40;
      if (v45 <= v43)
        v40 = v43;
      *a1 = v41;
      a1[1] = v40;
      if (v45 <= v43)
        v46 = v45;
      else
        v46 = v43;
      a1[2] = v46;
      a1[3] = v42;
      break;
    default:
      v5 = a1 + 2;
      v6 = a1[2];
      v8 = *a1;
      v7 = a1[1];
      if (v7 <= v6)
        v9 = a1[2];
      else
        v9 = a1[1];
      if (v7 <= v6)
        v6 = a1[1];
      if (v6 <= v8)
        v10 = *a1;
      else
        v10 = v6;
      if (v6 > v8)
        v6 = *a1;
      *v5 = v6;
      if (v10 <= v9)
        v11 = v9;
      else
        v11 = v8;
      if (v10 > v9)
        v10 = v9;
      *a1 = v11;
      a1[1] = v10;
      v12 = a1 + 3;
      if (a1 + 3 == a2)
      {
LABEL_29:
        v2 = 1;
      }
      else
      {
        v13 = 0;
        v14 = 12;
        while (1)
        {
          v15 = *v12;
          v16 = *v5;
          if (*v12 > *v5)
          {
            v17 = v14;
            while (1)
            {
              *(float *)((char *)a1 + v17) = v16;
              v18 = v17 - 4;
              if (v17 == 4)
                break;
              v16 = *(float *)((char *)a1 + v17 - 8);
              v17 -= 4;
              if (v15 <= v16)
              {
                v19 = (float *)((char *)a1 + v18);
                goto LABEL_27;
              }
            }
            v19 = a1;
LABEL_27:
            *v19 = v15;
            if (++v13 == 8)
              break;
          }
          v5 = v12;
          v14 += 4;
          if (++v12 == a2)
            goto LABEL_29;
        }
        v2 = v12 + 1 == a2;
      }
      break;
  }
  return v2;
}

float *sub_100393E20(float *a1, float *a2, float *a3, uint64_t a4)
{
  float *v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  float *v12;
  float *v13;
  float *v14;
  float v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  float *v19;
  float *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  float *v25;
  float v26;

  if (a1 != a2)
  {
    v6 = a2;
    v8 = (char *)a2 - (char *)a1;
    v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 5)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[v10];
      do
      {
        sub_100393FF0((uint64_t)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    v13 = v6;
    if (v6 != a3)
    {
      v14 = v6;
      do
      {
        v15 = *v14;
        if (*v14 > *a1)
        {
          *v14 = *a1;
          *a1 = v15;
          sub_100393FF0((uint64_t)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      v13 = a3;
    }
    if (v8 >= 5)
    {
      v16 = (unint64_t)v8 >> 2;
      do
      {
        v17 = 0;
        v18 = *a1;
        v19 = a1;
        do
        {
          v20 = v19;
          v19 += v17 + 1;
          v21 = 2 * v17;
          v17 = (2 * v17) | 1;
          v22 = v21 + 2;
          if (v22 < v16 && *v19 > v19[1])
          {
            ++v19;
            v17 = v22;
          }
          *v20 = *v19;
        }
        while (v17 <= (uint64_t)((unint64_t)(v16 - 2) >> 1));
        if (v19 != --v6)
        {
          *v19 = *v6;
          *v6 = v18;
          v23 = (char *)v19 - (char *)a1 + 4;
          if (v23 < 5)
            continue;
          v24 = (((unint64_t)v23 >> 2) - 2) >> 1;
          v25 = &a1[v24];
          v26 = *v25;
          v18 = *v19;
          if (*v25 <= *v19)
            continue;
          do
          {
            *v19 = v26;
            v19 = v25;
            if (!v24)
              break;
            v24 = (v24 - 1) >> 1;
            v25 = &a1[v24];
            v26 = *v25;
          }
          while (*v25 > v18);
        }
        *v19 = v18;
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_100393FF0(uint64_t result, uint64_t a2, uint64_t a3, float *a4)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  float *v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >= 2)
  {
    v4 = (uint64_t)a4 - result;
    v5 = (unint64_t)(a3 - 2) >> 1;
    if (v5 >= ((uint64_t)a4 - result) >> 2)
    {
      v6 = v4 >> 1;
      v7 = (v4 >> 1) + 1;
      v8 = (float *)(result + 4 * v7);
      v9 = v6 + 2;
      if (v9 < a3 && *v8 > v8[1])
      {
        ++v8;
        v7 = v9;
      }
      v10 = *v8;
      v11 = *a4;
      if (*v8 <= *a4)
      {
        do
        {
          *a4 = v10;
          a4 = v8;
          if (v5 < v7)
            break;
          v12 = 2 * v7;
          v7 = (2 * v7) | 1;
          v8 = (float *)(result + 4 * v7);
          v13 = v12 + 2;
          if (v13 < a3 && *v8 > v8[1])
          {
            ++v8;
            v7 = v13;
          }
          v10 = *v8;
        }
        while (*v8 <= v11);
        *a4 = v11;
      }
    }
  }
  return result;
}

char *sub_1003940AC(uint64_t a1, unsigned int *a2, _DWORD *a3, _OWORD *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  char *v12;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v8 = *a2;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v9 <= v8)
        v4 = v8 % v9;
    }
    else
    {
      v4 = ((_DWORD)v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      v12 = (char *)*v11;
      if (*v11)
      {
        do
        {
          v13 = *((_QWORD *)v12 + 1);
          if (v13 == v8)
          {
            if (*((_DWORD *)v12 + 4) == (_DWORD)v8)
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4)
              break;
          }
          v12 = *(char **)v12;
        }
        while (v12);
      }
    }
  }
  v12 = (char *)operator new(0x28uLL);
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = *a3;
  *(_OWORD *)(v12 + 24) = *a4;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    v16 = 1;
    if (v9 >= 3)
      v16 = (v9 & (v9 - 1)) != 0;
    v17 = v16 | (2 * v9);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_10012E444(a1, v19);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = ((_DWORD)v9 - 1) & v8;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *(_QWORD *)v12 = *v21;
LABEL_38:
    *v21 = v12;
    goto LABEL_39;
  }
  *(_QWORD *)v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v20 + 8 * v4) = a1 + 16;
  if (*(_QWORD *)v12)
  {
    v22 = *(_QWORD *)(*(_QWORD *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9)
        v22 %= v9;
    }
    else
    {
      v22 &= v9 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_1003942C8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1003942DC(_QWORD *a1, _OWORD *a2)
{
  _QWORD *v3;
  _QWORD *v5[3];

  sub_100394344((uint64_t)a1, a2, (uint64_t)v5);
  v3 = sub_1003943C8(a1, v5[0]);
  v5[0] = 0;
  sub_100271AF0((uint64_t)v5, 0);
  return v3;
}

void sub_10039432C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100271AF0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100394344@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;

  v5 = a1 + 16;
  v6 = operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *v6 = 0;
  v6[1] = 0;
  *((_OWORD *)v6 + 1) = *a2;
  v7 = sub_100392698((uint64_t)(v6 + 4), (uint64_t)(a2 + 1));
  *(_BYTE *)(a3 + 16) = 1;
  result = sub_10038F5D0(v7, (uint64_t)(v6 + 2));
  v6[1] = result;
  return result;
}

void sub_1003943B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100271AF0(v1, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_1003943C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t)(a2 + 2);
  v5 = sub_10038F5D0((uint64_t)a1, (uint64_t)(a2 + 2));
  a2[1] = v5;
  v6 = sub_100394424((uint64_t)a1, v5, v4);
  sub_10012923C(a1, a2, v6);
  return a2;
}

_QWORD *sub_100394424(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  float v7;
  float v8;
  _BOOL8 v9;
  unint64_t v10;
  unint64_t v11;
  size_t v12;
  uint8x8_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  int v21;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 1;
    if (v6 >= 3)
      v9 = (v6 & (v6 - 1)) != 0;
    v10 = v9 | (2 * v6);
    v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11)
      v12 = v11;
    else
      v12 = v10;
    sub_1003945A0(a1, v12);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v13 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v13.i16[0] = vaddlv_u8(v13);
  v14 = v13.u32[0];
  if (v13.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v15);
  if (v16)
  {
    v17 = (_QWORD *)*v16;
    if (*v16)
    {
      v18 = 0;
      do
      {
        v19 = v17[1];
        if (v14 > 1)
        {
          v20 = v17[1];
          if (v19 >= v6)
            v20 = v19 % v6;
        }
        else
        {
          v20 = v19 & (v6 - 1);
        }
        if (v20 != v15)
          break;
        v21 = v19 == a2 && *((_DWORD *)v17 + 6) == *(_DWORD *)(a3 + 8) ? sub_10036DECC((uint64_t)(v17 + 4), a3 + 16) : 0;
        if ((v18 & (v21 ^ 1) & 1) != 0)
          break;
        v18 |= v21;
        v16 = (_QWORD *)*v16;
        v17 = (_QWORD *)*v16;
      }
      while (*v16);
    }
  }
  return v16;
}

void sub_1003945A0(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_10039467C(a1, prime);
  }
}

void sub_10039467C(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  void *v11;
  uint64_t i;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int v16;
  _QWORD *v17;

  if (a2)
  {
    if (a2 >> 61)
      sub_10025955C();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(uint64_t **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = *v7; *v7; i = *v7)
      {
        v13 = *(_QWORD *)(i + 8);
        if (v10 > 1)
        {
          if (v13 >= a2)
            v13 %= a2;
        }
        else
        {
          v13 &= a2 - 1;
        }
        if (v13 == v8)
        {
          v7 = (uint64_t *)i;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v13))
        {
          v14 = *(_QWORD **)i;
          if (*(_QWORD *)i)
          {
            v15 = (_QWORD *)i;
            while (*(_DWORD *)(i + 24) == *((_DWORD *)v14 + 6))
            {
              v16 = sub_10036DECC(i + 32, (uint64_t)(v14 + 4));
              v17 = (_QWORD *)*v15;
              if (!v16)
              {
                v14 = (_QWORD *)*v15;
                break;
              }
              v14 = (_QWORD *)*v17;
              v15 = (_QWORD *)*v15;
              if (!*v17)
                goto LABEL_33;
            }
            v17 = v15;
          }
          else
          {
            v17 = (_QWORD *)i;
          }
LABEL_33:
          *v7 = (uint64_t)v14;
          *v17 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v13);
          **(_QWORD **)(*(_QWORD *)a1 + 8 * v13) = i;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v13) = v7;
          v7 = (uint64_t *)i;
          v8 = v13;
        }
      }
    }
  }
  else
  {
    v11 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v11)
      operator delete(v11);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

uint64_t *sub_100394840(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;

  v3 = sub_1003948B0(a1, a2);
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    do
      v5 = (uint64_t *)*v5;
    while (v5 && *((_DWORD *)v5 + 6) == *(_DWORD *)(a2 + 8) && (sub_10036DECC((uint64_t)(v5 + 4), a2 + 16) & 1) != 0);
  }
  return v4;
}

uint64_t *sub_1003948B0(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t **v10;
  uint64_t *i;
  unint64_t v12;

  v4 = sub_10038F5D0((uint64_t)a1, a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(uint64_t ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  for (i = *v10; i; i = (uint64_t *)*i)
  {
    v12 = i[1];
    if (v12 == v6)
    {
      if (*((_DWORD *)i + 6) == *(_DWORD *)(a2 + 8) && (sub_10036DECC((uint64_t)(i + 4), a2 + 16) & 1) != 0)
        return i;
    }
    else
    {
      if (v8 > 1)
      {
        if (v12 >= *(_QWORD *)&v5)
          v12 %= *(_QWORD *)&v5;
      }
      else
      {
        v12 &= *(_QWORD *)&v5 - 1;
      }
      if (v12 != v9)
        return 0;
    }
  }
  return i;
}

void sub_1003949B8(_QWORD *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t i;
  _QWORD *v8;
  BOOL v9;
  _QWORD *v10;
  BOOL v11;

  v4 = a2;
  v6 = a1[1];
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      *(_QWORD *)(*a1 + 8 * i) = 0;
    v8 = (_QWORD *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8)
      v9 = a2 == a3;
    else
      v9 = 1;
    if (v9)
    {
      v10 = v8;
    }
    else
    {
      do
      {
        *((_OWORD *)v8 + 1) = *((_OWORD *)v4 + 1);
        sub_100394AB8((uint64_t)(v8 + 4), (uint64_t)(v4 + 4));
        v10 = (_QWORD *)*v8;
        sub_1003943C8(a1, v8);
        v4 = (uint64_t *)*v4;
        if (v10)
          v11 = v4 == a3;
        else
          v11 = 1;
        v8 = v10;
      }
      while (!v11);
    }
    sub_1002713C8((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_100394B90(a1, (_OWORD *)v4 + 1);
    v4 = (uint64_t *)*v4;
  }
}

void sub_100394A88(void *a1)
{
  uint64_t v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  sub_1002713C8(v1, v2);
  __cxa_rethrow();
}

void sub_100394AA4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100394AB8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = result;
  v3 = *(unsigned int *)(result + 24);
  v4 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
  {
    if ((_DWORD)v4 == -1)
      return result;
  }
  else if ((_DWORD)v4 == -1)
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))*(&off_1021321D8 + v3))(&v6, result, a2);
    *(_DWORD *)(v2 + 24) = -1;
    return result;
  }
  v5 = result;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))*(&off_102132588 + v4))(&v5, result, a2);
}

uint64_t sub_100394B44(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t result;

  result = *a1;
  if (*(_DWORD *)(result + 24))
    return sub_100393130(result, a3);
  *a2 = *a3;
  return result;
}

uint64_t sub_100394B64(uint64_t *a1, _OWORD *a2, _OWORD *a3)
{
  uint64_t result;

  result = *a1;
  if (*(_DWORD *)(result + 24) != 1)
    return sub_100393190(result, a3);
  *a2 = *a3;
  return result;
}

void sub_100394B88(uint64_t *a1, std::string *a2, std::string *a3)
{
  sub_100392FEC(*a1, a2, a3);
}

_QWORD *sub_100394B90(_QWORD *a1, _OWORD *a2)
{
  _QWORD *v3;
  _QWORD *v5[3];

  sub_100394BF8((uint64_t)a1, a2, (uint64_t)v5);
  v3 = sub_1003943C8(a1, v5[0]);
  v5[0] = 0;
  sub_100271AF0((uint64_t)v5, 0);
  return v3;
}

void sub_100394BE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100271AF0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100394BF8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;

  v5 = a1 + 16;
  v6 = operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  *v6 = 0;
  v6[1] = 0;
  *((_OWORD *)v6 + 1) = *a2;
  v7 = sub_1002719DC((uint64_t)(v6 + 4), (uint64_t)(a2 + 1));
  *(_BYTE *)(a3 + 16) = 1;
  result = sub_10038F5D0(v7, (uint64_t)(v6 + 2));
  v6[1] = result;
  return result;
}

void sub_100394C64(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100271AF0(v1, 0);
  _Unwind_Resume(a1);
}

void sub_100394C7C(_QWORD *a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t i;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t *v12;

  v6 = a1[1];
  if (!v6)
    goto LABEL_9;
  for (i = 0; i != v6; *(_QWORD *)(*a1 + 8 * i++) = 0)
    ;
  v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != (unsigned int *)a3)
    {
      v9 = a2[4];
      *((_DWORD *)v8 + 4) = v9;
      v10 = (uint64_t *)*v8;
      v8[1] = v9;
      v11 = (_QWORD *)sub_100394D84((uint64_t)a1, v9, (_DWORD *)v8 + 4);
      sub_10012923C(a1, v8, v11);
      a2 = *(unsigned int **)a2;
      v8 = v10;
      if (!v10)
        goto LABEL_9;
    }
    do
    {
      v12 = (uint64_t *)*v8;
      operator delete(v8);
      v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != (unsigned int *)a3)
    {
      sub_100395124(a1, a2 + 4);
      a2 = *(unsigned int **)a2;
    }
  }
}

void sub_100394D50(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_100394D70(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_100394D84(uint64_t a1, unint64_t a2, _DWORD *a3)
{
  unint64_t v6;
  float v7;
  float v8;
  uint64_t v9;
  _BOOL8 v10;
  size_t v11;
  unint64_t v12;
  size_t v13;
  uint8x8_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;
  int v22;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 2 * v6;
    v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    v11 = v10 | v9;
    v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12)
      v13 = v12;
    else
      v13 = v11;
    sub_100394ED8(a1, v13);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD *)(*(_QWORD *)a1 + 8 * v15);
  if (!v16)
    return 0;
  v17 = 0;
  do
  {
    result = v16;
    v16 = *(_QWORD *)v16;
    if (!v16)
      break;
    v19 = *(_QWORD *)(v16 + 8);
    if (v14.u32[0] > 1uLL)
    {
      v20 = *(_QWORD *)(v16 + 8);
      if (v19 >= v6)
        v20 = v19 % v6;
    }
    else
    {
      v20 = v19 & (v6 - 1);
    }
    if (v20 != v15)
      break;
    v21 = v19 == a2 && *(_DWORD *)(v16 + 16) == *a3;
    v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void sub_100394ED8(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_100394FB4(a1, prime);
  }
}

void sub_100394FB4(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t **v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  uint64_t *i;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;

  if (a2)
  {
    if (a2 >> 61)
      sub_10025955C();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(uint64_t ***)(a1 + 16);
    if (v7)
    {
      v8 = (unint64_t)v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = *v7; *v7; i = *v7)
      {
        v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2)
            v12 %= a2;
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          v7 = (uint64_t **)i;
        }
        else
        {
          v13 = i;
          if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
          {
            do
            {
              v14 = v13;
              v13 = (uint64_t *)*v13;
            }
            while (v13 && *((_DWORD *)i + 4) == *((_DWORD *)v13 + 4));
            *v7 = v13;
            *v14 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
            v7 = (uint64_t **)i;
            v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

_DWORD *sub_100395124(_QWORD *a1, unsigned int *a2)
{
  _DWORD *v4;
  unint64_t v5;
  _QWORD *v6;

  v4 = operator new(0x18uLL);
  v5 = *a2;
  v4[4] = v5;
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = v5;
  v6 = (_QWORD *)sub_100394D84((uint64_t)a1, v5, v4 + 4);
  sub_10012923C(a1, v4, v6);
  return v4;
}

void sub_100395184(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100395198(_QWORD *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t i;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t *v12;

  v6 = a1[1];
  if (!v6)
    goto LABEL_9;
  for (i = 0; i != v6; *(_QWORD *)(*a1 + 8 * i++) = 0)
    ;
  v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      v9 = *((unsigned int *)a2 + 4);
      *((_DWORD *)v8 + 4) = v9;
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(a2 + 3);
      v10 = (uint64_t *)*v8;
      v8[1] = v9;
      v11 = (_QWORD *)sub_100394D84((uint64_t)a1, v9, (_DWORD *)v8 + 4);
      sub_10012923C(a1, v8, v11);
      a2 = (uint64_t *)*a2;
      v8 = v10;
      if (!v10)
        goto LABEL_9;
    }
    do
    {
      v12 = (uint64_t *)*v8;
      operator delete(v8);
      v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      sub_1003952A8(a1, (uint64_t)(a2 + 2));
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_100395274(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_100395294(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

unsigned int *sub_1003952A8(_QWORD *a1, uint64_t a2)
{
  unsigned int *v4;
  unint64_t v5;
  _QWORD *v6;

  v4 = (unsigned int *)operator new(0x28uLL);
  *((_OWORD *)v4 + 1) = *(_OWORD *)a2;
  *((_QWORD *)v4 + 4) = *(_QWORD *)(a2 + 16);
  v5 = v4[4];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = v5;
  v6 = (_QWORD *)sub_100394D84((uint64_t)a1, v5, v4 + 4);
  sub_10012923C(a1, v4, v6);
  return v4;
}

void sub_100395314(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_100395328(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *result;

  v3 = *(_QWORD **)(a1 + 8);
  *v3 = 0;
  v3[1] = 0;
  v3[2] = 0;
  result = sub_10025EA00(v3, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  *(_QWORD *)(a1 + 8) = v3 + 3;
  return result;
}

void sub_100395370(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100395378(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 6);
  v5 = v4 + 1;
  if (v4 + 1 > 0x155555555555555)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 6);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xAAAAAAAAAAAAAALL)
    v9 = 0x155555555555555;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_1002746CC(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[192 * v4];
  v16 = &v10[192 * v9];
  sub_100390288((uint64_t)v14, a2);
  v15 = v14 + 192;
  sub_100274658(a1, &v13);
  v11 = a1[1];
  sub_1002748CC(&v13);
  return v11;
}

void sub_100395468(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002748CC((void **)va);
  _Unwind_Resume(a1);
}

void sub_10039547C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_signpost_emit_with_name_impl(a1, v9, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &a9, 0x26u);
}

void sub_10039549C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x26u);
}

void sub_1003954B0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_impl(a1, v9, OS_LOG_TYPE_INFO, a4, &a9, 0x26u);
}

void sub_1003954C4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A0950);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A0950))
  {
    sub_100398304((std::string *)&xmmword_1022A0938);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A0938, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A0950);
  }
  if (byte_1022A094F < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A0938, *((unint64_t *)&xmmword_1022A0938 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A0938;
    *(_QWORD *)(a1 + 16) = unk_1022A0948;
  }
}

void sub_100395574(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A0950);
  _Unwind_Resume(a1);
}

void sub_10039558C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A0970);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A0970))
  {
    sub_1003988D4((std::string *)&xmmword_1022A0958);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A0958, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A0970);
  }
  if (byte_1022A096F < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A0958, *((unint64_t *)&xmmword_1022A0958 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A0958;
    *(_QWORD *)(a1 + 16) = unk_1022A0968;
  }
}

void sub_10039563C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A0970);
  _Unwind_Resume(a1);
}

void sub_100395654(uint64_t a1)
{
  BOOL v2;
  BOOL v3;
  NSObject *v4;
  uint8_t *v5;
  double v6;
  NSObject *v7;
  uint8_t *v8;
  NSObject *v9;
  double v10;
  uint8_t *v11;
  __int128 v12;
  uint8_t buf[4];
  const char *v14;

  v2 = sub_1000CC4F4(*(_QWORD *)a1);
  *(_BYTE *)(a1 + 8) = v2;
  if (v2)
  {
    sub_100634364(*(_QWORD *)a1, "MicroLocationAssociatedState", (const char **)&off_1021325C0, 0, 0);
    v3 = sub_100635B3C(*(_QWORD *)a1, "MicroLocationAssociatedState");
    *(_BYTE *)(a1 + 8) = v3;
    if (v3)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021325A0);
      v4 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136380675;
        v14 = "MicroLocationAssociatedState";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{private}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021325A0);
        LODWORD(v12) = 136380675;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationAssociatedState";
        v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Sucessfully created table if necessary: %{private}s", &v12, 12, v12);
LABEL_19:
        v8 = v5;
        sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationAssociatedStateTable::initTable()", "%s\n", v6);
LABEL_29:
        if (v8 != buf)
          free(v8);
      }
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021325A0);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        v14 = "MicroLocationAssociatedState";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021325A0);
        LODWORD(v12) = 136446210;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationAssociatedState";
        v10 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Failed to create table: %{public}s", &v12, 12);
        v8 = v11;
        sub_100512490("Generic", 1, 0, 0, "void CLMicroLocationAssociatedStateTable::initTable()", "%s\n", v10);
        goto LABEL_29;
      }
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021325A0);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021325A0);
      LOWORD(v12) = 0;
      v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Database is not connected so we can't intialize our table", &v12, 2, v12);
      goto LABEL_19;
    }
  }
}

uint64_t sub_100395A58(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  sub_100395654(a1);
  return a1;
}

char *sub_100395A84(char *__dst, __int128 *a2, _OWORD *a3, _QWORD *a4, char a5, _QWORD *a6, int a7, int a8)
{
  __int128 v15;

  if (*((char *)a2 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v15 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v15;
  }
  *(_OWORD *)(__dst + 24) = *a3;
  *((_QWORD *)__dst + 5) = *a4;
  __dst[48] = a5;
  *((_QWORD *)__dst + 7) = *a6;
  *((_DWORD *)__dst + 16) = a7;
  *((_DWORD *)__dst + 17) = a8;
  return __dst;
}

void sub_100395B24(uint64_t a1, uint64_t a2, unsigned int a3)
{
  void **v6;
  std::string::size_type v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  std::string::size_type size;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  char *v37;
  std::string v38;
  void *__p[2];
  unsigned __int8 v40;
  std::string v41;
  std::string v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  void *v50[2];
  int64_t v51;
  std::string v52;
  std::string v53;
  std::string v54;

  strcpy((char *)&v41, "SELECT * FROM (SELECT ");
  *((_BYTE *)&v41.__r_.__value_.__s + 23) = 22;
  sub_1003954C4((uint64_t)__p);
  if ((v40 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v40 & 0x80u) == 0)
    v7 = v40;
  else
    v7 = (std::string::size_type)__p[1];
  v8 = std::string::append(&v41, (const std::string::value_type *)v6, v7);
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  v10 = std::string::append(&v42, " FROM ");
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v43.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  v12 = std::string::append(&v43, "MicroLocationAssociatedState");
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v44.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  v14 = std::string::append(&v44, " ");
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  v16 = *(char *)(a2 + 23);
  if (v16 >= 0)
    v17 = (const std::string::value_type *)a2;
  else
    v17 = *(const std::string::value_type **)a2;
  if (v16 >= 0)
    v18 = *(unsigned __int8 *)(a2 + 23);
  else
    v18 = *(_QWORD *)(a2 + 8);
  v19 = std::string::append(&v45, v17, v18);
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  v21 = std::string::append(&v46, " ");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v47, " ORDER BY ");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  v25 = std::string::append(&v48, "Timestamp");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v53.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v53, " DESC LIMIT ");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v54.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v38, a3);
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v29 = &v38;
  else
    v29 = (std::string *)v38.__r_.__value_.__r.__words[0];
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
  else
    size = v38.__r_.__value_.__l.__size_;
  v31 = std::string::append(&v54, (const std::string::value_type *)v29, size);
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  v33 = std::string::append(&v49, ") ORDER BY ");
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v52, "Timestamp");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  v51 = v35->__r_.__value_.__r.__words[2];
  *(_OWORD *)v50 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v52.__r_.__value_.__l.__data_);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v49.__r_.__value_.__l.__data_);
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v54.__r_.__value_.__l.__data_);
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v53.__r_.__value_.__l.__data_);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v47.__r_.__value_.__l.__data_);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v45.__r_.__value_.__l.__data_);
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v44.__r_.__value_.__l.__data_);
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v43.__r_.__value_.__l.__data_);
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v42.__r_.__value_.__l.__data_);
  if ((char)v40 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v41.__r_.__value_.__l.__data_);
  if (v51 >= 0)
    v37 = (char *)v50;
  else
    v37 = (char *)v50[0];
  sub_1000CDA68(a1, v37);
}

void sub_10039609C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void **buf)
{
  uint64_t v60;

  buf = &a49;
  sub_100313844(&buf);
  if (v60)
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
  if (a58 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_100396468(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned int a6@<W5>, _QWORD *a7@<X8>)
{
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  void **v34;
  std::string::size_type v35;
  std::string *v36;
  __int128 v37;
  uint64_t v38;
  NSObject *v39;
  const char *v40;
  char *v41;
  void *v42[2];
  char v43;
  void *__p[2];
  unsigned __int8 v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  std::string v52;
  std::string v53;
  std::string v54;
  __int128 buf;
  std::string::size_type v56;
  _QWORD v57[2];

  v57[0] = a4;
  v57[1] = a5;
  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v46.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v46, "WHERE ");
    v12 = std::string::append(&v46, "Timestamp");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v47, " > ");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = *(char *)(a2 + 23);
    if (v16 >= 0)
      v17 = (const std::string::value_type *)a2;
    else
      v17 = *(const std::string::value_type **)a2;
    if (v16 >= 0)
      v18 = *(unsigned __int8 *)(a2 + 23);
    else
      v18 = *(_QWORD *)(a2 + 8);
    v19 = std::string::append(&v48, v17, v18);
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    v21 = std::string::append(&v49, " AND ");
    v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    v23 = std::string::append(&v50, "Timestamp");
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v51, "<= ");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    v27 = *(char *)(a3 + 23);
    if (v27 >= 0)
      v28 = (const std::string::value_type *)a3;
    else
      v28 = *(const std::string::value_type **)a3;
    if (v27 >= 0)
      v29 = *(unsigned __int8 *)(a3 + 23);
    else
      v29 = *(_QWORD *)(a3 + 8);
    v30 = std::string::append(&v52, v28, v29);
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    v32 = std::string::append(&v53, " AND ");
    v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v54.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    sub_1015A2E04(v42, "LoiGroupId");
    sub_1002AAC84((const void **)v42, v57, (uint64_t)__p);
    if ((v45 & 0x80u) == 0)
      v34 = __p;
    else
      v34 = (void **)__p[0];
    if ((v45 & 0x80u) == 0)
      v35 = v45;
    else
      v35 = (std::string::size_type)__p[1];
    v36 = std::string::append(&v54, (const std::string::value_type *)v34, v35);
    v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    v56 = v36->__r_.__value_.__r.__words[2];
    buf = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    if ((char)v45 < 0)
      operator delete(__p[0]);
    if (v43 < 0)
      operator delete(v42[0]);
    if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v54.__r_.__value_.__l.__data_);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v53.__r_.__value_.__l.__data_);
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    v38 = *(_QWORD *)a1;
    sub_1015A2E04(&v54, "RowId");
    sub_100395B24(v38, (uint64_t)&buf, a6);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021325A0);
  v39 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021325A0);
    LOWORD(v54.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all", &v54, 2);
    v41 = (char *)v40;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationAssociatedStateTable::Entry> CLMicroLocationAssociatedStateTable::selectBetweenTimesAtLoi(const std::string &, const std::string &, boost::uuids::uuid, uint32_t)", "%s\n", v40);
    if (v41 != (char *)&buf)
      free(v41);
  }
  *a7 = 0;
  a7[1] = 0;
  a7[2] = 0;
}

void sub_1003968F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100396A20()
{
  JUMPOUT(0x1003969E8);
}

void sub_100396A28()
{
  JUMPOUT(0x1003969F8);
}

void sub_100396A30()
{
  JUMPOUT(0x100396A08);
}

uint64_t sub_100396A38(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  NSObject *v3;
  const char *v5;
  uint8_t *v6;
  void *v7;
  uint8_t buf[4];

  if (*(_BYTE *)(a1 + 8))
  {
    v1 = *(_QWORD *)a1;
    if (byte_1023011C7 >= 0)
      v2 = (char *)&xmmword_1023011B0;
    else
      v2 = (char *)xmmword_1023011B0;
    sub_1000CDA68(v1, v2);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021325A0);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021325A0);
    LOWORD(v7) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't insert or replace", &v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationAssociatedStateTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  return 0;
}

void sub_100397088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32)
{
  if (a25 < 0)
    operator delete(__p);
  if (a31 < 0)
    operator delete(a26);
  if (a32)
    (*(void (**)(uint64_t))(*(_QWORD *)a32 + 8))(a32);
  _Unwind_Resume(exception_object);
}

void sub_100397100(uint64_t a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X8>)
{
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  std::string::size_type size;
  std::string *v22;
  __int128 v23;
  char *p_p;
  NSObject *v25;
  const char *v26;
  std::string *v27;
  std::string v28;
  std::string v29;
  std::string v30;
  std::string v31;
  std::string v32;
  std::string v33;
  std::string v34;
  __int128 __p;
  int64_t v36;
  void *v37[4];
  std::string v38;
  std::string v39;

  if (*(_BYTE *)(a1 + 8))
  {
    memset(v37, 0, 24);
    *((_BYTE *)&v29.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v29, "SELECT DISTINCT ");
    v6 = std::string::append(&v29, "LoiGroupId");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v30, " FROM ");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v31, "MicroLocationAssociatedState");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v32, " WHERE ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v33, "LoiGroupId");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v34, " != ''");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v38, " LIMIT ");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v28, a2);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = &v28;
    else
      v20 = (std::string *)v28.__r_.__value_.__r.__words[0];
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    else
      size = v28.__r_.__value_.__l.__size_;
    v22 = std::string::append(&v39, (const std::string::value_type *)v20, size);
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v36 = v22->__r_.__value_.__r.__words[2];
    __p = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v39.__r_.__value_.__l.__data_);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v38.__r_.__value_.__l.__data_);
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v34.__r_.__value_.__l.__data_);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v33.__r_.__value_.__l.__data_);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    if (v36 >= 0)
      p_p = (char *)&__p;
    else
      p_p = (char *)__p;
    sub_1000CDA68(*(_QWORD *)a1, p_p);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021325A0);
  v25 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v39.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all client IDs", (uint8_t *)&v39, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v39, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021325A0);
    LOWORD(v37[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v39, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all client IDs", v37, 2);
    v27 = (std::string *)v26;
    sub_100512490("Generic", 1, 0, 2, "std::vector<boost::uuids::uuid> CLMicroLocationAssociatedStateTable::selectAllLoiGroupIds(uint32_t)", "%s\n", v26);
    if (v27 != &v39)
      free(v27);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
}

void sub_100397650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100397918()
{
  __cxa_end_catch();
  JUMPOUT(0x100397740);
}

void sub_10039792C(void *a1, int a2)
{
  if (a2)
    sub_10024F88C(a1);
  JUMPOUT(0x100397774);
}

uint64_t sub_10039793C(uint64_t a1, unint64_t a2)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  std::string::size_type size;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  char *v32;
  NSObject *v33;
  const char *v35;
  std::string *v36;
  std::string v37;
  std::string v38;
  std::string v39;
  std::string v40;
  std::string v41;
  std::string v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  void *__p[2];
  int64_t v51;
  std::string v52;

  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v38.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v38, "DELETE FROM ");
    v4 = std::string::append(&v38, "MicroLocationAssociatedState");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    v6 = std::string::append(&v39, " WHERE ");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v40, "Timestamp");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v41, " IN (");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v42, "SELECT ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v43, "Timestamp");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v44, " FROM ");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v45, "MicroLocationAssociatedState");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = std::string::append(&v46, " ORDER BY ");
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    v22 = std::string::append(&v47, "Timestamp");
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    v24 = std::string::append(&v48, " LIMIT ");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v37, a2);
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &v37;
    else
      v26 = (std::string *)v37.__r_.__value_.__r.__words[0];
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
    else
      size = v37.__r_.__value_.__l.__size_;
    v28 = std::string::append(&v49, (const std::string::value_type *)v26, size);
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = std::string::append(&v52, ")");
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v51 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v41.__r_.__value_.__l.__data_);
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v40.__r_.__value_.__l.__data_);
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v39.__r_.__value_.__l.__data_);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v38.__r_.__value_.__l.__data_);
    if (v51 >= 0)
      v32 = (char *)__p;
    else
      v32 = (char *)__p[0];
    sub_1000CDA68(*(_QWORD *)a1, v32);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021325A0);
  v33 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v52.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v52, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v52, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021325A0);
    LOWORD(__p[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v52, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't deleteOldestRows", __p, 2);
    v36 = (std::string *)v35;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationAssociatedStateTable::deleteOldestRows(uint64_t)", "%s\n", v35);
    if (v36 != &v52)
      free(v36);
  }
  return 0;
}

void sub_100397FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  char a66;
  uint64_t v66;

  if (v66)
    (*(void (**)(uint64_t))(*(_QWORD *)v66 + 8))(v66);
  if (a66 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_100398144(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

BOOL sub_100398170(sqlite3_stmt *a1, int a2)
{
  unint64_t v2;

  v2 = sqlite3_column_int64(a1, a2);
  if ((v2 & 0x8000000000000000) != 0)
    sub_1018F8748();
  if (v2 >= 2)
    sub_1018F88B4();
  return v2 != 0;
}

uint64_t sub_1003981A0(uint64_t *a1, __int128 *a2, _OWORD *a3, _QWORD *a4, char *a5, _QWORD *a6, int *a7, int *a8)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t *v29;

  v9 = *a1;
  v10 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 3);
  v11 = v10 + 1;
  if (v10 + 1 > 0x38E38E38E38E38ELL)
    sub_100259694();
  v19 = (uint64_t)(a1 + 2);
  v20 = 0x8E38E38E38E38E39 * ((a1[2] - v9) >> 3);
  if (2 * v20 > v11)
    v11 = 2 * v20;
  if (v20 >= 0x1C71C71C71C71C7)
    v21 = 0x38E38E38E38E38ELL;
  else
    v21 = v11;
  v29 = a1 + 2;
  if (v21)
    v22 = (char *)sub_10029D26C(v19, v21);
  else
    v22 = 0;
  v25 = v22;
  v26 = &v22[72 * v10];
  v27 = v26;
  v28 = &v22[72 * v21];
  sub_100395A84(v26, a2, a3, a4, *a5, a6, *a7, *a8);
  v27 = v26 + 72;
  sub_100313AF4(a1, &v25);
  v23 = a1[1];
  sub_100313C8C((uint64_t)&v25);
  return v23;
}

void sub_1003982F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100313C8C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_100398304@<D0>(std::string *a1@<X8>)
{
  double result;
  std::string v3;

  memset(&v3, 0, sizeof(v3));
  sub_100398364(&v3);
  result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_100398348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100398364(std::string *a1)
{
  sub_1003983B8(a1);
  sub_1002AC264(a1);
  sub_100398488(a1);
  sub_100398564(a1);
  sub_100398640(a1);
  sub_10039871C(a1);
  sub_1003987F8(a1);
  return sub_100269E68(a1);
}

uint64_t sub_1003983B8(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 0;
  v7.__r_.__value_.__s.__data_[0] = 0;
  v2 = std::string::append(&v7, "LoiType");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_100398454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100398488(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "Timestamp");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_100398530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100398564(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "IsAssociated");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_10039860C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100398640(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "MacAddress");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003986E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10039871C(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "Band");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003987C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003987F8(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "Channel");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003988A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_1003988D4@<D0>(std::string *a1@<X8>)
{
  uint64_t v2;
  std::string *v3;
  __int128 v4;
  void **v5;
  std::string::size_type v6;
  double result;
  std::string v8;
  void *__p[2];
  int64_t v10;
  std::string v11;

  sub_1015A2E04(&v11, "VALUES (");
  v2 = 8;
  do
  {
    if (v2 == 8)
    {
      *((_BYTE *)&v8.__r_.__value_.__s + 23) = 0;
      v8.__r_.__value_.__s.__data_[0] = 0;
    }
    else
    {
      *((_BYTE *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
    }
    v3 = std::string::append(&v8, "?");
    v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v10 = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    if (v10 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    if (v10 >= 0)
      v6 = HIBYTE(v10);
    else
      v6 = (std::string::size_type)__p[1];
    std::string::append(&v11, (const std::string::value_type *)v5, v6);
    if (SHIBYTE(v10) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    --v2;
  }
  while (v2);
  std::string::append(&v11, ")");
  result = *(double *)&v11.__r_.__value_.__l.__data_;
  *a1 = v11;
  return result;
}

void sub_1003989DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100398A28()
{
  std::string *v0;
  __int128 v1;
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  void *__p[2];
  unsigned __int8 v16;
  void *v17[2];
  unsigned __int8 v18;
  std::string v19;
  std::string v20;
  std::string v21;
  std::string v22;
  std::string v23;

  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101B980A0;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  v0 = std::string::append(&v19, "MicroLocationAssociatedState");
  v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  v2 = std::string::append(&v20, " (");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_1003954C4((uint64_t)v17);
  if ((v18 & 0x80u) == 0)
    v4 = v17;
  else
    v4 = (void **)v17[0];
  if ((v18 & 0x80u) == 0)
    v5 = v18;
  else
    v5 = (std::string::size_type)v17[1];
  v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  v8 = std::string::append(&v22, ") ");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_10039558C((uint64_t)__p);
  if ((v16 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v16 & 0x80u) == 0)
    v11 = v16;
  else
    v11 = (std::string::size_type)__p[1];
  v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_1023011C0 = *((_QWORD *)&v12->__r_.__value_.__l + 2);
  xmmword_1023011B0 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
  if ((char)v18 < 0)
    operator delete(v17[0]);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1023011B0, (void *)&_mh_execute_header);
}

void sub_100398C14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v40 - 25) < 0)
    operator delete(*(void **)(v40 - 48));
  if (*(char *)(v40 - 57) < 0)
    operator delete(*(void **)(v40 - 80));
  if (a21 < 0)
    operator delete(a16);
  if (a40 < 0)
    operator delete(a35);
  if (a33 < 0)
    operator delete(a28);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

void sub_100398CC0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A0990);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A0990))
  {
    sub_10039FF88((std::string *)&xmmword_1022A0978);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A0978, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A0990);
  }
  if (byte_1022A098F < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A0978, *((unint64_t *)&xmmword_1022A0978 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A0978;
    *(_QWORD *)(a1 + 16) = unk_1022A0988;
  }
}

void sub_100398D70(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A0990);
  _Unwind_Resume(a1);
}

void sub_100398D88(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A09B0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A09B0))
  {
    sub_1003A01FC((std::string *)&xmmword_1022A0998);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A0998, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A09B0);
  }
  if (byte_1022A09AF < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A0998, *((unint64_t *)&xmmword_1022A0998 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A0998;
    *(_QWORD *)(a1 + 16) = unk_1022A09A8;
  }
}

void sub_100398E38(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A09B0);
  _Unwind_Resume(a1);
}

uint64_t sub_100398E50(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, double a9)
{
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a9;
  v11 = *a4;
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a4 + 2);
  *(_OWORD *)(a1 + 24) = v11;
  *((_QWORD *)a4 + 1) = 0;
  *((_QWORD *)a4 + 2) = 0;
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a1 + 48) = a7;
  *(_QWORD *)(a1 + 56) = a8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a5 + 8);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a5 + 72);
  sub_1002DF194(a1 + 80);
  v12 = *a6;
  *(_BYTE *)(a1 + 232) = *((_BYTE *)a6 + 16);
  *(_OWORD *)(a1 + 216) = v12;
  return a1;
}

void sub_100398ED0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 47) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100398EF0(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, int a5, double a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __int128 v14;
  __int128 v16;
  char v17;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a6;
  v14 = *a4;
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a4 + 2);
  *(_OWORD *)(a1 + 24) = v14;
  *((_QWORD *)a4 + 1) = 0;
  *((_QWORD *)a4 + 2) = 0;
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a1 + 48) = a11;
  *(_QWORD *)(a1 + 56) = a12;
  *(double *)(a1 + 64) = a7;
  *(_DWORD *)(a1 + 72) = a5;
  sub_1002DF194(a1 + 80);
  *(_BYTE *)(a1 + 216) = 0;
  *(_BYTE *)(a1 + 232) = 0;
  if ((*(char *)(a9 + 23) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a9 + 23))
      return a1;
    goto LABEL_5;
  }
  if (*(_QWORD *)(a9 + 8))
  {
LABEL_5:
    sub_100357708(a9, (uint64_t)&v16);
    *(_OWORD *)(a1 + 216) = v16;
    *(_BYTE *)(a1 + 232) = v17;
  }
  return a1;
}

void sub_100398FD4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1002DF2E0(v2);
  if (*(char *)(v1 + 47) < 0)
    operator delete(*(void **)(v1 + 24));
  _Unwind_Resume(a1);
}

void sub_100399004(uint64_t a1)
{
  BOOL v2;
  BOOL v3;
  NSObject *v4;
  uint8_t *v5;
  double v6;
  NSObject *v7;
  uint8_t *v8;
  NSObject *v9;
  double v10;
  uint8_t *v11;
  __int128 v12;
  uint8_t buf[4];
  const char *v14;

  v2 = sub_1000CC4F4(*(_QWORD *)a1);
  *(_BYTE *)(a1 + 8) = v2;
  if (v2)
  {
    sub_10039943C((uint64_t *)a1);
    sub_100634364(*(_QWORD *)a1, "MicroLocationRecordingEvents", (const char **)&off_102132790, 0, 0);
    v3 = sub_100635B3C(*(_QWORD *)a1, "MicroLocationRecordingEvents");
    *(_BYTE *)(a1 + 8) = v3;
    if (v3)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132770);
      v4 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136380675;
        v14 = "MicroLocationRecordingEvents";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{private}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102132770);
        LODWORD(v12) = 136380675;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationRecordingEvents";
        v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Sucessfully created table if necessary: %{private}s", &v12, 12, v12);
LABEL_19:
        v8 = v5;
        sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationRecordingEventsTable::initTable()", "%s\n", v6);
LABEL_29:
        if (v8 != buf)
          free(v8);
      }
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132770);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        v14 = "MicroLocationRecordingEvents";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102132770);
        LODWORD(v12) = 136446210;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationRecordingEvents";
        v10 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Failed to create table: %{public}s", &v12, 12);
        v8 = v11;
        sub_100512490("Generic", 1, 0, 0, "void CLMicroLocationRecordingEventsTable::initTable()", "%s\n", v10);
        goto LABEL_29;
      }
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132770);
      LOWORD(v12) = 0;
      v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Database is not connected so we can't intialize our table", &v12, 2, v12);
      goto LABEL_19;
    }
  }
}

uint64_t sub_100399410(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  sub_100399004(a1);
  return a1;
}

BOOL sub_10039943C(uint64_t *a1)
{
  _BOOL8 result;

  result = sub_100635B3C(*a1, "MicroLocationRecordingEvents");
  if (result)
    return sub_1002639C4(*a1, (uint64_t *)&off_102132790, 9, "MicroLocationRecordingEvents");
  return result;
}

uint64_t sub_100399490(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  NSObject *v3;
  const char *v5;
  uint8_t *v6;
  void *v7;
  uint8_t buf[8];

  if (*(_BYTE *)(a1 + 8))
  {
    v1 = *(_QWORD *)a1;
    if (byte_1023011DF >= 0)
      v2 = (char *)&xmmword_1023011C8;
    else
      v2 = (char *)xmmword_1023011C8;
    sub_1000CDA68(v1, v2);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v7) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't insert or replace", &v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationRecordingEventsTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  return 0;
}

void sub_100399C84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,std::bad_cast a45)
{
  if (a23 < 0)
    operator delete(__p);
  if (a29 < 0)
    operator delete(a24);
  if (a35 < 0)
    operator delete(a30);
  if (a41 < 0)
    operator delete(a36);
  if (a42)
    (*(void (**)(uint64_t))(*(_QWORD *)a42 + 8))(a42);
  _Unwind_Resume(exception_object);
}

void sub_100399D4C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  std::string::size_type size;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  int v33;
  const std::string::value_type *v34;
  std::string::size_type v35;
  std::string *v36;
  __int128 v37;
  char *v38;
  std::string v39;
  void *__p[2];
  unsigned __int8 v41;
  std::string::value_type __s[8];
  char v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  void *v49[2];
  int64_t v50;
  std::string v51;
  std::string v52;
  std::string v53;
  std::string v54;
  std::string v55;

  *((_BYTE *)&v44.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v44, "SELECT * FROM (");
  v43 = 7;
  strcpy(__s, "SELECT ");
  v8 = std::string::append(&v44, __s, 7uLL);
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_100398CC0((uint64_t)__p);
  if ((v41 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v41 & 0x80u) == 0)
    v11 = v41;
  else
    v11 = (std::string::size_type)__p[1];
  v12 = std::string::append(&v45, (const std::string::value_type *)v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  v14 = std::string::append(&v52, " FROM ");
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v53.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  v16 = *(char *)(a2 + 23);
  if (v16 >= 0)
    v17 = (const std::string::value_type *)a2;
  else
    v17 = *(const std::string::value_type **)a2;
  if (v16 >= 0)
    v18 = *(unsigned __int8 *)(a2 + 23);
  else
    v18 = *(_QWORD *)(a2 + 8);
  v19 = std::string::append(&v53, v17, v18);
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v54.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  v21 = std::string::append(&v54, " ORDER BY ");
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v46, "RecordingTimestamp");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  v25 = std::string::append(&v47, " DESC LIMIT ");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v55.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v39, a3);
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v27 = &v39;
  else
    v27 = (std::string *)v39.__r_.__value_.__r.__words[0];
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
  else
    size = v39.__r_.__value_.__l.__size_;
  v29 = std::string::append(&v55, (const std::string::value_type *)v27, size);
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  v31 = std::string::append(&v48, ") ORDER BY ");
  v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  v33 = *(char *)(a4 + 23);
  if (v33 >= 0)
    v34 = (const std::string::value_type *)a4;
  else
    v34 = *(const std::string::value_type **)a4;
  if (v33 >= 0)
    v35 = *(unsigned __int8 *)(a4 + 23);
  else
    v35 = *(_QWORD *)(a4 + 8);
  v36 = std::string::append(&v51, v34, v35);
  v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  v50 = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)v49 = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v51.__r_.__value_.__l.__data_);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v39.__r_.__value_.__l.__data_);
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v55.__r_.__value_.__l.__data_);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v47.__r_.__value_.__l.__data_);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v54.__r_.__value_.__l.__data_);
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v53.__r_.__value_.__l.__data_);
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v52.__r_.__value_.__l.__data_);
  if ((char)v41 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v45.__r_.__value_.__l.__data_);
  if (v43 < 0)
    operator delete(*(void **)__s);
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v44.__r_.__value_.__l.__data_);
  if (v50 >= 0)
    v38 = (char *)v49;
  else
    v38 = (char *)v49[0];
  sub_1000CDA68(a1, v38);
}

void sub_10039A2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void **buf)
{
  uint64_t v46;

  buf = &a35;
  sub_100270C6C(&buf);
  if (v46)
    (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
  if (a44 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_10039A6DC(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned int a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  std::string *p_p;
  std::string::size_type size;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  void **v29;
  std::string::size_type v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  std::string::size_type v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  __int128 v40;
  std::string *v41;
  std::string::size_type v42;
  uint64_t v43;
  NSObject *v44;
  const char *v45;
  std::string *v46;
  NSObject *v47;
  const char *v48;
  std::string::value_type v49[8];
  char v50;
  std::string::value_type v51[8];
  char v52;
  std::string::value_type v53[8];
  char v54;
  std::string v55;
  std::string v56;
  std::string __s;
  std::string __p;
  std::string v59;
  std::string v60;
  void *v61[2];
  int64_t v62;
  std::string v63;

  if (*(_BYTE *)(a1 + 8))
  {
    v7 = *a2;
    if (*a2 != a2[1])
    {
      *((_BYTE *)&v59.__r_.__value_.__s + 23) = 1;
      LOWORD(v59.__r_.__value_.__l.__data_) = 34;
      memset(&__p, 0, sizeof(__p));
      if ((sub_10026A098(v7, &__p) & 1) != 0)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        v11 = std::string::append(&v59, (const std::string::value_type *)p_p, size);
        v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v12;
        v11->__r_.__value_.__l.__size_ = 0;
        v11->__r_.__value_.__r.__words[2] = 0;
        v11->__r_.__value_.__r.__words[0] = 0;
        v13 = std::string::append(&v60, "\"");
        v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
        v62 = v13->__r_.__value_.__r.__words[2];
        *(_OWORD *)v61 = v14;
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        v15 = a2[1];
        v16 = *a2 + 16;
        v63.__r_.__value_.__r.__words[0] = (std::string::size_type)v61;
        while (v16 != v15)
        {
          sub_1003A0350((std::string **)&v63, v16);
          v16 += 16;
        }
        *((_BYTE *)&__p.__r_.__value_.__s + 23) = 14;
        strcpy((char *)&__p, "(SELECT *,MIN(");
        v17 = std::string::append(&__p, "RowId");
        v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v18;
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        *((_BYTE *)&__s.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&__s, ") FROM ");
        v19 = std::string::append(&v59, (const std::string::value_type *)&__s, 7uLL);
        v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        v21 = std::string::append(&v60, "MicroLocationRecordingEvents");
        v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v63.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__s.__r_.__value_.__l.__data_);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        *((_BYTE *)&v55.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&v55, " WHERE ");
        v23 = std::string::append(&v55, "TriggerUUID");
        v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
        v56.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v24;
        v23->__r_.__value_.__l.__size_ = 0;
        v23->__r_.__value_.__r.__words[2] = 0;
        v23->__r_.__value_.__r.__words[0] = 0;
        v54 = 4;
        strcpy(v53, " IN ");
        v25 = std::string::append(&v56, v53, 4uLL);
        v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        __s.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        v52 = 1;
        strcpy(v51, "(");
        v27 = std::string::append(&__s, v51, 1uLL);
        v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        if (v62 >= 0)
          v29 = v61;
        else
          v29 = (void **)v61[0];
        if (v62 >= 0)
          v30 = HIBYTE(v62);
        else
          v30 = (std::string::size_type)v61[1];
        v31 = std::string::append(&__p, (const std::string::value_type *)v29, v30);
        v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        v50 = 1;
        strcpy(v49, ")");
        v33 = std::string::append(&v59, v49, 1uLL);
        v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v35 = &v60;
        else
          v35 = (std::string *)v60.__r_.__value_.__r.__words[0];
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v36 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
        else
          v36 = v60.__r_.__value_.__l.__size_;
        std::string::append(&v63, (const std::string::value_type *)v35, v36);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (v50 < 0)
          operator delete(*(void **)v49);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (v52 < 0)
          operator delete(*(void **)v51);
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__s.__r_.__value_.__l.__data_);
        if (v54 < 0)
          operator delete(*(void **)v53);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v55.__r_.__value_.__l.__data_);
        *((_BYTE *)&__p.__r_.__value_.__s + 23) = 10;
        strcpy((char *)&__p, " GROUP BY ");
        v37 = std::string::append(&__p, "TriggerUUID");
        v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        v39 = std::string::append(&v59, ")");
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v41 = &v60;
        else
          v41 = (std::string *)v60.__r_.__value_.__r.__words[0];
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v42 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
        else
          v42 = v60.__r_.__value_.__l.__size_;
        std::string::append(&v63, (const std::string::value_type *)v41, v42);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v43 = *(_QWORD *)a1;
        sub_1015A2E04(&v60, "TriggerUUID");
        sub_100399D4C(v43, (uint64_t)&v63, a3, (uint64_t)&v60);
      }
      std::bad_cast::bad_cast((std::bad_cast *)&v63);
      v63.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
      sub_10026A9C8((uint64_t)&v63);
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    v47 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v63.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "#Warning passed empty UUIDs so we can't select recording events", (uint8_t *)&v63, 2u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_83;
    bzero(&v63, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v61[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v63, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning passed empty UUIDs so we can't select recording events", v61, 2);
    v46 = (std::string *)v48;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsFromUUIDs(const std::vector<boost::uuids::uuid> &, uint32_t) [UuidColumn_t = CLMicroLocationRecordingEventsTable::DatabaseColumns::TriggerUUID]", "%s\n", v48);
LABEL_87:
    if (v46 != &v63)
      free(v46);
    goto LABEL_83;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v44 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v63.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&v63, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v63, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v61[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v63, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all", v61, 2);
    v46 = (std::string *)v45;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsFromUUIDs(const std::vector<boost::uuids::uuid> &, uint32_t) [UuidColumn_t = CLMicroLocationRecordingEventsTable::DatabaseColumns::TriggerUUID]", "%s\n", v45);
    goto LABEL_87;
  }
LABEL_83:
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_10039AEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a44 < 0)
    operator delete(__p);
  if (a58 < 0)
    operator delete(a53);
  if (a51 < 0)
    operator delete(a46);
  _Unwind_Resume(a1);
}

void sub_10039B0E4(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned int a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  std::string *p_p;
  std::string::size_type size;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  void **v29;
  std::string::size_type v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  std::string::size_type v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  __int128 v40;
  std::string *v41;
  std::string::size_type v42;
  uint64_t v43;
  NSObject *v44;
  const char *v45;
  std::string *v46;
  NSObject *v47;
  const char *v48;
  std::string::value_type v49[8];
  char v50;
  std::string::value_type v51[8];
  char v52;
  std::string::value_type v53[8];
  char v54;
  std::string v55;
  std::string v56;
  std::string __s;
  std::string __p;
  std::string v59;
  std::string v60;
  void *v61[2];
  int64_t v62;
  std::string v63;

  if (*(_BYTE *)(a1 + 8))
  {
    v7 = *a2;
    if (*a2 != a2[1])
    {
      *((_BYTE *)&v59.__r_.__value_.__s + 23) = 1;
      LOWORD(v59.__r_.__value_.__l.__data_) = 34;
      memset(&__p, 0, sizeof(__p));
      if ((sub_10026A098(v7, &__p) & 1) != 0)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        v11 = std::string::append(&v59, (const std::string::value_type *)p_p, size);
        v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v12;
        v11->__r_.__value_.__l.__size_ = 0;
        v11->__r_.__value_.__r.__words[2] = 0;
        v11->__r_.__value_.__r.__words[0] = 0;
        v13 = std::string::append(&v60, "\"");
        v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
        v62 = v13->__r_.__value_.__r.__words[2];
        *(_OWORD *)v61 = v14;
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        v15 = a2[1];
        v16 = *a2 + 16;
        v63.__r_.__value_.__r.__words[0] = (std::string::size_type)v61;
        while (v16 != v15)
        {
          sub_1003A0350((std::string **)&v63, v16);
          v16 += 16;
        }
        *((_BYTE *)&__p.__r_.__value_.__s + 23) = 14;
        strcpy((char *)&__p, "(SELECT *,MIN(");
        v17 = std::string::append(&__p, "RowId");
        v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v18;
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        *((_BYTE *)&__s.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&__s, ") FROM ");
        v19 = std::string::append(&v59, (const std::string::value_type *)&__s, 7uLL);
        v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        v21 = std::string::append(&v60, "MicroLocationRecordingEvents");
        v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v63.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__s.__r_.__value_.__l.__data_);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        *((_BYTE *)&v55.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&v55, " WHERE ");
        v23 = std::string::append(&v55, "RecordingUUID");
        v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
        v56.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v24;
        v23->__r_.__value_.__l.__size_ = 0;
        v23->__r_.__value_.__r.__words[2] = 0;
        v23->__r_.__value_.__r.__words[0] = 0;
        v54 = 4;
        strcpy(v53, " IN ");
        v25 = std::string::append(&v56, v53, 4uLL);
        v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        __s.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        v52 = 1;
        strcpy(v51, "(");
        v27 = std::string::append(&__s, v51, 1uLL);
        v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        if (v62 >= 0)
          v29 = v61;
        else
          v29 = (void **)v61[0];
        if (v62 >= 0)
          v30 = HIBYTE(v62);
        else
          v30 = (std::string::size_type)v61[1];
        v31 = std::string::append(&__p, (const std::string::value_type *)v29, v30);
        v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        v50 = 1;
        strcpy(v49, ")");
        v33 = std::string::append(&v59, v49, 1uLL);
        v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v35 = &v60;
        else
          v35 = (std::string *)v60.__r_.__value_.__r.__words[0];
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v36 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
        else
          v36 = v60.__r_.__value_.__l.__size_;
        std::string::append(&v63, (const std::string::value_type *)v35, v36);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (v50 < 0)
          operator delete(*(void **)v49);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (v52 < 0)
          operator delete(*(void **)v51);
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__s.__r_.__value_.__l.__data_);
        if (v54 < 0)
          operator delete(*(void **)v53);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v55.__r_.__value_.__l.__data_);
        *((_BYTE *)&__p.__r_.__value_.__s + 23) = 10;
        strcpy((char *)&__p, " GROUP BY ");
        v37 = std::string::append(&__p, "RecordingUUID");
        v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        v39 = std::string::append(&v59, ")");
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v41 = &v60;
        else
          v41 = (std::string *)v60.__r_.__value_.__r.__words[0];
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v42 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
        else
          v42 = v60.__r_.__value_.__l.__size_;
        std::string::append(&v63, (const std::string::value_type *)v41, v42);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v43 = *(_QWORD *)a1;
        sub_1015A2E04(&v60, "RecordingUUID");
        sub_100399D4C(v43, (uint64_t)&v63, a3, (uint64_t)&v60);
      }
      std::bad_cast::bad_cast((std::bad_cast *)&v63);
      v63.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
      sub_10026A9C8((uint64_t)&v63);
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    v47 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v63.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "#Warning passed empty UUIDs so we can't select recording events", (uint8_t *)&v63, 2u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_83;
    bzero(&v63, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v61[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v63, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning passed empty UUIDs so we can't select recording events", v61, 2);
    v46 = (std::string *)v48;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsFromUUIDs(const std::vector<boost::uuids::uuid> &, uint32_t) [UuidColumn_t = CLMicroLocationRecordingEventsTable::DatabaseColumns::RecordingUUID]", "%s\n", v48);
LABEL_87:
    if (v46 != &v63)
      free(v46);
    goto LABEL_83;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v44 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v63.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&v63, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v63, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v61[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v63, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all", v61, 2);
    v46 = (std::string *)v45;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsFromUUIDs(const std::vector<boost::uuids::uuid> &, uint32_t) [UuidColumn_t = CLMicroLocationRecordingEventsTable::DatabaseColumns::RecordingUUID]", "%s\n", v45);
    goto LABEL_87;
  }
LABEL_83:
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_10039B8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a44 < 0)
    operator delete(__p);
  if (a58 < 0)
    operator delete(a53);
  if (a51 < 0)
    operator delete(a46);
  _Unwind_Resume(a1);
}

uint64_t sub_10039BAE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  std::string *p_p;
  std::string::size_type size;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t i;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  std::string::size_type v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  NSObject *v40;
  const char *v41;
  std::string *v42;
  NSObject *v43;
  const char *v45;
  std::string::value_type v46[8];
  char v47;
  std::string::value_type v48[8];
  char v49;
  std::string::value_type __s[8];
  char v51;
  std::string v52;
  std::string v53;
  std::string v54;
  std::string v55;
  std::string v56;
  std::string __p;
  std::string v58;
  std::string v59;
  std::string v60;

  if (*(_BYTE *)(a1 + 8))
  {
    v4 = *a2;
    if (*a2 != a2[1])
    {
      *((_BYTE *)&v58.__r_.__value_.__s + 23) = 1;
      LOWORD(v58.__r_.__value_.__l.__data_) = 34;
      memset(&__p, 0, sizeof(__p));
      if ((sub_10026A098(v4, &__p) & 1) != 0)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        v7 = std::string::append(&v58, (const std::string::value_type *)p_p, size);
        v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v8;
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        v9 = std::string::append(&v59, "\"");
        v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v10;
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        v9->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v58.__r_.__value_.__l.__data_);
        v11 = a2[1];
        for (i = *a2 + 16; i != v11; i += 16)
        {
          *((_BYTE *)&v56.__r_.__value_.__s + 23) = 1;
          LOWORD(v56.__r_.__value_.__l.__data_) = 44;
          v13 = std::string::append(&v56, "\"");
          v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v14;
          v13->__r_.__value_.__l.__size_ = 0;
          v13->__r_.__value_.__r.__words[2] = 0;
          v13->__r_.__value_.__r.__words[0] = 0;
          memset(&v55, 0, sizeof(v55));
          if ((sub_10026A098(i, &v55) & 1) == 0)
          {
            std::bad_cast::bad_cast((std::bad_cast *)&v60);
            v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
            sub_10026A9C8((uint64_t)&v60);
          }
          if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v15 = &v55;
          else
            v15 = (std::string *)v55.__r_.__value_.__r.__words[0];
          if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v16 = HIBYTE(v55.__r_.__value_.__r.__words[2]);
          else
            v16 = v55.__r_.__value_.__l.__size_;
          v17 = std::string::append(&__p, (const std::string::value_type *)v15, v16);
          v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
          v58.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v18;
          v17->__r_.__value_.__l.__size_ = 0;
          v17->__r_.__value_.__r.__words[2] = 0;
          v17->__r_.__value_.__r.__words[0] = 0;
          v19 = std::string::append(&v58, "\"");
          v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
          v59.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v20;
          v19->__r_.__value_.__l.__size_ = 0;
          v19->__r_.__value_.__r.__words[2] = 0;
          v19->__r_.__value_.__r.__words[0] = 0;
          if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v21 = &v59;
          else
            v21 = (std::string *)v59.__r_.__value_.__r.__words[0];
          if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v22 = HIBYTE(v59.__r_.__value_.__r.__words[2]);
          else
            v22 = v59.__r_.__value_.__l.__size_;
          std::string::append(&v54, (const std::string::value_type *)v21, v22);
          if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v59.__r_.__value_.__l.__data_);
          if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v58.__r_.__value_.__l.__data_);
          if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v55.__r_.__value_.__l.__data_);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v56.__r_.__value_.__l.__data_);
        }
        *((_BYTE *)&v52.__r_.__value_.__s + 23) = 12;
        strcpy((char *)&v52, "DELETE FROM ");
        v23 = std::string::append(&v52, "MicroLocationRecordingEvents");
        v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
        v53.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v24;
        v23->__r_.__value_.__l.__size_ = 0;
        v23->__r_.__value_.__r.__words[2] = 0;
        v23->__r_.__value_.__r.__words[0] = 0;
        v25 = std::string::append(&v53, " WHERE ");
        v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        v55.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        v27 = std::string::append(&v55, "RecordingUUID");
        v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        v56.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        v51 = 4;
        strcpy(__s, " IN ");
        v29 = std::string::append(&v56, __s, 4uLL);
        v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v30;
        v29->__r_.__value_.__l.__size_ = 0;
        v29->__r_.__value_.__r.__words[2] = 0;
        v29->__r_.__value_.__r.__words[0] = 0;
        v49 = 1;
        strcpy(v48, "(");
        v31 = std::string::append(&__p, v48, 1uLL);
        v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v33 = &v54;
        else
          v33 = (std::string *)v54.__r_.__value_.__r.__words[0];
        if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v34 = HIBYTE(v54.__r_.__value_.__r.__words[2]);
        else
          v34 = v54.__r_.__value_.__l.__size_;
        v35 = std::string::append(&v58, (const std::string::value_type *)v33, v34);
        v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        v47 = 1;
        strcpy(v46, ")");
        v37 = std::string::append(&v60, v46, 1uLL);
        v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        if (v47 < 0)
          operator delete(*(void **)v46);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v58.__r_.__value_.__l.__data_);
        if (v49 < 0)
          operator delete(*(void **)v48);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (v51 < 0)
          operator delete(*(void **)__s);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v55.__r_.__value_.__l.__data_);
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v53.__r_.__value_.__l.__data_);
        if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v52.__r_.__value_.__l.__data_);
        if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v39 = &v59;
        else
          v39 = (std::string *)v59.__r_.__value_.__r.__words[0];
        sub_1000CDA68(*(_QWORD *)a1, (char *)v39);
      }
      std::bad_cast::bad_cast((std::bad_cast *)&v60);
      v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10212A508;
      sub_10026A9C8((uint64_t)&v60);
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    v43 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v60.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "#Warning No UUIDs are passed in to delete recording events", (uint8_t *)&v60, 2u);
    }
    if (!sub_1001BFF7C(115, 2))
      return 0;
    bzero(&v60, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v59.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &v60, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning No UUIDs are passed in to delete recording events", &v59, 2);
    v42 = (std::string *)v45;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationRecordingEventsTable::deleteRecordingEventsFromRecordingUUIDs(const std::vector<boost::uuids::uuid> &)", "%s\n", v45);
LABEL_88:
    if (v42 != &v60)
      free(v42);
    return 0;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v40 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v60.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't delete recording events", (uint8_t *)&v60, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v60, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v59.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &v60, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't delete recording events", &v59, 2);
    v42 = (std::string *)v41;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationRecordingEventsTable::deleteRecordingEventsFromRecordingUUIDs(const std::vector<boost::uuids::uuid> &)", "%s\n", v41);
    goto LABEL_88;
  }
  return 0;
}

void sub_10039C414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  uint64_t v55;

  if (v55)
    (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
  if (a55 < 0)
    operator delete(__p);
  if (a32 < 0)
    operator delete(a27);
  _Unwind_Resume(a1);
}

void sub_10039C60C(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, _BYTE *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t *v6;
  std::string *v12;
  __int128 v13;
  void **v14;
  std::string::size_type v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  const std::string::value_type *p_p;
  std::string::size_type v25;
  void *v26;
  NSObject *v27;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  const std::string::value_type *v32;
  std::string::size_type v33;
  uint64_t v34;
  const char *v35;
  std::string *v36;
  void *v37[2];
  char v38;
  void *v39[2];
  char v40;
  void *v41[2];
  unsigned __int8 v42;
  std::string::value_type __s[8];
  char v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  __int128 __p;
  int64_t v51;
  std::string v52;

  if (*((_BYTE *)a1 + 8))
  {
    if (*(_QWORD *)a2 != *(_QWORD *)(a2 + 8))
    {
      sub_10039CC54((int **)a2, &v52);
      if (a5[16])
      {
        *((_BYTE *)&v45.__r_.__value_.__s + 23) = 2;
        strcpy((char *)&v45, "))");
        v44 = 5;
        strcpy(__s, " AND ");
        v12 = std::string::append(&v45, __s, 5uLL);
        v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
        v46.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v13;
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        v12->__r_.__value_.__r.__words[0] = 0;
        sub_1015A2E04(v39, "RtLoiGroupId");
        if (!a5[16])
          sub_10028DF3C();
        sub_1002AAC84((const void **)v39, a5, (uint64_t)v41);
        if ((v42 & 0x80u) == 0)
          v14 = v41;
        else
          v14 = (void **)v41[0];
        if ((v42 & 0x80u) == 0)
          v15 = v42;
        else
          v15 = (std::string::size_type)v41[1];
        v16 = std::string::append(&v46, (const std::string::value_type *)v14, v15);
        v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
        v47.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v17;
        v16->__r_.__value_.__l.__size_ = 0;
        v16->__r_.__value_.__r.__words[2] = 0;
        v16->__r_.__value_.__r.__words[0] = 0;
        v38 = 10;
        strcpy((char *)v37, " GROUP BY ");
        v18 = std::string::append(&v47, (const std::string::value_type *)v37, 0xAuLL);
        v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
        v48.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v19;
        v18->__r_.__value_.__l.__size_ = 0;
        v18->__r_.__value_.__r.__words[2] = 0;
        v18->__r_.__value_.__r.__words[0] = 0;
        v20 = std::string::append(&v48, "RecordingUUID");
        v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
        v49.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v21;
        v20->__r_.__value_.__l.__size_ = 0;
        v20->__r_.__value_.__r.__words[2] = 0;
        v20->__r_.__value_.__r.__words[0] = 0;
        v22 = std::string::append(&v49, ")");
        v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
        v51 = v22->__r_.__value_.__r.__words[2];
        __p = v23;
        v22->__r_.__value_.__l.__size_ = 0;
        v22->__r_.__value_.__r.__words[2] = 0;
        v22->__r_.__value_.__r.__words[0] = 0;
        if (v51 >= 0)
          p_p = (const std::string::value_type *)&__p;
        else
          p_p = (const std::string::value_type *)__p;
        if (v51 >= 0)
          v25 = HIBYTE(v51);
        else
          v25 = *((_QWORD *)&__p + 1);
        std::string::append(&v52, p_p, v25);
        if (SHIBYTE(v51) < 0)
          operator delete((void *)__p);
        if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v49.__r_.__value_.__l.__data_);
        if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v48.__r_.__value_.__l.__data_);
        if (v38 < 0)
          operator delete(v37[0]);
        if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v47.__r_.__value_.__l.__data_);
        if ((char)v42 < 0)
          operator delete(v41[0]);
        if (v40 < 0)
          operator delete(v39[0]);
        if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v46.__r_.__value_.__l.__data_);
        if (v44 < 0)
          operator delete(*(void **)__s);
        if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
        {
          v26 = (void *)v45.__r_.__value_.__r.__words[0];
LABEL_55:
          operator delete(v26);
        }
      }
      else
      {
        *((_BYTE *)&v48.__r_.__value_.__s + 23) = 12;
        strcpy((char *)&v48, ")) GROUP BY ");
        v28 = std::string::append(&v48, "RecordingUUID");
        v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
        v49.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v29;
        v28->__r_.__value_.__l.__size_ = 0;
        v28->__r_.__value_.__r.__words[2] = 0;
        v28->__r_.__value_.__r.__words[0] = 0;
        v30 = std::string::append(&v49, ")");
        v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
        v51 = v30->__r_.__value_.__r.__words[2];
        __p = v31;
        v30->__r_.__value_.__l.__size_ = 0;
        v30->__r_.__value_.__r.__words[2] = 0;
        v30->__r_.__value_.__r.__words[0] = 0;
        if (v51 >= 0)
          v32 = (const std::string::value_type *)&__p;
        else
          v32 = (const std::string::value_type *)__p;
        if (v51 >= 0)
          v33 = HIBYTE(v51);
        else
          v33 = *((_QWORD *)&__p + 1);
        std::string::append(&v52, v32, v33);
        if (SHIBYTE(v51) < 0)
          operator delete((void *)__p);
        if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v49.__r_.__value_.__l.__data_);
        if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
        {
          v26 = (void *)v48.__r_.__value_.__r.__words[0];
          goto LABEL_55;
        }
      }
      sub_100399D4C(*a1, (uint64_t)&v52, a3, a4);
    }
    sub_1018F8A20();
    __break(1u);
LABEL_62:
    dispatch_once(&qword_1022A00F0, &stru_102132770);
LABEL_59:
    v34 = v6[31];
    LOWORD(__p) = 0;
    _os_log_send_and_compose_impl(2, 0, &v52, 1628, &_mh_execute_header, v34, 0, "#Warning Table is not valid so we can't select all", &__p, 2);
    v36 = (std::string *)v35;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventTriggersForLearningMeasurements(const std::vector<CLMicroLocationProto::EventType> &, uint32_t, const std::string &, std::optional<boost::uuids::uuid>)", "%s\n", v35);
    if (v36 != &v52)
      free(v36);
    goto LABEL_42;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v6 = &qword_1022A0000;
  v27 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v52.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&v52, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v52, 0x65CuLL);
    if (qword_1022A00F0 == -1)
      goto LABEL_59;
    goto LABEL_62;
  }
LABEL_42:
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
}

void sub_10039CB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (a54 < 0)
    operator delete(__p);
  if (a47 < 0)
    operator delete(a42);
  if (a40 < 0)
    operator delete(a35);
  if (a61 < 0)
    operator delete(a56);
  _Unwind_Resume(a1);
}

void sub_10039CC54(int **a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  __int128 v27;
  std::string *v28;
  __int128 v29;
  std::string *p_p;
  std::string::size_type size;
  std::string *v32;
  __int128 v33;
  std::string *v34;
  __int128 v35;
  std::string *v36;
  __int128 v37;
  std::string *v38;
  __int128 v39;
  std::string *v40;
  __int128 v41;
  std::string *v42;
  __int128 v43;
  std::string *v44;
  __int128 v45;
  std::string *v46;
  __int128 v47;
  std::string *v48;
  __int128 v49;
  std::string *v50;
  __int128 v51;
  std::string *v52;
  __int128 v53;
  std::string *v54;
  __int128 v55;
  std::string *v56;
  __int128 v57;
  std::string *v58;
  __int128 v59;
  std::string *v60;
  __int128 v61;
  std::string *v62;
  __int128 v63;
  std::string *v64;
  std::string::size_type v65;
  int *v66;
  int *v67;
  int *i;
  std::string *v69;
  std::string::size_type v70;
  std::string *v71;
  __int128 v72;
  std::string *v73;
  std::string::size_type v74;
  std::string __p;
  std::string v76;
  std::string v77;
  std::string v78;
  std::string v79;
  std::string v80;
  std::string v81;
  std::string v82;
  std::string v83;
  std::string v84;
  std::string v85;
  std::string v86;
  std::string v87;
  std::string v88;
  std::string v89;
  std::string v90;
  std::string v91;
  std::string v92;
  std::string v93;
  std::string v94;
  std::string v95;
  std::string v96;
  std::string v97;
  std::string v98;
  std::string v99;
  std::string v100;
  std::string v101;
  std::string v102;
  std::string v103;
  std::string v104;

  *((_BYTE *)&v76.__r_.__value_.__s + 23) = 14;
  strcpy((char *)&v76, "(SELECT *,MIN(");
  v4 = std::string::append(&v76, "RowId");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v77.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  v6 = std::string::append(&v77, ") FROM ");
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v78.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  v8 = std::string::append(&v78, "MicroLocationRecordingEvents");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v79.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  v10 = std::string::append(&v79, " WHERE ");
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v80.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  v12 = std::string::append(&v80, "RecordingUUID");
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v81.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  v14 = std::string::append(&v81, " IN (");
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v82.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  v16 = std::string::append(&v82, "SELECT ");
  v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v83.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v83.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  v18 = std::string::append(&v83, "RecordingUUID");
  v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v84.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  v20 = std::string::append(&v84, " FROM ");
  v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v85.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  v22 = std::string::append(&v85, "MicroLocationRecordingEvents");
  v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v86.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  v24 = std::string::append(&v86, " WHERE ");
  v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v87.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  v26 = std::string::append(&v87, "EventType");
  v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  v88.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  v28 = std::string::append(&v88, "=");
  v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v89.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, 1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v32 = std::string::append(&v89, (const std::string::value_type *)p_p, size);
  v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v90.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  v34 = std::string::append(&v90, " AND HEX(");
  v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  v91.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  v36 = std::string::append(&v91, "Event");
  v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  v92.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v92.__r_.__value_.__l.__data_ = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  v38 = std::string::append(&v92, ") LIKE ");
  v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  v93.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v93.__r_.__value_.__l.__data_ = v39;
  v38->__r_.__value_.__l.__size_ = 0;
  v38->__r_.__value_.__r.__words[2] = 0;
  v38->__r_.__value_.__r.__words[0] = 0;
  v40 = std::string::append(&v93, "'080111________________1A021002%'");
  v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
  v94.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v41;
  v40->__r_.__value_.__l.__size_ = 0;
  v40->__r_.__value_.__r.__words[2] = 0;
  v40->__r_.__value_.__r.__words[0] = 0;
  v42 = std::string::append(&v94, ")");
  v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
  v95.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v95.__r_.__value_.__l.__data_ = v43;
  v42->__r_.__value_.__l.__size_ = 0;
  v42->__r_.__value_.__r.__words[2] = 0;
  v42->__r_.__value_.__r.__words[0] = 0;
  v44 = std::string::append(&v95, " AND ");
  v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
  v96.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v96.__r_.__value_.__l.__data_ = v45;
  v44->__r_.__value_.__l.__size_ = 0;
  v44->__r_.__value_.__r.__words[2] = 0;
  v44->__r_.__value_.__r.__words[0] = 0;
  v46 = std::string::append(&v96, "RecordingUUID");
  v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
  v97.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v97.__r_.__value_.__l.__data_ = v47;
  v46->__r_.__value_.__l.__size_ = 0;
  v46->__r_.__value_.__r.__words[2] = 0;
  v46->__r_.__value_.__r.__words[0] = 0;
  v48 = std::string::append(&v97, " IN (");
  v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
  v98.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v49;
  v48->__r_.__value_.__l.__size_ = 0;
  v48->__r_.__value_.__r.__words[2] = 0;
  v48->__r_.__value_.__r.__words[0] = 0;
  v50 = std::string::append(&v98, "SELECT ");
  v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
  v99.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v99.__r_.__value_.__l.__data_ = v51;
  v50->__r_.__value_.__l.__size_ = 0;
  v50->__r_.__value_.__r.__words[2] = 0;
  v50->__r_.__value_.__r.__words[0] = 0;
  v52 = std::string::append(&v99, "RecordingUUID");
  v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
  v100.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v100.__r_.__value_.__l.__data_ = v53;
  v52->__r_.__value_.__l.__size_ = 0;
  v52->__r_.__value_.__r.__words[2] = 0;
  v52->__r_.__value_.__r.__words[0] = 0;
  v54 = std::string::append(&v100, " FROM ");
  v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
  v101.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v101.__r_.__value_.__l.__data_ = v55;
  v54->__r_.__value_.__l.__size_ = 0;
  v54->__r_.__value_.__r.__words[2] = 0;
  v54->__r_.__value_.__r.__words[0] = 0;
  v56 = std::string::append(&v101, "MicroLocationRecordingEvents");
  v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
  v102.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v102.__r_.__value_.__l.__data_ = v57;
  v56->__r_.__value_.__l.__size_ = 0;
  v56->__r_.__value_.__r.__words[2] = 0;
  v56->__r_.__value_.__r.__words[0] = 0;
  v58 = std::string::append(&v102, " WHERE ");
  v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
  v103.__r_.__value_.__r.__words[2] = v58->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v59;
  v58->__r_.__value_.__l.__size_ = 0;
  v58->__r_.__value_.__r.__words[2] = 0;
  v58->__r_.__value_.__r.__words[0] = 0;
  v60 = std::string::append(&v103, "EventType");
  v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
  v104.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v104.__r_.__value_.__l.__data_ = v61;
  v60->__r_.__value_.__l.__size_ = 0;
  v60->__r_.__value_.__r.__words[2] = 0;
  v60->__r_.__value_.__r.__words[0] = 0;
  v62 = std::string::append(&v104, " IN (");
  v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  a2->__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
  *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v104.__r_.__value_.__l.__data_);
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v103.__r_.__value_.__l.__data_);
  if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v102.__r_.__value_.__l.__data_);
  if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v101.__r_.__value_.__l.__data_);
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v100.__r_.__value_.__l.__data_);
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v99.__r_.__value_.__l.__data_);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v98.__r_.__value_.__l.__data_);
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v97.__r_.__value_.__l.__data_);
  if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v96.__r_.__value_.__l.__data_);
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v95.__r_.__value_.__l.__data_);
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v94.__r_.__value_.__l.__data_);
  if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v93.__r_.__value_.__l.__data_);
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v92.__r_.__value_.__l.__data_);
  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v91.__r_.__value_.__l.__data_);
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v90.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v89.__r_.__value_.__l.__data_);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v87.__r_.__value_.__l.__data_);
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v86.__r_.__value_.__l.__data_);
  if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v85.__r_.__value_.__l.__data_);
  if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v84.__r_.__value_.__l.__data_);
  if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v83.__r_.__value_.__l.__data_);
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v82.__r_.__value_.__l.__data_);
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v81.__r_.__value_.__l.__data_);
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v80.__r_.__value_.__l.__data_);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v79.__r_.__value_.__l.__data_);
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v77.__r_.__value_.__l.__data_);
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v76.__r_.__value_.__l.__data_);
  std::to_string(&v104, **a1);
  if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v64 = &v104;
  else
    v64 = (std::string *)v104.__r_.__value_.__r.__words[0];
  if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v65 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
  else
    v65 = v104.__r_.__value_.__l.__size_;
  std::string::append(a2, (const std::string::value_type *)v64, v65);
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v104.__r_.__value_.__l.__data_);
  v66 = *a1;
  v67 = a1[1];
  for (i = v66 + 1; i != v67; ++i)
  {
    *((_BYTE *)&v103.__r_.__value_.__s + 23) = 2;
    strcpy((char *)&v103, ", ");
    std::to_string(&v102, *i);
    if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v69 = &v102;
    else
      v69 = (std::string *)v102.__r_.__value_.__r.__words[0];
    if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v70 = HIBYTE(v102.__r_.__value_.__r.__words[2]);
    else
      v70 = v102.__r_.__value_.__l.__size_;
    v71 = std::string::append(&v103, (const std::string::value_type *)v69, v70);
    v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
    v104.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v104.__r_.__value_.__l.__data_ = v72;
    v71->__r_.__value_.__l.__size_ = 0;
    v71->__r_.__value_.__r.__words[2] = 0;
    v71->__r_.__value_.__r.__words[0] = 0;
    if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v73 = &v104;
    else
      v73 = (std::string *)v104.__r_.__value_.__r.__words[0];
    if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v74 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
    else
      v74 = v104.__r_.__value_.__l.__size_;
    std::string::append(a2, (const std::string::value_type *)v73, v74);
    if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v104.__r_.__value_.__l.__data_);
    if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v102.__r_.__value_.__l.__data_);
    if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v103.__r_.__value_.__l.__data_);
  }
}

void sub_10039D450(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(char *)(v2 - 73) < 0)
    operator delete(*(void **)(v2 - 96));
  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(a1);
}

void sub_10039D794(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v6;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  int v25;
  const std::string::value_type *v26;
  std::string::size_type v27;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  std::string *v34;
  __int128 v35;
  std::string *v36;
  __int128 v37;
  std::string *v38;
  __int128 v39;
  std::string *v40;
  __int128 v41;
  std::string *v42;
  __int128 v43;
  const std::string::value_type *p_p;
  std::string::size_type v45;
  std::string *v46;
  __int128 v47;
  std::string *v48;
  __int128 v49;
  std::string *v50;
  __int128 v51;
  std::string *v52;
  __int128 v53;
  std::string *v54;
  __int128 v55;
  std::string *v56;
  std::string::size_type size;
  CFStringRef v58;
  int v59;
  unsigned int data;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int v65;
  NSObject *v66;
  const char *v67;
  char *v68;
  void *v69[2];
  char v70;
  std::string::value_type __s[8];
  char v72;
  std::string v73;
  std::string v74;
  std::string v75;
  std::string v76;
  std::string v77;
  std::string v78;
  std::string v79;
  std::string v80;
  std::string v81;
  std::string v82;
  std::string v83;
  std::string v84;
  std::string v85;
  std::string v86;
  __int128 __p;
  int64_t v88;

  if (*(_BYTE *)(a1 + 8))
  {
    v6 = a2;
    if (*a2 != a2[1])
    {
      *((_BYTE *)&v80.__r_.__value_.__s + 23) = 7;
      strcpy((char *)&v80, " WHERE ");
      v10 = std::string::append(&v80, "RecordingTimestamp");
      v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      v12 = std::string::append(&v81, " > ");
      v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v82.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      v14 = *(char *)(a3 + 23);
      if (v14 >= 0)
        v15 = (const std::string::value_type *)a3;
      else
        v15 = *(const std::string::value_type **)a3;
      if (v14 >= 0)
        v16 = *(unsigned __int8 *)(a3 + 23);
      else
        v16 = *(_QWORD *)(a3 + 8);
      v17 = std::string::append(&v82, v15, v16);
      v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      v83.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v83.__r_.__value_.__l.__data_ = v18;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      v19 = std::string::append(&v83, " AND ");
      v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
      v84.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v20;
      v19->__r_.__value_.__l.__size_ = 0;
      v19->__r_.__value_.__r.__words[2] = 0;
      v19->__r_.__value_.__r.__words[0] = 0;
      v21 = std::string::append(&v84, "RecordingTimestamp");
      v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
      v85.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v22;
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      v23 = std::string::append(&v85, "<= ");
      v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
      v86.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v24;
      v23->__r_.__value_.__l.__size_ = 0;
      v23->__r_.__value_.__r.__words[2] = 0;
      v23->__r_.__value_.__r.__words[0] = 0;
      v25 = *(char *)(a4 + 23);
      if (v25 >= 0)
        v26 = (const std::string::value_type *)a4;
      else
        v26 = *(const std::string::value_type **)a4;
      if (v25 >= 0)
        v27 = *(unsigned __int8 *)(a4 + 23);
      else
        v27 = *(_QWORD *)(a4 + 8);
      v28 = std::string::append(&v86, v26, v27);
      v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v88 = v28->__r_.__value_.__r.__words[2];
      __p = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v86.__r_.__value_.__l.__data_);
      if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v85.__r_.__value_.__l.__data_);
      if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v84.__r_.__value_.__l.__data_);
      if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v83.__r_.__value_.__l.__data_);
      if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v82.__r_.__value_.__l.__data_);
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v81.__r_.__value_.__l.__data_);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
      sub_10039CC54((int **)v6, &v86);
      *((_BYTE *)&v73.__r_.__value_.__s + 23) = 1;
      LOWORD(v73.__r_.__value_.__l.__data_) = 41;
      v30 = std::string::append(&v73, " AND ");
      v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v74.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      v32 = std::string::append(&v74, "RecordingUUID");
      v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
      v75.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v33;
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      v34 = std::string::append(&v75, " IN (");
      v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      v36 = std::string::append(&v76, "SELECT ");
      v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      v38 = std::string::append(&v77, "RecordingUUID");
      v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
      v78.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v39;
      v38->__r_.__value_.__l.__size_ = 0;
      v38->__r_.__value_.__r.__words[2] = 0;
      v38->__r_.__value_.__r.__words[0] = 0;
      v72 = 6;
      strcpy(__s, " FROM ");
      v40 = std::string::append(&v78, __s, 6uLL);
      v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
      v79.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v41;
      v40->__r_.__value_.__l.__size_ = 0;
      v40->__r_.__value_.__r.__words[2] = 0;
      v40->__r_.__value_.__r.__words[0] = 0;
      v42 = std::string::append(&v79, "MicroLocationRecordingEvents");
      v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
      v80.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v43;
      v42->__r_.__value_.__l.__size_ = 0;
      v42->__r_.__value_.__r.__words[2] = 0;
      v42->__r_.__value_.__r.__words[0] = 0;
      if (v88 >= 0)
        p_p = (const std::string::value_type *)&__p;
      else
        p_p = (const std::string::value_type *)__p;
      if (v88 >= 0)
        v45 = HIBYTE(v88);
      else
        v45 = *((_QWORD *)&__p + 1);
      v46 = std::string::append(&v80, p_p, v45);
      v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v47;
      v46->__r_.__value_.__l.__size_ = 0;
      v46->__r_.__value_.__r.__words[2] = 0;
      v46->__r_.__value_.__r.__words[0] = 0;
      v48 = std::string::append(&v81, "))");
      v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
      v82.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v49;
      v48->__r_.__value_.__l.__size_ = 0;
      v48->__r_.__value_.__r.__words[2] = 0;
      v48->__r_.__value_.__r.__words[0] = 0;
      v70 = 10;
      strcpy((char *)v69, " GROUP BY ");
      v50 = std::string::append(&v82, (const std::string::value_type *)v69, 0xAuLL);
      v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v83.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v83.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      v52 = std::string::append(&v83, "RecordingUUID");
      v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
      v84.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v53;
      v52->__r_.__value_.__l.__size_ = 0;
      v52->__r_.__value_.__r.__words[2] = 0;
      v52->__r_.__value_.__r.__words[0] = 0;
      v54 = std::string::append(&v84, ")");
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      v85.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v55;
      v54->__r_.__value_.__l.__size_ = 0;
      v54->__r_.__value_.__r.__words[2] = 0;
      v54->__r_.__value_.__r.__words[0] = 0;
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v56 = &v85;
      else
        v56 = (std::string *)v85.__r_.__value_.__r.__words[0];
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v85.__r_.__value_.__r.__words[2]);
      else
        size = v85.__r_.__value_.__l.__size_;
      std::string::append(&v86, (const std::string::value_type *)v56, size);
      if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v85.__r_.__value_.__l.__data_);
      if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v84.__r_.__value_.__l.__data_);
      if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v83.__r_.__value_.__l.__data_);
      if (v70 < 0)
        operator delete(v69[0]);
      if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v82.__r_.__value_.__l.__data_);
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v81.__r_.__value_.__l.__data_);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v79.__r_.__value_.__l.__data_);
      if (v72 < 0)
        operator delete(*(void **)__s);
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v78.__r_.__value_.__l.__data_);
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v77.__r_.__value_.__l.__data_);
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v76.__r_.__value_.__l.__data_);
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v75.__r_.__value_.__l.__data_);
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v74.__r_.__value_.__l.__data_);
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v73.__r_.__value_.__l.__data_);
      sub_1001E4804(&v85);
      LODWORD(v84.__r_.__value_.__l.__data_) = 0;
      v58 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsDatabaseSelectionLimit", 0x8000100u, kCFAllocatorNull);
      v59 = sub_1000B1180((uint64_t)v85.__r_.__value_.__l.__data_, (uint64_t)v58, &v84);
      CFRelease(v58);
      data = v84.__r_.__value_.__l.__data_;
      v61 = (std::__shared_weak_count *)v85.__r_.__value_.__l.__size_;
      if (v85.__r_.__value_.__l.__size_)
      {
        v62 = (unint64_t *)(v85.__r_.__value_.__l.__size_ + 8);
        do
          v63 = __ldaxr(v62);
        while (__stlxr(v63 - 1, v62));
        if (!v63)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
      }
      v64 = *(_QWORD *)a1;
      sub_1015A2E04(&v85, "RecordingTimestamp");
      if (v59)
        v65 = data;
      else
        v65 = 5000;
      sub_100399D4C(v64, (uint64_t)&v86, v65, (uint64_t)&v85);
    }
    sub_1018F8B8C();
    __break(1u);
  }
  else
  {
    v6 = &qword_1022A0000;
    if (qword_1022A00F0 == -1)
      goto LABEL_81;
  }
  dispatch_once(&qword_1022A00F0, &stru_102132770);
LABEL_81:
  v66 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&__p, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (v6[30] != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v86.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &__p, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all", &v86, 2);
    v68 = (char *)v67;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsWithScanMeasurementsBetweenTimes(const std::vector<CLMicroLocationProto::EventType> &, const std::string &, const std::string &)", "%s\n", v67);
    if (v68 != (char *)&__p)
      free(v68);
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
}

void sub_10039DF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a70;
  void *a72;
  char a73;

  if (a70 < 0)
    operator delete(__p);
  if (a73 < 0)
    operator delete(a72);
  if (SLOBYTE(STACK[0x217]) < 0)
    operator delete((void *)STACK[0x200]);
  _Unwind_Resume(a1);
}

uint64_t sub_10039E1F8(uint64_t a1, unint64_t a2)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  std::string::size_type size;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  char *v32;
  NSObject *v33;
  const char *v35;
  std::string *v36;
  std::string v37;
  std::string v38;
  std::string v39;
  std::string v40;
  std::string v41;
  std::string v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  void *__p[2];
  int64_t v51;
  std::string v52;

  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v38.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v38, "DELETE FROM ");
    v4 = std::string::append(&v38, "MicroLocationRecordingEvents");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    v6 = std::string::append(&v39, " WHERE ");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v40, "ReceivedTimestamp");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v41, " IN (");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v42, "SELECT ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v43, "ReceivedTimestamp");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v44, " FROM ");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v45, "MicroLocationRecordingEvents");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = std::string::append(&v46, " ORDER BY ");
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    v22 = std::string::append(&v47, "ReceivedTimestamp");
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    v24 = std::string::append(&v48, " LIMIT ");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v37, a2);
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &v37;
    else
      v26 = (std::string *)v37.__r_.__value_.__r.__words[0];
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
    else
      size = v37.__r_.__value_.__l.__size_;
    v28 = std::string::append(&v49, (const std::string::value_type *)v26, size);
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = std::string::append(&v52, ")");
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v51 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v41.__r_.__value_.__l.__data_);
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v40.__r_.__value_.__l.__data_);
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v39.__r_.__value_.__l.__data_);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v38.__r_.__value_.__l.__data_);
    if (v51 >= 0)
      v32 = (char *)__p;
    else
      v32 = (char *)__p[0];
    sub_1000CDA68(*(_QWORD *)a1, v32);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v33 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v52.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v52, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v52, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(__p[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v52, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't deleteOldestRows", __p, 2);
    v36 = (std::string *)v35;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationRecordingEventsTable::deleteOldestRows(uint64_t)", "%s\n", v35);
    if (v36 != &v52)
      free(v36);
  }
  return 0;
}

void sub_10039E870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  char a66;
  uint64_t v66;

  if (v66)
    (*(void (**)(uint64_t))(*(_QWORD *)v66 + 8))(v66);
  if (a66 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_10039EA00(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, unsigned int a5@<W4>, _QWORD *a6@<X8>)
{
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  void **v34;
  std::string::size_type v35;
  std::string *v36;
  __int128 v37;
  uint64_t v38;
  NSObject *v39;
  const char *v40;
  char *v41;
  void *v42[2];
  char v43;
  void *__p[2];
  unsigned __int8 v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  std::string v52;
  std::string v53;
  std::string v54;
  __int128 buf;
  std::string::size_type v56;

  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v46.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&v46, " WHERE ");
    v12 = std::string::append(&v46, "RecordingTimestamp");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v47, " > ");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = *(char *)(a2 + 23);
    if (v16 >= 0)
      v17 = (const std::string::value_type *)a2;
    else
      v17 = *(const std::string::value_type **)a2;
    if (v16 >= 0)
      v18 = *(unsigned __int8 *)(a2 + 23);
    else
      v18 = *(_QWORD *)(a2 + 8);
    v19 = std::string::append(&v48, v17, v18);
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    v21 = std::string::append(&v49, " AND ");
    v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    v23 = std::string::append(&v50, "RecordingTimestamp");
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v51, "<= ");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    v27 = *(char *)(a3 + 23);
    if (v27 >= 0)
      v28 = (const std::string::value_type *)a3;
    else
      v28 = *(const std::string::value_type **)a3;
    if (v27 >= 0)
      v29 = *(unsigned __int8 *)(a3 + 23);
    else
      v29 = *(_QWORD *)(a3 + 8);
    v30 = std::string::append(&v52, v28, v29);
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    v32 = std::string::append(&v53, " AND ");
    v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v54.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    sub_1015A2E04(v42, "RtLoiGroupId");
    sub_1002AAC84((const void **)v42, a4, (uint64_t)__p);
    if ((v45 & 0x80u) == 0)
      v34 = __p;
    else
      v34 = (void **)__p[0];
    if ((v45 & 0x80u) == 0)
      v35 = v45;
    else
      v35 = (std::string::size_type)__p[1];
    v36 = std::string::append(&v54, (const std::string::value_type *)v34, v35);
    v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    v56 = v36->__r_.__value_.__r.__words[2];
    buf = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    if ((char)v45 < 0)
      operator delete(__p[0]);
    if (v43 < 0)
      operator delete(v42[0]);
    if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v54.__r_.__value_.__l.__data_);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v53.__r_.__value_.__l.__data_);
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    v38 = *(_QWORD *)a1;
    std::operator+<char>(&v54, "MicroLocationRecordingEvents", &buf);
    sub_1015A2E04(&v53, "RecordingTimestamp");
    sub_100399D4C(v38, (uint64_t)&v54, a5, (uint64_t)&v53);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v39 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v54.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all", &v54, 2);
    v41 = (char *)v40;
    sub_100512490("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsBetweenTimesAtLoi(const std::string &, const std::string &, const boost::uuids::uuid &, uint32_t)", "%s\n", v40);
    if (v41 != (char *)&buf)
      free(v41);
  }
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
}

void sub_10039EEC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10039F004()
{
  JUMPOUT(0x10039EFCCLL);
}

void sub_10039F00C()
{
  JUMPOUT(0x10039EFDCLL);
}

void sub_10039F014()
{
  JUMPOUT(0x10039EFECLL);
}

void sub_10039F01C(uint64_t *a1)
{
  std::string *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  char *v8;
  std::string v9;
  void *__p[2];
  int64_t v11;
  std::string v12;
  std::string v13;

  *((_BYTE *)&v9.__r_.__value_.__s + 23) = 11;
  strcpy((char *)&v9, "SELECT MIN(");
  v2 = std::string::append(&v9, "RecordingTimestamp");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  v4 = std::string::append(&v13, ") FROM ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v12.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v12.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  v6 = std::string::append(&v12, "MicroLocationRecordingEvents");
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v11 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v12.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v9.__r_.__value_.__l.__data_);
  if (v11 >= 0)
    v8 = (char *)__p;
  else
    v8 = (char *)__p[0];
  sub_1000CDA68(*a1, v8);
}

#error "10039F2C8: call analysis failed (funcsize=74)"

void sub_10039F3A0(uint64_t *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string *v6;
  __int128 v7;
  uint64_t v8;
  void *v9[2];
  char v10;
  void *__p[2];
  unsigned __int8 v12;
  std::string v13;
  void *v14[2];
  std::string::size_type v15;
  std::string v16;
  _QWORD v17[2];

  *((_BYTE *)&v13.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v13, " WHERE ");
  v2 = std::string::insert(&v13, 0, "MicroLocationRecordingEvents");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_1015A2E04(v9, "RtLoiGroupId");
  v17[0] = 0;
  v17[1] = 0;
  sub_1002AAC84((const void **)v9, v17, (uint64_t)__p);
  if ((v12 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v12 & 0x80u) == 0)
    v5 = v12;
  else
    v5 = (std::string::size_type)__p[1];
  v6 = std::string::append(&v16, (const std::string::value_type *)v4, v5);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v15 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)v14 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((char)v12 < 0)
    operator delete(__p[0]);
  if (v10 < 0)
    operator delete(v9[0]);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v16.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v8 = *a1;
  sub_1015A2E04(&v16, "RecordingTimestamp");
  sub_100399D4C(v8, (uint64_t)v14, 1u, (uint64_t)&v16);
}

void sub_10039F5C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  uint64_t v53;

  if (a53 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  if (*(_BYTE *)(v53 + 64) && *(char *)(v53 + 63) < 0)
    operator delete(*(void **)(v53 + 40));
  a40 = &a27;
  sub_100270C6C((void ***)&a40);
  if (a38 < 0)
    operator delete(a33);
  _Unwind_Resume(a1);
}

uint64_t sub_10039F6B4(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *(unsigned __int8 *)(a1 + 64);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  v7 = a1 + 40;
  if (v4)
  {
    if (*(char *)(a1 + 63) < 0)
      operator delete(*(void **)v7);
    v8 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v7 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v7 = v8;
    *(_BYTE *)(a2 + 63) = 0;
    *(_BYTE *)(a2 + 40) = 0;
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v7 = v9;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a1 + 64) = 1;
  }
  return a1;
}

void sub_10039F748(uint64_t a1@<X0>, _BYTE *a2@<X1>, _BYTE *a3@<X8>)
{
  std::string *v6;
  __int128 v7;
  void **v8;
  std::string::size_type v9;
  std::string *v10;
  __int128 v11;
  uint64_t v12;
  NSObject *v13;
  const char *v14;
  uint8_t *v15;
  void *v16[2];
  char v17;
  void *__p[2];
  unsigned __int8 v19;
  std::string v20;
  std::string v21;
  uint8_t buf[16];
  std::string::size_type v23;

  if (*(_BYTE *)(a1 + 8))
  {
    sub_1015A2E04(&v20, "MicroLocationRecordingEvents");
    v6 = std::string::append(&v20, " WHERE ");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v21.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    sub_1015A2E04(v16, "RtLoiGroupId");
    sub_1002AAC84((const void **)v16, a2, (uint64_t)__p);
    if ((v19 & 0x80u) == 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    if ((v19 & 0x80u) == 0)
      v9 = v19;
    else
      v9 = (std::string::size_type)__p[1];
    v10 = std::string::append(&v21, (const std::string::value_type *)v8, v9);
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v23 = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)buf = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    if ((char)v19 < 0)
      operator delete(__p[0]);
    if (v17 < 0)
      operator delete(v16[0]);
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v21.__r_.__value_.__l.__data_);
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v20.__r_.__value_.__l.__data_);
    v12 = *(_QWORD *)a1;
    sub_1015A2E04(&v20, "RecordingTimestamp");
    sub_100399D4C(v12, (uint64_t)buf, 1u, (uint64_t)&v20);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132770);
  v13 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get most recent recording for supplied LOI Group Id", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132770);
    LOWORD(v21.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't get most recent recording for supplied LOI Group Id", &v21, 2);
    v15 = (uint8_t *)v14;
    sub_100512490("Generic", 1, 0, 2, "std::optional<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::getMostRecentRecordingForLoiGroupId(const boost::uuids::uuid &)", "%s\n", v14);
    if (v15 != buf)
      free(v15);
  }
  *a3 = 0;
  a3[240] = 0;
}

void sub_10039FA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void **a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  a24 = &a30;
  sub_100270C6C(&a24);
  if (a42 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_10039FAF4(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10039FB20@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  const void *v6;
  uint64_t v7;
  int v8;
  wireless_diagnostics::google::protobuf::MessageLite *v9;
  uint64_t result;
  std::runtime_error *exception;
  std::string v12;

  v6 = sqlite3_column_blob(a1, a2);
  v7 = sqlite3_column_bytes(a1, a2);
  if (!v6)
  {
    sub_1018F8DD8(v7);
LABEL_5:
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_1015A2E04(&v12, "Unable to parse protobuf");
    std::runtime_error::runtime_error(exception, &v12);
    exception->__vftable = (std::runtime_error_vtbl *)&off_10212AC58;
  }
  v8 = v7;
  sub_1002BBFAC(a3);
  result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(v9, v6, v8);
  if ((result & 1) == 0)
    goto LABEL_5;
  return result;
}

void sub_10039FBE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  void *v16;
  int v17;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_1002DF2E0(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t sub_10039FC30(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, double *a5, int *a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  unint64_t v10;
  unint64_t v11;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v23;
  void *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t *v28;

  v10 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 4);
  v11 = v10 + 1;
  if (v10 + 1 > 0x111111111111111)
    sub_100259694();
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4) > v11)
    v11 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4);
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - *a1) >> 4) >= 0x88888888888888)
    v19 = 0x111111111111111;
  else
    v19 = v11;
  v28 = a1 + 2;
  if (v19)
  {
    v23 = v10;
    v20 = (char *)sub_100273E28((uint64_t)(a1 + 2), v19);
    v10 = v23;
  }
  else
  {
    v20 = 0;
  }
  v24 = v20;
  v25 = &v20[240 * v10];
  v27 = &v20[240 * v19];
  sub_10039FD90((uint64_t)(a1 + 2), (uint64_t)v25, a2, a3, a4, a5, a6, a7, a8, a9);
  v26 = v25 + 240;
  sub_100273DB4(a1, &v24);
  v21 = a1[1];
  sub_100273FB8(&v24);
  return v21;
}

void sub_10039FD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_100273FB8((void **)va);
  _Unwind_Resume(a1);
}

void sub_10039FD90(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, double *a6, int *a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  int v18;
  void *__p[2];
  uint64_t v20;
  void *__dst[2];
  uint64_t v22;

  v14 = *a3;
  v15 = a3[1];
  v16 = *a4;
  if (*(char *)(a5 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a5, *(_QWORD *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a5;
    v22 = *(_QWORD *)(a5 + 16);
  }
  v17 = *a6;
  v18 = *a7;
  if (*(char *)(a9 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a9, *(_QWORD *)(a9 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a9;
    v20 = *(_QWORD *)(a9 + 16);
  }
  sub_100398EF0(a2, v14, v15, (__int128 *)__dst, v18, v16, v17, a8, (uint64_t)__p, a8, *a10, a10[1]);
  if (SHIBYTE(v20) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_10039FE98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10039FECC(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v4;
  if (*((char *)a2 + 47) < 0)
  {
    sub_100115CE4((_BYTE *)(a1 + 24), *((void **)a2 + 3), *((_QWORD *)a2 + 4));
  }
  else
  {
    v5 = *(__int128 *)((char *)a2 + 24);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v5;
  }
  v6 = a2[3];
  *(_OWORD *)(a1 + 60) = *(__int128 *)((char *)a2 + 60);
  *(_OWORD *)(a1 + 48) = v6;
  sub_1002DF194(a1 + 80);
  v7 = *(__int128 *)((char *)a2 + 216);
  *(_BYTE *)(a1 + 232) = *((_BYTE *)a2 + 232);
  *(_OWORD *)(a1 + 216) = v7;
  *(_BYTE *)(a1 + 240) = 1;
  return a1;
}

void sub_10039FF6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 47) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

double sub_10039FF88@<D0>(std::string *a1@<X8>)
{
  double result;
  std::string v3;

  memset(&v3, 0, sizeof(v3));
  sub_10039FFE8(&v3);
  result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_10039FFCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10039FFE8(std::string *a1)
{
  sub_100324B54(a1);
  sub_1003A0044(a1);
  sub_100295794(a1);
  sub_100269D8C(a1);
  sub_10038DEA0(a1);
  sub_10038DF7C(a1);
  sub_100269E68(a1);
  sub_1003A0120(a1);
  return sub_10029594C(a1);
}

uint64_t sub_1003A0044(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "RecordingTimestamp");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003A00EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003A0120(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "TriggerUUID");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003A01C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_1003A01FC@<D0>(std::string *a1@<X8>)
{
  uint64_t v2;
  std::string *v3;
  __int128 v4;
  void **v5;
  std::string::size_type v6;
  double result;
  std::string v8;
  void *__p[2];
  int64_t v10;
  std::string v11;

  sub_1015A2E04(&v11, "VALUES (");
  v2 = 9;
  do
  {
    if (v2 == 9)
    {
      *((_BYTE *)&v8.__r_.__value_.__s + 23) = 0;
      v8.__r_.__value_.__s.__data_[0] = 0;
    }
    else
    {
      *((_BYTE *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
    }
    v3 = std::string::append(&v8, "?");
    v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v10 = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    if (v10 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    if (v10 >= 0)
      v6 = HIBYTE(v10);
    else
      v6 = (std::string::size_type)__p[1];
    std::string::append(&v11, (const std::string::value_type *)v5, v6);
    if (SHIBYTE(v10) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    --v2;
  }
  while (v2);
  std::string::append(&v11, ")");
  result = *(double *)&v11.__r_.__value_.__l.__data_;
  *a1 = v11;
  return result;
}

void sub_1003A0304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1003A0350(std::string **a1, uint64_t a2)
{
  std::string *v4;
  __int128 v5;
  std::string *p_p;
  std::string::size_type size;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  std::bad_cast *v14;
  std::string __p;
  std::string v16;
  std::string v17;
  std::string v18;
  __int128 v19;
  int64_t v20;
  std::bad_cast v21;
  _UNKNOWN **v22;
  _UNKNOWN **v23;

  *((_BYTE *)&v16.__r_.__value_.__s + 23) = 1;
  LOWORD(v16.__r_.__value_.__l.__data_) = 44;
  v4 = std::string::append(&v16, "\"");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v17.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  memset(&__p, 0, sizeof(__p));
  if ((sub_10026A098(a2, &__p) & 1) == 0)
  {
    v14 = std::bad_cast::bad_cast(&v21);
    v21.__vftable = (std::bad_cast_vtbl *)&off_10212A508;
    sub_10026A9C8((uint64_t)v14);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v8 = std::string::append(&v17, (const std::string::value_type *)p_p, size);
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  v10 = std::string::append(&v18, "\"");
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v20 = v10->__r_.__value_.__r.__words[2];
  v19 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (v20 >= 0)
    v12 = (const std::string::value_type *)&v19;
  else
    v12 = (const std::string::value_type *)v19;
  if (v20 >= 0)
    v13 = HIBYTE(v20);
  else
    v13 = *((_QWORD *)&v19 + 1);
  std::string::append(*a1, v12, v13);
  if (SHIBYTE(v20) < 0)
    operator delete((void *)v19);
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v18.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v16.__r_.__value_.__l.__data_);
}

void sub_1003A04D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (*(char *)(v33 - 41) < 0)
    operator delete(*(void **)(v33 - 64));
  if (a33 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  if (a26 < 0)
    operator delete(a21);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003A055C()
{
  std::string *v0;
  __int128 v1;
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  void *__p[2];
  unsigned __int8 v16;
  void *v17[2];
  unsigned __int8 v18;
  std::string v19;
  std::string v20;
  std::string v21;
  std::string v22;
  std::string v23;

  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101B980A0;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  v0 = std::string::append(&v19, "MicroLocationRecordingEvents");
  v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  v2 = std::string::append(&v20, " (");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_100398CC0((uint64_t)v17);
  if ((v18 & 0x80u) == 0)
    v4 = v17;
  else
    v4 = (void **)v17[0];
  if ((v18 & 0x80u) == 0)
    v5 = v18;
  else
    v5 = (std::string::size_type)v17[1];
  v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  v8 = std::string::append(&v22, ") ");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_100398D88((uint64_t)__p);
  if ((v16 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v16 & 0x80u) == 0)
    v11 = v16;
  else
    v11 = (std::string::size_type)__p[1];
  v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_1023011D8 = *((_QWORD *)&v12->__r_.__value_.__l + 2);
  xmmword_1023011C8 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
  if ((char)v18 < 0)
    operator delete(v17[0]);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1023011C8, (void *)&_mh_execute_header);
}

void sub_1003A0748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v40 - 25) < 0)
    operator delete(*(void **)(v40 - 48));
  if (*(char *)(v40 - 57) < 0)
    operator delete(*(void **)(v40 - 80));
  if (a21 < 0)
    operator delete(a16);
  if (a40 < 0)
    operator delete(a35);
  if (a33 < 0)
    operator delete(a28);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1003A07F4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v6;
  uint64_t v7;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  const char *v20;
  void **v21;
  uint64_t v22[3];
  unint64_t v23[2];
  uint64_t v24;
  __int128 v25;
  char v26;
  _OWORD v27[8];
  char v28;
  void *__p;
  void *v30;
  _OWORD *v31;
  char v32;

  *a1 = off_102132980;
  a1[1] = 0;
  v6 = a1 + 1;
  a1[2] = 0;
  a1[3] = 0;
  v7 = *(_QWORD *)(a3 + 24);
  if (!v7)
    sub_10025FD1C();
  (*(void (**)(unint64_t *__return_ptr))(*(_QWORD *)v7 + 48))(v23);
  v11 = *(_OWORD **)a4;
  v12 = *(_OWORD **)(a4 + 8);
  if (*(_OWORD **)a4 != v12)
  {
    while (1)
    {
      v13 = *(_QWORD *)(a2 + 24);
      if (!v13)
        sub_10025FD1C();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v13 + 48))(v13))
        break;
      v27[0] = *v11;
      v14 = operator new(0x10uLL);
      v30 = v14 + 1;
      v31 = v14 + 1;
      *v14 = v27[0];
      __p = v14;
      sub_100280A50(a5, (uint64_t)&__p, v22);
      if (__p)
      {
        v30 = __p;
        operator delete(__p);
      }
      sub_100296414(v22, (uint64_t)v11);
      v15 = v11 + 5;
      sub_1002DF194(v27);
      v28 = 1;
      v25 = *(v15 - 5);
      v26 = 1;
      sub_100391278(v22, (uint64_t)v27, (uint64_t)&v25, v23, &__p);
      if (v28)
        sub_1002DF2E0(v27);
      if (v32)
      {
        v16 = a1[2];
        if (v16 >= a1[3])
        {
          v17 = sub_1003A0DF8(v6, (uint64_t)&__p);
        }
        else
        {
          sub_1002747C4((uint64_t)(a1 + 3), a1[2], (uint64_t)&__p);
          v17 = v16 + 192;
        }
        a1[2] = v17;
      }
      sub_1002967B0((uint64_t)&__p);
      __p = v22;
      sub_100296984((void ***)&__p);
      v11 = v15 + 10;
      if (v11 == v12)
        goto LABEL_21;
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329B8);
    v18 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Data source cancelled learning", (uint8_t *)&__p, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(&__p, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021329B8);
      LOWORD(v27[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, &__p, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Data source cancelled learning", v27, 2);
      v21 = (void **)v20;
      sub_100512490("Generic", 1, 0, 2, "CLMicroLocationFingerprintStdVectorSource::CLMicroLocationFingerprintStdVectorSource(CLMicroLocationFingerprintDataSources::ShouldCancelFunction, CLMicroLocationFingerprintDataSources::ConfigurationLoaderFunction, const std::vector<CLMicroLocationRecordingEventsTable::Entry> &, CLMicroLocationDatabase &)", "%s\n", v20);
      if (v21 != &__p)
        free(v21);
    }
  }
LABEL_21:
  sub_100067AC4((uint64_t)&v24);
  return a1;
}

void sub_1003A0B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,void *__p,uint64_t a44)
{
  sub_100067AC4((uint64_t)&a16);
  sub_100274134((void ***)&__p);
  _Unwind_Resume(a1);
}

unint64_t sub_1003A0BB0(uint64_t a1)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 6);
}

uint64_t sub_1003A0BCC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 8) + 192 * a2;
}

uint64_t sub_1003A0BDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;

  v4 = a1[3];
  v3 = (uint64_t)(a1 + 3);
  v5 = *(_QWORD *)(v3 - 8);
  if (v5 >= v4)
  {
    result = sub_100274488(a1 + 1, a2);
  }
  else
  {
    sub_100274594(v3, *(_QWORD *)(v3 - 8), a2);
    result = v5 + 192;
    a1[2] = v5 + 192;
  }
  a1[2] = result;
  return result;
}

void sub_1003A0C30(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1003A0C38(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = off_102132980;
  v3 = (void **)(a1 + 8);
  sub_100274134(&v3);
  return a1;
}

void sub_1003A0C7C(uint64_t a1)
{
  void **v1;

  *(_QWORD *)a1 = off_102132980;
  v1 = (void **)(a1 + 8);
  sub_100274134(&v1);
  operator delete();
}

void sub_1003A0CD4(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

char *sub_1003A0D00(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x155555555555556)
    sub_100259694();
  result = (char *)sub_1002746CC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[192 * v4];
  return result;
}

uint64_t sub_1003A0D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_100274594(a1, v4, v6);
      v6 += 192;
      v4 = v12 + 192;
      v12 += 192;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_10034F460((uint64_t)v9);
  return v4;
}

void sub_1003A0DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10034F460((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A0DF8(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  void *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t *v14;

  v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 6);
  v4 = v3 + 1;
  if (v3 + 1 > 0x155555555555555)
    sub_100259694();
  if (0x5555555555555556 * ((a1[2] - *a1) >> 6) > v4)
    v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 6);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 6) >= 0xAAAAAAAAAAAAAALL)
    v6 = 0x155555555555555;
  else
    v6 = v4;
  v14 = a1 + 2;
  if (v6)
    v7 = (char *)sub_1002746CC((uint64_t)(a1 + 2), v6);
  else
    v7 = 0;
  v10 = v7;
  v11 = &v7[192 * v3];
  v13 = &v7[192 * v6];
  sub_1002747C4((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  v12 = v11 + 192;
  sub_100274658(a1, &v10);
  v8 = a1[1];
  sub_1002748CC(&v10);
  return v8;
}

void sub_1003A0EEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1002748CC((void **)va);
  _Unwind_Resume(a1);
}

void sub_1003A0F00(uint64_t a1, uint64_t a2, __int128 *a3)
{
  NSObject *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const char *v12;
  const char *v13;
  NSObject *v14;
  uint32_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  int v24;
  int v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  uint64_t *v31;
  __int16 v32;
  _QWORD *v33;
  __int128 v34;
  char v35;

  if (*(_QWORD *)(a1 + 24) < *(_QWORD *)(a1 + 88))
  {
    sub_100357708(a2, (uint64_t)&v34);
    if (v35)
    {
      sub_1003A1E6C((_QWORD *)a1, &v34, a3, (__int128 *)(a1 + 48), (_OWORD *)(a1 + 72));
      goto LABEL_31;
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329D8);
    v16 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
    {
      v17 = *(char *)(a2 + 23) >= 0 ? a2 : *(_QWORD *)a2;
      v24 = 68289283;
      v25 = 0;
      v26 = 2082;
      v27 = "";
      v28 = 2081;
      v29 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Rapport, rapport monitor buffered bad IDS UUID\", \"IDS\":%{private, location:escape_only}s}", (uint8_t *)&v24, 0x1Cu);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021329D8);
    }
    v18 = qword_1022A00F8;
    if (!os_signpost_enabled((os_log_t)qword_1022A00F8))
      goto LABEL_31;
    if (*(char *)(a2 + 23) >= 0)
      v19 = a2;
    else
      v19 = *(_QWORD *)a2;
    v24 = 68289283;
    v25 = 0;
    v26 = 2082;
    v27 = "";
    v28 = 2081;
    v29 = v19;
    v12 = "Rapport, rapport monitor buffered bad IDS UUID";
    v13 = "{\"msg%{public}.0s\":\"Rapport, rapport monitor buffered bad IDS UUID\", \"IDS\":%{private, location:escape_only}s}";
    v14 = v18;
    v15 = 28;
LABEL_30:
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, v12, v13, (uint8_t *)&v24, v15);
LABEL_31:
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329D8);
    goto LABEL_33;
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021329D8);
  v6 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
  {
    v7 = *(char *)(a2 + 23) >= 0 ? a2 : *(_QWORD *)a2;
    v8 = *(uint64_t **)(a1 + 24);
    v24 = 68289539;
    v25 = 0;
    v26 = 2082;
    v27 = "";
    v28 = 2081;
    v29 = v7;
    v30 = 2049;
    v31 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Rapport, rapport monitor exceeded max entries\", \"IDS\":%{private, location:escape_only}s, \"Size\":%{private}lu}", (uint8_t *)&v24, 0x26u);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329D8);
  }
  v9 = qword_1022A00F8;
  if (os_signpost_enabled((os_log_t)qword_1022A00F8))
  {
    if (*(char *)(a2 + 23) >= 0)
      v10 = a2;
    else
      v10 = *(_QWORD *)a2;
    v11 = *(uint64_t **)(a1 + 24);
    v24 = 68289539;
    v25 = 0;
    v26 = 2082;
    v27 = "";
    v28 = 2081;
    v29 = v10;
    v30 = 2049;
    v31 = v11;
    v12 = "Rapport, rapport monitor exceeded max entries";
    v13 = "{\"msg%{public}.0s\":\"Rapport, rapport monitor exceeded max entries\", \"IDS\":%{private, location:escape_onl"
          "y}s, \"Size\":%{private}lu}";
    v14 = v9;
    v15 = 38;
    goto LABEL_30;
  }
LABEL_33:
  v20 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0)
      v21 = a2;
    else
      v21 = *(_QWORD *)a2;
    v22 = *(uint64_t **)a3;
    if (*((char *)a3 + 23) >= 0)
      v22 = (uint64_t *)a3;
    v23 = (_QWORD *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0)
      v23 = (_QWORD *)*v23;
    v24 = 68289795;
    v25 = 0;
    v26 = 2082;
    v27 = "";
    v28 = 2081;
    v29 = v21;
    v30 = 2081;
    v31 = v22;
    v32 = 2082;
    v33 = v23;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Rapport, buffered a found device\", \"Device IDS identifier\":%{private, location:escape_only}s, \"Device name\":%{private, location:escape_only}s, \"CoreRoutine LOI Type\":%{public, location:escape_only}s}", (uint8_t *)&v24, 0x30u);
  }
}

void sub_1003A130C(uint64_t a1@<X0>, double *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *i;
  uint64_t v12;
  uint64_t v13;
  uint64_t ***v14;
  NSObject *v15;
  NSObject *v16;
  _OWORD *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  std::string *v21;
  uint64_t *v22;
  uint64_t v23;
  std::string *p_p;
  std::bad_cast *v25;
  uint64_t *v26;
  std::string __p;
  uint64_t v28;
  uint64_t v29;
  std::string v30;
  std::string v31;
  uint8_t buf[8];
  _BYTE v33[10];
  __int16 v34;
  unint64_t v35;
  __int16 v36;
  std::string *v37;
  __int16 v38;
  uint64_t *v39;
  __int16 v40;
  std::string *v41;
  __int16 v42;
  uint64_t v43;
  __int128 v44;
  _UNKNOWN **v45;

  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_DWORD *)(a5 + 32) = 1065353216;
  for (i = *(_QWORD **)(a1 + 16); i; i = (_QWORD *)*i)
  {
    if (i[10] == *(_QWORD *)a4 && i[11] == *(_QWORD *)(a4 + 8))
      sub_1003A2228(a5, (uint64_t)(i + 2), (uint64_t)(i + 2));
  }
  std::to_string(&v31, *a2);
  std::to_string(&v30, 1.79769313e308);
  sub_100283048(*(_QWORD *)(a1 + 40), (uint64_t)&v31, (uint64_t)&v30, (__int128 *)a4, &v28);
  if (*(_OWORD *)a4 != 0)
  {
    v12 = *(_QWORD *)(a1 + 40);
    v44 = 0uLL;
    sub_100283048(v12, (uint64_t)&v31, (uint64_t)&v30, &v44, buf);
    sub_1003A2504(&v28, v29, *(uint64_t *)buf, *(uint64_t *)v33, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)v33 - *(_QWORD *)buf) >> 4));
    *(_QWORD *)&v44 = buf;
    sub_1002955A4((void ***)&v44);
  }
  v26 = a3;
  v13 = v29;
  if (v28 != v29)
  {
    v14 = (uint64_t ***)(v28 + 64);
    do
    {
      sub_10035777C(*(v14 - 3), &v44);
      if ((_BYTE)v45)
      {
        sub_1003A1E6C((_QWORD *)a5, &v44, (__int128 *)*(v14 - 2), (__int128 *)(v14 - 7), v14);
      }
      else
      {
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021329D8);
        v15 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 68289026;
          *(_DWORD *)&buf[4] = 0;
          *(_WORD *)v33 = 2082;
          *(_QWORD *)&v33[2] = "";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Rapport, rapport monitor read bad IDS UUID from DB\"}", buf, 0x12u);
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_1021329D8);
        }
        v16 = qword_1022A00F8;
        if (os_signpost_enabled((os_log_t)qword_1022A00F8))
        {
          *(_DWORD *)buf = 68289026;
          *(_DWORD *)&buf[4] = 0;
          *(_WORD *)v33 = 2082;
          *(_QWORD *)&v33[2] = "";
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Rapport, rapport monitor read bad IDS UUID from DB", "{\"msg%{public}.0s\":\"Rapport, rapport monitor read bad IDS UUID from DB\"}", buf, 0x12u);
        }
      }
      v17 = v14 + 2;
      v14 += 10;
    }
    while (v17 != (_OWORD *)v13);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021329D8);
  v18 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v20 = v28;
    v19 = v29;
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v21 = &v31;
    else
      v21 = (std::string *)v31.__r_.__value_.__r.__words[0];
    if (*((char *)v26 + 23) >= 0)
      v22 = v26;
    else
      v22 = (uint64_t *)*v26;
    memset(&__p, 0, sizeof(__p));
    if ((sub_10026A098(a4, &__p) & 1) == 0)
    {
      v25 = std::bad_cast::bad_cast((std::bad_cast *)&v44);
      *(_QWORD *)&v44 = &off_10212A508;
      sub_10026A9C8((uint64_t)v25);
    }
    v23 = *(_QWORD *)(a5 + 24);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 68290306;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)v33 = 2082;
    *(_QWORD *)&v33[2] = "";
    v34 = 2050;
    v35 = 0xCCCCCCCCCCCCCCCDLL * ((v19 - v20) >> 4);
    v36 = 2082;
    v37 = v21;
    v38 = 2082;
    v39 = v22;
    v40 = 2082;
    v41 = p_p;
    v42 = 2050;
    v43 = v23;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"RapportMonitor getDevicesSinceLearnEventTimeAtLoi\", \"Backup Entries\":%{public}lu, \"From time\":%{public, location:escape_only}s, \"LOI type\":%{public, location:escape_only}s, \"LOI id\":%{public, location:escape_only}s, \"Total number of devices\":%{public}lu}", buf, 0x44u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(_QWORD *)buf = &v28;
  sub_1002955A4((void ***)buf);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v31.__r_.__value_.__l.__data_);
}

void sub_1003A1754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,char *a34)
{
  uint64_t v34;
  uint64_t v35;

  std::bad_cast::~bad_cast((std::bad_cast *)(v35 - 128));
  if (a18 < 0)
    operator delete(__p);
  a34 = &a19;
  sub_1002955A4((void ***)&a34);
  if (a27 < 0)
    operator delete(a22);
  if (a33 < 0)
    operator delete(a28);
  sub_1003859AC(v34);
  _Unwind_Resume(a1);
}

void sub_1003A17FC(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8_t buf[8];
  _BYTE v10[20];
  int v11;

  v6 = 0;
  v7 = 0;
  v8 = 0;
  v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    do
    {
      sub_1002BC12C(buf);
      v11 |= 1u;
      if (*(_UNKNOWN **)v10 == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::assign(*(std::string **)v10, (const std::string::value_type *)v1 + 16, 0x10uLL);
      v11 |= 2u;
      if (*(_UNKNOWN **)&v10[8] == &wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::operator=(*(std::string **)&v10[8], (const std::string *)(v1 + 4));
      v3 = v7;
      if (v7 >= v8)
      {
        v4 = sub_1003A2C3C(&v6, (uint64_t)(v1 + 7), (uint64_t)buf, (_OWORD *)v1 + 5);
      }
      else
      {
        sub_1003A2D60((uint64_t)&v8, v7, (uint64_t)(v1 + 7), (uint64_t)buf, (_OWORD *)v1 + 5);
        v4 = v3 + 80;
      }
      v7 = v4;
      sub_1002E5B48((wireless_diagnostics::google::protobuf::MessageLite *)buf);
      v1 = (uint64_t *)*v1;
    }
    while (v1);
    if (v7 != v6)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021329D8);
      v5 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v10 = 2082;
        *(_QWORD *)&v10[2] = "";
        *(_WORD *)&v10[10] = 2050;
        *(_QWORD *)&v10[12] = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - v6) >> 4);
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Rapport, back up rapport monitor data to DB\", \"Num Entries\":%{public}lu}", buf, 0x1Cu);
      }
      sub_1003A1A78(*(_QWORD *)(a1 + 40));
    }
  }
  *(_QWORD *)buf = &v6;
  sub_1002955A4((void ***)buf);
}

void sub_1003A1A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)&a10;
  sub_1002955A4(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A1A78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint8_t buf[1640];

  if (sub_1000CC4F4(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 256);
    if (!v2)
      operator new();
    v3 = sub_100292ED4(v2);
    sub_1003A2E08(a1);
    return v3;
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329D8);
    v5 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021329D8);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Can't insert because the database is invalid", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationRapportTable::Entry]", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    return 0;
  }
}

void sub_1003A1CA8()
{
  operator delete();
}

std::string *sub_1003A1CD4(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 2, a2);
}

__n128 sub_1003A1CDC(uint64_t a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *(__n128 *)(a1 + 72) = *a2;
  return result;
}

unint64_t sub_1003A1CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0;
  v3 = 0;
  do
    v3 ^= (v3 << 6) + 2654435769u + (v3 >> 2) + *(unsigned __int8 *)(a2 + v2++);
  while (v2 != 16);
  v4 = 0;
  v5 = 0;
  do
    v5 ^= (v5 << 6) + 2654435769u + (v5 >> 2) + *(unsigned __int8 *)(a2 + 64 + v4++);
  while (v4 != 16);
  return 0xC6A4A7935BD1E995
       * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * v5) ^ ((0xC6A4A7935BD1E995 * v5) >> 47))) ^ v3)
       + 3864292196u;
}

BOOL sub_1003A1D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const void **v11;
  unsigned __int8 *v12;

  if (*(_QWORD *)a2 != *(_QWORD *)a3 || *(_QWORD *)(a2 + 8) != *(_QWORD *)(a3 + 8))
    return 0;
  v6 = *(unsigned __int8 *)(a2 + 39);
  v7 = *(_QWORD *)(a2 + 24);
  if ((v6 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(a2 + 39);
  else
    v8 = *(_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a3 + 39);
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *(_QWORD *)(a3 + 24);
  if (v8 != v9)
    return 0;
  v11 = (const void **)(a2 + 16);
  if (v10 >= 0)
    v12 = (unsigned __int8 *)(a3 + 16);
  else
    v12 = *(unsigned __int8 **)(a3 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (!memcmp(*v11, v12, v7))
      return *(_QWORD *)(a2 + 64) == *(_QWORD *)(a3 + 64) && *(_QWORD *)(a2 + 72) == *(_QWORD *)(a3 + 72);
    return 0;
  }
  if ((_DWORD)v6)
  {
    while (*(unsigned __int8 *)v11 == *v12)
    {
      v11 = (const void **)((char *)v11 + 1);
      ++v12;
      if (!--v6)
        return *(_QWORD *)(a2 + 64) == *(_QWORD *)(a3 + 64) && *(_QWORD *)(a2 + 72) == *(_QWORD *)(a3 + 72);
    }
    return 0;
  }
  return *(_QWORD *)(a2 + 64) == *(_QWORD *)(a3 + 64) && *(_QWORD *)(a2 + 72) == *(_QWORD *)(a3 + 72);
}

void sub_1003A1E40(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

_QWORD *sub_1003A1E6C(_QWORD *a1, _OWORD *a2, __int128 *a3, __int128 *a4, _OWORD *a5)
{
  _QWORD *v6;
  char v7;
  _QWORD *v9[3];

  sub_1003A1EE0((uint64_t)a1, a2, a3, a4, a5, (uint64_t)v9);
  v6 = sub_1003A1F84(a1, v9[0]);
  if ((v7 & 1) != 0)
    v9[0] = 0;
  sub_1003A21E4((uint64_t)v9, 0);
  return v6;
}

void sub_1003A1EC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003A21E4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unint64_t sub_1003A1EE0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t result;

  v11 = a1 + 16;
  v12 = operator new(0x60uLL);
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v11;
  *(_BYTE *)(a6 + 16) = 0;
  *v12 = 0;
  v12[1] = 0;
  v13 = sub_1003A1FF0((uint64_t)(v12 + 2), a2, a3, a4, a5);
  *(_BYTE *)(a6 + 16) = 1;
  result = sub_1003A1CE8(v13, v13);
  v12[1] = result;
  return result;
}

void sub_1003A1F6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1003A21E4(v1, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_1003A1F84(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v2 = a2;
  v4 = (uint64_t)(a2 + 2);
  v5 = sub_1003A1CE8((uint64_t)a1, (uint64_t)(a2 + 2));
  v2[1] = v5;
  v6 = sub_1003A20A0((uint64_t)a1, v5, v4);
  if (v6)
    return v6;
  sub_1003665AC(a1, v2);
  return v2;
}

uint64_t sub_1003A1FF0(uint64_t a1, _OWORD *a2, __int128 *a3, __int128 *a4, _OWORD *a5)
{
  __int128 v8;
  _BYTE *v9;
  __int128 v10;

  *(_OWORD *)a1 = *a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100115CE4((_BYTE *)(a1 + 16), *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v8 = *a3;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(a1 + 16) = v8;
  }
  v9 = (_BYTE *)(a1 + 40);
  if (*((char *)a4 + 23) < 0)
  {
    sub_100115CE4(v9, *(void **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v10 = *a4;
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a4 + 2);
    *(_OWORD *)v9 = v10;
  }
  *(_OWORD *)(a1 + 64) = *a5;
  return a1;
}

void sub_1003A2084(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1003A20A0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint8x8_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v7 = (uint8x8_t)vcnt_s8((int8x8_t)v4);
    v7.i16[0] = vaddlv_u8(v7);
    v8 = v7.u32[0];
    if (v7.u32[0] > 1uLL)
      v9 = v4 <= a2 ? a2 % v4 : a2;
    else
      v9 = (v4 - 1) & a2;
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == a2)
          {
            LOBYTE(a1) = sub_1003A1D74(a1, (uint64_t)(v11 + 2), a3);
            if ((a1 & 1) != 0)
              return v11;
          }
          else
          {
            if (v8 > 1)
            {
              if (v12 >= v4)
                v12 %= v4;
            }
            else
            {
              v12 &= v4 - 1;
            }
            if (v12 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v13 = (float)(unint64_t)(*(_QWORD *)(v3 + 24) + 1);
  v14 = *(float *)(v3 + 32);
  if (!v4 || (float)(v14 * (float)v4) < v13)
  {
    v15 = 1;
    if (v4 >= 3)
      v15 = (v4 & (v4 - 1)) != 0;
    v16 = v15 | (2 * v4);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_10012E444(v3, v18);
  }
  return 0;
}

void sub_1003A21E4(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_100385A20((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

_QWORD *sub_1003A2228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD v24[3];

  v7 = sub_1003A1CE8(a1, a2);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v9)
        v3 = v7 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v7;
    }
    v12 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v12)
    {
      v13 = (_QWORD *)*v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v8)
          {
            LOBYTE(v7) = sub_1003A1D74(v7, (uint64_t)(v13 + 2), a2);
            if ((v7 & 1) != 0)
              return v13;
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9)
                v14 %= v9;
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v3)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  sub_1003A2490(a1, v8, a3, (uint64_t)v24);
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_10012E444(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v21)
  {
    *(_QWORD *)v24[0] = *v21;
    *v21 = v24[0];
  }
  else
  {
    *(_QWORD *)v24[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v24[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v24[0])
    {
      v22 = *(_QWORD *)(*(_QWORD *)v24[0] + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v22 >= v9)
          v22 %= v9;
      }
      else
      {
        v22 &= v9 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v22) = v24[0];
    }
  }
  v13 = (_QWORD *)v24[0];
  v24[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_1003A21E4((uint64_t)v24, 0);
  return v13;
}

void sub_1003A2478(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003A21E4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void sub_1003A2490(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;

  v7 = a1 + 16;
  v8 = operator new(0x60uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  sub_100385FFC(v7, (uint64_t)(v8 + 2), a3);
  *(_BYTE *)(a4 + 16) = 1;
}

void sub_1003A24EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1003A21E4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A2504(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v27[2];
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = a2;
  if (a5 >= 1)
  {
    v7 = a3;
    v11 = a1[2];
    v9 = (uint64_t)(a1 + 2);
    v10 = v11;
    v12 = *(_QWORD *)(v9 - 8);
    if ((uint64_t)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v11 - v12) >> 4)) >= a5)
    {
      v20 = v12 - a2;
      if ((uint64_t)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v12 - a2) >> 4)) >= a5)
      {
        v21 = a3 + 80 * a5;
      }
      else
      {
        v21 = a3 + 16 * ((uint64_t)(v12 - a2) >> 4);
        a1[1] = sub_1003A284C(v9, v21, a4, *(_QWORD *)(v9 - 8));
        if (v20 < 1)
          return v5;
      }
      sub_1003A26F4((uint64_t)a1, v5, v12, v5 + 80 * a5);
      sub_1003A2AA8((uint64_t)v27, v7, v21, v5);
    }
    else
    {
      v13 = *a1;
      v14 = a5 - 0x3333333333333333 * ((uint64_t)(v12 - *a1) >> 4);
      if (v14 > 0x333333333333333)
        sub_100259694();
      v15 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - v13) >> 4);
      v16 = 0xCCCCCCCCCCCCCCCDLL * ((v10 - v13) >> 4);
      v17 = 2 * v16;
      if (2 * v16 <= v14)
        v17 = v14;
      if (v16 >= 0x199999999999999)
        v18 = 0x333333333333333;
      else
        v18 = v17;
      v30 = v9;
      if (v18)
        v19 = (char *)sub_1002952D4(v9, v18);
      else
        v19 = 0;
      v22 = &v19[80 * v15];
      v27[0] = v19;
      v27[1] = v22;
      v28 = v22;
      v29 = &v19[80 * v18];
      v23 = 5 * a5;
      v24 = &v22[80 * a5];
      v25 = 16 * v23;
      do
      {
        sub_1003A28F4(v30, (uint64_t)v22, v7);
        v22 += 80;
        v7 += 80;
        v25 -= 80;
      }
      while (v25);
      v28 = v24;
      v5 = sub_1003A279C(a1, (uint64_t)v27, v5);
      sub_100295530(v27);
    }
  }
  return v5;
}

void sub_1003A26C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003A26F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v10;
  char v12;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = a2 + v6 - a4;
  v8 = v6;
  if (v7 < a3)
  {
    v10 = a2 + v6 - a4;
    v8 = *(_QWORD *)(a1 + 8);
    do
    {
      sub_1003A28F4(a1 + 16, v8, v10);
      v10 += 80;
      v8 += 80;
    }
    while (v10 < a3);
  }
  *(_QWORD *)(a1 + 8) = v8;
  return sub_1003A29F4((uint64_t)&v12, a2, v7, v6);
}

void sub_1003A2794(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1003A279C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = (uint64_t)(a1 + 2);
  sub_100295318((uint64_t)(a1 + 2), a3, a3, *a1, *a1, v6, v6);
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = sub_1003A2B40(v7, a3, a1[1], *(__n128 **)(a2 + 16));
  v9 = *a1;
  *a1 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  v10 = a1[1];
  a1[1] = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v10;
  v11 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v6;
}

uint64_t sub_1003A284C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_1003A28F4(a1, v4, v6);
      v6 += 80;
      v4 = v12 + 80;
      v12 += 80;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_1003A2970((uint64_t)v9);
  return v4;
}

void sub_1003A28E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1003A2970((uint64_t)&a9);
  _Unwind_Resume(a1);
}

__n128 sub_1003A28F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  __n128 result;

  *(_QWORD *)a2 = *(_QWORD *)a3;
  v5 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
  *(_OWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 8) = 0;
  sub_1002E5B44(a2 + 32, a3 + 32);
  result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

void sub_1003A2954(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003A2970(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1003A29A4((uint64_t *)a1);
  return a1;
}

void sub_1003A29A4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 80;
      sub_1002954F4(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_1003A29F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  __int128 v11;

  if (a3 != a2)
  {
    v7 = 0;
    do
    {
      v8 = a3 + v7;
      v9 = a4 + v7;
      *(_QWORD *)(a4 + v7 - 80) = *(_QWORD *)(a3 + v7 - 80);
      v10 = (void **)(a4 + v7 - 72);
      if (*(char *)(a4 + v7 - 49) < 0)
        operator delete(*v10);
      v11 = *(_OWORD *)(v8 - 72);
      *(_QWORD *)(a4 + v7 - 56) = *(_QWORD *)(v8 - 56);
      *(_OWORD *)v10 = v11;
      *(_BYTE *)(v8 - 49) = 0;
      *(_BYTE *)(v8 - 72) = 0;
      sub_1002E5FC0(v9 - 48, v8 - 48);
      *(_OWORD *)(v9 - 16) = *(_OWORD *)(v8 - 16);
      v7 -= 80;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

uint64_t sub_1003A2AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void **v7;
  __int128 v8;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      *(_QWORD *)a4 = *(_QWORD *)v5;
      v7 = (void **)(a4 + 8);
      if (*(char *)(a4 + 31) < 0)
        operator delete(*v7);
      v8 = *(_OWORD *)(v5 + 8);
      *(_QWORD *)(a4 + 24) = *(_QWORD *)(v5 + 24);
      *(_OWORD *)v7 = v8;
      *(_BYTE *)(v5 + 31) = 0;
      *(_BYTE *)(v5 + 8) = 0;
      sub_1002E5FC0(a4 + 32, v5 + 32);
      *(_OWORD *)(a4 + 64) = *(_OWORD *)(v5 + 64);
      a4 += 80;
      v5 += 80;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

__n128 *sub_1003A2B40(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  __n128 *v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  __n128 *v11;
  __n128 *v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_1002953E0(a1, v4, v6);
      v6 += 80;
      v4 = v12 + 5;
      v12 += 5;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_1003A2970((uint64_t)v9);
  return v4;
}

void sub_1003A2BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1003A2970((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003A2BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1003859E4(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

uint64_t sub_1003A2C3C(uint64_t *a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  void *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t *v18;

  v5 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 4);
  v6 = v5 + 1;
  if (v5 + 1 > 0x333333333333333)
    sub_100259694();
  if (0x999999999999999ALL * ((a1[2] - *a1) >> 4) > v6)
    v6 = 0x999999999999999ALL * ((a1[2] - *a1) >> 4);
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 4) >= 0x199999999999999)
    v10 = 0x333333333333333;
  else
    v10 = v6;
  v18 = a1 + 2;
  if (v10)
    v11 = (char *)sub_1002952D4((uint64_t)(a1 + 2), v10);
  else
    v11 = 0;
  v14 = v11;
  v15 = &v11[80 * v5];
  v17 = &v11[80 * v10];
  sub_1003A2D60((uint64_t)(a1 + 2), (uint64_t)v15, a2, a3, a4);
  v16 = v15 + 80;
  sub_100295260(a1, &v14);
  v12 = a1[1];
  sub_100295530(&v14);
  return v12;
}

void sub_1003A2D4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100295530((void **)va);
  _Unwind_Resume(a1);
}

void sub_1003A2D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  CFAbsoluteTime Current;
  void *__p[2];
  uint64_t v10;

  if (*(char *)(a3 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v10 = *(_QWORD *)(a3 + 16);
  }
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_100292A5C(a2, (__int128 *)__p, a4, a5, &Current);
  if (SHIBYTE(v10) < 0)
    operator delete(__p[0]);
}

void sub_1003A2DEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003A2E08(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  uint64_t result;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  int v8;
  const char *v9;
  uint8_t buf[4];
  const char *v11;

  v2 = sub_10028F92C(a1);
  if (sub_1003A2FFC() > v2)
    return 1;
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021329D8);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v11 = "MicroLocationRapport";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329D8);
    v8 = 136446210;
    v9 = "MicroLocationRapport";
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", &v8, 12);
    v7 = (uint8_t *)v6;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationRapportTable]", "%s\n", v6);
    if (v7 != buf)
      free(v7);
  }
  result = sub_1002880B0(a1);
  if ((_DWORD)result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0)
      v5 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v5 = *(_QWORD *)(a1 + 160);
    sub_100053048(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_1003A2FFC()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRapportTableMaxRows", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 1000;
}

void sub_1003A30C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A30D8()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveAnchorsNumDaysToKeepEnabled", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 10;
}

void sub_1003A319C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A31B4()
{
  CFStringRef v0;
  int v1;
  unsigned int v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveAnchorsNumValidDaysForPurging", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 49;
}

void sub_1003A3278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A3290()
{
  CFStringRef v0;
  int v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  sub_1001E4804(&v8);
  v7 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveAnchorsMaxEntriesInAppearanceMap", 0x8000100u, kCFAllocatorNull);
  v1 = sub_1000B1180(v8, (uint64_t)v0, &v7);
  CFRelease(v0);
  v2 = v7;
  v3 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v1)
    return v2;
  else
    return 256;
}

void sub_1003A3354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A336C(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;

  v2 = sub_1003A30D8();
  v3 = sub_1003A31B4();
  v4 = sub_1003A3290();
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_DWORD *)(a1 + 40) = v2;
  *(_DWORD *)(a1 + 44) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  return a1;
}

uint64_t sub_1003A33C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t **v8;
  int v9;
  int v10;
  __int128 v11;
  NSObject *v12;
  const char *v13;
  uint8_t *v14;
  uint64_t v16;
  _WORD v17[8];
  uint8_t buf[16];
  __int128 v19;
  int v20;
  __int128 v21;

  sub_1003A336C(a1);
  v4 = *(int *)(a2 + 16);
  if ((_DWORD)v4)
  {
    v5 = 8 * v4;
    v6 = *(uint64_t **)(a2 + 8);
    do
    {
      v7 = *v6;
      v8 = *(uint64_t ***)(*v6 + 24);
      v9 = *((char *)v8 + 23);
      if (v9 < 0)
      {
        if (v8[1] != (uint64_t *)16)
        {
LABEL_9:
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_1021329F8);
          v12 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#Warning The protobuf Anchor Appearance struct does not have a valid device ID", buf, 2u);
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_1021329F8);
            v17[0] = 0;
            LODWORD(v16) = 2;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning The protobuf Anchor Appearance struct does not have a valid device ID", v17, v16);
            v14 = (uint8_t *)v13;
            sub_100512490("Generic", 1, 0, 2, "CLMicroLocationAnchorAppearanceMap::CLMicroLocationAnchorAppearanceMap(const CLMicroLocationProto::anchorAppearancesVector &)", "%s\n", v13);
            if (v14 != buf)
              free(v14);
          }
          goto LABEL_14;
        }
        v8 = (uint64_t **)*v8;
      }
      else if (v9 != 16)
      {
        goto LABEL_9;
      }
      v21 = *(_OWORD *)v8;
      v10 = *(_DWORD *)(v7 + 32);
      v11 = *(_OWORD *)(v7 + 8);
      *(_OWORD *)buf = v21;
      v19 = v11;
      v20 = v10;
      sub_100270960(a1, buf, (uint64_t)buf);
LABEL_14:
      ++v6;
      v5 -= 8;
    }
    while (v5);
  }
  return a1;
}

void sub_1003A35E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_100067AC4(v1);
  _Unwind_Resume(a1);
}

void sub_1003A3604(uint64_t a1@<X0>, int *a2@<X8>)
{
  uint64_t *i;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  std::string *v10;
  NSObject *v11;
  const char *v12;
  uint8_t *v13;
  uint64_t v14;
  _WORD v15[8];
  uint8_t buf[8];
  __int128 v17;
  int v18;
  int v19;

  sub_1002BB9C0((uint64_t)a2);
  for (i = *(uint64_t **)(a1 + 16); i; i = (uint64_t *)*i)
  {
    v5 = a2[5];
    v6 = a2[4];
    if ((int)v6 >= v5)
    {
      if (v5 == a2[6])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 2), v5 + 1);
        v5 = a2[5];
      }
      a2[5] = v5 + 1;
      sub_1003A602C();
    }
    v7 = *((_QWORD *)a2 + 1);
    a2[4] = v6 + 1;
    v8 = *(_QWORD *)(v7 + 8 * v6);
    if (v8)
    {
      sub_1002BB99C((uint64_t)buf);
      v17 = *((_OWORD *)i + 2);
      v9 = *((_DWORD *)i + 12);
      v19 |= 7u;
      v18 = v9;
      sub_1002C4E80(v8, (uint64_t)buf);
      sub_1002C4940((wireless_diagnostics::google::protobuf::MessageLite *)buf);
      *(_DWORD *)(v8 + 40) |= 8u;
      v10 = *(std::string **)(v8 + 24);
      if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::assign(v10, (const std::string::value_type *)i + 16, 0x10uLL);
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021329F8);
      v11 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Got nullptr from CLMicroLocationProto add_anchorappearances", buf, 2u);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        v15[0] = 0;
        LODWORD(v14) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Got nullptr from CLMicroLocationProto add_anchorappearances", v15, v14);
        v13 = (uint8_t *)v12;
        sub_100512490("Generic", 1, 0, 0, "CLMicroLocationProto::anchorAppearancesVector CLMicroLocationAnchorAppearanceMap::toProtobuf() const", "%s\n", v12);
        if (v13 != buf)
          free(v13);
      }
    }
  }
}

void sub_1003A38C0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_1002C5084(v1);
  _Unwind_Resume(a1);
}

double *sub_1003A38EC(_QWORD *a1, _QWORD *a2, double a3, double a4)
{
  double *result;
  __int128 v9;
  double v10;
  double v11;
  int v12;

  result = (double *)sub_1002710E8(a1, a2);
  if (result)
  {
    result[5] = a4;
    *((_DWORD *)result + 12) = 0;
  }
  else
  {
    v9 = *(_OWORD *)a2;
    v10 = a3;
    v11 = a4;
    v12 = 0;
    return (double *)sub_100270960((uint64_t)a1, &v9, (uint64_t)&v9);
  }
  return result;
}

void sub_1003A3984(uint64_t a1, _QWORD *a2, int a3, double a4, double a5)
{
  uint64_t v9;
  _QWORD *i;
  _QWORD *v11;
  _QWORD *j;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  double v34;
  BOOL v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *__p;
  _BYTE v41[20];
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  unint64_t v45;
  __int16 v46;
  unint64_t v47;
  __int16 v48;
  uint64_t v49;

  v9 = *(_QWORD *)(a1 + 24);
  if (a3)
  {
    for (i = *(_QWORD **)(a1 + 16); i; i = (_QWORD *)*i)
    {
      if (!sub_1002A1BA8(a2, i + 2))
      {
        __p = i + 2;
        v11 = sub_1003A61C4(a1, i + 2, (uint64_t)&unk_101B9EB60, (__int128 **)&__p);
        ++*((_DWORD *)v11 + 12);
      }
    }
  }
  for (j = (_QWORD *)a2[2]; j; j = (_QWORD *)*j)
    sub_1003A38EC((_QWORD *)a1, j + 2, a4, a5);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = v14;
  if (v13)
  {
    do
    {
      if (*(_DWORD *)(v13 + 48) >= *(_DWORD *)(a1 + 44))
        v13 = sub_1002123D8((_QWORD *)a1, (uint64_t *)v13);
      else
        v13 = *(_QWORD *)v13;
    }
    while (v13);
    v15 = *(_QWORD *)(a1 + 24);
  }
  v16 = *(_QWORD *)(a1 + 48);
  v17 = v15 - v16;
  if (v15 > v16 && v16 != 0)
  {
    __p = 0;
    *(_QWORD *)v41 = 0;
    *(_QWORD *)&v41[8] = 0;
    sub_1002FF5A4(&__p, v15);
    v19 = *(_QWORD **)(a1 + 16);
    if (v19)
    {
      v20 = *(char **)v41;
      do
      {
        if ((unint64_t)v20 >= *(_QWORD *)&v41[8])
        {
          v22 = (char *)__p;
          v23 = (v20 - (_BYTE *)__p) >> 3;
          v24 = v23 + 1;
          if ((unint64_t)(v23 + 1) >> 61)
            sub_100259694();
          v25 = *(_QWORD *)&v41[8] - (_QWORD)__p;
          if ((uint64_t)(*(_QWORD *)&v41[8] - (_QWORD)__p) >> 2 > v24)
            v24 = v25 >> 2;
          if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8)
            v26 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v26 = v24;
          if (v26)
          {
            v27 = (char *)sub_10025E6A0((uint64_t)&v41[8], v26);
            v22 = (char *)__p;
            v20 = *(char **)v41;
          }
          else
          {
            v27 = 0;
          }
          v28 = &v27[8 * v23];
          *(_QWORD *)v28 = v19[5];
          v21 = v28 + 8;
          while (v20 != v22)
          {
            v29 = *((_QWORD *)v20 - 1);
            v20 -= 8;
            *((_QWORD *)v28 - 1) = v29;
            v28 -= 8;
          }
          __p = v28;
          *(_QWORD *)v41 = v21;
          *(_QWORD *)&v41[8] = &v27[8 * v26];
          if (v22)
            operator delete(v22);
        }
        else
        {
          *(_QWORD *)v20 = v19[5];
          v21 = v20 + 8;
        }
        *(_QWORD *)v41 = v21;
        v19 = (_QWORD *)*v19;
        v20 = v21;
      }
      while (v19);
    }
    else
    {
      v21 = *(char **)v41;
    }
    v30 = 126 - 2 * __clz((v21 - (_BYTE *)__p) >> 3);
    if (v21 == __p)
      v31 = 0;
    else
      v31 = v30;
    sub_1003A6424((uint64_t)__p, (double *)v21, (uint64_t)&v39, v31, 1);
    v32 = __p;
    v33 = *(_QWORD *)(a1 + 16);
    if (!v33 || !v17)
      goto LABEL_54;
    v34 = *((double *)__p + *(_QWORD *)(a1 + 48) - 1);
    do
    {
      if (v34 < *(double *)(v33 + 40))
      {
        v33 = *(_QWORD *)v33;
      }
      else
      {
        v33 = sub_1002123D8((_QWORD *)a1, (uint64_t *)v33);
        --v17;
      }
      if (v33)
        v35 = v17 == 0;
      else
        v35 = 1;
    }
    while (!v35);
    v32 = __p;
    if (__p)
    {
LABEL_54:
      *(_QWORD *)v41 = v32;
      operator delete(v32);
    }
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_1021329F8);
  v36 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    v37 = a2[3];
    v38 = *(_QWORD *)(a1 + 24);
    __p = (void *)68290307;
    *(_WORD *)v41 = 2082;
    *(_QWORD *)&v41[2] = "";
    *(_WORD *)&v41[10] = 2049;
    *(_QWORD *)&v41[12] = v9;
    v42 = 2049;
    v43 = v37;
    v44 = 2049;
    v45 = v14;
    v46 = 2049;
    v47 = v15;
    v48 = 2049;
    v49 = v38;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"updateSeenAnchors\", \"Anchors map initial size\":%{private}lu, \"Received daily IDS ID set size\":%{private}lu, \"Size with new anchors\":%{private}lu, \"Size after purging\":%{private}lu, \"Size after max entries limit\":%{private}lu}", (uint8_t *)&__p, 0x44u);
  }
}

void sub_1003A3D14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003A3D40(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t result;
  double v7;
  double v8;
  __int128 v9;

  if ((*(_DWORD *)(a2 + 8) - 5) > 1)
    return 1;
  if (*(_DWORD *)(a2 + 40) != 1)
    return 0;
  v9 = *(_OWORD *)(a2 + 16);
  result = (uint64_t)sub_1002A1BA8((_QWORD *)a1, &v9);
  if (!result)
    return result;
  if ((v7 = *(double *)(result + 32), *(double *)a2 >= v7)
    && ((v8 = *(double *)(result + 40), v8 >= *(double *)a2) || *(_DWORD *)(result + 48) < *(_DWORD *)(a1 + 40))
    && *a3 >= v7
    && (v8 >= *a3 || *(_DWORD *)(result + 48) < *(_DWORD *)(a1 + 40)))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

BOOL sub_1003A3E30(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  _BOOL8 v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE *v21;
  _QWORD v22[2];
  _QWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  _QWORD *v26;
  _QWORD v27[3];
  _QWORD *v28;
  _BYTE v29[24];
  _BYTE *v30;
  _BYTE v31[24];
  _BYTE *v32;
  _BYTE v33[24];
  _BYTE *v34;

  v28 = v27;
  v26 = v25;
  v27[0] = off_102132A40;
  v23[0] = off_102132B60;
  v24 = v23;
  v25[0] = off_102132AD0;
  sub_100392C28((uint64_t)v29, (uint64_t)v27, (uint64_t)v25, (uint64_t)v23);
  v4 = v24;
  if (v24 == v23)
  {
    v5 = 4;
    v4 = v23;
  }
  else
  {
    if (!v24)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = v26;
  if (v26 == v25)
  {
    v7 = 4;
    v6 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = v28;
  if (v28 == v27)
  {
    v9 = 4;
    v8 = v27;
  }
  else
  {
    if (!v28)
      goto LABEL_16;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_16:
  v10 = *(unsigned int *)(a2 + 40);
  if ((_DWORD)v10 == -1)
    sub_100392428();
  v21 = v29;
  v22[0] = ((uint64_t (*)(_BYTE **, uint64_t))off_102132A18[v10])(&v21, a2 + 16);
  v22[1] = v11;
  v12 = (double *)sub_1002A1BA8((_QWORD *)a1, v22);
  v13 = v12 && *(double *)a2 >= v12[4] && (v12[5] >= *(double *)a2 || *((_DWORD *)v12 + 12) < *(_DWORD *)(a1 + 40));
  v14 = v34;
  if (v34 == v33)
  {
    v15 = 4;
    v14 = v33;
  }
  else
  {
    if (!v34)
      goto LABEL_28;
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
LABEL_28:
  v16 = v32;
  if (v32 == v31)
  {
    v17 = 4;
    v16 = v31;
  }
  else
  {
    if (!v32)
      goto LABEL_33;
    v17 = 5;
  }
  (*(void (**)(void))(*v16 + 8 * v17))();
LABEL_33:
  v18 = v30;
  if (v30 == v29)
  {
    v19 = 4;
    v18 = v29;
    goto LABEL_37;
  }
  if (v30)
  {
    v19 = 5;
LABEL_37:
    (*(void (**)(void))(*v18 + 8 * v19))();
  }
  return v13;
}

void sub_1003A407C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_10038F8F4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_1003A4128(void *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t v8;
  __int128 v9;
  char v10;

  v2 = *a2;
  v3 = a2[1];
  if (*a2 != v3)
  {
    v4 = (uint64_t)result;
    do
    {
      v5 = *(_DWORD *)(v2 + 104);
      if ((v5 & 0x40) != 0)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
          v8 = *(_QWORD *)(qword_102310298 + 48);
        if ((*(_BYTE *)(v8 + 64) & 0x80) == 0)
          goto LABEL_15;
        v7 = *(uint64_t ***)(v8 + 48);
      }
      else
      {
        if ((v5 & 0x80) == 0)
          goto LABEL_15;
        v6 = *(_QWORD *)(v2 + 88);
        if (!v6)
          v6 = *(_QWORD *)(qword_102310298 + 56);
        if ((*(_BYTE *)(v6 + 56) & 0x10) == 0)
          goto LABEL_15;
        v7 = *(uint64_t ***)(v6 + 32);
      }
      result = sub_10035777C(v7, &v9);
      if (v10)
        result = sub_100270E98(v4, &v9, &v9);
LABEL_15:
      v2 += 120;
    }
    while (v2 != v3);
  }
  return result;
}

uint64_t sub_1003A4208(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  NSObject *v13;
  __n128 v15;
  void *__p[2];
  uint64_t v17;
  uint8_t buf[32];
  int v19;
  __int128 v20;
  char v21;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  v3 = *(int *)(a2 + 16);
  if ((_DWORD)v3)
  {
    v4 = *(uint64_t **)(a2 + 8);
    v5 = &v4[v3];
    do
    {
      v6 = *v4;
      sub_10035777C(*(uint64_t ***)(*v4 + 32), &v20);
      if (v21)
      {
        memset(buf, 0, sizeof(buf));
        v19 = 1065353216;
        v7 = *(int *)(v6 + 16);
        if ((_DWORD)v7)
        {
          v8 = *(uint64_t **)(v6 + 8);
          v9 = 8 * v7;
          do
          {
            v10 = *v8;
            v11 = *(__int128 **)(*v8 + 24);
            if (*((char *)v11 + 23) < 0)
            {
              sub_100115CE4(__p, *(void **)v11, *((_QWORD *)v11 + 1));
            }
            else
            {
              v12 = *v11;
              v17 = *((_QWORD *)v11 + 2);
              *(_OWORD *)__p = v12;
            }
            v15 = 0uLL;
            v15 = *(__n128 *)(v10 + 8);
            sub_1003A70C8((uint64_t)buf, (unsigned __int8 *)__p, (uint64_t)__p, &v15);
            if (SHIBYTE(v17) < 0)
              operator delete(__p[0]);
            ++v8;
            v9 -= 8;
          }
          while (v9);
        }
        sub_1003A7400(a1, &v20, &v20, (uint64_t *)buf);
        sub_1002A1C94((uint64_t)buf);
      }
      else
      {
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        v13 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 68289026;
          *(_DWORD *)&buf[4] = 0;
          *(_WORD *)&buf[8] = 2082;
          *(_QWORD *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning, the protobuf ClusterAnchorValueStatistics struct doesn not have a valid cluster UUID\"}", buf, 0x12u);
        }
      }
      ++v4;
    }
    while (v4 != v5);
  }
  return a1;
}

void sub_1003A4400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  uint64_t v20;

  sub_1002A1C94((uint64_t)&a20);
  sub_100300B8C(v20);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A4444(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *i;
  _BOOL4 v22;
  NSObject *v23;
  void **v24;
  uint64_t v25;
  double v26;
  NSObject *v27;
  uint64_t *j;
  int v29;
  NSObject *v30;
  void **v31;
  double v32;
  double v33;
  double v34;
  _QWORD *v35;
  double v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t *v39;
  int v40;
  float *v41;
  float *v42;
  float v43;
  _QWORD *v44;
  unsigned __int8 *v45;
  _QWORD *v46;
  unsigned __int8 *v47;
  _QWORD *v48;
  unsigned __int8 *v49;
  _QWORD *v50;
  unsigned __int8 *v51;
  float v52;
  _QWORD *v53;
  unsigned __int8 *v54;
  _QWORD *v55;
  NSObject *v56;
  NSObject *v57;
  uint64_t v58;
  int v59;
  void **v60;
  void **v61;
  void **v62;
  void **v63;
  double v64;
  NSObject *v65;
  const char *v66;
  _QWORD *v67;
  unsigned __int8 *v68;
  _QWORD *v69;
  NSObject *v70;
  NSObject *v71;
  uint64_t v72;
  int v73;
  void **v74;
  void **v75;
  void **v76;
  void **v77;
  double v78;
  _QWORD *v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87[2];
  char v88;
  void *v89[2];
  char v90;
  void *__p[2];
  char v92;
  __int128 v93;
  __int128 v94;
  int v95;
  _OWORD v96[2];
  int v97;
  __int128 v98;
  __int128 v99;
  int v100;
  __int128 v101;
  __int128 v102;
  int v103;
  uint8_t buf[8];
  __int16 v105;
  const char *v106;
  __int16 v107;
  _BYTE v108[24];
  __int16 v109;
  double v110;
  __int16 v111;
  double v112;
  char v113;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (sub_1002EFEB8(a2))
  {
    v101 = 0u;
    v102 = 0u;
    v103 = 1065353216;
    v85 = a2;
    v5 = *(_QWORD **)(a2 + 272);
    if (v5)
    {
      v6 = 0;
      do
      {
        v98 = 0uLL;
        *(_QWORD *)&v99 = 0;
        v8 = (_QWORD *)v5[4];
        v7 = (_QWORD *)v5[5];
        while (v8 != v7)
        {
          sub_1002B76D8(a3, v8, buf);
          if (v113)
          {
            v9 = *((_QWORD *)&v98 + 1);
            if (*((_QWORD *)&v98 + 1) >= (unint64_t)v99)
            {
              v10 = sub_100274488((uint64_t *)&v98, (uint64_t)buf);
            }
            else
            {
              sub_100274594((uint64_t)&v99, *((uint64_t *)&v98 + 1), (uint64_t)buf);
              v10 = v9 + 192;
            }
            *((_QWORD *)&v98 + 1) = v10;
            ++v6;
          }
          sub_1002967B0((uint64_t)buf);
          v8 += 2;
        }
        *(_QWORD *)&v96[0] = v5 + 2;
        v11 = (__int128 *)(sub_1002741B8((uint64_t)&v101, v5 + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)v96) + 4);
        if (v11 != &v98)
          sub_1003A76A4((uint64_t)v11, v98, *((uint64_t *)&v98 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v98 + 1) - v98) >> 6));
        *(_QWORD *)buf = &v98;
        sub_100274134((void ***)buf);
        v5 = (_QWORD *)*v5;
      }
      while (v5);
    }
    else
    {
      v6 = 0;
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329F8);
    v13 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      v14 = *(_QWORD *)(v85 + 280);
      *(_DWORD *)buf = 68289538;
      *(_DWORD *)&buf[4] = 0;
      v105 = 2082;
      v106 = "";
      v107 = 2050;
      *(_QWORD *)v108 = v14;
      *(_WORD *)&v108[8] = 2050;
      *(_QWORD *)&v108[10] = v6;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationAnchorValueStatisticsMap, start analysis\", \"Num Clusters\":%{public}lu, \"Num Found Fingerprints\":%{public}lu}", buf, 0x26u);
      v15 = qword_1022A00F0;
    }
    else
    {
      v15 = -1;
    }
    v98 = 0u;
    v99 = 0u;
    v100 = 1065353216;
    memset(v96, 0, sizeof(v96));
    v97 = 1065353216;
    v93 = 0u;
    v94 = 0u;
    v95 = 1065353216;
    if (v15 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329F8);
    v16 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      v17 = *(_QWORD *)(v85 + 40);
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      v105 = 2082;
      v106 = "";
      v107 = 2050;
      *(_QWORD *)v108 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationAnchorValueStatisticsMap, anchorAppearanceMap\", \"Size\":%{public}lu}", buf, 0x1Cu);
    }
    v18 = (_QWORD *)v102;
    if ((_QWORD)v102)
    {
      do
      {
        v20 = v18[4];
        v19 = v18[5];
        v83 = v18;
        v84 = v19;
        while (v20 != v19)
        {
          for (i = *(uint64_t **)(v20 + 16); i; i = (uint64_t *)*i)
          {
            v22 = sub_1003A3E30(v85 + 16, (uint64_t)(i + 2));
            if (v22)
              sub_1002716E4((uint64_t)&v93, (uint64_t)(i + 2), (_OWORD *)i + 1);
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_1021329F8);
            v23 = qword_1022A00F8;
            if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
            {
              sub_10038F650((uint64_t)(i + 2));
              v24 = __p;
              if (v92 < 0)
                v24 = (void **)__p[0];
              v25 = *((unsigned int *)i + 6);
              v26 = *((float *)i + 7);
              *(_DWORD *)buf = 68290050;
              *(_DWORD *)&buf[4] = 0;
              v105 = 2082;
              v106 = "";
              v107 = 1026;
              *(_DWORD *)v108 = v22;
              *(_WORD *)&v108[4] = 2082;
              *(_QWORD *)&v108[6] = v24;
              *(_WORD *)&v108[14] = 2050;
              *(_QWORD *)&v108[16] = v25;
              v109 = 2050;
              v110 = v26;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"measurement\", \"Inserted to set\":%{public}hhd, \"DeviceId\":%{public, location:escape_only}s, \"DataType\":%{public}lu, \"Measured Value\":\"%{public}.3f\"}", buf, 0x36u);
              if (v92 < 0)
                operator delete(__p[0]);
            }
          }
          v20 += 192;
          v19 = v84;
        }
        v18 = (_QWORD *)*v83;
      }
      while (*v83);
    }
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329F8);
    v27 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&buf[4] = 0;
      v105 = 2082;
      v106 = "";
      v107 = 2050;
      *(_QWORD *)v108 = *((_QWORD *)&v94 + 1);
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationAnchorValueStatisticsMap, measurement set\", \"Size\":%{public}lu}", buf, 0x1Cu);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021329F8);
    }
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      for (j = (uint64_t *)v94; j; j = (uint64_t *)*j)
      {
        v29 = *((_DWORD *)j + 6);
        sub_10038F650((uint64_t)(j + 2));
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        v30 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
        {
          if (v92 >= 0)
            v31 = __p;
          else
            v31 = (void **)__p[0];
          *(_DWORD *)buf = 68289539;
          *(_DWORD *)&buf[4] = 0;
          v105 = 2082;
          v106 = "";
          v107 = 1026;
          *(_DWORD *)v108 = v29;
          *(_WORD *)&v108[4] = 2081;
          *(_QWORD *)&v108[6] = v31;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"unique valid anchor\", \"dataType\":%{public}d, \"deviceId\":%{private, location:escape_only}s}", buf, 0x22u);
        }
        if (v92 < 0)
          operator delete(__p[0]);
      }
    }
    sub_1003A53E4();
    v33 = v32;
    sub_1003A54C4();
    v35 = (_QWORD *)v102;
    if ((_QWORD)v102)
    {
      v36 = v34;
      while (1)
      {
        v37 = (_QWORD *)v35[4];
        v81 = v35;
        v82 = (_QWORD *)v35[5];
        if (v37 != v82)
          break;
LABEL_127:
        v35 = (_QWORD *)*v81;
        if (!*v81)
          goto LABEL_128;
      }
      v38 = v35 + 2;
      while (1)
      {
        v39 = (uint64_t *)v94;
        if ((_QWORD)v94)
          break;
LABEL_126:
        v37 += 24;
        if (v37 == v82)
          goto LABEL_127;
      }
      v86 = (uint64_t)(v37 + 5);
      while (1)
      {
        v40 = *((_DWORD *)v39 + 6);
        sub_10038F650((uint64_t)(v39 + 2));
        v41 = (float *)sub_100345964(v37, (uint64_t)(v39 + 2));
        v42 = v41;
        if (v41)
        {
          if (v40 == 6)
          {
            v52 = v41[7];
            *(_QWORD *)buf = v38;
            v53 = sub_1003A7980((uint64_t)v96, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
            *(_QWORD *)buf = __p;
            v54 = sub_1003A7C20((uint64_t)(v53 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
            *((double *)v54 + 5) = *((double *)v54 + 5) + v52;
            *(_QWORD *)buf = v38;
            v55 = sub_1003A7980((uint64_t)v96, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
            *(_QWORD *)buf = __p;
            v47 = sub_1003A7C20((uint64_t)(v55 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
LABEL_77:
            ++*((_DWORD *)v47 + 12);
LABEL_85:
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_1021329F8);
          }
          else
          {
            if (v40 == 5)
            {
              v43 = v41[7];
              *(_QWORD *)buf = v38;
              v44 = sub_1003A7980((uint64_t)&v98, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
              *(_QWORD *)buf = __p;
              v45 = sub_1003A7C20((uint64_t)(v44 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
              *((double *)v45 + 5) = *((double *)v45 + 5) + v43;
              *(_QWORD *)buf = v38;
              v46 = sub_1003A7980((uint64_t)&v98, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
              *(_QWORD *)buf = __p;
              v47 = sub_1003A7C20((uint64_t)(v46 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
              goto LABEL_77;
            }
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_1021329F8);
            v56 = qword_1022A00F8;
            if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 68289282;
              *(_DWORD *)&buf[4] = 0;
              v105 = 2082;
              v106 = "";
              v107 = 1026;
              *(_DWORD *)v108 = v40;
              _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
              if (qword_1022A00F0 != -1)
                dispatch_once(&qword_1022A00F0, &stru_1021329F8);
            }
            v57 = qword_1022A00F8;
            if (os_signpost_enabled((os_log_t)qword_1022A00F8))
            {
              *(_DWORD *)buf = 68289282;
              *(_DWORD *)&buf[4] = 0;
              v105 = 2082;
              v106 = "";
              v107 = 1026;
              *(_DWORD *)v108 = v40;
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v57, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calculatePerClusterPerAnchorValueStatistics, received unhandled data type", "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
              goto LABEL_85;
            }
          }
          v58 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
          {
            sub_10035A24C((uint64_t)v38, (uint64_t)v89);
            v59 = v90;
            v60 = (void **)v89[0];
            sub_10035A24C(v86, (uint64_t)v87);
            v61 = v89;
            if (v59 < 0)
              v61 = v60;
            v62 = v87;
            if (v88 < 0)
              v62 = (void **)v87[0];
            if (v92 >= 0)
              v63 = __p;
            else
              v63 = (void **)__p[0];
            v64 = v42[7];
            *(_DWORD *)buf = 68290307;
            *(_DWORD *)&buf[4] = 0;
            v105 = 2082;
            v106 = "";
            v107 = 2081;
            *(_QWORD *)v108 = v61;
            *(_WORD *)&v108[8] = 2082;
            *(_QWORD *)&v108[10] = v62;
            *(_WORD *)&v108[18] = 1026;
            *(_DWORD *)&v108[20] = v40;
            v109 = 2081;
            v110 = *(double *)&v63;
            v111 = 2049;
            v112 = v64;
            v65 = v58;
            v66 = "{\"msg%{public}.0s\":\"anchor statistics\", \"clusterId\":%{private, location:escape_only}s, \"fingerp"
                  "rint UUID\":%{public, location:escape_only}s, \"dataType\":%{public}d, \"deviceId\":%{private, locatio"
                  "n:escape_only}s, \"measured value\":\"%{private}f\"}";
LABEL_119:
            _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEBUG, v66, buf, 0x40u);
            if (v88 < 0)
              operator delete(v87[0]);
            if (v90 < 0)
              operator delete(v89[0]);
            goto LABEL_123;
          }
          goto LABEL_123;
        }
        if (v40 == 5)
          break;
        if (v40 == 6)
        {
          *(_QWORD *)buf = v38;
          v48 = sub_1003A7980((uint64_t)v96, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
          *(_QWORD *)buf = __p;
          v49 = sub_1003A7C20((uint64_t)(v48 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
          *((double *)v49 + 5) = v36 + *((double *)v49 + 5);
          *(_QWORD *)buf = v38;
          v50 = sub_1003A7980((uint64_t)v96, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
          *(_QWORD *)buf = __p;
          v51 = sub_1003A7C20((uint64_t)(v50 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
LABEL_97:
          ++*((_DWORD *)v51 + 12);
          goto LABEL_105;
        }
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        v70 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 68289282;
          *(_DWORD *)&buf[4] = 0;
          v105 = 2082;
          v106 = "";
          v107 = 1026;
          *(_DWORD *)v108 = v40;
          _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics (sentinel), received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        }
        v71 = qword_1022A00F8;
        if (os_signpost_enabled((os_log_t)qword_1022A00F8))
        {
          *(_DWORD *)buf = 68289282;
          *(_DWORD *)&buf[4] = 0;
          v105 = 2082;
          v106 = "";
          v107 = 1026;
          *(_DWORD *)v108 = v40;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v71, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calculatePerClusterPerAnchorValueStatistics (sentinel), received unhandled data type", "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics (sentinel), received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
LABEL_105:
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        }
        v72 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
        {
          sub_10035A24C((uint64_t)v38, (uint64_t)v89);
          v73 = v90;
          v74 = (void **)v89[0];
          sub_10035A24C(v86, (uint64_t)v87);
          v75 = v89;
          if (v73 < 0)
            v75 = v74;
          v76 = v87;
          if (v88 < 0)
            v76 = (void **)v87[0];
          if (v92 >= 0)
            v77 = __p;
          else
            v77 = (void **)__p[0];
          if (v40 == 5)
            v78 = v33;
          else
            v78 = v36;
          *(_DWORD *)buf = 68290307;
          *(_DWORD *)&buf[4] = 0;
          v105 = 2082;
          v106 = "";
          v107 = 2081;
          *(_QWORD *)v108 = v75;
          *(_WORD *)&v108[8] = 2082;
          *(_QWORD *)&v108[10] = v76;
          *(_WORD *)&v108[18] = 1026;
          *(_DWORD *)&v108[20] = v40;
          v109 = 2081;
          v110 = *(double *)&v77;
          v111 = 2049;
          v112 = v78;
          v65 = v72;
          v66 = "{\"msg%{public}.0s\":\"anchor statistics\", \"clusterId\":%{private, location:escape_only}s, \"fingerpri"
                "nt UUID\":%{public, location:escape_only}s, \"dataType\":%{public}d, \"deviceId\":%{private, location:es"
                "cape_only}s, \"setinel value\":\"%{private}f\"}";
          goto LABEL_119;
        }
LABEL_123:
        if (v92 < 0)
          operator delete(__p[0]);
        v39 = (uint64_t *)*v39;
        if (!v39)
          goto LABEL_126;
      }
      *(_QWORD *)buf = v38;
      v67 = sub_1003A7980((uint64_t)&v98, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
      *(_QWORD *)buf = __p;
      v68 = sub_1003A7C20((uint64_t)(v67 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
      *((double *)v68 + 5) = v33 + *((double *)v68 + 5);
      *(_QWORD *)buf = v38;
      v69 = sub_1003A7980((uint64_t)&v98, v38, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
      *(_QWORD *)buf = __p;
      v51 = sub_1003A7C20((uint64_t)(v69 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101B9EB60, (__int128 **)buf);
      goto LABEL_97;
    }
LABEL_128:
    sub_1003A55A0(a1, (uint64_t)&v98, 5);
    sub_1003A55A0(a1, (uint64_t)v96, 6);
    sub_100271390((uint64_t)&v93);
    sub_100300B8C((uint64_t)v96);
    sub_100300B8C((uint64_t)&v98);
    sub_1002740B0((uint64_t)&v101);
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_1021329F8);
    v12 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      v105 = 2082;
      v106 = "";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"most recent model is not valid, will not calculate per cluster per anchor statistics\"}", buf, 0x12u);
    }
  }
  return a1;
}

void sub_1003A5320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  sub_100271390((uint64_t)&a35);
  sub_100300B8C((uint64_t)&a41);
  sub_100300B8C((uint64_t)&a47);
  sub_1002740B0((uint64_t)&a53);
  sub_100300B8C(a10);
  _Unwind_Resume(a1);
}

void sub_1003A53E4()
{
  CFStringRef v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;

  sub_1001E4804(&v5);
  v4 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsClusterAnchorValueStatisticsBleRssiSentinelValue", 0x8000100u, kCFAllocatorNull);
  sub_1001FD9FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  v1 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1003A54AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003A54C4()
{
  CFStringRef v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;

  sub_1001E4804(&v5);
  v4 = 0;
  v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsClusterAnchorValueStatisticsUwbRangeSentinelValue", 0x8000100u, kCFAllocatorNull);
  sub_1001FD9FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  v1 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_1003A5588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003A55A0(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *i;
  uint64_t *j;
  double v7;
  int v8;
  double v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  double v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v21;
  NSObject *v22;
  uint8_t buf[8];
  __int16 v24;
  const char *v25;
  __int16 v26;
  int v27;

  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
  {
    for (j = (uint64_t *)i[6]; j; j = (uint64_t *)*j)
    {
      v7 = *((double *)j + 5);
      v8 = *((_DWORD *)j + 12);
      if (a3 == 6)
      {
        v15 = v7 / (double)v8;
        *(_QWORD *)buf = i + 2;
        v16 = sub_1003A7980(a1, i + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
        *(_QWORD *)buf = j + 2;
        *((double *)sub_100198D24((uint64_t)(v16 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101B9EB60, (__int128 **)buf)+ 6) = v15;
        *(_QWORD *)buf = i + 2;
        v17 = sub_1003A7980(a1, i + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
        *(_QWORD *)buf = j + 2;
        if (*((double *)sub_100198D24((uint64_t)(v17 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101B9EB60, (__int128 **)buf)+ 5) == 0.0)
        {
          sub_1003A53E4();
          v19 = v18;
          *(_QWORD *)buf = i + 2;
          v20 = sub_1003A7980(a1, i + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
          *(_QWORD *)buf = j + 2;
          *((_QWORD *)sub_100198D24((uint64_t)(v20 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101B9EB60, (__int128 **)buf)+ 5) = v19;
        }
      }
      else if (a3 == 5)
      {
        v9 = v7 / (double)v8;
        *(_QWORD *)buf = i + 2;
        v10 = sub_1003A7980(a1, i + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
        *(_QWORD *)buf = j + 2;
        *((double *)sub_100198D24((uint64_t)(v10 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101B9EB60, (__int128 **)buf)+ 5) = v9;
        *(_QWORD *)buf = i + 2;
        v11 = sub_1003A7980(a1, i + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
        *(_QWORD *)buf = j + 2;
        if (*((double *)sub_100198D24((uint64_t)(v11 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101B9EB60, (__int128 **)buf)+ 6) == 0.0)
        {
          sub_1003A54C4();
          v13 = v12;
          *(_QWORD *)buf = i + 2;
          v14 = sub_1003A7980(a1, i + 2, (uint64_t)&unk_101B9EB60, (_OWORD **)buf);
          *(_QWORD *)buf = j + 2;
          *((_QWORD *)sub_100198D24((uint64_t)(v14 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101B9EB60, (__int128 **)buf)+ 6) = v13;
        }
      }
      else
      {
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        v21 = qword_1022A00F8;
        if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 68289282;
          *(_DWORD *)&buf[4] = 0;
          v24 = 2082;
          v25 = "";
          v26 = 1026;
          v27 = a3;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_1021329F8);
        }
        v22 = qword_1022A00F8;
        if (os_signpost_enabled((os_log_t)qword_1022A00F8))
        {
          *(_DWORD *)buf = 68289282;
          *(_DWORD *)&buf[4] = 0;
          v24 = 2082;
          v25 = "";
          v26 = 1026;
          v27 = a3;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calculatePerClusterPerAnchorValueStatistics, received unhandled data type", "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
        }
      }
    }
  }
}

void sub_1003A5940(uint64_t a1@<X0>, int *a2@<X8>)
{
  const std::string::value_type *i;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::string *v9;
  uint64_t *j;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::string *v15;
  NSObject *v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  uint8_t buf[4];
  int v21;
  __int16 v22;
  const char *v23;

  sub_1002BBA20((uint64_t)a2);
  for (i = *(const std::string::value_type **)(a1 + 16); i; i = *(const std::string::value_type **)i)
  {
    v5 = a2[5];
    v6 = a2[4];
    if ((int)v6 >= v5)
    {
      if (v5 == a2[6])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 2), v5 + 1);
        v5 = a2[5];
      }
      a2[5] = v5 + 1;
      sub_1003A6104();
    }
    v7 = *((_QWORD *)a2 + 1);
    a2[4] = v6 + 1;
    v8 = *(_QWORD *)(v7 + 8 * v6);
    if (v8)
    {
      *(_DWORD *)(v8 + 44) |= 2u;
      v9 = *(std::string **)(v8 + 32);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        operator new();
      std::string::assign(v9, i + 16, 0x10uLL);
      for (j = (uint64_t *)*((_QWORD *)i + 6); j; j = (uint64_t *)*j)
      {
        v11 = *(_DWORD *)(v8 + 20);
        v12 = *(int *)(v8 + 16);
        if ((int)v12 >= v11)
        {
          if (v11 == *(_DWORD *)(v8 + 24))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v8 + 8), v11 + 1);
            v11 = *(_DWORD *)(v8 + 20);
          }
          *(_DWORD *)(v8 + 20) = v11 + 1;
          sub_1003A6164();
        }
        v13 = *(_QWORD *)(v8 + 8);
        *(_DWORD *)(v8 + 16) = v12 + 1;
        v14 = *(_QWORD *)(v13 + 8 * v12);
        if (v14)
        {
          *(_DWORD *)(v14 + 36) |= 4u;
          v15 = *(std::string **)(v14 + 24);
          if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
            operator new();
          std::string::operator=(v15, (const std::string *)(j + 2));
          *(_DWORD *)(v14 + 36) |= 3u;
          *(_OWORD *)(v14 + 8) = *(_OWORD *)(j + 5);
        }
        else
        {
          if (qword_1022A00F0 != -1)
            dispatch_once(&qword_1022A00F0, &stru_1021329F8);
          v16 = qword_1022A00F8;
          if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 68289026;
            v21 = 0;
            v22 = 2082;
            v23 = "";
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_anchorvaluestatistics\"}", buf, 0x12u);
            if (qword_1022A00F0 != -1)
              dispatch_once(&qword_1022A00F0, &stru_1021329F8);
          }
          v17 = qword_1022A00F8;
          if (os_signpost_enabled((os_log_t)qword_1022A00F8))
          {
            *(_DWORD *)buf = 68289026;
            v21 = 0;
            v22 = 2082;
            v23 = "";
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v17, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "got nullptr from CLMicroLocationProto add_anchorvaluestatistics", "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_anchorvaluestatistics\"}", buf, 0x12u);
          }
        }
      }
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_1021329F8);
      v18 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 68289026;
        v21 = 0;
        v22 = 2082;
        v23 = "";
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_clusteranchorvaluestatisticsvector\"}", buf, 0x12u);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_1021329F8);
      }
      v19 = qword_1022A00F8;
      if (os_signpost_enabled((os_log_t)qword_1022A00F8))
      {
        *(_DWORD *)buf = 68289026;
        v21 = 0;
        v22 = 2082;
        v23 = "";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "got nullptr from CLMicroLocationProto add_clusteranchorvaluestatisticsvector", "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_clusteranchorvaluestatisticsvector\"}", buf, 0x12u);
      }
    }
  }
}

void sub_1003A5D88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1002C63C0(v1);
  _Unwind_Resume(a1);
}

void sub_1003A5DA8(uint64_t a1@<X0>, const std::string::value_type *a2@<X1>, uint64_t a3@<X8>)
{
  _DWORD *v6;
  double Current;
  void *__p[2];
  char v9;
  int v10[14];
  _BYTE v11[8];
  _DWORD *v12;
  std::string *v13;
  int v14;

  sub_1002BC0E0((uint64_t)v11);
  v14 |= 4u;
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    operator new();
  std::string::assign(v13, a2, 0x10uLL);
  v14 |= 2u;
  v6 = v12;
  if (!v12)
    operator new();
  sub_1003A5940(a1, v10);
  sub_1002C67D0(v6, (uint64_t)v10);
  sub_1002C63C0(v10);
  Current = j__CFAbsoluteTimeGetCurrent();
  sub_1003A5F5C((uint64_t)v11, (uint64_t)v10, Current);
  sub_1015A2E04(__p, "home");
  sub_1002A4048(a3, (__int128 *)__p, (uint64_t)v10, 0, 0);
  if (v9 < 0)
    operator delete(__p[0]);
  sub_1002E50A8((wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_1002E470C((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_1003A5EE4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  operator delete();
}

void sub_1003A5F5C(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  unsigned int v6;
  int v7;

  sub_1002BC10C(a2);
  v6 = *(_DWORD *)(a1 + 24);
  if (!sub_10008D1F0(v6))
    __assert_rtn("set_type", "microlocation.pb.h", 21547, "::CLMicroLocationProto::ConfigurationType_IsValid(value)");
  v7 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 40) = v6;
  *(_DWORD *)(a2 + 48) = v7 | 3;
  *(double *)(a2 + 8) = a3;
  sub_1003585BC(a2, a1);
}

void sub_1003A5FEC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  sub_1002E50A8(v1);
  _Unwind_Resume(a1);
}

void sub_1003A6000(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1003A602C()
{
  operator new();
}

void sub_1003A6068()
{
  operator delete();
}

uint64_t sub_1003A608C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t sub_1003A60B4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t sub_1003A60DC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  if (!v1)
    sub_10025FD1C();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

void sub_1003A6104()
{
  operator new();
}

void sub_1003A6140()
{
  operator delete();
}

void sub_1003A6164()
{
  operator new();
}

void sub_1003A61A0()
{
  operator delete();
}

_QWORD *sub_1003A61C4(uint64_t a1, _QWORD *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  _QWORD *v12;
  unint64_t v13;
  __int128 v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v7 = 0;
  v8 = 0;
  do
    v8 ^= (v8 << 6) + (v8 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v7++);
  while (v7 != 16);
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      v12 = *v11;
      if (*v11)
      {
        do
        {
          v13 = v12[1];
          if (v13 == v8)
          {
            if (v12[2] == *a2 && v12[3] == a2[1])
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
  v12 = operator new(0x38uLL);
  *v12 = 0;
  v12[1] = v8;
  v15 = **a4;
  v12[6] = 0;
  *((_OWORD *)v12 + 1) = v15;
  *((_OWORD *)v12 + 2) = xmmword_101B9F630;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_10012E444(a1, v21);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *v12 = *v23;
LABEL_44:
    *v23 = v12;
    goto LABEL_45;
  }
  *v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v22 + 8 * v4) = a1 + 16;
  if (*v12)
  {
    v24 = *(_QWORD *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9)
        v24 %= v9;
    }
    else
    {
      v24 &= v9 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_44;
  }
LABEL_45:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_1003A6410(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A6424(uint64_t result, double *a2, uint64_t a3, uint64_t a4, char a5)
{
  double *v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double *v15;
  double v16;
  double *v17;
  char v18;
  BOOL v19;
  double v20;
  double v21;
  double *v22;
  BOOL v24;
  uint64_t v25;
  double *v26;
  double v27;
  double v28;
  uint64_t v29;
  double *v30;
  double v31;
  double v32;
  double *v33;

  v8 = (double *)result;
LABEL_2:
  v9 = v8;
LABEL_3:
  v10 = 1 - a4;
  while (2)
  {
    v8 = v9;
    v11 = v10;
    v12 = (char *)a2 - (char *)v9;
    v13 = a2 - v9;
    switch(v13)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v20 = *v9;
        v21 = *(a2 - 1);
        if (*v9 < v21)
        {
          *v9 = v21;
          *(a2 - 1) = v20;
        }
        return result;
      case 3uLL:
        return sub_1003A67BC(v9, v9 + 1, a2 - 1);
      case 4uLL:
        return sub_1003A6B24(v9, v9 + 1, v9 + 2, a2 - 1);
      case 5uLL:
        return sub_1003A6BA4(v9, v9 + 1, v9 + 2, v9 + 3, a2 - 1);
      default:
        if (v12 > 191)
        {
          if (v11 == 1)
          {
            if (v9 != a2)
              return (uint64_t)sub_1003A6C48(v9, a2, a2, a3);
            return result;
          }
          v14 = v13 >> 1;
          v15 = &v9[v13 >> 1];
          if ((unint64_t)v12 < 0x401)
          {
            sub_1003A67BC(&v9[v13 >> 1], v9, a2 - 1);
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          else
          {
            sub_1003A67BC(v9, &v9[v13 >> 1], a2 - 1);
            sub_1003A67BC(v9 + 1, v15 - 1, a2 - 2);
            sub_1003A67BC(v9 + 2, &v9[v14 + 1], a2 - 3);
            sub_1003A67BC(v15 - 1, v15, &v9[v14 + 1]);
            v16 = *v9;
            *v9 = *v15;
            *v15 = v16;
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          if (*v9 >= *(v9 - 1))
          {
            result = (uint64_t)sub_1003A6844(v9, a2);
            v9 = (double *)result;
            goto LABEL_17;
          }
LABEL_12:
          v17 = sub_1003A68FC(v9, a2);
          if ((v18 & 1) == 0)
            goto LABEL_15;
          v19 = sub_1003A69B8(v9, v17);
          v9 = v17 + 1;
          result = sub_1003A69B8(v17 + 1, a2);
          if (!(_DWORD)result)
          {
            v10 = v11 + 1;
            if (v19)
              continue;
LABEL_15:
            result = sub_1003A6424(v8, v17, a3, -v11, a5 & 1);
            v9 = v17 + 1;
LABEL_17:
            a5 = 0;
            a4 = -v11;
            goto LABEL_3;
          }
          a4 = -v11;
          a2 = v17;
          if (v19)
            return result;
          goto LABEL_2;
        }
        v22 = v9 + 1;
        v24 = v9 == a2 || v22 == a2;
        if ((a5 & 1) != 0)
        {
          if (!v24)
          {
            v25 = 0;
            v26 = v9;
            do
            {
              v28 = *v26;
              v27 = v26[1];
              v26 = v22;
              if (v28 < v27)
              {
                v29 = v25;
                while (1)
                {
                  *(double *)((char *)v9 + v29 + 8) = v28;
                  if (!v29)
                    break;
                  v28 = *(double *)((char *)v9 + v29 - 8);
                  v29 -= 8;
                  if (v28 >= v27)
                  {
                    v30 = (double *)((char *)v9 + v29 + 8);
                    goto LABEL_42;
                  }
                }
                v30 = v9;
LABEL_42:
                *v30 = v27;
              }
              v22 = v26 + 1;
              v25 += 8;
            }
            while (v26 + 1 != a2);
          }
        }
        else if (!v24)
        {
          do
          {
            v32 = *v8;
            v31 = v8[1];
            v8 = v22;
            if (v32 < v31)
            {
              v33 = v22;
              do
              {
                *v33 = v32;
                v32 = *(v33 - 2);
                --v33;
              }
              while (v32 < v31);
              *v33 = v31;
            }
            ++v22;
          }
          while (v8 + 1 != a2);
        }
        return result;
    }
  }
}

uint64_t sub_1003A67BC(double *a1, double *a2, double *a3)
{
  double v3;
  double v4;
  double v5;
  double v6;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  if (*a1 < *a2)
  {
    if (v4 < v5)
    {
      *a1 = v5;
      *a3 = v3;
      return 1;
    }
    *a1 = v4;
    *a2 = v3;
    if (v3 >= *a3)
      return 1;
    *a2 = *a3;
    *a3 = v3;
    return 2;
  }
  if (v4 < v5)
  {
    *a2 = v5;
    *a3 = v4;
    v6 = *a1;
    if (*a1 >= *a2)
      return 1;
    *a1 = *a2;
    *a2 = v6;
    return 2;
  }
  return 0;
}

double *sub_1003A6844(double *a1, double *a2)
{
  double v2;
  double v3;
  double *v4;
  double v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v2 = *a1;
  v3 = *a1;
  if (*(a2 - 1) >= *a1)
  {
    v6 = a1 + 1;
    do
    {
      v4 = v6;
      if (v6 >= a2)
        break;
      ++v6;
    }
    while (*v4 >= v3);
  }
  else
  {
    v4 = a1;
    do
    {
      v5 = v4[1];
      ++v4;
    }
    while (v5 >= v3);
  }
  if (v4 < a2)
  {
    do
      v7 = *--a2;
    while (v7 < v3);
  }
  if (v4 < a2)
  {
    v8 = *v4;
    v9 = *a2;
    do
    {
      *v4 = v9;
      *a2 = v8;
      do
      {
        v10 = v4[1];
        ++v4;
        v8 = v10;
      }
      while (v10 >= v3);
      do
      {
        v11 = *--a2;
        v12 = v11;
      }
      while (v11 < v3);
      v9 = v12;
    }
    while (v4 < a2);
  }
  if (v4 - 1 != a1)
    *a1 = *(v4 - 1);
  *(v4 - 1) = v2;
  return v4;
}

double *sub_1003A68FC(double *a1, double *a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double *v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  double *v11;
  double *v12;
  double v13;
  double v14;
  double v15;

  v2 = 0;
  v3 = *a1;
  v4 = *a1;
  do
    v5 = a1[++v2];
  while (v5 > v4);
  v6 = &a1[v2];
  v7 = &a1[v2 - 1];
  if (v2 == 1)
  {
    do
    {
      if (v6 >= a2)
        break;
      v9 = *--a2;
    }
    while (v9 <= v4);
  }
  else
  {
    do
      v8 = *--a2;
    while (v8 <= v4);
  }
  if (v6 < a2)
  {
    v10 = *a2;
    v11 = &a1[v2];
    v12 = a2;
    do
    {
      *v11 = v10;
      *v12 = v5;
      do
      {
        v13 = v11[1];
        ++v11;
        v5 = v13;
      }
      while (v13 > v4);
      do
      {
        v14 = *--v12;
        v15 = v14;
      }
      while (v14 <= v4);
      v10 = v15;
    }
    while (v11 < v12);
    v7 = v11 - 1;
  }
  if (v7 != a1)
    *a1 = *v7;
  *v7 = v3;
  return v7;
}

BOOL sub_1003A69B8(double *a1, double *a2)
{
  uint64_t v4;
  _BOOL8 result;
  double v6;
  double v7;
  double *v8;
  double *v9;
  int v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *a1;
      v7 = *(a2 - 1);
      if (*a1 < v7)
      {
        *a1 = v7;
        *(a2 - 1) = v6;
      }
      return result;
    case 3:
      sub_1003A67BC(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_1003A6B24(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      sub_1003A6BA4(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      v8 = a1 + 2;
      sub_1003A67BC(a1, a1 + 1, a1 + 2);
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 24;
      break;
  }
  while (1)
  {
    v12 = *v8;
    v13 = *v9;
    if (*v8 < *v9)
    {
      v14 = v11;
      while (1)
      {
        *(double *)((char *)a1 + v14) = v12;
        v15 = v14 - 8;
        if (v14 == 8)
          break;
        v12 = *(double *)((char *)a1 + v14 - 16);
        v14 -= 8;
        if (v12 >= v13)
        {
          v16 = (double *)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      v16 = a1;
LABEL_12:
      *v16 = v13;
      if (++v10 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v11 += 8;
    if (++v9 == a2)
      return 1;
  }
}

uint64_t sub_1003A6B24(double *a1, double *a2, double *a3, double *a4)
{
  uint64_t result;
  double v9;
  double v10;
  double v11;

  result = sub_1003A67BC(a1, a2, a3);
  v9 = *a3;
  if (*a3 < *a4)
  {
    *a3 = *a4;
    *a4 = v9;
    v10 = *a2;
    if (*a2 < *a3)
    {
      *a2 = *a3;
      *a3 = v10;
      v11 = *a1;
      if (*a1 < *a2)
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t sub_1003A6BA4(double *a1, double *a2, double *a3, double *a4, double *a5)
{
  uint64_t result;
  double v11;
  double v12;
  double v13;
  double v14;

  result = sub_1003A6B24(a1, a2, a3, a4);
  v11 = *a4;
  if (*a4 < *a5)
  {
    *a4 = *a5;
    *a5 = v11;
    v12 = *a3;
    if (*a3 < *a4)
    {
      *a3 = *a4;
      *a4 = v12;
      v13 = *a2;
      if (*a2 < *a3)
      {
        *a2 = *a3;
        *a3 = v13;
        v14 = *a1;
        if (*a1 < *a2)
        {
          *a1 = *a2;
          *a2 = v14;
        }
      }
    }
  }
  return result;
}

double *sub_1003A6C48(double *a1, double *a2, double *a3, uint64_t a4)
{
  double *v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  double *v12;
  double *v13;
  double *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double *v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  double *v25;
  double v26;

  if (a1 != a2)
  {
    v6 = a2;
    v8 = (char *)a2 - (char *)a1;
    v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 9)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[v10];
      do
      {
        sub_1003A6E18((uint64_t)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    v13 = v6;
    if (v6 != a3)
    {
      v14 = v6;
      do
      {
        v15 = *v14;
        if (*a1 < *v14)
        {
          *v14 = *a1;
          *a1 = v15;
          sub_1003A6E18((uint64_t)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      v13 = a3;
    }
    if (v8 >= 9)
    {
      v16 = (unint64_t)v8 >> 3;
      do
      {
        v17 = 0;
        v18 = *a1;
        v19 = a1;
        do
        {
          v20 = v19;
          v19 += v17 + 1;
          v21 = 2 * v17;
          v17 = (2 * v17) | 1;
          v22 = v21 + 2;
          if (v22 < v16 && v19[1] < *v19)
          {
            ++v19;
            v17 = v22;
          }
          *v20 = *v19;
        }
        while (v17 <= (uint64_t)((unint64_t)(v16 - 2) >> 1));
        if (v19 != --v6)
        {
          *v19 = *v6;
          *v6 = v18;
          v23 = (char *)v19 - (char *)a1 + 8;
          if (v23 < 9)
            continue;
          v24 = (((unint64_t)v23 >> 3) - 2) >> 1;
          v25 = &a1[v24];
          v18 = *v19;
          v26 = *v25;
          if (*v19 >= *v25)
            continue;
          do
          {
            *v19 = v26;
            v19 = v25;
            if (!v24)
              break;
            v24 = (v24 - 1) >> 1;
            v25 = &a1[v24];
            v26 = *v25;
          }
          while (*v25 > v18);
        }
        *v19 = v18;
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_1003A6E18(uint64_t result, uint64_t a2, uint64_t a3, double *a4)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >= 2)
  {
    v4 = (uint64_t)a4 - result;
    v5 = (unint64_t)(a3 - 2) >> 1;
    if (v5 >= ((uint64_t)a4 - result) >> 3)
    {
      v6 = v4 >> 2;
      v7 = (v4 >> 2) + 1;
      v8 = (double *)(result + 8 * v7);
      v9 = v6 + 2;
      if (v9 < a3 && v8[1] < *v8)
      {
        ++v8;
        v7 = v9;
      }
      v10 = *a4;
      v11 = *v8;
      if (*a4 >= *v8)
      {
        do
        {
          *a4 = v11;
          a4 = v8;
          if (v5 < v7)
            break;
          v12 = 2 * v7;
          v7 = (2 * v7) | 1;
          v8 = (double *)(result + 8 * v7);
          v13 = v12 + 2;
          if (v13 < a3 && v8[1] < *v8)
          {
            ++v8;
            v7 = v13;
          }
          v11 = *v8;
        }
        while (*v8 <= v10);
        *a4 = v10;
      }
    }
  }
  return result;
}

void sub_1003A6ED8()
{
  operator delete();
}

_QWORD *sub_1003A6EEC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_102132A40;
  return result;
}

void sub_1003A6F10(uint64_t a1, _QWORD *a2)
{
  *a2 = off_102132A40;
}

uint64_t sub_1003A6F28()
{
  return 0;
}

uint64_t sub_1003A6F34(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003A6F70()
{
}

void sub_1003A6F80()
{
  operator delete();
}

_QWORD *sub_1003A6F94()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_102132AD0;
  return result;
}

void sub_1003A6FB8(uint64_t a1, _QWORD *a2)
{
  *a2 = off_102132AD0;
}

uint64_t sub_1003A6FD0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a2;
}

uint64_t sub_1003A6FD8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003A7014()
{
}

void sub_1003A7024()
{
  operator delete();
}

_QWORD *sub_1003A7038()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = off_102132B60;
  return result;
}

void sub_1003A705C(uint64_t a1, _QWORD *a2)
{
  *a2 = off_102132B60;
}

uint64_t sub_1003A7074()
{
  return 0;
}

uint64_t sub_1003A7080(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003A70BC()
{
}

unsigned __int8 *sub_1003A70C8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __n128 *a4)
{
  unint64_t v4;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  unsigned __int8 **v15;
  unsigned __int8 *i;
  unint64_t v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD v27[3];

  v9 = (_QWORD *)(a1 + 24);
  v10 = sub_10025A024(a1 + 24, (uint64_t)a2);
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v4 = v10;
      if (v10 >= v12)
        v4 = v10 % v12;
    }
    else
    {
      v4 = (v12 - 1) & v10;
    }
    v15 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v15)
    {
      for (i = *v15; i; i = *(unsigned __int8 **)i)
      {
        v17 = *((_QWORD *)i + 1);
        if (v17 == v11)
        {
          if ((sub_10025A4CC(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12)
              v17 %= v12;
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v4)
            break;
        }
      }
    }
  }
  sub_1003A734C(a1, v11, a3, a4, (uint64_t)v27);
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    v20 = 1;
    if (v12 >= 3)
      v20 = (v12 & (v12 - 1)) != 0;
    v21 = v20 | (2 * v12);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      v23 = v22;
    else
      v23 = v21;
    sub_10012E444(a1, v23);
    v12 = *(_QWORD *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v4 = v11 % v12;
      else
        v4 = v11;
    }
    else
    {
      v4 = (v12 - 1) & v11;
    }
  }
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v24)
  {
    *(_QWORD *)v27[0] = *v24;
    *v24 = v27[0];
  }
  else
  {
    *(_QWORD *)v27[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v27[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v27[0])
    {
      v25 = *(_QWORD *)(*(_QWORD *)v27[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v25 >= v12)
          v25 %= v12;
      }
      else
      {
        v25 &= v12 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v25) = v27[0];
    }
  }
  i = (unsigned __int8 *)v27[0];
  ++*v9;
  return i;
}

void sub_1003A7328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p)
    sub_1002A20A8((uint64_t)&a13, __p);
  _Unwind_Resume(exception_object);
}

__n128 sub_1003A734C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  __n128 result;

  v9 = a1 + 16;
  v10 = (char *)operator new(0x38uLL);
  *(_QWORD *)(a5 + 8) = v9;
  *(_QWORD *)a5 = v10;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = a2;
  v11 = v10 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_100115CE4(v11, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)a3;
    *((_QWORD *)v10 + 4) = *(_QWORD *)(a3 + 16);
  }
  result = *a4;
  *(__n128 *)(v10 + 40) = *a4;
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_1003A73E4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1002A20A8(v3, v2);
  _Unwind_Resume(a1);
}

_QWORD *sub_1003A7400(uint64_t a1, _QWORD *a2, _OWORD *a3, uint64_t *a4)
{
  unint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD v27[2];
  char v28;

  v8 = 0;
  v9 = 0;
  do
    v9 ^= (v9 << 6) + (v9 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v8++);
  while (v8 != 16);
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v10)
        v4 = v9 % v10;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
    v12 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      v13 = (_QWORD *)*v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == *a2 && v13[3] == a2[1])
              return v13;
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10)
                v14 %= v10;
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  v16 = a1 + 16;
  v17 = operator new(0x48uLL);
  v27[0] = v17;
  v27[1] = a1 + 16;
  *v17 = 0;
  v17[1] = v9;
  *((_OWORD *)v17 + 1) = *a3;
  sub_10012D080((uint64_t)(v17 + 4), a4);
  v28 = 1;
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    v20 = 1;
    if (v10 >= 3)
      v20 = (v10 & (v10 - 1)) != 0;
    v21 = v20 | (2 * v10);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      v23 = v22;
    else
      v23 = v21;
    sub_10012E444(a1, v23);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v24)
  {
    *(_QWORD *)v27[0] = *v24;
    *v24 = v27[0];
  }
  else
  {
    *(_QWORD *)v27[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v27[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = v16;
    if (*(_QWORD *)v27[0])
    {
      v25 = *(_QWORD *)(*(_QWORD *)v27[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v25 >= v10)
          v25 %= v10;
      }
      else
      {
        v25 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v25) = v27[0];
    }
  }
  v13 = (_QWORD *)v27[0];
  v27[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_100342AF8((uint64_t)v27, 0);
  return v13;
}

void sub_1003A768C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100342AF8((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A76A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v8 = a1 + 16;
  v9 = *(void **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 6) < a4)
  {
    sub_1003A7824((void **)a1);
    if (a4 > 0x155555555555555)
      sub_100259694();
    v10 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 6);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 6) >= 0xAAAAAAAAAAAAAALL)
      v11 = 0x155555555555555;
    else
      v11 = v10;
    sub_1003A0D00((_QWORD *)a1, v11);
    result = sub_1003A0D50(v8, a2, a3, *(_QWORD *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 6) < a4)
  {
    v13 = a2 + ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 6 << 6);
    sub_1003A7890((uint64_t)&v17, a2, v13, (uint64_t)v9);
    result = sub_1003A0D50(v8, v13, a3, *(_QWORD *)(a1 + 8));
LABEL_11:
    *(_QWORD *)(a1 + 8) = result;
    return result;
  }
  result = sub_1003A7890((uint64_t)&v18, a2, a3, (uint64_t)v9);
  v15 = v14;
  v16 = *(_QWORD *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 192;
      result = sub_100271310(v8, v16);
    }
    while (v16 != v15);
  }
  *(_QWORD *)(a1 + 8) = v15;
  return result;
}

void sub_1003A7814(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1003A781C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1003A7824(void **a1)
{
  void *v1;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 192;
        sub_100271310((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_1003A7890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  if (a2 == a3)
    return a2;
  v6 = a3;
  v7 = 0;
  do
  {
    if (a2 != a4)
    {
      v8 = a4 + v7;
      *(_DWORD *)(a4 + v7 + 32) = *(_DWORD *)(a2 + v7 + 32);
      sub_1003949B8((_QWORD *)(a4 + v7), *(uint64_t **)(a2 + v7 + 16), 0);
      v9 = *(_OWORD *)(a2 + v7 + 40);
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(a2 + v7 + 56);
      *(_OWORD *)(v8 + 40) = v9;
      *(_DWORD *)(v8 + 96) = *(_DWORD *)(a2 + v7 + 96);
      sub_100394C7C((_QWORD *)(a4 + v7 + 64), *(unsigned int **)(a2 + v7 + 80), 0);
      *(_DWORD *)(v8 + 136) = *(_DWORD *)(a2 + v7 + 136);
      sub_100395198((_QWORD *)(a4 + v7 + 104), *(uint64_t **)(a2 + v7 + 120), 0);
      v10 = *(_OWORD *)(a2 + v7 + 144);
      *(_DWORD *)(v8 + 160) = *(_DWORD *)(a2 + v7 + 160);
      *(_OWORD *)(v8 + 144) = v10;
      sub_1002A3054((char *)(a4 + v7 + 168), *(char **)(a2 + v7 + 168), *(_QWORD *)(a2 + v7 + 176), (uint64_t)(*(_QWORD *)(a2 + v7 + 176) - *(_QWORD *)(a2 + v7 + 168)) >> 2);
    }
    v7 += 192;
  }
  while (a2 + v7 != v6);
  return v6;
}

_QWORD *sub_1003A7980(uint64_t a1, _QWORD *a2, uint64_t a3, _OWORD **a4)
{
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD v26[2];
  char v27;

  v7 = 0;
  v8 = 0;
  do
    v8 ^= (v8 << 6) + (v8 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v7++);
  while (v7 != 16);
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      v12 = (_QWORD *)*v11;
      if (*v11)
      {
        do
        {
          v13 = v12[1];
          if (v13 == v8)
          {
            if (v12[2] == *a2 && v12[3] == a2[1])
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
  v15 = a1 + 16;
  v16 = operator new(0x48uLL);
  v26[0] = v16;
  v26[1] = a1 + 16;
  *v16 = 0;
  v16[1] = v8;
  *((_OWORD *)v16 + 1) = **a4;
  *((_OWORD *)v16 + 2) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  *((_DWORD *)v16 + 16) = 1065353216;
  v27 = 1;
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    v19 = 1;
    if (v9 >= 3)
      v19 = (v9 & (v9 - 1)) != 0;
    v20 = v19 | (2 * v9);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_10012E444(a1, v22);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v26[0] = *v23;
    *v23 = v26[0];
  }
  else
  {
    *(_QWORD *)v26[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v26[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = v15;
    if (*(_QWORD *)v26[0])
    {
      v24 = *(_QWORD *)(*(_QWORD *)v26[0] + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v24 >= v9)
          v24 %= v9;
      }
      else
      {
        v24 &= v9 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v26[0];
    }
  }
  v12 = (_QWORD *)v26[0];
  v26[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_100342AF8((uint64_t)v26, 0);
  return v12;
}

void sub_1003A7C08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100342AF8((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_1003A7C20(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *i;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD v26[3];

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_10025A024(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_10025A4CC(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  sub_1003A7EB4(a1, v10, a4, (uint64_t)v26);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_10012E444(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v26[0] = *v23;
    *v23 = v26[0];
  }
  else
  {
    *(_QWORD *)v26[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v26[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v26[0])
    {
      v24 = *(_QWORD *)(*(_QWORD *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11)
          v24 %= v11;
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v26[0];
    }
  }
  i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_1003A7E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p)
    sub_1002A20A8((uint64_t)&a13, __p);
  _Unwind_Resume(exception_object);
}

_BYTE *sub_1003A7EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  _BYTE *result;
  __int128 *v10;
  __int128 v11;

  v7 = a1 + 16;
  v8 = (char *)operator new(0x38uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = a2;
  result = v8 + 16;
  v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    result = sub_100115CE4(result, *(void **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    *((_QWORD *)v8 + 4) = *((_QWORD *)v10 + 2);
    *(_OWORD *)result = v11;
  }
  *((_QWORD *)v8 + 5) = 0;
  *((_DWORD *)v8 + 12) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_1003A7F44(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1002A20A8(v3, v2);
  _Unwind_Resume(a1);
}

_BYTE *sub_1003A7F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  _BYTE *result;
  __int128 *v10;
  __int128 v11;

  v7 = a1 + 16;
  v8 = operator new(0x38uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = v8 + 2;
  v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    result = sub_100115CE4(result, *(void **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    v8[4] = *((_QWORD *)v10 + 2);
    *(_OWORD *)result = v11;
  }
  v8[5] = 0;
  v8[6] = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_1003A7FEC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1002A20A8(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1003A8008(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A09D0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A09D0))
  {
    sub_1003AFDE4((std::string *)&xmmword_1022A09B8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A09B8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A09D0);
  }
  if (byte_1022A09CF < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A09B8, *((unint64_t *)&xmmword_1022A09B8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A09B8;
    *(_QWORD *)(a1 + 16) = unk_1022A09C8;
  }
}

void sub_1003A80B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A09D0);
  _Unwind_Resume(a1);
}

void sub_1003A80D0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)&qword_1022A09F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1022A09F0))
  {
    sub_100356CA8((std::string *)&xmmword_1022A09D8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1022A09D8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1022A09F0);
  }
  if (byte_1022A09EF < 0)
  {
    sub_100115CE4((_BYTE *)a1, (void *)xmmword_1022A09D8, *((unint64_t *)&xmmword_1022A09D8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1022A09D8;
    *(_QWORD *)(a1 + 16) = unk_1022A09E8;
  }
}

void sub_1003A8180(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1022A09F0);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A8198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v13;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a8;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a4 + 52);
  sub_1002BBA84(a1 + 32);
  *(_BYTE *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = a6;
  *(_QWORD *)(a1 + 272) = a7;
  sub_1002C9C24(v13, a4);
  if (!*(_BYTE *)(a5 + 24))
    goto LABEL_4;
  if (*(char *)(a5 + 23) < 0)
  {
    if (*(_QWORD *)(a5 + 8))
      goto LABEL_4;
  }
  else if (*(_BYTE *)(a5 + 23))
  {
LABEL_4:
    sub_1003AF708((std::string *)(a1 + 232), (const std::string *)a5);
    return a1;
  }
  if (*(_BYTE *)(a1 + 256))
  {
    if (*(char *)(a1 + 255) < 0)
      operator delete(*(void **)(a1 + 232));
    *(_BYTE *)(a1 + 256) = 0;
  }
  return a1;
}

void sub_1003A8260(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;

  if (*(_BYTE *)(v1 + 256))
  {
    if (*(char *)(v1 + 255) < 0)
      operator delete(*v3);
  }
  sub_1002C8104(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A8290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = a2 + 32;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 84);
  v5 = a1 + 32;
  sub_1002BBA84(a1 + 32);
  *(_BYTE *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 256) = 0;
  if (*(_BYTE *)(a2 + 256))
  {
    v6 = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = v6;
    *(_QWORD *)(a2 + 240) = 0;
    *(_QWORD *)(a2 + 248) = 0;
    *(_QWORD *)(a2 + 232) = 0;
    *(_BYTE *)(a1 + 256) = 1;
  }
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  sub_1002C9C24(v5, v4);
  return a1;
}

void sub_1003A833C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;

  if (*(_BYTE *)(v2 + 256))
  {
    if (*(char *)(v2 + 255) < 0)
      operator delete(*v3);
  }
  sub_1002C8104(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A836C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 84);
  sub_10034ED7C(a1 + 232, (__n128 *)(a2 + 232));
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  sub_1002C9C24(a1 + 32, a2 + 32);
  return a1;
}

void sub_1003A83D4(uint64_t a1)
{
  BOOL v2;
  BOOL v3;
  NSObject *v4;
  uint8_t *v5;
  double v6;
  NSObject *v7;
  uint8_t *v8;
  NSObject *v9;
  double v10;
  uint8_t *v11;
  __int128 v12;
  uint8_t buf[4];
  const char *v14;

  v2 = sub_1000CC4F4(*(_QWORD *)a1);
  *(_BYTE *)(a1 + 8) = v2;
  if (v2)
  {
    sub_1003A880C((uint64_t *)a1);
    sub_100634364(*(_QWORD *)a1, "MicroLocationModels", (const char **)&off_102132C00, 0, 0);
    v3 = sub_100635B3C(*(_QWORD *)a1, "MicroLocationModels");
    *(_BYTE *)(a1 + 8) = v3;
    if (v3)
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132BE0);
      v4 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136446210;
        v14 = "MicroLocationModels";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{public}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102132BE0);
        LODWORD(v12) = 136446210;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationModels";
        v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Sucessfully created table if necessary: %{public}s", &v12, 12, v12);
LABEL_19:
        v8 = v5;
        sub_100512490("Generic", 1, 0, 2, "void CLMicroLocationModelTable::initTable()", "%s\n", v6);
LABEL_29:
        if (v8 != buf)
          free(v8);
      }
    }
    else
    {
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132BE0);
      v9 = qword_1022A00F8;
      if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        v14 = "MicroLocationModels";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A00F0 != -1)
          dispatch_once(&qword_1022A00F0, &stru_102132BE0);
        LODWORD(v12) = 136446210;
        *(_QWORD *)((char *)&v12 + 4) = "MicroLocationModels";
        v10 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 16, "Failed to create table: %{public}s", &v12, 12);
        v8 = v11;
        sub_100512490("Generic", 1, 0, 0, "void CLMicroLocationModelTable::initTable()", "%s\n", v10);
        goto LABEL_29;
      }
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    v7 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132BE0);
      LOWORD(v12) = 0;
      v6 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Database is not connected so we can't intialize our table", &v12, 2, v12);
      goto LABEL_19;
    }
  }
}

uint64_t sub_1003A87E0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  sub_1003A83D4(a1);
  return a1;
}

BOOL sub_1003A880C(uint64_t *a1)
{
  _BOOL8 result;

  result = sub_100635B3C(*a1, "MicroLocationModels");
  if (result)
    return sub_1002639C4(*a1, (uint64_t *)&off_102132C00, 7, "MicroLocationModels");
  return result;
}

uint64_t sub_1003A8860(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  NSObject *v3;
  const char *v5;
  uint8_t *v6;
  void *v7;
  uint8_t buf[8];

  if (*(_BYTE *)(a1 + 8))
  {
    v1 = *(_QWORD *)a1;
    if (byte_1023011F7 >= 0)
      v2 = (char *)&xmmword_1023011E0;
    else
      v2 = (char *)xmmword_1023011E0;
    sub_1000CDA68(v1, v2);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v3 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v7) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't insert or replace", &v7, 2);
    v6 = (uint8_t *)v5;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v6 != buf)
      free(v6);
  }
  return 0;
}

void sub_1003A8FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,std::bad_cast a43)
{
  if (a20 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  if (a32 < 0)
    operator delete(a27);
  if (a39 < 0)
    operator delete(a34);
  if (a40)
    (*(void (**)(uint64_t))(*(_QWORD *)a40 + 8))(a40);
  _Unwind_Resume(exception_object);
}

void sub_1003A9098(uint64_t a1, uint64_t a2, unsigned int a3)
{
  std::string *v6;
  __int128 v7;
  void **v8;
  std::string::size_type v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  std::string::size_type size;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  __int128 v38;
  char *v39;
  std::string v40;
  void *__p[2];
  unsigned __int8 v42;
  std::string::value_type __s[8];
  char v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  std::string v52;
  void *v53[2];
  int64_t v54;
  std::string v55;
  std::string v56;
  std::string v57;
  std::string v58;
  std::string v59;

  *((_BYTE *)&v45.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v45, "SELECT * FROM (");
  v44 = 7;
  strcpy(__s, "SELECT ");
  v6 = std::string::append(&v45, __s, 7uLL);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  sub_1003A8008((uint64_t)__p);
  if ((v42 & 0x80u) == 0)
    v8 = __p;
  else
    v8 = (void **)__p[0];
  if ((v42 & 0x80u) == 0)
    v9 = v42;
  else
    v9 = (std::string::size_type)__p[1];
  v10 = std::string::append(&v46, (const std::string::value_type *)v8, v9);
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  v12 = std::string::append(&v47, " FROM ");
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  v14 = std::string::append(&v48, "MicroLocationModels");
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  v16 = std::string::append(&v49, " ");
  v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v50.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  v18 = *(char *)(a2 + 23);
  if (v18 >= 0)
    v19 = (const std::string::value_type *)a2;
  else
    v19 = *(const std::string::value_type **)a2;
  if (v18 >= 0)
    v20 = *(unsigned __int8 *)(a2 + 23);
  else
    v20 = *(_QWORD *)(a2 + 8);
  v21 = std::string::append(&v50, v19, v20);
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v56.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v56, " ");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v57.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  v25 = std::string::append(&v57, " ORDER BY ");
  v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v58.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v27 = std::string::append(&v58, "GenerationTimestamp");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  v29 = std::string::append(&v51, " DESC LIMIT ");
  v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v59.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v40, a3);
  if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v31 = &v40;
  else
    v31 = (std::string *)v40.__r_.__value_.__r.__words[0];
  if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v40.__r_.__value_.__r.__words[2]);
  else
    size = v40.__r_.__value_.__l.__size_;
  v33 = std::string::append(&v59, (const std::string::value_type *)v31, size);
  v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  v35 = std::string::append(&v52, ") ORDER BY ");
  v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  v55.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  v37 = std::string::append(&v55, "GenerationTimestamp");
  v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
  v54 = v37->__r_.__value_.__r.__words[2];
  *(_OWORD *)v53 = v38;
  v37->__r_.__value_.__l.__size_ = 0;
  v37->__r_.__value_.__r.__words[2] = 0;
  v37->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v55.__r_.__value_.__l.__data_);
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v52.__r_.__value_.__l.__data_);
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v40.__r_.__value_.__l.__data_);
  if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v59.__r_.__value_.__l.__data_);
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v51.__r_.__value_.__l.__data_);
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v58.__r_.__value_.__l.__data_);
  if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v57.__r_.__value_.__l.__data_);
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v56.__r_.__value_.__l.__data_);
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v50.__r_.__value_.__l.__data_);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v49.__r_.__value_.__l.__data_);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v47.__r_.__value_.__l.__data_);
  if ((char)v42 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  if (v44 < 0)
    operator delete(*(void **)__s);
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v45.__r_.__value_.__l.__data_);
  if (v54 >= 0)
    v39 = (char *)v53;
  else
    v39 = (char *)v53[0];
  sub_1000CDA68(a1, v39);
}

void sub_1003A9678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void **buf)
{
  uint64_t v58;

  buf = &a47;
  sub_1003009DC(&buf);
  if (v58)
    (*(void (**)(uint64_t))(*(_QWORD *)v58 + 8))(v58);
  if (a56 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1003A9A7C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, _BYTE *a5@<X8>)
{
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  std::string::size_type size;
  std::string *v16;
  __int128 v17;
  std::string::size_type v18;
  std::string *v19;
  std::string *v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  int v25;
  const std::string::value_type *v26;
  std::string::size_type v27;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  std::string::size_type v31;
  char v32;
  std::string *v33;
  std::string::size_type v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  std::string::size_type v38;
  NSObject *v39;
  const char *v40;
  std::string *v41;
  std::string v42;
  std::string v43;
  std::string v44;
  std::string v45;
  _QWORD v46[2];
  std::string __p[68];

  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v43.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v43, "WHERE ");
    v10 = std::string::append(&v43, "ModelType");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v44, "=");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v42, a2);
    if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v14 = &v42;
    else
      v14 = (std::string *)v42.__r_.__value_.__r.__words[0];
    if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v42.__r_.__value_.__r.__words[2]);
    else
      size = v42.__r_.__value_.__l.__size_;
    v16 = std::string::append(&v45, (const std::string::value_type *)v14, size);
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    if (*(_BYTE *)(a3 + 24))
    {
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v18 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      else
        v18 = __p[0].__r_.__value_.__l.__size_;
      v19 = &v42;
      sub_100259584((uint64_t)&v42, v18 + 5);
      if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v19 = (std::string *)v42.__r_.__value_.__r.__words[0];
      if (v18)
      {
        if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v20 = __p;
        else
          v20 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
        memmove(v19, v20, v18);
      }
      strcpy((char *)v19 + v18, " AND ");
      v21 = std::string::append(&v42, "ClientID");
      v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
      v43.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v22;
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      v23 = std::string::append(&v43, "= \"");
      v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
      v44.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v24;
      v23->__r_.__value_.__l.__size_ = 0;
      v23->__r_.__value_.__r.__words[2] = 0;
      v23->__r_.__value_.__r.__words[0] = 0;
      if (!*(_BYTE *)(a3 + 24))
        sub_10028DF3C();
      v25 = *(char *)(a3 + 23);
      if (v25 >= 0)
        v26 = (const std::string::value_type *)a3;
      else
        v26 = *(const std::string::value_type **)a3;
      if (v25 >= 0)
        v27 = *(unsigned __int8 *)(a3 + 23);
      else
        v27 = *(_QWORD *)(a3 + 8);
      v28 = std::string::append(&v44, v26, v27);
      v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v45.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      v30 = std::string::append(&v45, "\"");
      v31 = v30->__r_.__value_.__r.__words[0];
      v46[0] = v30->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)v46 + 7) = *(std::string::size_type *)((char *)&v30->__r_.__value_.__r.__words[1] + 7);
      v32 = HIBYTE(v30->__r_.__value_.__r.__words[2]);
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p[0].__r_.__value_.__l.__data_);
      __p[0].__r_.__value_.__r.__words[0] = v31;
      __p[0].__r_.__value_.__l.__size_ = v46[0];
      *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v46 + 7);
      *((_BYTE *)&__p[0].__r_.__value_.__s + 23) = v32;
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v45.__r_.__value_.__l.__data_);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v43.__r_.__value_.__l.__data_);
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v42.__r_.__value_.__l.__data_);
    }
    if (a4[16])
    {
      *((_BYTE *)&v44.__r_.__value_.__s + 23) = 5;
      strcpy((char *)&v44, " AND ");
      sub_1015A2E04(&v42, "LoiGroupId");
      if (!a4[16])
        sub_10028DF3C();
      sub_1002AAC84((const void **)&v42.__r_.__value_.__l.__data_, a4, (uint64_t)&v43);
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v33 = &v43;
      else
        v33 = (std::string *)v43.__r_.__value_.__r.__words[0];
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v34 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      else
        v34 = v43.__r_.__value_.__l.__size_;
      v35 = std::string::append(&v44, (const std::string::value_type *)v33, v34);
      v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
      v45.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v36;
      v35->__r_.__value_.__l.__size_ = 0;
      v35->__r_.__value_.__r.__words[2] = 0;
      v35->__r_.__value_.__r.__words[0] = 0;
      if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v37 = &v45;
      else
        v37 = (std::string *)v45.__r_.__value_.__r.__words[0];
      if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v38 = HIBYTE(v45.__r_.__value_.__r.__words[2]);
      else
        v38 = v45.__r_.__value_.__l.__size_;
      std::string::append(__p, (const std::string::value_type *)v37, v38);
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v45.__r_.__value_.__l.__data_);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v43.__r_.__value_.__l.__data_);
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v42.__r_.__value_.__l.__data_);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
    }
    sub_1003A9098(*(_QWORD *)a1, (uint64_t)__p, 1u);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v39 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get the most recent model", (uint8_t *)__p, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v45.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, __p, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't get the most recent model", &v45, 2);
    v41 = (std::string *)v40;
    sub_100512490("Generic", 1, 0, 2, "std::optional<CLMicroLocationModelTable::Entry> CLMicroLocationModelTable::getMostRecentModelOfModelTypeForClientAndForLoi(CLMicroLocationProto::Model::ModelType, std::optional<const std::string>, std::optional<boost::uuids::uuid>)", "%s\n", v40);
    if (v41 != __p)
      free(v41);
  }
  *a5 = 0;
  a5[280] = 0;
}

void sub_1003AA030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  _Unwind_Resume(exception_object);
}

void sub_1003AA188(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  uint64_t v9;
  void *v11;
  char v12;
  char v13;
  void *__p;
  char v15;
  char v16;
  _QWORD v17[2];
  char v18;
  _BYTE v19[288];
  __int128 v20;
  char v21;
  __int128 v22;

  v5 = a3;
  *(_QWORD *)&v22 = a3;
  *((_QWORD *)&v22 + 1) = a4;
  LOBYTE(__p) = 0;
  v16 = 0;
  v20 = v22;
  v21 = 1;
  sub_1003A9A7C(a1, a2, (uint64_t)&__p, &v20, (_BYTE *)a5);
  if (v16 && v15 < 0)
    operator delete(__p);
  if (v5)
  {
LABEL_5:
    if (!*(_BYTE *)(a5 + 280))
    {
      LOBYTE(v11) = 0;
      v13 = 0;
      v17[0] = 0;
      v17[1] = 0;
      v18 = 1;
      sub_1003A9A7C(a1, a2, (uint64_t)&v11, v17, v19);
      sub_100300D1C(a5, (uint64_t)v19);
      sub_1002708A4((uint64_t)v19);
      if (v13 && v12 < 0)
        operator delete(v11);
      if (*(_BYTE *)(a5 + 280))
        *(_OWORD *)(a5 + 264) = v22;
    }
  }
  else
  {
    v9 = 1;
    while (v9 != 16)
    {
      if (*((unsigned __int8 *)&v22 + v9++))
      {
        if ((unint64_t)(v9 - 2) <= 0xE)
          goto LABEL_5;
        return;
      }
    }
  }
}

void sub_1003AA2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  sub_1002708A4((uint64_t)&a27);
  if (a16)
  {
    if (a15 < 0)
      operator delete(__p);
  }
  sub_1002708A4(v27);
  _Unwind_Resume(a1);
}

void sub_1003AA33C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  void *v9[2];
  uint64_t v10;
  char v11;
  void *__p[2];
  uint64_t v13;
  char v14;
  _QWORD v15[2];
  char v16;

  if (*(char *)(a2 + 23) < 0)
  {
    sub_100115CE4(v9, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)a2;
    v10 = *(_QWORD *)(a2 + 16);
  }
  v11 = 1;
  *(_OWORD *)__p = *(_OWORD *)v9;
  v13 = v10;
  v9[0] = 0;
  v9[1] = 0;
  v10 = 0;
  v14 = 1;
  v15[0] = a3;
  v15[1] = a4;
  v16 = 1;
  sub_1003A9A7C(a1, 0, (uint64_t)__p, v15, a5);
  if (v14 && SHIBYTE(v13) < 0)
    operator delete(__p[0]);
  if (v11)
  {
    if (SHIBYTE(v10) < 0)
      operator delete(v9[0]);
  }
}

void sub_1003AA450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  _BYTE *v19;

  if (a19)
  {
    if (a18 < 0)
      operator delete(__p);
  }
  sub_1018F8F44(v19, (uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003AA488(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  std::string::size_type size;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  std::string::size_type v24;
  NSObject *v25;
  const char *v26;
  std::string *v27;
  std::string v28;
  std::string v29;
  std::string v30;
  std::string v31;
  std::string v32;
  _QWORD v33[2];

  v33[0] = a3;
  v33[1] = a4;
  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v28.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v28, "WHERE ");
    v8 = std::string::append(&v28, "ClientID");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v29, "= \"");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = *(char *)(a2 + 23);
    if (v12 >= 0)
      v13 = (const std::string::value_type *)a2;
    else
      v13 = *(const std::string::value_type **)a2;
    if (v12 >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = std::string::append(&v30, v13, v14);
    v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    v17 = std::string::append(&v31, "\"");
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    *((_BYTE *)&v30.__r_.__value_.__s + 23) = 5;
    strcpy((char *)&v30, " AND ");
    sub_1015A2E04(&v28, "LoiGroupId");
    sub_1002AAC84((const void **)&v28.__r_.__value_.__l.__data_, v33, (uint64_t)&v29);
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v19 = &v29;
    else
      v19 = (std::string *)v29.__r_.__value_.__r.__words[0];
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v29.__r_.__value_.__r.__words[2]);
    else
      size = v29.__r_.__value_.__l.__size_;
    v21 = std::string::append(&v30, (const std::string::value_type *)v19, size);
    v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v23 = &v31;
    else
      v23 = (std::string *)v31.__r_.__value_.__r.__words[0];
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = HIBYTE(v31.__r_.__value_.__r.__words[2]);
    else
      v24 = v31.__r_.__value_.__l.__size_;
    std::string::append(&v32, (const std::string::value_type *)v23, v24);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    sub_1003A9098(*(_QWORD *)a1, (uint64_t)&v32, 1u);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v25 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v32.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get the most recent mode of client", (uint8_t *)&v32, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v32, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v31.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &v32, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't get the most recent mode of client", &v31, 2);
    v27 = (std::string *)v26;
    sub_100512490("Generic", 1, 0, 2, "std::optional<CLMicroLocationModelTable::Entry> CLMicroLocationModelTable::getMostRecentModelByClientIdAndLocation(const std::string &, boost::uuids::uuid)", "%s\n", v26);
    if (v27 != &v32)
      free(v27);
  }
  *a5 = 0;
  a5[280] = 0;
}

void sub_1003AA8C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  _Unwind_Resume(exception_object);
}

void sub_1003AA9C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v8;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  NSObject *v27;
  const char *v28;
  std::string *v29;
  std::string v30;
  std::string v31;
  std::string v32;
  std::string v33;
  std::string v34;
  std::string v35;
  void *v36[4];
  std::string v37;
  _QWORD v38[2];

  v38[0] = a3;
  v38[1] = a4;
  if (*(_BYTE *)(a1 + 8))
  {
    if (!(_BYTE)a3)
    {
      v8 = 1;
      do
      {
        if (v8 == 16)
          goto LABEL_38;
      }
      while (!*((unsigned __int8 *)v38 + v8++));
      if ((unint64_t)(v8 - 2) >= 0xF)
      {
LABEL_38:
        sub_1018F8F68();
        __break(1u);
      }
    }
    *((_BYTE *)&v30.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v30, "WHERE ");
    v10 = std::string::append(&v30, "ClientID");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v31, "= \"");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = *(char *)(a2 + 23);
    if (v14 >= 0)
      v15 = (const std::string::value_type *)a2;
    else
      v15 = *(const std::string::value_type **)a2;
    if (v14 >= 0)
      v16 = *(unsigned __int8 *)(a2 + 23);
    else
      v16 = *(_QWORD *)(a2 + 8);
    v17 = std::string::append(&v32, v15, v16);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = std::string::append(&v33, "\"");
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    v21 = std::string::append(&v34, " AND ");
    v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    v23 = std::string::append(&v35, "LoiGroupId");
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v37, "= \"\"");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v36[2] = (void *)v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)v36 = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v35.__r_.__value_.__l.__data_);
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v34.__r_.__value_.__l.__data_);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v33.__r_.__value_.__l.__data_);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    sub_1003A9098(*(_QWORD *)a1, (uint64_t)v36, 1u);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v27 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v37.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get the most recent mode of client", (uint8_t *)&v37, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v37, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v36[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v37, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't get the most recent mode of client", v36, 2);
    v29 = (std::string *)v28;
    sub_100512490("Generic", 1, 0, 2, "std::optional<CLMicroLocationModelTable::Entry> CLMicroLocationModelTable::getTransitionModelForClientAtLoi(const std::string &, boost::uuids::uuid)", "%s\n", v28);
    if (v29 != &v37)
      free(v29);
  }
  *a5 = 0;
  a5[280] = 0;
}

void sub_1003AAE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42)
{
  sub_1002FF714((uint64_t)&a42);
  a42 = &a31;
  sub_1003009DC((void ***)&a42);
  if (a40 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1003AAEF0(uint64_t a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X8>)
{
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  std::string::size_type size;
  std::string *v20;
  __int128 v21;
  char *v22;
  NSObject *v23;
  const char *v24;
  std::string *v25;
  std::string v26;
  std::string v27;
  std::string v28;
  std::string v29;
  std::string v30;
  void *v31[2];
  int64_t v32;
  __int128 v33;
  uint64_t v34;
  std::string v35;
  std::string v36;
  std::string v37;

  if (*(_BYTE *)(a1 + 8))
  {
    v33 = 0uLL;
    v34 = 0;
    *((_BYTE *)&v27.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&v27, "SELECT ");
    v6 = std::string::append(&v27, "ModelUUID");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v28, ",");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v35, "ClientID");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v29, " FROM ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v30, "MicroLocationModels");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v37, " LIMIT ");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v26, a2);
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v18 = &v26;
    else
      v18 = (std::string *)v26.__r_.__value_.__r.__words[0];
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    else
      size = v26.__r_.__value_.__l.__size_;
    v20 = std::string::append(&v36, (const std::string::value_type *)v18, size);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v32 = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)v31 = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v26.__r_.__value_.__l.__data_);
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v36.__r_.__value_.__l.__data_);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v35.__r_.__value_.__l.__data_);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v27.__r_.__value_.__l.__data_);
    if (v32 >= 0)
      v22 = (char *)v31;
    else
      v22 = (char *)v31[0];
    sub_1000CDA68(*(_QWORD *)a1, v22);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v23 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v36.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all Model IDs, Client IDs", (uint8_t *)&v36, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v36, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v37.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &v36, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all Model IDs, Client IDs", &v37, 2);
    v25 = (std::string *)v24;
    sub_100512490("Generic", 1, 0, 2, "std::vector<std::pair<std::string, std::string>> CLMicroLocationModelTable::selectAllModelIdsClientIds(uint32_t)", "%s\n", v24);
    if (v25 != &v36)
      free(v25);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
}

void sub_1003AB3EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1003AB720(uint64_t *a1, __int128 *a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  void *v20[5];

  v6 = a1[2];
  v4 = a1 + 2;
  v5 = v6;
  v7 = *(v4 - 1);
  if (v7 >= v6)
  {
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a1) >> 4);
    v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555)
      sub_100259694();
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 4);
    if (2 * v13 > v12)
      v12 = 2 * v13;
    if (v13 >= 0x2AAAAAAAAAAAAAALL)
      v14 = 0x555555555555555;
    else
      v14 = v12;
    v20[4] = v4;
    if (v14)
      v15 = (char *)sub_100313718((uint64_t)v4, v14);
    else
      v15 = 0;
    v16 = &v15[48 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[48 * v14];
    v17 = *a2;
    *((_QWORD *)v16 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v16 = v17;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v18 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)v16 + 5) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(v16 + 24) = v18;
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)a2 + 3) = 0;
    v20[2] = v16 + 48;
    sub_1003B0278(a1, v20);
    v10 = a1[1];
    sub_1003B0424(v20);
  }
  else
  {
    v8 = *a2;
    *(_QWORD *)(v7 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v7 = v8;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v9 = *(__int128 *)((char *)a2 + 24);
    *(_QWORD *)(v7 + 40) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(v7 + 24) = v9;
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)a2 + 3) = 0;
    v10 = v7 + 48;
    a1[1] = v7 + 48;
  }
  a1[1] = v10;
  return v10 - 48;
}

void sub_1003AB878(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003B0424((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003AB88C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  NSObject *v4;
  char v5;
  int i;
  unsigned int v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  std::string::size_type size;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  __int128 v27;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  std::string *v34;
  __int128 v35;
  std::string *v36;
  __int128 v37;
  std::string *v38;
  __int128 v39;
  std::string *v40;
  std::string::size_type v41;
  std::string *v42;
  __int128 v43;
  std::string *v44;
  __int128 v45;
  std::string *v46;
  __int128 v47;
  std::string *v48;
  __int128 v49;
  std::string *v50;
  __int128 v51;
  std::string *v52;
  std::string::size_type v53;
  std::string *v54;
  __int128 v55;
  std::string *v56;
  __int128 v57;
  char *v58;
  NSObject *v59;
  const char *v61;
  std::string *v62;
  const char *v63;
  std::string *v64;
  std::string v67;
  std::string v68;
  std::string v69;
  std::string v70;
  std::string v71;
  std::string v72;
  std::string v73;
  std::string v74;
  std::string v75;
  std::string v76;
  std::string v77;
  std::string v78;
  std::string v79;
  std::string v80;
  std::string v81;
  std::string v82;
  std::string v83;
  std::string v84;
  std::string v85;
  std::string v86;
  std::string v87;
  std::string v88;
  std::string v89;
  std::string v90;
  void *__p[2];
  int64_t v92;
  std::string buf[68];

  if (*(_BYTE *)(a1 + 8))
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    v4 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 67240448;
      HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = a3;
      LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 1026;
      *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Keeping %{public}d models for LSL models, %{public}d models per other types", (uint8_t *)buf, 0xEu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132BE0);
      LODWORD(__p[0]) = 67240448;
      HIDWORD(__p[0]) = a3;
      LOWORD(__p[1]) = 1026;
      *(_DWORD *)((char *)&__p[1] + 2) = a2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 2, "Keeping %{public}d models for LSL models, %{public}d models per other types", __p, 14);
      v62 = (std::string *)v61;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteUnneededModels(uint32_t, uint32_t)", "%s\n", v61);
      if (v62 != buf)
        free(v62);
    }
    v5 = sub_1003AC5C4((uint64_t *)a1);
    for (i = 0; i != 4; ++i)
    {
      *((_BYTE *)&v70.__r_.__value_.__s + 23) = 12;
      if (i == 2)
        v7 = a3;
      else
        v7 = a2;
      strcpy((char *)&v70, "DELETE FROM ");
      v8 = std::string::append(&v70, "MicroLocationModels");
      v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      v71.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v9;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      v10 = std::string::append(&v71, " WHERE ");
      v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v72.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      v12 = std::string::append(&v72, "ModelType");
      v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v73.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      v14 = std::string::append(&v73, "=");
      v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
      v74.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v15;
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      v14->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v69, i);
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16 = &v69;
      else
        v16 = (std::string *)v69.__r_.__value_.__r.__words[0];
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v69.__r_.__value_.__r.__words[2]);
      else
        size = v69.__r_.__value_.__l.__size_;
      v18 = std::string::append(&v74, (const std::string::value_type *)v16, size);
      v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
      v75.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v19;
      v18->__r_.__value_.__l.__size_ = 0;
      v18->__r_.__value_.__r.__words[2] = 0;
      v18->__r_.__value_.__r.__words[0] = 0;
      v20 = std::string::append(&v75, " AND ");
      v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v21;
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      v22 = std::string::append(&v76, "ModelUUID");
      v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v23;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      v24 = std::string::append(&v77, " NOT IN (");
      v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
      v78.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v25;
      v24->__r_.__value_.__l.__size_ = 0;
      v24->__r_.__value_.__r.__words[2] = 0;
      v24->__r_.__value_.__r.__words[0] = 0;
      v26 = std::string::append(&v78, " SELECT ");
      v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
      v79.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v27;
      v26->__r_.__value_.__l.__size_ = 0;
      v26->__r_.__value_.__r.__words[2] = 0;
      v26->__r_.__value_.__r.__words[0] = 0;
      v28 = std::string::append(&v79, "ModelUUID");
      v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v80.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      v30 = std::string::append(&v80, " FROM ");
      v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      v32 = std::string::append(&v81, "MicroLocationModels");
      v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
      v82.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v33;
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      v34 = std::string::append(&v82, " WHERE ");
      v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      v83.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v83.__r_.__value_.__l.__data_ = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      v36 = std::string::append(&v83, "ModelType");
      v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      v84.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      v38 = std::string::append(&v84, "=");
      v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
      v85.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v39;
      v38->__r_.__value_.__l.__size_ = 0;
      v38->__r_.__value_.__r.__words[2] = 0;
      v38->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v68, i);
      if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v40 = &v68;
      else
        v40 = (std::string *)v68.__r_.__value_.__r.__words[0];
      if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v41 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
      else
        v41 = v68.__r_.__value_.__l.__size_;
      v42 = std::string::append(&v85, (const std::string::value_type *)v40, v41);
      v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
      v86.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v43;
      v42->__r_.__value_.__l.__size_ = 0;
      v42->__r_.__value_.__r.__words[2] = 0;
      v42->__r_.__value_.__r.__words[0] = 0;
      v44 = std::string::append(&v86, " ORDER BY ");
      v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      v87.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      v46 = std::string::append(&v87, "GenerationTimestamp");
      v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
      v88.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v47;
      v46->__r_.__value_.__l.__size_ = 0;
      v46->__r_.__value_.__r.__words[2] = 0;
      v46->__r_.__value_.__r.__words[0] = 0;
      v48 = std::string::append(&v88, " DESC ");
      v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
      v89.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v49;
      v48->__r_.__value_.__l.__size_ = 0;
      v48->__r_.__value_.__r.__words[2] = 0;
      v48->__r_.__value_.__r.__words[0] = 0;
      v50 = std::string::append(&v89, " LIMIT ");
      v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v90.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v67, v7);
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v52 = &v67;
      else
        v52 = (std::string *)v67.__r_.__value_.__r.__words[0];
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v53 = HIBYTE(v67.__r_.__value_.__r.__words[2]);
      else
        v53 = v67.__r_.__value_.__l.__size_;
      v54 = std::string::append(&v90, (const std::string::value_type *)v52, v53);
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      buf[0].__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v55;
      v54->__r_.__value_.__l.__size_ = 0;
      v54->__r_.__value_.__r.__words[2] = 0;
      v54->__r_.__value_.__r.__words[0] = 0;
      v56 = std::string::append(buf, ")");
      v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
      v92 = v56->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v57;
      v56->__r_.__value_.__l.__size_ = 0;
      v56->__r_.__value_.__r.__words[2] = 0;
      v56->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(buf[0].__r_.__value_.__l.__data_);
      if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v67.__r_.__value_.__l.__data_);
      if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v90.__r_.__value_.__l.__data_);
      if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v89.__r_.__value_.__l.__data_);
      if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v88.__r_.__value_.__l.__data_);
      if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v87.__r_.__value_.__l.__data_);
      if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v86.__r_.__value_.__l.__data_);
      if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v68.__r_.__value_.__l.__data_);
      if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v85.__r_.__value_.__l.__data_);
      if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v84.__r_.__value_.__l.__data_);
      if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v83.__r_.__value_.__l.__data_);
      if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v82.__r_.__value_.__l.__data_);
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v81.__r_.__value_.__l.__data_);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v79.__r_.__value_.__l.__data_);
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v78.__r_.__value_.__l.__data_);
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v77.__r_.__value_.__l.__data_);
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v76.__r_.__value_.__l.__data_);
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v75.__r_.__value_.__l.__data_);
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v69.__r_.__value_.__l.__data_);
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v74.__r_.__value_.__l.__data_);
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v73.__r_.__value_.__l.__data_);
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v72.__r_.__value_.__l.__data_);
      if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v71.__r_.__value_.__l.__data_);
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v70.__r_.__value_.__l.__data_);
        if ((v5 & 1) != 0)
        {
LABEL_79:
          if (v92 >= 0)
            v58 = (char *)__p;
          else
            v58 = (char *)__p[0];
          sub_1000CDA68(*(_QWORD *)a1, v58);
        }
      }
      else if ((v5 & 1) != 0)
      {
        goto LABEL_79;
      }
      v5 = 0;
      if (SHIBYTE(v92) < 0)
        operator delete(__p[0]);
    }
  }
  else
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    v59 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteUnneededModels()", (uint8_t *)buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132BE0);
      LOWORD(__p[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't deleteUnneededModels()", __p, 2);
      v64 = (std::string *)v63;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteUnneededModels(uint32_t, uint32_t)", "%s\n", v63);
      if (v64 != buf)
        free(v64);
    }
  }
  return 0;
}

void sub_1003AC32C(_Unwind_Exception *a1)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  if (SLOBYTE(STACK[0x317]) < 0)
    operator delete((void *)STACK[0x300]);
  _Unwind_Resume(a1);
}

void sub_1003AC544()
{
  JUMPOUT(0x1003AC43CLL);
}

void sub_1003AC54C()
{
  JUMPOUT(0x1003AC44CLL);
}

void sub_1003AC554()
{
  JUMPOUT(0x1003AC45CLL);
}

void sub_1003AC55C()
{
  JUMPOUT(0x1003AC46CLL);
}

void sub_1003AC564()
{
  JUMPOUT(0x1003AC47CLL);
}

void sub_1003AC56C()
{
  JUMPOUT(0x1003AC48CLL);
}

void sub_1003AC574()
{
  JUMPOUT(0x1003AC49CLL);
}

void sub_1003AC57C()
{
  JUMPOUT(0x1003AC4ACLL);
}

void sub_1003AC584()
{
  JUMPOUT(0x1003AC4BCLL);
}

void sub_1003AC58C()
{
  JUMPOUT(0x1003AC4CCLL);
}

void sub_1003AC594()
{
  JUMPOUT(0x1003AC4DCLL);
}

void sub_1003AC59C()
{
  JUMPOUT(0x1003AC4ECLL);
}

void sub_1003AC5A4()
{
  JUMPOUT(0x1003AC4FCLL);
}

void sub_1003AC5AC()
{
  JUMPOUT(0x1003AC50CLL);
}

void sub_1003AC5B4()
{
  JUMPOUT(0x1003AC51CLL);
}

void sub_1003AC5BC()
{
  JUMPOUT(0x1003AC52CLL);
}

uint64_t sub_1003AC5C4(uint64_t *a1)
{
  CFStringRef v2;
  int v3;
  unsigned int data;
  std::__shared_weak_count *size;
  unint64_t *v6;
  unint64_t v7;
  unsigned int v8;
  std::string::size_type i;
  std::string::size_type v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t j;
  std::string *v24;
  __int128 v25;
  int v26;
  const std::string::value_type *v27;
  std::string::size_type v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *p_buf;
  std::string::size_type v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  __int128 v40;
  std::string *v41;
  std::string::size_type v42;
  std::string *v43;
  __int128 v44;
  std::string *v45;
  __int128 v46;
  std::string *v47;
  __int128 v48;
  std::string *v49;
  __int128 v50;
  std::string *v51;
  std::string::size_type v52;
  std::string *v53;
  __int128 v54;
  std::string *v55;
  __int128 v56;
  std::string *v57;
  std::string::size_type v58;
  std::string *v59;
  __int128 v60;
  std::string *v61;
  const char *v63;
  std::string *v64;
  std::string v65;
  std::string v66;
  std::string v67;
  std::string v68;
  std::string v69;
  std::string v70;
  std::string v71;
  std::string v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  std::string v79;
  std::string v80;
  std::string v81;
  std::string buf;
  void *__p;
  char v84;
  std::string v85;
  char v86;

  sub_1001E4804(&buf);
  LODWORD(v85.__r_.__value_.__l.__data_) = 0;
  v2 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsDatabaseSelectionLimit", 0x8000100u, kCFAllocatorNull);
  v3 = sub_1000B1180((uint64_t)buf.__r_.__value_.__l.__data_, (uint64_t)v2, &v85);
  CFRelease(v2);
  data = v85.__r_.__value_.__l.__data_;
  size = (std::__shared_weak_count *)buf.__r_.__value_.__l.__size_;
  if (buf.__r_.__value_.__l.__size_)
  {
    v6 = (unint64_t *)(buf.__r_.__value_.__l.__size_ + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  if (v3)
    v8 = data;
  else
    v8 = 5000;
  memset(&v79, 0, sizeof(v79));
  v76 = 0;
  v77 = 0;
  v78 = 0;
  v73 = 0;
  v74 = 0;
  v75 = 0;
  memset(&v72, 0, sizeof(v72));
  sub_1003AAEF0((uint64_t)a1, v8, &buf);
  sub_1003B0498((void **)&v79.__r_.__value_.__l.__data_);
  v79 = buf;
  memset(&buf, 0, sizeof(buf));
  v85.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf;
  sub_1003B01F4((void ***)&v85);
  v10 = v79.__r_.__value_.__l.__size_;
  for (i = v79.__r_.__value_.__r.__words[0]; i != v10; i += 48)
  {
    sub_1002B86D0((const std::string *)(i + 24), &v85);
    if (v86)
    {
      sub_1000BE57C((char *)&buf, (__int128 *)i, (__int128 *)&v85);
      sub_1003AB720(&v76, (__int128 *)&buf);
      if (v84 < 0)
        operator delete(__p);
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
        operator delete(buf.__r_.__value_.__l.__data_);
      if (v86)
      {
        if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v85.__r_.__value_.__l.__data_);
      }
    }
  }
  if (v76 != v77)
  {
    sub_1003AD2D8((uint64_t)a1, v8, &buf);
    sub_100385A64((uint64_t *)&v72);
    v72 = buf;
    memset(&buf, 0, sizeof(buf));
    v85.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf;
    sub_100259608((void ***)&v85);
    v11 = v76;
    v12 = v77;
    v85.__r_.__value_.__r.__words[0] = (std::string::size_type)&v73;
    while (v11 != v12)
    {
      v13 = sub_100304CA0((uint64_t)v72.__r_.__value_.__l.__data_, v72.__r_.__value_.__l.__size_, (unsigned __int8 **)(v11 + 24));
      if (v13 == v72.__r_.__value_.__l.__size_)
        sub_1003B0504((uint64_t **)&v85, (__int128 *)v11);
      v11 += 48;
    }
  }
  if (v73 != v74)
  {
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    v14 = qword_1022A00F8;
    if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 134217984;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = 0xAAAAAAAAAAAAAAABLL * ((v74 - v73) >> 4);
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Deleting %ld models which refer to deleted services", (uint8_t *)&buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1022A00F0 != -1)
        dispatch_once(&qword_1022A00F0, &stru_102132BE0);
      LODWORD(v85.__r_.__value_.__l.__data_) = 134217984;
      *(std::string::size_type *)((char *)v85.__r_.__value_.__r.__words + 4) = 0xAAAAAAAAAAAAAAABLL * ((v74 - v73) >> 4);
      _os_log_send_and_compose_impl(2, 0, &buf, 1628, &_mh_execute_header, qword_1022A00F8, 0, "Deleting %ld models which refer to deleted services", &v85);
      v64 = (std::string *)v63;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteAllModelsOfDeletedServices()", "%s\n", v63);
      if (v64 != &buf)
        free(v64);
    }
    *((_BYTE *)&v85.__r_.__value_.__s + 23) = 1;
    LOWORD(v85.__r_.__value_.__l.__data_) = 34;
    v15 = *(char *)(v73 + 23);
    if (v15 >= 0)
      v16 = (const std::string::value_type *)v73;
    else
      v16 = *(const std::string::value_type **)v73;
    if (v15 >= 0)
      v17 = *(unsigned __int8 *)(v73 + 23);
    else
      v17 = *(_QWORD *)(v73 + 8);
    v18 = std::string::append(&v85, v16, v17);
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    buf.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = std::string::append(&buf, "\"");
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v71.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      operator delete(buf.__r_.__value_.__l.__data_);
    if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v85.__r_.__value_.__l.__data_);
    v22 = v74;
    for (j = v73 + 48; j != v22; j += 48)
    {
      *((_BYTE *)&v80.__r_.__value_.__s + 23) = 1;
      LOWORD(v80.__r_.__value_.__l.__data_) = 44;
      v24 = std::string::append(&v80, "\"");
      v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v25;
      v24->__r_.__value_.__l.__size_ = 0;
      v24->__r_.__value_.__r.__words[2] = 0;
      v24->__r_.__value_.__r.__words[0] = 0;
      v26 = *(char *)(j + 23);
      if (v26 >= 0)
        v27 = (const std::string::value_type *)j;
      else
        v27 = *(const std::string::value_type **)j;
      if (v26 >= 0)
        v28 = *(unsigned __int8 *)(j + 23);
      else
        v28 = *(_QWORD *)(j + 8);
      v29 = std::string::append(&v81, v27, v28);
      v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      v85.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      v31 = std::string::append(&v85, "\"");
      v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
      buf.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
      *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v32;
      v31->__r_.__value_.__l.__size_ = 0;
      v31->__r_.__value_.__r.__words[2] = 0;
      v31->__r_.__value_.__r.__words[0] = 0;
      if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_buf = &buf;
      else
        p_buf = (std::string *)buf.__r_.__value_.__r.__words[0];
      if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v34 = HIBYTE(buf.__r_.__value_.__r.__words[2]);
      else
        v34 = buf.__r_.__value_.__l.__size_;
      std::string::append(&v71, (const std::string::value_type *)p_buf, v34);
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
        operator delete(buf.__r_.__value_.__l.__data_);
      if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v85.__r_.__value_.__l.__data_);
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v81.__r_.__value_.__l.__data_);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
    }
    *((_BYTE *)&v66.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&v66, " WHERE ");
    v35 = std::string::append(&v66, "ModelUUID");
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    v37 = std::string::append(&v67, " in ");
    v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
    v68.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v38;
    v37->__r_.__value_.__l.__size_ = 0;
    v37->__r_.__value_.__r.__words[2] = 0;
    v37->__r_.__value_.__r.__words[0] = 0;
    v39 = std::string::append(&v68, "(");
    v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
    v69.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v40;
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    if ((v71.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v41 = &v71;
    else
      v41 = (std::string *)v71.__r_.__value_.__r.__words[0];
    if ((v71.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = HIBYTE(v71.__r_.__value_.__r.__words[2]);
    else
      v42 = v71.__r_.__value_.__l.__size_;
    v43 = std::string::append(&v69, (const std::string::value_type *)v41, v42);
    v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
    v70.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v44;
    v43->__r_.__value_.__l.__size_ = 0;
    v43->__r_.__value_.__r.__words[2] = 0;
    v43->__r_.__value_.__r.__words[0] = 0;
    v45 = std::string::append(&v70, ") AND ");
    v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
    v80.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v46;
    v45->__r_.__value_.__l.__size_ = 0;
    v45->__r_.__value_.__r.__words[2] = 0;
    v45->__r_.__value_.__r.__words[0] = 0;
    v47 = std::string::append(&v80, "ModelType");
    v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
    v81.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v48;
    v47->__r_.__value_.__l.__size_ = 0;
    v47->__r_.__value_.__r.__words[2] = 0;
    v47->__r_.__value_.__r.__words[0] = 0;
    v49 = std::string::append(&v81, "!=");
    v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
    buf.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v50;
    v49->__r_.__value_.__l.__size_ = 0;
    v49->__r_.__value_.__r.__words[2] = 0;
    v49->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v65, 0);
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v51 = &v65;
    else
      v51 = (std::string *)v65.__r_.__value_.__r.__words[0];
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v52 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
    else
      v52 = v65.__r_.__value_.__l.__size_;
    v53 = std::string::append(&buf, (const std::string::value_type *)v51, v52);
    v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
    v85.__r_.__value_.__r.__words[2] = v53->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v54;
    v53->__r_.__value_.__l.__size_ = 0;
    v53->__r_.__value_.__r.__words[2] = 0;
    v53->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v65.__r_.__value_.__l.__data_);
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      operator delete(buf.__r_.__value_.__l.__data_);
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v81.__r_.__value_.__l.__data_);
    if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v80.__r_.__value_.__l.__data_);
    if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v70.__r_.__value_.__l.__data_);
    if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v69.__r_.__value_.__l.__data_);
    if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v68.__r_.__value_.__l.__data_);
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v67.__r_.__value_.__l.__data_);
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v66.__r_.__value_.__l.__data_);
    *((_BYTE *)&v80.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v80, "DELETE FROM ");
    v55 = std::string::append(&v80, "MicroLocationModels");
    v56 = *(_OWORD *)&v55->__r_.__value_.__l.__data_;
    buf.__r_.__value_.__r.__words[2] = v55->__r_.__value_.__r.__words[2];
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v56;
    v55->__r_.__value_.__l.__size_ = 0;
    v55->__r_.__value_.__r.__words[2] = 0;
    v55->__r_.__value_.__r.__words[0] = 0;
    if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v57 = &v85;
    else
      v57 = (std::string *)v85.__r_.__value_.__r.__words[0];
    if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v58 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
    else
      v58 = v85.__r_.__value_.__l.__size_;
    v59 = std::string::append(&buf, (const std::string::value_type *)v57, v58);
    v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
    v81.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v60;
    v59->__r_.__value_.__l.__size_ = 0;
    v59->__r_.__value_.__r.__words[2] = 0;
    v59->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      operator delete(buf.__r_.__value_.__l.__data_);
    if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v80.__r_.__value_.__l.__data_);
    if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v61 = &v81;
    else
      v61 = (std::string *)v81.__r_.__value_.__r.__words[0];
    sub_1000CDA68(*a1, (char *)v61);
  }
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v72;
  sub_100259608((void ***)&buf);
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v73;
  sub_1003B01F4((void ***)&buf);
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v76;
  sub_1003B01F4((void ***)&buf);
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v79;
  sub_1003B01F4((void ***)&buf);
  return 1;
}

void sub_1003AD05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  void *a65;
  uint64_t v65;
  uint64_t v66;

  if (v65)
    (*(void (**)(uint64_t))(*(_QWORD *)v65 + 8))(v65);
  if (a63 < 0)
    operator delete(__p);
  if (*(char *)(v66 - 105) < 0)
    operator delete(*(void **)(v66 - 128));
  if (a38 < 0)
    operator delete(a33);
  a65 = &a40;
  sub_100259608((void ***)&a65);
  a65 = &a44;
  sub_1003B01F4((void ***)&a65);
  a65 = &a47;
  sub_1003B01F4((void ***)&a65);
  a65 = &a50;
  sub_1003B01F4((void ***)&a65);
  _Unwind_Resume(a1);
}

void sub_1003AD2D8(uint64_t a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X8>)
{
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  std::string::size_type size;
  std::string *v16;
  __int128 v17;
  char *v18;
  NSObject *v19;
  const char *v20;
  std::string *v21;
  std::string v22;
  std::string v23;
  void *__p[2];
  int64_t v25;
  __int128 v26;
  uint64_t v27;
  std::string v28;
  std::string v29;
  std::string v30;
  std::string v31;

  if (*(_BYTE *)(a1 + 8))
  {
    v26 = 0uLL;
    v27 = 0;
    *((_BYTE *)&v23.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v23, "SELECT DISTINCT ");
    v6 = std::string::append(&v23, "ServiceUUID");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v29, " FROM ");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v30, "MiLoServices");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v28, " LIMIT ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v22, a2);
    if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v14 = &v22;
    else
      v14 = (std::string *)v22.__r_.__value_.__r.__words[0];
    if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
    else
      size = v22.__r_.__value_.__l.__size_;
    v16 = std::string::append(&v31, (const std::string::value_type *)v14, size);
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v25 = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v22.__r_.__value_.__l.__data_);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v23.__r_.__value_.__l.__data_);
    if (v25 >= 0)
      v18 = (char *)__p;
    else
      v18 = (char *)__p[0];
    sub_1000CDA68(*(_QWORD *)a1, v18);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v19 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v31.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all Service UUIDs", (uint8_t *)&v31, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v31, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v28.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &v31, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select all Service UUIDs", &v28, 2);
    v21 = (std::string *)v20;
    sub_100512490("Generic", 1, 0, 2, "std::vector<std::string> CLMicroLocationModelTable::getAllServicesUUIDs(uint32_t)", "%s\n", v20);
    if (v21 != &v31)
      free(v21);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
}

void sub_1003AD804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1003ADAF4(uint64_t a1, unint64_t a2)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  std::string::size_type size;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  char *v32;
  NSObject *v33;
  const char *v35;
  std::string *v36;
  std::string v37;
  std::string v38;
  std::string v39;
  std::string v40;
  std::string v41;
  std::string v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  std::string v48;
  std::string v49;
  void *__p[2];
  int64_t v51;
  std::string v52;

  if (*(_BYTE *)(a1 + 8))
  {
    *((_BYTE *)&v38.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v38, "DELETE FROM ");
    v4 = std::string::append(&v38, "MicroLocationModels");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    v6 = std::string::append(&v39, " WHERE ");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v40, "ModelUUID");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = std::string::append(&v41, " IN (");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v42, "SELECT ");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v43, "ModelUUID");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v44, " FROM ");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v45, "MicroLocationModels");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = std::string::append(&v46, " ORDER BY ");
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    v22 = std::string::append(&v47, "GenerationTimestamp");
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    v24 = std::string::append(&v48, " LIMIT ");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v37, a2);
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &v37;
    else
      v26 = (std::string *)v37.__r_.__value_.__r.__words[0];
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
    else
      size = v37.__r_.__value_.__l.__size_;
    v28 = std::string::append(&v49, (const std::string::value_type *)v26, size);
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = std::string::append(&v52, ")");
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v51 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v41.__r_.__value_.__l.__data_);
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v40.__r_.__value_.__l.__data_);
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v39.__r_.__value_.__l.__data_);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v38.__r_.__value_.__l.__data_);
    if (v51 >= 0)
      v32 = (char *)__p;
    else
      v32 = (char *)__p[0];
    sub_1000CDA68(*(_QWORD *)a1, v32);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v33 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v52.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v52, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v52, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(__p[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, &v52, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't deleteOldestRows", __p, 2);
    v36 = (std::string *)v35;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteOldestRows(uint64_t)", "%s\n", v35);
    if (v36 != &v52)
      free(v36);
  }
  return 0;
}

void sub_1003AE16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  char a66;
  uint64_t v66;

  if (v66)
    (*(void (**)(uint64_t))(*(_QWORD *)v66 + 8))(v66);
  if (a66 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1003AE2FC(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v5;
  const std::string::value_type *v6;
  std::string::size_type v7;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t i;
  std::string *v14;
  __int128 v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  std::string::size_type size;
  std::string *v25;
  __int128 v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  std::string::size_type v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  __int128 v40;
  std::string *v41;
  NSObject *v42;
  const char *v44;
  std::string *v45;
  std::string::value_type v46[8];
  char v47;
  std::string::value_type v48[8];
  char v49;
  std::string::value_type __s[8];
  char v51;
  std::string v52;
  std::string v53;
  std::string v54;
  std::string v55;
  std::string v56;
  std::string v57;
  std::string v58;
  std::string v59;
  std::string v60;

  if (*(_BYTE *)(a1 + 8))
  {
    v2 = a2;
    v3 = *a2;
    if (*a2 != a2[1])
    {
      *((_BYTE *)&v59.__r_.__value_.__s + 23) = 1;
      LOWORD(v59.__r_.__value_.__l.__data_) = 34;
      v5 = *(char *)(v3 + 23);
      if (v5 >= 0)
        v6 = (const std::string::value_type *)v3;
      else
        v6 = *(const std::string::value_type **)v3;
      if (v5 >= 0)
        v7 = *(unsigned __int8 *)(v3 + 23);
      else
        v7 = *(_QWORD *)(v3 + 8);
      v8 = std::string::append(&v59, v6, v7);
      v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      v60.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v9;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      v10 = std::string::append(&v60, "\"");
      v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v56.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v60.__r_.__value_.__l.__data_);
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v59.__r_.__value_.__l.__data_);
      v12 = v2[1];
      for (i = *v2 + 24; i != v12; i += 24)
      {
        *((_BYTE *)&v57.__r_.__value_.__s + 23) = 1;
        LOWORD(v57.__r_.__value_.__l.__data_) = 44;
        v14 = std::string::append(&v57, "\"");
        v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v15;
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        v16 = *(char *)(i + 23);
        if (v16 >= 0)
          v17 = (const std::string::value_type *)i;
        else
          v17 = *(const std::string::value_type **)i;
        if (v16 >= 0)
          v18 = *(unsigned __int8 *)(i + 23);
        else
          v18 = *(_QWORD *)(i + 8);
        v19 = std::string::append(&v58, v17, v18);
        v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        v21 = std::string::append(&v59, "\"");
        v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v23 = &v60;
        else
          v23 = (std::string *)v60.__r_.__value_.__r.__words[0];
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(v60.__r_.__value_.__r.__words[2]);
        else
          size = v60.__r_.__value_.__l.__size_;
        std::string::append(&v56, (const std::string::value_type *)v23, size);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v58.__r_.__value_.__l.__data_);
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v57.__r_.__value_.__l.__data_);
      }
      *((_BYTE *)&v52.__r_.__value_.__s + 23) = 12;
      strcpy((char *)&v52, "DELETE FROM ");
      v25 = std::string::append(&v52, "MicroLocationModels");
      v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
      v53.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v26;
      v25->__r_.__value_.__l.__size_ = 0;
      v25->__r_.__value_.__r.__words[2] = 0;
      v25->__r_.__value_.__r.__words[0] = 0;
      v27 = std::string::append(&v53, " WHERE ");
      v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v28;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      v29 = std::string::append(&v54, "ClientID");
      v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      v55.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      v51 = 4;
      strcpy(__s, " IN ");
      v31 = std::string::append(&v55, __s, 4uLL);
      v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
      v57.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v32;
      v31->__r_.__value_.__l.__size_ = 0;
      v31->__r_.__value_.__r.__words[2] = 0;
      v31->__r_.__value_.__r.__words[0] = 0;
      v49 = 1;
      strcpy(v48, "(");
      v33 = std::string::append(&v57, v48, 1uLL);
      v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
      v58.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v34;
      v33->__r_.__value_.__l.__size_ = 0;
      v33->__r_.__value_.__r.__words[2] = 0;
      v33->__r_.__value_.__r.__words[0] = 0;
      if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v35 = &v56;
      else
        v35 = (std::string *)v56.__r_.__value_.__r.__words[0];
      if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v36 = HIBYTE(v56.__r_.__value_.__r.__words[2]);
      else
        v36 = v56.__r_.__value_.__l.__size_;
      v37 = std::string::append(&v58, (const std::string::value_type *)v35, v36);
      v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
      v60.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v38;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      v47 = 1;
      strcpy(v46, ")");
      v39 = std::string::append(&v60, v46, 1uLL);
      v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
      v59.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v40;
      v39->__r_.__value_.__l.__size_ = 0;
      v39->__r_.__value_.__r.__words[2] = 0;
      v39->__r_.__value_.__r.__words[0] = 0;
      if (v47 < 0)
        operator delete(*(void **)v46);
      if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v60.__r_.__value_.__l.__data_);
      if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v58.__r_.__value_.__l.__data_);
      if (v49 < 0)
        operator delete(*(void **)v48);
      if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v57.__r_.__value_.__l.__data_);
      if (v51 < 0)
        operator delete(*(void **)__s);
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v55.__r_.__value_.__l.__data_);
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v54.__r_.__value_.__l.__data_);
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v53.__r_.__value_.__l.__data_);
      if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v52.__r_.__value_.__l.__data_);
      if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v41 = &v59;
      else
        v41 = (std::string *)v59.__r_.__value_.__r.__words[0];
      sub_1000CDA68(*(_QWORD *)a1, (char *)v41);
    }
    sub_1018F90D4();
    __break(1u);
  }
  else
  {
    v2 = &qword_1022A0000;
    if (qword_1022A00F0 == -1)
      goto LABEL_66;
  }
  dispatch_once(&qword_1022A00F0, &stru_102132BE0);
LABEL_66:
  v42 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v60.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't delete recording labels", (uint8_t *)&v60, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&v60, 0x65CuLL);
    if (v2[30] != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v59.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &v60, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't delete recording labels", &v59, 2);
    v45 = (std::string *)v44;
    sub_100512490("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteModelsForClients(const std::vector<std::string> &)", "%s\n", v44);
    if (v45 != &v60)
      free(v45);
  }
  return 0;
}

void sub_1003AEA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  uint64_t v55;

  if (v55)
    (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
  if (a55 < 0)
    operator delete(__p);
  if (a40 < 0)
    operator delete(a35);
  _Unwind_Resume(a1);
}

void sub_1003AEBF4(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, _QWORD *a4@<X8>)
{
  std::string *v8;
  __int128 v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  __int128 v27;
  std::string *v28;
  __int128 v29;
  int v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  std::string::size_type size;
  std::string *v39;
  __int128 v40;
  char *v41;
  NSObject *v42;
  const char *v43;
  std::string *v44;
  std::string v45;
  std::string::value_type __s[8];
  char v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  std::string v52;
  std::string v53;
  std::string v54;
  std::string v55;
  std::string v56;
  std::string v57;
  std::string v58;
  void *__p[2];
  int64_t v60;
  __int128 v61;
  uint64_t v62;
  std::string v63;
  std::string v64;
  std::string __str;

  if (*(_BYTE *)(a1 + 8))
  {
    v61 = 0uLL;
    v62 = 0;
    *((_BYTE *)&v48.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v48, "SELECT DISTINCT ");
    v8 = std::string::append(&v48, "LoiGroupId");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v47 = 6;
    strcpy(__s, " FROM ");
    v10 = std::string::append(&v49, __s, 6uLL);
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&v50, "MicroLocationModels");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v51, "    WHERE ");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v52, "ClientID");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v53, " LIKE '%' || ");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v54.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = std::string::append(&v54, "        (SELECT ");
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v55.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    v22 = std::string::append(&v55, "ClientID");
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v56.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    v24 = std::string::append(&v56, " FROM ");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v57.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    v26 = std::string::append(&v57, "MiLoServices");
    v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    v58.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    v28 = std::string::append(&v58, " WHERE UserId==\"");
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v64.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = *(char *)(a2 + 23);
    if (v30 >= 0)
      v31 = (const std::string::value_type *)a2;
    else
      v31 = *(const std::string::value_type **)a2;
    if (v30 >= 0)
      v32 = *(unsigned __int8 *)(a2 + 23);
    else
      v32 = *(_QWORD *)(a2 + 8);
    v33 = std::string::append(&v64, v31, v32);
    v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v63.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    v35 = std::string::append(&v63, "\") || '%' LIMIT ");
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v45, a3);
    if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v37 = &v45;
    else
      v37 = (std::string *)v45.__r_.__value_.__r.__words[0];
    if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v45.__r_.__value_.__r.__words[2]);
    else
      size = v45.__r_.__value_.__l.__size_;
    v39 = std::string::append(&__str, (const std::string::value_type *)v37, size);
    v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
    v60 = v39->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v40;
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v63.__r_.__value_.__l.__data_);
    if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v64.__r_.__value_.__l.__data_);
    if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v58.__r_.__value_.__l.__data_);
    if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v57.__r_.__value_.__l.__data_);
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v56.__r_.__value_.__l.__data_);
    if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v55.__r_.__value_.__l.__data_);
    if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v54.__r_.__value_.__l.__data_);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v53.__r_.__value_.__l.__data_);
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (v47 < 0)
      operator delete(*(void **)__s);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (v60 >= 0)
      v41 = (char *)__p;
    else
      v41 = (char *)__p[0];
    sub_1000CDA68(*(_QWORD *)a1, v41);
  }
  if (qword_1022A00F0 != -1)
    dispatch_once(&qword_1022A00F0, &stru_102132BE0);
  v42 = qword_1022A00F8;
  if (os_log_type_enabled((os_log_t)qword_1022A00F8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__str.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select GroupIDs for current user", (uint8_t *)&__str, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(&__str, 0x65CuLL);
    if (qword_1022A00F0 != -1)
      dispatch_once(&qword_1022A00F0, &stru_102132BE0);
    LOWORD(v63.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl(2, 0, &__str, 1628, &_mh_execute_header, qword_1022A00F8, 0, "#Warning Table is not valid so we can't select GroupIDs for current user", &v63, 2);
    v44 = (std::string *)v43;
    sub_100512490("Generic", 1, 0, 2, "std::vector<std::string> CLMicroLocationModelTable::selectLoiGroupIdsForCurrentUser(const std::string &, uint32_t)", "%s\n", v43);
    if (v44 != &__str)
      free(v44);
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_1003AF334(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003AF708(std::string *__dst, const std::string *a2)
{
  __int128 v3;

  if (__dst[1].__r_.__value_.__s.__data_[0] == a2[1].__r_.__value_.__s.__data_[0])
  {
    if (__dst[1].__r_.__value_.__s.__data_[0])
      std::string::operator=(__dst, a2);
  }
  else if (__dst[1].__r_.__value_.__s.__data_[0])
  {
    if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst->__r_.__value_.__l.__data_);
    __dst[1].__r_.__value_.__s.__data_[0] = 0;
  }
  else
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_100115CE4(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else
    {
      v3 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      __dst->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v3;
    }
    __dst[1].__r_.__value_.__s.__data_[0] = 1;
  }
}

void sub_1003AF798(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_1003AF7C4@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  const void *v6;
  uint64_t v7;
  int v8;
  wireless_diagnostics::google::protobuf::MessageLite *v9;
  uint64_t result;
  std::runtime_error *exception;
  std::string v12;

  v6 = sqlite3_column_blob(a1, a2);
  v7 = sqlite3_column_bytes(a1, a2);
  if (!v6)
  {
    sub_1018F9240(v7);
LABEL_5:
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_1015A2E04(&v12, "Unable to parse protobuf");
    std::runtime_error::runtime_error(exception, &v12);
    exception->__vftable = (std::runtime_error_vtbl *)&off_10212AC58;
  }
  v8 = v7;
  sub_1002BBA84(a3);
  result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(v9, v6, v8);
  if ((result & 1) == 0)
    goto LABEL_5;
  return result;
}

void sub_1003AF88C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  void *v16;
  int v17;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_1002C8104(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t sub_1003AF8D4(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  void *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t *v22;

  v7 = 0xAF8AF8AF8AF8AF8BLL * ((a1[1] - *a1) >> 3);
  v8 = v7 + 1;
  if (v7 + 1 > 0xEA0EA0EA0EA0EALL)
    sub_100259694();
  if (0x5F15F15F15F15F16 * ((a1[2] - *a1) >> 3) > v8)
    v8 = 0x5F15F15F15F15F16 * ((a1[2] - *a1) >> 3);
  if (0xAF8AF8AF8AF8AF8BLL * ((a1[2] - *a1) >> 3) >= 0x75075075075075)
    v14 = 0xEA0EA0EA0EA0EALL;
  else
    v14 = v8;
  v22 = a1 + 2;
  if (v14)
    v15 = (char *)sub_1003AFB74((uint64_t)(a1 + 2), v14);
  else
    v15 = 0;
  v18 = v15;
  v19 = &v15[280 * v7];
  v21 = &v15[280 * v14];
  sub_1003AFA28((uint64_t)(a1 + 2), (uint64_t)v19, a2, a3, a4, a5, a6);
  v20 = v19 + 280;
  sub_1003AFB00(a1, &v18);
  v16 = a1[1];
  sub_1003AFCF8(&v18);
  return v16;
}

void sub_1003AFA14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003AFCF8((void **)va);
  _Unwind_Resume(a1);
}

void sub_1003AFA28(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *__p[2];
  uint64_t v14;
  char v15;

  v10 = *a3;
  v11 = a3[1];
  v12 = *a4;
  if (*(char *)(a6 + 23) < 0)
  {
    sub_100115CE4(__p, *(void **)a6, *(_QWORD *)(a6 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a6;
    v14 = *(_QWORD *)(a6 + 16);
  }
  v15 = 1;
  sub_1003A8198(a2, v10, v11, a5, (uint64_t)__p, *a7, a7[1], v12);
  if (v15)
  {
    if (SHIBYTE(v14) < 0)
      operator delete(__p[0]);
  }
}

void sub_1003AFADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003AFB00(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1003AFBBC((uint64_t)(a1 + 2), a1[1], (__int128 *)a1[1], *a1, (__int128 *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1003AFB74(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xEA0EA0EA0EA0EBLL)
    sub_10025955C();
  return operator new(280 * a2);
}

uint64_t sub_1003AFBBC(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 *v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  v13 = 0;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 = (__int128 *)((char *)v9 - 280);
      sub_100300804((_OWORD *)(v7 - 280), v9);
      v7 = *((_QWORD *)&v15 + 1) - 280;
      *((_QWORD *)&v15 + 1) -= 280;
    }
    while (v9 != a5);
    v10 = v15;
  }
  v13 = 1;
  sub_1003AFC74((uint64_t)v12);
  return v10;
}

void sub_1003AFC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1003AFC74((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1003AFC74(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1003AFCA8((uint64_t *)a1);
  return a1;
}

uint64_t *sub_1003AFCA8(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(result[2] + 8);
  v2 = *(_QWORD *)(result[1] + 8);
  if (v1 != v2)
  {
    v3 = *result;
    do
    {
      result = (uint64_t *)sub_1003009A4(v3, v1);
      v1 += 280;
    }
    while (v1 != v2);
  }
  return result;
}

void **sub_1003AFCF8(void **a1)
{
  sub_1003AFD28((uint64_t)a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

uint64_t sub_1003AFD28(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(result + 8);
  v1 = *(_QWORD *)(result + 16);
  if (v1 != v2)
  {
    v3 = result;
    do
    {
      v4 = *(_QWORD *)(v3 + 32);
      *(_QWORD *)(v3 + 16) = v1 - 280;
      result = sub_1003009A4(v4, v1 - 280);
      v1 = *(_QWORD *)(v3 + 16);
    }
    while (v1 != v2);
  }
  return result;
}

uint64_t sub_1003AFD6C(uint64_t a1, __int128 *a2, __int128 *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  v4 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v4;
  v5 = a1 + 24;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  *(_QWORD *)a2 = 0;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100115CE4((_BYTE *)v5, *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v6 = *a3;
    *(_QWORD *)(v5 + 16) = *((_QWORD *)a3 + 2);
    *(_OWORD *)v5 = v6;
  }
  return a1;
}

void sub_1003AFDC8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

double sub_1003AFDE4@<D0>(std::string *a1@<X8>)
{
  double result;
  std::string v3;

  memset(&v3, 0, sizeof(v3));
  sub_1003AFE44(&v3);
  result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_1003AFE28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003AFE44(std::string *a1)
{
  sub_1003AFE90(a1);
  sub_1003AFF60(a1);
  sub_1003B003C(a1);
  sub_1003B0118(a1);
  sub_100269E68(a1);
  sub_100269BD4(a1);
  return sub_1002AC264(a1);
}

uint64_t sub_1003AFE90(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 0;
  v7.__r_.__value_.__s.__data_[0] = 0;
  v2 = std::string::append(&v7, "ModelUUID");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003AFF2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003AFF60(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "GenerationTimestamp");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003B0008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B003C(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "ModelType");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003B00E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B0118(std::string *a1)
{
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string v7;
  void *__p[2];
  int64_t v9;

  *((_BYTE *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  v2 = std::string::append(&v7, "Model");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if (v9 >= 0)
    v5 = HIBYTE(v9);
  else
    v5 = (std::string::size_type)__p[1];
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1003B01C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_1003B01F4(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        sub_100302B68((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1003B0278(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1003B02EC((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1003B02EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 != a5)
  {
    v9 = a7;
    do
    {
      v10 = *(_OWORD *)(a3 - 48);
      *(_QWORD *)(v9 - 32) = *(_QWORD *)(a3 - 32);
      *(_OWORD *)(v9 - 48) = v10;
      *(_QWORD *)(a3 - 40) = 0;
      *(_QWORD *)(a3 - 32) = 0;
      *(_QWORD *)(a3 - 48) = 0;
      v11 = *(_OWORD *)(a3 - 24);
      *(_QWORD *)(v9 - 8) = *(_QWORD *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v11;
      v9 -= 48;
      *(_QWORD *)(a3 - 16) = 0;
      *(_QWORD *)(a3 - 8) = 0;
      *(_QWORD *)(a3 - 24) = 0;
      v7 -= 48;
      a3 -= 48;
    }
    while (a3 != a5);
    *((_QWORD *)&v16 + 1) = v9;
  }
  v14 = 1;
  sub_1003B03A0((uint64_t)v13);
  return a6;
}

uint64_t sub_1003B03A0(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1003B03D4((uint64_t *)a1);
  return a1;
}

void sub_1003B03D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_100302B68(v3, v1);
      v1 += 48;
    }
    while (v1 != v2);
  }
}

void **sub_1003B0424(void **a1)
{
  sub_1003B0454(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_1003B0454(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 48;
    sub_100302B68(v4, i - 48);
  }
}

void sub_1003B0498(void **a1)
{
  void *v1;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 48;
        sub_100302B68((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t **sub_1003B0504(uint64_t **a1, __int128 *a2)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = (*a1)[1];
  if (v4 >= (*a1)[2])
  {
    v5 = sub_1003B0564(*a1, a2);
  }
  else
  {
    sub_1003B0668((char *)(*a1)[1], a2);
    v5 = v4 + 48;
    v3[1] = v4 + 48;
  }
  v3[1] = v5;
  return a1;
}

void sub_1003B055C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1003B0564(uint64_t *a1, __int128 *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 4);
  v5 = v4 + 1;
  if (v4 + 1 > 0x555555555555555)
    sub_100259694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x2AAAAAAAAAAAAAALL)
    v9 = 0x555555555555555;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_100313718(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[48 * v4];
  v16 = &v10[48 * v9];
  sub_1003B0668(v14, a2);
  v15 = v14 + 48;
  sub_1003B0278(a1, &v13);
  v11 = a1[1];
  sub_1003B0424(&v13);
  return v11;
}

void sub_1003B0654(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003B0424((void **)va);
  _Unwind_Resume(a1);
}

char *sub_1003B0668(char *__dst, __int128 *a2)
{
  __int128 v4;
  _BYTE *v5;
  __int128 v6;

  if (*((char *)a2 + 23) < 0)
  {
    sub_100115CE4(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  v5 = __dst + 24;
  if (*((char *)a2 + 47) < 0)
  {
    sub_100115CE4(v5, *((void **)a2 + 3), *((_QWORD *)a2 + 4));
  }
  else
  {
    v6 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)__dst + 5) = *((_QWORD *)a2 + 5);
    *(_OWORD *)v5 = v6;
  }
  return __dst;
}

void sub_1003B06E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_1003B06FC(uint64_t a1, void **a2)
{
  operator delete(*a2);
}

uint64_t sub_1003B0704()
{
  std::string *v0;
  __int128 v1;
  std::string *v2;
  __int128 v3;
  void **v4;
  std::string::size_type v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  void *__p[2];
  unsigned __int8 v16;
  void *v17[2];
  unsigned __int8 v18;
  std::string v19;
  std::string v20;
  std::string v21;
  std::string v22;
  std::string v23;

  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101B980A0;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  v0 = std::string::append(&v19, "MicroLocationModels");
  v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  v2 = std::string::append(&v20, " (");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_1003A8008((uint64_t)v17);
  if ((v18 & 0x80u) == 0)
    v4 = v17;
  else
    v4 = (void **)v17[0];
  if ((v18 & 0x80u) == 0)
    v5 = v18;
  else
    v5 = (std::string::size_type)v17[1];
  v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  v8 = std::string::append(&v22, ") ");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_1003A80D0((uint64_t)__p);
  if ((v16 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v16 & 0x80u) == 0)
    v11 = v16;
  else
    v11 = (std::string::size_type)__p[1];
  v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_1023011F0 = *((_QWORD *)&v12->__r_.__value_.__l + 2);
  xmmword_1023011E0 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
  if ((char)v18 < 0)
    operator delete(v17[0]);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1023011E0, (void *)&_mh_execute_header);
}

void sub_1003B08F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v40 - 25) < 0)
    operator delete(*(void **)(v40 - 48));
  if (*(char *)(v40 - 57) < 0)
    operator delete(*(void **)(v40 - 80));
  if (a21 < 0)
    operator delete(a16);
  if (a40 < 0)
    operator delete(a35);
  if (a33 < 0)
    operator delete(a28);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B099C(uint64_t a1, uint64_t *a2)
{
  _DWORD *v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v4 = operator new(0xCuLL);
  *(_QWORD *)(a1 + 8) = v4 + 3;
  *(_QWORD *)(a1 + 16) = v4 + 3;
  *(_QWORD *)v4 = &_mh_execute_header;
  v4[2] = 4;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  sub_1003B1384((_QWORD *)(a1 + 24), *a2, a2[1], 0x2E8BA2E8BA2E8BA3 * ((a2[1] - *a2) >> 3));
  *(_DWORD *)(a1 + 48) = 0;
  sub_1000B0C3C((int *)(a1 + 48));
  return a1;
}

void sub_1003B0A40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void *v4;
  va_list va;

  va_start(va, a2);
  sub_100314888((void ***)va);
  v4 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)(v2 + 8) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1003B0A74(uint64_t a1, _DWORD *a2)
{
  int v2;
  _BOOL8 result;
  _DWORD *v4;
  _DWORD *v5;

  v2 = a2[20];
  if ((v2 & 0x200) == 0)
    return 0;
  v5 = *(_DWORD **)a1;
  v4 = *(_DWORD **)(a1 + 8);
  if (*(_DWORD **)a1 != v4)
  {
    while (*v5 != a2[15])
    {
      if (++v5 == v4)
      {
        v5 = *(_DWORD **)(a1 + 8);
        break;
      }
    }
  }
  result = 0;
  if ((v2 & 0x100) != 0 && v5 != v4)
    return a2[14] == 0;
  return result;
}

uint64_t sub_1003B0AD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  _QWORD *v6;

  v5[0] = off_102132D90;
  v5[1] = a1;
  v6 = v5;
  v1 = sub_1003B0BA4(a1, (uint64_t)v5);
  v2 = v6;
  if (v6 == v5)
  {
    v3 = 4;
    v2 = v5;
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
  return v1;
}

void sub_1003B0B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B0BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  ssize_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned __int8 *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;

  v18 = 0;
  v19 = 0;
  v17 = (uint64_t *)&v18;
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  if (v2 == v3)
  {
    v13 = 0;
    v14 = 0;
  }
  else
  {
    v5 = a1 + 48;
    do
    {
      v6 = *(_QWORD *)(a2 + 24);
      if (!v6)
        sub_10025FD1C();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 48))(v6, v2))
      {
        if ((*(_BYTE *)(v2 + 81) & 8) != 0)
        {
          v9 = *(_QWORD *)(v2 + 64);
          v10 = *(char *)(v9 + 23);
          if (v10 >= 0)
            v11 = *(unsigned __int8 **)(v2 + 64);
          else
            v11 = *(unsigned __int8 **)v9;
          if (v10 >= 0)
            v12 = *(unsigned __int8 *)(v9 + 23);
          else
            v12 = *(_QWORD *)(v9 + 8);
          v7 = sub_100268D2C((uint64_t)&v16, v11, &v11[v12]);
        }
        else
        {
          v7 = sub_1000B0D38(v5);
        }
        *(_QWORD *)&v20 = v7;
        *((_QWORD *)&v20 + 1) = v8;
        sub_1003B1D64(&v17, (unint64_t *)&v20, &v20);
      }
      v2 += 88;
    }
    while (v2 != v3);
    v13 = v18;
    v14 = v19;
  }
  sub_100008848((uint64_t)&v17, v13);
  return v14;
}

void sub_1003B0CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, _QWORD *a12)
{
  sub_100008848((uint64_t)&a11, a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1003B0CD8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  _QWORD *v6;

  v5[0] = off_102132E20;
  v5[1] = a1;
  v6 = v5;
  v1 = sub_1003B0BA4(a1, (uint64_t)v5);
  v2 = v6;
  if (v6 == v5)
  {
    v3 = 4;
    v2 = v5;
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
  return v1;
}

void sub_1003B0D74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B0DAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  _QWORD *v6;

  v5[0] = off_102132EA0;
  v5[1] = a1;
  v6 = v5;
  v1 = sub_1003B0BA4(a1, (uint64_t)v5);
  v2 = v6;
  if (v6 == v5)
  {
    v3 = 4;
    v2 = v5;
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
  return v1;
}

void sub_1003B0E48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B0E80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  _QWORD *v6;

  v5[0] = off_102132F20;
  v5[1] = a1;
  v6 = v5;
  v1 = sub_1003B0BA4(a1, (uint64_t)v5);
  v2 = v6;
  if (v6 == v5)
  {
    v3 = 4;
    v2 = v5;
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
  return v1;
}

void sub_1003B0F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B0F54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  _QWORD *v6;

  v5[0] = off_102132FA0;
  v5[1] = a1;
  v6 = v5;
  v1 = sub_1003B0BA4(a1, (uint64_t)v5);
  v2 = v6;
  if (v6 == v5)
  {
    v3 = 4;
    v2 = v5;
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
  return v1;
}

void sub_1003B0FF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B1028(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  _QWORD *v6;

  v5[0] = off_102133020;
  v5[1] = a1;
  v6 = v5;
  v1 = sub_1003B0BA4(a1, (uint64_t)v5);
  v2 = v6;
  if (v6 == v5)
  {
    v3 = 4;
    v2 = v5;
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
  return v1;
}

void sub_1003B10C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B10FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  _QWORD *v6;

  v5[0] = off_1021330A0;
  v5[1] = a1;
  v6 = v5;
  v1 = sub_1003B0BA4(a1, (uint64_t)v5);
  v2 = v6;
  if (v6 == v5)
  {
    v3 = 4;
    v2 = v5;
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
  return v1;
}

void sub_1003B1198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B11D0(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v6[3];
  _QWORD *v7;

  v6[0] = off_102133120;
  v6[1] = a1;
  v6[2] = a2;
  v7 = v6;
  v2 = sub_1003B0BA4(a1, (uint64_t)v6);
  v3 = v7;
  if (v7 == v6)
  {
    v4 = 4;
    v3 = v6;
    goto LABEL_5;
  }
  if (v7)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return v2;
}

void sub_1003B1270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B12A8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD v7[3];
  _QWORD *v8;

  v7[0] = off_1021331A0;
  v7[1] = a1;
  v7[2] = a2 | (unint64_t)(a3 << 32);
  v8 = v7;
  v3 = sub_1003B0BA4(a1, (uint64_t)v7);
  v4 = v8;
  if (v8 == v7)
  {
    v5 = 4;
    v4 = v7;
    goto LABEL_5;
  }
  if (v8)
  {
    v5 = 5;
LABEL_5:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }
  return v3;
}

void sub_1003B134C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1003B1384(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_1002A2F6C(result, a4);
    result = (_QWORD *)sub_1003B1408((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1003B13E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_100314888(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1003B1408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      sub_1002E0C70(a4 + v7, a2 + v7);
      v7 += 88;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1003B1464(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (v2)
  {
    v4 = v1 - 88;
    do
    {
      (**(void (***)(uint64_t))(v4 + v2))(v4 + v2);
      v2 -= 88;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003B1494()
{
  operator delete();
}

_QWORD *sub_1003B14A8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102132D90;
  result[1] = v3;
  return result;
}

uint64_t sub_1003B14DC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102132D90;
  a2[1] = v2;
  return result;
}

BOOL sub_1003B14F8(uint64_t a1, _DWORD *a2)
{
  int v2;
  _BOOL8 result;
  uint64_t v4;
  _DWORD *v5;
  _DWORD *v6;

  v2 = a2[20];
  if ((v2 & 0x200) == 0)
    return 0;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_DWORD **)v4;
  v5 = *(_DWORD **)(v4 + 8);
  if (v6 != v5)
  {
    while (*v6 != a2[15])
    {
      if (++v6 == v5)
      {
        v6 = v5;
        break;
      }
    }
  }
  result = 0;
  if ((v2 & 0x100) != 0 && v6 != v5)
    return a2[14] == 1;
  return result;
}

uint64_t sub_1003B1558(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_1003B1594()
{
}

void sub_1003B15A4()
{
  operator delete();
}

_QWORD *sub_1003B15B8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102132E20;
  result[1] = v3;
  return result;
}

uint64_t sub_1003B15EC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102132E20;
  a2[1] = v2;
  return result;
}

BOOL sub_1003B1608(uint64_t a1, _DWORD *a2)
{
  return sub_1003B0A74(*(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_1003B1610(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_1003B164C()
{
}

void sub_1003B165C()
{
  operator delete();
}

_QWORD *sub_1003B1670(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102132EA0;
  result[1] = v3;
  return result;
}

uint64_t sub_1003B16A4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102132EA0;
  a2[1] = v2;
  return result;
}

BOOL sub_1003B16C0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = sub_1003B0A74(*(_QWORD *)(a1 + 8), (_DWORD *)a2);
  if (result)
    return (*(_BYTE *)(a2 + 80) & 0x10) != 0 && sub_1002B15F8(*(_QWORD *)(a2 + 32)) == 0;
  return result;
}

uint64_t sub_1003B1708(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_1003B1744()
{
}

void sub_1003B1754()
{
  operator delete();
}

_QWORD *sub_1003B1768(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102132F20;
  result[1] = v3;
  return result;
}

uint64_t sub_1003B179C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102132F20;
  a2[1] = v2;
  return result;
}

BOOL sub_1003B17B8(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = sub_1003B0A74(*(_QWORD *)(a1 + 8), (_DWORD *)a2);
  if (result)
    return (*(_BYTE *)(a2 + 80) & 0x10) != 0
        && !sub_1002B15F8(*(_QWORD *)(a2 + 32))
        && *(_DWORD *)(a2 + 60) == 4;
  return result;
}

uint64_t sub_1003B1808(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003B1844()
{
}

void sub_1003B1854()
{
  operator delete();
}

_QWORD *sub_1003B1868(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102132FA0;
  result[1] = v3;
  return result;
}

uint64_t sub_1003B189C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102132FA0;
  a2[1] = v2;
  return result;
}

BOOL sub_1003B18B8(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = sub_1003B0A74(*(_QWORD *)(a1 + 8), (_DWORD *)a2);
  if (result)
    return (*(_BYTE *)(a2 + 80) & 0x10) != 0
        && !sub_1002B15F8(*(_QWORD *)(a2 + 32))
        && *(_DWORD *)(a2 + 60) != 4;
  return result;
}

uint64_t sub_1003B1908(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003B1944()
{
}

void sub_1003B1954()
{
  operator delete();
}

_QWORD *sub_1003B1968(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_102133020;
  result[1] = v3;
  return result;
}

uint64_t sub_1003B199C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_102133020;
  a2[1] = v2;
  return result;
}

BOOL sub_1003B19B8(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = sub_1003B0A74(*(_QWORD *)(a1 + 8), (_DWORD *)a2);
  if (result)
    return (*(_BYTE *)(a2 + 80) & 0x10) != 0 && sub_1002B15F8(*(_QWORD *)(a2 + 32)) != 0;
  return result;
}

uint64_t sub_1003B1A00(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_1003B1A3C()
{
}

void sub_1003B1A4C()
{
  operator delete();
}

_QWORD *sub_1003B1A60(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_1021330A0;
  result[1] = v3;
  return result;
}

uint64_t sub_1003B1A94(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_1021330A0;
  a2[1] = v2;
  return result;
}

BOOL sub_1003B1AB0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = sub_1003B0A74(*(_QWORD *)(a1 + 8), (_DWORD *)a2);
  if (result)
    return (*(_BYTE *)(a2 + 80) & 0x10) != 0 && sub_1002B15F8(*(_QWORD *)(a2 + 32)) == 1;
  return result;
}

uint64_t sub_1003B1AF8(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_1003B1B34()
{
}

void sub_1003B1B44()
{
  operator delete();
}

__n128 sub_1003B1B58(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = off_102133120;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1003B1B90(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_102133120;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_1003B1BB0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = sub_1003B0A74(*(_QWORD *)(a1 + 8), (_DWORD *)a2);
  if (result)
    return (*(_BYTE *)(a2 + 81) & 4) != 0 && *(_DWORD *)(a2 + 72) == *(_DWORD *)(a1 + 16);
  return result;
}

uint64_t sub_1003B1BFC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003B1C38()
{
}

void sub_1003B1C48()
{
  operator delete();
}

__n128 sub_1003B1C5C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = off_1021331A0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1003B1C94(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = off_1021331A0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_1003B1CB4(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  int v5;

  result = sub_1003B0A74(*(_QWORD *)(a1 + 8), (_DWORD *)a2);
  if (result)
  {
    v5 = *(_DWORD *)(a2 + 80);
    if ((v5 & 0x400) != 0)
    {
      result = 0;
      if ((v5 & 0x10) != 0 && *(_DWORD *)(a2 + 72) == *(_DWORD *)(a1 + 16))
        return sub_1002B15F8(*(_QWORD *)(a2 + 32)) == *(_DWORD *)(a1 + 20);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003B1D1C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003B1D58()
{
}

char *sub_1003B1D64(uint64_t **a1, unint64_t *a2, _OWORD *a3)
{
  void **v5;
  char *v6;
  uint64_t **v7;
  uint64_t v9;

  v5 = (void **)sub_1002F4B4C((uint64_t)a1, &v9, a2);
  v6 = (char *)*v5;
  if (!*v5)
  {
    v7 = (uint64_t **)v5;
    v6 = (char *)operator new(0x30uLL);
    *(_OWORD *)(v6 + 25) = *a3;
    sub_1000145B0(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

double sub_1003B1DE4(uint64_t a1, int a2)
{
  NSCalendar *v4;
  id v5;
  const __CFDate *v6;

  if (a2 >= 1)
    sub_1018F93AC();
  v4 = +[NSCalendar currentCalendar](NSCalendar, "currentCalendar");
  v5 = objc_alloc_init((Class)NSDateComponents);
  objc_msgSend(v5, "setDay:", a2);
  v6 = -[NSCalendar dateByAddingComponents:toDate:options:](v4, "dateByAddingComponents:toDate:options:", v5, a1, 0);

  return CFDateGetAbsoluteTime(v6);
}

void sub_1003B1E60(id a1)
{
  qword_1022A00F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_1003B1E8C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_1003B55A8(v0, qword_102301200);
  sub_1003B54C8(v0, (uint64_t)qword_102301200);
  return Logger.init(subsystem:category:)(0xD00000000000001CLL, 0x80000001019DDA70, 0x636F6C6F7263694DLL, 0xED00006E6F697461);
}

uint64_t sub_1003B1F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassMetadata;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v19 = v18;
  ObjCClassMetadata = swift_getObjCClassMetadata(a6);
  LOBYTE(a7) = a7(v11, v13, v14, v16, v17, v19, ObjCClassMetadata);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);
  return a7 & 1;
}

void sub_1003B1FF8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1003B2034()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (BYTE6(v0) > 0x1BuLL)
  {
    sub_1003B5520(v1, v0);
    sub_1003B22D4(v1, v0);
    ((void (*)(void))AES.GCM.SealedBox.init(combined:))();
  }
  else
  {
    v2 = ((uint64_t (*)(_QWORD))type metadata accessor for CryptoKitError)(0);
    v3 = sub_1003B56B0(&qword_1022A0A38, (uint64_t (*)(uint64_t))&type metadata accessor for CryptoKitError, (uint64_t)&protocol conformance descriptor for CryptoKitError);
    ((void (*)(uint64_t, uint64_t, _QWORD, _QWORD))swift_allocError)(v2, v3, 0, 0);
    v5 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v4, enum case for CryptoKitError.incorrectParameterSize(_:), v2);
    ((void (*)(uint64_t))swift_willThrow)(v5);
  }
  return sub_1003B5470(v1, v0);
}

Class sub_1003B2144(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  Class isa;

  v8 = a3;
  v9 = a4;
  v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v12 = v11;

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v15 = v14;

  v16 = a5(v10, v12, v13, v15);
  v18 = v17;
  swift_bridgeObjectRelease(v15);
  sub_1003B5470(v10, v12);
  if (v18 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1003B54B4(v16, v18);
  }
  return isa;
}

id sub_1003B2214()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id sub_1003B2234()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CLMicroLocationEncryption();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1003B22A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CLMicroLocationEncryption();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1003B22D4(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[5];

  v3[3] = &type metadata for Data;
  v3[4] = &protocol witness table for Data;
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_1003B2338 + dword_1003B256C[sub_1003B5564(v3, (uint64_t)&type metadata for Data)[1] >> 62];
  __asm { BR              X10 }
}

uint64_t sub_1003B2348()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v6 = v2;
  v7 = v3;
  v8 = BYTE2(v3);
  v9 = BYTE3(v3);
  v10 = BYTE4(v3);
  v11 = BYTE5(v3);
  sub_1003B5520(v1, v0);
  sub_1003B257C(&v6, (_BYTE *)&v6 + BYTE6(v3), &v12);
  sub_1003B5470(v1, v0);
  v4 = v12;
  sub_1003B5588(&v13);
  return v4;
}

_BYTE *sub_1003B257C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1003B4AF4(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1003B4BB4((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1003B4C2C((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1003B25F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  _QWORD v101[3];
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  _OWORD v112[2];
  _QWORD v113[5];

  if (&class metadata base offset for ArchiveEncryptionContext)
    v7 = &type metadata accessor for ArchiveEncryptionContext == 0;
  else
    v7 = 1;
  v10 = v7
     || &type metadata for ArchiveEncryptionContext == 0
     || &nominal type descriptor for ArchiveEncryptionContext == 0
     || &metaclass for ArchiveEncryptionContext == 0;
  if (v10
    || (&metaclass for ArchiveByteStream ? (v11 = &nominal type descriptor for ArchiveByteStream == 0) : (v11 = 1),
        !v11 ? (v12 = &type metadata for ArchiveByteStream == 0) : (v12 = 1),
        !v12 ? (v13 = &type metadata accessor for ArchiveByteStream == 0) : (v13 = 1),
        !v13 ? (v14 = &protocol witness table for ArchiveByteStream == 0) : (v14 = 1),
        !v14 ? (v15 = &protocol conformance descriptor for ArchiveByteStream == 0) : (v15 = 1),
        !v15 ? (v16 = &class metadata base offset for ArchiveByteStream == 0) : (v16 = 1),
        v16))
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v44 = type metadata accessor for Logger(0);
    v45 = sub_1003B54C8(v44, (uint64_t)qword_102301200);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v46, v47))
      goto LABEL_54;
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    v49 = "encryptFile: AppleArchive Library not loaded. method aborted.";
    goto LABEL_53;
  }
  if (&protocol conformance descriptor for SymmetricKey)
    v17 = &type metadata accessor for SymmetricKey == 0;
  else
    v17 = 1;
  if (v17 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v50 = type metadata accessor for Logger(0);
    v51 = sub_1003B54C8(v50, (uint64_t)qword_102301200);
    v46 = Logger.logObject.getter(v51);
    v47 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v46, v47))
      goto LABEL_54;
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    v49 = "encryptFile: CryptoKit Frameowrk not loaded. method aborted.";
LABEL_53:
    _os_log_impl((void *)&_mh_execute_header, v46, v47, v49, v48, 2u);
    swift_slowDealloc(v48, -1, -1);
LABEL_54:

    return 0;
  }
  v107 = type metadata accessor for FilePath(0);
  v108 = v101;
  v106 = *(_QWORD *)(v107 - 8);
  v25 = *(_QWORD *)(v106 + 64);
  ((void (*)(void))__chkstk_darwin)();
  swift_bridgeObjectRetain(a2);
  v110 = (char *)v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = FilePath.init(_:)(a1, a2);
  __chkstk_darwin(v26);
  swift_bridgeObjectRetain(a4);
  v109 = (char *)v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  FilePath.init(_:)(a3, a4);
  v27 = type metadata accessor for ArchiveEncryptionContext.Profile(0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ArchiveEncryptionContext.Profile.hkdf_sha256_aesctr_hmac__symmetric__none.getter(v28);
  v31 = type metadata accessor for ArchiveCompression(0);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)v101 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ArchiveCompression.lzfse.getter(v32);
  v35 = type metadata accessor for ArchiveEncryptionContext(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v111 = ArchiveEncryptionContext.init(profile:compressionAlgorithm:compressionBlockSize:)(v30, v34, 0x20000);
  v36 = type metadata accessor for SymmetricKey(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v105 = (char *)v101 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1003B54E0(&qword_1022A0A20);
  __chkstk_darwin(v39);
  v41 = (char *)v101 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend((id)swift_getObjCClassFromMetadata(a7), "retrieveSymmetricKey:", v42);

  if (v43)
  {
    _bridgeAnyObjectToAny(_:)(v112, v43);
    swift_unknownObjectRelease(v43);
  }
  else
  {
    memset(v112, 0, sizeof(v112));
  }
  sub_1003B5668((uint64_t)v112, (uint64_t)v113);
  if (!v113[3])
  {
    sub_1003B562C((uint64_t)v113, &qword_1022A0A28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v41, 1, 1, v36);
    goto LABEL_60;
  }
  v52 = swift_dynamicCast(v41, v113, (char *)&type metadata for Any + 8, v36, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v41, v52 ^ 1u, 1, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v41, 1, v36) == 1)
  {
LABEL_60:
    sub_1003B562C((uint64_t)v41, &qword_1022A0A20);
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_1003B54C8(v54, (uint64_t)qword_102301200);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Failed to retrieve symmetric key for file encryption", v58, 2u);
      swift_slowDealloc(v58, -1, -1);
    }

    swift_release(v111);
    v59 = v107;
    v60 = *(void (**)(char *, uint64_t))(v106 + 8);
    v60(v109, v107);
    v60(v110, v59);
    return 0;
  }
  v53 = v105;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v105, v41, v36);
  dispatch thunk of ArchiveEncryptionContext.setSymmetricKey(_:)(v53);
  type metadata accessor for ArchiveByteStream(0);
  v61 = static ArchiveByteStream.fileStream(path:mode:options:permissions:)(v110, 0, 0, 420);
  if (v61)
  {
    v62 = v61;
    v63 = static ArchiveByteStream.fileStream(path:mode:options:permissions:)(v109, 1, 1536, 420);
    if (v63)
    {
      v103 = v62;
      v104 = v101;
      v64 = v63;
      v65 = type metadata accessor for ArchiveFlags(0);
      v101[2] = v101;
      v66 = *(_QWORD *)(v65 - 8);
      __chkstk_darwin(v65);
      v68 = (char *)v101 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
      v113[0] = &_swiftEmptyArrayStorage;
      v102 = sub_1003B56B0(&qword_1022A0A50, v69, (uint64_t)&protocol conformance descriptor for ArchiveFlags);
      v70 = sub_1003B54E0(&qword_1022A0A58);
      v71 = sub_1003B56F0();
      dispatch thunk of SetAlgebra.init<A>(_:)(v113, v70, v71, v65, v102);
      v102 = v64;
      v72 = static ArchiveByteStream.encryptionStream(writingTo:encryptionContext:flags:threadCount:)(v64, v111, v68, 1);
      v73 = v65;
      v74 = v72;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v73);
      if (v74)
      {
        v75 = v103;
        v76 = static ArchiveByteStream.process(readingFrom:writingTo:)(v103, v74);
        v96 = dispatch thunk of ArchiveByteStream.close()(v76);
        v97 = dispatch thunk of ArchiveByteStream.close()(v96);
        dispatch thunk of ArchiveByteStream.close()(v97);
        swift_release(v111);
        swift_release(v75);
        swift_release(v102);
        swift_release(v74);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v105, v36);
        v98 = v107;
        v99 = *(void (**)(char *, uint64_t))(v106 + 8);
        v99(v109, v107);
        v99(v110, v98);
        return 1;
      }
      v88 = v103;
      if (qword_1023011F8 != -1)
        swift_once(&qword_1023011F8, sub_1003B1E8C);
      v89 = type metadata accessor for Logger(0);
      v90 = sub_1003B54C8(v89, (uint64_t)qword_102301200);
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v93 = 0;
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "Failed to create encryption stream", v93, 2u);
        swift_slowDealloc(v93, -1, -1);
      }

      swift_release(v111);
      swift_release(v88);
      v82 = v102;
    }
    else
    {
      if (qword_1023011F8 != -1)
        swift_once(&qword_1023011F8, sub_1003B1E8C);
      v83 = type metadata accessor for Logger(0);
      v84 = sub_1003B54C8(v83, (uint64_t)qword_102301200);
      v85 = Logger.logObject.getter(v84);
      v86 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v85, v86))
      {
        v87 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v87 = 0;
        _os_log_impl((void *)&_mh_execute_header, v85, v86, "Failed to create output file stream for encryption", v87, 2u);
        swift_slowDealloc(v87, -1, -1);
      }

      swift_release(v111);
      v82 = v62;
    }
  }
  else
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v77 = type metadata accessor for Logger(0);
    v78 = sub_1003B54C8(v77, (uint64_t)qword_102301200);
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v81 = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Failed to create input file stream for encryption", v81, 2u);
      swift_slowDealloc(v81, -1, -1);
    }

    v82 = v111;
  }
  swift_release(v82);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v105, v36);
  v94 = v107;
  v95 = *(void (**)(char *, uint64_t))(v106 + 8);
  v95(v109, v107);
  v95(v110, v94);
  return 0;
}

uint64_t sub_1003B34F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint64_t v90;
  uint8_t *v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint8_t *v100;
  uint64_t v101;
  void (*v102)(_BYTE *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(_BYTE *, uint64_t);
  _BYTE v108[16];
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  _BYTE *v119;
  _OWORD v120[2];
  _QWORD v121[5];

  if (&class metadata base offset for ArchiveEncryptionContext)
    v7 = &type metadata accessor for ArchiveEncryptionContext == 0;
  else
    v7 = 1;
  v10 = v7
     || &type metadata for ArchiveEncryptionContext == 0
     || &nominal type descriptor for ArchiveEncryptionContext == 0
     || &metaclass for ArchiveEncryptionContext == 0;
  if (v10
    || (&metaclass for ArchiveByteStream ? (v11 = &nominal type descriptor for ArchiveByteStream == 0) : (v11 = 1),
        !v11 ? (v12 = &type metadata for ArchiveByteStream == 0) : (v12 = 1),
        !v12 ? (v13 = &type metadata accessor for ArchiveByteStream == 0) : (v13 = 1),
        !v13 ? (v14 = &protocol witness table for ArchiveByteStream == 0) : (v14 = 1),
        !v14 ? (v15 = &protocol conformance descriptor for ArchiveByteStream == 0) : (v15 = 1),
        !v15 ? (v16 = &class metadata base offset for ArchiveByteStream == 0) : (v16 = 1),
        v16))
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_1003B54C8(v37, (uint64_t)qword_102301200);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v39, v40))
      goto LABEL_54;
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    v42 = "decryptFile: AppleArchive Frameowrk not loaded. method aborted.";
    goto LABEL_53;
  }
  if (&protocol conformance descriptor for SymmetricKey)
    v17 = &type metadata accessor for SymmetricKey == 0;
  else
    v17 = 1;
  if (v17 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v43 = type metadata accessor for Logger(0);
    v44 = sub_1003B54C8(v43, (uint64_t)qword_102301200);
    v39 = Logger.logObject.getter(v44);
    v40 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v39, v40))
      goto LABEL_54;
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    v42 = "decryptFile: CryptoKit Frameowrk not loaded. method aborted.";
LABEL_53:
    _os_log_impl((void *)&_mh_execute_header, v39, v40, v42, v41, 2u);
    swift_slowDealloc(v41, -1, -1);
LABEL_54:

    return 0;
  }
  v25 = type metadata accessor for FilePath(0);
  v119 = v108;
  v116 = *(_QWORD *)(v25 - 8);
  v117 = v25;
  v26 = *(_QWORD *)(v116 + 64);
  __chkstk_darwin(v25);
  v27 = &v108[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain(a2);
  v28 = FilePath.init(_:)(a1, a2);
  v118 = v108;
  __chkstk_darwin(v28);
  swift_bridgeObjectRetain(a4);
  FilePath.init(_:)(a3, a4);
  v29 = type metadata accessor for SymmetricKey(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v115 = &v108[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = sub_1003B54E0(&qword_1022A0A20);
  __chkstk_darwin(v32);
  v34 = &v108[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend((id)swift_getObjCClassFromMetadata(a7), "retrieveSymmetricKey:", v35);

  if (v36)
  {
    _bridgeAnyObjectToAny(_:)(v120, v36);
    swift_unknownObjectRelease(v36);
  }
  else
  {
    memset(v120, 0, sizeof(v120));
  }
  sub_1003B5668((uint64_t)v120, (uint64_t)v121);
  if (!v121[3])
  {
    sub_1003B562C((uint64_t)v121, &qword_1022A0A28);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v34, 1, 1, v29);
    goto LABEL_62;
  }
  v45 = swift_dynamicCast(v34, v121, (char *)&type metadata for Any + 8, v29, 6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v34, v45 ^ 1u, 1, v29);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29) == 1)
  {
LABEL_62:
    sub_1003B562C((uint64_t)v34, &qword_1022A0A20);
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v52 = type metadata accessor for Logger(0);
    v53 = sub_1003B54C8(v52, (uint64_t)qword_102301200);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Failed to retrieve symmetric key for file decryption", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }

    v57 = v117;
    v58 = *(void (**)(_BYTE *, uint64_t))(v116 + 8);
    v58(v27, v117);
    v58(v27, v57);
    return 0;
  }
  v114 = v108;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v115, v34, v29);
  type metadata accessor for ArchiveByteStream(0);
  v46 = static ArchiveByteStream.fileStream(path:mode:options:permissions:)(v27, 0, 0, 420);
  if (v46)
  {
    v47 = v46;
    v48 = type metadata accessor for ArchiveEncryptionContext(0);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    v49 = swift_retain(v47);
    v50 = ArchiveEncryptionContext.init(from:)(v49);
    if (v50)
    {
      v51 = v50;
      dispatch thunk of ArchiveEncryptionContext.setSymmetricKey(_:)(v115);
      v113 = v47;
      v69 = type metadata accessor for ArchiveFlags(0);
      v111 = v108;
      v110 = *(_QWORD *)(v69 - 8);
      __chkstk_darwin(v69);
      v112 = v51;
      v71 = v47;
      v72 = &v108[-((v70 + 15) & 0xFFFFFFFFFFFFFFF0)];
      v121[0] = &_swiftEmptyArrayStorage;
      v109 = sub_1003B56B0(&qword_1022A0A50, v73, (uint64_t)&protocol conformance descriptor for ArchiveFlags);
      v74 = sub_1003B54E0(&qword_1022A0A58);
      v75 = sub_1003B56F0();
      dispatch thunk of SetAlgebra.init<A>(_:)(v121, v74, v75, v69, v109);
      v76 = v71;
      v77 = v112;
      v78 = static ArchiveByteStream.decryptionStream(readingFrom:encryptionContext:flags:threadCount:)(v76, v112, v72, 1);
      v79 = v69;
      v80 = v78;
      (*(void (**)(_BYTE *, uint64_t))(v110 + 8))(v72, v79);
      if (v80)
      {
        v81 = static ArchiveByteStream.fileStream(path:mode:options:permissions:)(v27, 1, 1536, 420);
        if (v81)
        {
          v82 = (_BYTE *)v81;
          v83 = static ArchiveByteStream.process(readingFrom:writingTo:)(v80, v81);
          v84 = v113;
          v111 = v82;
          v103 = dispatch thunk of ArchiveByteStream.close()(v83);
          v104 = dispatch thunk of ArchiveByteStream.close()(v103);
          dispatch thunk of ArchiveByteStream.close()(v104);
          swift_release(v84);
          swift_release(v112);
          swift_release(v80);
          swift_release(v82);
          (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v115, v29);
          v105 = v117;
          v106 = *(void (**)(_BYTE *, uint64_t))(v116 + 8);
          v106(v27, v117);
          v106(v27, v105);
          return 1;
        }
        v94 = v113;
        if (qword_1023011F8 != -1)
          swift_once(&qword_1023011F8, sub_1003B1E8C);
        v95 = type metadata accessor for Logger(0);
        v96 = sub_1003B54C8(v95, (uint64_t)qword_102301200);
        v97 = Logger.logObject.getter(v96);
        v98 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v97, v98))
        {
          v99 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v99 = 0;
          _os_log_impl((void *)&_mh_execute_header, v97, v98, "Failed to create output file stream for decryption", v99, 2u);
          v100 = v99;
          v77 = v112;
          swift_slowDealloc(v100, -1, -1);
        }
        swift_release(v94);

        swift_release(v77);
        v93 = v80;
      }
      else
      {
        if (qword_1023011F8 != -1)
          swift_once(&qword_1023011F8, sub_1003B1E8C);
        v85 = type metadata accessor for Logger(0);
        v86 = sub_1003B54C8(v85, (uint64_t)qword_102301200);
        v87 = Logger.logObject.getter(v86);
        v88 = static os_log_type_t.error.getter();
        v89 = os_log_type_enabled(v87, v88);
        v90 = v113;
        if (v89)
        {
          v91 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v91 = 0;
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "Failed to create decryption stream", v91, 2u);
          v92 = v91;
          v77 = v112;
          swift_slowDealloc(v92, -1, -1);
        }
        swift_release(v90);

        v93 = v77;
      }
      swift_release(v93);
    }
    else
    {
      if (qword_1023011F8 != -1)
        swift_once(&qword_1023011F8, sub_1003B1E8C);
      v64 = type metadata accessor for Logger(0);
      v65 = sub_1003B54C8(v64, (uint64_t)qword_102301200);
      v66 = Logger.logObject.getter(v65);
      v67 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v68 = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "Failed to create archive context for decryption", v68, 2u);
        swift_slowDealloc(v68, -1, -1);
      }
      swift_release(v47);

    }
  }
  else
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v59 = type metadata accessor for Logger(0);
    v60 = sub_1003B54C8(v59, (uint64_t)qword_102301200);
    v61 = Logger.logObject.getter(v60);
    v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Failed to open source archive file for decryption", v63, 2u);
      swift_slowDealloc(v63, -1, -1);
    }

  }
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v115, v29);
  v101 = v117;
  v102 = *(void (**)(_BYTE *, uint64_t))(v116 + 8);
  v102(v27, v117);
  v102(v27, v101);
  return 0;
}

uint64_t sub_1003B4454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t *v50;
  _QWORD v51[4];

  if (&type metadata accessor for AES)
    v4 = &type metadata for AES == 0;
  else
    v4 = 1;
  if (v4
    || &nominal type descriptor for AES == 0
    || &protocol conformance descriptor for SymmetricKey == 0
    || &type metadata accessor for SymmetricKey == 0
    || &type metadata for SymmetricKey == 0
    || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_1003B54C8(v10, (uint64_t)qword_102301200);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_34;
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    v15 = "encryptData: CryptoKit Frameowrk not loaded. method aborted.";
    goto LABEL_33;
  }
  v20 = type metadata accessor for SymmetricKey(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1003B54E0(&qword_1022A0A20);
  __chkstk_darwin(v24);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CLMicroLocationKeychain();
  sub_1003B66AC(a3, a4, (uint64_t)v51);
  if (!v51[3])
  {
    sub_1003B562C((uint64_t)v51, &qword_1022A0A28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v26, 1, 1, v20);
    goto LABEL_29;
  }
  v27 = swift_dynamicCast(v26, v51, (char *)&type metadata for Any + 8, v20, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v26, v27 ^ 1u, 1, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20) == 1)
  {
LABEL_29:
    sub_1003B562C((uint64_t)v26, &qword_1022A0A20);
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v40 = type metadata accessor for Logger(0);
    v41 = sub_1003B54C8(v40, (uint64_t)qword_102301200);
    v12 = Logger.logObject.getter(v41);
    v13 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_34;
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    v15 = "Failed to retrieve symmetric key for data encryption";
LABEL_33:
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
    swift_slowDealloc(v14, -1, -1);
LABEL_34:

    return 0;
  }
  v50 = &v45;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v26, v20);
  v28 = type metadata accessor for AES.GCM.Nonce(0);
  v49 = &v45;
  v29 = *(_QWORD *)(v28 - 8);
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v45 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  AES.GCM.Nonce.init()(v30);
  v47 = type metadata accessor for AES.GCM.SealedBox(0);
  v48 = &v45;
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v34 = (char *)&v45 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51[0] = a1;
  v51[1] = a2;
  v35 = sub_1003B54E0(&qword_1022A0A40);
  v36 = __chkstk_darwin(v35);
  v38 = (char *)&v45 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, double))(v29 + 16))(v38, v32, v28, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v38, 0, 1, v28);
  v39 = sub_1003B55E8();
  static AES.GCM.seal<A>(_:using:nonce:)(v51, v23, v38, &type metadata for Data, v39);
  v43 = sub_1003B562C((uint64_t)v38, &qword_1022A0A40);
  v44 = AES.GCM.SealedBox.combined.getter(v43);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v47);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  return v44;
}

uint64_t sub_1003B4AF4(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1003B4BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = type metadata accessor for Data.RangeReference(0);
    result = swift_allocObject(v6, 32, 7);
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v3;
  }
  return result;
}

uint64_t sub_1003B4C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1003B4CAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t *v47;
  _QWORD v48[4];

  if (&type metadata accessor for AES)
    v4 = &type metadata for AES == 0;
  else
    v4 = 1;
  if (v4
    || &nominal type descriptor for AES == 0
    || &protocol conformance descriptor for SymmetricKey == 0
    || &type metadata accessor for SymmetricKey == 0
    || &type metadata for SymmetricKey == 0
    || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_1003B54C8(v10, (uint64_t)qword_102301200);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "decryptData: CryptoKit Frameowrk not loaded. method aborted.", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    return 0;
  }
  else
  {
    v20 = type metadata accessor for AES.GCM.SealedBox(0);
    v47 = &v42;
    v21 = *(_QWORD *)(v20 - 8);
    v43 = v20;
    v44 = v21;
    v22 = *(_QWORD *)(v21 + 64);
    __chkstk_darwin(v20);
    v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = type metadata accessor for SymmetricKey(0);
    v46 = &v42;
    v25 = *(_QWORD *)(v24 - 8);
    __chkstk_darwin(v24);
    v45 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v27 = sub_1003B54E0(&qword_1022A0A20);
    __chkstk_darwin(v27);
    v29 = (char *)&v42 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    type metadata accessor for CLMicroLocationKeychain();
    sub_1003B66AC(a3, a4, (uint64_t)v48);
    if (v48[3])
    {
      v30 = swift_dynamicCast(v29, v48, (char *)&type metadata for Any + 8, v24, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, v30 ^ 1u, 1, v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v29, 1, v24) != 1)
      {
        v31 = v45;
        v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v45, v29, v24);
        __chkstk_darwin(v32);
        v33 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_1003B5520(a1, a2);
        sub_1003B1FF8(a1, a2);
        v40 = v43;
        v39 = v44;
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v23, v33, v43);
        v15 = static AES.GCM.open(_:using:)(v23, v31);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v24);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v40);
        return v15;
      }
    }
    else
    {
      sub_1003B562C((uint64_t)v48, &qword_1022A0A28);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v29, 1, 1, v24);
    }
    sub_1003B562C((uint64_t)v29, &qword_1022A0A20);
    if (qword_1023011F8 != -1)
      swift_once(&qword_1023011F8, sub_1003B1E8C);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_1003B54C8(v34, (uint64_t)qword_102301200);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to retrieve symmetric key for data decryption", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    return 0;
  }
}

uint64_t type metadata accessor for CLMicroLocationEncryption()
{
  return objc_opt_self(_TtC19microlocation_logic25CLMicroLocationEncryption);
}

uint64_t sub_1003B5470(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    ((void (*)(void))swift_release)();
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1003B54B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1003B5470(a1, a2);
  return a1;
}

uint64_t sub_1003B54C8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1003B54E0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1003B5520(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    ((void (*)(void))swift_retain)();
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

_QWORD *sub_1003B5564(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1003B5588(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *sub_1003B55A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

unint64_t sub_1003B55E8()
{
  unint64_t result;

  result = qword_1022A0A48;
  if (!qword_1022A0A48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1022A0A48);
  }
  return result;
}

uint64_t sub_1003B562C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1003B54E0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003B5668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1003B54E0(&qword_1022A0A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B56B0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003B56F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1022A0A60;
  if (!qword_1022A0A60)
  {
    v1 = sub_1003B573C(&qword_1022A0A58);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1022A0A60);
  }
  return result;
}

uint64_t sub_1003B573C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1003B5780()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_1003B55A8(v0, qword_102301220);
  sub_1003B54C8(v0, (uint64_t)qword_102301220);
  return Logger.init(subsystem:category:)(0xD00000000000001CLL, 0x80000001019DDA70, 0x636F6C6F7263694DLL, 0xED00006E6F697461);
}

void sub_1003B5800(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  _OWORD *v37;
  uint8_t *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _QWORD v49[2];
  OSStatus v50;

  if (&protocol conformance descriptor for SymmetricKey)
    v4 = &type metadata accessor for SymmetricKey == 0;
  else
    v4 = 1;
  if (v4 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_102301218 != -1)
      swift_once(&qword_102301218, sub_1003B5780);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_1003B54C8(v20, (uint64_t)qword_102301220);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "getSymmetricKeyOrCreateNew: CryptoKit Frameowrk not loaded. method aborted.", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    *a3 = 0u;
    a3[1] = 0u;
  }
  else
  {
    v48 = a3;
    v50 = 0;
    v9 = sub_1003B54E0(&qword_1022A0A20);
    v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
    __chkstk_darwin(v9);
    v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
    v46 = a1;
    v47 = a2;
    v12 = sub_1003B5E5C(a1, a2, &v50, (uint64_t)&v43 - v11);
    __chkstk_darwin(v12);
    sub_1003B8CA8((uint64_t)&v43 - v11, (uint64_t)&v43 - v11, &qword_1022A0A20);
    v13 = type metadata accessor for SymmetricKey(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v16 = v15((char *)&v43 - v11, 1, v13);
    v17 = sub_1003B6FF8((uint64_t)&v43 - v11);
    if (v16 == 1 && v50 == -25300)
    {
      v45 = &v43;
      v25 = __chkstk_darwin(v17);
      v26 = type metadata accessor for SymmetricKeySize(0, v25);
      v27 = __chkstk_darwin(v26);
      v29 = (char *)&v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      static SymmetricKeySize.bits256.getter(v27);
      SymmetricKey.init(size:)(v29);
      sub_1003B6FF8((uint64_t)&v43 - v11);
      v44 = v14;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))((char *)&v43 - v11, 0, 1, v13);
      v30 = sub_1003B7074((uint64_t)&v43 - v11, (uint64_t)&v43 - v11);
      __chkstk_darwin(v30);
      sub_1003B8CA8((uint64_t)&v43 - v11, (uint64_t)&v43 - v11, &qword_1022A0A20);
      LODWORD(v29) = v15((char *)&v43 - v11, 1, v13);
      v31 = sub_1003B6FF8((uint64_t)&v43 - v11);
      if ((_DWORD)v29 != 1)
      {
        __chkstk_darwin(v31);
        sub_1003B8CA8((uint64_t)&v43 - v11, (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1022A0A20);
        if (v15((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v13) != 1)
        {
          v41 = sub_1003B70BC();
          dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)(v49, sub_1003B68F4, 0, &type metadata for Data, v13, v41);
          v42 = v49[1];
          (*(void (**)(char *, uint64_t))(v44 + 8))((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
          __asm { BR              X10 }
        }
        __break(1u);
        JUMPOUT(0x1003B5E48);
      }
      if (qword_102301218 != -1)
        swift_once(&qword_102301218, sub_1003B5780);
      v32 = type metadata accessor for Logger(0);
      v33 = sub_1003B54C8(v32, (uint64_t)qword_102301220);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter();
      v36 = os_log_type_enabled(v34, v35);
      v37 = v48;
      if (v36)
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to generate a symmetric key", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

      sub_1003B6FF8((uint64_t)&v43 - v11);
      *v37 = 0u;
      v37[1] = 0u;
    }
    else
    {
      __chkstk_darwin(v17);
      sub_1003B8CA8((uint64_t)&v43 - v11, (uint64_t)&v43 - v11, &qword_1022A0A20);
      if (v15((char *)&v43 - v11, 1, v13) == 1)
      {
        sub_1003B6FF8((uint64_t)&v43 - v11);
        sub_1003B6FF8((uint64_t)&v43 - v11);
        v19 = v48;
        *v48 = 0u;
        v19[1] = 0u;
      }
      else
      {
        v39 = v48;
        *((_QWORD *)v48 + 3) = v13;
        v40 = sub_1003B7038(v39);
        (*(void (**)(_QWORD *, char *, uint64_t))(v14 + 32))(v40, (char *)&v43 - v11, v13);
        sub_1003B6FF8((uint64_t)&v43 - v11);
      }
    }
  }
}

uint64_t sub_1003B5E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, OSStatus *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  const __CFString *v8;
  const __CFString *v9;
  const __CFString *v10;
  const __CFString *v11;
  const __CFString *v12;
  const __CFString *v13;
  const __CFString *v14;
  const __CFString *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  const __CFDictionary *isa;
  OSStatus v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  CFStringRef v39;
  __CFString *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  unint64_t v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  OSStatus *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;

  v54 = a1;
  v55 = a3;
  v52 = (char *)a4;
  v53 = a2;
  v5 = sub_1003B54E0(&qword_1022A0A70);
  inited = swift_initStackObject(v5, &v59);
  *(_OWORD *)(inited + 16) = xmmword_101BA04D0;
  *(_QWORD *)(inited + 32) = kSecClass;
  type metadata accessor for CFString();
  *(_QWORD *)(inited + 40) = kSecClassKey;
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = kSecUseDataProtectionKeychain;
  *(_BYTE *)(inited + 80) = 1;
  *(_QWORD *)(inited + 104) = &type metadata for Bool;
  *(_QWORD *)(inited + 112) = kSecAttrAccessible;
  *(_QWORD *)(inited + 120) = kSecAttrAccessibleWhenUnlocked;
  *(_QWORD *)(inited + 144) = v7;
  *(_QWORD *)(inited + 152) = kSecAttrSynchronizable;
  *(_BYTE *)(inited + 160) = 1;
  *(_QWORD *)(inited + 184) = &type metadata for Bool;
  *(_QWORD *)(inited + 192) = kSecAttrApplicationLabel;
  *(_QWORD *)(inited + 200) = v54;
  *(_QWORD *)(inited + 208) = a2;
  *(_QWORD *)(inited + 224) = &type metadata for String;
  *(_QWORD *)(inited + 232) = kSecReturnData;
  *(_QWORD *)(inited + 264) = &type metadata for Bool;
  *(_BYTE *)(inited + 240) = 1;
  v8 = (id)kSecClass;
  v9 = (id)kSecClassKey;
  v10 = (id)kSecUseDataProtectionKeychain;
  v11 = (id)kSecAttrAccessible;
  v12 = (id)kSecAttrAccessibleWhenUnlocked;
  v13 = (id)kSecAttrSynchronizable;
  v14 = (id)kSecAttrApplicationLabel;
  swift_bridgeObjectRetain(v53);
  v15 = (id)kSecReturnData;
  v16 = sub_1003B6580(inited);
  v58 = 0;
  v17 = sub_1003B54E0(&qword_1022A0A20);
  v18 = *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64);
  __chkstk_darwin(v17);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SymmetricKey(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  sub_1003B8888();
  sub_1003B88C4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v23 = SecItemCopyMatching(isa, (CFTypeRef *)&v58);

  v25 = v58;
  *v55 = v23;
  if (v23 == -25300)
  {
    if (qword_102301218 != -1)
      swift_once(&qword_102301218, sub_1003B5780);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_1003B54C8(v28, (uint64_t)qword_102301220);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "key not found in keychain", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    goto LABEL_24;
  }
  if (v23)
  {
    if (qword_102301218 != -1)
      swift_once(&qword_102301218, sub_1003B5780);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_1003B54C8(v33, (uint64_t)qword_102301220);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(18, -1);
      v38 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v57 = v38;
      *(_DWORD *)v37 = 67109378;
      LODWORD(v56) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, (char *)&v56 + 4, v37 + 4, v37 + 8);
      *(_WORD *)(v37 + 8) = 2080;
      v39 = SecCopyErrorMessageString(v23, 0);
      if (v39)
      {
        v40 = (__CFString *)v39;
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v43 = v42;

      }
      else
      {
        LODWORD(v56) = v23;
        v41 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
        v43 = v49;
      }
      v56 = sub_1003B7104(v41, v43, (uint64_t *)&v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v37 + 10, v37 + 18);
      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to retrieve key from keychain, error %d, %s", (uint8_t *)v37, 0x12u);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }

    goto LABEL_24;
  }
  if (v25)
  {
    v56 = v25;
    swift_unknownObjectRetain(v25, v24);
    v26 = swift_dynamicCast(&v57, &v56, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Data, 6);
    if ((v26 & 1) != 0)
    {
      *(double *)&v27 = __chkstk_darwin(v26);
      v57 = v27;
      SymmetricKey.init<A>(data:)(&v57, &type metadata for Data, &protocol witness table for Data);
      sub_1003B6FF8((uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
      v21((char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v20);
      sub_1003B7074((uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
LABEL_24:
      sub_1003B7074((uint64_t)v19, (uint64_t)v52);
      return swift_unknownObjectRelease(v58);
    }
  }
  if (qword_102301218 != -1)
    swift_once(&qword_102301218, sub_1003B5780);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_1003B54C8(v44, (uint64_t)qword_102301220);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Failed to get key from keychain. Got invalid data", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

  sub_1003B6FF8((uint64_t)v19);
  v21(v52, 1, 1, v20);
  return swift_unknownObjectRelease(v58);
}

unint64_t sub_1003B6580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1003B54E0(&qword_1022A0AF0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1003B8CA8(v7, (uint64_t)&v14, (uint64_t *)&unk_1022A0AF8);
    v8 = v14;
    result = sub_1003B7744(v14);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    result = (unint64_t)sub_1003B8CEC(&v15, (_OWORD *)(v4[7] + 32 * result));
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v7 += 40;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1003B66AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  uint64_t v20;
  OSStatus v21;

  if (&protocol conformance descriptor for SymmetricKey)
    v4 = &type metadata accessor for SymmetricKey == 0;
  else
    v4 = 1;
  if (v4 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_102301218 != -1)
      swift_once(&qword_102301218, sub_1003B5780);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_1003B54C8(v14, (uint64_t)qword_102301220);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "retrieveSymmetricKey: CryptoKit Frameowrk not loaded. method aborted.", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    goto LABEL_18;
  }
  v21 = 0;
  v9 = sub_1003B54E0(&qword_1022A0A20);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003B5E5C(a1, a2, &v21, (uint64_t)v11);
  v12 = type metadata accessor for SymmetricKey(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1003B6FF8((uint64_t)v11);
LABEL_18:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  *(_QWORD *)(a3 + 24) = v12;
  v19 = sub_1003B7038((_QWORD *)a3);
  (*(void (**)(_QWORD *, char *, uint64_t))(v13 + 32))(v19, v11, v12);
}

id sub_1003B68CC()
{
  return sub_1003B6F40(type metadata accessor for CLMicroLocationKeychain);
}

id sub_1003B68E4()
{
  return sub_1003B6FC4(type metadata accessor for CLMicroLocationKeychain);
}

void sub_1003B68F4(UInt8 *bytes@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  CFIndex v4;
  CFDataRef v5;
  CFDataRef v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (bytes)
    v4 = a2 - (_QWORD)bytes;
  else
    v4 = 0;
  v5 = CFDataCreateWithBytesNoCopy(0, bytes, v4, kCFAllocatorNull);
  if (v5)
  {
    v6 = v5;
    v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0xC000000000000000;
  }
  *a3 = v7;
  a3[1] = v9;
}

void sub_1003B6978()
{
  qword_102301240 = (uint64_t)&_swiftEmptyDictionarySingleton;
}

void sub_1003B698C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  unint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t, double);
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  double v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  _QWORD v28[3];
  _BYTE v29[24];

  v4 = a1 == 0x79656B5F6F6ELL && a2 == 0xE600000000000000;
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  v7 = type metadata accessor for SymmetricKey(0);
  v28[2] = v28;
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_102301238 != -1)
    swift_once(&qword_102301238, sub_1003B6978);
  swift_beginAccess(&qword_102301240, v29, 32, 0);
  v11 = qword_102301240;
  v12 = sub_1003B54E0(&qword_1022A0A20);
  v28[1] = v28;
  v13 = *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64);
  v14 = __chkstk_darwin(v12);
  if (!*(_QWORD *)(v11 + 16))
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56);
    v17((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v7, v14);
LABEL_15:
    sub_1003B6FF8((uint64_t)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    v18 = swift_endAccess(v29);
    v19 = type metadata accessor for SymmetricKeySize(0, v18);
    v20 = __chkstk_darwin(v19);
    v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    static SymmetricKeySize.bits256.getter(v20);
    *(_QWORD *)(a3 + 24) = v7;
    v23 = sub_1003B7038((_QWORD *)a3);
    v24 = SymmetricKey.init(size:)(v22);
    v25 = __chkstk_darwin(v24);
    (*(void (**)(char *, _QWORD *, uint64_t, double))(v8 + 16))((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v7, v25);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v7);
    swift_beginAccess(&qword_102301240, v29, 33, 0);
    swift_bridgeObjectRetain(a2);
    sub_1003B6CE4((uint64_t)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
    swift_endAccess(v29);
    return;
  }
  swift_bridgeObjectRetain(a2);
  v15 = sub_1003B7774(a1, a2);
  if ((v16 & 1) != 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(_QWORD *)(v11 + 56) + *(_QWORD *)(v8 + 72) * v15, v7);
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v7);
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v7);
  }
  swift_bridgeObjectRelease(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v7) == 1)goto LABEL_15;
  v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v26(v10, (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_endAccess(v29);
  *(_QWORD *)(a3 + 24) = v7;
  v27 = (char *)sub_1003B7038((_QWORD *)a3);
  v26(v27, v10, v7);
}

uint64_t sub_1003B6CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v15;
  uint64_t v16;
  char *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v8 = type metadata accessor for SymmetricKey(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8);
  if ((_DWORD)v10 == 1)
  {
    sub_1003B6FF8(a1);
    v11 = sub_1003B54E0(&qword_1022A0A20);
    __chkstk_darwin(v11);
    v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1003B79C0(a2, a3, (uint64_t)v13);
    swift_bridgeObjectRelease(a3);
    return sub_1003B6FF8((uint64_t)v13);
  }
  else
  {
    v15 = __chkstk_darwin(v10);
    v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 32))(v17, a1, v8, v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v21 = *v4;
    *v4 = 0x8000000000000000;
    sub_1003B8070((uint64_t)v17, a2, a3, isUniquelyReferenced_nonNull_native);
    v19 = *v4;
    *v4 = v21;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v19);
  }
}

id sub_1003B6E54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD v16[3];
  uint64_t v17;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v7 = v6;
  a4(v16, v5);
  swift_bridgeObjectRelease(v7);
  v8 = v17;
  if (!v17)
    return 0;
  v9 = sub_1003B5564(v16, v17);
  v10 = *(_QWORD *)(v8 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v13, v11);
  v14 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  sub_1003B5588(v16);
  return v14;
}

id sub_1003B6F34()
{
  return sub_1003B6F40(type metadata accessor for CLMicroLocationKeychainMock);
}

id sub_1003B6F40(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "init");
}

id sub_1003B6F7C(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_1003B6FB8()
{
  return sub_1003B6FC4(type metadata accessor for CLMicroLocationKeychainMock);
}

id sub_1003B6FC4(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1003B6FF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1003B54E0(&qword_1022A0A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1003B7038(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_1003B7074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1003B54E0(&qword_1022A0A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003B70BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1022A0A68;
  if (!qword_1022A0A68)
  {
    v1 = type metadata accessor for SymmetricKey(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SymmetricKey, v1);
    atomic_store(result, (unint64_t *)&qword_1022A0A68);
  }
  return result;
}

uint64_t sub_1003B7104(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_1003B71D4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1003B8C68((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1003B8C68((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_1003B5588(v12);
  return v7;
}

uint64_t sub_1003B71D4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1003B738C(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL, __dst);
}

uint64_t sub_1003B738C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_1003B7420(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1003B75F8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1003B75F8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_1003B7420(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_1003B7594(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_1003B7594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_1003B54E0(&qword_1022A0AE8);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_1003B75F8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1003B54E0(&qword_1022A0AE8);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

unint64_t sub_1003B7744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1003B77D8(a1, v4);
}

unint64_t sub_1003B7774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1003B78E0(a1, a2, v5);
}

unint64_t sub_1003B77D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1003B8888();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = static NSObject.== infix(_:_:)();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1003B78E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1003B79C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_1003B7774(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v19 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1003B823C();
      v12 = v19;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    v13 = *(_QWORD *)(v12 + 56);
    v14 = type metadata accessor for SymmetricKey(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a3, v13 + *(_QWORD *)(v15 + 72) * v9, v14);
    sub_1003B7E74(v9, v12);
    v16 = *v4;
    *v4 = v12;
    swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
  }
  else
  {
    v18 = type metadata accessor for SymmetricKey(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
}

Swift::Int sub_1003B7AF0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  int v48;
  int64_t v49;
  uint64_t v50;
  _QWORD v51[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_1003B54E0(&qword_1022A0AE0);
  v48 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v44 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 64);
    v46 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v45 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 64;
    result = swift_retain(v5);
    v15 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v49 = v15;
        v19 = v18 | (v15 << 6);
      }
      else
      {
        v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v20 >= v45)
          goto LABEL_37;
        v21 = v46[v20];
        v22 = v15 + 1;
        if (!v21)
        {
          v22 = v15 + 2;
          if (v15 + 2 >= v45)
            goto LABEL_37;
          v21 = v46[v22];
          if (!v21)
          {
            v23 = v15 + 3;
            if (v15 + 3 >= v45)
            {
LABEL_37:
              swift_release(v5);
              v3 = v44;
              if ((v48 & 1) != 0)
              {
                v43 = 1 << *(_BYTE *)(v5 + 32);
                if (v43 >= 64)
                  bzero(v46, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v46 = -1 << v43;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v46[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_44;
                if (v22 >= v45)
                  goto LABEL_37;
                v21 = v46[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v15 + 3;
          }
        }
LABEL_24:
        v12 = (v21 - 1) & v21;
        v49 = v22;
        v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      v24 = type metadata accessor for SymmetricKey(0);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = __chkstk_darwin(v24);
      v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      v29 = *(_QWORD *)(v5 + 56);
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v19);
      v32 = *v30;
      v31 = v30[1];
      v33 = *(_QWORD *)(v25 + 72);
      v34 = v29 + v33 * v19;
      v50 = v35;
      if ((v48 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t, double))(v25 + 32))(v28, v34, v24, v26);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, double))(v25 + 16))(v28, v34, v24, v26);
        swift_bridgeObjectRetain(v31);
      }
      Hasher.init(_seed:)(v51, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v51, v32, v31);
      result = Hasher._finalize()();
      v36 = -1 << *(_BYTE *)(v8 + 32);
      v37 = result & ~v36;
      v38 = v37 >> 6;
      if (((-1 << v37) & ~*(_QWORD *)(v13 + 8 * (v37 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v13 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v39 = 0;
        v40 = (unint64_t)(63 - v36) >> 6;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v41 = v38 == v40;
          if (v38 == v40)
            v38 = 0;
          v39 |= v41;
          v42 = *(_QWORD *)(v13 + 8 * v38);
        }
        while (v42 == -1);
        v16 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v16);
      *v17 = v32;
      v17[1] = v31;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v25 + 32))(*(_QWORD *)(v8 + 56) + v33 * v16, v28, v24);
      ++*(_QWORD *)(v8 + 16);
      v15 = v49;
    }
  }
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

unint64_t sub_1003B7E74(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v29, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v29, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v13 < v8)
          goto LABEL_11;
LABEL_12:
        v14 = *(_QWORD *)(a2 + 48);
        v15 = (_OWORD *)(v14 + 16 * v3);
        v16 = (_OWORD *)(v14 + 16 * v6);
        if (v3 != v6 || v15 >= v16 + 1)
          *v15 = *v16;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for SymmetricKey(0) - 8) + 72);
        v19 = v18 * v3;
        result = v17 + v18 * v3;
        v20 = v18 * v6;
        v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v13 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v13)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1003B8070(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1003B7774(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for SymmetricKey(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1003B823C();
      goto LABEL_7;
    }
    sub_1003B7AF0(v15, a4 & 1);
    v22 = sub_1003B7774(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1003B81AC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain(a3);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_1003B81AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for SymmetricKey(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

void *sub_1003B823C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;

  sub_1003B54E0(&qword_1022A0AE0);
  v33 = v0;
  v1 = *v0;
  v2 = static _DictionaryStorage.copy(original:)(*v0);
  v3 = *(_QWORD *)(v1 + 16);
  v37 = v2;
  if (!v3)
  {
    result = (void *)swift_release(v1);
    v32 = v37;
    v31 = v33;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v4 = v2;
  result = (void *)(v2 + 64);
  v6 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    v4 = v37;
  }
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v36 = v1;
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v34 = v1 + 64;
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v1;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v38 = v8;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v27 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v8 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_26;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_25:
    v11 = (v28 - 1) & v28;
    v38 = v29;
    v14 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v14);
    v18 = *v16;
    v17 = v16[1];
    v19 = type metadata accessor for SymmetricKey(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = __chkstk_darwin(v19);
    v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = *(_QWORD *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t, double))(v20 + 16))(v23, *(_QWORD *)(v12 + 56) + v24, v19, v21);
    v25 = v37;
    v26 = (_QWORD *)(*(_QWORD *)(v37 + 48) + v15);
    *v26 = v18;
    v26[1] = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(_QWORD *)(v25 + 56) + v24, v23, v19);
    result = (void *)swift_bridgeObjectRetain(v17);
    v8 = v38;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_26:
    result = (void *)swift_release(v36);
    v31 = v33;
    v32 = v37;
    goto LABEL_28;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_1003B84B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  const __CFString *v8;
  const __CFString *v9;
  const __CFString *v10;
  const __CFString *v11;
  const __CFString *v12;
  const __CFString *v13;
  const __CFString *v14;
  const __CFString *v15;
  unint64_t v16;
  const __CFDictionary *isa;
  OSStatus v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  CFStringRef v25;
  __CFString *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  _BYTE v37[280];

  v3 = sub_1003B54E0(&qword_1022A0A70);
  inited = swift_initStackObject(v3, v37);
  *(_OWORD *)(inited + 16) = xmmword_101BA04D0;
  *(_QWORD *)(inited + 32) = kSecClass;
  type metadata accessor for CFString();
  *(_QWORD *)(inited + 40) = kSecClassKey;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = kSecUseDataProtectionKeychain;
  *(_BYTE *)(inited + 80) = 1;
  *(_QWORD *)(inited + 104) = &type metadata for Bool;
  *(_QWORD *)(inited + 112) = kSecAttrAccessible;
  *(_QWORD *)(inited + 120) = kSecAttrAccessibleWhenUnlocked;
  *(_QWORD *)(inited + 144) = v5;
  *(_QWORD *)(inited + 152) = kSecAttrSynchronizable;
  *(_BYTE *)(inited + 160) = 1;
  *(_QWORD *)(inited + 184) = &type metadata for Bool;
  *(_QWORD *)(inited + 192) = kSecValueData;
  v6 = type metadata accessor for SymmetricKey(0);
  v7 = sub_1003B70BC();
  v8 = (id)kSecClass;
  v9 = (id)kSecClassKey;
  v10 = (id)kSecUseDataProtectionKeychain;
  v11 = (id)kSecAttrAccessible;
  v12 = (id)kSecAttrAccessibleWhenUnlocked;
  v13 = (id)kSecAttrSynchronizable;
  v14 = (id)kSecValueData;
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)(v36, sub_1003B68F4, 0, &type metadata for Data, v6, v7);
  *(_OWORD *)(inited + 200) = *(_OWORD *)v36;
  *(_QWORD *)(inited + 224) = &type metadata for Data;
  *(_QWORD *)(inited + 232) = kSecAttrApplicationLabel;
  *(_QWORD *)(inited + 264) = &type metadata for String;
  *(_QWORD *)(inited + 240) = a2;
  *(_QWORD *)(inited + 248) = a3;
  v15 = (id)kSecAttrApplicationLabel;
  swift_bridgeObjectRetain(a3);
  v16 = sub_1003B6580(inited);
  sub_1003B8888();
  sub_1003B88C4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v18 = SecItemAdd(isa, 0);

  if (v18)
  {
    if (qword_102301218 != -1)
      swift_once(&qword_102301218, sub_1003B5780);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_1003B54C8(v19, (uint64_t)qword_102301220);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(18, -1);
      v24 = swift_slowAlloc(32, -1);
      v36[0] = v24;
      *(_DWORD *)v23 = 67109378;
      LODWORD(v34) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 4, v23 + 4, v23 + 8);
      *(_WORD *)(v23 + 8) = 2080;
      v25 = SecCopyErrorMessageString(v18, 0);
      if (v25)
      {
        v26 = (__CFString *)v25;
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v29 = v28;

      }
      else
      {
        LODWORD(v34) = v18;
        v27 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
        v29 = v30;
      }
      v34 = sub_1003B7104(v27, v29, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v23 + 10, v23 + 18);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to store key in keychain, error %d, %s", (uint8_t *)v23, 0x12u);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }

  }
  return v18 == 0;
}

void type metadata accessor for CFString()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1022A0AD8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, &unk_1021332C8);
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1022A0AD8);
  }
}

unint64_t sub_1003B8888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1022A0A78;
  if (!qword_1022A0A78)
  {
    v1 = objc_opt_self(NSString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1022A0A78);
  }
  return result;
}

unint64_t sub_1003B88C4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1022A0A80;
  if (!qword_1022A0A80)
  {
    v1 = sub_1003B8888();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1022A0A80);
  }
  return result;
}

BOOL sub_1003B890C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  const __CFString *v7;
  const __CFString *v8;
  const __CFString *v9;
  const __CFString *v10;
  const __CFString *v11;
  const __CFString *v12;
  const __CFString *v13;
  unint64_t v14;
  const __CFDictionary *isa;
  OSStatus v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  CFStringRef v23;
  __CFString *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[240];

  v4 = sub_1003B54E0(&qword_1022A0A70);
  inited = swift_initStackObject(v4, v32);
  *(_OWORD *)(inited + 16) = xmmword_101BA04E0;
  *(_QWORD *)(inited + 32) = kSecClass;
  type metadata accessor for CFString();
  *(_QWORD *)(inited + 40) = kSecClassKey;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = kSecUseDataProtectionKeychain;
  *(_BYTE *)(inited + 80) = 1;
  *(_QWORD *)(inited + 104) = &type metadata for Bool;
  *(_QWORD *)(inited + 112) = kSecAttrAccessible;
  *(_QWORD *)(inited + 120) = kSecAttrAccessibleAfterFirstUnlock;
  *(_QWORD *)(inited + 144) = v6;
  *(_QWORD *)(inited + 152) = kSecAttrSynchronizable;
  *(_BYTE *)(inited + 160) = 1;
  *(_QWORD *)(inited + 184) = &type metadata for Bool;
  *(_QWORD *)(inited + 192) = kSecAttrApplicationLabel;
  *(_QWORD *)(inited + 224) = &type metadata for String;
  *(_QWORD *)(inited + 200) = a1;
  *(_QWORD *)(inited + 208) = a2;
  v7 = (id)kSecClass;
  v8 = (id)kSecClassKey;
  v9 = (id)kSecUseDataProtectionKeychain;
  v10 = (id)kSecAttrAccessible;
  v11 = (id)kSecAttrAccessibleAfterFirstUnlock;
  v12 = (id)kSecAttrSynchronizable;
  v13 = (id)kSecAttrApplicationLabel;
  swift_bridgeObjectRetain(a2);
  v14 = sub_1003B6580(inited);
  sub_1003B8888();
  sub_1003B88C4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v16 = SecItemDelete(isa);

  if (v16)
  {
    if (qword_102301218 != -1)
      swift_once(&qword_102301218, sub_1003B5780);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_1003B54C8(v17, (uint64_t)qword_102301220);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(18, -1);
      v22 = swift_slowAlloc(32, -1);
      v31 = v22;
      *(_DWORD *)v21 = 67109378;
      LODWORD(v30) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, (char *)&v30 + 4, v21 + 4, v21 + 8);
      *(_WORD *)(v21 + 8) = 2080;
      v23 = SecCopyErrorMessageString(v16, 0);
      if (v23)
      {
        v24 = (__CFString *)v23;
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v27 = v26;

      }
      else
      {
        LODWORD(v30) = v16;
        v25 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
        v27 = v28;
      }
      v30 = sub_1003B7104(v25, v27, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v21 + 10, v21 + 18);
      swift_bridgeObjectRelease(v27);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to remove key from keychain, error %d, %s", (uint8_t *)v21, 0x12u);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }

  }
  return v16 == 0;
}

uint64_t type metadata accessor for CLMicroLocationKeychain()
{
  return objc_opt_self(_TtC19microlocation_logic23CLMicroLocationKeychain);
}

uint64_t type metadata accessor for CLMicroLocationKeychainMock()
{
  return objc_opt_self(_TtC19microlocation_logic27CLMicroLocationKeychainMock);
}

uint64_t sub_1003B8C68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1003B8CA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1003B54E0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_1003B8CEC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1003B8D00(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  NDR_record_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;

  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = NDR_record;
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1003B8F58(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  NDR_record_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = NDR_record;
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_1003B90E4(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  NDR_record_t v22;
  _BYTE v23[28];
  int v24;

  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = NDR_record;
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1003B92D0(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_1003B9448(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) - 1224239923 * ((-2 - ((a1 | 0xAACC30C4) + (~(_DWORD)a1 | 0x5533CF3B))) ^ 0xA78032EC);
  __asm { BR              X10 }
}

void sub_1003B9564(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 517884438;
}

void sub_1003BA50C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~(_DWORD)a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BR              X10 }
}

uint64_t sub_1003BA5E0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * (&a4 ^ 0xDEC6BDDB);
  a7 = &STACK[0x509D13A7D8C2F400];
  a8 = v12 ^ 0x1F8BFA88;
  a4 = &STACK[0x3F8123127DDA1A64];
  a5 = v11;
  a6 = (v10 - 194) ^ v12;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 - 375)) - 4))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v11 - 0x31BC703A95C2A144) == v8)
                                                        * ((v10 + 779) ^ 0x36F)) ^ v10))
                                          - 8))(v13);
}

uint64_t sub_1003BA6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((a11 != v11) * ((v13 ^ 0x50B) + 30)) ^ v13)) - 8))();
}

uint64_t sub_1003BA6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v17 = (v13 + v12);
  *(_BYTE *)(v11 + v17) = *(_BYTE *)(a9 + v17) ^ 0xC1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((446 * ((int)v17 + 1 < (a11 ^ v14))) ^ v16)) - 8))();
}

void sub_1003BA734(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(*(_QWORD *)(v3 + 24) - 0x8DE5192BDC53166) = v1;
  *(_DWORD *)(v4 - 0x18D77CDD39E8CCF6) = v2;
  *(_DWORD *)v3 = *a1;
}

void sub_1003BA79C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BR              X9 }
}

uint64_t sub_1003BA86C@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v17;

  v14 = 1759421093
      * ((2 * ((&a5 ^ 0x852F369) & 0x163ED650) - (&a5 ^ 0x852F369) + 1774266795) ^ 0xD2EE6A96);
  v17 = *a1 - v12 + *(_DWORD *)(v8 - 0x31BC703A95C2A14CLL) - 681732506;
  a8 = v13 - v14 + 840;
  a5 = v17 - v14 + 891494473;
  a6 = v14 + 1045653964;
  a7 = v8;
  v15 = ((uint64_t (*)(int *))(*(_QWORD *)(a2 + 8 * (v13 ^ 0x1BF)) - 8))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8 * (((*v9 == v10) * (((v13 - 124) | 0xC8) ^ 0x421)) ^ v13))
                                          - 8))(v15);
}

uint64_t sub_1003BA968()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(_QWORD *)(v0 + 8) == 0x248771FDFB9E9BA5) ^ (v1 + 56)) & 1)
                                * (v1 + 505)) ^ v1)))();
}

uint64_t sub_1003BA9B4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  uint64_t v4;
  _DWORD *v5;
  int v6;
  uint64_t v7;

  *(_QWORD *)(v1 - 0x248771FDFB9E9BA5) = (*v2 + a1) + *(_QWORD *)(v4 - 0x31BC703A95C2A15CLL) + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1516 * (*v5 == v6)) ^ (v3 - 76))) - 8))();
}

void sub_1003BAA14(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(v3 - 0x31BC703A95C2A15CLL);
  v6 = *v2 + a1;
  *(_BYTE *)(v5 + v6) = (HIBYTE(v1) ^ 0x3B) - ((2 * (HIBYTE(v1) ^ 0x3B)) & 0x83) - 63;
  *(_BYTE *)(v5 + v6 + 1) = (BYTE2(v1) ^ 0x74) - 2 * ((BYTE2(v1) ^ 0x74) & 0xC3 ^ BYTE2(v1) & 2) - 63;
  *(_BYTE *)(v5 + v6 + 2) = (BYTE1(v1) ^ 0x8D) - 2 * ((BYTE1(v1) ^ 0x8D) & 0xC3 ^ BYTE1(v1) & 2) - 63;
  *(_BYTE *)(v5 + v6 + 3) = v1 ^ 0xC0;
  v7 = *(_QWORD *)(v3 - 0x31BC703A95C2A15CLL);
  v8 = v4 - ((2 * v4 + 112929980) & 0x426471E) - 646923795;
  v9 = ((2 * (a1 + *v2 + 4)) & 0x6E37B6EC) + ((a1 + *v2 + 4) ^ 0x371BDB76) - 924572534;
  *(_BYTE *)(v7 + v9) = (HIBYTE(v8) ^ 2) - ((v8 >> 23) & 0x82) - 63;
  *(_BYTE *)(v7 + v9 + 1) = (BYTE2(v8) ^ 0x13) - ((2 * (BYTE2(v8) ^ 0x13)) & 0x83) - 63;
  *(_BYTE *)(v7 + v9 + 2) = (BYTE1(v8) ^ 0x23) - ((2 * (BYTE1(v8) ^ 0x23)) & 0x83) - 63;
  *(_BYTE *)(v7 + v9 + 3) = (v4 - ((2 * v4 - 68) & 0x1E) - 19) ^ 0x4E;
  *v2 = v10;
}

uint64_t sub_1003BAC74(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;
  int v6;

  v1 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0);
  v2 = (*(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0x167EE951) - 511646474) & 0x1E7F195D;
  v4 = v1 - 517884438;
  v3 = v1 - 517884438 < 0;
  v5 = 517884438 - v1;
  if (v3)
    v4 = v5;
  v6 = ((v2 + 428) ^ 0xDF3FE504) + (v4 ^ 0x6EC23A6F) - 1308762668 + ((v2 ^ 0xDD8475D2) & (2 * v4)) < v2 + 2147483379;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + (v2 ^ 0x17D))
                                        + 8 * (((2 * v6) | (v6 << 6)) ^ v2)
                                        - 12)
                            - 12))();
}

uint64_t sub_1003BADA4(uint64_t a1, unsigned int a2, int a3, unint64_t a4, int a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  _QWORD *v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((*(_DWORD *)(*v8 + 4 * a6) != v6) * a3) ^ a5))
                            - ((a5 - 428) ^ a2 ^ a4)))();
}

void sub_1003BADD4()
{
  JUMPOUT(0x1003BAD68);
}

uint64_t sub_1003BADDC(uint64_t result)
{
  *(_DWORD *)(result + 4) = 2137033667;
  return result;
}

uint64_t sub_1003BADEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1495 * (((((v8 + 52) ^ 0x10D) << 31) & (a6 ^ v6)) != 0)) ^ v8))
                            - 12))();
}

uint64_t sub_1003BAE2C()
{
  int v0;
  uint64_t v1;
  char v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v3 << (v2 + 31)) & v0) != 0) * v4) ^ v5)) - 12))();
}

uint64_t sub_1003BAE54@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  char v2;
  int v3;

  *(_DWORD *)(result + 4) = (a2 << ((4 * (v2 ^ 0xA2)) ^ 0xBD)) + v3 + 1734181732;
  return result;
}

void sub_1003BAE80(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;

  v1 = 1178560073 * ((-2 - ((a1 | 0x5A50E64C) + (~(_DWORD)a1 | 0xA5AF19B3))) ^ 0x1F3B61D1);
  v2 = *(_DWORD *)(a1 + 40) ^ v1;
  if (*(_QWORD *)(a1 + 48) | *(_QWORD *)(a1 + 64))
    v3 = *(_DWORD *)(a1 + 24) + v1 == 632307271;
  else
    v3 = 1;
  v4 = !v3;
  __asm { BR              X9 }
}

uint64_t sub_1003BAFD8@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = v1[1] != 0x237357D135FF68D5 && (v1[7] | v1[4]) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * (a1 - 110)) ^ a1)) - 8))();
}

uint64_t sub_1003BB024@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *(_QWORD *)(v24 + 72);
  *(_DWORD *)(v23 - 0x237357D135FF68D5) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, char *, char *, char *))(v25
                                                                                             + 8
                                                                                             * ((16
                                                                                               * (v26 != 0x63F19B7CB7021DA4)) | ((v26 != 0x63F19B7CB7021DA4) << 6) | (a1 + 674))))(0x48247A308694277ELL, 0x63F19B7CB7021DA4, &a11, &a23, &a18, &a14, &a20);
}

uint64_t sub_1003BB0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (int)((((v10 + 1720738611) & 0x996F9FEF ^ 0x3B7) * (v8 == 0)) ^ (v10 - 36))) - (((v10 + 756) | 0x2Fu) ^ 0x3ABLL)))(a4 + a2, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1003BB214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;

  v26 = 13 * (v16 ^ 0x3BE);
  v27 = ((((v25 - 144) | 0x314D4C0E) - ((v25 - 144) & 0x314D4C0E)) ^ 0x8BD9346C) * v19;
  *(_QWORD *)(v25 - 136) = v22;
  *(_QWORD *)(v25 - 128) = a1;
  *(_DWORD *)(v25 - 144) = v27 + v16 - 381;
  *(_DWORD *)(v25 - 116) = v27 + v20 + (v26 ^ 0x1A72949A);
  v28 = v17;
  v29 = v18 != 0;
  ((void (*)(uint64_t))(*(_QWORD *)(v17 + 8 * (v16 - 822)) - 12))(v25 - 144);
  *(_DWORD *)(v25 - 128) = (v26 + 355) ^ (628203409 * ((v25 + 69161144 - 2 * ((v25 - 144) & 0x41F5148)) ^ 0x86975D7B));
  *(_QWORD *)(v25 - 144) = v21;
  *(_QWORD *)(v25 - 136) = v24;
  ((void (*)(uint64_t))(*(_QWORD *)(v28 + 8 * (v26 - 212)) - 4))(v25 - 144);
  *(_QWORD *)(v25 - 104) = v21;
  *(_DWORD *)(v25 - 128) = v26
                         + 1374699841 * ((((v25 - 144) | 0xD1E85911) - ((v25 - 144) & 0xD1E85911)) ^ 0xBC1C4118)
                         + 905;
  *(_QWORD *)(v25 - 144) = a16;
  *(_QWORD *)(v25 - 136) = v24;
  *(_QWORD *)(v25 - 120) = a15;
  *(_QWORD *)(v25 - 112) = a14;
  v30 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28 + 8 * (v26 - 190)) - 12))(v25 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * (v26 ^ (496 * v29)))
                                          - (((v26 - 220) | 0x682u) ^ 0x68FLL)))(v30);
}

uint64_t sub_1003BB404()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 535753261 * (((((v5 - 144) | 0x615B03DC) ^ 0xFFFFFFFE) - (~(v5 - 144) | 0x9EA4FC23)) ^ 0x9450F20C);
  *(_DWORD *)(v5 - 120) = v1 + v6 + 609433000 + (v4 ^ 0x60F);
  *(_DWORD *)(v5 - 136) = (v4 - 383) ^ v6;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 144) = v8;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v4 - 1539)) - 8))(v5 - 144);
  *v10 = v9;
  *v0 = 1810546658;
  return result;
}

uint64_t sub_1003BB538(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;
  _BOOL4 v7;

  v1 = 1224239923 * (((a1 | 0x8C9528F6) - (_DWORD)a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  v2 = a1[4] - v1;
  v3 = *a1 ^ v1;
  v5 = v3 - 1824165969;
  v4 = v3 - 1824165969 < 0;
  LODWORD(v6) = 1824165969 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  v7 = v6 != ((2 * (_DWORD)v6) & 0x9941EEA6);
  return (*(uint64_t (**)(void))((char *)*(&off_1021378F0 + (int)(v2 - 281)) + 8 * (int)(((4 * v7) | (16 * v7)) ^ v2)
                                                                            - 12))();
}

void sub_1003BB5E8(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  **(_DWORD **)(v1 - 0x63F19B7CB7021D9CLL) = (v2 + 1285617491) ^ 0x6A66B725;
  *(_DWORD *)(v1 - 0x63F19B7CB7021DA0) = a1 + 1;
}

void sub_1003BB640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __asm { BR              X8 }
}

uint64_t sub_1003BB6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;

  a16 = 108757529 * ((&a15 + 70320331 - 2 * (&a15 & 0x43100CB)) ^ 0xE4AD62E0) - 504207030;
  v17 = sub_1003FCE54(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1959 * (a15 == 1810546658)) ^ 0x26Bu)))(v17);
}

uint64_t sub_1003BB748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  a17 = 915 - 460628867 * ((((2 * &a15) | 0xF5C7D9FC) - &a15 + 85725954) ^ 0xB6756E83);
  a15 = &STACK[0x1706FB9DE6F6FC7C];
  sub_1003D5ADC((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((371 * (a16 == 1810546658)) ^ v17)))(v19, v20, v21, v22, v23, v24, v25, v26);
}

uint64_t sub_1003BB7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  int v19;
  int *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v28 = (v19 + 1513451004) & 0x2FB;
  v29 = 1178560073 * ((((2 * &a15) | 0x52165FC6) - &a15 - 688599011) ^ 0x939F5781);
  a18 = v29 ^ 0x40C;
  a16 = v29 + 1160082353 * v26 + 359058754;
  a17 = a13;
  sub_1003CFA7C((uint64_t)&a15);
  v30 = 1178560073 * ((&a15 & 0x147230E4 | ~(&a15 | 0x147230E4)) ^ 0x5119B779);
  a18 = v30 ^ 0x40C;
  a17 = a13;
  a16 = v30 + 1160082353 * v25 + 359058754;
  sub_1003CFA7C((uint64_t)&a15);
  v31 = 1178560073 * (&a15 ^ 0xBA947862);
  a16 = v31 + 232;
  a19 = v23;
  a18 = ((v24 ^ 0xDB3BBBB9) + 1876872960 + ((v28 ^ 0xB6777518) & (2 * v24))) ^ v31;
  a17 = a13;
  sub_1003E7008((uint64_t)&a15);
  v32 = 1178560073 * ((&a15 - 1989463651 - 2 * (&a15 & 0x896B319D)) ^ 0x33FF49FF);
  a17 = a13;
  a19 = v21;
  a16 = v32 + 232;
  a18 = v32 ^ ((v22 ^ 0x5BBFCBBD) - 279265540 + ((2 * v22) & 0xB77F977A));
  sub_1003E7008((uint64_t)&a15);
  v33 = *v20;
  a17 = a13;
  a16 = v31 + 1160082353 * v33 + 359058754;
  a18 = v31 ^ 0x40C;
  sub_1003CFA7C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * ((1770 * (a15 == 1810546658)) ^ 0x173u)) - 8))(v34, v35, v36, v37, v38, v39, v40, v41, v27, a10);
}

uint64_t sub_1003BBA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, unsigned int a17, unsigned int a18, unsigned int a19, int a20)
{
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 460628867 * (((&a15 | 0x444BEFE9) + (~&a15 | 0xBBB41016)) ^ 0x8DD6D95);
  a15 = &STACK[0x5640F59D98E42E5B];
  a16 = a13;
  a18 = v22 - 2024873083;
  a19 = 2066553870 - v22;
  a17 = v22 + 666425997;
  v23 = sub_1003FD230((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((7 * (a20 == v20)) ^ 0x173)) - 8))(v23);
}

uint64_t sub_1003BBB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, unsigned int a15, unint64_t *a16, unint64_t *a17, unint64_t *a18, unsigned int a19)
{
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v21 = v19 ^ 0x98;
  a19 = ((v19 ^ 0x98) - 75) ^ (1225351577
                             * ((&a15 & 0x700A8397 | ~(&a15 | 0x700A8397)) ^ 0xAC6FA47E));
  a16 = a14;
  a17 = &STACK[0x18D77CDD39E8CD0A];
  a18 = &STACK[0x8DE5192BDC5317E];
  ((void (*)(unsigned int *))((char *)*(&off_1021378F0 + (v19 ^ 0x147u)) - 4))(&a15);
  a15 = (v21 - 103) ^ (1374699841 * (&a15 ^ 0x6DF41809));
  a16 = &STACK[0x2DEB3A05C2E48BCD];
  a17 = a14;
  ((void (*)(unsigned int *))((char *)*(&off_1021378F0 + (v21 ^ 0x15Du)) - 12))(&a15);
  a16 = a14;
  a15 = (v21 - 173) ^ (1755732067
                     * ((((2 * (&a15 ^ 0x1D0430E2)) | 0x9439548E)
                       - (&a15 ^ 0x1D0430E2)
                       + 904091065) ^ 0x9DE277E));
  v22 = sub_1003D11E8((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * ((1988 * ((_DWORD)a17 == v21 + 1810546167)) ^ v21))
                                          - ((v21 - 120) ^ 0x177)))(v22);
}

uint64_t sub_1003BBCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  int v11;
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((57
                                          * (((v12 - 95) ^ (a11 == ((v12 + 1597965819) & 0xA0C0FBF7 ^ (v11 - 955)))) & 1)) ^ v12))
                            - 4))();
}

uint64_t sub_1003BBD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  int v12;
  int v13;
  uint64_t v14;
  int v15;

  v15 = (a12 ^ v13) + 1089336479 + (~((a12 ^ v13) << ((v12 ^ 0x2E) + 22)) | 0x7E2416C3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((31
                                          * (((2 * v15) & 0xFFDEFEFE ^ 0x81DAE83C) + (v15 ^ 0x3F028BE1) - 1744834572 != 401567603)) ^ v12))
                            - 12))();
}

uint64_t sub_1003BBDB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((485
                                          * (v5 + v4 + (((a4 + 1073745493) | 0x10566329) ^ 0xD046F3E8) < ((a4 + 1073745493) ^ 0x40001048u))) ^ (a4 + 778)))
                            - 4))();
}

uint64_t sub_1003BBE34(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)((((a4 + 1526133657) & 0xF55F7BFB ^ (v4 + 1474))
                                               * ((unint64_t)(v5 - v6) > 0x1F)) ^ a4))
                            - 12))();
}

uint64_t sub_1003BBE78(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6
                                                     + 8
                                                     * ((((((a4 + 482) ^ (v5 < 0x20)) & 1) == 0)
                                                       * (v4 + ((a4 + 1079266637) | 0x10022248) + 771)) ^ (a4 + 543)))
                                         - 8))(0);
}

uint64_t sub_1003BBECC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v10 = (v4 + v7 + 491);
  v11 = *(_OWORD *)(v3 + v10 - 15);
  v12 = *(_OWORD *)(v3 + v10 - 31);
  v13 = v8 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((15 * ((a2 ^ (v2 + 1485) ^ 0x638) != (v6 & 0xFFFFFFE0))) ^ (v5 + a2 + 928)))
                            - 12))();
}

uint64_t sub_1003BBF38(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * (((((a5 - 1078) ^ 9) + ((a5 - 1078) | 0x411) - 1954) * (v5 == a1)) ^ a5)))();
}

uint64_t sub_1003BBF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  char v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (a6 ^ (1015 * ((v7 & 0x18) == 0))))
                                                  - ((2 * (a6 ^ (v6 + 1782) ^ (v6 + 526))) ^ 0x5BELL)))(a1, (v8 - a1));
}

uint64_t sub_1003BBFAC(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 - 7 + (v7 + v6 - a1 - 2146402176)) = *(_QWORD *)(v4
                                                                              - 7
                                                                              + (v7 + v6 - a1 - 2146402176));
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v10
                                                             + 8
                                                             * (((a1 - (v5 & 0xFFFFFFF8) == -8) * (a4 - 651)) ^ a4))
                                                 - 4))((v7 + v6 - a1 - 2146402184), v8 - (v5 & 0xFFFFFFF8));
}

uint64_t sub_1003BC008(unsigned int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a3 + a1) = *(_QWORD *)(v7 + a1);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v8 + 8 * (((a6 == 0) * v6) ^ a4)) - 4))(a1 - 8);
}

uint64_t sub_1003BC038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v8 + v5 + v6) * (v7 != a5)) ^ v8))
                            - (((v8 - 773) | 0x12Bu) ^ 0x1E7)))();
}

uint64_t sub_1003BC070(uint64_t a1, int a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v8 + (a3 - v4 - 474 + v6 + a2)) = *(_BYTE *)(v5 + (a3 - v4 - 474 + v6 + a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1892 * (a2 - 1 != v3)) ^ (v7 + a3 + 948))) - 12))();
}

uint64_t sub_1003BC0B4@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  void (*v3)(_BYTE *);
  _DWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[4];
  unsigned int v10;
  uint64_t v11;

  v5 = 7 * (a1 ^ 0x1DE);
  *v4 = a2;
  v11 = v8;
  v10 = v5
      + (((v9 | 0x3211D2A2) - v9 + (v9 & 0xCDEE2D58)) ^ 0x38E5DC8D) * v2
      + 889;
  v3(v9);
  v10 = (v5 ^ 0x318) + ((v9 + 581886662 - 2 * (v9 & 0x22AEE2C6)) ^ 0x285AECE9) * v2 + 641;
  v11 = v7;
  v3(v9);
  return 0;
}

uint64_t sub_1003BC1B4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF);
  v2 = *(_DWORD *)a1 ^ v1;
  v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0);
  v6 = v4 - 517884438;
  v5 = v4 - 517884438 < 0;
  v7 = 517884438 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + (v2 ^ 0xBB))
                                        + 8
                                        * (v2 | (16 * (((v2 - 1) ^ (v3 >> 5 < v7)) & 1)))
                                        - 12)
                            - 8))();
}

uint64_t sub_1003BC278@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 4) = a2;
  return result;
}

uint64_t sub_1003BC280@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  unsigned int v4;
  char v5;

  *(_DWORD *)(result + 4) = ((*(_DWORD *)(*(_QWORD *)(v2 - 0x63F19B7CB7021D9CLL) + 4 * v4) ^ 0x26C64076u) >> ((((v5 + 52) & 0xDB) + 69) & v3)) & 1 | a2;
  return result;
}

void sub_1003BC2D8(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1374699841 * (((_DWORD)a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E);
  v2 = *a1 + v1;
  __asm { BR              X14 }
}

uint64_t sub_1003BC3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  _DWORD v8[2];
  uint64_t v9;

  v5 = v2 - (((((v3 - 13) | 0x102) ^ 0x1707F631) + v4) & 0x6FDA7728) - 1015990969;
  v6 = 1755732067 * ((-432722614 - (v8 | 0xE6352D4A) + (v8 | 0x19CAD2B5)) ^ 0xC70C6F6E);
  v9 = v1;
  v8[0] = v5 ^ v6;
  v8[1] = (v3 - 306) ^ v6;
  return ((uint64_t (*)(_DWORD *))(*(_QWORD *)(a1 + 8 * (v3 - 1047)) - 4))(v8);
}

void sub_1003BC520(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1003BC5A8()
{
  int v0;
  unsigned int v1;

  return v0 ^ v1;
}

void sub_1003BD1F4(uint64_t a1)
{
  int v1;
  _BOOL4 v2;

  v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  v2 = *(_QWORD *)(a1 + 32) > *(_QWORD *)a1;
  __asm { BR              X9 }
}

uint64_t sub_1003BD300()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (2039 * (v1 != 0x5D4801E5)))) - 12))();
}

uint64_t sub_1003BD35C()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v0 > v5;
  *(_BYTE *)(v10 + (v7 - 704230031)) = *(_BYTE *)(*(_QWORD *)(v8 + 8 * (v2 ^ 0x117))
                                                              + (((_BYTE)v7 + 113) & 0xF)) ^ *(_BYTE *)(v1 + (v7 - 704230031)) ^ (((v7 + 113) & 0xF) * ((v2 + 80) ^ 0xE8)) ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (v2 ^ 0x1E1)) + (((_BYTE)v7 + 113) & 0xF) - 4) ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (v2 ^ 0x1FE)) + (((_BYTE)v7 + 113) & 0xF) - 7);
  if (v11 == v7 + 1878700902 < v3)
    v11 = v7 + 1878700902 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v11 * v6) ^ v2)) - 12))();
}

uint64_t sub_1003BD410()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((99
                                          * (((v1 << (v0 + 96)) & 0xE7FAD8CE ^ 0xA29000CA)
                                           + (v1 ^ 0xAEB56D82)
                                           + 2139551317 != 1938055868)) ^ v0))
                            - 4))();
}

uint64_t sub_1003BD48C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * ((7
                                                                 * (a2 + v3 + ((v2 - 808) ^ 0x75Bu) + 201495448 - 1032 > 7)) ^ v2))
                                                   - 4))(a1, 201495448);
}

uint64_t sub_1003BD4F0(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1923 * ((a2 + a5 - 16) > 0xFFFFFFEF)) ^ a4)) - 12))();
}

uint64_t sub_1003BD528@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL4 v20;

  v10 = (a3 + v7 + a1);
  v11 = v10 + v9;
  v12 = ((577 * (a2 ^ 0x351)) ^ 0x6CC) & v10;
  v13 = v5 - v11;
  v14 = (v12 | v6) - v11;
  v15 = (v12 | v4) - v11;
  v16 = v13 + v12;
  v20 = v3 - v9 >= ((a2 + 183) ^ 0x419uLL) && v16 > 0xF && (unint64_t)(v14 + 1) > 0xF && v15 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a2 ^ (4 * v20))) - 12))();
}

uint64_t sub_1003BD5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (v3 ^ (37 * (v4 > 0xF))))
                                                                    - ((v3 - 1330) ^ 0x195)))(a1, a2, a3, 0);
}

uint64_t sub_1003BD5E0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int8x16_t v60;
  uint64_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16x4_t v65;
  int8x16x4_t v66;

  *(_DWORD *)(v59 - 128) = a2 + 4;
  *(_DWORD *)(v59 - 132) = a2 + 3;
  v65.val[1].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v65.val[1].i64[1] = ((_BYTE)a2 + 9) & 0xF;
  v65.val[2].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v65.val[2].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v65.val[3].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v65.val[3].i64[1] = ((_BYTE)a2 + 5) & 0xF;
  v60.i64[0] = 0x8787878787878787;
  v60.i64[1] = 0x8787878787878787;
  v61 = a1 + a4 + v58 - 431 + (a3 ^ 0x204u);
  v65.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)a4 + (_BYTE)v58 + 81 + (a3 ^ 4)) & 0xF;
  v65.val[0].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v62.i64[0] = vqtbl4q_s8(v65, (int8x16_t)xmmword_101BA0570).u64[0];
  v66.val[0].i64[1] = *(_DWORD *)(v59 - 132) & 0xF;
  v66.val[1].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v66.val[2].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v66.val[3].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v66.val[0].i64[0] = *(_DWORD *)(v59 - 128) & 0xF;
  v66.val[1].i64[0] = ((_BYTE)a2 + 2) & 0xF;
  v66.val[2].i64[0] = a2 & 0xF;
  v66.val[3].i64[0] = ((_BYTE)a2 + 14) & 0xF;
  v62.i64[1] = vqtbl4q_s8(v66, (int8x16_t)xmmword_101BA0570).u64[0];
  v63 = vrev64q_s8(vmulq_s8(v62, v60));
  *(int8x16_t *)(*(_QWORD *)(v59 - 120) - 15 + v61) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v55 + (v61 & 0xF) - 15), *(int8x16_t *)(v53 - 15 + v61)), veorq_s8(*(int8x16_t *)((v61 & 0xF) + v56 - 14), *(int8x16_t *)(v54 + (v61 & 0xF) - 15))), vextq_s8(v63, v63, 8uLL));
  return (*(uint64_t (**)(uint64_t))(a53
                                            + 8
                                            * ((217 * (((a3 ^ 0xFFFFFC5B) & v57) != 16)) ^ a3 ^ 0xD9)))(v57);
}

void sub_1003BD764()
{
  JUMPOUT(0x1003BD6ECLL);
}

uint64_t sub_1003BD76C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8
                                                      * (int)(((((a1 == a4) ^ (v23 + 80)) & 1)
                                                             * ((v23 + 890670664) & 0xCAE975FD ^ 0x59B)) ^ v23))
                                          - 12))(a23);
}

uint64_t sub_1003BD7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = ((((a8 - 1141) | 0x11) ^ 0x199) & v8) == ((a8 - 1141) ^ 0x180);
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 | (8 * v10)) ^ a8)))();
}

uint64_t sub_1003BD804@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  char v63;
  uint64_t v64;
  int8x16x4_t v66;

  *(_DWORD *)(v60 - 136) = v57;
  *(_QWORD *)(v60 - 128) = v61 - 7;
  *(_DWORD *)(v60 - 140) = v57 & 0xFFFFFFF8;
  *(_DWORD *)(v60 - 132) = -(v57 & 0xFFFFFFF8);
  v62 = -8 - a2;
  v63 = a4 + v59 + v58;
  v64 = (a4 + v59 + a1 + v62 + 8);
  v66.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v59 + (_BYTE)a1 + (_BYTE)v62 + 8) & 0xF;
  v66.val[0].i64[1] = (v63 - 78 + (_BYTE)v62 + 8) & 0xF;
  v66.val[1].i64[0] = (v63 - 79 + (_BYTE)v62 + 8) & 0xF;
  v66.val[1].i64[1] = (v63 - 80 + (_BYTE)v62 + 8) & 0xF;
  v66.val[2].i64[0] = (v63 + (_BYTE)v62 + (a3 ^ 0x3E) + 8) & 0xF;
  v66.val[2].i64[1] = (v63 - 82 + (_BYTE)v62 + 8) & 0xF;
  v66.val[3].i64[0] = (v63 - 83 + (_BYTE)v62 + 8) & 0xF;
  v66.val[3].i64[1] = (v63 - 84 + (_BYTE)v62 + 8) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v60 - 128) + v64) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v55 + (v64 & 0xF) - 7), *(int8x8_t *)(v53 - 7 + v64)), veor_s8(*(int8x8_t *)((v64 & 0xF) + v56 - 6), *(int8x8_t *)(v54 + (v64 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v66, (int8x16_t)xmmword_101BA0580), (int8x8_t)0x8787878787878787)));
  return (*(uint64_t (**)(__n128))(a53 + 8 * ((1414 * (*(_DWORD *)(v60 - 132) == v62)) ^ a3)))((__n128)xmmword_101BA0580);
}

void sub_1003BD95C()
{
  JUMPOUT(0x1003BD864);
}

uint64_t sub_1003BD964(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((765
                                                        * (((*(_DWORD *)(v24 - 136) == *(_DWORD *)(v24 - 140)) ^ (a2 - 114)) & 1)) ^ a2))
                                          - 12))(a23);
}

uint64_t sub_1003BD9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v14 = (a7 + 1589662710) & 0xA13FA9FF;
  *(_BYTE *)(v13 + (v14 ^ 0x8C7B9A63) + a6) = *(_BYTE *)(v10 + (((v14 ^ 0x8C7B9A63) + a6) & 0xFLL)) ^ *(_BYTE *)(v7 + (v14 ^ 0x8C7B9A63) + a6) ^ *(_BYTE *)(((((a7 - 10) ^ 0x63) + (_BYTE)a6) & 0xF) + v11 + 1) ^ *(_BYTE *)(v9 + ((((a7 - 10) ^ 0x63) + (_BYTE)a6) & 0xF)) ^ (-121 * (((v14 ^ 0x63) + a6) & 0xF));
  return (*(uint64_t (**)(void))(v12 + 8 * ((973 * (a6 - 1 != v8)) ^ (a7 + 497))))();
}

uint64_t sub_1003BDA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  int v54;

  v52 = *(_QWORD *)(a1 + 24);
  *(int8x16_t *)(v50 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 16) - 0x6AF2A8617E594F5), (int8x16_t)xmmword_101BA0590);
  if (v51)
    v53 = v52 == 0x6F16120776D4F6DCLL;
  else
    v53 = 1;
  v54 = v53;
  LODWORD(a24) = 2 * v49;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * (int)(((((a5 ^ 0x4C7 ^ v54) & 1) == 0) * ((a5 - 11) ^ 0x54D)) ^ a5)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1003BDACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  int v50;
  _BOOL4 v52;

  v52 = (((a24 & 0xF6) + (v50 ^ 0x7Bu) + 5) & 0xF) != 0
     || (a24 & 0x76FDCEF6) + (v50 ^ 0xBB7EE77B) == -1149311109;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * (((v48 ^ 0x1FF) * v52) | v48)) - ((v48 + 836) ^ 0x53CLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1003BDB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  uint64_t v57;

  return ((uint64_t (*)(void))(*(_QWORD *)(v57
                                        + 8
                                        * ((148
                                          * (((2 * (a23 - (a25 & 0xE9F5A82A) + (a57 ^ 0x8ABFADEE))) & 0xE76FE9FE ^ 0xE165A82A)
                                           + (a57 ^ 0x874D25D2 ^ (a23 - (a25 & 0xE9F5A82A) + (a57 ^ 0x8ABFADEE)))
                                           - 1627598849 == 313836798)) ^ a57))
                            - 8))();
}

uint64_t sub_1003BDBE4(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((1492 * (a1 + v2 - 1941435647 >= (v1 ^ 0x729u) - 521)) ^ v1 ^ 0x729)))();
}

uint64_t sub_1003BDC4C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((58 * (((((a3 - 520) | 0x400) - 1049) & v3) == 1941435648)) ^ a3)))();
}

uint64_t sub_1003BDC84(int a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v23;

  v9 = (a1 + v6 + a2);
  v10 = v8 + v9 + ((183 * (a3 ^ 0x216) + 1714579224) & 0x99CD97EF ^ 0x408);
  v11 = (a1 + v6) & 0xF;
  v12 = v11 - v9;
  v13 = v5 + v12;
  ++v11;
  v14 = v5 + v11;
  v15 = v4 + v12;
  v16 = v4 + v11;
  v17 = v3 + v12;
  v18 = v3 + v11;
  v20 = v14 > v8 && v13 < v10;
  if (v16 > v8 && v15 < v10)
    v20 = 1;
  v23 = v18 > v8 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1432 * (v23 ^ 1)) ^ a3)))();
}

uint64_t sub_1003BDD28(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((30
                                                                         * (((v3 < 0x10) ^ (v2 - 18)) & 1)) | v2))
                                                           - ((v2 - 745) | 5u)
                                                           + 537))(a1, a2, 0);
}

uint64_t sub_1003BDD70(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  int8x16_t v65;
  int8x16_t v66;
  uint64_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int8x16x4_t v72;
  int8x16x4_t v73;

  v72.val[1].i64[0] = ((_BYTE)v60 - 1) & 0xF;
  v72.val[1].i64[1] = ((_BYTE)v60 + 14) & 0xF;
  v72.val[2].i64[0] = ((_BYTE)v60 + 13) & 0xF;
  v72.val[2].i64[1] = ((_BYTE)v60 + 12) & 0xF;
  v72.val[3].i64[0] = ((_BYTE)v60 + 11) & 0xF;
  v72.val[3].i64[1] = ((_BYTE)v60 + 10) & 0xF;
  v73.val[0].i64[0] = ((_BYTE)v60 + 9) & 0xF;
  v73.val[0].i64[1] = ((_BYTE)v60 + 8) & 0xF;
  v73.val[1].i64[0] = ((_BYTE)v60 + 7) & 0xF;
  v73.val[1].i64[1] = ((_BYTE)v60 + 6) & 0xF;
  v73.val[2].i64[0] = ((_BYTE)v60 + 5) & 0xF;
  v73.val[2].i64[1] = ((_BYTE)v60 + 4) & 0xF;
  v73.val[3].i64[0] = (v60 + 3) & 0xF;
  v73.val[3].i64[1] = (v60 + 2) & 0xF;
  v65.i64[0] = 0x505050505050505;
  v65.i64[1] = 0x505050505050505;
  v66.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v66.i64[1] = 0xC1C1C1C1C1C1C1C1;
  v67 = a2 + v63 + a1 - 1292 + (v62 & 0xA52A13FF ^ 0x6E3);
  v72.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)v63 + (_BYTE)a1 - 12 + (v62 ^ 0xE3)) & 0xF;
  v72.val[0].i64[1] = v60 & 0xF;
  v68.i64[0] = vqtbl4q_s8(v72, (int8x16_t)xmmword_101BA0570).u64[0];
  v68.i64[1] = vqtbl4q_s8(v73, (int8x16_t)xmmword_101BA0570).u64[0];
  v69 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v64 - 15 + v67), *(int8x16_t *)(v59 + (v67 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v58 + (v67 & 0xF) - 15), *(int8x16_t *)(v57 + (v67 & 0xF) - 15))));
  v70 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v69, v69, 8uLL), v66), vmulq_s8(v68, v65)));
  *(int8x16_t *)(v64 - 15 + v67) = vextq_s8(v70, v70, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(a57 + 8 * (int)((1662 * ((v61 & 0xFFFFFFF0) == 16)) ^ v62 & 0xA52A13FF))
                            - 8))();
}

void sub_1003BDEE0()
{
  JUMPOUT(0x1003BDE60);
}

uint64_t sub_1003BDEEC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  char *v127;
  int v128;
  uint64_t v129;
  int v130;
  char *v131;
  unsigned int v132;
  char *v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  unsigned int v182;
  unsigned __int8 *v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  int v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  int v199;
  int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  uint64_t v206;
  unsigned int v207;
  int v208;
  char *v209;
  unsigned int v210;
  char *v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  char *v215;
  int v216;
  int v217;
  unint64_t v218;
  char *v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  int v319;
  unsigned int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  unsigned int v327;
  char *v328;
  char *v329;
  int v330;
  int v331;
  uint64_t v332;
  char *v333;
  int v334;
  int v335;
  char *v336;
  int v337;
  int v338;
  uint64_t v339;
  int v340;
  char *v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  unsigned int v353;
  uint64_t v354;
  int v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  uint64_t v359;
  int v360;
  unsigned int v361;
  uint64_t v362;
  unsigned int v363;
  uint64_t v364;
  int v365;
  int v366;
  uint64_t v367;
  int v368;
  int v369;
  __int16 v370;
  uint64_t v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  int v376;
  uint64_t v377;
  int v378;
  int v379;
  unsigned int v380;
  int v381;
  uint64_t v382;
  unsigned __int8 v383;
  int v384;
  int v385;
  __int16 v386;
  int v387;
  uint64_t v388;
  int v389;
  int v390;
  int v391;
  int v392;
  uint64_t v393;
  int v394;
  unsigned int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  uint64_t v400;
  __int16 v401;
  int v402;
  unsigned int v403;
  int v404;
  uint64_t v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  int v410;
  uint64_t v411;
  int v412;
  int v413;
  int v414;
  int v415;
  uint64_t v416;
  unsigned int v417;
  int v418;
  int v419;
  int v420;
  unsigned int v421;
  uint64_t v422;
  unsigned int v423;
  int v424;
  int v425;
  int v426;
  uint64_t v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  uint64_t v433;
  int v434;
  int v435;
  int v436;
  int v437;
  uint64_t v438;
  int v439;
  int v440;
  unsigned int v441;
  int v442;
  uint64_t v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  uint64_t v448;
  int v449;
  int v450;
  int v451;
  uint64_t v452;
  unsigned int v453;
  int v454;
  unsigned int v455;
  uint64_t v456;
  int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  uint64_t v461;
  int v462;
  int v463;
  int v464;
  uint64_t v465;
  int v466;
  int v467;
  unsigned int v468;
  uint64_t v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  int v473;
  uint64_t v474;
  int v475;
  int v476;
  int v477;
  int v478;
  uint64_t v479;
  int v480;
  int v481;
  unsigned int v482;
  char *v483;
  int v484;
  char *v485;
  int v486;
  char *v487;
  int v488;
  char *v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  int v508;
  int v509;
  int v510;
  unsigned int v511;
  int v512;

  v55 = v50 ^ 0x17B;
  v56 = ((v50 ^ 0x17B) + 842774236) & 0xCDC44C9D;
  *(_DWORD *)(v54 - 128) = v56;
  v57 = *(_QWORD *)(v53 + 8 * (v50 ^ 0x137)) - 4;
  v58 = *(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6DALL) ^ 0xD7));
  *(_DWORD *)(v54 - 200) = a1;
  v59 = (v58 ^ 0xCE) << 8;
  v60 = *(_QWORD *)(v53 + 8 * (v55 + 56));
  v61 = *(_QWORD *)(v53 + 8 * (v55 ^ 0xA1)) - 8;
  HIDWORD(v63) = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6CFLL) ^ 0x49));
  LODWORD(v63) = (HIDWORD(v63) ^ 0xD0) << 24;
  v62 = v63 >> 26;
  v64 = v59 | ((*(unsigned __int8 *)(v60 + (*v52 ^ 0xB1)) ^ (v56 + 23)) << 24);
  v65 = *(_QWORD *)(v53 + 8 * (v55 - 16)) - 12;
  v66 = *(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D0) ^ 0xB8));
  HIDWORD(v63) = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D3) ^ 0x6BLL));
  LODWORD(v63) = (HIDWORD(v63) ^ 0xD0) << 24;
  LOBYTE(v59) = *(_BYTE *)(v57 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6CELL) ^ 0x2ELL));
  v67 = ((v63 >> 26) ^ 0x53) << 16;
  HIDWORD(v63) = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6DBLL) ^ 0x47));
  LODWORD(v63) = (HIDWORD(v63) ^ 0xD0) << 24;
  v68 = v64 & 0xFF00FF00 | (*(_BYTE *)(v65 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D9) ^ 0xECLL))
                                           - 73) ^ 9 | (((v63 >> 26) ^ 0x1E) << 16);
  v69 = v67 | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D2) ^ 0x77)) ^ 1) << 8);
  v70 = ((v62 ^ 0xFB) << 16) | ((v66 ^ 0x98) << 24) | ((v59 ^ 0xB) << 8);
  HIDWORD(v63) = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D7) ^ 0xCBLL));
  LODWORD(v63) = (HIDWORD(v63) ^ 0xD0) << 24;
  LODWORD(v61) = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6CDLL) ^ 0x36));
  LOBYTE(v56) = *(_BYTE *)(v65 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D1) ^ 0xB5));
  v71 = ((*(_BYTE *)(v65 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D5) ^ 0xA9)) - 73) | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D6) ^ 0x30)) ^ 0xFB) << 8)) & 0xFF00FFFF | (((v63 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D8) ^ 0x35)) ^ 0xFFFFFFEF) << 24);
  v72 = v69 | ((*(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v51 - 0x6F16120776D4F6D4) ^ 0xBFLL)) ^ 0xF6) << 24);
  v73 = *(_QWORD *)(v53 + 8 * (v55 ^ 0x17));
  v74 = *(_QWORD *)(v53 + 8 * (v55 ^ 0x87)) - 12;
  v75 = *(_DWORD *)(v74 + 4 * (v62 ^ 0x61u)) ^ *(_DWORD *)(v73 + 4 * ((v61 - 73) ^ 0xFDu));
  v76 = v66 ^ 0xDu;
  v77 = *(_QWORD *)(v53 + 8 * (v55 + 76)) - 4;
  v78 = ((v75 ^ 0x3C6D31A4) - 2087995964 - 2 * ((v75 ^ 0x3C6D31A4) & 0x38BB5DF ^ v75 & 0x1B)) ^ *(_DWORD *)(v77 + 4 * v76);
  LODWORD(v76) = v78 - ((2 * v78) & 0x4B1590FA);
  v79 = *(_QWORD *)(v53 + 8 * (v55 - 84));
  LODWORD(v493) = v68;
  HIDWORD(v492) = v70 & 0xFFFFFF00 | (v61 - 73) ^ 0x2A;
  LOBYTE(v56) = (v56 - 73) ^ 0xA8;
  v80 = v72 & 0xFFFFFF00 | v56;
  LODWORD(v492) = v71;
  v389 = *(_DWORD *)(v79 + 4 * (v59 ^ 0x33u)) ^ v68 ^ (v76 + 629852285);
  LODWORD(v57) = v389 ^ v71 ^ 0x4D;
  *(_DWORD *)(v54 - 184) = v389 ^ v71;
  *(_DWORD *)(v54 - 156) = v57 ^ v80;
  v81 = v57;
  v383 = v389 ^ v71 ^ 0x4D;
  LODWORD(v57) = v57 ^ v80 ^ (HIDWORD(v492) - 2 * (HIDWORD(v492) & 0x5187B81F ^ ((v61 - 73) ^ 0x2A) & 0x12) + 1367848973);
  v406 = BYTE1(v57);
  v414 = BYTE2(v57);
  LODWORD(v76) = *(_DWORD *)(v74 + 4 * (BYTE2(v57) ^ 0x39u)) ^ *(_DWORD *)(v79 + 4 * (BYTE1(v57) ^ 0x42u));
  v82 = v57 ^ 0xEB7095A4;
  v420 = v57;
  LODWORD(v57) = ((v76 ^ 0x5AC67AE8) - 2 * ((v76 ^ 0x5AC67AE8) & 0x43218333 ^ v76 & 2) + 1126269745) ^ *(_DWORD *)(v73 + 4 * (v57 ^ 0x24u));
  *(_DWORD *)(v54 - 208) = HIBYTE(v82);
  LODWORD(v60) = v389 ^ *(_DWORD *)(v77 + 4 * (HIBYTE(v82) ^ 0x65)) ^ (v57 - ((2 * v57) & 0x7176B88) - 2087995964);
  HIDWORD(v491) = v80;
  LODWORD(v76) = v60 ^ 0x568E88F3;
  *(_DWORD *)(v54 - 152) = v60;
  LODWORD(v57) = v60 ^ 0x568E88F3 ^ (v80 - 2 * (v80 & 0x568E88FF ^ v56 & 0xC) + 1452181747);
  LOWORD(v61) = v60 ^ 0x88F3 ^ (v80 - 2 * (v80 & 0x88FF ^ v56 & 0xC) - 30477);
  *(_DWORD *)(v54 - 132) = v57;
  v434 = ((v57 ^ v82) >> 16);
  v430 = (BYTE1(v61) ^ BYTE1(v82));
  v83 = *(_DWORD *)(v74 + 4 * (v434 ^ 0x2Eu)) ^ *(_DWORD *)(v79
                                                            + 4
                                                            * (((unsigned __int16)(v61 ^ v82) >> 8) ^ 0x9Bu)) ^ 0x5AC67AE8;
  v509 = v60 ^ 0xF3 ^ (v80 - 2 * (v80 ^ v56 & 0xC) - 13) ^ v82;
  v84 = (v83 - ((2 * v83) & 0x86430662) + 1126269745) ^ *(_DWORD *)(v73 + 4 * (v509 ^ 0xD2u));
  v85 = v84 - ((2 * v84) & 0x7176B88);
  v86 = v57 ^ v82 ^ 0x6C6427AA;
  *(_DWORD *)(v54 - 216) = (v57 ^ v82) >> 24;
  v87 = (v85 - 2087995964) ^ *(_DWORD *)(v77 + 4 * (((v57 ^ v82) >> 24) ^ 0x69));
  v88 = v87 ^ v81 ^ 0x8E0E0FA7;
  v463 = v87 ^ v81;
  v466 = v88 ^ v57;
  v89 = ((v466 ^ 0x1488024D) - 2 * ((v466 ^ 0x1488024D) & 0x18C386F3 ^ v466 & 0x10) + 415467235) ^ v86 ^ 0x9547167F;
  v472 = BYTE2(v89);
  v481 = ((unsigned __int16)(((v88 ^ v61 ^ 0x24D)
                                             - 2 * ((v88 ^ v61 ^ 0x24D) & 0x86F3 ^ (v88 ^ v61) & 0x10)
                                             - 31005) ^ v86 ^ 0x167F) >> 8);
  v90 = *(_DWORD *)(v79 + 4 * (v481 ^ 0x3Au)) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v89) ^ 0x89u));
  v477 = (((v88 ^ v61 ^ 0x4D) - 2 * ((v88 ^ v61 ^ 0x4D) & 0xF3 ^ (v88 ^ v61) & 0x10) - 29) ^ v86);
  v91 = ((v90 ^ 0x5AC67AE8) - 2 * ((v90 ^ 0x5AC67AE8) & 0x43218337 ^ v90 & 6) + 1126269745) ^ *(_DWORD *)(v73 + 4 * (v477 ^ 0xE4u));
  HIDWORD(v493) = HIBYTE(v89);
  v92 = (v91 - ((2 * v91) & 0x7176B88) - 2087995964) ^ *(_DWORD *)(v77 + 4 * (HIBYTE(v89) ^ 0x1D));
  v445 = v87 ^ v60;
  v498 = (v92 - ((2 * v92) & 0x2D306C6) - 2123791517) ^ v87 ^ v60;
  *(_DWORD *)(v54 - 248) = v498 ^ 0x81698363;
  v511 = v498 ^ 0x81698363 ^ v463;
  v93 = ((v511 ^ 0xFE25CD6D) - ((2 * (v511 ^ 0xFE25CD6D)) & 0x31870DC6) + 415467235) ^ v86;
  v94 = ((unsigned __int16)(((v511 ^ 0xCD6D) - ((2 * (v511 ^ 0xCD6D)) & 0xDC6) - 31005) ^ v86) >> 8);
  *(_DWORD *)(v54 - 224) = v94;
  v95 = *(_DWORD *)(v79 + 4 * (v94 ^ 0x6Fu));
  *(_DWORD *)(v54 - 232) = BYTE2(v93);
  v96 = v95 ^ *(_DWORD *)(v74 + 4 * (BYTE2(v93) ^ 0xA8u)) ^ 0x5AC67AE8;
  v496 = HIBYTE(v93);
  v97 = (v96 - ((2 * v96) & 0x7176B88) - 2087995964) ^ *(_DWORD *)(v77 + 4 * (HIBYTE(v93) ^ 0x85));
  v495 = v93;
  v98 = v93;
  v99 = (v97 - ((2 * v97) & 0x86430662) + 1126269745) ^ *(_DWORD *)(v73 + 4 * (v93 ^ 0x25u));
  v507 = v511 ^ v88 ^ v57;
  v100 = v507 ^ (v99 - ((2 * v99) & 0x69F2441C) + 888742414) ^ v88;
  v101 = (v99 - ((2 * v99) & 0x69F2441C) + 888742414) ^ v88;
  *(_DWORD *)(v54 - 136) = v100;
  v102 = v100 ^ 0x98D78BCB;
  v103 = v98 ^ v100 ^ 0x98D78BCB;
  v370 = v100 ^ 0x8BCB;
  *(_DWORD *)(v54 - 256) = v98;
  v408 = (v103 ^ 0x9B2B3E85) >> 24;
  v394 = ((v103 ^ 0x9B2B3E85) >> 16);
  v104 = *(_DWORD *)(v74 + 4 * (v394 ^ 0x89u)) ^ *(_DWORD *)(v77 + 4 * (v408 ^ 0x1D));
  v397 = ((unsigned __int16)(v103 ^ 0x3E85) >> 8);
  v105 = ((v104 ^ 0xFCC70751) - 2 * ((v104 ^ 0xFCC70751) & 0x258AC87F ^ v104 & 2) + 629852285) ^ *(_DWORD *)(v79 + 4 * (v397 ^ 0x3Au));
  v502 = v103;
  v106 = *(_DWORD *)(v73 + 4 * (v103 ^ 0x1Eu));
  *(_DWORD *)(v54 - 168) = v498 ^ 0x81698363 ^ v99;
  v107 = v498 ^ 0x81698363 ^ v99 ^ v106 ^ (v105 - ((2 * v105) & 0x86430662) + 1126269745);
  v108 = v107 ^ v101 ^ 0x7C166C11;
  v468 = v107;
  v109 = (v108 ^ v98) >> 24;
  *(_DWORD *)(v54 - 240) = v109;
  v475 = (v108 ^ v98);
  v110 = *(_DWORD *)(v73 + 4 * (v475 ^ 0x31u)) ^ *(_DWORD *)(v77 + 4 * (v109 ^ 0x9B));
  v111 = ((v110 ^ 0xC0AA36F5) - 2 * ((v110 ^ 0xC0AA36F5) & 0x258AC87F ^ v110 & 2) + 629852285) ^ *(_DWORD *)(v79 + 4 * (((unsigned __int16)(v108 ^ v98) >> 8) ^ 0xA0u));
  v112 = v108 ^ v98 ^ 0xBFCD0E9E;
  v457 = ((v108 ^ v98) >> 16);
  v113 = (v111 - ((2 * v111) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)(v74 + 4 * (v457 ^ 0xAu));
  v114 = (v113 - ((2 * v113) & 0x2C17120E) + 369854727) ^ v107;
  *(_DWORD *)(v54 - 140) = v114;
  LODWORD(v60) = v114 ^ 0xEB8813AD;
  v417 = v114 ^ 0xEB8813AD ^ v108;
  v401 = (v113 - ((2 * v113) & 0x120E) - 30457) ^ v107 ^ 0x13AD;
  v453 = v108 ^ v102;
  v505 = v108 ^ v102 ^ 0xBC93A834;
  v115 = ((v417 ^ 0x5A137D54) - ((2 * (v417 ^ 0x5A137D54)) & 0x1F7D7FE) + 16509951) ^ v505;
  *(_DWORD *)(v54 - 144) = v115;
  v116 = ((v115 ^ 0x648DA654) - ((2 * (v115 ^ 0x648DA654)) & 0x729D2868) + 961451060) ^ v112 ^ 0x479AB031;
  v500 = ((unsigned __int16)(((v115 ^ 0xA654) - ((2 * (v115 ^ 0xA654)) & 0x2868) - 27596) ^ v112 ^ 0xB031) >> 8);
  v486 = (((v115 ^ 0x54) - ((2 * (v115 ^ 0x54)) & 0x68) + 52) ^ v112);
  v117 = *(_DWORD *)(v73 + 4 * (v486 ^ 0xAAu)) ^ *(_DWORD *)(v79 + 4 * (v500 ^ 0x3Au));
  v118 = ((v117 ^ 0x66AB4B4C) - 2 * ((v117 ^ 0x66AB4B4C) & 0x7F4CB2B5 ^ v117 & 0x20) + 2135732885) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v116) ^ 0x89u));
  LODWORD(v61) = (v118 - ((2 * v118) & 0x7176B88) - 2087995964) ^ *(_DWORD *)(v77 + 4 * (HIBYTE(v116) ^ 0x1D));
  v119 = v61 ^ v108;
  v120 = ((v119 ^ 0xA6C48CD5) - 2 * ((v119 ^ 0xA6C48CD5) & 0x394E9436 ^ v119 & 2) + 961451060) ^ v112;
  v121 = HIBYTE(v120);
  v122 = BYTE1(v120);
  v123 = v76 ^ ((v389 ^ v71 ^ 0xBAF72DE4) - ((2 * (v389 ^ v71 ^ 0xBAF72DE4)) & 0xAD1D11E6) + 1452181747);
  LODWORD(v76) = *(_DWORD *)(v79 + 4 * (BYTE1(v120) ^ 0x6Fu)) ^ *(_DWORD *)(v77 + 4 * (HIBYTE(v120) ^ 5));
  v462 = v120;
  v124 = ((v76 ^ 0xA6017DB9) - 2 * ((v76 ^ 0xA6017DB9) & 0x43218335 ^ v76 & 4) + 1126269745) ^ *(_DWORD *)(v73 + 4 * (v120 ^ 0x25u));
  v125 = v60 ^ v61;
  LODWORD(v61) = v60 ^ v61 ^ *(_DWORD *)(v74 + 4 * (BYTE2(v120) ^ 0xA8u)) ^ (v124
                                                                             - ((2 * v124) & 0xFE99652A)
                                                                             + 2135732885);
  v126 = v115 ^ 0xE3127E54 ^ v61;
  *(_DWORD *)(v54 - 192) = v126;
  v488 = ((unsigned __int16)(v126 ^ v120) >> 8);
  v372 = (v126 ^ v120) >> 24;
  LODWORD(v77) = *(_DWORD *)(v79 + 4 * (v488 ^ 0x44u)) ^ *(_DWORD *)(v77 + 4 * (v372 ^ 0x47)) ^ 0xA6017DB9;
  v378 = (v126 ^ v120);
  LODWORD(v60) = (v77 - ((2 * v77) & 0x86430662) + 1126269745) ^ *(_DWORD *)(v73 + 4 * (v378 ^ 0xD5u));
  v365 = ((v126 ^ v120) >> 16);
  LODWORD(v60) = (v60 - ((2 * v60) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)(v74 + 4 * (v365 ^ 0xCBu));
  *(_DWORD *)(v54 - 176) = v61;
  LODWORD(v60) = (v60 - ((2 * v60) & 0xDFD18FA8) - 269957164) ^ v61;
  LODWORD(v491) = v60 ^ 0x6F1FEA7D;
  v368 = v61 ^ v119;
  HIDWORD(v490) = v61 ^ v119 ^ 0x80C600CE ^ ((v60 ^ 0x6F1FEA7D)
                                           - 1536897061
                                           + ((2 * ((v60 ^ 0x6F1FEA7D) & 0x2464CFDE ^ v60 & 4)) ^ 0xFFFFFFF7));
  LODWORD(v490) = v126 ^ 0x4018996 ^ HIDWORD(v490);
  HIDWORD(a43) = (v490 - ((2 * v490) & 0x2755D914) - 1817514870) ^ v126 ^ v120;
  v127 = (char *)*(&off_1021378F0 + v55 - 111) - 4;
  LODWORD(v60) = (((v125 ^ 0x1B9155BDu) >> 16)
                - ((2 * ((v125 ^ 0x1B9155BDu) >> 16) + 160207960) & 0x80C129E)
                - 755665029) ^ *(_DWORD *)&v127[4 * (((v125 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  v128 = ((BYTE2(v120) ^ 0x89) - ((2 * (BYTE2(v120) ^ 0x89) + 160207960) & 0x80C129E) - 755665029) ^ *(_DWORD *)&v127[4 * (BYTE2(v120) ^ 0xA4)];
  v129 = (uint64_t)*(&off_1021378F0 + (v55 ^ 0x5E));
  v130 = (v60 - ((2 * v60) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v125) ^ 0x47u));
  v484 = v55;
  v131 = (char *)*(&off_1021378F0 + v55 + 37) - 12;
  v132 = (v128 - ((2 * v128) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4 * (v121 ^ 0xCC)];
  v133 = (char *)*(&off_1021378F0 + v55 - 64) - 8;
  LODWORD(v76) = *(_DWORD *)&v133[4
                                * (((-(v417 ^ 0x54) - 1) ^ v505) ^ 0x54 ^ v119 ^ 0x53)];
  v361 = v115 ^ 0xE3127E54 ^ v119;
  LODWORD(v60) = *(_DWORD *)&v127[4 * (BYTE2(v361) ^ 0xAA)] ^ *(_DWORD *)&v131[4 * (HIBYTE(v361) ^ 0x3E)] ^ ((BYTE2(v361) ^ 0x87) - 755665028 + ((2 * (BYTE2(v361) ^ 0x87) + 88) & 0x29E ^ 0xF7F3EFFF)) ^ (181304767 * v76 - ((362609534 * v76 + 1294299612) & 0xD8DCA4D0) + 318835542);
  LODWORD(v74) = *(_DWORD *)&v133[4 * (v119 ^ 0x74)];
  LODWORD(v74) = (181304767 * v74 - ((362609534 * v74 + 1294299612) & 0xA8BA898C) - 84935244) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v119) ^ 0x5Au));
  v480 = v74 - ((2 * v74) & 0xD8DCA4D0);
  v470 = HIBYTE(v119) ^ 0xB2;
  v439 = BYTE2(v119);
  v436 = (BYTE2(v119) ^ 0x4C) - ((2 * (BYTE2(v119) ^ 0x4C) + 160207960) & 0x80C129E);
  v441 = v122 ^ 0xB0;
  v459 = v132 - ((2 * v132) & 0xA8BA898C);
  v449 = v60 - ((2 * v60) & 0xA8BA898C);
  v494 = (v130 - ((2 * v130) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4 * ((v125 ^ 0x1B9155BDu) >> 24)] ^ (181304767 * *(_DWORD *)&v133[4 * (v125 ^ 0x7D)] - 1500333842);
  LODWORD(v74) = *(_DWORD *)&v127[4 * (((v123 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v123 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                              - ((2
                                                                                                * (((v123 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                + 160207960) & 0x80C129E)
                                                                                              - 755665029);
  LODWORD(v79) = *(_DWORD *)(v54 - 132) ^ 0x31676F78;
  v134 = *(_DWORD *)&v127[4 * (BYTE2(v79) ^ 0x7B)] ^ ((BYTE2(v79) ^ 0x56)
                                                    - 755665028
                                                    + ((2 * (BYTE2(v79) ^ 0x56) + 88) & 0x29E ^ 0xF7F3EFFF));
  LODWORD(v79) = (v134 + 1819169384 + (~(2 * v134) | 0x27235B2F) + 1) ^ *(_DWORD *)&v131[4 * BYTE3(v79)];
  v135 = *(_DWORD *)&v127[4 * (v434 ^ 0x34)] ^ ((v434 ^ 0x19) - ((2 * (v434 ^ 0x19) + 160207960) & 0x80C129E) - 755665029);
  LODWORD(v77) = (v135 - ((2 * v135) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (v430 ^ 5u));
  v431 = v79 - ((2 * v79) & 0xA8BA898C);
  v435 = v77 - ((2 * v77) & 0xD8DCA4D0);
  LODWORD(v77) = *(_DWORD *)&v133[4 * (*(_DWORD *)(v54 - 152) ^ 0xDF)];
  LODWORD(v79) = *(_DWORD *)(v54 - 152) ^ 0x5A18571F;
  LODWORD(v77) = *(_DWORD *)&v131[4 * BYTE3(v79)] ^ ((BYTE2(v79) ^ 0xC1)
                                                   - ((2 * (BYTE2(v79) ^ 0xC1) + 160207960) & 0x80C129E)
                                                   - 755665029) ^ *(_DWORD *)&v127[4 * (BYTE2(v79) ^ 0xEC)] ^ ((~(362609534 * v77 + 1294299612) | 0x27235B2F) + 181304767 * v77 + 318835543);
  v428 = v77 - ((2 * v77) & 0xA8BA898C);
  LODWORD(v60) = *(_DWORD *)&v131[4 * ((v123 ^ 0xE9B45E6C) >> 24)] ^ (v74 - ((2 * v74) & 0xD8DCA4D0) + 1819169384);
  v373 = v123 ^ 0xAC;
  v423 = BYTE1(v123) ^ 0xB4;
  v425 = v60 - ((2 * v60) & 0xA8BA898C);
  v386 = v417 ^ 0x8EA4;
  LODWORD(v74) = v417 ^ 0x35C48CD5;
  LODWORD(v60) = *(_DWORD *)&v127[4 * (BYTE2(v116) ^ 0xDE)] ^ ((BYTE2(v116) ^ 0xF3)
                                                             - ((2 * (BYTE2(v116) ^ 0xF3) + 160207960) & 0x80C129E)
                                                             - 755665029);
  LODWORD(v77) = *(_DWORD *)&v127[4 * (((v417 ^ 0x35C48CD5) >> 16) ^ 0xFE)] ^ ((((v417 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                              - 755665028
                                                                                              + ((2
                                                                                                * (((v417 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                                + 88) & 0x29E ^ 0xF7F3EFFF));
  v136 = *(_DWORD *)&v133[4 * (((-(v417 ^ 0x54) - 1) ^ v505) ^ 0x91)];
  LODWORD(v79) = (v60 - ((2 * v60) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4 * (HIBYTE(v116) ^ 0x36)];
  LODWORD(v60) = BYTE2(*(_DWORD *)(v54 - 140));
  LODWORD(v60) = *(_DWORD *)&v127[4 * (v60 ^ 0xA4)] ^ ((v60 ^ 0x89)
                                                                   - ((2 * (v60 ^ 0x89) + 160207960) & 0x80C129E)
                                                                   - 755665029);
  v137 = (v60 - ((2 * v60) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (HIBYTE(v401) ^ 0x8Bu));
  v412 = v79 - ((2 * v79) & 0xA8BA898C);
  v418 = v137 - ((2 * v137) & 0xD8DCA4D0);
  LODWORD(v79) = *(_DWORD *)(v54 - 144) ^ 0x818DA654;
  LODWORD(v79) = *(_DWORD *)(v129 + 4 * (BYTE1(v79) ^ 0x20u)) ^ ((BYTE2(v79) ^ 0xD7)
                                                                 - ((2 * (BYTE2(v79) ^ 0xD7) + 160207960) & 0x80C129E)
                                                                 - 755665029) ^ *(_DWORD *)&v127[4 * (BYTE2(v79) ^ 0xFA)] ^ (181304767 * v136 - ((362609534 * v136 + 1294299612) & 0xA8BA898C) - 84935244);
  LODWORD(v74) = (v77 - ((2 * v77) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4 * BYTE3(v74)] ^ (181304767 * *(_DWORD *)&v133[4 * (v386 ^ 0x99)] - 1500333842);
  v363 = v401 ^ 0xA3;
  v391 = v74 - ((2 * v74) & 0xA8BA898C);
  v402 = v79 - ((2 * v79) & 0xD8DCA4D0);
  LODWORD(v74) = v406 ^ 0x28;
  v138 = *(_DWORD *)(v54 - 156);
  v374 = BYTE1(v138) ^ 0xF5;
  v380 = v389 ^ 0x2BEAE26B;
  LODWORD(v77) = *(_DWORD *)&v127[4 * (((v389 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v389 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                               - 755665028
                                                                                               + ((2
                                                                                                 * (((v389 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                 + 88) & 0x29E ^ 0xF7F3EFFF)) ^ (181304767 * *(_DWORD *)&v133[4 * (v389 ^ 0x1E)] - 1500333842);
  LODWORD(v77) = (v77 - ((2 * v77) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v389) ^ 8u));
  LODWORD(v79) = *(_DWORD *)&v127[4 * (v414 ^ 0xA7)] ^ ((v414 ^ 0x8A)
                                                      - ((2 * (v414 ^ 0x8A) + 160207960) & 0x80C129E)
                                                      - 755665029);
  v139 = *(_DWORD *)&v133[4 * (v383 ^ 0x55)];
  v415 = v77 - ((2 * v77) & 0xD8DCA4D0);
  v366 = BYTE2(v138);
  v407 = (BYTE2(v138) ^ 0xA7) - 755665028 + ((2 * (BYTE2(v138) ^ 0xA7) + 88) & 0x29E ^ 0xF7F3EFFF);
  LODWORD(v74) = (v79 - ((2 * v79) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * v74) ^ (181304767 * *(_DWORD *)&v133[4 * (v420 ^ 0x57)] - 1500333842);
  v140 = *(_DWORD *)(v54 - 184);
  v390 = v74 - ((2 * v74) & 0xD8DCA4D0);
  LODWORD(v77) = (181304767 * v139 - ((362609534 * v139 + 1294299612) & 0xD8DCA4D0) + 318835542) ^ ((BYTE2(v140) ^ 0xBA)
                                                                                                  - ((2 * (BYTE2(v140) ^ 0xBA) + 160207960) & 0x80C129E)
                                                                                                  - 755665029) ^ *(_DWORD *)&v131[4 * (HIBYTE(v140) ^ 0x2F)] ^ *(_DWORD *)&v127[4 * (BYTE2(v140) ^ 0x97)];
  v384 = v77 - ((2 * v77) & 0xA8BA898C);
  LODWORD(v77) = BYTE2(*(_DWORD *)(v54 - 136));
  LODWORD(v77) = *(_DWORD *)&v127[4 * (v77 ^ 0xB)] ^ ((v77 ^ 0x26)
                                                                  - ((2 * (v77 ^ 0x26) + 160207960) & 0x80C129E)
                                                                  - 755665029);
  LODWORD(v79) = *(_DWORD *)&v127[4 * (BYTE2(*(_DWORD *)(v54 - 168)) ^ 0x56)] ^ ((BYTE2(*(_DWORD *)(v54 - 168)) ^ 0x7B)
                                                                                                - 755665028
                                                                                                + ((2 * (BYTE2(*(_DWORD *)(v54 - 168)) ^ 0x7B)
                                                                                                  + 88) & 0x29E ^ 0xF7F3EFFF));
  LODWORD(v77) = (v77 - ((2 * v77) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (HIBYTE(v370) ^ 0x7Eu)) ^ (181304767 * *(_DWORD *)&v133[4 * (v370 ^ 0xF6)] - 1500333842);
  v141 = *(_DWORD *)&v133[4 * (v101 ^ 0xFB)];
  v142 = (181304767 * v141 - ((362609534 * v141 + 1294299612) & 0xA8BA898C) - 84935244) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v101) ^ 0xEFu));
  LODWORD(v371) = v77 - ((2 * v77) & 0xD8DCA4D0);
  LODWORD(v364) = v142 - ((2 * v142) & 0xD8DCA4D0);
  LODWORD(v77) = (v79 - ((2 * v79) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4
                                                                                * (HIBYTE(*(_DWORD *)(v54 - 168)) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v133[4 * (*(_DWORD *)(v54 - 168) ^ 0x79)] - 1500333842);
  LODWORD(v79) = *(_DWORD *)&v127[4 * (v394 ^ 0x86)] ^ ((v394 ^ 0xAB)
                                                      - 755665028
                                                      + ((2 * (v394 ^ 0xAB) + 88) & 0x29E ^ 0xF7F3EFFF));
  LODWORD(v79) = (v79 - ((2 * v79) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4 * v408];
  v395 = v397 ^ 0xEE;
  v409 = v79 - ((2 * v79) & 0xA8BA898C);
  v398 = v77 - ((2 * v77) & 0xA8BA898C);
  v360 = BYTE2(v101) ^ 0x16;
  v421 = (BYTE2(v101) ^ 0x73) - 755665028 + ((2 * (BYTE2(v101) ^ 0x73) + 88) & 0x29E ^ 0xF7F3EFFF);
  LODWORD(v60) = *(_DWORD *)&v127[4 * (v365 ^ 0x8B)] ^ ((v365 ^ 0xA6)
                                                      - ((2 * (v365 ^ 0xA6) + 160207960) & 0x80C129E)
                                                      - 755665029);
  HIDWORD(v364) = BYTE2(*(_DWORD *)(v54 - 192));
  LODWORD(v77) = v372 ^ 0x22;
  v403 = HIBYTE(v101) ^ 0xE8;
  v143 = *(_DWORD *)&v127[4 * (BYTE2(*(_DWORD *)(v54 - 176)) ^ 0xE8)] ^ ((BYTE2(*(_DWORD *)(v54 - 176)) ^ 0xC5)
                                                                                        - 755665028
                                                                                        + ((2
                                                                                          * (BYTE2(*(_DWORD *)(v54 - 176)) ^ 0xC5)
                                                                                          + 88) & 0x29E ^ 0xF7F3EFFF));
  v144 = (181304767 * *(_DWORD *)&v133[4 * (*(_DWORD *)(v54 - 176) ^ 0xCA)] - 1500333842) ^ *(_DWORD *)&v131[4 * (HIBYTE(*(_DWORD *)(v54 - 176)) ^ 0x8E)] ^ (v143 - ((2 * v143) & 0xD8DCA4D0) + 1819169384);
  v375 = v368 ^ 0x44039AAA;
  LODWORD(v79) = (181304767 * *(_DWORD *)&v133[4 * (v368 ^ 0xDB)] - 1500333842) ^ (((v368 ^ 0x44039AAAu) >> 16)
                                                                                                  - 755665028
                                                                                                  + ((2 * ((v368 ^ 0x44039AAAu) >> 16) + 88) & 0x29E ^ 0xF7F3EFFF)) ^ *(_DWORD *)&v127[4 * (((v368 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  HIDWORD(v371) = v144 - ((2 * v144) & 0xA8BA898C);
  LODWORD(v79) = (v79 - ((2 * v79) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v368) ^ 0xC0u));
  LODWORD(v60) = *(_DWORD *)&v131[4 * v77] ^ (181304767 * *(_DWORD *)&v133[4 * (v378 ^ 0xFE)] - 1500333842) ^ (v60 - ((2 * v60) & 0xD8DCA4D0) + 1819169384);
  v379 = v79 - ((2 * v79) & 0xD8DCA4D0);
  v369 = v60 - ((2 * v60) & 0xA8BA898C);
  LODWORD(v60) = *(_DWORD *)&v133[4 * (v445 ^ 0xEC)];
  v145 = *(_DWORD *)&v133[4 * (v463 ^ 0xE6)];
  LODWORD(v77) = *(_DWORD *)&v127[4 * (v472 ^ 0x32)] ^ ((v472 ^ 0x1F)
                                                      - ((2 * (v472 ^ 0x1F) + 160207960) & 0x80C129E)
                                                      - 755665029);
  LODWORD(v60) = *(_DWORD *)&v131[4 * (HIBYTE(v445) ^ 0xCA)] ^ ((BYTE2(v445) ^ 0x2F)
                                                              - 755665028
                                                              + ((2 * (BYTE2(v445) ^ 0x2F) + 88) & 0x29E ^ 0xF7F3EFFF)) ^ *(_DWORD *)&v127[4 * (BYTE2(v445) ^ 2)] ^ (181304767 * v60 - ((362609534 * v60 + 1294299612) & 0xD8DCA4D0) + 318835542);
  LODWORD(v74) = (v77 - ((2 * v77) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (v481 ^ 0x8Cu)) ^ (181304767 * *(_DWORD *)&v133[4 * (v477 ^ 0xD9)] - 1500333842);
  LODWORD(v77) = *(_DWORD *)&v131[4 * ((v463 ^ 0x49A657C7u) >> 24)] ^ ((((v463 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                     - 755665028
                                                                     + ((2
                                                                       * (((v463 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                       + 88) & 0x29E ^ 0xF7F3EFFF)) ^ *(_DWORD *)&v127[4 * (((v463 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v145 - ((362609534 * v145 + 1294299612) & 0xD8DCA4D0) + 318835542);
  v146 = *(_DWORD *)&v127[4 * (((v466 ^ 0x2A751432u) >> 16) ^ 0x2D)] ^ (((v466 ^ 0x2A751432u) >> 16)
                                                                                       - 755665028
                                                                                       + ((2
                                                                                         * ((v466 ^ 0x2A751432u) >> 16)
                                                                                         + 88) & 0x29E ^ 0xF7F3EFFF));
  v482 = HIDWORD(v493) ^ 0xAA;
  HIDWORD(v493) = (v60 - ((2 * v60) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v445) ^ 0x2Eu));
  v478 = v74 - ((2 * v74) & 0xD8DCA4D0);
  LODWORD(v60) = (v146 - ((2 * v146) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4 * ((v466 ^ 0x2A751432u) >> 24)] ^ (181304767 * *(_DWORD *)&v133[4 * (v466 ^ 0xA2)] - 1500333842);
  v446 = BYTE1(v466) ^ 0x94;
  v473 = v77 - ((2 * v77) & 0xA8BA898C);
  v467 = v60 - ((2 * v60) & 0xA8BA898C);
  LODWORD(v74) = *(_DWORD *)&v127[4 * (v457 ^ 0xC1)] ^ ((v457 ^ 0xEC)
                                                      - 755665028
                                                      + ((2 * (v457 ^ 0xEC) + 88) & 0x29E ^ 0xF7F3EFFF));
  LODWORD(v60) = (v74 - ((2 * v74) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129
                                                                           + 4
                                                                           * (((((unsigned __int16)(v108 ^ v98) >> 8) ^ 0x9A)
                                                                             - ((2 * (((v108 ^ v98) >> 8) ^ 0x86839A)) & 0x166)
                                                                             + 179) ^ 0x54)) ^ (181304767
                                                                                              * *(_DWORD *)&v133[4 * (v475 ^ 0xE2)]
                                                                                              - 1500333842);
  LODWORD(v74) = *(_DWORD *)&v133[4 * (v453 ^ 0xCB)];
  LODWORD(v74) = (181304767 * v74 - ((362609534 * v74 + 1294299612) & 0xD8DCA4D0) + 318835542) ^ *(_DWORD *)&v131[4 * (HIBYTE(v453) ^ 0xC8)];
  v476 = v60 - ((2 * v60) & 0xD8DCA4D0);
  v357 = v74 - ((2 * v74) & 0xA8BA898C);
  LODWORD(v60) = *(_DWORD *)&v127[4 * (BYTE2(v108) ^ 0x24)] ^ ((BYTE2(v108) ^ 9)
                                                             - ((2 * (BYTE2(v108) ^ 9) + 160207960) & 0x80C129E)
                                                             - 755665029);
  LODWORD(v60) = (181304767 * *(_DWORD *)&v133[4 * (v108 ^ 0x68)] - 1500333842) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v108) ^ 0x55u)) ^ (v60 - ((2 * v60) & 0xA8BA898C) + 1415398598);
  v355 = ((v468 ^ 0x231B9DB5) >> 16);
  v458 = (v355 ^ 0xC1) - 755665028 + ((2 * (v355 ^ 0xC1) + 88) & 0x29E ^ 0xF7F3EFFF);
  HIDWORD(v356) = v60 - ((2 * v60) & 0xD8DCA4D0);
  v147 = BYTE2(v453);
  v455 = (BYTE2(v453) ^ 0x6F) - 755665028 + ((2 * (BYTE2(v453) ^ 0x6F) + 88) & 0x29E ^ 0xF7F3EFFF);
  v148 = v498 ^ 0x10CB4C77;
  v353 = v496 ^ 0x7B;
  v149 = *(_DWORD *)&v133[4 * (v462 ^ 0x60)];
  v150 = *(_DWORD *)&v133[4 * (v509 ^ 0xFB)];
  v151 = *(_DWORD *)&v133[4 * (*(_DWORD *)(v54 - 132) ^ 0xB8)];
  LODWORD(v79) = *(_DWORD *)&v133[4 * (v495 ^ 0x74)];
  v152 = *(_DWORD *)&v133[4 * v373];
  v153 = *(_DWORD *)&v133[4 * v363];
  v154 = *(_DWORD *)&v133[4 * (v486 ^ 0xF0)];
  v155 = *(_DWORD *)(v54 - 156);
  LODWORD(v73) = *(_DWORD *)&v133[4 * (v155 ^ 0x57)];
  v156 = *(_DWORD *)&v133[4 * (v502 ^ 0xB8)];
  v157 = *(_DWORD *)(v54 - 192);
  v158 = *(_DWORD *)&v133[4 * (v157 ^ 0x78)];
  LODWORD(v60) = *(_DWORD *)&v133[4 * (v468 ^ 0x75)];
  v159 = *(_DWORD *)&v133[4 * (v507 ^ 0xF)];
  LODWORD(v77) = *(_DWORD *)&v133[4 * (v498 ^ 0x63 ^ v463 ^ 0x2A)];
  LODWORD(v133) = *(_DWORD *)&v133[4 * (v498 ^ 0x4E)];
  v503 = 181304767 * v150 - 1500333842;
  v497 = 181304767 * v151 - 1500333842;
  v499 = 181304767 * v152 - 1500333842;
  HIDWORD(v362) = 181304767 * v154 - 1500333842;
  v510 = 181304767 * v73 - 1500333842;
  LODWORD(v356) = 181304767 * v158 - 1500333842;
  v454 = 181304767 * v60 - 1500333842;
  v160 = 181304767 * v77 - 1500333842;
  LODWORD(a15) = 181304767 * (_DWORD)v133 - 1500333842;
  LODWORD(v77) = (181304767 * v79 - ((362609534 * v79 + 1294299612) & 0xD8DCA4D0) + 318835542) ^ *(_DWORD *)&v131[4 * v353];
  LODWORD(v60) = *(_DWORD *)&v127[4 * (BYTE2(v507) ^ 0x55)] ^ ((BYTE2(v507) ^ 0x78)
                                                             - ((2 * (BYTE2(v507) ^ 0x78) + 160207960) & 0x80C129E)
                                                             - 755665029) ^ (181304767 * v159 - 1500333842);
  LODWORD(v79) = (v60 - ((2 * v60) & 0xA8BA898C) + 1415398598) ^ *(_DWORD *)(v129 + 4 * (BYTE1(v507) ^ 0xA6u));
  LODWORD(v133) = *(_DWORD *)&v127[4 * (BYTE2(v148) ^ 0x3C)] ^ ((BYTE2(v148) ^ 0x11)
                                                              - 755665028
                                                              + ((2 * (BYTE2(v148) ^ 0x11) + 88) & 0x29E ^ 0xF7F3EFFF));
  v437 = v436 - 755665029;
  LODWORD(v359) = (HIDWORD(v364) ^ 0x8F) - ((2 * (HIDWORD(v364) ^ 0x8F) + 160207960) & 0x80C129E) - 755665029;
  LODWORD(v60) = v160 ^ ((BYTE2(v511) ^ 0x37) - ((2 * (BYTE2(v511) ^ 0x37) + 160207960) & 0x80C129E) - 755665029) ^ *(_DWORD *)&v127[4 * (BYTE2(v511) ^ 0x1A)];
  LODWORD(v74) = v77 - ((2 * v77) & 0xA8BA898C);
  LODWORD(v77) = (v60 - ((2 * v60) & 0xD8DCA4D0) + 1819169384) ^ *(_DWORD *)&v131[4 * (HIBYTE(v511) ^ 0xF9)];
  LODWORD(v354) = *(_DWORD *)&v127[4 * (v439 ^ 0x61)];
  LODWORD(v367) = *(_DWORD *)&v127[4 * (v366 ^ 0x8A)];
  v440 = *(_DWORD *)&v127[4 * (v360 ^ 0x48)];
  HIDWORD(v352) = *(_DWORD *)&v127[4 * (HIDWORD(v364) ^ 0xA2)];
  HIDWORD(v354) = *(_DWORD *)&v127[4 * (v355 ^ 0xEC)];
  HIDWORD(v359) = *(_DWORD *)&v127[4 * (v147 ^ 0x42)];
  LODWORD(v60) = v500 ^ 0x1A;
  v161 = *(_DWORD *)(v54 - 232);
  HIDWORD(v364) = *(_DWORD *)&v127[4 * (v161 ^ 0x1A)];
  LODWORD(v352) = *(_DWORD *)(v129 + 4 * v441);
  v442 = *(_DWORD *)(v129 + 4 * (BYTE1(v361) ^ 0x8Eu));
  v501 = *(_DWORD *)(v129 + 4 * (BYTE1(*(_DWORD *)(v54 - 132)) ^ 0x85u));
  *(_DWORD *)(v54 - 152) = *(_DWORD *)(v129 + 4 * (BYTE1(*(_DWORD *)(v54 - 152)) ^ 0xBDu));
  *(_DWORD *)(v54 - 232) = *(_DWORD *)(v129 + 4 * v423);
  v162 = ((*(_DWORD *)(v54 - 256) >> 15) & 0x58 ^ 0x48) + (v161 ^ 0x4C64A1B);
  LODWORD(v362) = *(_DWORD *)(v129 + 4 * v60);
  v387 = *(_DWORD *)(v129 + 4 * (HIBYTE(v386) ^ 0x14u));
  *(_DWORD *)(v54 - 256) = *(_DWORD *)(v129 + 4 * v374);
  *(_DWORD *)(v54 - 184) = *(_DWORD *)(v129 + 4 * (BYTE1(*(_DWORD *)(v54 - 184)) ^ 0xD6u));
  v424 = *(_DWORD *)(v129 + 4 * v395);
  *(_DWORD *)(v54 - 168) = *(_DWORD *)(v129 + 4 * (BYTE1(*(_DWORD *)(v54 - 168)) ^ 0xD7u));
  HIDWORD(v351) = *(_DWORD *)(v129 + 4 * (BYTE1(v157) ^ 0x76u));
  v163 = *(_DWORD *)(v129 + 4 * (BYTE1(*(_DWORD *)(v54 - 176)) ^ 0x16u));
  *(_DWORD *)(v54 - 176) = v162 - 835769008 + ((2 * v162) & 0x29E ^ 0xF7F3EFFF);
  LODWORD(v351) = *(_DWORD *)(v129 + 4 * (v488 ^ 0xBEu));
  *(_DWORD *)(v54 - 192) = *(_DWORD *)(v129 + 4 * (BYTE1(v463) ^ 0xB9u));
  v396 = *(_DWORD *)(v129 + 4 * v446);
  v447 = *(_DWORD *)(v129 + 4 * (BYTE1(v468) ^ 0x77u));
  HIDWORD(v358) = *(_DWORD *)(v129 + 4 * (BYTE1(v505) ^ 0x41u));
  *(_DWORD *)(v54 - 224) = *(_DWORD *)(v129 + 4 * (*(_DWORD *)(v54 - 224) ^ 0x84u));
  v512 = *(_DWORD *)(v129 + 4 * (BYTE1(v511) ^ 0x2Eu));
  v164 = *(_DWORD *)(v129 + 4 * (BYTE1(*(_DWORD *)(v54 - 248)) ^ 0xC8u));
  v464 = *(_DWORD *)&v131[4 * v470];
  v471 = v459 + 1415398598;
  v460 = v449 + 1415398598;
  *(_DWORD *)(v54 - 216) = *(_DWORD *)&v131[4 * (*(_DWORD *)(v54 - 216) ^ 7)];
  *(_DWORD *)(v54 - 248) = v431 + 1415398598;
  HIDWORD(a17) = v428 + 1415398598;
  v506 = v425 + 1415398598;
  v450 = *(_DWORD *)&v131[4 * (HIBYTE(*(_DWORD *)(v54 - 140)) ^ 7)];
  LODWORD(v350) = v412 + 1415398598;
  LODWORD(v349) = v391 + 1415398598;
  HIDWORD(v350) = *(_DWORD *)&v131[4 * (HIBYTE(*(_DWORD *)(v54 - 144)) ^ 0xF6)];
  v392 = *(_DWORD *)&v131[4 * (HIBYTE(v155) ^ 0xB8)];
  *(_DWORD *)(v54 - 156) = *(_DWORD *)&v131[4 * HIBYTE(v380)];
  *(_DWORD *)(v54 - 208) = *(_DWORD *)&v131[4 * (*(_DWORD *)(v54 - 208) ^ 0x4B)];
  v385 = v384 + 1415398598;
  v404 = *(_DWORD *)&v131[4 * v403];
  v429 = v409 + 1415398598;
  v432 = *(_DWORD *)&v131[4 * (HIBYTE(*(_DWORD *)(v54 - 136)) ^ 0x4C)];
  HIDWORD(v349) = v398 + 1415398598;
  v165 = HIDWORD(v371) + 1415398598;
  v166 = v369 + 1415398598;
  v426 = v473 + 1415398598;
  v413 = v467 + 1415398598;
  HIDWORD(v371) = v357 + 1415398598;
  v410 = v74 + 1415398598;
  v399 = v77 - ((2 * v77) & 0xA8BA898C) + 1415398598;
  v167 = *(_DWORD *)&v131[4 * (HIBYTE(v157) ^ 0xA6)];
  v168 = *(_DWORD *)&v131[4 * HIBYTE(v375)];
  LODWORD(v74) = v164 ^ ((_DWORD)v133 - ((2 * (_DWORD)v133) & 0xA8BA898C) + 1415398598);
  v381 = *(_DWORD *)&v131[4 * v482];
  HIDWORD(a2) = *(_DWORD *)&v131[4 * ((v468 ^ 0x231B9DB5) >> 24)];
  v451 = *(_DWORD *)&v131[4 * (*(_DWORD *)(v54 - 240) ^ 0x38)];
  v444 = *(_DWORD *)&v131[4 * ((v108 ^ 0xEEA2BFA8) >> 24)];
  HIDWORD(v367) = *(_DWORD *)&v131[4 * (HIBYTE(v507) ^ 0xBE)];
  LODWORD(v358) = *(_DWORD *)&v131[4 * HIBYTE(v148)];
  v169 = v480 + 1819169384;
  v376 = v435 + 1819169384;
  v170 = v418 + 1819169384;
  v171 = v402 + 1819169384;
  v508 = v415 + 1819169384;
  *(_DWORD *)(v54 - 240) = v371 + 1819169384;
  v172 = v379 + 1819169384;
  v419 = v478 + 1819169384;
  v173 = v476 + 1819169384;
  v174 = v79 - ((2 * v79) & 0xD8DCA4D0) + 1819169384;
  v175 = v74 - ((2 * v74) & 0xD8DCA4D0) + 1819169384;
  v176 = v494 ^ HIDWORD(v493) ^ 0x6285F181;
  v177 = v165 ^ v163 ^ v176;
  v178 = (char *)*(&off_1021378F0 + (v484 ^ 0x9D)) - 8;
  v179 = (char *)*(&off_1021378F0 + (v484 & 0x56A47065)) - 4;
  v180 = (char *)*(&off_1021378F0 + v484 - 85) - 4;
  v181 = (char *)*(&off_1021378F0 + v484 + 23) - 8;
  v182 = (v181[*(unsigned __int8 *)(v54 - 109) ^ 0x41] ^ 0xB3) & 0xFF00FFFF | (((v179[*(unsigned __int8 *)(v54 - 111) ^ 0x40] - 120) ^ 0x5A) << 16) | ((v180[*(unsigned __int8 *)(v54 - 110) ^ 0xBBLL] ^ 0x2E) << 8) | ((v178[*(unsigned __int8 *)(v54 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v54 - 112) - ((2 * *(unsigned __int8 *)(v54 - 112)) & 0xEC) + 118) ^ 0x84) << 24);
  v489 = v178;
  v483 = v181;
  v485 = v180;
  v183 = *(unsigned __int8 **)(v54 - 120);
  v184 = (v181[*(unsigned __int8 *)(v54 - 105) ^ 0xE4] ^ 0x85) & 0xFF00FFFF | ((v178[*(unsigned __int8 *)(v54 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v54 - 108) - ((2 * *(unsigned __int8 *)(v54 - 108)) & 0xEC) + 118) ^ 0xFFFFFFE1) << 24) | (((v179[*(unsigned __int8 *)(v54 - 107) ^ 0x27] - 120) ^ 0x96) << 16) | ((v180[*(unsigned __int8 *)(v54 - 106) ^ 9] ^ 0x2B) << 8);
  v487 = v179;
  v185 = (v181[*(unsigned __int8 *)(v54 - 101) ^ 0xF2] ^ 0x3C) & 0xFF00FFFF | ((v178[*(unsigned __int8 *)(v54 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v54 - 104) - ((2 * *(unsigned __int8 *)(v54 - 104)) & 0xEC) + 118) ^ 0xE0) << 24) | ((v180[*(unsigned __int8 *)(v54 - 102) ^ 0xBELL] ^ 0x8C) << 8) & 0xFF00FFFF | (((v179[*(unsigned __int8 *)(v54 - 103) ^ 0xE9] - 120) ^ 0x8A) << 16);
  v186 = v177 ^ 0x2497E332;
  if ((v177 & 0x80) != 0)
    v187 = -128;
  else
    v187 = 128;
  *(_DWORD *)(v54 - 132) = (v181[*(unsigned __int8 *)(v54 - 97) ^ 0x74] ^ 0x14 | (((v179[*(unsigned __int8 *)(v54 - 99) ^ 0xF3] ^ 2) - 120) << 16) | ((v180[*(unsigned __int8 *)(v54 - 98) ^ 0x20] ^ 0xC4) << 8) | ((v178[*(unsigned __int8 *)(v54 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v54 - 100) - ((2 * *(unsigned __int8 *)(v54 - 100)) & 0xEC) + 118) ^ 0x85) << 24)) ^ 0x28FB1854;
  *(_DWORD *)(v54 - 136) = v182 ^ 0x1B4518F5;
  *(_DWORD *)(v54 - 140) = v184 ^ 0xC0805DC1;
  *(_DWORD *)(v54 - 144) = v185 ^ 0x27210476;
  HIDWORD(v479) = v166 ^ v351;
  LODWORD(v479) = v167 ^ v359 ^ HIDWORD(v351) ^ HIDWORD(v352) ^ v356;
  HIDWORD(v474) = v172 ^ v168;
  LODWORD(v474) = (181304767 * v149 - 1500333842) ^ v352 ^ v471;
  HIDWORD(v469) = v460 ^ v442;
  LODWORD(v469) = v464 ^ v437 ^ v354 ^ v169;
  HIDWORD(v465) = v349 ^ v387;
  LODWORD(v465) = v350 ^ v362 ^ HIDWORD(v362);
  HIDWORD(v461) = v170 ^ v450 ^ (181304767 * v153 - 1500333842);
  LODWORD(v461) = v171 ^ HIDWORD(v350);
  HIDWORD(v456) = v447 ^ HIDWORD(a2) ^ v458 ^ HIDWORD(v354) ^ v454;
  LODWORD(v456) = HIDWORD(v358) ^ v455 ^ HIDWORD(v359) ^ HIDWORD(v371);
  HIDWORD(v452) = (HIDWORD(v356) + 1819169384) ^ v444;
  LODWORD(v452) = v173 ^ v451;
  HIDWORD(v448) = HIDWORD(v349) ^ *(_DWORD *)(v54 - 168);
  LODWORD(v448) = v404 ^ v421 ^ v440 ^ (v364 + 1819169384);
  HIDWORD(v443) = *(_DWORD *)(v54 - 240) ^ v432;
  LODWORD(v443) = (181304767 * v156 - 1500333842) ^ v424 ^ v429;
  HIDWORD(v438) = a15 ^ v358 ^ v175;
  LODWORD(v438) = v399 ^ v512;
  HIDWORD(v433) = v174 ^ HIDWORD(v367);
  LODWORD(v433) = *(_DWORD *)(v54 - 224) ^ *(_DWORD *)(v54 - 176) ^ HIDWORD(v364) ^ v410;
  HIDWORD(v427) = v419 ^ v381;
  LODWORD(v427) = *(_DWORD *)(v54 - 192) ^ v426;
  HIDWORD(v422) = v413 ^ v396;
  LODWORD(v422) = HIDWORD(a17) ^ *(_DWORD *)(v54 - 152);
  HIDWORD(v416) = *(_DWORD *)(v54 - 248) ^ v501 ^ v497;
  LODWORD(v416) = v499 ^ *(_DWORD *)(v54 - 232) ^ v506;
  HIDWORD(v411) = v503 ^ *(_DWORD *)(v54 - 216) ^ v376;
  LODWORD(v411) = v385 ^ *(_DWORD *)(v54 - 184);
  HIDWORD(v405) = *(_DWORD *)(v54 - 256) ^ v407 ^ v392 ^ v367 ^ v510;
  LODWORD(v405) = (v390 + 1819169384) ^ *(_DWORD *)(v54 - 208);
  HIDWORD(v400) = v508 ^ *(_DWORD *)(v54 - 156);
  LODWORD(v400) = *(_DWORD *)(v54 - 200) + 1149311109;
  HIDWORD(v393) = (v187 + v186) ^ v176;
  v188 = *(_DWORD *)(v54 - 128);
  LODWORD(v393) = v188 ^ 0x4D9;
  HIDWORD(v388) = v188 ^ 0x4AD;
  LODWORD(v388) = v188 ^ 0x47F;
  HIDWORD(v382) = v188 ^ 0x4C2;
  LODWORD(v382) = v188 ^ 0x4B6;
  HIDWORD(v377) = v188 ^ 0x49B;
  LODWORD(v377) = v188 ^ 0x41A;
  HIDWORD(a17) = v188 ^ 0x449;
  v189 = v188;
  v190 = ((v188 - 1017) | 0x528) ^ 0x535u;
  *(_QWORD *)(v54 - 176) = v190;
  v191 = v179[v183[v190] ^ 0xF3];
  *(_QWORD *)(v54 - 152) = 1;
  v192 = v183[1] ^ 0x57;
  *(_QWORD *)(v54 - 168) = 10;
  v193 = v183[10] ^ 0xB6;
  v194 = ((v487[v192] - 120) ^ 0xF6) << 16;
  *(_QWORD *)(v54 - 192) = 4;
  v195 = (v485[v193] ^ 0xA1) << 8;
  v196 = v183[4];
  v197 = v489[v196 ^ 0x9A];
  *(_QWORD *)(v54 - 232) = 7;
  LODWORD(v196) = v197 ^ (v196 - ((2 * v196) & 0xEC) + 118) ^ 0xFFFFFFCF;
  v198 = v183[7] ^ 0xD6;
  *(_QWORD *)(v54 - 224) = 2;
  LODWORD(v196) = v181[v198] ^ 0xD6 | ((_DWORD)v196 << 24);
  LODWORD(v198) = v485[v183[2]] ^ 0xB3;
  *(_QWORD *)(v54 - 200) = 3;
  v199 = v194 | ((_DWORD)v198 << 8);
  LODWORD(v198) = v181[v183[3] ^ 0x74];
  *(_DWORD *)(v54 - 156) = 1040486381;
  *(_QWORD *)(v54 - 184) = 12;
  v200 = v199 | v198 ^ 0x14;
  LODWORD(v198) = v489[v183[12] ^ 0x6ELL] ^ (v183[12] + (~(2 * v183[12]) | 0x13) + 119) ^ 0x51;
  *(_QWORD *)(v54 - 216) = 0;
  v201 = v200 | ((v489[*v183 ^ 0x15] ^ (*v183 - ((2 * *v183) & 0xEC) + 118) ^ 0xAE) << 24);
  v202 = v195 | ((v489[v183[8] ^ 0x46] ^ (v183[8] - ((2 * v183[8]) & 0xEC) + 118) ^ 0xFFFFFFE7) << 24);
  *(_QWORD *)(v54 - 208) = 14;
  v203 = v485[v183[14] ^ 0xD5] ^ 0x3B;
  *(_QWORD *)(v54 - 240) = 5;
  v204 = (((v191 ^ 2) - 120) << 16) | ((_DWORD)v198 << 24) | (v203 << 8);
  LOBYTE(v203) = v487[v183[5] ^ 0x9DLL];
  *(_QWORD *)(v54 - 256) = 11;
  v205 = v181[v183[11] ^ 0xC2] ^ 0x31 | v202;
  LOBYTE(v192) = v487[v183[9] ^ 0x3ELL] - 120;
  v206 = v183[6] ^ 0xA4;
  *(_QWORD *)(v54 - 248) = 15;
  v207 = v196 & 0xFF00FFFF | (((v203 - 120) ^ 0xF7) << 16) | ((v485[v206] ^ 0x6B) << 8);
  v208 = v483[v183[15] ^ 0x47] ^ 0x14 | v204;
  v209 = (char *)*(&off_1021378F0 + v189 - 817) - 12;
  v210 = *(_DWORD *)&v209[4 * (((unsigned __int16)(v207 ^ WORD2(v490)) >> 8) ^ 0x21)] ^ ((((unsigned __int16)(v207 ^ WORD2(v490)) >> 8) ^ 0x4C) - 1457789965 - ((2 * (((v207 ^ HIDWORD(v490)) >> 8) ^ 0xB71C4C)) & 0x1E6));
  v211 = (char *)*(&off_1021378F0 + (int)v393) - 8;
  LODWORD(v198) = v201 ^ v491 ^ 0x730032AA;
  v212 = (v210 + 1926287901 - ((2 * v210) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * ((v201 ^ v491) ^ 0xAA)];
  v213 = HIDWORD(a43) ^ v208;
  v214 = *(_DWORD *)&v209[4 * (((unsigned __int16)(WORD2(a43) ^ v208) >> 8) ^ 0xE0)] ^ ((((unsigned __int16)(WORD2(a43) ^ v208) >> 8) ^ 0x8D) - 1457789965 - ((2 * (((HIDWORD(a43) ^ v208) >> 8) ^ 0xC55A8D)) & 0x1E6));
  v504 = v205 & 0xFF00FFFF | ((v192 ^ 0xDF) << 16);
  v215 = (char *)*(&off_1021378F0 + v189 - 822) - 12;
  v216 = *(_DWORD *)&v215[4 * (((v504 ^ v490) >> 16) ^ 0x68)];
  HIDWORD(v218) = v216 ^ 0xA11;
  LODWORD(v218) = v216 ^ 0x41E92000;
  v217 = v218 >> 12;
  LODWORD(v206) = *(_DWORD *)&v215[4 * (BYTE2(v201) ^ BYTE2(v491))];
  HIDWORD(v218) = v206 ^ 0xA11;
  LODWORD(v218) = v206 ^ 0x41E92000;
  v219 = (char *)*(&off_1021378F0 + SHIDWORD(v388)) - 12;
  v220 = *(_DWORD *)&v219[4 * (((v207 ^ HIDWORD(v490)) >> 24) ^ 0xB7)] ^ (v218 >> 12);
  v221 = *(_DWORD *)&v215[4 * (BYTE2(v213) ^ 0x5A)];
  HIDWORD(v218) = v221 ^ 0xA11;
  LODWORD(v218) = v221 ^ 0x41E92000;
  v222 = (v214 - 2023942063 - ((2 * v214) & 0xEBA30A2)) ^ v220;
  LODWORD(v192) = *(_DWORD *)&v215[4 * (((v207 ^ HIDWORD(v490)) >> 16) ^ 0x1C)];
  v223 = *(_DWORD *)&v211[4 * ((v207 ^ BYTE4(v490)) ^ 0xFB)] ^ (BYTE1(v205) ^ BYTE1(v490)) ^ *(_DWORD *)&v209[4 * ((BYTE1(v205) ^ BYTE1(v490)) ^ 0x23)] ^ 0xDBCB31A0 ^ (v218 >> 12);
  HIDWORD(v218) = v192 ^ 0xA11;
  LODWORD(v218) = v192 ^ 0x41E92000;
  LODWORD(v192) = *(_DWORD *)&v219[4 * (((v504 ^ v490) >> 24) ^ 0xF6)] ^ (BYTE1(v198)
                                                                                      - 1457789965
                                                                                      - ((v198 >> 7) & 0x1E6)) ^ *(_DWORD *)&v209[4 * (BYTE1(v198) ^ 0x6D)] ^ ((v218 >> 12) - 2023942063 - ((2 * (v218 >> 12)) & 0xEBA30A2));
  v224 = HIDWORD(v479) ^ v217 ^ *(_DWORD *)&v219[4 * (HIBYTE(v213) ^ 0xC5)] ^ (v212
                                                                             - 2023942063
                                                                             - ((2 * v212) & 0xEBA30A2));
  v225 = v479 ^ *(_DWORD *)&v211[4 * (v213 ^ 0xC5)] ^ (v192 + 1926287901 - ((2 * v192) & 0xE5A1A43A));
  LODWORD(v192) = v224 ^ 0xF9388C2F;
  v226 = *(_DWORD *)&v215[4 * ((v224 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v218) = v226 ^ 0xA11;
  LODWORD(v218) = v226 ^ 0x41E92000;
  v227 = v218 >> 12;
  v228 = *(_DWORD *)&v215[4 * (BYTE2(v225) ^ 0x4B)];
  HIDWORD(v218) = v228 ^ 0xA11;
  LODWORD(v218) = v228 ^ 0x41E92000;
  v229 = v218 >> 12;
  v230 = v172 ^ v168 ^ *(_DWORD *)&v211[4 * ((v504 ^ v490) ^ 0x5F)] ^ (v222
                                                                                      + 1926287901
                                                                                      - ((2 * v222) & 0xE5A1A43A));
  v231 = *(_DWORD *)&v215[4 * (BYTE2(v230) ^ 0x66)];
  v232 = HIDWORD(v393) ^ *(_DWORD *)&v219[4 * BYTE3(v198)] ^ (v223 - 2023942063 - ((2 * v223) & 0xEBA30A2));
  HIDWORD(v218) = v231 ^ 0xA11;
  LODWORD(v218) = v231 ^ 0x41E92000;
  LODWORD(v198) = (v218 >> 12) ^ *(_DWORD *)&v209[4 * (BYTE1(v232) ^ 5)] ^ ((BYTE1(v232) ^ 0x68)
                                                                          - 1457789965
                                                                          - ((2 * ((v232 >> 8) ^ 0x42BD68)) & 0x1E6));
  v233 = (v227 + 1926287901 - ((2 * v227) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4
                                                                          * ((v172 ^ v168 ^ v211[4 * ((v504 ^ v490) ^ 0x5F)] ^ (v222 + 29 - ((2 * v222) & 0x3A))) ^ 0xB6)];
  LODWORD(v198) = (v198 + 1926287901 - ((2 * v198) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v224 ^ 0x61)];
  v234 = (((unsigned __int16)(v224 ^ 0x8C2F) >> 8) - 1457789965 - (((v224 ^ 0xF9388C2F) >> 7) & 0x1E6)) ^ 0xD678EAEF ^ *(_DWORD *)&v209[4 * (((unsigned __int16)(v224 ^ 0x8C2F) >> 8) ^ 0x6D)];
  v235 = *(_DWORD *)&v219[4 * (HIBYTE(v230) ^ 0x43)] ^ 0x254743EF;
  v236 = v234 + v235 - 2 * (v234 & v235);
  v237 = *(_DWORD *)&v215[4 * (BYTE2(v232) ^ 0xBD)];
  HIDWORD(v218) = v237 ^ 0xA11;
  LODWORD(v218) = v237 ^ 0x41E92000;
  LODWORD(v192) = *(_DWORD *)&v219[4 * BYTE3(v192)] ^ (v229 - 2023942063 - ((2 * v229) & 0xEBA30A2));
  LODWORD(v192) = (v192 + 1926287901 - ((2 * v192) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v232 ^ 0xAB)];
  v238 = v198 - 2023942063 - ((2 * v198) & 0xEBA30A2);
  LODWORD(v198) = *(_DWORD *)&v219[4 * (HIBYTE(v232) ^ 0x42)] ^ v494 ^ *(_DWORD *)&v209[4 * (BYTE1(v225) ^ 0xE0)] ^ ((BYTE1(v225) ^ 0x8D) - 1457789965 - ((2 * ((v225 >> 8) ^ 0xED4B8D)) & 0x1E6)) ^ (v233 - 2023942063 - ((2 * v233) & 0xEBA30A2));
  LOBYTE(v237) = BYTE1(v230) ^ 0x54;
  v239 = v474 ^ *(_DWORD *)&v209[4 * (BYTE1(v230) ^ 0x39)] ^ (v192 - 1457789965 - ((2 * v192) & 0x5237C7E6));
  v240 = HIDWORD(v469) ^ *(_DWORD *)&v219[4 * (HIBYTE(v225) ^ 0xED)] ^ v238;
  v241 = v469 ^ *(_DWORD *)&v211[4 * (v225 ^ 0xC6)] ^ ((v236 ^ (v218 >> 12))
                                                                      + 1926287901
                                                                      - ((2 * (v236 ^ (v218 >> 12))) & 0xE5A1A43A));
  v242 = *(_DWORD *)&v215[4 * (BYTE2(v241) ^ 0x79)];
  HIDWORD(v218) = v242 ^ 0xA11;
  LODWORD(v218) = v242 ^ 0x41E92000;
  BYTE1(v192) = BYTE1(v240) ^ 0x68;
  v243 = ((v218 >> 12) - 2023942063 - ((2 * (v218 >> 12)) & 0xEBA30A2)) ^ *(_DWORD *)&v219[4
                                                                                         * ((v240 ^ 0x2261685Eu) >> 24)];
  v244 = ((BYTE1(v241) ^ 0xD0) - 1457789965 - 2 * (((v241 >> 8) ^ 0x679D0) & 0xFB ^ (v241 >> 8) & 8)) ^ *(_DWORD *)&v209[4 * (BYTE1(v241) ^ 0xBD)];
  v245 = (v244 + 1926287901 - ((2 * v244) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v198 ^ 0x76)];
  v246 = ((BYTE1(v239) ^ 0xEC) - 1457789965 - ((2 * ((v239 >> 8) ^ 0xE5FEC)) & 0x1E6)) ^ *(_DWORD *)&v209[4 * (BYTE1(v239) ^ 0x81)];
  v247 = *(_DWORD *)&v215[4 * (BYTE2(v239) ^ 0x5F)];
  HIDWORD(v218) = v247 ^ 0xA11;
  LODWORD(v218) = v247 ^ 0x41E92000;
  v248 = v218 >> 12;
  HIDWORD(v218) = *(_DWORD *)&v211[4 * (v240 ^ 0x5E)] ^ 0x9BC7F595;
  LODWORD(v218) = HIDWORD(v218);
  v249 = (v218 >> 28) ^ __ROR4__(*(_DWORD *)&v219[4 * (HIBYTE(v241) ^ 6)] ^ 0x7462B151 ^ (v246- 2023942063- ((2 * v246) & 0xEBA30A2)), 28);
  v250 = (v248 - 2023942063 - ((2 * v248) & 0xEBA30A2)) ^ *(_DWORD *)&v219[4 * (BYTE3(v198) ^ 0xD2)];
  v251 = *(_DWORD *)&v215[4 * (BYTE2(v240) ^ 0x1B)];
  HIDWORD(v218) = v251 ^ 0xA11;
  LODWORD(v218) = v251 ^ 0x41E92000;
  v252 = v218 >> 12;
  v253 = (v250 + 1926287901 - ((2 * v250) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v241 ^ 0x4C)];
  v254 = BYTE1(v198) ^ 0xC0;
  v255 = v254 - 1457789965 - 2 * (((v198 >> 8) ^ 0xD2CCC0) & 0xFB ^ (v198 >> 8) & 8);
  LODWORD(v198) = *(_DWORD *)&v215[4 * (BYTE2(v198) ^ 0xCC)];
  HIDWORD(v218) = v198 ^ 0xA11;
  LODWORD(v218) = v198 ^ 0x41E92000;
  LOBYTE(v237) = v239 ^ v237;
  v256 = *(_DWORD *)&v219[4 * (HIBYTE(v239) ^ 0xE)];
  v257 = HIDWORD(v465) ^ (v218 >> 12) ^ __ROR4__(v249 ^ 0x78071371, 4);
  v258 = v465 ^ v256 ^ v252 ^ (v245 - 2023942063 - ((2 * v245) & 0xEBA30A2));
  v259 = BYTE1(v192);
  v260 = HIDWORD(v461) ^ *(_DWORD *)&v209[4 * (BYTE1(v192) ^ 0x6D)] ^ (v253 - 1457789965 - ((2 * v253) & 0x5237C7E6));
  LODWORD(v192) = v171 ^ HIDWORD(v350) ^ v255 ^ *(_DWORD *)&v211[4 * (v237 ^ 0xCA)] ^ *(_DWORD *)&v209[4 * (v254 ^ 0x6D)] ^ (v243 + 1926287901 - ((2 * v243) & 0xE5A1A43A));
  v261 = v259 ^ 0x4552953C ^ v260;
  v262 = *(_DWORD *)&v215[4 * BYTE2(v261)];
  HIDWORD(v218) = v262 ^ 0xA11;
  LODWORD(v218) = v262 ^ 0x41E92000;
  v263 = v218 >> 12;
  BYTE1(v198) = BYTE1(v257) ^ 0xE7;
  v264 = *(_DWORD *)&v215[4 * ((v257 ^ 0x99FEE750) >> 16)];
  HIDWORD(v218) = v264 ^ 0xA11;
  LODWORD(v218) = v264 ^ 0x41E92000;
  v265 = (v218 >> 12) + 1926287901 - ((2 * (v218 >> 12)) & 0xE5A1A43A);
  v266 = *(_DWORD *)&v215[4 * (BYTE2(v192) ^ 2)];
  HIDWORD(v218) = v266 ^ 0xA11;
  LODWORD(v218) = v266 ^ 0x41E92000;
  LODWORD(v190) = (BYTE1(v261) - 1457789965 - ((v261 >> 7) & 0x1E6)) ^ *(_DWORD *)&v211[4
                                                                                      * (v258 ^ 0x72)] ^ *(_DWORD *)&v209[4 * (BYTE1(v261) ^ 0x6D)] ^ v265;
  v267 = *(_DWORD *)&v211[4 * v261] ^ *(_DWORD *)&v219[4 * (HIBYTE(v258) ^ 0xA7)] ^ (v218 >> 12) ^ 0xF58DCA4C;
  v268 = *(_DWORD *)&v215[4 * (BYTE2(v258) ^ 0x3B)];
  HIDWORD(v218) = v268 ^ 0xA11;
  LODWORD(v218) = v268 ^ 0x41E92000;
  v269 = HIDWORD(v456) ^ ((BYTE1(v192) ^ 0xD9) - 1457789965 - ((2 * ((v192 >> 8) ^ 0x9802D9)) & 0x1E6)) ^ *(_DWORD *)&v211[4 * (v257 ^ 0x1E)] ^ *(_DWORD *)&v209[4 * (BYTE1(v192) ^ 0xB4)] ^ (v218 >> 12) ^ *(_DWORD *)&v219[4 * (HIBYTE(v260) ^ 0x61)];
  v270 = v456 ^ *(_DWORD *)&v219[4 * (BYTE3(v192) ^ 0x98)] ^ (v190 - 2023942063 - ((2 * v190) & 0xEBA30A2));
  LODWORD(v190) = v267 - 1457789965 - ((2 * v267) & 0x5237C7E6);
  v271 = HIDWORD(v452) ^ *(_DWORD *)&v211[4 * (v192 ^ 0x3D)] ^ ((BYTE1(v258) ^ 0x29)
                                                                               - 1457789965
                                                                               - ((2 * ((v258 >> 8) ^ 0xA73B29)) & 0x1E6)) ^ *(_DWORD *)&v219[4 * ((v257 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)&v209[4 * (BYTE1(v258) ^ 0x44)];
  LODWORD(v192) = *(_DWORD *)&v215[4 * (BYTE2(v269) ^ 0x58)];
  HIDWORD(v218) = v192 ^ 0xA11;
  LODWORD(v218) = v192 ^ 0x41E92000;
  v272 = v218 >> 12;
  v273 = v271 ^ v263;
  LODWORD(v192) = v452 ^ *(_DWORD *)&v209[4 * (BYTE1(v198) ^ 0x6D)] ^ v190;
  LODWORD(v190) = *(_DWORD *)&v215[4 * (((v271 ^ v263) >> 16) ^ 0x65)];
  HIDWORD(v218) = v190 ^ 0xA11;
  LODWORD(v218) = v190 ^ 0x41E92000;
  v274 = ((unsigned __int16)(v271 ^ v263) >> 8) ^ 0x35;
  v275 = v274 - 1457789965 - ((2 * ((v273 >> 8) ^ 0x206535)) & 0x1E6);
  v269 ^= 0x5B224442u;
  LODWORD(v190) = *(_DWORD *)&v211[4 * ((v192 ^ BYTE1(v198)) ^ 0x41)] ^ (BYTE1(v269)
                                                                                        - 1457789965
                                                                                        - ((v269 >> 7) & 0x1E6)) ^ *(_DWORD *)&v209[4 * (BYTE1(v269) ^ 0x6D)] ^ ((v218 >> 12) + 1926287901 - ((2 * (v218 >> 12)) & 0xE5A1A43A));
  v276 = *(_DWORD *)&v215[4 * (BYTE2(v192) ^ 0x81)];
  HIDWORD(v218) = v276 ^ 0xA11;
  LODWORD(v218) = v276 ^ 0x41E92000;
  v277 = ((v218 >> 12) - 2023942063 - ((2 * (v218 >> 12)) & 0xEBA30A2)) ^ *(_DWORD *)&v219[4 * HIBYTE(v269)];
  v278 = (v277 + 1926287901 - ((2 * v277) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v273 ^ 0x49)];
  v279 = *(_DWORD *)&v215[4 * (BYTE2(v270) ^ 0xC6)];
  LODWORD(v198) = ((BYTE1(v192) ^ 0xA0)
                 - 1457789965
                 - 2 * (((v192 >> 8) ^ 0x6881A0) & 0xF7 ^ (v192 >> 8) & 4)) ^ (v272 + 1926287901 - ((2 * v272) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v270 ^ 0xFC)] ^ *(_DWORD *)&v209[4 * (BYTE1(v192) ^ 0xCD)];
  LODWORD(v218) = __ROR4__((v279 >> 12) ^ 0x269C3B0, 17) ^ 0xEE910136;
  HIDWORD(v218) = v218;
  v280 = v198 - 2023942063 - ((2 * v198) & 0xEBA30A2);
  LODWORD(v198) = HIDWORD(v448) ^ *(_DWORD *)&v209[4 * (BYTE1(v270) ^ 0x75)] ^ (v278
                                                                              - 1457789965
                                                                              - ((2 * v278) & 0x5237C7E6));
  v281 = v448 ^ *(_DWORD *)&v219[4 * (HIBYTE(v273) ^ 0x20)] ^ v280;
  v282 = HIDWORD(v443) ^ *(_DWORD *)&v219[4 * (HIBYTE(v270) ^ 0x5A)] ^ (v190 - 2023942063 - ((2 * v190) & 0xEBA30A2));
  LODWORD(v192) = v443 ^ v275 ^ *(_DWORD *)&v211[4 * v269] ^ *(_DWORD *)&v219[4 * (BYTE3(v192) ^ 0x68)] ^ *(_DWORD *)&v209[4 * (v274 ^ 0x6D)] ^ ((v218 >> 15) + (v279 << 20));
  LODWORD(v190) = ((BYTE1(v198) ^ 0x9D) - 1457789965 - ((2 * ((v198 >> 8) ^ 0xC2489D)) & 0x1E6)) ^ *(_DWORD *)&v209[4 * (BYTE1(v198) ^ 0xF0)];
  v283 = *(_DWORD *)&v215[4 * (BYTE2(v281) ^ 0x8F)];
  LODWORD(v190) = *(_DWORD *)&v211[4 * (v192 ^ 0xC6)] ^ (v283 << 20) ^ (v283 >> 12) ^ 0xA1141E92 ^ (v190 + 1926287901 - ((2 * v190) & 0xE5A1A43A));
  v284 = v282 ^ 0xCFB8D782;
  v285 = *(_DWORD *)&v215[4 * ((v282 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v218) = v285 ^ 0xA11;
  LODWORD(v218) = v285 ^ 0x41E92000;
  v286 = ((v218 >> 12) + 1926287901 - ((2 * (v218 >> 12)) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4
                                                                                          * ((v198 ^ BYTE1(v270)) ^ 0x3F)];
  v287 = BYTE1(v281) ^ 0xD9;
  v288 = v287 - 1457789965 - ((2 * ((v281 >> 8) ^ 0xC78FD9)) & 0x1E6);
  v289 = *(_DWORD *)&v215[4 * (BYTE2(v198) ^ 0x48)];
  HIDWORD(v218) = v289 ^ 0xA11;
  LODWORD(v218) = v289 ^ 0x41E92000;
  v290 = ((BYTE1(v192) ^ 0xAA) - 1457789965 - ((2 * ((v192 >> 8) ^ 0x7216AA)) & 0x1E6)) ^ *(_DWORD *)&v211[4 * (v282 ^ 0xCC)] ^ *(_DWORD *)&v209[4 * (BYTE1(v192) ^ 0xC7)] ^ ((v218 >> 12) + 1926287901 - ((2 * (v218 >> 12)) & 0xE5A1A43A));
  v291 = *(_DWORD *)&v215[4 * (BYTE2(v192) ^ 0x16)];
  HIDWORD(v218) = v291 ^ 0xA11;
  LODWORD(v218) = v291 ^ 0x41E92000;
  LODWORD(v198) = HIDWORD(v438) ^ (BYTE1(v284) - 1457789965 - ((v284 >> 7) & 0x1E6)) ^ *(_DWORD *)&v211[4 * (v281 ^ 0x50)] ^ *(_DWORD *)&v209[4 * (BYTE1(v284) ^ 0x6D)] ^ *(_DWORD *)&v219[4 * (BYTE3(v198) ^ 0xC2)] ^ (v218 >> 12);
  v292 = v438 ^ *(_DWORD *)&v219[4 * (HIBYTE(v281) ^ 0xC7)] ^ (v290 - 2023942063 - ((2 * v290) & 0xEBA30A2));
  v293 = HIDWORD(v433) ^ *(_DWORD *)&v219[4 * HIBYTE(v284)] ^ (v190 - 2023942063 - ((2 * v190) & 0xEBA30A2));
  LODWORD(v192) = v433 ^ v288 ^ *(_DWORD *)&v209[4 * (v287 ^ 0x6D)] ^ *(_DWORD *)&v219[4 * (BYTE3(v192) ^ 0x72)] ^ (v286 - 2023942063 - ((2 * v286) & 0xEBA30A2));
  v294 = *(_DWORD *)&v215[4 * (BYTE2(v292) ^ 0xE6)];
  HIDWORD(v218) = v294 ^ 0xA11;
  LODWORD(v218) = v294 ^ 0x41E92000;
  v295 = v218 >> 12;
  v296 = *(_DWORD *)&v215[4 * (BYTE2(v293) ^ 0x1C)];
  HIDWORD(v218) = v296 ^ 0xA11;
  LODWORD(v218) = v296 ^ 0x41E92000;
  v297 = (((unsigned __int16)(v192 ^ 0xCCA2) >> 8)
        - 1457789965
        - (((v192 ^ 0x33C8CCA2) >> 7) & 0x1E6)) ^ *(_DWORD *)&v209[4
                                                                               * (((unsigned __int16)(v192 ^ 0xCCA2) >> 8) ^ 0x6D)];
  LODWORD(v190) = (v218 >> 12) ^ *(_DWORD *)&v209[4 * (BYTE1(v292) ^ 0xD9)] ^ ((BYTE1(v292) ^ 0xB4)
                                                                             - 1457789965
                                                                             - ((2 * ((v292 >> 8) ^ 0x4FE6B4)) & 0x1E6));
  LODWORD(v190) = (v190 + 1926287901 - ((2 * v190) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v198 ^ 0xA6)];
  v298 = (v297 + 1926287901 - ((2 * v297) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v293 ^ 0x3A)];
  v299 = *(_DWORD *)&v211[4 * (v292 ^ 0x96)];
  HIDWORD(v218) = v299 ^ 0x12D0D21D;
  LODWORD(v218) = v299 ^ 0x60000000;
  v300 = *(_DWORD *)&v211[4 * (v192 ^ 0xA2)] ^ (((unsigned __int16)(v198 ^ 0xDEA6) >> 8)
                                                               - 1457789965
                                                               - (((v198 ^ 0xECBEDEA6) >> 7) & 0x1E6)) ^ *(_DWORD *)&v209[4 * (((unsigned __int16)(v198 ^ 0xDEA6) >> 8) ^ 0x6D)] ^ (v295 + 1926287901 - ((2 * v295) & 0xE5A1A43A));
  HIDWORD(v218) = (v218 >> 29) ^ 0x6615DA09;
  LODWORD(v218) = HIDWORD(v218);
  v301 = (v218 >> 3) - 1457789965 - ((2 * (v218 >> 3)) & 0x5237C7E6);
  v302 = *(_DWORD *)&v215[4 * ((v198 ^ 0xECBEDEA6) >> 16)];
  HIDWORD(v218) = v302 ^ 0xA11;
  LODWORD(v218) = v302 ^ 0x41E92000;
  v303 = v218 >> 12;
  v304 = *(_DWORD *)&v215[4 * ((v192 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v218) = v304 ^ 0xA11;
  LODWORD(v218) = v304 ^ 0x41E92000;
  v305 = HIDWORD(v427) ^ *(_DWORD *)&v219[4 * (BYTE3(v192) ^ 0x17)] ^ (v190 - 2023942063 - ((2 * v190) & 0xEBA30A2));
  LODWORD(v190) = v301 ^ *(_DWORD *)&v209[4 * (BYTE1(v293) ^ 0xD1)] ^ (v218 >> 12);
  v306 = *(_DWORD *)&v219[4 * (BYTE3(v198) ^ 0xC8)] ^ HIDWORD(v493) ^ (v190 - 2023942063 - ((2 * v190) & 0xEBA30A2));
  LODWORD(v192) = v427 ^ *(_DWORD *)&v219[4 * (HIBYTE(v292) ^ 0x4F)] ^ v303 ^ (v298
                                                                             - 2023942063
                                                                             - ((2 * v298) & 0xEBA30A2));
  LODWORD(v198) = HIDWORD(v422) ^ *(_DWORD *)&v219[4 * (HIBYTE(v293) ^ 0x1B)] ^ (v300
                                                                               - 2023942063
                                                                               - ((2 * v300) & 0xEBA30A2));
  LODWORD(v190) = *(_DWORD *)&v215[4 * (BYTE2(v198) ^ 0x7E)];
  HIDWORD(v218) = v190 ^ 0xA11;
  LODWORD(v218) = v190 ^ 0x41E92000;
  v307 = v218 >> 12;
  LODWORD(v190) = *(_DWORD *)&v215[4 * (BYTE2(v192) ^ 1)];
  HIDWORD(v218) = v190 ^ 0xA11;
  LODWORD(v218) = v190 ^ 0x41E92000;
  LODWORD(v190) = ((v218 >> 12) + 1926287901 - ((2 * (v218 >> 12)) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v305 ^ 0xC6)];
  v308 = ((BYTE1(v305) ^ 0x71) - 1457789965 - 2 * (BYTE1(v305) ^ 0x71 ^ (v305 >> 8) & 0xC)) ^ *(_DWORD *)&v209[4 * (BYTE1(v305) ^ 0x1C)];
  v309 = (v308 - 2023942063 - ((2 * v308) & 0xEBA30A2)) ^ *(_DWORD *)&v219[4 * (BYTE3(v192) ^ 0x1F)];
  v310 = *(_DWORD *)&v215[4 * (BYTE2(v305) ^ 0x5B)];
  HIDWORD(v218) = v310 ^ 0xA11;
  LODWORD(v218) = v310 ^ 0x41E92000;
  v311 = v218 >> 12;
  v312 = BYTE1(v293) ^ 0x73F4E0AF ^ v306;
  v313 = *(_DWORD *)&v215[4 * BYTE2(v312)];
  HIDWORD(v218) = v313 ^ 0xA11;
  LODWORD(v218) = v313 ^ 0x41E92000;
  v314 = v218 >> 12;
  HIDWORD(v218) = v307 ^ ((BYTE1(v192) ^ 0x81)
                        - 1457789965
                        - 2 * (((v192 >> 8) ^ 0x1F0181) & 0xF7 ^ (v192 >> 8) & 4)) ^ 0xD678EAEF ^ *(_DWORD *)&v209[4 * (BYTE1(v192) ^ 0xEC)];
  LODWORD(v218) = HIDWORD(v218);
  LODWORD(v218) = (v218 >> 11) ^ __ROR4__(*(_DWORD *)&v219[4 * (HIBYTE(v305) ^ 0xF2)] ^ 0x254743EF, 11) ^ 0xD490839A;
  HIDWORD(v218) = v218;
  LODWORD(v192) = v422 ^ *(_DWORD *)&v211[4 * (v192 ^ 0xB8)] ^ ((BYTE1(v198) ^ 0xAA)
                                                                               - 1457789965
                                                                               - ((2
                                                                                 * ((v198 >> 8) ^ 0x967EAA)) & 0x1E6)) ^ *(_DWORD *)&v219[4 * (HIBYTE(v306) ^ 0x57)] ^ v311 ^ *(_DWORD *)&v209[4 * (BYTE1(v198) ^ 0xC7)];
  v315 = HIDWORD(v416) ^ *(_DWORD *)&v219[4 * (BYTE3(v198) ^ 0x96)] ^ (BYTE1(v312) - 1457789965 - ((v312 >> 7) & 0x1E6)) ^ *(_DWORD *)&v209[4 * (BYTE1(v312) ^ 0x6D)] ^ (v190 - 2023942063 - ((2 * v190) & 0xEBA30A2));
  LODWORD(v190) = v416 ^ *(_DWORD *)&v211[4 * (v198 ^ 0x88)] ^ v314 ^ (v309
                                                                                      + 1926287901
                                                                                      - ((2 * v309) & 0xE5A1A43A));
  v316 = HIDWORD(v411) ^ *(_DWORD *)&v211[4 * v312] ^ ((v218 >> 21)
                                                                      + 1926287901
                                                                      - ((2 * (v218 >> 21)) & 0xE5A1A43A));
  BYTE2(v307) = BYTE2(v190) ^ 0x4A;
  v317 = *(_DWORD *)&v215[4 * (BYTE2(v192) ^ 0x66)];
  HIDWORD(v218) = v317 ^ 0xA11;
  LODWORD(v218) = v317 ^ 0x41E92000;
  v318 = v218 >> 12;
  v319 = *(_DWORD *)&v209[4 * (BYTE1(v315) ^ 0x96)] ^ ((BYTE1(v315) ^ 0xFB)
                                                     - 1457789965
                                                     - ((2 * ((v315 >> 8) ^ 0x3EA2FB)) & 0x1E6));
  v320 = (v319 + 1926287901 - ((2 * v319) & 0xE5A1A43A)) ^ *(_DWORD *)&v211[4 * (v190 ^ 0x75)];
  v321 = *(_DWORD *)&v215[4 * (BYTE2(v315) ^ 0xA2)];
  HIDWORD(v218) = v321 ^ 0xA11;
  LODWORD(v218) = v321 ^ 0x41E92000;
  LODWORD(v198) = (((unsigned __int16)(v190 ^ 0xF075) >> 8)
                 - 1457789965
                 - (((v190 ^ 0xB54AF075) >> 7) & 0x1E6)) ^ (v218 >> 12) ^ *(_DWORD *)&v209[4 * (((unsigned __int16)(v190 ^ 0xF075) >> 8) ^ 0x6D)];
  LODWORD(v198) = (v198 - 2023942063 - ((2 * v198) & 0xEBA30A2)) ^ *(_DWORD *)&v219[4 * (HIBYTE(v316) ^ 0xED)];
  LODWORD(v190) = *(_DWORD *)&v219[4 * (BYTE3(v190) ^ 0x91)];
  v322 = *(_DWORD *)&v219[4 * (HIBYTE(v315) ^ 0x3E)];
  v323 = *(_DWORD *)&v219[4 * (BYTE3(v192) ^ 0x32)];
  v316 ^= 0xC9AF1D8F;
  v324 = *(_DWORD *)&v211[4 * v316];
  LODWORD(v219) = *(_DWORD *)&v211[4 * (v315 ^ 0x9A)];
  v325 = *(_DWORD *)&v211[4 * (v192 ^ 0x23)];
  LODWORD(v211) = BYTE1(v316);
  v326 = BYTE1(v316) - 1457789965 - ((v316 >> 7) & 0x1E6);
  v327 = *(_DWORD *)&v215[4 * BYTE2(v316)];
  LODWORD(v215) = *(_DWORD *)&v215[4 * BYTE2(v307)];
  HIDWORD(v218) = v215 ^ 0xA11;
  LODWORD(v218) = v215 ^ 0x41E92000;
  LODWORD(v219) = v411 ^ v219 ^ v318 ^ v190 ^ v326 ^ *(_DWORD *)&v209[4 * (v211 ^ 0x6D)];
  LODWORD(v190) = HIDWORD(v405) ^ ((BYTE1(v192) ^ 0xA)
                                 - 1457789965
                                 - ((2 * ((v192 >> 8) ^ 0x32660A)) & 0x1E6)) ^ v322 ^ *(_DWORD *)&v209[4 * (BYTE1(v192) ^ 0x67)] ^ (v218 >> 12);
  LODWORD(v198) = v405 ^ v325 ^ (v198 + 1926287901 - ((2 * v198) & 0xE5A1A43A));
  LODWORD(v192) = HIDWORD(v400) ^ v323 ^ (v327 >> 12) ^ (v327 << 20) ^ (v320 - 2023942063 - ((2 * v320) & 0xEBA30A2));
  v328 = (char *)*(&off_1021378F0 + (int)v388) - 12;
  v329 = (char *)*(&off_1021378F0 + SHIDWORD(v382)) - 12;
  LODWORD(v211) = v190 ^ v324;
  LODWORD(v190) = *(_DWORD *)&v329[4 * (BYTE1(v192) ^ 0x3D)] ^ *(_DWORD *)&v328[4 * (v198 ^ 7)];
  LODWORD(v215) = *(_DWORD *)&v329[4 * (BYTE1(v219) ^ 0xBB)];
  v330 = *(_DWORD *)&v329[4 * ((unsigned __int16)(v198 ^ 0x6F07) >> 8)];
  v331 = *(_DWORD *)&v329[4 * (BYTE1(v211) ^ 0x99)];
  v332 = *(unsigned int *)(v54 - 128);
  v333 = (char *)*(&off_1021378F0 + (int)v332 - 840) - 8;
  LODWORD(v209) = *(_DWORD *)&v333[4 * (BYTE3(v198) ^ 0xEF)];
  v334 = *(_DWORD *)&v333[4 * ((v211 >> 24) ^ 0x33)];
  v335 = *(_DWORD *)&v333[4 * (BYTE3(v192) ^ 0x3C)];
  LODWORD(v329) = *(_DWORD *)&v333[4 * ((v219 >> 24) ^ 0xC4)];
  v336 = (char *)*(&off_1021378F0 + (int)v382) - 12;
  v337 = *(_DWORD *)&v336[4 * (BYTE2(v192) ^ 0xA8)];
  v338 = *(_DWORD *)&v336[4 * (BYTE2(v198) ^ 0x2A)];
  LODWORD(v190) = ((v190 ^ 0xD3CDDCEE) + 1120374283 - 2 * ((v190 ^ 0xD3CDDCEE) & 0x42C78E1B ^ v190 & 0x10)) ^ v334;
  v339 = *(unsigned int *)&v336[4 * (BYTE2(v211) ^ 0x34)];
  LODWORD(v190) = *(_DWORD *)&v336[4 * (BYTE2(v219) ^ 6)] ^ (v190 + 124387817 + (~(2 * v190) | 0xF12BFC2D) + 1);
  v340 = *(_DWORD *)&v328[4 * (v219 ^ 0x90)];
  LODWORD(v219) = *(_DWORD *)&v328[4 * (v211 ^ 0xC5)];
  LODWORD(v211) = *(_DWORD *)&v328[4 * (v192 ^ 0x49)];
  LODWORD(v328) = *(_DWORD *)(v54 - 144) ^ HIDWORD(v491) ^ (v190 - ((2 * v190) & 0x4B470DE8) - 1516009740);
  v341 = (char *)*(&off_1021378F0 + SHIDWORD(v377)) - 4;
  *(_BYTE *)(*(_QWORD *)(v54 - 120) + 8) = v341[(v328 >> 24) ^ 0xD7] ^ 0x37;
  LODWORD(v190) = ((v330 ^ v337 ^ 0x759D9EA5)
                 + 1120374283
                 - 2 * ((v330 ^ v337 ^ 0x759D9EA5) & 0x42C78E1B ^ (v330 ^ v337) & 0x10)) ^ v329;
  LODWORD(v190) = (v190 - 1590017118 - ((2 * v190) & 0x42748744)) ^ v219;
  LODWORD(v190) = *(_DWORD *)(v54 - 140) ^ v492 ^ (v190 - ((2 * v190) & 0x8405BE86) + 1107484483);
  v342 = (char *)*(&off_1021378F0 + (int)v332 - 957) - 8;
  *(_BYTE *)(*(_QWORD *)(v54 - 120) + *(_QWORD *)(v54 - 232)) = (v342[v190 ^ 0xC7] - 111) ^ 0x5F;
  v343 = (uint64_t)*(&off_1021378F0 + (int)v377);
  LODWORD(v329) = *(unsigned __int8 *)(v343 + (BYTE1(v190) ^ 0x13));
  HIDWORD(v218) = v329 ^ 0xD;
  LODWORD(v218) = (_DWORD)v329 << 24;
  *(_BYTE *)(*(_QWORD *)(v54 - 120) + 6) = (v218 >> 30) ^ 0x40;
  LODWORD(v329) = v340 ^ 0xA650424B;
  v344 = *(_QWORD *)(v54 - 120);
  LODWORD(v329) = ((v329 ^ v338) + 1120374283 - ((2 * (v329 ^ v338)) & 0x858F1C16)) ^ v335;
  LODWORD(v329) = ((_DWORD)v329 - ((2 * (_DWORD)v329) & 0xE5EF3E98) + 1928830796) ^ v331;
  v345 = *(_DWORD *)(v54 - 136) ^ v493 ^ ((_DWORD)v329 - ((2 * (_DWORD)v329) & 0x338F34EE) - 1714972041);
  LODWORD(v329) = *(unsigned __int8 *)(v343 + BYTE1(v345));
  HIDWORD(v218) = v329 ^ 0xD;
  LODWORD(v218) = (_DWORD)v329 << 24;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 224)) = (v218 >> 30) ^ 0x7E;
  v346 = (char *)*(&off_1021378F0 + SHIDWORD(a17)) - 12;
  *(_BYTE *)(v344 + 9) = v346[BYTE2(v328) ^ 0xFBLL] ^ 0xCE;
  LODWORD(v329) = ((v209 ^ v215 ^ 0x30301147)
                 + 124387817
                 - 2
                 * ((v209 ^ v215 ^ 0x30301147) & 0x76A01F9 ^ (v209 ^ v215) & 0x10)) ^ v339;
  LODWORD(v329) = ((_DWORD)v329 - 1590017118 - ((2 * (_DWORD)v329) & 0x42748744)) ^ v211;
  LODWORD(v329) = *(_DWORD *)(v54 - 132) ^ HIDWORD(v492) ^ ((_DWORD)v329 - ((2 * (_DWORD)v329) & 0x54F334EA) - 1434871179);
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 176)) = v346[BYTE2(v329) ^ 0xB8] ^ 0x1D;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 256)) = (v342[v328 ^ 0x1BLL] - 111) ^ 0x7D;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 240)) = v346[BYTE2(v190) ^ 3] ^ 0x63;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 192)) = v341[BYTE3(v190) ^ 0x6DLL] ^ 0xCF;
  LODWORD(v190) = *(unsigned __int8 *)(v343 + (BYTE1(v328) ^ 0x92));
  HIDWORD(v218) = v190 ^ 0xD;
  LODWORD(v218) = (_DWORD)v190 << 24;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 168)) = (v218 >> 30) ^ 0xD2;
  v347 = *(_QWORD *)(v54 - 216);
  *(_BYTE *)(v344 + v347) = v341[BYTE3(v345) ^ 0x53] ^ 0x23;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 200)) = (v342[v345 ^ 0x95] - 111) ^ 0xAF;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 248)) = (v342[v329 ^ 0x64] - 111) ^ 0x27;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 184)) = v341[(v329 >> 24) ^ 0x6ELL] ^ 0xB5;
  LODWORD(v190) = *(unsigned __int8 *)(v343 + (BYTE1(v329) ^ 0x1FLL));
  HIDWORD(v218) = v190 ^ 0xD;
  LODWORD(v218) = (_DWORD)v190 << 24;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 208)) = (v218 >> 30) ^ 0x58;
  *(_BYTE *)(v344 + *(_QWORD *)(v54 - 152)) = v346[BYTE2(v345) ^ 0xC8] ^ 0x4C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a50 + 8 * ((1626 * ((((_DWORD)v347 + 1040486385 - 2 * (((_DWORD)v347 + 16) & *(_DWORD *)(v54 - 156))) ^ 0x3E048FE1u) < v400)) ^ ((int)v332 - 522))) - 4))(v332, 1105797120, v339, v345, 13, v342, 109, 1120374283, a2, v349, v350, v351, v352, v354, v356, v358, v359, v362, v364,
           v367,
           v371,
           a15,
           a16,
           a17,
           v377,
           v382,
           v388,
           v393,
           v400,
           v405,
           v411,
           v416,
           v422,
           v427,
           v433,
           v438,
           v443,
           v448,
           v452,
           v456,
           v461,
           v465,
           v469,
           v474,
           v479,
           v483,
           v485,
           v487,
           v489,
           a43,
           v490,
           v491,
           v492,
           v493);
}

void sub_1003C2620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61)
{
  uint64_t v61;

  *(_DWORD *)(v61 - 132) = a58 ^ 0x714BC159;
  *(_DWORD *)(v61 - 144) = a60 ^ 0x1EFAE75B;
  *(_DWORD *)(v61 - 136) = a61 ^ 0xEDD1538F;
  *(_DWORD *)(v61 - 140) = a59 ^ 0xBB5E405F;
  JUMPOUT(0x1003C09A0);
}

uint64_t sub_1003C2674(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 | (v4 == a3) | (32 * (v4 == a3))))
                            - (v3 - 763)
                            - (((v3 - 1284) | 0x401u) ^ 0xFFFFFFFFFFFFF9FALL)))();
}

uint64_t sub_1003C26AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(v10
                                                                              + 8
                                                                              * ((193
                                                                                * ((((v9 + 504) ^ a7) & v8) != v9 - 529)) ^ v9)))(a1, a2, a3, (v7 - a3), (v9 + 12));
}

uint64_t sub_1003C26E0(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  int v61;
  char v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  int8x16x4_t v76;

  *(_DWORD *)(v64 - 132) = v61 & 0xFFFFFFF8;
  *(_DWORD *)(v64 - 128) = v61;
  v66 = -8 - a3;
  v67 = v63 + a1;
  v68 = v62 + v63 + a1;
  v69 = v68 + 11;
  v70 = v68 + 12;
  v71 = v68 + 13;
  v72 = v68 + 14;
  v73 = v68 + 15;
  v74 = (v67 + a2 + v66 + 8);
  v76.val[0].i64[0] = ((_BYTE)v67 + (_BYTE)a2 + (_BYTE)v66 + 8) & 0xF;
  v76.val[0].i64[1] = (v60 + (_BYTE)v66 + 8) & 0xF;
  v76.val[1].i64[0] = (v73 + (_BYTE)v66 + 8) & 0xF;
  v76.val[1].i64[1] = (v72 + (_BYTE)v66 + 8) & 0xF;
  v76.val[2].i64[0] = (v71 + (_BYTE)v66 + 8) & 0xF;
  v76.val[2].i64[1] = (v70 + (_BYTE)v66 + 8) & 0xF;
  v76.val[3].i64[0] = (v69 + (_BYTE)v66 + 8) & 0xF;
  v76.val[3].i64[1] = (v60 + (_BYTE)v66 + 8 + ((a5 - 12) ^ 0xFB)) & 0xF;
  *(int8x8_t *)(v65 - 7 + v74) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v65 - 7 + v74), *(int8x8_t *)(v59 + (v74 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v58 + (v74 & 0xF) - 7), *(int8x8_t *)(v57 + (v74 & 0xF) - 7)))), (int8x8_t)0xC1C1C1C1C1C1C1C1), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v76, (int8x16_t)xmmword_101BA0580), (int8x8_t)0x505050505050505)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a57 + 8 * ((37 * (-(v61 & 0xFFFFFFF8) == v66)) ^ a5)) - 12))((__n128)xmmword_101BA0580);
}

void sub_1003C2824()
{
  JUMPOUT(0x1003C2734);
}

uint64_t sub_1003C282C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((a2 + a2 + 504 - 1503) * (*(_DWORD *)(v3 - 128) == *(_DWORD *)(v3 - 132))) ^ a2)))();
}

uint64_t sub_1003C2858(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = (a4 - 313836799);
  *(_BYTE *)(v11 + v12) ^= *(_BYTE *)(v8 + (v12 & 0xF)) ^ *(_BYTE *)(v7 + (v12 & 0xF)) ^ *(_BYTE *)(v6 + (v12 & 0xF)) ^ (5 * (v12 & 0xF)) ^ 0xC1;
  return (*(uint64_t (**)(void))(v10 + 8 * ((7 * (a4 - 1 != v9)) ^ (a6 - 479))))();
}

void sub_1003C28B8()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 2087569631)
    v1 = 1810546658;
  else
    v1 = -1810504646;
  *(_DWORD *)(v2 + 40) = v1;
}

void sub_1003C291C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1755732067 * (((a1 | 0xFD508F6) - (_DWORD)a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D);
  __asm { BR              X12 }
}

uint64_t sub_1003C2A18(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  _BOOL4 v7;
  int v8;
  int v9;
  _BOOL4 v10;

  v6 = v2 ^ 0x1A4;
  v7 = v5 > (v2 ^ 0x217A9FA9u);
  v8 = v3 + ((v6 + 92) ^ 0x3FA7162C);
  v9 = v7 ^ (v8 < -561684147);
  v10 = v8 < (int)(v5 + 1585799501);
  if (!v9)
    v7 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 8 * ((109 * v7) ^ v6)) - 12))(0x45099F22C12449, a2, (a2 + 644258774));
}

uint64_t sub_1003C2B40@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, _QWORD *a4@<X6>, unsigned int a5@<W7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL4 v21;

  v18 = (v14 + 1597298268) & 0xA0CB29FF;
  v19 = a1
      - 0x45099F22C12449
      + ((v18 + 339) ^ (v10 + 418) ^ *(_DWORD *)(v7 + 4 * v9))
      + a5 * (unint64_t)(*(_DWORD *)(*a4 + 4 * (int)(v13 + ((v18 - 92) ^ v16))) ^ v10);
  *(_DWORD *)(v7 + 4 * v9) = v19 + v10 - ((2 * v19) & 0x4D8C80EC);
  v20 = (v17 ^ HIDWORD(v19)) + (a6 & (v19 >> 31)) + v11;
  if (a2 > 0x59996429 != v12 < v8)
    v21 = a2 > 0x59996429;
  else
    v21 = v12 < a3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * (int)(v18 ^ (!v21 * v15))) - 4))(v20);
}

void sub_1003C2C1C()
{
  JUMPOUT(0x1003C2AD4);
}

uint64_t sub_1003C2C28(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1610 * (a1 != ((v1 - 387089387) & 0x171283FD) + 0x45099F22C121C8)) ^ v1))
                            - (v1 + 572)
                            + 1190))();
}

uint64_t sub_1003C2C84@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v4 = a1 - 32;
  v5 = v3 + a1 - 32 - 278289134;
  v7 = v1 - 796172963 < 1869195123 && v1 - 796172963 >= v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((229 * v7) ^ v4))
                            - ((v4 + 35)
                             + ((v4 + 13) ^ 0xFFFFFFFFFFFFFFEALL))))();
}

uint64_t sub_1003C2D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;

  v14 = a1 - 0x45099F22C12449 + ((v11 + v12 + 572 - 1194) ^ 0x26C64076u);
  *(_DWORD *)(v8 + 4 * v10) = v14 + v11 - ((2 * v14) & 0x4D8C80EC);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8 * ((((a5 ^ HIDWORD(v14)) + (a6 & (v14 >> 31)) + a7 != v13) * a8) ^ v12))
                            - 4))();
}

void sub_1003C2DC0()
{
  JUMPOUT(0x1003C2CF4);
}

uint64_t sub_1003C2DC8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  _DWORD *v5;
  int v6;
  _BOOL4 v7;
  int v8;
  _BOOL4 v9;

  v6 = *v5 + 817282092;
  v7 = v3 + 817282092 < (int)((a3 - 572) ^ 0xCF95042C);
  v8 = v7 ^ (v6 < -812317118);
  v9 = v3 + 817282092 > v6;
  if (!v8)
    v7 = v9;
  return (*(uint64_t (**)(void))(v4 + 8 * ((!v7 * (a3 - 1178)) ^ a3)))();
}

void sub_1003C2E2C()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_1003C2E50(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1003C2EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;

  a13 = 108757529
      * (((&a12 | 0x7488BE6A) - &a12 + (&a12 & 0x8B774190)) ^ 0x9414DC41)
      - 504207030;
  v16 = sub_1003FCE54(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((1687 * (a12 == v13)) ^ v14)) - 4))(v16);
}

uint64_t sub_1003C2F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  a14 = 915
      - 460628867
      * ((((2 * (&a12 ^ 0x326B2B15)) | 0xB22CC208) - (&a12 ^ 0x326B2B15) + 652844796) ^ 0xA7EBC86C);
  a12 = &STACK[0x1706FB9DE6F6FC6C];
  sub_1003D5ADC((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14
                                                                                          + 8
                                                                                          * (((a13 == 1810546658) | (8 * (a13 == 1810546658))) ^ 0x2B5u))
                                                                              - 4))(v15, v16, v17, v18, v19);
}

uint64_t sub_1003C2FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = 1178560073 * (&a12 ^ 0xBA947862);
  a14 = a11;
  a13 = v18 + 1160082353 * v15 + 359058754;
  a15 = v18 ^ 0x40C;
  sub_1003CFA7C((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17
                                                                                          + 8
                                                                                          * ((4 * (a12 == v16)) | 0x142u))
                                                                              - 12))(v19, v20, v21, v22, v23);
}

uint64_t sub_1003C3074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  int v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = ((818135048 - (&a12 | 0x30C3C008) + (&a12 | 0xCF3C3FF7)) ^ 0x83AABD8A) * v20;
  a14 = v21 - 1760105633;
  a15 = v21 + v19 - 2024873405;
  a16 = 2066553870 - v21;
  a12 = &STACK[0x5640F59D98E42E33];
  a13 = a11;
  v22 = sub_1003FD230((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((1647 * (a17 == ((v19 - 783218051) & 0x6F5 ^ (v17 - 651)))) ^ v19))
                                          - 12))(v22);
}

uint64_t sub_1003C3148()
{
  void (*v0)(unsigned int *);
  unsigned int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t *v8;
  int v9;
  unint64_t *v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t *v13;
  unint64_t *v14;

  v11 = (v4 + 66) ^ (1374699841 * ((&v11 + 1878396432 - 2 * (&v11 & 0x6FF60E10)) ^ 0x2021619));
  v13 = &STACK[0x2DEB3A05C2E48B29];
  v14 = v8;
  ((void (*)(unsigned int *))(*(_QWORD *)(v2 + 8 * (v4 - 140)) - 12))(&v11);
  v11 = (v4 - 4) ^ (1755732067
                  * (((&v11 | 0x414B933F) - &v11 + (&v11 & 0xBEB46CC0)) ^ 0x9F8D2EE4));
  v13 = v8;
  sub_1003D11E8((uint64_t)&v11);
  if ((_DWORD)v14 == ((v4 + 371) ^ v5))
    v6 = v9;
  else
    v6 = (int)v14;
  v12 = v4 + ((2 * (&v11 & 0x11E9380) - &v11 + 2128702589) ^ 0x74156252) * v3 + 938;
  v13 = v8;
  v0(&v11);
  v12 = v4 + 371 + ((((2 * &v11) | 0x72A8ABE4) - &v11 - 961828338) ^ 0x33A05BDD) * v3 + 567;
  v13 = v10;
  v0(&v11);
  return v6 ^ v1;
}

void sub_1003C32FC(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1003C333C()
{
  return 4294925273;
}

void sub_1003C33AC(uint64_t a1)
{
  int v1;

  v1 = 1178560073 * ((-2 - ((a1 | 0x20C3A6CC) + (~(_DWORD)a1 | 0xDF3C5933))) ^ 0x65A82151);
  __asm { BR              X9 }
}

_DWORD *sub_1003C3450(_DWORD *result)
{
  *result = 1885074681;
  return result;
}

void sub_1003C3800(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 24))
    v2 = *(_QWORD *)(a1 + 8) == 0x5640F59D98E42E33;
  else
    v2 = 1;
  v3 = !v2;
  v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((2 * (a1 & 0x47DE7202) - a1 - 1205760515) ^ 0x66E73026));
  __asm { BR              X8 }
}

uint64_t sub_1003C3938()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  int v6;

  STACK[0x270] = (unint64_t)&STACK[0x1A8FA111108FB796];
  *(_QWORD *)(v3 - 192) = &STACK[0x1A8FA111108FB796];
  *(_BYTE *)(v3 - 200) = (-85 * ((v3 + 56 - 2 * ((v3 + 56) & 0x14) + 20) ^ 0xE2)) ^ 0x48;
  *(_DWORD *)(v3 - 184) = 3804331 * ((v3 - 200 - 2 * ((v3 - 200) & 0x54A65C14) + 1420188692) ^ 0x2A7379E2) + v0 - 423;
  STACK[0x268] = (unint64_t)&STACK[0x946600321622ECD];
  *(_QWORD *)(v3 - 176) = &STACK[0x946600321622ECD];
  v4 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ 0x4E2)) - 4);
  STACK[0x260] = (unint64_t)v4;
  v5 = v4(v3 - 200);
  v6 = *(_DWORD *)(v3 - 180);
  LODWORD(STACK[0x48C]) = v6;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8 * ((722 * (v6 == ((v0 + 960826942) & 0xC6BAEFF0 ^ 0x6BEABD12))) ^ v0)))(v5);
}

#error "1003C419C: call analysis failed (funcsize=324)"

uint64_t sub_1003C41A0@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v4 + 52) += ((a2 + 142) | 0xB2) ^ 0x1B3;
  STACK[0x430] = v2 - 2432;
  STACK[0x530] = v2 - 2432;
  LODWORD(STACK[0x48C]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((232 * (STACK[0x4D8] == 0)) ^ a2))
                            - (a2 + 857)
                            + 967))();
}

uint64_t sub_1003C4200()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;

  v6 = 535753261 * ((v3 - 463336855 - 2 * (v3 & 0xE4620A69)) ^ 0xEE960446);
  *(_QWORD *)(v5 - 160) = STACK[0x2B0];
  *(_QWORD *)(v5 - 200) = STACK[0x238];
  v7 = LODWORD(STACK[0x234]) ^ v6;
  *(_DWORD *)(v5 - 168) = v0 - v6 - 898453161;
  *(_DWORD *)(v5 - 176) = v7;
  *(_DWORD *)(v5 - 192) = v1 - v6 + 33;
  *(_QWORD *)(v5 - 184) = STACK[0x240];
  v8 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (v1 ^ 0x1AE)) - 8))(v5 - 200);
  v9 = *(_DWORD *)(v5 - 172);
  LODWORD(STACK[0x48C]) = v9;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8 * (((v9 == 1810546658) * (((v1 - 320) ^ 0x282) + 922)) ^ v1))
                                          - 12))(v8);
}

uint64_t sub_1003C42D4()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x2F4]) = STACK[0x47C];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 ^ 0x3B9) - 299) | 0x50) - 748) * ((v1 & 0xFFFFFFFE) == 1405824188)) ^ v0 ^ 0x3B9)))();
}

uint64_t sub_1003C4320()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  STACK[0x5B0] = 0;
  v4 = 235795823 * ((v3 + 1049346070 - 2 * ((v3 - 200) & 0x3E8BC0DE)) ^ 0xAA268987);
  *(_DWORD *)(v3 - 200) = v4 ^ 0xB105AD16;
  v5 = STACK[0x278];
  *(_QWORD *)(v3 - 192) = 0x1C6D093801E6EF71;
  *(_QWORD *)(v3 - 184) = v5;
  *(_QWORD *)(v3 - 176) = STACK[0x280];
  *(_DWORD *)(v3 - 164) = v0 - v4 - 317;
  v6 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 - 1571)) - 12);
  STACK[0x288] = (unint64_t)v6;
  v7 = v6(v3 - 200);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (((*(_DWORD *)(v3 - 168) == 1810546658) * (v0 - 1635)) ^ v0))
                                          - ((92 * (v0 ^ 0x683u)) ^ 0x2E4)))(v7);
}

uint64_t sub_1003C43F8()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  _BOOL4 v3;

  STACK[0x250] = v1;
  v3 = (((v2 - 656) | 0x2A0) ^ 0xE284C0B9) + LODWORD(STACK[0x56C]) > 0xFFFFF7FE;
  return (*(uint64_t (**)(void))(v0 + 8 * (v3 | (8 * v3) | v2)))();
}

uint64_t sub_1003C4438(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;

  v5 = v4 - ((((v2 + 283) ^ 0xC509909F) + 2 * v4) & 0x81DBE93C) + 594722536;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                 + 8
                                                                                 * ((27
                                                                                   * (((2 * v5) & 0xFFDEFEFE ^ 0x81DAE83C)
                                                                                    + (v5 ^ 0x3F028BE1)
                                                                                    - 1744834572 == 401567603)) ^ (v2 - 485)))
                                                                     - 8))(a1, a2, 2484462651, 401567603);
}

uint64_t sub_1003C4C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((29 * (v8 + v6 - 2146402175 >= ((v7 - 507) | 0xE0u) - 744)) ^ v7))
                                                                                                - 4))(a1, a2, a3, a4, 3893399692, a6, 67);
}

uint64_t sub_1003C4CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((78
                                          * ((((v2 + 341) ^ (v1 - a1 < ((47 * (v2 ^ 0x41Bu)) ^ 0x2D0uLL))) & 1) == 0)) ^ v2))
                            - 4))();
}

uint64_t sub_1003C4D20()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((((v0 < 0x20) ^ (v1 + 23)) & 1) * (v1 ^ 0x5C9)) ^ v1))
                            - 8))();
}

uint64_t sub_1003C4D54@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v7 = v3 + ((((v5 ^ 0x790) + 401) | 0x10) ^ (a1 + 913));
  v8 = *(_OWORD *)(v2 + v7 - 15);
  v9 = *(_OWORD *)(v2 + v7 - 31);
  v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1043 * ((v4 & 0xFFFFFFE0) == 32)) ^ ((v5 ^ 0x790) - 370))) - 4))();
}

void sub_1003C4DB8()
{
  JUMPOUT(0x1003C4D6CLL);
}

uint64_t sub_1003C4DC4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (53 * (v0 == v1))))
                            - (((v2 + 1951994728) & 0x8BA6EAF6)
                             + 624)
                            + 1372))();
}

uint64_t sub_1003C4E04()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 | (30 * ((v0 & 0x18) == 0))))
                            - ((v1 - 624) ^ 0x2F8)))();
}

uint64_t sub_1003C4E3C@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_QWORD *)(a2 - 7 + (v3 + a1 - v5)) = *(_QWORD *)(v2 - 7 + (v3 + a1 - v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((890 * (((v6 + 660) ^ 0x403) + v5 == (v4 & 0xFFFFFFF8))) ^ v6))
                            - 8))();
}

uint64_t sub_1003C4E88(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + (a1 - v6)) = *(_QWORD *)(v9 + (a1 - v6));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a2 + v6 == v8) * a6) ^ v7)) - 8))();
}

uint64_t sub_1003C4EB4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (v4 ^ (175 * (v2 == v3)))) - 4))(a1, a2, 2484462651);
}

uint64_t sub_1003C4EE4@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a4 + (v5 + a2)) = *(_BYTE *)(v4 + (v5 + a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 - 1 == a1) * a3) | (v6 + 708))) - 8))();
}

uint64_t sub_1003C4F14()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1512 * (STACK[0x5B0] != 0)) ^ (v0 + 97))) - 8);
  STACK[0x2C8] = (unint64_t)*(&off_1021378F0 + (v0 ^ 0x2EA));
  return v2();
}

uint64_t sub_1003C4F64()
{
  uint64_t (*v0)(void);
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v5 = v0();
  LODWORD(STACK[0x4EC]) = v2;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((v1 - 1008624437) & 0x3C1E60FF ^ 0x3B6) * v4) ^ (v1 + 731))))(v5);
}

uint64_t sub_1003C4FB0()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  LODWORD(STACK[0x538]) = 2;
  STACK[0x578] = 0;
  LODWORD(STACK[0x60C]) = 0;
  LODWORD(STACK[0x49C]) = 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((36 * ((v0 + 173529666) & 0x75A827F2 ^ 0x2F8)) ^ 0x14B) * ((v1 >> 1) & 1)) ^ v0)))();
}

uint64_t sub_1003C5014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t (*v66)(__n128);
  unsigned int v68;
  uint64_t v69;

  *(_DWORD *)(v54 + 360) = 1405824189;
  v59 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, _QWORD, uint64_t, unint64_t *, unint64_t *))(v57 + 8 * (v50 ^ 0x2B9u)))(v53, 2, &STACK[0x538], STACK[0x5F0], (v55 - 494613942), v51, &STACK[0x578], &STACK[0x60C]);
  v61 = ((2 * v59) & 0x4BBF4AAE) + (v59 ^ 0x25DFA557);
  if (v61 == 903849306)
  {
    LODWORD(STACK[0x4EC]) = -1810504486;
    return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52
                                                                                            + 8
                                                                                            * (((STACK[0x578] != 0)
                                                                                              * ((LODWORD(STACK[0x43C])
                                                                                                + 371) ^ 0x7DA ^ ((LODWORD(STACK[0x43C]) - 746) | 0x100))) ^ (LODWORD(STACK[0x43C]) + 371)))
                                                                                - 4))(v59, STACK[0x578], 2484462651, v60);
  }
  else
  {
    v62 = STACK[0x43C];
    if (v61 == 635413847)
    {
      STACK[0x3B8] = STACK[0x578];
      LODWORD(STACK[0x390]) = STACK[0x60C];
      STACK[0x298] = STACK[0x250] + 2304;
      v63 = (v62 - 214) | 0x401;
      LODWORD(STACK[0x5CC]) = 1442110089;
      v64 = STACK[0x430];
      v65 = (unint64_t)&STACK[0x6B0] + STACK[0x430] - 0x2BD0BF7F4FED1218;
      STACK[0x2B8] = STACK[0x430] + 4144;
      STACK[0x530] = v64 + 4144;
      *(_QWORD *)v65 = 0x6370646600;
      *(_BYTE *)(v65 + 8) = 1;
      STACK[0x200] = v65;
      STACK[0x430] = STACK[0x4C0];
      STACK[0x3C0] = v65 + 1712 + ((((v65 + 1712) << (((v62 + 42) | 1) ^ 0x1Fu)) + 16) & 0x20) + 16;
      STACK[0x3D0] = v65 + 9;
      v66 = *(uint64_t (**)(__n128))(v52
                                             + 8
                                             * (((((v63 + 341334239) & 0xEBA7A3F5 ^ 0x2D0) == 32) * ((v63 - 1283) ^ 0x49)) ^ v63));
      STACK[0x3C8] = *(_QWORD *)(v57 + 8 * (v63 ^ 0x6F9));
      STACK[0x400] = *(_QWORD *)(v57 + 8 * (v63 ^ 0x65D));
      STACK[0x3F8] = *(_QWORD *)(v57 + 8 * (v63 ^ 0x67D));
      return v66((__n128)0);
    }
    else
    {
      v68 = 1178560073 * ((2 * (v56 & 0x36413638) - v56 + 1237240260) ^ 0xF32AB1A6);
      *(_DWORD *)(v58 - 200) = v68 + v61 - ((2 * v61 - 1270827694) & 0xD7D57FC4) + 1175132811;
      *(_DWORD *)(v58 - 196) = v62 - v68 + 76;
      *(_QWORD *)(v58 - 192) = a50;
      v69 = sub_1003FBDC8((_DWORD *)(v58 - 200));
      return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v52
                                                          + 8
                                                          * (((STACK[0x578] != 0)
                                                            * ((v62 + 371) ^ 0x7DA ^ ((v62 - 746) | 0x100))) ^ (v62 + 371)))
                                              - 4))(v69);
    }
  }
}

uint64_t sub_1003C50D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  LODWORD(STACK[0x4EC]) = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((((v7 - 1008624437) & 0x3C1E60FF ^ 0x3B6) * v10) ^ (v7 + 731))))(a1, a2, a3, a4, a5, a6, a7, 1810546658);
}

void sub_1003C5178()
{
  LODWORD(STACK[0x390]) = 0;
  STACK[0x3B8] = 0;
  JUMPOUT(0x1003C5188);
}

uint64_t sub_1003C52FC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _DWORD *v6;
  unsigned int *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;

  LODWORD(STACK[0x3E0]) = v5;
  STACK[0x698] = 0xDACB46AD43C3F672;
  v6 = *(_DWORD **)(v3 + 8 * (v0 ^ 0x23F));
  STACK[0x3D8] = (unint64_t)v6;
  LODWORD(STACK[0x444]) = *v6 - 1915093667;
  v7 = *(unsigned int **)(v3 + 8 * (v0 ^ 0x2D4));
  STACK[0x3E8] = (unint64_t)v7;
  v8 = *v7;
  v9 = 1755732067 * ((v2 + 0x46E7E25FCDDF0095 - 2 * (v2 & 0x46E7E25FCDDF0095)) ^ 0x9B4C45601319BD4ELL);
  *(_DWORD *)(v4 - 176) = ((v0 - 2073667256) ^ 0x52)
                        + 1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E);
  v10 = (v0 - 2073667256) ^ (1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E));
  *(_DWORD *)(v4 - 196) = v10 ^ 0x5B;
  *(_DWORD *)(v4 - 160) = (v0 - 1689052254) ^ (1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E));
  *(_QWORD *)(v4 - 192) = v9 + 1074313080;
  *(_QWORD *)(v4 - 168) = v8 + v9;
  *(_DWORD *)(v4 - 184) = v10;
  *(_DWORD *)(v4 - 180) = -1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E);
  v11 = ((uint64_t (*)(uint64_t))STACK[0x378])(v4 - 200);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * *(int *)(v4 - 200)) - 8))(v11);
}

uint64_t sub_1003C5420()
{
  unsigned int *v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;

  STACK[0x430] = ((uint64_t (*)(unint64_t, uint64_t))STACK[0x3C8])(STACK[0x2A8], 2965982036);
  v5 = (*(uint64_t (**)(void))(v4 + 8 * SLODWORD(STACK[0x2A4])))();
  v6 = v5 + 1335398005 - ((v5 << (v3 + 17)) & v2);
  *v0 = v6;
  v7 = 1812433253 * ((((v6 >> 30) ^ 1) + 1335398005 + ((v6 >> 29) | 0xFFFFFFFD) + 1) ^ v6);
  v0[1] = v7 - (((v7 + 1) << (((v3 - 57) ^ 4) + 78)) & v2) + 1335398006;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v3 - 313)) - 12))();
}

void sub_1003C54E4()
{
  JUMPOUT(0x1003C5478);
}

uint64_t sub_1003C54F0@<X0>(unsigned int a1@<W6>, char a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BYTE *v8;
  unsigned int v9;
  unint64_t v10;
  char v11;

  v8 = (_BYTE *)(v4 + (v7 - 123770177));
  v9 = 552571915
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x3F8] + (*(int *)STACK[0x400] & 0xFFFFFFFF9387F0E4)) ^ v8) & 0x7FFFFFFF);
  v10 = (v9 ^ HIWORD(v9)) * (((v2 + 1265) | 0x12) + 552570352);
  v11 = *(_BYTE *)(*(_QWORD *)(v6 + 8 * (v2 ^ 0x1D0)) + (v10 >> 24) - 4) ^ ((v3 ^ a1) >> a2) ^ *(_BYTE *)((v10 >> 24) + *(_QWORD *)(v6 + 8 * (v2 ^ 0x178)) + 3) ^ *(_BYTE *)(*(_QWORD *)(v6 + 8 * (v2 ^ 0x194)) + (v10 >> 24) - 3) ^ v10 ^ (127 * BYTE3(v10));
  *v8 = v11;
  return (*(uint64_t (**)(void))(v5 + 8 * ((56 * (v7 - (v11 != 0) != 123770176)) ^ v2)))();
}

void sub_1003C6288()
{
  JUMPOUT(0x1003C5288);
}

uint64_t sub_1003C6290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  unint64_t v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  BOOL v65;
  char v66;

  STACK[0x4A8] = v61;
  STACK[0x4C0] = STACK[0x430];
  STACK[0x628] = *(_QWORD *)(v63 + 8 * v62);
  STACK[0x228] = STACK[0x200] + 0x2CF26CC0953EB54DLL;
  v64 = STACK[0x3B8];
  STACK[0x530] = STACK[0x2B8] + 112;
  STACK[0x450] = v64;
  if (v64)
    v65 = a61 == 0;
  else
    v65 = 1;
  v66 = v65;
  return (*(uint64_t (**)(void))(v63
                              + 8
                              * (((((((v62 - 75) & 0x6B) - 14) ^ v66) & 1)
                                * (((v62 - 96226123) & 0x5BC4F6B) - 673)) ^ (v62 - 96226123) & 0x5BC4F6B)))();
}

uint64_t sub_1003C636C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v11 = (char *)&STACK[0x6B0] + v9 - 0x2BD0BF7F4FED1B98;
  *(_DWORD *)v11 = 1470816311;
  *((_QWORD *)v11 + 1) = 0;
  *((_DWORD *)v11 + 4) = 109046529;
  *((_DWORD *)v11 + 6) = 494613942;
  *((_QWORD *)v11 + 4) = 0;
  *((_DWORD *)v11 + 10) = 494613942;
  STACK[0x508] = (unint64_t)(v11 + 40);
  *((_QWORD *)v11 + 6) = 0;
  STACK[0x480] = (unint64_t)(v11 + 48);
  *((_DWORD *)v11 + 14) = 494613942;
  STACK[0x490] = (unint64_t)(v11 + 56);
  *((_QWORD *)v11 + 8) = 0;
  STACK[0x5C0] = (unint64_t)(v11 + 64);
  *((_DWORD *)v11 + 18) = 494613942;
  STACK[0x4A0] = (unint64_t)(v11 + 72);
  *((_QWORD *)v11 + 10) = 0;
  STACK[0x570] = (unint64_t)(v11 + 80);
  v11[88] = 14;
  *(_DWORD *)a8 = 1470816311;
  *(__n128 *)(a8 + 4) = a1;
  *(_DWORD *)(a8 + 28) = 2123384174;
  STACK[0x2E8] = a8 + 28;
  *(__n128 *)(a8 + 436) = a1;
  *(__n128 *)(a8 + 452) = a1;
  *(_QWORD *)(a8 + 468) = 0;
  *(_DWORD *)(a8 + 232) = 2123384174;
  STACK[0x2E0] = a8 + 232;
  *(_DWORD *)(a8 + 20) = 0;
  *(_DWORD *)(a8 + 24) = 494613942;
  *(_QWORD *)(a8 + 1128) = 0xC1C1C1C1C1C1C1C1;
  *(_QWORD *)(a8 + 1136) = 0xC1C1C1C1C1C1C1C1;
  *(_QWORD *)(a8 + 1144) = 3250700737;
  *(_QWORD *)(a8 + 1152) = 0;
  *(_QWORD *)(a8 + 1160) = 0;
  *(__n128 *)(a8 + 1168) = a1;
  *(__n128 *)(a8 + 1184) = a1;
  return (*(uint64_t (**)(void))(v10 + 8 * v8))();
}

void sub_1003C6494()
{
  JUMPOUT(0x1003C6460);
}

uint64_t sub_1003C649C@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(void)@<X8>)
{
  int v2;
  uint64_t v3;

  STACK[0x388] = a1;
  STACK[0x2B8] = a1 - 112;
  STACK[0x530] = a1 - 112;
  STACK[0x430] = *(_QWORD *)(v3 + 8 * (v2 - 998));
  return a2();
}

uint64_t sub_1003C64C8(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;

  STACK[0x2B8] = v10;
  *(_DWORD *)(a8 + 1424) = 80919271;
  *(_DWORD *)(a8 + 1428) = 1587865060;
  memset((void *)(a8 + 1432), 193, 20);
  *(__n128 *)(a8 + 1452) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * v8) - (v8 ^ v9) + 28))();
}

uint64_t sub_1003C6528(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;

  *(__n128 *)(a8 + v8) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((v8 == 1500) * v10) ^ v9)) - (v9 ^ v11) + 28))();
}

uint64_t sub_1003C6554@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t (*v70)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v67 = 3 * (a9 ^ 0x191);
  memset((void *)(a7 + 1516), 193, 20);
  *(_QWORD *)(a1 + 96) = a7;
  STACK[0x248] = a7;
  *(_DWORD *)(a7 + 476) = 1856560077;
  STACK[0x3D8] = *(_QWORD *)(v66 + 8 * a9) - 8;
  v68 = STACK[0x530];
  v69 = (char *)&a10 + STACK[0x530] - 0x2BD0BF7F4FED14E8;
  STACK[0x388] = STACK[0x530];
  STACK[0x380] = v67 + v68 - 867;
  STACK[0x3F8] = (unint64_t)v69;
  STACK[0x258] = (unint64_t)(v69 + 392);
  STACK[0x3E8] = STACK[0x450];
  a65 = a1;
  STACK[0x390] = a1;
  STACK[0x530] = STACK[0x380];
  LODWORD(STACK[0x514]) = 1587210567;
  LODWORD(STACK[0x440]) = 494613942;
  STACK[0x560] = 0;
  LODWORD(STACK[0x54C]) = 354595049;
  *(_DWORD *)STACK[0x3F8] = 1927479029;
  LODWORD(STACK[0x3D0]) = 1469611142;
  LODWORD(STACK[0x400]) = 1978480429;
  LODWORD(STACK[0x430]) = ((v67 - 947) ^ 0x33C22107) + 1699462762;
  LODWORD(STACK[0x3B8]) = -1843672742;
  LODWORD(STACK[0x3C0]) = -751238888;
  v70 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * (int)((v67 - 947) ^ 0x6FE)) - (v67 - 547) + 744);
  LODWORD(STACK[0x3E0]) = v65;
  return v70(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1003C66F8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ ((2 * (v0 == v2)) | (4 * (v0 == v2)))))
                            - ((v1 + 2114255) & 0xFFDFBF7B)
                            + 1911))();
}

uint64_t sub_1003C6740()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 - 494613942 + v0 - 1490 - 422) & 0xFFFFFFFC) - LODWORD(STACK[0x3E0]) == -494613942)
                                          * (((v0 - 1627) | 0x89) ^ 0x15C)) ^ v0))
                            - 12))();
}

uint64_t sub_1003C6794()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((8 * (v0 != (v1 ^ 0x499) + 1927477701)) | (16
                                                                                     * (v0 != (v1 ^ 0x499) + 1927477701))) ^ v1))
                            - 4))();
}

uint64_t sub_1003C67D0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = LODWORD(STACK[0x54C]) - v2 == -140018893 && v1 != v0 + 1927478604;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((8 * v5) | (16 * v5)) ^ v0)) - 4))();
}

uint64_t sub_1003C6818()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _DWORD *v6;
  _DWORD *v7;
  int v8;

  v5 = (v0 - 169) | 0x430;
  v6 = (_DWORD *)STACK[0x3F8];
  *v6 = v1 - 1;
  v7 = &v6[6 * (v1 - 1927479030)];
  v8 = v7[2];
  STACK[0x3E8] = *((_QWORD *)v7 + 2);
  LODWORD(STACK[0x54C]) = v7[6];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((162
                                          * (*(_DWORD *)(v4 + 48 * (v5 - 1538970078 + v8 - 1328) + 36) == (((v5 - 22) | 0xC0) ^ (v2 + 554)))) ^ v5))
                            - ((v5 - 1232) | 0x100u)
                            + 348))();
}

uint64_t sub_1003C68EC()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v3 = LODWORD(STACK[0x54C]) - 1125517534;
  v4 = ((v1 - 1265536427) < 0xD20CA80B) ^ (v3 < 0xD20CA80B);
  v5 = v3 < v1 - 1265536427;
  if (v4)
    v5 = (v1 - 1265536427) < 0xD20CA80B;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v5 * ((v0 - 1146) ^ (v0 - 984) ^ 0x357)) ^ v0)) - 4))();
}

uint64_t sub_1003C695C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v4 = 628203409 * ((2 * ((v3 - 200) & 0x1B344E80) - (v3 - 200) - 456412801) ^ 0x6643BD4C);
  v5 = STACK[0x3E8];
  *(_QWORD *)(v3 - 176) = STACK[0x3B0];
  *(_QWORD *)(v3 - 200) = STACK[0x3A8];
  *(_QWORD *)(v3 - 192) = STACK[0x398];
  *(_DWORD *)(v3 - 184) = v0 - v4 + 29;
  *(_DWORD *)(v3 - 180) = v1 - v4 - 407930812;
  v6 = STACK[0x3A0];
  *(_QWORD *)(v3 - 160) = v5;
  *(_QWORD *)(v3 - 152) = v6;
  ((void (*)(uint64_t))((char *)*(&off_1021378F0 + v0 - 287) - 8))(v3 - 200);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 + 8 * ((2010 * (*(_DWORD *)(v3 - 168) == ((8 * (v0 ^ 0x13E) + 1810545216) ^ (2 * v0) ^ 0x12))) ^ v0)) - 8))(420339382, 410, 2484462651, 719, 1373885983, 2921082845, 322, (__n128)0);
}

uint64_t sub_1003C6A88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((44
                                * (*(_DWORD *)(v1
                                             + 48
                                             * (int)(((((v3 - 578) | 0x448) + v4) & 0xAB6187FF ^ (((v3 - 578) | 0x448)
                                                                                                - 1538971654))
                                                   + v2)) == 2042219485)) ^ ((v3 - 578) | 0x448))))();
}

uint64_t sub_1003C6B0C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  if ((a1 - 1587210571) > 0x10 || ((1 << (a1 - 75)) & 0x14301) == 0)
    return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                          + 8
                                          * (((((LODWORD(STACK[0x43C]) - 744) & *(_DWORD *)(v4 + v2 * (uint64_t)v5 + 40)) == 0)
                                            * v1) ^ (LODWORD(STACK[0x43C]) - 427)))
                              - 8))();
  v7 = ((((LODWORD(STACK[0x43C]) - 691) | 0x80) ^ 0xBC) & *(_DWORD *)(v4 + v2 * (uint64_t)v5 + 40)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((8 * v7) | (32 * v7)) ^ (LODWORD(STACK[0x43C]) + 671))) - 12))();
}

uint64_t sub_1003C6E04()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1295 * (((((v1 - 668871542) & 0x27DE29E5) - 350) & v0) == 0)) ^ (v1 - 168)))
                            - 8))();
}

uint64_t sub_1003C6E48@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  int v7;

  v6 = STACK[0x3F8];
  *(_DWORD *)(v6 + 392) = a1;
  *(_DWORD *)(v6 + 396) = STACK[0x440];
  *(_QWORD *)(v6 + 400) = STACK[0x560];
  *(_DWORD *)(v6 + 408) = 1470816311 - v2 + LODWORD(STACK[0x54C]);
  *(_QWORD *)(v6 + 416) = STACK[0x3E8] + (v2 - 354595049);
  v7 = (*(uint64_t (**)(unint64_t, unint64_t))(v4 + 48 * v1 + 8))(STACK[0x390], STACK[0x258]);
  return ((uint64_t (*)(__n128))(*(_QWORD *)(v3
                                                     + 8
                                                     * ((808
                                                       * (v7
                                                        + 1810546658
                                                        - (((v5 - 574828002) & 0x22432DF7 ^ 0xD7D57EB2) & (2 * v7)) == 1810546658)) ^ v5))
                                         - 8))((__n128)0);
}

uint64_t sub_1003C6F28()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1646
                                          * (((LODWORD(STACK[0x440]) - 494613942) ^ 0x7B5E5FFFFDE4F7F7)
                                           - 0x7B5E5FFF6A0BC5D4
                                           + (((unint64_t)(LODWORD(STACK[0x440]) - 494613942) << ((44 * (v0 ^ 0xB5)) ^ 0x61u)) & (((2 * v0) ^ 0x1C0u) + 0x1FBC9EF34)) != 2480484899)) ^ v0))
                            - 12))();
}

uint64_t sub_1003C6FCC()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;

  v4 = (v0 + 241950516) & 0xF1942171;
  v5 = *(unsigned __int8 *)STACK[0x560]
     - (*(_BYTE *)(*(_QWORD *)(v3 + 48 * v1 + 24) - 0x5FC20BA57156132) + (v4 ^ 0x9D));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((1486
                                               * (((2 * v5) & 0xFF1F2AF6) + (v5 ^ 0xFF8F957B) == 62 * (v4 ^ 0x163)
                                                                                               - 7367487)) ^ v4))
                            - 8))();
}

uint64_t sub_1003C709C()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;
  unint64_t v5;
  int v6;
  _BOOL4 v7;

  v4 = v0 < 0x93D93223;
  v5 = ((v2 + 166) ^ 0xEBED18B7FD40541CLL) + v1;
  v6 = v4 ^ (v5 < 0x93D93223);
  v7 = v5 < v0;
  if (!v6)
    v4 = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((7 * !v4) ^ v2)) - 12))();
}

void sub_1003C7100()
{
  JUMPOUT(0x1003C7018);
}

uint64_t sub_1003C7108@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 + 400) ^ 0x1D8) * (a1 - v1 == -393511913)) ^ v2))
                            - ((v2 - 490248681) & 0x1D3899FE)
                            + 366))();
}

uint64_t sub_1003C7168()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v3 + 48 * v0 + 32) == v1 + v4 - 22 - 352;
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v4 ^ v5) & 1) == 0) | (8 * (((v4 ^ v5) & 1) == 0))) ^ v4)))();
}

uint64_t sub_1003C71A4()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1158 * ((((v1 ^ 0x16) + 400) ^ 0x8D1D03FB) + *(_DWORD *)STACK[0x3F8] < 0x10)) ^ v1 ^ 0x16u))
                            - 8))();
}

uint64_t sub_1003C71F0@<X0>(unsigned int a1@<W8>)
{
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  unint64_t v9;
  _BOOL4 v11;

  v7 = STACK[0x54C];
  v8 = (_DWORD *)STACK[0x3F8];
  v9 = STACK[0x3F8] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v6;
  *(_DWORD *)(v9 + 12) = v4;
  *(_QWORD *)(v9 + 16) = STACK[0x3E8];
  *(_DWORD *)(v9 + 24) = v7;
  *v8 = v1 + 1;
  v11 = v3 + 912324450 > 303810879 || v3 + 912324450 < SLODWORD(STACK[0x3B8]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((a1 - 704731610) & 0x2A015A7B) + 25) * v11) ^ a1))
                            - ((a1 - 1757277550) & 0x68BDEEFD ^ 0x2F8)))();
}

uint64_t sub_1003C728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  STACK[0x3E8] = STACK[0x560];
  LODWORD(STACK[0x54C]) = 354595049;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1139 * (a8 == 1810546658)) ^ (v8 - 162)))
                            - (((v8 + 190) | 0x30u) ^ 0x2F8)))();
}

uint64_t sub_1003C72BC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v5 = *(_DWORD *)(v4 + v2 * (uint64_t)v1 + 36) + 2004758304;
  v7 = v5 > (v0 ^ 0x5339019D) || v5 < SLODWORD(STACK[0x3C0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((866 * v7) ^ v0)) - 8))();
}

uint64_t sub_1003C734C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *(_DWORD *)STACK[0x3F8] != ((v0 + 944) | 0x20) + 1927477701 || v1 != v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1790 * v5) ^ v0)) - (v0 + 400) + 744))();
}

uint64_t sub_1003C73A8()
{
  STACK[0x530] = STACK[0x388];
  return ((uint64_t (*)(void))STACK[0x3D8])();
}

uint64_t sub_1003C73BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v10 - 740) ^ (539 * (v9 == a8))))
                            - ((v10 - 728) ^ 0x1CLL)))();
}

void sub_1003C73E8(int a1@<W8>)
{
  uint64_t v1;
  unint64_t *v2;

  v2 = (unint64_t *)STACK[0x480];
  STACK[0x390] = STACK[0x2E8];
  STACK[0x3E8] = *v2;
  STACK[0x3D8] = *(_QWORD *)(v1 + 8 * a1) + ((a1 + 1275) ^ 0xFFFFFFFFFFFFFAEFLL);
  JUMPOUT(0x1003C65F0);
}

uint64_t sub_1003C7484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a67;
  char a68;
  uint64_t a69;
  char a70;
  uint64_t v70;
  int v71;
  unint64_t v72;

  v72 = STACK[0x248];
  *(_QWORD *)(v72 + 1560) = *(_QWORD *)STACK[0x570];
  *(_DWORD *)(v72 + 1552) = *(_DWORD *)STACK[0x4A0];
  *(_QWORD *)(*(_QWORD *)(a67 + 96) + 488) = *(_QWORD *)(a67 + 8);
  *(_DWORD *)(*(_QWORD *)(a67 + 96) + 480) = *(_DWORD *)a67;
  *(_BYTE *)(a69 + STACK[0x2B8]) = (a70 ^ 0xBA) * a68;
  return ((uint64_t (*)(void))(*(_QWORD *)(v70 + 8 * ((v71 + 377) ^ 0x5B6 ^ (v71 + 15))) - 8))();
}

uint64_t sub_1003C7520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  STACK[0x580] = 104 - a2;
  v4 = (uint64_t (*)(void))STACK[0x628];
  STACK[0x2B8] = a1 - 112;
  STACK[0x530] = a1 - 112;
  STACK[0x430] = *(_QWORD *)(v3 + 8 * ((v2 ^ 0x699) - 621));
  return v4();
}

uint64_t sub_1003C7554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(v8 + 8 * ((88 * (v9 == ((v10 + 401) ^ (a8 - 1151)))) ^ (v10 - 179))))();
}

uint64_t sub_1003C7584()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  STACK[0x518] = 0;
  LODWORD(STACK[0x53C]) = 494613942;
  STACK[0x460] = 0;
  LODWORD(STACK[0x4FC]) = 494613942;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (int)(((((((v0 - 96) | 0xC0) ^ 0xB1) + *(_BYTE *)(STACK[0x228] - 0x2CF26CC0953EB4ADLL) - **(_BYTE **)(v2 + 8 * (v0 - 1029))) == 162) * (((v0 + 1194031484) & 0xB8D483E3) + 1559)) ^ (v0 - 136))) - 4))(93, 205, 308, 121, 756, 1074904490, 177, 2530446878);
}

uint64_t sub_1003C7654()
{
  int v0;
  int v1;
  char v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((((v1 == 96) ^ (v0 + v2)) & 1) * v3) ^ v0)))();
}

void sub_1003C7680()
{
  JUMPOUT(0x1003C760CLL);
}

uint64_t sub_1003C768C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((v10 - 612) | 0x10) ^ 0xED) * (v9 != a8)) ^ (v10 - 350))) - 12))();
}

uint64_t sub_1003C76C0()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = ((((v0 + 65) & 0xBE) + 37) ^ *(unsigned __int8 *)(STACK[0x4E0] + 1516))
     - (*(_BYTE *)STACK[0x468] - 67);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((962 * (((v0 + 2147218204) & (2 * v2)) + (v2 ^ 0xBFFDF9DC) == -1073874468)) ^ (v0 + 327)))
                            - 12))();
}

uint64_t sub_1003C7750@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 - 155) ^ 0x669 ^ ((v1 + 68) | 0x103)) * (a1 == 19)) ^ v1))
                            - 8))();
}

uint64_t sub_1003C7790(uint64_t a1, uint64_t a2, char a3, int a4)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v4 ^ 0x11)
                                                   + 24
                                                   + (v4 ^ 0x11 ^ v5) * a3
                                                   + *(_BYTE *)(STACK[0x228] + v7)
                                                   - **(_BYTE **)(v8 + 8 * (v4 ^ 0x136))) == 194)
                                * a4) ^ ((v4 ^ 0x311) - 80))))();
}

uint64_t sub_1003C7838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 + 600) * (v6 == 96)) ^ v5)) - ((v5 + 488) ^ a5)))();
}

void sub_1003C7860()
{
  JUMPOUT(0x1003C77F8);
}

uint64_t sub_1003C786C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v10 = 188 * (v6 ^ 0x26C);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                        + 8
                                                                        * ((103
                                                                          * (((((v10 - 108) | 0x11) + 13) & 0xFE) != (((v10 + 13) & a6 ^ 0xF8) + *(_BYTE *)(STACK[0x228] + v8) - **(_BYTE **)(v9 + 8 * (v10 ^ 0x282))))) ^ (v10 + 441)))
                                                            - 12))(a1, a2, 3220062477);
}

uint64_t sub_1003C7954(char a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == ((v2 - 107) ^ a1)) * ((v2 + 328) ^ a2)) ^ v2)))();
}

void sub_1003C797C()
{
  JUMPOUT(0x1003C7904);
}

uint64_t sub_1003C7988()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = v0 - 344;
  v3 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3C8])(1576, 2940923044);
  STACK[0x4E0] = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1606 * (v3 != 0)) ^ v2)))();
}

uint64_t sub_1003C7A24(unint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x248] = a1;
  v3 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3C8])(1576, 3012117910);
  STACK[0x640] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v3 == 0)
                                               * (((((v2 + 1597675970) & 0xA0C56732) - 1473155943) & 0x57CE97BF) - 1824)) ^ (v2 + 1597675970) & 0xA0C56732))
                            - (((((v2 + 1597675970) & 0xA0C56732) - 178) | 0x70) ^ 0x2F4)))();
}

uint64_t sub_1003C7AA8()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((39 * (v0 == ((v1 - 224) ^ 0x1E0CD33B ^ (v1 - 1237)))) ^ v1)))();
}

uint64_t sub_1003C7AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t a66;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;

  v69 = 235795823 * ((v68 - 200) ^ 0x94AD4959);
  *(_DWORD *)(v68 - 200) = v69 ^ 0xB105AD13;
  *(_DWORD *)(v68 - 164) = v67 - v69 + 664;
  *(_QWORD *)(v68 - 184) = a65;
  *(_QWORD *)(v68 - 176) = a66;
  *(_QWORD *)(v68 - 192) = 0x1C6D093801E6EF71;
  v70 = ((uint64_t (*)(uint64_t))STACK[0x288])(v68 - 200);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v66
                                                      + 8
                                                      * ((67
                                                        * (((69 * (v67 ^ 0xB1)) ^ (*(_DWORD *)(v68 - 168) == (((v67 ^ 0x2B1) + 476) ^ 0x6BEABE01))) & 1)) ^ v67))
                                          - 8))(v70);
}

uint64_t sub_1003C7BBC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v0 - 1013) ^ 0x43) - 647) * (v2 == v1)) ^ v0)) - 12))();
}

uint64_t sub_1003C7BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t a66;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;

  v69 = 235795823 * ((((v68 - 200) | 0xFD09330A) - ((v68 - 200) & 0xFD09330A)) ^ 0x69A47A53);
  *(_DWORD *)(v68 - 164) = v67 - v69 + 664;
  *(_DWORD *)(v68 - 200) = v69 ^ 0xB105AD11;
  *(_QWORD *)(v68 - 184) = a65;
  *(_QWORD *)(v68 - 176) = a66;
  *(_QWORD *)(v68 - 192) = 0x1C6D093801E6EF71;
  v70 = ((uint64_t (*)(uint64_t))STACK[0x288])(v68 - 200);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v66 + 8
                                                            * ((67 * (*(_DWORD *)(v68 - 168) != 1810546658)) ^ v67))
                                          - ((v67 - 211) ^ 0x1EBLL)))(v70);
}

uint64_t sub_1003C7CCC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 + 761) * (v3 == v1)) ^ a1))
                            - ((a1 + 877714186) & 0xCBAF23E3)
                            + 475))();
}

uint64_t sub_1003C7D34@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;

  v65 = a1 - 63;
  v66 = (a1 - 63) ^ 0x355u;
  v67 = ((v63 & 0xD1AFCDE0 | ~(v63 | 0xD1AFCDE0)) ^ 0xBAFD7B46) * v60;
  *(_QWORD *)(v64 - 184) = a58;
  *(_QWORD *)(v64 - 176) = a59;
  *(_QWORD *)(v64 - 192) = v59;
  *(_DWORD *)(v64 - 200) = v67 ^ 0xB105AD13;
  *(_DWORD *)(v64 - 164) = v65 - v67 + 664;
  v68 = ((uint64_t (*)(uint64_t))STACK[0x288])(v64 - 200);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v61 + 8 * ((67 * (*(_DWORD *)(v64 - 168) != v62)) ^ v65))
                                          - (v66 ^ 0x1EB)))(v68);
}

uint64_t sub_1003C7DEC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  int v68;

  v66 = ((1424150546 - (v64 | 0x54E2D012) + (v64 | 0xAB1D2FED)) ^ 0x3FB066B4) * v60;
  *(_DWORD *)(v65 - 200) = a1 ^ v66;
  *(_DWORD *)(v65 - 164) = v59 - v66 + 875;
  *(_QWORD *)(v65 - 192) = v57;
  *(_QWORD *)(v65 - 184) = a56;
  *(_QWORD *)(v65 - 176) = a57;
  v67 = v58(v65 - 200);
  v68 = *(_DWORD *)(v65 - 168);
  STACK[0x468] = v62;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v61 + 8 * ((1847 * (v68 == v63 + v59 - 414 - 69)) ^ v59))
                                                                                               - (v59 + 269)
                                                                                               + 740))(v67, 410, 2484462651, 719, 1373885983, 2921082845, (__n128)0);
}

void sub_1003C7EB8()
{
  JUMPOUT(0x1003C7ED0);
}

void sub_1003C7ED8(unint64_t a1@<X8>)
{
  STACK[0x628] = a1;
  JUMPOUT(0x1003C6334);
}

uint64_t sub_1003C7F50@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((LODWORD(STACK[0x4EC]) != a1) * (((a2 + 474) | 0x10) + 1289)) ^ a2))
                            - ((a2 - 148) ^ 0x7ELL)))();
}

uint64_t sub_1003C8050()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  STACK[0x468] = v2;
  return (*(uint64_t (**)(unint64_t))(v1
                                                     + 8
                                                     * (int)(((32 * (STACK[0x460] != 0)) | ((STACK[0x460] != 0) << 9)) ^ (((v0 + 1880294929) & 0x8FECFAFB) + 463))))(STACK[0x460]);
}

uint64_t sub_1003C8A18()
{
  int v0;
  uint64_t v1;

  ((void (*)(void))STACK[0x2C8])();
  return (*(uint64_t (**)(void))(v1 + 8 * ((1820 * (STACK[0x518] != 0)) ^ (v0 - 618))))();
}

uint64_t sub_1003C8A48()
{
  int v0;
  uint64_t v1;

  ((void (*)(void))STACK[0x2C8])();
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1050 * (STACK[0x4E0] != 0)) ^ (v0 + 104))) - 8))();
}

uint64_t sub_1003C8A78()
{
  int v0;
  uint64_t v1;

  ((void (*)(void))STACK[0x2C8])();
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((118 * (STACK[0x640] != 0)) ^ (v0 + 451))) - 8))();
}

uint64_t sub_1003C8AA8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v3 = ((uint64_t (*)(void))STACK[0x2C8])();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)(((((v0 + 1507519999) & 0xA6250FDD) + 1131) * (v2 == 1810546658)) ^ (v0 - 179))))(v3);
}

uint64_t sub_1003C8AFC()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((1820 * (STACK[0x518] != 0)) ^ (v0 - 618))))();
}

uint64_t sub_1003C8B24()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1050 * (STACK[0x4E0] != 0)) ^ (v0 + 104))) - 8))();
}

uint64_t sub_1003C8B4C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((118 * (STACK[0x640] != 0)) ^ (v0 + 451))) - 8))();
}

uint64_t sub_1003C8B74(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (int)(((((v2 + 1507519999) & 0xA6250FDD) + 1131)
                                                                     * (v4 == 1810546658)) ^ (v2 - 179))))(a1, a2, 2484462651);
}

uint64_t sub_1003C8BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;

  LODWORD(STACK[0x5CC]) = 1442109809;
  LODWORD(STACK[0x618]) = 128;
  v56 = 1178560073 * ((((v55 - 200) | 0xC385703) - (v55 - 200) + ((v55 - 200) & 0xF3C7A8F8)) ^ 0xB6AC2F61);
  *(_DWORD *)(v55 - 160) = (v53 - 65) ^ v56;
  *(_DWORD *)(v55 - 176) = 632307399 - v56;
  *(_QWORD *)(v55 - 168) = 0;
  *(_QWORD *)(v55 - 152) = 0;
  *(_QWORD *)(v55 - 144) = a45;
  *(_QWORD *)(v55 - 184) = v52 + 0x63F19B7CB7022034;
  *(_QWORD *)(v55 - 192) = a52;
  *(_QWORD *)(v55 - 136) = v52;
  *(_QWORD *)(v55 - 128) = v52 + 0x63F19B7CB7022144;
  v57 = ((uint64_t (*)(uint64_t))STACK[0x430])(v55 - 200);
  return (*(uint64_t (**)(uint64_t))(v54
                                            + 8
                                            * ((752
                                              * ((((v53 ^ 0x3D) + 1) ^ (*(_DWORD *)(v55 - 200) == 1810546658)) & 1)) ^ v53)))(v57);
}

uint64_t sub_1003C8CC8()
{
  int v0;
  uint64_t v1;
  int v2;

  LODWORD(STACK[0x4EC]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((STACK[0x578] != 0) * ((v0 + 371) ^ 0x7DA ^ ((v0 - 746) | 0x100))) ^ (v0 + 371)))
                            - 4))();
}

uint64_t sub_1003C8D14(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = 2 * (v2 ^ 0x4E0);
  v5 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))STACK[0x2D8])(*(unsigned int *)STACK[0x2D0], a2, LODWORD(STACK[0x60C]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (((LODWORD(STACK[0x4EC]) != 1810546658)
                                                        * (((v4 + 474) | 0x10) + 1289)) ^ v4))
                                          - ((v4 - 148) ^ 0x7ELL)))(v5);
}

uint64_t sub_1003C8D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  unint64_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;

  v4 = v1 + 127 - a1;
  v5 = vrev64q_s8(*(int8x16_t *)(v4 - 15));
  v6 = vextq_s8(v5, v5, 8uLL);
  v7 = vrev64q_s8(*(int8x16_t *)(v4 - 31));
  v8 = vextq_s8(v7, v7, 8uLL);
  v9 = STACK[0x298] + 127 - a1;
  v10.i64[0] = 0x8282828282828282;
  v10.i64[1] = 0x8282828282828282;
  v11.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v11.i64[1] = 0xC1C1C1C1C1C1C1C1;
  v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 == 96) * (v2 - 164)) ^ v2)))();
}

uint64_t sub_1003C8E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x4EC]) = a8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((113
                                          * ((*(_DWORD *)(STACK[0x368] + 360) - 1405824189) > 0xFFFFFFFD)) ^ (v8 + 878)))
                            - (v8 + 547)
                            + 744))();
}

uint64_t sub_1003C8E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  uint64_t v10;
  unint64_t v11;
  char *v12;

  v11 = STACK[0x388];
  v12 = (char *)&STACK[0x6B0] + STACK[0x388] - 0x2BD0BF7F4FED1B98;
  STACK[0x528] = (unint64_t)(v12 - 1824);
  STACK[0x430] = (unint64_t)(v12 - 1596);
  LODWORD(STACK[0x59C]) = 1656329400;
  STACK[0x530] = v11 - 192;
  STACK[0x620] = 0;
  LODWORD(STACK[0x4D0]) = 494613942;
  STACK[0x3E8] = (unint64_t)(v12 - 1824);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (((a9 + 1202) * (v12 != (char *)1576)) ^ (a9 + 203))))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_1003C8F9C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21 = a1 ^ 0x26;
  v22 = 7 * (a1 ^ 0x22F);
  *(_DWORD *)(v20 - 200) = (a1 ^ 0x26) + 628203409 * ((v19 & 0x8F7154F5 | ~(v19 | 0x8F7154F5)) ^ 0xF206A739) - 231789516;
  nullsub_34(v20 - 200);
  v23 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3C8])(336, 318119320);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (int)(((v23 == 0) * ((v22 ^ 0xFFFFFB22) + ((v21 - 1309874904) & 0x4E131AF1))) ^ v21)) - 4))(v23, v24, 2484462651, v25, v26, v27, v28, 1810546658, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18);
}

uint64_t sub_1003C906C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * ((63
                                                       * ((((9 * (((v1 - 1047) | 0x424) ^ 0x668)) ^ ((unint64_t)(*(_QWORD *)(v3 + 8 * (v1 ^ 0x60D)) - 4 - a1) < 0x20)) & 1) == 0)) ^ v1)))(984, 415);
}

uint64_t sub_1003C90F4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint64_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;

  v7 = (v4 - v2);
  v8 = vrev64q_s8(*(int8x16_t *)(a2 + v7 - 15));
  v9 = vextq_s8(v8, v8, 8uLL);
  v10 = vrev64q_s8(*(int8x16_t *)(a2 + v7 - 31));
  v11 = vextq_s8(v10, v10, 8uLL);
  v12 = v6 + v7;
  v13.i64[0] = 0x8282828282828282;
  v13.i64[1] = 0x8282828282828282;
  v14.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v14.i64[1] = 0xC1C1C1C1C1C1C1C1;
  v15 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v13)), v14));
  *(int8x16_t *)(v12 - 15) = vextq_s8(v15, v15, 8uLL);
  v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v13)), v14));
  *(int8x16_t *)(v12 - 31) = vextq_s8(v16, v16, 8uLL);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 == 288) * ((v3 - 822) ^ a1)) ^ v3)))();
}

uint64_t sub_1003C917C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int8x8_t v6;
  int8x8_t v7;
  uint64_t v8;
  int8x8_t v9;

  v8 = (v3 - 320);
  v9 = vrev64_s8(*(int8x8_t *)(a2 + v8 - 7));
  *(int8x8_t *)(v5 - 7 + v8) = vrev64_s8(vadd_s8(vsub_s8(v9, vand_s8(vadd_s8(v9, v9), v6)), v7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((13 * ((v2 ^ a1) != 871)) ^ (v2 + 69))) - 8))();
}

uint64_t sub_1003C91E0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v8 + (v3 + v5)) = *(_BYTE *)(a2 + (v3 + v5))
                                           - ((2 * *(_BYTE *)(a2 + (v3 + v5))) & 0x83)
                                           - 63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v3 + 3 * (v2 ^ v4) - 880 == a1) * v6) ^ v2)) - 8))();
}

uint64_t sub_1003C9228()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;

  STACK[0x550] = v4;
  v17 = (_QWORD *)(v0 + v1 - 934);
  *v17 = 0x3E3E3E3E3E3E3E3ELL;
  v17[1] = 0xC1C1C1C1C7C1C1D3;
  v7 = 235795823 * ((2 * (v5 & 0x4BBEC6C8) - v5 - 1270793930) ^ 0x20EC706F);
  *(_DWORD *)(v6 - 196) = v7 + 936872551;
  *(_DWORD *)(v6 - 192) = v2 - v7 + 1064655812;
  nullsub_34(v6 - 200);
  LODWORD(STACK[0x478]) = 494614278;
  v8 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3C8])(336, 1690680581);
  STACK[0x4B8] = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * (((v8 == 0) * (((v2 - 255) | 0x80) + ((v2 + 25) | 0x12) - 1432)) ^ v2)))(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1003C9308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;

  LODWORD(STACK[0x668]) = a16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((1446 * (STACK[0x550] != 0)) ^ (v16 + 13))) - 4))();
}

uint64_t sub_1003C9348@<X0>(int a1@<W2>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = a3 - 412;
  STACK[0x530] = v3 + ((v5 - 107) ^ 0x219u) - 768;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1853 * (a1 == a2)) ^ v5)) - 4))();
}

uint64_t sub_1003C938C()
{
  ((void (*)(unint64_t))STACK[0x2C8])(STACK[0x248]);
  return sub_1003C8CC8();
}

uint64_t sub_1003C9478(unint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0x530] = ((v1 + 40) ^ 0xFFFFFFFFFFFFFC92) + STACK[0x388];
  STACK[0x458] = a1;
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (1480 * (v3 > a1)))))();
}

uint64_t sub_1003C9504@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (v7 + a3) & ((v6 + 681) - 1628);
  *(_BYTE *)(a1 + (v7 + a3)) = *(_BYTE *)(v10 + (v7 + a3)) ^ *(_BYTE *)(v5 + v11) ^ *(_BYTE *)(a4 + v11) ^ *(_BYTE *)(v11 + v4 + 2) ^ (((v7 + a3) & (v6 + 77)) * v8) ^ 0xC1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v7 + 1 + a3) < 0x150) * a2) ^ v6)))();
}

uint64_t sub_1003C9564@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (v6 + a2);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(v10 + v11) ^ *(_BYTE *)(v5 + (v11 & 0xF)) ^ *(_BYTE *)(a4 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v4 + 2) ^ ((v11 & 0xF) * v7) ^ 0xC1;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 - 1 == a3) * (v8 - 834)) ^ v8)))();
}

uint64_t sub_1003C95C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int8x16_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int8x16_t a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;
  int8x16_t *v40;

  v40 = (int8x16_t *)((char *)&STACK[0x6B0] + v38 - 0x2BD0BF7F4FED1B98);
  v40[-12] = veorq_s8(*a16, a37);
  STACK[0x648] += 32;
  STACK[0x650] = a1;
  STACK[0x658] = a1;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (v37 ^ (213 * (&v40[-12] == (int8x16_t *)a1))))
                                                                                                - ((v37 - 650) ^ 0x3E5)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1003C9634(unsigned __int8 *a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  unsigned int v71;
  int v72;
  char v73;
  char v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unint64_t v84;
  unint64_t v85;
  unsigned __int8 *v86;
  unint64_t v87;
  uint64_t v88;
  int v89;
  unsigned __int8 v90;
  int v91;
  int v92;
  unsigned int v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  int v100;
  char v101;
  char v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  BOOL v109;
  char v110;
  char v111;
  int v112;
  unsigned int v113;
  int v114;
  char v115;
  uint64_t v116;
  int v117;
  unint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  unint64_t v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  int v248;
  unsigned int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  unint64_t v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  uint64_t v281;
  unsigned int v282;
  uint64_t v283;
  unsigned int v284;
  uint64_t v285;
  unsigned int v286;
  uint64_t v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  uint64_t v298;
  int v299;
  int v300;
  unsigned int v301;
  char *v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  uint64_t v306;
  char *v307;
  unsigned int v308;
  int v309;
  char *v310;
  int v311;
  int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  uint64_t v316;
  char *v317;
  unint64_t v318;
  unint64_t v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  int v327;
  unint64_t v328;
  unsigned int v329;
  int v330;
  uint64_t v331;
  _BYTE *v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  uint64_t v344;
  uint64_t v345;
  int v346;
  uint64_t v347;

  v63 = (v59 + 1480983944) & 0xA7B9F7ED;
  v64 = (unsigned __int8 *)&STACK[0x19B0] + v60;
  *v64 = *a1;
  *(_QWORD *)(v64 + 1) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v64 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v64 + 13) = *(_WORD *)(a1 + 13);
  v64[15] = a1[15];
  v65 = *((_QWORD *)a1 + 1);
  *((_QWORD *)v64 + 2) = *(_QWORD *)a1;
  *((_QWORD *)v64 + 3) = v65;
  v66 = *(_QWORD *)(v62 + 8 * (int)(v63 - 775)) - 8;
  v67 = *(_QWORD *)(v62 + 8 * (int)(v63 ^ 0x360)) - 4;
  v68 = *(_QWORD *)(v62 + 8 * (int)(v63 ^ 0x3ED));
  LOBYTE(v65) = *(_BYTE *)(v68 + (v64[10] ^ 0xCBLL));
  v69 = (((*(unsigned __int8 *)(v67 + (v64[8] ^ a4)) + (v64[8] ^ 0x34) - 87) ^ 0xF5) << 24) | (((v65 ^ (16 * v65)) ^ 0x4D) << 8);
  v70 = *(_QWORD *)(v62 + 8 * (int)(v63 - 781)) - 4;
  v71 = *(unsigned __int8 *)(v70 + (v64[1] ^ 0x1ALL));
  v72 = ((((v71 ^ 0x83) + (v71 & 0xD5 ^ 0x7E) + 1) ^ v71 & 0xDF) >> 4) ^ (v71 >> 1);
  v73 = v72 ^ 0x2E;
  v74 = (v72 ^ 0x2E) & 0x17 ^ v72 & 1;
  LOBYTE(v72) = *(_BYTE *)(v68 + (v64[14] ^ 0x86));
  v75 = ((v64[3] ^ 0xB8) + *(_BYTE *)(v66 + (v64[3] ^ 0x54)) - 49) | ((v71 ^ 0xD6 ^ (v73 - 2 * v74 - 106)) << 16);
  LOBYTE(v71) = *(_BYTE *)(v68 + (v64[6] ^ 0x2ELL));
  v76 = *(_BYTE *)(v70 + (v64[13] ^ 0x5BLL)) ^ 0x56;
  LODWORD(v65) = ((v64[7] ^ 0x90) + *(_BYTE *)(v66 + (v64[7] ^ 0x7CLL)) - 49) | ((((v64[4] ^ (v63 + 818))
                                                                                                  + *(unsigned __int8 *)(v67 + (v64[4] ^ 0x42))
                                                                                                  - 87) ^ a5) << 24) | (((v71 ^ (16 * v71)) ^ 0x51) << 8);
  v77 = *(unsigned __int8 *)(v70 + (v64[13] ^ 0x5BLL)) ^ 0x56 ^ (v76 >> 4) ^ (v76 >> 1);
  v78 = (((v72 ^ (16 * v72)) ^ 0x81) << 8) | ((v77 - ((2 * v77) & 0x2E) + 23) << 16);
  v79 = v75 | (((*(unsigned __int8 *)(v67 + (*v64 ^ 0x81)) + (*v64 ^ 0xD0) - 87) ^ 0x3C) << 24);
  LOBYTE(v75) = *(_BYTE *)(v70 + (v64[5] ^ 0xEDLL));
  v80 = ((v75 ^ 0x56) >> 4) ^ ((v75 ^ 0x56) >> 1);
  v335 = v70;
  v337 = v67;
  v338 = v66;
  v81 = v63 + 797;
  v82 = v69 & 0xFF00FF00 | ((v64[11] ^ 0x3E) + *(_BYTE *)(v66 + (v64[11] ^ 0xD2)) - 49) | (((*(_BYTE *)(v70 + (v64[9] ^ 0x38)) ^ ((*(_BYTE *)(v70 + (v64[9] ^ 0x38)) ^ 0x56) >> 4) ^ ((*(_BYTE *)(v70 + (v64[9] ^ 0x38)) ^ 0x56) >> 1)) ^ 0xFD) << 16);
  v336 = v68;
  v83 = v79 & 0xFFFF00FF | (((*(_BYTE *)(v68 + (v64[2] ^ 0x22)) ^ (16
                                                                                    * *(_BYTE *)(v68 + (v64[2] ^ 0x22)))) ^ 0x7F) << 8);
  LODWORD(STACK[0x3E0]) = (v78 & 0xFFFFFF00 | ((((v64[12] ^ 0x13) + *(unsigned __int8 *)(v67 + (v64[12] ^ 0x42)) - 87) ^ a5) << 24) | (*(_BYTE *)(v66 + (v64[15] ^ 0x38)) + (v64[15] ^ 0xD4) - 49)) ^ 0x8B0A4D4B;
  LODWORD(STACK[0x390]) = v83 ^ 0x5E50E7B3;
  LODWORD(STACK[0x2B8]) = (v65 & 0xFF00FFFF | ((v75 ^ 0x6C ^ (v80
                                                                                              - ((2 * v80) & 0x2A)
                                                                                              + 21)) << 16)) ^ 0x884B0855;
  v84 = STACK[0x650];
  LODWORD(STACK[0x3C0]) = v82 ^ 0xAE215EC0;
  v333 = (_BYTE *)STACK[0x658];
  v334 = v84;
  HIDWORD(a18) = (v81 - 1022) | 0x42;
  v85 = (HIDWORD(a18) ^ 0xFFFFFCB3) & 0xB0BFD7B8 ^ 0xB0BFD7BE;
  STACK[0x3D8] = v85;
  v86 = (unsigned __int8 *)v84;
  LODWORD(v64) = *(unsigned __int8 *)(v68 + (*(unsigned __int8 *)(v84 + v85) ^ a3));
  HIDWORD(v344) = (v81 + 1957364991) & 0x8B54F7E3;
  v87 = HIDWORD(v344) ^ 0x3E5u;
  STACK[0x2E0] = v87;
  v88 = *(unsigned __int8 *)(v84 + v87);
  LODWORD(STACK[0x400]) = (((16 * (_DWORD)v64) ^ 0x20) - ((32 * (_DWORD)v64) & 0xFFFFFFBF) - 46) ^ v64;
  LOBYTE(v64) = v88 ^ 0xB7;
  LOBYTE(v84) = *(_BYTE *)(v67 + (v88 ^ a5));
  STACK[0x228] = 10;
  STACK[0x3F8] = 15;
  v89 = v86[15];
  v90 = (v84 + (_BYTE)v64 - 87) ^ 0xE5;
  if ((v89 & 0x20) != 0)
    v91 = -32;
  else
    v91 = 32;
  v346 = *(unsigned __int8 *)(v66 + ((v91 + v89) ^ 0xDDLL)) + ((v91 + v89) ^ 0x31);
  STACK[0x3D0] = 6;
  v92 = *(unsigned __int8 *)(v68 + (v86[6] ^ 0x51));
  v93 = v81;
  STACK[0x380] = 12;
  STACK[0x288] = 0;
  HIDWORD(v94) = v92 ^ (((16 * v92) ^ 0x20) - ((32 * v92) & 0xFFFFFFBF) - 46) ^ 0x3F;
  LODWORD(v94) = BYTE4(v94) & 0xF8;
  v95 = ((v94 >> 3) | ((unint64_t)v90 << 13)) ^ 0x58F620A6;
  v96 = (v95 >> 21) | ((_DWORD)v95 << 11);
  HIDWORD(v345) = *(unsigned __int8 *)(v67 + (v86[12] ^ 0xF7) - 2 * ((v86[12] ^ 0xF7) & 0xAEu) + 174) - (v86[12] ^ 0xF7);
  v97 = *v86;
  v98 = v97 ^ 0x76;
  LODWORD(v97) = *(unsigned __int8 *)(v67 + (v97 ^ 0xD8));
  STACK[0x388] = 3;
  v99 = v86[3];
  v100 = v97 + v98 - 2 * v98;
  STACK[0x3B8] = 8;
  LODWORD(v345) = (v99 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(v66 + (v99 ^ 0x57));
  LOBYTE(v97) = (v86[8] ^ 0xA7) + *(_BYTE *)(v67 + (v86[8] ^ 0xF6));
  v101 = v97 - ((2 * v97 + 82) & 0x4E);
  STACK[0x2E8] = 7;
  v102 = (v86[7] ^ 0xE9) + *(_BYTE *)(v66 + (v86[7] ^ 5));
  STACK[0x258] = 13;
  v103 = *(unsigned __int8 *)(v335 + (v86[13] ^ 0x12));
  v104 = v103 ^ ((((v103 ^ 0x56u) >> 3) & 4 ^ v103 & 0xA4 | ((v103 ^ 0x56u) >> 3) & 0xFFFFFFFB ^ (v103 ^ 0x56) & 0x5A) >> 1);
  LOBYTE(v103) = *(_BYTE *)(v335 + (v86[5] ^ 0x9CLL));
  LODWORD(v99) = ((v103 ^ 0x56) >> 4) ^ ((v103 ^ 0x56) >> 1);
  LOBYTE(v99) = v103 ^ 0xE6 ^ (v99 - ((2 * v99) & 0x2A) + 21);
  v105 = (v102 - 49);
  STACK[0x248] = 9;
  v106 = *(unsigned __int8 *)(v335 + (v86[9] ^ 0x76));
  v107 = v105 & 0xFF00FFFF | (v99 << 16);
  LODWORD(v99) = (v106 & 8 ^ 0xFFFFFF9F) + 2 * (v106 & 8);
  v108 = (v106 ^ 0x56u) >> 3;
  v109 = (((_DWORD)v99 + 1) & v108) == 0;
  v110 = v99 + 112;
  v111 = -82 - v99;
  if (v109)
    v111 = v110;
  v112 = v106 ^ ((((v108 + v111 - 15) ^ (v106 ^ 0x56) & 0xF7) & 0xFE) >> 1);
  STACK[0x200] = 1;
  v113 = *(_BYTE *)(v335 + (v86[1] ^ 0xCFLL)) ^ 0x56;
  v114 = *(unsigned __int8 *)(v335 + (v86[1] ^ 0xCFLL)) ^ 0x56 ^ (v113 >> 4) ^ (v113 >> 1);
  v115 = *(_BYTE *)(v336 + (v86[10] ^ 0xFBLL));
  v116 = *(_QWORD *)(v62 + 8 * (int)(v81 - 1697)) - 4;
  HIDWORD(v342) = (v115 ^ (16 * v115)) ^ 0x4B;
  v117 = *(_DWORD *)(v116 + 4 * ((v115 ^ (16 * v115)) ^ 0xC4u));
  HIDWORD(v118) = v117 ^ 0x508B;
  LODWORD(v118) = v117 ^ 0x6B5E0000;
  v119 = *(_QWORD *)(v62 + 8 * (v81 & 0x37D05189)) - 12;
  LODWORD(v344) = v104;
  v120 = *(_DWORD *)(v119 + 4 * (v104 ^ 0x21));
  HIDWORD(v347) = v81;
  LODWORD(v342) = v100 - 88;
  v121 = *(_QWORD *)(v62 + 8 * (int)(v81 - 1623)) - 4;
  v122 = (v118 >> 16) ^ *(_DWORD *)(v121 + 4 * ((v100 - 88) ^ 0xF9u)) ^ (16 * (v120 ^ 0xFAB569EA)
                                                                                          - 1931009435
                                                                                          - ((32 * (v120 ^ 0xFAB569EA)) & 0x19CE44C0));
  HIDWORD(v341) = v107 ^ v96;
  v123 = v107 ^ v96 ^ 0xDD03A24B;
  v124 = *(_QWORD *)(v62 + 8 * (int)(v81 ^ 0x699)) - 12;
  v125 = *(_DWORD *)(v116 + 4 * (LODWORD(STACK[0x400]) ^ 0x71u));
  v126 = *(_DWORD *)(v124 + 4 * (v123 ^ 0x33u)) ^ v120 ^ (v122 - 444973301 - ((2 * v122) & 0xCAF47E16));
  HIDWORD(v118) = v125 ^ 0x508B;
  LODWORD(v118) = v125 ^ 0x6B5E0000;
  v343 = __PAIR64__(v112, v114);
  v127 = *(_DWORD *)(v119 + 4 * (v114 ^ 0xBFu)) ^ 0xFAB569EA;
  v128 = (v118 >> 16) ^ (16 * v127 - 1931009435 - ((32 * v127) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * HIBYTE(v123));
  HIDWORD(v340) = (*(_BYTE *)(v338 + (v86[11] ^ 0x12)) + (v86[11] ^ 0xFE) - 49);
  v129 = *(_DWORD *)(v124 + 4 * (HIDWORD(v340) ^ 0xB9u)) ^ v127;
  v130 = *(unsigned __int8 *)(v336 + (v86[2] ^ 0x26)) ^ 0x6A;
  LODWORD(v341) = v130 ^ (16 * v130);
  v131 = *(_DWORD *)(v116 + 4 * (v341 ^ 0xFBu));
  HIDWORD(v118) = v131 ^ 0x508B;
  LODWORD(v118) = v131 ^ 0x6B5E0000;
  v132 = v129 ^ (v128 - 444973301 - ((2 * v128) & 0xCAF47E16));
  HIDWORD(v339) = (v101 - 48);
  v133 = *(_DWORD *)(v119 + 4 * BYTE2(v123)) ^ 0xFAB569EA;
  v134 = (v118 >> 16) ^ *(_DWORD *)(v121 + 4 * (HIDWORD(v339) ^ 0x40u)) ^ (16 * v133
                                                                           - 1931009435
                                                                           - ((32 * v133) & 0x19CE44C0));
  LODWORD(v340) = v346 - 49;
  v135 = *(_DWORD *)(v124 + 4 * ((v346 - 49) ^ 0xEBu)) ^ v133 ^ (v134
                                                                                  - 444973301
                                                                                  - ((2 * v134) & 0xCAF47E16));
  v136 = *(_DWORD *)(v119 + 4 * (v112 ^ 0x2Au)) ^ 0xFAB569EA;
  v137 = *(_DWORD *)(v116 + 4 * (BYTE1(v96) ^ 0x31u));
  HIDWORD(v118) = v137 ^ 0x508B;
  LODWORD(v118) = v137 ^ 0x6B5E0000;
  LODWORD(v339) = HIDWORD(v345) - 88;
  v138 = (v118 >> 16) ^ *(_DWORD *)(v121 + 4 * ((BYTE4(v345) - 88) ^ 0xF7u)) ^ (16 * v136
                                                                                                 - 1931009435
                                                                                                 - ((32 * v136) & 0x19CE44C0));
  LODWORD(v345) = v345 - 49;
  v139 = *(_DWORD *)(v116 + 4 * (BYTE1(v135) ^ 0xF4u));
  v140 = *(_DWORD *)(v124 + 4 * (v345 ^ 0x33u)) ^ v136 ^ (v138 - 444973301 - ((2 * v138) & 0xCAF47E16));
  HIDWORD(v118) = v139 ^ 0x508B;
  LODWORD(v118) = v139 ^ 0x6B5E0000;
  v141 = *(_DWORD *)(v119 + 4 * (BYTE2(v140) ^ 0xBBu)) ^ 0xFAB569EA;
  BYTE1(v114) = BYTE1(v132) ^ 0xAD;
  v142 = v141 ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v126) ^ 0xAD)) ^ *(_DWORD *)(v124
                                                                            + 4 * (v132 ^ 0xDBu)) ^ (16 * v141 - 1931009435 - ((32 * v141) & 0x19CE44C0)) ^ (v118 >> 16);
  v143 = *(_DWORD *)(v119 + 4 * (BYTE2(v126) ^ 0x59u));
  v144 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v140 ^ 0x22E) >> 8));
  HIDWORD(v118) = v144 ^ 0x508B;
  LODWORD(v118) = v144 ^ 0x6B5E0000;
  v145 = (16 * (v143 ^ 0xFAB569EA) - 1931009435 - ((32 * (v143 ^ 0xFAB569EA)) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * ((v132 ^ 0xF15ADDB) >> 24)) ^ (v118 >> 16);
  v146 = *(_DWORD *)(v124 + 4 * (v135 ^ 0x80u)) ^ v143 ^ (v145 - 444973301 - ((2 * v145) & 0xCAF47E16));
  v147 = *(_DWORD *)(v119 + 4 * (BYTE2(v132) ^ 0xD6u)) ^ 0xFAB569EA;
  v148 = (16 * v147 - 1931009435 - ((32 * v147) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v135) ^ 0x19));
  v149 = *(_DWORD *)(v116 + 4 * (BYTE1(v126) ^ 0x8Fu));
  HIDWORD(v118) = v149 ^ 0x508B;
  LODWORD(v118) = v149 ^ 0x6B5E0000;
  v150 = *(_DWORD *)(v124 + 4 * (v140 ^ 0x2Eu)) ^ v147 ^ (v118 >> 16) ^ (v148
                                                                                          - 444973301
                                                                                          - ((2 * v148) & 0xCAF47E16));
  v151 = *(_DWORD *)(v119 + 4 * (BYTE2(v135) ^ 0x32u));
  v152 = *(_DWORD *)(v116 + 4 * BYTE1(v114));
  HIDWORD(v118) = v152 ^ 0x508B;
  LODWORD(v118) = v152 ^ 0x6B5E0000;
  v153 = (v118 >> 16) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v140) ^ 0xBD)) ^ (16 * (v151 ^ 0xFAB569EA)
                                                                         - 1931009435
                                                                         - ((32 * (v151 ^ 0xFAB569EA)) & 0x19CE44C0));
  v154 = v151 ^ *(_DWORD *)(v124 + 4 * (v126 ^ 0x4Au)) ^ 0x8B7CBF2E ^ (v153
                                                                                        - 444973301
                                                                                        - ((2 * v153) & 0xCAF47E16));
  v155 = v154
       - ((2 * v154) & 0x5F186BF6)
       + 797718011
       - ((2 * (v154 - ((2 * v154) & 0x5F186BF6) + 797718011)) & 0x979D1E90)
       + 1271828296;
  v156 = *(_DWORD *)(v119 + 4 * (BYTE2(v155) ^ 0xDu));
  v157 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v150 ^ 0xDFF9) >> 8));
  v158 = (16 * (v156 ^ 0xFAB569EA) - 1931009435 - ((32 * (v156 ^ 0xFAB569EA)) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v142) ^ 0x73)) ^ (((v157 ^ 0x6B5E508Bu) >> (v142 & 0x10) >> (v142 & 0x10 ^ 0x10)) + ((v157 << 16) ^ 0x508B0000));
  v159 = *(_DWORD *)(v124 + 4 * (v146 ^ 0x33u)) ^ v156 ^ (v158
                                                                           - 444973300
                                                                           + ~((2 * v158) & 0xCAF47E16));
  LOWORD(v156) = v142 ^ 0xEB2B;
  v160 = *(_DWORD *)(v119 + 4 * ((v142 ^ 0x9A20EB2B) >> 16)) ^ 0xFAB569EA;
  v161 = *(_DWORD *)(v116 + 4 * (BYTE1(v155) ^ 0x1Cu));
  HIDWORD(v118) = v161 ^ 0x508B;
  LODWORD(v118) = v161 ^ 0x6B5E0000;
  v162 = (16 * v160 - 1931009435 - ((32 * v160) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v146) ^ 0xB1)) ^ (v118 >> 16);
  v163 = *(_DWORD *)(v124 + 4 * (v150 ^ 0xF9u)) ^ v160 ^ (v162 - 444973301 - ((2 * v162) & 0xCAF47E16));
  v164 = *(_DWORD *)(v121 + 4 * (HIBYTE(v150) ^ 5));
  HIDWORD(v118) = v164 ^ 0x265;
  LODWORD(v118) = v164 ^ 0x8CE72000;
  v165 = *(_DWORD *)(v119 + 4 * (BYTE2(v146) ^ 0x80u)) ^ 0xFAB569EA;
  v166 = (((v118 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v165) ^ (((v118 >> 10) ^ 0x25EB099C) >> 22);
  v167 = *(_DWORD *)(v116 + 4 * BYTE1(v156));
  HIDWORD(v118) = v167 ^ 0x508B;
  LODWORD(v118) = v167 ^ 0x6B5E0000;
  v168 = *(_DWORD *)(v124
                   + 4
                   * ((v154
                                      - ((2 * v154) & 0xF6)
                                      - 5
                                      - ((2 * (v154 - ((2 * v154) & 0xF6) - 5)) & 0x90)
                                      + 72) ^ 0x7Bu)) ^ v165 ^ (v118 >> 16) ^ (v166
                                                                             - 444973301
                                                                             - ((2 * v166) & 0xCAF47E16));
  v169 = *(_DWORD *)(v116 + 4 * (BYTE1(v146) ^ 0xA4u));
  HIDWORD(v118) = v169 ^ 0x508B;
  LODWORD(v118) = v169 ^ 0x6B5E0000;
  v170 = *(_DWORD *)(v119 + 4 * ((v150 ^ 0xECEBDFF9) >> 16)) ^ 0xFAB569EA;
  v171 = (v118 >> 16) ^ (16 * v170 - 1931009435 - ((32 * v170) & 0x19CE44C0)) ^ *(_DWORD *)(v121
                                                                                          + 4 * (HIBYTE(v155) ^ 0xA2));
  v172 = *(_DWORD *)(v124 + 4 * (v156 ^ 0x33u)) ^ v170 ^ (v171 - 444973301 - ((2 * v171) & 0xCAF47E16));
  v173 = *(_DWORD *)(v119 + 4 * (BYTE2(v172) ^ 0x62u)) ^ 0xFAB569EA;
  v174 = (16 * v173 - 1931009435 - ((32 * v173) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v159) ^ 0x27));
  BYTE2(v156) = BYTE2(v168) ^ 0xF7;
  v175 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v168 ^ 0xE4A6) >> 8));
  HIDWORD(v118) = v175 ^ 0x508B;
  LODWORD(v118) = v175 ^ 0x6B5E0000;
  v176 = *(_DWORD *)(v124 + 4 * (v163 ^ 0x68u)) ^ v173 ^ (v118 >> 16) ^ (v174
                                                                                          - 444973301
                                                                                          - ((2 * v174) & 0xCAF47E16));
  v177 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v172 ^ 0x2957) >> 8));
  HIDWORD(v118) = v177 ^ 0x508B;
  LODWORD(v118) = v177 ^ 0x6B5E0000;
  v178 = *(_DWORD *)(v119 + 4 * (BYTE2(v159) ^ 0xEEu)) ^ 0xFAB569EA;
  v179 = (16 * v178 - 1931009435 - ((32 * v178) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v163) ^ 0xCE)) ^ (v118 >> 16);
  v180 = *(_DWORD *)(v124 + 4 * (v168 ^ 0x15u)) ^ v178 ^ (v179 - 444973301 - ((2 * v179) & 0xCAF47E16));
  v181 = *(_DWORD *)(v119 + 4 * (BYTE2(v163) ^ 0x60u)) ^ 0xFAB569EA;
  v182 = (16 * v181 - 1931009435 - ((32 * v181) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * ((v168 ^ 0xF1F7E4A6) >> 24));
  v183 = *(_DWORD *)(v116 + 4 * (BYTE1(v159) ^ 0xF2u));
  HIDWORD(v118) = v183 ^ 0x508B;
  LODWORD(v118) = v183 ^ 0x6B5E0000;
  v184 = *(_DWORD *)(v124 + 4 * (v172 ^ 0x57u)) ^ v181 ^ ((v182 ^ (v118 >> 16))
                                                                           - 444973301
                                                                           - ((2 * (v182 ^ (v118 >> 16))) & 0xCAF47E16));
  v185 = *(_DWORD *)(v119 + 4 * BYTE2(v156));
  if ((v163 & 0x1000) != 0)
    v186 = -16;
  else
    v186 = 16;
  v187 = v185 ^ 0xFAB569EA;
  v188 = *(_DWORD *)(v116 + 4 * (((BYTE1(v163) ^ 0xC) + v186) ^ 0x83u));
  v189 = *(_DWORD *)(v121 + 4 * (HIBYTE(v172) ^ 0xA1)) ^ HIWORD(v188) ^ (v188 << 16) ^ (16 * v187
                                                                                        - 1931009435
                                                                                        - ((32 * v187) & 0x19CE44C0)) ^ 0x508B6B5E;
  v190 = *(_DWORD *)(v124 + 4 * (v159 ^ 0x89u)) ^ v187 ^ (v189 - 444973301 - ((2 * v189) & 0xCAF47E16));
  v191 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v184 ^ 0x8D48) >> 8));
  HIDWORD(v192) = v191 ^ 0x508B;
  LODWORD(v192) = v191 ^ 0x6B5E0000;
  v193 = *(_DWORD *)(v119 + 4 * ((v190 ^ 0xEFBC3B44) >> 16)) ^ 0xFAB569EA;
  v194 = (v192 >> 16) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v176) ^ 0xCC)) ^ (16 * v193
                                                                         - 1931009435
                                                                         - ((32 * v193) & 0x19CE44C0));
  v195 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v190 ^ 0x3B44) >> 8));
  HIDWORD(v192) = v195 ^ 0x508B;
  LODWORD(v192) = v195 ^ 0x6B5E0000;
  v196 = *(_DWORD *)(v124 + 4 * (v180 ^ 0xA9u)) ^ v193 ^ (v194 - 444973301 - ((2 * v194) & 0xCAF47E16));
  LOWORD(v194) = v176 ^ 0xD583;
  v197 = *(_DWORD *)(v119 + 4 * (((v176 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0xFAB569EA;
  v198 = (v192 >> 16) ^ *(_DWORD *)(v121 + 4 * HIBYTE(v180)) ^ (16 * v197 - 1931009435 - ((32 * v197) & 0x19CE44C0));
  v199 = *(_DWORD *)(v124 + 4 * (v184 ^ 0x48u)) ^ v197 ^ (v198 - 444973301 - ((2 * v198) & 0xCAF47E16));
  v200 = *(_DWORD *)(v116 + 4 * BYTE1(v194));
  HIDWORD(v192) = v200 ^ 0x508B;
  LODWORD(v192) = v200 ^ 0x6B5E0000;
  v201 = *(_DWORD *)(v119 + 4 * ((v180 ^ 0xE93411A9) >> 16)) ^ 0xFAB569EA;
  v202 = (16 * v201 - 1931009435 - ((32 * v201) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * ((v184 ^ 0x807D8D48) >> 24)) ^ (v192 >> 16);
  v203 = *(_DWORD *)(v116 + 4 * (BYTE1(v180) ^ 0x82u));
  v204 = *(_DWORD *)(v124 + 4 * (v190 ^ 0x77u)) ^ v201 ^ (v202 - 444973301 - ((2 * v202) & 0xCAF47E16));
  HIDWORD(v192) = v203 ^ 0x508B;
  LODWORD(v192) = v203 ^ 0x6B5E0000;
  v205 = *(_DWORD *)(v119 + 4 * (BYTE2(v184) ^ 0xBEu)) ^ 0xFAB569EA;
  v206 = (v192 >> 16) ^ *(_DWORD *)(v121 + 4 * ((v190 ^ 0xEFBC3B44) >> 24)) ^ (16 * v205
                                                                               - 1931009435
                                                                               - ((32 * v205) & 0x19CE44C0));
  v207 = *(_DWORD *)(v124 + 4 * v194) ^ v205 ^ (v206 - 444973301 - ((2 * v206) & 0xCAF47E16));
  v208 = *(_DWORD *)(v119 + 4 * ((v207 ^ 0x950DA39D) >> 16)) ^ 0xFAB569EA;
  v209 = *(_DWORD *)(v116 + 4 * (BYTE1(v204) ^ 0x89u));
  v210 = (16 * v208 - 1931009435 - ((32 * v208) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * ((v196 ^ 0x11521BCA) >> 24));
  HIDWORD(v192) = v209 ^ 0x508B;
  LODWORD(v192) = v209 ^ 0x6B5E0000;
  v211 = v210 - 444973301 - ((2 * v210) & 0xCAF47E16);
  BYTE1(v210) = BYTE1(v199) ^ 0xD1;
  v212 = *(_DWORD *)(v119 + 4 * ((v196 ^ 0x11521BCA) >> 16));
  v213 = *(_DWORD *)(v124 + 4 * (v199 ^ 0x88u)) ^ v208 ^ (v192 >> 16) ^ 0x71C9D6C4 ^ v211;
  v214 = v213 - ((2 * v213) & 0x13A16390);
  v215 = *(_DWORD *)(v116 + 4 * (BYTE1(v207) ^ 0x30u));
  HIDWORD(v192) = v215 ^ 0x508B;
  LODWORD(v192) = v215 ^ 0x6B5E0000;
  v216 = (16 * (v212 ^ 0xFAB569EA) - 1931009435 - ((32 * (v212 ^ 0xFAB569EA)) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v199) ^ 0xDF)) ^ (v192 >> 16);
  v204 ^= 0x7A851A70u;
  v217 = *(_DWORD *)(v124 + 4 * (v204 ^ 0x33u)) ^ v212 ^ (v216 - 444973301 - ((2 * v216) & 0xCAF47E16));
  v218 = *(_DWORD *)(v119 + 4 * (BYTE2(v199) ^ 0xA7u)) ^ 0xFAB569EA;
  v219 = *(_DWORD *)(v116 + 4 * (BYTE1(v196) ^ 0x88u));
  HIDWORD(v192) = v219 ^ 0x508B;
  LODWORD(v192) = v219 ^ 0x6B5E0000;
  v220 = (16 * v218 - 1931009435 - ((32 * v218) & 0x19CE44C0)) ^ (v192 >> 16) ^ *(_DWORD *)(v121
                                                                                          + 4
                                                                                          * ((HIBYTE(v204) ^ -HIBYTE(v204) ^ ((HIBYTE(v204) ^ 0xFFFFFF16) + 234))
                                                                                           + 233));
  v221 = *(_DWORD *)(v124 + 4 * (v207 ^ 0x9Du)) ^ v218 ^ (v220 - 444973301 - ((2 * v220) & 0xCAF47E16));
  v222 = *(_DWORD *)(v116 + 4 * BYTE1(v210));
  HIDWORD(v192) = v222 ^ 0x508B;
  LODWORD(v192) = v222 ^ 0x6B5E0000;
  v223 = *(_DWORD *)(v119 + 4 * BYTE2(v204));
  v224 = (v192 >> 16) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v207) ^ 0x7C)) ^ (16 * (v223 ^ 0xFAB569EA)
                                                                         - 1931009435
                                                                         - ((32 * (v223 ^ 0xFAB569EA)) & 0x19CE44C0));
  v225 = *(_DWORD *)(v124 + 4 * (v196 ^ 0xF9u)) ^ v223 ^ (v224 - 444973301 - ((2 * v224) & 0xCAF47E16));
  v226 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v221 ^ 0xDE69) >> 8));
  HIDWORD(v192) = v226 ^ 0x508B;
  LODWORD(v192) = v226 ^ 0x6B5E0000;
  v227 = *(_DWORD *)(v119 + 4 * (BYTE2(v225) ^ 0x32u));
  v228 = v214 + 164671944;
  v229 = (v192 >> 16) ^ *(_DWORD *)(v121 + 4 * (((v214 + 164671944) >> 24) ^ 0x60)) ^ (16 * (v227 ^ 0xFAB569EA) - 1931009435 - ((32 * (v227 ^ 0xFAB569EA)) & 0x19CE44C0));
  v230 = *(_DWORD *)(v116 + 4 * (BYTE1(v225) ^ 0x56u));
  HIDWORD(v192) = v230 ^ 0x508B;
  LODWORD(v192) = v230 ^ 0x6B5E0000;
  v231 = *(_DWORD *)(v124 + 4 * (v217 ^ 0x39u)) ^ v227 ^ (v229 - 444973301 - ((2 * v229) & 0xCAF47E16));
  v232 = *(_DWORD *)(v119 + 4 * (BYTE2(v228) ^ 0xBAu)) ^ 0xFAB569EA;
  v233 = v232 ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v217) ^ 0x27)) ^ *(_DWORD *)(v124
                                                                            + 4 * (v221 ^ 0x69u)) ^ ((v192 >> 16) - 444973301 - ((2 * (v192 >> 16)) & 0xCAF47E16)) ^ (16 * v232 - 1931009435 - ((32 * v232) & 0x19CE44C0));
  v234 = *(_DWORD *)(v119 + 4 * (BYTE2(v217) ^ 0x4Fu)) ^ 0xFAB569EA;
  v235 = *(_DWORD *)(v116 + 4 * (BYTE1(v228) ^ 0xDAu));
  HIDWORD(v192) = v235 ^ 0x508B;
  LODWORD(v192) = v235 ^ 0x6B5E0000;
  v236 = (16 * v234 - 1931009435 - ((32 * v234) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * ((v221 ^ 0x5FEEDE69) >> 24)) ^ (v192 >> 16);
  v237 = *(_DWORD *)(v124
                   + 4
                   * ((((v225 ^ 0xA5) + (v225 ^ 0xFFFFFF69) + 1) ^ 0xFFFFFFFE)
                    + (v225 ^ 0xA5))) ^ v234 ^ (v236 - 444973301 - ((2 * v236) & 0xCAF47E16));
  v238 = *(_DWORD *)(v119 + 4 * (BYTE2(v221) ^ 0x2Du)) ^ 0xFAB569EA;
  v239 = *(_DWORD *)(v116 + 4 * (BYTE1(v217) ^ 0xB6u));
  HIDWORD(v192) = v239 ^ 0x508B;
  LODWORD(v192) = v239 ^ 0x6B5E0000;
  v240 = (v192 >> 16) ^ (16 * v238 - 1931009435 - ((32 * v238) & 0x19CE44C0)) ^ *(_DWORD *)(v121
                                                                                          + 4
                                                                                          * ((HIBYTE(v225) ^ 0xEF) & 0x90 ^ 0x86u ^ (~(2 * (HIBYTE(v225) ^ 0xEF | 0x90)) + (HIBYTE(v225) ^ 0xEF | 0x90))));
  v241 = *(_DWORD *)(v124 + 4 * (v228 ^ 0x93u)) ^ v238 ^ (v240
                                                                           - 444973300
                                                                           + ~((2 * v240) & 0xCAF47E16));
  v242 = *(_DWORD *)(v119 + 4 * ((v241 ^ 0x59A5F4B7) >> 16)) ^ 0xFAB569EA;
  v243 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v237 ^ 0x872B) >> 8));
  HIDWORD(v192) = v243 ^ 0x508B;
  LODWORD(v192) = v243 ^ 0x6B5E0000;
  v244 = (16 * v242 - 1931009435 - ((32 * v242) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v231) ^ 0x28)) ^ (v192 >> 16);
  v245 = *(_DWORD *)(v124 + 4 * (v233 ^ 0xEEu)) ^ v242 ^ (v244 - 444973301 - ((2 * v244) & 0xCAF47E16));
  v246 = *(_DWORD *)(v119 + 4 * (BYTE2(v231) ^ 0x90u)) ^ 0xFAB569EA;
  v247 = *(_DWORD *)(v116 + 4 * (BYTE1(v241) ^ 0x67u));
  HIDWORD(v192) = v247 ^ 0x508B;
  LODWORD(v192) = v247 ^ 0x6B5E0000;
  v248 = v246 ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v233) ^ 0xD6)) ^ *(_DWORD *)(v124
                                                                            + 4 * (v237 ^ 0x18u)) ^ (16 * v246 - 1931009435 - ((32 * v246) & 0x19CE44C0)) ^ ((v192 >> 16) - 444973301 - ((2 * (v192 >> 16)) & 0xCAF47E16));
  v249 = *(_DWORD *)(v119 + 4 * (BYTE2(v233) ^ 0x56u)) ^ 0xFAB569EA;
  v250 = *(_DWORD *)(v116 + 4 * (BYTE1(v231) ^ 0xD2u));
  HIDWORD(v192) = v250 ^ 0x508B;
  LODWORD(v192) = v250 ^ 0x6B5E0000;
  v251 = *(_DWORD *)(v121 + 4 * ((v237 ^ 0x911B872B) >> 24)) ^ v249 ^ 0x6D41727E ^ (16 * v249
                                                                                    - 1931009435
                                                                                    - ((32 * v249) & 0x19CE44C0)) ^ (v192 >> 16);
  HIDWORD(v192) = *(_DWORD *)(v124 + 4 * (v241 ^ 0xB7u)) ^ 0xF9F29BB1;
  LODWORD(v192) = HIDWORD(v192);
  v252 = (v192 >> 21) ^ __ROR4__(v251, 21);
  v253 = *(_DWORD *)(v119 + 4 * (BYTE2(v237) ^ 0xD8u)) ^ 0xFAB569EA;
  v254 = *(_DWORD *)(v116 + 4 * (BYTE1(v233) ^ 0xE4u));
  HIDWORD(v192) = v254 ^ 0x508B;
  LODWORD(v192) = v254 ^ 0x6B5E0000;
  v255 = (v192 >> 16) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v241) ^ 0xB0)) ^ (16 * v253
                                                                         - 1931009435
                                                                         - ((32 * v253) & 0x19CE44C0));
  v256 = *(_DWORD *)(v124 + 4 * (v231 ^ 0x4Cu)) ^ v253 ^ (v255 - 444973301 - ((2 * v255) & 0xCAF47E16));
  v257 = *(_DWORD *)(v119 + 4 * (BYTE2(v245) ^ 0x74u)) ^ 0xFAB569EA;
  v258 = *(_DWORD *)(v116 + 4 * (BYTE1(v256) ^ 0x66u));
  HIDWORD(v192) = v258 ^ 0x508B;
  LODWORD(v192) = v258 ^ 0x6B5E0000;
  v259 = v248 ^ 0x177CD9D9;
  v260 = *(_DWORD *)(v121 + 4 * ((v248 ^ 0x177CD9D9u) >> 24)) ^ 0x6D41727E ^ v257 ^ (v192 >> 16) ^ (16 * v257 - 1931009435 - ((32 * v257) & 0x19CE44C0));
  HIDWORD(v192) = v252 ^ 0x549BF9D9;
  LODWORD(v192) = v252 ^ 0x549BF9D9;
  v261 = v192 >> 11;
  v262 = (v260 & 0x200 ^ 0xF7BFFFBF) + 2 * (v260 & 0x200);
  v263 = *(_DWORD *)(v124 + 4 * ((v192 >> 11) ^ 0xEFu));
  v109 = ((v262 + 138412097) & (v263 ^ 0xE57A3F0B)) == 0;
  v264 = *(_DWORD *)(v119 + 4 * (BYTE2(v256) ^ 0x72u)) ^ 0xFAB569EA;
  v265 = *(_DWORD *)(v116 + 4 * (BYTE1(v261) ^ 0xA0u));
  HIDWORD(v192) = v265 ^ 0x508B;
  LODWORD(v192) = v265 ^ 0x6B5E0000;
  v266 = (v192 >> 16) ^ *(_DWORD *)(v121 + 4 * ((v245 ^ 0xD4B73D47) >> 24)) ^ (16 * v264
                                                                               - 1931009435
                                                                               - ((32 * v264) & 0x19CE44C0));
  v267 = *(_DWORD *)(v124 + 4 * (v248 ^ 0xEAu)) ^ v264 ^ (v266 - 444973301 - ((2 * v266) & 0xCAF47E16));
  v268 = v262 + 1582825436;
  v269 = 1306001242 - v262;
  if (v109)
    v269 = v268;
  v270 = ((v263 ^ 0xF9F29BB1) - 1444413339 + v269) ^ v260 & 0xFFFFFDFF;
  v271 = *(_DWORD *)(v119 + 4 * BYTE2(v259)) ^ 0xFAB569EA;
  v272 = (16 * v271 - 1931009435 - ((32 * v271) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * ((v261 ^ 0x1EA133EFu) >> 24));
  v273 = *(_DWORD *)(v116 + 4 * (BYTE1(v245) ^ 0xAEu));
  HIDWORD(v274) = v273 ^ 0x508B;
  LODWORD(v274) = v273 ^ 0x6B5E0000;
  v275 = *(_DWORD *)(v124 + 4 * (v256 ^ 0xDu)) ^ v271 ^ (v274 >> 16) ^ (v272
                                                                                         - 444973301
                                                                                         - ((2 * v272) & 0xCAF47E16));
  v276 = *(_DWORD *)(v119 + 4 * (BYTE2(v261) ^ 0x62u)) ^ 0xFAB569EA;
  v277 = *(_DWORD *)(v116 + 4 * BYTE1(v259));
  HIDWORD(v274) = v277 ^ 0x508B;
  LODWORD(v274) = v277 ^ 0x6B5E0000;
  v278 = (16 * v276 - 1931009435 - ((32 * v276) & 0x19CE44C0)) ^ *(_DWORD *)(v121 + 4 * (HIBYTE(v256) ^ 0x32)) ^ (v274 >> 16);
  v279 = *(_DWORD *)(v124 + 4 * (v245 ^ 0x74u)) ^ v276 ^ (v278 - 444973301 - ((2 * v278) & 0xCAF47E16));
  v280 = v93;
  v281 = *(_QWORD *)(v62 + 8 * (int)(v93 ^ 0x64D)) - 4;
  v282 = v270 ^ 0xF137909F;
  v283 = *(_QWORD *)(v62 + 8 * (int)(v93 - 1735)) - 4;
  v284 = *(_DWORD *)(v283 + 4 * (BYTE2(v267) ^ 0x99u)) ^ 0x605C11DF;
  v285 = *(_QWORD *)(v62 + 8 * (int)(v93 - 1692)) - 12;
  v286 = (*(_DWORD *)(v281 + 4 * (((v270 ^ 0xF137909F) >> 24) ^ 0xB4))
        + (((v270 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
        - 1357639561) ^ ((v275 ^ 0x7B) - 487388940 + ((2 * (v275 ^ 0xBC37B) + 224) & 0x106 ^ 0x37FDDFFF)) ^ v284 ^ (v284 >> 2) ^ *(_DWORD *)(v285 + 4 * (v275 ^ 0x79u)) ^ (v284 >> 4);
  v287 = *(_QWORD *)(v62 + 8 * (int)(v93 - 1678)) - 12;
  v288 = v279 ^ 0x250E7C9C;
  v289 = *(_DWORD *)(v287 + 4 * ((unsigned __int16)(v279 ^ 0x7C9C) >> 8)) ^ 0x407B784D;
  v290 = *(_DWORD *)(v281 + 4 * (((v267 ^ 0x6792B6A6) >> 24) ^ 0xB4));
  v291 = HIBYTE(v275);
  v292 = *(_DWORD *)(v281 + 4 * (HIBYTE(v275) ^ 0xB4));
  v293 = (v279 ^ 0x250E7C9C) >> 24;
  v294 = *(_DWORD *)(v283 + 4 * (BYTE2(v279) ^ 5u));
  v295 = *(_DWORD *)(v283 + 4 * ((v270 ^ 0xF137909F) >> 16));
  HIDWORD(v345) = *(_DWORD *)(v283 + 4 * ((v275 ^ 0xBC37B) >> 16));
  LODWORD(v347) = *(_DWORD *)(v281 + 4 * (v293 ^ 0xB4));
  v296 = *(_DWORD *)(v287 + 4 * ((unsigned __int16)(v275 ^ 0xC37B) >> 8));
  v297 = *(_DWORD *)(v287 + 4 * ((unsigned __int16)(v267 ^ 0xB6A6) >> 8));
  v298 = *(unsigned int *)(v287 + 4 * (BYTE1(v270) ^ 0x5Eu));
  LODWORD(v287) = *(_DWORD *)(v285 + 4 * (v270 ^ 0x9Du));
  v299 = *(_DWORD *)(v285 + 4 * (v279 ^ 0x9Eu));
  v300 = *(_DWORD *)(v285 + 4 * (v267 ^ 0xA4u));
  v301 = ((v286 ^ v289 ^ (1515496080 * v289))
        - 2008348587
        - ((2 * (v286 ^ v289 ^ (1515496080 * v289))) & 0x109610FA)
        + 40) ^ LODWORD(STACK[0x2B8]);
  v302 = (char *)*(&off_1021378F0 + (int)(v93 ^ 0x64E)) - 4;
  v333[5] = v302[((v301 ^ 0x5244C6B3) >> 16) ^ 0x5ELL] ^ ((v301 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v301 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v301 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0xDF) - 26) ^ 0xB9;
  v303 = v294 ^ 0x605C11DF ^ ((((v267 ^ 0x6792B6A6) >> 24) ^ 0x9FD52929) - 1357639561 + v290) ^ ((v294 ^ 0x605C11DFu) >> 2) ^ ((v294 ^ 0x605C11DFu) >> 4) ^ v296 ^ 0x407B784D ^ v287 ^ (1515496080 * (v296 ^ 0x407B784D)) ^ (v282 - 487388940 + ((2 * v282 + 224) & 0x106 ^ 0x37FDDFFF));
  v304 = (v303 + 1582360328 - ((2 * v303) & 0xBCA1CE10)) ^ LODWORD(STACK[0x390]);
  v305 = v304 ^ 0x22A932A6;
  v306 = (BYTE1(v305) | 0x88) ^ (v305 >> 8) & 0x88;
  v307 = (char *)*(&off_1021378F0 + (int)(v93 & 0xE15CF15A)) - 8;
  v333[2] = (((unsigned __int16)(v304 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v304 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v307[v306 ^ 0x14] ^ 0x2F) - ((2 * v307[v306 ^ 0x14]) & 0x20) - 112);
  v308 = v295 ^ 0x605C11DF ^ ((v291 ^ 0x9FD52929) - 1357639561 + v292) ^ ((v295 ^ 0x605C11DFu) >> 2) ^ ((v295 ^ 0x605C11DFu) >> 4);
  v309 = (v308 & 0x1000000 ^ 0x5BDFFFE3) + 2 * (v308 & 0x1000000);
  v310 = (char *)*(&off_1021378F0 + (HIDWORD(v347) ^ 0x6FD)) - 4;
  v311 = v310[HIBYTE(v301) ^ 0xEFLL];
  v109 = ((v309 - 1541406691) & (v299 ^ 0x66000000)) == 0;
  HIDWORD(v274) = v311 ^ 0xB;
  LODWORD(v274) = (v311 ^ 0xFFFFFFBF) << 24;
  v333[STACK[0x2E0]] = (v274 >> 29) ^ 0x83;
  v312 = v309 - 8482976;
  v313 = -1220636890 - v309;
  if (v109)
    v313 = v312;
  v314 = v308 & 0xFEFFFFFF ^ (1515496080 * (v297 ^ 0x407B784D)) ^ ((v299 ^ (v288
                                                                          - 487388940
                                                                          + ((2
                                                                            * ((v288 + 112) & 0x8F ^ (v288 | 0x7FFFFFF3))) ^ 0xC8022019)))
                                                                 - 1532923715
                                                                 + v313);
  v315 = v297 ^ 0x407B784D ^ LODWORD(STACK[0x3C0]) ^ (v314 - 1373544826 - ((2 * v314) & 0x5C42BD0C));
  v316 = v297 ^ 0x4Du ^ LOBYTE(STACK[0x3C0]) ^ (v314 - 122 - ((2 * v314) & 0xC)) ^ 0x28;
  v317 = (char *)*(&off_1021378F0 + (int)(v280 - 1693)) - 4;
  v333[11] = v317[v316] & 0xFB ^ 0xCB ^ ((v317[v316] | 0xFB) + 24);
  LODWORD(v316) = v310[HIBYTE(v304) ^ 0xF9];
  HIDWORD(v318) = v316 ^ 0xB;
  LODWORD(v318) = (v316 ^ 0xFFFFFFBF) << 24;
  v319 = STACK[0x288];
  v333[STACK[0x288]] = (v318 >> 29) ^ 0xFB;
  v333[STACK[0x200]] = BYTE2(v305) ^ 0x61 ^ ((BYTE2(v305) ^ 0x61) - ((2 * (BYTE2(v305) ^ 0x61) - 18) & 0xDE) - 26) ^ 0xB8 ^ v302[BYTE2(v305) ^ 0xB5];
  v320 = (v293 ^ 0x9FD52929) - 1357639561 + v347;
  v321 = HIDWORD(v345) ^ 0x605C11DF ^ ((HIDWORD(v345) ^ 0x605C11DFu) >> 4) ^ ((HIDWORD(v345) ^ 0x605C11DFu) >> 2);
  v322 = (v321 & 0x80000 ^ 0xDF7DB6AD) + 2 * (v321 & 0x80000);
  v109 = ((v322 + 545409363) & v320) == 0;
  v323 = v322 + 1996455807;
  v324 = 905637081 - v322;
  if (v109)
    v324 = v323;
  v325 = v300 ^ ((v267 ^ 0xA6) + 2096205936) ^ (((v320 - 1451046444 + v324) ^ v321 & 0xFFF7FFFF ^ (1515496080 * (v298 ^ 0x407B784D)))
                                                               + 1711372420
                                                               + ~(2
                                                                 * (((v320 - 1451046444 + v324) ^ v321 & 0xFFF7FFFF ^ (1515496080 * (v298 ^ 0x407B784D))) & 0x6601788B ^ ((v320 - 1451046444 + v324) ^ v321 & 0xFFF7FFFF) & 8)));
  v326 = v298 ^ LODWORD(STACK[0x3E0]) ^ (v325 - 1962259125 - ((2 * v325) & 0x16149AF6) + 48);
  v333[STACK[0x258]] = v302[(BYTE2(v326) ^ 0xE0) + 213 + ((v326 >> 15) & 0x1A8 ^ 0xFFFFFE7F)] ^ BYTE2(v326) ^ ((BYTE2(v326) ^ 0xE0) - ((2 * (BYTE2(v326) ^ 0xE0) - 18) & 0xDF) - 26) ^ 0x66;
  v327 = v310[HIBYTE(v326) ^ 0xBALL];
  HIDWORD(v328) = v327 ^ 0xB;
  LODWORD(v328) = (v327 ^ 0xFFFFFFBF) << 24;
  v333[STACK[0x380]] = (v328 >> 29) ^ 0x50;
  v333[STACK[0x248]] = ((v315 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v315 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                           - ((2 * (((v315 ^ 0xCFDDD967) >> 16) ^ 0x94) - 18) & 0xDF)
                                                           - 26) ^ v302[((v315 ^ 0xCFDDD967) >> 16) ^ 0x40] ^ 0xC;
  v329 = (((v326 ^ 0x1F4EEA62) >> 4) & 0xF0 | ((unsigned __int16)(v326 ^ 0xEA62) >> 12)) ^ 0xE6;
  v333[STACK[0x3D8]] = v307[((v329 >> 4) & 0xFFFFFF0F | (16 * (v329 & 0xF))) ^ 0xAELL] ^ (((v329 >> 4) & 0xF | (16 * (v329 & 0xF)))
                                                                                        - ((2
                                                                                          * ((v329 >> 4) & 0xF | (16 * (v329 & 0xF)))) & 0x5E)
                                                                                        + 47) ^ 0x2B;
  v333[STACK[0x228]] = (((unsigned __int16)(v315 ^ 0xD967) >> 8) - (((v315 ^ 0xCFDDD967) >> 7) & 0x5E) + 47) ^ 0xDB ^ v307[((unsigned __int16)(v315 ^ 0xD967) >> 8) ^ 0xA0];
  v333[STACK[0x3D0]] = (((unsigned __int16)(v301 ^ 0xC6B3) >> 8) - (((v301 ^ 0x5244C6B3) >> 7) & 0x5E) + 47) ^ v307[((unsigned __int16)(v301 ^ 0xC6B3) >> 8) ^ 0x75] ^ 0x80;
  v333[STACK[0x388]] = v317[v304 ^ 0x95] ^ 0x75;
  v333[STACK[0x2E8]] = v317[v301 ^ 0x7FLL] ^ 0xE4;
  v333[STACK[0x3F8]] = v317[v326 ^ 0xCDLL] ^ 0x4B;
  v330 = v310[HIBYTE(v315) ^ 0x49];
  HIDWORD(v328) = v330 ^ 0xB;
  LODWORD(v328) = (v330 ^ 0xFFFFFFBF) << 24;
  v333[STACK[0x3B8]] = (v328 >> 29) ^ 0x2E;
  v331 = (_DWORD)v319 - 1329604680 - ((2 * (_DWORD)v319 + 32) & 0x617FAF70u) + 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((465 * ((v331 ^ 0xB0BFD7B0) < 0x150)) ^ HIDWORD(v347))) - 12))(905637081, v331, 11, v298, 230, v310, HIDWORD(v347), v317, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v333,
           v334,
           v335,
           v336,
           v337,
           v338,
           v339,
           v340,
           v341,
           v342,
           v343,
           v344,
           v345,
           v347,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           2,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

void sub_1003CB90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,unsigned __int8 a27,int a28,unsigned __int8 a29,int a30,int a31,int a32,unsigned __int8 a33,int a34,int a35,char a36,__int16 a37,unsigned __int8 a38)
{
  LODWORD(STACK[0x390]) = (a38 | ((a31 ^ 0xC) << 24) | ((a33 ^ 0x92) << 16) | ((a29 ^ 0xEF) << (a36 + 39))) ^ 0xC6D03468;
  LODWORD(STACK[0x2B8]) = a30 ^ 0x8FCA7CFE;
  LODWORD(STACK[0x3C0]) = ((a32 << 8) | (a26 << 24) | ((a34 ^ 0x53) << 16) | a28) ^ 0x87FF7439;
  LODWORD(STACK[0x3E0]) = ((((a35 ^ 0x8A) << 16) + ((a25 ^ 0x1A) << 24)) | a27 | ((LODWORD(STACK[0x400]) ^ a5) << 8)) ^ 0x989BE4EA;
  JUMPOUT(0x1003C99C4);
}

uint64_t sub_1003CB9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v21 = STACK[0x458];
  STACK[0x648] -= 32;
  *(_BYTE *)(v21 + 335) = *(_BYTE *)(a14 + 335) ^ (15 * ((a19 - 75) & 0xED ^ 0x86)) ^ *(_BYTE *)(*(_QWORD *)(v20 + 8 * (a19 - 790))
                                                                                               + 15) ^ *(_BYTE *)(*(_QWORD *)(v20 + 8 * (a19 ^ 0x3FC)) + 5) ^ *(_BYTE *)(*(_QWORD *)(v20 + 8 * (a19 - 607)) + 10) ^ 0xC1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * a19) - 12))();
}

void sub_1003CBAB8()
{
  JUMPOUT(0x1003CBA38);
}

uint64_t sub_1003CBAC0()
{
  int v0;
  uint64_t v1;

  STACK[0x530] -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x18Cu)) - (v0 ^ 0x615u) + 740))();
}

uint64_t sub_1003CBAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _BYTE *a16)
{
  int v16;
  uint64_t v17;
  _BYTE *v18;
  unsigned int v19;

  v18 = (_BYTE *)STACK[0x4B8];
  v19 = 34808720 - ((v16 + 69616686) & 2);
  a16[12] = (HIBYTE(v19) ^ 2) - ((v19 >> 23) & 0x82) - 63;
  a16[13] = (BYTE2(v19) ^ 0x13) - ((2 * (BYTE2(v19) ^ 0x13)) & 0x83) - 63;
  a16[14] = (BYTE1(v19) ^ 0x23) - ((2 * (BYTE1(v19) ^ 0x23)) & 0x83) - 63;
  a16[15] = v19 ^ 0x4E;
  v18[16] ^= *a16 ^ 0xC1;
  v18[17] ^= a16[1] ^ 0xC1;
  v18[18] ^= a16[2] ^ 0xC1;
  v18[19] ^= a16[3] ^ 0xC1;
  v18[20] ^= a16[4] ^ 0xC1;
  v18[21] ^= a16[5] ^ 0xC1;
  v18[22] ^= a16[6] ^ 0xC1;
  v18[23] ^= a16[7] ^ 0xC1;
  v18[24] ^= a16[8] ^ 0xC1;
  v18[25] ^= a16[9] ^ 0xC1;
  v18[26] ^= a16[10] ^ 0xC1;
  v18[27] ^= a16[11] ^ 0xC1;
  v18[28] ^= a16[12] ^ 0xC1;
  v18[29] ^= a16[13] ^ 0xC1;
  v18[30] ^= a16[14] ^ 0xC1;
  v18[31] ^= a16[15] ^ 0xC1;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * (v16 - 296)) - 12))(1605, 755);
}

void sub_1003CBCF8()
{
  JUMPOUT(0x1003CBB1CLL);
}

uint64_t sub_1003CBD00(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((LODWORD(STACK[0x478]) != 494613942) * ((((v2 + 832) ^ a1) + 635) ^ a2)) ^ (v2 + 832)))
                            - 4))();
}

uint64_t sub_1003CBD40@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((255
                                          * (*(unsigned __int8 *)(v2 + (v1 + v3 + a1 + 1467 - 1585)) != 193)) ^ a1))
                            - 4))();
}

uint64_t sub_1003CBD80(int a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 != 494613942) * (((v2 ^ a1) + 635) ^ a2)) ^ v2)) - 4))();
}

uint64_t sub_1003CBDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  LODWORD(STACK[0x478]) = 494613942;
  v41 = STACK[0x4B8];
  v42 = (v39 + 1126);
  STACK[0x590] = v42 - 1543;
  *(_BYTE *)(v41 + v42 - 1543) = (a39 ^ 0xBA) * (a39 + 17);
  return (*(uint64_t (**)(void))(v40 + 8 * (((4 * (STACK[0x590] != 0)) | ((STACK[0x590] != 0) << 6)) ^ (v39 + 838))))();
}

void sub_1003CC2A0()
{
  JUMPOUT(0x1003CC25CLL);
}

uint64_t sub_1003CC2A8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = ((uint64_t (*)(void))STACK[0x2C8])();
  LODWORD(STACK[0x668]) = v3;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((((v0 ^ v1) - 37) ^ v0 ^ v1) * (v3 == 1810546658)) ^ v0)))(v4);
}

uint64_t sub_1003CC2E0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v6;

  v4 = STACK[0x3E8];
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 - 709))
                                                                                             - 8);
  v6 = STACK[0x250];
  STACK[0x3E0] = STACK[0x250] + 2353;
  STACK[0x3D8] = v4 + 49;
  STACK[0x3D0] = v6 + 2333;
  STACK[0x3C8] = v4 + 29;
  STACK[0x3C0] = v6 + 2313;
  STACK[0x3B8] = v4 + 9;
  return v5(a1, a2, 2484462651, 211, 3136073784, 101, 1325214580);
}

void sub_1003CCB2C()
{
  int v0;

  LODWORD(STACK[0x660]) = v0;
  JUMPOUT(0x1003CCAB4);
}

uint64_t sub_1003CCB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60)
{
  int v60;
  unint64_t v61;
  uint64_t v62;
  int v63;

  STACK[0x3F8] = v61;
  v63 = STACK[0x598];
  *(_DWORD *)(STACK[0x690] + (((a60 & 0xA9A187ED ^ (a5 + 357)) + v63) & 0xFFFFFFFC)) = v60;
  LODWORD(STACK[0x598]) = v63 + 4;
  return (*(uint64_t (**)(void))(v62
                              + 8
                              * (int)((1587
                                     * ((((a60 & 0xA9A187ED) - 1275415350) & 0x4C054996 ^ (a5 + 6)) + v63 + 4 < 0x40)) ^ a60 & 0xA9A187ED)))();
}

uint64_t sub_1003CDD60@<X0>(int a1@<W4>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;

  v9 = *(_DWORD *)(a3 + 4 * (a1 + v5 - 8)) ^ *(_DWORD *)(a3 + 4 * (a1 + v5 - 3));
  HIDWORD(v10) = *(_DWORD *)(a3 + 4 * (a1 + v5 - 16)) ^ *(_DWORD *)(a3
                                                                                  + 4 * (a1 + v5 - 14)) ^ (v9 + a2 - ((((v3 - 199) | 3) ^ (v7 - 193)) & (2 * v9))) ^ a2;
  LODWORD(v10) = *(_DWORD *)(a3 + 4 * (a1 + v5 - 16)) ^ *(_DWORD *)(a3
                                                                                  + 4 * (a1 + v5 - 14)) ^ (v9 + a2 - ((((v3 - 199) | 3) ^ (v7 - 193)) & (2 * v9)));
  *(_DWORD *)(a3 + 4 * (v4 + a1)) = (v10 >> 31) + a2 - (v7 & (2 * (v10 >> 31)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v4 + 1 + a1) < 0x50) * v6) ^ v3)))();
}

uint64_t sub_1003CDDEC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 4))();
}

void sub_1003CDEBC()
{
  JUMPOUT(0x1003CDE04);
}

uint64_t sub_1003CDED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;

  return (*(uint64_t (**)(void))(v6 + 8 * ((1674 * ((v7 + 21 + a5) < 0x28)) ^ (7 * (v5 ^ 0x5BC)))))();
}

void sub_1003CDFA4()
{
  JUMPOUT(0x1003CDEE8);
}

uint64_t sub_1003CDFBC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(_QWORD))(v7 + 8 * ((((a2 + 1 + a5) < 0x3C) * a6) ^ v6)))((v8 + 60));
}

uint64_t sub_1003CE084(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((1145 * ((a1 + 1 + a5) > 0x4F)) ^ v5)))();
}

void sub_1003CE148(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;

  LODWORD(STACK[0x638]) = v7;
  LODWORD(STACK[0x524]) = v11;
  LODWORD(STACK[0x634]) = v8;
  LODWORD(STACK[0x4B0]) = v10;
  LODWORD(STACK[0x598]) = v13 + 80;
  v14 = STACK[0x680];
  v15 = *(_DWORD *)(STACK[0x680] - 0x6EDAADCA9171F7F5);
  LODWORD(STACK[0x4D4]) = v9;
  v16 = (v15 ^ (v12 + ((a2 - 509) | 0x60) - 752)) + (v9 ^ v12);
  *(_DWORD *)(v14 - 0x6EDAADCA9171F7F5) = v16 + v12 - (a7 & (2 * v16));
  JUMPOUT(0x1003CE1BCLL);
}

uint64_t sub_1003CE1C4@<X0>(int32x4_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int32x4_t a46,int8x16_t a47)
{
  int v47;
  const char *v48;
  int v49;
  uint64_t v50;
  int8x16_t v51;
  uint8x16_t v52;
  uint16x8_t v53;
  int8x16_t v54;
  int8x16_t v55;
  uint16x8_t v56;
  int8x16_t v57;
  int8x16_t v58;
  uint8x16_t v59;
  uint16x8_t v60;
  uint16x8_t v61;
  uint8x16_t v62;
  int8x16_t v65;
  int8x16_t v70;
  int32x4_t v71;
  int32x4_t v72;
  int32x4_t v73;
  int32x4_t v74;
  int8x16x4_t v76;

  v76 = vld4q_s8(v48);
  v51.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v51.i64[1] = 0xC1C1C1C1C1C1C1C1;
  v52 = (uint8x16_t)veorq_s8(v76.val[0], v51);
  v53 = vmovl_u8(*(uint8x8_t *)v52.i8);
  v54 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v53.i8);
  v55 = (int8x16_t)vmovl_high_u16(v53);
  v56 = vmovl_high_u8(v52);
  v57 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v56.i8);
  v58 = (int8x16_t)vmovl_high_u16(v56);
  v59 = (uint8x16_t)veorq_s8(v76.val[1], v51);
  v60 = vmovl_high_u8(v59);
  v61 = vmovl_u8(*(uint8x8_t *)v59.i8);
  v62 = (uint8x16_t)veorq_s8(v76.val[2], v51);
  _Q21 = (int8x16_t)vmovl_high_u8(v62);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v62.i8);
  v65 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  v70 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v76.val[0] = veorq_s8(v76.val[3], v51);
  v76.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v76.val[0]);
  v76.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v76.val[1]);
  v76.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v76.val[0].i8);
  v76.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v76.val[0]);
  v76.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v76.val[0].i8), 0x18uLL), v65), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v61.i8, 8uLL), v54));
  v76.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v76.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v61, 8uLL), v55));
  v76.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v76.val[1].i8), 0x18uLL), v70), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v60.i8, 8uLL), v57));
  v76.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v76.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v60, 8uLL), v58));
  v71 = (int32x4_t)veorq_s8(vandq_s8(v76.val[0], a47), (int8x16_t)(*(_OWORD *)&v54 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  v72 = (int32x4_t)veorq_s8(vandq_s8(v76.val[3], a47), (int8x16_t)(*(_OWORD *)&v55 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  v73 = (int32x4_t)veorq_s8(vandq_s8(v76.val[1], a47), (int8x16_t)(*(_OWORD *)&v57 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  v74 = (int32x4_t)veorq_s8(vandq_s8(v76.val[2], a47), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  a1[2] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[1], vaddq_s32(v73, v73)), a46);
  a1[3] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[2], vaddq_s32(v74, v74)), a46);
  *a1 = vaddq_s32(vsubq_s32((int32x4_t)v76.val[0], vaddq_s32(v71, v71)), a46);
  a1[1] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[3], vaddq_s32(v72, v72)), a46);
  return ((uint64_t (*)(void))(*(_QWORD *)(v50 + 8 * ((107 * ((v47 + 1158893513) < 0x10)) ^ (v49 + 1478)))
                            - 8))();
}

uint64_t sub_1003CE408(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1344 * ((a6 + 1 + v6) < 0x20)) ^ a1)) - 8))();
}

uint64_t sub_1003CE4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                                 + 8
                                                                                 * (int)((1992
                                                                                        * ((a5 + 1 + v7) > 0x2F)) ^ a1))
                                                                     - 8))(a1, a7, a7, v9 + 48);
}

uint64_t sub_1003CE5AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((500 * ((a4 + 1 + v4) > 0x3F)) ^ v5)) - 8))();
}

void sub_1003CE688()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;

  LODWORD(STACK[0x638]) = v0;
  LODWORD(STACK[0x634]) = v1;
  LODWORD(STACK[0x524]) = v3;
  LODWORD(STACK[0x4B0]) = v2;
  LODWORD(STACK[0x598]) = v4 + 64;
  JUMPOUT(0x1003CE6DCLL);
}

uint64_t sub_1003CE7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  uint64_t v59;
  unint64_t v60;
  int v61;

  v60 = STACK[0x5E0];
  v61 = *(unsigned __int8 *)(STACK[0x5E0] - 0x6EDAADCA9171F7EDLL) ^ 0x70;
  if (v61 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (((*(_DWORD *)(v60 - 0x6EDAADCA9171F7F1) != 267581584) * (v58 - 635)) ^ (v58 - 310)))
                                                                                         - 8))(a1, 3546361982, a3, 3145792362, 2189608653, 2105357890);
  if (v61 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((41 * (*(_DWORD *)(v60 - 0x6EDAADCA9171F7F1) == 267581584)) ^ (LODWORD(STACK[0x43C]) + 795)))
                                                                                         - (LODWORD(STACK[0x43C]) + 813)
                                                                                         + 1561))(a1, a2, a3, 804490474, 2189608653, 2105357890);
  STACK[0x448] = 91;
  *(_BYTE *)(v60 - 0x6EDAADCA9171F7F2) = (a58 ^ 0xBA) * (a58 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59
                                                                                         + 8
                                                                                         * (int)((1514
                                                                                                * (STACK[0x448] == ((((v58 + 1041428743) & 0xC1ED0EDF) + 25) ^ 0x2F0))) ^ (v58 + 1041428743) & 0xC1ED0EDF)))(a1, a2, a3, 211, 2189608653, 2105357890);
}

void sub_1003CF120()
{
  JUMPOUT(0x1003CF0E4);
}

uint64_t sub_1003CF128()
{
  return ((uint64_t (*)(void))STACK[0x600])();
}

uint64_t sub_1003CF158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = LODWORD(STACK[0x43C]) - 172;
  *(_DWORD *)(v10 + 52) = ((((LODWORD(STACK[0x664]) ^ a8) + (v8 ^ a8)) % 0x2710) ^ 0xF79E5FFF)
                        + 2 * ((((LODWORD(STACK[0x664]) ^ a8) + (v8 ^ a8)) % 0x2710) & 0x1FFF)
                        + 536455967;
  v12 = STACK[0x66C];
  LODWORD(STACK[0x4EC]) = STACK[0x66C];
  return (*(uint64_t (**)(void))(v9 + 8 * ((2036 * (v12 == a8)) ^ v11)))();
}

uint64_t sub_1003CF1E8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;

  *v2 = STACK[0x49C];
  v2[85] = STACK[0x5CC];
  v2[86] = STACK[0x55C];
  v2[87] = STACK[0x61C];
  v2[88] = STACK[0x5AC];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((STACK[0x578] != 0)
                                          * ((((a1 - 420) | 0x250) + 371) ^ 0x7DA ^ ((((a1 - 420) | 0x250) - 746) | 0x100))) ^ (((a1 - 420) | 0x250) + 371)))
                            - 4))();
}

uint64_t sub_1003CF254(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;

  v4 = STACK[0x43C];
  STACK[0x530] -= 1616;
  LODWORD(STACK[0x4EC]) = a3 + 154;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((STACK[0x578] != 0) * ((v4 + 371) ^ 0x7DA ^ ((v4 - 746) | 0x100))) ^ (v4 + 371)))
                            - 4))();
}

uint64_t sub_1003CF2A4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((STACK[0x578] != 0) * ((v0 + 371) ^ 0x7DA ^ ((v0 - 746) | 0x100))) ^ (v0 + 371)))
                            - 4))();
}

void sub_1003CF2DC()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 36) = v0 | 4;
}

uint64_t sub_1003CF2E4(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3;
  int v4;
  uint64_t v5;

  STACK[0x370] = v3;
  LODWORD(STACK[0x48C]) = a3 - 46;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v5
                                                              + 8 * (((STACK[0x370] == 0) * (v4 - 571)) ^ (v4 + 388))))(a1, STACK[0x370]);
}

uint64_t sub_1003CF468()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((427 * (((((v2 + 1136179945) & 0xBC4741C9) - 395) & v0) != 1405824188)) ^ v2))
                            - ((v2 + 1136179945) ^ 0x43B8BD4Fu)
                            + 748))();
}

uint64_t sub_1003CF4BC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  _BOOL4 v5;

  LODWORD(STACK[0x48C]) = v1 - 46;
  v4 = STACK[0x5A0];
  v5 = LODWORD(STACK[0x58C]) == 0;
  STACK[0x4F0] = LODWORD(STACK[0x58C]);
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v2 + 8 * ((v3 - 592) | (4 * v5)))
                                                            - 6 * (v3 ^ 0x2EDu)
                                                            + 166))(a1, v4);
}

void sub_1003CF66C(uint64_t a1, uint64_t a2)
{
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2D8])(*(unsigned int *)STACK[0x2D0], a2, 0);
  JUMPOUT(0x1003CF744);
}

uint64_t sub_1003CF830()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t (*v4)(void);

  STACK[0x370] = 0;
  v2 = STACK[0x43C];
  v3 = *(_DWORD *)(v0 + 56);
  *(_DWORD *)(v0 + 56) = (LODWORD(STACK[0x43C]) ^ 0x342) + v3 - 433;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1549 * ((v3 - 1158655778) < 0xFFFFFFFA)) | (v2 - 318)))
                         - 12);
  LODWORD(STACK[0x2F4]) = 633261842;
  return v4();
}

void sub_1003CF890()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 200) = (v0 + 2138962926) ^ (535753261
                                             * ((v1 + 1163127509 - 2 * ((v1 - 200) & 0x4553EB9D)) ^ 0x4FA7E5B2));
  sub_1003FCD48((_DWORD *)(v1 - 200));
  *(_QWORD *)(v1 - 176) = STACK[0x268];
  *(_DWORD *)(v1 - 184) = 3804331 * ((((v1 - 200) | 0x2E413280) - (v1 - 200) + ((v1 - 200) & 0xD1BECD78)) ^ 0x50941776)
                        + v0
                        + 360;
  *(_QWORD *)(v1 - 192) = STACK[0x270];
  *(_BYTE *)(v1 - 200) = (-85 * ((((v1 + 56) | 0x80) - (v1 + 56) + ((v1 + 56) & 0x78)) ^ 0x76)) ^ 0x49;
  ((void (*)(uint64_t))STACK[0x260])(v1 - 200);
  STACK[0x370] = 0;
  LODWORD(STACK[0x2F4]) = 633261842;
  JUMPOUT(0x1003CF980);
}

void sub_1003CF9A8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;

  v4 = (v2 + 465) ^ 0x631;
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2D8])(*(unsigned int *)STACK[0x2D0], a2, (LODWORD(STACK[0x2F4]) - 633262594 + v4));
  *(_DWORD *)(v3 - 200) = (v4 + 2138962608) ^ (535753261
                                             * ((((v3 - 200) | 0x6983BC26) - ((v3 - 200) & 0x6983BC26)) ^ 0x6377B209));
  sub_1003FCD48((_DWORD *)(v3 - 200));
  JUMPOUT(0x1003CFA34);
}

void sub_1003CFA7C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BR              X10 }
}

uint64_t sub_1003CFB58@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 3804331 * ((-1461682303 - (&a3 | 0xA8E07F81) + (&a3 | 0x571F807E)) ^ 0x29CAA588);
  a3 = v10 + 681732518;
  a4 = v10 + v7 - 619;
  a5 = &STACK[0x248771FDFB9E9BA5];
  a6 = v8;
  a7 = v10 + 999265369;
  v11 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(a1 + 8 * (v7 ^ 0x488)) - 12))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((293 * (*(_DWORD *)(v8 - 0x31BC703A95C2A144) == 1810546658)) ^ v7))
                                          - 12))(v11);
}

void sub_1003CFC38(_DWORD *a1@<X8>)
{
  _DWORD *v1;
  int v2;
  unsigned int v3;
  _BYTE *v4;

  v3 = -540084911 * (v1[1] - v2) - ((127789730 * (v1[1] - v2) + 98158652) & 0x426471E) + 822085549;
  *v4 = (HIBYTE(v3) ^ 2) - ((v3 >> 23) & 0x82) - 63;
  v4[1] = (BYTE2(v3) ^ 0x13) - ((2 * (BYTE2(v3) ^ 0x13)) & 0x83) - 63;
  v4[2] = (BYTE1(v3) ^ 0x23) - ((2 * (BYTE1(v3) ^ 0x23)) & 0x83) - 63;
  v4[3] = v3 ^ 0x4E;
  *v1 = *a1;
}

void sub_1003CFD1C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (235795823 * ((-127693918 - (a1 | 0xF8638BA2) + (a1 | 0x79C745D)) ^ 0x93313D04));
  __asm { BR              X15 }
}

uint64_t sub_1003CFDE0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((104
                                          * (*(_DWORD *)(*(_QWORD *)(a1 + 8) + v4) == (((v1 ^ 0x788) - 1400) ^ (v3 + 938) ^ ((v1 ^ 0x788) - 1872920236) & 0x6FA27EFD))) ^ v1 ^ 0x788))
                            - 8))();
}

uint64_t sub_1003CFE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v4 = a1;
  v5 = v1;
  v6 = v2 + 1374699841 * (&v4 ^ 0x6DF41809) + 112;
  return sub_1003D022C((uint64_t)&v4);
}

void sub_1003CFFBC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(_QWORD, void (*)());
  _BYTE v8[8];

  v2 = (unint64_t)&v8[qword_1022A15A8 ^ qword_1022A15B0];
  v3 = 1045096823 * v2 + 0x1159CE8E9813C2FLL;
  v4 = 1045096823 * (v2 ^ 0xFEEA6317167EC3D1);
  v5 = (119 * (v3 ^ 0xD1 ^ v4));
  v6 = byte_101BA7780[byte_101BA3900[v5] ^ 0x2C];
  qword_1022A15B0 = v3;
  LOBYTE(v5) = byte_101BA7880[byte_101BA3B00[v5] ^ 0x5B];
  v7 = (void (*)(_QWORD, void (*)()))*(&off_1021378F0
                                                + ((119 * (v3 ^ 0xD1 ^ v4)) ^ v6)
                                                + 38);
  qword_1022A15A8 = v4;
  v7(*(&off_1021378F0 + ((119 * (v3 ^ 0xD1 ^ v4)) ^ v5) + 13), sub_1003FC8AC);
  __asm { BR              X9 }
}

uint64_t sub_1003D00CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                             * ((255 * (*(_QWORD *)(*(_QWORD *)(v1 + 504) - 4) != 0)) ^ 0x313u))
                            - 12))();
}

uint64_t sub_1003D00F8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1608))(v0);
}

uint64_t sub_1003D0120(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;

  v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = v1 + *(_DWORD *)(a1 + 12) - 1628758204;
  v4 = (*(_DWORD *)(*(_QWORD *)a1 - 0x6EDAADCA9171F809) ^ 0xB3FC9F2A) + v3;
  v5 = v4 - ((2 * v4) & 0x67F93E54) - 1275289814;
  *(_DWORD *)(*(_QWORD *)a1 - 0x6EDAADCA9171F809) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + v2 - 569)
                                        + 8 * ((383 * ((v5 ^ 0xB3FC9F2A) < v3)) ^ v2)
                                        - 12)
                            - 12))();
}

void sub_1003D01E4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x6EDAADCA9171F80DLL) = (*(_DWORD *)(a1 - 0x6EDAADCA9171F80DLL) ^ 0x459E1C2E)
                                         + 1167989806
                                         - ((2 * (*(_DWORD *)(a1 - 0x6EDAADCA9171F80DLL) ^ 0x459E1C2E) + 2) & 0x8B3C385C)
                                         + 1;
}

uint64_t sub_1003D022C(uint64_t a1)
{
  int v1;
  _BOOL4 v2;

  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((((2 * a1) | 0x340440B2) - a1 + 1711136679) ^ 0xF7F63850);
  v2 = *(_QWORD *)a1 == *(_QWORD *)(a1 + 8);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + (v1 ^ 0x1EE))
                                        + 8 * (((2 * v2) | (32 * v2)) ^ v1)
                                        - 12)
                            - (v1 ^ 0x22u)
                            + 433))();
}

uint64_t sub_1003D02AC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  v5 = *(_DWORD *)(v3 - 0x63F19B7CB7021DA0);
  v6 = v5 - 517884438;
  if (v5 - 517884438 < 0)
    v6 = 517884438 - v5;
  *(_DWORD *)(v2 - 0x63F19B7CB7021DA0) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((v4 - 40512106) & 0x26A2DED) + (v6 ^ 0xE7FF359F) + ((2 * v6) & 0xCFFE6B3E) != -402703648)
                                          * ((5 * (v4 ^ v1)) ^ 0x237)) ^ v4))
                            - 12))();
}

uint64_t sub_1003D035C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v2 - 0x63F19B7CB7021D9CLL) + 4 * (v5 - 1180579211)) = *(_DWORD *)(*(_QWORD *)(v3 - 0x63F19B7CB7021D9CLL)
                                                                                            + 4 * (v5 - 1180579211));
  return (*(uint64_t (**)(void))(a1 + 8 * ((1015 * (v5 - 1 == v1 + v4)) ^ v1)))();
}

uint64_t sub_1003D03B8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(*v2 + 4 * (v7 + v5)) = *(_DWORD *)(*v3 + 4 * (v7 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v7 - 1 == v4) * v6) ^ v1)))();
}

void sub_1003D03F0(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1374699841 * ((((2 * (_DWORD)a1) | 0x97E9331C) - (_DWORD)a1 + 873162354) ^ 0xA6008187));
  __asm { BR              X10 }
}

uint64_t sub_1003D04D0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * ((((2 * &a4) | 0x816F4332) - &a4 - 1085776281) ^ 0x9E711C42);
  a6 = (v11 - 24) ^ v12;
  a7 = &STACK[0x509D13A7D8C2F3F8];
  a8 = v12 ^ 0x20275358;
  a4 = &STACK[0x3F8123127DDA1A6C];
  a5 = v10;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v11 - 205)) - 4))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((370
                                                        * (*(_DWORD *)(v10 - 0x31BC703A95C2A144) != v8 + v11 - 246)) ^ v11))
                                          - ((v11 + 19) | 0x62u)
                                          + 351))(v13);
}

uint64_t sub_1003D05C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a10 == v10 + 4) * (v12 + (v12 ^ 0xEF) - 552)) ^ v12)) - 12))();
}

void sub_1003D05F4(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned __int8 *v5;

  v3 = v5[3] ^ 0xC1;
  v4 = ((*v5 ^ 0xFFFFFFC1) << 24) | ((v5[1] ^ 0xC1) << 16) | ((v5[2] ^ 0xC1) << 8) | v3;
  *(_DWORD *)(*(_QWORD *)(v1 + 8) - 0x2DEB3A05C2E48BBDLL) = v4 + v2 - 2 * (v4 & (v2 + 29) ^ v3 & 0x1D);
  *(_DWORD *)(v1 + 4) = *a1;
}

void sub_1003D06B0()
{
  int v0[8];

  v0[1] = 108757529
        * (((v0 | 0x51085D1D) - v0 + (v0 & 0xAEF7A2E0)) ^ 0xB1943F36)
        - 504207030;
  sub_1003FCE54(v0);
  __asm { BR              X8 }
}

uint64_t sub_1003D078C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, int a17, unsigned int a18)
{
  unsigned int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  a16 = &STACK[0x1706FB9DE6F6FC84];
  a18 = 915
      - 460628867 * ((851217541 - (&a16 | 0x32BC8C85) + (&a16 | 0xCD43737A)) ^ 0x81D5F107);
  sub_1003D5ADC((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((1336 * (a17 == v19)) ^ v18)) - 8))(v21, v22, v23, v24, v25, v26, v27, v28, a9);
}

uint64_t sub_1003D0820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, unsigned int a19, uint64_t a20)
{
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;

  v27 = 1178560073 * ((&a16 & 0xF177A641 | ~(&a16 | 0xF177A641)) ^ 0xB41C21DC);
  a18 = a14;
  a19 = v27 ^ 0x40C;
  a17 = v27 + 1160082353 * v25 + 359058754;
  sub_1003CFA7C((uint64_t)&a16);
  v28 = 1178560073 * ((&a16 - 30129850 - 2 * (&a16 & 0xFE344146)) ^ 0x44A03924);
  a19 = v28 ^ 0x40C;
  a18 = a14;
  a17 = v28 + 1160082353 * v24 + 359058754;
  sub_1003CFA7C((uint64_t)&a16);
  v29 = 1178560073
      * (((&a16 ^ 0xC8EAEDAE) & 0x7FE834FE | ~(&a16 ^ 0xC8EAEDAE | 0x7FE834FE)) ^ 0xF2695ECD);
  a17 = v29 + 232;
  a18 = a14;
  a19 = ((v23 ^ 0x5B9FAEBD) - 277160964 + ((2 * v23) & 0xB73F5D7A)) ^ v29;
  a20 = v22;
  sub_1003E7008((uint64_t)&a16);
  v30 = 1178560073 * (&a16 ^ 0xBA947862);
  a17 = v30 + 232;
  a19 = v30 ^ ((v21 ^ 0xCB3EFBB9) + 2145095424 + ((2 * v21) & 0x967DF772));
  a18 = a14;
  a20 = a11;
  sub_1003E7008((uint64_t)&a16);
  v31 = 1178560073
      * ((-1714998320 - (&a16 | 0x99C733D0) + (&a16 | 0x6638CC2F)) ^ 0xDCACB44D);
  a18 = a14;
  a19 = v31 ^ ((v20 ^ 0xDBFA9BBB) + 1864363774 + ((2 * v20) & 0xB7F53776));
  a20 = a12;
  a17 = v31 + 232;
  v32 = ((uint64_t (*)(int *))sub_1003E7008)(&a16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * ((1600 * (a16 == 1810546658)) ^ 0x35Au)) - 4))(v32);
}

uint64_t sub_1003D0AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, uint64_t a17, unsigned int a18, unsigned int a19, unsigned int a20,int a21)
{
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;

  v25 = 460628867
      * (((&a16 | 0x53DCC1F3) - &a16 + (&a16 & 0xAC233E08)) ^ 0x1F4A438E);
  a16 = &STACK[0x5640F59D98E42E53];
  a17 = a14;
  a18 = v25 - 823275575;
  a19 = v25 + v23 - 2024873941;
  a20 = 2066553870 - v25;
  v26 = sub_1003FD230((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * ((2015 * (a21 == v21)) ^ v23)) - v22 + 515))(v26);
}

uint64_t sub_1003D0BA0()
{
  void (*v0)(unsigned int *);
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  unint64_t *v8;
  unint64_t *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t *v13;
  unint64_t *v14;

  v13 = &STACK[0x2DEB3A05C2E48B31];
  v14 = v8;
  v11 = (v4 - 470) ^ (1374699841
                    * ((-1810256295 - (&v11 | 0x9419AE59) + (&v11 | 0x6BE651A6)) ^ 0x61249AF));
  ((void (*)(unsigned int *))(*(_QWORD *)(v5 + 8 * (v4 ^ 0x3ECu)) - 12))(&v11);
  v13 = v8;
  v11 = (v4 - 540) ^ (1755732067 * (((&v11 | 0x20BFA5DD) - (&v11 & 0x20BFA5DD)) ^ 0xFE791806));
  sub_1003D11E8((uint64_t)&v11);
  if ((_DWORD)v14 == v1 + v3 - 519)
    v6 = v10;
  else
    v6 = (int)v14;
  v13 = v8;
  v12 = v4 + (((&v11 | 0x63B7244C) - (&v11 & 0x63B7244C)) ^ 0x69432A63) * v2 + 402;
  v0(&v11);
  v13 = v9;
  v12 = v3
      + ((1845353981 - (&v11 | 0x6DFDDDFD) + (&v11 | 0x92022202)) ^ 0x98F62C2D) * v2
      + 741;
  v0(&v11);
  return v6 ^ v1;
}

void sub_1003D0D68(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15;

  v1 = 235795823 * (((a1 | 0x1A7DF74B) - (a1 | 0xE58208B4) - 444462924) ^ 0x8ED0BE12);
  v2 = *(_DWORD *)(a1 + 40) ^ v1;
  v3 = *(_DWORD *)a1 ^ v1;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_DWORD *)(a1 + 64) - v1;
  v7 = 1374699841 * ((&v8 & 0xD57671FD | ~(&v8 | 0xD57671FD)) ^ 0x477D960B);
  v14 = *(_QWORD *)(a1 + 8);
  v9 = v7 ^ (v2 + 1695026871);
  v15 = 938494547 * v6 - v7 - ((1876989094 * v6 + 1557027092) & 0xAE0C3E6C) - 2056434752;
  v13 = v7 ^ (1789820487 * v3 + 1510559081);
  v10 = v5;
  v12 = v4;
  v8 = v5;
  sub_1003FD384((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_1003D0F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unint64_t *a11, char a12, unsigned int a13, uint64_t a14, int a15)
{
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v23 = *(_BYTE *)(v15 + 24) - v21 + 18;
  v24 = 1759421093 * (((&a10 | 0x3A5775E8) - (&a10 & 0x3A5775E8)) ^ 0x892AC5BC);
  a15 = v22 - v24 - 51;
  a14 = v20;
  a11 = &STACK[0x2A05F9DD1F18854E];
  a13 = v24 + ((v17 + 778513546) ^ 0xFEAD7F9F) + ((2 * (v17 + 778513546)) & 0xFD5AFF3E) + 1979705456;
  a12 = v23 ^ v24;
  sub_1003D2F04((uint64_t)&a10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                + 8
                                                                                * (((((v22 + 1) ^ (a10 == v18)) & 1)
                                                                                  * v16) ^ v22)))(v25, v26, v27, v28, v29);
}

uint64_t sub_1003D1000()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((((v0 - 2053965079) < 0xFFFFFFFE) ^ (78 * (v2 ^ 0xFC)) ^ 0x99) & 1)
                                          * (83 * ((590 * (v2 ^ 0x1FC)) ^ 0x49B) - 524)) ^ (590 * (v2 ^ 0x1FC))))
                            - 4))();
}

void sub_1003D105C(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  *(_DWORD *)(a1 - 0x2DEB3A05C2E48BBDLL) = v2 + 1;
  *(_DWORD *)(v1 + 68) = 1810546658;
}

uint64_t sub_1003D11E8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + (v1 ^ 0x14F))
                                        + 8 * ((1678 * (*(_QWORD *)(a1 + 8) != 0x31BC703A95C2A15CLL)) ^ v1)
                                        - 12)
                            - 4))();
}

uint64_t sub_1003D127C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((135 * (*(_DWORD *)(v2 - 0x31BC703A95C2A144) == 1810546658)) ^ v0))
                            - 4))();
}

uint64_t sub_1003D12BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  int v6;

  v3 = *(_DWORD *)(v2 - 0x31BC703A95C2A14CLL) + 367150426;
  v4 = *(_DWORD *)(v2 - 0x31BC703A95C2A150) - 931174081;
  v5 = v4 < 0x3D2CD14E;
  v6 = v3 < v4;
  if (v3 < 0x3D2CD14E != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((8 * v6) | (v6 << 9)) ^ v0)) - 4))();
}

uint64_t sub_1003D1348@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *(_DWORD *)(result + 16) = -1810504489;
  return result;
}

void sub_1003D135C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1003D13D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  a15 = 108757529 * ((-1250741474 - (&a14 | 0xB573331E) + (&a14 | 0x4A8CCCE1)) ^ 0xAA10AECA)
      - 504207030;
  v18 = sub_1003FCE54(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((896 * (a14 == v15)) ^ v17)) - 4))(v18);
}

uint64_t sub_1003D145C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a14 = &STACK[0x1706FB9DE6F6FC74];
  a16 = 915 - 460628867 * (((&a14 | 0x9646C919) + (~&a14 | 0x69B936E6)) ^ 0xDAD04B65);
  sub_1003D5ADC((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((127 * (a15 != 1810546658)) ^ 0x4B9))
                                                                                                - 4))(v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_1003D1518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  a16 = v21 + 1224239923 * ((&a14 & 0x2EDB128E | ~(&a14 | 0x2EDB128E)) ^ 0x239710A6) + 1522;
  a15 = a12;
  a17 = v17;
  v22 = ((uint64_t (*)(int *))(*(_QWORD *)(v20 + 8 * (v21 ^ 0x5C)) - 8))(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (((a14 == v18) * (v21 + 1363)) ^ v21)) - 8))(v22);
}

uint64_t sub_1003D15C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16, unsigned int a17, unsigned int a18, int a19)
{
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  uint64_t v25;

  v23 = (v22 ^ 0x276) - v19;
  v24 = (((&a14 ^ 0x7470E57E) + 2038877446 - 2 * ((&a14 ^ 0x7470E57E) & 0x7986CD06)) ^ 0x4160AA05)
      * v21;
  a14 = &STACK[0x5640F59D98E42E43];
  a15 = a12;
  a18 = 2066553870 - v24;
  a16 = v24 - 1400669624;
  a17 = v24 + v22 - 2024873280;
  v25 = sub_1003FD230((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((1791 * (a19 == v23 + 287636611)) ^ v22)) - 8))(v25);
}

uint64_t sub_1003D16A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  void (*v21)(unsigned int *);
  uint64_t v22;

  a14 = (v18 - 303) ^ (1374699841
                     * ((2 * ((&a14 ^ 0x8D621A2D) & 0x1E6AC938)
                       - (&a14 ^ 0x8D621A2D)
                       + 1637168839) ^ 0x810334E3));
  a15 = &STACK[0x2DEB3A05C2E48BDD];
  a16 = a11;
  v21 = (void (*)(unsigned int *))(*(_QWORD *)(v20 + 8 * (v18 ^ 0x205)) - 12);
  v21(&a14);
  a14 = (v18 - 303) ^ (1374699841
                     * ((&a14 + 2091475848 - 2 * (&a14 & 0x7CA96388)) ^ 0x115D7B81));
  a15 = &STACK[0x2DEB3A05C2E48BE1];
  a16 = a11;
  v21(&a14);
  a15 = a11;
  a14 = (v18 - 373) ^ (1755732067 * ((&a14 & 0x36E44DFF | ~(&a14 | 0x36E44DFF)) ^ 0x17DD0FDB));
  v22 = sub_1003D11E8((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * ((((_DWORD)a16 != v16) * (v19 ^ 0x5AC5C30F)) ^ v18))
                                          - 8))(v22);
}

uint64_t sub_1003D17FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  int v17;

  return ((uint64_t (*)(void))(1522910039
                            - (((v17 + 45) | 3u)
                             + v14)
                            + *(_QWORD *)(v16 + 8 * ((1492 * (a14 == v15)) ^ ((v17 + 45) | 3)))))();
}

uint64_t sub_1003D1838@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  void (*v2)(_BYTE *);
  int v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  _BYTE v9[4];
  unsigned int v10;
  uint64_t v11;

  v4 = (a1 - 70780804) & 0x5EFDC7FF;
  *v1 = (v4 + 287636611) ^ v8;
  v10 = 535753261 * (((v9 | 0x8B130A1B) - (v9 & 0x8B130A1B)) ^ 0x81E70434)
      - 1522909356
      + v4
      + 569;
  v11 = v6;
  v2(v9);
  v11 = v7;
  v10 = 535753261 * ((-257335632 - (v9 | 0xF0A95EB0) + (v9 | 0xF56A14F)) ^ 0x5A2AF60)
      - 1522909356
      + v4
      + 569;
  v2(v9);
  return v3 ^ 0x6BEABFE2u;
}

void sub_1003D1974(uint64_t a1)
{
  int v1;
  _DWORD v2[2];
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  v3 = *(_QWORD *)(a1 + 8);
  v2[0] = v1
        + 628203409
        * (((v2 | 0x67E20BBA) - v2 + (v2 & 0x981DF440)) ^ 0xE56A0789)
        - 472;
  sub_1003EF1FC((uint64_t)v2);
  __asm { BR              X9 }
}

uint64_t sub_1003D1AC4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = (((v4 ^ v3) >> 4) & 0xD72FF5E ^ 0x172D318) + (((v4 ^ v3) >> 5) ^ 0xFF061673) + 837406425;
  v7 = v5 > ((v1 + 618) ^ 0x30A34DB7u) && v5 < v2 + 816008840;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v7 * (v1 ^ 0x4E2)) ^ v1)))();
}

uint64_t sub_1003D1B38@<X0>(uint64_t a1@<X8>)
{
  int v1;
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * ((((13 * (v1 ^ 0xA7)) ^ 0x4E4) * ((v2 & 0x1F) == 0x14)) | v1 ^ 0x260))
                            - (((v1 ^ 0x260) - 2989807) & 0x2D9F4F ^ 0x30FLL)))();
}

uint64_t sub_1003D1BA0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  _DWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  _BOOL4 v8;

  v6 = v1 + 1374156415;
  if (*v4 + 1629599210 < 0)
    v6 = 1331361245 - v1;
  *v4 = *v4 - 1352758830 + v6;
  v7 = v2 + 494642804;
  v8 = v7 < -1631443259;
  *(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL) + 4 * (int)(136 * (v3 ^ 0x301) - 816)) = *(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL) + 4 * (v1 + 21397585));
  if (v7 >= -1631443259)
    v8 = v7 > 516040390;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * ((55 * !v8) ^ v3)) - 4))(3937711701);
}

void sub_1003D1C98()
{
  JUMPOUT(0x1003D1C40);
}

void sub_1003D1CA0()
{
  _DWORD *v0;

  *v0 = 517884438;
}

uint64_t sub_1003D1EB0(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;

  v1 = 1759421093 * ((~(_DWORD)a1 & 0xA201450D | a1 & 0x5DFEBAF2) ^ 0x117CF559);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = *((_DWORD *)*(&off_1021378F0 + v2 - 311) + 85);
  v4 = (*(_DWORD *)(a1 + 16) ^ v1) - 555196474;
  v5 = v3 + 571606099 > v4;
  if (v4 < 0x22120453 != v3 > 0xDDEDFBAC)
    v5 = v3 > 0xDDEDFBAC;
  return (*(uint64_t (**)(void))((char *)*(&off_1021378F0 + (v2 ^ 0x1E4))
                              + 8 * (int)((v5 * ((v2 + 58967560) & 0xFC7C3F7B ^ 0x74C)) ^ v2)
                              - 12))();
}

uint64_t sub_1003D1FA4()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v1 - 1235691758;
  v5 = v4 < 0xF9827B9F;
  v6 = ((5 * (((v3 - 1799) | 0x589) ^ 0x5CA)) ^ 0xF9827A0A) + v2 < v4;
  if (v5 != v2 > 0x67D8460)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((77 * v6) ^ v3)) - 4))();
}

uint64_t sub_1003D202C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  BOOL v7;

  v5 = *(_DWORD *)(v3 + 344);
  v6 = (*(_DWORD *)(a1 + 4) ^ v1) + 595882983;
  if (v6 < 0x8DF31872 != v5 > ((3 * (v4 ^ 0x4C9)) ^ 0x720CE47Bu))
    v7 = v5 > ((3 * (v4 ^ 0x4C9)) ^ 0x720CE47Bu);
  else
    v7 = v5 - 1913448334 > v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((57 * ((v4 ^ v7) & 1)) ^ v4)) - 8))();
}

uint64_t sub_1003D20B4()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v2 + 686097499;
  v5 = v4 < 0x9353A8E6;
  v6 = v3 - 1823233818 < v4;
  if (v5 != v3 > ((((v1 - 1543804408) & 0x5C0493AF) + 1823233246) ^ ((v1 - 865) | 0x100u)))
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2005 * v6) ^ v1)) - 12))();
}

uint64_t sub_1003D2140(_DWORD *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  v5 = *a1 ^ v1;
  v6 = *(_DWORD *)(v3 + 352);
  if ((v5 + 645460824) < 0x37DA3FE4 != v6 > ((v4 + 18) ^ 0xC825C1DB))
    v7 = v6 > ((v4 + 18) ^ 0xC825C1DB);
  else
    v7 = v6 + 937050084 > v5 + 645460824;
  return (*(uint64_t (**)(void))(v2 + 8 * ((110 * v7) ^ v4)))();
}

uint64_t sub_1003D21B0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  _BOOL4 v8;
  int v9;

  v5 = v3 + 1676266162 + (v4 ^ 0x55);
  v6 = v5 < 0x754B18D3;
  v7 = v2 + 1967855827 < v5;
  if (v2 > 0x8AB4E72C != v6)
    v8 = v6;
  else
    v8 = v7;
  if (v8)
    v9 = a2;
  else
    v9 = a2 + 1;
  *(_DWORD *)(result + 12) = v9;
  return result;
}

void sub_1003D2210(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1003D2248@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 208))();
  return 0;
}

uint64_t sub_1003D225C()
{
  return 4294925273;
}

void sub_1003D2268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v6;

  if (a4)
    v5 = a5 == 0;
  else
    v5 = 1;
  v6 = !v5;
  __asm { BR              X9 }
}

uint64_t sub_1003D22E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  unsigned int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *a4 = 0;
  *a5 = 0;
  a18 = 108757529
      * ((((&a17 | 0xC8548EC6) ^ 0xFFFFFFFE) - (~&a17 | 0x37AB7139)) ^ 0xD7371312)
      - 504207030;
  v21 = sub_1003FCE54(&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((1227 * (a17 == v20)) ^ v18)) - 12))(v21);
}

uint64_t sub_1003D2378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v22 = 1759421093 * ((2 * (&a17 & 0x43114A58) - &a17 - 1125206624) ^ 0xF9305F4);
  a20 = v22 ^ 0x4329A4C3;
  LODWORD(a17) = v22 ^ 0x11614C8C;
  HIDWORD(a17) = v22 ^ 0x6A6EA4D3;
  a18 = v22 + 405;
  sub_1003D1EB0((uint64_t)&a17);
  HIDWORD(a10) = a19;
  a17 = &STACK[0x1706FB9DE6F6FC94];
  a19 = 915 - 460628867 * ((2 * (&a17 & 0x4542B498) - &a17 + 985484129) ^ 0x762BC91C);
  sub_1003D5ADC((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((241 * (a18 == v21)) ^ 0x278u)) - 12))(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t sub_1003D24C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v25 = 1178560073 * ((2 * (&a17 & 0x1E626340) - &a17 + 1637719231) ^ 0xDB09E4DD);
  a18 = v25 + 1160082353 * v23 + 359058754;
  a20 = v25 ^ 0x40C;
  a19 = a16;
  sub_1003CFA7C((uint64_t)&a17);
  v26 = 1178560073 * ((2 * (&a17 & 0x767B7528) - &a17 - 1987802416) ^ 0x3310F2B2);
  a18 = v26 + 232;
  a20 = ((v22 ^ 0xCB5B8BBD) + 2143223548 + ((2 * v22) & 0x96B7177A)) ^ v26;
  a19 = a16;
  a21 = v21;
  sub_1003E7008((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((1832 * (a17 == 1810546658)) ^ 0x31Du)))(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12);
}

uint64_t sub_1003D2610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, int a19, int a20,unsigned int a21,int a22)
{
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v25 = 460628867 * ((&a17 + 1990631928 - 2 * ((unint64_t)&a17 & 0x76A6A1F8)) ^ 0x3A302385);
  a21 = (a11 ^ 0xFFBF1C3D) - v25 + ((a11 << (((v22 + 67) | 0x18) - 119)) & 2) + 2070806480;
  a17 = &STACK[0x5640F59D98E42E53];
  a18 = a16;
  a19 = v25 - 63319551;
  a20 = v25 + v22 - 2024873880;
  v26 = sub_1003FD230((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((50 * (a22 == ((v22 + 711) ^ (v24 - 1500)))) ^ v22)))(v26);
}

uint64_t sub_1003D26FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  int v11;
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 8 * (((v11 - 849) * (a11 < 0x49E67F9A)) ^ v11)))(a1, a2, a3);
}

uint64_t sub_1003D2790@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, _BYTE *a6, int a7, char a8, uint64_t a9, uint64_t a10, unsigned int a11, char *a12, _BYTE *a13, uint64_t a14, unsigned int a15)
{
  int v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(unsigned int *);
  int v21;
  uint64_t v22;

  a11 = (v17 - 1120) ^ ((((&a11 | 0x276B7079) - &a11 + (&a11 & 0xD8948F80)) ^ 0x4A9F6870)
                      * v15);
  v21 = (v17 - 480) | 0x101;
  a12 = &a8 + a1;
  a13 = a6;
  v20(&a11);
  a12 = a6;
  a13 = v16;
  a14 = v18;
  a15 = (v21 - 869) ^ (1225351577
                     * (((&a11 | 0x5CB85DA2) - &a11 + (&a11 & 0xA347A258)) ^ 0x7F2285B4));
  ((void (*)(unsigned int *))((char *)*(&off_1021378F0 + v21 - 1233) - 4))(&a11);
  a11 = (v21 - 897) ^ (1374699841
                     * (((&a11 | 0xDC81876C) - &a11 + (&a11 & 0x237E7890)) ^ 0xB1759F65));
  a13 = a6;
  a12 = a4;
  v20(&a11);
  a12 = a6;
  a11 = (v21 - 967) ^ (1755732067
                     * ((2 * (&a11 & 0x24AA4D50) - &a11 + 1532342955) ^ 0x85930F70));
  v22 = sub_1003D11E8((uint64_t)&a11);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((49 * ((_DWORD)a13 == (((v21 - 1021) | 0x215) ^ 0x6BEABCFF))) ^ v21))
                                          - 12))(v22);
}

uint64_t sub_1003D2964@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((47 * (a7 == ((v7 - 488) ^ a1))) ^ v7)) - 12))();
}

uint64_t sub_1003D2990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((94 * (a13 != ((v16 + 40 * (v14 ^ 0x52A) - 2619) ^ v13))) ^ v14))
                            - 12))();
}

uint64_t sub_1003D29D8@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v4 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1021378F0 + v1 - 1654))((v3 + ((v1 - 1083) ^ 0x16C) - 625) ^ a1, 1523128792) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((158 * v4) ^ v1)) - 8))();
}

uint64_t sub_1003D2A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;

  v16 = (a13 ^ v15) - (((a13 ^ v15) << ((v13 ^ 0x74) + ((v13 + 87) | 3) + 49)) & 0x81DBE93C) + 1089336478;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((251
                                          * (((2 * v16) & 0xFFDEFEFE ^ 0x81DAE83C) + (v16 ^ 0x3F028BE1) - 1744834572 != 401567603)) ^ v13))
                            - 8))();
}

uint64_t sub_1003D2ADC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * (int)(((((a2 - 71) ^ 0x86200DD2) + 2044720803)
                                                            * ((v3 + v2 - 2146402175) > 7)) ^ a2)))(a1, v4);
}

uint64_t sub_1003D2B40(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v7
                                                               + 8
                                                               * (a3 ^ (29 * ((unint64_t)(v3 - a1) > 0x1F))))
                                                   - ((a3 + v4 + v5) ^ 0xE4)))(a1, v6);
}

uint64_t sub_1003D2B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v6 < (a6 ^ 0xCCu)) * (a6 - 233)) | a6)) - 4))();
}

uint64_t sub_1003D2BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v12 = v10 + ((a6 - v8 - 801791129) & 0xA9AA57D7 ^ (v7 + 1421));
  v13 = *(_OWORD *)(v6 + v12 - 15);
  v14 = *(_OWORD *)(v6 + v12 - 31);
  v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((13 * ((v9 & 0xFFFFFFE0) == 32)) ^ (a6 + 215))) - 8))();
}

void sub_1003D2C20()
{
  JUMPOUT(0x1003D2BD8);
}

uint64_t sub_1003D2C2C(uint64_t a1)
{
  int v1;
  int v2;
  _DWORD *v3;
  _QWORD *v4;
  int v5;
  int v6;
  void (*v8)(_BYTE *);
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[4];
  unsigned int v12;
  uint64_t v13;

  *v4 = a1;
  *v3 = v2;
  v6 = 316 * (v1 ^ 0x507);
  v13 = v9;
  v12 = (v1 ^ 0x618)
      + 535753261 * ((2 * (v11 & 0x4F0B3D8) - v11 + 2064600101) ^ 0x71FB420A)
      + 463;
  v8(v11);
  v13 = v10;
  v12 = v6
      + 535753261
      * ((((2 * (v11 ^ 0x671CEF6C)) | 0xF1532BEC) - (v11 ^ 0x671CEF6C) + 123103754) ^ 0x954174B5)
      + 628;
  v8(v11);
  return v5 ^ 0x6BEABFE2u;
}

void sub_1003D2F04(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(_QWORD *)(a1 + 24))
    v2 = *(_DWORD *)(a1 + 20) - v1 == 1957521423;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1003D2FA4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  BOOL v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (178 * (v1 ^ 0x1C3) - 1198)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((-78 * (v1 ^ 0xC3) - 17) ^ v3) & 1) * (178 * (v1 ^ 0x1C3) - 1377)) ^ (178 * (v1 ^ 0x1C3)))))();
}

uint64_t sub_1003D3018()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((25 * (v1 == (v3 & 0x93D9D5AB ^ 0x4E0 ^ (v0 + (v3 & 0x93D9D5AB) - 864 - 22)))) ^ v3 & 0x93D9D5AB)))();
}

uint64_t sub_1003D3070@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 1957521424;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v6 + v11);
  if (v13 == 193)
    __asm { BR              X11 }
  if (v13 == 65)
  {
    v14 = 1810546658;
    v15 = *(_QWORD *)(v4 + 8);
    v16 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(_QWORD *)result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 73)
      v17 = -2114776122;
    else
      v17 = -2114776121;
    *(_DWORD *)(result + 16) = 659196916;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 1810546658;
    *(_QWORD *)(v15 - 0x2A05F9DD1F18854ELL) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v8 + 8 * (v9 ^ 0x1D1)))();
    v14 = -1810504645;
  }
  *(_DWORD *)v4 = v14;
  return result;
}

void sub_1003D3150(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1003D31C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * ((45 * (((a5 - 494613942) ^ 0xFC9DE44FFF7B7FFELL) + 0x3621BB0FCA7DAABLL + ((2 * (a5 - 494613942)) & 0x1FEF6FFFCLL) != 4230175401)) ^ 0x70Bu))
                                                                                       - 4))(a1, a2, a3, a4, 445217198, 445217190);
}

uint64_t sub_1003D326C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  v12 = *(unsigned __int8 *)(v9 + v10 - 0x40FC1F729285297ALL) - *(unsigned __int8 *)(v8 + v10 - 0x40FC1F729285297ALL);
  return ((uint64_t (*)(uint64_t))(a6
                                          - (a5 + v7 - 492)
                                          + *(_QWORD *)(v11
                                                      + 8
                                                      * ((996 * (((v7 - 1753861188) & (2 * v12)) + (v12 ^ v6) == v6)) ^ v7))))(4294925278);
}

uint64_t sub_1003D32D4()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  unint64_t v6;
  int v7;
  _BOOL4 v8;

  v5 = v2 < v0;
  v6 = (v1 ^ ((v1 + 276) | 0xBu) ^ 0xBF03E08E699E33D7) + v3;
  v7 = v5 ^ (v6 < v0);
  v8 = v6 < v2;
  if (!v7)
    v5 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((45 * v5) ^ (v1 + 1311))) - 4))();
}

uint64_t sub_1003D3344@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((1981
                                              * (a1 == ((((v1 + 1351979243) & 0xAF6A6DFF) + 445216696) ^ 0x7F24C11))) ^ v1)))(4294925278);
}

uint64_t sub_1003D3398()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1968
                                          * ((((*v0 - 42) << ((4 * v1) ^ 0xD9)) & 0xBDBB7BEE)
                                           + ((*v0 - 42) ^ 0x5EDDBDF7) == 1591590391)) ^ v1))
                            - 8))();
}

uint64_t sub_1003D3400()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ (v1 + 6 * (v3 ^ 0x1D8) - 276)) == v1)
                                * (((v3 ^ 0x1D8) + 456) ^ 0x7BC)) ^ v3 ^ 0x3F0)))();
}

uint64_t sub_1003D3458()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2040
                                          * ((((*(unsigned __int8 *)(v2 + 2) - 72) << ((v3 + 65) & 0xCE ^ 7)) & ((3 * (v3 ^ 0x1AA)) ^ (v0 - 244)))
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1) == v1)) ^ v3))
                            - 8))();
}

uint64_t sub_1003D34C8()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1620
                                * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v1) == v1 + 69 * (v3 ^ 0x202) - 276)) ^ v3)))();
}

uint64_t sub_1003D3514()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;

  v5 = ((v3 - 246) | 4) + *(unsigned __int8 *)(v2 + 4) - 523;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1181 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_1003D3554()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;

  v5 = 6 * (v3 ^ 0x228) + *(unsigned __int8 *)(v2 + 5) - 289;
  return (*(uint64_t (**)(void))(v4 + 8 * ((406 * (((v0 + v3 - 46 - 472) & (2 * v5)) + (v5 ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_1003D35A8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((46
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v1) != ((v3 + 543920966) ^ 0x206B94EC ^ (v1 - 230))
                                                                                        + ((v3 + 543920966) & 0xDF946BF5))) ^ v3))
                            - 8))();
}

uint64_t sub_1003D360C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = ((v3 - 694752796) & 0x2969162F) + *(unsigned __int8 *)(v2 + 7) - 519;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (v3 | (4 * (((v5 << (((v3 + 18) | 0x10) - 19)) & v0) + (v5 ^ v1) != v1))))
                            - 8))();
}

uint64_t sub_1003D366C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v0 + ((v3 - 260) | 0xA4) - 422) & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v1) == v1)
                                * (69 * (v3 ^ 0x202) - 165)) ^ v3)))();
}

uint64_t sub_1003D36C4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 + 96) + 1428) = 1587865076;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(a2 + 4) == 494613951) * ((((v2 - 293) | 0x18) + 123) ^ 0x2B4)) ^ v2)))();
}

uint64_t sub_1003D371C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1974 * (((v6 << (37 * (v4 ^ 0x1D) - 76)) & v2) + (v6 ^ v3) == v3)) ^ v4)))();
}

uint64_t sub_1003D3768()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v4 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v4 + 1) - 134) ^ v1) == v1)
                                * (v3 ^ 0x6F4)) ^ v2)))();
}

uint64_t sub_1003D379C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v5 = (((v2 - 268) | 0x145) ^ 0xFFFFFEF5) + *(unsigned __int8 *)(v3 + 2);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1724 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1003D37E0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2009
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ (v1 + v2 + 57 - 333)) == v1)) ^ v2)))();
}

uint64_t sub_1003D381C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1896
                                * (((v0 + v3 - 333) & (2 * (*(unsigned __int8 *)(v4 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v4 + 4) - 247) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1003D3854()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((657
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v1) == v1
                                                                               + ((v2 + 639189595) & 0xD9E6BDDD)
                                                                               - 333)) ^ v2)))();
}

uint64_t sub_1003D38A4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2014
                                * ((((v2 + 57) ^ (v0 - 331)) & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1003D38E0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((55
                                * (((v1 ^ 0x59 ^ v3) & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0)) ^ v1)))();
}

uint64_t sub_1003D391C()
{
  int v0;
  int v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1406
                                * ((((*(unsigned __int8 *)(v4 + 8) - 5) << (v3 - 76)) & v0)
                                 + ((*(unsigned __int8 *)(v4 + 8) - 5) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1003D3954(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 + 96) + 1428) = 1587865080;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(a2 + 4) != v2 + 494613675) * ((v2 - 1460960059) & 0x57147ABF ^ 0x2B)) ^ v2)))();
}

uint64_t sub_1003D39C0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1495 * ((v2 & (2 * v6)) + (v6 ^ v3) == v3)) ^ v4))
                            - ((v4 - 327442343) & 0x13845FFF)
                            + 414))();
}

uint64_t sub_1003D3A14()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = (v2 ^ 0xEB) + *(unsigned __int8 *)(v3 + 1) - 556;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1905 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)) - 8))();
}

uint64_t sub_1003D3A54()
{
  int v0;
  int v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((171
                                          * ((((*(unsigned __int8 *)(v4 + 2) - 72) << (v2 + 91)) & v0)
                                           + ((*(unsigned __int8 *)(v4 + 2) - 72) ^ v1) == v1)) ^ v3))
                            - 8))();
}

uint64_t sub_1003D3A90()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((890
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                           + ((v2 + 89) ^ (v1 - 422) ^ (*(unsigned __int8 *)(v3 + 3) - 134)) == v1)) ^ v2))
                            - 8))();
}

uint64_t sub_1003D3AD0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = (v2 ^ 0xEB) + *(unsigned __int8 *)(v3 + 4) - 669;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1086 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)) - 8))();
}

uint64_t sub_1003D3B10()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1801
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v1) == (((v2 - 297) | 0x182) ^ v4))) ^ v2))
                            - 8))();
}

uint64_t sub_1003D3B54()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1431
                                          * ((((2 * v2) ^ 0x33C ^ (v0 - 422)) & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)) ^ v2))
                            - 8))();
}

uint64_t sub_1003D3B98()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((61
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v1) == v1
                                                                                        + ((v2 - 443403663) & 0x1A6DCDE7)
                                                                                        - 422)) ^ v2))
                            - 8))();
}

uint64_t sub_1003D3BEC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((v0 & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                                + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v1) == v1)
                                               * ((v2 + 584779938) & 0xDD24F7B6 ^ 0x7C5)) ^ v2))
                            - 8))();
}

void sub_1003D3C3C()
{
  int v0;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  v4 = v0 ^ 0x13F;
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 1428) = 1587865092;
  v5 = (v0 ^ 0x7CC) + 189;
  v6 = 1178560073 * ((v3 + 32226232 - 2 * ((v3 - 120) & 0x1EBBC30)) ^ 0xBB7FC452);
  *(_QWORD *)(v3 - 112) = &STACK[0x6EDAADCA9171F5D9];
  *(_DWORD *)(v3 - 104) = (v0 ^ 0x13F) - v6 - 1882357617;
  *(_DWORD *)(v3 - 120) = -1507894970 - v6;
  sub_1003D9D64(v3 - 120);
  __asm { BR              X8 }
}

uint64_t sub_1003D3E70(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;

  v26 = v23 + 302360890;
  if (v26 <= 0x40)
    v26 = 64;
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * ((236
                                * (a3 - v22 - v24 + v26 >= (((a22 + 8927812) | 0x1A013900) ^ (a6 - 13)))) ^ a22)))();
}

uint64_t sub_1003D3EF0(int a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = v8 + v7;
  v12 = v11 + v6;
  if ((v11 + v6) <= 0x40)
    v12 = v9;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((355
                                * ((((3 * (a4 ^ (a6 + 1558) ^ (a6 - 132))) ^ (a3 - v11 < (a1 + v12))) & 1) == 0)) ^ a4)))();
}

uint64_t sub_1003D3F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v25;
  int v26;
  int v27;
  uint64_t v28;

  return ((uint64_t (*)(void))(*(_QWORD *)(v28
                                        + 8
                                        * ((1934
                                          * ((unint64_t)(&a25 + a13 + (v25 + v26 - 1)) >= ((v27 - a7 + 77) ^ 0x1A8979BEuLL))) ^ v27))
                            - 12))();
}

uint64_t sub_1003D3F94@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t *v7;
  int8x16_t v8;
  int8x16_t v9;

  v8.i64[0] = 0x8282828282828282;
  v8.i64[1] = 0x8282828282828282;
  v9.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v9.i64[1] = 0xC1C1C1C1C1C1C1C1;
  *(int8x16_t *)(v4 + v2 + a2 + ((a1 + v3 - 473) | 0x18Cu)) = vaddq_s8(vsubq_s8(*v7, vandq_s8(vaddq_s8(*v7, *v7), v8)), v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1698 * (((v5 + 1) & 0x1FFFFFFF0) == 16)) ^ (a1 + v3 + 35)))
                            - 12))();
}

void sub_1003D4008()
{
  JUMPOUT(0x1003D3FC0);
}

uint64_t sub_1003D4014(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (a3 | (v7 == v8)))
                                                   + 445217190
                                                   - (a3 - a7 + 77)
                                                   - ((2 * a3) ^ 0x306u)
                                                   + 26))(a1, 3073227135);
}

uint64_t sub_1003D4060@<X0>(int a1@<W1>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  *(&a20 + (a3 + v20 + 396)) = *(_BYTE *)(v21 + v24 + ((a2 + v22 - 453) | 0xAu) - 2135842987)
                                           - ((2 * *(_BYTE *)(v21 + v24 + ((a2 + v22 - 453) | 0xAu) - 2135842987)) & 0x83)
                                           - 63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((929 * ((v20 + a1) < 0x40)) ^ (a2 + v22 - 76)))
                            - 12))();
}

uint64_t sub_1003D40D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,int a36,int a37,unsigned int a38,int a39,int a40,unsigned __int8 a41,int32x4_t a42,int32x4_t a43,int32x4_t a44,int32x4_t a45)
{
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128);
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  int v59;
  uint8x16_t v60;
  uint16x8_t v61;
  int8x16_t v62;
  int8x16_t v63;
  uint16x8_t v64;
  int8x16_t v65;
  int8x16_t v66;
  uint8x16_t v67;
  uint16x8_t v68;
  uint16x8_t v69;
  uint8x16_t v70;
  int8x16_t v73;
  int8x16_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int32x4_t v81;
  int32x4_t v82;
  uint8x16_t v84;
  uint16x8_t v85;
  uint16x8_t v86;
  uint8x16_t v87;
  uint8x16_t v92;
  uint16x8_t v93;
  uint16x8_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  _DWORD *v99;
  int v100;
  unsigned int v101;
  unint64_t v102;
  int8x16x4_t v103;
  int8x16x4_t v104;

  v52 = *(uint64_t (**)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128))(v46 + 8 * v45);
  v53.n128_u64[0] = 0xC1C1C1C1C1C1C1C1;
  v53.n128_u64[1] = 0xC1C1C1C1C1C1C1C1;
  v54 = (__n128)vdupq_n_s32(0x6BEABFFFu);
  v55 = (__n128)vdupq_n_s32(0x6BEABFE2u);
  v56 = (__n128)vdupq_n_s32(0x6BEABFF3u);
  v57.n128_u64[0] = 0x8282828282828282;
  v57.n128_u64[1] = 0x8282828282828282;
  v58 = a38;
  v59 = a41 ^ 0x70;
  if (v59 == 2)
  {
    v104 = vld4q_s8(&a25);
    v84 = (uint8x16_t)veorq_s8(v104.val[0], (int8x16_t)v53);
    v85 = vmovl_u8(*(uint8x8_t *)v84.i8);
    v86 = vmovl_high_u8(v84);
    v87 = (uint8x16_t)veorq_s8(v104.val[1], (int8x16_t)v53);
    _Q22 = vmovl_u8(*(uint8x8_t *)v87.i8);
    _Q21 = vmovl_high_u8(v87);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v92 = (uint8x16_t)veorq_s8(v104.val[2], (int8x16_t)v53);
    v93 = vmovl_high_u8(v92);
    v94 = vmovl_u8(*(uint8x8_t *)v92.i8);
    v104.val[0] = veorq_s8(v104.val[3], (int8x16_t)v53);
    v104.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v104.val[0]);
    v104.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v104.val[1]);
    v104.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v104.val[1].i8);
    v104.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v104.val[0].i8);
    v104.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v104.val[0]);
    v104.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v104.val[0].i8);
    v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v94.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v85.i8), 0x18uLL)), v104.val[0]);
    v96 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v94, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v85), 0x18uLL)), v104.val[3]);
    v97 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v93.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v86.i8), 0x18uLL)), v104.val[1]);
    v98 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v93, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v86), 0x18uLL)), v104.val[2]);
    v104.val[0] = veorq_s8(vandq_s8((int8x16_t)v95, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)v104.val & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v104.val[3] = veorq_s8(vandq_s8((int8x16_t)v96, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v104.val[3] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v104.val[1] = veorq_s8(vandq_s8((int8x16_t)v97, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v104.val[1] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v104.val[2] = veorq_s8(vandq_s8((int8x16_t)v98, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v104.val[2] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    a44 = vaddq_s32(vsubq_s32(v97, vaddq_s32((int32x4_t)v104.val[1], (int32x4_t)v104.val[1])), (int32x4_t)v55);
    a45 = vaddq_s32(vsubq_s32(v98, vaddq_s32((int32x4_t)v104.val[2], (int32x4_t)v104.val[2])), (int32x4_t)v55);
    a42 = vaddq_s32(vsubq_s32(v95, vaddq_s32((int32x4_t)v104.val[0], (int32x4_t)v104.val[0])), (int32x4_t)v55);
    a43 = vaddq_s32(vsubq_s32(v96, vaddq_s32((int32x4_t)v104.val[3], (int32x4_t)v104.val[3])), (int32x4_t)v55);
    v99 = (_DWORD *)&a42 + v51 + 1789185932;
    v100 = *(v99 - 8) ^ *((_DWORD *)&a42 + (((a7 + a6 - 343) | 0x21u) ^ (unint64_t)(v51 - 98)) + 1789185932);
    v101 = *(v99 - 16) ^ *(v99 - 14) ^ (v100 + v48 - ((2 * v100) & 0xD7D57FC4));
    HIDWORD(v102) = v101 ^ v48;
    LODWORD(v102) = v101;
    *v99 = (v102 >> 31) + v48 - ((2 * (v102 >> 31)) & 0xD7D57FC4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46
                                                                + 8 * ((73 * (v50 == 1789185869)) ^ (a7 + a6 + 91))))(61, 424, v58);
  }
  else if (v59 == 1)
  {
    v103 = vld4q_s8(&a25);
    v60 = (uint8x16_t)veorq_s8(v103.val[0], (int8x16_t)v53);
    v61 = vmovl_u8(*(uint8x8_t *)v60.i8);
    v62 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v61.i8);
    v63 = (int8x16_t)vmovl_high_u16(v61);
    v64 = vmovl_high_u8(v60);
    v65 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v64.i8);
    v66 = (int8x16_t)vmovl_high_u16(v64);
    v67 = (uint8x16_t)veorq_s8(v103.val[1], (int8x16_t)v53);
    v68 = vmovl_high_u8(v67);
    v69 = vmovl_u8(*(uint8x8_t *)v67.i8);
    v70 = (uint8x16_t)veorq_s8(v103.val[2], (int8x16_t)v53);
    _Q26 = (int8x16_t)vmovl_high_u8(v70);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v70.i8);
    v73 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v103.val[0] = veorq_s8(v103.val[3], (int8x16_t)v53);
    v103.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v103.val[0]);
    v103.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[1]);
    v103.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v103.val[0].i8);
    v103.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[0]);
    v103.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v103.val[0].i8), 0x18uLL), v73), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), v62));
    v103.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v103.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v63));
    v103.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v103.val[1].i8), 0x18uLL), v78), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), v65));
    v103.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v103.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v66));
    v79 = (int32x4_t)veorq_s8(vandq_s8(v103.val[0], (int8x16_t)v56), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v80 = (int32x4_t)veorq_s8(vandq_s8(v103.val[3], (int8x16_t)v56), (int8x16_t)(*(_OWORD *)&v63 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v81 = (int32x4_t)veorq_s8(vandq_s8(v103.val[1], (int8x16_t)v56), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v82 = (int32x4_t)veorq_s8(vandq_s8(v103.val[2], (int8x16_t)v56), (int8x16_t)(*(_OWORD *)&v66 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[1], vaddq_s32(v81, v81)), (int32x4_t)v55);
    a45 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[2], vaddq_s32(v82, v82)), (int32x4_t)v55);
    a42 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[0], vaddq_s32(v79, v79)), (int32x4_t)v55);
    a43 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[3], vaddq_s32(v80, v80)), (int32x4_t)v55);
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (a6 ^ (a6 + 1523))) - 12))(61, 424);
  }
  else
  {
    a35 = 2 * (a35 ^ v49) + v49 - (v47 & (4 * (a35 ^ v49)));
    a36 = 2 * (a36 ^ v49) + v49 - (v47 & (4 * (a36 ^ v49)));
    a37 = 2 * (a37 ^ v49) + v49 - (v47 & (4 * (a37 ^ v49)));
    a38 = 2 * (a38 ^ v49) + v49 - (v47 & (4 * (a38 ^ v49)));
    return v52(61, 424, v53, v54, v55, v56, v57);
  }
}

void sub_1003D417C()
{
  JUMPOUT(0x1003D41ACLL);
}

void sub_1003D441C()
{
  JUMPOUT(0x1003D4318);
}

uint64_t sub_1003D4428@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2 * (a1 + 1 == v3 + 16)) | (4 * (a1 + 1 == v3 + 16)) | v1)) - 8))();
}

uint64_t sub_1003D4500(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1896 * (a8 + 1 == v9 + 32)) ^ a3)) - 8))();
}

uint64_t sub_1003D45CC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1910 * (a1 + 1 != v3 + 48)) ^ v1)) - 8))();
}

void sub_1003D46B0()
{
  JUMPOUT(0x1003D4C38);
}

uint64_t sub_1003D48A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8 * ((734 * (v7 + 1 != v9 + 4)) ^ a6)))(a1, a2, v6);
}

uint64_t sub_1003D4984@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * (a2 + 1 != v3 + 24)) | (32 * (a2 + 1 != v3 + 24))) ^ a1)))();
}

uint64_t sub_1003D4A34(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8 * ((1538 * (v5 + 1 == v7 + 44)) ^ a4)))(a1, a2, v4);
}

uint64_t sub_1003D4B1C@<X0>(unsigned int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((505 * (a2 + 1 == v3 + 64)) ^ a1)) - 8))();
}

void sub_1003D4BE4()
{
  JUMPOUT(0x1003D4C34);
}

uint64_t sub_1003D4CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17, unsigned int a18)
{
  uint64_t v18;
  _BOOL4 v19;

  if (a18 < a17 != (a14 - 409047642) < 0x66ECCDF3)
    v19 = (a14 - 409047642) < 0x66ECCDF3;
  else
    v19 = a14 - 409047642 > a18;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18
                                                                                 + 8
                                                                                 * ((1617 * !v19) ^ (a7 + a6 - 320)))
                                                                     - 8))(a1, a2, a3, 2159124339);
}

uint64_t sub_1003D4D44(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((53 * (a4 + v7 + 63 < ((473 - a7) ^ (a6 - 234) ^ (a4 - 346)) + v7)) ^ 0x15Fu)))();
}

uint64_t sub_1003D4D94(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (int)((((((v15 - a7 + 111) ^ (a13 + v13 - (unint64_t)(v14 + a4) < 0x10)) & 1) == 0)
                                     * (a7 + ((v15 + 1056931476) & 0xDB89F9AF) + 705)) ^ v15)))();
}

uint64_t sub_1003D4DF4(int8x16_t a1, double a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11, int a12)
{
  int v12;
  int8x16_t *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t v17;

  v17 = *(int8x16_t *)(v16 + v14 + ((v12 - a11 + 60) ^ (a9 - 36)));
  *v13 = vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), a5)), a1);
  return (*(uint64_t (**)(void))(v15 + 8 * (a10 ^ (a12 + v12 + 262))))();
}

uint64_t sub_1003D4E54@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v7 + a6) = *(_BYTE *)(v10 + (v8 + a3))
                      - ((2 * *(_BYTE *)(v10 + (v8 + a3))) & 0x83)
                      - 63;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((15 * (v6 ^ (a4 - 4))) ^ a1) + a6 != 64) * a2) ^ (a5 + v6 + 262))))();
}

uint64_t sub_1003D4EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  _BOOL4 v17;

  v16 = a13 - 1524472175;
  if ((a13 - 1524472175) < 0xFCCD46C8 != v13 + 2105468475 < ((790 * (v14 ^ 0x725)) ^ 0xFCCD40E4))
    v17 = v16 < 0xFCCD46C8;
  else
    v17 = v13 + 2105468475 < v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((11 * v17) ^ v14)) - 4))();
}

uint64_t sub_1003D4F30(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v37 = (a2 + 1524495811) & 0xBFAB7DBE;
  v38 = 628203409 * ((((v36 - 120) | 0x9A7BC63F) + (~(v36 - 120) | 0x658439C0)) ^ 0x18F3CA0D);
  *(_QWORD *)(v36 - 120) = a10;
  *(_DWORD *)(v36 - 112) = v38 + a2 - 898;
  *(_DWORD *)(v36 - 108) = a13 - v38 + 157941893;
  v39 = sub_1003D0120(v36 - 120);
  v40 = a35 & 0x3F;
  *(&a26 + (v40 ^ 0x2A)) = 65;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((78 * ((v40 ^ 0x2A) <= v37 - 445217143)) ^ a2)))(v39);
}

uint64_t sub_1003D5048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((582 * (v7 - 136259166 < ((188 * (v8 ^ (a6 - 2))) ^ 0x140u))) ^ (a7 + v8 + 672)))
                            - 4))();
}

uint64_t sub_1003D5094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v9 = v6;
  v10 = v6 - 581476363 + ((v7 + 8986250) | 0x1A0059ACu);
  if (v10 <= 0x38)
    v10 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v10 - v9 + 136259166 > 7) | v7))
                            + 445217190
                            - (a6 + v7 - 376)
                            + 4))();
}

uint64_t sub_1003D5108@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(&a20 + v21 - 136259166) = 0xC1C1C1C1C1C1C1C1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * ((593 * ((v20 & 0xFFFFFFFFFFFFFFF8) == 8)) | (a2 + a3 - 183)))
                            - (a3 - a1 + 376)
                            + 368))();
}

void sub_1003D5164()
{
  JUMPOUT(0x1003D5138);
}

uint64_t sub_1003D516C@<X0>(int a1@<W0>, int a2@<W3>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  unsigned int v29;
  int v30;
  _BOOL4 v31;

  v28 = a3 < v23;
  *(&a20 + ((v25 - 251) ^ (v24 + 1491)) + v20) = *(_BYTE *)(v27 + (v22 + a2))
                                                             - ((2 * *(_BYTE *)(v27 + (v22 + a2))) & 0x83)
                                                             - 63;
  v29 = v22 + 1 + a1;
  v30 = v28 ^ (v29 < v23);
  v31 = v29 < a3;
  if (!v30)
    v28 = v31;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((v28 * v21) ^ v25)) - 4))();
}

uint64_t sub_1003D51E0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((69 * (v2 ^ 0x8B)) ^ (v1 == ((13 * (v2 ^ 0x78D)) ^ 0x7E))) & 1) * a1) ^ v2)))();
}

uint64_t sub_1003D5224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((v7 ^ 0x15u) > 7) * (a7 + (v8 ^ (a6 - 77)) + 1185)) ^ v8)) - 8))();
}

uint64_t sub_1003D5258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v28;
  int v29;

  v29 = a7 + ((v27 - 542508240) & 0x3ADF7DAE);
  *(_QWORD *)(&a25 + v25 + ((v29 - 266) ^ 0xFFFFFFFFF7E0D96DLL)) = 0xC1C1C1C1C1C1C1C1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((1998 * ((v26 & 0x38) == 8)) ^ (v29 - 328))) - 4))();
}

void sub_1003D52C8()
{
  JUMPOUT(0x1003D52A8);
}

uint64_t sub_1003D52D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((((v9 + 402653108) | 0x2897882) + (v9 ^ (a7 + 512))) * (v7 == v8)) ^ v9))
                            - 4))();
}

void sub_1003D5320()
{
  JUMPOUT(0x1003D41ACLL);
}

uint64_t sub_1003D57A8@<X0>(char a1@<W5>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  uint64_t v20;
  uint64_t v21;

  *(&a20 + v20 - 136259166) = -63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21
                                        + 8
                                        * ((186
                                          * ((((unint64_t)(v20 - 136259165) < 0x40) ^ (13 * (a3 ^ (a1 - 3)))) & 1)) ^ (a2 + a3 - 365)))
                            - 8))();
}

uint64_t sub_1003D5860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  _BOOL4 v45;

  v43 = a6 + v39 - 473;
  v44 = *(_DWORD *)(&a25 + (v43 + v41 - 1050929806) + 72);
  *(_BYTE *)(a3 + (v43 + v41 - 1050929806)) = (HIBYTE(v44) ^ 0xA7)
                                                          - ((2 * (HIBYTE(v44) ^ 0xA7)) & 0x83)
                                                          - 63;
  *(_BYTE *)(a3 + (v41 + v37)) = (BYTE2(v44) ^ 0x7E) - ((2 * (BYTE2(v44) ^ 0x7E)) & 0x83) - 63;
  *(_BYTE *)(a3 + (v41 + v37 + 1)) = (BYTE1(v44) ^ 0x95)
                                                 - 2 * ((BYTE1(v44) ^ 0x95) & 0xC3 ^ BYTE1(v44) & 2)
                                                 - 63;
  *(_BYTE *)(a3 + (v41 + v37 + 2)) = v44 ^ 0x7B;
  v45 = v41 - 1525502786 < (a37 - 1187371766);
  if (v41 - 1525502786 < v38 != a37 - 1187371766 < v38)
    v45 = a37 - 1187371766 < v38;
  return (*(uint64_t (**)(void))(v42 + 8 * ((v45 * v40) ^ v39)))();
}

void sub_1003D5A0C()
{
  JUMPOUT(0x1003D59DCLL);
}

uint64_t sub_1003D5A20(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_1021332F0 + ((1944 * (*(_DWORD *)(a2 + 4) == 494613955)) ^ 0xE6u)))(4294925278);
}

uint64_t sub_1003D5A64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return (*(uint64_t (**)(_QWORD))(v2 + 1848))(0);
}

void sub_1003D5ADC(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  v2 = *(_QWORD *)((char *)*(&off_1021378F0 + (v1 ^ 0x3E2))
                 + 8
                 * ((1454
                   * (((uint64_t (*)(uint64_t, uint64_t))*(&off_1021378F0 + v1 - 689))(32, 0x101004023FF3BD5) != 0)) ^ v1)- 12)- 12;
  __asm { BR              X8 }
}

uint64_t sub_1003D5B80(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0x74AD680F74AD680FLL;
  *(_QWORD *)(result + 16) = 0x81F313C5274A8BF4;
  *(_DWORD *)(result + 24) = 1810546658;
  *(_QWORD *)(v2 - 0x1706FB9DE6F6FC5CLL) = result + 0x31BC703A95C2A15CLL;
  *((_DWORD *)v1 + 2) = 1810546658;
  return result;
}

uint64_t sub_1003D5C00(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1021332F0
                                                    + ((227 * (*(_DWORD *)(a2 + 4) != 494613955)) ^ 0x473u))
                                          - 4))(4294925278);
}

uint64_t sub_1003D5C4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 448) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 15152) - 4))(0);
}

void sub_1003D5CB4(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 & 0xB853BF30 | ~(a1 | 0xB853BF30)) ^ 0x996AFD14);
  v2 = *(_QWORD *)a1;
  ((void (*)(_QWORD, void (*)()))*(&off_1021378F0 + v1 - 636))(*(&off_1021378F0 + v1 - 759), sub_1003FC8AC);
  __asm { BR              X10 }
}

uint64_t sub_1003D5D58@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v2 + 8 * (a1 - 303)) - 4) != 0) * (a1 ^ 0x35C)) ^ a1))
                            - 4))();
}

uint64_t sub_1003D5D88@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x1E3)))(v1);
}

uint64_t sub_1003D5DB8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  unsigned __int8 v4;
  char *v5;
  int v6;
  char v8;

  v2 = (qword_1022A15A8 + qword_1022A1558) ^ (unint64_t)&v8;
  qword_1022A1558 = 1045096823 * v2 - 0x1159CE8E9813C2FLL;
  qword_1022A15A8 = 1045096823 * (v2 ^ 0xFEEA6317167EC3D1);
  v3 = *(_DWORD *)(a2 + 4);
  v4 = 119 * ((qword_1022A15A8 + 119 * v2 - 47) ^ 0xD1);
  v5 = (char *)*(&off_1021378F0 + (v4 ^ byte_101BA7780[byte_101BA3900[v4] ^ 0xEE]) - 44) - 12;
  if (v3 == 494613945)
    __asm { BR              X16 }
  if (v3 == 494613952)
  {
    v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X1 }
  }
  return 4294925278;
}

void sub_1003D649C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  _DWORD v6[2];
  uint64_t v7;

  v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  if (*(_DWORD *)(*(_QWORD *)a1 - 0x63F19B7CB7021DA0) - 517884438 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)a1 - 0x63F19B7CB7021DA0) - 517884438;
  else
    v3 = 517884438 - *(_DWORD *)(*(_QWORD *)a1 - 0x63F19B7CB7021DA0);
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x63F19B7CB7021DA0) - 517884438 >= 0)
    v4 = *(_DWORD *)(v2 - 0x63F19B7CB7021DA0) - 517884438;
  else
    v4 = 517884438 - *(_DWORD *)(v2 - 0x63F19B7CB7021DA0);
  v7 = *(_QWORD *)a1;
  v6[1] = (460628867 * ((((2 * v6) | 0x5B38C61C) - v6 + 1382259954) ^ 0xE10AE173)) ^ (v1 + 1392);
  sub_1003DB9B8((uint64_t)v6);
  if (v3 >= v4)
    v5 = v4;
  else
    v5 = v3;
  __asm { BR              X14 }
}

uint64_t sub_1003D6634()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v3 + 1427811767 > 871899650 || v3 + 1427811767 < v2 - 1275583997;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((995 * v5) ^ v1)) - ((v1 - 76) ^ 0x50FLL)))();
}

uint64_t sub_1003D668C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v13 = 4 * (v11 + v7);
  v14 = v2 + v9 + (*(_DWORD *)(*(_QWORD *)(v12 - 0x63F19B7CB7021D9CLL) + v13) ^ v8);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x63F19B7CB7021D9CLL) + v13) = v14 + v8 - (v10 & (2 * v14));
  v15 = v11 + 1 + v3;
  v17 = v15 > v4 || v15 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((8 * v17) | (32 * v17)) ^ (v5 + 1237))) - 12))();
}

uint64_t sub_1003D6740()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v4 = v2 + 865519013 + ((v1 - 250) | 0x100);
  v6 = v4 > 309608185 || v4 < v3 - 1837875462;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * ((v1 - 653) ^ 0x2AD)) ^ v1)))();
}

uint64_t sub_1003D6794@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  _BOOL4 v18;

  v14 = 4 * (v13 + v9);
  v15 = v4 + v11 + (*(_DWORD *)(*(_QWORD *)(a3 - 0x63F19B7CB7021D9CLL) + v14) ^ v10);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x63F19B7CB7021D9CLL) + v14) = v15 + v10 - ((v12 + v8 - 659 - 630) & (2 * v15));
  v16 = v5 + v13 + 1290;
  v18 = v16 > v6 || v16 < v7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v18) | (8 * v18)) ^ (v8 - 6))))();
}

uint64_t sub_1003D6848()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)(((4 * (v1 != 0x2C7F82287963CB70)) | (8 * (v1 != 0x2C7F82287963CB70))) ^ v2))
                            - (v2 ^ 0x272)))();
}

void sub_1003D6884(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  *(_DWORD *)(*(_QWORD *)(a1 - 0x63F19B7CB7021D9CLL) + 4 * (v4 + v2)) = v3 + 1;
  v5 = v4 + ((v1 - 588) | 0x50) - 121 + v2;
  *(_DWORD *)(a1 - 0x63F19B7CB7021DA0) = ((v5 * (v6 - 369984849)) ^ 0x9EFFCE97)
                                         + 2145287039
                                         + ((2 * v5 * (v6 - 369984849)) & 0x3DFF9D2E);
}

void sub_1003D6A64(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  BOOL v4;

  v1 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x31BC703A95C2A150) + 1318074070;
  v2 = *(_DWORD *)a1 + 1759421093 * (a1 ^ 0xB37DB054) + 1724904104;
  v3 = (v2 < 0xC33D9EE5) ^ (v1 < 0xC33D9EE5);
  v4 = v1 < v2;
  if (v3)
    v4 = v2 < 0xC33D9EE5;
  __asm { BR              X11 }
}

uint64_t sub_1003D6B54()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v2 == (v0 ^ 0x2BC) + 1045652707)
                                               * ((v0 + 508558864) & 0xE1AFFFDE ^ 0x44C)) ^ v0))
                            - 12))();
}

uint64_t sub_1003D6BA4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((((v0 - 932) | 0x449) ^ 0xFFFFFACF) + ((v0 - 833) | 0xF0))
                                               * (*(_DWORD *)(v1 - 0x31BC703A95C2A14CLL) == 659196916)) | v0))
                            - 4))();
}

uint64_t sub_1003D6BFC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  v6 = (v1 + 1675497480) & 0x9C21EEDF;
  *(_BYTE *)(*(_QWORD *)(v3 - 0x31BC703A95C2A15CLL) + (v6 ^ 0x9A620AE4) + v5 + v2) = *(_BYTE *)(*(_QWORD *)(v3 - 0x31BC703A95C2A15CLL)
                                                                                              + (v2 - 659196917));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((296 * (((v2 - 1 == a1) ^ v6) & 1)) ^ v6))
                            - 8))();
}

uint64_t sub_1003D6C80@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(*v2 + (v3 + v5)) = *(_BYTE *)(*v2 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((((v5 - 1 == a1) ^ v1) & 1) * v6) ^ v1)) - 8))();
}

uint64_t sub_1003D6CBC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((58 * (*(_BYTE *)(v1 - 0x31BC703A95C2A148) & 1)) ^ v0))
                            - ((((v0 - 920) | 0x259u) + 43) ^ 0x68CLL)))();
}

uint64_t sub_1003D6D04@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;
  va_list va;

  va_start(va, a2);
  v5 = (*(uint64_t (**)(_QWORD, char *, _QWORD, uint64_t))(v3 + 8 * (v4 - 1467)))(**(unsigned int **)(v3 + 8 * (v4 ^ 0x617)), va, ((a1 - 1550687294) & 0xFFFFF000 ^ 0x74AFE82F)+ ((2 * (a1 - 1550687294)) & 0xE95FC000)- 1957685514+ ((v4 - 1541) | 0x58), 1) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((26 * v5) ^ v4)) - 8))();
}

uint64_t sub_1003D6D90()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((19 * (*(_QWORD *)(v0 - 0x31BC703A95C2A15CLL) != 0)) ^ (v2 + 1100101886) & 0xBE6DC2FF))
                            - (((v2 + 1100101886) & 0xBE6DC2FF ^ 0x6DB)
                             - 859)
                            + 254))();
}

uint64_t sub_1003D6E00()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  v3 = *(_DWORD *)(v1 - 0x31BC703A95C2A14CLL)
     - (((v0 + 1267192427) & 0xB4782FFF ^ 0x6520110D) & (2 * *(_DWORD *)(v1 - 0x31BC703A95C2A14CLL) + 829089816))
     - 1958380228;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1180
                                          * (((2 * v3) & 0xFFEFFE7A ^ 0x65201260) + (v3 ^ 0x4D67F60D) + 1811854331 != 1811329848)) | v0))
                            - 12))();
}

uint64_t sub_1003D6EB4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1298 * (v2 + v0 + ((419 * (v1 ^ 0x36E)) ^ 0x8042Au) > 7)) ^ v1))
                            - 41 * (v1 ^ 0x378u)
                            + 849))();
}

uint64_t sub_1003D6F28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(((((v3 + 2022538384) & 0x877284FB) - 1209)
                                               * ((unint64_t)(a2 - v5 - v2) < 0x20)) ^ v3))
                            - 12))();
}

uint64_t sub_1003D6F6C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((62
                                          * (((((v1 + 43) ^ 0x2B) - 8) ^ (v0 < 3 * ((v1 + 43) ^ 0x22Bu)
                                                                                              - 1225)) & 1)) ^ (v1 + 43)))
                            - 12))();
}

uint64_t sub_1003D6FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = (v4 + v3);
  v9 = *(_OWORD *)(a2 + v8 - 15);
  v10 = *(_OWORD *)(a2 + v8 - 31);
  v11 = v2 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((815 * (((v6 - 205) | 0x200) - 1532 == (v5 & 0xFFFFFFE0))) ^ (v6 + 157)))
                            - 12))();
}

void sub_1003D7010()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 0x31BC703A95C2A144) = -1810504650;
}

uint64_t sub_1003D7204(_DWORD *a1)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  uint64_t result;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = 1755732067
     * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  v3 = a1[8] - v2;
  v4 = a1[2] ^ v2;
  v8 = v3
     + 628203409 * ((&v8 - 253749462 - 2 * ((unint64_t)&v8 & 0xF0E0172A)) ^ 0x72681B19)
     - 1404134225;
  result = nullsub_34(&v8);
  if (v4 > 1206756619)
  {
    if (v4 == 1491969291)
    {
      v6 = 3;
    }
    else
    {
      if (v4 != 1206756620)
        goto LABEL_11;
      v6 = 1;
    }
LABEL_10:
    v7 = *(_QWORD *)((char *)*(&off_1021378F0 + (int)(v3 ^ 0x45E0922A))
                   + 8
                   * (int)((621
                          * (((uint64_t (*)(_QWORD, uint64_t))*(&off_1021378F0 + (int)(v3 ^ 0x45E092B9)))(*((_DWORD *)*(&off_1021378F0 + (int)(v3 - 1172345429)) + 6 * v6 + 1)+ ((v3 - 1172344314) ^ 0xE284CE2B), 3511634213) != 0)) ^ (v3 - 1172345181))- 12)- 8;
    __asm { BR              X9 }
  }
  if (v4 == 1206756616)
  {
    v6 = 0;
    goto LABEL_10;
  }
  if (v4 == 1206756619)
  {
    v6 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[13] = -1810504610;
  return result;
}

void sub_1003D78B8(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  unsigned int v5;
  unint64_t *v6;
  unsigned int v7;

  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  v3 = 1178560073 * ((((2 * &v5) | 0xC4B5652C) - &v5 + 497372522) ^ 0x58CECAF4);
  v5 = -1507894969 - v3;
  v7 = -1882357464 - v3;
  v6 = &STACK[0x6EDAADCA9171FA81];
  sub_1003D9D64((uint64_t)&v5);
  __asm { BR              X9 }
}

uint64_t sub_1003D7A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  if ((v9 + 554307590) <= 0x40)
    v12 = 64;
  else
    v12 = v9 + 554307590;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((1049 * ((v11 - v7 - v8 + v12) > 0xE)) ^ 0x13Bu))
                                                                                                - 8))(315, a2, 2936706110, a4, a5, a6, a7);
}

uint64_t sub_1003D7AD4()
{
  int v0;
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;

  v7 = v1 + v0;
  v8 = v3 + v7 + 1755;
  if (v8 > 0x40)
    v2 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((52 * (v6 - v7 < v4 + v2)) ^ 0x6DB)) - 12))();
}

uint64_t sub_1003D7B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((77
                                          * (a13 + v16 - 220 + (unint64_t)(v13 + 1754) >= (((v14 - 1036) | 0xAD) ^ 0x2BDuLL))) ^ v14))
                            - 4))();
}

uint64_t sub_1003D7B88@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0x8282828282828282;
  v7.i64[1] = 0x8282828282828282;
  v8.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v8.i64[1] = 0xC1C1C1C1C1C1C1C1;
  *(int8x16_t *)(v3 + (a1 + v1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return ((uint64_t (*)(int8x16_t *))(*(_QWORD *)(v5
                                                          + 8
                                                          * (((((v4 + 1) & 0x1FFFFFFF0) == 16) * ((v2 - 380) ^ 0x5B5)) ^ v2))
                                              - 4))(&v6[1]);
}

void sub_1003D7BF8()
{
  JUMPOUT(0x1003D7BC4);
}

uint64_t sub_1003D7C04@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2 * ((((((a1 + 33627598) & 0xFDFEE5FD) - 1267) ^ (v1 == v2)) & 1) == 0)) & 0xF7 | (8 * (((((a1 - 50) & 0xFD) + 13) ^ ~(v1 == v2)) & 1)) | a1))
                            - 8))();
}

uint64_t sub_1003D7C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)(v19 - 220 + (a8 + v15)) = *(_BYTE *)(a15 + v18 - 643217243)
                                                   - ((2 * *(_BYTE *)(a15 + v18 - 643217243)) & 0x83)
                                                   - 63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((1484 * ((a3 + a8 + 1) < 0x40)) ^ (5 * (v16 ^ 0x4C0))))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1003D7CCC()
{
  JUMPOUT(0x1003D7C78);
}

uint64_t sub_1003D7CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(__n128, __n128, __n128, __n128, __n128);
  __n128 v41;
  const char *v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  int v52;
  uint8x16_t v53;
  uint16x8_t v54;
  int8x16_t v55;
  int8x16_t v56;
  uint16x8_t v57;
  int8x16_t v58;
  int8x16_t v59;
  uint8x16_t v60;
  uint16x8_t v61;
  uint16x8_t v62;
  uint8x16_t v63;
  int8x16_t v66;
  int8x16_t v71;
  int32x4_t v72;
  int32x4_t v73;
  int32x4_t v74;
  int32x4_t v75;
  uint8x16_t v77;
  uint16x8_t v78;
  uint16x8_t v79;
  uint8x16_t v80;
  uint8x16_t v85;
  uint16x8_t v86;
  uint16x8_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  _DWORD *v92;
  int v93;
  unsigned int v94;
  int v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  int8x16x4_t v103;
  int8x16x4_t v104;

  v40 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v34 + 8 * v32) - 4);
  v41 = (__n128)vdupq_n_s32(0x6BEABFFFu);
  v42 = (const char *)(v39 - 220);
  v43 = (__n128)vdupq_n_s32(0x6BEABFE2u);
  v44.n128_u64[0] = 0xC1C1C1C1C1C1C1C1;
  v44.n128_u64[1] = 0xC1C1C1C1C1C1C1C1;
  a21 = v38 - 16;
  LODWORD(v101) = 1853828689;
  v45.n128_u64[0] = 0x8282828282828282;
  v45.n128_u64[1] = 0x8282828282828282;
  v46 = (__n128)vdupq_n_s32(0x6BEABFF3u);
  v48 = *(_DWORD *)(v39 - 148);
  v47 = *(_DWORD *)(v39 - 144);
  v50 = *(_DWORD *)(v39 - 140);
  v49 = *(_DWORD *)(v39 - 136);
  v51 = v50;
  v52 = *(_BYTE *)(v39 - 124) ^ 0x70;
  LODWORD(v100) = *(unsigned __int8 *)(v39 - 124) ^ 0x70;
  if (v52 == 2)
  {
    v102 = __PAIR64__(v49, v50);
    v104 = vld4q_s8(v42);
    HIDWORD(a14) = *(_DWORD *)(v39 - 132);
    v77 = (uint8x16_t)veorq_s8(v104.val[0], (int8x16_t)v44);
    v78 = vmovl_u8(*(uint8x8_t *)v77.i8);
    v79 = vmovl_high_u8(v77);
    v80 = (uint8x16_t)veorq_s8(v104.val[1], (int8x16_t)v44);
    _Q22 = vmovl_u8(*(uint8x8_t *)v80.i8);
    _Q21 = vmovl_high_u8(v80);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v85 = (uint8x16_t)veorq_s8(v104.val[2], (int8x16_t)v44);
    v86 = vmovl_high_u8(v85);
    v87 = vmovl_u8(*(uint8x8_t *)v85.i8);
    v104.val[0] = veorq_s8(v104.val[3], (int8x16_t)v44);
    v104.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v104.val[0]);
    v104.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v104.val[1]);
    v104.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v104.val[1].i8);
    v104.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v104.val[0].i8);
    v104.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v104.val[0]);
    v104.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v104.val[0].i8);
    v88 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v87.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8), 0x18uLL)), v104.val[0]);
    v89 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v87, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v78), 0x18uLL)), v104.val[3]);
    v90 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v86.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8), 0x18uLL)), v104.val[1]);
    v91 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v86, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v79), 0x18uLL)), v104.val[2]);
    v104.val[0] = veorq_s8(vandq_s8((int8x16_t)v88, (int8x16_t)v41), (int8x16_t)(*(_OWORD *)v104.val & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v104.val[3] = veorq_s8(vandq_s8((int8x16_t)v89, (int8x16_t)v41), (int8x16_t)(*(_OWORD *)&v104.val[3] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v104.val[1] = veorq_s8(vandq_s8((int8x16_t)v90, (int8x16_t)v41), (int8x16_t)(*(_OWORD *)&v104.val[1] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v104.val[2] = veorq_s8(vandq_s8((int8x16_t)v91, (int8x16_t)v41), (int8x16_t)(*(_OWORD *)&v104.val[2] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    a31 = vaddq_s32(vsubq_s32(v90, vaddq_s32((int32x4_t)v104.val[1], (int32x4_t)v104.val[1])), (int32x4_t)v43);
    a32 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v104.val[2], (int32x4_t)v104.val[2])), (int32x4_t)v43);
    a29 = vaddq_s32(vsubq_s32(v88, vaddq_s32((int32x4_t)v104.val[0], (int32x4_t)v104.val[0])), (int32x4_t)v43);
    a30 = vaddq_s32(vsubq_s32(v89, vaddq_s32((int32x4_t)v104.val[3], (int32x4_t)v104.val[3])), (int32x4_t)v43);
    v92 = (_DWORD *)&a29 + v36 + 255053335;
    v93 = *(v92 - 8) ^ *(v92 - 3);
    v94 = *(v92 - 16) ^ *(v92 - 14) ^ (v93 + v33 - ((v93 << ((a5 ^ (a5 - 45) ^ 0x5A) - 46)) & 0xD7D57FC4));
    HIDWORD(v96) = v94 ^ v33;
    LODWORD(v96) = v94;
    v95 = v96 >> 31;
    v97 = (2 * v95) & 0xD7D57FC4;
    v98 = (v95 + v33 - v97);
    *v92 = v98;
    v99 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * (int)((509 * (v38 == 255053272)) ^ a5 ^ (a5 + 979))) - 12);
    HIDWORD(v100) = a5 - 10731986;
    HIDWORD(v101) = HIDWORD(a12) + 383012378;
    return v99(v99, v98, v47, v51, a5, v97, a21, 49, a9, a10, a11, a12, a13, a14, a15, v100, v101, __PAIR64__(v47, v48), v102,
             v40,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else if (v52 == 1)
  {
    v103 = vld4q_s8(v42);
    v53 = (uint8x16_t)veorq_s8(v103.val[0], (int8x16_t)v44);
    v54 = vmovl_u8(*(uint8x8_t *)v53.i8);
    v55 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v54.i8);
    v56 = (int8x16_t)vmovl_high_u16(v54);
    v57 = vmovl_high_u8(v53);
    v58 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8);
    v59 = (int8x16_t)vmovl_high_u16(v57);
    v60 = (uint8x16_t)veorq_s8(v103.val[1], (int8x16_t)v44);
    v61 = vmovl_high_u8(v60);
    v62 = vmovl_u8(*(uint8x8_t *)v60.i8);
    v63 = (uint8x16_t)veorq_s8(v103.val[2], (int8x16_t)v44);
    _Q26 = (int8x16_t)vmovl_high_u8(v63);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v63.i8);
    v66 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v71 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v103.val[0] = veorq_s8(v103.val[3], (int8x16_t)v44);
    v103.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v103.val[0]);
    v103.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[1]);
    v103.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v103.val[0].i8);
    v103.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[0]);
    v103.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v103.val[0].i8), 0x18uLL), v66), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v62.i8, 8uLL), v55));
    v103.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v103.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v62, 8uLL), v56));
    v103.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v103.val[1].i8), 0x18uLL), v71), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v61.i8, 8uLL), v58));
    v103.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v103.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v61, 8uLL), v59));
    v72 = (int32x4_t)veorq_s8(vandq_s8(v103.val[0], (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v55 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v73 = (int32x4_t)veorq_s8(vandq_s8(v103.val[3], (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v56 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v74 = (int32x4_t)veorq_s8(vandq_s8(v103.val[1], (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v75 = (int32x4_t)veorq_s8(vandq_s8(v103.val[2], (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[1], vaddq_s32(v74, v74)), (int32x4_t)v43);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[2], vaddq_s32(v75, v75)), (int32x4_t)v43);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[0], vaddq_s32(v72, v72)), (int32x4_t)v43);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[3], vaddq_s32(v73, v73)), (int32x4_t)v43);
    return ((uint64_t (*)(__n128))(*(_QWORD *)(v34 + 8 * ((38 * (a21 + 1 == v38)) ^ (a6 + (int)a5 - 157)))
                                           - 8))(v41);
  }
  else
  {
    *(_DWORD *)(v39 - 148) = 2 * (v48 ^ v35) + v35 - (v37 & (4 * (v48 ^ v35)));
    *(_DWORD *)(v39 - 144) = 2 * (v47 ^ v35) + v35 - (v37 & (4 * (v47 ^ v35)));
    *(_DWORD *)(v39 - 140) = 2 * (v50 ^ v35) + v35 - (v37 & (4 * (v50 ^ v35)));
    *(_DWORD *)(v39 - 136) = 2 * (v49 ^ v35) + v35 - (v37 & (4 * (v49 ^ v35)));
    return v40(v41, v43, v44, v45, v46);
  }
}

uint64_t sub_1003D8838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, unsigned __int8 a18, unsigned int a19, unsigned int a20)
{
  uint64_t v20;
  BOOL v21;

  if (a20 < a19 != a15 + 1210611510 < 157 * (a5 ^ (a5 + 2)) + 1853828375)
    v21 = a15 + 1210611510 < 157 * (a5 ^ (a5 + 2)) + 1853828375;
  else
    v21 = a15 + 1210611510 > a20;
  return (*(uint64_t (**)(BOOL))(v20 + 8 * ((13 * ((a18 ^ v21) & 1)) ^ (a6 + a5 + 138))))(a15 + 1210611510 > a20);
}

uint64_t sub_1003D88E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((2020 * (v5 + 141227795 + (v6 ^ (a5 - 230)) >= v5 + a3)) ^ v6))
                            - 4))();
}

uint64_t sub_1003D8938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8
                                        * ((92
                                          * (a13 + v13 - (unint64_t)((v15 ^ 0x8971974u) + v14) >= (unint64_t)(a5 + v16 - 314) - 3510522305u)) ^ v16))
                            - 4))();
}

uint64_t sub_1003D8990(double a1, double a2, int8x16_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, uint64_t a9, int a10, int a11, unsigned int a12)
{
  int8x16_t *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  *v12 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v16 + (v13 + a7)), vandq_s8(vaddq_s8(*(int8x16_t *)(v16 + (v13 + a7)), *(int8x16_t *)(v16 + (v13 + a7))), a4)), a3);
  return (*(uint64_t (**)(void))(v15 + 8 * ((((((a10 + v14 - 756) | a12) ^ a8) != 64) * a11) ^ (a10 + v14 - 32))))();
}

uint64_t sub_1003D89EC@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W5>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  *(_BYTE *)(v5 + a4) = *(_BYTE *)(v9 + (v6 + a1))
                      - ((2 * *(_BYTE *)(v9 + (v6 + a1))) & 0x83)
                      - 63;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 == 63) * (((v7 ^ (a2 + 1)) * v10) ^ v4)) ^ (a3 + v7 - 46))))();
}

uint64_t sub_1003D8A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;

  if (a13 - 521942509 < v14 + 948873099 != (v13 + 305656559) < 0x388EAA4A)
    v16 = a13 - 521942509 < v14 + 948873099;
  else
    v16 = v13 + 305656559 < (a13 - 521942509);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((110 * v16) ^ v14)) - 4))();
}

uint64_t sub_1003D8AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v15 = 628203409 * ((((v14 - 120) | 0x434F6F97) - ((v14 - 120) & 0x434F6F97)) ^ 0xC1C763A4);
  *(_QWORD *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = v15 + a6 + 634;
  *(_DWORD *)(v14 - 108) = a13 - v15 + ((76 * (((a6 - 1071361712) | 0x111A0051) ^ (a5 + 3))) ^ 0x96A01F9);
  v16 = sub_1003D0120(v14 - 120);
  v17 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(_BYTE *)(v14 - 220 + (v17 ^ 0x2A)) = 65;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((1396 * ((v17 ^ 0x2A) > 0x37)) ^ a6))
                                          - 12))(v16);
}

uint64_t sub_1003D8BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  int v20;
  uint64_t v21;

  return (*(uint64_t (**)(void))(v21
                              + 8 * ((1789 * (((a20 ^ (a5 - 36)) ^ (v20 == a20 - 317)) & 1)) ^ a20)))();
}

uint64_t sub_1003D8C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((v5 ^ 0x15u) < 8) ^ ((v6 + 119) ^ (a5 + 81))) & 1) * (v6 - 373)) ^ (v6 + 631))))();
}

uint64_t sub_1003D8C3C()
{
  char v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 220 + v1 + 1) = 0xC1C1C1C1C1C1C1C1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1935 * ((v0 & 0x38) == 8)) ^ (v2 - 180)))
                            - 190 * ((v2 - 180) ^ 0x33Du)
                            + 376))();
}

void sub_1003D8C94()
{
  JUMPOUT(0x1003D8C70);
}

uint64_t sub_1003D8C9C@<X0>(unsigned int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, int a5@<W8>)
{
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  unsigned int v14;
  int v15;
  _BOOL4 v16;

  v13 = v5 < v6;
  v14 = v8 + (a4 ^ a3);
  *(_BYTE *)(v12 - 220 + (a5 - 1358261186)) = *(_BYTE *)(v11 + (v8 + a2))
                                                          - ((2 * *(_BYTE *)(v11 + (v8 + a2))) & 0x83)
                                                          - 63;
  v15 = v13 ^ (v14 < a1);
  v16 = v14 < v5;
  if (!v15)
    v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v13 * v7) ^ v9)) - 4))();
}

uint64_t sub_1003D8D10@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8
                                                               * (int)((((a2 - 207859062) > 0x37)
                                                                      * (((v3 - 1753629267) & 0x9747F7BD) - 1612)) ^ (a1 + v3 + 632)))
                                                   - 8))(-207859062, 2684354560);
}

uint64_t sub_1003D8D68@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + a2;
  if ((unint64_t)(v4 + 1) > 0x38)
    v5 = v4 + 1;
  else
    v5 = 56;
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 + 2 * (v5 - a2 + ((((v2 - 1828) | 0x2C3u) - 160) ^ 0xC63AF4DuLL) < 8))))();
}

uint64_t sub_1003D8DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 220 + a2 + a1) = 0xC1C1C1C1C1C1C1C1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((1207 * ((v2 ^ 0x75Au) - 1401 == (v3 & 0xFFFFFFFFFFFFFFF8))) ^ v2))
                            - 8))();
}

uint64_t sub_1003D8E0C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 - 1407) | 0x239) ^ 0x23E) * (v0 == v1)) ^ v2))
                            - ((v2 + 1344011151) | 0x812250C1)
                            + 3510522313))();
}

void sub_1003D8E6C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;

  v6 = *(unsigned __int8 *)(v5 - 124) ^ 0x70;
  if (v6 == 1)
  {
    v12 = *(_DWORD *)(v5 - 156);
    v11 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = ((8 * v11) ^ 0x50) + ((2 * ((8 * v11) ^ 0x50)) & 0x80) - 63;
    v13 = (v11 >> (((a5 + 46) & 0xED) + 24)) ^ 0xFFFFFFF9;
    *(_BYTE *)(v5 - 163) = v13 - ((2 * v13) & 0x83) - 63;
    *(_BYTE *)(v5 - 162) = ((v11 >> 13) ^ 0xE4) - ((2 * ((v11 >> 13) ^ 0xE4)) & 0x83) - 63;
    *(_BYTE *)(v5 - 161) = ((v11 >> 21) ^ 0x9F) - ((2 * ((v11 >> 21) ^ 0x9F)) & 0x83) - 63;
    HIDWORD(v14) = v12 ^ 0xE;
    LODWORD(v14) = v11 ^ a2;
    *(_BYTE *)(v5 - 160) = (v14 >> 29) - ((2 * (v14 >> 29)) & 0x83) - 63;
    *(_BYTE *)(v5 - 159) = ((v12 >> 5) ^ 0xE1) - 2 * (((v12 >> 5) ^ 0xE1) & 0x45 ^ (v12 >> 5) & 4) - 63;
    *(_BYTE *)(v5 - 158) = ((v12 >> 13) ^ 0xF0) - ((2 * ((v12 >> 13) ^ 0xF0)) & 0x83) - 63;
    v9 = ((v12 >> 21) ^ 0x2C) - 63;
    v10 = (v12 >> 20) & 0xF82;
  }
  else
  {
    if (v6 != 2)
      goto LABEL_6;
    v10 = *(_DWORD *)(v5 - 156);
    v7 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = (a5 ^ (a5 + 107)) + ((v10 >> 21) ^ 0x2C) - ((v10 >> 20) & 0x82) - 44;
    *(_BYTE *)(v5 - 163) = ((v10 >> 13) ^ 0xF0) - 2 * (((v10 >> 13) ^ 0xF0) & 0xC7 ^ (v10 >> 13) & 6) - 63;
    *(_BYTE *)(v5 - 162) = ((v10 >> 5) ^ 0xE1) - 2 * (((v10 >> 5) ^ 0xE1) & 0xC3 ^ (v10 >> 5) & 2) - 63;
    HIDWORD(v8) = v10 ^ 0xE;
    LODWORD(v8) = v7 ^ a2;
    *(_BYTE *)(v5 - 161) = (v8 >> 29) - ((2 * (v8 >> 29)) & 0x83) - 63;
    *(_BYTE *)(v5 - 160) = ((v7 >> 21) ^ 0x9F) - ((2 * ((v7 >> 21) ^ 0x9F)) & 0x83) - 63;
    *(_BYTE *)(v5 - 159) = ((v7 >> 13) ^ 0xE4) - 2 * (((v7 >> 13) ^ 0xE4) & 0x49 ^ (v7 >> 13) & 8) - 63;
    *(_BYTE *)(v5 - 158) = ((v7 >> 5) ^ 0xF9) - 2 * (((v7 >> 5) ^ 0xF9) & 0xC3 ^ (v7 >> 5) & 2) - 63;
    LOBYTE(v10) = (8 * v7) ^ 0x50;
    LOBYTE(v9) = v10 - 63;
    LOBYTE(v10) = 2 * (v10 & 0x48 ^ (8 * v7) & 8);
  }
  *(_BYTE *)(v5 - 157) = v9 - v10;
LABEL_6:
  JUMPOUT(0x1003D7CE0);
}

uint64_t sub_1003D929C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((((v8 == v6) ^ (v7 + 87)) & 1)
                                     * (a6 + ((v7 - 37858695) & 0xD37FFDDB) - 109)) ^ v7)))();
}

void sub_1003D92FC()
{
  JUMPOUT(0x1003D7CE0);
}

uint64_t sub_1003D930C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 220 + a2 + v3) = -63;
  return (*(uint64_t (**)(void))(v4 + 8 * ((235 * ((unint64_t)(a2 + 1 + v3) < 0x40)) ^ (a1 + v2 - 384))))();
}

uint64_t sub_1003D93A8@<X0>(uint64_t a1@<X1>, char a2@<W4>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  _BOOL4 v10;

  v8 = *(_DWORD *)(v7 - 220 + ((v5 + a3) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a1 + (v5 + a3 + 1)) = (BYTE2(v8) ^ 0x7E) - ((2 * (BYTE2(v8) ^ 0x7E)) & 0x83) - 63;
  *(_BYTE *)(a1 + (v5 + a3)) = ((a2 + v4 - 48) ^ HIBYTE(v8))
                                           - ((2 * ((a2 + v4 - 48) ^ HIBYTE(v8))) & 0x83)
                                           - 63;
  *(_BYTE *)(a1 + (v5 + a3 + 3)) = v8 ^ 0x7B;
  *(_BYTE *)(a1 + (v5 + a3 + 2)) = (BYTE1(v8) ^ 0x95)
                                               - 2 * ((BYTE1(v8) ^ 0x95) & 0xC3 ^ BYTE1(v8) & 2)
                                               - 63;
  v9 = *(_DWORD *)(v7 - 128) + 1520005794;
  v10 = v5 + 1705388456 < v9;
  if (v5 + 1705388456 < v3 != v9 < v3)
    v10 = v9 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((25 * !v10) ^ v4)) - 4))();
}

void sub_1003D9548()
{
  JUMPOUT(0x1003D951CLL);
}

uint64_t sub_1003D9554()
{
  return 0;
}

void sub_1003D9594(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 108757529 * ((2 * (a1 & 0x5EAB9BD4) - (_DWORD)a1 - 1588304853) ^ 0x41C80600);
  __asm { BR              X10 }
}

uint64_t sub_1003D965C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((484 * (*(_DWORD *)(*(_QWORD *)(a1 + 8) + v3) == v1)) ^ v4))
                            - ((v4 - 1072) ^ (v4 - 1520400378) & 0x5A9F7537u ^ 0x69ALL)))();
}

uint64_t sub_1003D96B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _DWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v5 = a1;
  v6 = v1;
  v7 = v2 + 1374699841 * ((2 * (&v5 & 0x66A5C608) - &v5 + 425343479) ^ 0x74AE21FE) - 282;
  result = sub_1003D022C((uint64_t)&v5);
  *v3 = 1035768876 - *v3;
  return result;
}

uint64_t sub_1003D97F8(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)*(&off_1021332F0
                                      + ((55 * ((*a1 + *(_DWORD *)(a2 + 4) + 1676969181) > 0xC8)) ^ 0x552u))
                            - 4))();
}

uint64_t sub_1003D9844()
{
  return 4294925278;
}

uint64_t sub_1003D984C@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(a1 + 8 * ((536 * (v1 != 494613942)) ^ 0x48Eu)))();
}

uint64_t sub_1003D9880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  *(_BYTE *)(a1 + (v3 + v4) + 4) = (**(_BYTE **)(a2 + 8) ^ 0x64) + ((2 * **(_BYTE **)(a2 + 8)) & 0xC8) - 4;
  v5 = *(_DWORD *)(a2 + 4) + 2072718230;
  v6 = v5 < 0x9906614C;
  v7 = v5 > 0x9906614D;
  if (v6)
    v7 = v6;
  return (*(uint64_t (**)(void))(a3 + 8 * (((!v7 << 6) | (!v7 << 7)) ^ 0x44Eu)))();
}

void sub_1003D9924()
{
  JUMPOUT(0x1003D98A8);
}

uint64_t sub_1003D992C(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;

  *((_BYTE *)a1 + (v3 ^ (v2 + 1381)) + v1 + 4) = 96;
  *a1 = v1;
  return 0;
}

uint64_t sub_1003D9950(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1021332F0
                                                    + ((428 * ((*(_DWORD *)(a2 + 4) - 494613942) < 0x15)) ^ 0xC1u))
                                          - 4))(4294925278);
}

uint64_t sub_1003D999C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;

  *(_DWORD *)(*(_QWORD *)(a2 + 96) + 24) = v3;
  v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) - 989227884) & 0x81DBE93C) + 594722536;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((444
                                                       * (((2 * v4) & 0xFFDEFEFE ^ 0x81DAE83C)
                                                        + (v4 ^ 0x3F028BE1)
                                                        - 1744834572 != 401567603)) ^ 0x4EFu))
                                         - 8))(0);
}

uint64_t sub_1003D9A5C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  unsigned __int8 v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((((a3 + v6 - 2146402175) < 8) ^ v5) & 1)
                                          * (((v4 + 1777313694) & 0x7D7) - 1611)) ^ v4))
                            - 12))();
}

uint64_t sub_1003D9AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((56 * (v6 - a1 - (a5 ^ 0x743) - (unint64_t)(a5 - 1457) + 662 > 0x1F)) ^ a5)))();
}

uint64_t sub_1003D9B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  unsigned int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * ((23 * (((v7 < 0x20) ^ ((a6 ^ 0x5B) - 68)) & 1)) ^ a6))
                            - 4))();
}

uint64_t sub_1003D9B50@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v9 = a1 + v8 + a2;
  v10 = v4 + v9;
  v11 = *(_OWORD *)(v10 - 31);
  v12 = a3 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v7 + 927285729) ^ (16 * ((v5 & 0xFFFFFFE0) != 32))))
                            - ((v7 + 1079) ^ v6 ^ 0x5D8)))();
}

void sub_1003D9BB0()
{
  JUMPOUT(0x1003D9B70);
}

uint64_t sub_1003D9BBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4
                                                     + 8
                                                     * (((((a4 - v8 - 218) ^ (v6 + 1050)) + 537) * (v5 != v7)) ^ a4))
                                         - 12))(0);
}

uint64_t sub_1003D9BF0()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((((v2 - 242) ^ 0xCC) & v1) == 0) * ((v2 - 298347753) & 0x11C86BBF ^ 0x71E)) ^ v2))
                            - 4))();
}

uint64_t sub_1003D9C3C@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v8;

  *(_QWORD *)(a2 - 7 + (v6 + v4 - v7)) = *(_QWORD *)(v3 - 7 + (v6 + v4 - v7));
  v8 = (a1 ^ 0x472) + v7 - 1255 == (v5 & 0xFFFFFFF8);
  return (*(uint64_t (**)(void))(v2 + 8 * ((v8 | (32 * v8)) ^ a1)))();
}

uint64_t sub_1003D9C84(unsigned int a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  *(_QWORD *)(a4 + (v5 - v6)) = *(_QWORD *)(a2 + (v5 - v6));
  return (*(uint64_t (**)(void))(v4 + 8 * (((a3 + v6 - 1255 == v7) | (32 * (a3 + v6 - 1255 == v7))) ^ a1)))();
}

uint64_t sub_1003D9CB0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8 * ((510 * (((a3 ^ 0x43B ^ (v4 == v6)) & 1) == 0)) ^ a3))
                                         - (a3 ^ (v5 + 307) ^ 0xC8BAC750)))(0);
}

uint64_t sub_1003D9CFC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_BYTE *)(a2 + (v5 + v4)) = *(_BYTE *)(v3 + (v5 + v4));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((21
                                                       * (v5 - 1 != (((a1 ^ 0x15) - 71370984) & 0xCCFBCF7E ^ 0xDF55A82B))) ^ a1 ^ 0x15))
                                         - 4))(0);
}

void sub_1003D9D58()
{
  JUMPOUT(0x1003D9D28);
}

uint64_t sub_1003D9D64(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  unsigned int v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  v3 = (-1693445807 - (v2 & 0x1FF ^ 0x55) + ((2 * (v2 & 0x1FF ^ 0x55)) & 0x15C) + 110592) ^ 0x9B101151;
  *(_DWORD *)(v1 - 0x6EDAADCA9171F7EDLL) = ((v3 | 0xDD3475E1) - (v3 | 0x22CB8A1E) + 583764510) ^ 0xA134E881;
  *(_QWORD *)(v1 - 0x6EDAADCA9171F80DLL) = 0xB3FC9F2A459E1C2ELL;
  *(_DWORD *)(v1 - 0x6EDAADCA9171F7F1) = 267581584;
  v4 = v2 ^ 0x45;
  if (v4 == 1)
  {
    v5 = 267581600;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x6EDAADCA9171F7F5) = 1689023562;
    v5 = 267581604;
LABEL_5:
    *(_QWORD *)(v1 - 0x6EDAADCA9171F805) = 0x48B33E33C03BB6BBLL;
    *(_QWORD *)(v1 - 0x6EDAADCA9171F7FDLL) = 0xB74CC1CC3FC44944;
    *(_DWORD *)(v1 - 0x6EDAADCA9171F7F1) = v5;
  }
  *(_DWORD *)(result + 4) = 2052113736;
  return result;
}

uint64_t sub_1003D9EF4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  v1 = 535753261 * (((a1 | 0xB4CC401E) - a1 + (a1 & 0x4B33BFE1)) ^ 0xBE384E31);
  v2 = *(_DWORD *)(a1 + 8) ^ v1;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x63F19B7CB7021DA0);
  v4 = *(_DWORD *)(a1 + 24) - v1;
  v5 = v3 - 517884438;
  if (v3 - 517884438 < 0)
    v5 = 517884438 - v3;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + v2 - 1171)
                                        + 8
                                        * ((((v4 - 1241740411) < 4 * (unint64_t)v5) * (v2 ^ 0x517)) | v2)
                                        - 12)
                            - 4))();
}

uint64_t sub_1003D9FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                 + 8
                                                                                 * ((((((v5 ^ 0x284) - 675) ^ 0x1D9)
                                                                                    - 1239)
                                                                                   * (v4 != 1241740411)) | v5 ^ 0x284))
                                                                     - 8))(a1, a2, a3, 3629544595);
}

uint64_t sub_1003DA008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                                 + 8
                                                                                                 * ((814 * (((v3 - 173) ^ 0x410) == 32)) ^ (v3 - 173)))
                                                                                     - 8))(a1, 840352579, (v3 - 173) ^ 0xEDu, (v3 - 173), 650526838, v2);
}

uint64_t sub_1003DA088@<X0>(_QWORD *a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*a1 + (a4 + a5)) = ((a3 ^ v7) >> v8) - ((2 * ((a3 ^ v7) >> v8)) & 0x83) - 63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((458 * (a4 - 1 == ((a2 + 39) ^ v6))) ^ a2)) - 4))();
}

uint64_t sub_1003DA0E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                                 + 8
                                                                                                 * ((814 * (v7 + 8 == ((a3 - 173) ^ 0x410))) ^ (a3 - 173)))
                                                                                     - 8))(a1, a2, (a3 - 173) ^ 0xEDu, (a3 - 173), a5, v6);
}

uint64_t sub_1003DA11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  _BOOL4 v9;

  v9 = v4 > v8;
  if (v9 == (int)a2 + 80759676 < -1226371393)
    v9 = (int)a2 + 80759676 < v7;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                                  + 8 * (int)(a4 ^ (741 * v9)))
                                                                                      - (a4 + 173)
                                                                                      + 1237))(a1, a2, (a4 + 173), a4, 650526838, v6);
}

uint64_t sub_1003DA184@<X0>(_QWORD *a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  _QWORD *v5;

  return sub_1003DA088(a1, a3 ^ 0xEDu, *(_DWORD *)(*v5 + 4 * (int)((a3 ^ 0xCDE9388D) + a2)), v4, a4);
}

uint64_t sub_1003DA1B4(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 28) = a4;
  return result;
}

void sub_1003DA1BC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  _BYTE v4[4];
  unsigned int v5;
  uint64_t v6;

  v1 = *(_DWORD *)a1 - 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~(_DWORD)a1 | 0xE19DA171))) ^ 0x101C35A);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_DWORD *)(v2 - 0x63F19B7CB7021DA0);
  v5 = (460628867
      * ((((2 * (v4 ^ 0x40000CF6)) | 0x846CAAD6) - (v4 ^ 0x40000CF6) + 1036626581) ^ 0xCEA0DBE0)) ^ (v1 + 799);
  v6 = v2;
  sub_1003DB9B8((uint64_t)v4);
  __asm { BR              X9 }
}

uint64_t sub_1003DA308@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8 * (v1 ^ (30 * (((v3 ^ v2) & 0x1F) == 0x1E)))) - 8))((v1 + 1224184541) & 0xB7086DF5);
}

uint64_t sub_1003DA378@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((((v3 ^ 0xBBFFFFFD)
                                           + 1303739071
                                           + (((498 * (a1 ^ 0x456)) ^ 0x77FFFA2C) & v2)
                                           - 162888381 < ((498 * (a1 ^ 0x456)) ^ 0x7FFFFA29u))
                                          * (((498 * (a1 ^ 0x456) - 1490) | 0x250) ^ 0x260)) ^ (498 * (a1 ^ 0x456))))
                            - 8))();
}

uint64_t sub_1003DA404@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL) + 4 * (int)((v4 ^ 0x9E8C0052) + v1 + v2)) = *(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL) + 4 * (v2 + v3));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1
                                                      + 8
                                                      * ((833 * ((v3 + v2 + v4 - 898 - 597) < 0x7FFFFFFF)) ^ v4))
                                          - 8))(0x7FFFFFFFLL);
}

void sub_1003DA478()
{
  JUMPOUT(0x1003DA43CLL);
}

uint64_t sub_1003DA480@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((((int)((v3 ^ 0xFFFDEAFA) + 201047902 + (v2 & 0xFFFBD5F4) - 200911449) > a1 - 1110)
                                          * (a1 - 663)) ^ a1))
                            - 12))();
}

uint64_t sub_1003DA50C@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W5>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  unint64_t v13;

  v10 = (a1 + 1) ^ 3;
  v11 = a3 - 1;
  v12 = *(_DWORD *)(*(_QWORD *)(v9 - 0x63F19B7CB7021D9CLL) + 4 * (a3 + v8)) ^ v6;
  *(_DWORD *)(*(_QWORD *)(v9 - 0x63F19B7CB7021D9CLL) + 4 * (v4 + v5)) = ((v12 >> (32 - v7)) | a2 ^ v6)
                                                                        + v6
                                                                        - ((((v12 >> (32 - v7)) | a2 ^ v6) << (((v10 - 13) | 0x81) + 56)) & 0x4D8C80EC);
  HIDWORD(v13) = v11 + v8 >= 0;
  LODWORD(v13) = ~(v11 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (int)((v13 >> 31) ^ v10)) - 12))();
}

void sub_1003DA5B8()
{
  JUMPOUT(0x1003DA544);
}

uint64_t sub_1003DA5C0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (2014 * ((v1 - 1472102336) < 0x7FFFFFFF))))
                            - 65 * (((v2 - 452) | 0x60) ^ 0xFBu)
                            + 703))();
}

uint64_t sub_1003DA614@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 - 0x63F19B7CB7021D9CLL) + 4 * ((v3 ^ 0x23B ^ (v2 + 536)) + v1)) = 650526838;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1
                                                      + 8
                                                      * ((1011 * ((v2 + v1 + 711) > 0x7FFFFFFE)) ^ (v3 - 292)))
                                          - 12))(2147483646);
}

void sub_1003DA680()
{
  JUMPOUT(0x1003DA644);
}

uint64_t sub_1003DA688@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL) + 4 * (v2 + v4 + v3 - 729 - 240)) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((23 * (v2 + v4 > 0)) ^ v3)) - 8))();
}

uint64_t sub_1003DA6D4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _QWORD *v5;
  int v6;

  *(_DWORD *)(*v5 + 4 * ((((v3 - 905) | 0xB0) ^ (v1 + 111)) + v4)) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v1 + v4 - 2 >= 0) * v6) ^ v3)) - 8))();
}

void sub_1003DA71C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _QWORD *v5;
  _DWORD *v6;
  _BOOL4 v7;

  v7 = *(_DWORD *)(*v5 + 4 * (v0 + v2)) == ((v4 + 475) ^ (v3 + 583));
  *v6 = v1 + v1 * (v2 + v0 - v7) - 369984849 * (v0 - v7) + 922802403;
}

void sub_1003DA7D0(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1003DA8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v10;
  uint64_t v11;
  _BOOL4 v13;
  unsigned __int8 *v14;

  v14 = (unsigned __int8 *)(*(_QWORD *)(v8 + 8 * (a6 ^ (a6 - 33))) - 2);
  v11 = ((a6 - 739) ^ 0x7A043A4u) - 550;
  v13 = ((**(unsigned __int8 **)(a7 + 80) - (*v14 ^ 0xC1)) ^ 0x5EDDBDF7)
      + (((((a6 - 739) ^ 0x7A043A4) + 83902111) | 0x2A001A0) ^ 0xAC9F9CE4)
      + ((2 * (**(unsigned __int8 **)(a7 + 80) - (*v14 ^ 0xC1))) & 0xBDBB7BEE) == v10
     && a8 - 0xC099ACD7D97540ALL + (v11 ^ 0xC099ACCEC150704) != 0;
  __asm { BR              X15 }
}

uint64_t sub_1003DB974@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v2 + (v4 - 401567604)) = *(_BYTE *)(a2 + (v4 - 401567604));
  return (*(uint64_t (**)(void))(v5 + 8 * ((1400 * (((a1 - 462) ^ 0xFFFFFEAA) + v4 == v3)) ^ a1)))();
}

void sub_1003DB9B8(uint64_t a1)
{
  int v1;
  _DWORD v2[2];
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86));
  v3 = *(_QWORD *)(a1 + 8);
  v2[0] = v1 + 628203409 * (((~v2 & 0xDF090424) - (~v2 | 0xDF090425)) ^ 0x5D810816) - 1170;
  sub_1003EF1FC((uint64_t)v2);
  __asm { BR              X8 }
}

void sub_1003DBAB4()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0x63F19B7CB7021DA0) - 517884439) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *v0 = v3;
}

void sub_1003DBB20(uint64_t a1)
{
  int v1;

  v1 = 1178560073 * ((-2 - ((a1 | 0xAE85A791) + (~(_DWORD)a1 | 0x517A586E))) ^ 0xEBEE200C);
  __asm { BR              X9 }
}

uint64_t sub_1003DBBC4@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v2 != ((a1 - 80) ^ 0x4022D252)) * (a1 + 1594)) ^ a1)) - 4))();
}

uint64_t sub_1003DBC10@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a3 + 8 * (a2 + 1129)) - 12))(a1, 1301053676);
}

uint64_t sub_1003DBCB0@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, unint64_t a4@<X6>, uint64_t a5@<X8>)
{
  int v5;
  _QWORD *v6;
  int v7;
  int v8;
  int v9;

  *(_DWORD *)(*v6 + 4 * ((v9 ^ a1) + v5)) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((((v9 ^ 0xC0) * a2) ^ a3) * (v8 == 0)) ^ v9))
                            - (((v9 ^ 0xC0u) + 1425) ^ a4)))();
}

void sub_1003DBD04()
{
  JUMPOUT(0x1003DBC64);
}

uint64_t sub_1003DBD0C(uint64_t result)
{
  *(_DWORD *)(result + 24) = -1505245184;
  return result;
}

void sub_1003DBEBC()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[1208];

  v0 = (unint64_t)&v2[qword_1022A15A8 - qword_1022A1758];
  qword_1022A1758 = 1045096823 * v0 - 0x1159CE8E9813C2FLL;
  qword_1022A15A8 = 1045096823 * (v0 ^ 0xFEEA6317167EC3D1);
  *(_DWORD *)*(&off_1021378F0
             + ((119 * (qword_1022A1758 ^ 0xD1 ^ qword_1022A15A8)) ^ byte_101BAF8E0[byte_101BAB540[(119 * (qword_1022A1758 ^ 0xD1 ^ qword_1022A15A8))] ^ 6])
             + 115) = 1810546658;
  v1 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1021378F0
                                                  + ((119
                                                                                   * ((qword_1022A15A8 + qword_1022A1758) ^ 0xD1)) ^ byte_101BA7680[byte_101BA3800[(119 * ((qword_1022A15A8 + qword_1022A1758) ^ 0xD1))] ^ 0x69])
                                                  + 109))(512, 1509315540);
  *(_QWORD *)((char *)*(&off_1021378F0
                      + ((119 * (qword_1022A1758 ^ 0xD1 ^ qword_1022A15A8)) ^ byte_101BA7880[byte_101BA3B00[(119 * (qword_1022A1758 ^ 0xD1 ^ qword_1022A15A8))] ^ 0x1C])
                      - 121)
            - 4) = v1;
  __asm { BR              X8 }
}

void sub_1003DC05C()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_1003E36D4(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v4;
  unint64_t *v5;
  int v6;

  v1 = *a1 ^ (3804331 * (((a1 | 0xD29CC998) - (a1 | 0x2D633667) + 761476711) ^ 0xAC49EC6E));
  v2 = 1178560073 * ((&v4 - 1847688801 - 2 * (&v4 & 0x91DE819F)) ^ 0x2B4AF9FD);
  v6 = v1 - v2 - 1882357516;
  v4 = -1507894969 - v2;
  v5 = &STACK[0x6EDAADCA9171FAA1];
  sub_1003D9D64((uint64_t)&v4);
  __asm { BR              X15 }
}

uint64_t sub_1003E3AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = v4 + 1001;
  if ((v4 + 1001) <= 0x40)
    v8 = 64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                 + 8
                                                                                 * ((1429
                                                                                   * (2145385982
                                                                                    - v5
                                                                                    - v6
                                                                                    + ((v3 - 273) | 0x10u)
                                                                                    + v8 > 0xE)) ^ v3))
                                                                     - 4))(a1, a2, a3, -888932152);
}

uint64_t sub_1003E3B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,uint64_t a33,int a34)
{
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  unsigned int v38;
  int v39;
  _BOOL4 v40;

  v37 = v34;
  v38 = v35 + a13 - 2145387383 + ((v34 - 257) ^ 0x279);
  if (v38 <= 0x40)
    v39 = 64;
  else
    v39 = v38;
  v40 = !__CFADD__(v35 + a13 - 2145386383, a34 + 2145385982 + a32 + v39 + 400);
  return ((uint64_t (*)(void))(*(_QWORD *)(v36 + 8 * ((81 * v40) ^ v37)) - 4))();
}

uint64_t sub_1003E3BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X6>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,arg31_1003E3BD8 a31)
{
  int v31;
  uint64_t v32;

  *(_OWORD *)(a3 + (((v31 - 344) + a1) & (a4 + a2))) = *(_OWORD *)&a31.arr[4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((1990 * (((a7 + 1) & 0x1FFFFFFF0) == 16)) ^ v31)) - 4))();
}

void sub_1003E3C34()
{
  JUMPOUT(0x1003E3C00);
}

uint64_t sub_1003E3C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * ((((((v5 - 657) | 0x190) - 385) ^ 0x1F0)
                                                                                   * (v3 == v4)) ^ v5))
                                                                     - 4))(a1, a2, a3, -888932152);
}

uint64_t sub_1003E3C88@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, unsigned int a3@<W5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(a4 + (((v6 ^ a3) + v8) & (a6 + a1))) = *(_BYTE *)(v7 + a5 + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((a1 + a6 + 1) > 0x3F) * v9) ^ v6)) - 4))();
}

uint64_t sub_1003E3CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int8x16_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint8x16_t v59;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  unsigned int v71;
  int v72;
  uint64_t v74;
  uint64_t v75;
  uint8x16_t v76;
  _DWORD *v81;
  int v82;
  unsigned int v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  int8x16x4_t v90;
  int8x16x4_t v91;

  v89 = v39;
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * v38);
  v51 = LODWORD(STACK[0x2A0]);
  v52 = STACK[0x2A0];
  v53 = STACK[0x2A4];
  v54 = STACK[0x2A8];
  v55 = LODWORD(STACK[0x2A4]);
  v56 = LODWORD(STACK[0x2A8]);
  v57 = LOBYTE(STACK[0x2B4]) ^ 0x70;
  LODWORD(a34) = LOBYTE(STACK[0x2B4]) ^ 0x70;
  if (v57 == 2)
  {
    v91 = vld4q_s8((const char *)&STACK[0x254]);
    v74 = (a2 + 110);
    v75 = LODWORD(STACK[0x2AC]);
    v76 = (uint8x16_t)veorq_s8(v91.val[1], v49);
    _Q17 = vmovl_u8(*(uint8x8_t *)v76.i8);
    _Q16 = vmovl_high_u8(v76);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    v81 = (_DWORD *)(v41 + 4 * (v43 + 1775030628));
    v82 = *(v81 - 8) ^ *(v81 - 3);
    v83 = *(v81 - 16) ^ *(v81 - 14) ^ (v82 + v42 - ((2 * v82) & 0xD7D57FC4));
    HIDWORD(v85) = v83 ^ v42;
    LODWORD(v85) = v83;
    v84 = v85 >> 31;
    v86 = (2 * v84) & 0xD7D57FC4;
    *v81 = v84 + v42 - v86;
    LODWORD(v81) = v44 != 1775030565;
    v87 = (2 * (_DWORD)v81);
    v88 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (int)((v87 | (16 * (_DWORD)v81)) ^ v74)) - 4);
    return v88(v75, v88, v74, v75, v87, v86, v44 - 16, 3621093316, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             v89,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38);
  }
  else if (v57 == 1)
  {
    v90 = vld4q_s8((const char *)&STACK[0x254]);
    v58 = (a2 + 1294);
    v59 = (uint8x16_t)veorq_s8(v90.val[2], v49);
    _Q21 = vmovl_high_u8(v59);
    _Q20 = vmovl_u8(*(uint8x8_t *)v59.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    v66 = v44 - 16;
    v67 = *(_QWORD *)(v48 + 8 * ((int)a2 - 18)) - 8;
    v68 = *(_QWORD *)(v48 + 8 * (int)(v58 ^ 0x5C4)) - 4;
    v69 = ((v58 - 1326204807) & 0x4F0C4765 ^ (v47 - 1311) ^ LODWORD(STACK[0x29C]))
        + v45
        + ((v51 ^ v47) & (v55 ^ v47) | (v51 ^ 0x58816A45) & (v56 ^ v47))
        + *(_DWORD *)(v68 + 4 * (v66 + v43))
        + (*(_DWORD *)(v41 + 4 * (*(_BYTE *)(v67 + v66 + v43) - 123)) ^ v42);
    v70 = *(_QWORD *)(v48 + 8 * ((int)v58 - 1238));
    v71 = (v69 + v47 - (v40 & (2 * v69))) ^ v47;
    v72 = ((v71 << (*(_BYTE *)(v70 + v66 + v43) - 66)) | (v71 >> (66 - *(_BYTE *)(v70 + v66 + v43)))) + (v51 ^ v47);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (int)(v58 ^ 0x327)) - 8))(v55, v67, v68, v70, v58, v72 + v47 - (v40 & (2 * v72)), v44 - 15, 1775030628, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             v89,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38);
  }
  else
  {
    LODWORD(STACK[0x29C]) = v47 + 2 * (LODWORD(STACK[0x29C]) ^ v47) - (v40 & (4 * (LODWORD(STACK[0x29C]) ^ v47)));
    LODWORD(STACK[0x2A0]) = (v52 ^ v47) + (v51 ^ v47) + v47 - (v40 & (2 * ((v52 ^ v47) + (v51 ^ v47))));
    LODWORD(STACK[0x2A4]) = (v55 ^ v47) + (v53 ^ v47) + v47 - (v40 & (2 * ((v55 ^ v47) + (v53 ^ v47))));
    LODWORD(STACK[0x2A8]) = (v56 ^ v47) + (v54 ^ v47) + v47 - (v40 & (2 * ((v56 ^ v47) + (v54 ^ v47))));
    return v50(v56, a2, a3, 45, a5, v51, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25);
  }
}

uint64_t sub_1003E52A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  uint64_t v32;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((100 * ((int)a5 + a32 + 59 >= (((_DWORD)a2 + 16) ^ 0xFFFFFFBF))) ^ ((int)a2 + 1534))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1003E52E8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  uint64_t v17;
  BOOL v18;

  if (a17 < 0x85B9EA0A != (a14 + 210797468) < 0x85B9EA0A)
    v18 = (a14 + 210797468) < 0x85B9EA0A;
  else
    v18 = a14 + 210797468 > a17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((899 * (((a2 + 121) ^ v18) & 1)) ^ (a2 + 1312)))
                            - ((33 * (a2 ^ 0xEu)) ^ 0x77ELL)))();
}

uint64_t sub_1003E537C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  _BOOL4 v25;

  v25 = (((v23 ^ 0x77E) + 440) ^ 0x86D69819 ^ (13 * (v23 ^ 0x77E))) + a1 >= a1 - 2032756398;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * (((2 * v25) | (4 * v25)) ^ v23)) - 4))(a23);
}

uint64_t sub_1003E53E4@<X0>(uint64_t a1@<X0>, int8x16_t *a2@<X6>, int a3@<W8>)
{
  int v3;
  unsigned int v4;
  int v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;

  *a2 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a1 + (a3 + v5)), vandq_s8(vaddq_s8(*(int8x16_t *)(a1 + (a3 + v5)), *(int8x16_t *)(a1 + (a3 + v5))), v10)), v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 ^ v4 ^ v6) != 16) * v7) ^ (v3 + 392))))();
}

uint64_t sub_1003E5438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a2 + v3) = *(_BYTE *)(a1 + (a3 + v6))
                      - ((2 * *(_BYTE *)(a1 + (a3 + v6))) & 0x83)
                      - 63;
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v4 - 413) ^ 0x1ELL) + v3 != 64) * v5) ^ v4)))();
}

void sub_1003E5480()
{
  JUMPOUT(0x1003E475CLL);
}

uint64_t sub_1003E549C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((1617 * (((((v1 - 719) | 0x30) - 56) & v0) == 888932152)) ^ v1))
                                          - 12))(4294966638);
}

uint64_t sub_1003E54F4@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>)
{
  int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  *(_BYTE *)(a5 + (a7 + a2)) = *(_BYTE *)(a6 + v8 + a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((((((241 * (v7 ^ 0x2FD)) ^ v10 ^ (unint64_t)(a1 + 602)) & (v8 + 1)) == v9)
                                          * a3) ^ (241 * (v7 ^ 0x2FD))))
                            - 12))();
}

uint64_t sub_1003E5554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t))
{
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  v33 = 628203409 * ((2 * ((v32 - 168) & 0xADFAC20) - (v32 - 168) + 1965052895) ^ 0xF7A85FEC);
  *(_QWORD *)(v32 - 168) = a29;
  *(_DWORD *)(v32 - 160) = v33 + v31 + 630;
  *(_DWORD *)(v32 - 156) = 1628758208 - v33;
  v34 = sub_1003D0120(v32 - 168);
  return a31(v34);
}

uint64_t sub_1003E55C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,char a36)
{
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;

  if (a34 == 2)
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v36
                                                        + 8
                                                        * (((LODWORD(STACK[0x2B0]) != 267581584) * ((a2 ^ 0xB5) - 117)) ^ (a2 + 77)))
                                            - 8))(a14);
  if (a34 == 1)
    return ((uint64_t (*)(void))(*(_QWORD *)(v36 + 8 * ((701 * (LODWORD(STACK[0x2B0]) != a2 + 267581532)) ^ (a2 + 77)))
                              - 8))();
  v38 = (a2 - 1199391229) & 0x477D43FB;
  v39 = ((unint64_t)&a36 ^ 0x77DEFDF6BF9F6E7FLL)
      - 0x70129940398863A2
      + ((v38 ^ 0xEFBDFBED7F3EDEC0) & (2 * (_QWORD)&a36));
  LOBYTE(STACK[0x2AF]) = ((v39 + 35) ^ 0xBA) * (v39 + ((a2 + 3) & 0xFB) + 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v36 + 8 * v38) - 12))();
}

void sub_1003E5918()
{
  JUMPOUT(0x1003E58E8);
}

uint64_t sub_1003E5920@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v8 + 16);
  v4 = *(_QWORD *)(v8 + 40);
  v5 = (_QWORD *)(v1 - 184);
  *v5 = 0xC1C1C1C1C1C1C1C1;
  v5[1] = 0xC1C1C1C1C1C1C1C1;
  v6 = 235795823 * (((v1 - 168) & 0xEF9CDC89 | ~((v1 - 168) | 0xEF9CDC89)) ^ 0x84CE6A2F);
  v5[7] = v1 + 0xAA58417147CE9C7;
  *(_DWORD *)(v1 - 132) = (a1 + 1782) ^ v6;
  *(_DWORD *)(v1 - 160) = v6 + 772366271;
  v5[2] = v3;
  v5[4] = &v9;
  v5[5] = v4;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (a1 + 170)) - 8))(v1 - 168);
  *(_DWORD *)(v8 + 12) = *(_DWORD *)(v1 - 136);
  return result;
}

void sub_1003E5A14(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = (*(_DWORD *)(a2 + 4) - 494613942) < 0x102;
  __asm { BR              X11 }
}

uint64_t sub_1003E5A78()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((221 * (v1 != 494613942)) ^ 0x44Fu)) - 4))();
}

uint64_t sub_1003E5AB0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;

  v4 = v1 - (**(_BYTE **)(v3 + 8) == 0);
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 528) = 1886904338;
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 532) = 517884438;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 536) = *(_QWORD *)(v2 + 96) + 544;
  v5 = *(_QWORD *)(v2 + 96) + 0x63F19B7CB7021FB4;
  v6 = 1178560073 * ((((2 * &v9) | 0x41C7A290) - &v9 - 551801160) ^ 0x9A77A92A);
  v10 = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  v11 = v5;
  v9 = v6 + 562;
  v13 = v6 + v4 + 581410008;
  ((void (*)(unsigned int *))(*(_QWORD *)(a1 + 968) - 12))(&v9);
  v7 = v12;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 512) = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  return v7 ^ 0x59B893DEu;
}

void sub_1003E5C04(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) - 1225351577 * ((-2 - ((a1 | 0x64CFEAB8) + (~(_DWORD)a1 | 0x9B301547))) ^ 0xB8AACD51);
  __asm { BR              X13 }
}

uint64_t sub_1003E5D60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34)
{
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  int v58;
  uint64_t v59;

  v40 = &a22 + v35;
  v56 = &a24 + v35;
  v55 = &a18 + v35;
  v54 = &a34 + v35;
  v53 = &a30 + v35;
  v52 = &a26 + v35;
  v51 = &a32 + v35;
  v41 = &a28 + v35;
  v42 = v34 ^ 0x13E;
  v43 = a1[5];
  v59 = a1[4];
  v44 = *a1;
  v45 = *(_QWORD *)(*a1 - 0x48247A3086942776);
  *(_QWORD *)(v39 - 144) = *a1;
  *(_QWORD *)(v39 - 136) = a2;
  v58 = (v34 ^ 0x13E) + 122;
  *(_DWORD *)(v39 - 112) = v58
                         + 1224239923
                         * ((2 * (((v39 - 144) ^ 0xA8FDC33E) & 0x7EE300AA) - ((v39 - 144) ^ 0xA8FDC33E) + 18677589) ^ 0x5B52C1BC);
  v46 = (v34 ^ 0x5EB) - 1603;
  *(_QWORD *)(v39 - 128) = &a22 + v35;
  *(_QWORD *)(v39 - 120) = v43;
  v57 = &a22 + v35;
  *(_QWORD *)(v39 - 104) = v45;
  v47 = (void (*)(uint64_t))(*(_QWORD *)(v36 + 8 * ((v34 ^ 0x13E) - 548)) - 4);
  v47(v39 - 144);
  *(_QWORD *)(v39 - 120) = v40;
  *(_QWORD *)(v39 - 112) = v44;
  *(_DWORD *)(v39 - 144) = (v42 + 106) ^ (1225351577
                                        * ((((v39 - 144) | 0x5239BC64) - ((v39 - 144) & 0x5239BC64)) ^ 0x71A36472));
  *(_QWORD *)(v39 - 136) = v43;
  *(_QWORD *)(v39 - 128) = v41;
  ((void (*)(uint64_t))((char *)*(&off_1021378F0 + (v42 ^ 0x268)) - 8))(v39 - 144);
  *(_DWORD *)(v39 - 112) = v58
                         + 1224239923
                         * ((((v39 - 144) | 0x595B079F) - (v39 - 144) + ((v39 - 144) & 0xA6A4F860)) ^ 0xABE8FA48);
  *(_QWORD *)(v39 - 144) = v44;
  *(_QWORD *)(v39 - 136) = v41;
  *(_QWORD *)(v39 - 128) = v56;
  *(_QWORD *)(v39 - 120) = v43;
  *(_QWORD *)(v39 - 104) = v57;
  v47(v39 - 144);
  *(_QWORD *)(v39 - 104) = v56;
  *(_QWORD *)(v39 - 128) = v55;
  *(_QWORD *)(v39 - 120) = v43;
  *(_DWORD *)(v39 - 112) = v58 + 1224239923 * (((v39 - 144) & 0x3BB37F04 | ~((v39 - 144) | 0x3BB37F04)) ^ 0x36FF7D2C);
  *(_QWORD *)(v39 - 144) = v44;
  *(_QWORD *)(v39 - 136) = v41;
  v47(v39 - 144);
  *(_QWORD *)(v39 - 104) = v55;
  *(_DWORD *)(v39 - 112) = v58
                         + 1224239923
                         * ((((v39 - 144) ^ 0x37A6533F) - 153833405 - 2 * (((v39 - 144) ^ 0x37A6533F) & 0xF6D4B043)) ^ 0x33C11EAB);
  *(_QWORD *)(v39 - 144) = v44;
  *(_QWORD *)(v39 - 136) = v41;
  *(_QWORD *)(v39 - 128) = v54;
  *(_QWORD *)(v39 - 120) = v43;
  v47(v39 - 144);
  *(_QWORD *)(v39 - 104) = v54;
  *(_DWORD *)(v39 - 112) = v58 + 1224239923 * ((v39 - 144) ^ 0xF2B3FDD7);
  *(_QWORD *)(v39 - 120) = v43;
  *(_QWORD *)(v39 - 136) = v41;
  *(_QWORD *)(v39 - 128) = v53;
  *(_QWORD *)(v39 - 144) = v44;
  v47(v39 - 144);
  *(_QWORD *)(v39 - 128) = v52;
  *(_QWORD *)(v39 - 120) = v43;
  *(_QWORD *)(v39 - 144) = v44;
  *(_QWORD *)(v39 - 136) = v41;
  *(_DWORD *)(v39 - 112) = v58
                         + 1224239923
                         * (((((v39 - 144) | 0x64E59E14) ^ 0xFFFFFFFE) - (~(v39 - 144) | 0x9B1A61EB)) ^ 0x69A99C3C);
  *(_QWORD *)(v39 - 104) = v53;
  v47(v39 - 144);
  *(_DWORD *)(v39 - 112) = v58 + 1224239923 * ((((v39 - 144) | 0x86AC62B3) + (~(v39 - 144) | 0x79539D4C)) ^ 0x741F9F65);
  *(_QWORD *)(v39 - 128) = v51;
  *(_QWORD *)(v39 - 120) = v43;
  *(_QWORD *)(v39 - 144) = v44;
  *(_QWORD *)(v39 - 136) = v41;
  *(_QWORD *)(v39 - 104) = v52;
  v47(v39 - 144);
  *(_QWORD *)(v39 - 104) = v51;
  *(_DWORD *)(v39 - 112) = v58 + 1224239923 * ((((v39 - 144) | 0xBB11C9DF) + (~(v39 - 144) | 0x44EE3620)) ^ 0x49A23409);
  *(_QWORD *)(v39 - 144) = v44;
  *(_QWORD *)(v39 - 136) = v41;
  *(_QWORD *)(v39 - 128) = v41;
  *(_QWORD *)(v39 - 120) = v43;
  v47(v39 - 144);
  v48 = *(_QWORD *)(v44 - 0x48247A308694277ELL);
  *(_DWORD *)(v39 - 128) = v42
                         + 1374699841
                         * ((1834202156
                           - ((v39 - 144) ^ 0xF8ADEB70 | 0x6D53B42C)
                           + ((v39 - 144) ^ 0xF8ADEB70 | 0x92AC4BD3)) ^ 0x7F5B8AA)
                         - 144;
  *(_QWORD *)(v39 - 144) = v48;
  *(_QWORD *)(v39 - 136) = v37;
  sub_1003D022C(v39 - 144);
  *(_QWORD *)(v39 - 136) = v59;
  *(_DWORD *)(v39 - 144) = v42 + 235795823 * ((v39 - 144) ^ 0x94AD4959) + 137;
  v49 = sub_1003BAC74(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(v38
                                            + 8
                                            * ((26 * (*(_DWORD *)(v39 - 140) + (v46 ^ 0x809F748B) > 0x7FFFFFFE)) ^ v42)))(v49);
}

uint64_t sub_1003E6240()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v3 + v1 + ((v0 + 935) | 0x42u) - 1784 > 0x7FFFFFFE) * ((v0 - 602) ^ 0xAD)) ^ (v0 - 226))))();
}

uint64_t sub_1003E6288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  *(_DWORD *)(v28 - 144) = (v26 + 482) ^ (1225351577
                                        * (((((v28 - 144) | 0xBD376AEC) ^ 0xFFFFFFFE) - (~(v28 - 144) | 0x42C89513)) ^ 0x61524D05));
  *(_QWORD *)(v28 - 136) = a22;
  *(_QWORD *)(v28 - 128) = v24;
  *(_QWORD *)(v28 - 120) = v24;
  *(_QWORD *)(v28 - 112) = a23;
  a20(v28 - 144);
  v29 = ((((v28 - 144) | 0xFFB46DA3) + (~(v28 - 144) | 0x4B925C)) ^ 0x924075AB) * v27;
  *(_DWORD *)(v28 - 128) = v23 - v29 + ((((v26 - 302049666) & 0x1200EFEE) - 1043) ^ 0x809F772D);
  *(_DWORD *)(v28 - 144) = (v26 + 19) ^ v29;
  *(_QWORD *)(v28 - 136) = a21;
  v30 = sub_1003BC1B4(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((1590 * (*(_DWORD *)(v28 - 140) != -390850116)) ^ v26)))(v30);
}

uint64_t sub_1003E6398()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ ((32 * ((v3 + v0 - 1) < 0x7FFFFFFD)) | (((v3 + v0 - 1) < 0x7FFFFFFD) << 6))))
                            - ((v1 - 868) ^ v1 ^ 0x4F5u ^ 0x1DLL)))();
}

uint64_t sub_1003E63EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;

  v17 = 1374699841
      * ((~((v16 - 144) ^ 0xCE91F438 | 0xE3331AF3) + (((v16 - 144) ^ 0xCE91F438) & 0xE3331AF3)) ^ 0xBFA9093D);
  *(_DWORD *)(v16 - 144) = (v14 - 775) ^ v17;
  *(_DWORD *)(v16 - 128) = a1 - v17;
  *(_QWORD *)(v16 - 136) = a14;
  v18 = sub_1003BC1B4(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v16 - 140) == 157 * (v14 ^ 0x3D4) - 390850901)
                                              * (v14 + 1007)) ^ v14)))(v18);
}

uint64_t sub_1003E6498()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v6 = 1374699841 * ((((v5 - 144) | 0x951DA954) - (v5 - 144) + ((v5 - 144) & 0x6AE256A8)) ^ 0xF8E9B15D);
  *(_QWORD *)(v5 - 136) = v4;
  *(_DWORD *)(v5 - 128) = v0 + v3 - v6;
  *(_DWORD *)(v5 - 144) = (v1 - 583) ^ v6;
  v7 = sub_1003BC1B4(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((7 * (*(_DWORD *)(v5 - 140) != v1 - 390850901)) ^ (v1 - 279))))(v7);
}

uint64_t sub_1003E6578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  uint64_t v30;

  v28 = (v25 + 2137578200) & 0x809726FE;
  *(_QWORD *)(v27 - 136) = a22;
  *(_QWORD *)(v27 - 128) = v24;
  *(_DWORD *)(v27 - 144) = (v28 - 591) ^ (1225351577
                                        * ((((2 * (v27 - 144)) | 0x628C293A) - (v27 - 144) - 826676381) ^ 0x12DCCC8B));
  *(_QWORD *)(v27 - 120) = v24;
  *(_QWORD *)(v27 - 112) = a23;
  a20(v27 - 144);
  *(_DWORD *)(v27 - 144) = (v28 - 591) ^ (1225351577
                                        * ((((v27 - 144) | 0x56677DED) - ((v27 - 144) & 0x56677DED)) ^ 0x75FDA5FB));
  *(_QWORD *)(v27 - 120) = v24;
  *(_QWORD *)(v27 - 112) = a23;
  *(_QWORD *)(v27 - 136) = a22;
  *(_QWORD *)(v27 - 128) = v24;
  a20(v27 - 144);
  v29 = 1374699841 * ((~((v27 - 144) | 0x16B4FC58) + ((v27 - 144) & 0x16B4FC58)) ^ 0x84BF1BAE);
  *(_DWORD *)(v27 - 128) = -2137033670 - v29 + v23 + ((v28 - 1875606257) & 0x6FCB76BF) - 182;
  *(_DWORD *)(v27 - 144) = (v28 - 1054) ^ v29;
  *(_QWORD *)(v27 - 136) = a21;
  v30 = sub_1003BC1B4(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * (int)((429 * (*(_DWORD *)(v27 - 140) == -390850116)) ^ v28)))(v30);
}

uint64_t sub_1003E6708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_DWORD *)(v28 - 112) = v24
                         + 1224239923
                         * ((1998466508 - ((v28 - 144) | 0x771E2DCC) + ((v28 - 144) | 0x88E1D233)) ^ 0x7A522FE4)
                         + 498;
  *(_QWORD *)(v28 - 144) = a23;
  *(_QWORD *)(v28 - 136) = a15;
  *(_QWORD *)(v28 - 104) = v23;
  *(_QWORD *)(v28 - 128) = v23;
  *(_QWORD *)(v28 - 120) = v27;
  v29 = a19(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((v25 - 2137033670 + (((v24 ^ 0x3A6) + 935) | 0x42u) - 1784 > 0x7FFFFFFE)
                                              * (((v24 ^ 0x3A6) - 602) ^ 0xAD)) ^ ((v24 ^ 0x3A6) - 226))))(v29);
}

uint64_t sub_1003E6E90()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = 1224239923 * ((2 * ((v2 - 144) & 0x4145D028) - (v2 - 144) - 1095094320) ^ 0x4C09D207);
  *(_DWORD *)(v2 - 144) = v3 ^ 0x6CBA9052;
  *(_QWORD *)(v2 - 136) = v6;
  *(_DWORD *)(v2 - 128) = v3 + v1 - 1392;
  sub_1003BB538((_DWORD *)(v2 - 144));
  *(_QWORD *)(v2 - 144) = v9;
  *(_QWORD *)(v2 - 136) = v6;
  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 128) = v0;
  *(_QWORD *)(v2 - 120) = v8;
  *(_DWORD *)(v2 - 112) = v1 + 1224239923 * (((v2 - 144) & 0x73F71CDE | ~((v2 - 144) | 0x73F71CDE)) ^ 0x7EBB1EF6) - 1105;
  v7(v2 - 144);
  *(_QWORD *)(v2 - 144) = v0;
  *(_QWORD *)(v2 - 136) = v5;
  *(_DWORD *)(v2 - 128) = v1
                        - 1001
                        + 1374699841 * ((2 * ((v2 - 144) & 0x37738180) - (v2 - 144) - 930316676) ^ 0xA5786675)
                        - 370;
  return sub_1003D022C(v2 - 144);
}

void sub_1003E7008(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BR              X11 }
}

uint64_t sub_1003E70BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 | 0x444) - 105) ^ 0x4F6) * (v1 == 0)) | v0 | 0x444))
                            - (((v0 | 0x444u) - 1125) ^ 0xECLL)))();
}

uint64_t sub_1003E7104@<X0>(uint64_t (*a1)(_DWORD *)@<X8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t result;
  _DWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v4 = 3804331 * ((((2 * v6) | 0x520AD6) - v6 + 2144795285) ^ 0xFEFC209D);
  v7 = 0x248771FDFB9E9BA5;
  v8 = v3;
  v9 = v4 + 992693641;
  v6[0] = v4 + 681732514;
  v6[1] = v4 + v1 + 185;
  result = a1(v6);
  *v2 = *(_DWORD *)(v3 - 0x31BC703A95C2A144);
  return result;
}

void sub_1003E7958(unint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  char *v6;
  unsigned int v7;
  _BOOL4 v8;
  _QWORD v9[2];
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t *v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  int v29;
  char v30;
  char v31;
  char v32;
  char v33;
  int v34;
  unsigned int v35;
  unint64_t *v36;
  int v37;

  v1 = *(_DWORD *)(a1 + 44) - 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v2 = *(_DWORD *)(a1 + 16);
  v18 = 1755732067
      * (((a1 | 0xDEEEE61CC66703ELL) - (a1 | 0xF211119E33998FC1) - 0xDEEEE61CC66703FLL) ^ 0xD045495E12A0CDE5);
  v19 = (uint64_t *)a1;
  v29 = v2 + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v3 = 1178560073 * (&v35 ^ 0xBA947862);
  v4 = *(_DWORD *)(a1 + 36) + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v37 = v1 - v3 - 1882357543;
  v35 = -1507894969 - v3;
  v23 = &STACK[0x6EDAADCA9171F959];
  v36 = &STACK[0x6EDAADCA9171F959];
  sub_1003D9D64((uint64_t)&v35);
  v5 = v29;
  v6 = (char *)*(&off_1021378F0 + (int)(v1 + 34)) - 12;
  v25 = *(_QWORD *)&v6[8 * v1] - 12;
  v13 = v4 + ((v1 + 1719) ^ 0xE3F7BE03);
  v17 = v4 - 1399556429;
  v12 = v4 + 461554565;
  v11 = v4 - 325651802;
  v9[1] = (char *)&v9[-154770060] + 4;
  v9[0] = (char *)&v9[-154769845] + 4;
  v28 = v1 ^ 0x16A;
  v16 = 899 * (v1 ^ 0x4D);
  v10 = 385 * (v1 ^ 0x4A);
  v15 = v1 + 536495;
  v14 = v1 + 536495;
  v26 = v14;
  v27 = v1;
  v21 = vdupq_n_s32(0x6BEABFE2u);
  v22 = vdupq_n_s32(0x6BEABFFFu);
  v20 = vdupq_n_s32(0x6BEABFF3u);
  v24 = *v19;
  v7 = v5 - (((v5 << ((((v1 - 73) ^ 7) + 92) ^ 0x5C)) + 129785586) & 0x426471E) - 1913564408;
  v30 = (HIBYTE(v7) ^ 2) - ((v7 >> 23) & 0x82) - 63;
  v31 = (BYTE2(v7) ^ 0x13) - ((2 * (BYTE2(v7) ^ 0x13)) & 0x83) - 63;
  v32 = (BYTE1(v7) ^ 0x23) - ((2 * (BYTE1(v7) ^ 0x23)) & 0x83) - 63;
  v33 = (v5 - ((((_BYTE)v5 << ((((v1 - 73) ^ 7) + 92) ^ 0x5C)) - 14) & 0x1E) + 8) ^ 0x4E;
  v8 = ((2 * v34) & 0x7A ^ 0x50) + (v34 & 0x3F ^ 0xFF9EF3D7) + 6360007 < 0xFFFFFFC0;
  __asm { BR              X15 }
}

uint64_t sub_1003E7D58()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;

  v5 = v3 + 6360068;
  if (v5 <= 0x40)
    v5 = 64;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (int)((((((v0 + 29266174) & 0xFE416B63) + 1184) ^ 0x714)
                                                             * (-v1 - 6360068 - v2 + v5 > 0xE)) ^ v0))
                                          - 12))(1926162624);
}

uint64_t sub_1003E7DDC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  v5 = v1 + v0;
  v6 = v1 + v0 + 6360068;
  if (v6 <= 0x40)
    v6 = 64;
  v7 = __CFADD__(v5 + (v2 ^ 0x610B00), v3 + v6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((43 * (((v2 + 62) ^ v7) & 1)) ^ v2)))();
}

uint64_t sub_1003E7E40@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,arg32_1003E7E40 a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;

  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a32.arr[4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((1724 * (((v33 + 1) & 0x1FFFFFFF0) == 16)) ^ v32))
                            - (((v32 - 673) | 0x302u) ^ 0x3AELL)))();
}

void sub_1003E7E98()
{
  JUMPOUT(0x1003E7E5CLL);
}

uint64_t sub_1003E7EA4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((1443 * (((v0 == v1) ^ (7 * (v2 ^ 0xA9))) & 1)) ^ v2))
                            - ((v2 - 319) ^ 0x26FLL)))();
}

uint64_t sub_1003E7EF0@<X0>(int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(a2 + (a6 + a1)) = *(_BYTE *)((v6 - 534) + v7 + a4 + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((a1 + a6 + 1) > 0x3F) * a5) ^ v6)) - 12))();
}

uint64_t sub_1003E7F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,unsigned int a53,unsigned int a54,int a55,int a56,int a57,unsigned __int8 a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  int32x4_t *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int32x4_t v71;
  int8x16_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint8x16_t v77;
  uint16x8_t v78;
  int8x16_t v79;
  int8x16_t v80;
  uint16x8_t v81;
  int8x16_t v82;
  int8x16_t v83;
  uint8x16_t v84;
  uint16x8_t v85;
  uint16x8_t v86;
  uint8x16_t v87;
  int8x16_t v90;
  int8x16_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  int32x4_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint8x16_t v103;
  uint16x8_t v104;
  uint16x8_t v105;
  uint8x16_t v106;
  uint8x16_t v111;
  uint16x8_t v112;
  uint16x8_t v113;
  int32x4_t v114;
  int32x4_t v115;
  int32x4_t v116;
  int32x4_t v117;
  __int32 *v118;
  int v119;
  unsigned int v120;
  unint64_t v121;
  uint64_t v122;
  int8x16x4_t v123;
  int8x16x4_t v124;

  v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * v58);
  v74 = a53;
  v75 = a58 ^ 0x70;
  if (v75 == 2)
  {
    v124 = vld4q_s8((const char *)&a42 + 4);
    v103 = (uint8x16_t)veorq_s8(v124.val[0], v69);
    v104 = vmovl_u8(*(uint8x8_t *)v103.i8);
    v105 = vmovl_high_u8(v103);
    v106 = (uint8x16_t)veorq_s8(v124.val[1], v69);
    _Q17 = vmovl_u8(*(uint8x8_t *)v106.i8);
    _Q16 = vmovl_high_u8(v106);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    v111 = (uint8x16_t)veorq_s8(v124.val[2], v69);
    v112 = vmovl_high_u8(v111);
    v113 = vmovl_u8(*(uint8x8_t *)v111.i8);
    v124.val[0] = veorq_s8(v124.val[3], v69);
    v124.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v124.val[0]);
    v124.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v124.val[1]);
    v124.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v124.val[1].i8);
    v124.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v124.val[0].i8);
    v124.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v124.val[0]);
    v124.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v124.val[0].i8);
    v114 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v113.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v104.i8), 0x18uLL)), v124.val[0]);
    v115 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v113, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v104), 0x18uLL)), v124.val[3]);
    v116 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v112.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.i8), 0x18uLL)), v124.val[1]);
    v117 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v112, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v105), 0x18uLL)), v124.val[2]);
    v124.val[0] = veorq_s8(vandq_s8((int8x16_t)v114, v70), (int8x16_t)(*(_OWORD *)v124.val & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v124.val[3] = veorq_s8(vandq_s8((int8x16_t)v115, v70), (int8x16_t)(*(_OWORD *)&v124.val[3] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v124.val[1] = veorq_s8(vandq_s8((int8x16_t)v116, v70), (int8x16_t)(*(_OWORD *)&v124.val[1] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v124.val[2] = veorq_s8(vandq_s8((int8x16_t)v117, v70), (int8x16_t)(*(_OWORD *)&v124.val[2] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v65[2] = vaddq_s32(vsubq_s32(v116, vaddq_s32((int32x4_t)v124.val[1], (int32x4_t)v124.val[1])), v71);
    v65[3] = vaddq_s32(vsubq_s32(v117, vaddq_s32((int32x4_t)v124.val[2], (int32x4_t)v124.val[2])), v71);
    *v65 = vaddq_s32(vsubq_s32(v114, vaddq_s32((int32x4_t)v124.val[0], (int32x4_t)v124.val[0])), v71);
    v65[1] = vaddq_s32(vsubq_s32(v115, vaddq_s32((int32x4_t)v124.val[3], (int32x4_t)v124.val[3])), v71);
    v118 = &v65[449644183].i32[v67];
    v119 = *(v118 - 8) ^ *(v118 - 3);
    v120 = *(v118 - 16) ^ *(v118 - 14) ^ (v63 + ((v64 - 15) | 0x48C) + v119 - ((2 * v119) & 0xD7D57FC4) - 1228);
    HIDWORD(v121) = v120 ^ v63;
    LODWORD(v121) = v120;
    *v118 = (v121 >> 31) + v63 - ((2 * (v121 >> 31)) & 0xD7D57FC4);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v61 + 8 * ((1779 * (v60 == 1798576669)) ^ (v64 + 774))) - 8))(1484876357);
  }
  else if (v75 == 1)
  {
    v123 = vld4q_s8((const char *)&a42 + 4);
    v76 = (v64 + 1073) | 0x23u;
    v77 = (uint8x16_t)veorq_s8(v123.val[0], v69);
    v78 = vmovl_u8(*(uint8x8_t *)v77.i8);
    v79 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v78.i8);
    v80 = (int8x16_t)vmovl_high_u16(v78);
    v81 = vmovl_high_u8(v77);
    v82 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v81.i8);
    v83 = (int8x16_t)vmovl_high_u16(v81);
    v84 = (uint8x16_t)veorq_s8(v123.val[1], v69);
    v85 = vmovl_high_u8(v84);
    v86 = vmovl_u8(*(uint8x8_t *)v84.i8);
    v87 = (uint8x16_t)veorq_s8(v123.val[2], v69);
    _Q21 = (int8x16_t)vmovl_high_u8(v87);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v87.i8);
    v90 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    v95 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v123.val[0] = veorq_s8(v123.val[3], v69);
    v123.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v123.val[0]);
    v123.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v123.val[1]);
    v123.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v123.val[0].i8);
    v123.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v123.val[0]);
    v123.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v123.val[0].i8), 0x18uLL), v90), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v86.i8, 8uLL), v79));
    v123.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v123.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v86, 8uLL), v80));
    v123.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v123.val[1].i8), 0x18uLL), v95), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v85.i8, 8uLL), v82));
    v123.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v123.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v85, 8uLL), v83));
    v96 = (int32x4_t)veorq_s8(vandq_s8(v123.val[0], v72), (int8x16_t)(*(_OWORD *)&v79 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v97 = (int32x4_t)veorq_s8(vandq_s8(v123.val[3], v72), (int8x16_t)(*(_OWORD *)&v80 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v98 = (int32x4_t)veorq_s8(vandq_s8(v123.val[1], v72), (int8x16_t)(*(_OWORD *)&v82 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v99 = (int32x4_t)veorq_s8(vandq_s8(v123.val[2], v72), (int8x16_t)(*(_OWORD *)&v83 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v65[2] = vaddq_s32(vsubq_s32((int32x4_t)v123.val[1], vaddq_s32(v98, v98)), v71);
    v65[3] = vaddq_s32(vsubq_s32((int32x4_t)v123.val[2], vaddq_s32(v99, v99)), v71);
    *v65 = vaddq_s32(vsubq_s32((int32x4_t)v123.val[0], vaddq_s32(v96, v96)), v71);
    v65[1] = vaddq_s32(vsubq_s32((int32x4_t)v123.val[3], vaddq_s32(v97, v97)), v71);
    v100 = *(_QWORD *)(v68 + 8 * ((int)v76 - 1079));
    v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((v64 + 1073) | 0x3B));
    return v101(v74, *(_QWORD *)(v68 + 8 * ((v64 + 1073) & 0x100F3B40 | 0x22u)) - 8, *(_QWORD *)(v68 + 8 * (int)(v76 ^ 0x425)) - 4, v100, v76, v60 - 15, v101, -(*(_BYTE *)(v100 + v60 - 16 + v67) - 66), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
  else
  {
    v122 = a54;
    a52 = 2 * (a52 ^ v66) + v66 - (v62 & (4 * (a52 ^ v66)));
    a53 = 2 * (a53 ^ v66) + v66 - (v62 & (4 * (a53 ^ v66)));
    a54 = 2 * (a54 ^ v66) + v66 - (v62 & (4 * (a54 ^ v66)));
    a55 = 2 * (a55 ^ v66) + v66 - (v62 & (4 * (a55 ^ v66)));
    HIDWORD(a33) = a58 ^ 0x70;
    return v73(v122, a2, a3, a4, v73, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             v59,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
}

uint64_t sub_1003E8DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,uint64_t a32,int a33)
{
  uint64_t v33;
  int v34;
  _BOOL4 v35;

  v35 = (int)a3 + a31 + 108 < ((5 * a33 - 1127543162) & 0x4334EBF5 ^ 0xFFFFFFCE);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * (((8 * v35) | (16 * v35)) ^ (v34 + 1085))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1003E8E18()
{
  JUMPOUT(0x1003E8290);
}

uint64_t sub_1003E8E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16)
{
  uint64_t v16;
  int v17;
  _BOOL4 v18;

  if (a15 < 0x5875A71B != (a16 + 11065467) < 0x5875A71B)
    v18 = (a16 + 11065467) < 0x5875A71B;
  else
    v18 = a16 + 11065467 > a15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * ((2 * ((((v17 - 15) ^ v18) & 1) == 0)) | ((((v17 - 15) ^ ~v18) & 1) << 10) | (v17 + 230)))
                            - 12))();
}

uint64_t sub_1003E8EC0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((73
                                          * (((a1 - 1473040033 < (a1 - 1473040096)) ^ v2) & 1)) ^ (v2 + 1098)))
                            - 12))();
}

uint64_t sub_1003E8F0C@<X0>(int8x16_t *a1@<X3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;

  v8 = *(int8x16_t *)(v4 + a2 + ((v2 - 54) ^ (v3 + 25)));
  *a1 = vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v7)), v6);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5 + 8 * (v2 + 924)) - 12))((a2 + 64));
}

uint64_t sub_1003E8F68@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v2) = *(_BYTE *)(v5 + (a2 + v4))
                      - ((2 * *(_BYTE *)(v5 + (a2 + v4))) & 0x83)
                      - 63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((724 * (((v3 - 1152) ^ 0x18) + v2 == 64)) ^ v3))
                            - 12))();
}

void sub_1003E8FB8()
{
  JUMPOUT(0x1003E8288);
}

uint64_t sub_1003E8FE4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((726
                                * (((((a1 + 541991094) & 0xDFB1D9DF ^ 0xFFFFFED0) + ((a1 - 1121) | 5)) & v1) == 1926162624)) ^ a1)))();
}

uint64_t sub_1003E9044@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W5>, uint64_t a4@<X6>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(a2 + (a5 + a1)) = *(_BYTE *)(a4 + (v6 - 1926162624));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1252 * ((((((v5 - 277) | 7) ^ a3) + v6) & 0xFFFFFFFC) != v7)) ^ v5)))();
}

uint64_t sub_1003E909C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(uint64_t))
{
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v31 = 628203409 * ((((v30 - 168) | 0x76F58F42) - (v30 - 168) + ((v30 - 168) & 0x890A70B8)) ^ 0xF47D8371);
  *(_QWORD *)(v30 - 168) = a27;
  *(_DWORD *)(v30 - 160) = v31 + v29 + 603;
  *(_DWORD *)(v30 - 156) = 1628758208 - v31;
  v32 = sub_1003D0120(v30 - 168);
  return a29(v32);
}

uint64_t sub_1003E9108@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = a6 < 0x9000B19B;
  if (v8 == (a1 + 942924475) < 0x9000B19B)
    v8 = a1 + 942924475 < a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v8 * (7 * (v6 ^ 0x241) + 142)) ^ v6)) - 12))();
}

uint64_t sub_1003E9190@<X0>(int a1@<W0>, unsigned int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, int a6@<W6>, uint64_t a7@<X7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  _BOOL4 v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;

  v14 = a2 < v12;
  *(_BYTE *)(a4 + (v8 + v10)) = *(_BYTE *)(a7 + (a8 + v11))
                                            - ((*(_BYTE *)(a7 + (a8 + v11)) << (v9 ^ a5)) & a3)
                                            - 63;
  v15 = a8 + 1 + a1;
  v16 = v14 ^ (v15 < v12);
  v17 = v15 < a2;
  if (!v16)
    v14 = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((v14 * a6) ^ v9)) - 12))();
}

uint64_t sub_1003E91FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;

  v55 = 628203409 * ((((v54 - 168) | 0x6CCBA224) - ((v54 - 168) & 0x6CCBA224)) ^ 0xEE43AE17);
  *(_QWORD *)(v54 - 168) = a27;
  *(_DWORD *)(v54 - 160) = v55 + v53 + 591;
  *(_DWORD *)(v54 - 156) = a12 - v55;
  v56 = sub_1003D0120(v54 - 168);
  v57 = a52 & 0x3F;
  *(&a43 + (v57 ^ 0x2A)) = 65;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52
                                                                        + 8
                                                                        * ((863 * ((v57 ^ 0x2A) > 0x37)) ^ v53))
                                                            - 4))(v56, 3698953731, 2368804623);
}

uint64_t sub_1003E92FC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (((v0 == (v1 ^ 0x6CB)) * ((v1 - 1370958965) & 0x51B725DB ^ 0x53)) ^ v1))
                                          - 8))(193);
}

uint64_t sub_1003E9354@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((44 * ((((a1 ^ 0x15u) < 8) ^ ((v1 ^ 0xFE) - 59)) & 1)) ^ v1 ^ 0x2FE))
                            - (v1 ^ 0x6F8)))();
}

uint64_t sub_1003E93C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a9 + v10) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((((v9 & 0x38) == 8) * (((v11 - 327) | 0x400) ^ 0x655)) ^ v11))
                            - 8))();
}

uint64_t sub_1003E9404()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v0 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 == 0) * v2) ^ v1)) - 8))();
}

uint64_t sub_1003E9428()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (((v1 - 791) * (v2 == v0)) ^ v1))
                                          - (((v1 - 945) | 2u) ^ 0x57)))(193);
}

uint64_t sub_1003E9470@<X0>(char a1@<W0>, uint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;

  *(_BYTE *)(a4 + v5 + a2 - 1) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((a4 + v5 < (((v4 - 61) | v7) ^ v6)) * a3) ^ (v4 + 1194))) - 12))();
}

void sub_1003E94AC()
{
  JUMPOUT(0x1003E8288);
}

uint64_t sub_1003E94D0()
{
  int v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = (v2 ^ 0x7DBu) + v0 - 1238160964 > 0x37;
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * v3) | (16 * v3)) ^ (v2 + 596))))();
}

uint64_t sub_1003E951C@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = v1 + v2;
  if (v4 <= 0x38)
    v4 = 56;
  return (*(uint64_t (**)(void))(v3 + 8 * ((35 * (v4 - v1 + (a1 ^ 0x4D1u) - 758 + 1238158945 < 8)) ^ a1)))();
}

uint64_t sub_1003E9574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = 158 * (v11 ^ 0x340u);
  *(_QWORD *)(a10 + v12 + (((_DWORD)v15 - 1348098844) & 0x505A5EBD)) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (int)((83 * (((v15 ^ 0xFFFFFFFFFFFFFCEELL) & v10) != 8)) ^ v15))
                            - 12))();
}

uint64_t sub_1003E95EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v10 + (v11 & a8) + v12) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (((v9 != v12) * a5) ^ v8)) - 12))();
}

uint64_t sub_1003E9618()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 ^ 0x6F7) - 58) ^ (v2 - 1641)) * (v0 != v1)) ^ v2)) - 8))();
}

uint64_t sub_1003E9658@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a2 + v3 + a1 - 1) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a2 + v3) < 0x38) * v5) ^ (v2 + 610))))();
}

void sub_1003E9684()
{
  JUMPOUT(0x1003E8288);
}

uint64_t sub_1003E98EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,int a58)
{
  uint64_t v58;
  int v59;
  uint64_t v61;
  unint64_t v62;

  if (a34 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v58
                                                                 + 8 * ((1462 * (a58 != 267581584)) ^ (v59 + 313)))
                                                     - (((v59 + 57) | 0x100u) ^ 0x18CLL)))(a1, a13);
  if (a34 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58
                                                                          + 8
                                                                          * ((174 * (a58 == v59 + 267581505)) ^ (v59 + 215)))
                                                              - 4))(a1, a2, a13);
  v61 = (v59 + 974);
  v62 = ((unint64_t)&a37 ^ 0x77DE2DF2576BDBDBLL)
      + ((2 * (_QWORD)&a37) & 0xEFBC5BE4AED7B7B0)
      + (v61 ^ 0xFCF7DADFED97BA1DLL)
      - 8;
  a57 = ((v59 - 34 + v62) ^ 0xBA) * (v62 + 62);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (int)v61) - 12))(a1, a2, a13);
}

void sub_1003E9C2C()
{
  JUMPOUT(0x1003E9BF8);
}

uint64_t sub_1003E9C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,__int128 a40)
{
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v45 = *(_QWORD *)(a20 + 24);
  *(_QWORD *)((char *)&a40 + 4) = 0xC1C1C1C1C1C1C1C1;
  *(_QWORD *)((char *)&a40 + 12) = 0xC1C1C1C1C1C1C1C1;
  v46 = 235795823 * ((2 * ((v43 - 168) & 0x1ABDAF30) - (v43 - 168) + 1698844877) ^ 0xF1EF1994);
  *(_QWORD *)(v43 - 128) = &STACK[0xAA58417147CEB7B];
  *(_DWORD *)(v43 - 132) = (v42 + 1789) ^ v46;
  *(_QWORD *)(v43 - 152) = &a38;
  *(_QWORD *)(v43 - 144) = v45;
  *(_QWORD *)(v43 - 168) = v43 - 184;
  *(_DWORD *)(v43 - 160) = v46 + 772366271;
  v47 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (v42 ^ 0xF3)) - 8))(v43 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40
                                                      + 8
                                                      * (((*(_DWORD *)(v43 - 136) == (((v42 + 21) | 0xD) ^ (v41 - 53)))
                                                        * (((v42 + 84) | 0x340) + 835)) ^ v42))
                                          - 12))(v47);
}

uint64_t sub_1003E9D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 8) + v0 - 0x12ADEFB8815E6A66)
     - *(unsigned __int8 *)(v5 + v0 - 0x12ADEFB8815E6A66);
  v7 = v0 + 1;
  v9 = (v6 ^ 0xFDADEEFF) + 2013002171 + ((2 * v6) & 0xFB5BDDFE) != ((v4 - 882) ^ 0x75A9E8F5) || v7 == v3 + 16;
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * v9) ^ v4)))();
}

uint64_t sub_1003E9DDC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v5 = ((((v4 - 168) | 0x6FA34C23DE3CBB8CLL) - ((v4 - 168) | 0x905CB3DC21C34473) - 0x6FA34C23DE3CBB8DLL) ^ 0x6713F6DD4A91F2D5)
     * v2;
  *(_QWORD *)(v4 - 136) = v5 + 1974069434;
  *(_DWORD *)(v4 - 128) = ((((v4 - 168) | 0xDE3CBB8C) - ((v4 - 168) | 0x21C34473) + 566445171) ^ 0x4A91F2D5) * v2
                        + a1
                        - 269611775
                        - 61;
  *(_QWORD *)(v4 - 160) = v1 - v5;
  *(_DWORD *)(v4 - 152) = (a1 - 269611775) ^ (((((v4 - 168) | 0xDE3CBB8C) - ((v4 - 168) | 0x21C34473) + 566445171) ^ 0x4A91F2D5)
                                            * v2);
  *(_DWORD *)(v4 - 148) = ((((v4 - 168) | 0xDE3CBB8C) - ((v4 - 168) | 0x21C34473) + 566445171) ^ 0x4A91F2D5) * v2;
  *(_DWORD *)(v4 - 144) = a1
                        - ((((v4 - 168) | 0xDE3CBB8C) - ((v4 - 168) | 0x21C34473) + 566445171) ^ 0x4A91F2D5) * v2
                        + 2104632311;
  *(_DWORD *)(v4 - 168) = ((a1 - 269611775) | 0x2D) ^ (((((v4 - 168) | 0xDE3CBB8C)
                                                       - ((v4 - 168) | 0x21C34473)
                                                       + 566445171) ^ 0x4A91F2D5)
                                                     * v2);
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_1021378F0 + (a1 ^ 0xD1)) - 8))(v4 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * *(int *)(v4 - 124)) - 12))(v6);
}

void sub_1003E9EC0()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 32) = 1810546658;
}

void sub_1003E9F0C(uint64_t a1)
{
  int v1;

  v1 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  __asm { BR              X10 }
}

uint64_t sub_1003E9FC4()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*v1 != 0) * ((v0 - 427) ^ 0x413)) ^ (v0 - 427))) - 12))();
}

uint64_t sub_1003EA004()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = 12 * (v0 ^ 0x1D);
  v6 = v3(*v4);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*v1 == (v5 ^ 0x1D4)) * (v5 - 419)) ^ v5)))(v6);
}

uint64_t sub_1003EA044()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 1405824187;
  *(_DWORD *)(v0 + 56) = 1158655773;
  return result;
}

uint64_t sub_1003EA084()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == (v0 ^ 0x3A)) * ((v0 ^ 0x1EE) - 419)) ^ v0 ^ 0x1EE)))();
}

void sub_1003EA0B4(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BR              X14 }
}

uint64_t sub_1003EA17C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  _DWORD v10[2];
  uint64_t v11;

  v5 = v4 | 0x182;
  v6 = (((v4 | 0x182) + 849) ^ 0x5D236CB8) - (v2 + ((1248614782 - v3) & 0x6FDA7728));
  v7 = (v4 | 0x182) + 406;
  v8 = 1755732067 * ((((2 * v10) | 0x8125F018) - v10 + 1064110068) ^ 0x1E5445D7);
  v11 = v1;
  v10[0] = v6 ^ v8;
  v10[1] = v7 ^ v8;
  return ((uint64_t (*)(_DWORD *))(*(_QWORD *)(a1 + 8 * (v5 - 335)) - 4))(v10);
}

void sub_1003EA2D8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_1003EA364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1458 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0xACu)) - 12))();
}

uint64_t sub_1003EA390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v22;

  *(_QWORD *)(*(_QWORD *)(a16 + 96) + 504) = v17 + 1;
  *(_DWORD *)(*(_QWORD *)(a16 + 96) + 496) = a17 - 1;
  v20 = 1178560073 * ((v19 - 1120536645 - 2 * ((v19 - 152) & 0xBD35F853)) ^ 0x7A18031);
  *(_DWORD *)(v19 - 136) = -1882357464 - v20;
  *(_DWORD *)(v19 - 152) = -1507894969 - v20;
  *(_QWORD *)(v19 - 144) = v19 + 0x6EDAADCA9171F751;
  v22 = v17;
  sub_1003D9D64(v19 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((755
                                                        * (a17
                                                         - 1011538353
                                                         + ((2 * *(_DWORD *)(v19 - 184)) & 0x74 ^ 0x54)
                                                         + (*(_DWORD *)(v19 - 184) & 0x3F ^ 0x1ECFA390u) < 0xFFFFFFC0)) ^ 0x14Au))
                                          - 12))(v22);
}

uint64_t sub_1003EA580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  unsigned int v31;

  v31 = v27 - 516924345;
  if (v31 <= 0x40)
    v31 = 64;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v30
                                                               + 8
                                                               * ((((a27 ^ 0x30C) - 973) * (a6 - v28 - v29 + v31 < 0xF)) ^ a27))
                                                   - 4))(a1, 4189674574);
}

uint64_t sub_1003EA5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;

  v26 = v19 + 446;
  v27 = ((v19 + 446) ^ 0x590) + 978;
  v28 = v21 + v20;
  v29 = v28 + v22;
  if ((v28 + v22) <= 0x40)
    v29 = v23;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8
                                                      * (((a6 - v28 + 31 * (v26 ^ 0x590) - 217 >= v24 + v29)
                                                        * (v27 ^ 0x3D6)) ^ v26))
                                          - 8))(a19);
}

uint64_t sub_1003EA654(unint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((534
                                          * ((v2 + v1 - 1)
                                           + v5
                                           - 252
                                           + ((((v3 - 145) | 0x112u) - 347) ^ a1) > 0xF)) ^ v3))
                            - 4))();
}

uint64_t sub_1003EA6A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int8x16_t *a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int8x16_t v16;
  int8x16_t v17;
  uint64_t (*v18)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t);

  v16.i64[0] = 0x8282828282828282;
  v16.i64[1] = 0x8282828282828282;
  v17.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v17.i64[1] = 0xC1C1C1C1C1C1C1C1;
  *(int8x16_t *)(v14 + (a2 + a8)) = vaddq_s8(vsubq_s8(*a7, vandq_s8(vaddq_s8(*a7, *a7), v16)), v17);
  v18 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (int)((47 * ((v13 ^ 0x14ALL) == ((v12 + 1) & 0x1FFFFFFF0))) ^ v13));
  return v18(v18, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12);
}

uint64_t sub_1003EA71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23
                                                                        + 8
                                                                        * (((((v22 - 64563624) & 0x3D928FF) - 14)
                                                                          * (v20 == v21)) ^ v22))
                                                            - ((v22 - 1720869088) & 0x669263DF)
                                                            + 981))(a19, a2, v19);
}

uint64_t sub_1003EA778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(_QWORD, _QWORD, __n128, __n128, __n128, __n128, __n128),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int32x4_t a33,int32x4_t a34,int32x4_t a35,int32x4_t a36)
{
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD, _QWORD, __n128, __n128, __n128, __n128, __n128);
  const char *v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint8x16_t v59;
  uint16x8_t v60;
  int8x16_t v61;
  int8x16_t v62;
  uint16x8_t v63;
  int8x16_t v64;
  int8x16_t v65;
  uint8x16_t v66;
  uint16x8_t v67;
  uint16x8_t v68;
  uint8x16_t v69;
  int8x16_t v72;
  int8x16_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int32x4_t v81;
  uint64_t v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  unsigned int v87;
  uint8x16_t v89;
  uint16x8_t v90;
  uint16x8_t v91;
  uint8x16_t v92;
  uint8x16_t v97;
  uint16x8_t v98;
  uint16x8_t v99;
  int32x4_t v100;
  int32x4_t v101;
  int32x4_t v102;
  int32x4_t v103;
  _DWORD *v104;
  int v105;
  unsigned int v106;
  unint64_t v107;
  int8x16x4_t v108;
  int8x16x4_t v109;

  v44 = (uint64_t (*)(_QWORD, _QWORD, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v40 + 8 * v36)
                                                                                       - 12);
  v45 = (const char *)(v43 - 252);
  v46.n128_u64[0] = 0xC1C1C1C1C1C1C1C1;
  v46.n128_u64[1] = 0xC1C1C1C1C1C1C1C1;
  v47 = (__n128)vdupq_n_s32(0x6BEABFFFu);
  v48 = (__n128)vdupq_n_s32(0x6BEABFE2u);
  a26 = v42 - 126;
  a27 = v37 - 16;
  v49 = (__n128)vdupq_n_s32(0x6BEABFF3u);
  v50.n128_u64[0] = 0x8282828282828282;
  v50.n128_u64[1] = 0x8282828282828282;
  v51 = *(unsigned int *)(v43 - 176);
  v52 = *(_DWORD *)(v43 - 180);
  v53 = *(_DWORD *)(v43 - 176);
  v55 = *(_DWORD *)(v43 - 172);
  v54 = *(_DWORD *)(v43 - 168);
  v56 = v54;
  v57 = *(_BYTE *)(v43 - 156) ^ 0x70;
  if (v57 == 2)
  {
    a25 = v44;
    v109 = vld4q_s8(v45);
    v89 = (uint8x16_t)veorq_s8(v109.val[0], (int8x16_t)v46);
    v90 = vmovl_u8(*(uint8x8_t *)v89.i8);
    v91 = vmovl_high_u8(v89);
    v92 = (uint8x16_t)veorq_s8(v109.val[1], (int8x16_t)v46);
    _Q22 = vmovl_u8(*(uint8x8_t *)v92.i8);
    _Q21 = vmovl_high_u8(v92);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v97 = (uint8x16_t)veorq_s8(v109.val[2], (int8x16_t)v46);
    v98 = vmovl_high_u8(v97);
    v99 = vmovl_u8(*(uint8x8_t *)v97.i8);
    v109.val[0] = veorq_s8(v109.val[3], (int8x16_t)v46);
    v109.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v109.val[0]);
    v109.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v109.val[1]);
    v109.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v109.val[1].i8);
    v109.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v109.val[0].i8);
    v109.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v109.val[0]);
    v109.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v109.val[0].i8);
    v100 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v99.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v90.i8), 0x18uLL)), v109.val[0]);
    v101 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v99, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v90), 0x18uLL)), v109.val[3]);
    v102 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v98.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v91.i8), 0x18uLL)), v109.val[1]);
    v103 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v98, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v91), 0x18uLL)), v109.val[2]);
    v109.val[0] = veorq_s8(vandq_s8((int8x16_t)v100, (int8x16_t)v47), (int8x16_t)(*(_OWORD *)v109.val & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v109.val[3] = veorq_s8(vandq_s8((int8x16_t)v101, (int8x16_t)v47), (int8x16_t)(*(_OWORD *)&v109.val[3] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v109.val[1] = veorq_s8(vandq_s8((int8x16_t)v102, (int8x16_t)v47), (int8x16_t)(*(_OWORD *)&v109.val[1] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    v109.val[2] = veorq_s8(vandq_s8((int8x16_t)v103, (int8x16_t)v47), (int8x16_t)(*(_OWORD *)&v109.val[2] & __PAIR128__(0xFFFFFF1DFFFFFF1DLL, 0xFFFFFF1DFFFFFF1DLL)));
    a35 = vaddq_s32(vsubq_s32(v102, vaddq_s32((int32x4_t)v109.val[1], (int32x4_t)v109.val[1])), (int32x4_t)v48);
    a36 = vaddq_s32(vsubq_s32(v103, vaddq_s32((int32x4_t)v109.val[2], (int32x4_t)v109.val[2])), (int32x4_t)v48);
    a33 = vaddq_s32(vsubq_s32(v100, vaddq_s32((int32x4_t)v109.val[0], (int32x4_t)v109.val[0])), (int32x4_t)v48);
    a34 = vaddq_s32(vsubq_s32(v101, vaddq_s32((int32x4_t)v109.val[3], (int32x4_t)v109.val[3])), (int32x4_t)v48);
    v104 = (_DWORD *)&a33 + v42 + 26798624;
    v105 = *(v104 - 8) ^ *((_DWORD *)&a33 + (a26 ^ 0x9F) + 26798624);
    v106 = *(v104 - 16) ^ *(v104 - 14) ^ (v105 + v38 - ((2 * v105) & 0xD7D57FC4));
    HIDWORD(v107) = v106 ^ v38;
    LODWORD(v107) = v106;
    *v104 = (v107 >> 31) + v38 - ((2 * (v107 >> 31)) & 0xD7D57FC4);
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((587 * (v37 == 26798561)) ^ 0x403))
                                                     - 12))(2684354560, 1484876357);
  }
  else if (v57 == 1)
  {
    a25 = v44;
    v108 = vld4q_s8(v45);
    v58 = a5 - 778292550;
    v59 = (uint8x16_t)veorq_s8(v108.val[0], (int8x16_t)v46);
    v60 = vmovl_u8(*(uint8x8_t *)v59.i8);
    v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
    v62 = (int8x16_t)vmovl_high_u16(v60);
    v63 = vmovl_high_u8(v59);
    v64 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v63.i8);
    v65 = (int8x16_t)vmovl_high_u16(v63);
    v66 = (uint8x16_t)veorq_s8(v108.val[1], (int8x16_t)v46);
    v67 = vmovl_high_u8(v66);
    v68 = vmovl_u8(*(uint8x8_t *)v66.i8);
    v69 = (uint8x16_t)veorq_s8(v108.val[2], (int8x16_t)v46);
    _Q26 = (int8x16_t)vmovl_high_u8(v69);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v69.i8);
    v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v108.val[0] = veorq_s8(v108.val[3], (int8x16_t)v46);
    v108.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v108.val[0]);
    v108.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v108.val[1]);
    v108.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v108.val[0].i8);
    v108.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v108.val[0]);
    v108.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v108.val[0].i8), 0x18uLL), v72), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), v61));
    v108.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v108.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v62));
    v108.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v108.val[1].i8), 0x18uLL), v77), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v67.i8, 8uLL), v64));
    v108.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v108.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v67, 8uLL), v65));
    v78 = (int32x4_t)veorq_s8(vandq_s8(v108.val[0], (int8x16_t)v49), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v79 = (int32x4_t)veorq_s8(vandq_s8(v108.val[3], (int8x16_t)v49), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v80 = (int32x4_t)veorq_s8(vandq_s8(v108.val[1], (int8x16_t)v49), (int8x16_t)(*(_OWORD *)&v64 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    v81 = (int32x4_t)veorq_s8(vandq_s8(v108.val[2], (int8x16_t)v49), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v108.val[1], vaddq_s32(v80, v80)), (int32x4_t)v48);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v108.val[2], vaddq_s32(v81, v81)), (int32x4_t)v48);
    a33 = vaddq_s32(vsubq_s32((int32x4_t)v108.val[0], vaddq_s32(v78, v78)), (int32x4_t)v48);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v108.val[3], vaddq_s32(v79, v79)), (int32x4_t)v48);
    v82 = v51;
    v83 = v53 ^ v41;
    v84 = (v52 ^ v41)
        - 1935128801
        + ((v55 ^ v41) & (v53 ^ v41) | (v53 ^ 0x58816A45) & (v56 ^ v41))
        + *((_DWORD *)*(&off_1021378F0 + (v58 ^ 0x3AB)) + a27 + v42 - 1)
        + (a33.i32[(((v58 + 67) | 0x8B)
                                   + *((_BYTE *)*(&off_1021378F0 + v58 - 779) + a27 + v42 - 8)
                                   - 118)] ^ v38);
    v85 = v84 + v41 - (v39 & (2 * v84));
    v86 = (uint64_t)*(&off_1021378F0 + a5 - 778293255);
    v87 = (((v85 ^ v41) << (*(_BYTE *)(v86 + a27 + v42) - 66)) | ((v85 ^ v41) >> (66 - *(_BYTE *)(v86 + a27 + v42))))
        + v83;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v40
                                                                                  + 8
                                                                                  * ((115 * (a27 + 1 != v37)) ^ (a5 - 778292550)))
                                                                      - 8))(778293363, 1484876357, v82, v87 + v41 - (v39 & (2 * v87)));
  }
  else
  {
    *(_DWORD *)(v43 - 180) = 2 * (*(_DWORD *)(v43 - 180) ^ v41) + v41 - (v39 & (4 * (*(_DWORD *)(v43 - 180) ^ v41)));
    *(_DWORD *)(v43 - 176) = 2 * (v51 ^ v41) + v41 - (v39 & (4 * (v51 ^ v41)));
    *(_DWORD *)(v43 - 172) = 2 * (v55 ^ v41) + v41 - (v39 & (4 * (v55 ^ v41)));
    *(_DWORD *)(v43 - 168) = 2 * (v54 ^ v41) + v41 - (v39 & (4 * (v54 ^ v41)));
    a29 = 0;
    return v44(a1, 1484876357, v46, v47, v48, v49, v50);
  }
}

uint64_t sub_1003EB3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,unsigned int a23,unsigned int a24)
{
  int v24;
  uint64_t v25;
  _BOOL4 v26;

  if (a24 < a23 != a20 + 289135886 < (v24 ^ (v24 + 296)) + 461174191)
    v26 = a20 + 289135886 < (v24 ^ (v24 + 296)) + 461174191;
  else
    v26 = a20 + 289135886 > a24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25
                                                                                 + 8
                                                                                 * ((45 * !v26) ^ (a5 + v24 - 505)))
                                                                     - 12))(a1, a2, 105292722, 4122928631);
}

uint64_t sub_1003EB484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * (((a3 + a5 + 63 < ((v5 + 17) ^ (a3 - 535))
                                                                                + a5)
                                                                * (a4 + (v5 ^ (v6 + 518)) - 818)) | v5)))(a1, a2, 483);
}

uint64_t sub_1003EB4DC@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((287
                                * (~a1 + v3 - (unint64_t)(a3 + a2) >= (unint64_t)(v4 ^ (v5 + 503))
                                                                                         - 3516674752u)) ^ v4)))();
}

uint64_t sub_1003EB540@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X7>, int a6@<W8>, int8x16_t a7@<Q0>, int8x16_t a8@<Q4>)
{
  int8x16_t *v8;
  int v9;
  unsigned int v10;
  uint64_t v11;

  *v8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a5 + (a6 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(a5 + (a6 + a1)), *(int8x16_t *)(a5 + (a6 + a1))), a8)), a7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((((v9 + a4) & v10 ^ 0x18) != 16) * a3) ^ (a2 + v9 - 566)))
                            - 8))();
}

uint64_t sub_1003EB5A0@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X7>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  *(_BYTE *)(v7 + v5) = *(_BYTE *)(a4 + (a5 + a2))
                      - ((2 * *(_BYTE *)(a4 + (a5 + a2))) & 0x83)
                      - 63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v5 + ((v6 + v8) & v10) == 151) * a1) ^ (a3 + v6 - 597))) - 8))();
}

uint64_t sub_1003EB5F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  int v10;
  uint64_t v11;
  BOOL v12;

  v12 = a1 + 982253312 < (a10 + 659678034);
  if ((a10 + 659678034) < 0x44CD1909 != (a1 + 982253312) < 0x44CD1909)
    v12 = (a10 + 659678034) < 0x44CD1909;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((108 * ((v10 ^ 0x15 ^ v12) & 1)) ^ v10)) - 4))();
}

uint64_t sub_1003EB670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  v22 = 628203409 * ((~((v21 - 152) | 0xCDC17F34) + ((v21 - 152) & 0xCDC17F34)) ^ 0xB0B68CF8);
  *(_DWORD *)(v21 - 144) = v22 + v19 + 621;
  *(_DWORD *)(v21 - 140) = a17 - v22 + 1134144261;
  *(_QWORD *)(v21 - 152) = a15;
  sub_1003D0120(v21 - 152);
  v23 = *(_DWORD *)(v21 - 184) & 0x3F;
  *(_BYTE *)(v21 - 252 + (v23 ^ 0x2A)) = 65;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * ((((v23 ^ 0x2A) > v19 - 6) * ((v19 ^ 0x667) + 256)) ^ v19))
                                          - 12))(a19);
}

uint64_t sub_1003EB778(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * (((v1 == (v2 ^ (v3 + 442) ^ (v3 + 31)))
                                                                 * ((v2 - 1048) ^ 0x26E)) ^ v2))
                                                   - 12))(a1, -706770237);
}

uint64_t sub_1003EB7B8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((336 * ((((v0 ^ 0x15u) < 8) ^ ((v1 - 2) ^ (v1 + 53))) & 1)) ^ v1)))();
}

uint64_t sub_1003EB80C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 252 + a2 + a1) = 0xC1C1C1C1C1C1C1C1;
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((57 * ((((v3 & 0x2E43B6DDu) - 31) ^ 0x23ELL) == (v2 & 0x38))) ^ v3 & 0x2E43B6DDu)))();
}

uint64_t sub_1003EB868@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X7>, int a6@<W8>)
{
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v6 < a1;
  *(_BYTE *)(v11 - 252 + (a3 + v8)) = *(_BYTE *)(a5 + (a6 + a4))
                                                  + (~(*(unsigned __int8 *)(a5 + (a6 + a4)) << (((v9 - 105) ^ 0x3C) & 0x7D)) | 0x7D)
                                                  - 62;
  v13 = a6 + 1 + a2;
  v14 = v12 ^ (v13 < a1);
  v15 = v13 < v6;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v12 * v7) ^ v9)) - 4))();
}

uint64_t sub_1003EB8FC@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * ((59
                                                                 * (((a2 + v3 - 691) | 0x124u) + a3 - 706770673 > 0x37)) ^ (a2 + v3 - 242)))
                                                   - 12))(a1, -706770237);
}

uint64_t sub_1003EB948@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = a2;
  if (a1 + (unint64_t)a2 + 1 > 0x38)
    v5 = a1 + a2 + 1;
  else
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((113 * ((unint64_t)(v5 - v4 + 706770237) > 7)) ^ v2)) - 12))();
}

uint64_t sub_1003EB99C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = 230 * (v3 ^ 0xD19C32D8) - 86;
  *(_QWORD *)(v6 - 252 + v4 + ((v7 - 1318) ^ (unint64_t)(a2 + 180))) = 0xC1C1C1C1C1C1C1C1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((490 * (((v7 ^ 0xFFFFFFFFFFFFF922) & v2) != 8)) ^ v7)) - 8))();
}

uint64_t sub_1003EBA14(double a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(double *)(v4 + (v2 ^ v5) + v7) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v3 != v7) * v6) ^ v1)) - 8))();
}

uint64_t sub_1003EBA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * (v21 ^ (990 * (v19 == v20))))
                                          - (((v21 + 1358962252) | 0x809C12D0) ^ ((v21 - a5 + 399) + 12))))(a19);
}

void sub_1003EBA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;

  v7 = *(unsigned __int8 *)(v6 - 156) ^ 0x70;
  if (v7 == 1)
  {
    v13 = *(_DWORD *)(v6 - 188);
    v12 = *(_DWORD *)(v6 - 184);
    *(_BYTE *)(v6 - 196) = ((8 * v12) ^ 0x50) + ((2 * ((8 * v12) ^ 0x50)) & 0x80) - 63;
    v14 = (v12 >> ((122 * (v5 ^ (v5 + 2))) ^ 0xF1)) ^ 0xFFFFFFF9;
    *(_BYTE *)(v6 - 195) = v14 + (~(2 * v14) | 0x7D) - 62;
    *(_BYTE *)(v6 - 194) = ((v12 >> 13) ^ 0xE4) - 2 * (((v12 >> 13) ^ 0xE4) & 0xC3 ^ (v12 >> 13) & 2) - 63;
    HIDWORD(v15) = v13 ^ 0xE;
    LODWORD(v15) = v12 ^ 0xA0000000;
    *(_BYTE *)(v6 - 193) = ((v12 >> 21) ^ 0x9F) - ((2 * ((v12 >> 21) ^ 0x9F)) & 0x83) - 63;
    *(_BYTE *)(v6 - 192) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x83) - 63;
    *(_BYTE *)(v6 - 191) = ((v13 >> 5) ^ 0xE1) - 2 * (((v13 >> 5) ^ 0xE1) & 0xC7 ^ (v13 >> 5) & 6) - 63;
    *(_BYTE *)(v6 - 190) = ((v13 >> 13) ^ 0xF0) + ~(2 * (((v13 >> 13) ^ 0xF0) & 0xC7 ^ (v13 >> 13) & 6)) - 62;
    v11 = ((v13 >> 21) ^ 0x2C) - ((v13 >> 20) & 0xF82) - 63;
  }
  else
  {
    if (v7 != 2)
      goto LABEL_6;
    v8 = *(_DWORD *)(v6 - 188);
    v9 = *(_DWORD *)(v6 - 184);
    *(_BYTE *)(v6 - 196) = ((v8 >> 21) ^ 0x2C) + ((a5 + v5 - 79) ^ 0x35) - ((v8 >> 20) & 0x82);
    *(_BYTE *)(v6 - 195) = ((v8 >> 13) ^ 0xF0) - 2 * (((v8 >> 13) ^ 0xF0) & 0x45 ^ (v8 >> 13) & 4) - 63;
    *(_BYTE *)(v6 - 194) = ((v8 >> 5) ^ 0xE1) - 2 * (((v8 >> 5) ^ 0xE1) & 0x49 ^ (v8 >> 5) & 8) - 63;
    HIDWORD(v10) = v8 ^ 0xE;
    LODWORD(v10) = v9 ^ 0xA0000000;
    *(_BYTE *)(v6 - 193) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0x83) - 63;
    *(_BYTE *)(v6 - 192) = ((v9 >> 21) ^ 0x9F) - ((2 * ((v9 >> 21) ^ 0x9F)) & 0x83) - 63;
    *(_BYTE *)(v6 - 191) = ((v9 >> 13) ^ 0xE4) - ((2 * ((v9 >> 13) ^ 0xE4)) & 0x83) - 63;
    *(_BYTE *)(v6 - 190) = ((v9 >> 5) ^ 0xF9) - ((2 * ((v9 >> 5) ^ 0xF9)) & 0x83) - 63;
    v11 = ((8 * v9) ^ 0x50) + (((8 * v9) ^ 0x50) >> 6 << 7) - 63;
  }
  *(_BYTE *)(v6 - 189) = v11;
LABEL_6:
  JUMPOUT(0x1003EA808);
}

uint64_t sub_1003EBED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((116
                                              * (((v21 == v19) ^ (v20 - 102 + (v20 ^ 0xE6) + 1)) & 1)) ^ v20)))(a19);
}

void sub_1003EBF20()
{
  JUMPOUT(0x1003EA800);
}

uint64_t sub_1003EBF30@<X0>(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 252 + a3 + a1) = -63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8
                                             * ((363 * ((unint64_t)(a3 + 1 + a1) < 0x40)) ^ (a2 + v3 + 819)))
                            - 12))();
}

uint64_t sub_1003EBFF8@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v8 = v5 + v2;
  v9 = *(_DWORD *)(v7 - 252 + ((v5 + v2) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a1 + v8 + 1) = (BYTE2(v9) ^ 0x7E) - ((2 * (BYTE2(v9) ^ 0x7E)) & 0x83) - 63;
  *(_BYTE *)(a1 + v8) = ((v3 + 100) ^ HIBYTE(v9)) - ((2 * ((v3 + 100) ^ HIBYTE(v9))) & 0x83) - 63;
  *(_BYTE *)(a1 + v8 + 2) = (BYTE1(v9) ^ 0x95) - 2 * ((BYTE1(v9) ^ 0x95) & 0xC3 ^ BYTE1(v9) & 2) - 63;
  *(_BYTE *)(a1 + v8 + 3) = v9 ^ 0x7B;
  v10 = *(_DWORD *)(v7 - 160) - 486766999;
  v11 = v10 < a2;
  v12 = v5 - 2031461914 < v10;
  if (v5 - 2031461914 < a2 != v11)
    v12 = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v12 * v4) ^ v3)) - 8))();
}

void sub_1003EC19C()
{
  JUMPOUT(0x1003EC164);
}

uint64_t sub_1003EC1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  int v33;
  uint64_t v34;

  *(_DWORD *)(&a33 + a29) = 2035473654;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v34 + 8 * (int)((a5 + ((((2 * ((v33 - 1533) | 0xA4)) ^ 0x138) + 278405040) | 0xC10412C0) - 475) ^ ((v33 - 1533) | 0xA4))) - 12))(302067898, a2, a3, &a33 + a29, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           &a33 + a29 + 392);
}

uint64_t sub_1003EC25C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((v7 == ((v5 - 2040101122) & 0x79997DBD ^ (a1 + 1260)))
                                          * (a5 + (v5 ^ (v6 - 32)) - 597)) ^ v5))
                            - 8))();
}

uint64_t sub_1003EC2BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  unsigned int v17;
  uint64_t v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8
                                        * ((45
                                          * (((((v17 - 1139) ^ 0xE284CA4D ^ (v17 + 297986525) & 0xEE3D11AF) + a2) & 0xFFFFFFFC)
                                           - a17 != -494613943)) ^ v17))
                            - 8))();
}

uint64_t sub_1003EC31C@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  _BOOL4 v30;

  v30 = a25 - a1 != -140018893 || a2 == ((v25 + 675) ^ (v27 + 708));
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((v30 | (4 * v30)) ^ v25))
                            - ((v26 + v25 - 169) ^ 0xD19C32DCLL)))();
}

uint64_t sub_1003EC378(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  int v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  BOOL v35;

  v34 = (v31 ^ (v32 + 182)) + a2 + 409112685;
  v35 = a31 + 549131920 < v34;
  if ((a31 + 549131920) < 0x35DDC779 != v34 < 0x35DDC779)
    v35 = v34 < 0x35DDC779;
  return ((uint64_t (*)(void))(*(_QWORD *)(v33
                                        + 8 * ((186 * (((v31 - 1) ^ v35) & 1)) ^ (a5 + v31 - 789)))
                            - 4))();
}

uint64_t sub_1003EC524()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((206
                                          * (*(_DWORD *)(v1
                                                       + 48
                                                       * (v2 - 302068243 + v0 - 170 + ((v0 - 1242062743) & 0x4A085EEC))
                                                       + 36) != v2)) ^ v0))
                            - 12))();
}

uint64_t sub_1003EC588(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;

  v17 = (v13 + 326230252) & 0x1AF1ECEF;
  v18 = 628203409 * ((v16 + 2099313430 - 2 * ((v16 - 152) & 0x7D20FBAE)) ^ 0xFFA8F79D);
  *(_DWORD *)(v16 - 136) = v17 - v18 + 209;
  *(_DWORD *)(v16 - 132) = a2 - v18 - 407930812;
  *(_QWORD *)(v16 - 152) = a12;
  *(_QWORD *)(v16 - 144) = a10;
  *(_QWORD *)(v16 - 128) = a13;
  *(_QWORD *)(v16 - 112) = a8;
  *(_QWORD *)(v16 - 104) = a11;
  ((void (*)(uint64_t))((char *)*(&off_1021378F0 + (v17 ^ 0xEDu)) - 8))(v16 - 152);
  v19 = *(_DWORD *)(v16 - 120) == v14 + (v17 ^ 0x789) - 1829;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * (((32 * v19) | (v19 << 9)) ^ v17))
                                          - 12))(302067898);
}

uint64_t sub_1003EC690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                              + 8
                                                              * ((69
                                                                * (*(_DWORD *)(v6
                                                                             + 48
                                                                             * (int)(((v5 - a5 - 994) ^ (v5 - 1657) ^ 0x3C62FD39)
                                                                                   + v7)) == 1146845401)) ^ v5)))(a1, v9, v6);
}

uint64_t sub_1003EC6F0@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v4;

  if ((a2 - 1587210571) <= 0x10 && ((1 << (a2 - 75)) & 0x14301) != 0)
    __asm { BR              X9 }
  return v4 ^ 0x9415E43C;
}

void sub_1003ECB8C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BR              X9 }
}

uint64_t sub_1003ECC58@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((a1 ^ 0x7A8) - 1666) * (v2 == 0)) ^ a1))
                            - ((a1 + 954) ^ 0x4D5)))();
}

uint64_t sub_1003ECC9C@<X0>(uint64_t (*a1)(_DWORD *)@<X8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t result;
  _DWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v4 = 3804331 * ((2 * (v6 & 0x2B756E88) - v6 - 729116298) ^ 0xAA5FB480);
  v9 = v4 + 1006402117;
  v7 = 0x248771FDFB9E9BA5;
  v8 = v3;
  v6[0] = v4 + 681732514;
  v6[1] = v4 + v1 - 1302;
  result = a1(v6);
  *v2 = *(_DWORD *)(v3 - 0x31BC703A95C2A144);
  return result;
}

void sub_1003ED2C0()
{
  int v0[10];

  v0[1] = 108757529 * ((v0 & 0xA7DA3C6 | ~(v0 | 0xA7DA3C6)) ^ 0x151E3E12) - 504207030;
  sub_1003FCE54(v0);
  __asm { BR              X8 }
}

uint64_t sub_1003ED390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23 = 1759421093 * ((((2 * &a17) | 0x27E0DDBE) - &a17 - 334524127) ^ 0xA08DDE8B);
  LODWORD(a17) = v23 ^ 0x11614C8C;
  HIDWORD(a17) = v23 ^ 0x6A6EA4D3;
  a20 = v23 ^ 0x4329A4C3;
  a18 = v23 + 405;
  ((void (*)(unint64_t **))(*(_QWORD *)(v22 + 576) - 8))(&a17);
  if (a19 < 0x49E67F9A)
    v24 = 1;
  else
    v24 = 2;
  LODWORD(a9) = v24;
  a19 = 915 - 460628867 * ((2 * (&a17 & 0x6D5E5A90) - &a17 - 1834900113) ^ 0xDE372712);
  a17 = &STACK[0x1706FB9DE6F6FC7C];
  sub_1003D5ADC((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((252 * (a18 != v20)) ^ 0x267u)))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10);
}

uint64_t sub_1003ED4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,unsigned int a21,uint64_t a22)
{
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  void (*v29)(int *);
  unsigned int v30;
  uint64_t v31;

  v27 = 1178560073 * ((&a18 & 0xF7FDE8F6 | ~(&a18 | 0xF7FDE8F6)) ^ 0xB2966F6B);
  a19 = v27 + 1160082353 * v24 + 359058754;
  a20 = a14;
  a21 = v27 ^ 0x40C;
  sub_1003CFA7C((uint64_t)&a18);
  v28 = 1178560073 * ((2 * (&a18 & 0x2A659790) - &a18 + 1436182632) ^ 0xEF0E100A);
  a22 = v22;
  a20 = a14;
  a21 = (((2 * v23) & 0xD7757D76) + (v23 ^ 0xEBBABEBB) + 1600113662) ^ v28;
  a19 = v28 + 232;
  v29 = (void (*)(int *))(*(_QWORD *)(v26 + 432) - 8);
  v29(&a18);
  v30 = 1178560073
      * (((&a18 | 0xF00BCE5A) - &a18 + (&a18 & 0xFF431A0)) ^ 0x4A9FB638);
  a22 = a12;
  a20 = a14;
  a19 = v30 + 232;
  a21 = v30 ^ ((a11 ^ 0x6F3B8ABF) - 606142470 + ((2 * a11) & 0xDE77157E));
  v31 = ((uint64_t (*)(int *))v29)(&a18);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((1765 * (a18 == 1810546658)) ^ 0x37u)) - 8))(v31);
}

uint64_t sub_1003ED684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, unsigned int a19, unsigned int a20,unsigned int a21,int a22)
{
  int v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  v26 = 460628867 * (&a17 ^ 0x4C96827D);
  a19 = v26 - 1143487623;
  a20 = v26 + v24 - 2024873138;
  a17 = &STACK[0x5640F59D98E42E4B];
  a18 = a13;
  a21 = (a9 ^ 0xFBBF1E2D) - v26 + 2 * (a9 & 1) + 2137914848;
  v27 = sub_1003FD230((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((1049 * (a22 == v23 + v22 - 667)) ^ v24))
                                          - ((v24 + 1510418343) & 0x33F)
                                          + 790))(v27);
}

uint64_t sub_1003ED758(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v1 ^ (1638 * (v3 < 0x49E67F9A))))
                                          - (v1 - 455)
                                          + 335))(a1);
}

uint64_t sub_1003ED7E8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, unsigned int a11, char *a12, _BYTE *a13, uint64_t a14, unsigned int a15)
{
  int v15;
  char *v16;
  int v17;
  uint64_t v18;
  void (*v19)(unsigned int *);
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  a11 = (v17 - 410) ^ (((2 * (&a11 & 0x4D616598) - &a11 - 1298228633) ^ 0xDF6A826E) * v15);
  v23 = (v17 - 798) | 0x157;
  a12 = &a10 + a1;
  a13 = a5;
  v19(&a11);
  a15 = (v23 + 73) ^ (1225351577 * ((&a11 & 0xCCC3A33D | ~(&a11 | 0xCCC3A33D)) ^ 0x10A684D4));
  a13 = v21;
  a14 = v18;
  a12 = a5;
  ((void (*)(unsigned int *))(*(_QWORD *)(v22 + 8 * (v23 - 291)) - 4))(&a11);
  a12 = v16;
  a13 = a5;
  a11 = (v23 + 45) ^ (1374699841 * ((&a11 & 0x960CB73F | ~(&a11 | 0x960CB73F)) ^ 0x40750C9));
  v19(&a11);
  a12 = a5;
  a11 = (v23 - 25) ^ (1755732067 * (&a11 ^ 0xDEC6BDDB));
  v24 = sub_1003D11E8((uint64_t)&a11);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((784 * ((_DWORD)a13 == 1810546658)) ^ v23))
                                          - ((v23 - 288) ^ 0x33)))(v24);
}

uint64_t sub_1003ED980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((2045 * (a15 == v15)) ^ v16)) - (((v16 - 307) | 0x13u) ^ 0x33)))();
}

uint64_t sub_1003ED9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  unsigned int v15;
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((1598 * ((a15 ^ v15) <= a11)) ^ v16))
                            - ((7 * (v16 ^ 0x178) + 1680944238) & 0x9BCED27F)
                            + 51))();
}

uint64_t sub_1003EDA18()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v0 ^ (30
                                               * ((((v0 ^ 0x17E) - 17390242 + 47 * (v0 ^ 0x15E)) & (2
                                                                                                  * (v1 - ((2 * v1) & 0xD5D97904) + 1793899650)) ^ 0xD4D02904)
                                                + ((v1 - ((2 * v1) & 0xD5D97904) + 1793899650) ^ 0x9597E865)
                                                + 2108669952 == 2099975399))))
                            - 4))();
}

uint64_t sub_1003EDAB8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * (int)((97
                                                                      * (v2 + v1 + (a1 ^ 0x84AF20) < (a1 ^ 0x431))) ^ a1))
                                                   - 8))(a1, v3);
}

uint64_t sub_1003EDB1C(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a1 ^ 0x11E ^ (30 * ((unint64_t)(v1 - v3) > 0x1F))))
                            - (((a1 ^ 0x11E) + v2 - 595693022) & 0x5A70035B)
                            + 831))();
}

uint64_t sub_1003EDB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(_QWORD))(v7
                                           + 8
                                           * ((45 * (v5 >= (((a5 + 1074825525) | 0x8901014D) ^ (v6 + 1351)))) ^ a5)))(0);
}

uint64_t sub_1003EDBB0(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v10 = (v3 + v6 + 201);
  v11 = *(_OWORD *)(v2 + v10 - 15);
  v12 = *(_OWORD *)(v2 + v10 - 31);
  v13 = v8 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  LODWORD(v13) = (a2 ^ (v7 + 279) ^ 0x450) != (v5 & 0xFFFFFFE0);
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((2 * v13) | (4 * v13)) ^ (v4 + a2 + 460))))();
}

uint64_t sub_1003EDC18(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == a1) ^ (a4 - 37)) & 1) * (((a4 - 1085) | 4) ^ 0xDA)) ^ a4)))();
}

uint64_t sub_1003EDC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char v5;
  int v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v8
                                                    + 8
                                                    * (int)((((a5 - 610694014) & 0xED77FDFF ^ (v7 + 1203))
                                                           * ((v5 & 0x18) == 0)) ^ a5)))(a1, (v6 - a1));
}

uint64_t sub_1003EDC8C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 - 7 + v9 + v8 + v6 - a1 + ((a4 - 1751759754) & 0x6869B5DF ^ v5)) = *(_QWORD *)(v4
                                                                                               - 7
                                                                                               + v9
                                                                                               + v8
                                                                                               + v6
                                                                                               - a1
                                                                                               + ((a4 - 1751759754) & 0x6869B5DF ^ v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((13 * (a1 - (v7 & 0xFFFFFFF8) == -8)) ^ a4)) - 8))();
}

void sub_1003EDCF8()
{
  JUMPOUT(0x1003EDCCCLL);
}

uint64_t sub_1003EDD04(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                       + 8
                                                                       * ((11
                                                                         * (((v3 == v4) ^ (v2 - 106)) & 1)) ^ v2))
                                                           - (v2 ^ 0x153)))(a1, a2, (v2 - 80093546) & 0xCDD7ADDF);
}

uint64_t sub_1003EDD54@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + (v4 + a1 + a2 + v5 + 146)) = *(_BYTE *)(v3 + (v4 + a1 + a2 + v5 + 146));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((239 * (a1 - 1 != a3)) ^ (a2 + v5 + 288))) - 4))();
}

uint64_t sub_1003EDD94()
{
  void (*v0)(_BYTE *);
  int v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[4];
  unsigned int v7;
  uint64_t v8;

  v7 = v1 + 535753261 * (v6 ^ 0xAF40E2F) + 1205;
  v8 = v4;
  v0(v6);
  v7 = (v1 ^ 0x2AC)
     + 535753261 * ((-2065374380 - (v6 | 0x84E4E354) + (v6 | 0x7B1B1CAB)) ^ 0x71EF1284)
     + 593;
  v8 = v5;
  v0(v6);
  return v2 ^ 0x6BEABFE2u;
}

void sub_1003EDE74(uint64_t a1)
{
  int v1;
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  v2 = *(unint64_t **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unint64_t **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(v3 - 0x48247A3086942776);
  v11 = v1 + 1224239923 * (((&v7 | 0xAEE383C9) - (&v7 & 0xAEE383C9)) ^ 0x5C507E1E) - 445;
  v7 = v3;
  v8 = v4;
  v9 = &STACK[0x63F19B7CB7021DC4];
  v10 = v5;
  ((void (*)(uint64_t *))((char *)*(&off_1021378F0 + v1 - 1115) - 4))(&v7);
  v6 = *(_QWORD *)(v3 - 0x48247A308694277ELL);
  LODWORD(v9) = v1
              + 1374699841 * ((&v7 - 888205096 - 2 * (&v7 & 0xCB0F10D8)) ^ 0xA6FB08D1)
              - 711;
  v7 = v6;
  v8 = &STACK[0x63F19B7CB7021DD4];
  sub_1003D022C((uint64_t)&v7);
  v8 = v2;
  LODWORD(v7) = v1
              + 235795823
              * (((&v7 | 0x6422E207) - &v7 + (&v7 & 0x9BDD1DF8)) ^ 0xF08FAB5E)
              - 430;
  sub_1003BAC74((uint64_t)&v7);
  __asm { BR              X8 }
}

uint64_t sub_1003EE0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v18 - 104) = v13;
  *(_QWORD *)(v18 - 144) = v14;
  *(_QWORD *)(v18 - 136) = a11;
  *(_DWORD *)(v18 - 112) = v17
                         + 81
                         + 1224239923 * (((~(v18 - 144) & 0x674EBBD0) - (~(v18 - 144) | 0x674EBBD1)) ^ 0x95FD4606)
                         - 479;
  *(_QWORD *)(v18 - 128) = v13;
  *(_QWORD *)(v18 - 120) = v15;
  v19 = a10(v18 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * ((563 * ((v17 + 81) ^ 0x48A)) ^ (174
                                                                                       * ((v11 + v16 + 1125) > 0x7FFFFFFE))))
                                          - 13 * ((563 * ((v17 + 81) ^ 0x48A)) ^ 0x435u)
                                          + 1067))(v19);
}

uint64_t sub_1003EE16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_DWORD *)(v19 - 144) = (v18 - 414) ^ (1225351577
                                        * ((~((v19 - 144) | 0x95A6E94B) + ((v19 - 144) & 0x95A6E94B)) ^ 0x49C3CEA2));
  *(_QWORD *)(v19 - 120) = v14;
  *(_QWORD *)(v19 - 112) = v15;
  *(_QWORD *)(v19 - 136) = v16;
  *(_QWORD *)(v19 - 128) = v14;
  ((void (*)(uint64_t))((char *)*(&off_1021378F0 + (v18 ^ 0x470)) - 8))(v19 - 144);
  v20 = 1374699841 * ((v19 + 730915874 - 2 * ((v19 - 144) & 0x2B90E4B2)) ^ 0x4664FCBB);
  *(_DWORD *)(v19 - 128) = v12 - v20 + v17 + ((v18 - 1011) | 0x422);
  *(_QWORD *)(v19 - 136) = a12;
  *(_DWORD *)(v19 - 144) = (v18 - 877) ^ v20;
  v21 = sub_1003BC1B4(v19 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8 * ((191 * (*(_DWORD *)(v19 - 140) == -390850116)) ^ v18))
                                          - 4))(v21);
}

uint64_t sub_1003EE278()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v3 ^ (174 * ((v0 + v2 + 1125) > 0x7FFFFFFE))))
                            - 13 * (v3 ^ 0x435u)
                            + 1067))();
}

uint64_t sub_1003EE2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(v8 + 24);
  v6 = 1224239923 * ((((v4 - 144) | 0x8E15D0D9) - (v4 - 144) + ((v4 - 144) & 0x71EA2F20)) ^ 0x7CA62D0E);
  *(_DWORD *)(v4 - 144) = v6 ^ 0x6CBA9052;
  *(_DWORD *)(v4 - 128) = v6 + v3 - 732;
  *(_QWORD *)(v4 - 136) = v10;
  sub_1003BB538((_DWORD *)(v4 - 144));
  *(_DWORD *)(v4 - 112) = v3 + 1224239923 * (((v4 - 144) & 0x62925DD | ~((v4 - 144) | 0x62925DD)) ^ 0xB6527F5) - 445;
  *(_QWORD *)(v4 - 104) = v0;
  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 144) = v1;
  *(_QWORD *)(v4 - 136) = v10;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 128) = v3
                        + 1374699841 * ((2 * ((v4 - 144) & 0x4C9CEF60) - (v4 - 144) - 1285353317) ^ 0xDE970892)
                        - 711;
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v5;
  return sub_1003D022C(v4 - 144);
}

void sub_1003EE400(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BR              X9 }
}

uint64_t sub_1003EE4E0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067
      * (((&a4 | 0xA1ED4A11) - &a4 + (&a4 & 0x5E12B5E8)) ^ 0x7F2BF7CA);
  a6 = (v11 + 111) ^ v12;
  a8 = v12 ^ 0x1FB53144;
  a4 = &STACK[0x3F8123127DDA1A64];
  a5 = v10;
  a7 = &STACK[0x509D13A7D8C2F400];
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v11 ^ 0x46)) - 4))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x31BC703A95C2A144) == v8)
                                              * (((v11 + 1232) ^ 0x613) - 562)) ^ v11)))(v13);
}

uint64_t sub_1003EE5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  unsigned int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((((a11 ^ v11) <= (v13 ^ 0x52Bu)) * (((v13 - 1343) | 0x32C) ^ 0x353)) ^ v13))
                            - 8))();
}

uint64_t sub_1003EE608()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  int v3;
  int v4;

  *v1 = v0;
  v4 = v0 + (v3 ^ 0x16C) + 395 - ((((v3 ^ 0x16C) - 996) ^ 0x233FFCE4) & (2 * v0)) - 1851787161;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((13
                                * (((2 * v4) & 0x597FFECE ^ 0x13FFC8A) + (v4 ^ 0x3D200122) + 2012679420 == 615976035)) ^ v3 ^ 0x16C)))();
}

uint64_t sub_1003EE698(int a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a3 + a1 + ((v3 + 2107116828) & 0x8267EDAF ^ 0x53400033) > 7)
                                * ((v3 - 656131711) & 0x271BC4BF ^ 0x719)) ^ v3)))();
}

uint64_t sub_1003EE710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                                 + 8
                                                                                 * (((v5
                                                                                    - v7
                                                                                    - (unint64_t)((a5 - 534) | 0x416u)
                                                                                    + 1563 > 0x1F)
                                                                                   * (a5 - 976)) ^ a5))
                                                                     - 12))(a1, a2, a3, v6);
}

uint64_t sub_1003EE750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((v6 >= ((a6 - 836039712) & 0x31D4EE73 ^ 0x53u))
                                          * ((a6 - 636385954) & 0x25EE77AE ^ 0x36F)) ^ a6))
                            - 8))();
}

uint64_t sub_1003EE7B0(int a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int8x16_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;

  v8 = a2 + a3 + a1 + 101;
  v9.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v9.i64[1] = 0xC1C1C1C1C1C1C1C1;
  v10 = v4 + v8;
  v11 = v5 + v8;
  v12 = veorq_s8(*(int8x16_t *)(v10 - 31), v9);
  *(int8x16_t *)(v11 - 15) = veorq_s8(*(int8x16_t *)(v10 - 15), v9);
  *(int8x16_t *)(v11 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((481 * ((v6 & 0xFFFFFFE0) == 32)) ^ (a4 - 74)))
                            - (a4 - 186)
                            + 622))();
}

void sub_1003EE818()
{
  JUMPOUT(0x1003EE7D4);
}

void sub_1003EE824()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_1003EEA34(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1003EEA94()
{
  return 4294925278;
}

void sub_1003EEC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X8 }
}

uint64_t sub_1003EEC78(uint64_t a1, int a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;

  if (a1)
    v3 = a2 == 0;
  else
    v3 = 0;
  v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((22 * v4) ^ 0x2A4u)))();
}

uint64_t sub_1003EECB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  uint64_t v14;
  uint64_t v15;

  a14 = 108757529 * ((&a13 & 0x2A42C21B | ~(&a13 | 0x2A42C21B)) ^ 0x35215FCF) - 504207030;
  v15 = sub_1003FCE54(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1702 * (a13 == 1810546658)) ^ 0x2B2u)))(v15);
}

uint64_t sub_1003EED54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a13 = &STACK[0x1706FB9DE6F6FC74];
  a15 = v17 - 460628867 * (((&a13 | 0xE74F0FCA) - (&a13 & 0xE74F0FCA)) ^ 0xABD98DB7) + 225;
  sub_1003D5ADC((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16
                                                                                         + 8
                                                                                         * ((122
                                                                                           * (a14 == v15 + v17 + v17 + 780 - 2160)) ^ v17)))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_1003EEDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 1178560073 * (((&a13 | 0xBA707601) + (~&a13 | 0x458F89FE)) ^ 0xE40E62);
  a16 = v23 ^ ((v18 ^ 0x4B5B9AFB) - 4264002 + ((2 * v18) & 0x96B735F6));
  a14 = v23 + v22 - 1238;
  a17 = v17;
  a15 = a12;
  v24 = ((uint64_t (*)(int *))(*(_QWORD *)(v20 + 8 * (v22 ^ 0x588u)) - 8))(&a13);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * (((a13 == v19) * (((v22 - 1567711999) & 0x1FF2) - 595)) ^ v22)))(v24);
}

uint64_t sub_1003EEEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, unsigned int a15, unsigned int a16, unsigned int a17, int a18)
{
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 460628867
      * (((&a13 | 0xAC92F452) - &a13 + (&a13 & 0x536D0BA8)) ^ 0xE004762F);
  a13 = &STACK[0x5640F59D98E42E3B];
  a14 = a12;
  a15 = v21 - 938155098;
  a16 = v21 + v20 - 2024874553;
  a17 = 2066553870 - v21;
  v22 = sub_1003FD230((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a18 == v18 + ((v20 - 404) | 0x190) - 1466)
                                              * ((v20 + 845365757) & 0xAF6 ^ 0x6F)) ^ v20)))(v22);
}

uint64_t sub_1003EEF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  a14 = (v16 - 1078) ^ (1374699841
                      * (((&a14 | 0xB23EA5EF) + (~&a14 | 0x4DC15A10)) ^ 0xDFCABDE7));
  a15 = &STACK[0x2DEB3A05C2E48BD1];
  a16 = a10;
  v20 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v18 + 8 * (v16 - 1284)) - 12))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((101 * (a12 == v16 - v17 - 1467212305)) ^ v16)))(v20);
}

uint64_t sub_1003EF050()
{
  uint64_t v0;
  void (*v1)(unsigned int *);
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v14 = v8;
  v15 = 0x1244BACB8843828DLL;
  v16 = v3
      - 108757529 * ((&v11 & 0x46C0678E | ~(&v11 | 0x46C0678E)) ^ 0x59A3FA5A)
      + v5
      + 812;
  v13 = v0;
  (*(void (**)(unsigned int *))(v4 + 8 * (v5 ^ (v6 + 105))))(&v11);
  v13 = v8;
  v11 = (v3 + v5 + 318) ^ (1755732067
                         * (((&v11 ^ 0x49B1FB56) & 0xF0AC0744 | ~(&v11 ^ 0x49B1FB56 | 0xF0AC0744)) ^ 0x9824BE36));
  sub_1003D11E8((uint64_t)&v11);
  v13 = v8;
  v12 = v3
      + v5
      + 535753261 * (((&v11 | 0xF1F5A552) - (&v11 & 0xF1F5A552)) ^ 0xFB01AB7D)
      + 1260;
  v1(&v11);
  v13 = v10;
  v12 = 115 * (v5 ^ v6) + 535753261 * (&v11 ^ 0xAF40E2F) + 570;
  v1(&v11);
  return v9 ^ v2;
}

uint64_t sub_1003EF1FC(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0);
  v4 = v2 - 517884438;
  v3 = v2 - 517884438 < 0;
  v5 = 517884438 - v2;
  if (!v3)
    v5 = v4;
  v1 = (*(_DWORD *)a1 - 628203409 * (a1 ^ 0x82880C33) + 127168167) & 0xF86B9161;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + v1 - 240)
                                        + 8
                                        * ((656
                                          * ((v5 ^ (v1 - 136661867))
                                           + 1040047968
                                           + ((2 * v5) & 0xEFB56BEC)
                                           + ((v1 - 9) ^ 0xCA276BF1) < 0x7FFFFFFF)) ^ v1)
                                        - 12)
                            - (v1 - 9)
                            + 332))();
}

uint64_t sub_1003EF30C(uint64_t a1, int a2, unsigned int a3, uint64_t a4)
{
  _QWORD *v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (((((a2 + 9) ^ (*(_DWORD *)(*v4 + 4 * a3) == v5)) & 1) * v6) ^ a2))
                            - 12))();
}

void sub_1003EF344()
{
  JUMPOUT(0x1003EF2D0);
}

uint64_t sub_1003EF34C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 4) = a5;
  return result;
}

void sub_1003EF354(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) ^ (3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6));
  v2 = *(_QWORD *)a1;
  ((void (*)(_QWORD, void (*)()))*(&off_1021378F0 + (v1 ^ 0x28F)))(*(&off_1021378F0 + v1 - 522), sub_1003FC8AC);
  __asm { BR              X10 }
}

uint64_t sub_1003EF414()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v1 + 8 * (v2 - 560)) - 4) == 0)
                                          * (((v2 - 99) | 0x173) ^ 0x26F)) ^ v2))
                            - 12))();
}

uint64_t sub_1003EF460@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 748)))(v1);
}

void sub_1003EF47C(uint64_t a1)
{
  int v1;
  _BOOL4 v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0) != 517884438
    && *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x63F19B7CB7021DA0) != 517884438;
  v1 = *(_DWORD *)a1 - 1225351577 * ((-1557536513 - (a1 | 0xA329E0FF) + (a1 | 0x5CD61F00)) ^ 0x7F4CC716);
  __asm { BR              X14 }
}

uint64_t sub_1003EF59C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((((((a1 + v3 - 133) < 0x7FFFFF7D) ^ ((v2 ^ 0xBF) + 1)) & 1)
                                               * (((v2 + 181423282) & 0xF52FAFFF) - 450)) ^ v2))
                            - 4))();
}

uint64_t sub_1003EF5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8
                                                                                      * (v5 ^ (25 * ((int)a1 < 1))))
                                                                     - (((v5 - 246) | 0x450u) ^ 0x45ELL)))(a1, a2, a3, a4);
}

uint64_t sub_1003EF65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BOOL4 v20;

  *(_DWORD *)(a14 + 4 * (v18 - 604952942)) = v15;
  v20 = v18 + 1428157369 <= ((v17 - 256) | 0x119) - 114373620 || v18 + 1428157369 >= v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((2 * v20) | (16 * v20)) ^ v17)) - 4))();
}

uint64_t sub_1003EF6BC()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v2 ^ ((v1 == 0) | (32 * (v1 == 0)))))
                            - ((v2 + 1953279714) & 0x8B93545E)
                            - ((v2 + 1153239253) & 0xBB42F77D)
                            + 1474))();
}

uint64_t sub_1003EF714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((((v12 ^ 0x7D3) - 1181) * (a11 > 0)) ^ v12)) - 12))();
}

uint64_t sub_1003EF760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((728 * (*(_DWORD *)(a14 + 4 * (v18 + v17)) == v15)) ^ (v19 - 1363)))
                            - ((v19 - 1363) ^ v16)
                            + 1715))();
}

uint64_t sub_1003EF7A0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((23 * (((v1 + 517) ^ (v3 + 302)) + v2 < 0x7FFFFFFF)) ^ v1))
                            - 12))();
}

uint64_t sub_1003EF7F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((728 * (*(_DWORD *)(a1 + 4 * (v5 + v4)) == v2)) ^ (v3 - 517)))
                            - ((v3 - 517) ^ 0x7D3u)
                            + 1715))();
}

uint64_t sub_1003EF830()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v2 - 116) = (v1 - 213) ^ (460628867
                                      * ((((v2 - 120) | 0x4AD97D05) - (v2 - 120) + ((v2 - 120) & 0xB52682F8)) ^ 0x64FFF78));
  *(_QWORD *)(v2 - 112) = v4;
  sub_1003DB9B8(v2 - 120);
  *(_QWORD *)(v2 - 112) = v5;
  *(_DWORD *)(v2 - 116) = (v1 - 213) ^ (460628867
                                      * ((2 * ((v2 - 120) & 0x3DE95DA0) - (v2 - 120) - 1038704038) ^ 0x8E802027));
  sub_1003DB9B8(v2 - 120);
  *(_DWORD *)(v2 - 104) = v1
                        + 1374699841 * ((((v2 - 120) | 0x312B6D0F) - ((v2 - 120) & 0x312B6D0F)) ^ 0x5CDF7506)
                        - 1312;
  *(_QWORD *)(v2 - 120) = v0;
  *(_QWORD *)(v2 - 112) = v5;
  return sub_1003D022C(v2 - 120);
}

void sub_1003EFC48(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(_QWORD, void (*)());
  char v8;

  v2 = (unint64_t)&v8 ^ qword_1022A1550 ^ qword_1022A15A8;
  v3 = 1045096823 * v2 + 0xF4347460D903F27;
  v4 = 1045096823 * (v2 ^ 0xFEEA6317167EC3D1);
  v5 = (119 * (v3 ^ 0xD1 ^ v4));
  v6 = byte_101BA3A00[byte_101BAF7E0[v5] ^ 0xF3];
  qword_1022A1550 = v3;
  LOBYTE(v5) = byte_101BA7780[byte_101BA3900[v5] ^ 0xD0];
  v7 = (void (*)(_QWORD, void (*)()))*(&off_1021378F0 + ((119 * (v3 ^ 0xD1 ^ v4)) ^ v6) - 31);
  qword_1022A15A8 = v4;
  v7(*(&off_1021378F0 + ((119 * (v3 ^ 0xD1 ^ v4)) ^ v5) + 82), sub_1003FC8AC);
  __asm { BR              X10 }
}

uint64_t sub_1003EFD58()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v0 + 8 * ((310 * (*(_QWORD *)(*(_QWORD *)(v1 + 504) - 4) == 0)) ^ 0x298u)))();
}

uint64_t sub_1003EFD90@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x33Du)))(v1);
}

void sub_1003EFDB0(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1225351577
            * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5));
  __asm { BR              X15 }
}

void sub_1003EFF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  *(_DWORD *)(a3 + v4) = v3;
}

void sub_1003F0C74(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((((2 * a1) | 0xD7F3130A) - a1 + 335967867) ^ 0x516DF1E7));
  __asm { BR              X15 }
}

uint64_t sub_1003F0DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  _BOOL4 v17;

  v17 = v13 + 1386074910 <= 759368261 && v13 + 1386074910 >= (int)(((v14 + 166) ^ 0xAD4309A2) + a13);
  return (*(uint64_t (**)(void))(v15 + 8 * ((106 * v17) ^ v14)))();
}

uint64_t sub_1003F0E14@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  _BOOL4 v19;

  *(_DWORD *)(a10 + 4 * (v10 + a2)) = a1;
  v17 = v12 + v10 + 1;
  v19 = v17 <= v13 && v17 >= v14;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v19 * v15) ^ v11)))();
}

uint64_t sub_1003F0E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * ((1998
                                                                                            * (v5 != ((2 * v6) ^ 0x7C8))) ^ v6))
                                                                              - ((v6 + 561) ^ 0x61DLL)))(a1, a2, a3, a4, a5);
}

uint64_t sub_1003F0EA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, _QWORD *a4, int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  _BOOL4 v17;

  v12 = a1 - 561;
  v13 = a1 + 1616668133;
  v14 = (*(_DWORD *)(*a4 - 0x48247A308694276ELL) - 1587627081) * (*a10 ^ 0x26C64076);
  v15 = 1755732067 * ((((v11 - 128) | 0xA653A28E) - ((v11 - 128) & 0xA653A28E)) ^ 0x78951F55);
  *(_QWORD *)(v11 - 104) = a8;
  *(_DWORD *)(v11 - 128) = v12 - v15 - 374;
  *(_DWORD *)(v11 - 112) = ((v13 & 0x9FA39797 ^ 0xC414343) + 312281413) ^ v15;
  *(_DWORD *)(v11 - 108) = (v14 ^ 0xF7D6E7DF) - v15 + ((2 * v14) & 0xEFADCFBE) + 1610473088;
  *(_QWORD *)(v11 - 120) = a7;
  v16 = ((uint64_t (*)(uint64_t))((char *)*(&off_1021378F0 + (v12 ^ 0x3D5)) - 12))(v11 - 128);
  v17 = (int)(a6 + 1355038107) > 1355038108;
  if (a6 > 0x2F3BC264)
    v17 = 1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * ((1521 * v17) ^ v12)) - 8))(v16);
}

void sub_1003F103C()
{
  JUMPOUT(0x1003F0EF4);
}

uint64_t sub_1003F1044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v17 = 1374699841 * ((2 * ((v16 - 128) & 0x77A324F0) - (v16 - 128) - 2007180533) ^ 0xE5A8C302);
  *(_QWORD *)(v16 - 120) = a14;
  *(_DWORD *)(v16 - 128) = v14 - v17 + 453;
  *(_DWORD *)(v16 - 124) = v17 + ((a13 << 6) & 0xECFAAEC0) + ((a13 << ((v14 ^ 0x61) + 18)) ^ 0xF67D577F) + 2113842894;
  sub_1003BC2D8((_DWORD *)(v16 - 128));
  return (*(uint64_t (**)(void))(v15 + 8 * ((1241 * ((*a10 - 517884439) < 0x7FFFFFFF)) ^ v14)))();
}

uint64_t sub_1003F111C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)(v18 - 112) = v14
                         + 1374699841
                         * ((-1520606683 - ((v18 - 128) | 0xA55D6225) + ((v18 - 128) | 0x5AA29DDA)) ^ 0x375685D3)
                         - 499;
  *(_QWORD *)(v18 - 128) = a14;
  *(_QWORD *)(v18 - 120) = &STACK[0x63F19B7CB7021DE4];
  sub_1003D022C(v18 - 128);
  *(_DWORD *)(v18 - 112) = v14 + ((((v18 - 128) | 0xDD321A35) + (~(v18 - 128) | 0x22CDE5CA)) ^ 0x67A66256) * v16 + 105;
  *(_QWORD *)(v18 - 104) = v17;
  *(_QWORD *)(v18 - 120) = a14;
  v19 = ((uint64_t (*)(uint64_t))*(&off_1021378F0 + (v14 ^ 0x34B)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((53
                                              * (v14 - 724 + *(_DWORD *)(v18 - 128) - 1868786017 < ((v14 - 690) | 0x13u)
                                                                                                 - 1399035452)) ^ v14)))(v19);
}

uint64_t sub_1003F123C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  int v18;

  v18 = a16 - 517884438;
  if (a16 - 517884438 < 0)
    v18 = 517884438 - a16;
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((1013
                                              * ((int)((v18 ^ 0xBEFE6F7E)
                                                     + 5 * (v17 ^ 0x1C0)
                                                     + ((2 * v18) & 0x7DFCDEFC)
                                                     + 1090620034) <= (int)((5 * (v17 ^ 0x1C0)) ^ 0xFFFFFAF3 ^ (81 * ((5 * (v17 ^ 0x1C0)) ^ 0x5FC))))) ^ (5 * (v17 ^ 0x1C0)))))(650526838);
}

uint64_t sub_1003F12E8(int a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1785 * (((*(_DWORD *)(v1 + 4 * v2) == a1) ^ (v3 + 12)) & 1)) ^ v3)))();
}

uint64_t sub_1003F1320()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1013
                                * (v0 - 1 <= (int)(v1 & 0x572B2DFF ^ 0xFFFFFAF3 ^ (81 * (v1 & 0x572B2DFF ^ 0x5FC))))) ^ v1 & 0x572B2DFF)))();
}

uint64_t sub_1003F1378()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 32);
  *(_DWORD *)(v2 - 112) = v0 + 1374699841 * ((((v2 - 128) | 0xF444FDE1) + (~(v2 - 128) | 0xBBB021E)) ^ 0x99B0E5E9) - 154;
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v3;
  return sub_1003D022C(v2 - 128);
}

void sub_1003F17D4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16)
     - 460628867 * (((a1 ^ 0x68759CF4 | 0x87CE5E15) - ((a1 ^ 0x68759CF4) & 0x87CE5E15)) ^ 0xA32D409C);
  __asm { BR              X10 }
}

uint64_t sub_1003F190C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v2 + 48) - v0 == 1656329272 || (*(_QWORD *)(v2 + 32) | *(_QWORD *)(v2 + 56)) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((2 * v5) | (16 * v5)) ^ v1))
                            - ((v1 - 929886041) & 0x376CE9FF ^ (v1 - 584289681) & 0x22D387FBu ^ 0x48)))();
}

uint64_t sub_1003F1990()
{
  unsigned int v0;
  _QWORD *v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = v1[5] == 0x589C7105EC0C7F2ALL || (*v1 | v1[3]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * ((v0 + 827) ^ 0x4AA)) ^ v0)) - 12))();
}

uint64_t sub_1003F19E4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (int)((((v16 - 244) ^ 0x228) * (v15 == 0)) ^ v16)) - (v16 ^ 0x4EALL)))(a6 + 0x4BD42EB360AF0E44, &STACK[0x63F19B7CB7021E64], 1178560073, a1, a2, a3, a4, a5, a7, v17, a9, a10, a11, a12, a13, a6 + 0x4BD42EB360AF1064, a15);
}

uint64_t sub_1003F1AF8@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  void (*v32)(uint64_t);
  void (*v33)(uint64_t);
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v30 = 523 * (v22 ^ 0x3F1);
  v31 = ((((v29 - 144) ^ 0xF4D518DC | 0xA372392C)
        - ((v29 - 144) ^ 0xF4D518DC)
        + (((v29 - 144) ^ 0xF4D518DC) & 0x5C8DC6D0)) ^ 0xED335992)
      * a2;
  *(_QWORD *)(v29 - 136) = v20;
  *(_QWORD *)(v29 - 128) = a1;
  *(_DWORD *)(v29 - 116) = v31 + v23 - 580306891 + v30;
  *(_DWORD *)(v29 - 144) = v31 + v22 - 448;
  v46 = a3 + v21;
  ((void (*)(uint64_t))(*(_QWORD *)(v24 + 8 * (v22 ^ 0x38Bu)) - 12))(v29 - 144);
  *(_DWORD *)(v29 - 128) = (v30 - 993) ^ (628203409
                                        * ((((2 * (v29 - 144)) | 0xD665260C) - (v29 - 144) + 349007098) ^ 0x69BA9F35));
  *(_QWORD *)(v29 - 144) = a18;
  *(_QWORD *)(v29 - 136) = a19;
  v44 = (void (*)(uint64_t))(*(_QWORD *)(v24 + 8 * (v30 ^ 0x628)) - 4);
  v44(v29 - 144);
  LODWORD(v45) = v30 - 1000;
  *(_QWORD *)(v29 - 120) = a18;
  *(_QWORD *)(v29 - 112) = v28;
  *(_DWORD *)(v29 - 128) = (v30 - 1000) ^ (1178560073
                                         * ((((v29 - 144) | 0x21D009AC) - (v29 - 144) + ((v29 - 144) & 0xDE2FF650)) ^ 0x9B4471CE));
  *(_QWORD *)(v29 - 144) = a19;
  *(_QWORD *)(v29 - 136) = a17;
  v32 = (void (*)(uint64_t))(*(_QWORD *)(v24 + 8 * (v30 - 1432)) - 8);
  v32(v29 - 144);
  HIDWORD(v45) = v30 - 888;
  *(_DWORD *)(v29 - 112) = v30 - 888 + 1224239923 * ((v29 + 1260386870 - 2 * ((v29 - 144) & 0x4B1FFAC6)) ^ 0xB9AC0711);
  *(_QWORD *)(v29 - 144) = a19;
  *(_QWORD *)(v29 - 136) = v28;
  *(_QWORD *)(v29 - 104) = v26;
  *(_QWORD *)(v29 - 128) = v28;
  *(_QWORD *)(v29 - 120) = a18;
  v33 = (void (*)(uint64_t))((char *)*(&off_1021378F0 + v30 - 1558) - 4);
  v33(v29 - 144);
  HIDWORD(a6) = v30 - 784;
  *(_QWORD *)(v29 - 136) = v28;
  *(_QWORD *)(v29 - 128) = v28;
  *(_DWORD *)(v29 - 120) = v30 - 784 + 1225351577 * ((v29 - 144) ^ 0x239AD816);
  *(_QWORD *)(v29 - 112) = a20;
  *(_QWORD *)(v29 - 104) = a18;
  *(_QWORD *)(v29 - 144) = a19;
  v47 = v28;
  v34 = (void (*)(uint64_t))((char *)*(&off_1021378F0 + v30 - 1430) - 4);
  v34(v29 - 144);
  *(_QWORD *)(v29 - 144) = a13;
  *(_QWORD *)(v29 - 136) = a19;
  *(_DWORD *)(v29 - 128) = (v30 - 993) ^ (628203409
                                        * (((v29 - 144) & 0xDBC4E177 | ~((v29 - 144) | 0xDBC4E177)) ^ 0xA6B312BB));
  v44(v29 - 144);
  *(_DWORD *)(v29 - 128) = (v30 - 1000) ^ (1178560073
                                         * ((-2
                                           - (((v29 - 144) ^ 0x9C01100 | 0x56112CF5)
                                            + ((v29 - 144) ^ 0x4002CC4 | 0xA9EED30A))) ^ 0x48ABBA59));
  *(_QWORD *)(v29 - 120) = a13;
  *(_QWORD *)(v29 - 112) = v27;
  *(_QWORD *)(v29 - 144) = a19;
  *(_QWORD *)(v29 - 136) = a17;
  v32(v29 - 144);
  *(_QWORD *)(v29 - 144) = a19;
  *(_QWORD *)(v29 - 136) = v27;
  *(_QWORD *)(v29 - 104) = v26;
  *(_QWORD *)(v29 - 128) = v27;
  *(_QWORD *)(v29 - 120) = a13;
  *(_DWORD *)(v29 - 112) = v30
                         - 888
                         + 1224239923 * ((2 * ((v29 - 144) & 0x10151408) - (v29 - 144) - 269816843) ^ 0x1D591622);
  v33(v29 - 144);
  *(_QWORD *)(v29 - 136) = v27;
  *(_QWORD *)(v29 - 128) = v27;
  *(_DWORD *)(v29 - 120) = v30
                         - 784
                         + 1225351577 * ((2 * ((v29 - 144) & 0x7DE927C0) - (v29 - 144) - 2112432067) ^ 0xA18C002B);
  *(_QWORD *)(v29 - 112) = a11;
  *(_QWORD *)(v29 - 104) = a13;
  *(_QWORD *)(v29 - 144) = a19;
  v34(v29 - 144);
  *(_QWORD *)(v29 - 136) = v27;
  *(_QWORD *)(v29 - 128) = v47;
  *(_DWORD *)(v29 - 144) = v30
                         - 108757529
                         * ((((2 * ((v29 - 144) ^ 0x139270AD)) | 0xB81B59F6) - ((v29 - 144) ^ 0x139270AD) + 603083525) ^ 0x2F03BE7D)
                         - 872;
  ((void (*)(uint64_t))*(&off_1021378F0 + v30 - 1413))(v29 - 144);
  *(_QWORD *)(v29 - 136) = v27;
  *(_DWORD *)(v29 - 140) = (v30 - 55) ^ (460628867
                                       * ((-1606058528 - ((v29 - 144) | 0xA0457DE0) + ((v29 - 144) | 0x5FBA821F)) ^ 0x132C0062));
  sub_1003DB9B8(v29 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((86 * (*(_DWORD *)(v29 - 144) == 369984848)) ^ v30)) - (v30 ^ 0x7C6u) + 479))(v35, v36, v37, v38, v39, v40, v41, v42, a4, a5, a6, v44, v45, *(&off_1021378F0 + (v30 ^ 0x67E)), v30 ^ 0x7C6u, a11, v46, a13, a14,
           a15,
           a16);
}

uint64_t sub_1003F2024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t), uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  *(_DWORD *)(v34 - 144) = (v32 - 184) ^ (235795823
                                        * (((((v34 - 144) | 0x98136FF2) ^ 0xFFFFFFFE) - (~(v34 - 144) | 0x67EC900D)) ^ 0xF341D954));
  *(_QWORD *)(v34 - 136) = v33;
  *(_QWORD *)(v34 - 128) = v30;
  v29(v34 - 144);
  v35 = v32;
  v36 = v32 + 194;
  *(_DWORD *)(v34 - 112) = v36
                         + 1224239923
                         * ((((v34 - 144) ^ 0xF9BB0CB1 | 0x15437DFD) - (((v34 - 144) ^ 0xF9BB0CB1) & 0x15437DFD)) ^ 0x1E4B8C9B);
  *(_QWORD *)(v34 - 104) = a29;
  *(_QWORD *)(v34 - 128) = v33;
  *(_QWORD *)(v34 - 120) = v30;
  *(_QWORD *)(v34 - 144) = a24;
  *(_QWORD *)(v34 - 136) = v33;
  a22(v34 - 144);
  *(_DWORD *)(v34 - 112) = v36 + 1224239923 * ((((v34 - 144) | 0x639614A3) + (~(v34 - 144) | 0x9C69EB5C)) ^ 0x9125E975);
  *(_QWORD *)(v34 - 104) = v33;
  *(_QWORD *)(v34 - 144) = a24;
  *(_QWORD *)(v34 - 136) = a17;
  *(_QWORD *)(v34 - 128) = v33;
  *(_QWORD *)(v34 - 120) = v30;
  a22(v34 - 144);
  *(_QWORD *)(v34 - 136) = v33;
  *(_QWORD *)(v34 - 128) = a23;
  *(_DWORD *)(v34 - 144) = (v35 + 426522530) ^ (235795823
                                              * (((v34 - 144) & 0x4B6C9771 | ~((v34 - 144) | 0x4B6C9771)) ^ 0x203E21D7));
  sub_1003FCF10(v34 - 144);
  *(_DWORD *)(v34 - 144) = (v35 - 184) ^ (235795823
                                        * ((((v34 - 144) ^ 0xE1EEABAC) & 0xD6C0ADF9 | ~((v34 - 144) ^ 0xE1EEABAC | 0xD6C0ADF9)) ^ 0x5C7CB0F3));
  *(_QWORD *)(v34 - 136) = v33;
  *(_QWORD *)(v34 - 128) = a25;
  a14(v34 - 144);
  *(_DWORD *)(v34 - 128) = v35
                         + 1374699841 * ((2 * ((v34 - 144) & 0xB04ADC0) - (v34 - 144) + 1962627641) ^ 0x190F4A30)
                         - 72;
  *(_QWORD *)(v34 - 144) = v33;
  *(_QWORD *)(v34 - 136) = a25;
  v37 = sub_1003D022C(v34 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v31
                                                      + 8
                                                      * (((a21 != 0) * ((v35 - 258914797) & 0xF6EBBEF ^ 0x386)) ^ (v35 + 1364)))
                                          - 12))(v37);
}

uint64_t sub_1003F228C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v4 = (v2 - 1423235576) & 0x54D4DBFA;
  v5 = 535753261 * ((1097295581 - ((v3 - 144) | 0x416766DD) + ((v3 - 144) | 0xBE989922)) ^ 0xB46C970D);
  *(_QWORD *)(v3 - 144) = v9;
  *(_QWORD *)(v3 - 128) = v1;
  *(_DWORD *)(v3 - 136) = (v4 + 282) ^ v5;
  *(_DWORD *)(v3 - 120) = v5 + v8 - 414589863 + v4;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_1021378F0 + ((v2 - 1423235576) & 0x4140080)) - 8))(v3 - 144);
  *(_DWORD *)(v7 - 0x589C7105EC0C7F2ALL) = v8;
  *(_DWORD *)(v0 + 64) = 1810546658;
  return result;
}

uint64_t sub_1003F2420(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 535753261 * ((a1 - 1922189914 - 2 * (a1 & 0x8D6DB5A6)) ^ 0x8799BB89);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  v3 = *(_DWORD *)a1 ^ v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x63F19B7CB7021DA0);
  v6 = v4 - 517884438;
  v5 = v4 - 517884438 < 0;
  v7 = 517884438 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + (v2 ^ 0x1FF))
                                        + 8
                                        * ((1460
                                          * (((v2 - 1) ^ ((v3 - 23910425) < 4 * (unint64_t)v7)) & 1)) ^ v2)
                                        - 12)
                            - 12))();
}

uint64_t sub_1003F24F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * (((((27 * ((v5 - 42) ^ 0x170) - 156) | 0xE)
                                                                                    - 164)
                                                                                   * (v3 == 23910425)) ^ (v5 - 42)))
                                                                     - 12))(a1, a2, a3, 2197444971);
}

uint64_t sub_1003F253C(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 32) = a4;
  return result;
}

uint64_t sub_1003F2544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 + 8
                                                                                             * ((v3 + 775) | 0x210))
                                                                            - ((v3 - 142) ^ 0x18ALL)))(a1, (v3 + 775), 650526838, (v3 - 142), v1);
}

uint64_t sub_1003F25B8@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + (a4 + a5)) = (a2 ^ v7) >> v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a3 ^ (914 * (a4 - 1 != v6)))) - (((a3 + 916) | 1u) ^ 0x52FLL)))();
}

uint64_t sub_1003F2608(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((16 * (v3 == 24)) | ((v3 == 24) << 9) | a2))
                                          - ((a2 - 917) ^ 0x18ALL)))(a1);
}

uint64_t sub_1003F263C(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  _BOOL4 v7;

  v7 = v2 > 0x39BBBA30;
  if (v7 == v6 - 276593625 < -968604209)
    v7 = v6 - 276593625 < v5;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4
                                                                                        + 8
                                                                                        * (a2 ^ ((2 * v7) | (4 * v7))))
                                                                            - (a2 - 917)
                                                                            + 394))(a1, (a2 - 917), 650526838, (a2 - 917), v3);
}

uint64_t sub_1003F26B0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;

  return sub_1003F25B8(a1, *(_DWORD *)(*v4 + 4 * (v5 - 1455473462 + a2)), a2, v3, a3);
}

void sub_1003F26DC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BR              X13 }
}

uint64_t sub_1003F2824(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((811
                                * (((((v1 - 337101568) ^ (2 * a1) & 0xEFE946AE) + (a1 ^ 0x8A02CA64) - 1356070979 == 656450324) ^ v1 ^ 0xF1) & 1)) ^ v1)))();
}

uint64_t sub_1003F2894(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((((a7 ^ 0x7FD) - 781) * ((a2 + v7 - 2012521303) > 7)) ^ a7))
                            - 8))();
}

uint64_t sub_1003F28D4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((61 * (a1 + a3 - 16 >= ((7 * (a7 ^ 0x1D1)) ^ 0xFFFFF8DA))) ^ a7))
                            - 8))();
}

uint64_t sub_1003F2918(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v23;

  v14 = *(_QWORD *)(v13 - 120);
  v15 = (a2 + v11 + a1) + v14;
  v16 = ((_BYTE)a2 + (_BYTE)v11 + (_BYTE)a1) & 0xF;
  v17 = v16 + v9 - v15;
  v18 = (v16 | v10) - v15;
  v19 = (v16 | v8) - v15;
  v23 = (unint64_t)(v7 - v14) > 0xF && v17 > 0xF && v18 >= (((a7 + 595) | 0x400u) ^ 0x73AuLL) && v19 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((478 * v23) ^ a7)) - 8))();
}

uint64_t sub_1003F298C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                       + 8
                                                                       * ((1012
                                                                         * (((a7 - 52) ^ (v7 < ((436 * ((a7 + 289) ^ 0x1FA)) ^ 0x378u))) & 1)) ^ (a7 + 289)))
                                                           - 4))(a1, a2, 0);
}

uint64_t sub_1003F29D8(int a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16x4_t v57;
  int8x16x4_t v58;

  v57.val[1].i64[0] = ((_BYTE)v46 + 9) & 0xF;
  v57.val[1].i64[1] = ((_BYTE)v46 + 8) & 0xF;
  v57.val[2].i64[0] = ((_BYTE)v46 + 7) & 0xF;
  v57.val[2].i64[1] = ((_BYTE)v46 + 6) & 0xF;
  v57.val[3].i64[0] = ((_BYTE)v46 + 5) & 0xF;
  v57.val[3].i64[1] = ((_BYTE)v46 + 4) & 0xF;
  v58.val[0].i64[0] = ((_BYTE)v46 + 3) & 0xF;
  v58.val[0].i64[1] = ((_BYTE)v46 + 2) & 0xF;
  v50 = a2 + v47 + a1;
  v58.val[1].i64[0] = ((_BYTE)v46 + 1) & 0xF;
  v58.val[1].i64[1] = v46 & 0xF;
  v58.val[2].i64[0] = ((_BYTE)v46 - 1) & 0xF;
  v58.val[2].i64[1] = (v46 + 14) & 0xF;
  v58.val[3].i64[0] = ((_BYTE)v46 + 13) & 0xF;
  v58.val[3].i64[1] = (v46 + 12) & 0xF;
  v51.i64[0] = 0x6161616161616161;
  v51.i64[1] = 0x6161616161616161;
  v52.i64[0] = 0xC1C1C1C1C1C1C1C1;
  v52.i64[1] = 0xC1C1C1C1C1C1C1C1;
  v57.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)v47 + (_BYTE)a1) & 0xF;
  v57.val[0].i64[1] = ((_BYTE)v46 + 10) & 0xF;
  v53.i64[0] = vqtbl4q_s8(v57, (int8x16_t)xmmword_101BA0570).u64[0];
  v53.i64[1] = vqtbl4q_s8(v58, (int8x16_t)xmmword_101BA0570).u64[0];
  v54 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v42 - 15 + v50), *(int8x16_t *)(v44 + v57.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v45 + v57.val[0].i64[0] - 15), *(int8x16_t *)(v43 + v57.val[0].i64[0] - 15))));
  v55 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v54, v54, 8uLL), v52), vmulq_s8(v53, v51)));
  *(int8x16_t *)(*(_QWORD *)(v49 - 120) - 15 + v50) = vextq_s8(v55, v55, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(a42 + 8 * (int)((1252 * ((v48 & 0xFFFFFFF0) == 16)) ^ a4)) - (a4 ^ 0x364)))();
}

void sub_1003F2B4C()
{
  JUMPOUT(0x1003F2ACCLL);
}

uint64_t sub_1003F2B58(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((124
                                * ((((v1 - 32) ^ ((a1 ^ (v1 - 1618212143) & 0x6073F58F ^ 0xFDF66CB4) == 0)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_1003F2BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  *(_BYTE *)(*(_QWORD *)(v10 - 120) + (v6 - 632296289)) = *(_BYTE *)(v2 + ((v6 - 632296289) & 0xFLL)) ^ *(_BYTE *)(v0 + (v6 - 632296289)) ^ *(_BYTE *)(v3 + (((_BYTE)v6 - 97) & 0xF)) ^ (2 * (v5 ^ 4) - 69) ^ *(_BYTE *)(v1 + (((_BYTE)v6 - 97) & 0xF)) ^ (97 * ((v6 - 97) & 0xF));
  v11 = v7 > 0x9AE75F8E;
  if (v11 == v6 + 1063816465 < v4)
    v11 = v6 + 1063816465 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((983 * v11) ^ v5)) - 4))();
}

uint64_t sub_1003F2C68(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8 * ((740 * (((v7 == a3) ^ (a7 + 80 + 23 * (a7 ^ 0x35))) & 1)) ^ a7)))();
}

uint64_t sub_1003F2CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                + 8
                                                                                * (int)(a6 ^ (77 * ((v7 >> 3) & 1))))
                                                                    - ((((a6 + 1124718150) ^ 0x4309D458u) + 907) ^ (a6 + 1124718150) & 0xBCF62F2E)))(a1, a2, a3, (v6 - a3));
}

uint64_t sub_1003F2D0C(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  int v48;
  int v49;
  uint64_t v50;
  unsigned int v51;
  int v52;
  char v53;
  uint64_t v54;
  int8x16x4_t v56;

  *(_DWORD *)(v50 - 136) = v49;
  v51 = ((a5 - 11) ^ 0xFFFFFC60) & v49;
  *(_QWORD *)(v50 - 128) = *(_QWORD *)(v50 - 120) - 7;
  v52 = -a3;
  *(_DWORD *)(v50 - 144) = v51;
  v53 = v47 + a2 + v48;
  v54 = (v52 + a2 + v48 + a1);
  v56.val[0].i64[0] = ((_BYTE)v52 + (_BYTE)a2 + (_BYTE)v48 + (_BYTE)a1) & 0xF;
  v56.val[0].i64[1] = ((_BYTE)v52 + v53 + 10) & 0xF;
  v56.val[1].i64[0] = ((_BYTE)v52 + v53 + 9) & 0xF;
  v56.val[1].i64[1] = ((_BYTE)v52 + v46 + ((a5 + 18) ^ 0xFD)) & 0xF;
  v56.val[2].i64[0] = ((_BYTE)v52 + v53 + 7) & 0xF;
  v56.val[2].i64[1] = ((_BYTE)v52 + v53 + 6) & 0xF;
  v56.val[3].i64[0] = ((_BYTE)v52 + v53 + 5) & 0xF;
  v56.val[3].i64[1] = ((_BYTE)v52 + v53 + 4) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v50 - 128) + v54) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v42 - 7 + v54), *(int8x8_t *)(v44 + (v54 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v45 + (v54 & 0xF) - 7), *(int8x8_t *)(v43 + (v54 & 0xF) - 7)))), (int8x8_t)0xC1C1C1C1C1C1C1C1), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v56, (int8x16_t)xmmword_101BA0580), (int8x8_t)0x6161616161616161)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a42 + 8 * ((59 * (v52 != 8 - v51)) ^ (a5 - 11))) - 12))((__n128)xmmword_101BA0580);
}

void sub_1003F2E60()
{
  JUMPOUT(0x1003F2D80);
}

uint64_t sub_1003F2E88(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ (1074 * (*(_DWORD *)(v2 - 136) == *(_DWORD *)(v2 - 144)))))
                            - ((a1 + 849) ^ 0xFFFFFFFFFFFFFDDCLL)
                            - ((a1 + 621) | 0x308u)))();
}

uint64_t sub_1003F2ED0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(*(_QWORD *)(v12 - 120) + (a4 - 656450325)) = *(_BYTE *)(v6 + (a4 - 656450325)) ^ *(_BYTE *)(v8 + ((a4 - 656450325) & 0xFLL)) ^ *(_BYTE *)(v9 + (((_BYTE)a4 - 21) & 0xF)) ^ *(_BYTE *)(v7 + (((_BYTE)a4 - 21) & 0xF)) ^ (((a4 - 21) & 0xF) * (a6 + 55)) ^ 0xC1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((1899 * (a4 - 1 == v10)) ^ (a6 - 1574))) - 8))();
}

uint64_t sub_1003F2F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;

  v38 = *(_QWORD *)(v35 + 24);
  *(int8x16_t *)(v37 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v35 + 40) - 0xAA58417147CEA7FLL), (int8x16_t)xmmword_101BA05B0);
  if (*(_QWORD *)(v37 - 120))
    v39 = v38 == 0x6F16120776D4F6DCLL;
  else
    v39 = 1;
  v40 = !v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * (int)((162 * v40) ^ a5)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1003F2FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  uint64_t v44;
  int v45;
  unsigned int v46;
  int v48;

  v45 = a12 - ((2 * a12 - 1544732510) & 0xDC4D398A) + 1075658006;
  v46 = ((a44 ^ 0xFFFFFAF8) & (2 * v45) ^ 0xDC4D390A) + (v45 ^ 0x91D96368);
  v48 = ((((_DWORD)a5 - 346) ^ 0x3A3) & (v46 + 3)) == 37 * (a5 ^ 0x521) - 1443 && v46 != -83;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * (int)((v48 << 6) | (v48 << 7) | a5)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1003F3068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  char v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  int v52;
  char *v53;
  int v54;
  int v55;
  char *v56;
  int v57;
  char *v58;
  char v59;
  unint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  unsigned int v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  char *v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned __int8 *v113;
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char *v121;
  uint64_t v122;
  int v123;
  char *v124;
  int v125;
  int v126;
  char *v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  int v206;
  unsigned int v207;

  v48 = 14 * (v43 ^ 0x32F);
  v49 = (uint64_t)*(&off_1021378F0 + v43 - 926);
  v50 = *(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v44 - 0x6F16120776D4F6DBLL) ^ 0x85));
  HIDWORD(v51) = v50 ^ 0x31;
  LODWORD(v51) = ~v50 << 24;
  v52 = ((v51 >> 30) ^ 0x9F) << (v48 ^ 0x3A);
  v53 = (char *)*(&off_1021378F0 + (v43 ^ 0x39C)) - 8;
  v54 = v53[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D1) ^ 0xBFLL];
  HIDWORD(v51) = v54 ^ 0xB;
  LODWORD(v51) = ~v54 << 24;
  LOBYTE(v54) = v51 >> 28;
  v55 = *(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D7) ^ 0x6FLL));
  HIDWORD(v51) = v55 ^ 0x31;
  LODWORD(v51) = ~v55 << 24;
  v56 = (char *)*(&off_1021378F0 + (v43 ^ 0x36A)) - 8;
  v57 = v54 | ((v56[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D2) ^ 0xB7] ^ 0x26) << 8);
  v58 = (char *)*(&off_1021378F0 + (v43 ^ 0x371)) - 8;
  v59 = v58[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D0) ^ 0xD8];
  v60 = ((v56[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6CELL) ^ 0xC7] ^ 0xC6) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v59 ^ v42) << 24);
  v61 = (((v51 >> 30) ^ 0x68) << 16) | ((v56[*(unsigned __int8 *)(v44
                                                                                                  - 0x6F16120776D4F6D6) ^ 0xDFLL] ^ 7) << 8);
  v62 = v53[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6CDLL) ^ 0xBCLL];
  HIDWORD(v51) = v62 ^ 0xB;
  LODWORD(v51) = ~v62 << 24;
  LOBYTE(v62) = v51 >> 28;
  v63 = v62 ^ 0x68;
  v64 = v61 | ((v58[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D8) ^ 0xAFLL] ^ 0xF5) << 24);
  v65 = v53[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D5) ^ 0x98];
  HIDWORD(v51) = v65 ^ 0xB;
  LODWORD(v51) = ~v65 << 24;
  v66 = v64 & 0xFFFFFF00 | (v51 >> 28);
  LODWORD(v53) = v53[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D9) ^ 0xD0];
  HIDWORD(v51) = v53 ^ 0xB;
  LODWORD(v51) = ~(_DWORD)v53 << 24;
  v67 = v52 | ((v56[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6DALL) ^ 0x49] ^ 0x8D) << 8) | ((v58[*v45 ^ 0xFELL] ^ 0x2C) << 24);
  v68 = *(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v44 - 0x6F16120776D4F6CFLL) ^ 0xB6));
  LOBYTE(v53) = (v51 >> 28) ^ 0x3C;
  HIDWORD(v51) = v68 ^ 0x31;
  LODWORD(v51) = ~v68 << 24;
  v69 = (v51 >> 30) ^ 0x21;
  LODWORD(v49) = *(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D3) ^ 0xC8));
  HIDWORD(v51) = v49 ^ 0x31;
  LODWORD(v51) = ~(_DWORD)v49 << 24;
  LODWORD(v49) = v58[*(unsigned __int8 *)(v44 - 0x6F16120776D4F6D4) ^ 0x18];
  v70 = (v60 | (v69 << 16) | v63) ^ 0x75F49EF4;
  v71 = (char *)*(&off_1021378F0 + v43 - 802) - 8;
  v72 = v57 & 0xFF00FFFF | (((v51 >> 30) ^ 0x37) << 16) | ((v49 ^ 0x6A) << 24);
  v73 = (((unsigned __int16)((v60 | v63) ^ 0x9EF4) >> 8) - ((2 * (v70 >> 8)) & 0xFC) + 1874048638) ^ *(_DWORD *)&v71[4 * (((unsigned __int16)((v60 | v63) ^ 0x9EF4) >> 8) ^ 0xF5)];
  LODWORD(v58) = v73 - ((2 * v73) & 0x1F14A9F6);
  v74 = (uint64_t)*(&off_1021378F0 + (v43 ^ 0x3C8));
  v75 = *(_DWORD *)(v74 + 4 * (v59 ^ 0x3Au));
  HIDWORD(v51) = ~v75;
  LODWORD(v51) = v75 ^ 0x95227254;
  v76 = (uint64_t)*(&off_1021378F0 + v43 - 887);
  LODWORD(v60) = (v51 >> 2) ^ *(_DWORD *)(v76 + 4 * (v69 ^ 0xDD)) ^ ((_DWORD)v58 + 260723963);
  LODWORD(v69) = v60 - ((2 * v60) & 0xC558F832);
  v77 = (uint64_t)*(&off_1021378F0 + v43 - 830);
  v206 = v67 | v53;
  v207 = v66;
  v78 = *(_DWORD *)(v77 + 4 * (v62 ^ 0xD9u)) ^ v206 ^ (v69 + 1655471129);
  v204 = v72;
  v202 = v78 ^ v66 ^ 0x2789BBD4;
  v79 = v72 ^ 0xE6 ^ v202;
  v80 = *(_DWORD *)(v74 + 4 * (((v79 ^ v70) >> 24) ^ 0x21));
  HIDWORD(v51) = ~v80;
  LODWORD(v51) = v80 ^ 0x95227254;
  v81 = ((v51 >> 2) - ((2 * (v51 >> 2)) & 0xC558F832) + 1655471129) ^ *(_DWORD *)(v77
                                                                                + 4
                                                                                * ((v79 ^ v70) ^ 0xDEu));
  HIDWORD(v200) = v79 ^ v70;
  v203 = v78;
  LODWORD(v200) = *(_DWORD *)&v71[4 * (((unsigned __int16)(v79 ^ v70) >> 8) ^ 0x1E)] ^ *(_DWORD *)(v76 + 4 * (((v79 ^ v70) >> 16) ^ 0x8Fu)) ^ v78 ^ ((((unsigned __int16)(v79 ^ v70) >> 8) ^ 0xEB) + 1874048638 + (~(2 * (((v79 ^ v70) >> 8) ^ 0x4BA6EB)) | 0xFFFFFF03) + 1) ^ (v81 - ((2 * v81) & 0x1F14A9F6) + 260723963);
  v82 = v200 ^ 0x76E748E2 ^ v78 ^ v66;
  v205 = v70;
  LODWORD(v63) = *(_DWORD *)(v74 + 4 * (((v82 ^ v70) >> 24) ^ 0xA2));
  HIDWORD(v51) = ~(_DWORD)v63;
  LODWORD(v51) = v63 ^ 0x95227254;
  v83 = v82 ^ v70 ^ 0xC84590C6;
  LODWORD(v63) = *(_DWORD *)&v71[4 * (BYTE1(v83) ^ 0xF5)] ^ *(_DWORD *)(v76
                                                                      + 4
                                                                      * (((v82 ^ v70) >> 16) ^ 0x6Cu)) ^ (BYTE1(v83) - ((v83 >> 7) & 0xFC) + 1874048638) ^ ((v51 >> 2) - ((2 * (v51 >> 2)) & 0x1F14A9F6) + 260723963);
  HIDWORD(v198) = v200 ^ 0x76E748E2 ^ *(_DWORD *)(v77 + 4 * ((v82 ^ v70) ^ 0x83u)) ^ (v63 - ((2 * v63) & 0xC558F832) + 1655471129);
  LODWORD(v199) = v82 ^ v70;
  LODWORD(v69) = HIDWORD(v198) ^ 0x2789BBD4 ^ v82 ^ 0x8EDEEA78;
  v201 = v79;
  HIDWORD(v199) = v82;
  HIDWORD(v197) = v82 ^ v79;
  LODWORD(v198) = HIDWORD(v198) ^ 0x2789BBD4 ^ v82;
  v84 = v69 ^ v82 ^ v79;
  LODWORD(v63) = *(_DWORD *)(v74 + 4 * (((v84 ^ v83) >> 24) ^ 0x67));
  HIDWORD(v51) = ~(_DWORD)v63;
  LODWORD(v51) = v63 ^ 0x95227254;
  LODWORD(v63) = (v51 >> 2) ^ *(_DWORD *)&v71[4 * (((unsigned __int16)(v84 ^ v83) >> 8) ^ 0x97)] ^ ((((unsigned __int16)(v84 ^ v83) >> 8) ^ 0x62) - ((2 * (((v84 ^ v83) >> 8) ^ 0xD8B62)) & 0xFC) + 1874048638);
  LODWORD(v63) = (v63 - ((2 * v63) & 0xC558F832) + 1655471129) ^ *(_DWORD *)(v77
                                                                           + 4
                                                                           * ((v84 ^ v83) ^ 0xE1u));
  v85 = HIDWORD(v198) ^ 0x2789BBD4 ^ *(_DWORD *)(v76 + 4 * (((v84 ^ v83 ^ 0x2142BA5) >> 16) ^ 0xB6u)) ^ (v63 - ((2 * v63) & 0x1F14A9F6) + 260723963);
  v86 = v85 ^ v69;
  HIDWORD(v196) = v84 ^ v83;
  LODWORD(v197) = v84;
  LODWORD(v69) = v85 ^ v69 ^ 0x307C325C;
  LODWORD(v195) = v69 ^ v84 ^ 0x5EF1BA37;
  v87 = *(_DWORD *)(v74 + 4 * (((v195 ^ v84 ^ v83) >> 24) ^ 0xA4));
  HIDWORD(v51) = ~v87;
  LODWORD(v51) = v87 ^ 0x95227254;
  v88 = ((v51 >> 2) - ((2 * (v51 >> 2)) & 0xC558F832) + 1655471129) ^ *(_DWORD *)(v77
                                                                                + 4
                                                                                * ((v195 ^ v84 ^ v83) ^ 0x18u));
  HIDWORD(v194) = v195 ^ v84 ^ v83;
  HIDWORD(v195) = v86;
  LODWORD(v196) = v85;
  LODWORD(v70) = *(_DWORD *)(v76 + 4 * (BYTE6(v194) ^ 0xCAu)) ^ *(_DWORD *)&v71[4
                                                                                * (((unsigned __int16)(WORD2(v194) ^ 0x7B5D) >> 8) ^ 0xF5)] ^ v85 ^ (((unsigned __int16)(WORD2(v194) ^ 0x7B5D) >> 8) - (((HIDWORD(v194) ^ 0xCEE37B5D) >> 7) & 0xFC) + 1874048638) ^ 0x91B562FE ^ (v88 - ((2 * v88) & 0x1F14A9F6) + 260723963);
  v89 = v70 ^ ((v84 ^ 0x5EF1BA37) - ((2 * (v84 ^ 0x5EF1BA37)) & 0x236AC5FC) - 1850383618);
  v90 = v89 ^ HIDWORD(v194) ^ 0xCEE37B5D;
  LODWORD(v63) = *(_DWORD *)(v74 + 4 * (HIBYTE(v90) ^ 0x70));
  LODWORD(v69) = v69 - 2 * (v69 & 0x11B562FF ^ v86 & 1);
  HIDWORD(v51) = ~(_DWORD)v63;
  LODWORD(v51) = v63 ^ 0x95227254;
  LODWORD(v63) = ((v51 >> 2) - ((2 * (v51 >> 2)) & 0x1F14A9F6) + 260723963) ^ *(_DWORD *)(v76
                                                                                        + 4
                                                                                        * (((v90 ^ 0xF3443494) >> 16) ^ 0xE4u));
  LODWORD(v63) = (v63 + 1655471129 + (~(2 * v63) | 0x3AA707CD) + 1) ^ *(_DWORD *)(v77
                                                                                + 4 * (v90 ^ 0x91u));
  v193 = __PAIR64__(v89, v90);
  v91 = ((unsigned __int16)(v90 ^ 0xBBD4) >> 8);
  LODWORD(v63) = (v63 - ((2 * v63) & 0xDF676CFC) + 1874048638) ^ *(_DWORD *)&v71[4 * (v91 ^ 0xF5)];
  v92 = v70 ^ v91 ^ (v63 - ((2 * v63) & 0x236AC5FC) - 1850383618);
  LODWORD(v194) = v70;
  LODWORD(v192) = v70 ^ (v69 - 1850383618);
  HIDWORD(v191) = v92 ^ v192;
  LODWORD(v69) = v92 ^ v192 ^ 0xE6F58988;
  v93 = v69 ^ v89;
  LODWORD(v70) = v69 ^ v89 ^ v90 ^ 0x1A89BBD4;
  LODWORD(v63) = *(_DWORD *)(v74 + 4 * (BYTE3(v70) ^ 0x43));
  HIDWORD(v51) = ~(_DWORD)v63;
  LODWORD(v51) = v63 ^ 0x95227254;
  LODWORD(v63) = *(_DWORD *)&v71[4 * (((unsigned __int16)(v70 ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)(v76 + 4 * (((v70 ^ 0x4D501F31) >> 16) ^ 0xE2u)) ^ (((unsigned __int16)(v70 ^ 0x7ABE) >> 8) - (((v70 ^ 0x299B7ABE) >> 7) & 0xFC) + 1874048638) ^ ((v51 >> 2) - ((2 * (v51 >> 2)) & 0x1F14A9F6) + 260723963);
  HIDWORD(v192) = v92;
  v94 = v92 ^ *(_DWORD *)(v77 + 4 * (v70 ^ 0xFBu)) ^ (v63 - ((2 * v63) & 0xC558F832) + 1655471129);
  HIDWORD(v189) = v94 ^ v69;
  LODWORD(v69) = v94 ^ v69 ^ 0x5BF36347;
  LODWORD(v191) = v93;
  LODWORD(v189) = v69 ^ v93;
  v95 = v69 ^ v93 ^ 0x2745D0FF;
  v96 = v95 ^ v70 ^ 0x299B7ABE;
  v97 = (((unsigned __int16)(v96 ^ 0x6B2B) >> 8) - (((v96 ^ 0x3DCC6B2B) >> 7) & 0xFC) + 1874048638) ^ *(_DWORD *)&v71[4 * (((unsigned __int16)(v96 ^ 0x6B2B) >> 8) ^ 0xF5)];
  v98 = (v97 - ((2 * v97) & 0xC558F832) + 1655471129) ^ *(_DWORD *)(v77 + 4 * (v96 ^ 0x6Eu));
  HIDWORD(v188) = v96;
  v99 = *(_DWORD *)(v74 + 4 * (HIBYTE(v96) ^ 0x57));
  HIDWORD(v51) = ~v99;
  LODWORD(v51) = v99 ^ 0x95227254;
  v190 = __PAIR64__(v70, v94);
  LODWORD(v188) = (v51 >> 2) ^ *(_DWORD *)(v76 + 4 * (((v96 ^ 0x516EF336) >> 16) ^ 0x8Bu)) ^ v94 ^ (v98 - ((2 * v98) & 0x1F14A9F6) + 260723963);
  HIDWORD(v187) = v188 ^ 0x930000ED ^ v69;
  LODWORD(v187) = HIDWORD(v187) ^ 0x8D06EA22 ^ v95;
  v100 = v187 ^ v96 ^ 0x3DCC6B2B;
  v101 = *(_DWORD *)(v74 + 4 * (HIBYTE(v100) ^ 0x39));
  HIDWORD(v51) = ~v101;
  LODWORD(v51) = v101 ^ 0x95227254;
  v102 = ((unsigned __int16)(v100 ^ 0xAA41) >> 8);
  v103 = *(_DWORD *)(v77 + 4 * (v100 ^ 4u)) ^ *(_DWORD *)&v71[4 * (v102 ^ 0xF5)] ^ 0xD1FCA67 ^ (v51 >> 2);
  v104 = *(_DWORD *)(v76 + 4 * (((v100 ^ 0x9289BB39) >> 16) ^ 0x7Eu)) ^ v188 ^ 0x930000ED ^ v102 ^ 0x4C8602BB ^ (v103 - ((2 * v103) & 0x1F14A9F6) + 260723963);
  LODWORD(v69) = (HIDWORD(v187) ^ 0x8D06EA22) - ((2 * (HIDWORD(v187) ^ 0x8D06EA22)) & 0x990C0576);
  LODWORD(v63) = v104 ^ (v95 - ((2 * v95) & 0x990C0576) + 1283850939);
  LODWORD(v74) = *(_DWORD *)(v74 + 4 * (((v63 ^ v100 ^ 0x53DEAA41) >> 24) ^ 0x44));
  v105 = ((v63 ^ v100 ^ 0x53DEAA41) >> 8) ^ 0x2E3F08;
  HIDWORD(v51) = ~(_DWORD)v74;
  LODWORD(v51) = v74 ^ 0x95227254;
  LODWORD(v71) = *(_DWORD *)&v71[4 * (v105 ^ 0xF5)] ^ *(_DWORD *)(v77
                                                                                 + 4
                                                                                 * ((v63 ^ v100 ^ 0x41) ^ 0xC4u)) ^ (v105 - 2 * (v105 & 0x7F ^ ((v63 ^ v100 ^ 0x53DEAA41) >> 8) & 1) + 1874048638) ^ ((v51 >> 2) - ((2 * (v51 >> 2)) & 0xC558F832) + 1655471129);
  HIDWORD(v185) = v63 ^ v100 ^ 0x53DEAA41 ^ 0x7798CA21;
  v106 = ((_DWORD)v71 - ((2 * (_DWORD)v71) & 0x1F14A9F6) + 260723963) ^ *(_DWORD *)(v76
                                                                                  + 4
                                                                                  * (((v63 ^ v100 ^ 0x53DEAA41) >> 16) ^ 0x16u));
  v107 = (char *)*(&off_1021378F0 + v43 - 746) - 12;
  v108 = v107[*(unsigned __int8 *)(v47 - 109) ^ 0xA5];
  HIDWORD(v51) = v108 ^ 0x28;
  LODWORD(v51) = (v108 ^ 0x40) << 24;
  v182 = v107;
  v184 = (char *)*(&off_1021378F0 + (v43 ^ 0x315)) - 12;
  v181 = (char *)*(&off_1021378F0 + (v43 ^ 0x391)) - 4;
  v183 = (char *)*(&off_1021378F0 + (v43 ^ 0x3A1)) - 8;
  v109 = (((((v51 >> 30) ^ 0xDB) >> 2) | (((v51 >> 30) ^ 0xDB) << 6)) | ((v183[*(unsigned __int8 *)(v47 - 111) ^ 0x7ALL] ^ 0x2E) << 16) | ((v181[*(unsigned __int8 *)(v47 - 112) ^ 0x78] ^ 0x3D) << 24) | (((v184[*(unsigned __int8 *)(v47 - 110) ^ 0x5DLL] + (*(_BYTE *)(v47 - 110) ^ 0x52) - 115) ^ 0x5D) << 8)) ^ 0x5486BD1A;
  v110 = ((v107[*(unsigned __int8 *)(v47 - 101) ^ 0x60] ^ 0xA3) & 0xFFFF00FF | ((v183[*(unsigned __int8 *)(v47 - 103) ^ 5] ^ 0x7F) << 16) | (((v184[*(unsigned __int8 *)(v47 - 102) ^ 4] + (*(_BYTE *)(v47 - 102) ^ 0xB) - 115) ^ 0x33) << 8) | ((v181[*(unsigned __int8 *)(v47 - 104) ^ 0x1CLL] ^ 0xC8) << 24)) ^ 0x867A2ED;
  v111 = ((v107[*(unsigned __int8 *)(v47 - 105) ^ 0x28] ^ 0x62) & 0xFFFF00FF | ((((*(_BYTE *)(v47 - 106) ^ 0xAC) + v184[*(unsigned __int8 *)(v47 - 106) ^ 0xA3] - 115) ^ 0xF6) << 8) | ((v181[*(unsigned __int8 *)(v47 - 108) ^ 0xB2] ^ 0x3F) << 24) | ((v183[*(unsigned __int8 *)(v47 - 107) ^ 0x27] ^ 0x1B) << 16)) ^ 0xB4B57C51;
  v112 = ((v107[*(unsigned __int8 *)(v47 - 97) ^ 0x7BLL] ^ 0x17) & 0xFFFF00FF | ((((*(_BYTE *)(v47 - 98) ^ 0xD0) + v184[*(unsigned __int8 *)(v47 - 98) ^ 0xDFLL] - 115) ^ 0xE4) << 8) | ((v183[*(unsigned __int8 *)(v47 - 99) ^ 0xAALL] ^ 0x4D) << 16) | ((v181[*(unsigned __int8 *)(v47 - 100) ^ 0x45] ^ 7) << 24)) ^ 0x1720A077;
  LODWORD(v71) = v106 - ((2 * v106) & 0x990C0576) + 1283850939;
  LODWORD(v180) = v46 + 83;
  HIDWORD(v179) = v48 ^ 0x72D;
  LODWORD(v179) = v48 & 0xCC4006E;
  HIDWORD(v178) = v104 ^ (v69 + 1283850939);
  LODWORD(v178) = v48 ^ 0x78F;
  *(_DWORD *)(v47 - 128) = v48;
  HIDWORD(v177) = v48 ^ 0x7AD;
  v186 = __PAIR64__(v100, v104);
  LODWORD(v177) = v71 ^ v104;
  LODWORD(v185) = v63 ^ 0x626A2240;
  HIDWORD(v180) = (v69 + 1283850939) ^ 0x3DC8BA5D ^ v71;
  HIDWORD(a12) = HIDWORD(v180) ^ v63 ^ 0x626A2240;
  v113 = *(unsigned __int8 **)(v47 - 120);
  v114 = *(_DWORD *)(v47 - 128) - 391;
  v115 = *(_DWORD *)(v47 - 128);
  *(_QWORD *)(v47 - 208) = 7;
  v116 = v113[7];
  v117 = (v114 - 1984345492) ^ 0x89B95003;
  *(_QWORD *)(v47 - 160) = v117;
  LODWORD(v49) = v107[v116 ^ 0x41];
  v118 = v113[v117] ^ 0x60;
  *(_QWORD *)(v47 - 152) = 8;
  *(_QWORD *)(v47 - 136) = 1;
  LODWORD(v53) = v181[v118] ^ 0xBC;
  LODWORD(v77) = v181[v113[8] ^ 0xC1] ^ 8;
  LODWORD(v118) = v183[v113[1] ^ 0x66] ^ 0xC2;
  *(_QWORD *)(v47 - 144) = 15;
  LODWORD(v76) = (_DWORD)v118 << 16;
  v119 = v113[15] ^ 0xE9;
  *(_QWORD *)(v47 - 168) = 11;
  LODWORD(v119) = v107[v119] ^ 0xB5;
  LODWORD(v69) = v107[v113[11] ^ 0xC3];
  *(_QWORD *)(v47 - 184) = 0;
  LODWORD(v76) = v76 | ((v181[*v113 ^ 0x30] ^ 0x8C) << 24);
  LODWORD(v69) = v69 ^ 0x7F | ((_DWORD)v77 << 24);
  *(_QWORD *)(v47 - 176) = 2;
  LODWORD(v76) = v76 & 0xFFFF00FF | (((v184[v113[2] ^ 0xC0] + (v113[2] ^ 0xCF) - 115) ^ 0xF9) << 8);
  *(_QWORD *)(v47 - 224) = 4;
  LODWORD(v77) = v181[v113[4] ^ 0xFCLL] ^ 0x32;
  LODWORD(v49) = v49 ^ 0x65;
  *(_QWORD *)(v47 - 240) = 9;
  LODWORD(v63) = v183[v113[9] ^ 0x5DLL] ^ 0x11;
  *(_QWORD *)(v47 - 200) = 10;
  LODWORD(v69) = v69 | ((_DWORD)v63 << 16);
  LOBYTE(v63) = (v184[v113[10] ^ 0xD5] + (v113[10] ^ 0xDA) - 115) ^ 0xCF;
  *(_QWORD *)(v47 - 192) = 14;
  LODWORD(v69) = v69 & 0xFFFF00FF | (v63 << 8);
  LODWORD(v63) = (v184[v113[14] ^ 0xE4] + (v113[14] ^ 0xEB) + 13);
  *(_QWORD *)(v47 - 232) = 3;
  v120 = v107[v113[3] ^ 0xDCLL] ^ 0xA1;
  *(_QWORD *)(v47 - 256) = 13;
  LODWORD(v63) = ((_DWORD)v63 << 8) | ((v183[v113[13] ^ 0x92] ^ 0x2C) << 16) | v119 | ((_DWORD)v53 << 24);
  *(_DWORD *)(v47 - 212) = -1984344057;
  LOBYTE(v71) = v184[v113[6] ^ 0x4FLL] + (v113[6] ^ 0x40);
  *(_QWORD *)(v47 - 248) = 5;
  LODWORD(v71) = ((v183[v113[5] ^ 0xA9] ^ 0xFF) << 16) | ((((_BYTE)v71 - 115) ^ 0xB7) << 8) | v49 | ((_DWORD)v77 << 24);
  LODWORD(v71) = (_DWORD)v71 + 218940904 - 2 * (v71 & 0xD0CC5F8 ^ v49 & 0x10);
  LODWORD(v49) = v109 ^ v206 ^ ((v120 | v76) - 2 * ((v120 | v76) & 0x6D3F043F ^ v120 & 0x1C) - 314637277);
  LODWORD(v71) = v111 ^ v207 ^ v71;
  LODWORD(v77) = v112 ^ v205 ^ (v63 - 2 * (v63 & 0x2E9919DE ^ v119 & 0x10) - 1365698098);
  LODWORD(v119) = v110 ^ v204 ^ (v69 - ((2 * v69) & 0x63BC36A8) - 1310844076);
  v121 = (char *)*(&off_1021378F0 + v115 - 1743) - 12;
  v122 = (uint64_t)*(&off_1021378F0 + (v48 ^ 0x72D));
  LODWORD(v63) = *(_DWORD *)(v122 + 4 * (BYTE3(v119) ^ 0x3F));
  HIDWORD(v51) = ~(_DWORD)v63;
  LODWORD(v51) = v63 ^ 0x1FE9DC38;
  v123 = (v51 >> 1) ^ *(_DWORD *)&v121[4 * (BYTE2(v77) ^ 0x34)] ^ ((BYTE2(v77) ^ 0x68)
                                                                 + 385848927
                                                                 - ((2 * (WORD1(v77) ^ 0xB768)) & 0xBE));
  v124 = (char *)*(&off_1021378F0 + v115 - 1673) - 4;
  LODWORD(v53) = *(_DWORD *)&v124[4 * (v119 ^ 0xC6)] ^ ((BYTE2(v49) ^ 0xD5)
                                                                       + 385848927
                                                                       - ((2 * (WORD1(v49) ^ 0x6CD5)) & 0xBE)) ^ ((v119 ^ 0xAB) - 821799678 + ((2 * (v119 ^ 0xAB) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v121[4 * (BYTE2(v49) ^ 0x89)];
  LODWORD(v76) = *(_DWORD *)&v121[4 * (BYTE2(v71) ^ 0x8C)] ^ *(_DWORD *)&v124[4 * (v77 ^ 0xB6)] ^ ((v77 ^ 0xDB) - 821799678 + ((2 * (v77 ^ 0xDB) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ ((BYTE2(v71) ^ 0xD0) + 385848927 - ((2 * ((v71 >> 16) ^ 0xC8D0)) & 0xBE));
  LODWORD(v74) = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0xC8));
  HIDWORD(v51) = ~(_DWORD)v74;
  LODWORD(v51) = v74 ^ 0x1FE9DC38;
  LODWORD(v63) = v123 - 1430734211 - ((2 * v123) & 0x557174FA);
  v125 = ((BYTE2(v119) ^ 0xAD) + 385848927 - ((2 * (WORD1(v119) ^ 0x3FAD)) & 0xBE)) ^ *(_DWORD *)&v124[4 * (v49 ^ 0x1C)] ^ ((v49 ^ 0x71) - 821799678 + ((2 * (v49 ^ 0x71) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ (v51 >> 1) ^ *(_DWORD *)&v121[4 * (BYTE2(v119) ^ 0xF1)];
  LODWORD(v74) = *(_DWORD *)(v122 + 4 * (BYTE3(v49) ^ 0x6C));
  HIDWORD(v51) = ~(_DWORD)v74;
  LODWORD(v51) = v74 ^ 0x1FE9DC38;
  LODWORD(v74) = v51 >> 1;
  LODWORD(v69) = *(_DWORD *)(v122 + 4 * (BYTE3(v77) ^ 0xB7));
  HIDWORD(v51) = ~(_DWORD)v69;
  LODWORD(v51) = v69 ^ 0x1FE9DC38;
  v126 = v125 - 1430734211 - ((2 * v125) & 0x557174FA);
  v127 = (char *)*(&off_1021378F0 + (v48 & 0xCC4006E)) - 8;
  v128 = (v71 ^ 0x10) - 821799678 + ((2 * (v71 ^ 0x10) + 254) & 0x104 ^ 0xDDF6FBFF);
  LODWORD(v63) = *(_DWORD *)&v127[4 * (BYTE1(v49) ^ 0xDE)] ^ v201 ^ *(_DWORD *)&v124[4 * (v71 ^ 0x7D)] ^ v63;
  LODWORD(v71) = ((_DWORD)v53 - 1430734211 - ((2 * (_DWORD)v53) & 0x557174FA)) ^ *(_DWORD *)&v127[4
                                                                                                * (BYTE1(v71) ^ 0x2F)] ^ (v51 >> 1);
  LODWORD(v69) = (_DWORD)v71 - ((2 * (_DWORD)v71) & 0x37C7169C);
  LODWORD(v49) = v63 ^ v128;
  LODWORD(v119) = *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0x29)] ^ v203 ^ v74 ^ (v76 - 1430734211 - ((2 * v76) & 0x557174FA));
  LODWORD(v71) = *(_DWORD *)&v127[4 * (BYTE1(v77) ^ 0x66)] ^ v202 ^ v126;
  LODWORD(v76) = *(_DWORD *)(v122 + 4 * ((v63 ^ ~v128) >> 24));
  HIDWORD(v51) = ~(_DWORD)v76;
  LODWORD(v51) = v76 ^ 0x1FE9DC38;
  LODWORD(v63) = v51 >> 1;
  v129 = (v127[4 * (BYTE1(v77) ^ 0x66)] ^ v202 ^ v126);
  LODWORD(v76) = *(_DWORD *)(v122 + 4 * (BYTE3(v119) ^ 0x91));
  HIDWORD(v51) = ~(_DWORD)v76;
  LODWORD(v51) = v76 ^ 0x1FE9DC38;
  LODWORD(v76) = v51 >> 1;
  LODWORD(v74) = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0xA3));
  HIDWORD(v51) = ~(_DWORD)v74;
  LODWORD(v51) = v74 ^ 0x1FE9DC38;
  LODWORD(v117) = v76 ^ *(_DWORD *)&v121[4 * (BYTE2(v71) ^ 0xF0)] ^ ((BYTE2(v71) ^ 0xAC)
                                                                   + 385848927
                                                                   - ((2 * ((v71 >> 16) ^ 0xA3AC)) & 0xBE));
  LODWORD(v76) = (v51 >> 1) ^ *(_DWORD *)&v124[4 * (v119 ^ 0x7B)] ^ *(_DWORD *)&v121[4 * (BYTE2(v49) ^ 0x15)] ^ ((BYTE2(v49) ^ 0x49) + 385848927 - ((2 * (WORD1(v49) ^ 0xFF49)) & 0xBE)) ^ ((v119 ^ 0x16) - 821799678 + ((2 * (v119 ^ 0x16) + 254) & 0x104 ^ 0xDDF6FBFF));
  LODWORD(v77) = v76 - 1430734211 - ((2 * v76) & 0x557174FA);
  LODWORD(v76) = (v69 - 1679586482) ^ HIDWORD(v200);
  LODWORD(v117) = (v117 - 1430734211 - ((2 * v117) & 0x557174FA)) ^ *(_DWORD *)&v127[4 * (BYTE1(v49) ^ 0x2C)];
  LODWORD(v53) = v63 ^ *(_DWORD *)&v124[4 * (v129 ^ 3)] ^ ((v129 ^ 0x6E)
                                                         - 821799678
                                                         + ((2 * (v129 ^ 0x6E) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v121[4 * (BYTE2(v76) ^ 0x86)] ^ ((BYTE2(v76) ^ 0xDA) + 385848927 - ((2 * (WORD1(v76) ^ 0xF5DA)) & 0xBE));
  LODWORD(v74) = *(_DWORD *)&v121[4 * (BYTE2(v119) ^ 0x2E)] ^ ((BYTE2(v119) ^ 0x72)
                                                             + 385848927
                                                             - ((2 * (WORD1(v119) ^ 0x9172)) & 0xBE));
  LODWORD(v63) = *(_DWORD *)(v122 + 4 * (BYTE3(v76) ^ 0xF5));
  HIDWORD(v51) = ~(_DWORD)v63;
  LODWORD(v51) = v63 ^ 0x1FE9DC38;
  LODWORD(v71) = ((v49 ^ 0xFC)
                - 821799678
                + ((2 * (v49 ^ 0xFC) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v127[4 * (BYTE1(v71) ^ 0xBD)] ^ *(_DWORD *)&v124[4 * (v49 ^ 0x91)] ^ (v74 - 1430734211 - ((2 * v74) & 0x557174FA));
  LODWORD(v74) = *(_DWORD *)&v127[4 * (BYTE1(v76) ^ 0x10)];
  LODWORD(v49) = *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0x57)];
  LODWORD(v76) = v71 ^ (v51 >> 1);
  LODWORD(v119) = ((((v69 + 78) ^ BYTE4(v200)) ^ 3) - 1726037377) ^ v200 ^ *(_DWORD *)&v124[4 * (((v69 + 78) ^ BYTE4(v200)) ^ 0x6E)] ^ (v117 + 904237698 - ((2 * v117) & 0x6BCB2504));
  LODWORD(v71) = v49 ^ HIDWORD(v197) ^ ((_DWORD)v53 - 1430734211 - ((2 * (_DWORD)v53) & 0x557174FA));
  LODWORD(v49) = (v76 - ((2 * v76) & 0xC0D5D59C) - 529863986) ^ v199;
  LODWORD(v76) = *(_DWORD *)(v122 + 4 * (BYTE3(v49) ^ 0xD));
  HIDWORD(v51) = ~(_DWORD)v76;
  LODWORD(v51) = v76 ^ 0x1FE9DC38;
  LODWORD(v77) = v74 ^ HIDWORD(v199) ^ v77;
  LODWORD(v117) = ((v77 ^ 0xA1)
                 - 821799678
                 + ((2 * (v77 ^ 0xA1) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v124[4 * (v77 ^ 0xCC)];
  LODWORD(v53) = *(_DWORD *)&v121[4 * (BYTE2(v119) ^ 0xDB)] ^ ((BYTE2(v119) ^ 0x87)
                                                             + 385848927
                                                             - ((2 * (WORD1(v119) ^ 0x3A87)) & 0xBE)) ^ (v51 >> 1);
  LODWORD(v117) = (v117 - 1430734211 - ((2 * v117) & 0x557174FA)) ^ *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0xDE)];
  LODWORD(v76) = ((v119 ^ 0x9E)
                - 821799678
                + ((2 * (v119 ^ 0x9E) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v124[4 * (v119 ^ 0xF3)];
  LODWORD(v69) = v76 - 1430734211 - ((2 * v76) & 0x557174FA);
  LODWORD(v76) = v117 + 385848927 - ((2 * v117) & 0x2DFF2CBE);
  LODWORD(v117) = ((_DWORD)v53 - 1430734211 - ((2 * (_DWORD)v53) & 0x557174FA)) ^ *(_DWORD *)&v127[4
                                                                                                 * (BYTE1(v77) ^ 0x57)];
  LODWORD(v74) = ((v71 ^ 0x740CBC3A) >> 16);
  LODWORD(v63) = v74 + 385848927 - (((v71 ^ 0x740CBC3A) >> 15) & 0xBE);
  v130 = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0x37));
  HIDWORD(v51) = ~v130;
  LODWORD(v51) = v130 ^ 0x1FE9DC38;
  v131 = v51 >> 1;
  LODWORD(v119) = *(_DWORD *)(v122 + 4 * (BYTE3(v119) ^ 0x3A));
  HIDWORD(v51) = ~(_DWORD)v119;
  LODWORD(v51) = v119 ^ 0x1FE9DC38;
  LODWORD(v119) = *(_DWORD *)&v127[4 * ((unsigned __int16)((unsigned __int16)v71 ^ 0xBC3A) >> 8)] ^ BYTE2(v77) ^ *(_DWORD *)&v121[4 * (BYTE2(v77) ^ 0xF6)] ^ (v51 >> 1);
  LODWORD(v119) = ((v49 ^ 0xDE) - 1726037377) ^ HIDWORD(v198) ^ *(_DWORD *)&v124[4
                                                                                                * (v49 ^ 0xB3)] ^ ((v119 ^ 0xBC472C88) + 904237698 - 2 * ((v119 ^ 0xBC472C88) & 0x35E59286 ^ v119 & 4));
  LODWORD(v53) = *(_DWORD *)(v122 + 4 * (BYTE3(v77) ^ 0x7C));
  HIDWORD(v51) = ~(_DWORD)v53;
  LODWORD(v51) = v53 ^ 0x1FE9DC38;
  LODWORD(v71) = ((v71 ^ 0x3A) - 1726037377) ^ HIDWORD(v196) ^ *(_DWORD *)&v124[4
                                                                                               * (v71 ^ 0x57)] ^ (v117 + 904237698 - ((2 * v117) & 0x6BCB2504));
  LODWORD(v117) = *(_DWORD *)&v121[4 * (BYTE2(v49) ^ 0xEC)] ^ v197 ^ BYTE2(v49) ^ v131 ^ v76;
  LODWORD(v49) = *(_DWORD *)&v127[4 * (BYTE1(v49) ^ 0xA)] ^ v198 ^ v63 ^ *(_DWORD *)&v121[4 * (v74 ^ 0x5C)] ^ (v51 >> 1) ^ v69;
  v132 = v117 ^ 0xFA64A573;
  LODWORD(v76) = ((v117 ^ 0x73) - 821799678 + ((2 * (v117 ^ 0xFA64A573) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v124[4 * (v117 ^ 0x1E)];
  LODWORD(v53) = *(_DWORD *)(v122 + 4 * (BYTE3(v119) ^ 0x5B));
  HIDWORD(v51) = ~(_DWORD)v53;
  LODWORD(v51) = v53 ^ 0x1FE9DC38;
  LODWORD(v69) = v76 - 1430734211 - ((2 * v76) & 0x557174FA);
  LODWORD(v76) = (v51 >> 1) ^ *(_DWORD *)&v124[4 * (v71 ^ 0x1F)] ^ ((v71 ^ 0x72)
                                                                                   - 821799678
                                                                                   + ((2 * (v71 ^ 0x72)
                                                                                     + 254) & 0x104 ^ 0xDDF6FBFF));
  LODWORD(v53) = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0x28));
  HIDWORD(v51) = ~(_DWORD)v53;
  LODWORD(v51) = v53 ^ 0x1FE9DC38;
  LODWORD(v63) = v51 >> 1;
  LODWORD(v117) = *(_DWORD *)(v122 + 4 * (BYTE3(v117) ^ 0xB9));
  HIDWORD(v51) = ~(_DWORD)v117;
  LODWORD(v51) = v117 ^ 0x1FE9DC38;
  LODWORD(v117) = v51 >> 1;
  LODWORD(v53) = *(_DWORD *)(v122 + 4 * (BYTE3(v49) ^ 0xB4));
  HIDWORD(v51) = ~(_DWORD)v53;
  LODWORD(v51) = v53 ^ 0x1FE9DC38;
  LODWORD(v117) = v117 ^ *(_DWORD *)&v124[4 * (v49 ^ 0x8B)] ^ ((v49 ^ 0xE6)
                                                                              - 821799678
                                                                              + ((2 * (v49 ^ 0xE6) + 254) & 0x104 ^ 0xDDF6FBFF));
  v133 = BYTE2(v119) ^ 0x95;
  v134 = v133 + 385848927 - 2 * ((BYTE2(v119) ^ 0x95) & 0x7F ^ WORD1(v119) & 0x20);
  v135 = v119;
  LODWORD(v107) = (v119 ^ 0xF4)
                - 821799678
                + ((2 * (v119 ^ 0xF4) + 254) & 0x104 ^ 0xDDF6FBFF);
  LODWORD(v77) = ((BYTE2(v71) ^ 0x14) + 385848927 - ((2 * ((v71 >> 16) ^ 0x2814)) & 0xBE)) ^ v195 ^ *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0x1F)] ^ (v117 - 1430734211 - ((2 * v117) & 0x557174FA)) ^ *(_DWORD *)&v121[4 * (BYTE2(v71) ^ 0x48)];
  LODWORD(v119) = *(_DWORD *)&v127[4 * BYTE1(v132)] ^ v196 ^ ((BYTE2(v49) ^ 0x59)
                                                            + 385848927
                                                            - ((2 * (WORD1(v49) ^ 0xB459)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v49) ^ 5)] ^ (v76 - 1430734211 - ((2 * v76) & 0x557174FA));
  LODWORD(v71) = (BYTE2(v132) + 385848927 - ((v132 >> 15) & 0xBE)) ^ HIDWORD(v195) ^ ((v51 >> 1)
                                                                                    - 1430734211
                                                                                    - ((2 * (v51 >> 1)) & 0x557174FA)) ^ *(_DWORD *)&v124[4 * (v135 ^ 0x99)] ^ *(_DWORD *)&v127[4 * (BYTE1(v71) ^ 0x12)] ^ v107 ^ *(_DWORD *)&v121[4 * (BYTE2(v132) ^ 0x5C)];
  LODWORD(v49) = *(_DWORD *)&v127[4 * (BYTE1(v49) ^ 0x34)] ^ HIDWORD(v194) ^ *(_DWORD *)&v121[4 * (v133 ^ 0x5C)] ^ v69 ^ v134 ^ v63;
  v136 = *(_DWORD *)(v122 + 4 * (BYTE3(v49) ^ 0xEB));
  HIDWORD(v51) = ~v136;
  LODWORD(v51) = v136 ^ 0x1FE9DC38;
  LODWORD(v69) = (v51 >> 1) - 1430734211 - ((2 * (v51 >> 1)) & 0x557174FA);
  LODWORD(v117) = ((BYTE2(v71) ^ 0x81) + 385848927 - ((2 * ((v71 >> 16) ^ 0x1481)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v71) ^ 0xDD)];
  LODWORD(v53) = ((v71 ^ 0x51)
                - 821799678
                + ((2 * (v71 ^ 0x51) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v124[4 * (v71 ^ 0x3C)];
  LODWORD(v74) = *(_DWORD *)&v121[4 * (BYTE2(v77) ^ 0xDB)] ^ ((BYTE2(v77) ^ 0x87)
                                                            + 385848927
                                                            - ((2 * (WORD1(v77) ^ 0x7787)) & 0xBE));
  v137 = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0x14));
  HIDWORD(v51) = ~v137;
  LODWORD(v51) = v137 ^ 0x1FE9DC38;
  LODWORD(v107) = v51 >> 1;
  v138 = *(_DWORD *)(v122 + 4 * (BYTE3(v119) ^ 0x9A));
  HIDWORD(v51) = ~v138;
  LODWORD(v51) = v138 ^ 0x1FE9DC38;
  v139 = *(_DWORD *)&v121[4 * (((v49 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v49 ^ 0xA87CE98B) >> 16) ^ ((_DWORD)v53 + 385848927 - ((2 * (_DWORD)v53) & 0x2DFF2CBE));
  LODWORD(v117) = *(_DWORD *)&v124[4 * (v49 ^ 0xE6)] ^ *(_DWORD *)&v127[4 * (BYTE1(v77) ^ 0xDE)] ^ ((v49 ^ 0x8B) - 821799678 + ((2 * (v49 ^ 0xA87CE98B) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ (v117 - 1430734211 - ((2 * v117) & 0x557174FA)) ^ (v51 >> 1);
  v140 = *(_DWORD *)(v122 + 4 * (BYTE3(v77) ^ 0x77));
  HIDWORD(v51) = ~v140;
  LODWORD(v51) = v140 ^ 0x1FE9DC38;
  LODWORD(v71) = *(_DWORD *)&v127[4 * (BYTE1(v71) ^ 0x34)] ^ v193 ^ ((BYTE2(v119) ^ 0xE9)
                                                                   + 385848927
                                                                   - ((2 * (WORD1(v119) ^ 0x9AE9)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v119) ^ 0xB5)] ^ ((v77 ^ 0x9E) - 821799678 + ((2 * (v77 ^ 0x9E) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ v69 ^ *(_DWORD *)&v124[4 * (v77 ^ 0xF3)];
  LODWORD(v53) = *(_DWORD *)&v127[4 * (BYTE1(v49) ^ 0xB)] ^ v192 ^ ((v119 ^ 0xA8)
                                                                  - 821799678
                                                                  + ((2 * (v119 ^ 0xA8) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v124[4 * (v119 ^ 0xC5)] ^ v107 ^ (v74 - 1430734211 - ((2 * v74) & 0x557174FA));
  LODWORD(v119) = *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0x2D)] ^ HIDWORD(v193) ^ (v51 >> 1) ^ (v139
                                                                                           - 1430734211
                                                                                           - ((2 * v139) & 0x557174FA));
  v141 = ((v53 ^ 0x2E0E654A) >> 16);
  LODWORD(v76) = *(_DWORD *)(v122 + 4 * ((v53 >> 24) ^ 0x6D));
  LODWORD(v74) = v141 + 385848927 - (((v53 ^ 0x2E0E654A) >> 15) & 0xBE);
  HIDWORD(v51) = ~(_DWORD)v76;
  LODWORD(v51) = v76 ^ 0x1FE9DC38;
  LODWORD(v76) = v51 >> 1;
  LODWORD(v77) = (v117 - 1850383618 - ((2 * v117) & 0x236AC5FC)) ^ v194;
  LODWORD(v117) = *(_DWORD *)&v121[4 * (v141 ^ 0x5C)];
  v142 = *(_DWORD *)(v122 + 4 * (BYTE3(v77) ^ 0xFD));
  LODWORD(v117) = v117 ^ (~v142 << 31) ^ (v142 >> 1) ^ v74;
  v143 = ((v53 ^ 0x4A) - 821799678 + ((2 * (v53 ^ 0x2E0E654A) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v124[4 * (v53 ^ 0x27)];
  LODWORD(v74) = *(_DWORD *)(v122 + 4 * (BYTE3(v119) ^ 0xAE));
  HIDWORD(v51) = ~(_DWORD)v74;
  LODWORD(v51) = v74 ^ 0x1FE9DC38;
  LODWORD(v69) = (v117 ^ 0xFF4EE1C) - 1430734211 - 2 * ((v117 ^ 0xFF4EE1C) & 0x2AB8BA7F ^ v117 & 2);
  LODWORD(v117) = (v51 >> 1) ^ *(_DWORD *)&v127[4 * (BYTE1(v77) ^ 0xA4)] ^ (v143 - 1430734211 - ((2 * v143) & 0x557174FA));
  LODWORD(v63) = v117 + 385848927 - ((2 * v117) & 0x2DFF2CBE);
  LODWORD(v117) = *(_DWORD *)&v121[4 * (BYTE2(v119) ^ 0x3A)] ^ v76 ^ *(_DWORD *)&v124[4 * (v77 ^ 0x4D)] ^ ((BYTE2(v119) ^ 0x66) + 385848927 - ((2 * (WORD1(v119) ^ 0xAE66)) & 0xBE)) ^ ((v77 ^ 0x20) - 821799678 + ((2 * (v77 ^ 0x20) + 254) & 0x104 ^ 0xDDF6FBFF));
  LODWORD(v76) = (v71 ^ 2)
               - 821799678
               + ((2 * (v71 ^ 0x3F162902) + 254) & 0x104 ^ 0xDDF6FBFF);
  LODWORD(v49) = ((v119 ^ 0xB3)
                + 1138195709
                + ((2 * (v119 ^ 0xB3) + 254) & 0xFA ^ 0xEFCEFBFF)) ^ *(_DWORD *)&v127[4 * (BYTE1(v53) ^ 0x65)];
  LODWORD(v49) = (v49 + 904237698 - ((2 * v49) & 0x6BCB2504)) ^ *(_DWORD *)&v124[4 * (v119 ^ 0xDE)];
  LODWORD(v53) = *(_DWORD *)&v121[4 * (BYTE2(v77) ^ 0x40)] ^ ((BYTE2(v77) ^ 0x1C)
                                                            + 385848927
                                                            - ((2 * (WORD1(v77) ^ 0xFD1C)) & 0xBE));
  LODWORD(v49) = (v53 ^ 0xD9E215AF ^ -(v53 ^ 0xD9E215AF) ^ ((v53 ^ v49 ^ 0x431D28D3)
                                                                                      + (v49 ^ 0x6500C283)
                                                                                      + 1))
               + (v49 ^ 0x6500C283);
  LODWORD(v53) = *(_DWORD *)(v122 + 4 * ((v71 ^ 0x3F162902) >> 24));
  HIDWORD(v51) = ~(_DWORD)v53;
  LODWORD(v51) = v53 ^ 0x1FE9DC38;
  LODWORD(v74) = *(_DWORD *)&v127[4 * (BYTE1(v71) ^ 0xCB)];
  LODWORD(v77) = ((v71 ^ 0x3F162902) >> 16) ^ v191 ^ *(_DWORD *)&v121[4 * (((v71 ^ 0x3F162902) >> 16) ^ 0x5C)] ^ v63;
  v144 = *(_DWORD *)&v124[4 * (v71 ^ 0x6F)];
  LODWORD(v71) = (v51 >> 1) ^ v70 ^ v49;
  v145 = v74 ^ HIDWORD(v191) ^ (v117 - 1430734211 - ((2 * v117) & 0x557174FA));
  LODWORD(v49) = *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0x7C)] ^ HIDWORD(v192) ^ v76 ^ v144 ^ v69;
  LODWORD(v119) = ((BYTE2(v49) ^ 0xE9) + 385848927 - ((2 * (WORD1(v49) ^ 0xB8E9)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v49) ^ 0xB5)];
  LODWORD(v69) = v119 - 1430734211 - ((2 * v119) & 0x557174FA);
  LODWORD(v74) = *(_DWORD *)(v122 + 4 * (BYTE3(v77) ^ 0x9D));
  HIDWORD(v51) = ~(_DWORD)v74;
  LODWORD(v51) = v74 ^ 0x1FE9DC38;
  LODWORD(v74) = v51 >> 1;
  LODWORD(v107) = *(_DWORD *)(v122 + 4 * (HIBYTE(v145) ^ 0x61));
  HIDWORD(v51) = ~(_DWORD)v107;
  LODWORD(v51) = v107 ^ 0x1FE9DC38;
  LODWORD(v117) = *(_DWORD *)&v124[4 * (v49 ^ 0xC5)] ^ *(_DWORD *)&v121[4 * (BYTE2(v77) ^ 0x28)] ^ ((v49 ^ 0xA8) - 821799678 + ((2 * (v49 ^ 0xA8) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ ((BYTE2(v77) ^ 0x74) + 385848927 - ((2 * (WORD1(v77) ^ 0x9D74)) & 0xBE)) ^ (v51 >> 1);
  v146 = v74 ^ ((BYTE2(v71) ^ 0xE6) + 385848927 - ((2 * ((v71 >> 16) ^ 0xB0E6)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v71) ^ 0xBA)];
  v147 = *(_DWORD *)(v122 + 4 * (BYTE3(v49) ^ 0xB8));
  HIDWORD(v51) = ~v147;
  LODWORD(v51) = v147 ^ 0x1FE9DC38;
  LODWORD(v74) = ((BYTE2(v145) ^ 8) + 385848927 - ((2 * (HIWORD(v145) ^ 0x6108)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v145) ^ 0x54)] ^ *(_DWORD *)&v124[4 * (v71 ^ 0x29)] ^ ((v71 ^ 0x44) - 821799678 + ((2 * (v71 ^ 0x44) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ (v51 >> 1);
  LODWORD(v119) = *(_DWORD *)&v127[4 * (BYTE1(v71) ^ 0xDD)] ^ HIDWORD(v189) ^ (v117
                                                                             - 1430734211
                                                                             - ((2 * v117) & 0x557174FA));
  LODWORD(v71) = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0xB0));
  HIDWORD(v51) = ~(_DWORD)v71;
  LODWORD(v51) = v71 ^ 0x1FE9DC38;
  LODWORD(v71) = *(_DWORD *)&v127[4 * (BYTE1(v77) ^ 0xBD)] ^ v190 ^ (v74 - 1430734211 - ((2 * v74) & 0x557174FA));
  LODWORD(v77) = *(_DWORD *)&v127[4 * (BYTE1(v145) ^ 0x8F)] ^ HIDWORD(v188) ^ *(_DWORD *)&v124[4
                                                                                             * (v77 ^ 0xB4)] ^ ((v77 ^ 0xD9) - 821799678 + ((2 * (v77 ^ 0xD9) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ (v51 >> 1) ^ v69;
  LODWORD(v69) = ((v145 ^ 0x85)
                - 821799678
                + ((2 * (v145 ^ 0x85) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ v189 ^ *(_DWORD *)&v124[4 * (v145 ^ 0xE8)] ^ *(_DWORD *)&v127[4 * (BYTE1(v49) ^ 0x2D)] ^ (v146 - 1430734211 - ((2 * v146) & 0x557174FA));
  LODWORD(v117) = *(_DWORD *)(v122 + 4 * (BYTE3(v77) ^ 0x18));
  HIDWORD(v51) = ~(_DWORD)v117;
  LODWORD(v51) = v117 ^ 0x1FE9DC38;
  LODWORD(v63) = BYTE2(v71);
  v148 = ((BYTE2(v69) ^ 0x66) + 385848927 - ((2 * (WORD1(v69) ^ 0xAE66)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v69) ^ 0x3A)];
  LODWORD(v49) = ((v51 >> 1) + 385848927 - ((2 * (v51 >> 1)) & 0x2DFF2CBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v71) ^ 0x40)];
  LODWORD(v74) = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0xEF));
  HIDWORD(v51) = ~(_DWORD)v74;
  LODWORD(v51) = v74 ^ 0x1FE9DC38;
  LODWORD(v117) = (v51 >> 1) ^ *(_DWORD *)&v124[4 * (v77 ^ 0x90)] ^ ((v77 ^ 0xFD)
                                                                                    - 821799678
                                                                                    + ((2
                                                                                      * (v77 ^ 0xFD)
                                                                                      + 254) & 0x104 ^ 0xDDF6FBFF));
  v149 = v148 - 1430734211 - ((2 * v148) & 0x557174FA);
  v150 = *(_DWORD *)&v124[4 * (v119 ^ 0x27)] ^ ((v119 ^ 0x4A)
                                                               - 821799678
                                                               + ((2 * (v119 ^ 0x4A) + 254) & 0x104 ^ 0xDDF6FBFF));
  LODWORD(v53) = *(_DWORD *)(v122 + 4 * (BYTE3(v69) ^ 0xAE));
  HIDWORD(v51) = ~(_DWORD)v53;
  LODWORD(v51) = v53 ^ 0x1FE9DC38;
  v151 = (v51 >> 1) ^ *(_DWORD *)&v121[4 * (BYTE2(v77) ^ 0xF)] ^ (v150 + 385848927 - ((2 * v150) & 0x2DFF2CBE));
  LODWORD(v107) = *(_DWORD *)(v122 + 4 * (BYTE3(v119) ^ 0xDC));
  HIDWORD(v51) = ~(_DWORD)v107;
  LODWORD(v51) = v107 ^ 0x1FE9DC38;
  v152 = v49 - 1430734211 - ((2 * v49) & 0x557174FA);
  LODWORD(v49) = ((BYTE2(v119) ^ 0xE) + 385848927 - ((2 * (WORD1(v119) ^ 0xDC0E)) & 0xBE)) ^ v188 ^ *(_DWORD *)&v127[4 * (BYTE1(v69) ^ 0x7C)] ^ *(_DWORD *)&v121[4 * (BYTE2(v119) ^ 0x52)] ^ (v117 - 1430734211 - ((2 * v117) & 0x557174FA));
  v153 = *(_DWORD *)&v127[4 * (BYTE1(v77) ^ 0x1B)] ^ HIDWORD(v187) ^ *(_DWORD *)&v124[4 * (v71 ^ 0x4D)] ^ ((v71 ^ 0x20) - 821799678 + ((2 * (v71 ^ 0x20) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ v149 ^ (v51 >> 1);
  LODWORD(v117) = WORD1(v77);
  LODWORD(v119) = ((v69 ^ 0xB3)
                 - 821799678
                 + ((2 * (v69 ^ 0xB3) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ HIDWORD(v186) ^ *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0x65)] ^ *(_DWORD *)&v124[4 * (v69 ^ 0xDE)] ^ v152;
  LOBYTE(v77) = v119 ^ BYTE2(v71);
  LODWORD(v71) = *(_DWORD *)&v127[4 * (BYTE1(v71) ^ 0xA4)] ^ v187 ^ (v151 - 1430734211 - ((2 * v151) & 0x557174FA));
  LODWORD(v76) = v119 ^ v63 ^ 0x7641388B;
  LODWORD(v53) = *(_DWORD *)(v122 + 4 * BYTE3(v76));
  HIDWORD(v51) = ~(_DWORD)v53;
  LODWORD(v51) = v53 ^ 0x1FE9DC38;
  LODWORD(v53) = v51 >> 1;
  LODWORD(v107) = *(_DWORD *)(v122 + 4 * ((v49 ^ 0xF7E9CFA8) >> 24));
  HIDWORD(v51) = ~(_DWORD)v107;
  LODWORD(v51) = v107 ^ 0x1FE9DC38;
  LODWORD(v107) = v51 >> 1;
  v154 = (BYTE2(v76) + 385848927 - ((v76 >> 15) & 0xBE)) ^ *(_DWORD *)&v121[4 * (BYTE2(v76) ^ 0x5C)];
  LODWORD(v69) = v154 - 1430734211 - ((2 * v154) & 0x557174FA);
  v155 = *(_DWORD *)(v122 + 4 * ((v71 >> 24) ^ 0xE7));
  HIDWORD(v51) = ~v155;
  LODWORD(v51) = v155 ^ 0x1FE9DC38;
  LODWORD(v63) = v51 >> 1;
  LODWORD(v117) = v53 ^ *(_DWORD *)&v124[4 * ((v71 ^ v117) ^ 0x18)] ^ (((v49 ^ 0xF7E9CFA8) >> 16) + 385848927 - (((v49 ^ 0xF7E9CFA8) >> 15) & 0xBE)) ^ *(_DWORD *)&v121[4 * (((v49 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((~(2 * ((v71 ^ v117) ^ 0x75) + 842892542) | 0xDDF6FAFB) + ((v71 ^ v117) ^ 0x75) - 821799678);
  LODWORD(v117) = (v117 - 1430734211 - ((2 * v117) & 0x557174FA)) ^ *(_DWORD *)&v127[4 * (BYTE1(v153) ^ 0xEC)];
  v156 = v107 ^ *(_DWORD *)&v121[4 * (BYTE2(v153) ^ 0xA7)] ^ ((BYTE2(v153) ^ 0xFB)
                                                                          + 385848927
                                                                          - ((2 * (HIWORD(v153) ^ 0x57FB)) & 0xBE)) ^ (v76 - 821799678 + ((2 * v76 + 254) & 0x104 ^ 0xDDF6FBFF)) ^ *(_DWORD *)&v124[4 * (v77 ^ 0xE6)];
  LODWORD(v76) = *(_DWORD *)(v122 + 4 * (HIBYTE(v153) ^ 0x57));
  HIDWORD(v51) = ~(_DWORD)v76;
  LODWORD(v51) = v76 ^ 0x1FE9DC38;
  v157 = (v156 - 1430734211 - ((2 * v156) & 0x557174FA)) ^ *(_DWORD *)&v127[4 * (BYTE1(v71) ^ 0x6D)];
  LODWORD(v71) = (v71 >> 16) ^ 0xE731;
  LODWORD(v121) = *(_DWORD *)&v121[4 * (v71 ^ 0x5C)];
  LODWORD(v71) = ((v49 ^ 0xA8) - 821799678 + ((2 * (v49 ^ 0xF7E9CFA8) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ (v71 + 385848927 - ((2 * (_DWORD)v71) & 0xBE)) ^ *(_DWORD *)&v124[4 * (v49 ^ 0xC5)];
  LODWORD(v49) = *(_DWORD *)&v127[4 * (BYTE1(v49) ^ 0x2D)];
  v158 = *(_QWORD *)(v47 - 120);
  LODWORD(v119) = HIDWORD(v178) ^ *(_DWORD *)&v127[4 * (BYTE1(v119) ^ 0xDA)] ^ ((v71 ^ (v51 >> 1) ^ v121)
                                                                              - 1430734211
                                                                              - ((2
                                                                                * (v71 ^ (v51 >> 1) ^ v121)) & 0x557174FA));
  LODWORD(v127) = (v157 + 1283850939 - ((2 * v157) & 0x990C0576)) ^ v186;
  LODWORD(v71) = v49 ^ v185 ^ ((v153 ^ 0x2F)
                             - 821799678
                             + ((2 * (v153 ^ 0x2F) + 254) & 0x104 ^ 0xDDF6FBFF)) ^ v63 ^ *(_DWORD *)&v124[4 * (v153 ^ 0x42)] ^ v69;
  BYTE2(v124) = BYTE2(v119) ^ 0x8C;
  v159 = (char *)*(&off_1021378F0 + SHIDWORD(v177)) - 12;
  v160 = *(unsigned int *)(v47 - 128);
  v161 = (char *)*(&off_1021378F0 + (int)v160 - 1809) - 4;
  v162 = (char *)*(&off_1021378F0 + (int)v160 - 1717) - 4;
  v163 = (*(_DWORD *)&v162[4 * (BYTE2(v127) ^ 0x9E)] - 462198342) ^ (*(_DWORD *)&v159[4 * (v71 ^ 0xC9)]
                                                                   + 1690093291);
  LODWORD(v53) = *(_DWORD *)&v159[4 * (v119 ^ 0xC8)];
  LODWORD(v107) = *(_DWORD *)&v159[4 * (v127 ^ 0xA2)];
  LODWORD(v121) = (v117 + 1504166560 - ((2 * v117) & 0xB34F8540)) ^ HIDWORD(v185);
  v164 = v121 ^ 0x351D74B9;
  LODWORD(v159) = *(_DWORD *)&v159[4 * (((v117 - 96 - ((2 * v117) & 0x40)) ^ BYTE4(v185)) ^ 0xB9)];
  v165 = *(unsigned int *)&v161[4 * ((v127 >> 24) ^ 0xE7)];
  v166 = *(_DWORD *)&v161[4 * ((v71 >> 24) ^ 0xB8)];
  LODWORD(v117) = (*(_DWORD *)&v162[4 * (BYTE2(v71) ^ 0x38)] - 462198342) ^ (*(_DWORD *)&v161[4
                                                                                            * ((v119 ^ 0x898C5DC8) >> 24)]
                                                                           - 1572452526) ^ ((_DWORD)v107 + 1690093291);
  LODWORD(v121) = *(_DWORD *)&v161[4 * ((v121 >> 24) ^ 0x65)];
  v167 = (char *)*(&off_1021378F0 + (int)v178) - 12;
  LODWORD(v119) = *(_DWORD *)&v167[4 * (BYTE1(v119) ^ 0x61)] ^ ((_DWORD)v121 - 1572452526);
  LODWORD(v121) = *(_DWORD *)&v167[4 * (BYTE1(v127) ^ 0xA0)];
  v168 = *(unsigned int *)&v167[4 * (BYTE1(v71) ^ 0xE9)];
  LODWORD(v119) = (v163 - 1921196387 - ((2 * v163) & 0x1AF9BD3A)) ^ v119;
  v169 = *(unsigned int *)&v162[4 * BYTE2(v124)];
  LODWORD(v122) = *(_DWORD *)&v167[4 * BYTE1(v164)] ^ HIDWORD(v180) ^ (v117 - 1921196387 - ((2 * v117) & 0x1AF9BD3A));
  LODWORD(v127) = HIDWORD(a12) ^ HIDWORD(v185) ^ (v119 + 1504166560 - ((2 * v119) & 0xB34F8540));
  v170 = (uint64_t)*(&off_1021378F0 + (int)v160 - 1760);
  LODWORD(v119) = v121 ^ HIDWORD(a12) ^ ((_DWORD)v53
                                                     - ((2 * (_DWORD)v53 + 158961110) & 0x1AF9BD3A)
                                                     - 231103096) ^ (v166 - 1572452526) ^ (*(_DWORD *)&v162[4 * BYTE2(v164)]
                                                                                         - 462198342);
  *(_BYTE *)(v158 + 6) = *(_BYTE *)(v170 + (BYTE1(v122) ^ 0x99)) ^ 7;
  v171 = (char *)*(&off_1021378F0 + (int)v160 - 1746) - 8;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 256)) = (v171[BYTE2(v127) ^ 0xADLL] + 9) ^ 0xC5;
  v172 = (uint64_t)*(&off_1021378F0 + (int)v160 - 1819);
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 208)) = *(_BYTE *)(v172 + (v122 ^ 0xFCLL)) ^ 0xF7;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 240)) = (v171[BYTE2(v119) ^ 0x8CLL] + 9) ^ 0x47;
  v173 = (char *)*(&off_1021378F0 + (int)v160 - 1691) - 12;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 224)) = (v173[BYTE3(v122) ^ 0xDELL] - 52) ^ 0x1B;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 248)) = ((v171[BYTE2(v122) ^ 0x15]
                                              + ((v171[BYTE2(v122) ^ 0x15] + 9) ^ 0xDA)
                                              + 10) ^ 0xFE)
                                            + v171[BYTE2(v122) ^ 0x15]
                                            + 9;
  v174 = v177 ^ v168;
  LODWORD(v159) = v174 ^ (v169 - 462198342) ^ ((_DWORD)v159 + 1690093291) ^ (v165
                                                                           - ((2 * v165 + 76320420) & 0x1AF9BD3A)
                                                                           + 801318383);
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 232)) = *(_BYTE *)(v172 + (v159 ^ 5)) ^ 5;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 160)) = (v173[(v127 >> 24) ^ 0x4ELL] - 52) ^ 0xE6;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 152)) = (v173[BYTE3(v119) ^ 0x9CLL] - 52) ^ 0xB8;
  v175 = *(_QWORD *)(v47 - 184);
  *(_BYTE *)(v158 + v175) = (v173[(v159 >> 24) ^ 0x67] - 52) ^ 0x91;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 168)) = *(_BYTE *)(v172 + (v119 ^ 0xF2)) ^ 0xF;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 200)) = *(_BYTE *)(v170 + (BYTE1(v119) ^ 0x1ELL)) ^ 0xA4;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 176)) = *(_BYTE *)(v170 + (BYTE1(v159) ^ 0x33)) ^ 0xBD;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 192)) = *(_BYTE *)(v170 + (BYTE1(v127) ^ 0xBCLL)) ^ 0x73;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 144)) = *(_BYTE *)(v172 + (v127 ^ 0x9FLL)) ^ 0xF7;
  *(_BYTE *)(v158 + *(_QWORD *)(v47 - 136)) = (v171[BYTE2(v159) ^ 0xDLL] + 9) ^ 0x8E;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a42 + 8 * ((13 * ((((_DWORD)v175 - 1984344041 - 2 * (((_DWORD)v175 + 16) & 0x9B9500F ^ *(_DWORD *)(v47 - 212) & 8)) ^ 0x89B95007) < v46 + 83)) ^ ((int)v160 - 548))) - 8))(13, v174, v160, v169, v164, v165, v168, v160, a9, a10, a11, a12, v177, v178, v179, v180, v181, v182, v183,
           v184,
           v185,
           v186,
           v187,
           v188,
           v189,
           v190,
           v191,
           v192,
           v193,
           v194,
           v195,
           v196,
           v197,
           v198,
           v199,
           v200);
}

void sub_1003F5FB4()
{
  JUMPOUT(0x1003F3EACLL);
}

uint64_t sub_1003F5FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  uint64_t v45;
  unsigned int v46;
  _BOOL4 v47;

  v46 = a13 - ((a11 << ((14 * (a45 ^ 0x20)) ^ 0x2B)) & 0xF4277718) + 1275747293;
  v47 = ((2 * v46) & 0xEFECE5FE ^ 0xE4246518) + (v46 ^ 0x8DE5C973) + 2125180734 == 1990337085;
  return ((uint64_t (*)(void))(*(_QWORD *)(v45 + 8 * ((4 * v47) | (8 * v47) | a45)) - 4))();
}

uint64_t sub_1003F60B8(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((22
                                          * ((((917 * (a4 ^ 0x1CE)) ^ ((a3 + a2 + 134843649) < 8)) & 1) == 0)) ^ a4))
                            - 4))();
}

uint64_t sub_1003F6144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                                          + 8
                                                                                          * (int)(((262 * (a4 ^ 0x1CB)
                                                                                                  - 635)
                                                                                                 * (a7 >> 4 == 260007728)) ^ a4))
                                                                              - 4))(a1, a2, a3, a4, v7);
}

uint64_t sub_1003F6180(int a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v22;
  int v25;

  v9 = a4 ^ 0x7AF;
  v10 = (a3 + a2 + a1);
  v11 = *(_QWORD *)(v8 - 120);
  v12 = v10 + v11 + 1;
  v13 = (((v9 + 388737416) & 0xE8D4573E) - 1819) & (a3 + a2);
  v14 = v5 + v13 - v10;
  v15 = v13 + v5 + 1;
  v16 = v13 + v4 - v10 + 2;
  v17 = v13 + v4 + 3;
  v18 = v13 + v6;
  v19 = v18 - v10 + 4;
  v20 = v18 + 5;
  v22 = v15 > v11 && v14 < v12;
  if (v17 > v11 && v16 < v12)
    v22 = 1;
  v25 = v20 > v11 && v19 < v12 || v22;
  return (*(uint64_t (**)(void))(v7 + 8 * ((13 * v25) ^ v9)))();
}

uint64_t sub_1003F6228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((16 * (v6 >= ((a6 - 1370) ^ 0x1C0u))) | ((v6 >= ((a6 - 1370) ^ 0x1C0u)) << 9)) ^ (a6 - 1357)))
                            - ((a6 + 58) ^ 0x76CLL)))();
}

uint64_t sub_1003F6264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int8x16_t v49;
  uint64_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16x4_t v54;
  int8x16x4_t v55;

  *(_DWORD *)(v48 - 136) = v46 + 10;
  *(_DWORD *)(v48 - 144) = v46 + 9;
  v54.val[1].i64[0] = v46 & 0xF;
  v54.val[1].i64[1] = ((_BYTE)v46 - 1) & 0xF;
  v54.val[2].i64[0] = ((_BYTE)v46 + 14) & 0xF;
  v54.val[2].i64[1] = ((_BYTE)v46 + 13) & 0xF;
  v54.val[3].i64[0] = ((_BYTE)v46 + 12) & 0xF;
  v54.val[3].i64[1] = ((_BYTE)v46 + 11) & 0xF;
  v49.i64[0] = 0x7777777777777777;
  v49.i64[1] = 0x7777777777777777;
  v50 = v46 + ((a5 - 1922330156) & 0x72946CDF ^ v42);
  v54.val[0].i64[0] = ((_BYTE)v46 + (((_BYTE)a5 - 44) & 0xDF ^ v42)) & 0xF;
  v54.val[0].i64[1] = ((_BYTE)v46 + 1) & 0xF;
  v51.i64[0] = vqtbl4q_s8(v54, (int8x16_t)xmmword_101BA0570).u64[0];
  v55.val[0].i64[1] = *(_DWORD *)(v48 - 144) & 0xF;
  v55.val[1].i64[1] = ((_BYTE)v46 + 7) & 0xF;
  v55.val[2].i64[1] = ((_BYTE)v46 + 5) & 0xF;
  v55.val[3].i64[1] = ((_BYTE)v46 + 3) & 0xF;
  v55.val[0].i64[0] = *(_DWORD *)(v48 - 136) & 0xF;
  v55.val[1].i64[0] = ((_BYTE)v46 + 8) & 0xF;
  v55.val[2].i64[0] = ((_BYTE)v46 + 6) & 0xF;
  v55.val[3].i64[0] = (v46 + 4) & 0xF;
  v51.i64[1] = vqtbl4q_s8(v55, (int8x16_t)xmmword_101BA0570).u64[0];
  v52 = vrev64q_s8(vmulq_s8(v51, v49));
  *(int8x16_t *)(*(_QWORD *)(v48 - 120) - 15 + v50) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v44 + (v50 & 0xF) - 15), *(int8x16_t *)(*(_QWORD *)(v48 - 120) - 15 + v50)), veorq_s8(*(int8x16_t *)((v50 & 0xF) + v43 - 13), *(int8x16_t *)((v50 & 0xF) + v45 - 11))), vextq_s8(v52, v52, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a42 + 8 * ((1947 * ((v47 & 0xFFFFFFF0) == 16)) ^ a5)) - 4))();
}

void sub_1003F63DC()
{
  JUMPOUT(0x1003F6364);
}

uint64_t sub_1003F63E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (int)((((a8 + 678467447) & 0xD78F6F2E ^ 0x6EF) * (v8 != v9)) ^ a8))
                            - 12))();
}

uint64_t sub_1003F6428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((983 * ((v8 & 8) == ((a8 + 345) ^ 0x6F7) - 1834)) ^ (a8 + 345)))
                            - 8))();
}

uint64_t sub_1003F6464(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  char v54;
  uint64_t v55;
  int8x16x4_t v57;

  *(_DWORD *)(v50 - 128) = v48;
  *(_DWORD *)(v50 - 136) = v46;
  v51 = (a7 - 1900) & v46;
  v52 = *(_QWORD *)(v50 - 120) - 7;
  v53 = -v49;
  *(_DWORD *)(v50 - 144) = v51;
  v54 = v47 + a3 + a2;
  v55 = (a3 + a2 + a1 - v49);
  v57.val[0].i64[0] = v55 & 0xF;
  v57.val[0].i64[1] = ((_BYTE)v53 + v54 + 1) & 0xF;
  v57.val[1].i64[0] = ((_BYTE)v53 + v45) & 0xF;
  v57.val[1].i64[1] = ((_BYTE)v53 + v45 + ((a7 - 90) ^ 0x55)) & 0xF;
  v57.val[2].i64[0] = ((_BYTE)v53 + v54 + 14) & 0xF;
  v57.val[2].i64[1] = ((_BYTE)v53 + v54 + 13) & 0xF;
  v57.val[3].i64[0] = ((_BYTE)v53 + v54 + 12) & 0xF;
  v57.val[3].i64[1] = ((_BYTE)v53 + v54 + 11) & 0xF;
  *(int8x8_t *)(v52 + v55) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v43 + v57.val[0].i64[0] - 7), *(int8x8_t *)(v52 + v55)), veor_s8(*(int8x8_t *)(v57.val[0].i64[0] + v42 - 5), *(int8x8_t *)(v57.val[0].i64[0] + v44 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v57, (int8x16_t)xmmword_101BA0580), (int8x8_t)0x7777777777777777)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a42
                                                     + 8 * (((v53 != 8 - v51) | (4 * (v53 != 8 - v51))) ^ (a7 - 3)))
                                         - 4))((__n128)xmmword_101BA0580);
}

void sub_1003F6590()
{
  JUMPOUT(0x1003F64C4);
}

uint64_t sub_1003F65B4(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((a1 - 386) * (*(_DWORD *)(v2 - 136) == *(_DWORD *)(v2 - 144))) ^ a1))
                            - 8))();
}

uint64_t sub_1003F65E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (v7 + a5 + 124);
  *(_BYTE *)(*(_QWORD *)(v12 - 120) + v13) ^= *(_BYTE *)(v9 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v8 + 2) ^ *(_BYTE *)((v13 & 0xF) + v10 + 4) ^ (119 * (v13 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((221 * (a5 - 1 == v6)) ^ (a6 - 1745))) - 12))();
}

void sub_1003F6650()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1206753083)
    v1 = 1810546658;
  else
    v1 = -1810504646;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_1003F66B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v8;
  int v12;

  if (a2)
    v8 = a3 == 0;
  else
    v8 = 1;
  v12 = !v8 && a6 != 0 && a7 != 0 && a8 != 0;
  __asm { BR              X9 }
}

uint64_t sub_1003F6754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  *a6 = 0;
  *a7 = 0;
  a22 = 108757529 * (((&a21 | 0x956C4C34) - (&a21 & 0x956C4C34)) ^ 0x75F02E1F) - 504207030;
  v25 = sub_1003FCE54(&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * ((1168 * (a21 == v23)) ^ v22)) - 4))(v25);
}

uint64_t sub_1003F67E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,unsigned int a23,int a24)
{
  int v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v26 = 1759421093 * ((-260476592 - (&a21 | 0xF0797150) + (&a21 | 0xF868EAF)) ^ 0xBCFB3EFB);
  LODWORD(a21) = v26 ^ 0x11614C8C;
  HIDWORD(a21) = v26 ^ 0x6A6EA4D3;
  a24 = v26 ^ 0x4329A4C3;
  a22 = v26 + 405;
  sub_1003D1EB0((uint64_t)&a21);
  if (a23 < 0x49E67F9A)
    v27 = 1;
  else
    v27 = 2;
  HIDWORD(a11) = a23;
  LODWORD(a12) = v27;
  a23 = 915
      - 460628867
      * (((&a21 | 0xCD1B7496) - &a21 + (&a21 & 0x32E48B68)) ^ 0x818DF6EB);
  a21 = &STACK[0x1706FB9DE6F6FC94];
  sub_1003D5ADC((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((a22 == v24) | (2 * (a22 == v24)) | 0x140u)) - 4))(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1003F6930@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, unsigned int a17, uint64_t a18)
{
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  HIDWORD(v36) = a1;
  v24 = 1178560073 * (&a14 ^ 0xBA947862);
  a16 = a9;
  a17 = v24 ^ 0x40C;
  a15 = v24 + (a1 + 1160082033) * v22 + 359058754;
  sub_1003CFA7C((uint64_t)&a14);
  a16 = a9;
  a18 = v21;
  a17 = 1224239923 * ((((2 * &a14) | 0xDE3FB10) - &a14 + 2030961272) ^ 0x7442005F) + 1719;
  sub_1003ECB8C((uint64_t)&a14);
  LODWORD(v36) = 1064;
  v25 = 1178560073 * ((&a14 - 256234305 - 2 * (&a14 & 0xF0BA2CBF)) ^ 0x4A2E54DD);
  a17 = v25 ^ 0x40C;
  a16 = a9;
  a15 = v25 + 1160082353 * v20 + 359058754;
  sub_1003CFA7C((uint64_t)&a14);
  v26 = 1178560073 * ((1273442814 - (&a14 | 0x4BE731FE) + (&a14 | 0xB418CE01)) ^ 0xE8CB663);
  a16 = a9;
  a15 = v26 + 232;
  a17 = v26 ^ ((v19 ^ 0xFF1AABBB) + 1275059966 + ((2 * v19) & 0xFE355776));
  a18 = v18;
  sub_1003E7008((uint64_t)&a14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * ((42 * (a14 != 1810546658)) ^ 0x402u)))(v27, v28, v29, v30, v31, v32, v33, v34, v36, v23, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1003F6B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,uint64_t a22,unsigned int a23,unsigned int a24,int a25,int a26)
{
  int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;

  v28 = 460628867 * ((2 * (&a21 & 0x420AA0F0) - &a21 + 1039490828) ^ 0x7163DD71);
  a21 = &STACK[0x5640F59D98E42E7B];
  a22 = a16;
  a23 = v28 - 1590643716;
  a24 = v28 + a9 - 2024874147;
  a25 = (a12 ^ 0x7BFF5D0D) - v28 + ((a12 << ((a9 ^ 0x28) + 1)) & 2) - 13779200;
  v29 = sub_1003FD230((uint64_t)&a21);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((877 * (a26 == v26 + ((a9 - 808) | 0x40) - 320)) ^ a9)))(v29);
}

uint64_t sub_1003F6C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,unint64_t *a24,unint64_t *a25,unsigned int a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;

  a23 = a19;
  a24 = &STACK[0x18D77CDD39E8CD4A];
  a25 = &STACK[0x8DE5192BDC531A6];
  a26 = (v26 - 864) ^ (1225351577
                     * (((&a22 | 0xC4A46F41) - (&a22 & 0xC4A46F41)) ^ 0xE73EB757));
  v28 = ((uint64_t (*)(char *))((char *)*(&off_1021378F0 + v26 - 1228) - 4))(&a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * (((((v26 - 1132) | 0x21) + 636) * (a12 < 0x49E67F9A)) ^ v26))
                                          - 12))(v28);
}

uint64_t sub_1003F6D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _BYTE *a18, uint64_t a19, int a20,char a21,unsigned int a22,char *a23,_BYTE *a24)
{
  uint64_t v24;
  int v25;
  char *v26;
  void (*v27)(unsigned int *);
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;

  a22 = (v25 - 892) ^ (1374699841
                     * (((&a22 | 0x3D62B3F9) - (&a22 & 0x3D62B3F9)) ^ 0x5096ABF0));
  a23 = &a21 + v24;
  a24 = a18;
  v27(&a22);
  a22 = (v25 - 892) ^ (1374699841
                     * (((&a22 ^ 0xF12FB018 | 0xF7130791)
                       - (&a22 ^ 0xF12FB018)
                       + ((&a22 ^ 0xF12FB018) & 0x8ECF868)) ^ 0x6BC8AF80));
  a23 = v26;
  a24 = a18;
  v27(&a22);
  v29 = 2 * &a22;
  a22 = (v25 - 892) ^ (1374699841 * (((v29 | 0x6C375C36) - &a22 - 907783707) ^ 0x5BEFB612));
  a23 = a12;
  a24 = a18;
  v27(&a22);
  a22 = (v25 - 962) ^ (1755732067 * (((v29 | 0x580604F2) - &a22 + 1409088903) ^ 0x72C5BFA2));
  a23 = a18;
  v30 = sub_1003D11E8((uint64_t)&a22);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((((_DWORD)a24 == 1810546658) * (((v25 - 738406466) & 0x2C032F69) - 432)) ^ (v25 - 1099))))(v30);
}

uint64_t sub_1003F6EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  int v20;
  int v21;
  uint64_t v22;

  return (*(uint64_t (**)(void))(v22 + 8 * (((a20 == v20) * (2 * (v21 ^ 0x2A1) + 319)) ^ v21)))();
}

uint64_t sub_1003F6F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  int v21;
  _BYTE *v22;
  int v23;
  uint64_t v24;

  *v22 = v23 ^ 0x9D ^ a16 ^ 0xCA;
  return (*(uint64_t (**)(void))(v24 + 8 * ((86 * (a21 != v21)) ^ v23)))();
}

uint64_t sub_1003F6F58@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1021378F0 + v2 + 45))(a1 ^ (v1 - 727) ^ (v2 + 883) ^ (v2 + 349734680) & 0xEB277EF3, 1644418179) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((337 * v4) ^ v2)))();
}

uint64_t sub_1003F6FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;

  v23 = (a20 ^ v21) - ((2 * (a20 ^ v21)) & 0x81DBE93C) + 1089336478;
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((480
                                * (((v23 << ((v20 + 22) & 0xBF ^ 0x96)) & (((v20 - 1601) | 0x35) ^ 0xFFDEFE4B) ^ 0x81DAE83C)
                                 + (v23 ^ 0x3F028BE1)
                                 - 1744834572 != 401567603)) ^ v20)))();
}

uint64_t sub_1003F7074(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8
                                   * ((273 * (v3 + v2 + (((a2 ^ 0x982A3DA2) + 1742062897) ^ 0x801082E7) > 7)) ^ a2)))();
}

uint64_t sub_1003F70DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a5 ^ (250 * ((unint64_t)(v5 - a1) < 0x20))))
                            - ((a5 - 1086702895) & 0xD8EFFFFD ^ 0x982A3D39)))();
}

uint64_t sub_1003F712C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  char v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v7
                                                    + 8
                                                    * ((469
                                                      * (((v5 < 0x20) ^ ((a5 + 113) ^ (v6 + 114))) & 1)) ^ (a5 + 620))))(a1, 0);
}

uint64_t sub_1003F7164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v13 = v11 + v10 + a6;
  v14 = v8 + v13;
  v15 = *(_OWORD *)(v14 - 31);
  v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((1255 * ((v9 & 0xFFFFFFE0) == 32)) ^ (v7 + a7 + 504)))
                            - ((v7 + a7 + 1093) ^ 0x4D8)))();
}

void sub_1003F71C4()
{
  JUMPOUT(0x1003F7180);
}

uint64_t sub_1003F71D0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  void (*v4)(_BYTE *);
  int v5;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[4];
  unsigned int v12;
  uint64_t v13;

  *v7 = a1;
  *v8 = v2;
  v5 = v1 + 139;
  v12 = v1
      + 883
      + 535753261 * ((2 * (v11 & 0x29CE5148) - v11 + 1446096563) ^ 0x5CC5A09C)
      + 196;
  v13 = v10;
  v4(v11);
  v12 = v5
      + 535753261
      * (((v11 | 0xE9025295) - v11 + (v11 & 0x16FDAD68)) ^ 0xE3F65CBA)
      + 940;
  v13 = v9;
  v4(v11);
  return v3 ^ 0x6BEABFE2u;
}

void sub_1003F7450(uint64_t a1)
{
  int v1;

  v1 = (628203409 * ((1303688841 - (a1 | 0x4DB4B689) + (a1 | 0xB24B4976)) ^ 0x30C34545)) ^ *(_DWORD *)(a1 + 16) ^ 0x30F;
  __asm { BR              X6 }
}

uint64_t sub_1003F7658(uint64_t a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((((a8 ^ a2) * a3) ^ a4) + a6 != 32) * a5) ^ a8)) - 8))();
}

uint64_t sub_1003F768C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  *(_DWORD *)(a11 - 0x48247A308694276ELL) = -1055775792 - v16;
  v23 = 1224239923 * ((v21 + 256431370 - 2 * ((v21 - 136) & 0xF48D592)) ^ 0xFDFB2845);
  *(_DWORD *)(v21 - 136) = v23 ^ 0x6CBA9052;
  *(_DWORD *)(v21 - 120) = v23 + v20 - 690;
  *(_QWORD *)(v21 - 128) = v22;
  sub_1003BB538((_DWORD *)(v21 - 136));
  v24 = 1759421093 * (((v21 - 136) & 0x4EC92FE | ~((v21 - 136) | 0x4EC92FE)) ^ 0x486EDD55);
  *(_QWORD *)(v21 - 128) = v22;
  *(_DWORD *)(v21 - 136) = ((v17 << 6) & 0xDA7F7B40)
                         - v24
                         + ((32 * v17) ^ 0x6D3FBDBF)
                         + (((289 * (v20 ^ 0x43F) - 850) | 0x8A) ^ 0xB7F66F9B);
  *(_DWORD *)(v21 - 120) = v20 - v24 + 175;
  sub_1003EA0B4(v21 - 136);
  *(_DWORD *)(v21 - 120) = v20
                         + 1374699841 * ((((v21 - 136) | 0xC69197A2) - ((v21 - 136) & 0xC69197A2)) ^ 0xAB658FAB)
                         - 669;
  *(_QWORD *)(v21 - 136) = a16;
  *(_QWORD *)(v21 - 128) = &STACK[0x63F19B7CB7021DE4];
  sub_1003D022C(v21 - 136);
  *(_DWORD *)(v21 - 120) = v20
                         + 1178560073 * (((v21 - 136) & 0xC3F300DC | ~((v21 - 136) | 0xC3F300DC)) ^ 0x86988741)
                         - 65;
  *(_QWORD *)(v21 - 112) = v22;
  *(_QWORD *)(v21 - 128) = a16;
  v25 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 - 867)))(v21 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8 * ((167 * (*(_DWORD *)(v21 - 136) > 0x6F6368A2u)) ^ v20))
                                          - 8))(v25);
}

uint64_t sub_1003F78CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *(_DWORD *)(v19 - 120) = v18
                         + 1374699841
                         * ((((v19 - 136) | 0x729EA90D) - (v19 - 136) + ((v19 - 136) & 0x8D6156F0)) ^ 0x1F6AB104)
                         + 260;
  *(_QWORD *)(v19 - 136) = v16;
  *(_QWORD *)(v19 - 128) = a16;
  v20 = sub_1003D022C(v19 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * (v18 ^ (87 * (a11 < 1))))
                                          - (v18 + 421)
                                          + 572))(v20);
}

uint64_t sub_1003F7958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  *(_DWORD *)(v20 - 120) = v19 + 1374699841 * ((v20 - 136) ^ 0x6DF41809) - 161;
  *(_QWORD *)(v20 - 136) = a16;
  *(_QWORD *)(v20 - 128) = a13;
  sub_1003D022C(v20 - 136);
  v21 = 1759421093 * (((v20 - 136) & 0x91FB6DD7 | ~((v20 - 136) | 0x91FB6DD7)) ^ 0xDD79227C);
  *(_QWORD *)(v20 - 128) = v16;
  *(_DWORD *)(v20 - 120) = v19 - v21 + 683;
  *(_DWORD *)(v20 - 136) = 624307392 - v21;
  sub_1003EA0B4(v20 - 136);
  *(_QWORD *)(v20 - 128) = a16;
  *(_QWORD *)(v20 - 112) = v16;
  *(_DWORD *)(v20 - 120) = v19 + 1178560073 * ((v20 + 1967052084 - 2 * ((v20 - 136) & 0x753ED5BC)) ^ 0xCFAAADDE) + 443;
  v22 = v17(v20 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (int)(((*(_DWORD *)(v20 - 136) <= 0x6F6368A2u)
                                                             * (((v19 - 512) | 0x216) - 582)) ^ (v19 + 256)))
                                          - (v19 ^ 0x248)))(v22);
}

uint64_t sub_1003F7B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((194
                                          * ((a13 ^ 0xD3A9B3FF)
                                           + 1837092300
                                           + (((v14 ^ 0x1FE) - 1487707050) & (2 * a13))
                                           - 1093239245 >= ((v14 - 598) | 0x240u) + 2147483070)) ^ v14))
                            - 8))();
}

void sub_1003F86E0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BR              X9 }
}

uint64_t sub_1003F8770@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((1953 * (*(_DWORD *)(v2 - 0x31BC703A95C2A144) == (v1 ^ 0x6BEABF3C))) ^ v1)))();
}

uint64_t sub_1003F87BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x31BC703A95C2A14CLL) + 1531091907;
  v4 = *(_DWORD *)(v1 - 0x31BC703A95C2A150) + 232767392;
  v5 = v3 < 0x828D27AF;
  v6 = v3 > v4;
  if (v5 != v4 < 0x828D27AF)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v6 * (((266 * (v2 ^ 0x24C) - 504) | 0xC2) ^ 0xE0)) ^ v2)) - 12))();
}

uint64_t sub_1003F8860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;

  v7 = *(_QWORD *)(v4 - 0x31BC703A95C2A15CLL);
  v8 = *(unsigned __int8 *)(v7 + (v3 - 659196913)) ^ 0xC1;
  v9 = ((*(unsigned __int8 *)(v7 + (v3 - 659196916)) ^ 0xC1) << ((-77 * (v6 ^ 0x16)) ^ 0x7E)) | ((*(unsigned __int8 *)(v7 + (v3 - 659196915)) ^ 0xC1) << 16) | ((((v6 - 72) | 0x12) ^ *(unsigned __int8 *)(v7 + (v3 - 659196914)) ^ 0x1F) << 8) | v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((82
                                          * (((v2 + v9 - 2 * (v9 & (v2 + 29) ^ v8 & 0x1D) + 0x1000000) & 0xFFFFFF ^ 0xEABFE2)
                                           - (*(_DWORD *)(a1 + 32) ^ v5) == -522992128)) ^ v6))
                            - 8))();
}

uint64_t sub_1003F8954@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((22 * (((-1 - a2) >> 30) & 1)) ^ a1)))();
}

uint64_t sub_1003F8A0C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a1 ^ (482 * (v3 == v2))))
                            - ((a1 - 532) ^ (a1 + 1136240108) & 0xBC4657FF ^ 4)))();
}

uint64_t sub_1003F8A50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;
  int v4;

  *(_QWORD *)(*a1 - 0x3F8123127DDA1A64) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * ((328 * (*v2 == v3)) ^ v4)))();
}

void sub_1003F8A8C()
{
  _DWORD *v0;

  *v0 = -1810504489;
}

uint64_t sub_1003F8BE4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x63F19B7CB7021DA0) - 1851423053;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0) - 1851423053;
  v4 = (v2 < 813945033) ^ (v3 < 813945033);
  v5 = v2 > v3;
  if (v4)
    v6 = v2 < 813945033;
  else
    v6 = v5;
  v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((-2 - ((a1 | 0x5930FF1B) + (~(_DWORD)a1 | 0xA6CF00E4))) ^ 0x1C5B7886);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + (v1 & 0x7E581471))
                                        + 8 * (int)((v6 * ((v1 + 336638980) & 0xEBEF4F36 | 0xC9)) ^ v1)
                                        - 12)
                            - 12))();
}

uint64_t sub_1003F8CDC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v1 - 1990231688;
  v5 = v4 < (((v2 ^ 0x68D) + 576) ^ 0x283DC075);
  v6 = v3 - 1990231688 < v4;
  if (v3 - 1990231688 < 675136398 != v5)
    v6 = v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((117 * !v6) ^ v2)))();
}

uint64_t sub_1003F8D4C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v3 = v1 ^ 0x5BF;
  v4 = v3 - v2 + 1035767848;
  if (v2 + 1629599210 < 0)
    v4 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((76 * (v4 - 517884439 >= 0)) ^ v3)) - 12))();
}

uint64_t sub_1003F8DE8()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  int v3;
  _QWORD *v4;
  unsigned int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((605
                                          * (((((v3 + 157165563) & 0xF6A1D7FB) + v1) ^ *(_DWORD *)(*v2 + 4 * v5)) <= (*(_DWORD *)(*v4 + 4 * v5) ^ (v1 + 1019)))) ^ v3))
                            - 12))();
}

uint64_t sub_1003F8E48(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  int v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((2 * (v3 - 585)) ^ 0x30A) * (v4 < a2)) ^ (v3 - 585))) - 4))();
}

uint64_t sub_1003F8E74()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((76 * (v1 - 517884439 >= 0)) ^ v2 ^ 0x772)) - 12))();
}

_DWORD *sub_1003F8EC4(_DWORD *result)
{
  int v1;
  int v2;

  *result = (((v2 ^ 0x5BF) - 9) ^ 0xDEC6D2BD) - v1;
  return result;
}

uint64_t sub_1003F8EE8(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)*(&off_1021332F8 + ((110 * (*(_DWORD *)(a2 + 4) != 494613943)) ^ 0x11Cu) - 1) - 4))();
}

uint64_t sub_1003F8F28()
{
  return 4294925278;
}

uint64_t sub_1003F8F30(uint64_t a1, uint64_t a2)
{
  char v2;

  if (**(_BYTE **)(a2 + 8))
    v2 = -63;
  else
    v2 = -65;
  *(_BYTE *)(a1 + 88) = ((**(_BYTE **)(a2 + 8) != 0) ^ 0x4F) + v2;
  return 0;
}

void sub_1003F8F74(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x7BF53787356B072DLL) + 77788715;
  v3 = *(_DWORD *)(a1 + 20) + v1 + 345700633;
  v4 = v2 < 0x19C5A713;
  v5 = v2 > v3;
  if (v3 < 0x19C5A713 != v4)
    v5 = v4;
  __asm { BR              X9 }
}

uint64_t sub_1003F905C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + (v2 - 354595049));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((1768 * (((v4 - ((2 * v4) & 0x8E) + 1587210567) & 0x1F) != 24)) ^ v3))
                            - 8))();
}

uint64_t sub_1003F90B0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v5 = v3 + 1253739031 > (v1 + 1521650948);
  if ((v1 + 1521650948) < 0x5FDD3AFE != (v3 + 1253739031) < 0x5FDD3AFE)
    v5 = (v3 + 1253739031) < 0x5FDD3AFE;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((((v4 + 349) ^ 0x1AE) * !v5) ^ v4)) - 8))(a1, 2484462652);
}

uint64_t sub_1003F9120()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((53 * (*(char *)(v0 + (v2 + v3 + 380)) <= (char)(v4 + 37))) ^ v4))
                            - 12))();
}

uint64_t sub_1003F9198(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1
                                                               + 8
                                                               * ((1488
                                                                 * (((((v3 + 9) & 0x7F ^ 0x23EF77F3)
                                                                    + ((2 * (v3 + 9)) & 0xE6)) & 0x23EF7FFC) == ((v2 - 1133726556) & 0x43934F97 ^ 0x23EF70E2))) ^ (v2 - 349)))
                                                   - 8))(a1, 2484462652);
}

uint64_t sub_1003F9210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  _BOOL4 v13;
  _BOOL4 v14;

  v12 = v10 + a8 + 307829131;
  v13 = v12 < 0x4B6B4265;
  v14 = v12 > v8 + 1178637419;
  if ((v8 + 1178637419) < 0x4B6B4265 != v13)
    v14 = v13;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * ((52 * !v14) ^ v11)))(a1, 2484462652);
}

uint64_t sub_1003F9278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v9 ^ 0x5CC ^ (1570 * (a8 != 602896372)))) - 12))();
}

uint64_t sub_1003F9308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1991 * (v8 - 1 == a6)) ^ a7)) - 8))();
}

uint64_t sub_1003F938C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = a3 + v5 + v6 + v7 - 232822267 + 1162834980;
  v9 = v3 - 1999532353;
  v10 = (v9 < 0x8DFC3CB9) ^ (v8 < 0x8DFC3CB9);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0x8DFC3CB9;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((248 * !v11) ^ a2)) - 8))(a1, 2484462652);
}

uint64_t *sub_1003F940C@<X0>(uint64_t *result@<X0>, int a2@<W2>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = result[6];
  v9 = *result;
  v8 = result[1];
  *a3 = v5 - 864688044;
  *(_DWORD *)(v9 - 0x18E41690234F4F45) = v4;
  *(_DWORD *)(v7 - 0xCDF342D76DC35A7) = a2;
  *(_QWORD *)(v8 - 0x7764D5933262C1A7) = v3 + (v6 - 724669151);
  *((_DWORD *)result + 8) = 1810546658;
  return result;
}

void sub_1003F9484(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  _BOOL4 v5;

  v1 = 235795823 * (((_DWORD)a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  v2 = a1[9] + v1;
  v3 = *a1 ^ v1;
  v5 = (v3 & 0x30000000) == 0x10000000 || (v3 & 0x3F000000) == 822083584;
  __asm { BR              X11 }
}

uint64_t sub_1003F955C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, unsigned int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v15 = *(_QWORD *)(v12 + 8);
  v16 = 1755732067 * (((&a4 | 0xA5D81ADF) - (&a4 | 0x5A27E520) + 1512564000) ^ 0x7B1EA704);
  a9 = &STACK[0x38A20CAB80856761];
  a4 = &STACK[0x6D855C810B7BFC0B];
  a10 = (99 * (((&a4 | 0xDF) - (&a4 | 0x20) + 32) ^ 4)) ^ 0x59;
  a5 = ((v11 ^ 0xE6FA5A15) - 269636096 + ((2 * v11) & 0xADFFEE0A ^ 0x200B4A00)) ^ v16;
  a8 = v16 + 1172344077 + v14;
  a6 = v15;
  a7 = &STACK[0x7EC954F5752627A8];
  v17 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v14 - 1259)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8
                                                      * ((991 * (a11 == (((v14 - 1342) | 0x10A) ^ 0x6BEABEF8))) ^ v14))
                                          - 12))(v17);
}

uint64_t sub_1003F96A8()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((36 * (v2 ^ 0x10B) + 751) * (v1 == 822083584)) ^ v2))
                            - ((v2 + 1478) ^ 0x6E4)))();
}

uint64_t sub_1003F96E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((13 * ((((v10 - 1744) ^ (a10 + 4 >= a10)) & 1) == 0)) | v10))
                            - 4))();
}

uint64_t sub_1003F975C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((505
                                          * (((2 * v1) & 0xDD5FDFFE ^ 0x155911A0)
                                           + (v1 ^ 0x6503772F)
                                           + ((36 * (v0 ^ 0x4C4)) ^ 0x5E3) != 1857025926)) ^ v0))
                            - 12))();
}

uint64_t sub_1003F97D4(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = a2 + v3 + (((v2 - 262) | 0x30) ^ 0x915016B0) > 0xB;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((4 * v5) | (32 * v5)) ^ v2))
                            - ((v2 - 484004360) & 0x1CD94FCE ^ 0x542)))();
}

uint64_t sub_1003F9840(int a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((438
                                * (((a2 + v3 - (((a1 ^ 0x319) - 1445) & v2) + 1355) & 0xFFFFFFFC) <= a2 + v3 + 7 * (a1 ^ 0x673u))) ^ a1)))();
}

uint64_t sub_1003F9898@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (2 * v6) ^ 0x832u;
  a3.i32[0] = *(_DWORD *)(v8 + a1 + a2 - 865);
  *(_DWORD *)(a2 - 3 + (v4 + v3)) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)(((v5 != 4) * (((v8 + 1713273913) & 0x99E1817E) + 1456)) ^ v8))
                            - 4))();
}

uint64_t sub_1003F990C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 | 0x10A) ^ (975 * (v0 != 0xBAC98D0))))
                            - ((v1 | 0x10Au)
                             + 330)
                            + 608))();
}

uint64_t sub_1003F995C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v4 > 0x13057B94;
  *(_BYTE *)(a1 + (v7 - 331822898)) = *(_BYTE *)(v1 + (v7 - 331822898));
  if (v9 == v7 - 650949318 < v3)
    v9 = v7 - 650949318 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v9 * v6) ^ v2)) - ((v2 - 1185726894) & 0x46ACC2F7 ^ 0x260)))();
}

uint64_t sub_1003F99E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(a1 - 3 + (v3 + v2)) = *(_DWORD *)(v1 - 3 + (v3 + v2));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (((v5 == 4) * (v4 ^ 0x74F)) ^ (v4 - 1003))) - 4))(v4 ^ 0x454u);
}

uint64_t sub_1003F9A34(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((((((679 * (a1 ^ 0x118)) ^ (v1 == v2)) & 1) == 0) * (a1 + 478)) ^ a1))
                            - 4))();
}

uint64_t sub_1003F9A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;

  *(_BYTE *)(a1 + (v4 + v3)) = *(_BYTE *)(v1 + (v4 + v3));
  v7 = v4 - 1 != (((v5 - 750) | 4) ^ (v2 + 412));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((8 * v7) | (v7 << 6)) ^ (v5 - 1076))) - 4))();
}

uint64_t sub_1003F9AB8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(_QWORD *)(v1 + 16) != 0x6577379738C18B7ALL)
                                     * ((v0 + 724979098) & 0xD4C9B54F ^ 0x222)) ^ v0)))();
}

uint64_t sub_1003F9B04@<X0>(uint64_t a1@<X8>, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(a1 - 0x6577379738C18B7ALL) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((253 * (*(_QWORD *)(v3 + 24) != 0x6C482493D26EC5EDLL)) ^ ((v2 + 476) | 0x10E)))
                            - 12))();
}

void sub_1003F9B64(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 0x6C482493D26EC5EDLL) = v2;
  *(_DWORD *)(v1 + 32) = 1810546658;
}

uint64_t sub_1003F9BF8(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)*(&off_1021332F8 + ((124 * (*(_DWORD *)(a2 + 4) == 494613943)) ^ 0x520u) - 1) - 8))();
}

uint64_t sub_1003F9C38(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xBE7FEF89)
                       + 1207958392
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x112);
  return 0;
}

uint64_t sub_1003F9C70()
{
  return 4294925278;
}

void sub_1003F9C78(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v1 = *(_DWORD *)(a1 + 16) - 3804331 * ((a1 - 2 * (a1 & 0xF3A65B02) - 207201534) ^ 0x8D737EF4);
  v2 = (*(_BYTE *)a1 ^ (-85 * ((a1 - 2 * (a1 & 2) + 2) ^ 0xF4)));
  ((void (*)(char *, void (*)()))*(&off_1021378F0 + v1 - 570))((char *)*(&off_1021378F0 + (v1 ^ 0x30F)) - 12, sub_1003FCB68);
  v3 = *(_QWORD *)*(&off_1021378F0 + v1 - 639);
  v5 = v1 + 1755732067 * ((2 * (&v4 & 0x858AF40) - &v4 - 140029761) ^ 0x2961ED64) + 66;
  v4 = v3;
  sub_1003D5CB4((uint64_t)&v4);
  __asm { BR              X8 }
}

uint64_t sub_1003F9DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v20 = 1225351577 * (((&a16 | 0x82E44BD3) - (&a16 & 0x82E44BD3)) ^ 0xA17E93C5);
  a16 = v20 + v17 - 309;
  a17 = v20 ^ 0x11;
  sub_1003E9F0C((uint64_t)&a16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                                                  + 8 * (((**(_DWORD **)(v19 + 8 * (v17 - 650)) == 0) * ((v17 - 806029150) & 0x300B05DF ^ (v17 + 1238))) ^ (v17 - 615))))(v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_1003F9E60()
{
  uint64_t v0;
  _DWORD *v1;
  _DWORD *v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t (*v14)(uint64_t, _BYTE *, _DWORD *);
  int v15;
  unsigned int v16;
  uint64_t v17;
  _BYTE *v18;
  int v19;
  unsigned int v20;
  uint64_t result;
  uint64_t v22;
  _BYTE v23[30];
  _BYTE v24[140];

  v8 = v7 + 615;
  v9 = *(unsigned int **)(v5 + 8 * ((v7 + 615) ^ 0x301));
  v10 = *v9;
  v11 = *(_QWORD **)(v5 + 8 * (v8 - 689));
  v12 = (_BYTE *)*v11;
  v23[0] = *(_BYTE *)*v11 - 105;
  v23[1] = v12[1] - 105;
  v23[2] = v12[2] - 105;
  v23[3] = v12[3] - 105;
  v23[4] = v12[4] - 105;
  v23[5] = v12[5] - 105;
  v23[6] = v12[6] - 105;
  v23[7] = v12[7] - 105;
  v23[8] = v12[8] - 105;
  v23[9] = v12[9] - 105;
  v23[10] = v12[10] - 105;
  v23[11] = v12[11] - 105;
  v23[12] = v12[12] - 105;
  v23[13] = v12[13] - 105;
  v23[14] = v12[14] - 105;
  v23[15] = v12[15] - 105;
  v23[16] = v12[16] - 105;
  v23[17] = v12[17] - 105;
  v23[18] = v12[18] - 105;
  v23[19] = v12[19] - 105;
  v23[20] = v12[20] - 105;
  v23[21] = v12[21] - 105;
  v13 = (_BYTE *)*v11;
  v23[22] = v13[22] - 105;
  v23[23] = v13[23] - 105;
  v23[24] = v13[24] - 105;
  v23[25] = v13[25] - 105;
  v23[26] = v13[26] - 105;
  v23[27] = v13[27] - 105;
  v23[28] = v13[28] - 105;
  v23[29] = v13[29] - 105;
  v14 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v5 + 8 * (v8 ^ 0x3D6));
  v15 = v14(v10, v23, v1);
  v16 = ((2 * v15) & 0xB27F6EFA) + (v15 ^ 0x593FB77D);
  if (v16 != 1497347965)
  {
    if (v16 == 1497349067)
    {
      v17 = *v9;
      v18 = **(_BYTE ***)(v5 + 8 * (v3 - 732));
      v24[0] = *v18 - 83;
      v24[1] = v18[1] - 83;
      v24[2] = v18[2] - 83;
      v24[3] = v18[3] - 83;
      v24[4] = v18[4] - 83;
      v24[5] = v18[5] - 83;
      v24[6] = v18[6] - 83;
      v24[7] = v18[7] - 83;
      v24[8] = v18[8] - 83;
      v24[9] = v18[9] - 83;
      v24[10] = v18[10] - 83;
      v24[11] = v18[11] - 83;
      v24[12] = v18[12] - 83;
      v24[13] = v18[13] - 83;
      v24[14] = v18[14] - 83;
      v24[15] = v18[15] - 83;
      v24[16] = v18[16] - 83;
      v24[17] = v18[17] - 83;
      v24[18] = v18[18] - 83;
      v24[19] = v18[19] - 83;
      v19 = v14(v17, v24, v1);
      v20 = (2 * v19) & 0xFEF7EEEE;
      v16 = (v19 ^ 0xFF7BF777) + 1371516926;
    }
    else
    {
      v20 = -134483976;
    }
    __asm { BR              X8 }
  }
  *(_DWORD *)(v6 + 352) |= v3 - 784;
  *(_DWORD *)(v6 + 52) = 1158655773;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v5 + 8 * (v3 - 687)))(*v1, v6 + 340, v6 + 344, v6 + 348, v2);
  v22 = *(_QWORD *)(v0 + 8);
  *(_DWORD *)(*(_QWORD *)(v0 + 24) - 0x9466003216229CDLL) = *v1;
  *(_DWORD *)(v22 - 0x1A8FA111108FB322) = *v2;
  *(_DWORD *)(v0 + 20) = 1810546658;
  return result;
}

void sub_1003FA270(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 40) != 0x31BC703A95C2A15CLL
    && *(_QWORD *)(a1 + 16) != 0x72725D8527681A84
    && *(_QWORD *)a1 != 0x1C0D97DFD8A7AA08;
  v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BR              X9 }
}

uint64_t sub_1003FA380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * ((630
                                                                                           * (*(_DWORD *)(a6 - 0x31BC703A95C2A144) == v7 + 1810546191)) ^ v7)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1003FA3CC@<X0>(uint64_t a1@<X5>, int a2@<W8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>, __n128 a6@<Q3>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _BOOL4 v18;
  unsigned int v20;

  v20 = *(_DWORD *)(a1 - 0x31BC703A95C2A14CLL) + 1236504134;
  *(_DWORD *)(v15 - 140) = a2 ^ *(_DWORD *)(a13 + 24) ^ 0x135562F8 ^ (v13 + 110);
  v16.n128_u64[0] = 0x8282828282828282;
  v16.n128_u64[1] = 0x8282828282828282;
  v17.n128_u64[0] = 0xC1C1C1C1C1C1C1C1;
  v17.n128_u64[1] = 0xC1C1C1C1C1C1C1C1;
  v18 = v20 < 0x70FE1A3A;
  if (v18 == ((v13 - 59684751) & 0x38EB7DF ^ 0x70FE1BE9u) > 0x70FE1A3A)
    v18 = v20 > 0x70FE1A3A;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v14
                                                                                             + 8
                                                                                             * ((v18
                                                                                               * (((v13 + 29) | 0x20)
                                                                                                - 438)) ^ (v13 + 110)))
                                                                                 - 8))(a3, a4, a5, a6, v16, v17);
}

uint64_t sub_1003FA5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  int v26;
  uint64_t v27;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v27 + 8 * (v26 - 460)) - 8))(((3
                                                                                        * (((v26 - 211) | 0x4C0) ^ 0x55D)
                                                                                        + 8780296) & 0xFF7A07EE ^ 0x200003CE) & a26);
}

uint64_t sub_1003FB2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;

  *(_BYTE *)(*v21 + (v18 + a7)) = 65;
  v22 = v18 + 692048419 < (a18 + 1110081181);
  if ((a18 + 1110081181) < 0x67E94DAF != (v18 + 692048419) < 0x67E94DAF)
    v22 = (a18 + 1110081181) < 0x67E94DAF;
  return (*(uint64_t (**)(void))(v20 + 8 * ((38 * ((v22 ^ v19) & 1)) ^ v19)))();
}

uint64_t sub_1003FB364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  _BOOL4 v15;
  unsigned int v16;
  int v17;
  _BOOL4 v18;

  v15 = v11 < v7;
  v16 = ((v9 - 328) ^ (v10 + 468)) + v8;
  *(_BYTE *)(*v14 + (v8 + 1 + a7)) = -63;
  v17 = v15 ^ (v16 < v7);
  v18 = v16 < v11;
  if (!v17)
    v15 = v18;
  return (*(uint64_t (**)(void))(v13 + 8 * ((!v15 * v12) ^ v9)))();
}

void sub_1003FB3C0(uint64_t a1@<X5>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  unsigned int v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;

  *(_QWORD *)(v6 - 0x72725D8527681A84) = *v2;
  *(_DWORD *)(v7 - 0x1C0D97DFD8A7AA08) = a2;
  *v2 = 0;
  *(_QWORD *)(a1 - 0x31BC703A95C2A154) = 0x74AD680F74AD680FLL;
  v3 = *(_DWORD *)(a1 - 0x31BC703A95C2A148);
  *v5 = 659196916;
  v4 = ((2 * (v3 & 0xFFFFFFFE ^ 0x6FCB63F6)) & 0xFAC0C88) - (v3 & 0xFFFFFFFE ^ 0x6FCB63F6) - 131466821;
  *(_DWORD *)(a1 - 0x31BC703A95C2A148) = ((v4 & 0x9B1E61CC ^ 0x831E2045) + (v4 & 0x64E19E32 ^ 0x4018833) - 2) ^ 0x10FD323A;
  *(_DWORD *)(v9 + 28) = *v8;
}

void sub_1003FB504(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  _DWORD v6[2];
  uint64_t v7;

  v1 = *(_DWORD *)(a1 + 24) - 1225351577 * ((2 * (a1 & 0x2B9C6F1D) - a1 + 1415811298) ^ 0x77F948F4);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0) - 517884438 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0) - 517884438;
  else
    v3 = 517884438 - *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x63F19B7CB7021DA0);
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x63F19B7CB7021DA0) - 517884438 >= 0)
    v4 = *(_DWORD *)(v2 - 0x63F19B7CB7021DA0) - 517884438;
  else
    v4 = 517884438 - *(_DWORD *)(v2 - 0x63F19B7CB7021DA0);
  v7 = *(_QWORD *)(a1 + 8);
  v6[1] = (460628867 * ((v6 & 0x5D0BE78 | ~(v6 | 0x5D0BE78)) ^ 0xB6B9C3FA)) ^ (v1 + 1019);
  sub_1003DB9B8((uint64_t)v6);
  if (v3 >= v4)
    v5 = v4;
  else
    v5 = v3;
  __asm { BR              X15 }
}

uint64_t sub_1003FB6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _BOOL4 v21;

  v19 = 4 * (int)(v13 + v15 + ((v12 + 870876876) & 0xCC177B7F) - 863);
  v20 = (*(_DWORD *)(*(_QWORD *)(v18 - 0x63F19B7CB7021D9CLL) + v19) ^ v14)
      - (*(_DWORD *)(*(_QWORD *)(a10 - 0x63F19B7CB7021D9CLL) + v19) ^ v14);
  *(_DWORD *)(*(_QWORD *)(v17 - 0x63F19B7CB7021D9CLL) + v19) = v20 + v14 - (v16 & (2 * v20));
  v21 = v15 - 125280474 < (int)(v11 + 111104724);
  if (v11 > 0x7960AD2B != v15 - 125280474 < -2036378924)
    v21 = v11 > 0x7960AD2B;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((252 * !v21) ^ v12)) - 8))();
}

uint64_t sub_1003FB7EC()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 1333316762 < (int)(v3 + 1569701961);
  if (v3 > 0x22703FB6 != v2 + 1333316762 < (int)((v1 - 70) ^ 0xDD8FC350))
    v4 = v3 > 0x22703FB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1349 * v4) ^ v1)) - 4))();
}

uint64_t sub_1003FB864(unsigned int a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  _BOOL4 v14;
  uint64_t v15;
  int v16;
  int v17;
  _BOOL4 v18;

  v14 = v12 > a1;
  v15 = 4 * (v9 + v7);
  v16 = v2
      + 1941054641
      + (((v5 - 789) | 0x101) ^ (v8 + 253) ^ *(_DWORD *)(*(_QWORD *)(v13 - 0x63F19B7CB7021D9CLL) + v15));
  *(_DWORD *)(*(_QWORD *)(v11 - 0x63F19B7CB7021D9CLL) + v15) = v16 + v8 - (v10 & (2 * v16));
  v17 = v9 + 1 + v4;
  LODWORD(v15) = v14 ^ (v17 < v3);
  v18 = v17 < v6;
  if (!(_DWORD)v15)
    v14 = v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((70 * !v14) ^ v5)) - 4))();
}

uint64_t sub_1003FB958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  _BOOL4 v15;

  v13 = v11 + 228 + (v11 ^ 0xF) + v12 + 2010873446;
  v15 = v13 > 99775751 || v13 < a10 - 2047707896;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((987 * v15) ^ v11)) - 12))();
}

uint64_t sub_1003FB9B0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  _BOOL4 v24;

  v20 = 4 * (v17 + v15);
  v21 = v11 + 1941054642 + (*(_DWORD *)(*(_QWORD *)(a10 - 0x63F19B7CB7021D9CLL) + v20) ^ 0xD939BF89);
  *(_DWORD *)(*(_QWORD *)(v19 - 0x63F19B7CB7021D9CLL) + v20) = v21 + v16 - ((v21 << ((a1 ^ 0xE3) + 24)) & v18);
  v22 = v12 + v17 + 756;
  v24 = v22 > v13 || v22 < v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((15 * v24) ^ a1 ^ 0xF)) - 12))();
}

uint64_t sub_1003FBA98()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((v1 == ((v2 - 127) ^ 0x510u) + 0x719EFC438C4DD6D4)
                                          * (((v2 - 127) | 0x85) - 471)) ^ v2))
                            - 4))();
}

uint64_t sub_1003FBAE4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * ((239 * (v2 + v3 + (v1 ^ 0x595u) + 593 - 1089 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1003FBB1C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t v7;
  unsigned int v8;

  v6 = v3 - 1683831822 < 700037025;
  v7 = 4 * (((v1 - 1298228114) & 0x4D6165E2) - 1088);
  v8 = (*(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL) + v7) ^ 0xD939BF89) + 1;
  *(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL) + v7) = v8 + v2 - (v4 & (2 * v8));
  if (v3 - 1683831822 < 700037025)
    v6 = v3 - 1683831822 > -1447446622;
  return (*(uint64_t (**)(void))(v0 + 8 * ((2036 * !v6) ^ (v1 + 415))))();
}

void sub_1003FBBF0()
{
  JUMPOUT(0x1003FBB80);
}

uint64_t sub_1003FBBFC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0
                              + 8 * ((v1 + 106) | (4 * (v2 + v3 - 1 < ((v1 + 596187592) & 0xDC76E77F) + 2147482824)))))();
}

uint64_t sub_1003FBC74()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((365
                                     * (*(_DWORD *)(*(_QWORD *)(v5 - 0x63F19B7CB7021D9CLL)
                                                  + 4 * (((((v1 + 894657570) & 0xCAAC9AFF) - 106) ^ (v2 + 366)) + v4)) == v3)) ^ (v1 + 894657570) & 0xCAAC9AFF)))();
}

uint64_t sub_1003FBCD4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ (366 * ((v3 + v2 - 2) < 0x7FFFFFFF)))))();
}

uint64_t sub_1003FBD0C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((365 * (*(_DWORD *)(v2 + 4 * ((v3 ^ (v4 + 366)) + v6)) == v5)) ^ v1)))();
}

void sub_1003FBD3C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 - 0x63F19B7CB7021DA0) = (((v2 + v1) * (v0 - 369984849)) ^ 0x9FFE4B96)
                                         + 2128608896
                                         + ((2 * (v2 + v1) * (v0 - 369984849)) & 0x3FFC972C);
}

uint64_t sub_1003FBDC8(_DWORD *a1)
{
  unsigned int v1;

  v1 = 1178560073 * ((2 * (a1 & 0x7B1A53C3) - (_DWORD)a1 - 2065322948) ^ 0x3E71D45E);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1021378F0 + (int)(a1[1] + v1 - 715))
                                        + 8
                                        * (int)(((((*a1 - v1) ^ 0x6BEABFE2) - 1 < 0x63)
                                               * (((a1[1] + v1 - 827) | 0x42) + 44)) ^ (a1[1] + v1))
                                        - 12)
                            - 4))();
}

uint64_t sub_1003FBE5C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x27D4077E41C0C6A0) = (a2 ^ 0x9415401D)
                                                              - ((v2 + 2 * (a2 ^ 0x9415401D) - 85265) & 0xD7D57FC4)
                                                              + 1810504059;
  return result;
}

void sub_1003FBF18(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BR              X9 }
}

uint64_t sub_1003FBFAC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2034 * (*(_BYTE *)(v2 - 0x31BC703A95C2A148) & 1)) ^ a1))
                            - ((a1 - 124096463) & 0x7658E71)
                            - ((a1 - 301309345) & 0x11F59BF7 ^ 0xFFFFFFFFFFFFFC32)))();
}

uint64_t sub_1003FC018(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v2
                                                              + 8
                                                              * ((995
                                                                * (((v1 + 1502159370) & 0x2676DE9F ^ 0x8B52956E)
                                                                 + *(_DWORD *)(v3 - 0x31BC703A95C2A150) == 0)) ^ v1))
                                                  - ((v1 + 759) ^ 0x4E4)))(a1, *(_QWORD *)(v3 - 0x31BC703A95C2A15CLL));
}

void sub_1003FC098(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  unint64_t v7;
  _BYTE v8[72];

  v6 = v2 ^ 0x6AD;
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v3 + 8 * (v2 - 1074)))(**(unsigned int **)(v3 + 8 * (v2 ^ 0x473u)), a1, a2 + (v2 ^ 0x6ADu) + *(_DWORD *)(v5 - 0x31BC703A95C2A154) + 66);
  v7 = ((unint64_t)v8 ^ 0xBD5BEAEDDB7EFB7FLL)
     + 0x47FDFFDEFFD77D92
     + ((2 * (_QWORD)v8) & 0x7AB7D5DBB6FDF6F0);
  *(_BYTE *)(v5 - 0x31BC703A95C2A13DLL) = ((v7 - 17) ^ 0xBA) * v7;
  __asm { BR              X15 }
}

void sub_1003FC248()
{
  JUMPOUT(0x1003FC21CLL);
}

void sub_1003FC250()
{
  int v0;
  uint64_t v1;

  (*(void (**)(void))(v1 + 8 * (v0 ^ 0x4F6u)))();
  JUMPOUT(0x1003FC26CLL);
}

void sub_1003FC288(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((a1 - 1364022623 - 2 * (a1 & 0xAEB2AAA1)) ^ 0x1DCF1AF5);
  __asm { BR              X9 }
}

uint64_t sub_1003FC334()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 ^ 0x491) & 0x60E31AE3)))(200, 2354554103) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((v3 * ((((v0 ^ 0x491) + 1340220817) ^ 0x4FE22200) - 688)) ^ v0 ^ 0x491))
                            - (((v0 ^ 0x491) + 1340220817) & 0xB01DDDFF ^ 0x573)))();
}

uint64_t sub_1003FC3B4(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  int v10;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v6 + 8 * (int)(v7 & 0xD485FAFD)))(a1, 0);
  if ((_DWORD)result == 16)
  {
    v3 += 5;
    goto LABEL_7;
  }
  if ((_DWORD)result == 12)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 - 1381)))(a1);
    v10 = v3;
    goto LABEL_8;
  }
  if ((_DWORD)result)
  {
    v3 += 6;
    goto LABEL_7;
  }
  *v5 = a1;
  v10 = 311742309;
LABEL_8:
  *(_DWORD *)(v1 + 12) = v10 ^ v2;
  return result;
}

uint64_t sub_1003FC438(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)*(&off_1021332F0 + ((212 * (*(_DWORD *)(a2 + 4) != 494613942)) ^ 0x71u)) - 8))();
}

uint64_t sub_1003FC47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1229 * (**(_BYTE **)(a2 + 8) == 0)) ^ v3)) - 8))();
}

uint64_t sub_1003FC4A8()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  v2 = v1 - ((2 * v1 - 989227886) & 0xD5D97904) + 1299285707;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((371
                                          * ((v2 ^ 0x9597E865) + 2108669952 + ((2 * v2) & 0xFEF6A9CE ^ 0xD4D02904) != 2099975399)) ^ 0x2ECu))
                            - 8))();
}

uint64_t sub_1003FC544()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v4;

  v4 = v2 + v3 + ((v1 + 493230831) & 0x26FF ^ 0x84AFC2u) < (((v1 - 748) | 0x168) ^ 0x160u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((8 * v4) | (32 * v4)) ^ (v1 + 739))) - 12))();
}

uint64_t sub_1003FC5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * ((251
                                                                                  * ((((unint64_t)(a5 - v9 - 1167) < 0x20) ^ (a7 - 65)) & 1)) ^ a7))
                                                                    - 4))(a1, a2, (a7 + 191) ^ 0x6FCu, v8);
}

uint64_t sub_1003FC5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  unsigned int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * (((v7 >= ((a6 + 1533300054) & 0xA49BB5FE ^ 0x55C)) * (a6 + 643)) ^ a6))
                            - 4))();
}

uint64_t sub_1003FC638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v13 = v10 + v11 + v12;
  v14 = v8 + v13;
  v15 = *(_OWORD *)(v14 - 31);
  v16 = v7 + v13;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((((v9 & 0xFFFFFFE0) == 32) * (85 * ((a6 + 434269217) ^ 0x19E26E45) + 885)) ^ (a6 + 454)))
                            - 8))();
}

void sub_1003FC6AC()
{
  JUMPOUT(0x1003FC670);
}

uint64_t sub_1003FC6B8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(v4 + 1424) = (((v3 + 427820431) | 0x626848) ^ 0xFEB5EB78) + v2;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 520) = *(_QWORD *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1003FC87C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1003FC894(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 24);
  return 0;
}

void sub_1003FC8AC()
{
  unint64_t v0;
  uint64_t v1;
  char *v2;
  unsigned int v3;

  v0 = (qword_1022A15A8 - qword_1022A15B8) ^ (unint64_t)&v1;
  qword_1022A15B8 = 1045096823 * (v0 + 0x1159CE8E9813C2FLL);
  qword_1022A15A8 = 1045096823 * (v0 ^ 0xFEEA6317167EC3D1);
  v3 = 1407
     - 1759421093
     * ((2 * ((&v2 ^ 0x24E4C56D) & 0x13C2A2D) - (&v2 ^ 0x24E4C56D) + 2126763472) ^ 0xE95AA0E9);
  v2 = (char *)*(&off_1021378F0
               + ((119 * ((qword_1022A15A8 + qword_1022A15B8) ^ 0xD1)) ^ byte_101BA7780[byte_101BA3900[(119 * ((qword_1022A15A8 + qword_1022A15B8) ^ 0xD1))] ^ 0x8D])
               + 24)
     - 4;
  sub_1003FC288((uint64_t)&v2);
}

uint64_t sub_1003FC9E4(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t result;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v2 = 628203409 * (((a1 | 0xBB8CAEEC) - (a1 & 0xBB8CAEEC)) ^ 0x3904A2DF);
  v3 = *(_DWORD *)a1 + v2;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_DWORD *)(a1 + 20) + v2;
  v9 = 235795823
     * (((&v11 | 0xC7C4DB7) - &v11 + (&v11 & 0xF383B248)) ^ 0x98D104EE);
  v16 = v9 ^ (v3 - 368398343);
  v17 = v4;
  v12 = v9 + (v8 ^ 0x6B22D898) + 2125291520 + ((2 * v8) & 0x5EB7FF5E ^ 0x8B24E4E);
  v13 = v6;
  v14 = v5;
  v11 = v7;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_1021378F0 + (v3 ^ 0x15F557EF)) - 8))(&v11);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

uint64_t sub_1003FCB48(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 14;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 8);
  return 0;
}

void sub_1003FCB68()
{
  unsigned int v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;

  qword_1022A1518 = 1045096823 * ((qword_1022A1518 - (_QWORD)&v1 + qword_1022A15A8) ^ 0xFEEA6317167EC3D1);
  qword_1022A15A8 = qword_1022A1518;
  v2 = &unk_1023104D0;
  v3 = 1407 - 1759421093 * ((&v2 & 0xEE36C9AC | ~(&v2 | 0xEE36C9AC)) ^ 0xA2B48607);
  sub_1003FC288((uint64_t)&v2);
  v3 = 1407
     - 1759421093 * ((((&v2 | 0x3845AA30) ^ 0xFFFFFFFE) - (~&v2 | 0xC7BA55CF)) ^ 0x74C7E59B);
  v2 = *(&off_1021378F0
       + ((119 * ((qword_1022A15A8 + qword_1022A1518) ^ 0xD1)) ^ byte_101BAF9E0[byte_101BAB640[(119 * ((qword_1022A15A8 + qword_1022A1518) ^ 0xD1))] ^ 0x66])
       - 184);
  sub_1003FC288((uint64_t)&v2);
  v0 = 1225351577 * (&v2 ^ 0x239AD816);
  BYTE4(v2) = v0 ^ 0x10;
  LODWORD(v2) = v0 + 485;
  sub_1003E9F0C((uint64_t)&v2);
}

void sub_1003FCD48(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;
  unsigned int v3;

  v1 = *a1 ^ (535753261 * ((1711628207 - (a1 | 0x66055FAF) + (a1 | 0x99FAA050)) ^ 0x930EAE7F));
  v2 = *(_QWORD *)*(&off_1021378F0 + (int)(v1 ^ 0x7F7DFD3B));
  v3 = (3804331
      * ((((2 * (&v2 ^ 0x109B3193)) | 0x30565004) - (&v2 ^ 0x109B3193) - 405481474) ^ 0x76653C67)) ^ (v1 - 2138962737);
  sub_1003EF354((uint64_t)&v2);
}

uint64_t sub_1003FCE54(int *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = a1[1] - 108757529 * (a1 ^ 0xE09C622B);
  result = ((uint64_t (*)(char *, char *))*(&off_1021378F0 + (int)(v2 ^ 0xE1F269AA)))((char *)*(&off_1021378F0 + (int)(v2 ^ 0xE1F2691C)) - 4, (char *)*(&off_1021378F0 + (int)(v2 ^ 0xE1F2696F)) - 4);
  v4 = *(_DWORD *)*(&off_1021378F0 + (int)(v2 + 504207213));
  if ((_DWORD)result)
    v4 = -1810504356;
  *a1 = v4;
  return result;
}

uint64_t sub_1003FCEF8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1003FCF10(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_DWORD *)a1 ^ (235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E));
  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v5 = v1
     + 1225351577 * (((&v5 | 0xD03D750B) - (&v5 & 0xD03D750B)) ^ 0xF3A7AD1D)
     - 426522136;
  v6 = v2;
  v7 = v3;
  return ((uint64_t (*)(unsigned int *))*(&off_1021378F0 + (v1 ^ 0x196C393B)))(&v5);
}

uint64_t sub_1003FD004(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  _BOOL4 v6;
  BOOL v7;
  uint64_t v8;

  v1 = 1755732067 * ((2 * (result & 0x155053FA18C8728CLL) - result + 0x6AAFAC05E7378D73) ^ 0xB7040B3A39F130A8);
  v2 = *(_QWORD *)(result + 8);
  v3 = v2 - v1;
  v4 = *(_QWORD *)(result + 32);
  v5 = v4 == v2;
  v6 = v4 - v1 > v3;
  if (((*(_DWORD *)(result + 20) + 1755732067 * ((2 * (result & 0x18C8728C) - (_DWORD)result - 415789709) ^ 0x39F130A8)) & 1) != 0)
    v5 = v6;
  v7 = !v5;
  v8 = 4;
  if (!v7)
    v8 = 16;
  *(_DWORD *)result = *(_DWORD *)(result + v8) ^ (1755732067
                                                * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8)) ^ (*(_DWORD *)(result + 24) - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8));
  return result;
}

uint64_t sub_1003FD0AC(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  BOOL v7;
  uint64_t v8;

  v1 = 1374699841 * ((result - 2 * (result & 0xA8F7ECC532399345) - 0x5708133ACDC66CBBLL) ^ 0xA6FB72C95FCD8B4CLL);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_QWORD *)(result + 8) - v1;
  v4 = v2 >= v3;
  v5 = (uint64_t)v2 < (uint64_t)v3;
  v6 = !v4;
  if (((*(_DWORD *)(result + 24) + 1374699841 * (((_DWORD)result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) & 1) == 0)
    v5 = v6;
  v7 = !v5;
  v8 = 32;
  if (!v7)
    v8 = 28;
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 40) ^ (1374699841
                                                       * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) ^ *(_DWORD *)(result + v8) ^ (1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C));
  return result;
}

_BYTE *sub_1003FD13C(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1003FD1CC + 4 * byte_101BA7987[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_1003FD230(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t result;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;

  v2 = 460628867 * (((a1 | 0x167EA26) - a1 + (a1 & 0xFE9815D9)) ^ 0x4DF1685B);
  v3 = *(_DWORD *)(a1 + 20) - v2;
  v4 = *(_DWORD *)(a1 + 16) - v2;
  v5 = *(_DWORD *)(a1 + 24);
  v6 = *(_QWORD *)a1;
  v7 = 1755732067
     * (((&v9 ^ 0x591711CD) & 0xA483E257 | ~(&v9 ^ 0x591711CD | 0xA483E257)) ^ 0xDCADB1BE);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = v4 ^ v7 ^ 0xD80DC046;
  v11 = v7 ^ (v3 + 2024873835);
  v9 = v2 + v5 + v7 - 1393052043;
  v10 = v6;
  result = ((uint64_t (*)(int *))((char *)*(&off_1021378F0 + (int)(v3 ^ 0x874EE3F1)) - 8))(&v9);
  *(_DWORD *)(a1 + 28) = v14;
  return result;
}

uint64_t sub_1003FD384(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v2 = 1374699841 * (a1 ^ 0x6DF41809);
  v3 = *(_DWORD *)(a1 + 8) ^ v2;
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_DWORD *)(a1 + 56) + v2;
  v8 = 1224239923 * ((((2 * &v10) | 0x6A1D805E) - &v10 + 1257324497) ^ 0x47BD3DF8);
  v3 -= 1695027263;
  v10 = *(_QWORD *)a1;
  v11 = (v7 ^ 0xB9FD60C9) - v8 + ((2 * v7) & 0xDDF6FFFE ^ 0x8C043E6C) + 2067770176;
  v12 = v5;
  v13 = v4;
  v16 = v3 + v8 + 844;
  v14 = v6;
  result = ((uint64_t (*)(uint64_t *))*(&off_1021378F0 + v3))(&v10);
  *(_DWORD *)(a1 + 24) = v15;
  return result;
}

uint64_t sub_1003FD4C0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1003FD4D8(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;

  v1 = 235795823 * ((~result & 0x2A1D36B9A93A3D3 | result & 0xFD5E2C94656C5C2CLL) ^ 0xA1169950E3EEA8ALL);
  v2 = *(_QWORD *)(result + 8) + v1;
  v3 = *(_DWORD *)(result + 20) ^ v1;
  v4 = *(_QWORD *)(result + 32) - v1;
  v5 = *(_DWORD *)(result + 16) ^ v1;
  v6 = *(_DWORD *)(result + 40) - v1;
  v7 = *(_DWORD *)result ^ v1;
  v8 = v2 == v4;
  v9 = v2 >= v4;
  v10 = !v8;
  if ((v3 & 1) == 0)
    v9 = v10;
  if (v9)
    v11 = v5;
  else
    v11 = v6;
  *(_DWORD *)(result + 44) = v7 ^ v11;
  return result;
}

uint64_t sub_1003FD56C(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  int v7;
  uint64_t v8;

  v1 = 1178560073 * ((2 * (result & 0x64AC438940A5398ALL) - result + 0x1B53BC76BF5AC675) ^ 0xAFEC9E05CEBE17);
  v2 = *(_QWORD *)(result + 16) - v1;
  v3 = *(_QWORD *)(result + 40) + v1;
  v4 = v2 == v3;
  v5 = v2 > v3;
  v6 = v4;
  if (((*(_DWORD *)(result + 24) - 1178560073 * ((2 * (result & 0x40A5398A) - (_DWORD)result - 1084569995) ^ 0x5CEBE17)) & 1) != 0)
    v7 = v5;
  else
    v7 = v6;
  v4 = v7 == 0;
  v8 = 4;
  if (!v4)
    v8 = 8;
  *(_DWORD *)result = *(_DWORD *)(result + 28) ^ (1178560073
                                                * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17)) ^ (*(_DWORD *)(result + v8) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  return result;
}

uint64_t sub_1003FD610(uint64_t result)
{
  *(_DWORD *)result = 2147450879;
  *(_WORD *)(result + 4) = 0x7FFF;
  *(_DWORD *)(result + 6) = 2147450879;
  *(_WORD *)(result + 10) = 0x7FFF;
  *(_DWORD *)(result + 12) = 2147450879;
  *(_WORD *)(result + 16) = 0x7FFF;
  *(_DWORD *)(result + 18) = 2147450879;
  *(_WORD *)(result + 22) = 0x7FFF;
  *(_WORD *)(result + 28) = 0x7FFF;
  *(_DWORD *)(result + 24) = 2147450879;
  *(_WORD *)(result + 34) = 0x7FFF;
  *(_DWORD *)(result + 30) = 2147450879;
  *(_WORD *)(result + 40) = 0x7FFF;
  *(_DWORD *)(result + 36) = 2147450879;
  *(_WORD *)(result + 46) = 0x7FFF;
  *(_DWORD *)(result + 42) = 2147450879;
  *(_WORD *)(result + 52) = 0x7FFF;
  *(_DWORD *)(result + 48) = 2147450879;
  *(_WORD *)(result + 58) = 0x7FFF;
  *(_DWORD *)(result + 54) = 2147450879;
  *(_WORD *)(result + 64) = 0x7FFF;
  *(_DWORD *)(result + 60) = 2147450879;
  *(_WORD *)(result + 70) = 0x7FFF;
  *(_DWORD *)(result + 66) = 2147450879;
  *(_WORD *)(result + 76) = 0x7FFF;
  *(_DWORD *)(result + 72) = 2147450879;
  *(_WORD *)(result + 82) = 0x7FFF;
  *(_DWORD *)(result + 78) = 2147450879;
  *(_WORD *)(result + 88) = 0x7FFF;
  *(_DWORD *)(result + 84) = 2147450879;
  *(_WORD *)(result + 94) = 0x7FFF;
  *(_DWORD *)(result + 90) = 2147450879;
  *(_WORD *)(result + 100) = 0x7FFF;
  *(_DWORD *)(result + 96) = 2147450879;
  *(_WORD *)(result + 106) = 0x7FFF;
  *(_DWORD *)(result + 102) = 2147450879;
  *(_WORD *)(result + 112) = 0x7FFF;
  *(_DWORD *)(result + 108) = 2147450879;
  *(_WORD *)(result + 118) = 0x7FFF;
  *(_DWORD *)(result + 114) = 2147450879;
  *(_WORD *)(result + 124) = 0x7FFF;
  *(_DWORD *)(result + 120) = 2147450879;
  *(_WORD *)(result + 130) = 0x7FFF;
  *(_DWORD *)(result + 126) = 2147450879;
  *(_WORD *)(result + 136) = 0x7FFF;
  *(_DWORD *)(result + 132) = 2147450879;
  *(_WORD *)(result + 142) = 0x7FFF;
  *(_DWORD *)(result + 138) = 2147450879;
  *(_WORD *)(result + 148) = 0x7FFF;
  *(_DWORD *)(result + 144) = 2147450879;
  *(_WORD *)(result + 154) = 0x7FFF;
  *(_DWORD *)(result + 150) = 2147450879;
  *(_WORD *)(result + 160) = 0x7FFF;
  *(_DWORD *)(result + 156) = 2147450879;
  *(_WORD *)(result + 166) = 0x7FFF;
  *(_DWORD *)(result + 162) = 2147450879;
  *(_WORD *)(result + 172) = 0x7FFF;
  *(_DWORD *)(result + 168) = 2147450879;
  *(_WORD *)(result + 178) = 0x7FFF;
  *(_DWORD *)(result + 174) = 2147450879;
  *(_WORD *)(result + 184) = 0x7FFF;
  *(_DWORD *)(result + 180) = 2147450879;
  *(_WORD *)(result + 190) = 0x7FFF;
  *(_DWORD *)(result + 186) = 2147450879;
  return result;
}

uint64_t sub_1003FD724(__int16 a1, __int16 a2, __int16 a3, uint64_t a4, _WORD *a5)
{
  _WORD v6[3];

  v6[0] = a1;
  v6[1] = a2;
  v6[2] = a3;
  *a5 = 1;
  sub_1003FFA64((uint64_t)v6, 32, 1, a4);
  return 1;
}

uint64_t sub_1003FD764(int a1, int a2)
{
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;

  v2 = 2 * a1;
  v3 = v2 >= a2;
  if (v2 >= a2)
    v4 = a2;
  else
    v4 = 0;
  v5 = 2 * (v2 - v4);
  v6 = v5 >= a2;
  if (v5 < a2)
    v7 = 0;
  else
    v7 = a2;
  v8 = 2 * (v5 - v7);
  v9 = v8 >= a2;
  if (v8 >= a2)
    v10 = a2;
  else
    v10 = 0;
  v11 = 2 * (v8 - v10);
  v12 = (4 * v6) | (8 * v3) | (2 * v9) | (v11 >= a2);
  if (v11 < a2)
    v13 = 0;
  else
    v13 = a2;
  v14 = 2 * (v11 - v13);
  v15 = v14 >= a2;
  if (v14 >= a2)
    v16 = a2;
  else
    v16 = 0;
  v17 = 2 * (v14 - v16);
  v18 = (2 * v15) | (4 * v12) | (v17 >= a2);
  if (v17 < a2)
    v19 = 0;
  else
    v19 = a2;
  v20 = 2 * (v17 - v19);
  v21 = v20 >= a2;
  if (v20 >= a2)
    v22 = a2;
  else
    v22 = 0;
  v23 = 2 * (v20 - v22);
  v24 = (2 * v21) | (4 * v18) | (v23 >= a2);
  if (v23 < a2)
    v25 = 0;
  else
    v25 = a2;
  v26 = 2 * (v23 - v25);
  v27 = v26 >= a2;
  if (v26 >= a2)
    v28 = a2;
  else
    v28 = 0;
  v29 = 2 * (v26 - v28);
  v30 = (2 * v27) | (4 * v24) | (v29 >= a2);
  if (v29 < a2)
    v31 = 0;
  else
    v31 = a2;
  v32 = 2 * (v29 - v31);
  v33 = v32 >= a2;
  if (v32 >= a2)
    v34 = a2;
  else
    v34 = 0;
  v35 = 2 * (v32 - v34);
  v36 = (2 * v33) | (4 * v30) | (v35 >= a2);
  if (v35 < a2)
    v37 = 0;
  else
    v37 = a2;
  v38 = 2 * (v35 - v37);
  v39 = v38 >= a2;
  if (v38 >= a2)
    v40 = a2;
  else
    v40 = 0;
  v41 = 2 * (v38 - v40);
  v42 = (2 * v39) | (4 * v36) | (v41 >= a2);
  if (v41 < a2)
    v43 = 0;
  else
    v43 = a2;
  return (__int16)((a2 <= 2 * (v41 - v43)) | (unsigned __int16)(2 * v42));
}

uint64_t sub_1003FD8E0(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;

  if ((uint64_t)a1 < 1)
  {
    if (a1)
      return 0;
    else
      return 31;
  }
  else
  {
    v1 = a1 >> 30;
    if (a1 >> 30)
    {
      return 0;
    }
    else
    {
      do
      {
        v2 = a1 >> 29;
        a1 *= 2;
        LOWORD(v1) = v1 + 1;
      }
      while (!v2);
      return (__int16)v1;
    }
  }
}

uint64_t sub_1003FD924(int a1)
{
  int v1;

  if (a1 >= 0)
    LOWORD(v1) = a1;
  else
    v1 = -a1;
  if (a1 == -32768)
    LOWORD(v1) = 0x7FFF;
  return (__int16)v1;
}

uint64_t sub_1003FD940(uint64_t a1, int a2, __int16 *a3, _WORD *a4)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  int v30;
  __int16 *v31;
  uint64_t v32;
  uint64_t v33;
  int16x8_t *v34;
  uint64_t v35;
  const __int16 *v36;
  const __int16 *v37;
  _WORD *v38;
  __int16 *v39;
  uint64_t v40;
  uint64_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  __int16 *v45;
  uint64_t v46;
  const __int16 *v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  _WORD *v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _WORD v80[8];
  uint64_t v81;
  _BYTE v82[2];
  _BYTE v83[6];
  int16x8x3_t v84;
  int16x8x3_t v85;
  int16x8x3_t v86;
  int16x8x3_t v87;

  if (a2 > 32)
    return 0;
  v6 = sub_1003FD764(1, a2);
  if (a2 < 1)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    goto LABEL_28;
  }
  v7 = v6;
  v8 = (unsigned __int16)a2;
  if (a2 == 1)
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
LABEL_9:
    v31 = (__int16 *)(a1 + 6 * v9 + 4);
    v32 = (unsigned __int16)a2 - v9;
    do
    {
      v12 += *(v31 - 2) * (uint64_t)v7;
      v11 += *(v31 - 1) * (uint64_t)v7;
      v10 += *v31 * (uint64_t)v7;
      v31 += 3;
      --v32;
    }
    while (v32);
    goto LABEL_11;
  }
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v9 = (unsigned __int16)a2 & 0xFFFE;
  v28 = (__int16 *)(a1 + 6);
  v29 = v9;
  do
  {
    v26 += *(v28 - 3) * (uint64_t)v7;
    v27 += *v28 * (uint64_t)v7;
    v24 += *(v28 - 2) * (uint64_t)v7;
    v25 += v28[1] * (uint64_t)v7;
    v30 = v28[2];
    v22 += *(v28 - 1) * (uint64_t)v7;
    v28 += 6;
    v23 += v30 * (uint64_t)v7;
    v29 -= 2;
  }
  while (v29);
  v12 = v27 + v26;
  v11 = v25 + v24;
  v10 = v23 + v22;
  if (v9 != (unsigned __int16)a2)
    goto LABEL_9;
LABEL_11:
  if (a2 < 0x10)
  {
    v33 = 0;
LABEL_16:
    v38 = &v80[v33];
    v39 = (__int16 *)(a1 + 6 * v33 + 4);
    v40 = (unsigned __int16)a2 - v33;
    do
    {
      *v38++ = (*(v39 - 2) * *(v39 - 2) + *(v39 - 1) * *(v39 - 1) + *v39 * *v39) >> 11;
      v39 += 3;
      --v40;
    }
    while (v40);
    goto LABEL_18;
  }
  v33 = a2 & 0x30;
  v34 = (int16x8_t *)&v81;
  v35 = (unsigned __int16)a2 & 0xFFF0;
  v36 = (const __int16 *)a1;
  do
  {
    v37 = v36;
    v36 += 48;
    v84 = vld3q_s16(v37);
    v37 += 24;
    v85 = vld3q_s16(v37);
    v34[-1] = vshrn_high_n_s32(vshrn_n_s32(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v84.val[1].i8, *(int16x4_t *)v84.val[1].i8), *(int16x4_t *)v84.val[0].i8, *(int16x4_t *)v84.val[0].i8), *(int16x4_t *)v84.val[2].i8, *(int16x4_t *)v84.val[2].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v84.val[1], v84.val[1]), v84.val[0], v84.val[0]), v84.val[2], v84.val[2]), 0xBuLL);
    *v34 = vshrn_high_n_s32(vshrn_n_s32(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v85.val[1].i8, *(int16x4_t *)v85.val[1].i8), *(int16x4_t *)v85.val[0].i8, *(int16x4_t *)v85.val[0].i8), *(int16x4_t *)v85.val[2].i8, *(int16x4_t *)v85.val[2].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v85.val[1], v85.val[1]), v85.val[0], v85.val[0]), v85.val[2], v85.val[2]), 0xBuLL);
    v34 += 2;
    v35 -= 16;
  }
  while (v35);
  if (v33 != (unsigned __int16)a2)
    goto LABEL_16;
LABEL_18:
  if (a2 >= 8)
  {
    v42 = vdupq_n_s16(v12 >> 15);
    v43 = vdupq_n_s16(v11 >> 15);
    v41 = (unsigned __int16)a2 & 0xFFF8;
    v44 = vdupq_n_s16(v10 >> 15);
    v45 = (__int16 *)v82;
    v46 = v41;
    v47 = (const __int16 *)a1;
    do
    {
      v86 = vld3q_s16(v47);
      v47 += 24;
      v87.val[0] = vsubq_s16(v86.val[0], v42);
      v87.val[1] = vsubq_s16(v86.val[1], v43);
      v87.val[2] = vsubq_s16(v86.val[2], v44);
      vst3q_s16(v45, v87);
      v45 += 24;
      v46 -= 8;
    }
    while (v46);
    if (v41 == (unsigned __int16)a2)
      goto LABEL_25;
  }
  else
  {
    v41 = 0;
  }
  v48 = (unsigned __int16)a2 - v41;
  v49 = 6 * v41 + 4;
  v50 = (__int16 *)(a1 + v49);
  v51 = &v82[v49];
  do
  {
    *(v51 - 2) = *(v50 - 2) - (v12 >> 15);
    *(v51 - 1) = *(v50 - 1) - (v11 >> 15);
    v52 = *v50;
    v50 += 3;
    *v51 = v52 - (v10 >> 15);
    v51 += 3;
    --v48;
  }
  while (v48);
LABEL_25:
  v21 = 0;
  v20 = 0;
  v19 = 0;
  v18 = 0;
  v17 = 0;
  v16 = 0;
  v53 = 0;
  v54 = 0;
  v55 = 0;
  v56 = (__int16 *)(a1 + 4);
  v57 = (__int16 *)v83;
  v58 = v80;
  do
  {
    v21 += *(v57 - 1) * (uint64_t)*(v56 - 2);
    v20 += *v57 * (uint64_t)*(v56 - 1);
    v59 = v57[1];
    v19 += v57[1] * (uint64_t)*v56;
    v18 += *(v56 - 1) * (uint64_t)*(v57 - 1);
    v17 += *v56 * (uint64_t)*(v57 - 1);
    v16 += *v56 * (uint64_t)*v57;
    v60 = *v58++;
    v53 += v60 * (uint64_t)*(v57 - 1);
    v54 += v60 * (uint64_t)*v57;
    v56 += 3;
    v57 += 3;
    v55 += v60 * (uint64_t)v59;
    --v8;
  }
  while (v8);
  v15 = v53 >> 1;
  v14 = v54 >> 1;
  v13 = v55 >> 1;
LABEL_28:
  v61 = sub_1003FD8E0(v21);
  v62 = sub_1003FD8E0(v18);
  if (v61 >= v62)
    v61 = v62;
  v63 = sub_1003FD8E0(v17);
  if (v61 >= v63)
    v61 = v63;
  v64 = sub_1003FD8E0(v18);
  if (v61 >= v64)
    v61 = v64;
  v65 = sub_1003FD8E0(v20);
  if (v61 >= v65)
    v61 = v65;
  v66 = sub_1003FD8E0(v16);
  if (v61 >= v66)
    v61 = v66;
  v67 = sub_1003FD8E0(v17);
  if (v61 >= v67)
    v61 = v67;
  v68 = sub_1003FD8E0(v16);
  if (v61 >= v68)
    v61 = v68;
  v69 = sub_1003FD8E0(v19);
  if (v61 >= v69)
    v61 = v69;
  v70 = sub_1003FD8E0(v15);
  if (v61 >= v70)
    v61 = v70;
  v71 = sub_1003FD8E0(v14);
  if (v61 >= v71)
    v61 = v71;
  v72 = sub_1003FD8E0(v13);
  if (v61 >= v72)
    v73 = v72;
  else
    v73 = v61;
  if (v73 >= 32)
    LOBYTE(v73) = 32;
  v74 = v18 << v73 >> 18;
  a3[3] = v74;
  a3[1] = v74;
  v75 = v17 << v73 >> 18;
  a3[6] = v75;
  a3[2] = v75;
  v76 = v16 << v73 >> 18;
  a3[7] = v76;
  a3[5] = v76;
  *a3 = v21 << v73 >> 18;
  a3[4] = v20 << v73 >> 18;
  a3[8] = v19 << v73 >> 18;
  *a4 = v15 << v73 >> 18;
  a4[1] = v14 << v73 >> 18;
  a4[2] = v13 << v73 >> 18;
  if (*a3 >= 6 && a3[4] >= 6 && a3[8] > 5)
    return 4;
  return 0;
}

uint64_t sub_1003FDE40(__int16 *a1, int a2, __int16 *a3, __int16 *a4, _WORD *a5)
{
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v39;
  __int16 *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int16 *v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  __int16 v51;
  __int16 v52;
  __int16 v53[3];
  __int16 v54[3];
  __int16 v55;
  __int16 v56;
  __int16 v57;
  __int16 v58;
  __int16 v59;
  __int16 v60;

  v7 = a3[8];
  v8 = a3[5];
  v9 = v7 * (uint64_t)a3[4] - v8 * (uint64_t)v8;
  v10 = *a3;
  v11 = a3[6];
  v12 = *a3 * (uint64_t)v7 - v11 * (uint64_t)v11;
  v13 = a3[1];
  v14 = *a3 * (uint64_t)a3[4] - v13 * (uint64_t)v13;
  if (v12 <= v9)
    v15 = a3[8] * (uint64_t)a3[4] - a3[5] * (uint64_t)a3[5];
  else
    v15 = *a3 * (uint64_t)a3[8] - a3[6] * (uint64_t)a3[6];
  if (v14 <= v15)
    v16 = v15;
  else
    v16 = *a3 * (uint64_t)a3[4] - a3[1] * (uint64_t)a3[1];
  if (v16 >= 1)
  {
    v19 = a3[4];
    v50 = 0;
    v20 = v12 > v9;
    if (v14 > v15)
      v20 = 2;
    if (v20 == 2)
    {
      v57 = v10;
      v58 = v13;
      v55 = -v11;
      v59 = a3[3];
      v60 = v19;
      v56 = -v8;
      if (sub_1003FE270(&v57, 2, v54, v53))
      {
        sub_1003FE4E4((uint64_t)&v57, 2, (uint64_t)v54, (uint64_t)v53, (uint64_t)&v55, (uint64_t)&v51);
        v21 = v51 >> 2;
        *a4 = v51 >> 2;
        v22 = v52 >> 2;
        a4[1] = v52 >> 2;
        v24 = 2048;
        goto LABEL_19;
      }
    }
    else if (v20 == 1)
    {
      v57 = v7;
      v58 = v11;
      v55 = -v8;
      v59 = v11;
      v60 = v10;
      v56 = -v13;
      if (sub_1003FE270(&v57, 2, v54, v53))
      {
        sub_1003FE4E4((uint64_t)&v57, 2, (uint64_t)v54, (uint64_t)v53, (uint64_t)&v55, (uint64_t)&v51);
        v21 = v52 >> 2;
        *a4 = v52 >> 2;
        v22 = 2048;
        a4[1] = 2048;
        v23 = v51;
        goto LABEL_18;
      }
    }
    else
    {
      v57 = v19;
      v59 = v8;
      v55 = -v13;
      v58 = v8;
      v60 = v7;
      v56 = -v11;
      if (sub_1003FE270(&v57, 2, v54, v53))
      {
        sub_1003FE4E4((uint64_t)&v57, 2, (uint64_t)v54, (uint64_t)v53, (uint64_t)&v55, (uint64_t)&v51);
        v21 = 2048;
        *a4 = 2048;
        v22 = v51 >> 2;
        a4[1] = v51 >> 2;
        v23 = v52;
LABEL_18:
        v24 = v23 >> 2;
LABEL_19:
        a4[2] = v24;
        v25 = sub_1003FF9C0(v22 * (uint64_t)v22 + v21 * (uint64_t)v21 + v24 * (uint64_t)v24, &v50);
        v26 = (__int16)(v25 >> 8) * (uint64_t)*a4;
        *a4 = v26 >> 11;
        v27 = (__int16)(v25 >> 8) * (uint64_t)a4[1];
        a4[1] = v27 >> 11;
        v28 = (__int16)(v25 >> 8) * (uint64_t)a4[2];
        a4[2] = v28 >> 11;
        v29 = (uint64_t)(v26 << 37) >> 48;
        v30 = (uint64_t)(v27 << 37) >> 48;
        v31 = (int)v29 * (uint64_t)*a1 + (__int16)((int)v27 >> 11) * (uint64_t)a1[1];
        v32 = (uint64_t)(v28 << 37) >> 48;
        v33 = v31 + (__int16)((int)v28 >> 11) * (uint64_t)a1[2];
        if (a2 < 2)
        {
          LODWORD(v36) = v31 + (__int16)((int)v28 >> 11) * a1[2];
          LODWORD(v35) = v36;
        }
        else
        {
          if (a2 == 2)
          {
            v34 = 1;
            v35 = v33;
            v36 = v33;
          }
          else
          {
            v39 = 0;
            v34 = ((unsigned __int16)a2 - 1) | 1;
            v40 = a1 + 4;
            v41 = ((unsigned __int16)a2 - 1) & 0xFFFFFFFFFFFFFFFELL;
            v35 = v33;
            v42 = v33;
            v43 = v33;
            v44 = v33;
            do
            {
              v45 = (int)v29 * (uint64_t)*(v40 - 1)
                  + (int)v30 * (uint64_t)*v40
                  + (__int16)((int)v28 >> 11) * (uint64_t)v40[1];
              v46 = (int)v29 * (uint64_t)v40[2]
                  + (int)v30 * (uint64_t)v40[3]
                  + (__int16)((int)v28 >> 11) * (uint64_t)v40[4];
              if (v43 <= v45)
                v43 = (int)v29 * (uint64_t)*(v40 - 1)
                    + (int)v30 * (uint64_t)*v40
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[1];
              if (v44 <= v46)
                v44 = (int)v29 * (uint64_t)v40[2]
                    + (int)v30 * (uint64_t)v40[3]
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[4];
              if (v35 >= v45)
                v35 = (int)v29 * (uint64_t)*(v40 - 1)
                    + (int)v30 * (uint64_t)*v40
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[1];
              if (v42 >= v46)
                v42 = (int)v29 * (uint64_t)v40[2]
                    + (int)v30 * (uint64_t)v40[3]
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[4];
              LODWORD(v33) = v45 + v33;
              v39 += v46;
              v40 += 6;
              v41 -= 2;
            }
            while (v41);
            if (v43 <= v44)
              v36 = v44;
            else
              v36 = v43;
            if (v35 >= v42)
              v35 = v42;
            LODWORD(v33) = v39 + v33;
            if ((unsigned __int16)a2 - 1 == (((unsigned __int16)a2 - 1) & 0xFFFFFFFFFFFFFFFELL))
              goto LABEL_47;
          }
          v47 = &a1[3 * (int)v34 + 2];
          v48 = (unsigned __int16)a2 - v34;
          do
          {
            v49 = (int)v29 * (uint64_t)*(v47 - 2) + (int)v30 * (uint64_t)*(v47 - 1) + (int)v32 * (uint64_t)*v47;
            if (v36 <= v49)
              v36 = (int)v29 * (uint64_t)*(v47 - 2) + (int)v30 * (uint64_t)*(v47 - 1) + (int)v32 * (uint64_t)*v47;
            if (v35 >= v49)
              v35 = (int)v29 * (uint64_t)*(v47 - 2) + (int)v30 * (uint64_t)*(v47 - 1) + (int)v32 * (uint64_t)*v47;
            LODWORD(v33) = v49 + v33;
            v47 += 3;
            --v48;
          }
          while (v48);
        }
LABEL_47:
        *a5 = (v36 - v35) >> 11;
        v37 = 1;
        a4[3] = -(__int16)(((__int16)((int)v33 >> 11) * sub_1003FD764(1, a2)) >> 15);
        return v37;
      }
    }
  }
  return 0;
}

uint64_t sub_1003FE270(_WORD *a1, int a2, __int16 *a3, __int16 *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  unint64_t v10;
  _WORD *v11;
  _WORD *v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  _WORD *v18;
  _WORD *v19;
  unsigned __int16 v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  int v25;
  _WORD *v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;

  if (a2 < 1)
    return 1;
  v29 = v4;
  v30 = v5;
  v9 = 0;
  v28 = 0;
  v10 = (unsigned __int16)a2;
  v11 = a1;
  v12 = a1;
  while (2)
  {
    v27 = v11;
    if (v9)
    {
      v13 = v9;
      while (1)
      {
        v14 = (uint64_t)(__int16)a1[3 * v9 + v13] << 15;
        if (v9 >= 2)
        {
          v16 = 0;
          v17 = 0;
          do
          {
            v18 = &a1[3 * v9];
            v19 = &a1[3 * v13];
            v14 -= 4
                 * (__int16)v18[(unsigned __int16)(v9 - v16 - 1)]
                 * (uint64_t)(__int16)v19[(unsigned __int16)(v9 - v16 - 1)];
            v17 -= 4
                 * (__int16)v18[(unsigned __int16)(v9 - v16 - 2)]
                 * (uint64_t)(__int16)v19[(unsigned __int16)(v9 - v16 - 2)];
            v16 += 2;
          }
          while ((v9 & 0xFFFFFFFE) != v16);
          v14 += v17;
          LOWORD(v15) = v9 & 1;
          if ((v9 & 0xFFFFFFFE) == (_DWORD)v9)
            goto LABEL_13;
        }
        else
        {
          LOWORD(v15) = v9;
        }
        do
        {
          v20 = v15 - 1;
          v15 = (__int16)(v15 - 1);
          v14 -= 4 * (__int16)a1[3 * v9 + v20] * (uint64_t)(__int16)a1[3 * v13 + v20];
        }
        while (v15 > 0);
LABEL_13:
        if (v9 == v13)
        {
          if (v14 < 1)
            return 0;
          v21 = sub_1003FF9C0(v14, &v28);
          a3[v9] = HIWORD(v21);
          a4[v9] = (unsigned __int16)v21 >> 1;
          if (++v13 >= v10)
            goto LABEL_3;
        }
        else
        {
          a1[3 * v13++ + v9] = 2
                             * (WORD1(v14) * a3[v9]
                              + ((((v14 >> 1) & 0x7FFE) * a3[v9]) >> 15)
                              + ((((int)v14 >> 16) * a4[v9]) >> 15));
          if (v13 >= v10)
            goto LABEL_3;
        }
      }
    }
    v22 = 0;
    do
    {
      while (1)
      {
        v23 = (__int16)v12[v22];
        v24 = v23 << 15;
        if (!v22)
          break;
        *v11 = 2
             * ((v23 >> 1) * *a3
              + ((((v24 >> 1) & 0x4000) * *a3) >> 15)
              + (((v23 >> 1) * *a4) >> 15));
        v11 += 3;
        if (++v22 >= v10)
          goto LABEL_3;
      }
      if ((int)v23 < 1)
        return 0;
      v25 = sub_1003FF9C0(v24, &v28);
      *a3 = HIWORD(v25);
      *a4 = (unsigned __int16)v25 >> 1;
      ++v22;
      v11 += 3;
    }
    while (v22 < v10);
LABEL_3:
    ++v9;
    v12 += 3;
    v11 = v27 + 1;
    if (v9 != v10)
      continue;
    return 1;
  }
}

uint64_t sub_1003FE4E4(uint64_t result, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t i;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned __int16 v14;
  __int16 v15;
  unsigned __int16 v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  __int16 v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __int16 *v26;
  __int16 *v27;
  uint64_t v28;
  __int16 *v29;
  int v30;

  if (a2 >= 1)
  {
    for (i = 0; i != (unsigned __int16)a2; ++i)
    {
      if (i)
      {
        if (i >= 2)
        {
          v10 = 0;
          v11 = 0;
          v12 = 0;
          LOWORD(v9) = i - (i & 0xFFFE);
          do
          {
            v13 = result + 6 * i;
            v11 += *(__int16 *)(a6 + 2 * (unsigned __int16)(i - v10 - 1))
                 * *(__int16 *)(v13 + 2 * (unsigned __int16)(i - v10 - 1));
            v12 += *(__int16 *)(a6 + 2 * (unsigned __int16)(i - v10 - 2))
                 * *(__int16 *)(v13 + 2 * (unsigned __int16)(i - v10 - 2));
            v10 += 2;
          }
          while ((i & 0xFFFFFFFE) != v10);
          v7 = v12 + v11;
          if ((i & 0xFFFFFFFE) == (_DWORD)i)
            goto LABEL_4;
        }
        else
        {
          v7 = 0;
          LOWORD(v9) = i;
        }
        do
        {
          v14 = v9 - 1;
          v9 = (__int16)(v9 - 1);
          v7 += *(__int16 *)(a6 + 2 * v14) * *(__int16 *)(result + 6 * i + 2 * v14);
        }
        while (v9 > 0);
      }
      else
      {
        v7 = 0;
      }
LABEL_4:
      v8 = (*(__int16 *)(a5 + 2 * i) << 15) - 4 * v7;
      *(_WORD *)(a6 + 2 * i) = 2
                             * (HIWORD(v8) * *(_WORD *)(a3 + 2 * i)
                              + (((v8 >> 16) * *(__int16 *)(a4 + 2 * i)) >> 15)
                              + ((((v8 >> 1) & 0x7FFE) * *(__int16 *)(a3 + 2 * i)) >> 15));
    }
  }
  if ((((_WORD)a2 - 1) & 0x8000) == 0)
  {
    v15 = 0;
    v16 = a2 - 1;
    v17 = result + 2 * (unsigned __int16)(a2 - 1);
    v18 = v17 + 6;
    v19 = -1;
    v20 = a2;
    do
    {
      v22 = *(__int16 *)(a6 + 2 * v16) << 15;
      if (a2 > v20)
      {
        v23 = v20;
        if (v15 == 1)
          goto LABEL_21;
        v24 = 0;
        v25 = (v19 + 1) & 0x1FFFE;
        v26 = (__int16 *)(v18 + 6 * v20);
        v27 = (__int16 *)(a6 + 2 + 2 * v20);
        v28 = (unsigned __int16)(v15 - 1) + 1;
        v23 = (v28 & 0x1FFFE) + v20;
        do
        {
          v22 -= 4 * *(v26 - 3) * *(v27 - 1);
          v24 -= 4 * *v26 * *v27;
          v26 += 6;
          v27 += 2;
          v25 -= 2;
        }
        while (v25);
        v22 += v24;
        if (v28 != (v28 & 0x1FFFE))
        {
LABEL_21:
          v29 = (__int16 *)(v17 + 6 * (int)v23);
          do
          {
            v30 = *v29;
            v29 += 3;
            v22 -= 4 * v30 * *(__int16 *)(a6 + 2 * v23++);
          }
          while ((unsigned __int16)v23 != (unsigned __int16)a2);
        }
      }
      result = 2 * v16;
      v21 = (__int16)v16;
      *(_WORD *)(a6 + result) = 2
                              * (HIWORD(v22) * *(_WORD *)(a3 + result)
                               + ((((v22 >> 1) & 0x7FFE) * *(__int16 *)(a3 + result)) >> 15)
                               + (((v22 >> 16) * *(__int16 *)(a4 + result)) >> 15));
      --v16;
      --v20;
      ++v15;
      ++v19;
      v18 -= 2;
      v17 -= 2;
    }
    while (v21 > 0);
  }
  return result;
}

uint64_t sub_1003FE74C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, int a6)
{
  uint64_t result;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 400) = a3;
  result = sub_1003FE790(a1, a5, a6, 1);
  *(_WORD *)(a1 + 396) = 0;
  *(_WORD *)(a1 + 398) = a4;
  *(_DWORD *)(a1 + 504) = 0;
  return result;
}

uint64_t sub_1003FE790(uint64_t result, uint64_t a2, int a3, int a4)
{
  __int16 v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;

  v4 = a3;
  v5 = result;
  if (a4)
  {
    *(_DWORD *)(result + 8) = 2147450879;
    *(_WORD *)(result + 12) = 0x7FFF;
    *(_DWORD *)(result + 14) = 2147450879;
    *(_WORD *)(result + 18) = 0x7FFF;
    *(_DWORD *)(result + 20) = 2147450879;
    *(_WORD *)(result + 24) = 0x7FFF;
    *(_DWORD *)(result + 26) = 2147450879;
    *(_WORD *)(result + 30) = 0x7FFF;
    *(_WORD *)(result + 36) = 0x7FFF;
    *(_DWORD *)(result + 32) = 2147450879;
    *(_WORD *)(result + 42) = 0x7FFF;
    *(_DWORD *)(result + 38) = 2147450879;
    *(_WORD *)(result + 48) = 0x7FFF;
    *(_DWORD *)(result + 44) = 2147450879;
    *(_WORD *)(result + 54) = 0x7FFF;
    *(_DWORD *)(result + 50) = 2147450879;
    *(_WORD *)(result + 60) = 0x7FFF;
    *(_DWORD *)(result + 56) = 2147450879;
    *(_WORD *)(result + 66) = 0x7FFF;
    *(_DWORD *)(result + 62) = 2147450879;
    *(_WORD *)(result + 72) = 0x7FFF;
    *(_DWORD *)(result + 68) = 2147450879;
    *(_WORD *)(result + 78) = 0x7FFF;
    *(_DWORD *)(result + 74) = 2147450879;
    *(_WORD *)(result + 84) = 0x7FFF;
    *(_DWORD *)(result + 80) = 2147450879;
    *(_WORD *)(result + 90) = 0x7FFF;
    *(_DWORD *)(result + 86) = 2147450879;
    *(_WORD *)(result + 96) = 0x7FFF;
    *(_DWORD *)(result + 92) = 2147450879;
    *(_WORD *)(result + 102) = 0x7FFF;
    *(_DWORD *)(result + 98) = 2147450879;
    *(_WORD *)(result + 108) = 0x7FFF;
    *(_DWORD *)(result + 104) = 2147450879;
    *(_WORD *)(result + 114) = 0x7FFF;
    *(_DWORD *)(result + 110) = 2147450879;
    *(_WORD *)(result + 120) = 0x7FFF;
    *(_DWORD *)(result + 116) = 2147450879;
    *(_WORD *)(result + 126) = 0x7FFF;
    *(_DWORD *)(result + 122) = 2147450879;
    *(_WORD *)(result + 132) = 0x7FFF;
    *(_DWORD *)(result + 128) = 2147450879;
    *(_WORD *)(result + 138) = 0x7FFF;
    *(_DWORD *)(result + 134) = 2147450879;
    *(_WORD *)(result + 144) = 0x7FFF;
    *(_DWORD *)(result + 140) = 2147450879;
    *(_WORD *)(result + 150) = 0x7FFF;
    *(_DWORD *)(result + 146) = 2147450879;
    *(_WORD *)(result + 156) = 0x7FFF;
    *(_DWORD *)(result + 152) = 2147450879;
    *(_WORD *)(result + 162) = 0x7FFF;
    *(_DWORD *)(result + 158) = 2147450879;
    *(_WORD *)(result + 168) = 0x7FFF;
    *(_DWORD *)(result + 164) = 2147450879;
    *(_WORD *)(result + 174) = 0x7FFF;
    *(_DWORD *)(result + 170) = 2147450879;
    *(_WORD *)(result + 180) = 0x7FFF;
    *(_DWORD *)(result + 176) = 2147450879;
    *(_WORD *)(result + 186) = 0x7FFF;
    *(_DWORD *)(result + 182) = 2147450879;
    *(_WORD *)(result + 192) = 0x7FFF;
    *(_DWORD *)(result + 188) = 2147450879;
    *(_WORD *)(result + 198) = 0x7FFF;
    *(_DWORD *)(result + 194) = 2147450879;
    *(_DWORD *)(result + 200) = 2147450879;
    *(_WORD *)(result + 204) = 0x7FFF;
    *(_WORD *)(result + 210) = 0x7FFF;
    *(_DWORD *)(result + 206) = 2147450879;
    *(_WORD *)(result + 216) = 0x7FFF;
    *(_DWORD *)(result + 212) = 2147450879;
    *(_WORD *)(result + 222) = 0x7FFF;
    *(_DWORD *)(result + 218) = 2147450879;
    *(_WORD *)(result + 228) = 0x7FFF;
    *(_DWORD *)(result + 224) = 2147450879;
    *(_WORD *)(result + 234) = 0x7FFF;
    *(_DWORD *)(result + 230) = 2147450879;
    *(_WORD *)(result + 240) = 0x7FFF;
    *(_DWORD *)(result + 236) = 2147450879;
    *(_WORD *)(result + 246) = 0x7FFF;
    *(_DWORD *)(result + 242) = 2147450879;
    *(_WORD *)(result + 252) = 0x7FFF;
    *(_DWORD *)(result + 248) = 2147450879;
    *(_WORD *)(result + 258) = 0x7FFF;
    *(_DWORD *)(result + 254) = 2147450879;
    *(_WORD *)(result + 264) = 0x7FFF;
    *(_DWORD *)(result + 260) = 2147450879;
    *(_WORD *)(result + 270) = 0x7FFF;
    *(_DWORD *)(result + 266) = 2147450879;
    *(_WORD *)(result + 276) = 0x7FFF;
    *(_DWORD *)(result + 272) = 2147450879;
    *(_WORD *)(result + 282) = 0x7FFF;
    *(_DWORD *)(result + 278) = 2147450879;
    *(_WORD *)(result + 288) = 0x7FFF;
    *(_DWORD *)(result + 284) = 2147450879;
    *(_WORD *)(result + 294) = 0x7FFF;
    *(_DWORD *)(result + 290) = 2147450879;
    *(_WORD *)(result + 300) = 0x7FFF;
    *(_DWORD *)(result + 296) = 2147450879;
    *(_WORD *)(result + 412) = 0x7FFF;
    *(_DWORD *)(result + 408) = 2147450879;
    *(_WORD *)(result + 306) = 0x7FFF;
    *(_DWORD *)(result + 302) = 2147450879;
    *(_WORD *)(result + 418) = 0x7FFF;
    *(_DWORD *)(result + 414) = 2147450879;
    *(_WORD *)(result + 312) = 0x7FFF;
    *(_DWORD *)(result + 308) = 2147450879;
    *(_WORD *)(result + 424) = 0x7FFF;
    *(_DWORD *)(result + 420) = 2147450879;
    *(_WORD *)(result + 318) = 0x7FFF;
    *(_DWORD *)(result + 314) = 2147450879;
    *(_WORD *)(result + 430) = 0x7FFF;
    *(_DWORD *)(result + 426) = 2147450879;
    *(_WORD *)(result + 324) = 0x7FFF;
    *(_DWORD *)(result + 320) = 2147450879;
    *(_WORD *)(result + 436) = 0x7FFF;
    *(_DWORD *)(result + 432) = 2147450879;
    *(_WORD *)(result + 330) = 0x7FFF;
    *(_DWORD *)(result + 326) = 2147450879;
    *(_WORD *)(result + 442) = 0x7FFF;
    *(_DWORD *)(result + 438) = 2147450879;
    *(_WORD *)(result + 336) = 0x7FFF;
    *(_DWORD *)(result + 332) = 2147450879;
    *(_WORD *)(result + 448) = 0x7FFF;
    *(_DWORD *)(result + 444) = 2147450879;
    *(_WORD *)(result + 342) = 0x7FFF;
    *(_DWORD *)(result + 338) = 2147450879;
    *(_WORD *)(result + 454) = 0x7FFF;
    *(_DWORD *)(result + 450) = 2147450879;
    *(_WORD *)(result + 348) = 0x7FFF;
    *(_DWORD *)(result + 344) = 2147450879;
    *(_WORD *)(result + 460) = 0x7FFF;
    *(_DWORD *)(result + 456) = 2147450879;
    *(_WORD *)(result + 354) = 0x7FFF;
    *(_DWORD *)(result + 350) = 2147450879;
    *(_WORD *)(result + 466) = 0x7FFF;
    *(_DWORD *)(result + 462) = 2147450879;
    *(_WORD *)(result + 360) = 0x7FFF;
    *(_DWORD *)(result + 356) = 2147450879;
    *(_WORD *)(result + 472) = 0x7FFF;
    *(_DWORD *)(result + 468) = 2147450879;
    *(_WORD *)(result + 366) = 0x7FFF;
    *(_DWORD *)(result + 362) = 2147450879;
    *(_WORD *)(result + 478) = 0x7FFF;
    *(_DWORD *)(result + 474) = 2147450879;
    *(_WORD *)(result + 372) = 0x7FFF;
    *(_DWORD *)(result + 368) = 2147450879;
    *(_WORD *)(result + 484) = 0x7FFF;
    *(_DWORD *)(result + 480) = 2147450879;
    *(_WORD *)(result + 378) = 0x7FFF;
    *(_DWORD *)(result + 374) = 2147450879;
    *(_WORD *)(result + 490) = 0x7FFF;
    *(_DWORD *)(result + 486) = 2147450879;
    *(_WORD *)(result + 384) = 0x7FFF;
    *(_DWORD *)(result + 380) = 2147450879;
    *(_WORD *)(result + 496) = 0x7FFF;
    *(_DWORD *)(result + 492) = 2147450879;
    *(_WORD *)(result + 390) = 0x7FFF;
    *(_DWORD *)(result + 386) = 2147450879;
    *(_WORD *)(result + 502) = 0x7FFF;
    *(_DWORD *)(result + 498) = 2147450879;
  }
  v6 = a3 << 16;
  if (a3 << 16 >= 0x10000)
  {
    *(_WORD *)(result + 392) = 1;
    result = sub_1003FFA64(a2, 16, 1, result + 296);
    if (v6 >> 18)
      v7 = 2;
    else
      v7 = v4 - 1;
    *(_WORD *)(v5 + 394) = v7;
  }
  else
  {
    *(_WORD *)(result + 392) = 0;
    *(_WORD *)(result + 394) = 0;
  }
  return result;
}

uint64_t sub_1003FEAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, __int16 a6, int a7, int a8, uint64_t a9, _DWORD *a10, uint64_t a11)
{
  __int16 v11;
  unsigned __int16 v16;
  __int16 *v17;
  int v18;
  uint64_t v19;
  int v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int16 v26;
  __int16 v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  __int16 *v34;
  int v35;
  __int16 v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  __int16 v40;
  __int16 v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  uint64_t v51;
  const __int16 *v52;
  int16x8_t v53;
  int16x8_t v54;
  const __int16 *v55;
  __int16 *v56;
  uint64_t v57;
  __int16 v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  uint64_t v63;
  const __int16 *v64;
  int16x8_t v65;
  int16x8_t v66;
  const __int16 *v67;
  __int16 *v68;
  __int16 v69;
  int v70;
  int v71;
  const __int16 *v73;
  uint64_t v74;
  uint64_t v75;
  __int16 *v76;
  __int16 *v77;
  __int16 v78;
  __int16 *v79;
  __int16 v80[16];
  __int16 v81;
  int v82;
  unsigned __int16 v83;
  int16x8x3_t v84;
  int16x8x3_t v85;
  int16x8x3_t v86;
  int16x8x3_t v87;

  v11 = 0;
  v81 = 0;
  if (*((unsigned __int16 *)a4 + 199) <= 1u)
  {
    if (*((unsigned __int16 *)a4 + 197) > 2u)
      return 0;
    v83 = 0;
    v82 = 0;
    if (((a6 - 1) & 0x8000) == 0)
    {
      v78 = 0;
      v16 = a6 - 1;
      v79 = (__int16 *)(a4 + 51);
      v17 = (__int16 *)(a4 + 63);
      v76 = (__int16 *)a4 + 198;
      v77 = (__int16 *)(a4 + 25);
      v75 = (uint64_t)(a4 + 37);
      v73 = (const __int16 *)(a4 + 43);
      v74 = (uint64_t)a4 + 300;
      while (1)
      {
        v19 = *((__int16 *)a4 + 199);
        LOWORD(v20) = *((_WORD *)a4 + 197);
        if (*a4)
          v21 = *(char **)(*a4 + 8 * v19);
        else
          v21 = (char *)&unk_101BAFAE0 + 90 * *((__int16 *)a4 + 199);
        v22 = &v21[30 * *((__int16 *)a4 + 197)];
        if (!a7)
          LODWORD(v19) = 0;
        if (!a8)
          LOWORD(v20) = 0;
        v23 = a4[50];
        if (v23)
        {
          v24 = *(char **)(v23 + 8 * (int)v19);
          v20 = (__int16)v20;
        }
        else
        {
          v20 = (__int16)v20;
          v24 = (char *)&unk_101BAFB94 + 90 * (int)v19;
        }
        v25 = &v24[30 * v20];
        v26 = *(_WORD *)v22;
        v27 = *((_WORD *)v22 + 2);
        *(_OWORD *)v80 = *(_OWORD *)v25;
        *(_OWORD *)&v80[7] = *(_OWORD *)(v25 + 14);
        v80[0] = v26;
        v80[2] = v27;
        v28 = sub_1003FF054((_WORD *)(a5 + 6 * v16), v80, (__int16 *)a4 + 4, v79, (__int16 *)&v82, (__int16 *)a4 + 252, &v81, 0, 0);
        LODWORD(v29) = *((__int16 *)a4 + 199);
        if (v28 != 2)
          goto LABEL_27;
        if ((int)v29 > 0)
          break;
        v33 = *((__int16 *)v22 + 12);
        if (v33 < 0 || *v17 < v33)
          goto LABEL_27;
        *((_WORD *)a4 + 199) = v29 + 1;
        if ((v29 & 0x80000000) == 0)
        {
          LOWORD(v29) = 1;
          v30 = *((__int16 *)v22 + 13);
          if (v30 < 0)
          {
LABEL_27:
            v31 = *((__int16 *)a4 + 197);
            v32 = *a4;
            v29 = (__int16)v29;
            if (*a4)
              goto LABEL_28;
            goto LABEL_31;
          }
LABEL_20:
          if (*v17 <= v30)
          {
            LOWORD(v29) = v29 - 1;
            *((_WORD *)a4 + 199) = v29;
            v31 = *((__int16 *)a4 + 197);
            v32 = *a4;
            v29 = (__int16)v29;
            if (*a4)
              goto LABEL_28;
            goto LABEL_31;
          }
          goto LABEL_27;
        }
        v31 = *((__int16 *)a4 + 197);
        v32 = *a4;
        v29 = (__int16)(v29 + 1);
        if (*a4)
        {
LABEL_28:
          v34 = (__int16 *)(*(_QWORD *)(v32 + 8 * v29) + 30 * v31);
          if (v81 != 1)
            goto LABEL_6;
          goto LABEL_32;
        }
LABEL_31:
        v34 = (__int16 *)((char *)&unk_101BAFAE0 + 90 * (int)v29 + 30 * v31);
        if (v81 != 1)
          goto LABEL_6;
LABEL_32:
        if (sub_1003FF054((_WORD *)(a5 + 6 * v16), v34, (__int16 *)a4 + 4, v77, (__int16 *)&v82, v76, &v81, 1, a11) == 2)
        {
          v35 = *((__int16 *)a4 + 196);
          if (v35 < 16)
            v36 = v35 + 1;
          else
            v36 = 16;
          *((_WORD *)a4 + 196) = v36;
          sub_1003FFA64((uint64_t)&v82, 16, 1, v75);
          if (*((__int16 *)a4 + 196) < 2 || v34[11] <= 1)
          {
            *(_DWORD *)a9 = v82;
            *(_WORD *)(a9 + 4) = v83;
LABEL_59:
            ++v78;
            if (*((__int16 *)a4 + 196) >= v34[10])
            {
              v70 = *((__int16 *)a4 + 197);
              if (v70 <= 1)
              {
                *((_WORD *)a4 + 196) = 0;
                *((_WORD *)a4 + 197) = v70 + 1;
              }
            }
            goto LABEL_6;
          }
          v37 = *((unsigned __int16 *)a4 + 196);
          v38 = (unsigned __int16)v34[11];
          v83 = 0;
          v82 = 0;
          if (v37 >= v38)
          {
            v39 = sub_1003FD764(1, (__int16)v38);
            v40 = v82;
            v41 = HIWORD(v82);
            v42 = v83;
            if (v34[11] >= 1)
            {
              v45 = (unsigned __int16)v34[11];
              if (v45 >= 0x10)
              {
                v46 = v45 & 0x7FF0;
                v59 = 0uLL;
                v60 = (int16x8_t)(unsigned __int16)v82;
                v61 = (int16x8_t)HIWORD(v82);
                v62 = (int16x8_t)v83;
                v63 = (unsigned __int16)v45 & 0xFFF0;
                v64 = v73;
                v65 = 0uLL;
                v66 = 0uLL;
                do
                {
                  v67 = v64 - 24;
                  v85 = vld3q_s16(v67);
                  v87 = vld3q_s16(v64);
                  v60 = vaddq_s16(v60, v85.val[0]);
                  v59 = vaddq_s16(v59, v87.val[0]);
                  v61 = vaddq_s16(v61, v85.val[1]);
                  v65 = vaddq_s16(v65, v87.val[1]);
                  v62 = vaddq_s16(v62, v85.val[2]);
                  v66 = vaddq_s16(v66, v87.val[2]);
                  v64 += 48;
                  v63 -= 16;
                }
                while (v63);
                v42 = vaddvq_s16(vaddq_s16(v66, v62));
                v41 = vaddvq_s16(vaddq_s16(v65, v61));
                v40 = vaddvq_s16(vaddq_s16(v59, v60));
                if (v46 == v45)
                  goto LABEL_57;
              }
              else
              {
                v46 = 0;
              }
              v68 = (__int16 *)(v74 + 6 * v46);
              do
              {
                v40 += *(v68 - 2);
                v41 += *(v68 - 1);
                v69 = *v68;
                v68 += 3;
                v42 += v69;
                ++v46;
              }
              while (v46 < v45);
              goto LABEL_57;
            }
          }
          else
          {
            v39 = sub_1003FD764(1, (__int16)v37);
            v40 = v82;
            v41 = HIWORD(v82);
            v42 = v83;
            if (*((__int16 *)a4 + 196) >= 1)
            {
              v43 = *((unsigned __int16 *)a4 + 196);
              if (v43 < 0x10)
              {
                v44 = 0;
                goto LABEL_49;
              }
              v44 = v43 & 0x7FF0;
              v47 = 0uLL;
              v48 = (int16x8_t)(unsigned __int16)v82;
              v49 = (int16x8_t)HIWORD(v82);
              v50 = (int16x8_t)v83;
              v51 = (unsigned __int16)v43 & 0xFFF0;
              v52 = v73;
              v53 = 0uLL;
              v54 = 0uLL;
              do
              {
                v55 = v52 - 24;
                v84 = vld3q_s16(v55);
                v86 = vld3q_s16(v52);
                v48 = vaddq_s16(v48, v84.val[0]);
                v47 = vaddq_s16(v47, v86.val[0]);
                v49 = vaddq_s16(v49, v84.val[1]);
                v53 = vaddq_s16(v53, v86.val[1]);
                v50 = vaddq_s16(v50, v84.val[2]);
                v54 = vaddq_s16(v54, v86.val[2]);
                v52 += 48;
                v51 -= 16;
              }
              while (v51);
              v42 = vaddvq_s16(vaddq_s16(v54, v50));
              v41 = vaddvq_s16(vaddq_s16(v53, v49));
              v40 = vaddvq_s16(vaddq_s16(v47, v48));
              if (v44 != v43)
              {
LABEL_49:
                v56 = (__int16 *)(v74 + 6 * v44);
                v57 = v43 - v44;
                do
                {
                  v40 += *(v56 - 2);
                  v41 += *(v56 - 1);
                  v58 = *v56;
                  v56 += 3;
                  v42 += v58;
                  --v57;
                }
                while (v57);
              }
LABEL_57:
              LOWORD(v82) = v40;
              HIWORD(v82) = v41;
              v83 = v42;
            }
          }
          *(_WORD *)a9 = (v40 * v39) >> 15;
          *(_WORD *)(a9 + 2) = (v41 * v39) >> 15;
          *(_WORD *)(a9 + 4) = (v42 * v39) >> 15;
          goto LABEL_59;
        }
LABEL_6:
        v18 = (__int16)v16--;
        if (v18 < 1)
          goto LABEL_63;
      }
      v30 = *((__int16 *)v22 + 13);
      if (v30 < 0)
        goto LABEL_27;
      goto LABEL_20;
    }
    v78 = 0;
LABEL_63:
    v71 = *((__int16 *)a4 + 197);
    if (*((_WORD *)a4 + 196))
      ++v71;
    *a10 = v71;
    return v78;
  }
  return v11;
}

uint64_t sub_1003FF054(_WORD *a1, __int16 *a2, __int16 *a3, __int16 *a4, __int16 *a5, __int16 *a6, _WORD *a7, int a8, uint64_t a9)
{
  __int16 *v12;
  __int16 *v16;
  __int16 *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  signed __int16 v24;
  __int16 *v25;
  __int16 *v26;
  int v27;
  uint64_t result;
  unsigned int v29;
  uint64_t v30;
  __int16 v31;
  __int16 v32;
  unsigned __int16 v33;
  uint64_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  uint64_t v38;
  __int16 *v39;
  uint64_t v40;
  __int16 *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unint64_t v47;
  __int16 v48;
  __int16 v49;
  uint64_t v50;
  __int16 *v51;
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  int v58;
  __int16 v59;
  int v60;
  char v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  __int16 v65;
  int v66;
  int v67;
  int v68;
  int v69;
  _BOOL4 v70;
  char v71;
  char v72;
  uint64_t v73;
  __int16 v74;
  __int16 v75;
  unsigned __int16 v76;
  uint64_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  uint64_t v81;
  __int16 *v82;
  uint64_t v83;
  __int16 *v84;
  __int16 *v85;
  int v87;
  __int16 v88;
  int v89;
  unsigned __int16 v90;
  int v91;
  __int16 v92;
  int v93;
  __int16 v94;
  int v95;
  __int16 v96;
  int v97;
  __int16 v98;
  int v99;
  int v100;
  int v101;
  __int16 v102;
  int v103;
  __int16 v104;
  __int128 v105;
  __int16 v106;
  __int128 v107;
  __int16 v108;
  int16x8x3_t v109;
  int16x8x3_t v110;
  int16x8x3_t v111;
  int16x8x3_t v112;

  if (*a2 < 1)
    return 0;
  v12 = a4;
  *a7 = 0;
  if (a8)
  {
    v16 = a2 + 14;
    if (a2[14])
    {
      if (a8 == 1)
        goto LABEL_21;
      v17 = a4;
      v18 = 0;
      v19 = 0;
      v20 = 0;
      goto LABEL_7;
    }
    if (a8 == 1)
      goto LABEL_21;
    v17 = a4;
    v18 = 0;
    v19 = 0;
    v20 = 0;
  }
  else
  {
    v17 = a4;
    v18 = sub_1003FD924((__int16)(*a3 - *a1));
    v19 = sub_1003FD924((__int16)(a3[1] - a1[1]));
    v20 = sub_1003FD924((__int16)(a3[2] - a1[2]));
    v16 = a2 + 14;
    if (a2[14])
    {
LABEL_7:
      if (v19 + v18 + v20 < a2[2])
        return 0;
      goto LABEL_18;
    }
  }
  v21 = a2[2];
  if (v18 < v21 || v19 < v21 || v20 < v21)
    return 0;
LABEL_18:
  if (!a8)
  {
    sub_1003FFA64((uint64_t)a1, *a2, 1, (uint64_t)a3);
    *a7 = 1;
  }
  v12 = v17;
LABEL_21:
  v24 = *a2;
  v25 = &a3[3 * *a2];
  v27 = (unsigned __int16)*(v25 - 3);
  v26 = v25 - 3;
  if (v27 == 0x7FFF && v26[1] == 0x7FFF && v26[2] == 0x7FFF)
    return 0;
  v94 = 0;
  v93 = 0;
  v91 = 0;
  v92 = 0;
  v89 = 0;
  v90 = 0;
  v87 = 0;
  v88 = 0;
  sub_1003FFAFC(a3, v24, (__int16 *)&v93, (__int16 *)&v91, &v89, &v87);
  v29 = (unsigned __int16)*a2;
  if (*a2 >= 1)
  {
    v30 = (unsigned __int16)*a2;
    v31 = v89;
    v32 = HIWORD(v89);
    v33 = v90;
    if (v29 >= 8)
    {
      v34 = v30 & 0x7FF8;
      v35 = vdupq_n_s16((unsigned __int16)v89);
      v36 = vdupq_n_s16(HIWORD(v89));
      v37 = vdupq_n_s16(v90);
      v38 = (unsigned __int16)v30 & 0xFFF8;
      v39 = a3;
      do
      {
        v109 = vld3q_s16(v39);
        v111.val[0] = vsubq_s16(v109.val[0], v35);
        v111.val[1] = vsubq_s16(v109.val[1], v36);
        v111.val[2] = vsubq_s16(v109.val[2], v37);
        vst3q_s16(v39, v111);
        v39 += 24;
        v38 -= 8;
      }
      while (v38);
      if (v34 == v30)
        goto LABEL_33;
    }
    else
    {
      v34 = 0;
    }
    v40 = v30 - v34;
    v41 = &a3[3 * v34 + 2];
    do
    {
      *(v41 - 2) -= v31;
      *(v41 - 1) -= v32;
      *v41 -= v33;
      v41 += 3;
      --v40;
    }
    while (v40);
LABEL_33:
    v29 = (unsigned __int16)*a2;
  }
  v42 = (__int16)v29;
  v43 = sub_1003FD940((uint64_t)a3, (__int16)v29, (__int16 *)&v105, &v103);
  v107 = v105;
  v108 = v106;
  if (v43 == 4 && sub_1003FE270(&v107, 3, (__int16 *)&v99, (__int16 *)&v97))
  {
    v85 = v12;
    sub_1003FE4E4((uint64_t)&v107, 3, (uint64_t)&v99, (uint64_t)&v97, (uint64_t)&v103, (uint64_t)&v101);
    v44 = (__int16)v101 >> 2;
    *a5 = v44;
    v45 = SHIWORD(v101) >> 2;
    a5[1] = v45;
    v46 = v102 >> 2;
    a5[2] = v102 >> 2;
    v47 = (*a3 - v44) * (uint64_t)(*a3 - v44)
        + (a3[1] - v45) * (uint64_t)(a3[1] - v45)
        + (a3[2] - v46) * (uint64_t)(a3[2] - v46);
    v48 = sub_1003FF778(v47);
    v49 = v48;
    if ((__int16)v29 < 2)
    {
      v52 = v48;
    }
    else
    {
      v50 = v29 - 1;
      v51 = a3 + 5;
      v52 = v48;
      do
      {
        v53 = *(v51 - 2) - *a5;
        v54 = *(v51 - 1) - a5[1];
        v55 = v53 * (uint64_t)v53 + v54 * (uint64_t)v54;
        v56 = *v51 - a5[2];
        v57 = v55 + v56 * (uint64_t)v56;
        v47 += v57;
        v58 = sub_1003FF778(v57);
        if (v58 > v52)
          v52 = v58;
        if (v58 < v49)
          v49 = v58;
        v51 += 3;
        --v50;
      }
      while (v50);
    }
    v60 = 1;
    v62 = sub_1003FD764(1, v42);
    v63 = sub_1003FF778((__int16)(((v62 >> 3) & 1) + (v62 >> 4)) * (((v47 >> 6) & 1) + (v47 >> 7)));
    v61 = 0;
    *a6 = ((v63 >> 1) & 1) + (v63 >> 2);
    v59 = v52 - v49;
    v12 = v85;
  }
  else
  {
    v59 = 0;
    v60 = 0;
    a5[2] = 0;
    *(_DWORD *)a5 = 0;
    v61 = 1;
    *a6 = 0;
  }
  *a5 += v89;
  a5[1] += HIWORD(v89);
  a5[2] += v90;
  sub_1003FFA64((uint64_t)a5, a2[1], 1, (uint64_t)v12);
  if ((v61 & 1) != 0)
    goto LABEL_82;
  v64 = *a6;
  if (a9)
  {
    *(_DWORD *)(a9 + 12) = *(_DWORD *)(a2 + 7);
    *(_WORD *)(a9 + 16) = a2[9];
    *(_WORD *)(a9 + 18) = v59;
  }
  if (!v60 || a2[8] >= v64 || a2[7] <= v64 || a2[9] * (uint64_t)v64 <= (uint64_t)v59 << 11)
    goto LABEL_82;
  v104 = 0;
  v103 = 0;
  v100 = 0;
  v101 = 0;
  v102 = 0;
  *(_QWORD *)&v107 = 0;
  v99 = 0;
  v97 = 0;
  v98 = 0;
  v95 = 0;
  v96 = 0;
  sub_1003FFAFC(v12, a2[1], (__int16 *)&v99, (__int16 *)&v97, &v95, &v101);
  if (a9)
  {
    *(_WORD *)(a9 + 2) = a2[1];
    *(_DWORD *)(a9 + 20) = v101;
    *(_WORD *)(a9 + 24) = v102;
    v65 = a2[5];
    *(_WORD *)(a9 + 8) = v65;
  }
  else
  {
    v65 = a2[5];
  }
  if ((__int16)v101 >= v65 || SHIWORD(v101) >= v65 || v102 >= v65)
  {
    if (*v16 < 2)
      goto LABEL_82;
    v69 = v65;
    v70 = (__int16)v101 < v65;
    v71 = v102 < v69 || v70;
    if (v102 >= v69)
      v70 = 0;
    v72 = SHIWORD(v101) < v69 ? v71 : 0;
    if ((v72 & 1) == 0 && !v70)
    {
LABEL_82:
      result = 0;
      goto LABEL_83;
    }
  }
  sub_1003FFAFC(a3, *a2, (__int16 *)&v99, (__int16 *)&v97, &v95, &v103);
  v66 = (__int16)v103;
  if (a9)
  {
    *(_WORD *)a9 = *a2;
    *(_DWORD *)(a9 + 26) = v103;
    *(_WORD *)(a9 + 30) = v104;
    *(_WORD *)(a9 + 6) = a2[4];
  }
  result = 0;
  v67 = a2[3];
  if (v66 > v67 && SHIWORD(v103) > v67 && v104 > v67)
  {
    if ((__int16)(HIWORD(v103) + v66 + v104) >= a2[4])
    {
      v68 = sub_1003FDE40(a3, *a2, (__int16 *)&v105, (__int16 *)&v107, (_WORD *)&v100 + 1);
      if (a9)
      {
        *(_WORD *)(a9 + 10) = a2[6];
        *(_WORD *)(a9 + 32) = HIWORD(v100);
      }
      if (v68 && SHIWORD(v100) > a2[6])
      {
        result = 2;
        goto LABEL_83;
      }
    }
    goto LABEL_82;
  }
LABEL_83:
  if (*a2 < 1)
    return result;
  v73 = (unsigned __int16)*a2;
  v74 = v89;
  v75 = HIWORD(v89);
  v76 = v90;
  if (v73 < 8)
  {
    v77 = 0;
LABEL_89:
    v83 = v73 - v77;
    v84 = &a3[3 * v77 + 2];
    do
    {
      *(v84 - 2) += v74;
      *(v84 - 1) += v75;
      *v84 += v76;
      v84 += 3;
      --v83;
    }
    while (v83);
    return result;
  }
  v77 = v73 & 0x7FF8;
  v78 = vdupq_n_s16((unsigned __int16)v89);
  v79 = vdupq_n_s16(HIWORD(v89));
  v80 = vdupq_n_s16(v90);
  v81 = (unsigned __int16)v73 & 0xFFF8;
  v82 = a3;
  do
  {
    v110 = vld3q_s16(v82);
    v112.val[0] = vaddq_s16(v110.val[0], v78);
    v112.val[1] = vaddq_s16(v110.val[1], v79);
    v112.val[2] = vaddq_s16(v110.val[2], v80);
    vst3q_s16(v82, v112);
    v82 += 24;
    v81 -= 8;
  }
  while (v81);
  if (v77 != v73)
    goto LABEL_89;
  return result;
}

uint64_t sub_1003FF778(unint64_t a1)
{
  _BOOL8 v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;

  if ((a1 & 0x8000000000000000) != 0)
    return 0;
  v1 = a1 >> 30 != 0;
  v2 = ((a1 >> 28) & 0x3FFFFFFFFLL) + 4 * ((a1 >> 30) - v1);
  v3 = (4 * v1) | 1;
  if (v3 <= v2)
  {
    v4 = (8 * (a1 >> 30 != 0)) | 4;
  }
  else
  {
    v3 = 0;
    v4 = 8 * (a1 >> 30 != 0);
  }
  v5 = v2 - v3;
  v6 = v4 >> 2;
  v7 = ((a1 >> 26) & 0x3FFFFFFFFLL) + 4 * v5;
  v8 = v4 | 1;
  v9 = (v4 | 1) > v7;
  if ((v4 | 1) > v7)
    v8 = 0;
  v10 = 2 * v4;
  if (!v9)
    v10 = (8 * (v6 & 3)) | 4;
  v11 = ((a1 >> 24) & 0x3FFFFFFFFLL) + 4 * (v7 - v8);
  v12 = v10 | 1;
  v13 = (v10 | 1uLL) > v11;
  if ((v10 | 1uLL) > v11)
    v12 = 0;
  v14 = 2 * v10;
  if (!v13)
    v14 |= 4uLL;
  v15 = ((a1 >> 22) & 0x3FFFFFFFFLL) + 4 * (v11 - v12);
  v16 = v14 | 1;
  v17 = (v14 | 1uLL) > v15;
  if ((v14 | 1uLL) > v15)
    v16 = 0;
  v18 = 2 * v14;
  if (!v17)
    v18 |= 4uLL;
  v19 = ((a1 >> 20) & 0x3FFFFFFFFLL) + 4 * (v15 - v16);
  v20 = v18 | 1;
  v21 = (v18 | 1uLL) > v19;
  if ((v18 | 1uLL) > v19)
    v20 = 0;
  v22 = 2 * v18;
  if (!v21)
    v22 |= 4uLL;
  v23 = ((a1 >> 18) & 0x3FFFFFFFFLL) + 4 * (v19 - v20);
  v24 = v22 | 1;
  v25 = (v22 | 1uLL) > v23;
  if ((v22 | 1uLL) > v23)
    v24 = 0;
  v26 = 2 * v22;
  if (!v25)
    v26 |= 4uLL;
  v27 = ((a1 >> 16) & 0x3FFFFFFFFLL) + 4 * (v23 - v24);
  v28 = v26 | 1;
  v29 = (v26 | 1uLL) > v27;
  if ((v26 | 1uLL) > v27)
    v28 = 0;
  v30 = 2 * v26;
  if (!v29)
    v30 |= 4uLL;
  v31 = ((a1 >> 14) & 0x3FFFFFFFFLL) + 4 * (v27 - v28);
  v32 = v30 | 1;
  v33 = (v30 | 1uLL) > v31;
  if ((v30 | 1uLL) > v31)
    v32 = 0;
  v34 = 2 * v30;
  if (!v33)
    v34 |= 4uLL;
  v35 = ((a1 >> 12) & 0x3FFFFFFFFLL) + 4 * (v31 - v32);
  v36 = v34 | 1;
  v37 = (v34 | 1uLL) > v35;
  if ((v34 | 1uLL) > v35)
    v36 = 0;
  v38 = 2 * v34;
  if (!v37)
    v38 |= 4uLL;
  v39 = ((a1 >> 10) & 0x3FFFFFFFFLL) + 4 * (v35 - v36);
  v40 = v38 | 1;
  v41 = (v38 | 1uLL) > v39;
  if ((v38 | 1uLL) > v39)
    v40 = 0;
  v42 = 2 * v38;
  if (!v41)
    v42 |= 4uLL;
  v43 = ((a1 >> 8) & 0x3FFFFFFFFLL) + 4 * (v39 - v40);
  v44 = v42 | 1;
  v45 = (v42 | 1uLL) > v43;
  if ((v42 | 1uLL) > v43)
    v44 = 0;
  v46 = 2 * v42;
  if (!v45)
    v46 |= 4uLL;
  v47 = ((a1 >> 6) & 0x3FFFFFFFFLL) + 4 * (v43 - v44);
  v48 = v46 | 1;
  v49 = (v46 | 1uLL) > v47;
  if ((v46 | 1uLL) > v47)
    v48 = 0;
  v50 = 2 * v46;
  if (!v49)
    v50 |= 4uLL;
  v51 = ((a1 >> 4) & 0x3FFFFFFFFLL) + 4 * (v47 - v48);
  v52 = v50 | 1;
  v53 = (v50 | 1uLL) > v51;
  if ((v50 | 1uLL) > v51)
    v52 = 0;
  v54 = 2 * v50;
  if (!v53)
    v54 |= 4uLL;
  v55 = ((a1 >> 2) & 0x3FFFFFFFFLL) + 4 * (v51 - v52);
  v56 = v54 | 1;
  v57 = (v54 | 1uLL) > v55;
  if ((v54 | 1uLL) > v55)
    v56 = 0;
  v58 = 2 * v54;
  if (!v57)
    v58 |= 4uLL;
  return (__int16)((v58 >> 1) | ((v58 | 1) <= (a1 & 0x3FFFFFFFFLL) + 4 * (v55 - v56)));
}

uint64_t sub_1003FF9C0(int64_t a1, _WORD *a2)
{
  __int16 v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  __int16 *v8;
  uint64_t result;

  if (a1 < 1)
  {
    result = 0x40000000;
    *a2 = 0;
  }
  else
  {
    v4 = sub_1003FD8E0(a1);
    v5 = a1 << v4 >> (((30 - v4) & 1) == 0);
    v6 = ((__int16)(30 - v4) >> 1) + 1;
    v7 = (v5 >> 10) & 0x7FFF;
    v8 = (__int16 *)((char *)&unk_101BAFBEE + 2 * ((uint64_t)((v5 << 23) - 0x10000000000000) >> 48));
    result = (((uint64_t)*v8 << 16) - 2 * (__int16)(*v8 - v8[1]) * (uint64_t)(int)v7) >> v6;
    *a2 = v6;
  }
  return result;
}

uint64_t sub_1003FFA64(uint64_t result, int a2, int a3, uint64_t a4)
{
  int i;
  uint64_t v5;
  int *v6;
  int v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  uint64_t v11;

  if (a3 >= 1 && a2 >= a3)
  {
    for (i = (__int16)(a2 - 1); i >= a3; i = (__int16)(i - 1))
    {
      v5 = a4 + 6 * (__int16)i;
      v6 = (int *)(a4 + 6 * ((__int16)i - a3));
      v7 = *v6;
      *(_WORD *)(v5 + 4) = *((_WORD *)v6 + 2);
      *(_DWORD *)v5 = v7;
    }
    do
    {
      v8 = 6 * (unsigned __int16)--a3;
      v9 = *(_DWORD *)(result + v8);
      v10 = *(_WORD *)(result + v8 + 4);
      v11 = a4 + v8;
      *(_WORD *)(v11 + 4) = v10;
      *(_DWORD *)v11 = v9;
    }
    while ((_WORD)a3);
  }
  return result;
}

__int16 *sub_1003FFAFC(__int16 *result, int a2, __int16 *a3, __int16 *a4, _WORD *a5, _WORD *a6)
{
  __int16 v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  __int16 v12;
  __int16 v13;
  unsigned int v14;
  int v15;
  int v16;
  __int16 v17;
  __int16 v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  int v22;
  __int16 v23;
  __int16 v24;
  unsigned int v25;
  __int16 v26;
  __int16 *v27;
  uint64_t v28;
  int v29;
  int v30;
  __int16 v31;
  __int16 v32;
  unsigned int v33;
  __int16 v34;
  __int16 *v35;
  int v36;
  __int16 v37;
  unsigned int v38;

  *a4 = *result;
  v6 = *result;
  *a3 = *result;
  if (a2 > 1)
  {
    v7 = result + 3;
    v8 = (unsigned __int16)a2 - 1;
    v9 = v8;
    while (1)
    {
      v10 = *v7;
      if (v10 < *a4)
      {
        *a4 = v10;
        LOWORD(v10) = *v7;
        v6 = *a3;
        if (*v7 > *a3)
        {
LABEL_8:
          *a3 = v10;
          v6 = v10;
        }
      }
      else if ((__int16)v10 > v6)
      {
        goto LABEL_8;
      }
      v7 += 3;
      if (!--v9)
      {
        v22 = (*a4 >> 1) + (v6 >> 1);
        *a5 = (*a4 >> 1) + (v6 >> 1);
        v23 = *a3;
        if ((*a3 & 1) != 0 || (v24 = *a4, (*a4 & 1) != 0))
        {
          *a5 = v22 + 1;
          v23 = *a3;
          v24 = *a4;
        }
        v25 = (unsigned __int16)(v23 - v24);
        if (v25 >= 0x7FFF)
          LOWORD(v25) = 0x7FFF;
        *a6 = v25;
        a4[1] = result[1];
        v26 = result[1];
        a3[1] = v26;
        v27 = result + 4;
        v28 = (unsigned __int16)a2 - 1;
        while (2)
        {
          v29 = *v27;
          if (v29 < a4[1])
          {
            a4[1] = v29;
            LOWORD(v29) = *v27;
            v26 = a3[1];
            if (*v27 > v26)
              goto LABEL_32;
          }
          else if ((__int16)v29 > v26)
          {
LABEL_32:
            a3[1] = v29;
            v26 = v29;
          }
          v27 += 3;
          if (--v28)
            continue;
          break;
        }
        v30 = (a4[1] >> 1) + (v26 >> 1);
        a5[1] = (a4[1] >> 1) + (v26 >> 1);
        v31 = a3[1];
        if ((v31 & 1) != 0 || (v32 = a4[1], (v32 & 1) != 0))
        {
          a5[1] = v30 + 1;
          v31 = a3[1];
          v32 = a4[1];
        }
        v33 = (unsigned __int16)(v31 - v32);
        if (v33 >= 0x7FFF)
          LOWORD(v33) = 0x7FFF;
        a6[1] = v33;
        a4[2] = result[2];
        v34 = result[2];
        a3[2] = v34;
        v35 = result + 5;
        while (2)
        {
          v36 = *v35;
          if (v36 < a4[2])
          {
            a4[2] = v36;
            LOWORD(v36) = *v35;
            v34 = a3[2];
            if (*v35 > v34)
              goto LABEL_44;
          }
          else if ((__int16)v36 > v34)
          {
LABEL_44:
            a3[2] = v36;
            v34 = v36;
          }
          v35 += 3;
          if (!--v8)
          {
            v20 = (a4[2] >> 1) + (v34 >> 1);
            a5[2] = v20;
            v21 = (unsigned __int16)a3[2];
            if ((v21 & 1) == 0)
              goto LABEL_46;
LABEL_47:
            a5[2] = v20 + 1;
            LOWORD(v21) = a3[2];
            v37 = a4[2];
            goto LABEL_48;
          }
          continue;
        }
      }
    }
  }
  v11 = (*a4 >> 1) + (v6 >> 1);
  *a5 = (*a4 >> 1) + (v6 >> 1);
  v12 = *a3;
  if ((*a3 & 1) != 0 || (v13 = *a4, (*a4 & 1) != 0))
  {
    *a5 = v11 + 1;
    v12 = *a3;
    v13 = *a4;
  }
  v14 = (unsigned __int16)(v12 - v13);
  if (v14 >= 0x7FFF)
    LOWORD(v14) = 0x7FFF;
  *a6 = v14;
  a4[1] = result[1];
  v15 = result[1];
  a3[1] = v15;
  v16 = (a4[1] >> 1) + (v15 >> 1);
  a5[1] = (a4[1] >> 1) + (v15 >> 1);
  v17 = a3[1];
  if ((v17 & 1) != 0 || (v18 = a4[1], (v18 & 1) != 0))
  {
    a5[1] = v16 + 1;
    v17 = a3[1];
    v18 = a4[1];
  }
  v19 = (unsigned __int16)(v17 - v18);
  if (v19 >= 0x7FFF)
    LOWORD(v19) = 0x7FFF;
  a6[1] = v19;
  a4[2] = result[2];
  LODWORD(v21) = result[2];
  a3[2] = v21;
  v20 = (a4[2] >> 1) + ((int)v21 >> 1);
  a5[2] = (a4[2] >> 1) + ((int)v21 >> 1);
  LOWORD(v21) = a3[2];
  if ((v21 & 1) != 0)
    goto LABEL_47;
LABEL_46:
  v37 = a4[2];
  if ((v37 & 1) != 0)
    goto LABEL_47;
LABEL_48:
  v38 = (unsigned __int16)(v21 - v37);
  if (v38 >= 0x7FFF)
    LOWORD(v38) = 0x7FFF;
  a6[2] = v38;
  return result;
}

void sub_1003FFE04(uint64_t a1, uint64_t a2, float *a3, float *a4, float *a5, float *a6)
{
  float v6;

  if (*(_BYTE *)(a2 + 63))
  {
    *a3 = *(float *)(a2 + 20) + *a3;
    *a4 = *(float *)(a2 + 24) + *a4;
    *a5 = *(float *)(a2 + 28) + *a5;
  }
  if (*(_BYTE *)(a2 + 64))
    v6 = (float)((float)(*(float *)(a2 + 36) * *(float *)(a2 + 36)) + (float)(*(float *)(a2 + 32) * *(float *)(a2 + 32)))
       + (float)(*(float *)(a2 + 40) * *(float *)(a2 + 40));
  else
    v6 = 0.0;
  *a6 = v6;
}

void sub_1003FFE68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  float v6;
  NSObject *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  const char *v16;
  uint8_t *v17;
  uint64_t v18;
  int v19;
  double v20;
  __int16 v21;
  double v22;
  __int16 v23;
  double v24;
  __int16 v25;
  double v26;
  uint8_t buf[4];
  double v28;
  __int16 v29;
  double v30;
  __int16 v31;
  double v32;
  __int16 v33;
  double v34;

  if (*(_BYTE *)(a1 + 112))
  {
    HIDWORD(v18) = 0;
    v3 = *a2;
    v4 = a2[1];
    if (*a2 != v4)
    {
      v5 = 0;
      v6 = *(float *)(a1 + 148) * *(float *)(a1 + 148);
      do
      {
        sub_1003FFE04(a1, v3, (float *)(a1 + 136), (float *)(a1 + 140), (float *)(a1 + 144), (float *)&v18 + 1);
        v5 |= *((float *)&v18 + 1) > v6;
        if (*((float *)&v18 + 1) > v6)
          v6 = *((float *)&v18 + 1);
        v3 += 72;
      }
      while (v3 != v4);
      if ((v5 & 1) != 0)
        *(float *)(a1 + 148) = sqrtf(v6);
    }
    if (*(double *)(a1 + 184) > 0.0)
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v7 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v8 = *(float *)(a1 + 136);
        v9 = *(float *)(a1 + 140);
        v10 = *(float *)(a1 + 144);
        v11 = *(float *)(a1 + 148);
        *(_DWORD *)buf = 134349824;
        v28 = v8;
        v29 = 2050;
        v30 = v9;
        v31 = 2050;
        v32 = v10;
        v33 = 2050;
        v34 = v11;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,io,cX,%{public}5.1f,cY,%{public}5.1f,cZ,%{public}5.1f,maxV,%{public}4.1lf", buf, 0x2Au);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v12 = *(float *)(a1 + 136);
        v13 = *(float *)(a1 + 140);
        v14 = *(float *)(a1 + 144);
        v15 = *(float *)(a1 + 148);
        v19 = 134349824;
        v20 = v12;
        v21 = 2050;
        v22 = v13;
        v23 = 2050;
        v24 = v14;
        v25 = 2050;
        v26 = v15;
        LODWORD(v18) = 42;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,io,cX,%{public}5.1f,cY,%{public}5.1f,cZ,%{public}5.1f,maxV,%{public}4.1lf", &v19, v18);
        v17 = (uint8_t *)v16;
        sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedIOSamples(const std::vector<CLPIOSample> &)", "%s\n", v16);
        if (v17 != buf)
          free(v17);
      }
    }
  }
}

void sub_100400108(uint64_t a1, int *a2, uint64_t a3)
{
  int v5;
  int v7;
  NSObject *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  double v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  NSObject *v24;
  int v25;
  int v26;
  const char *v27;
  NSObject *v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  const char *v40;
  uint8_t *v41;
  uint8_t *v42;
  uint64_t v43;
  __int16 v44;
  int v45;
  __int16 v46;
  int v47;
  __int16 v48;
  int v49;
  __int16 v50;
  uint64_t v51;
  uint8_t buf[4];
  int v53;
  __int16 v54;
  int v55;
  __int16 v56;
  int v57;
  __int16 v58;
  int v59;
  __int16 v60;
  uint64_t v61;

  v5 = *a2;
  if (*a2 > 0x16)
    goto LABEL_16;
  if (((1 << v5) & 0x1B) != 0)
  {
    if (*(unsigned __int8 *)(a1 + 129) != *(unsigned __int8 *)(a3 + 768)
      || (v7 = sub_100219C74(a1 + 224), v7 != sub_100219C74(a3)))
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v8 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v9 = *a2;
        v10 = sub_100219C74(a3);
        v11 = *(unsigned __int8 *)(a3 + 768);
        v12 = *(unsigned __int8 *)(a1 + 42);
        v13 = *(_QWORD *)(a3 + 504);
        *(_DWORD *)buf = 67241216;
        v53 = v9;
        v54 = 1026;
        v55 = v10;
        v56 = 1026;
        v57 = v11;
        v58 = 1026;
        v59 = v12;
        v60 = 2050;
        v61 = v13;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,notification,%{public}d,isLatLonAltValid,%{public}d,isWifiFixWithAssociatedAp,%{public}d,fIsAssociatedToStaticWiFiAP,%{public}d,mct,%{public}.3lf", buf, 0x24u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v34 = qword_1022A0028;
        v35 = *a2;
        v36 = sub_100219C74(a3);
        v37 = *(unsigned __int8 *)(a3 + 768);
        v38 = *(unsigned __int8 *)(a1 + 42);
        v39 = *(_QWORD *)(a3 + 504);
        LODWORD(v43) = 67241216;
        HIDWORD(v43) = v35;
        v44 = 1026;
        v45 = v36;
        v46 = 1026;
        v47 = v37;
        v48 = 1026;
        v49 = v38;
        v50 = 2050;
        v51 = v39;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v34, 2, "#GPSPowerSavings,wifi,notification,%{public}d,isLatLonAltValid,%{public}d,isWifiFixWithAssociatedAp,%{public}d,fIsAssociatedToStaticWiFiAP,%{public}d,mct,%{public}.3lf", &v43, 36);
        v41 = (uint8_t *)v40;
        sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWifiLocation(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v40);
        if (v41 != buf)
          free(v41);
      }
    }
    v14 = sub_100219C74(a3);
    v15 = *(_BYTE *)(a3 + 768);
    v16 = *(double *)(a3 + 504);
    if (!v14)
    {
      v15 = 0;
      v16 = -1.0;
    }
    *(_BYTE *)(a1 + 129) = v15;
    *(double *)(a1 + 208) = v16;
    v17 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)a3;
    *(_OWORD *)(a1 + 240) = v17;
    v18 = *(_OWORD *)(a3 + 80);
    v20 = *(_OWORD *)(a3 + 32);
    v19 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(a1 + 304) = v18;
    *(_OWORD *)(a1 + 256) = v20;
    *(_OWORD *)(a1 + 272) = v19;
    v22 = *(_OWORD *)(a3 + 112);
    v21 = *(_OWORD *)(a3 + 128);
    v23 = *(_OWORD *)(a3 + 96);
    *(_OWORD *)(a1 + 364) = *(_OWORD *)(a3 + 140);
    *(_OWORD *)(a1 + 336) = v22;
    *(_OWORD *)(a1 + 352) = v21;
    *(_OWORD *)(a1 + 320) = v23;
    if (*(double *)(a1 + 48) <= 0.0)
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a3 + 504);
    return;
  }
  if (v5 != 9)
  {
    if (v5 == 22)
      return;
LABEL_16:
    if (*(double *)(a1 + 184) > 0.0)
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v24 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v25 = *a2;
        *(_DWORD *)buf = 67240192;
        v53 = v25;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,unhandled notification,%{public}d", buf, 8u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v26 = *a2;
        LODWORD(v43) = 67240192;
        HIDWORD(v43) = v26;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,wifi,unhandled notification,%{public}d", &v43, 8, v43);
LABEL_39:
        v42 = (uint8_t *)v27;
        sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWifiLocation(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v27);
        if (v42 != buf)
          free(v42);
        return;
      }
    }
    return;
  }
  *(_DWORD *)(a1 + 224) = 0xFFFF;
  *(_QWORD *)(a1 + 236) = 0;
  *(_QWORD *)(a1 + 228) = 0;
  *(_OWORD *)(a1 + 244) = xmmword_101BAFC90;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 260) = _Q0;
  *(_OWORD *)(a1 + 276) = _Q0;
  *(_OWORD *)(a1 + 292) = _Q0;
  *(_DWORD *)(a1 + 308) = 0;
  *(_QWORD *)(a1 + 320) = 0;
  *(_QWORD *)(a1 + 328) = 0;
  *(_QWORD *)(a1 + 312) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 340) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 348) = 0x7FFFFFFF;
  *(_QWORD *)(a1 + 360) = 0;
  *(_QWORD *)(a1 + 368) = 0;
  *(_QWORD *)(a1 + 352) = 0;
  *(_BYTE *)(a1 + 376) = 0;
  *(_BYTE *)(a1 + 129) = 0;
  *(_QWORD *)&_Q0 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 208) = 0xBFF0000000000000;
  if (*(double *)&_Q0 > 0.0)
  {
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v33 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,unavailable", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      LOWORD(v43) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,wifi,unavailable", &v43, 2, v43);
      goto LABEL_39;
    }
  }
}

void sub_1004006B0(uint64_t a1, int *a2, uint64_t a3)
{
  int v4;
  int v7;
  double v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  NSObject *v21;
  const char *v22;
  NSObject *v23;
  int v24;
  int v25;
  uint8_t *v26;
  _QWORD v27[2];
  uint8_t buf[4];
  int v29;

  v4 = *a2;
  if (*a2 > 9)
    goto LABEL_16;
  if (((1 << v4) & 0x1B) != 0)
  {
    v7 = sub_100219C74(a3);
    v8 = *(double *)(a3 + 504);
    if (!v7)
      v8 = -1.0;
    *(double *)(a1 + 216) = v8;
    v9 = *(_OWORD *)(a3 + 96);
    v10 = *(_OWORD *)(a3 + 112);
    v11 = *(_OWORD *)(a3 + 128);
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a3 + 140);
    *(_OWORD *)(a1 + 492) = v10;
    *(_OWORD *)(a1 + 508) = v11;
    *(_OWORD *)(a1 + 476) = v9;
    v12 = *(_OWORD *)(a3 + 32);
    v13 = *(_OWORD *)(a3 + 48);
    v14 = *(_OWORD *)(a3 + 80);
    *(_OWORD *)(a1 + 444) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(a1 + 460) = v14;
    *(_OWORD *)(a1 + 412) = v12;
    *(_OWORD *)(a1 + 428) = v13;
    v15 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(a1 + 380) = *(_OWORD *)a3;
    *(_OWORD *)(a1 + 396) = v15;
    return;
  }
  if (v4 == 9)
  {
    *(_DWORD *)(a1 + 380) = 0xFFFF;
    *(_QWORD *)(a1 + 384) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a1 + 400) = xmmword_101BAFC90;
    *(_OWORD *)(a1 + 416) = _Q1;
    *(_OWORD *)(a1 + 432) = _Q1;
    *(_OWORD *)(a1 + 448) = _Q1;
    *(_DWORD *)(a1 + 464) = 0;
    *(_DWORD *)(a1 + 492) = 0;
    *(_QWORD *)(a1 + 476) = 0;
    *(_QWORD *)(a1 + 484) = 0;
    *(_QWORD *)(a1 + 468) = 0xBFF0000000000000;
    *(_QWORD *)(a1 + 496) = 0xBFF0000000000000;
    *(_DWORD *)(a1 + 504) = 0x7FFFFFFF;
    *(_BYTE *)(a1 + 532) = 0;
    *(_QWORD *)(a1 + 516) = 0;
    *(_QWORD *)(a1 + 524) = 0;
    *(_QWORD *)(a1 + 508) = 0;
    *(_QWORD *)(a1 + 216) = 0xBFF0000000000000;
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v21 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,gps,unavailable", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      LOWORD(v27[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,gps,unavailable", v27, 2, v27[0]);
LABEL_24:
      v26 = (uint8_t *)v22;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsLocation(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v22);
      if (v26 != buf)
        free(v26);
    }
  }
  else
  {
LABEL_16:
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v23 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      v24 = *a2;
      *(_DWORD *)buf = 67240192;
      v29 = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,gps,unhandled notification,%{public}d", buf, 8u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v25 = *a2;
      LODWORD(v27[0]) = 67240192;
      HIDWORD(v27[0]) = v25;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,gps,unhandled notification,%{public}d", v27, 8, v27[0]);
      goto LABEL_24;
    }
  }
}

void sub_100400A08(uint64_t a1, int a2, int a3)
{
  NSObject *v6;
  uint64_t v7;
  int v8;
  NSObject *v9;
  double v10;
  BOOL v11;
  uint64_t v12;
  NSObject *v13;
  const char *v14;
  NSObject *v15;
  const char *v16;
  uint8_t *v17;
  const char *v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  int v24;
  uint8_t buf[4];
  int v26;
  __int16 v27;
  int v28;

  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_102138018);
  v6 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67240448;
    v26 = a2;
    v27 = 1026;
    v28 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,isGpsHWActive,%{public}d,didStatusChange,%{public}d", buf, 0xEu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    LODWORD(v22) = 67240448;
    HIDWORD(v22) = a2;
    v23 = 1026;
    v24 = a3;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,isGpsHWActive,%{public}d,didStatusChange,%{public}d", &v22, 14);
    v17 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsStatusNotification(const BOOL, const BOOL)", "%s\n", v16);
    if (v17 != buf)
      free(v17);
  }
  if (a3)
  {
    if ((a2 & 1) != 0)
    {
      sub_10040161C(a1 + 128);
      v7 = sub_100B303DC();
      *(_DWORD *)buf = 1;
      *(double *)(a1 + 184) = sub_100B30608(v7, buf);
      v8 = *(unsigned __int8 *)(a1 + 41);
      *(_BYTE *)(a1 + 134) = v8;
      if (!v8)
      {
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v9 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,session started outside location controller", buf, 2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          LOWORD(v22) = 0;
          LODWORD(v21) = 2;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,session started outside location controller", &v22, v21);
          v19 = (uint8_t *)v18;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsStatusNotification(const BOOL, const BOOL)", "%s\n", v18);
          if (v19 != buf)
            free(v19);
        }
      }
      v10 = *(double *)(a1 + 120);
      v11 = v10 > 0.0 && *(double *)(a1 + 184) - v10 > 15.0;
      *(_BYTE *)(a1 + 128) = v11;
      *(_BYTE *)(a1 + 132) = *(_BYTE *)(a1 + 80);
      *(_BYTE *)(a1 + 131) = *(_BYTE *)(a1 + 64);
      return;
    }
    v12 = sub_100B303DC();
    *(_DWORD *)buf = 1;
    *(double *)(a1 + 200) = sub_100B30608(v12, buf);
    sub_100400FA4(a1);
    sub_10040161C(a1 + 128);
    if (*(_BYTE *)(a1 + 40))
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v13 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,ending session without resetting IO", buf, 2u);
      }
      if (!sub_1001BFF7C(115, 2))
        goto LABEL_32;
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      LOWORD(v22) = 0;
      LODWORD(v21) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,ending session without resetting IO", &v22, v21, v22);
    }
    else
    {
      *(_QWORD *)(a1 + 136) = 0;
      *(_QWORD *)(a1 + 144) = 0;
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v15 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,ending session and resetting IO", buf, 2u);
      }
      if (!sub_1001BFF7C(115, 2))
        goto LABEL_32;
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      LOWORD(v22) = 0;
      LODWORD(v21) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,ending session and resetting IO", &v22, v21, v22);
    }
    v20 = (uint8_t *)v14;
    sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsStatusNotification(const BOOL, const BOOL)", "%s\n", v14);
    if (v20 != buf)
      free(v20);
LABEL_32:
    *(_BYTE *)(a1 + 41) = 0;
  }
}

void sub_100400FA4(uint64_t a1)
{
  int v1;
  unsigned __int16 *v3;
  int v4;
  int v5;
  int v6;
  int32x2_t v7;
  double v8;
  double v9;
  double v10;
  _WORD *v11;
  NSObject *v12;
  const char *v13;
  uint8_t *v14;
  _WORD *v15;
  _WORD *v16;
  double v17;
  double v18;
  double v19;
  _WORD *v20;
  NSObject *v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  const char *v27;
  uint8_t *v28;
  _DWORD v29[2];
  __int16 v30;
  int v31;
  uint8_t buf[8];
  __int16 v33;
  int v34;

  v1 = *(_DWORD *)(a1 + 168);
  if (v1)
  {
    v3 = (unsigned __int16 *)(a1 + 536);
    ++*(_WORD *)(a1 + 546);
    *(_DWORD *)(a1 + 564) += *(_DWORD *)(a1 + 172);
    *(_WORD *)(a1 + 536) += *(_WORD *)(a1 + 176);
    v4 = *(_DWORD *)(a1 + 160);
    v5 = *(_DWORD *)(a1 + 164);
    *(_DWORD *)(a1 + 568) += v4;
    v6 = *(_DWORD *)(a1 + 572);
    *(_DWORD *)(a1 + 560) += v1;
    *(_DWORD *)(a1 + 676) += v5;
    *(_WORD *)(a1 + 544) += *(unsigned __int8 *)(a1 + 133);
    v7 = *(int32x2_t *)(a1 + 152);
    *(_DWORD *)(a1 + 572) = v7.i32[0] - v4 + v6;
    *(int32x2_t *)(a1 + 580) = vadd_s32(*(int32x2_t *)(a1 + 580), v7);
    if (*(_BYTE *)(a1 + 134))
      ++*(_WORD *)(a1 + 548);
    if (*(_BYTE *)(a1 + 128))
      ++*(_WORD *)(a1 + 538);
    if (*(_BYTE *)(a1 + 131))
    {
      ++*(_WORD *)(a1 + 540);
      if (!v7.i32[1])
      {
        if (!*(_BYTE *)(a1 + 132))
        {
LABEL_75:
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          v21 = qword_1022A0028;
          if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
          {
            v22 = *(_DWORD *)(a1 + 152);
            v23 = *(_DWORD *)(a1 + 580);
            *(_DWORD *)buf = 67240448;
            *(_DWORD *)&buf[4] = v22;
            v33 = 1026;
            v34 = v23;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,addSessionCountsToCA,fSessionDuration,%{public}d,fCountTotalSeconds,%{public}d", buf, 0xEu);
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1022A0020 != -1)
              dispatch_once(&qword_1022A0020, &stru_102138018);
            v25 = *(_DWORD *)(a1 + 152);
            v26 = *(_DWORD *)(a1 + 580);
            v29[0] = 67240448;
            v29[1] = v25;
            v30 = 1026;
            v31 = v26;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,addSessionCountsToCA,fSessionDuration,%{public}d,fCountTotalSeconds,%{public}d", v29, 14);
            v28 = (uint8_t *)v27;
            sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::addSessionCountsToCAandSubmit()", "%s\n", v27);
            if (v28 != buf)
              free(v28);
          }
          v24 = sub_100B303DC();
          *(_DWORD *)buf = 1;
          *(_QWORD *)buf = sub_100B30608(v24, buf);
          sub_100403D18(v3, (double *)buf);
          return;
        }
        v15 = (_WORD *)(a1 + 542);
LABEL_74:
        ++*v15;
        goto LABEL_75;
      }
      v8 = *(double *)(a1 + 72);
      v9 = v8 - *(double *)(a1 + 192);
      v10 = *(double *)(a1 + 200) - v8;
      if (v9 >= 0.0)
      {
        if (v9 >= 5.0)
        {
          if (v9 >= 10.0)
          {
            if (v9 >= 30.0)
            {
              if (v9 >= 60.0)
              {
                if (v9 >= 90.0)
                  v11 = (_WORD *)(a1 + 720);
                else
                  v11 = (_WORD *)(a1 + 718);
              }
              else
              {
                v11 = (_WORD *)(a1 + 716);
              }
            }
            else
            {
              v11 = (_WORD *)(a1 + 714);
            }
          }
          else
          {
            v11 = (_WORD *)(a1 + 712);
          }
        }
        else
        {
          v11 = (_WORD *)(a1 + 710);
        }
      }
      else
      {
        v11 = (_WORD *)(a1 + 708);
      }
      ++*v11;
      if (v10 >= 0.0)
      {
        if (v10 >= 5.0)
        {
          if (v10 >= 10.0)
          {
            if (v10 >= 30.0)
            {
              if (v10 >= 60.0)
              {
                if (v10 >= 90.0)
                  v16 = (_WORD *)(a1 + 734);
                else
                  v16 = (_WORD *)(a1 + 732);
              }
              else
              {
                v16 = (_WORD *)(a1 + 730);
              }
            }
            else
            {
              v16 = (_WORD *)(a1 + 728);
            }
          }
          else
          {
            v16 = (_WORD *)(a1 + 726);
          }
        }
        else
        {
          v16 = (_WORD *)(a1 + 724);
        }
      }
      else
      {
        v16 = (_WORD *)(a1 + 722);
      }
      ++*v16;
    }
    if (!*(_BYTE *)(a1 + 132))
      goto LABEL_75;
    ++*(_WORD *)(a1 + 542);
    if (!v7.i32[1])
      goto LABEL_75;
    v17 = *(double *)(a1 + 88);
    v18 = v17 - *(double *)(a1 + 192);
    v19 = *(double *)(a1 + 200) - v17;
    if (v18 >= 0.0)
    {
      if (v18 >= 5.0)
      {
        if (v18 >= 10.0)
        {
          if (v18 >= 30.0)
          {
            if (v18 >= 60.0)
            {
              if (v18 >= 90.0)
                v20 = (_WORD *)(a1 + 692);
              else
                v20 = (_WORD *)(a1 + 690);
            }
            else
            {
              v20 = (_WORD *)(a1 + 688);
            }
          }
          else
          {
            v20 = (_WORD *)(a1 + 686);
          }
        }
        else
        {
          v20 = (_WORD *)(a1 + 684);
        }
      }
      else
      {
        v20 = (_WORD *)(a1 + 682);
      }
    }
    else
    {
      v20 = (_WORD *)(a1 + 680);
    }
    ++*v20;
    if (v19 >= 0.0)
    {
      if (v19 >= 5.0)
      {
        if (v19 >= 10.0)
        {
          if (v19 >= 30.0)
          {
            if (v19 >= 60.0)
            {
              if (v19 >= 90.0)
                v15 = (_WORD *)(a1 + 706);
              else
                v15 = (_WORD *)(a1 + 704);
            }
            else
            {
              v15 = (_WORD *)(a1 + 702);
            }
          }
          else
          {
            v15 = (_WORD *)(a1 + 700);
          }
        }
        else
        {
          v15 = (_WORD *)(a1 + 698);
        }
      }
      else
      {
        v15 = (_WORD *)(a1 + 696);
      }
    }
    else
    {
      v15 = (_WORD *)(a1 + 694);
    }
    goto LABEL_74;
  }
  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_102138018);
  v12 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,addSessionCountsToCA,nothing to submit,fCountStationaryWithPersonalizedWifiAP,0", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    LOWORD(v29[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,addSessionCountsToCA,nothing to submit,fCountStationaryWithPersonalizedWifiAP,0", v29, 2);
    v14 = (uint8_t *)v13;
    sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::addSessionCountsToCAandSubmit()", "%s\n", v13);
    if (v14 != buf)
      free(v14);
  }
}

uint64_t sub_10040161C(uint64_t a1)
{
  uint64_t result;

  *(_DWORD *)(a1 + 3) = 0;
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 48) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 56) = _Q0;
  *(_OWORD *)(a1 + 72) = _Q0;
  *(_QWORD *)(a1 + 88) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 96) = 0xFFFF;
  *(_QWORD *)(a1 + 108) = 0;
  *(_QWORD *)(a1 + 100) = 0;
  *(_OWORD *)(a1 + 116) = xmmword_101BAFC90;
  *(_OWORD *)(a1 + 132) = _Q0;
  *(_OWORD *)(a1 + 148) = _Q0;
  *(_OWORD *)(a1 + 164) = _Q0;
  *(_DWORD *)(a1 + 180) = 0;
  *(_QWORD *)(a1 + 184) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 252) = 0xFFFF;
  result = a1 + 252;
  *(_QWORD *)(result - 52) = 0;
  *(_QWORD *)(result - 60) = 0;
  *(_DWORD *)(result - 44) = 0;
  *(_QWORD *)(result - 40) = 0xBFF0000000000000;
  *(_DWORD *)(result - 32) = 0x7FFFFFFF;
  *(_QWORD *)(result - 12) = 0;
  *(_QWORD *)(result - 28) = 0;
  *(_QWORD *)(result - 20) = 0;
  *(_BYTE *)(result - 4) = 0;
  *(_QWORD *)(result + 4) = 0;
  *(_QWORD *)(result + 12) = 0;
  *(_OWORD *)(result + 20) = xmmword_101BAFC90;
  *(_OWORD *)(result + 36) = _Q0;
  *(_OWORD *)(result + 52) = _Q0;
  *(_OWORD *)(result + 68) = _Q0;
  *(_DWORD *)(result + 84) = 0;
  *(_QWORD *)(result + 96) = 0;
  *(_QWORD *)(result + 104) = 0;
  *(_QWORD *)(result + 88) = 0xBFF0000000000000;
  *(_DWORD *)(result + 112) = 0;
  *(_QWORD *)(result + 116) = 0xBFF0000000000000;
  *(_DWORD *)(result + 124) = 0x7FFFFFFF;
  *(_BYTE *)(result + 152) = 0;
  *(_QWORD *)(result + 136) = 0;
  *(_QWORD *)(result + 144) = 0;
  *(_QWORD *)(result + 128) = 0;
  return result;
}

void sub_1004016E0(uint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v6;
  double v7;
  NSObject *v8;
  int v9;
  uint64_t v10;
  double v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  double v15;
  NSObject *v16;
  int v17;
  NSObject *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  double v25;
  NSObject *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  const char *v33;
  uint8_t *v34;
  int v35;
  const char *v36;
  uint8_t *v37;
  int v38;
  const char *v39;
  uint8_t *v40;
  int v41;
  const char *v42;
  uint8_t *v43;
  int v44;
  const char *v45;
  uint8_t *v46;
  uint64_t v47;
  int v48;
  int v49;
  __int16 v50;
  int v51;
  __int16 v52;
  int v53;
  __int16 v54;
  int v55;
  __int16 v56;
  int v57;
  uint8_t buf[4];
  int v59;
  __int16 v60;
  int v61;
  __int16 v62;
  int v63;
  __int16 v64;
  int v65;
  __int16 v66;
  int v67;

  v5 = *a3;
  if (*a3 > 40)
  {
    if (v5 == 41)
    {
LABEL_21:
      if (!*(_BYTE *)(a1 + 96))
      {
        v14 = sub_100B303DC();
        *(_DWORD *)buf = 1;
        v15 = sub_100B30608(v14, buf);
        *(_BYTE *)(a1 + 96) = 1;
        *(double *)(a1 + 104) = v15;
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v16 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
        {
          v17 = *a3;
          *(_DWORD *)buf = 67240192;
          v59 = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,walking,%{public}d", buf, 8u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          v41 = *a3;
          v48 = 67240192;
          v49 = v41;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,walking,%{public}d", &v48, 8);
          v43 = (uint8_t *)v42;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v42);
          if (v43 != buf)
            free(v43);
        }
      }
      *(_BYTE *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 0xBFF0000000000000;
      *(_BYTE *)(a1 + 80) = 0;
      *(_QWORD *)(a1 + 88) = 0xBFF0000000000000;
      *(_BYTE *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 72) = 0xBFF0000000000000;
    }
    else if (v5 == 52 || v5 == 56)
    {
LABEL_13:
      if (!*(_BYTE *)(a1 + 80))
      {
        v10 = sub_100B303DC();
        *(_DWORD *)buf = 1;
        v11 = sub_100B30608(v10, buf);
        *(_BYTE *)(a1 + 80) = 1;
        *(double *)(a1 + 88) = v11;
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v12 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
        {
          v13 = *a3;
          *(_DWORD *)buf = 67240192;
          v59 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,driving,%{public}d", buf, 8u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          v38 = *a3;
          v48 = 67240192;
          v49 = v38;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,driving,%{public}d", &v48, 8);
          v40 = (uint8_t *)v39;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v39);
          if (v40 != buf)
            free(v40);
        }
      }
      *(_BYTE *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 0xBFF0000000000000;
      *(_BYTE *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 72) = 0xBFF0000000000000;
      *(_BYTE *)(a1 + 96) = 0;
      *(_QWORD *)(a1 + 104) = 0xBFF0000000000000;
      if (*(double *)(a1 + 184) > 0.0)
        *(_BYTE *)(a1 + 132) = 1;
    }
    else
    {
LABEL_35:
      if (!*(_BYTE *)(a1 + 64))
      {
        v24 = sub_100B303DC();
        *(_DWORD *)buf = 1;
        v25 = sub_100B30608(v24, buf);
        *(_BYTE *)(a1 + 64) = 1;
        *(double *)(a1 + 72) = v25;
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v26 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
        {
          v27 = *a3;
          *(_DWORD *)buf = 67240192;
          v59 = v27;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,fitness,%{public}d", buf, 8u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          v44 = *a3;
          v48 = 67240192;
          v49 = v44;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,fitness,%{public}d", &v48, 8);
          v46 = (uint8_t *)v45;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v45);
          if (v46 != buf)
            free(v46);
        }
      }
      *(_BYTE *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 0xBFF0000000000000;
      *(_BYTE *)(a1 + 80) = 0;
      *(_QWORD *)(a1 + 88) = 0xBFF0000000000000;
      *(_BYTE *)(a1 + 96) = 0;
      *(_QWORD *)(a1 + 104) = 0xBFF0000000000000;
      if (*(double *)(a1 + 184) > 0.0)
        *(_BYTE *)(a1 + 131) = 1;
    }
  }
  else
  {
    switch(v5)
    {
      case 0:
        break;
      case 1:
      case 2:
      case 3:
      case 7:
      case 9:
        if (!*(_BYTE *)(a1 + 112))
        {
          v6 = sub_100B303DC();
          *(_DWORD *)buf = 1;
          v7 = sub_100B30608(v6, buf);
          *(_BYTE *)(a1 + 112) = 1;
          *(double *)(a1 + 120) = v7;
          *(_QWORD *)(a1 + 136) = 0;
          *(_QWORD *)(a1 + 144) = 0;
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          v8 = qword_1022A0028;
          if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
          {
            v9 = *a3;
            *(_DWORD *)buf = 67240192;
            v59 = v9;
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,plausibly_stationary,%{public}d", buf, 8u);
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1022A0020 != -1)
              dispatch_once(&qword_1022A0020, &stru_102138018);
            v35 = *a3;
            v48 = 67240192;
            v49 = v35;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,plausibly_stationary,%{public}d", &v48, 8);
            v37 = (uint8_t *)v36;
            sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v36);
            if (v37 != buf)
              free(v37);
          }
        }
        *(_BYTE *)(a1 + 80) = 0;
        *(_QWORD *)(a1 + 88) = 0xBFF0000000000000;
        *(_BYTE *)(a1 + 64) = 0;
        *(_QWORD *)(a1 + 72) = 0xBFF0000000000000;
        *(_BYTE *)(a1 + 96) = 0;
        *(_QWORD *)(a1 + 104) = 0xBFF0000000000000;
        break;
      case 4:
        goto LABEL_21;
      case 5:
      case 10:
      case 11:
        goto LABEL_13;
      default:
        goto LABEL_35;
    }
  }
  if (*(double *)(a1 + 184) > 0.0)
  {
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v18 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      v19 = *a3;
      v20 = *(unsigned __int8 *)(a1 + 112);
      v21 = *(unsigned __int8 *)(a1 + 132);
      v22 = *(unsigned __int8 *)(a1 + 131);
      v23 = *(unsigned __int8 *)(a1 + 96);
      *(_DWORD *)buf = 67241216;
      v59 = v19;
      v60 = 1026;
      v61 = v20;
      v62 = 1026;
      v63 = v21;
      v64 = 1026;
      v65 = v22;
      v66 = 1026;
      v67 = v23;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,raw,motion,%{public}d,fPlausiblyStationary,%{public}d,fWasDriving,%{public}d,fWasFitness,%{public}d,fIsWalking,%{public}d", buf, 0x20u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v28 = *a3;
      v29 = *(unsigned __int8 *)(a1 + 112);
      v30 = *(unsigned __int8 *)(a1 + 132);
      v31 = *(unsigned __int8 *)(a1 + 131);
      v32 = *(unsigned __int8 *)(a1 + 96);
      v48 = 67241216;
      v49 = v28;
      v50 = 1026;
      v51 = v29;
      v52 = 1026;
      v53 = v30;
      v54 = 1026;
      v55 = v31;
      v56 = 1026;
      v57 = v32;
      LODWORD(v47) = 32;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,raw,motion,%{public}d,fPlausiblyStationary,%{public}d,fWasDriving,%{public}d,fWasFitness,%{public}d,fIsWalking,%{public}d", &v48, v47);
      v34 = (uint8_t *)v33;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v33);
      if (v34 != buf)
        free(v34);
    }
  }
}

void sub_100401FF4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  NSObject *v4;
  const char *v5;
  uint8_t *v6;
  NSObject *v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  NSObject *v15;
  int v16;
  int v17;
  const char *v18;
  uint8_t *v19;
  BOOL v20;
  int v21;
  int v22;
  const char *v23;
  uint8_t *v24;
  uint64_t v25;
  int v26;
  int v27;
  __int16 v28;
  int v29;
  uint8_t buf[4];
  int v31;
  __int16 v32;
  int v33;

  if (*a2 == 6)
  {
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v8 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      if (*(_BYTE *)(a3 + 96))
        v9 = *(_DWORD *)(a3 + 48) <= 0;
      else
        v9 = 1;
      v10 = !v9;
      v11 = *(unsigned __int8 *)(a3 + 73);
      *(_DWORD *)buf = 67240448;
      v31 = v10;
      v32 = 1026;
      v33 = v11;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,wifi link status changed,isAssociated,%{public}d,isMoving,%{public}d", buf, 0xEu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      if (*(_BYTE *)(a3 + 96))
        v20 = *(_DWORD *)(a3 + 48) <= 0;
      else
        v20 = 1;
      v21 = !v20;
      v22 = *(unsigned __int8 *)(a3 + 73);
      v26 = 67240448;
      v27 = v21;
      v28 = 1026;
      v29 = v22;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,wifi link status changed,isAssociated,%{public}d,isMoving,%{public}d", &v26, 14);
      v24 = (uint8_t *)v23;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWiFiServiceNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v23);
      if (v24 != buf)
        free(v24);
    }
    if (*(_BYTE *)(a3 + 96))
    {
      v12 = *(_DWORD *)(a3 + 48);
      v13 = v12 > 0;
      if (*(_BYTE *)(a3 + 73))
        v13 = 0;
      *(_BYTE *)(a1 + 42) = v13;
      if (v12 > 0)
      {
        v14 = sub_100B303DC();
        *(_DWORD *)buf = 1;
        *(double *)(a1 + 48) = sub_100B30608(v14, buf);
        goto LABEL_33;
      }
    }
    else
    {
      *(_BYTE *)(a1 + 42) = 0;
    }
    *(_QWORD *)(a1 + 48) = 0xBFF0000000000000;
  }
  else
  {
    if (*a2 != 7)
      goto LABEL_33;
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v4 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,wifi link roam", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      LOWORD(v26) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,wifi link roam", &v26, 2);
      v6 = (uint8_t *)v5;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWiFiServiceNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v5);
      if (v6 != buf)
        free(v6);
    }
  }
  if (*(_BYTE *)(a1 + 112) && *(double *)(a1 + 184) > 0.0)
    ++*(_WORD *)(a1 + 176);
LABEL_33:
  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_102138018);
  v15 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    v16 = *(unsigned __int8 *)(a1 + 42);
    *(_DWORD *)buf = 67240192;
    v31 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,fIsAssociatedToStaticWiFiAP,%{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v17 = *(unsigned __int8 *)(a1 + 42);
    v26 = 67240192;
    v27 = v17;
    LODWORD(v25) = 8;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,wifi,fIsAssociatedToStaticWiFiAP,%{public}d", &v26, v25);
    v19 = (uint8_t *)v18;
    sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWiFiServiceNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v18);
    if (v19 != buf)
      free(v19);
  }
}

void sub_1004024E8(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint8_t *v4;
  _WORD v5[8];
  uint8_t buf[1640];

  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_102138018);
  v2 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,accessory connected", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v5[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,accessory connected", v5, 2);
    v4 = (uint8_t *)v3;
    sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedAccessoryConnected()", "%s\n", v3);
    if (v4 != buf)
      free(v4);
  }
  *(_BYTE *)(a1 + 133) = 1;
}

void sub_100402680(uint64_t a1)
{
  NSObject *v1;
  char *v2;
  _WORD v3[8];
  uint8_t buf[1640];

  *(_BYTE *)(a1 + 41) = 1;
  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_102138018);
  v1 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,session starting from location controller", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v3[0] = 0;
    v2 = (char *)_os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,notification,session starting from location controller", v3, 2);
    sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedSessionStartFromLC()", "%s\n", v2);
    if (v2 != (char *)buf)
      free(v2);
  }
}

void sub_10040280C(uint64_t a1, double *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  NSObject *v9;
  const char *v10;
  uint8_t *v11;
  BOOL v12;
  NSObject *v13;
  NSObject *v14;
  double v15;
  double v16;
  double v17;
  int v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  int v26;
  int v27;
  int v28;
  int v29;
  double v30;
  double v31;
  int v32;
  int v33;
  int v34;
  int v35;
  double v36;
  double v37;
  NSObject *v38;
  uint64_t v39;
  double v40;
  double v41;
  int v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  int v51;
  int v52;
  int v53;
  int v54;
  double v55;
  double v56;
  int v57;
  int v58;
  int v59;
  int v60;
  double v61;
  double v62;
  const char *v63;
  uint8_t *v64;
  const char *v65;
  uint8_t *v66;
  const char *v67;
  uint8_t *v68;
  uint64_t v69;
  int v70;
  double v71;
  __int16 v72;
  int v73;
  __int16 v74;
  double v75;
  __int16 v76;
  double v77;
  __int16 v78;
  int v79;
  __int16 v80;
  int v81;
  __int16 v82;
  int v83;
  __int16 v84;
  int v85;
  __int16 v86;
  double v87;
  __int16 v88;
  double v89;
  __int16 v90;
  double v91;
  __int16 v92;
  double v93;
  __int16 v94;
  double v95;
  __int16 v96;
  int v97;
  __int16 v98;
  int v99;
  __int16 v100;
  int v101;
  __int16 v102;
  int v103;
  uint8_t buf[4];
  double v105;
  __int16 v106;
  int v107;
  __int16 v108;
  double v109;
  __int16 v110;
  double v111;
  __int16 v112;
  int v113;
  __int16 v114;
  int v115;
  __int16 v116;
  int v117;
  __int16 v118;
  int v119;
  __int16 v120;
  double v121;
  __int16 v122;
  double v123;
  __int16 v124;
  double v125;
  __int16 v126;
  double v127;
  __int16 v128;
  double v129;
  __int16 v130;
  int v131;
  __int16 v132;
  int v133;
  __int16 v134;
  int v135;
  __int16 v136;
  int v137;

  if (*(_BYTE *)(a1 + 112))
  {
    v4 = *(double *)(a1 + 120);
    v5 = *a2;
    if (v4 <= 0.0)
      v6 = 0.0;
    else
      v6 = *a2 - v4;
    v7 = *(double *)(a1 + 208);
    v8 = v5 - v7;
    if (v7 <= 0.0)
      v8 = 65.0;
    if (v6 <= 15.0 && !*(_BYTE *)(a1 + 128)
      || (sqrtf((float)((float)(*(float *)(a1 + 140) * *(float *)(a1 + 140))+ (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136)))+ (float)(*(float *)(a1 + 144) * *(float *)(a1 + 144))) < 5.0? (v12 = *(float *)(a1 + 148) < 2.0): (v12 = 0), !v12|| !*(_BYTE *)(a1 + 42)|| !*(_BYTE *)(a1 + 129)|| *(_BYTE *)(a1 + 131)|| *(_BYTE *)(a1 + 132)|| *(_BYTE *)(a1 + 133)|| *(_WORD *)(a1 + 176)|| v8 >= 65.0))
    {
      if (*(_BYTE *)(a1 + 40))
      {
        *(double *)(a1 + 200) = v5;
        *(_BYTE *)(a1 + 40) = 0;
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v13 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,false", buf, 2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          LOWORD(v70) = 0;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 1, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,false", &v70, 2);
          v66 = (uint8_t *)v65;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v65);
          if (v66 != buf)
            free(v66);
        }
      }
    }
    else
    {
      if (!*(_BYTE *)(a1 + 40))
      {
        *(double *)(a1 + 192) = v5;
        *(_BYTE *)(a1 + 40) = 1;
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138018);
        v38 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_INFO, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,true", buf, 2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138018);
          LOWORD(v70) = 0;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 1, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,true", &v70, 2);
          v68 = (uint8_t *)v67;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v67);
          if (v68 != buf)
            free(v68);
        }
      }
      ++*(_DWORD *)(a1 + 156);
    }
    sub_100403164(a1);
  }
  else if (*(_BYTE *)(a1 + 40))
  {
    *(double *)(a1 + 200) = *a2;
    *(_BYTE *)(a1 + 40) = 0;
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v9 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,false", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      LOWORD(v70) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 1, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,false", &v70, 2);
      v11 = (uint8_t *)v10;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v10);
      if (v11 != buf)
        free(v11);
    }
  }
  if (*(_DWORD *)(a1 + 160))
  {
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v14 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      v15 = *(double *)(a1 + 120);
      v16 = -1.0;
      if (v15 <= 0.0)
        v17 = -1.0;
      else
        v17 = *a2 - v15;
      v18 = *(unsigned __int8 *)(a1 + 128);
      v19 = *(double *)(a1 + 184);
      if (v19 <= 0.0)
        v20 = -1.0;
      else
        v20 = *a2 - v19;
      if (sub_100219C74(a1 + 380) && sub_100219C74(a1 + 224))
      {
        sub_10011E258((double *)a1, a1 + 380, a1 + 224);
        v16 = v21;
      }
      v23 = *(double *)(a1 + 208);
      v22 = *(double *)(a1 + 216);
      v24 = *a2 - v22;
      v25 = *a2 - v23;
      v26 = *(unsigned __int8 *)(a1 + 112);
      v27 = *(unsigned __int8 *)(a1 + 42);
      v28 = *(unsigned __int8 *)(a1 + 129);
      v29 = *(unsigned __int16 *)(a1 + 176);
      v30 = -1.0;
      if (v22 <= 0.0)
        v24 = -1.0;
      v31 = *(double *)(a1 + 48);
      v32 = *(unsigned __int8 *)(a1 + 131);
      v33 = *(unsigned __int8 *)(a1 + 132);
      v34 = *(unsigned __int8 *)(a1 + 133);
      v35 = *(unsigned __int8 *)(a1 + 40);
      v36 = sqrtf((float)((float)(*(float *)(a1 + 140) * *(float *)(a1 + 140))+ (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136)))+ (float)(*(float *)(a1 + 144) * *(float *)(a1 + 144)));
      if (v23 <= 0.0)
        v25 = -1.0;
      if (v31 > 0.0)
        v30 = *a2 - v31;
      v37 = *(float *)(a1 + 148);
      *(_DWORD *)buf = 134353152;
      v105 = v17;
      v106 = 1026;
      v107 = v18;
      v108 = 2050;
      v109 = v20;
      v110 = 2050;
      v111 = v16;
      v112 = 1026;
      v113 = v26;
      v114 = 1026;
      v115 = v27;
      v116 = 1026;
      v117 = v28;
      v118 = 1026;
      v119 = v29;
      v120 = 2050;
      v121 = v36;
      v122 = 2050;
      v123 = v24;
      v124 = 2050;
      v125 = v25;
      v126 = 2050;
      v127 = v30;
      v128 = 2050;
      v129 = v37;
      v130 = 1026;
      v131 = v32;
      v132 = 1026;
      v133 = v33;
      v134 = 1026;
      v135 = v34;
      v136 = 1026;
      v137 = v35;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,status,stationaryTime,%{public}.0lf,startedStationary,%{public}d,gpsOnTime,%{public}.0lf,GpsWiFidist,%{public}.1lf,fPlausiblyStationary,%{public}d,fIsAssocToStaticWiFiAP,%{public}d,fLastWifiFixWithAssocAp,%{public}d,fWifiDorRoams,%{public}d,IODisplacement,%{public}.1lf,ageOfGpsFix,%{public}.0lf,ageOfWifiFix,%{public}.0lf,ageOfWifiLink,%{public}.0lf,maxIOv,%{public}.1lf,fWasFitness,%{public}d,fWasDriving,%{public}d,fIsConVehicleFlag,%{public}d,fCanSafelyTurnOffGps,%{public}d", buf, 0x88u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v39 = qword_1022A0028;
      v40 = *(double *)(a1 + 120);
      if (v40 <= 0.0)
        v41 = -1.0;
      else
        v41 = *a2 - v40;
      v42 = *(unsigned __int8 *)(a1 + 128);
      v43 = *(double *)(a1 + 184);
      if (v43 <= 0.0)
        v44 = -1.0;
      else
        v44 = *a2 - v43;
      v45 = -1.0;
      if (sub_100219C74(a1 + 380) && sub_100219C74(a1 + 224))
      {
        sub_10011E258((double *)a1, a1 + 380, a1 + 224);
        v45 = v46;
      }
      v48 = *(double *)(a1 + 208);
      v47 = *(double *)(a1 + 216);
      v49 = *a2 - v47;
      v50 = *a2 - v48;
      v51 = *(unsigned __int8 *)(a1 + 112);
      v52 = *(unsigned __int8 *)(a1 + 42);
      v53 = *(unsigned __int8 *)(a1 + 129);
      v54 = *(unsigned __int16 *)(a1 + 176);
      if (v47 <= 0.0)
        v49 = -1.0;
      v55 = *(double *)(a1 + 48);
      v56 = *a2 - v55;
      v57 = *(unsigned __int8 *)(a1 + 131);
      v58 = *(unsigned __int8 *)(a1 + 132);
      v59 = *(unsigned __int8 *)(a1 + 133);
      v60 = *(unsigned __int8 *)(a1 + 40);
      v61 = sqrtf((float)((float)(*(float *)(a1 + 140) * *(float *)(a1 + 140))+ (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136)))+ (float)(*(float *)(a1 + 144) * *(float *)(a1 + 144)));
      if (v48 <= 0.0)
        v50 = -1.0;
      if (v55 <= 0.0)
        v56 = -1.0;
      v62 = *(float *)(a1 + 148);
      v70 = 134353152;
      v71 = v41;
      v72 = 1026;
      v73 = v42;
      v74 = 2050;
      v75 = v44;
      v76 = 2050;
      v77 = v45;
      v78 = 1026;
      v79 = v51;
      v80 = 1026;
      v81 = v52;
      v82 = 1026;
      v83 = v53;
      v84 = 1026;
      v85 = v54;
      v86 = 2050;
      v87 = v61;
      v88 = 2050;
      v89 = v49;
      v90 = 2050;
      v91 = v50;
      v92 = 2050;
      v93 = v56;
      v94 = 2050;
      v95 = v62;
      v96 = 1026;
      v97 = v57;
      v98 = 1026;
      v99 = v58;
      v100 = 1026;
      v101 = v59;
      v102 = 1026;
      v103 = v60;
      LODWORD(v69) = 136;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v39, 2, "#GPSPowerSavings,status,stationaryTime,%{public}.0lf,startedStationary,%{public}d,gpsOnTime,%{public}.0lf,GpsWiFidist,%{public}.1lf,fPlausiblyStationary,%{public}d,fIsAssocToStaticWiFiAP,%{public}d,fLastWifiFixWithAssocAp,%{public}d,fWifiDorRoams,%{public}d,IODisplacement,%{public}.1lf,ageOfGpsFix,%{public}.0lf,ageOfWifiFix,%{public}.0lf,ageOfWifiLink,%{public}.0lf,maxIOv,%{public}.1lf,fWasFitness,%{public}d,fWasDriving,%{public}d,fIsConVehicleFlag,%{public}d,fCanSafelyTurnOffGps,%{public}d", &v70, v69);
      v64 = (uint8_t *)v63;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v63);
      if (v64 != buf)
        free(v64);
    }
  }
}

void sub_100403164(uint64_t a1)
{
  float v2;
  float v3;
  double v4;

  if (*(_BYTE *)(a1 + 112))
  {
    ++*(_DWORD *)(a1 + 160);
    if (*(_BYTE *)(a1 + 42) && *(_BYTE *)(a1 + 129))
    {
      ++*(_DWORD *)(a1 + 168);
      if (!*(_BYTE *)(a1 + 130))
        ++*(_DWORD *)(a1 + 576);
      if (*(double *)(a1 + 184) > 0.0 && *(double *)(a1 + 216) <= 0.0)
        ++*(_DWORD *)(a1 + 164);
      v2 = sqrtf((float)((float)(*(float *)(a1 + 140) * *(float *)(a1 + 140))+ (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136)))+ (float)(*(float *)(a1 + 144) * *(float *)(a1 + 144)));
      if (v2 >= 1.0)
      {
        if (v2 >= 2.0)
        {
          if (v2 >= 5.0)
          {
            if (v2 >= 10.0)
            {
              if (v2 >= 20.0)
              {
                if (v2 >= 50.0)
                  ++*(_DWORD *)(a1 + 612);
                else
                  ++*(_DWORD *)(a1 + 608);
              }
              else
              {
                ++*(_DWORD *)(a1 + 604);
              }
            }
            else
            {
              ++*(_DWORD *)(a1 + 600);
            }
          }
          else
          {
            ++*(_DWORD *)(a1 + 596);
          }
        }
        else
        {
          ++*(_DWORD *)(a1 + 592);
        }
      }
      else
      {
        ++*(_DWORD *)(a1 + 588);
      }
      v3 = *(float *)(a1 + 148);
      if (v3 >= 1.0)
      {
        if (v3 >= 2.0)
        {
          if (v3 >= 3.0)
          {
            if (v3 >= 4.0)
            {
              if (v3 >= 5.0)
                ++*(_DWORD *)(a1 + 636);
              else
                ++*(_DWORD *)(a1 + 632);
            }
            else
            {
              ++*(_DWORD *)(a1 + 628);
            }
          }
          else
          {
            ++*(_DWORD *)(a1 + 624);
          }
        }
        else
        {
          ++*(_DWORD *)(a1 + 620);
        }
      }
      else
      {
        ++*(_DWORD *)(a1 + 616);
      }
      if (sub_100219C74(a1 + 380)
        && *(double *)(a1 + 400) < 100.0
        && sub_100219C74(a1 + 224)
        && *(double *)(a1 + 244) < 100.0)
      {
        sub_10011E258((double *)a1, a1 + 380, a1 + 224);
        if (v4 >= 5.0)
        {
          if (v4 >= 10.0)
          {
            if (v4 >= 20.0)
            {
              if (v4 >= 50.0)
              {
                if (v4 >= 100.0)
                {
                  if (v4 >= 200.0)
                  {
                    if (v4 >= 500.0)
                    {
                      if (v4 >= 1000.0)
                        ++*(_DWORD *)(a1 + 672);
                      else
                        ++*(_DWORD *)(a1 + 668);
                    }
                    else
                    {
                      ++*(_DWORD *)(a1 + 664);
                    }
                  }
                  else
                  {
                    ++*(_DWORD *)(a1 + 660);
                  }
                }
                else
                {
                  ++*(_DWORD *)(a1 + 656);
                }
              }
              else
              {
                ++*(_DWORD *)(a1 + 652);
              }
            }
            else
            {
              ++*(_DWORD *)(a1 + 648);
            }
          }
          else
          {
            ++*(_DWORD *)(a1 + 644);
          }
        }
        else
        {
          ++*(_DWORD *)(a1 + 640);
        }
      }
    }
    else
    {
      ++*(_DWORD *)(a1 + 172);
    }
    if (*(_DWORD *)(a1 + 168))
    {
      if (*(_BYTE *)(a1 + 42))
        ++*(_DWORD *)(a1 + 552);
      if (*(_BYTE *)(a1 + 129))
        ++*(_DWORD *)(a1 + 556);
    }
  }
}

void sub_1004034F4(uint64_t a1, char a2, double *a3)
{
  NSObject *v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  const char *v12;
  uint8_t *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  double v17;
  __int16 v18;
  double v19;
  uint8_t buf[4];
  double v21;
  __int16 v22;
  double v23;
  __int16 v24;
  double v25;

  *(_BYTE *)(a1 + 130) = a2;
  if (*a3 - *(double *)(a1 + 56) <= 0.909)
  {
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138018);
    v5 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      v6 = *a3;
      v7 = *(double *)(a1 + 56);
      v8 = *a3 - v7;
      *(_DWORD *)buf = 134349568;
      v21 = v6;
      v22 = 2050;
      v23 = v7;
      v24 = 2050;
      v25 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,heartbeat too fast,now,%{public}.3lf,last,%{public}.3lf,diff,%{public}.3lf", buf, 0x20u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138018);
      v9 = *(_QWORD *)a3;
      v10 = *(double *)(a1 + 56);
      v11 = *a3 - v10;
      v14 = 134349568;
      v15 = v9;
      v16 = 2050;
      v17 = v10;
      v18 = 2050;
      v19 = v11;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,heartbeat too fast,now,%{public}.3lf,last,%{public}.3lf,diff,%{public}.3lf", &v14, 32);
      v13 = (uint8_t *)v12;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::tickHeartbeat1Hz(BOOL, const CFTimeInterval &)", "%s\n", v12);
      if (v13 != buf)
        free(v13);
    }
  }
  else
  {
    *(double *)(a1 + 56) = *a3;
    if (*(double *)(a1 + 184) > 0.0)
    {
      ++*(_DWORD *)(a1 + 152);
      sub_10040280C(a1, a3);
    }
  }
}

void sub_100403754(id a1)
{
  qword_1022A0028 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100403780(uint64_t a1)
{
  double *v2;
  double v3;
  int v4;
  double v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  double v9;
  int v10;
  double v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  char *v22;
  _BYTE v23[12];
  __int16 v24;
  uint64_t v25;
  _BYTE buf[1628];

  *(_QWORD *)(a1 + 6) = 0;
  *(_QWORD *)a1 = 0;
  *(_OWORD *)(a1 + 208) = xmmword_101BAFCA0;
  v2 = (double *)(a1 + 208);
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 224) = xmmword_101BAFCB0;
  sub_1001E4804(buf);
  v3 = *v2;
  *(_QWORD *)v23 = 0;
  v4 = sub_1001FD98C(*(uint64_t *)buf, "LCStatsSubmitMetricsThrSec", v23);
  v5 = *(double *)v23;
  if (!v4)
    v5 = v3;
  *(double *)(a1 + 200) = v5;
  v6 = *(std::__shared_weak_count **)&buf[8];
  if (*(_QWORD *)&buf[8])
  {
    v7 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  sub_1001E4804(buf);
  v9 = *(double *)(a1 + 224);
  *(_QWORD *)v23 = 0;
  v10 = sub_1001FD98C(*(uint64_t *)buf, "LCStatsSubmitMetricsThrSize", v23);
  v11 = *(double *)v23;
  if (!v10)
    v11 = v9;
  *(double *)(a1 + 216) = v11;
  v12 = *(std::__shared_weak_count **)&buf[8];
  if (*(_QWORD *)&buf[8])
  {
    v13 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_102138038);
  v15 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    v16 = *(_QWORD *)(a1 + 200);
    v17 = *(_QWORD *)(a1 + 216);
    *(_DWORD *)buf = 134349312;
    *(_QWORD *)&buf[4] = v16;
    *(_WORD *)&buf[12] = 2050;
    *(_QWORD *)&buf[14] = v17;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,CAStats,fMetricsCollectionDuration,%{public}.0lf,fMetricsMinimumSessionLength,%{public}.0lf", buf, 0x16u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138038);
    v19 = *(_QWORD *)(a1 + 200);
    v20 = *(_QWORD *)(a1 + 216);
    *(_DWORD *)v23 = 134349312;
    *(_QWORD *)&v23[4] = v19;
    v24 = 2050;
    v25 = v20;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,CAStats,fMetricsCollectionDuration,%{public}.0lf,fMetricsMinimumSessionLength,%{public}.0lf", v23, 22);
    v22 = (char *)v21;
    sub_100512490("Generic", 1, 0, 2, "CLGpsPowerSavingsMonitorCAStats::CLGpsPowerSavingsMonitorCAStats()", "%s\n", v21);
    if (v22 != buf)
      free(v22);
  }
  return a1;
}

void sub_100403A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_100261F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100403AA0(uint64_t a1, unsigned __int16 *a2, uint64_t *a3)
{
  NSObject *v5;
  uint64_t *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  const char *v21;
  uint8_t *v22;
  int v23;
  uint64_t *v24;
  __int16 v25;
  int v26;
  __int16 v27;
  int v28;
  __int16 v29;
  int v30;
  __int16 v31;
  int v32;
  __int16 v33;
  int v34;
  __int16 v35;
  int v36;
  __int16 v37;
  int v38;
  uint8_t buf[4];
  uint64_t *v40;
  __int16 v41;
  int v42;
  __int16 v43;
  int v44;
  __int16 v45;
  int v46;
  __int16 v47;
  int v48;
  __int16 v49;
  int v50;
  __int16 v51;
  int v52;
  __int16 v53;
  int v54;

  if (qword_1022A0020 != -1)
    dispatch_once(&qword_1022A0020, &stru_102138038);
  v5 = qword_1022A0028;
  if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
  {
    v6 = a3;
    if (*((char *)a3 + 23) < 0)
      v6 = (uint64_t *)*a3;
    v7 = *a2;
    v8 = a2[1];
    v9 = a2[2];
    v10 = a2[3];
    v11 = a2[4];
    v12 = a2[5];
    v13 = a2[6];
    *(_DWORD *)buf = 136448002;
    v40 = v6;
    v41 = 1026;
    v42 = v7;
    v43 = 1026;
    v44 = v8;
    v45 = 1026;
    v46 = v9;
    v47 = 1026;
    v48 = v10;
    v49 = 1026;
    v50 = v11;
    v51 = 1026;
    v52 = v12;
    v53 = 1026;
    v54 = v13;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,%{public}s,fCountsLT0,%{public}d,fCountsLT5,%{public}d,fCountsLT10,%{public}d,fCountsLT30,%{public}d,fCountsLT60,%{public}d,fCountsLT90,%{public}d,fCountsGE90,%{public}d", buf, 0x36u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138038);
    if (*((char *)a3 + 23) < 0)
      a3 = (uint64_t *)*a3;
    v14 = *a2;
    v15 = a2[1];
    v16 = a2[2];
    v17 = a2[3];
    v18 = a2[4];
    v19 = a2[5];
    v20 = a2[6];
    v23 = 136448002;
    v24 = a3;
    v25 = 1026;
    v26 = v14;
    v27 = 1026;
    v28 = v15;
    v29 = 1026;
    v30 = v16;
    v31 = 1026;
    v32 = v17;
    v33 = 1026;
    v34 = v18;
    v35 = 1026;
    v36 = v19;
    v37 = 1026;
    v38 = v20;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,submitCAStats,%{public}s,fCountsLT0,%{public}d,fCountsLT5,%{public}d,fCountsLT10,%{public}d,fCountsLT30,%{public}d,fCountsLT60,%{public}d,fCountsLT90,%{public}d,fCountsGE90,%{public}d", &v23, 54);
    v22 = (uint8_t *)v21;
    sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::debugOutputCounts(const CountSecondsFromThrottleEvent &, const std::string)", "%s\n", v21);
    if (v22 != buf)
      free(v22);
  }
}

void sub_100403D18(unsigned __int16 *a1, double *a2)
{
  double v4;
  NSObject *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint8_t *v13;
  NSObject *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  NSObject *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  NSObject *v42;
  const char *v43;
  NSObject *v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  const char *v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  const char *v70;
  uint8_t *v71;
  int v72;
  int v73;
  const char *v74;
  uint8_t *v75;
  uint64_t v76;
  _QWORD v77[5];
  void *v78[2];
  char v79;
  void *v80[2];
  char v81;
  void *v82[2];
  char v83;
  void *__p[2];
  char v85;
  int v86;
  _BYTE v87[10];
  uint64_t v88;
  _BYTE v89[10];
  __int16 v90;
  int v91;
  __int16 v92;
  int v93;
  __int16 v94;
  int v95;
  __int16 v96;
  int v97;
  __int16 v98;
  int v99;
  __int16 v100;
  int v101;
  __int16 v102;
  int v103;
  __int16 v104;
  int v105;
  __int16 v106;
  int v107;
  __int16 v108;
  int v109;
  __int16 v110;
  int v111;
  __int16 v112;
  int v113;
  __int16 v114;
  int v115;
  __int16 v116;
  int v117;
  __int16 v118;
  int v119;
  __int16 v120;
  int v121;
  __int16 v122;
  int v123;
  __int16 v124;
  int v125;
  __int16 v126;
  int v127;
  __int16 v128;
  int v129;
  __int16 v130;
  int v131;
  __int16 v132;
  int v133;
  __int16 v134;
  int v135;
  __int16 v136;
  int v137;
  __int16 v138;
  int v139;
  __int16 v140;
  int v141;
  __int16 v142;
  int v143;
  __int16 v144;
  int v145;
  __int16 v146;
  int v147;
  __int16 v148;
  int v149;
  __int16 v150;
  int v151;
  __int16 v152;
  int v153;
  __int16 v154;
  int v155;
  __int16 v156;
  int v157;
  uint8_t buf[4];
  _BYTE v159[10];
  uint64_t v160;
  _BYTE v161[10];
  __int16 v162;
  int v163;
  __int16 v164;
  int v165;
  __int16 v166;
  int v167;
  __int16 v168;
  int v169;
  __int16 v170;
  int v171;
  __int16 v172;
  int v173;
  __int16 v174;
  int v175;
  __int16 v176;
  int v177;
  __int16 v178;
  int v179;
  __int16 v180;
  int v181;
  __int16 v182;
  int v183;
  __int16 v184;
  int v185;
  __int16 v186;
  int v187;
  __int16 v188;
  int v189;
  __int16 v190;
  int v191;
  __int16 v192;
  int v193;
  __int16 v194;
  int v195;
  __int16 v196;
  int v197;
  __int16 v198;
  int v199;
  __int16 v200;
  int v201;
  __int16 v202;
  int v203;
  __int16 v204;
  int v205;
  __int16 v206;
  int v207;
  __int16 v208;
  int v209;
  __int16 v210;
  int v211;
  __int16 v212;
  int v213;
  __int16 v214;
  int v215;
  __int16 v216;
  int v217;
  __int16 v218;
  int v219;
  __int16 v220;
  int v221;
  __int16 v222;
  int v223;
  __int16 v224;
  int v225;
  __int16 v226;
  int v227;
  __int16 v228;
  int v229;

  v4 = *a2 - *((double *)a1 + 29);
  if (v4 >= *((double *)a1 + 25))
  {
    if (a1[5]
      && *((_DWORD *)a1 + 4)
      && *((_DWORD *)a1 + 5)
      && *((_DWORD *)a1 + 6)
      && (LODWORD(v4) = *((_DWORD *)a1 + 11), *((double *)a1 + 27) <= (double)*(unint64_t *)&v4))
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138038);
      v20 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v21 = *((_DWORD *)a1 + 5);
        *(_DWORD *)v159 = *((_DWORD *)a1 + 4);
        v23 = *((_DWORD *)a1 + 6);
        v22 = *((_DWORD *)a1 + 7);
        *(_DWORD *)&v159[6] = v21;
        *(_DWORD *)((char *)&v160 + 2) = v23;
        v24 = *((_DWORD *)a1 + 9);
        *(_DWORD *)v161 = *((_DWORD *)a1 + 8);
        *(_DWORD *)&v161[6] = v24;
        v25 = *((_DWORD *)a1 + 11);
        v163 = *((_DWORD *)a1 + 10);
        v165 = v25;
        v26 = *((_DWORD *)a1 + 13);
        v167 = *((_DWORD *)a1 + 12);
        v169 = *a1;
        v171 = v26;
        v27 = *((_DWORD *)a1 + 15);
        v173 = *((_DWORD *)a1 + 14);
        v175 = v27;
        v28 = *((_DWORD *)a1 + 17);
        v177 = *((_DWORD *)a1 + 16);
        v179 = v28;
        v29 = *((_DWORD *)a1 + 19);
        v181 = *((_DWORD *)a1 + 18);
        v183 = v29;
        v30 = *((_DWORD *)a1 + 27);
        v185 = *((_DWORD *)a1 + 26);
        v187 = v30;
        v31 = *((_DWORD *)a1 + 29);
        v189 = *((_DWORD *)a1 + 28);
        v191 = v31;
        v32 = *((_DWORD *)a1 + 31);
        v193 = *((_DWORD *)a1 + 30);
        v195 = v32;
        v33 = *((_DWORD *)a1 + 33);
        v197 = *((_DWORD *)a1 + 32);
        v199 = v33;
        v34 = *((_DWORD *)a1 + 35);
        v201 = *((_DWORD *)a1 + 34);
        v203 = v34;
        v205 = a1[1];
        v207 = a1[2];
        v209 = a1[3];
        v211 = a1[4];
        v213 = a1[5];
        v215 = a1[6];
        v217 = v22;
        v35 = *((_DWORD *)a1 + 21);
        v219 = *((_DWORD *)a1 + 20);
        v221 = v35;
        v36 = *((_DWORD *)a1 + 23);
        v223 = *((_DWORD *)a1 + 22);
        v225 = v36;
        v37 = *((_DWORD *)a1 + 25);
        v227 = *((_DWORD *)a1 + 24);
        *(_WORD *)&v159[4] = 1026;
        LOWORD(v160) = 1026;
        HIWORD(v160) = 1026;
        *(_WORD *)&v161[4] = 1026;
        v162 = 1026;
        v164 = 1026;
        v166 = 1026;
        v168 = 1026;
        v170 = 1026;
        v172 = 1026;
        v174 = 1026;
        v176 = 1026;
        v178 = 1026;
        v180 = 1026;
        v182 = 1026;
        v184 = 1026;
        v186 = 1026;
        v188 = 1026;
        v190 = 1026;
        v192 = 1026;
        v194 = 1026;
        v196 = 1026;
        v198 = 1026;
        v200 = 1026;
        v202 = 1026;
        v204 = 1026;
        v206 = 1026;
        v208 = 1026;
        v210 = 1026;
        v212 = 1026;
        v214 = 1026;
        v216 = 1026;
        v218 = 1026;
        v220 = 1026;
        v222 = 1026;
        v224 = 1026;
        v226 = 1026;
        v228 = 1026;
        v229 = v37;
        *(_DWORD *)buf = 67249920;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,fCountWifiAssociatedAndStaticAP,%{public}d,fCountWifiYieldingPersonalized,%{public}d,fCountStationaryWithPersonalizedWifiAP,%{public}d,fCountDMMostlyStationary,%{public}d,fCountDMnonStationary,%{public}d,fCountScreenOff,%{public}d,fCountTotalSeconds,%{public}d,fCountCanSafelyTurnOffGpsCount,%{public}d,fCountWifiDisassociatesOrRoams,%{public}d,fCountIOMotionFromStaticLT1m,%{public}d,fCountIOMotionFromStaticLT2m,%{public}d,fCountIOMotionFromStaticLT5m,%{public}d,fCountIOMotionFromStaticLT10m,%{public}d,fCountIOMotionFromStaticLT20m,%{public}d,fCountIOMotionFromStaticLT50m,%{public}d,fCountIOMotionFromStaticGE50m,%{public}d,fCountGpsWifiDistanceLT5m,%{public}d,fCountGpsWifiDistanceLT10m,%{public}d,fCountGpsWifiDistanceLT20m,%{public}d,fCountGpsWifiDistanceLT50m,%{public}d,fCountGpsWifiDistanceLT100m,%{public}d,fCountGpsWifiDistanceLT200m,%{public}d,fCountGpsWifiDistanceLT500m,%{public}d,fCountGpsWifiDistanceLT1000m,%{public}d,fCountGpsWifiDistanceGE1000m,%{public}d,fCountGpsOnNotYielding,%{public}d,fCountStartedStatic,%{public}d,fCountIncludedFitness,%{public}d,fCountIncludedDriving,%{public}d,fCountIncludedConnectedVehicleFlag,%{public}d,fCountSessions,%{public}d,fCountSessionsStartedFromLC,%{public}d,fCountStationaryWithoutPersonalizedWifiAP,%{public}d,fCountIOMaxVelocityWhileStaticLT1ms,%{public}d,fCountIOMaxVelocityWhileStaticLT2ms,%{public}d,fCountIOMaxVelocityWhileStaticLT3ms,%{public}d,fCountIOMaxVelocityWhileStaticLT4ms,%{public}d,fCountIOMaxVelocityWhileStaticLT5ms,%{public}d,fCountIOMaxVelocityWhileStaticGE5ms,%{public}d,", buf,
          0xECu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138038);
        v53 = *((_DWORD *)a1 + 5);
        *(_DWORD *)v87 = *((_DWORD *)a1 + 4);
        v55 = *((_DWORD *)a1 + 6);
        v54 = *((_DWORD *)a1 + 7);
        *(_DWORD *)&v87[6] = v53;
        *(_DWORD *)((char *)&v88 + 2) = v55;
        v56 = *((_DWORD *)a1 + 9);
        *(_DWORD *)v89 = *((_DWORD *)a1 + 8);
        *(_DWORD *)&v89[6] = v56;
        v57 = *((_DWORD *)a1 + 11);
        v91 = *((_DWORD *)a1 + 10);
        v93 = v57;
        v58 = *((_DWORD *)a1 + 13);
        v95 = *((_DWORD *)a1 + 12);
        v97 = *a1;
        v99 = v58;
        v59 = *((_DWORD *)a1 + 15);
        v101 = *((_DWORD *)a1 + 14);
        v103 = v59;
        v60 = *((_DWORD *)a1 + 17);
        v105 = *((_DWORD *)a1 + 16);
        v107 = v60;
        v61 = *((_DWORD *)a1 + 19);
        v109 = *((_DWORD *)a1 + 18);
        v111 = v61;
        v62 = *((_DWORD *)a1 + 27);
        v113 = *((_DWORD *)a1 + 26);
        v115 = v62;
        v63 = *((_DWORD *)a1 + 29);
        v117 = *((_DWORD *)a1 + 28);
        v119 = v63;
        v64 = *((_DWORD *)a1 + 31);
        v121 = *((_DWORD *)a1 + 30);
        v123 = v64;
        v65 = *((_DWORD *)a1 + 33);
        v125 = *((_DWORD *)a1 + 32);
        v127 = v65;
        v66 = *((_DWORD *)a1 + 35);
        v129 = *((_DWORD *)a1 + 34);
        v131 = v66;
        v133 = a1[1];
        v135 = a1[2];
        v137 = a1[3];
        v139 = a1[4];
        v141 = a1[5];
        v143 = a1[6];
        v145 = v54;
        v67 = *((_DWORD *)a1 + 21);
        v147 = *((_DWORD *)a1 + 20);
        v149 = v67;
        v68 = *((_DWORD *)a1 + 23);
        v151 = *((_DWORD *)a1 + 22);
        v153 = v68;
        v69 = *((_DWORD *)a1 + 25);
        v155 = *((_DWORD *)a1 + 24);
        *(_WORD *)&v87[4] = 1026;
        LOWORD(v88) = 1026;
        HIWORD(v88) = 1026;
        *(_WORD *)&v89[4] = 1026;
        v90 = 1026;
        v92 = 1026;
        v94 = 1026;
        v96 = 1026;
        v98 = 1026;
        v100 = 1026;
        v102 = 1026;
        v104 = 1026;
        v106 = 1026;
        v108 = 1026;
        v110 = 1026;
        v112 = 1026;
        v114 = 1026;
        v116 = 1026;
        v118 = 1026;
        v120 = 1026;
        v122 = 1026;
        v124 = 1026;
        v126 = 1026;
        v128 = 1026;
        v130 = 1026;
        v132 = 1026;
        v134 = 1026;
        v136 = 1026;
        v138 = 1026;
        v140 = 1026;
        v142 = 1026;
        v144 = 1026;
        v146 = 1026;
        v148 = 1026;
        v150 = 1026;
        v152 = 1026;
        v154 = 1026;
        v156 = 1026;
        v157 = v69;
        v86 = 67249920;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,submitCAStats,fCountWifiAssociatedAndStaticAP,%{public}d,fCountWifiYieldingPersonalized,%{public}d,fCountStationaryWithPersonalizedWifiAP,%{public}d,fCountDMMostlyStationary,%{public}d,fCountDMnonStationary,%{public}d,fCountScreenOff,%{public}d,fCountTotalSeconds,%{public}d,fCountCanSafelyTurnOffGpsCount,%{public}d,fCountWifiDisassociatesOrRoams,%{public}d,fCountIOMotionFromStaticLT1m,%{public}d,fCountIOMotionFromStaticLT2m,%{public}d,fCountIOMotionFromStaticLT5m,%{public}d,fCountIOMotionFromStaticLT10m,%{public}d,fCountIOMotionFromStaticLT20m,%{public}d,fCountIOMotionFromStaticLT50m,%{public}d,fCountIOMotionFromStaticGE50m,%{public}d,fCountGpsWifiDistanceLT5m,%{public}d,fCountGpsWifiDistanceLT10m,%{public}d,fCountGpsWifiDistanceLT20m,%{public}d,fCountGpsWifiDistanceLT50m,%{public}d,fCountGpsWifiDistanceLT100m,%{public}d,fCountGpsWifiDistanceLT200m,%{public}d,fCountGpsWifiDistanceLT500m,%{public}d,fCountGpsWifiDistanceLT1000m,%{public}d,fCountGpsWifiDistanceGE1000m,%{public}d,fCountGpsOnNotYielding,%{public}d,fCountStartedStatic,%{public}d,fCountIncludedFitness,%{public}d,fCountIncludedDriving,%{public}d,fCountIncludedConnectedVehicleFlag,%{public}d,fCountSessions,%{public}d,fCountSessionsStartedFromLC,%{public}d,fCountStationaryWithoutPersonalizedWifiAP,%{public}d,fCountIOMaxVeloci"
          "tyWhileStaticLT1ms,%{public}d,fCountIOMaxVelocityWhileStaticLT2ms,%{public}d,fCountIOMaxVelocityWhileStaticLT3"
          "ms,%{public}d,fCountIOMaxVelocityWhileStaticLT4ms,%{public}d,fCountIOMaxVelocityWhileStaticLT5ms,%{public}d,fC"
          "ountIOMaxVelocityWhileStaticGE5ms,%{public}d,",
          &v86,
          236);
        v71 = (uint8_t *)v70;
        sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v70);
        if (v71 != buf)
          free(v71);
      }
      v38 = sub_1015A2E04(__p, "fThrottleStartToDriving");
      sub_100403AA0((uint64_t)v38, a1 + 72, (uint64_t *)__p);
      if (v85 < 0)
        operator delete(__p[0]);
      v39 = sub_1015A2E04(v82, "fThrottleEndToDriving");
      sub_100403AA0((uint64_t)v39, a1 + 79, (uint64_t *)v82);
      if (v83 < 0)
        operator delete(v82[0]);
      v40 = sub_1015A2E04(v80, "fThrottleStartToFitness");
      sub_100403AA0((uint64_t)v40, a1 + 86, (uint64_t *)v80);
      if (v81 < 0)
        operator delete(v80[0]);
      v41 = sub_1015A2E04(v78, "fThrottleEndToFitness");
      sub_100403AA0((uint64_t)v41, a1 + 93, (uint64_t *)v78);
      if (v79 < 0)
        operator delete(v78[0]);
      if (*((double *)a1 + 25) >= *((double *)a1 + 26))
      {
        v77[0] = _NSConcreteStackBlock;
        v77[1] = 3221225472;
        v77[2] = sub_10040498C;
        v77[3] = &unk_102131FE8;
        v77[4] = a1;
        AnalyticsSendEventLazy(CFSTR("com.apple.locationd.position.GPSPowerSavings"), v77);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138038);
        v44 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_INFO))
        {
          v45 = *((_DWORD *)a1 + 11);
          v46 = a1[5];
          *(_DWORD *)buf = 67240448;
          *(_DWORD *)v159 = v45;
          *(_WORD *)&v159[4] = 1026;
          *(_DWORD *)&v159[6] = v46;
          _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_INFO, "#GPSPowerSavings,submitCAStats,complete,seconds,%{public}d,sessions,%{public}d", buf, 0xEu);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138038);
          v72 = *((_DWORD *)a1 + 11);
          v73 = a1[5];
          v86 = 67240448;
          *(_DWORD *)v87 = v72;
          *(_WORD *)&v87[4] = 1026;
          *(_DWORD *)&v87[6] = v73;
          LODWORD(v76) = 14;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 1, "#GPSPowerSavings,submitCAStats,complete,seconds,%{public}d,sessions,%{public}d", &v86, v76);
          v75 = (uint8_t *)v74;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v74);
          if (v75 != buf)
            free(v75);
        }
        *((_QWORD *)a1 + 24) = 0;
        *((_OWORD *)a1 + 10) = 0u;
        *((_OWORD *)a1 + 11) = 0u;
        *((_OWORD *)a1 + 8) = 0u;
        *((_OWORD *)a1 + 9) = 0u;
        *((_OWORD *)a1 + 6) = 0u;
        *((_OWORD *)a1 + 7) = 0u;
        *((_OWORD *)a1 + 4) = 0u;
        *((_OWORD *)a1 + 5) = 0u;
        *((_OWORD *)a1 + 2) = 0u;
        *((_OWORD *)a1 + 3) = 0u;
        *(_OWORD *)a1 = 0u;
        *((_OWORD *)a1 + 1) = 0u;
        *((double *)a1 + 29) = *a2;
      }
      else
      {
        *((double *)a1 + 29) = *a2;
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138038);
        v42 = qword_1022A0028;
        if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,skipping CA submission", buf, 2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A0020 != -1)
            dispatch_once(&qword_1022A0020, &stru_102138038);
          LOWORD(v86) = 0;
          LODWORD(v76) = 2;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,submitCAStats,skipping CA submission", &v86, v76);
          v13 = (uint8_t *)v43;
          sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v43);
          goto LABEL_52;
        }
      }
    }
    else
    {
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138038);
      v14 = qword_1022A0028;
      if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
      {
        v15 = a1[5];
        v16 = *((_DWORD *)a1 + 11);
        v17 = *((_DWORD *)a1 + 4);
        v18 = *((_DWORD *)a1 + 5);
        v19 = *((_DWORD *)a1 + 6);
        *(_DWORD *)buf = 67241216;
        *(_DWORD *)v159 = v15;
        *(_WORD *)&v159[4] = 1026;
        *(_DWORD *)&v159[6] = v16;
        LOWORD(v160) = 1026;
        *(_DWORD *)((char *)&v160 + 2) = v17;
        HIWORD(v160) = 1024;
        *(_DWORD *)v161 = v18;
        *(_WORD *)&v161[4] = 1026;
        *(_DWORD *)&v161[6] = v19;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,small_or_invalid_sessions,%{public}d,%{public}d,%{public}d,%{[ublic}d,%{public}d", buf, 0x20u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1022A0020 != -1)
          dispatch_once(&qword_1022A0020, &stru_102138038);
        v47 = a1[5];
        v48 = *((_DWORD *)a1 + 11);
        v49 = *((_DWORD *)a1 + 4);
        v50 = *((_DWORD *)a1 + 5);
        v51 = *((_DWORD *)a1 + 6);
        v86 = 67241216;
        *(_DWORD *)v87 = v47;
        *(_WORD *)&v87[4] = 1026;
        *(_DWORD *)&v87[6] = v48;
        LOWORD(v88) = 1026;
        *(_DWORD *)((char *)&v88 + 2) = v49;
        HIWORD(v88) = 1024;
        *(_DWORD *)v89 = v50;
        *(_WORD *)&v89[4] = 1026;
        *(_DWORD *)&v89[6] = v51;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,submitCAStats,small_or_invalid_sessions,%{public}d,%{public}d,%{public}d,%{[ublic}d,%{public}d", &v86, 32);
        v13 = (uint8_t *)v52;
        sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v52);
        goto LABEL_52;
      }
    }
  }
  else
  {
    if (qword_1022A0020 != -1)
      dispatch_once(&qword_1022A0020, &stru_102138038);
    v5 = qword_1022A0028;
    if (os_log_type_enabled((os_log_t)qword_1022A0028, OS_LOG_TYPE_DEBUG))
    {
      v6 = *a2;
      v7 = *((_QWORD *)a1 + 29);
      v8 = *((_QWORD *)a1 + 25);
      *(_DWORD *)buf = 134349568;
      *(double *)v159 = v6;
      *(_WORD *)&v159[8] = 2050;
      v160 = v7;
      *(_WORD *)v161 = 2050;
      *(_QWORD *)&v161[2] = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,less than threshold time to submit metrics,%{public}.0lf,%{public}.0lf,%{public}.0lf", buf, 0x20u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A0020 != -1)
        dispatch_once(&qword_1022A0020, &stru_102138038);
      v9 = *a2;
      v10 = *((_QWORD *)a1 + 29);
      v11 = *((_QWORD *)a1 + 25);
      v86 = 134349568;
      *(double *)v87 = v9;
      *(_WORD *)&v87[8] = 2050;
      v88 = v10;
      *(_WORD *)v89 = 2050;
      *(_QWORD *)&v89[2] = v11;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A0028, 2, "#GPSPowerSavings,submitCAStats,less than threshold time to submit metrics,%{public}.0lf,%{public}.0lf,%{public}.0lf", &v86, 32);
      v13 = (uint8_t *)v12;
      sub_100512490("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v12);
LABEL_52:
      if (v13 != buf)
        free(v13);
    }
  }
}

void sub_100404928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a22 < 0)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

NSDictionary *sub_10040498C(uint64_t a1)
{
  unsigned __int16 *v1;
  _QWORD v3[67];
  _QWORD v4[67];

  v1 = *(unsigned __int16 **)(a1 + 32);
  v3[0] = CFSTR("DailyWifiDisassociatesOrRoamsCounts");
  v4[0] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", *v1);
  v3[1] = CFSTR("DailySessionStartedStaticCount");
  v4[1] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[1]);
  v3[2] = CFSTR("DailySessionIncludedFitnessCount");
  v4[2] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[2]);
  v3[3] = CFSTR("DailySessionIncludedDrivingCount");
  v4[3] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[3]);
  v3[4] = CFSTR("DailySessionIncludedConnectedVehicle");
  v4[4] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[4]);
  v3[5] = CFSTR("DailySessionCount");
  v4[5] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[5]);
  v3[6] = CFSTR("DailySessionCountStartedFromLC");
  v4[6] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[6]);
  v3[7] = CFSTR("DailyWifiAssociatedAndStaticAPSeconds");
  v4[7] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 4));
  v3[8] = CFSTR("DailyWifiYieldingPersonalizedSeconds");
  v4[8] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 5));
  v3[9] = CFSTR("DailyStationaryWithPersonalizedWifiAPSeconds");
  v4[9] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 6));
  v3[10] = CFSTR("DailyStationaryWithoutPersonalizedWifiAPSeconds");
  v4[10] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 7));
  v3[11] = CFSTR("DailyDMMostlyStationarySeconds");
  v4[11] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 8));
  v3[12] = CFSTR("DailyDMnonStationarySeconds");
  v4[12] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 9));
  v3[13] = CFSTR("DailyScreenOffSeconds");
  v4[13] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 10));
  v3[14] = CFSTR("DailyTotalSeconds");
  v4[14] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 11));
  v3[15] = CFSTR("DailyThrottleGpsSeconds");
  v4[15] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 12));
  v3[16] = CFSTR("DailyIOMotionFromStaticLT1mSeconds");
  v4[16] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 13));
  v3[17] = CFSTR("DailyIOMotionFromStaticLT2mSeconds");
  v4[17] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 14));
  v3[18] = CFSTR("DailyIOMotionFromStaticLT5mSeconds");
  v4[18] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 15));
  v3[19] = CFSTR("DailyIOMotionFromStaticLT10mSeconds");
  v4[19] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 16));
  v3[20] = CFSTR("DailyIOMotionFromStaticLT20mSeconds");
  v4[20] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 17));
  v3[21] = CFSTR("DailyIOMotionFromStaticLT50mSeconds");
  v4[21] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 18));
  v3[22] = CFSTR("DailyIOMotionFromStaticGE50mSeconds");
  v4[22] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 19));
  v3[23] = CFSTR("DailyGpsWifiDistanceLT5mSeconds");
  v4[23] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 26));
  v3[24] = CFSTR("DailyGpsWifiDistanceLT10mSeconds");
  v4[24] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 27));
  v3[25] = CFSTR("DailyGpsWifiDistanceLT20mSeconds");
  v4[25] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 28));
  v3[26] = CFSTR("DailyGpsWifiDistanceLT50mSeconds");
  v4[26] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 29));
  v3[27] = CFSTR("DailyGpsWifiDistanceLT100mSeconds");
  v4[27] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 30));
  v3[28] = CFSTR("DailyGpsWifiDistanceLT200mSeconds");
  v4[28] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 31));
  v3[29] = CFSTR("DailyGpsWifiDistanceLT500mSeconds");
  v4[29] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 32));
  v3[30] = CFSTR("DailyGpsWifiDistanceLT1000mSeconds");
  v4[30] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 33));
  v3[31] = CFSTR("DailyGpsWifiDistanceGE1000mSeconds");
  v4[31] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 34));
  v3[32] = CFSTR("DailyGpsOnNotYieldingSeconds");
  v4[32] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 35));
  v3[33] = CFSTR("DailyIOMaxVelocityWhileStaticLT1msSeconds");
  v4[33] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 20));
  v3[34] = CFSTR("DailyIOMaxVelocityWhileStaticLT2msSeconds");
  v4[34] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 21));
  v3[35] = CFSTR("DailyIOMaxVelocityWhileStaticLT3msSeconds");
  v4[35] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 22));
  v3[36] = CFSTR("DailyIOMaxVelocityWhileStaticLT4msSeconds");
  v4[36] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 23));
  v3[37] = CFSTR("DailyIOMaxVelocityWhileStaticLT5msSeconds");
  v4[37] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 24));
  v3[38] = CFSTR("DailyIOMaxVelocityWhileStaticGE5msSeconds");
  v4[38] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *((unsigned int *)v1 + 25));
  v3[39] = CFSTR("DailyGpsThrottleStartToDrivingLT0Seconds");
  v4[39] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[72]);
  v3[40] = CFSTR("DailyGpsThrottleStartToDrivingLT5Seconds");
  v4[40] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[73]);
  v3[41] = CFSTR("DailyGpsThrottleStartToDrivingLT10Seconds");
  v4[41] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[74]);
  v3[42] = CFSTR("DailyGpsThrottleStartToDrivingLT30Seconds");
  v4[42] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[75]);
  v3[43] = CFSTR("DailyGpsThrottleStartToDrivingLT60Seconds");
  v4[43] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[76]);
  v3[44] = CFSTR("DailyGpsThrottleStartToDrivingLT90Seconds");
  v4[44] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[77]);
  v3[45] = CFSTR("DailyGpsThrottleStartToDrivingGE90Seconds");
  v4[45] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[78]);
  v3[46] = CFSTR("DailyGpsThrottleEndToDrivingsLT0Seconds");
  v4[46] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[79]);
  v3[47] = CFSTR("DailyGpsThrottleEndToDrivingLT5Seconds");
  v4[47] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[80]);
  v3[48] = CFSTR("DailyGpsThrottleEndToDrivingLT10Seconds");
  v4[48] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[81]);
  v3[49] = CFSTR("DailyGpsThrottleEndToDrivingLT30Seconds");
  v4[49] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[82]);
  v3[50] = CFSTR("DailyGpsThrottleEndToDrivingLT60Seconds");
  v4[50] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[83]);
  v3[51] = CFSTR("DailyGpsThrottleEndToDrivingLT90Seconds");
  v4[51] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[84]);
  v3[52] = CFSTR("DailyGpsThrottleEndToDrivingGE90Seconds");
  v4[52] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[85]);
  v3[53] = CFSTR("DailyGpsThrottleStartToFitnessLT0Seconds");
  v4[53] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[86]);
  v3[54] = CFSTR("DailyGpsThrottleStartToFitnessLT5Seconds");
  v4[54] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[87]);
  v3[55] = CFSTR("DailyGpsThrottleStartToFitnessLT10Seconds");
  v4[55] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[88]);
  v3[56] = CFSTR("DailyGpsThrottleStartToFitnessLT30Seconds");
  v4[56] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[89]);
  v3[57] = CFSTR("DailyGpsThrottleStartToFitnessLT60Seconds");
  v4[57] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[90]);
  v3[58] = CFSTR("DailyGpsThrottleStartToFitnessLT90Seconds");
  v4[58] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[91]);
  v3[59] = CFSTR("DailyGpsThrottleStartToFitnessGE90Seconds");
  v4[59] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[92]);
  v3[60] = CFSTR("DailyGpsThrottleEndToFitnessLT0Seconds");
  v4[60] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[93]);
  v3[61] = CFSTR("DailyGpsThrottleEndToFitnessLT5Seconds");
  v4[61] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[94]);
  v3[62] = CFSTR("DailyGpsThrottleEndToFitnessLT10Seconds");
  v4[62] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[95]);
  v3[63] = CFSTR("DailyGpsThrottleEndToFitnessLT30Seconds");
  v4[63] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[96]);
  v3[64] = CFSTR("DailyGpsThrottleEndToFitnessLT60Seconds");
  v4[64] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[97]);
  v3[65] = CFSTR("DailyGpsThrottleEndToFitnessLT90Seconds");
  v4[65] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[98]);
  v3[66] = CFSTR("DailyGpsThrottleEndToFitnessGE90Seconds");
  v4[66] = +[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v1[99]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v4, v3, 67);
}

void sub_100405154(id a1)
{
  qword_1022A0028 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100405180(uint64_t a1)
{
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 32) = a1 + 40;
  *(_WORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 26) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 100) = 0u;
  *(_QWORD *)a1 = objc_alloc_init((Class)HKHealthStore);
  *(_QWORD *)(a1 + 120) = dispatch_semaphore_create(0);
  return a1;
}

void sub_1004051F4(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD **v2;

  sub_100008848(v1, *v2);
  _Unwind_Resume(a1);
}

uint64_t sub_100405210(uint64_t a1)
{

  *(_QWORD *)a1 = 0;
  dispatch_release(*(dispatch_object_t *)(a1 + 120));
  sub_100008848(a1 + 32, *(_QWORD **)(a1 + 40));
  return a1;
}

uint64_t sub_100405258(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  NSDate *v18;
  NSDate *v19;
  id v20;
  NSObject *v21;
  dispatch_time_t v22;
  NSObject *v23;
  uint64_t v24;
  const char *v26;
  uint8_t *v27;
  uint64_t v28;
  __int16 v30;
  _QWORD v31[14];
  int v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint8_t buf[1632];

  v18 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
  v19 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:", a10);
  v20 = objc_msgSend(objc_alloc((Class)HKStatisticsCollectionQuery), "initWithQuantityType:quantitySamplePredicate:options:anchorDate:intervalComponents:", +[HKQuantityType quantityTypeForIdentifier:](HKQuantityType, "quantityTypeForIdentifier:", a3), +[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", +[HKQuery predicateForSamplesWithStartDate:endDate:options:](HKQuery, "predicateForSamplesWithStartDate:endDate:options:", v18, v19, 3), a7, 0)), a6, v18,
          a5);
  v33 = 0;
  v34 = &v33;
  v35 = 0x2020000000;
  v36 = 0;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_1004055A8;
  v31[3] = &unk_102138088;
  v32 = a2;
  *(double *)&v31[12] = a10;
  v31[10] = &v33;
  v31[11] = a1;
  v31[4] = a3;
  v31[5] = v18;
  v31[13] = a6;
  v31[6] = v19;
  v31[7] = a4;
  v31[8] = a5;
  v31[9] = a8;
  objc_msgSend(v20, "setInitialResultsHandler:", v31);
  objc_msgSend(*(id *)a1, "executeQuery:", v20);
  v21 = *(NSObject **)(a1 + 120);
  v22 = dispatch_time(0, 30000000000);
  if (dispatch_semaphore_wait(v21, v22))
  {
    objc_msgSend(*(id *)a1, "stopQuery:", v20);
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v23 = qword_10229FF58;
    if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_FAULT, "HealthKit query timed out", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FF50 != -1)
        dispatch_once(&qword_10229FF50, &stru_102138140);
      v30 = 0;
      LODWORD(v28) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 17, "HealthKit query timed out", &v30, v28);
      v27 = (uint8_t *)v26;
      sub_100512490("Generic", 1, 0, 0, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)", "%s\n", v26);
      if (v27 != buf)
        free(v27);
    }
  }

  v24 = *((unsigned __int8 *)v34 + 24);
  _Block_object_dispose(&v33, 8);
  return v24;
}

void sub_100405588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1004055A8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  char *v34;
  uint64_t v35;
  const char *v36;
  char *v37;
  uint64_t v38;
  const char *v39;
  char *v40;
  _QWORD v41[7];
  int v42;
  uint64_t v43;
  __int16 v44;
  int v45;
  __int16 v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  _BYTE v52[24];
  __n128 (*v53)(__n128 *, __n128 *);
  void (*v54)(uint64_t);
  void *v55;
  void *__p;
  void *v57;
  uint64_t v58;
  _BYTE buf[12];
  __int16 v60;
  _BYTE v61[14];
  __int16 v62;
  uint64_t v63;
  __int16 v64;
  uint64_t v65;

  v5 = *(_QWORD *)(a1 + 88);
  if (a4)
  {
    if (objc_msgSend(a4, "code") == (id)6)
    {
      if (qword_10229FF50 != -1)
        dispatch_once(&qword_10229FF50, &stru_102138140);
      v7 = qword_10229FF58;
      if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEFAULT))
      {
        v8 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "HealthKit query for %{public}@ failed due to device lock. Will resume query on next run. ", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FF50 != -1)
          dispatch_once(&qword_10229FF50, &stru_102138140);
        v9 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)v52 = 138543362;
        *(_QWORD *)&v52[4] = v9;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 0, "HealthKit query for %{public}@ failed due to device lock. Will resume query on next run. ", v52, 12);
        v11 = (char *)v10;
        sub_100512490("Generic", 1, 0, 2, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v10);
        if (v11 != buf)
          free(v11);
      }
    }
    else if (objc_msgSend(a4, "code") == (id)11)
    {
      v22 = *(uint64_t **)(a1 + 96);
      *(_QWORD *)buf = a1 + 112;
      sub_100041CE0((uint64_t **)(v5 + 32), (int *)(a1 + 112), (uint64_t)&unk_101B9EB60, (_DWORD **)buf)[5] = v22;
      if (qword_10229FF50 != -1)
        dispatch_once(&qword_10229FF50, &stru_102138140);
      v23 = qword_10229FF58;
      if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEBUG))
      {
        v24 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v24;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "No data availability for HealthKit query collection for %{public}@. Continuing to next day.", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FF50 != -1)
          dispatch_once(&qword_10229FF50, &stru_102138140);
        v38 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)v52 = 138543362;
        *(_QWORD *)&v52[4] = v38;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 2, "No data availability for HealthKit query collection for %{public}@. Continuing to next day.", v52, 12);
        v40 = (char *)v39;
        sub_100512490("Generic", 1, 0, 2, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v39);
        if (v40 != buf)
          free(v40);
      }
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
    }
    else
    {
      if (qword_10229FF50 != -1)
        dispatch_once(&qword_10229FF50, &stru_102138140);
      v25 = qword_10229FF58;
      if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_ERROR))
      {
        v26 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138543618;
        *(_QWORD *)&buf[4] = v26;
        v60 = 2114;
        *(_QWORD *)v61 = a4;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "HealthKit query for %{public}@ encountered error,%{public}@", buf, 0x16u);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FF50 != -1)
          dispatch_once(&qword_10229FF50, &stru_102138140);
        v35 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)v52 = 138543618;
        *(_QWORD *)&v52[4] = v35;
        *(_WORD *)&v52[12] = 2114;
        *(_QWORD *)&v52[14] = a4;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 16, "HealthKit query for %{public}@ encountered error,%{public}@", v52, 22);
        v37 = (char *)v36;
        sub_100512490("Generic", 1, 0, 0, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v36);
        if (v37 != buf)
          free(v37);
      }
      *(_BYTE *)(v5 + 26) = 1;
    }
  }
  else
  {
    *(_QWORD *)v52 = 0;
    *(_QWORD *)&v52[8] = v52;
    *(_QWORD *)&v52[16] = 0x4812000000;
    v53 = sub_100206C14;
    v54 = sub_100207A70;
    v55 = &unk_102080316;
    __p = 0;
    v57 = 0;
    v58 = 0;
    v13 = *(_QWORD *)(a1 + 40);
    v12 = *(_QWORD *)(a1 + 48);
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472;
    v41[2] = sub_100405D94;
    v41[3] = &unk_102138060;
    v14 = *(_QWORD *)(a1 + 104);
    v41[5] = v52;
    v41[6] = v14;
    v41[4] = *(_QWORD *)(a1 + 56);
    objc_msgSend(a3, "enumerateStatisticsFromDate:toDate:withBlock:", v13, v12, v41);
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
    v15 = *(uint64_t **)(a1 + 96);
    *(_QWORD *)buf = a1 + 112;
    sub_100041CE0((uint64_t **)(v5 + 32), (int *)(a1 + 112), (uint64_t)&unk_101B9EB60, (_DWORD **)buf)[5] = v15;
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v16 = qword_10229FF58;
    if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEBUG))
    {
      v17 = (*(_QWORD *)(*(_QWORD *)&v52[8] + 56) - *(_QWORD *)(*(_QWORD *)&v52[8] + 48)) >> 3;
      v18 = *(_QWORD *)(a1 + 32);
      v19 = *(_QWORD *)(a1 + 40);
      v20 = *(_QWORD *)(a1 + 48);
      v21 = *(_QWORD *)(a1 + 64);
      *(_DWORD *)buf = 138544386;
      *(_QWORD *)&buf[4] = v18;
      v60 = 1024;
      *(_DWORD *)v61 = v17;
      *(_WORD *)&v61[4] = 2112;
      *(_QWORD *)&v61[6] = v19;
      v62 = 2112;
      v63 = v20;
      v64 = 2112;
      v65 = v21;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "HealthKit query for %{public}@ succeeded: samples %d, start %@, end %@, interval %@.", buf, 0x30u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FF50 != -1)
        dispatch_once(&qword_10229FF50, &stru_102138140);
      v28 = (*(_QWORD *)(*(_QWORD *)&v52[8] + 56) - *(_QWORD *)(*(_QWORD *)&v52[8] + 48)) >> 3;
      v29 = *(_QWORD *)(a1 + 32);
      v30 = *(_QWORD *)(a1 + 40);
      v31 = *(_QWORD *)(a1 + 48);
      v32 = *(_QWORD *)(a1 + 64);
      v42 = 138544386;
      v43 = v29;
      v44 = 1024;
      v45 = v28;
      v46 = 2112;
      v47 = v30;
      v48 = 2112;
      v49 = v31;
      v50 = 2112;
      v51 = v32;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 2, "HealthKit query for %{public}@ succeeded: samples %d, start %@, end %@, interval %@.", &v42, 48);
      v34 = (char *)v33;
      sub_100512490("Generic", 1, 0, 2, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v33);
      if (v34 != buf)
        free(v34);
    }
    _Block_object_dispose(v52, 8);
    if (__p)
    {
      v57 = __p;
      operator delete(__p);
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v5 + 120));
}

void sub_100405D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32)
{
  _Block_object_dispose(&a25, 8);
  if (__p)
  {
    a32 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100405D94(_QWORD *a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  if (a2)
  {
    v3 = a1[6];
    if (v3 == 16)
    {
      v4 = objc_msgSend(a2, "sumQuantity");
      if (!v4)
        return;
    }
    else
    {
      if (v3 != 2)
        return;
      v4 = objc_msgSend(a2, "averageQuantity");
      if (!v4)
        return;
    }
    objc_msgSend(v4, "doubleValueForUnit:", a1[4]);
    v6 = v5;
    v7 = *(_QWORD **)(a1[5] + 8);
    v8 = (char *)v7[7];
    v9 = v7[8];
    if ((unint64_t)v8 >= v9)
    {
      v11 = (char *)v7[6];
      v12 = (v8 - v11) >> 3;
      if ((unint64_t)(v12 + 1) >> 61)
        sub_100259694();
      v13 = v9 - (_QWORD)v11;
      v14 = (uint64_t)(v9 - (_QWORD)v11) >> 2;
      if (v14 <= v12 + 1)
        v14 = v12 + 1;
      if (v13 >= 0x7FFFFFFFFFFFFFF8)
        v15 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v15 = v14;
      if (v15)
      {
        v16 = (char *)sub_10025E6A0((uint64_t)(v7 + 8), v15);
        v11 = (char *)v7[6];
        v8 = (char *)v7[7];
      }
      else
      {
        v16 = 0;
      }
      v17 = &v16[8 * v12];
      v18 = &v16[8 * v15];
      *(_QWORD *)v17 = v6;
      v10 = v17 + 8;
      while (v8 != v11)
      {
        v19 = *((_QWORD *)v8 - 1);
        v8 -= 8;
        *((_QWORD *)v17 - 1) = v19;
        v17 -= 8;
      }
      v7[6] = v17;
      v7[7] = v10;
      v7[8] = v18;
      if (v11)
        operator delete(v11);
    }
    else
    {
      *(_QWORD *)v8 = v5;
      v10 = v8 + 8;
    }
    v7[7] = v10;
  }
}

void sub_100405EB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  NSObject *v7;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  _QWORD *v19;
  _QWORD *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  BOOL v35;
  uint64_t *v36;
  uint64_t v37;
  int v38;
  BOOL v39;
  uint64_t *v40;
  const char *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  _QWORD v46[7];
  _QWORD v47[6];
  _QWORD v48[5];
  _QWORD v49[5];
  _QWORD v50[6];
  _QWORD block[5];
  _OWORD v52[4];
  int v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  uint8_t buf[4];
  uint64_t v58;
  __int16 v59;
  uint64_t v60;

  if (*(_BYTE *)(a1 + 24))
  {
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v7 = qword_10229FF58;
    if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "queryCardioChangeInputs is already running.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FF50 != -1)
        dispatch_once(&qword_10229FF50, &stru_102138140);
      LOWORD(v53) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 2, "queryCardioChangeInputs is already running.", &v53, 2);
      v42 = (uint8_t *)v41;
      sub_100512490("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)", "%s\n", v41);
      if (v42 != buf)
        free(v42);
    }
    memset(v52, 0, sizeof(v52));
    (*(void (**)(uint64_t, _QWORD, _OWORD *))(a3 + 16))(a3, 0, v52);
    return;
  }
  *(_BYTE *)(a1 + 24) = 1;
  if (*(_BYTE *)(a1 + 25) && vabdd_f64(*(double *)(a1 + 16), a6) < 86400.0 + 86400.0)
  {
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v13 = qword_10229FF58;
    if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEBUG))
    {
      v14 = *(_QWORD *)(a1 + 8);
      v15 = *(_QWORD *)(a1 + 16);
      *(_DWORD *)buf = 134218240;
      v58 = v14;
      v59 = 2048;
      v60 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Resuming previously interrupted query startTime %f, endTime %f", buf, 0x16u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_23;
    bzero(buf, 0x65CuLL);
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v16 = *(_QWORD *)(a1 + 8);
    v17 = *(_QWORD *)(a1 + 16);
    v53 = 134218240;
    v54 = v16;
    v55 = 2048;
    v56 = v17;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 2, "Resuming previously interrupted query startTime %f, endTime %f");
  }
  else
  {
    v20 = (_QWORD *)(a1 + 40);
    v19 = *(_QWORD **)(a1 + 40);
    *(_WORD *)(a1 + 25) = 0;
    sub_100008848(a1 + 32, v19);
    *(_QWORD *)(a1 + 32) = a1 + 40;
    *v20 = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 100) = 0u;
    *(_BYTE *)(a1 + 25) = 1;
    *(double *)(a1 + 8) = a5;
    *(double *)(a1 + 16) = a6;
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v21 = qword_10229FF58;
    if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEBUG))
    {
      v22 = *(_QWORD *)(a1 + 8);
      v23 = *(_QWORD *)(a1 + 16);
      *(_DWORD *)buf = 134218240;
      v58 = v22;
      v59 = 2048;
      v60 = v23;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "Starting new query startTime %f, endTime %f", buf, 0x16u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_23;
    bzero(buf, 0x65CuLL);
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v43 = *(_QWORD *)(a1 + 8);
    v44 = *(_QWORD *)(a1 + 16);
    v53 = 134218240;
    v54 = v43;
    v55 = 2048;
    v56 = v44;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 2, "Starting new query startTime %f, endTime %f");
  }
  v45 = (uint8_t *)v18;
  sub_100512490("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)", "%s\n", v18);
  if (v45 != buf)
    free(v45);
LABEL_23:
  v24 = dispatch_group_create();
  v26 = a1 + 40;
  v25 = *(_QWORD *)(a1 + 40);
  if (!v25)
    goto LABEL_33;
  v27 = a1 + 40;
  do
  {
    v28 = *(_DWORD *)(v25 + 32);
    v29 = v28 < 0;
    if (v28 >= 0)
      v30 = (uint64_t *)v25;
    else
      v30 = (uint64_t *)(v25 + 8);
    if (!v29)
      v27 = v25;
    v25 = *v30;
  }
  while (*v30);
  if (v27 == v26 || *(int *)(v27 + 32) >= 1)
  {
LABEL_33:
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100406590;
    block[3] = &unk_10212ECA0;
    block[4] = a1;
    dispatch_group_async(v24, (dispatch_queue_t)objc_msgSend(a2, "queue"), block);
  }
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 3221225472;
  v50[2] = sub_100406698;
  v50[3] = &unk_1021380D0;
  v50[4] = a4;
  v50[5] = a1;
  dispatch_group_async(v24, (dispatch_queue_t)objc_msgSend(a2, "queue"), v50);
  v31 = *(_QWORD *)(a1 + 40);
  if (!v31)
    goto LABEL_44;
  v32 = a1 + 40;
  v33 = *(_QWORD *)(a1 + 40);
  do
  {
    v34 = *(_DWORD *)(v33 + 32);
    v35 = v34 < 2;
    if (v34 >= 2)
      v36 = (uint64_t *)v33;
    else
      v36 = (uint64_t *)(v33 + 8);
    if (!v35)
      v32 = v33;
    v33 = *v36;
  }
  while (*v36);
  if (v32 == v26 || *(int *)(v32 + 32) >= 3)
  {
LABEL_44:
    v49[0] = _NSConcreteStackBlock;
    v49[1] = 3221225472;
    v49[2] = sub_100406AE4;
    v49[3] = &unk_10212ECA0;
    v49[4] = a1;
    dispatch_group_async(v24, (dispatch_queue_t)objc_msgSend(a2, "queue"), v49);
    v31 = *(_QWORD *)(a1 + 40);
  }
  if (!v31)
    goto LABEL_55;
  v37 = a1 + 40;
  do
  {
    v38 = *(_DWORD *)(v31 + 32);
    v39 = v38 < 3;
    if (v38 >= 3)
      v40 = (uint64_t *)v31;
    else
      v40 = (uint64_t *)(v31 + 8);
    if (!v39)
      v37 = v31;
    v31 = *v40;
  }
  while (*v40);
  if (v37 == v26 || *(int *)(v37 + 32) >= 4)
  {
LABEL_55:
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 3221225472;
    v48[2] = sub_100406C0C;
    v48[3] = &unk_10212ECA0;
    v48[4] = a1;
    dispatch_group_async(v24, (dispatch_queue_t)objc_msgSend(a2, "queue"), v48);
  }
  v47[0] = _NSConcreteStackBlock;
  v47[1] = 3221225472;
  v47[2] = sub_100406D14;
  v47[3] = &unk_1021380D0;
  v47[4] = a4;
  v47[5] = a1;
  dispatch_group_async(v24, (dispatch_queue_t)objc_msgSend(a2, "queue"), v47);
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_1004070B4;
  v46[3] = &unk_1021380F8;
  v46[5] = a3;
  v46[6] = a1;
  v46[4] = v24;
  dispatch_group_notify(v24, (dispatch_queue_t)objc_msgSend(a2, "queue"), v46);
}

void sub_100406590(uint64_t a1)
{
  uint64_t v1;
  id v2;
  HKUnit *v3;
  double v4;
  double v5;
  _QWORD v6[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = objc_alloc_init((Class)NSDateComponents);
  objc_msgSend(v2, "setDay:", 1);
  v3 = +[HKUnit kilocalorieUnit](HKUnit, "kilocalorieUnit");
  v4 = *(double *)(v1 + 8);
  v5 = *(double *)(v1 + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100406648;
  v6[3] = &unk_1021380A8;
  v6[4] = v1;
  sub_100405258(v1, 0, (uint64_t)HKQuantityTypeIdentifierActiveEnergyBurned, (uint64_t)v3, (uint64_t)v2, 16, 0, (uint64_t)v6, v4, v5);

}

uint64_t sub_100406648(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(result + 32);
  v3 = a2[1] - *a2;
  if (v3)
  {
    v4 = 0;
    v5 = v3 >> 3;
    v6 = 0.0;
    do
      v6 = v6 + *(double *)(*a2 + 8 * v4++);
    while (v5 != v4);
    v7 = v6 / (double)(unint64_t)v5;
  }
  else
  {
    v7 = 0.0;
  }
  *(_DWORD *)(v2 + 96) = (unint64_t)v3 >> 3;
  *(double *)(v2 + 56) = v7;
  return result;
}

void sub_100406698(uint64_t a1)
{
  uint64_t v2;
  signed int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  uint64_t *v8;
  double v9;
  NSObject *v10;
  id v11;
  id v12;
  double v13;
  double v14;
  int v15;
  const char *v16;
  uint8_t *v17;
  _QWORD v18[5];
  int v19[4];
  uint8_t buf[8];

  v2 = *(_QWORD *)(a1 + 40);
  v3 = 90;
  v4 = *(_QWORD *)(v2 + 40);
  if (v4)
  {
    v5 = v2 + 40;
    do
    {
      v6 = *(_DWORD *)(v4 + 32);
      v7 = v6 < 1;
      if (v6 >= 1)
        v8 = (uint64_t *)v4;
      else
        v8 = (uint64_t *)(v4 + 8);
      if (!v7)
        v5 = v4;
      v4 = *v8;
    }
    while (*v8);
    if (v5 != v2 + 40 && *(int *)(v5 + 32) <= 1)
    {
      v19[0] = 1;
      *(_QWORD *)buf = v19;
      v9 = *((double *)sub_100041CE0((uint64_t **)(v2 + 32), v19, (uint64_t)&unk_101B9EB60, (_DWORD **)buf) + 5);
      if (v9 > 0.0)
        v3 = vcvtpd_s64_f64(*(double *)(v2 + 16) / 86400.0) - vcvtpd_s64_f64(v9 / 86400.0);
    }
  }
  if (qword_10229FF50 != -1)
    dispatch_once(&qword_10229FF50, &stru_102138140);
  v10 = qword_10229FF58;
  if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Starting query for HKQuantityTypeIdentifierHeartRate for %d days", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v19[0] = 67109120;
    v19[1] = v3;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 2, "Starting query for HKQuantityTypeIdentifierHeartRate for %d days", v19);
    v17 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)_block_invoke", "%s\n", v16);
    if (v17 != buf)
      free(v17);
  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_1004069D4;
  v18[3] = &unk_1021380A8;
  v18[4] = v2;
  v11 = objc_alloc_init((Class)NSDateComponents);
  objc_msgSend(v11, "setMinute:", 5);
  if ((v3 & 0x80000000) == 0)
  {
    do
    {
      v12 = +[HKUnit _countPerSecondUnit](HKUnit, "_countPerSecondUnit");
      v13 = *(double *)(v2 + 16);
      v14 = 86400.0 * (floor(v13 / 86400.0) - (double)v3);
      if (v14 + 86400.0 <= v13)
        v13 = v14 + 86400.0;
      if (!sub_100405258(v2, 1, (uint64_t)HKQuantityTypeIdentifierHeartRate, (uint64_t)v12, (uint64_t)v11, 2, 0, (uint64_t)v18, v14, v13))break;
      v15 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
      if (!v3)
        break;
      --v3;
    }
    while (!v15);
  }

}

double sub_1004069D4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  double result;

  if (*a2 != a2[1])
  {
    v2 = *(_QWORD *)(a1 + 32);
    result = sub_100406A20((uint64_t)a2, 95) + *(double *)(v2 + 64);
    *(double *)(v2 + 64) = result;
    ++*(_DWORD *)(v2 + 100);
  }
  return result;
}

double sub_100406A20(uint64_t a1, int a2)
{
  double v4;
  int v5;
  double *v6;
  double *v7;
  double v8;
  void *__p;
  double *v11;
  uint64_t v12;

  __p = 0;
  v11 = 0;
  v12 = 0;
  sub_10025EA00(&__p, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
  v5 = (int)((((*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3) - 1) * a2) / 100;
  v6 = (double *)__p;
  v7 = (double *)((char *)__p + 8 * v5);
  if (v7 != v11)
  {
    sub_100407418((double *)__p, v7, v11, v4);
    v6 = (double *)__p;
  }
  v8 = v6[v5];
  v11 = v6;
  operator delete(v6);
  return v8;
}

void sub_100406AC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100406AE4(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  double v4;
  double v5;
  _QWORD v6[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = objc_alloc_init((Class)NSDateComponents);
  objc_msgSend(v2, "setDay:", 1);
  v3 = +[HKUnit _countPerMinuteUnit](HKUnit, "_countPerMinuteUnit");
  v4 = *(double *)(v1 + 8);
  v5 = *(double *)(v1 + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100406BBC;
  v6[3] = &unk_1021380A8;
  v6[4] = v1;
  sub_100405258(v1, 2, (uint64_t)HKQuantityTypeIdentifierRestingHeartRate, (uint64_t)v3, (uint64_t)v2, 2, (uint64_t)+[HKQuery _predicateForObjectsFromAppleWatches](HKQuery, "_predicateForObjectsFromAppleWatches"), (uint64_t)v6, v4, v5);

}

uint64_t sub_100406BBC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(result + 32);
  v3 = a2[1] - *a2;
  if (v3)
  {
    v4 = 0;
    v5 = v3 >> 3;
    v6 = 0.0;
    do
      v6 = v6 + *(double *)(*a2 + 8 * v4++);
    while (v5 != v4);
    v7 = v6 / (double)(unint64_t)v5;
  }
  else
  {
    v7 = 0.0;
  }
  *(_DWORD *)(v2 + 104) = (unint64_t)v3 >> 3;
  *(double *)(v2 + 72) = v7;
  return result;
}

void sub_100406C0C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  HKUnit *v3;
  double v4;
  double v5;
  _QWORD v6[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = objc_alloc_init((Class)NSDateComponents);
  objc_msgSend(v2, "setDay:", 1);
  v3 = +[HKUnit meterUnit](HKUnit, "meterUnit");
  v4 = *(double *)(v1 + 8);
  v5 = *(double *)(v1 + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100406CC4;
  v6[3] = &unk_1021380A8;
  v6[4] = v1;
  sub_100405258(v1, 3, (uint64_t)HKQuantityTypeIdentifierSixMinuteWalkTestDistance, (uint64_t)v3, (uint64_t)v2, 2, 0, (uint64_t)v6, v4, v5);

}

uint64_t sub_100406CC4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;

  v2 = *(_QWORD *)(result + 32);
  v3 = a2[1] - *a2;
  if (v3)
  {
    v4 = 0;
    v5 = v3 >> 3;
    v6 = 0.0;
    do
      v6 = v6 + *(double *)(*a2 + 8 * v4++);
    while (v5 != v4);
    v7 = v6 / (double)(unint64_t)v5;
  }
  else
  {
    v7 = 0.0;
  }
  *(_DWORD *)(v2 + 108) = (unint64_t)v3 >> 3;
  *(double *)(v2 + 80) = v7;
  return result;
}

void sub_100406D14(uint64_t a1)
{
  uint64_t v2;
  signed int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  uint64_t *v8;
  double v9;
  NSObject *v10;
  id v11;
  HKUnit *v12;
  double v13;
  double v14;
  int v15;
  const char *v16;
  uint8_t *v17;
  _QWORD v18[5];
  int v19[4];
  uint8_t buf[8];

  v2 = *(_QWORD *)(a1 + 40);
  v3 = 90;
  v4 = *(_QWORD *)(v2 + 40);
  if (v4)
  {
    v5 = v2 + 40;
    do
    {
      v6 = *(_DWORD *)(v4 + 32);
      v7 = v6 < 4;
      if (v6 >= 4)
        v8 = (uint64_t *)v4;
      else
        v8 = (uint64_t *)(v4 + 8);
      if (!v7)
        v5 = v4;
      v4 = *v8;
    }
    while (*v8);
    if (v5 != v2 + 40 && *(int *)(v5 + 32) <= 4)
    {
      v19[0] = 4;
      *(_QWORD *)buf = v19;
      v9 = *((double *)sub_100041CE0((uint64_t **)(v2 + 32), v19, (uint64_t)&unk_101B9EB60, (_DWORD **)buf) + 5);
      if (v9 > 0.0)
        v3 = vcvtpd_s64_f64(*(double *)(v2 + 16) / 86400.0) - vcvtpd_s64_f64(v9 / 86400.0);
    }
  }
  if (qword_10229FF50 != -1)
    dispatch_once(&qword_10229FF50, &stru_102138140);
  v10 = qword_10229FF58;
  if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Starting query for HKQuantityTypeIdentifierWalkingSpeed for %d days", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v19[0] = 67109120;
    v19[1] = v3;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 2, "Starting query for HKQuantityTypeIdentifierWalkingSpeed for %d days", v19);
    v17 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)_block_invoke", "%s\n", v16);
    if (v17 != buf)
      free(v17);
  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10040705C;
  v18[3] = &unk_1021380A8;
  v18[4] = v2;
  v11 = objc_alloc_init((Class)NSDateComponents);
  objc_msgSend(v11, "setMinute:", 5);
  if ((v3 & 0x80000000) == 0)
  {
    do
    {
      v12 = +[HKUnit unitFromString:](HKUnit, "unitFromString:", CFSTR("m/s"));
      v13 = *(double *)(v2 + 16);
      v14 = 86400.0 * (floor(v13 / 86400.0) - (double)v3);
      if (v14 + 86400.0 <= v13)
        v13 = v14 + 86400.0;
      if (!sub_100405258(v2, 4, (uint64_t)HKQuantityTypeIdentifierWalkingSpeed, (uint64_t)v12, (uint64_t)v11, 2, 0, (uint64_t)v18, v14, v13))break;
      v15 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
      if (!v3)
        break;
      --v3;
    }
    while (!v15);
  }

}

double sub_10040705C(uint64_t a1, uint64_t *a2, double result)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;

  v3 = *a2;
  v4 = a2[1];
  if (*a2 != v4)
  {
    v5 = 0;
    v6 = *(_QWORD *)(a1 + 32);
    v7 = (v4 - v3) >> 3;
    v8 = 0.0;
    do
      v8 = v8 + *(double *)(v3 + 8 * v5++);
    while (v7 != v5);
    result = v8 / (double)(unint64_t)v7 + *(double *)(v6 + 88);
    *(double *)(v6 + 88) = result;
    ++*(_DWORD *)(v6 + 112);
  }
  return result;
}

void sub_1004070B4(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  uint64_t *v10;
  _BOOL4 v11;
  NSObject *v12;
  int v13;
  int v14;
  const char *v15;
  uint8_t *v16;
  int v17[4];
  uint8_t buf[8];

  v2 = *(_QWORD *)(a1 + 48);
  dispatch_release(*(dispatch_object_t *)(a1 + 32));
  v3 = 0;
  v4 = (uint64_t *)(v2 + 40);
  v5 = 1;
  do
  {
    v17[0] = v3;
    v6 = *v4;
    if (!*v4)
      goto LABEL_12;
    v7 = v2 + 40;
    do
    {
      v8 = *(_DWORD *)(v6 + 32);
      v9 = v8 < v3;
      if (v8 >= v3)
        v10 = (uint64_t *)v6;
      else
        v10 = (uint64_t *)(v6 + 8);
      if (!v9)
        v7 = v6;
      v6 = *v10;
    }
    while (*v10);
    if ((uint64_t *)v7 != v4 && v3 >= *(_DWORD *)(v7 + 32))
    {
      *(_QWORD *)buf = v17;
      v11 = *((double *)sub_100041CE0((uint64_t **)(v2 + 32), v17, (uint64_t)&unk_101B9EB60, (_DWORD **)buf) + 5) >= *(double *)(v2 + 16);
    }
    else
    {
LABEL_12:
      v11 = 0;
    }
    v5 &= v11;
    ++v3;
  }
  while (v3 != 5);
  if (qword_10229FF50 != -1)
    dispatch_once(&qword_10229FF50, &stru_102138140);
  v12 = qword_10229FF58;
  if (os_log_type_enabled((os_log_t)qword_10229FF58, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&buf[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "CardioChange HealthKit inputs queried success, %{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FF50 != -1)
      dispatch_once(&qword_10229FF50, &stru_102138140);
    v17[0] = 67240192;
    v17[1] = v5;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FF58, 0, "CardioChange HealthKit inputs queried success, %{public}d", v17, 8);
    v16 = (uint8_t *)v15;
    sub_100512490("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)_block_invoke", "%s\n", v15);
    if (v16 != buf)
      free(v16);
  }
  if (v5)
  {
    v13 = *(_DWORD *)(v2 + 100);
    if (v13 >= 1)
      *(double *)(v2 + 64) = *(double *)(v2 + 64) / (double)v13;
    v14 = *(_DWORD *)(v2 + 112);
    if (v14 >= 1)
      *(double *)(v2 + 88) = *(double *)(v2 + 88) / (double)v14;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    goto LABEL_28;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  if (*(_BYTE *)(v2 + 26))
  {
LABEL_28:
    *(_WORD *)(v2 + 25) = 0;
    sub_100008848(v2 + 32, *(_QWORD **)(v2 + 40));
    *(_QWORD *)(v2 + 40) = 0;
    *(_QWORD *)(v2 + 48) = 0;
    *(_QWORD *)(v2 + 32) = v4;
    *(_OWORD *)(v2 + 56) = 0u;
    *(_OWORD *)(v2 + 72) = 0u;
    *(_OWORD *)(v2 + 88) = 0u;
    *(_OWORD *)(v2 + 100) = 0u;
  }
  *(_BYTE *)(v2 + 24) = 0;
}

void sub_1004073EC(id a1)
{
  qword_10229FF58 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CardioChange");
}

double sub_100407418(double *a1, double *a2, double *a3, double result)
{
  double *v4;
  unint64_t v7;
  double *v8;
  double *v9;
  int v10;
  double *v11;
  double *v12;
  double *v13;
  double v14;
  double v15;
  double *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double *v21;
  double v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  double *v27;
  double v28;
  double v29;
  double v30;

  if (a3 != a2)
  {
    v4 = a3;
    do
    {
      v7 = v4 - a1;
      if (v7 < 2)
        break;
      if (v7 == 3)
      {
        sub_1004076A0(a1, a1 + 1, v4 - 1);
        return result;
      }
      if (v7 == 2)
      {
        result = *(v4 - 1);
        v30 = *a1;
        if (result < *a1)
        {
          *a1 = result;
          *(v4 - 1) = v30;
        }
        return result;
      }
      if ((char *)v4 - (char *)a1 <= 63)
        return sub_100407728(a1, v4, result);
      v8 = &a1[v7 >> 1];
      v9 = v4 - 1;
      v10 = sub_1004076A0(a1, v8, v4 - 1);
      result = *a1;
      if (*a1 >= *v8)
      {
        v11 = v4 - 1;
        while (--v11 != a1)
        {
          if (*v11 < *v8)
          {
            *a1 = *v11;
            *v11 = result;
            ++v10;
            goto LABEL_13;
          }
        }
        v21 = a1 + 1;
        if (result >= *v9)
        {
          while (v21 != v9)
          {
            v22 = *v21;
            if (result < *v21)
            {
              *v21++ = *v9;
              *v9 = v22;
              goto LABEL_45;
            }
            ++v21;
          }
          return result;
        }
LABEL_45:
        if (v21 == v9)
          return result;
        while (1)
        {
          v25 = *a1;
          do
          {
            v26 = *v21++;
            result = v26;
          }
          while (v25 >= v26);
          v27 = v21 - 1;
          do
          {
            v28 = *--v9;
            v29 = v28;
          }
          while (v25 < v28);
          if (v27 >= v9)
            break;
          *v27 = v29;
          *v9 = result;
        }
        a1 = v21 - 1;
        if (v27 > a2)
          return result;
      }
      else
      {
        v11 = v4 - 1;
LABEL_13:
        v12 = a1 + 1;
        if (a1 + 1 >= v11)
        {
          v16 = a1 + 1;
        }
        else
        {
          v13 = a1 + 1;
          while (1)
          {
            v14 = *v8;
            do
            {
              v15 = *v13++;
              result = v15;
            }
            while (v15 < v14);
            v16 = v13 - 1;
            do
            {
              v17 = *--v11;
              v18 = v17;
            }
            while (v17 >= v14);
            if (v16 >= v11)
              break;
            *v16 = v18;
            *v11 = result;
            ++v10;
            if (v16 == v8)
              v8 = v11;
          }
        }
        if (v16 != v8)
        {
          result = *v8;
          v19 = *v16;
          if (*v8 < *v16)
          {
            *v16 = result;
            *v8 = v19;
            ++v10;
          }
        }
        if (v16 == a2)
          return result;
        if (!v10)
        {
          if (v16 <= a2)
          {
            v23 = v16 + 1;
            while (v23 != v4)
            {
              v24 = *(v23 - 1);
              result = *v23++;
              if (result < v24)
                goto LABEL_29;
            }
          }
          else
          {
            while (v12 != v16)
            {
              v20 = *(v12 - 1);
              result = *v12++;
              if (result < v20)
                goto LABEL_29;
            }
          }
          return result;
        }
LABEL_29:
        if (v16 <= a2)
          a1 = v16 + 1;
        else
          v4 = v16;
      }
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_1004076A0(double *a1, double *a2, double *a3)
{
  double v3;
  double v4;
  double v5;
  double v6;

  v3 = *a2;
  v4 = *a1;
  v5 = *a3;
  if (*a2 < *a1)
  {
    if (v5 < v3)
    {
      *a1 = v5;
      *a3 = v4;
      return 1;
    }
    *a1 = v3;
    *a2 = v4;
    if (*a3 >= v4)
      return 1;
    *a2 = *a3;
    *a3 = v4;
    return 2;
  }
  if (v5 < v3)
  {
    *a2 = v5;
    *a3 = v3;
    v6 = *a1;
    if (*a2 >= *a1)
      return 1;
    *a1 = *a2;
    *a2 = v6;
    return 2;
  }
  return 0;
}

double sub_100407728(double *a1, double *a2, double result)
{
  double *v3;
  double *v4;
  double *v5;
  double *v6;
  double v7;
  double v8;

  while (a1 != a2 - 1)
  {
    v3 = a1++;
    if (v3 != a2 && a1 != a2)
    {
      result = *v3;
      v4 = a1;
      v5 = v3;
      v6 = a1;
      do
      {
        v7 = *v6++;
        v8 = v7;
        if (v7 < result)
        {
          result = v8;
          v5 = v4;
        }
        v4 = v6;
      }
      while (v6 != a2);
      if (v5 != v3)
      {
        result = *v3;
        *v3 = *v5;
        *v5 = result;
      }
    }
  }
  return result;
}

void sub_10040779C(_QWORD *a1, double *a2, int a3)
{
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  if (!a3
    || (v5 = a1[18], a1[17] == v5)
    || !sub_100512A74(*(double *)(v5 - 16), *(double *)(v5 - 8), *a2, a2[1], 0.0000001))
  {
    v6 = a1[19];
    v7 = (_OWORD *)a1[18];
    if ((unint64_t)v7 >= v6)
    {
      v9 = a1[17];
      v10 = ((uint64_t)v7 - v9) >> 4;
      v11 = v10 + 1;
      if ((unint64_t)(v10 + 1) >> 60)
        sub_100259694();
      v12 = v6 - v9;
      if (v12 >> 3 > v11)
        v11 = v12 >> 3;
      if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0)
        v13 = 0xFFFFFFFFFFFFFFFLL;
      else
        v13 = v11;
      if (v13)
        v14 = (char *)sub_10028E224((uint64_t)(a1 + 19), v13);
      else
        v14 = 0;
      v15 = &v14[16 * v10];
      v16 = &v14[16 * v13];
      *(_OWORD *)v15 = *(_OWORD *)a2;
      v8 = v15 + 16;
      v18 = (char *)a1[17];
      v17 = (char *)a1[18];
      if (v17 != v18)
      {
        do
        {
          *((_OWORD *)v15 - 1) = *((_OWORD *)v17 - 1);
          v15 -= 16;
          v17 -= 16;
        }
        while (v17 != v18);
        v17 = (char *)a1[17];
      }
      a1[17] = v15;
      a1[18] = v8;
      a1[19] = v16;
      if (v17)
        operator delete(v17);
    }
    else
    {
      *v7 = *(_OWORD *)a2;
      v8 = v7 + 1;
    }
    a1[18] = v8;
  }
}

uint64_t sub_1004078B8(uint64_t a1, int a2)
{
  uint64_t v2;

  if (a2 < 0)
    return 0;
  v2 = *(_QWORD *)(a1 + 136);
  if ((int)((unint64_t)(*(_QWORD *)(a1 + 144) - v2) >> 4) > a2)
    return v2 + 16 * a2;
  else
    return 0;
}

BOOL sub_1004078E0(_QWORD *a1)
{
  uint64_t v1;
  void **v2;
  _BOOL8 result;
  uint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  unint64_t v9;
  double *v10;
  double *v11;
  double *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  double *v18;
  uint64_t v19;
  NSObject *v20;
  const char *v21;
  uint8_t *v22;
  _WORD v23[8];
  double buf[205];

  v1 = a1[20];
  v2 = (void **)(a1 + 20);
  if (v1 != a1[21])
    return 1;
  a1[5] = 0;
  a1[21] = v1;
  if (a1[17] != a1[18])
  {
    ++qword_102310510;
    sub_1002433B8((uint64_t)buf);
    sub_100407BF8(v2, ((uint64_t)(a1[18] - a1[17]) >> 4) - 1);
    v5 = a1[17];
    if ((unint64_t)(a1[18] - v5) >= 0x11)
    {
      v6 = 1;
      do
      {
        v7 = sub_10011E634(buf, *(double *)(v5 + 16 * v6 - 16), *(double *)(v5 + 16 * v6 - 8), *(double *)(v5 + 16 * v6), *(double *)(v5 + 16 * v6 + 8), 0.0);
        v8 = v7;
        v10 = (double *)a1[21];
        v9 = a1[22];
        if ((unint64_t)v10 >= v9)
        {
          v12 = (double *)*v2;
          v13 = ((char *)v10 - (_BYTE *)*v2) >> 3;
          v14 = v13 + 1;
          if ((unint64_t)(v13 + 1) >> 61)
            sub_100259694();
          v15 = v9 - (_QWORD)v12;
          if (v15 >> 2 > v14)
            v14 = v15 >> 2;
          if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8)
            v16 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v16 = v14;
          if (v16)
          {
            v17 = (char *)sub_10025E6A0((uint64_t)(a1 + 22), v16);
            v12 = (double *)a1[20];
            v10 = (double *)a1[21];
          }
          else
          {
            v17 = 0;
          }
          v18 = (double *)&v17[8 * v13];
          *v18 = v8;
          v11 = v18 + 1;
          while (v10 != v12)
          {
            v19 = *((_QWORD *)v10-- - 1);
            *((_QWORD *)v18-- - 1) = v19;
          }
          a1[20] = v18;
          a1[21] = v11;
          a1[22] = &v17[8 * v16];
          if (v12)
            operator delete(v12);
        }
        else
        {
          *v10 = v7;
          v11 = v10 + 1;
        }
        a1[21] = v11;
        *((double *)a1 + 5) = v8 + *((double *)a1 + 5);
        ++v6;
        v5 = a1[17];
      }
      while (v6 < (a1[18] - v5) >> 4);
    }
    return 1;
  }
  if (qword_1022A00D0 != -1)
    dispatch_once(&qword_1022A00D0, &stru_102138160);
  v20 = qword_1022A00D8;
  if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_ERROR))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "CLMM,computeSegmentLengthsAndHeading,CoordinateCount is 0", (uint8_t *)buf, 2u);
  }
  result = sub_1001BFF7C(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_102138160);
    v23[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 16, "CLMM,computeSegmentLengthsAndHeading,CoordinateCount is 0", v23, 2);
    v22 = (uint8_t *)v21;
    sub_100512490("Generic", 1, 0, 0, "BOOL CLMapRoad::computeSegmentDistances()", "%s\n", v21);
    if (v22 != (uint8_t *)buf)
      free(v22);
    return 0;
  }
  return result;
}

void sub_100407BF8(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 3)
  {
    if (a2 >> 61)
      sub_100259694();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_10025E6A0(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    v9 = &v6[8 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_QWORD *)v11 - 1);
        v11 -= 8;
        *((_QWORD *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

BOOL sub_100407C8C(_QWORD *a1)
{
  void **v1;
  _BOOL8 result;
  uint64_t v4;
  unint64_t v5;
  double *v6;
  double *v7;
  double *v8;
  uint64_t *v9;
  double v10;
  NSObject *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  double *v17;
  double *v18;
  double *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  double *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint8_t *v32;
  NSObject *v33;
  const char *v34;
  uint8_t *v35;
  uint64_t v36;
  double v37[5];
  int v38;
  double v39;
  __int16 v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  uint8_t buf[4];
  double v47;
  __int16 v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  __int16 v52;
  uint64_t v53;

  v1 = (void **)(a1 + 23);
  if (a1[23] != a1[24])
    return 1;
  if (a1[17] != a1[18])
  {
    sub_1002433B8((uint64_t)v37);
    sub_100407BF8(v1, ((uint64_t)(a1[18] - a1[17]) >> 4) - 1);
    ++qword_102310518;
    v4 = a1[17];
    if ((unint64_t)(a1[18] - v4) >= 0x11)
    {
      v5 = 1;
      do
      {
        v6 = (double *)(v4 + 16 * v5);
        v7 = v6 - 2;
        v8 = v6 - 1;
        v9 = (uint64_t *)(v6 + 1);
        v10 = sub_1010B9BE4(v37, *(v6 - 2), *(v6 - 1), *v6, v6[1]);
        if (v10 < 0.0)
        {
          if (qword_1022A00D0 != -1)
            dispatch_once(&qword_1022A00D0, &stru_102138160);
          v11 = qword_1022A00D8;
          if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_ERROR))
          {
            v12 = *v6;
            v13 = *v9;
            v14 = *(_QWORD *)v7;
            v15 = *(_QWORD *)v8;
            *(_DWORD *)buf = 134284289;
            v47 = v12;
            v48 = 2049;
            v49 = v13;
            v50 = 2049;
            v51 = v14;
            v52 = 2049;
            v53 = v15;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "CLMM,invalid heading for CLMapRoad coordinate,%{private}.7lf,%{private}.7lf,prev,%{private}.7lf,%{private}.7lf", buf, 0x2Au);
          }
          if (sub_1001BFF7C(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1022A00D0 != -1)
              dispatch_once(&qword_1022A00D0, &stru_102138160);
            v27 = *v6;
            v28 = *v9;
            v29 = *(_QWORD *)v7;
            v30 = *(_QWORD *)v8;
            v38 = 134284289;
            v39 = v27;
            v40 = 2049;
            v41 = v28;
            v42 = 2049;
            v43 = v29;
            v44 = 2049;
            v45 = v30;
            LODWORD(v36) = 42;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 16, "CLMM,invalid heading for CLMapRoad coordinate,%{private}.7lf,%{private}.7lf,prev,%{private}.7lf,%{private}.7lf", &v38, v36);
            v32 = (uint8_t *)v31;
            sub_100512490("Generic", 1, 0, 0, "BOOL CLMapRoad::computeSegmentHeadings()", "%s\n", v31);
            if (v32 != buf)
              free(v32);
          }
        }
        v17 = (double *)a1[24];
        v16 = a1[25];
        if ((unint64_t)v17 >= v16)
        {
          v19 = (double *)*v1;
          v20 = ((char *)v17 - (_BYTE *)*v1) >> 3;
          v21 = v20 + 1;
          if ((unint64_t)(v20 + 1) >> 61)
            sub_100259694();
          v22 = v16 - (_QWORD)v19;
          if (v22 >> 2 > v21)
            v21 = v22 >> 2;
          if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8)
            v23 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v23 = v21;
          if (v23)
          {
            v24 = (char *)sub_10025E6A0((uint64_t)(a1 + 25), v23);
            v19 = (double *)a1[23];
            v17 = (double *)a1[24];
          }
          else
          {
            v24 = 0;
          }
          v25 = (double *)&v24[8 * v20];
          *v25 = v10;
          v18 = v25 + 1;
          while (v17 != v19)
          {
            v26 = *((_QWORD *)v17-- - 1);
            *((_QWORD *)v25-- - 1) = v26;
          }
          a1[23] = v25;
          a1[24] = v18;
          a1[25] = &v24[8 * v23];
          if (v19)
            operator delete(v19);
        }
        else
        {
          *v17 = v10;
          v18 = v17 + 1;
        }
        a1[24] = v18;
        ++v5;
        v4 = a1[17];
      }
      while (v5 < (a1[18] - v4) >> 4);
    }
    return 1;
  }
  if (qword_1022A00D0 != -1)
    dispatch_once(&qword_1022A00D0, &stru_102138160);
  v33 = qword_1022A00D8;
  if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "CLMM,computeSegmentLengthsAndHeading,CoordinateCount is 0", buf, 2u);
  }
  result = sub_1001BFF7C(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_102138160);
    LOWORD(v38) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 16, "CLMM,computeSegmentLengthsAndHeading,CoordinateCount is 0", &v38, 2);
    v35 = (uint8_t *)v34;
    sub_100512490("Generic", 1, 0, 0, "BOOL CLMapRoad::computeSegmentHeadings()", "%s\n", v34);
    if (v35 != buf)
      free(v35);
    return 0;
  }
  return result;
}

double sub_100408158(uint64_t *a1)
{
  return sub_100408160(a1, 0);
}

double sub_100408160(uint64_t *a1, int a2)
{
  uint64_t v4;
  double v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v9;
  const char *v10;
  uint8_t *v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  int v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  int v19;

  sub_100407C8C(a1);
  v4 = a1[23];
  if (a2 < (unint64_t)((a1[24] - v4) >> 3))
    return *(double *)(v4 + 8 * a2);
  v5 = -1.0;
  if (((a1[18] - a1[17]) >> 4) - 1 > (unint64_t)a2)
  {
    v5 = sub_1004083A8((uint64_t)a1, a2, a2 + 1);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_102138160);
    v6 = qword_1022A00D8;
    if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_ERROR))
    {
      v7 = *a1;
      *(_DWORD *)buf = 134283777;
      v17 = v7;
      v18 = 1026;
      v19 = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "CLMM,getHeadingForSegment,stored bearing value unavailble,had to be calculated,%{private}lld,index,%{public}d", buf, 0x12u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1022A00D0 != -1)
        dispatch_once(&qword_1022A00D0, &stru_102138160);
      v9 = *a1;
      v12 = 134283777;
      v13 = v9;
      v14 = 1026;
      v15 = a2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 16, "CLMM,getHeadingForSegment,stored bearing value unavailble,had to be calculated,%{private}lld,index,%{public}d", &v12, 18);
      v11 = (uint8_t *)v10;
      sub_100512490("Generic", 1, 0, 0, "double CLMapRoad::getHeadingForSegment(const int)", "%s\n", v10);
      if (v11 != buf)
        free(v11);
    }
  }
  return v5;
}

double sub_100408388(uint64_t *a1)
{
  unint64_t v1;

  v1 = (unint64_t)(a1[18] - a1[17]) >> 4;
  if ((int)v1 >= 2)
    return sub_100408160(a1, (int)v1 - 2);
  else
    return -1.0;
}

double sub_1004083A8(uint64_t a1, int a2, int a3)
{
  double result;
  uint64_t v4;
  unint64_t v5;
  double *v6;
  double *v7;
  double v8[5];

  result = -1.0;
  if ((a2 & 0x80000000) == 0)
  {
    v4 = *(_QWORD *)(a1 + 136);
    v5 = (unint64_t)(*(_QWORD *)(a1 + 144) - v4) >> 4;
    if ((int)v5 > a2 && (a3 & 0x80000000) == 0 && v4 && (int)v5 > a3)
    {
      v6 = (double *)(v4 + 16 * a2);
      v7 = (double *)(v4 + 16 * a3);
      sub_1002433B8((uint64_t)v8);
      return sub_1010B9BE4(v8, *v6, v6[1], *v7, v7[1]);
    }
  }
  return result;
}

uint64_t sub_100408414(uint64_t *a1)
{
  unint64_t v1;
  int v3;
  uint64_t v4;
  int v5;
  double v6;
  double v7;
  double v8;
  double v9;

  v1 = (unint64_t)(a1[18] - a1[17]) >> 4;
  if ((int)v1 < 3)
    return 0;
  v3 = 0;
  v4 = 0;
  v5 = v1 - 1;
  v6 = -1.0;
  do
  {
    v7 = sub_100408160(a1, v3);
    if (v7 >= 0.0)
    {
      v8 = v7;
      if (v6 >= 0.0)
      {
        v9 = fmod(v7 - v6, 360.0);
        if (v9 < 0.0)
          v9 = v9 + 360.0;
        if (v9 > 180.0)
          v9 = v9 + -360.0;
        if (fabs(v9) <= 7.5)
          v4 = v4;
        else
          v4 = (v4 + 1);
      }
    }
    else
    {
      v8 = v6;
    }
    ++v3;
    v6 = v8;
  }
  while (v5 != v3);
  return v4;
}

BOOL sub_100408504(uint64_t a1, int a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  _BOOL8 result;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v20;
  double v21;
  double v22;
  uint64_t *v23;
  int v24;
  double v25;
  double v26;
  double v27;
  double v28;

  if (((*(_QWORD *)(a1 + 144) - *(_QWORD *)(a1 + 136)) & 0xFFFFFFFF0) == 0x20)
    return 0;
  sub_1004078E0((_QWORD *)a1);
  v8 = *(_QWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 168) - v8;
  if (!v9)
    return 0;
  v10 = 0;
  v11 = v9 >> 3;
  v12 = *(double *)(a1 + 40) * a3;
  if (v11 <= 1)
    v11 = 1;
  while (1)
  {
    v12 = v12 - *(double *)(v8 + 8 * v10);
    if (v12 <= 0.0)
      break;
    if (v11 == ++v10)
      return 0;
  }
  if (!(_DWORD)v10)
  {
    v20 = sub_100408160((uint64_t *)a1, 0);
    v21 = sub_100408160((uint64_t *)a1, 1);
    v16 = v21;
    if (v20 >= 0.0 && v21 >= 0.0)
    {
      v22 = fmod(v20 - v21, 360.0);
      if (v22 < 0.0)
        v22 = v22 + 360.0;
      if (v22 > 180.0)
        v22 = v22 + -360.0;
      if (fabs(v22) > a4)
        return 1;
    }
    if (a2)
    {
      v23 = (uint64_t *)a1;
      v24 = 2;
      goto LABEL_39;
    }
    return 0;
  }
  v14 = sub_100408160((uint64_t *)a1, (int)v10 - 1);
  v15 = sub_100408160((uint64_t *)a1, v10);
  v16 = v15;
  if (v14 < 0.0 || v15 < 0.0)
  {
    if (a2)
    {
LABEL_31:
      v25 = sub_100408160((uint64_t *)a1, (int)v10 - 2);
      if (v14 >= 0.0 && v25 >= 0.0)
      {
        v26 = fmod(v25 - v14, 360.0);
        if (v26 < 0.0)
          v26 = v26 + 360.0;
        if (v26 > 180.0)
          v26 = v26 + -360.0;
        if (fabs(v26) > a4)
          return 1;
      }
      v24 = v10 + 1;
      v23 = (uint64_t *)a1;
LABEL_39:
      v27 = sub_100408160(v23, v24);
      if (v16 >= 0.0 && v27 >= 0.0)
      {
        v28 = fmod(v16 - v27, 360.0);
        if (v28 < 0.0)
          v28 = v28 + 360.0;
        if (v28 > 180.0)
          v28 = v28 + -360.0;
        if (fabs(v28) > a4)
          return 1;
      }
    }
    return 0;
  }
  v17 = fmod(v14 - v15, 360.0);
  if (v17 < 0.0)
    v17 = v17 + 360.0;
  if (v17 > 180.0)
    v17 = v17 + -360.0;
  v18 = fabs(v17);
  result = v18 > a4;
  if (v18 <= a4 && a2 != 0)
    goto LABEL_31;
  return result;
}

BOOL sub_100408784(uint64_t a1, uint64_t *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  if (!*a2)
    return 0;
  result = sub_1004088A0(a1, a2);
  if (!result)
    return result;
  result = sub_1004088EC(a1, a2);
  if (!result)
    return result;
  v5 = (*(_QWORD *)(a1 + 144) - *(_QWORD *)(a1 + 136)) >> 4;
  if ((_DWORD)v5 != ((*(_QWORD *)(*a2 + 144) - *(_QWORD *)(*a2 + 136)) >> 4))
    return 0;
  if ((int)v5 < 3)
    return 1;
  v6 = (v5 - 1);
  v7 = v5 - 2;
  v8 = 1;
  v9 = 16;
  do
  {
    v10 = *(_QWORD *)(*a2 + 136);
    v11 = *(_QWORD *)(*a2 + 144) - v10;
    v12 = (double *)(v10 + v9);
    if (v8 >= (int)((unint64_t)v11 >> 4))
      v12 = 0;
    if ((v7 & 0x80000000) == 0)
    {
      v13 = (int)(v11 >> 4);
      v14 = *(_QWORD *)(a1 + 136);
      v15 = (int)v7 < (int)((unint64_t)(*(_QWORD *)(a1 + 144) - v14) >> 4) && v8 < v13;
      if (v15 && v14 != 0)
      {
        result = sub_100512A74(*v12, v12[1], *(double *)(v14 + 16 * v7), *(double *)(v14 + 16 * v7 + 8), 0.0000001);
        if (!result)
          break;
      }
    }
    ++v8;
    v9 += 16;
    --v7;
    result = 1;
  }
  while (v6 != v8);
  return result;
}

BOOL sub_1004088A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  double *v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  double v8;

  v2 = *a2;
  if (!*a2)
    return 0;
  v3 = *(double **)(a1 + 136);
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  if (*(double **)(a1 + 144) != v3)
  {
    v5 = *v3;
    v6 = v3[1];
  }
  v7 = *(_QWORD *)(v2 + 144);
  v8 = 0.0;
  if (v7 != *(_QWORD *)(v2 + 136))
  {
    v4 = *(double *)(v7 - 16);
    v8 = *(double *)(v7 - 8);
  }
  return sub_100512A74(v5, v6, v4, v8, 0.0000001);
}

BOOL sub_1004088EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double *v7;
  uint64_t v8;
  double v9;

  v2 = *a2;
  if (!*a2)
    return 0;
  v3 = *(_QWORD *)(a1 + 144);
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  if (v3 != *(_QWORD *)(a1 + 136))
  {
    v5 = *(double *)(v3 - 16);
    v6 = *(double *)(v3 - 8);
  }
  v8 = v2 + 136;
  v7 = *(double **)(v2 + 136);
  v9 = 0.0;
  if (*(double **)(v8 + 8) != v7)
  {
    v4 = *v7;
    v9 = v7[1];
  }
  return sub_100512A74(v5, v6, v4, v9, 0.0000001);
}

BOOL sub_100408938(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  double *v3;
  double v4;
  double v5;
  double v6;
  double *v7;
  uint64_t v8;
  double v9;

  v2 = *a2;
  if (!*a2)
    return 0;
  v3 = *(double **)(a1 + 136);
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  if (*(double **)(a1 + 144) != v3)
  {
    v5 = *v3;
    v6 = v3[1];
  }
  v8 = v2 + 136;
  v7 = *(double **)(v2 + 136);
  v9 = 0.0;
  if (*(double **)(v8 + 8) != v7)
  {
    v4 = *v7;
    v9 = v7[1];
  }
  return sub_100512A74(v5, v6, v4, v9, 0.0000001);
}

BOOL sub_100408984(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  double v8;

  v2 = *a2;
  if (!*a2)
    return 0;
  v3 = *(_QWORD *)(a1 + 144);
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  if (v3 != *(_QWORD *)(a1 + 136))
  {
    v5 = *(double *)(v3 - 16);
    v6 = *(double *)(v3 - 8);
  }
  v7 = *(_QWORD *)(v2 + 144);
  v8 = 0.0;
  if (v7 != *(_QWORD *)(v2 + 136))
  {
    v4 = *(double *)(v7 - 16);
    v8 = *(double *)(v7 - 8);
  }
  return sub_100512A74(v5, v6, v4, v8, 0.0000001);
}

BOOL sub_1004089D0(uint64_t a1, uint64_t *a2)
{
  if (!*a2)
    return 0;
  if (sub_100408938(a1, a2))
    return 1;
  return sub_1004088EC(a1, a2);
}

BOOL sub_100408A20(uint64_t a1, uint64_t *a2)
{
  if (!*a2)
    return 0;
  if (sub_100408984(a1, a2))
    return 1;
  return sub_1004088A0(a1, a2);
}

BOOL sub_100408A70(uint64_t a1, uint64_t *a2)
{
  if (!*a2)
    return 0;
  if (sub_100408938(a1, a2))
    return 1;
  return sub_1004088A0(a1, a2);
}

BOOL sub_100408AC0(uint64_t a1, uint64_t *a2)
{
  if (!*a2)
    return 0;
  if (sub_100408984(a1, a2))
    return 1;
  return sub_1004088EC(a1, a2);
}

uint64_t sub_100408B10(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(double **)(a1 + 136);
  v2 = *(_QWORD *)(a1 + 144);
  if ((unint64_t)(v2 - (_QWORD)v1) >= 0x20
    && (v2 - (_QWORD)v1 != 32 || !sub_100512A74(*(double *)(v2 - 16), *(double *)(v2 - 8), *v1, v1[1], 0.0000001)))
  {
    return 1;
  }
  result = 0;
  ++qword_102310520;
  return result;
}

BOOL sub_100408B68(uint64_t *a1, uint64_t a2, void *a3, int a4)
{
  NSObject *v6;
  _BOOL4 v7;
  _BOOL8 result;
  double v9;
  _BYTE *v10;
  _BYTE *v11;
  int v12;
  int v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  int v28;
  double *v29;
  double v30;
  BOOL v31;
  char v32;
  _OWORD *v33;
  unint64_t v34;
  NSObject *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  double v40;
  _BYTE *v41;
  unsigned __int8 v42;
  int v44;
  uint64_t v45;
  __int16 v46;
  int v47;
  _BYTE buf[1620];

  if (a3)
  {
    if (objc_msgSend(a3, "valueForKey:", CFSTR("roadID")))
      *a1 = (uint64_t)objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("roadID")), "longLongValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("roadClass")))
      *((_DWORD *)a1 + 5) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("roadClass")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("formOfWay")))
      *((_DWORD *)a1 + 6) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("formOfWay")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("travelDirection")))
      *((_DWORD *)a1 + 18) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("travelDirection")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("rampType")))
      *((_DWORD *)a1 + 19) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("rampType")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("speedLimit")))
      *((double *)a1 + 4) = (double)(int)objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("speedLimit")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("isDrivable")))
      *((_BYTE *)a1 + 81) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("isDrivable")), "BOOLValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("isRoadPedestrianNavigable")))
      v42 = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("isRoadPedestrianNavigable")), "BOOLValue");
    else
      v42 = 0;
    if (objc_msgSend(a3, "valueForKey:", CFSTR("isTunnel")))
      *((_BYTE *)a1 + 18) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("isTunnel")), "BOOLValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("isBridge")))
      *((_BYTE *)a1 + 19) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("isBridge")), "BOOLValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("isRail")))
      *((_BYTE *)a1 + 17) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("isRail")), "BOOLValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("startJunction")))
      *((_DWORD *)a1 + 27) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("startJunction")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("stopJunction")))
      *((_DWORD *)a1 + 28) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("stopJunction")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("startTileBorder")))
      *((_BYTE *)a1 + 116) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("startTileBorder")), "BOOLValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("endTileBorder")))
      *((_BYTE *)a1 + 117) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("endTileBorder")), "BOOLValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("bikeableSide")))
      *((_DWORD *)a1 + 22) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("bikeableSide")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("walkableSide")))
      *((_DWORD *)a1 + 21) = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("walkableSide")), "intValue");
    if (objc_msgSend(a3, "valueForKey:", CFSTR("coordinateCount")))
    {
      v12 = objc_msgSend(objc_msgSend(a3, "valueForKey:", CFSTR("coordinateCount")), "intValue");
      if (v12 >= 1)
      {
        v13 = v12;
        v14 = 0;
        while (1)
        {
          v15 = objc_autoreleasePoolPush();
          v16 = objc_msgSend(objc_msgSend(a3, "valueForKey:", +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("coord%i"), v14)), "componentsSeparatedByString:", CFSTR(","));
          if (objc_msgSend(v16, "count") != (id)3)
            break;
          objc_msgSend(objc_msgSend(v16, "objectAtIndexedSubscript:", 0), "doubleValue");
          v18 = v17;
          objc_msgSend(objc_msgSend(v16, "objectAtIndexedSubscript:", 1), "doubleValue");
          *(_QWORD *)buf = v18;
          *(_QWORD *)&buf[8] = v19;
          sub_10040779C(a1, (double *)buf, 1);
          v20 = (a1[18] - a1[17]) & 0xFFFFFFFF0;
          objc_msgSend(objc_msgSend(v16, "objectAtIndexedSubscript:", 2), "doubleValue");
          if (v20 == 16)
            v22 = 15;
          else
            v22 = 16;
          a1[v22] = v21;
          objc_autoreleasePoolPop(v15);
          v14 = (v14 + 1);
          if (v13 == (_DWORD)v14)
            goto LABEL_53;
        }
        objc_autoreleasePoolPop(v15);
        return 0;
      }
    }
LABEL_53:
    v23 = *((unsigned __int8 *)a1 + 17);
    v24 = v42;
    if ((*((_DWORD *)a1 + 21) - 1) < 3)
      v24 = 1;
    if (*((_BYTE *)a1 + 17))
      v24 = 0;
    *((_BYTE *)a1 + 80) = v24;
    if ((v24 & 1) != 0)
    {
      v25 = 1;
    }
    else
    {
      if (v23)
        v26 = 1;
      else
        v26 = (*((_DWORD *)a1 + 22) - 1) >= 3;
      v25 = !v26;
    }
    *((_BYTE *)a1 + 82) = v25;
    v27 = *((int *)a1 + 5);
    v28 = *((_DWORD *)a1 + 18);
    if (v27 > 7)
    {
      v30 = dbl_101BAFD30[v28 == 0];
    }
    else
    {
      v29 = (double *)&unk_101BAFD40;
      if (!v28)
        v29 = (double *)&unk_101BAFD80;
      v30 = v29[v27];
    }
    *((double *)a1 + 12) = v30;
    if (v23)
      v31 = 1;
    else
      v31 = v28 == 0;
    v32 = !v31;
    *((_BYTE *)a1 + 16) = v32;
    v33 = (_OWORD *)a1[17];
    v34 = a1[18] - (_QWORD)v33;
    if (a4)
    {
      if ((int)(v34 >> 4) <= 1)
      {
        if (qword_1022A00D0 != -1)
          dispatch_once(&qword_1022A00D0, &stru_102138160);
        v35 = qword_1022A00D8;
        if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_DEBUG))
        {
          v36 = *a1;
          v37 = (unint64_t)(a1[18] - a1[17]) >> 4;
          *(_DWORD *)buf = 134283777;
          *(_QWORD *)&buf[4] = v36;
          *(_WORD *)&buf[12] = 1026;
          *(_DWORD *)&buf[14] = v37;
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEBUG, "CLMM,CLTSP,id,%{private}lld,has less than two coordinate,%{public}d", buf, 0x12u);
        }
        result = sub_1001BFF7C(115, 2);
        if (result)
        {
          bzero(buf, 0x65CuLL);
          if (qword_1022A00D0 != -1)
            dispatch_once(&qword_1022A00D0, &stru_102138160);
          v38 = *a1;
          v39 = (unint64_t)(a1[18] - a1[17]) >> 4;
          v44 = 134283777;
          v45 = v38;
          v46 = 1026;
          v47 = v39;
          v40 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 2, "CLMM,CLTSP,id,%{private}lld,has less than two coordinate,%{public}d", &v44, 18);
          v11 = v41;
          sub_100512490("Generic", 1, 0, 2, "BOOL CLMapRoad::fillFromMapHelperNSDictionaryArray(CLDistanceCalc &, NSDictionary * _Nonnull, BOOL)", "%s\n", v40);
LABEL_86:
          if (v11 != buf)
            free(v11);
          return 0;
        }
        return result;
      }
    }
    else
    {
      result = 1;
      if (!v33 || (v34 & 0xFFFFFFFF0) != 0x10)
        return result;
      *(_OWORD *)buf = *v33;
      sub_10040779C(a1, (double *)buf, 0);
    }
    return 1;
  }
  if (qword_1022A00D0 != -1)
    dispatch_once(&qword_1022A00D0, &stru_102138160);
  v6 = qword_1022A00D8;
  if (os_log_type_enabled((os_log_t)qword_1022A00D8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "CLMM,CLTSP,fillFromMapHelperNSDictionaryArray,array is null", buf, 2u);
  }
  v7 = sub_1001BFF7C(115, 0);
  result = 0;
  if (v7)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1022A00D0 != -1)
      dispatch_once(&qword_1022A00D0, &stru_102138160);
    LOWORD(v44) = 0;
    v9 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_1022A00D8, 16, "CLMM,CLTSP,fillFromMapHelperNSDictionaryArray,array is null", &v44, 2);
    v11 = v10;
    sub_100512490("Generic", 1, 0, 0, "BOOL CLMapRoad::fillFromMapHelperNSDictionaryArray(CLDistanceCalc &, NSDictionary * _Nonnull, BOOL)", "%s\n", v9);
    goto LABEL_86;
  }
  return result;
}

void sub_100409384(id a1)
{
  qword_1022A00D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_1004093B0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

id sub_10040961C()
{
  id v0;
  void *v1;
  unint64_t v2;
  GPSCalCoreAnalyticsBin *v3;
  double *v4;

  v0 = +[NSMutableArray array](NSMutableArray, "array");
  v1 = objc_autoreleasePoolPush();
  if (qword_102301250 - qword_102301248 != 8)
  {
    v2 = 0;
    do
    {
      v3 = [GPSCalCoreAnalyticsBin alloc];
      v4 = (double *)(qword_102301248 + 8 * v2++);
      objc_msgSend(v0, "addObject:", -[GPSCalCoreAnalyticsBin initWithSpeeds:speedUB:](v3, "initWithSpeeds:speedUB:", *v4, v4[1]));
    }
    while (v2 < ((qword_102301250 - qword_102301248) >> 3) - 1);
  }
  objc_autoreleasePoolPop(v1);
  return v0;
}

uint64_t sub_1004096CC(uint64_t a1, char a2, char a3)
{
  id v6;
  NSObject *v7;
  unsigned int v8;
  uint64_t v10;
  unsigned int v11;
  const char *v12;
  uint8_t *v13;
  _DWORD v14[4];
  uint8_t buf[4];
  unsigned int v16;

  v6 = sub_10040961C();
  sub_100409930(a1, CFSTR("GPSSpeedToKValueTable"), (uint64_t)v6, 1, a2, a3);
  *(_QWORD *)a1 = off_102138190;
  sub_10055D44C(a1 + 56, "CMGPSRawSpeedKValueMtex", 0, 1);
  *(_QWORD *)(a1 + 48) = sub_10040961C();
  if (qword_10229FCD0 != -1)
    dispatch_once(&qword_10229FCD0, &stru_102138200);
  v7 = qword_10229FCD8;
  if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_INFO))
  {
    v8 = objc_msgSend(*(id *)(a1 + 48), "count");
    *(_DWORD *)buf = 67109120;
    v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "GPSRawSpeedToKValueTable: number of def bins: %d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v10 = qword_10229FCD8;
    v11 = objc_msgSend(*(id *)(a1 + 48), "count");
    v14[0] = 67109120;
    v14[1] = v11;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v10, 1, "GPSRawSpeedToKValueTable: number of def bins: %d", v14);
    v13 = (uint8_t *)v12;
    sub_100512490("Generic", 1, 0, 2, "CMMobilityCal::GPSRawSpeedToKValueTable::GPSRawSpeedToKValueTable(BOOL, BOOL)", "%s\n", v12);
    if (v13 != buf)
      free(v13);
  }
  sub_100409DE4(a1);
  sub_10040A0E4(a1, 1);
  return a1;
}

void sub_100409900(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_10055D4D0(v2);
  sub_10040A7D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100409930(uint64_t a1, void *a2, uint64_t a3, int a4, char a5, char a6)
{
  NSObject *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  int v15;
  NSObject *v16;
  uint64_t v18;
  const char *v19;
  uint8_t *v20;
  const char *v21;
  uint8_t *v22;
  int v23;
  const char *v24;
  uint8_t *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint8_t buf[4];
  uint64_t v30;

  *(_QWORD *)a1 = &off_102138230;
  *(_QWORD *)(a1 + 8) = +[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:");
  *(_DWORD *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + 20) = -1;
  *(_QWORD *)(a1 + 32) = a2;
  *(_BYTE *)(a1 + 40) = a5;
  *(_BYTE *)(a1 + 41) = a6;
  *(_QWORD *)(a1 + 24) = sub_1001FD94C();
  if ((sub_10040C26C(a1) & 0x80000000) != 0)
  {
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v11 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v30 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Unable to restore table %@.", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v18 = *(_QWORD *)(a1 + 32);
      v27 = 138412290;
      v28 = v18;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Unable to restore table %@.", &v27, 12);
      v20 = (uint8_t *)v19;
      sub_100512490("Generic", 1, 0, 2, "CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::CalTable(NSString *, NSArray<outT *> *, const TableVersion, BOOL, BOOL) [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v19);
      if (v20 != buf)
        free(v20);
    }
    v13 = *(void **)(a1 + 8);
    if (v13 && objc_msgSend(v13, "count"))
    {
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v14 = qword_10229FCD8;
      if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
      {
        v15 = *(_DWORD *)(a1 + 16);
        *(_DWORD *)buf = 67109120;
        LODWORD(v30) = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Use default bins version %d and store them.", buf, 8u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCD0 != -1)
          dispatch_once(&qword_10229FCD0, &stru_102138200);
        v23 = *(_DWORD *)(a1 + 16);
        v27 = 67109120;
        LODWORD(v28) = v23;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Use default bins version %d and store them.", &v27);
        v25 = (uint8_t *)v24;
        sub_100512490("Generic", 1, 0, 2, "CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::CalTable(NSString *, NSArray<outT *> *, const TableVersion, BOOL, BOOL) [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v24);
        if (v25 != buf)
          free(v25);
      }
      if (sub_10040B300(a1) == 100)
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 16);
    }
    else
    {
      *(_QWORD *)(a1 + 8) = 0;
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v16 = qword_10229FCD8;
      if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Unexpected error in calibration table initialization.", buf, 2u);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCD0 != -1)
          dispatch_once(&qword_10229FCD0, &stru_102138200);
        LOWORD(v27) = 0;
        LODWORD(v26) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 16, "Unexpected error in calibration table initialization.", &v27, v26);
        v22 = (uint8_t *)v21;
        sub_100512490("Generic", 1, 0, 0, "CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::CalTable(NSString *, NSArray<outT *> *, const TableVersion, BOOL, BOOL) [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v21);
        if (v22 != buf)
          free(v22);
      }
    }
  }
  return a1;
}

uint64_t sub_100409DE4(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  const char *v5;
  uint8_t *v6;
  const char *v7;
  uint8_t *v8;
  uint64_t v9;
  _WORD v10[8];
  uint8_t buf[1640];

  if (*(_DWORD *)(a1 + 16) != *(_DWORD *)(a1 + 20))
  {
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v2 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "The version of restored table does not match runtime version. Restoring default.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v10[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "The version of restored table does not match runtime version. Restoring default.", v10, 2);
      v6 = (uint8_t *)v5;
      sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::version()", "%s\n", v5);
      if (v6 != buf)
        free(v6);
    }
    *(_QWORD *)(a1 + 8) = +[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:", sub_10040961C());
    if (sub_10040B300(a1) == 100)
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 16);
    }
    else
    {
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v3 = qword_10229FCD8;
      if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Table display error.", buf, 2u);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCD0 != -1)
          dispatch_once(&qword_10229FCD0, &stru_102138200);
        v10[0] = 0;
        LODWORD(v9) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 16, "Table display error.", v10, v9);
        v8 = (uint8_t *)v7;
        sub_100512490("Generic", 1, 0, 0, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::version()", "%s\n", v7);
        if (v8 != buf)
          free(v8);
      }
    }
  }
  return 100;
}

uint64_t sub_10040A0E4(uint64_t a1, char a2)
{
  char v2;
  __objc2_class *v4;
  NSObject *v5;
  const char *v6;
  NSObject *v7;
  void *v8;
  id v9;
  id v10;
  int v11;
  uint64_t v12;
  void *v13;
  void *v14;
  __objc2_class *isa;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  const char *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint8_t *v45;
  id v46;
  uint8_t *v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  int v54;
  int v55;
  __int16 v56;
  uint64_t v57;
  __int16 v58;
  uint64_t v59;
  __int16 v60;
  unsigned int v61;
  __int16 v62;
  uint64_t v63;
  uint8_t v64[128];
  uint8_t buf[4];
  int v66;
  __int16 v67;
  uint64_t v68;
  __int16 v69;
  uint64_t v70;
  __int16 v71;
  unsigned int v72;
  __int16 v73;
  uint64_t v74;

  v2 = a2;
  v4 = DefaultObserver;
  if ((a2 & 1) != 0)
  {
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v5 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "* CMMobilityCal::GPSRawSpeedToKValueTable *", buf, 2u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_15;
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    LOWORD(v54) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 2, "* CMMobilityCal::GPSRawSpeedToKValueTable *", &v54, 2);
  }
  else
  {
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v7 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "* CMMobilityCal::GPSRawSpeedToKValueTable *", buf, 2u);
    }
    if (!sub_1001BFF7C(115, 2))
      goto LABEL_15;
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    LOWORD(v54) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "* CMMobilityCal::GPSRawSpeedToKValueTable *", &v54, 2);
  }
  v48 = (uint8_t *)v6;
  sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::show(BOOL)", "%s\n", v6);
  if (v48 != buf)
    free(v48);
LABEL_15:
  v52 = 0u;
  v53 = 0u;
  v50 = 0u;
  v51 = 0u;
  v8 = *(void **)(a1 + 8);
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v50, v64, 16);
  if (!v9)
    return 100;
  v10 = v9;
  v11 = 0;
  v12 = *(_QWORD *)v51;
  v49 = v2;
  do
  {
    v13 = 0;
    do
    {
      if (*(_QWORD *)v51 != v12)
        objc_enumerationMutation(v8);
      v14 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)v13);
      if (v14)
      {
        isa = v4[82].isa;
        if ((v2 & 1) != 0)
        {
          if (isa != (__objc2_class *)-1)
            dispatch_once(&qword_10229FCD0, &stru_102138200);
          v16 = qword_10229FCD8;
          if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEBUG))
          {
            objc_msgSend(v14, "mean");
            v18 = v17;
            objc_msgSend(v14, "variance");
            v20 = v19;
            v21 = objc_msgSend(v14, "updateCount");
            objc_msgSend(v14, "lastUpdateTime");
            *(_DWORD *)buf = 67110144;
            v66 = v11;
            v67 = 2048;
            v68 = v18;
            v69 = 2048;
            v70 = v20;
            v71 = 1024;
            v72 = v21;
            v4 = DefaultObserver;
            v73 = 2048;
            v74 = v22;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Bin #%d | mean: %f | variance: %f | updateCount: %d | lastUpdateTime: %f", buf, 0x2Cu);
            ++v11;
            v2 = v49;
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (v4[82].isa != (__objc2_class *)-1)
              dispatch_once(&qword_10229FCD0, &stru_102138200);
            v23 = qword_10229FCD8;
            objc_msgSend(v14, "mean");
            v25 = v24;
            objc_msgSend(v14, "variance");
            v27 = v26;
            v28 = objc_msgSend(v14, "updateCount");
            objc_msgSend(v14, "lastUpdateTime");
            v54 = 67110144;
            v55 = v11;
            v56 = 2048;
            v57 = v25;
            v58 = 2048;
            v59 = v27;
            v60 = 1024;
            v61 = v28;
            v62 = 2048;
            v63 = v29;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v23, 2, "Bin #%d | mean: %f | variance: %f | updateCount: %d | lastUpdateTime: %f", &v54);
LABEL_40:
            v45 = (uint8_t *)v30;
            sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::show(BOOL)", "%s\n", v30);
            if (v45 != buf)
              free(v45);
            ++v11;
            v4 = DefaultObserver;
          }
        }
        else
        {
          if (isa != (__objc2_class *)-1)
            dispatch_once(&qword_10229FCD0, &stru_102138200);
          v31 = qword_10229FCD8;
          if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend(v14, "mean");
            v33 = v32;
            objc_msgSend(v14, "variance");
            v35 = v34;
            v36 = objc_msgSend(v14, "updateCount");
            objc_msgSend(v14, "lastUpdateTime");
            *(_DWORD *)buf = 67110144;
            v66 = v11;
            v67 = 2048;
            v68 = v33;
            v69 = 2048;
            v70 = v35;
            v71 = 1024;
            v72 = v36;
            v4 = DefaultObserver;
            v73 = 2048;
            v74 = v37;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "Bin #%d | mean: %f | variance: %f | updateCount: %d | lastUpdateTime: %f", buf, 0x2Cu);
            ++v11;
            v2 = v49;
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (v4[82].isa != (__objc2_class *)-1)
              dispatch_once(&qword_10229FCD0, &stru_102138200);
            v38 = qword_10229FCD8;
            objc_msgSend(v14, "mean");
            v40 = v39;
            objc_msgSend(v14, "variance");
            v42 = v41;
            v43 = objc_msgSend(v14, "updateCount");
            objc_msgSend(v14, "lastUpdateTime");
            v54 = 67110144;
            v55 = v11;
            v56 = 2048;
            v57 = v40;
            v58 = 2048;
            v59 = v42;
            v60 = 1024;
            v61 = v43;
            v62 = 2048;
            v63 = v44;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v38, 0, "Bin #%d | mean: %f | variance: %f | updateCount: %d | lastUpdateTime: %f", &v54);
            goto LABEL_40;
          }
        }
      }
      v13 = (char *)v13 + 1;
    }
    while (v10 != v13);
    v46 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v50, v64, 16);
    v10 = v46;
  }
  while (v46);
  return 100;
}

uint64_t sub_10040A7D4(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_102138230;

  *(_QWORD *)(a1 + 32) = 0;
  v2 = *(void **)(a1 + 8);
  if (v2)
  {

    *(_QWORD *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_10040A828(uint64_t a1)
{
  *(_QWORD *)a1 = off_102138190;

  sub_10055D4D0(a1 + 56);
  return sub_10040A7D4(a1);
}

void sub_10040A86C(uint64_t a1)
{
  sub_10040A828(a1);
  operator delete();
}

void *sub_10040A890(uint64_t a1, double *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  double v14;
  double v15;
  const char *v17;
  uint8_t *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _WORD v23[8];
  uint8_t v24[128];
  uint8_t buf[16];
  __int16 v26;

  if (qword_10229FCD0 != -1)
    dispatch_once(&qword_10229FCD0, &stru_102138200);
  v4 = qword_10229FCD8;
  if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Attempt to lookup bin.", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v23[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Attempt to lookup bin.", v23, 2);
    v18 = (uint8_t *)v17;
    sub_100512490("Generic", 1, 0, 2, "virtual GPSCalCoreAnalyticsBin *CMMobilityCal::GPSRawSpeedToKValueTable::lookupOutputGivenInput(const double &)", "%s\n", v17);
    if (v18 != buf)
      free(v18);
  }
  v6 = a1 + 56;
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)buf = a1 + 56;
  (*(void (**)(uint64_t))(v5 + 16))(a1 + 56);
  v26 = 256;
  v7 = *a2;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v8 = *(void **)(a1 + 8);
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
  if (v9)
  {
    v10 = v7 + 0.00001;
    v11 = *(_QWORD *)v20;
LABEL_8:
    v12 = 0;
    while (1)
    {
      if (*(_QWORD *)v20 != v11)
        objc_enumerationMutation(v8);
      v13 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * v12);
      if (v13)
      {
        objc_msgSend(*(id *)(*((_QWORD *)&v19 + 1) + 8 * v12), "speedLB");
        if (v10 >= v14)
        {
          objc_msgSend(v13, "speedUB");
          if (v10 < v15)
            break;
        }
      }
      if (v9 == (id)++v12)
      {
        v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
        if (v9)
          goto LABEL_8;
        break;
      }
    }
  }
  else
  {
    v13 = 0;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  return v13;
}

void sub_10040AB24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a2)
    sub_10024F88C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10040AB58(uint64_t a1, double *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  id v9;
  double v10;
  uint64_t v11;
  void *i;
  void *v13;
  double v14;
  double v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int16 v22;
  _BYTE v23[128];

  v6 = a1 + 56;
  v5 = *(_QWORD *)(a1 + 56);
  v21 = a1 + 56;
  (*(void (**)(uint64_t))(v5 + 16))(a1 + 56);
  v22 = 256;
  v7 = *a2;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v8 = *(void **)(v6 - 48);
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v23, 16);
  if (v9)
  {
    v10 = v7 + 0.00001;
    v11 = *(_QWORD *)v18;
    while (2)
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v18 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
        if (v13)
        {
          objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i), "speedLB");
          if (v10 >= v14)
          {
            objc_msgSend(v13, "speedUB");
            if (v10 < v15)
            {
              objc_msgSend(a3, "mean");
              objc_msgSend(v13, "setMean:");
              objc_msgSend(a3, "variance");
              objc_msgSend(v13, "setMean:");
              objc_msgSend(v13, "setMean:", (double)(int)objc_msgSend(a3, "updateCount"));
              objc_msgSend(a3, "lastUpdateTime");
              objc_msgSend(v13, "setMean:");
              goto LABEL_13;
            }
          }
        }
      }
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v23, 16);
      if (v9)
        continue;
      break;
    }
  }
LABEL_13:
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  return 100;
}

void sub_10040ACFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_10024F88C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10040AD28(uint64_t a1, void *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  NSObject *v19;
  NSObject *v20;
  const char *v22;
  uint8_t *v23;
  const char *v24;
  uint8_t *v25;
  uint64_t v26;
  __int16 v27;
  double v28;
  double v29;
  double v30;
  uint8_t buf[1640];

  objc_msgSend(a2, "distanceRawPed");
  if (v4 != 0.0)
  {
    objc_msgSend(objc_msgSend(a2, "stop"), "timeIntervalSinceReferenceDate");
    v6 = v5;
    objc_msgSend(objc_msgSend(a2, "start"), "timeIntervalSinceReferenceDate");
    if (v6 - v7 != 0.0)
    {
      objc_msgSend(a2, "distanceGps");
      v9 = v8;
      objc_msgSend(a2, "distanceRawPed");
      v30 = v9 / v10;
      objc_msgSend(a2, "distanceRawPed");
      v12 = v11;
      objc_msgSend(objc_msgSend(a2, "stop"), "timeIntervalSinceReferenceDate");
      v14 = v13;
      objc_msgSend(objc_msgSend(a2, "start"), "timeIntervalSinceReferenceDate");
      v29 = v12 / (v14 - v15);
      objc_msgSend(a2, "distanceGps");
      v17 = v16 / 400.0;
      if (v17 <= 1.0)
        v18 = v17 * 0.4;
      else
        v18 = 0.4;
      v28 = v18;
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v19 = qword_10229FCD8;
      if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Attempt to update GPS calibration table.", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCD0 != -1)
          dispatch_once(&qword_10229FCD0, &stru_102138200);
        v27 = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Attempt to update GPS calibration table.", &v27, 2);
        v23 = (uint8_t *)v22;
        sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::receiveSingleCalTrack(const CalibrationTrack *)", "%s\n", v22);
        if (v23 != buf)
          free(v23);
      }
      sub_10040B0C4(a1, &v30, &v29, &v28);
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v20 = qword_10229FCD8;
      if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Attempt to persist GPS calibration table.", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCD0 != -1)
          dispatch_once(&qword_10229FCD0, &stru_102138200);
        v27 = 0;
        LODWORD(v26) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Attempt to persist GPS calibration table.", &v27, v26);
        v25 = (uint8_t *)v24;
        sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::receiveSingleCalTrack(const CalibrationTrack *)", "%s\n", v24);
        if (v25 != buf)
          free(v25);
      }
      sub_10040B300(a1);
    }
  }
  return 100;
}

uint64_t sub_10040B0C4(uint64_t a1, double *a2, double *a3, double *a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  void *v10;
  id v11;
  double v12;
  uint64_t v13;
  void *i;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int16 v34;
  _BYTE v35[128];

  v8 = a1 + 56;
  v7 = *(_QWORD *)(a1 + 56);
  v33 = a1 + 56;
  (*(void (**)(uint64_t))(v7 + 16))(a1 + 56);
  v34 = 256;
  v9 = *a3;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v10 = *(void **)(v8 - 48);
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v29, v35, 16);
  if (v11)
  {
    v12 = v9 + 0.00001;
    v13 = *(_QWORD *)v30;
    while (2)
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(_QWORD *)v30 != v13)
          objc_enumerationMutation(v10);
        v15 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)i);
        if (v15)
        {
          objc_msgSend(*(id *)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)i), "speedLB");
          if (v12 >= v16)
          {
            objc_msgSend(v15, "speedUB");
            if (v12 < v17)
            {
              objc_msgSend(v15, "mean");
              v19 = v18;
              v20 = *a4;
              v21 = *a2;
              objc_msgSend(v15, "variance");
              v23 = v22;
              v24 = *a4;
              v25 = *a2;
              objc_msgSend(v15, "mean");
              v27 = v26;
              objc_msgSend(v15, "setMean:", v20 * v21 + v19 * (1.0 - v20));
              objc_msgSend(v15, "setVariance:", (1.0 - v20) * (v23 + v24 * ((v25 - v27) * (v25 - v27))));
              objc_msgSend(v15, "setUpdateCount:", objc_msgSend(v15, "updateCount") + 1);
              objc_msgSend(v15, "setLastUpdateTime:", CFAbsoluteTimeGetCurrent());
              goto LABEL_13;
            }
          }
        }
      }
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v29, v35, 16);
      if (v11)
        continue;
      break;
    }
  }
LABEL_13:
  (*(void (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
  return 100;
}

void sub_10040B2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_10187E514((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10040B300(uint64_t a1)
{
  NSNumber *v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  const char *v11;
  uint8_t *v12;
  uint64_t v13;
  const char *v14;
  uint8_t *v15;
  uint64_t v16;
  const char *v17;
  uint8_t *v18;
  uint64_t v19;
  const char *v20;
  uint8_t *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint8_t buf[4];
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];

  if (!*(_BYTE *)(a1 + 41))
    return 100;
  if ((objc_opt_respondsToSelector(NSKeyedArchiver, "archivedDataWithRootObject:requiringSecureCoding:error:") & 1) != 0&& (v27[0] = CFSTR("version"), v2 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 16)), v27[1] = CFSTR("bins"), v28[0] = v2, v28[1] = +[NSArray arrayWithArray:](NSArray, "arrayWithArray:", *(_QWORD *)(a1 + 8)), +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:](NSKeyedArchiver, "archivedDataWithRootObject:requiringSecureCoding:error:", +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v28, v27, 2), 1, 0)))
  {
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v3 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v26 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Attempt to store %@.", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v13 = *(_QWORD *)(a1 + 32);
      v23 = 138412290;
      v24 = v13;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Attempt to store %@.", &v23, 12);
      v15 = (uint8_t *)v14;
      sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v14);
      if (v15 != buf)
        free(v15);
    }
    sub_10023EC14(*(_QWORD *)(a1 + 24));
    if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 944))(*(_QWORD *)(a1 + 24)) & 1) != 0)
    {
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v5 = qword_10229FCD8;
      if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
      {
        v6 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v26 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Table %@ stored successfully.", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCD0 != -1)
          dispatch_once(&qword_10229FCD0, &stru_102138200);
        v16 = *(_QWORD *)(a1 + 32);
        v23 = 138412290;
        v24 = v16;
        LODWORD(v22) = 12;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Table %@ stored successfully.", &v23, v22);
        v18 = (uint8_t *)v17;
        sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v17);
        if (v18 != buf)
          free(v18);
      }
      return 100;
    }
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v9 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_ERROR))
    {
      v10 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v26 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to store %@.", buf, 0xCu);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      v19 = *(_QWORD *)(a1 + 32);
      v23 = 138412290;
      v24 = v19;
      LODWORD(v22) = 12;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 16, "Failed to store %@.", &v23, v22);
      v21 = (uint8_t *)v20;
      sub_100512490("Generic", 1, 0, 0, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v20);
      if (v21 != buf)
        free(v21);
    }
    return 103;
  }
  else
  {
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v8 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to serialize calibration table for storage.", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCD0 != -1)
        dispatch_once(&qword_10229FCD0, &stru_102138200);
      LOWORD(v23) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 16, "Failed to serialize calibration table for storage.", &v23, 2);
      v12 = (uint8_t *)v11;
      sub_100512490("Generic", 1, 0, 0, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v11);
      if (v12 != buf)
        free(v12);
    }
    return 112;
  }
}

uint64_t sub_10040B92C(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  double v10;
  __int128 v11;
  void **v12;
  NSDictionary *(*v13)(uint64_t);
  uint64_t v14;
  void *v15;
  const __CFString *v16;
  __objc2_class *v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  NSObject *v23;
  double v24;
  double v25;
  uint64_t v26;
  __objc2_class *v27;
  const __CFString *v28;
  void *v29;
  NSDictionary *(*v30)(uint64_t);
  void **v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  int v53;
  uint64_t v54;
  __int128 v55;
  double v56;
  double v57;
  id obj;
  double v59;
  int v60;
  int v61;
  void *v62;
  _BYTE *v63;
  uint64_t v64;
  void *__p;
  _BYTE *v66;
  uint64_t v67;
  _QWORD v68[7];
  int v69;
  int v70;
  int v71;
  int v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  _OWORD v77[2];
  _OWORD v78[2];
  _OWORD v79[2];
  _OWORD v80[2];
  _OWORD v81[2];
  _OWORD v82[2];
  _OWORD v83[2];
  _OWORD v84[2];
  uint64_t v85;
  __int16 v86;
  _DWORD v87[2];
  __int16 v88;
  int v89;
  __int16 v90;
  int v91;
  __int16 v92;
  int v93;
  __int16 v94;
  int v95;
  __int16 v96;
  uint64_t v97;
  __int16 v98;
  uint64_t v99;
  __int16 v100;
  double v101;
  __int16 v102;
  double v103;
  __int16 v104;
  uint64_t v105;
  uint8_t buf[4];
  int v107;
  __int16 v108;
  int v109;
  __int16 v110;
  int v111;
  __int16 v112;
  int v113;
  __int16 v114;
  int v115;
  __int16 v116;
  uint64_t v117;
  __int16 v118;
  uint64_t v119;
  __int16 v120;
  double v121;
  __int16 v122;
  double v123;
  __int16 v124;
  uint64_t v125;
  _BYTE v126[128];

  v5 = a1 + 56;
  v4 = *(_QWORD *)(a1 + 56);
  v85 = a1 + 56;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 56);
  v86 = 256;
  v6 = a2[1];
  v83[0] = *a2;
  v83[1] = v6;
  v84[0] = a2[2];
  *(_OWORD *)((char *)v84 + 12) = *(_OWORD *)((char *)a2 + 44);
  v61 = sub_101384E7C((uint64_t)v83);
  v7 = a2[1];
  v81[0] = *a2;
  v81[1] = v7;
  v82[0] = a2[2];
  *(_OWORD *)((char *)v82 + 12) = *(_OWORD *)((char *)a2 + 44);
  v60 = sub_100217A98((unsigned int *)v81);
  v8 = a2[1];
  v79[0] = *a2;
  v79[1] = v8;
  v80[0] = a2[2];
  *(_OWORD *)((char *)v80 + 12) = *(_OWORD *)((char *)a2 + 44);
  HIDWORD(v59) = sub_101384F24((uint64_t)v79);
  v54 = v5;
  v9 = a2[1];
  v77[0] = *a2;
  v77[1] = v9;
  v78[0] = a2[2];
  *(_OWORD *)((char *)v78 + 12) = *(_OWORD *)((char *)a2 + 44);
  LODWORD(v59) = sub_101384FE4((uint64_t)v77);
  v75 = 0u;
  v76 = 0u;
  v74 = 0u;
  v73 = 0u;
  obj = *(id *)(a1 + 8);
  v10 = COERCE_DOUBLE(objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v73, v126, 16));
  if (v10 != 0.0)
  {
    v12 = _NSConcreteStackBlock;
    v13 = sub_10040BFE8;
    v14 = *(_QWORD *)v74;
    v15 = &unk_1021381B8;
    v16 = CFSTR("com.apple.CoreMotion.GPSCalibration");
    v17 = DefaultObserver;
    *(_QWORD *)&v11 = 67111424;
    v55 = v11;
    do
    {
      v18 = 0;
      v57 = v10;
      do
      {
        if (*(_QWORD *)v74 != v14)
          objc_enumerationMutation(obj);
        v19 = *(void **)(*((_QWORD *)&v73 + 1) + 8 * (_QWORD)v18);
        if (v19)
        {
          if ((int)objc_msgSend(*(id *)(*((_QWORD *)&v73 + 1) + 8 * (_QWORD)v18), "updateCount") < 1)
          {
            v21 = 0.0;
          }
          else
          {
            objc_msgSend(v19, "variance");
            v21 = sqrt(v20 / (double)(int)objc_msgSend(v19, "updateCount")) * 1.98;
          }
          v68[0] = v12;
          if (v21 <= 0.0)
            v22 = 0.0;
          else
            v22 = 1.0 - v21;
          v68[1] = 3221225472;
          v68[2] = v13;
          v68[3] = v15;
          v69 = v61;
          v70 = v60;
          v68[4] = v19;
          v71 = HIDWORD(v59);
          v72 = LODWORD(v59);
          *(double *)&v68[5] = v22;
          *(double *)&v68[6] = v21;
          AnalyticsSendEventLazy(v16, v68);
          if (v17[82].isa != (__objc2_class *)-1)
            dispatch_once(&qword_10229FCD0, &stru_102138200);
          v23 = qword_10229FCD8;
          if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(v19, "speedLB");
            v25 = v24;
            __p = 0;
            v66 = 0;
            v67 = 0;
            sub_10025EA00(&__p, (const void *)qword_102301248, qword_102301250, (qword_102301250 - qword_102301248) >> 3);
            v26 = v14;
            v27 = v17;
            v28 = v16;
            v29 = v15;
            v30 = v13;
            v31 = v12;
            if (v66 == __p)
            {
              LODWORD(v32) = 0;
            }
            else
            {
              v32 = 0;
              v33 = (v66 - (_BYTE *)__p) >> 3;
              if (v33 <= 1)
                v33 = 1;
              while (*((double *)__p + v32) < v25)
              {
                if (v33 == ++v32)
                {
                  LODWORD(v32) = v33;
                  break;
                }
              }
            }
            objc_msgSend(v19, "mean");
            v35 = v34;
            objc_msgSend(v19, "variance");
            v37 = v36;
            objc_msgSend(v19, "lastUpdateTime");
            *(_DWORD *)buf = v55;
            v107 = v61;
            v108 = 1024;
            v109 = v60;
            v110 = 1024;
            v111 = v32;
            v112 = 1024;
            v113 = HIDWORD(v59);
            v114 = 1024;
            v115 = LODWORD(v59);
            v116 = 2048;
            v117 = v35;
            v118 = 2048;
            v119 = v37;
            v120 = 2048;
            v121 = v22;
            v122 = 2048;
            v123 = v21;
            v124 = 2048;
            v125 = v38;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "GPS Calibration, sent Core Analytics event. ageGroup %d | gender: %d | speedBin: %d | userBmiBin: %d | userHeightBin: %d | kvalueMovingMean: %f | kvalueMovingVar: %f | kvalueConfidenceMetric: %f | kvalueStandardError: %f | timeFromLastUpdate: %f", buf, 0x52u);
            if (__p)
            {
              v66 = __p;
              operator delete(__p);
            }
            v12 = v31;
            v13 = v30;
            v15 = v29;
            v16 = v28;
            v17 = v27;
            v14 = v26;
            v10 = v57;
          }
          if (sub_1001BFF7C(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (v17[82].isa != (__objc2_class *)-1)
              dispatch_once(&qword_10229FCD0, &stru_102138200);
            v39 = qword_10229FCD8;
            objc_msgSend(v19, "speedLB");
            v41 = v40;
            v62 = 0;
            v63 = 0;
            v64 = 0;
            sub_10025EA00(&v62, (const void *)qword_102301248, qword_102301250, (qword_102301250 - qword_102301248) >> 3);
            if (v63 == v62)
            {
              LODWORD(v42) = 0;
            }
            else
            {
              v42 = 0;
              v43 = (v63 - (_BYTE *)v62) >> 3;
              if (v43 <= 1)
                v43 = 1;
              while (*((double *)v62 + v42) < v41)
              {
                if (v43 == ++v42)
                {
                  LODWORD(v42) = v43;
                  break;
                }
              }
            }
            objc_msgSend(v19, "mean");
            v45 = v44;
            objc_msgSend(v19, "variance");
            v47 = v46;
            objc_msgSend(v19, "lastUpdateTime");
            v87[0] = v55;
            v87[1] = v61;
            v88 = 1024;
            v89 = v60;
            v90 = 1024;
            v91 = v42;
            v92 = 1024;
            v93 = HIDWORD(v59);
            v94 = 1024;
            v95 = LODWORD(v59);
            v96 = 2048;
            v97 = v45;
            v98 = 2048;
            v99 = v47;
            v100 = 2048;
            v101 = v22;
            v102 = 2048;
            v103 = v21;
            v104 = 2048;
            v105 = v48;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v39, 1, "GPS Calibration, sent Core Analytics event. ageGroup %d | gender: %d | speedBin: %d | userBmiBin: %d | userHeightBin: %d | kvalueMovingMean: %f | kvalueMovingVar: %f | kvalueConfidenceMetric: %f | kvalueStandardError: %f | timeFromLastUpdate: %f", v87, 82, v53, v54, (_DWORD)v55, *((double *)&v55 + 1), v56, v57, *(double *)&obj,
              v59);
            v50 = v49;
            if (v62)
            {
              v63 = v62;
              operator delete(v62);
            }
            sub_100512490("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::sendCoreAnalytics(const CLBodyMetrics &)", "%s\n", v50);
            v12 = _NSConcreteStackBlock;
            if (v50 != (char *)buf)
              free(v50);
          }
        }
        v18 = (char *)v18 + 1;
      }
      while (v18 != *(void **)&v10);
      v51 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v73, v126, 16);
      v10 = *(double *)&v51;
    }
    while (v51);
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v54 + 24))(v54);
  return 100;
}

void sub_10040BF6C(_Unwind_Exception *a1)
{
  sub_10187E514((uint64_t)&STACK[0x218]);
  _Unwind_Resume(a1);
}

NSDictionary *sub_10040BFE8(uint64_t a1)
{
  double v2;
  double v3;
  unint64_t v4;
  unint64_t v5;
  NSDictionary *v6;
  void *__p;
  _BYTE *v9;
  uint64_t v10;
  _QWORD v11[10];
  _QWORD v12[10];

  v11[0] = CFSTR("ageGroup");
  v12[0] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56));
  v11[1] = CFSTR("gender");
  v12[1] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 60));
  v11[2] = CFSTR("speedBin");
  objc_msgSend(*(id *)(a1 + 32), "speedLB");
  v3 = v2;
  v9 = 0;
  v10 = 0;
  __p = 0;
  sub_10025EA00(&__p, (const void *)qword_102301248, qword_102301250, (qword_102301250 - qword_102301248) >> 3);
  if (v9 == __p)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = (v9 - (_BYTE *)__p) >> 3;
    if (v5 <= 1)
      v5 = 1;
    while (*((double *)__p + v4) < v3)
    {
      if (v5 == ++v4)
      {
        v4 = v5;
        break;
      }
    }
  }
  v12[2] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v4);
  v11[3] = CFSTR("userBmiBin");
  v12[3] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 64));
  v11[4] = CFSTR("userHeightBin");
  v12[4] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 68));
  v11[5] = CFSTR("kvalueMovingMean");
  objc_msgSend(*(id *)(a1 + 32), "mean");
  v12[5] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  v11[6] = CFSTR("kvalueMovingVar");
  objc_msgSend(*(id *)(a1 + 32), "variance");
  v12[6] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  v11[7] = CFSTR("kvalueConfidenceMetric");
  v12[7] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 40));
  v11[8] = CFSTR("kvalueStandardError");
  v12[8] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 48));
  v11[9] = CFSTR("timeFromLastUpdate");
  objc_msgSend(*(id *)(a1 + 32), "lastUpdateTime");
  v12[9] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  v6 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v12, v11, 10);
  if (__p)
  {
    v9 = __p;
    operator delete(__p);
  }
  return v6;
}

void sub_10040C21C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(exception_object);
}

void sub_10040C240(id a1)
{
  qword_10229FCD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

uint64_t sub_10040C26C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  CFTypeRef v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  unsigned int v24;
  int v25;
  uint64_t result;
  NSObject *v27;
  uint64_t v28;
  const char *v29;
  uint8_t *v30;
  uint8_t *v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  const char *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  CFTypeRef v39;
  int v40;
  _BYTE v41[10];
  uint64_t v42;
  uint8_t buf[4];
  _BYTE v44[10];
  uint64_t v45;

  if (!*(_BYTE *)(a1 + 40))
    return 0xFFFFFFFFLL;
  if (qword_10229FCD0 != -1)
    dispatch_once(&qword_10229FCD0, &stru_102138200);
  v2 = qword_10229FCD8;
  if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    *(_QWORD *)v44 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Attempt to restore %@ from cache.", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v28 = *(_QWORD *)(a1 + 32);
    v40 = 138412290;
    *(_QWORD *)v41 = v28;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 0, "Attempt to restore %@ from cache.", &v40, 12);
    v30 = (uint8_t *)v29;
    sub_100512490("Generic", 1, 0, 2, "TableVersion CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::restore() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v29);
    if (v30 != buf)
      free(v30);
  }
  v39 = 0;
  if (!sub_100219F40(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), &v39))
    goto LABEL_28;
  v5 = v39;
  v6 = objc_opt_class(GPSCalCoreAnalyticsBin, v4);
  v8 = objc_opt_class(NSDictionary, v7);
  v10 = objc_opt_class(NSString, v9);
  v12 = objc_opt_class(NSArray, v11);
  v38 = 0;
  v14 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClasses:fromData:error:", +[NSSet setWithObjects:](NSSet, "setWithObjects:", v6, v8, v10, v12, objc_opt_class(NSNumber, v13), 0), v5, &v38);
  if (v38)
  {
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v16 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_ERROR))
    {
      v17 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)v44 = v17;
      *(_WORD *)&v44[8] = 2112;
      v45 = v38;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Failed to decode %@, %@", buf, 0x16u);
    }
    if (!sub_1001BFF7C(115, 0))
      return 0xFFFFFFFFLL;
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v18 = *(_QWORD *)(a1 + 32);
    v40 = 138412546;
    *(_QWORD *)v41 = v18;
    *(_WORD *)&v41[8] = 2112;
    v42 = v38;
    LODWORD(v37) = 22;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 16, "Failed to decode %@, %@", &v40, v37);
    goto LABEL_42;
  }
  v20 = v14;
  if (!v14)
    goto LABEL_28;
  v21 = objc_opt_class(NSDictionary, v15);
  if ((objc_opt_isKindOfClass(v20, v21) & 1) == 0)
    goto LABEL_28;
  v22 = *(void **)(a1 + 8);
  if (v22)
  {

    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_DWORD *)(a1 + 20) = objc_msgSend(objc_msgSend(v20, "objectForKeyedSubscript:", CFSTR("version")), "shortValue");
  *(_QWORD *)(a1 + 8) = objc_msgSend(objc_msgSend(v20, "objectForKeyedSubscript:", CFSTR("bins")), "mutableCopy");
  if (qword_10229FCD0 != -1)
    dispatch_once(&qword_10229FCD0, &stru_102138200);
  v23 = qword_10229FCD8;
  if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_DEFAULT))
  {
    v24 = objc_msgSend(*(id *)(a1 + 8), "count");
    v25 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)v44 = v24;
    *(_WORD *)&v44[4] = 1024;
    *(_DWORD *)&v44[6] = v25;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Restored %d bins of version %d.", buf, 0xEu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v32 = qword_10229FCD8;
    v33 = objc_msgSend(*(id *)(a1 + 8), "count");
    v34 = *(_DWORD *)(a1 + 20);
    v40 = 67109376;
    *(_DWORD *)v41 = v33;
    *(_WORD *)&v41[4] = 1024;
    *(_DWORD *)&v41[6] = v34;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v32, 0, "Restored %d bins of version %d.", &v40, 14);
    v36 = (uint8_t *)v35;
    sub_100512490("Generic", 1, 0, 2, "TableVersion CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::restore() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v35);
    if (v36 != buf)
      free(v36);
  }
  if (!objc_msgSend(*(id *)(a1 + 8), "count") || (result = *(unsigned int *)(a1 + 20), (int)result <= 0))
  {
LABEL_28:
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    v27 = qword_10229FCD8;
    if (os_log_type_enabled((os_log_t)qword_10229FCD8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "Failed to restore bins.", buf, 2u);
    }
    if (!sub_1001BFF7C(115, 0))
      return 0xFFFFFFFFLL;
    bzero(buf, 0x65CuLL);
    if (qword_10229FCD0 != -1)
      dispatch_once(&qword_10229FCD0, &stru_102138200);
    LOWORD(v40) = 0;
    LODWORD(v37) = 2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCD8, 16, "Failed to restore bins.", &v40, v37);
LABEL_42:
    v31 = (uint8_t *)v19;
    sub_100512490("Generic", 1, 0, 0, "TableVersion CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::restore() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v19);
    if (v31 != buf)
      free(v31);
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_10040C904()
{
  _OWORD *v0;

  qword_102301248 = 0;
  qword_102301250 = 0;
  qword_102301258 = 0;
  v0 = operator new(0x38uLL);
  qword_102301250 = (uint64_t)v0 + 56;
  qword_102301258 = (uint64_t)v0 + 56;
  *v0 = xmmword_101BAFE00;
  v0[1] = unk_101BAFE10;
  v0[2] = xmmword_101BAFE20;
  *((_QWORD *)v0 + 6) = 0x4003333333333333;
  qword_102301248 = (uint64_t)v0;
  return __cxa_atexit((void (*)(void *))sub_1004093B0, &qword_102301248, (void *)&_mh_execute_header);
}

void sub_10040C978()
{
  operator new();
}

void sub_10040C9B8()
{
  operator delete();
}

uint64_t sub_10040C9DC()
{
  if (qword_102301260 != -1)
    dispatch_once(&qword_102301260, &stru_102138250);
  return qword_102310528;
}

void sub_10040CA20(uint64_t a1)
{
  sub_1009BAC4C(a1, (uint64_t)"CLOrientationNotifier", 2);
}

void sub_10040D070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  _QWORD *v5;
  _QWORD *v6;
  va_list va;

  va_start(va, a5);
  sub_100569628(va);
  sub_100261F44((uint64_t)(v5 + 44));
  sub_100412424(v6);
  sub_1009BAD18(v5);
  _Unwind_Resume(a1);
}

void sub_10040D460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD v11[9];

  v10 = sub_100127B9C();
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1004111D0;
  v11[3] = &unk_1021382B0;
  v11[4] = a2;
  v11[5] = a1;
  v11[6] = a3;
  v11[7] = a4;
  v11[8] = a5;
  sub_1000A50A8(v10, (uint64_t)v11);
}

_QWORD *sub_10040D4EC(_QWORD *a1)
{
  *a1 = off_102138280;
  sub_10040D530(a1);
  sub_100261F44((uint64_t)(a1 + 44));
  sub_100412424(a1 + 13);
  return sub_1009BAD18(a1);
}

void sub_10040D530(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  const char *v8;
  uint8_t *v9;
  _WORD v10[8];
  uint8_t buf[1640];

  v2 = (_QWORD *)a1[5];
  if (v2)
  {
    sub_100412424(v2 + 90);
    sub_100412424(v2 + 61);
    sub_100412424(v2 + 32);
    sub_100412424(v2 + 3);
    operator delete();
  }
  if (a1[6])
  {
    v3 = sub_10024095C();
    sub_1000A4A6C(v3, 0, a1[6]);
    v4 = a1[6];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    a1[6] = 0;
  }
  if (a1[8])
  {
    v5 = sub_10021C350();
    sub_1000A4A6C(v5, 0, a1[8]);
    v6 = a1[8];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    a1[8] = 0;
  }
  if (qword_10229FCE0 != -1)
    dispatch_once(&qword_10229FCE0, &stru_102138310);
  v7 = qword_10229FCE8;
  if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Stopping orientation detection.", buf, 2u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v10[0] = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 0, "Stopping orientation detection.", v10, 2);
    v9 = (uint8_t *)v8;
    sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::stopDetection()", "%s\n", v8);
    if (v9 != buf)
      free(v9);
  }
}

void sub_10040D760(_QWORD *a1)
{
  sub_10040D4EC(a1);
  operator delete();
}

void sub_10040D784(uint64_t a1, unsigned int a2, uint64_t a3)
{
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  uint64_t *v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  const char *v17;
  uint8_t *v18;
  NSObject *v19;
  const char *v20;
  uint64_t v21;
  char v22;
  _DWORD v23[4];
  uint8_t buf[1640];

  if (a2 >= 3)
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v3 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Unrecognized notification", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      LOWORD(v23[0]) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "Unrecognized notification", v23, 2);
      v5 = (uint8_t *)v4;
      sub_100512490("Generic", 1, 0, 0, "virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)", "%s\n", v4);
      if (v5 != buf)
        free(v5);
    }
    return;
  }
  v9 = (uint64_t *)(a1 + 352);
  if (!*(_QWORD *)(a1 + 352))
  {
    v10 = (uint64_t *)sub_1013DEA44();
    v21 = 0x8A00000020;
    v22 = 0;
    sub_1018E4078(v10, (uint64_t)&v21, (uint64_t *)buf);
    sub_1002B7674((uint64_t)v9, (__int128 *)buf);
    v11 = *(std::__shared_weak_count **)&buf[8];
    if (*(_QWORD *)&buf[8])
    {
      v12 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    sub_100A0A9EC(*v9, &off_10221FA48);
  }
  if (a3 != 1)
  {
    if (!a3)
    {
      *(_BYTE *)(a1 + 33) = 0;
      if (*(_QWORD *)(a1 + 392))
      {
        v14 = sub_1000A6998();
        sub_1000A4A6C(v14, 0, *(_QWORD *)(a1 + 392));
        v15 = *(_QWORD *)(a1 + 392);
        if (v15)
          (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
        *(_QWORD *)(a1 + 392) = 0;
      }
      if ((sub_1001B7910() & 0x40) != 0)
      {
        sub_10006BD2C(*(_QWORD *)(a1 + 352), 0);
        sub_10040DDF4(a1);
        sub_100A0A594(*(_QWORD **)(a1 + 352), 0, 0);
        sub_100A0A544(*(_QWORD *)(a1 + 352), 0, 0);
        sub_100A0A4BC(*(uint64_t **)(a1 + 352), 0, 0);
      }
      if (*(_QWORD *)(a1 + 48))
        sub_10040D530((_QWORD *)a1);
    }
    return;
  }
  if ((sub_1001B7910() & 0x40) != 0)
  {
    sub_100A0A4BC(*(uint64_t **)(a1 + 352), (uint64_t)sub_10040DE4C, a1);
    sub_100A0A544(*(_QWORD *)(a1 + 352), (uint64_t)sub_10040DE54, a1);
    sub_100A0A594(*(_QWORD **)(a1 + 352), (uint64_t)nullsub_174, a1);
    sub_10040DE80(a1);
    if (a2 <= 1)
    {
      sub_10006BD2C(*v9, 1);
      goto LABEL_48;
    }
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v16 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&buf[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_FAULT, "Unrecognized notification request %{public}u", buf, 8u);
    }
    if (!sub_1001BFF7C(115, 0))
      goto LABEL_48;
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v23[0] = 67240192;
    v23[1] = a2;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "Unrecognized notification request %{public}u", v23, 8);
    v18 = (uint8_t *)v17;
    sub_100512490("Generic", 1, 0, 0, "virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)", "%s\n", v17);
LABEL_55:
    if (v18 != buf)
      free(v18);
    goto LABEL_48;
  }
  if (a2 == 1)
  {
    sub_10040DEE4(a1, 1);
    goto LABEL_48;
  }
  if (a2)
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v19 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "Unrecognized notification", buf, 2u);
    }
    if (!sub_1001BFF7C(115, 0))
      goto LABEL_48;
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    LOWORD(v23[0]) = 0;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "Unrecognized notification", v23, 2);
    v18 = (uint8_t *)v20;
    sub_100512490("Generic", 1, 0, 0, "virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)", "%s\n", v20);
    goto LABEL_55;
  }
  sub_10040DEE4(a1, 0);
LABEL_48:
  if (!*(_QWORD *)(a1 + 392))
    operator new();
  *(_BYTE *)(a1 + 33) = 1;
}

void sub_10040DDC0()
{
  operator delete();
}

void sub_10040DDF4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 368) - 1;
  *(_DWORD *)(a1 + 368) = v1;
  if (!v1)
  {
    sub_100A0A6B8(*(_QWORD *)(a1 + 352), 0, 0);
    if (sub_100A0A3A0(*(_QWORD *)(a1 + 352)))
      sub_10040F178((_QWORD *)a1);
  }
}

void sub_10040DE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1004119FC(a1, a2, a3, a4, a4);
}

uint64_t sub_10040DE54(uint64_t a1)
{
  sub_100410328(a1);
  return sub_1004111E0(a1, 1);
}

void sub_10040DE80(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 368);
  *(_DWORD *)(a1 + 368) = v1 + 1;
  if (!v1)
  {
    sub_100A0A6B8(*(_QWORD *)(a1 + 352), (uint64_t)sub_10040F154, a1);
    if (sub_100A0A3A0(*(_QWORD *)(a1 + 352)))
      sub_10040F178((_QWORD *)a1);
    sub_10040F3AC((_QWORD *)a1);
  }
}

void sub_10040DEE4(uint64_t a1, int a2)
{
  _QWORD *v3;
  unsigned int v4;
  int v5;
  NSObject *v7;
  int v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  double v13;
  uint64_t v14;
  char v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  NSObject *v19;
  uint64_t v20;
  int v21;
  double v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  NSObject *v27;
  int v28;
  NSObject *v29;
  const char *v30;
  char *v31;
  NSObject *v32;
  const char *v33;
  NSObject *v34;
  uint64_t v35;
  int v36;
  double v37;
  const char *v38;
  char *v39;
  int v40;
  const char *v41;
  char *v42;
  int v43;
  const char *v44;
  char *v45;
  const char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  __int16 v50;
  int v51;
  __int16 v52;
  double v53;
  _BYTE buf[18];
  __int16 v55;
  double v56;

  v3 = *(_QWORD **)(a1 + 40);
  if (v3)
  {
    sub_100412424(v3 + 90);
    sub_100412424(v3 + 61);
    sub_100412424(v3 + 32);
    sub_100412424(v3 + 3);
    operator delete();
  }
  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 < 2)
    v5 = 1;
  else
    v5 = a2;
  if (v5 == 1)
  {
    if (v4 >= 2 && a2 != 0)
    {
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v7 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_DEFAULT))
      {
        v8 = *(unsigned __int8 *)(a1 + 32);
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&buf[4] = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "forceAccelOnly for device %{public}d", buf, 8u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v43 = *(unsigned __int8 *)(a1 + 32);
        v48 = 67240192;
        LODWORD(v49) = v43;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 0, "forceAccelOnly for device %{public}d", &v48, 8);
        v45 = (char *)v44;
        sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v44);
        if (v45 != buf)
          free(v45);
      }
      *(_BYTE *)(a1 + 32) = 0;
    }
    *(_DWORD *)(a1 + 56) = 1092616192;
    *(_DWORD *)(a1 + 76) = 1;
    *(_QWORD *)(a1 + 88) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = 0x41A0000041C80000;
    v9 = sub_100127B9C();
    sub_100081C10(v9, buf);
    sub_1001FD98C(*(uint64_t *)buf, "OrientationGyroTimeout", (void *)(a1 + 88));
    v10 = *(std::__shared_weak_count **)&buf[8];
    if (*(_QWORD *)&buf[8])
    {
      v11 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    v13 = *(double *)(a1 + 88);
    *(_BYTE *)(a1 + 80) = v13 > 0.0;
    if (v13 > 0.0)
    {
      *(_QWORD *)(a1 + 112) = 8;
      *(_QWORD *)(a1 + 128) = 8;
      sub_10041250C((_QWORD *)(a1 + 120));
      *(_QWORD *)(a1 + 200) = 8;
      sub_10041250C((_QWORD *)(a1 + 192));
      *(_QWORD *)(a1 + 272) = 8;
      sub_10041250C((_QWORD *)(a1 + 264));
      *(_DWORD *)(a1 + 76) = 2;
    }
    v14 = sub_100127B9C();
    sub_100081C10(v14, buf);
    v15 = sub_100526804(*(uint64_t *)buf, "OrientationStableVariance", (float *)(a1 + 84));
    v16 = *(std::__shared_weak_count **)&buf[8];
    if (*(_QWORD *)&buf[8])
    {
      v17 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    if ((v15 & 1) == 0)
      *(_DWORD *)(a1 + 84) = 961656599;
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v19 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
    {
      v20 = *(_QWORD *)(a1 + 88);
      v21 = *(unsigned __int8 *)(a1 + 80);
      v22 = *(float *)(a1 + 84);
      *(_DWORD *)buf = 134349568;
      *(_QWORD *)&buf[4] = v20;
      *(_WORD *)&buf[12] = 1026;
      *(_DWORD *)&buf[14] = v21;
      v55 = 2050;
      v56 = v22;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "fOrientationGyroTimeout,%{public}f,fEnableGyroTimeout,%{public}d,fMaxAccelerationVarianceForStability,%{public}f", buf, 0x1Cu);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v35 = *(_QWORD *)(a1 + 88);
      v36 = *(unsigned __int8 *)(a1 + 80);
      v37 = *(float *)(a1 + 84);
      v48 = 134349568;
      v49 = v35;
      v50 = 1026;
      v51 = v36;
      v52 = 2050;
      v53 = v37;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "fOrientationGyroTimeout,%{public}f,fEnableGyroTimeout,%{public}d,fMaxAccelerationVarianceForStability,%{public}f", &v48, 28);
      v39 = (char *)v38;
      sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v38);
      if (v39 != buf)
        free(v39);
    }
  }
  v23 = sub_100127B9C();
  sub_100081C10(v23, buf);
  sub_1001E4B84(*(uint64_t *)buf, "OrientationAccelDecimation", (_DWORD *)(a1 + 76));
  v24 = *(std::__shared_weak_count **)&buf[8];
  if (*(_QWORD *)&buf[8])
  {
    v25 = (unint64_t *)(*(_QWORD *)&buf[8] + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a1 + 76);
  if (*(float *)(a1 + 56) <= 0.0)
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v29 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_FAULT, "Not starting orientation detection since requested accelerometer frequency < 0", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      LOWORD(v48) = 0;
      LODWORD(v47) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "Not starting orientation detection since requested accelerometer frequency < 0", &v48, v47);
      v31 = (char *)v30;
      sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v30);
      goto LABEL_89;
    }
  }
  else
  {
    if (sub_10024095C())
    {
      if ((v5 & 1) != 0 || sub_10021C350())
      {
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v27 = qword_10229FCE8;
        if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_DEFAULT))
        {
          v28 = *(unsigned __int8 *)(a1 + 34);
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)&buf[4] = v28;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "fHasSeenACaseLatchCoverOnce, %{public}d", buf, 8u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FCE0 != -1)
            dispatch_once(&qword_10229FCE0, &stru_102138310);
          v40 = *(unsigned __int8 *)(a1 + 34);
          v48 = 67240192;
          LODWORD(v49) = v40;
          LODWORD(v47) = 8;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 0, "fHasSeenACaseLatchCoverOnce, %{public}d", &v48, v47);
          v42 = (char *)v41;
          sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v41);
          if (v42 != buf)
            free(v42);
        }
        operator new();
      }
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v34 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_FAULT, "No gyro; not detecting orientation!",
          buf,
          2u);
      }
      if (!sub_1001BFF7C(115, 0))
        return;
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      LOWORD(v48) = 0;
      LODWORD(v47) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "No gyro; not detecting orientation!",
        &v48,
        v47);
      v31 = (char *)v46;
      sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v46);
LABEL_89:
      if (v31 != buf)
        free(v31);
      return;
    }
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v32 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_FAULT, "No accelerometer; not detecting orientation!",
        buf,
        2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      LOWORD(v48) = 0;
      LODWORD(v47) = 2;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "No accelerometer; not detecting orientation!",
        &v48,
        v47);
      v31 = (char *)v33;
      sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v33);
      goto LABEL_89;
    }
  }
}

void sub_10040EC20()
{
  operator delete();
}

void sub_10040EC84(char *a1, uint64_t a2)
{
  NSObject *v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  int v8;
  mach_error_t v9;
  mach_error_t v10;
  NSObject *v11;
  char *v12;
  int v13;
  const char *v14;
  uint8_t *v15;
  int v16;
  const char *v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  const char *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int16 v26;
  int v27;
  char *v28;
  __int16 v29;
  mach_error_t v30;
  uint8_t buf[4];
  char *v32;
  __int16 v33;
  mach_error_t v34;

  if (qword_10229FCE0 != -1)
    dispatch_once(&qword_10229FCE0, &stru_102138310);
  v4 = qword_10229FCE8;
  if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
  {
    v5 = *a1;
    *(_DWORD *)buf = 67240192;
    LODWORD(v32) = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Received keyboard state %{public}u", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v13 = *a1;
    v27 = 67240192;
    LODWORD(v28) = v13;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "Received keyboard state %{public}u", &v27, 8);
    v15 = (uint8_t *)v14;
    sub_100512490("Generic", 1, 0, 2, "static void CLOrientationNotifier::onKeyboardState(const BOOL *, void *)", "%s\n", v14);
    if (v15 != buf)
      free(v15);
  }
  v6 = *(_QWORD *)(a2 + 40);
  if (v6)
    sub_10041F5C8(v6, *a1);
  if (*(_QWORD *)(a2 + 384))
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v7 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
    {
      v8 = *a1;
      *(_DWORD *)buf = 67109120;
      LODWORD(v32) = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Sending keyboard state %u to AOP", buf, 8u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v16 = *a1;
      v27 = 67109120;
      LODWORD(v28) = v16;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "Sending keyboard state %u to AOP", &v27);
      v18 = (uint8_t *)v17;
      sub_100512490("Generic", 1, 0, 2, "static void CLOrientationNotifier::onKeyboardState(const BOOL *, void *)", "%s\n", v17);
      if (v18 != buf)
        free(v18);
    }
    v26 = 5;
    HIBYTE(v26) = *a1;
    v25 = 0;
    v24 = 1;
    v9 = (*(uint64_t (**)(_QWORD, uint64_t, __int16 *, uint64_t, char *, uint64_t *))(**(_QWORD **)(a2 + 384)
                                                                                           + 160))(*(_QWORD *)(a2 + 384), 32, &v26, 2, &v25, &v24);
    if (v9)
    {
      v10 = v9;
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v11 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
      {
        v12 = mach_error_string(v10);
        *(_DWORD *)buf = 136315394;
        v32 = v12;
        v33 = 1026;
        v34 = v10;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "SendCommand() = %s (0x%{public}x)", buf, 0x12u);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v19 = qword_10229FCE8;
        v20 = mach_error_string(v10);
        v27 = 136315394;
        v28 = v20;
        v29 = 1026;
        v30 = v10;
        LODWORD(v23) = 18;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v19, 17, "SendCommand() = %s (0x%{public}x)", &v27, v23);
        v22 = (uint8_t *)v21;
        sub_100512490("Generic", 1, 0, 0, "static void CLOrientationNotifier::onKeyboardState(const BOOL *, void *)", "%s\n", v21);
        if (v22 != buf)
          free(v22);
      }
    }
  }
}

void sub_10040F154(_QWORD *a1)
{
  sub_10040F178(a1);
  sub_10040F3AC(a1);
}

void sub_10040F178(_QWORD *a1)
{
  CFRunLoopRef Current;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  IOCFPlugInInterface ***v6;
  uint64_t v7;
  const char *v8;
  uint8_t *v9;
  _QWORD v10[5];
  _WORD v11[8];
  uint8_t buf[1640];

  Current = CFRunLoopGetCurrent();
  sub_100127B9C();
  if (Current == (CFRunLoopRef)sub_1001AD8D0())
  {
    if (a1[44])
    {
      v5 = a1[48];
      if (v5)
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 72))(v5, 0);
      v6 = (IOCFPlugInInterface ***)(a1 + 47);
      v7 = a1[47];
      if (v7)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
        IODestroyPlugInInterface(*v6);
      }
      *(_QWORD *)(a1[44] + 8) = 0;
      *v6 = 0;
      a1[48] = 0;
    }
  }
  else
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v3 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "closeHidDriverInterface should be called from motion thread", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v11[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "closeHidDriverInterface should be called from motion thread", v11, 2);
      v9 = (uint8_t *)v8;
      sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::closeHidDriverInterface()", "%s\n", v8);
      if (v9 != buf)
        free(v9);
    }
    v4 = sub_100127B9C();
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1004106C4;
    v10[3] = &unk_10212ECA0;
    v10[4] = a1;
    sub_1000A50A8(v4, (uint64_t)v10);
  }
}

void sub_10040F3AC(_QWORD *a1)
{
  CFRunLoopRef Current;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  __IOHIDServiceClient *v6;
  __IOHIDServiceClient *v7;
  const __CFNumber *RegistryID;
  const __CFDictionary *v9;
  io_service_t MatchingService;
  io_object_t v11;
  kern_return_t ParentEntry;
  mach_error_t v13;
  NSObject *v14;
  char *v15;
  io_object_t v16;
  NSObject *v17;
  double v18;
  uint8_t *v19;
  uint8_t *v20;
  NSObject *v21;
  uint8_t *v22;
  double v23;
  kern_return_t v24;
  mach_error_t v25;
  NSObject *v26;
  char *v27;
  io_service_t v28;
  const __CFUUID *v29;
  const __CFUUID *v30;
  kern_return_t v31;
  mach_error_t v32;
  NSObject *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  IOCFPlugInInterface **v37;
  HRESULT (__cdecl *QueryInterface)(void *, REFIID, LPVOID *);
  const __CFUUID *v39;
  CFUUIDBytes v40;
  mach_error_t v41;
  mach_error_t v42;
  NSObject *v43;
  char *v44;
  mach_error_t v45;
  mach_error_t v46;
  NSObject *v47;
  char *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  const void *v52;
  const char *v53;
  uint8_t *v54;
  uint64_t v55;
  char *v56;
  const char *v57;
  uint8_t *v58;
  uint64_t v59;
  char *v60;
  const char *v61;
  uint8_t *v62;
  uint64_t v63;
  char *v64;
  const char *v65;
  uint8_t *v66;
  uint64_t v67;
  char *v68;
  const char *v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  uint8_t *v74;
  uint64_t byte15;
  const void *byte15a;
  const void *v77;
  const void *parent;
  const void *v79;
  IOCFPlugInInterface **theInterface;
  uint64_t valuePtr;
  _QWORD v82[5];
  int v83;
  _BYTE v84[28];
  __int16 v85;
  IOCFPlugInInterface **v86;
  __int16 v87;
  const void *v88;
  uint8_t buf[4];
  _BYTE v90[28];
  __int16 v91;
  IOCFPlugInInterface **v92;
  __int16 v93;
  const void *v94;

  Current = CFRunLoopGetCurrent();
  sub_100127B9C();
  if (Current != (CFRunLoopRef)sub_1001AD8D0())
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v3 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "openHidDriverInterface should be called from motion thread", buf, 2u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      LOWORD(v83) = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "openHidDriverInterface should be called from motion thread", &v83, 2);
      v54 = (uint8_t *)v53;
      sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v53);
      if (v54 != buf)
        free(v54);
    }
    v4 = sub_100127B9C();
    v82[0] = _NSConcreteStackBlock;
    v82[1] = 3221225472;
    v82[2] = sub_100410320;
    v82[3] = &unk_10212ECA0;
    v82[4] = a1;
    sub_1000A50A8(v4, (uint64_t)v82);
    return;
  }
  v5 = a1[44];
  if (!v5)
    return;
  theInterface = 0;
  valuePtr = 0;
  v79 = 0;
  v6 = (__IOHIDServiceClient *)sub_100A0A3A0(v5);
  if (v6)
  {
    v7 = v6;
    RegistryID = (const __CFNumber *)IOHIDServiceClientGetRegistryID(v6);
    CFNumberGetValue(RegistryID, kCFNumberSInt64Type, &valuePtr);
    HIDWORD(parent) = 0;
    v9 = IORegistryEntryIDMatching(valuePtr);
    MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v9);
    if (MatchingService)
    {
      v11 = MatchingService;
      HIDWORD(v77) = 0;
      LODWORD(parent) = 0;
      ParentEntry = IORegistryEntryGetParentEntry(MatchingService, "IOService", (io_registry_entry_t *)&parent);
      if (ParentEntry)
      {
        v13 = ParentEntry;
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v14 = qword_10229FCE8;
        if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
        {
          v15 = mach_error_string(v13);
          *(_DWORD *)buf = 67240450;
          *(_DWORD *)v90 = v13;
          *(_WORD *)&v90[4] = 2082;
          *(_QWORD *)&v90[6] = v15;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "Unable to get parent of orientation service,retCode,0x%{public}x,retStr,%{public}s", buf, 0x12u);
        }
        if (sub_1001BFF7C(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FCE0 != -1)
            dispatch_once(&qword_10229FCE0, &stru_102138310);
          v55 = qword_10229FCE8;
          v56 = mach_error_string(v13);
          v83 = 67240450;
          *(_DWORD *)v84 = v13;
          *(_WORD *)&v84[4] = 2082;
          *(_QWORD *)&v84[6] = v56;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v55, 17, "Unable to get parent of orientation service,retCode,0x%{public}x,retStr,%{public}s", &v83, 18);
          v58 = (uint8_t *)v57;
          sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v57);
          if (v58 != buf)
            free(v58);
        }
        v16 = v11;
LABEL_45:
        IOObjectRelease(v16);
        return;
      }
      IOObjectRelease(v11);
      v24 = IORegistryEntryGetParentEntry((io_registry_entry_t)parent, "IOService", (io_registry_entry_t *)&v77 + 1);
      if (v24)
      {
        v25 = v24;
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v26 = qword_10229FCE8;
        if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
        {
          v27 = mach_error_string(v25);
          *(_DWORD *)buf = 67240450;
          *(_DWORD *)v90 = v25;
          *(_WORD *)&v90[4] = 2082;
          *(_QWORD *)&v90[6] = v27;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "Unable to get grand parent of orientation service,retCode,0x%{public}x,retStr,%{public}s", buf, 0x12u);
        }
        if (sub_1001BFF7C(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FCE0 != -1)
            dispatch_once(&qword_10229FCE0, &stru_102138310);
          v59 = qword_10229FCE8;
          v60 = mach_error_string(v25);
          v83 = 67240450;
          *(_DWORD *)v84 = v25;
          *(_WORD *)&v84[4] = 2082;
          *(_QWORD *)&v84[6] = v60;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v59, 17, "Unable to get grand parent of orientation service,retCode,0x%{public}x,retStr,%{public}s", &v83, 18);
          v62 = (uint8_t *)v61;
          sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v61);
          if (v62 != buf)
            free(v62);
        }
        v16 = parent;
        goto LABEL_45;
      }
      IOObjectRelease((io_object_t)parent);
      v28 = HIDWORD(v77);
      v29 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0x7Au, 0xCFu, 0x53u, 0x32u, 0x1Au, 0x35u, 0x48u, 0x93u, 0x87u, 0xCBu, 0xBAu, 0x64u, 0xE1u, 0x88u, 0x7Fu, 0xAEu);
      v30 = CFUUIDGetConstantUUIDWithBytes(0, 0xC2u, 0x44u, 0xE8u, 0x58u, 0x10u, 0x9Cu, 0x11u, 0xD4u, 0x91u, 0xD4u, 0, 0x50u, 0xE4u, 0xC6u, 0x42u, 0x6Fu);
      v31 = IOCreatePlugInInterfaceForService(v28, v29, v30, &theInterface, (SInt32 *)&parent + 1);
      if (!v31)
      {
        v37 = theInterface;
        QueryInterface = (*theInterface)->QueryInterface;
        v39 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 1u, 0x64u, 0x69u, 0xD8u, 0x77u, 0x3Bu, 0x46u, 0xACu, 0x90u, 0x9Eu, 0xF9u, 0xCu, 0x4Au, 0x6Eu, 0x75u, 0x77u);
        v40 = CFUUIDGetUUIDBytes(v39);
        v41 = ((uint64_t (*)(IOCFPlugInInterface **, _QWORD, _QWORD, const void **))QueryInterface)(v37, *(_QWORD *)&v40.byte0, *(_QWORD *)&v40.byte8, &v79);
        if (v41)
        {
          v42 = v41;
          if (qword_10229FCE0 != -1)
            dispatch_once(&qword_10229FCE0, &stru_102138310);
          v43 = qword_10229FCE8;
          if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
          {
            v44 = mach_error_string(v42);
            *(_DWORD *)buf = 67240706;
            *(_DWORD *)v90 = v42;
            *(_WORD *)&v90[4] = 2082;
            *(_QWORD *)&v90[6] = v44;
            *(_WORD *)&v90[14] = 2114;
            *(_QWORD *)&v90[16] = v7;
            _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_FAULT, "Unable to set up query interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", buf, 0x1Cu);
          }
          if (sub_1001BFF7C(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_10229FCE0 != -1)
              dispatch_once(&qword_10229FCE0, &stru_102138310);
            v63 = qword_10229FCE8;
            v64 = mach_error_string(v42);
            v83 = 67240706;
            *(_DWORD *)v84 = v42;
            *(_WORD *)&v84[4] = 2082;
            *(_QWORD *)&v84[6] = v64;
            *(_WORD *)&v84[14] = 2114;
            *(_QWORD *)&v84[16] = v7;
            LODWORD(byte15a) = 28;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v63, 17, "Unable to set up query interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", &v83, byte15a);
            v66 = (uint8_t *)v65;
            sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v65);
            if (v66 != buf)
              free(v66);
          }
        }
        else
        {
          v45 = (*(uint64_t (**)(const void *, _QWORD))(*(_QWORD *)v79 + 64))(v79, 0);
          if (!v45)
          {
            if (qword_10229FCE0 != -1)
              dispatch_once(&qword_10229FCE0, &stru_102138310);
            v49 = qword_10229FCE8;
            if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_DEFAULT))
            {
              v50 = a1[47];
              v51 = a1[48];
              *(_DWORD *)buf = 134219008;
              *(_QWORD *)v90 = valuePtr;
              *(_WORD *)&v90[8] = 2048;
              *(_QWORD *)&v90[10] = v50;
              *(_WORD *)&v90[18] = 2048;
              *(_QWORD *)&v90[20] = v51;
              v91 = 2048;
              v92 = theInterface;
              v93 = 2048;
              v94 = v79;
              _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "Opened hid driver interface, registryID %llx, {cfPlugInInterface, hidDriverInterface} was then {%p,%p}, is now {%p,%p}", buf, 0x34u);
            }
            if (sub_1001BFF7C(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_10229FCE0 != -1)
                dispatch_once(&qword_10229FCE0, &stru_102138310);
              v71 = a1[47];
              v72 = a1[48];
              v83 = 134219008;
              *(_QWORD *)v84 = valuePtr;
              *(_WORD *)&v84[8] = 2048;
              *(_QWORD *)&v84[10] = v71;
              *(_WORD *)&v84[18] = 2048;
              *(_QWORD *)&v84[20] = v72;
              v85 = 2048;
              v86 = theInterface;
              v87 = 2048;
              v88 = v79;
              LODWORD(byte15a) = 52;
              _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 0, "Opened hid driver interface, registryID %llx, {cfPlugInInterface, hidDriverInterface} was then {%p,%p}, is now {%p,%p}", &v83, byte15a, v77, parent, v79);
              v74 = (uint8_t *)v73;
              sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v73);
              if (v74 != buf)
                free(v74);
            }
            *(_QWORD *)(a1[44] + 8) = valuePtr;
            v52 = v79;
            a1[47] = theInterface;
            a1[48] = v52;
            sub_100410328((uint64_t)a1);
            return;
          }
          v46 = v45;
          if (qword_10229FCE0 != -1)
            dispatch_once(&qword_10229FCE0, &stru_102138310);
          v47 = qword_10229FCE8;
          if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
          {
            v48 = mach_error_string(v46);
            *(_DWORD *)buf = 67240706;
            *(_DWORD *)v90 = v46;
            *(_WORD *)&v90[4] = 2082;
            *(_QWORD *)&v90[6] = v48;
            *(_WORD *)&v90[14] = 2114;
            *(_QWORD *)&v90[16] = v7;
            _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_FAULT, "Unable to open hid device interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", buf, 0x1Cu);
          }
          if (sub_1001BFF7C(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_10229FCE0 != -1)
              dispatch_once(&qword_10229FCE0, &stru_102138310);
            v67 = qword_10229FCE8;
            v68 = mach_error_string(v46);
            v83 = 67240706;
            *(_DWORD *)v84 = v46;
            *(_WORD *)&v84[4] = 2082;
            *(_QWORD *)&v84[6] = v68;
            *(_WORD *)&v84[14] = 2114;
            *(_QWORD *)&v84[16] = v7;
            LODWORD(byte15a) = 28;
            _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v67, 17, "Unable to open hid device interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", &v83, byte15a);
            v70 = (uint8_t *)v69;
            sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v69);
            if (v70 != buf)
              free(v70);
          }
          if (v79)
            (*(void (**)(const void *, _QWORD))(*(_QWORD *)v79 + 72))(v79, 0);
        }
        if (theInterface)
        {
          ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
          IODestroyPlugInInterface(theInterface);
        }
        return;
      }
      v32 = v31;
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v33 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
      {
        v34 = mach_error_string(v32);
        *(_DWORD *)buf = 67240706;
        *(_DWORD *)v90 = v32;
        *(_WORD *)&v90[4] = 2082;
        *(_QWORD *)&v90[6] = v34;
        *(_WORD *)&v90[14] = 2114;
        *(_QWORD *)&v90[16] = v7;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_FAULT, "Unable to create plugin interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", buf, 0x1Cu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v35 = qword_10229FCE8;
        v36 = mach_error_string(v32);
        v83 = 67240706;
        *(_DWORD *)v84 = v32;
        *(_WORD *)&v84[4] = 2082;
        *(_QWORD *)&v84[6] = v36;
        *(_WORD *)&v84[14] = 2114;
        *(_QWORD *)&v84[16] = v7;
        LODWORD(byte15) = 28;
        v23 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v35, 17, "Unable to create plugin interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", &v83, byte15);
LABEL_35:
        v20 = v22;
        sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v23);
LABEL_36:
        if (v20 != buf)
          free(v20);
      }
    }
    else
    {
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v21 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_FAULT, "AOP service doesn't exist", buf, 2u);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        LOWORD(v83) = 0;
        v23 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "AOP service doesn't exist", &v83, 2);
        goto LABEL_35;
      }
    }
  }
  else
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v17 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "IoHidDevice is not ready!", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      LOWORD(v83) = 0;
      v18 = _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "IoHidDevice is not ready!", &v83, 2);
      v20 = v19;
      sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v18);
      goto LABEL_36;
    }
  }
}

uint64_t sub_100410320(uint64_t a1)
{
  return sub_10040F3AC(*(_QWORD *)(a1 + 32));
}

void sub_100410328(uint64_t a1)
{
  CFRunLoopRef Current;
  int v3;
  int v4;
  NSObject *v5;
  mach_error_t v6;
  mach_error_t v7;
  NSObject *v8;
  char *v9;
  const char *v10;
  uint8_t *v11;
  uint64_t v12;
  char *v13;
  const char *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[3];
  int v19;
  _BYTE v20[10];
  mach_error_t v21;
  uint8_t buf[4];
  _BYTE v23[10];
  mach_error_t v24;

  Current = CFRunLoopGetCurrent();
  sub_100127B9C();
  if (Current != (CFRunLoopRef)sub_1001AD8D0())
    sub_1018F9518();
  v18[0] = 4;
  v3 = *(unsigned __int8 *)(a1 + 32);
  v18[1] = *(_BYTE *)(a1 + 32);
  v4 = *(unsigned __int8 *)(a1 + 34);
  v18[2] = *(_BYTE *)(a1 + 34);
  if (qword_10229FCE0 != -1)
    dispatch_once(&qword_10229FCE0, &stru_102138310);
  v5 = qword_10229FCE8;
  if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67240448;
    *(_DWORD *)v23 = v3;
    *(_WORD *)&v23[4] = 1026;
    *(_DWORD *)&v23[6] = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Sending config,formFactor,%{public}d,handleCover,%{public}d", buf, 0xEu);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v19 = 67240448;
    *(_DWORD *)v20 = v3;
    *(_WORD *)&v20[4] = 1026;
    *(_DWORD *)&v20[6] = v4;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "Sending config,formFactor,%{public}d,handleCover,%{public}d", &v19, 14);
    v11 = (uint8_t *)v10;
    sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::sendConfiguration()", "%s\n", v10);
    if (v11 != buf)
      free(v11);
  }
  v17 = 3;
  v6 = (*(uint64_t (**)(_QWORD, uint64_t, _BYTE *, uint64_t, _BYTE *, uint64_t *))(**(_QWORD **)(a1 + 384) + 160))(*(_QWORD *)(a1 + 384), 32, v18, 3, v18, &v17);
  if (v6)
  {
    v7 = v6;
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v8 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
    {
      v9 = mach_error_string(v7);
      *(_DWORD *)buf = 136446466;
      *(_QWORD *)v23 = v9;
      *(_WORD *)&v23[8] = 1026;
      v24 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "SendCommand(Config) = %{public}s (0x%{public}x)", buf, 0x12u);
    }
    if (sub_1001BFF7C(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v12 = qword_10229FCE8;
      v13 = mach_error_string(v7);
      v19 = 136446466;
      *(_QWORD *)v20 = v13;
      *(_WORD *)&v20[8] = 1026;
      v21 = v7;
      LODWORD(v16) = 18;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v12, 17, "SendCommand(Config) = %{public}s (0x%{public}x)", &v19, v16);
      v15 = (uint8_t *)v14;
      sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::sendConfiguration()", "%s\n", v14);
      if (v15 != buf)
        free(v15);
    }
  }
}

uint64_t sub_1004106C4(uint64_t a1)
{
  return sub_10040F178(*(_QWORD *)(a1 + 32));
}

void sub_1004106CC(uint64_t a1, uint64_t a2)
{
  CFAbsoluteTime Current;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint8_t *v15;
  const char *v16;
  uint8_t *v17;
  const char *v18;
  uint8_t *v19;
  uint64_t v20;
  _WORD v21[8];
  uint64_t v22;
  int v23;
  uint8_t buf[8];

  if (*(double *)(a2 + 336) == -1.79769313e308)
  {
    Current = CFAbsoluteTimeGetCurrent();
    kdebug_trace(731054184, (unint64_t)Current, 0, 0, 0);
    *(CFAbsoluteTime *)(a2 + 336) = CFAbsoluteTimeGetCurrent();
    if (*(_QWORD *)(a2 + 48))
    {
      v5 = sub_10024095C();
      v6 = *(_QWORD *)(a2 + 48);
      *(double *)buf = (float)(1.0 / (float)(*(float *)(a2 + 56) * (float)*(int *)(a2 + 76)));
      sub_1009BADD0(v5, 0, v6, (uint64_t)buf);
    }
  }
  v7 = *(_DWORD *)(a2 + 72);
  v8 = __OFSUB__(v7--, 1);
  *(_DWORD *)(a2 + 72) = v7;
  if ((v7 < 0) ^ v8 | (v7 == 0))
  {
    *(_DWORD *)(a2 + 72) = *(_DWORD *)(a2 + 76);
    sub_10041E014(*(_QWORD *)(a2 + 40), (float *)(a1 + 8), (_QWORD *)a1);
    if (sub_100422A88(*(_QWORD *)(a2 + 40), &v23, &v22))
    {
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v9 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Sending orientation changed notification", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v21[0] = 0;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "Sending orientation changed notification", v21, 2);
        v15 = (uint8_t *)v14;
        sub_100512490("Generic", 1, 0, 2, "static void CLOrientationNotifier::onAccelerometerData(const CLAccelerometer::Sample *, void *)", "%s\n", v14);
        if (v15 != buf)
          free(v15);
      }
      sub_10014C2F4(a2, 0, (uint64_t)&v22, 16);
      sub_10014C2F4(a2, 1, (uint64_t)&v22, 16);
    }
  }
  if (*(_BYTE *)(a2 + 80))
  {
    sub_10007D084(a2 + 120, (float *)(a1 + 8));
    sub_10007D084(a2 + 192, (float *)(a1 + 12));
    sub_10007D084(a2 + 264, (float *)(a1 + 16));
    if (*(_QWORD *)(a2 + 184) < *(_QWORD *)(a2 + 128) || sub_100410F0C(a2))
    {
      *(_QWORD *)(a2 + 96) = *(_QWORD *)a1;
      if (!*(_QWORD *)(a2 + 64))
      {
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v10 = qword_10229FCE8;
        if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Device is in motion, re-enabling Gyro.", buf, 2u);
        }
        if (sub_1001BFF7C(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FCE0 != -1)
            dispatch_once(&qword_10229FCE0, &stru_102138310);
          LOWORD(v22) = 0;
          LODWORD(v20) = 2;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "Device is in motion, re-enabling Gyro.", &v22, v20);
          v17 = (uint8_t *)v16;
          sub_100512490("Generic", 1, 0, 2, "static void CLOrientationNotifier::onAccelerometerData(const CLAccelerometer::Sample *, void *)", "%s\n", v16);
          if (v17 != buf)
            free(v17);
        }
        operator new();
      }
    }
    else if (*(_QWORD *)(a2 + 64) && *(double *)a1 > *(double *)(a2 + 96) + *(double *)(a2 + 88))
    {
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v11 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Device is stationary and OrientationGyroTimeout exceeded, disabling Gyro.", buf, 2u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        LOWORD(v22) = 0;
        LODWORD(v20) = 2;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "Device is stationary and OrientationGyroTimeout exceeded, disabling Gyro.", &v22, v20);
        v19 = (uint8_t *)v18;
        sub_100512490("Generic", 1, 0, 2, "static void CLOrientationNotifier::onAccelerometerData(const CLAccelerometer::Sample *, void *)", "%s\n", v18);
        if (v19 != buf)
          free(v19);
      }
      v12 = sub_10021C350();
      sub_1000A4A6C(v12, 0, *(_QWORD *)(a2 + 64));
      v13 = *(_QWORD *)(a2 + 64);
      if (v13)
        (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
      *(_QWORD *)(a2 + 64) = 0;
      sub_100422D68(*(_QWORD *)(a2 + 40));
    }
  }
}

void sub_100410CCC()
{
  operator delete();
}

void sub_100410CF8(uint64_t a1, uint64_t a2)
{
  CFAbsoluteTime Current;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  _WORD v8[8];
  uint64_t v9;
  int v10;
  uint8_t buf[1640];

  if (*(double *)(a2 + 344) == -1.79769313e308)
  {
    Current = CFAbsoluteTimeGetCurrent();
    kdebug_trace(731054192, (unint64_t)Current, 0, 0, 0);
    *(CFAbsoluteTime *)(a2 + 344) = CFAbsoluteTimeGetCurrent();
  }
  sub_10041E430(*(_QWORD *)(a2 + 40), (float *)(a1 + 8), (double *)a1);
  if (!*(_QWORD *)(a2 + 48) && sub_100422A88(*(_QWORD *)(a2 + 40), &v10, &v9))
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v5 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "GYRO: Sending orientation changed notification", buf, 2u);
    }
    if (sub_1001BFF7C(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v8[0] = 0;
      _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 1, "GYRO: Sending orientation changed notification", v8, 2);
      v7 = (uint8_t *)v6;
      sub_100512490("Generic", 1, 0, 2, "static void CLOrientationNotifier::onGyroData(const CLGyro::Sample *, void *)", "%s\n", v6);
      if (v7 != buf)
        free(v7);
    }
    sub_10014C2F4(a2, 0, (uint64_t)&v9, 16);
  }
}

BOOL sub_100410F0C(uint64_t a1)
{
  unint64_t v1;
  float v3;
  float v4;
  float v5;
  unint64_t v6;
  float v7;
  unint64_t v8;
  float v9;
  float v10;

  v1 = *(_QWORD *)(a1 + 184);
  if (v1 < *(_QWORD *)(a1 + 128))
    return 0;
  v3 = 0.0;
  v4 = 0.0;
  if (v1 >= 2)
  {
    v5 = (float)((float)v1 * *(float *)(a1 + 140)) - (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136));
    v4 = 0.0;
    if (v5 >= 0.0)
      v4 = v5 / (float)((v1 - 1) * v1);
  }
  v6 = *(_QWORD *)(a1 + 256);
  if (v6 >= 2)
  {
    v7 = (float)((float)v6 * *(float *)(a1 + 212)) - (float)(*(float *)(a1 + 208) * *(float *)(a1 + 208));
    if (v7 >= 0.0)
      v3 = v7 / (float)((v6 - 1) * v6);
  }
  v8 = *(_QWORD *)(a1 + 328);
  v9 = 0.0;
  if (v8 >= 2)
  {
    v10 = (float)((float)v8 * *(float *)(a1 + 284)) - (float)(*(float *)(a1 + 280) * *(float *)(a1 + 280));
    if (v10 >= 0.0)
      v9 = v10 / (float)((v8 - 1) * v8);
  }
  if (v4 >= v3)
    v3 = v4;
  if (v3 < v9)
    v3 = v9;
  return v3 > *(float *)(a1 + 84);
}

void sub_100410FF0(uint64_t a1, int a2, CFStringRef theString1)
{
  NSObject *v4;
  int v5;
  int v6;
  const char *v7;
  uint8_t *v8;
  _DWORD v9[4];
  uint8_t buf[4];
  int v11;

  if (CFStringCompare(theString1, CFSTR("com.apple.springboard.HasSeenACaseLatchCoverNotification"), 0) == kCFCompareEqualTo)
  {
    *(_BYTE *)(a1 + 34) = 1;
    if (*(_QWORD *)(a1 + 384))
      sub_100410328(a1);
  }
  if (qword_10229FCE0 != -1)
    dispatch_once(&qword_10229FCE0, &stru_102138310);
  v4 = qword_10229FCE8;
  if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(unsigned __int8 *)(a1 + 34);
    *(_DWORD *)buf = 67240192;
    v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "fHasSeenACaseLatchCoverOnce, %{public}d", buf, 8u);
  }
  if (sub_1001BFF7C(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v6 = *(unsigned __int8 *)(a1 + 34);
    v9[0] = 67240192;
    v9[1] = v6;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 0, "fHasSeenACaseLatchCoverOnce, %{public}d", v9, 8);
    v8 = (uint8_t *)v7;
    sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::onCoverNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v7);
    if (v8 != buf)
      free(v8);
  }
}

void sub_1004111D0(uint64_t a1, int a2)
{
  sub_100410FF0(*(_QWORD *)(a1 + 32), a2, *(CFStringRef *)(a1 + 48));
}

uint64_t sub_1004111E0(uint64_t a1, int a2)
{
  double v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  char *v8;
  int v9;
  uint64_t v10;
  char *v11;
  int v12;
  const char *v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  NSObject *v17;
  int v18;
  unint64_t v19;
  double v20;
  NSObject *v21;
  NSObject *v22;
  char *v23;
  const char *v25;
  uint8_t *v26;
  int v27;
  const char *v28;
  uint8_t *v29;
  char *v30;
  const char *v31;
  uint8_t *v32;
  uint64_t v33;
  _QWORD v34[8];
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t (*v47)();
  void *v48;
  uint64_t v49;
  __int16 v50;
  int v51;
  char *v52;
  __int16 v53;
  int v54;
  uint8_t buf[4];
  char *v56;
  __int16 v57;
  int v58;

  if ((sub_1001B7910() & 0x40) != 0)
  {
    HIDWORD(v33) = a2;
    v43 = 0;
    v44 = &v43;
    v45 = 0x4012000000;
    v46 = sub_100206C38;
    v47 = nullsub_51;
    v5 = 3;
    v50 = 0;
    v48 = &unk_102080316;
    v49 = 2;
    v39 = 0;
    v40 = &v39;
    v41 = 0x2020000000;
    v42 = 10;
    while (1)
    {
      v35 = 0;
      v36 = &v35;
      v37 = 0x2020000000;
      v38 = 0;
      v6 = sub_100127B9C();
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472;
      v34[2] = sub_1004120EC;
      v34[3] = &unk_1021382D8;
      v34[4] = &v35;
      v34[5] = &v43;
      v34[6] = &v39;
      v34[7] = a1;
      sub_1000A50A8(v6, (uint64_t)v34);
      if (!*((_DWORD *)v36 + 6))
        break;
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v7 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_INFO))
      {
        v8 = mach_error_string(*((_DWORD *)v36 + 6));
        v9 = *((_DWORD *)v36 + 6);
        *(_DWORD *)buf = 136315394;
        v56 = v8;
        v57 = 1026;
        v58 = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "SendCommand() = %s (0x%{public}x)", buf, 0x12u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v10 = qword_10229FCE8;
        v11 = mach_error_string(*((_DWORD *)v36 + 6));
        v12 = *((_DWORD *)v36 + 6);
        v51 = 136315394;
        v52 = v11;
        v53 = 1026;
        v54 = v12;
        LODWORD(v33) = 18;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v10, 1, "SendCommand() = %s (0x%{public}x)", &v51, v33);
        v14 = (uint8_t *)v13;
        sub_100512490("Generic", 1, 0, 2, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v13);
        if (v14 != buf)
          free(v14);
      }
      usleep(0x3E8u);
      _Block_object_dispose(&v35, 8);
      if (!--v5)
      {
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v21 = qword_10229FCE8;
        if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_FAULT, "No reply for LastOrientation", buf, 2u);
        }
        v4 = -1.0;
        if (sub_1001BFF7C(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_10229FCE0 != -1)
            dispatch_once(&qword_10229FCE0, &stru_102138310);
          LOWORD(v35) = 0;
          LODWORD(v33) = 2;
          _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "No reply for LastOrientation", &v35, v33);
          v26 = (uint8_t *)v25;
          sub_100512490("Generic", 1, 0, 0, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v25);
          if (v26 != buf)
            free(v26);
        }
        goto LABEL_38;
      }
    }
    if (v40[3] == 10)
    {
      v15 = v44;
      if (*(_QWORD *)(a1 + 402) > *(unint64_t *)((char *)v44 + 50))
      {
        v16 = *(_QWORD *)(a1 + 400);
        *((_WORD *)v44 + 28) = *(_WORD *)(a1 + 408);
        v15[6] = v16;
      }
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v17 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_DEFAULT))
      {
        v18 = *((unsigned __int8 *)v44 + 49);
        *(_DWORD *)buf = 67240192;
        LODWORD(v56) = v18;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Got cached orientation %{public}u", buf, 8u);
      }
      if (sub_1001BFF7C(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v27 = *((unsigned __int8 *)v44 + 49);
        v51 = 67240192;
        LODWORD(v52) = v27;
        LODWORD(v33) = 8;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 0, "Got cached orientation %{public}u", &v51, v33);
        v29 = (uint8_t *)v28;
        sub_100512490("Generic", 1, 0, 2, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v28);
        if (v29 != buf)
          free(v29);
      }
      _Block_object_dispose(&v35, 8);
      v19 = *(uint64_t *)((char *)v44 + 50);
      v20 = sub_100127828(v19);
      v4 = v20;
      if (HIDWORD(v33))
        sub_100411D8C(a1, v19, *((unsigned __int8 *)v44 + 49), v20);
    }
    else
    {
      if (qword_10229FCE0 != -1)
        dispatch_once(&qword_10229FCE0, &stru_102138310);
      v22 = qword_10229FCE8;
      if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_FAULT))
      {
        v23 = (char *)v40[3];
        *(_DWORD *)buf = 134349056;
        v56 = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_FAULT, "SendCommand() got unexpected response size %{public}zd", buf, 0xCu);
      }
      if (sub_1001BFF7C(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_10229FCE0 != -1)
          dispatch_once(&qword_10229FCE0, &stru_102138310);
        v30 = (char *)v40[3];
        v51 = 134349056;
        v52 = v30;
        LODWORD(v33) = 12;
        _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 17, "SendCommand() got unexpected response size %{public}zd", &v51, v33);
        v32 = (uint8_t *)v31;
        sub_100512490("Generic", 1, 0, 0, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v31);
        if (v32 != buf)
          free(v32);
      }
      _Block_object_dispose(&v35, 8);
      v4 = -1.0;
    }
LABEL_38:
    _Block_object_dispose(&v39, 8);
    _Block_object_dispose(&v43, 8);
  }
  else
  {
    v4 = -1.0;
  }
  return *(_QWORD *)&v4;
}

void sub_1004119A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1004119FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t IntegerValue;
  NSObject *v8;
  const char *v9;
  uint8_t *v10;
  NSObject *v11;
  unint64_t v12;
  unint64_t TimeStamp;
  double v14;
  uint64_t v15;
  const char *v16;
  int v17;
  uint64_t v18;
  uint8_t buf[4];
  uint64_t v20;

  if (*(_QWORD *)(a1 + 48))
    return;
  if (IOHIDEventGetType(a5) != 10)
  {
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v11 = qword_10229FCE8;
    if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67240192;
      LODWORD(v20) = IOHIDEventGetType(a5);
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Received wrong event type %{public}u", buf, 8u);
    }
    if (!sub_1001BFF7C(115, 2))
      return;
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v15 = qword_10229FCE8;
    v17 = 67240192;
    LODWORD(v18) = IOHIDEventGetType(a5);
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, v15, 0, "Received wrong event type %{public}u", &v17, 8);
    v10 = (uint8_t *)v16;
    sub_100512490("Generic", 1, 0, 2, "void CLOrientationNotifier::onIohidEvent(void *, void *, void *, IOHIDEventRef)", "%s\n", v16);
    if (v10 == buf)
      return;
LABEL_23:
    free(v10);
    return;
  }
  IntegerValue = IOHIDEventGetIntegerValue(a5, 655364);
  if ((unint64_t)(IntegerValue - 107) > 0xFFFFFFFFFFFFFFF8)
  {
    v12 = sub_1013B4A0C();
    TimeStamp = IOHIDEventGetTimeStamp(a5);
    v14 = sub_100127828(TimeStamp);
    sub_100411D8C(a1, v12, (IntegerValue - 100), v14);
    return;
  }
  if (qword_10229FCE0 != -1)
    dispatch_once(&qword_10229FCE0, &stru_102138310);
  v8 = qword_10229FCE8;
  if (os_log_type_enabled((os_log_t)qword_10229FCE8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 134349056;
    v20 = IntegerValue;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Received invalid orientation %{public}ld", buf, 0xCu);
  }
  if (sub_1001BFF7C(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_10229FCE0 != -1)
      dispatch_once(&qword_10229FCE0, &stru_102138310);
    v17 = 134349056;
    v18 = IntegerValue;
    _os_log_send_and_compose_impl(2, 0, buf, 1628, &_mh_execute_header, qword_10229FCE8, 16, "Received invalid orientation %{public}ld", &v17, 12);
    v10 = (uint8_t *)v9;
    sub_100512490("Generic", 1, 0, 0, "void CLOrientationNotifier::onIohidEvent(void *, void *, void *, IOHIDEventRef)", "%s\n", v9);
    if (v10 != buf)
      goto LABEL_23;
  }
}

